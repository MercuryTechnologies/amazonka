-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-connectparticipantZSamazonka-connectparticipant
@version 2.0


module Amazonka.ConnectParticipant.Types.ArtifactStatus
newtype ArtifactStatus
ArtifactStatus' :: Text -> ArtifactStatus
[fromArtifactStatus] :: ArtifactStatus -> Text
pattern ArtifactStatus_APPROVED :: ArtifactStatus
pattern ArtifactStatus_IN_PROGRESS :: ArtifactStatus
pattern ArtifactStatus_REJECTED :: ArtifactStatus
instance Amazonka.Data.XML.ToXML Amazonka.ConnectParticipant.Types.ArtifactStatus.ArtifactStatus
instance Amazonka.Data.XML.FromXML Amazonka.ConnectParticipant.Types.ArtifactStatus.ArtifactStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ConnectParticipant.Types.ArtifactStatus.ArtifactStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ConnectParticipant.Types.ArtifactStatus.ArtifactStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ConnectParticipant.Types.ArtifactStatus.ArtifactStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ConnectParticipant.Types.ArtifactStatus.ArtifactStatus
instance Amazonka.Data.Query.ToQuery Amazonka.ConnectParticipant.Types.ArtifactStatus.ArtifactStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.ConnectParticipant.Types.ArtifactStatus.ArtifactStatus
instance Amazonka.Data.Log.ToLog Amazonka.ConnectParticipant.Types.ArtifactStatus.ArtifactStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.ConnectParticipant.Types.ArtifactStatus.ArtifactStatus
instance Amazonka.Data.Text.ToText Amazonka.ConnectParticipant.Types.ArtifactStatus.ArtifactStatus
instance Amazonka.Data.Text.FromText Amazonka.ConnectParticipant.Types.ArtifactStatus.ArtifactStatus
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.Types.ArtifactStatus.ArtifactStatus
instance Data.Hashable.Class.Hashable Amazonka.ConnectParticipant.Types.ArtifactStatus.ArtifactStatus
instance GHC.Generics.Generic Amazonka.ConnectParticipant.Types.ArtifactStatus.ArtifactStatus
instance GHC.Classes.Ord Amazonka.ConnectParticipant.Types.ArtifactStatus.ArtifactStatus
instance GHC.Classes.Eq Amazonka.ConnectParticipant.Types.ArtifactStatus.ArtifactStatus
instance GHC.Read.Read Amazonka.ConnectParticipant.Types.ArtifactStatus.ArtifactStatus
instance GHC.Show.Show Amazonka.ConnectParticipant.Types.ArtifactStatus.ArtifactStatus


module Amazonka.ConnectParticipant.Types.AttachmentItem

-- | The case-insensitive input to indicate standard MIME type that
--   describes the format of the file that will be uploaded.
--   
--   <i>See:</i> <a>newAttachmentItem</a> smart constructor.
data AttachmentItem
AttachmentItem' :: Maybe ArtifactStatus -> Maybe Text -> Maybe Text -> Maybe Text -> AttachmentItem

-- | Status of the attachment.
[$sel:status:AttachmentItem'] :: AttachmentItem -> Maybe ArtifactStatus

-- | A case-sensitive name of the attachment being uploaded.
[$sel:attachmentName:AttachmentItem'] :: AttachmentItem -> Maybe Text

-- | A unique identifier for the attachment.
[$sel:attachmentId:AttachmentItem'] :: AttachmentItem -> Maybe Text

-- | Describes the MIME file type of the attachment. For a list of
--   supported file types, see <a>Feature specifications</a> in the
--   <i>Amazon Connect Administrator Guide</i>.
[$sel:contentType:AttachmentItem'] :: AttachmentItem -> Maybe Text

-- | Create a value of <a>AttachmentItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:AttachmentItem'</a>, <a>attachmentItem_status</a> -
--   Status of the attachment.
--   
--   <a>$sel:attachmentName:AttachmentItem'</a>,
--   <a>attachmentItem_attachmentName</a> - A case-sensitive name of the
--   attachment being uploaded.
--   
--   <a>$sel:attachmentId:AttachmentItem'</a>,
--   <a>attachmentItem_attachmentId</a> - A unique identifier for the
--   attachment.
--   
--   <a>$sel:contentType:AttachmentItem'</a>,
--   <a>attachmentItem_contentType</a> - Describes the MIME file type of
--   the attachment. For a list of supported file types, see <a>Feature
--   specifications</a> in the <i>Amazon Connect Administrator Guide</i>.
newAttachmentItem :: AttachmentItem

-- | Status of the attachment.
attachmentItem_status :: Lens' AttachmentItem (Maybe ArtifactStatus)

-- | A case-sensitive name of the attachment being uploaded.
attachmentItem_attachmentName :: Lens' AttachmentItem (Maybe Text)

-- | A unique identifier for the attachment.
attachmentItem_attachmentId :: Lens' AttachmentItem (Maybe Text)

-- | Describes the MIME file type of the attachment. For a list of
--   supported file types, see <a>Feature specifications</a> in the
--   <i>Amazon Connect Administrator Guide</i>.
attachmentItem_contentType :: Lens' AttachmentItem (Maybe Text)
instance GHC.Generics.Generic Amazonka.ConnectParticipant.Types.AttachmentItem.AttachmentItem
instance GHC.Show.Show Amazonka.ConnectParticipant.Types.AttachmentItem.AttachmentItem
instance GHC.Read.Read Amazonka.ConnectParticipant.Types.AttachmentItem.AttachmentItem
instance GHC.Classes.Eq Amazonka.ConnectParticipant.Types.AttachmentItem.AttachmentItem
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ConnectParticipant.Types.AttachmentItem.AttachmentItem
instance Data.Hashable.Class.Hashable Amazonka.ConnectParticipant.Types.AttachmentItem.AttachmentItem
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.Types.AttachmentItem.AttachmentItem


module Amazonka.ConnectParticipant.Types.ChatItemType
newtype ChatItemType
ChatItemType' :: Text -> ChatItemType
[fromChatItemType] :: ChatItemType -> Text
pattern ChatItemType_ATTACHMENT :: ChatItemType
pattern ChatItemType_CHAT_ENDED :: ChatItemType
pattern ChatItemType_CONNECTION_ACK :: ChatItemType
pattern ChatItemType_EVENT :: ChatItemType
pattern ChatItemType_MESSAGE :: ChatItemType
pattern ChatItemType_PARTICIPANT_JOINED :: ChatItemType
pattern ChatItemType_PARTICIPANT_LEFT :: ChatItemType
pattern ChatItemType_TRANSFER_FAILED :: ChatItemType
pattern ChatItemType_TRANSFER_SUCCEEDED :: ChatItemType
pattern ChatItemType_TYPING :: ChatItemType
instance Amazonka.Data.XML.ToXML Amazonka.ConnectParticipant.Types.ChatItemType.ChatItemType
instance Amazonka.Data.XML.FromXML Amazonka.ConnectParticipant.Types.ChatItemType.ChatItemType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ConnectParticipant.Types.ChatItemType.ChatItemType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ConnectParticipant.Types.ChatItemType.ChatItemType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ConnectParticipant.Types.ChatItemType.ChatItemType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ConnectParticipant.Types.ChatItemType.ChatItemType
instance Amazonka.Data.Query.ToQuery Amazonka.ConnectParticipant.Types.ChatItemType.ChatItemType
instance Amazonka.Data.Headers.ToHeader Amazonka.ConnectParticipant.Types.ChatItemType.ChatItemType
instance Amazonka.Data.Log.ToLog Amazonka.ConnectParticipant.Types.ChatItemType.ChatItemType
instance Amazonka.Data.ByteString.ToByteString Amazonka.ConnectParticipant.Types.ChatItemType.ChatItemType
instance Amazonka.Data.Text.ToText Amazonka.ConnectParticipant.Types.ChatItemType.ChatItemType
instance Amazonka.Data.Text.FromText Amazonka.ConnectParticipant.Types.ChatItemType.ChatItemType
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.Types.ChatItemType.ChatItemType
instance Data.Hashable.Class.Hashable Amazonka.ConnectParticipant.Types.ChatItemType.ChatItemType
instance GHC.Generics.Generic Amazonka.ConnectParticipant.Types.ChatItemType.ChatItemType
instance GHC.Classes.Ord Amazonka.ConnectParticipant.Types.ChatItemType.ChatItemType
instance GHC.Classes.Eq Amazonka.ConnectParticipant.Types.ChatItemType.ChatItemType
instance GHC.Read.Read Amazonka.ConnectParticipant.Types.ChatItemType.ChatItemType
instance GHC.Show.Show Amazonka.ConnectParticipant.Types.ChatItemType.ChatItemType


module Amazonka.ConnectParticipant.Types.ConnectionCredentials

-- | Connection credentials.
--   
--   <i>See:</i> <a>newConnectionCredentials</a> smart constructor.
data ConnectionCredentials
ConnectionCredentials' :: Maybe Text -> Maybe Text -> ConnectionCredentials

-- | The expiration of the token.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
[$sel:expiry:ConnectionCredentials'] :: ConnectionCredentials -> Maybe Text

-- | The connection token.
[$sel:connectionToken:ConnectionCredentials'] :: ConnectionCredentials -> Maybe Text

-- | Create a value of <a>ConnectionCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expiry:ConnectionCredentials'</a>,
--   <a>connectionCredentials_expiry</a> - The expiration of the token.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
--   
--   <a>$sel:connectionToken:ConnectionCredentials'</a>,
--   <a>connectionCredentials_connectionToken</a> - The connection token.
newConnectionCredentials :: ConnectionCredentials

-- | The expiration of the token.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
connectionCredentials_expiry :: Lens' ConnectionCredentials (Maybe Text)

-- | The connection token.
connectionCredentials_connectionToken :: Lens' ConnectionCredentials (Maybe Text)
instance GHC.Generics.Generic Amazonka.ConnectParticipant.Types.ConnectionCredentials.ConnectionCredentials
instance GHC.Show.Show Amazonka.ConnectParticipant.Types.ConnectionCredentials.ConnectionCredentials
instance GHC.Read.Read Amazonka.ConnectParticipant.Types.ConnectionCredentials.ConnectionCredentials
instance GHC.Classes.Eq Amazonka.ConnectParticipant.Types.ConnectionCredentials.ConnectionCredentials
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ConnectParticipant.Types.ConnectionCredentials.ConnectionCredentials
instance Data.Hashable.Class.Hashable Amazonka.ConnectParticipant.Types.ConnectionCredentials.ConnectionCredentials
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.Types.ConnectionCredentials.ConnectionCredentials


module Amazonka.ConnectParticipant.Types.ConnectionType
newtype ConnectionType
ConnectionType' :: Text -> ConnectionType
[fromConnectionType] :: ConnectionType -> Text
pattern ConnectionType_CONNECTION_CREDENTIALS :: ConnectionType
pattern ConnectionType_WEBSOCKET :: ConnectionType
instance Amazonka.Data.XML.ToXML Amazonka.ConnectParticipant.Types.ConnectionType.ConnectionType
instance Amazonka.Data.XML.FromXML Amazonka.ConnectParticipant.Types.ConnectionType.ConnectionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ConnectParticipant.Types.ConnectionType.ConnectionType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ConnectParticipant.Types.ConnectionType.ConnectionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ConnectParticipant.Types.ConnectionType.ConnectionType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ConnectParticipant.Types.ConnectionType.ConnectionType
instance Amazonka.Data.Query.ToQuery Amazonka.ConnectParticipant.Types.ConnectionType.ConnectionType
instance Amazonka.Data.Headers.ToHeader Amazonka.ConnectParticipant.Types.ConnectionType.ConnectionType
instance Amazonka.Data.Log.ToLog Amazonka.ConnectParticipant.Types.ConnectionType.ConnectionType
instance Amazonka.Data.ByteString.ToByteString Amazonka.ConnectParticipant.Types.ConnectionType.ConnectionType
instance Amazonka.Data.Text.ToText Amazonka.ConnectParticipant.Types.ConnectionType.ConnectionType
instance Amazonka.Data.Text.FromText Amazonka.ConnectParticipant.Types.ConnectionType.ConnectionType
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.Types.ConnectionType.ConnectionType
instance Data.Hashable.Class.Hashable Amazonka.ConnectParticipant.Types.ConnectionType.ConnectionType
instance GHC.Generics.Generic Amazonka.ConnectParticipant.Types.ConnectionType.ConnectionType
instance GHC.Classes.Ord Amazonka.ConnectParticipant.Types.ConnectionType.ConnectionType
instance GHC.Classes.Eq Amazonka.ConnectParticipant.Types.ConnectionType.ConnectionType
instance GHC.Read.Read Amazonka.ConnectParticipant.Types.ConnectionType.ConnectionType
instance GHC.Show.Show Amazonka.ConnectParticipant.Types.ConnectionType.ConnectionType


module Amazonka.ConnectParticipant.Types.ParticipantRole
newtype ParticipantRole
ParticipantRole' :: Text -> ParticipantRole
[fromParticipantRole] :: ParticipantRole -> Text
pattern ParticipantRole_AGENT :: ParticipantRole
pattern ParticipantRole_CUSTOMER :: ParticipantRole
pattern ParticipantRole_SYSTEM :: ParticipantRole
instance Amazonka.Data.XML.ToXML Amazonka.ConnectParticipant.Types.ParticipantRole.ParticipantRole
instance Amazonka.Data.XML.FromXML Amazonka.ConnectParticipant.Types.ParticipantRole.ParticipantRole
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ConnectParticipant.Types.ParticipantRole.ParticipantRole
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ConnectParticipant.Types.ParticipantRole.ParticipantRole
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ConnectParticipant.Types.ParticipantRole.ParticipantRole
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ConnectParticipant.Types.ParticipantRole.ParticipantRole
instance Amazonka.Data.Query.ToQuery Amazonka.ConnectParticipant.Types.ParticipantRole.ParticipantRole
instance Amazonka.Data.Headers.ToHeader Amazonka.ConnectParticipant.Types.ParticipantRole.ParticipantRole
instance Amazonka.Data.Log.ToLog Amazonka.ConnectParticipant.Types.ParticipantRole.ParticipantRole
instance Amazonka.Data.ByteString.ToByteString Amazonka.ConnectParticipant.Types.ParticipantRole.ParticipantRole
instance Amazonka.Data.Text.ToText Amazonka.ConnectParticipant.Types.ParticipantRole.ParticipantRole
instance Amazonka.Data.Text.FromText Amazonka.ConnectParticipant.Types.ParticipantRole.ParticipantRole
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.Types.ParticipantRole.ParticipantRole
instance Data.Hashable.Class.Hashable Amazonka.ConnectParticipant.Types.ParticipantRole.ParticipantRole
instance GHC.Generics.Generic Amazonka.ConnectParticipant.Types.ParticipantRole.ParticipantRole
instance GHC.Classes.Ord Amazonka.ConnectParticipant.Types.ParticipantRole.ParticipantRole
instance GHC.Classes.Eq Amazonka.ConnectParticipant.Types.ParticipantRole.ParticipantRole
instance GHC.Read.Read Amazonka.ConnectParticipant.Types.ParticipantRole.ParticipantRole
instance GHC.Show.Show Amazonka.ConnectParticipant.Types.ParticipantRole.ParticipantRole


module Amazonka.ConnectParticipant.Types.Item

-- | An item - message or event - that has been sent.
--   
--   <i>See:</i> <a>newItem</a> smart constructor.
data Item
Item' :: Maybe Text -> Maybe Text -> Maybe [AttachmentItem] -> Maybe ParticipantRole -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ChatItemType -> Maybe Text -> Item

-- | The ID of the sender in the session.
[$sel:participantId:Item'] :: Item -> Maybe Text

-- | The time when the message or event was sent.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
[$sel:absoluteTime:Item'] :: Item -> Maybe Text

-- | Provides information about the attachments.
[$sel:attachments:Item'] :: Item -> Maybe [AttachmentItem]

-- | The role of the sender. For example, is it a customer, agent, or
--   system.
[$sel:participantRole:Item'] :: Item -> Maybe ParticipantRole

-- | The content of the message or event.
[$sel:content:Item'] :: Item -> Maybe Text

-- | The ID of the item.
[$sel:id:Item'] :: Item -> Maybe Text

-- | The chat display name of the sender.
[$sel:displayName:Item'] :: Item -> Maybe Text

-- | Type of the item: message or event.
[$sel:type':Item'] :: Item -> Maybe ChatItemType

-- | The type of content of the item.
[$sel:contentType:Item'] :: Item -> Maybe Text

-- | Create a value of <a>Item</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:participantId:Item'</a>, <a>item_participantId</a> - The ID of
--   the sender in the session.
--   
--   <a>$sel:absoluteTime:Item'</a>, <a>item_absoluteTime</a> - The time
--   when the message or event was sent.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
--   
--   <a>$sel:attachments:Item'</a>, <a>item_attachments</a> - Provides
--   information about the attachments.
--   
--   <a>$sel:participantRole:Item'</a>, <a>item_participantRole</a> - The
--   role of the sender. For example, is it a customer, agent, or system.
--   
--   <a>$sel:content:Item'</a>, <a>item_content</a> - The content of the
--   message or event.
--   
--   <a>$sel:id:Item'</a>, <a>item_id</a> - The ID of the item.
--   
--   <a>$sel:displayName:Item'</a>, <a>item_displayName</a> - The chat
--   display name of the sender.
--   
--   <a>$sel:type':Item'</a>, <a>item_type</a> - Type of the item: message
--   or event.
--   
--   <a>$sel:contentType:Item'</a>, <a>item_contentType</a> - The type of
--   content of the item.
newItem :: Item

-- | The ID of the sender in the session.
item_participantId :: Lens' Item (Maybe Text)

-- | The time when the message or event was sent.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
item_absoluteTime :: Lens' Item (Maybe Text)

-- | Provides information about the attachments.
item_attachments :: Lens' Item (Maybe [AttachmentItem])

-- | The role of the sender. For example, is it a customer, agent, or
--   system.
item_participantRole :: Lens' Item (Maybe ParticipantRole)

-- | The content of the message or event.
item_content :: Lens' Item (Maybe Text)

-- | The ID of the item.
item_id :: Lens' Item (Maybe Text)

-- | The chat display name of the sender.
item_displayName :: Lens' Item (Maybe Text)

-- | Type of the item: message or event.
item_type :: Lens' Item (Maybe ChatItemType)

-- | The type of content of the item.
item_contentType :: Lens' Item (Maybe Text)
instance GHC.Generics.Generic Amazonka.ConnectParticipant.Types.Item.Item
instance GHC.Show.Show Amazonka.ConnectParticipant.Types.Item.Item
instance GHC.Read.Read Amazonka.ConnectParticipant.Types.Item.Item
instance GHC.Classes.Eq Amazonka.ConnectParticipant.Types.Item.Item
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ConnectParticipant.Types.Item.Item
instance Data.Hashable.Class.Hashable Amazonka.ConnectParticipant.Types.Item.Item
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.Types.Item.Item


module Amazonka.ConnectParticipant.Types.ScanDirection
newtype ScanDirection
ScanDirection' :: Text -> ScanDirection
[fromScanDirection] :: ScanDirection -> Text
pattern ScanDirection_BACKWARD :: ScanDirection
pattern ScanDirection_FORWARD :: ScanDirection
instance Amazonka.Data.XML.ToXML Amazonka.ConnectParticipant.Types.ScanDirection.ScanDirection
instance Amazonka.Data.XML.FromXML Amazonka.ConnectParticipant.Types.ScanDirection.ScanDirection
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ConnectParticipant.Types.ScanDirection.ScanDirection
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ConnectParticipant.Types.ScanDirection.ScanDirection
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ConnectParticipant.Types.ScanDirection.ScanDirection
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ConnectParticipant.Types.ScanDirection.ScanDirection
instance Amazonka.Data.Query.ToQuery Amazonka.ConnectParticipant.Types.ScanDirection.ScanDirection
instance Amazonka.Data.Headers.ToHeader Amazonka.ConnectParticipant.Types.ScanDirection.ScanDirection
instance Amazonka.Data.Log.ToLog Amazonka.ConnectParticipant.Types.ScanDirection.ScanDirection
instance Amazonka.Data.ByteString.ToByteString Amazonka.ConnectParticipant.Types.ScanDirection.ScanDirection
instance Amazonka.Data.Text.ToText Amazonka.ConnectParticipant.Types.ScanDirection.ScanDirection
instance Amazonka.Data.Text.FromText Amazonka.ConnectParticipant.Types.ScanDirection.ScanDirection
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.Types.ScanDirection.ScanDirection
instance Data.Hashable.Class.Hashable Amazonka.ConnectParticipant.Types.ScanDirection.ScanDirection
instance GHC.Generics.Generic Amazonka.ConnectParticipant.Types.ScanDirection.ScanDirection
instance GHC.Classes.Ord Amazonka.ConnectParticipant.Types.ScanDirection.ScanDirection
instance GHC.Classes.Eq Amazonka.ConnectParticipant.Types.ScanDirection.ScanDirection
instance GHC.Read.Read Amazonka.ConnectParticipant.Types.ScanDirection.ScanDirection
instance GHC.Show.Show Amazonka.ConnectParticipant.Types.ScanDirection.ScanDirection


module Amazonka.ConnectParticipant.Types.SortKey
newtype SortKey
SortKey' :: Text -> SortKey
[fromSortKey] :: SortKey -> Text
pattern SortKey_ASCENDING :: SortKey
pattern SortKey_DESCENDING :: SortKey
instance Amazonka.Data.XML.ToXML Amazonka.ConnectParticipant.Types.SortKey.SortKey
instance Amazonka.Data.XML.FromXML Amazonka.ConnectParticipant.Types.SortKey.SortKey
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ConnectParticipant.Types.SortKey.SortKey
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ConnectParticipant.Types.SortKey.SortKey
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ConnectParticipant.Types.SortKey.SortKey
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ConnectParticipant.Types.SortKey.SortKey
instance Amazonka.Data.Query.ToQuery Amazonka.ConnectParticipant.Types.SortKey.SortKey
instance Amazonka.Data.Headers.ToHeader Amazonka.ConnectParticipant.Types.SortKey.SortKey
instance Amazonka.Data.Log.ToLog Amazonka.ConnectParticipant.Types.SortKey.SortKey
instance Amazonka.Data.ByteString.ToByteString Amazonka.ConnectParticipant.Types.SortKey.SortKey
instance Amazonka.Data.Text.ToText Amazonka.ConnectParticipant.Types.SortKey.SortKey
instance Amazonka.Data.Text.FromText Amazonka.ConnectParticipant.Types.SortKey.SortKey
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.Types.SortKey.SortKey
instance Data.Hashable.Class.Hashable Amazonka.ConnectParticipant.Types.SortKey.SortKey
instance GHC.Generics.Generic Amazonka.ConnectParticipant.Types.SortKey.SortKey
instance GHC.Classes.Ord Amazonka.ConnectParticipant.Types.SortKey.SortKey
instance GHC.Classes.Eq Amazonka.ConnectParticipant.Types.SortKey.SortKey
instance GHC.Read.Read Amazonka.ConnectParticipant.Types.SortKey.SortKey
instance GHC.Show.Show Amazonka.ConnectParticipant.Types.SortKey.SortKey


module Amazonka.ConnectParticipant.Types.StartPosition

-- | A filtering option for where to start. For example, if you sent 100
--   messages, start with message 50.
--   
--   <i>See:</i> <a>newStartPosition</a> smart constructor.
data StartPosition
StartPosition' :: Maybe Text -> Maybe Text -> Maybe Natural -> StartPosition

-- | The time in ISO format where to start.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
[$sel:absoluteTime:StartPosition'] :: StartPosition -> Maybe Text

-- | The ID of the message or event where to start.
[$sel:id:StartPosition'] :: StartPosition -> Maybe Text

-- | The start position of the most recent message where you want to start.
[$sel:mostRecent:StartPosition'] :: StartPosition -> Maybe Natural

-- | Create a value of <a>StartPosition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:absoluteTime:StartPosition'</a>,
--   <a>startPosition_absoluteTime</a> - The time in ISO format where to
--   start.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
--   
--   <a>$sel:id:StartPosition'</a>, <a>startPosition_id</a> - The ID of the
--   message or event where to start.
--   
--   <a>$sel:mostRecent:StartPosition'</a>, <a>startPosition_mostRecent</a>
--   - The start position of the most recent message where you want to
--   start.
newStartPosition :: StartPosition

-- | The time in ISO format where to start.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
startPosition_absoluteTime :: Lens' StartPosition (Maybe Text)

-- | The ID of the message or event where to start.
startPosition_id :: Lens' StartPosition (Maybe Text)

-- | The start position of the most recent message where you want to start.
startPosition_mostRecent :: Lens' StartPosition (Maybe Natural)
instance GHC.Generics.Generic Amazonka.ConnectParticipant.Types.StartPosition.StartPosition
instance GHC.Show.Show Amazonka.ConnectParticipant.Types.StartPosition.StartPosition
instance GHC.Read.Read Amazonka.ConnectParticipant.Types.StartPosition.StartPosition
instance GHC.Classes.Eq Amazonka.ConnectParticipant.Types.StartPosition.StartPosition
instance Data.Hashable.Class.Hashable Amazonka.ConnectParticipant.Types.StartPosition.StartPosition
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.Types.StartPosition.StartPosition
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ConnectParticipant.Types.StartPosition.StartPosition


module Amazonka.ConnectParticipant.Types.UploadMetadata

-- | Fields to be used while uploading the attachment.
--   
--   <i>See:</i> <a>newUploadMetadata</a> smart constructor.
data UploadMetadata
UploadMetadata' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> UploadMetadata

-- | The expiration time of the URL in ISO timestamp. It's specified in ISO
--   8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
--   2019-11-08T02:41:28.172Z.
[$sel:urlExpiry:UploadMetadata'] :: UploadMetadata -> Maybe Text

-- | The headers to be provided while uploading the file to the URL.
[$sel:headersToInclude:UploadMetadata'] :: UploadMetadata -> Maybe (HashMap Text Text)

-- | The pre-signed URL using which file would be downloaded from Amazon S3
--   by the API caller.
[$sel:url:UploadMetadata'] :: UploadMetadata -> Maybe Text

-- | Create a value of <a>UploadMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:urlExpiry:UploadMetadata'</a>, <a>uploadMetadata_urlExpiry</a>
--   - The expiration time of the URL in ISO timestamp. It's specified in
--   ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
--   2019-11-08T02:41:28.172Z.
--   
--   <a>$sel:headersToInclude:UploadMetadata'</a>,
--   <a>uploadMetadata_headersToInclude</a> - The headers to be provided
--   while uploading the file to the URL.
--   
--   <a>$sel:url:UploadMetadata'</a>, <a>uploadMetadata_url</a> - The
--   pre-signed URL using which file would be downloaded from Amazon S3 by
--   the API caller.
newUploadMetadata :: UploadMetadata

-- | The expiration time of the URL in ISO timestamp. It's specified in ISO
--   8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
--   2019-11-08T02:41:28.172Z.
uploadMetadata_urlExpiry :: Lens' UploadMetadata (Maybe Text)

-- | The headers to be provided while uploading the file to the URL.
uploadMetadata_headersToInclude :: Lens' UploadMetadata (Maybe (HashMap Text Text))

-- | The pre-signed URL using which file would be downloaded from Amazon S3
--   by the API caller.
uploadMetadata_url :: Lens' UploadMetadata (Maybe Text)
instance GHC.Generics.Generic Amazonka.ConnectParticipant.Types.UploadMetadata.UploadMetadata
instance GHC.Show.Show Amazonka.ConnectParticipant.Types.UploadMetadata.UploadMetadata
instance GHC.Read.Read Amazonka.ConnectParticipant.Types.UploadMetadata.UploadMetadata
instance GHC.Classes.Eq Amazonka.ConnectParticipant.Types.UploadMetadata.UploadMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ConnectParticipant.Types.UploadMetadata.UploadMetadata
instance Data.Hashable.Class.Hashable Amazonka.ConnectParticipant.Types.UploadMetadata.UploadMetadata
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.Types.UploadMetadata.UploadMetadata


module Amazonka.ConnectParticipant.Types.Websocket

-- | The websocket for the participant's connection.
--   
--   <i>See:</i> <a>newWebsocket</a> smart constructor.
data Websocket
Websocket' :: Maybe Text -> Maybe Text -> Websocket

-- | The URL of the websocket.
[$sel:url:Websocket'] :: Websocket -> Maybe Text

-- | The URL expiration timestamp in ISO date format.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
[$sel:connectionExpiry:Websocket'] :: Websocket -> Maybe Text

-- | Create a value of <a>Websocket</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:url:Websocket'</a>, <a>websocket_url</a> - The URL of the
--   websocket.
--   
--   <a>$sel:connectionExpiry:Websocket'</a>,
--   <a>websocket_connectionExpiry</a> - The URL expiration timestamp in
--   ISO date format.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
newWebsocket :: Websocket

-- | The URL of the websocket.
websocket_url :: Lens' Websocket (Maybe Text)

-- | The URL expiration timestamp in ISO date format.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
websocket_connectionExpiry :: Lens' Websocket (Maybe Text)
instance GHC.Generics.Generic Amazonka.ConnectParticipant.Types.Websocket.Websocket
instance GHC.Show.Show Amazonka.ConnectParticipant.Types.Websocket.Websocket
instance GHC.Read.Read Amazonka.ConnectParticipant.Types.Websocket.Websocket
instance GHC.Classes.Eq Amazonka.ConnectParticipant.Types.Websocket.Websocket
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ConnectParticipant.Types.Websocket.Websocket
instance Data.Hashable.Class.Hashable Amazonka.ConnectParticipant.Types.Websocket.Websocket
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.Types.Websocket.Websocket


module Amazonka.ConnectParticipant.Types

-- | API version <tt>2018-09-07</tt> of the Amazon Connect Participant
--   Service SDK configuration.
defaultService :: Service

-- | The input fails to satisfy the constraints specified by Amazon
--   Connect.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You do not have sufficient access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An attachment with that identifier is already being uploaded.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of attachments per contact exceeds the quota.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied due to request throttling.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception occurs when there is an internal failure in the Amazon
--   Connect service.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ArtifactStatus
ArtifactStatus' :: Text -> ArtifactStatus
[fromArtifactStatus] :: ArtifactStatus -> Text
pattern ArtifactStatus_APPROVED :: ArtifactStatus
pattern ArtifactStatus_IN_PROGRESS :: ArtifactStatus
pattern ArtifactStatus_REJECTED :: ArtifactStatus
newtype ChatItemType
ChatItemType' :: Text -> ChatItemType
[fromChatItemType] :: ChatItemType -> Text
pattern ChatItemType_ATTACHMENT :: ChatItemType
pattern ChatItemType_CHAT_ENDED :: ChatItemType
pattern ChatItemType_CONNECTION_ACK :: ChatItemType
pattern ChatItemType_EVENT :: ChatItemType
pattern ChatItemType_MESSAGE :: ChatItemType
pattern ChatItemType_PARTICIPANT_JOINED :: ChatItemType
pattern ChatItemType_PARTICIPANT_LEFT :: ChatItemType
pattern ChatItemType_TRANSFER_FAILED :: ChatItemType
pattern ChatItemType_TRANSFER_SUCCEEDED :: ChatItemType
pattern ChatItemType_TYPING :: ChatItemType
newtype ConnectionType
ConnectionType' :: Text -> ConnectionType
[fromConnectionType] :: ConnectionType -> Text
pattern ConnectionType_CONNECTION_CREDENTIALS :: ConnectionType
pattern ConnectionType_WEBSOCKET :: ConnectionType
newtype ParticipantRole
ParticipantRole' :: Text -> ParticipantRole
[fromParticipantRole] :: ParticipantRole -> Text
pattern ParticipantRole_AGENT :: ParticipantRole
pattern ParticipantRole_CUSTOMER :: ParticipantRole
pattern ParticipantRole_SYSTEM :: ParticipantRole
newtype ScanDirection
ScanDirection' :: Text -> ScanDirection
[fromScanDirection] :: ScanDirection -> Text
pattern ScanDirection_BACKWARD :: ScanDirection
pattern ScanDirection_FORWARD :: ScanDirection
newtype SortKey
SortKey' :: Text -> SortKey
[fromSortKey] :: SortKey -> Text
pattern SortKey_ASCENDING :: SortKey
pattern SortKey_DESCENDING :: SortKey

-- | The case-insensitive input to indicate standard MIME type that
--   describes the format of the file that will be uploaded.
--   
--   <i>See:</i> <a>newAttachmentItem</a> smart constructor.
data AttachmentItem
AttachmentItem' :: Maybe ArtifactStatus -> Maybe Text -> Maybe Text -> Maybe Text -> AttachmentItem

-- | Status of the attachment.
[$sel:status:AttachmentItem'] :: AttachmentItem -> Maybe ArtifactStatus

-- | A case-sensitive name of the attachment being uploaded.
[$sel:attachmentName:AttachmentItem'] :: AttachmentItem -> Maybe Text

-- | A unique identifier for the attachment.
[$sel:attachmentId:AttachmentItem'] :: AttachmentItem -> Maybe Text

-- | Describes the MIME file type of the attachment. For a list of
--   supported file types, see <a>Feature specifications</a> in the
--   <i>Amazon Connect Administrator Guide</i>.
[$sel:contentType:AttachmentItem'] :: AttachmentItem -> Maybe Text

-- | Create a value of <a>AttachmentItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:AttachmentItem'</a>, <a>attachmentItem_status</a> -
--   Status of the attachment.
--   
--   <a>$sel:attachmentName:AttachmentItem'</a>,
--   <a>attachmentItem_attachmentName</a> - A case-sensitive name of the
--   attachment being uploaded.
--   
--   <a>$sel:attachmentId:AttachmentItem'</a>,
--   <a>attachmentItem_attachmentId</a> - A unique identifier for the
--   attachment.
--   
--   <a>$sel:contentType:AttachmentItem'</a>,
--   <a>attachmentItem_contentType</a> - Describes the MIME file type of
--   the attachment. For a list of supported file types, see <a>Feature
--   specifications</a> in the <i>Amazon Connect Administrator Guide</i>.
newAttachmentItem :: AttachmentItem

-- | Status of the attachment.
attachmentItem_status :: Lens' AttachmentItem (Maybe ArtifactStatus)

-- | A case-sensitive name of the attachment being uploaded.
attachmentItem_attachmentName :: Lens' AttachmentItem (Maybe Text)

-- | A unique identifier for the attachment.
attachmentItem_attachmentId :: Lens' AttachmentItem (Maybe Text)

-- | Describes the MIME file type of the attachment. For a list of
--   supported file types, see <a>Feature specifications</a> in the
--   <i>Amazon Connect Administrator Guide</i>.
attachmentItem_contentType :: Lens' AttachmentItem (Maybe Text)

-- | Connection credentials.
--   
--   <i>See:</i> <a>newConnectionCredentials</a> smart constructor.
data ConnectionCredentials
ConnectionCredentials' :: Maybe Text -> Maybe Text -> ConnectionCredentials

-- | The expiration of the token.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
[$sel:expiry:ConnectionCredentials'] :: ConnectionCredentials -> Maybe Text

-- | The connection token.
[$sel:connectionToken:ConnectionCredentials'] :: ConnectionCredentials -> Maybe Text

-- | Create a value of <a>ConnectionCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expiry:ConnectionCredentials'</a>,
--   <a>connectionCredentials_expiry</a> - The expiration of the token.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
--   
--   <a>$sel:connectionToken:ConnectionCredentials'</a>,
--   <a>connectionCredentials_connectionToken</a> - The connection token.
newConnectionCredentials :: ConnectionCredentials

-- | The expiration of the token.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
connectionCredentials_expiry :: Lens' ConnectionCredentials (Maybe Text)

-- | The connection token.
connectionCredentials_connectionToken :: Lens' ConnectionCredentials (Maybe Text)

-- | An item - message or event - that has been sent.
--   
--   <i>See:</i> <a>newItem</a> smart constructor.
data Item
Item' :: Maybe Text -> Maybe Text -> Maybe [AttachmentItem] -> Maybe ParticipantRole -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ChatItemType -> Maybe Text -> Item

-- | The ID of the sender in the session.
[$sel:participantId:Item'] :: Item -> Maybe Text

-- | The time when the message or event was sent.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
[$sel:absoluteTime:Item'] :: Item -> Maybe Text

-- | Provides information about the attachments.
[$sel:attachments:Item'] :: Item -> Maybe [AttachmentItem]

-- | The role of the sender. For example, is it a customer, agent, or
--   system.
[$sel:participantRole:Item'] :: Item -> Maybe ParticipantRole

-- | The content of the message or event.
[$sel:content:Item'] :: Item -> Maybe Text

-- | The ID of the item.
[$sel:id:Item'] :: Item -> Maybe Text

-- | The chat display name of the sender.
[$sel:displayName:Item'] :: Item -> Maybe Text

-- | Type of the item: message or event.
[$sel:type':Item'] :: Item -> Maybe ChatItemType

-- | The type of content of the item.
[$sel:contentType:Item'] :: Item -> Maybe Text

-- | Create a value of <a>Item</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:participantId:Item'</a>, <a>item_participantId</a> - The ID of
--   the sender in the session.
--   
--   <a>$sel:absoluteTime:Item'</a>, <a>item_absoluteTime</a> - The time
--   when the message or event was sent.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
--   
--   <a>$sel:attachments:Item'</a>, <a>item_attachments</a> - Provides
--   information about the attachments.
--   
--   <a>$sel:participantRole:Item'</a>, <a>item_participantRole</a> - The
--   role of the sender. For example, is it a customer, agent, or system.
--   
--   <a>$sel:content:Item'</a>, <a>item_content</a> - The content of the
--   message or event.
--   
--   <a>$sel:id:Item'</a>, <a>item_id</a> - The ID of the item.
--   
--   <a>$sel:displayName:Item'</a>, <a>item_displayName</a> - The chat
--   display name of the sender.
--   
--   <a>$sel:type':Item'</a>, <a>item_type</a> - Type of the item: message
--   or event.
--   
--   <a>$sel:contentType:Item'</a>, <a>item_contentType</a> - The type of
--   content of the item.
newItem :: Item

-- | The ID of the sender in the session.
item_participantId :: Lens' Item (Maybe Text)

-- | The time when the message or event was sent.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
item_absoluteTime :: Lens' Item (Maybe Text)

-- | Provides information about the attachments.
item_attachments :: Lens' Item (Maybe [AttachmentItem])

-- | The role of the sender. For example, is it a customer, agent, or
--   system.
item_participantRole :: Lens' Item (Maybe ParticipantRole)

-- | The content of the message or event.
item_content :: Lens' Item (Maybe Text)

-- | The ID of the item.
item_id :: Lens' Item (Maybe Text)

-- | The chat display name of the sender.
item_displayName :: Lens' Item (Maybe Text)

-- | Type of the item: message or event.
item_type :: Lens' Item (Maybe ChatItemType)

-- | The type of content of the item.
item_contentType :: Lens' Item (Maybe Text)

-- | A filtering option for where to start. For example, if you sent 100
--   messages, start with message 50.
--   
--   <i>See:</i> <a>newStartPosition</a> smart constructor.
data StartPosition
StartPosition' :: Maybe Text -> Maybe Text -> Maybe Natural -> StartPosition

-- | The time in ISO format where to start.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
[$sel:absoluteTime:StartPosition'] :: StartPosition -> Maybe Text

-- | The ID of the message or event where to start.
[$sel:id:StartPosition'] :: StartPosition -> Maybe Text

-- | The start position of the most recent message where you want to start.
[$sel:mostRecent:StartPosition'] :: StartPosition -> Maybe Natural

-- | Create a value of <a>StartPosition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:absoluteTime:StartPosition'</a>,
--   <a>startPosition_absoluteTime</a> - The time in ISO format where to
--   start.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
--   
--   <a>$sel:id:StartPosition'</a>, <a>startPosition_id</a> - The ID of the
--   message or event where to start.
--   
--   <a>$sel:mostRecent:StartPosition'</a>, <a>startPosition_mostRecent</a>
--   - The start position of the most recent message where you want to
--   start.
newStartPosition :: StartPosition

-- | The time in ISO format where to start.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
startPosition_absoluteTime :: Lens' StartPosition (Maybe Text)

-- | The ID of the message or event where to start.
startPosition_id :: Lens' StartPosition (Maybe Text)

-- | The start position of the most recent message where you want to start.
startPosition_mostRecent :: Lens' StartPosition (Maybe Natural)

-- | Fields to be used while uploading the attachment.
--   
--   <i>See:</i> <a>newUploadMetadata</a> smart constructor.
data UploadMetadata
UploadMetadata' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> UploadMetadata

-- | The expiration time of the URL in ISO timestamp. It's specified in ISO
--   8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
--   2019-11-08T02:41:28.172Z.
[$sel:urlExpiry:UploadMetadata'] :: UploadMetadata -> Maybe Text

-- | The headers to be provided while uploading the file to the URL.
[$sel:headersToInclude:UploadMetadata'] :: UploadMetadata -> Maybe (HashMap Text Text)

-- | The pre-signed URL using which file would be downloaded from Amazon S3
--   by the API caller.
[$sel:url:UploadMetadata'] :: UploadMetadata -> Maybe Text

-- | Create a value of <a>UploadMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:urlExpiry:UploadMetadata'</a>, <a>uploadMetadata_urlExpiry</a>
--   - The expiration time of the URL in ISO timestamp. It's specified in
--   ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
--   2019-11-08T02:41:28.172Z.
--   
--   <a>$sel:headersToInclude:UploadMetadata'</a>,
--   <a>uploadMetadata_headersToInclude</a> - The headers to be provided
--   while uploading the file to the URL.
--   
--   <a>$sel:url:UploadMetadata'</a>, <a>uploadMetadata_url</a> - The
--   pre-signed URL using which file would be downloaded from Amazon S3 by
--   the API caller.
newUploadMetadata :: UploadMetadata

-- | The expiration time of the URL in ISO timestamp. It's specified in ISO
--   8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
--   2019-11-08T02:41:28.172Z.
uploadMetadata_urlExpiry :: Lens' UploadMetadata (Maybe Text)

-- | The headers to be provided while uploading the file to the URL.
uploadMetadata_headersToInclude :: Lens' UploadMetadata (Maybe (HashMap Text Text))

-- | The pre-signed URL using which file would be downloaded from Amazon S3
--   by the API caller.
uploadMetadata_url :: Lens' UploadMetadata (Maybe Text)

-- | The websocket for the participant's connection.
--   
--   <i>See:</i> <a>newWebsocket</a> smart constructor.
data Websocket
Websocket' :: Maybe Text -> Maybe Text -> Websocket

-- | The URL of the websocket.
[$sel:url:Websocket'] :: Websocket -> Maybe Text

-- | The URL expiration timestamp in ISO date format.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
[$sel:connectionExpiry:Websocket'] :: Websocket -> Maybe Text

-- | Create a value of <a>Websocket</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:url:Websocket'</a>, <a>websocket_url</a> - The URL of the
--   websocket.
--   
--   <a>$sel:connectionExpiry:Websocket'</a>,
--   <a>websocket_connectionExpiry</a> - The URL expiration timestamp in
--   ISO date format.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
newWebsocket :: Websocket

-- | The URL of the websocket.
websocket_url :: Lens' Websocket (Maybe Text)

-- | The URL expiration timestamp in ISO date format.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
websocket_connectionExpiry :: Lens' Websocket (Maybe Text)


-- | Provides a pre-signed Amazon S3 URL in response for uploading the file
--   directly to S3.
module Amazonka.ConnectParticipant.StartAttachmentUpload

-- | <i>See:</i> <a>newStartAttachmentUpload</a> smart constructor.
data StartAttachmentUpload
StartAttachmentUpload' :: Text -> Natural -> Text -> Text -> Text -> StartAttachmentUpload

-- | Describes the MIME file type of the attachment. For a list of
--   supported file types, see <a>Feature specifications</a> in the
--   <i>Amazon Connect Administrator Guide</i>.
[$sel:contentType:StartAttachmentUpload'] :: StartAttachmentUpload -> Text

-- | The size of the attachment in bytes.
[$sel:attachmentSizeInBytes:StartAttachmentUpload'] :: StartAttachmentUpload -> Natural

-- | A case-sensitive name of the attachment being uploaded.
[$sel:attachmentName:StartAttachmentUpload'] :: StartAttachmentUpload -> Text

-- | A unique case sensitive identifier to support idempotency of request.
[$sel:clientToken:StartAttachmentUpload'] :: StartAttachmentUpload -> Text

-- | The authentication token associated with the participant's connection.
[$sel:connectionToken:StartAttachmentUpload'] :: StartAttachmentUpload -> Text

-- | Create a value of <a>StartAttachmentUpload</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentType:StartAttachmentUpload'</a>,
--   <a>startAttachmentUpload_contentType</a> - Describes the MIME file
--   type of the attachment. For a list of supported file types, see
--   <a>Feature specifications</a> in the <i>Amazon Connect Administrator
--   Guide</i>.
--   
--   <a>$sel:attachmentSizeInBytes:StartAttachmentUpload'</a>,
--   <a>startAttachmentUpload_attachmentSizeInBytes</a> - The size of the
--   attachment in bytes.
--   
--   <a>$sel:attachmentName:StartAttachmentUpload'</a>,
--   <a>startAttachmentUpload_attachmentName</a> - A case-sensitive name of
--   the attachment being uploaded.
--   
--   <a>$sel:clientToken:StartAttachmentUpload'</a>,
--   <a>startAttachmentUpload_clientToken</a> - A unique case sensitive
--   identifier to support idempotency of request.
--   
--   <a>$sel:connectionToken:StartAttachmentUpload'</a>,
--   <a>startAttachmentUpload_connectionToken</a> - The authentication
--   token associated with the participant's connection.
newStartAttachmentUpload :: Text -> Natural -> Text -> Text -> Text -> StartAttachmentUpload

-- | Describes the MIME file type of the attachment. For a list of
--   supported file types, see <a>Feature specifications</a> in the
--   <i>Amazon Connect Administrator Guide</i>.
startAttachmentUpload_contentType :: Lens' StartAttachmentUpload Text

-- | The size of the attachment in bytes.
startAttachmentUpload_attachmentSizeInBytes :: Lens' StartAttachmentUpload Natural

-- | A case-sensitive name of the attachment being uploaded.
startAttachmentUpload_attachmentName :: Lens' StartAttachmentUpload Text

-- | A unique case sensitive identifier to support idempotency of request.
startAttachmentUpload_clientToken :: Lens' StartAttachmentUpload Text

-- | The authentication token associated with the participant's connection.
startAttachmentUpload_connectionToken :: Lens' StartAttachmentUpload Text

-- | <i>See:</i> <a>newStartAttachmentUploadResponse</a> smart constructor.
data StartAttachmentUploadResponse
StartAttachmentUploadResponse' :: Maybe Text -> Maybe UploadMetadata -> Int -> StartAttachmentUploadResponse

-- | A unique identifier for the attachment.
[$sel:attachmentId:StartAttachmentUploadResponse'] :: StartAttachmentUploadResponse -> Maybe Text

-- | Fields to be used while uploading the attachment.
[$sel:uploadMetadata:StartAttachmentUploadResponse'] :: StartAttachmentUploadResponse -> Maybe UploadMetadata

-- | The response's http status code.
[$sel:httpStatus:StartAttachmentUploadResponse'] :: StartAttachmentUploadResponse -> Int

-- | Create a value of <a>StartAttachmentUploadResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachmentId:StartAttachmentUploadResponse'</a>,
--   <a>startAttachmentUploadResponse_attachmentId</a> - A unique
--   identifier for the attachment.
--   
--   <a>$sel:uploadMetadata:StartAttachmentUploadResponse'</a>,
--   <a>startAttachmentUploadResponse_uploadMetadata</a> - Fields to be
--   used while uploading the attachment.
--   
--   <a>$sel:httpStatus:StartAttachmentUploadResponse'</a>,
--   <a>startAttachmentUploadResponse_httpStatus</a> - The response's http
--   status code.
newStartAttachmentUploadResponse :: Int -> StartAttachmentUploadResponse

-- | A unique identifier for the attachment.
startAttachmentUploadResponse_attachmentId :: Lens' StartAttachmentUploadResponse (Maybe Text)

-- | Fields to be used while uploading the attachment.
startAttachmentUploadResponse_uploadMetadata :: Lens' StartAttachmentUploadResponse (Maybe UploadMetadata)

-- | The response's http status code.
startAttachmentUploadResponse_httpStatus :: Lens' StartAttachmentUploadResponse Int
instance GHC.Generics.Generic Amazonka.ConnectParticipant.StartAttachmentUpload.StartAttachmentUpload
instance GHC.Show.Show Amazonka.ConnectParticipant.StartAttachmentUpload.StartAttachmentUpload
instance GHC.Read.Read Amazonka.ConnectParticipant.StartAttachmentUpload.StartAttachmentUpload
instance GHC.Classes.Eq Amazonka.ConnectParticipant.StartAttachmentUpload.StartAttachmentUpload
instance GHC.Generics.Generic Amazonka.ConnectParticipant.StartAttachmentUpload.StartAttachmentUploadResponse
instance GHC.Show.Show Amazonka.ConnectParticipant.StartAttachmentUpload.StartAttachmentUploadResponse
instance GHC.Read.Read Amazonka.ConnectParticipant.StartAttachmentUpload.StartAttachmentUploadResponse
instance GHC.Classes.Eq Amazonka.ConnectParticipant.StartAttachmentUpload.StartAttachmentUploadResponse
instance Amazonka.Types.AWSRequest Amazonka.ConnectParticipant.StartAttachmentUpload.StartAttachmentUpload
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.StartAttachmentUpload.StartAttachmentUploadResponse
instance Data.Hashable.Class.Hashable Amazonka.ConnectParticipant.StartAttachmentUpload.StartAttachmentUpload
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.StartAttachmentUpload.StartAttachmentUpload
instance Amazonka.Data.Headers.ToHeaders Amazonka.ConnectParticipant.StartAttachmentUpload.StartAttachmentUpload
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ConnectParticipant.StartAttachmentUpload.StartAttachmentUpload
instance Amazonka.Data.Path.ToPath Amazonka.ConnectParticipant.StartAttachmentUpload.StartAttachmentUpload
instance Amazonka.Data.Query.ToQuery Amazonka.ConnectParticipant.StartAttachmentUpload.StartAttachmentUpload


-- | Sends a message. Note that ConnectionToken is used for invoking this
--   API instead of ParticipantToken.
--   
--   The Amazon Connect Participant Service APIs do not use <a>Signature
--   Version 4 authentication</a>.
module Amazonka.ConnectParticipant.SendMessage

-- | <i>See:</i> <a>newSendMessage</a> smart constructor.
data SendMessage
SendMessage' :: Maybe Text -> Text -> Text -> Text -> SendMessage

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientToken:SendMessage'] :: SendMessage -> Maybe Text

-- | The type of the content. Supported types are text/plain.
[$sel:contentType:SendMessage'] :: SendMessage -> Text

-- | The content of the message.
[$sel:content:SendMessage'] :: SendMessage -> Text

-- | The authentication token associated with the connection.
[$sel:connectionToken:SendMessage'] :: SendMessage -> Text

-- | Create a value of <a>SendMessage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:SendMessage'</a>, <a>sendMessage_clientToken</a> -
--   A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
--   
--   <a>$sel:contentType:SendMessage'</a>, <a>sendMessage_contentType</a> -
--   The type of the content. Supported types are text/plain.
--   
--   <a>$sel:content:SendMessage'</a>, <a>sendMessage_content</a> - The
--   content of the message.
--   
--   <a>$sel:connectionToken:SendMessage'</a>,
--   <a>sendMessage_connectionToken</a> - The authentication token
--   associated with the connection.
newSendMessage :: Text -> Text -> Text -> SendMessage

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
sendMessage_clientToken :: Lens' SendMessage (Maybe Text)

-- | The type of the content. Supported types are text/plain.
sendMessage_contentType :: Lens' SendMessage Text

-- | The content of the message.
sendMessage_content :: Lens' SendMessage Text

-- | The authentication token associated with the connection.
sendMessage_connectionToken :: Lens' SendMessage Text

-- | <i>See:</i> <a>newSendMessageResponse</a> smart constructor.
data SendMessageResponse
SendMessageResponse' :: Maybe Text -> Maybe Text -> Int -> SendMessageResponse

-- | The time when the message was sent.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
[$sel:absoluteTime:SendMessageResponse'] :: SendMessageResponse -> Maybe Text

-- | The ID of the message.
[$sel:id:SendMessageResponse'] :: SendMessageResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:SendMessageResponse'] :: SendMessageResponse -> Int

-- | Create a value of <a>SendMessageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:absoluteTime:SendMessageResponse'</a>,
--   <a>sendMessageResponse_absoluteTime</a> - The time when the message
--   was sent.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
--   
--   <a>$sel:id:SendMessageResponse'</a>, <a>sendMessageResponse_id</a> -
--   The ID of the message.
--   
--   <a>$sel:httpStatus:SendMessageResponse'</a>,
--   <a>sendMessageResponse_httpStatus</a> - The response's http status
--   code.
newSendMessageResponse :: Int -> SendMessageResponse

-- | The time when the message was sent.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
sendMessageResponse_absoluteTime :: Lens' SendMessageResponse (Maybe Text)

-- | The ID of the message.
sendMessageResponse_id :: Lens' SendMessageResponse (Maybe Text)

-- | The response's http status code.
sendMessageResponse_httpStatus :: Lens' SendMessageResponse Int
instance GHC.Generics.Generic Amazonka.ConnectParticipant.SendMessage.SendMessage
instance GHC.Show.Show Amazonka.ConnectParticipant.SendMessage.SendMessage
instance GHC.Read.Read Amazonka.ConnectParticipant.SendMessage.SendMessage
instance GHC.Classes.Eq Amazonka.ConnectParticipant.SendMessage.SendMessage
instance GHC.Generics.Generic Amazonka.ConnectParticipant.SendMessage.SendMessageResponse
instance GHC.Show.Show Amazonka.ConnectParticipant.SendMessage.SendMessageResponse
instance GHC.Read.Read Amazonka.ConnectParticipant.SendMessage.SendMessageResponse
instance GHC.Classes.Eq Amazonka.ConnectParticipant.SendMessage.SendMessageResponse
instance Amazonka.Types.AWSRequest Amazonka.ConnectParticipant.SendMessage.SendMessage
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.SendMessage.SendMessageResponse
instance Data.Hashable.Class.Hashable Amazonka.ConnectParticipant.SendMessage.SendMessage
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.SendMessage.SendMessage
instance Amazonka.Data.Headers.ToHeaders Amazonka.ConnectParticipant.SendMessage.SendMessage
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ConnectParticipant.SendMessage.SendMessage
instance Amazonka.Data.Path.ToPath Amazonka.ConnectParticipant.SendMessage.SendMessage
instance Amazonka.Data.Query.ToQuery Amazonka.ConnectParticipant.SendMessage.SendMessage


-- | Sends an event. Note that ConnectionToken is used for invoking this
--   API instead of ParticipantToken.
--   
--   The Amazon Connect Participant Service APIs do not use <a>Signature
--   Version 4 authentication</a>.
module Amazonka.ConnectParticipant.SendEvent

-- | <i>See:</i> <a>newSendEvent</a> smart constructor.
data SendEvent
SendEvent' :: Maybe Text -> Maybe Text -> Text -> Text -> SendEvent

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientToken:SendEvent'] :: SendEvent -> Maybe Text

-- | The content of the event to be sent (for example, message text). This
--   is not yet supported.
[$sel:content:SendEvent'] :: SendEvent -> Maybe Text

-- | The content type of the request. Supported types are:
--   
--   <ul>
--   <li>application/vnd.amazonaws.connect.event.typing</li>
--   
--   <li>application/vnd.amazonaws.connect.event.connection.acknowledged</li>
--   </ul>
[$sel:contentType:SendEvent'] :: SendEvent -> Text

-- | The authentication token associated with the participant's connection.
[$sel:connectionToken:SendEvent'] :: SendEvent -> Text

-- | Create a value of <a>SendEvent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:SendEvent'</a>, <a>sendEvent_clientToken</a> - A
--   unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
--   
--   <a>$sel:content:SendEvent'</a>, <a>sendEvent_content</a> - The content
--   of the event to be sent (for example, message text). This is not yet
--   supported.
--   
--   <a>$sel:contentType:SendEvent'</a>, <a>sendEvent_contentType</a> - The
--   content type of the request. Supported types are:
--   
--   <ul>
--   <li>application/vnd.amazonaws.connect.event.typing</li>
--   
--   <li>application/vnd.amazonaws.connect.event.connection.acknowledged</li>
--   </ul>
--   
--   <a>$sel:connectionToken:SendEvent'</a>,
--   <a>sendEvent_connectionToken</a> - The authentication token associated
--   with the participant's connection.
newSendEvent :: Text -> Text -> SendEvent

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
sendEvent_clientToken :: Lens' SendEvent (Maybe Text)

-- | The content of the event to be sent (for example, message text). This
--   is not yet supported.
sendEvent_content :: Lens' SendEvent (Maybe Text)

-- | The content type of the request. Supported types are:
--   
--   <ul>
--   <li>application/vnd.amazonaws.connect.event.typing</li>
--   
--   <li>application/vnd.amazonaws.connect.event.connection.acknowledged</li>
--   </ul>
sendEvent_contentType :: Lens' SendEvent Text

-- | The authentication token associated with the participant's connection.
sendEvent_connectionToken :: Lens' SendEvent Text

-- | <i>See:</i> <a>newSendEventResponse</a> smart constructor.
data SendEventResponse
SendEventResponse' :: Maybe Text -> Maybe Text -> Int -> SendEventResponse

-- | The time when the event was sent.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
[$sel:absoluteTime:SendEventResponse'] :: SendEventResponse -> Maybe Text

-- | The ID of the response.
[$sel:id:SendEventResponse'] :: SendEventResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:SendEventResponse'] :: SendEventResponse -> Int

-- | Create a value of <a>SendEventResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:absoluteTime:SendEventResponse'</a>,
--   <a>sendEventResponse_absoluteTime</a> - The time when the event was
--   sent.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
--   
--   <a>$sel:id:SendEventResponse'</a>, <a>sendEventResponse_id</a> - The
--   ID of the response.
--   
--   <a>$sel:httpStatus:SendEventResponse'</a>,
--   <a>sendEventResponse_httpStatus</a> - The response's http status code.
newSendEventResponse :: Int -> SendEventResponse

-- | The time when the event was sent.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
sendEventResponse_absoluteTime :: Lens' SendEventResponse (Maybe Text)

-- | The ID of the response.
sendEventResponse_id :: Lens' SendEventResponse (Maybe Text)

-- | The response's http status code.
sendEventResponse_httpStatus :: Lens' SendEventResponse Int
instance GHC.Generics.Generic Amazonka.ConnectParticipant.SendEvent.SendEvent
instance GHC.Show.Show Amazonka.ConnectParticipant.SendEvent.SendEvent
instance GHC.Read.Read Amazonka.ConnectParticipant.SendEvent.SendEvent
instance GHC.Classes.Eq Amazonka.ConnectParticipant.SendEvent.SendEvent
instance GHC.Generics.Generic Amazonka.ConnectParticipant.SendEvent.SendEventResponse
instance GHC.Show.Show Amazonka.ConnectParticipant.SendEvent.SendEventResponse
instance GHC.Read.Read Amazonka.ConnectParticipant.SendEvent.SendEventResponse
instance GHC.Classes.Eq Amazonka.ConnectParticipant.SendEvent.SendEventResponse
instance Amazonka.Types.AWSRequest Amazonka.ConnectParticipant.SendEvent.SendEvent
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.SendEvent.SendEventResponse
instance Data.Hashable.Class.Hashable Amazonka.ConnectParticipant.SendEvent.SendEvent
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.SendEvent.SendEvent
instance Amazonka.Data.Headers.ToHeaders Amazonka.ConnectParticipant.SendEvent.SendEvent
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ConnectParticipant.SendEvent.SendEvent
instance Amazonka.Data.Path.ToPath Amazonka.ConnectParticipant.SendEvent.SendEvent
instance Amazonka.Data.Query.ToQuery Amazonka.ConnectParticipant.SendEvent.SendEvent


-- | Retrieves a transcript of the session, including details about any
--   attachments. Note that ConnectionToken is used for invoking this API
--   instead of ParticipantToken.
--   
--   The Amazon Connect Participant Service APIs do not use <a>Signature
--   Version 4 authentication</a>.
module Amazonka.ConnectParticipant.GetTranscript

-- | <i>See:</i> <a>newGetTranscript</a> smart constructor.
data GetTranscript
GetTranscript' :: Maybe ScanDirection -> Maybe Text -> Maybe SortKey -> Maybe Text -> Maybe Natural -> Maybe StartPosition -> Text -> GetTranscript

-- | The direction from StartPosition from which to retrieve message.
--   Default: BACKWARD when no StartPosition is provided, FORWARD with
--   StartPosition.
[$sel:scanDirection:GetTranscript'] :: GetTranscript -> Maybe ScanDirection

-- | The pagination token. Use the value returned previously in the next
--   subsequent request to retrieve the next set of results.
[$sel:nextToken:GetTranscript'] :: GetTranscript -> Maybe Text

-- | The sort order for the records. Default: DESCENDING.
[$sel:sortOrder:GetTranscript'] :: GetTranscript -> Maybe SortKey

-- | The contactId from the current contact chain for which transcript is
--   needed.
[$sel:contactId:GetTranscript'] :: GetTranscript -> Maybe Text

-- | The maximum number of results to return in the page. Default: 10.
[$sel:maxResults:GetTranscript'] :: GetTranscript -> Maybe Natural

-- | A filtering option for where to start.
[$sel:startPosition:GetTranscript'] :: GetTranscript -> Maybe StartPosition

-- | The authentication token associated with the participant's connection.
[$sel:connectionToken:GetTranscript'] :: GetTranscript -> Text

-- | Create a value of <a>GetTranscript</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scanDirection:GetTranscript'</a>,
--   <a>getTranscript_scanDirection</a> - The direction from StartPosition
--   from which to retrieve message. Default: BACKWARD when no
--   StartPosition is provided, FORWARD with StartPosition.
--   
--   <a>$sel:nextToken:GetTranscript'</a>, <a>getTranscript_nextToken</a> -
--   The pagination token. Use the value returned previously in the next
--   subsequent request to retrieve the next set of results.
--   
--   <a>$sel:sortOrder:GetTranscript'</a>, <a>getTranscript_sortOrder</a> -
--   The sort order for the records. Default: DESCENDING.
--   
--   <a>$sel:contactId:GetTranscript'</a>, <a>getTranscript_contactId</a> -
--   The contactId from the current contact chain for which transcript is
--   needed.
--   
--   <a>$sel:maxResults:GetTranscript'</a>, <a>getTranscript_maxResults</a>
--   - The maximum number of results to return in the page. Default: 10.
--   
--   <a>$sel:startPosition:GetTranscript'</a>,
--   <a>getTranscript_startPosition</a> - A filtering option for where to
--   start.
--   
--   <a>$sel:connectionToken:GetTranscript'</a>,
--   <a>getTranscript_connectionToken</a> - The authentication token
--   associated with the participant's connection.
newGetTranscript :: Text -> GetTranscript

-- | The direction from StartPosition from which to retrieve message.
--   Default: BACKWARD when no StartPosition is provided, FORWARD with
--   StartPosition.
getTranscript_scanDirection :: Lens' GetTranscript (Maybe ScanDirection)

-- | The pagination token. Use the value returned previously in the next
--   subsequent request to retrieve the next set of results.
getTranscript_nextToken :: Lens' GetTranscript (Maybe Text)

-- | The sort order for the records. Default: DESCENDING.
getTranscript_sortOrder :: Lens' GetTranscript (Maybe SortKey)

-- | The contactId from the current contact chain for which transcript is
--   needed.
getTranscript_contactId :: Lens' GetTranscript (Maybe Text)

-- | The maximum number of results to return in the page. Default: 10.
getTranscript_maxResults :: Lens' GetTranscript (Maybe Natural)

-- | A filtering option for where to start.
getTranscript_startPosition :: Lens' GetTranscript (Maybe StartPosition)

-- | The authentication token associated with the participant's connection.
getTranscript_connectionToken :: Lens' GetTranscript Text

-- | <i>See:</i> <a>newGetTranscriptResponse</a> smart constructor.
data GetTranscriptResponse
GetTranscriptResponse' :: Maybe Text -> Maybe Text -> Maybe [Item] -> Int -> GetTranscriptResponse

-- | The pagination token. Use the value returned previously in the next
--   subsequent request to retrieve the next set of results.
[$sel:nextToken:GetTranscriptResponse'] :: GetTranscriptResponse -> Maybe Text

-- | The initial contact ID for the contact.
[$sel:initialContactId:GetTranscriptResponse'] :: GetTranscriptResponse -> Maybe Text

-- | The list of messages in the session.
[$sel:transcript:GetTranscriptResponse'] :: GetTranscriptResponse -> Maybe [Item]

-- | The response's http status code.
[$sel:httpStatus:GetTranscriptResponse'] :: GetTranscriptResponse -> Int

-- | Create a value of <a>GetTranscriptResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetTranscript'</a>,
--   <a>getTranscriptResponse_nextToken</a> - The pagination token. Use the
--   value returned previously in the next subsequent request to retrieve
--   the next set of results.
--   
--   <a>$sel:initialContactId:GetTranscriptResponse'</a>,
--   <a>getTranscriptResponse_initialContactId</a> - The initial contact ID
--   for the contact.
--   
--   <a>$sel:transcript:GetTranscriptResponse'</a>,
--   <a>getTranscriptResponse_transcript</a> - The list of messages in the
--   session.
--   
--   <a>$sel:httpStatus:GetTranscriptResponse'</a>,
--   <a>getTranscriptResponse_httpStatus</a> - The response's http status
--   code.
newGetTranscriptResponse :: Int -> GetTranscriptResponse

-- | The pagination token. Use the value returned previously in the next
--   subsequent request to retrieve the next set of results.
getTranscriptResponse_nextToken :: Lens' GetTranscriptResponse (Maybe Text)

-- | The initial contact ID for the contact.
getTranscriptResponse_initialContactId :: Lens' GetTranscriptResponse (Maybe Text)

-- | The list of messages in the session.
getTranscriptResponse_transcript :: Lens' GetTranscriptResponse (Maybe [Item])

-- | The response's http status code.
getTranscriptResponse_httpStatus :: Lens' GetTranscriptResponse Int
instance GHC.Generics.Generic Amazonka.ConnectParticipant.GetTranscript.GetTranscript
instance GHC.Show.Show Amazonka.ConnectParticipant.GetTranscript.GetTranscript
instance GHC.Read.Read Amazonka.ConnectParticipant.GetTranscript.GetTranscript
instance GHC.Classes.Eq Amazonka.ConnectParticipant.GetTranscript.GetTranscript
instance GHC.Generics.Generic Amazonka.ConnectParticipant.GetTranscript.GetTranscriptResponse
instance GHC.Show.Show Amazonka.ConnectParticipant.GetTranscript.GetTranscriptResponse
instance GHC.Read.Read Amazonka.ConnectParticipant.GetTranscript.GetTranscriptResponse
instance GHC.Classes.Eq Amazonka.ConnectParticipant.GetTranscript.GetTranscriptResponse
instance Amazonka.Types.AWSRequest Amazonka.ConnectParticipant.GetTranscript.GetTranscript
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.GetTranscript.GetTranscriptResponse
instance Data.Hashable.Class.Hashable Amazonka.ConnectParticipant.GetTranscript.GetTranscript
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.GetTranscript.GetTranscript
instance Amazonka.Data.Headers.ToHeaders Amazonka.ConnectParticipant.GetTranscript.GetTranscript
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ConnectParticipant.GetTranscript.GetTranscript
instance Amazonka.Data.Path.ToPath Amazonka.ConnectParticipant.GetTranscript.GetTranscript
instance Amazonka.Data.Query.ToQuery Amazonka.ConnectParticipant.GetTranscript.GetTranscript


-- | Provides a pre-signed URL for download of a completed attachment. This
--   is an asynchronous API for use with active contacts.
module Amazonka.ConnectParticipant.GetAttachment

-- | <i>See:</i> <a>newGetAttachment</a> smart constructor.
data GetAttachment
GetAttachment' :: Text -> Text -> GetAttachment

-- | A unique identifier for the attachment.
[$sel:attachmentId:GetAttachment'] :: GetAttachment -> Text

-- | The authentication token associated with the participant's connection.
[$sel:connectionToken:GetAttachment'] :: GetAttachment -> Text

-- | Create a value of <a>GetAttachment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachmentId:GetAttachment'</a>,
--   <a>getAttachment_attachmentId</a> - A unique identifier for the
--   attachment.
--   
--   <a>$sel:connectionToken:GetAttachment'</a>,
--   <a>getAttachment_connectionToken</a> - The authentication token
--   associated with the participant's connection.
newGetAttachment :: Text -> Text -> GetAttachment

-- | A unique identifier for the attachment.
getAttachment_attachmentId :: Lens' GetAttachment Text

-- | The authentication token associated with the participant's connection.
getAttachment_connectionToken :: Lens' GetAttachment Text

-- | <i>See:</i> <a>newGetAttachmentResponse</a> smart constructor.
data GetAttachmentResponse
GetAttachmentResponse' :: Maybe Text -> Maybe Text -> Int -> GetAttachmentResponse

-- | The expiration time of the URL in ISO timestamp. It's specified in ISO
--   8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
--   2019-11-08T02:41:28.172Z.
[$sel:urlExpiry:GetAttachmentResponse'] :: GetAttachmentResponse -> Maybe Text

-- | The pre-signed URL using which file would be downloaded from Amazon S3
--   by the API caller.
[$sel:url:GetAttachmentResponse'] :: GetAttachmentResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetAttachmentResponse'] :: GetAttachmentResponse -> Int

-- | Create a value of <a>GetAttachmentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:urlExpiry:GetAttachmentResponse'</a>,
--   <a>getAttachmentResponse_urlExpiry</a> - The expiration time of the
--   URL in ISO timestamp. It's specified in ISO 8601 format:
--   yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.
--   
--   <a>$sel:url:GetAttachmentResponse'</a>,
--   <a>getAttachmentResponse_url</a> - The pre-signed URL using which file
--   would be downloaded from Amazon S3 by the API caller.
--   
--   <a>$sel:httpStatus:GetAttachmentResponse'</a>,
--   <a>getAttachmentResponse_httpStatus</a> - The response's http status
--   code.
newGetAttachmentResponse :: Int -> GetAttachmentResponse

-- | The expiration time of the URL in ISO timestamp. It's specified in ISO
--   8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
--   2019-11-08T02:41:28.172Z.
getAttachmentResponse_urlExpiry :: Lens' GetAttachmentResponse (Maybe Text)

-- | The pre-signed URL using which file would be downloaded from Amazon S3
--   by the API caller.
getAttachmentResponse_url :: Lens' GetAttachmentResponse (Maybe Text)

-- | The response's http status code.
getAttachmentResponse_httpStatus :: Lens' GetAttachmentResponse Int
instance GHC.Generics.Generic Amazonka.ConnectParticipant.GetAttachment.GetAttachment
instance GHC.Show.Show Amazonka.ConnectParticipant.GetAttachment.GetAttachment
instance GHC.Read.Read Amazonka.ConnectParticipant.GetAttachment.GetAttachment
instance GHC.Classes.Eq Amazonka.ConnectParticipant.GetAttachment.GetAttachment
instance GHC.Generics.Generic Amazonka.ConnectParticipant.GetAttachment.GetAttachmentResponse
instance GHC.Show.Show Amazonka.ConnectParticipant.GetAttachment.GetAttachmentResponse
instance GHC.Read.Read Amazonka.ConnectParticipant.GetAttachment.GetAttachmentResponse
instance GHC.Classes.Eq Amazonka.ConnectParticipant.GetAttachment.GetAttachmentResponse
instance Amazonka.Types.AWSRequest Amazonka.ConnectParticipant.GetAttachment.GetAttachment
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.GetAttachment.GetAttachmentResponse
instance Data.Hashable.Class.Hashable Amazonka.ConnectParticipant.GetAttachment.GetAttachment
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.GetAttachment.GetAttachment
instance Amazonka.Data.Headers.ToHeaders Amazonka.ConnectParticipant.GetAttachment.GetAttachment
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ConnectParticipant.GetAttachment.GetAttachment
instance Amazonka.Data.Path.ToPath Amazonka.ConnectParticipant.GetAttachment.GetAttachment
instance Amazonka.Data.Query.ToQuery Amazonka.ConnectParticipant.GetAttachment.GetAttachment


-- | Disconnects a participant. Note that ConnectionToken is used for
--   invoking this API instead of ParticipantToken.
--   
--   The Amazon Connect Participant Service APIs do not use <a>Signature
--   Version 4 authentication</a>.
module Amazonka.ConnectParticipant.DisconnectParticipant

-- | <i>See:</i> <a>newDisconnectParticipant</a> smart constructor.
data DisconnectParticipant
DisconnectParticipant' :: Maybe Text -> Text -> DisconnectParticipant

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientToken:DisconnectParticipant'] :: DisconnectParticipant -> Maybe Text

-- | The authentication token associated with the participant's connection.
[$sel:connectionToken:DisconnectParticipant'] :: DisconnectParticipant -> Text

-- | Create a value of <a>DisconnectParticipant</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:DisconnectParticipant'</a>,
--   <a>disconnectParticipant_clientToken</a> - A unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:connectionToken:DisconnectParticipant'</a>,
--   <a>disconnectParticipant_connectionToken</a> - The authentication
--   token associated with the participant's connection.
newDisconnectParticipant :: Text -> DisconnectParticipant

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
disconnectParticipant_clientToken :: Lens' DisconnectParticipant (Maybe Text)

-- | The authentication token associated with the participant's connection.
disconnectParticipant_connectionToken :: Lens' DisconnectParticipant Text

-- | <i>See:</i> <a>newDisconnectParticipantResponse</a> smart constructor.
data DisconnectParticipantResponse
DisconnectParticipantResponse' :: Int -> DisconnectParticipantResponse

-- | The response's http status code.
[$sel:httpStatus:DisconnectParticipantResponse'] :: DisconnectParticipantResponse -> Int

-- | Create a value of <a>DisconnectParticipantResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DisconnectParticipantResponse'</a>,
--   <a>disconnectParticipantResponse_httpStatus</a> - The response's http
--   status code.
newDisconnectParticipantResponse :: Int -> DisconnectParticipantResponse

-- | The response's http status code.
disconnectParticipantResponse_httpStatus :: Lens' DisconnectParticipantResponse Int
instance GHC.Generics.Generic Amazonka.ConnectParticipant.DisconnectParticipant.DisconnectParticipant
instance GHC.Show.Show Amazonka.ConnectParticipant.DisconnectParticipant.DisconnectParticipant
instance GHC.Read.Read Amazonka.ConnectParticipant.DisconnectParticipant.DisconnectParticipant
instance GHC.Classes.Eq Amazonka.ConnectParticipant.DisconnectParticipant.DisconnectParticipant
instance GHC.Generics.Generic Amazonka.ConnectParticipant.DisconnectParticipant.DisconnectParticipantResponse
instance GHC.Show.Show Amazonka.ConnectParticipant.DisconnectParticipant.DisconnectParticipantResponse
instance GHC.Read.Read Amazonka.ConnectParticipant.DisconnectParticipant.DisconnectParticipantResponse
instance GHC.Classes.Eq Amazonka.ConnectParticipant.DisconnectParticipant.DisconnectParticipantResponse
instance Amazonka.Types.AWSRequest Amazonka.ConnectParticipant.DisconnectParticipant.DisconnectParticipant
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.DisconnectParticipant.DisconnectParticipantResponse
instance Data.Hashable.Class.Hashable Amazonka.ConnectParticipant.DisconnectParticipant.DisconnectParticipant
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.DisconnectParticipant.DisconnectParticipant
instance Amazonka.Data.Headers.ToHeaders Amazonka.ConnectParticipant.DisconnectParticipant.DisconnectParticipant
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ConnectParticipant.DisconnectParticipant.DisconnectParticipant
instance Amazonka.Data.Path.ToPath Amazonka.ConnectParticipant.DisconnectParticipant.DisconnectParticipant
instance Amazonka.Data.Query.ToQuery Amazonka.ConnectParticipant.DisconnectParticipant.DisconnectParticipant


-- | Creates the participant's connection. Note that ParticipantToken is
--   used for invoking this API instead of ConnectionToken.
--   
--   The participant token is valid for the lifetime of the participant –
--   until they are part of a contact.
--   
--   The response URL for <tt>WEBSOCKET</tt> Type has a connect expiry
--   timeout of 100s. Clients must manually connect to the returned
--   websocket URL and subscribe to the desired topic.
--   
--   For chat, you need to publish the following on the established
--   websocket connection:
--   
--   <pre>
--   {"topic":"aws/subscribe","content":{"topics":["aws/chat"]}}
--   </pre>
--   
--   Upon websocket URL expiry, as specified in the response
--   ConnectionExpiry parameter, clients need to call this API again to
--   obtain a new websocket URL and perform the same steps as before.
--   
--   The Amazon Connect Participant Service APIs do not use <a>Signature
--   Version 4 authentication</a>.
module Amazonka.ConnectParticipant.CreateParticipantConnection

-- | <i>See:</i> <a>newCreateParticipantConnection</a> smart constructor.
data CreateParticipantConnection
CreateParticipantConnection' :: NonEmpty ConnectionType -> Text -> CreateParticipantConnection

-- | Type of connection information required.
[$sel:type':CreateParticipantConnection'] :: CreateParticipantConnection -> NonEmpty ConnectionType

-- | This is a header parameter.
--   
--   The Participant Token as obtained from <a>StartChatContact</a> API
--   response.
[$sel:participantToken:CreateParticipantConnection'] :: CreateParticipantConnection -> Text

-- | Create a value of <a>CreateParticipantConnection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':CreateParticipantConnection'</a>,
--   <a>createParticipantConnection_type</a> - Type of connection
--   information required.
--   
--   <a>$sel:participantToken:CreateParticipantConnection'</a>,
--   <a>createParticipantConnection_participantToken</a> - This is a header
--   parameter.
--   
--   The Participant Token as obtained from <a>StartChatContact</a> API
--   response.
newCreateParticipantConnection :: NonEmpty ConnectionType -> Text -> CreateParticipantConnection

-- | Type of connection information required.
createParticipantConnection_type :: Lens' CreateParticipantConnection (NonEmpty ConnectionType)

-- | This is a header parameter.
--   
--   The Participant Token as obtained from <a>StartChatContact</a> API
--   response.
createParticipantConnection_participantToken :: Lens' CreateParticipantConnection Text

-- | <i>See:</i> <a>newCreateParticipantConnectionResponse</a> smart
--   constructor.
data CreateParticipantConnectionResponse
CreateParticipantConnectionResponse' :: Maybe ConnectionCredentials -> Maybe Websocket -> Int -> CreateParticipantConnectionResponse

-- | Creates the participant's connection credentials. The authentication
--   token associated with the participant's connection.
[$sel:connectionCredentials:CreateParticipantConnectionResponse'] :: CreateParticipantConnectionResponse -> Maybe ConnectionCredentials

-- | Creates the participant's websocket connection.
[$sel:websocket:CreateParticipantConnectionResponse'] :: CreateParticipantConnectionResponse -> Maybe Websocket

-- | The response's http status code.
[$sel:httpStatus:CreateParticipantConnectionResponse'] :: CreateParticipantConnectionResponse -> Int

-- | Create a value of <a>CreateParticipantConnectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:connectionCredentials:CreateParticipantConnectionResponse'</a>,
--   <a>createParticipantConnectionResponse_connectionCredentials</a> -
--   Creates the participant's connection credentials. The authentication
--   token associated with the participant's connection.
--   
--   <a>$sel:websocket:CreateParticipantConnectionResponse'</a>,
--   <a>createParticipantConnectionResponse_websocket</a> - Creates the
--   participant's websocket connection.
--   
--   <a>$sel:httpStatus:CreateParticipantConnectionResponse'</a>,
--   <a>createParticipantConnectionResponse_httpStatus</a> - The response's
--   http status code.
newCreateParticipantConnectionResponse :: Int -> CreateParticipantConnectionResponse

-- | Creates the participant's connection credentials. The authentication
--   token associated with the participant's connection.
createParticipantConnectionResponse_connectionCredentials :: Lens' CreateParticipantConnectionResponse (Maybe ConnectionCredentials)

-- | Creates the participant's websocket connection.
createParticipantConnectionResponse_websocket :: Lens' CreateParticipantConnectionResponse (Maybe Websocket)

-- | The response's http status code.
createParticipantConnectionResponse_httpStatus :: Lens' CreateParticipantConnectionResponse Int
instance GHC.Generics.Generic Amazonka.ConnectParticipant.CreateParticipantConnection.CreateParticipantConnection
instance GHC.Show.Show Amazonka.ConnectParticipant.CreateParticipantConnection.CreateParticipantConnection
instance GHC.Read.Read Amazonka.ConnectParticipant.CreateParticipantConnection.CreateParticipantConnection
instance GHC.Classes.Eq Amazonka.ConnectParticipant.CreateParticipantConnection.CreateParticipantConnection
instance GHC.Generics.Generic Amazonka.ConnectParticipant.CreateParticipantConnection.CreateParticipantConnectionResponse
instance GHC.Show.Show Amazonka.ConnectParticipant.CreateParticipantConnection.CreateParticipantConnectionResponse
instance GHC.Read.Read Amazonka.ConnectParticipant.CreateParticipantConnection.CreateParticipantConnectionResponse
instance GHC.Classes.Eq Amazonka.ConnectParticipant.CreateParticipantConnection.CreateParticipantConnectionResponse
instance Amazonka.Types.AWSRequest Amazonka.ConnectParticipant.CreateParticipantConnection.CreateParticipantConnection
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.CreateParticipantConnection.CreateParticipantConnectionResponse
instance Data.Hashable.Class.Hashable Amazonka.ConnectParticipant.CreateParticipantConnection.CreateParticipantConnection
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.CreateParticipantConnection.CreateParticipantConnection
instance Amazonka.Data.Headers.ToHeaders Amazonka.ConnectParticipant.CreateParticipantConnection.CreateParticipantConnection
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ConnectParticipant.CreateParticipantConnection.CreateParticipantConnection
instance Amazonka.Data.Path.ToPath Amazonka.ConnectParticipant.CreateParticipantConnection.CreateParticipantConnection
instance Amazonka.Data.Query.ToQuery Amazonka.ConnectParticipant.CreateParticipantConnection.CreateParticipantConnection


-- | Allows you to confirm that the attachment has been uploaded using the
--   pre-signed URL provided in StartAttachmentUpload API.
module Amazonka.ConnectParticipant.CompleteAttachmentUpload

-- | <i>See:</i> <a>newCompleteAttachmentUpload</a> smart constructor.
data CompleteAttachmentUpload
CompleteAttachmentUpload' :: NonEmpty Text -> Text -> Text -> CompleteAttachmentUpload

-- | A list of unique identifiers for the attachments.
[$sel:attachmentIds:CompleteAttachmentUpload'] :: CompleteAttachmentUpload -> NonEmpty Text

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientToken:CompleteAttachmentUpload'] :: CompleteAttachmentUpload -> Text

-- | The authentication token associated with the participant's connection.
[$sel:connectionToken:CompleteAttachmentUpload'] :: CompleteAttachmentUpload -> Text

-- | Create a value of <a>CompleteAttachmentUpload</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachmentIds:CompleteAttachmentUpload'</a>,
--   <a>completeAttachmentUpload_attachmentIds</a> - A list of unique
--   identifiers for the attachments.
--   
--   <a>$sel:clientToken:CompleteAttachmentUpload'</a>,
--   <a>completeAttachmentUpload_clientToken</a> - A unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:connectionToken:CompleteAttachmentUpload'</a>,
--   <a>completeAttachmentUpload_connectionToken</a> - The authentication
--   token associated with the participant's connection.
newCompleteAttachmentUpload :: NonEmpty Text -> Text -> Text -> CompleteAttachmentUpload

-- | A list of unique identifiers for the attachments.
completeAttachmentUpload_attachmentIds :: Lens' CompleteAttachmentUpload (NonEmpty Text)

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
completeAttachmentUpload_clientToken :: Lens' CompleteAttachmentUpload Text

-- | The authentication token associated with the participant's connection.
completeAttachmentUpload_connectionToken :: Lens' CompleteAttachmentUpload Text

-- | <i>See:</i> <a>newCompleteAttachmentUploadResponse</a> smart
--   constructor.
data CompleteAttachmentUploadResponse
CompleteAttachmentUploadResponse' :: Int -> CompleteAttachmentUploadResponse

-- | The response's http status code.
[$sel:httpStatus:CompleteAttachmentUploadResponse'] :: CompleteAttachmentUploadResponse -> Int

-- | Create a value of <a>CompleteAttachmentUploadResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CompleteAttachmentUploadResponse'</a>,
--   <a>completeAttachmentUploadResponse_httpStatus</a> - The response's
--   http status code.
newCompleteAttachmentUploadResponse :: Int -> CompleteAttachmentUploadResponse

-- | The response's http status code.
completeAttachmentUploadResponse_httpStatus :: Lens' CompleteAttachmentUploadResponse Int
instance GHC.Generics.Generic Amazonka.ConnectParticipant.CompleteAttachmentUpload.CompleteAttachmentUpload
instance GHC.Show.Show Amazonka.ConnectParticipant.CompleteAttachmentUpload.CompleteAttachmentUpload
instance GHC.Read.Read Amazonka.ConnectParticipant.CompleteAttachmentUpload.CompleteAttachmentUpload
instance GHC.Classes.Eq Amazonka.ConnectParticipant.CompleteAttachmentUpload.CompleteAttachmentUpload
instance GHC.Generics.Generic Amazonka.ConnectParticipant.CompleteAttachmentUpload.CompleteAttachmentUploadResponse
instance GHC.Show.Show Amazonka.ConnectParticipant.CompleteAttachmentUpload.CompleteAttachmentUploadResponse
instance GHC.Read.Read Amazonka.ConnectParticipant.CompleteAttachmentUpload.CompleteAttachmentUploadResponse
instance GHC.Classes.Eq Amazonka.ConnectParticipant.CompleteAttachmentUpload.CompleteAttachmentUploadResponse
instance Amazonka.Types.AWSRequest Amazonka.ConnectParticipant.CompleteAttachmentUpload.CompleteAttachmentUpload
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.CompleteAttachmentUpload.CompleteAttachmentUploadResponse
instance Data.Hashable.Class.Hashable Amazonka.ConnectParticipant.CompleteAttachmentUpload.CompleteAttachmentUpload
instance Control.DeepSeq.NFData Amazonka.ConnectParticipant.CompleteAttachmentUpload.CompleteAttachmentUpload
instance Amazonka.Data.Headers.ToHeaders Amazonka.ConnectParticipant.CompleteAttachmentUpload.CompleteAttachmentUpload
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ConnectParticipant.CompleteAttachmentUpload.CompleteAttachmentUpload
instance Amazonka.Data.Path.ToPath Amazonka.ConnectParticipant.CompleteAttachmentUpload.CompleteAttachmentUpload
instance Amazonka.Data.Query.ToQuery Amazonka.ConnectParticipant.CompleteAttachmentUpload.CompleteAttachmentUpload


module Amazonka.ConnectParticipant.Lens

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
sendMessage_clientToken :: Lens' SendMessage (Maybe Text)

-- | The type of the content. Supported types are text/plain.
sendMessage_contentType :: Lens' SendMessage Text

-- | The content of the message.
sendMessage_content :: Lens' SendMessage Text

-- | The authentication token associated with the connection.
sendMessage_connectionToken :: Lens' SendMessage Text

-- | The time when the message was sent.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
sendMessageResponse_absoluteTime :: Lens' SendMessageResponse (Maybe Text)

-- | The ID of the message.
sendMessageResponse_id :: Lens' SendMessageResponse (Maybe Text)

-- | The response's http status code.
sendMessageResponse_httpStatus :: Lens' SendMessageResponse Int

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
disconnectParticipant_clientToken :: Lens' DisconnectParticipant (Maybe Text)

-- | The authentication token associated with the participant's connection.
disconnectParticipant_connectionToken :: Lens' DisconnectParticipant Text

-- | The response's http status code.
disconnectParticipantResponse_httpStatus :: Lens' DisconnectParticipantResponse Int

-- | A list of unique identifiers for the attachments.
completeAttachmentUpload_attachmentIds :: Lens' CompleteAttachmentUpload (NonEmpty Text)

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
completeAttachmentUpload_clientToken :: Lens' CompleteAttachmentUpload Text

-- | The authentication token associated with the participant's connection.
completeAttachmentUpload_connectionToken :: Lens' CompleteAttachmentUpload Text

-- | The response's http status code.
completeAttachmentUploadResponse_httpStatus :: Lens' CompleteAttachmentUploadResponse Int

-- | A unique identifier for the attachment.
getAttachment_attachmentId :: Lens' GetAttachment Text

-- | The authentication token associated with the participant's connection.
getAttachment_connectionToken :: Lens' GetAttachment Text

-- | The expiration time of the URL in ISO timestamp. It's specified in ISO
--   8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
--   2019-11-08T02:41:28.172Z.
getAttachmentResponse_urlExpiry :: Lens' GetAttachmentResponse (Maybe Text)

-- | The pre-signed URL using which file would be downloaded from Amazon S3
--   by the API caller.
getAttachmentResponse_url :: Lens' GetAttachmentResponse (Maybe Text)

-- | The response's http status code.
getAttachmentResponse_httpStatus :: Lens' GetAttachmentResponse Int

-- | Describes the MIME file type of the attachment. For a list of
--   supported file types, see <a>Feature specifications</a> in the
--   <i>Amazon Connect Administrator Guide</i>.
startAttachmentUpload_contentType :: Lens' StartAttachmentUpload Text

-- | The size of the attachment in bytes.
startAttachmentUpload_attachmentSizeInBytes :: Lens' StartAttachmentUpload Natural

-- | A case-sensitive name of the attachment being uploaded.
startAttachmentUpload_attachmentName :: Lens' StartAttachmentUpload Text

-- | A unique case sensitive identifier to support idempotency of request.
startAttachmentUpload_clientToken :: Lens' StartAttachmentUpload Text

-- | The authentication token associated with the participant's connection.
startAttachmentUpload_connectionToken :: Lens' StartAttachmentUpload Text

-- | A unique identifier for the attachment.
startAttachmentUploadResponse_attachmentId :: Lens' StartAttachmentUploadResponse (Maybe Text)

-- | Fields to be used while uploading the attachment.
startAttachmentUploadResponse_uploadMetadata :: Lens' StartAttachmentUploadResponse (Maybe UploadMetadata)

-- | The response's http status code.
startAttachmentUploadResponse_httpStatus :: Lens' StartAttachmentUploadResponse Int

-- | Type of connection information required.
createParticipantConnection_type :: Lens' CreateParticipantConnection (NonEmpty ConnectionType)

-- | This is a header parameter.
--   
--   The Participant Token as obtained from <a>StartChatContact</a> API
--   response.
createParticipantConnection_participantToken :: Lens' CreateParticipantConnection Text

-- | Creates the participant's connection credentials. The authentication
--   token associated with the participant's connection.
createParticipantConnectionResponse_connectionCredentials :: Lens' CreateParticipantConnectionResponse (Maybe ConnectionCredentials)

-- | Creates the participant's websocket connection.
createParticipantConnectionResponse_websocket :: Lens' CreateParticipantConnectionResponse (Maybe Websocket)

-- | The response's http status code.
createParticipantConnectionResponse_httpStatus :: Lens' CreateParticipantConnectionResponse Int

-- | The direction from StartPosition from which to retrieve message.
--   Default: BACKWARD when no StartPosition is provided, FORWARD with
--   StartPosition.
getTranscript_scanDirection :: Lens' GetTranscript (Maybe ScanDirection)

-- | The pagination token. Use the value returned previously in the next
--   subsequent request to retrieve the next set of results.
getTranscript_nextToken :: Lens' GetTranscript (Maybe Text)

-- | The sort order for the records. Default: DESCENDING.
getTranscript_sortOrder :: Lens' GetTranscript (Maybe SortKey)

-- | The contactId from the current contact chain for which transcript is
--   needed.
getTranscript_contactId :: Lens' GetTranscript (Maybe Text)

-- | The maximum number of results to return in the page. Default: 10.
getTranscript_maxResults :: Lens' GetTranscript (Maybe Natural)

-- | A filtering option for where to start.
getTranscript_startPosition :: Lens' GetTranscript (Maybe StartPosition)

-- | The authentication token associated with the participant's connection.
getTranscript_connectionToken :: Lens' GetTranscript Text

-- | The pagination token. Use the value returned previously in the next
--   subsequent request to retrieve the next set of results.
getTranscriptResponse_nextToken :: Lens' GetTranscriptResponse (Maybe Text)

-- | The initial contact ID for the contact.
getTranscriptResponse_initialContactId :: Lens' GetTranscriptResponse (Maybe Text)

-- | The list of messages in the session.
getTranscriptResponse_transcript :: Lens' GetTranscriptResponse (Maybe [Item])

-- | The response's http status code.
getTranscriptResponse_httpStatus :: Lens' GetTranscriptResponse Int

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
sendEvent_clientToken :: Lens' SendEvent (Maybe Text)

-- | The content of the event to be sent (for example, message text). This
--   is not yet supported.
sendEvent_content :: Lens' SendEvent (Maybe Text)

-- | The content type of the request. Supported types are:
--   
--   <ul>
--   <li>application/vnd.amazonaws.connect.event.typing</li>
--   
--   <li>application/vnd.amazonaws.connect.event.connection.acknowledged</li>
--   </ul>
sendEvent_contentType :: Lens' SendEvent Text

-- | The authentication token associated with the participant's connection.
sendEvent_connectionToken :: Lens' SendEvent Text

-- | The time when the event was sent.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
sendEventResponse_absoluteTime :: Lens' SendEventResponse (Maybe Text)

-- | The ID of the response.
sendEventResponse_id :: Lens' SendEventResponse (Maybe Text)

-- | The response's http status code.
sendEventResponse_httpStatus :: Lens' SendEventResponse Int

-- | Status of the attachment.
attachmentItem_status :: Lens' AttachmentItem (Maybe ArtifactStatus)

-- | A case-sensitive name of the attachment being uploaded.
attachmentItem_attachmentName :: Lens' AttachmentItem (Maybe Text)

-- | A unique identifier for the attachment.
attachmentItem_attachmentId :: Lens' AttachmentItem (Maybe Text)

-- | Describes the MIME file type of the attachment. For a list of
--   supported file types, see <a>Feature specifications</a> in the
--   <i>Amazon Connect Administrator Guide</i>.
attachmentItem_contentType :: Lens' AttachmentItem (Maybe Text)

-- | The expiration of the token.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
connectionCredentials_expiry :: Lens' ConnectionCredentials (Maybe Text)

-- | The connection token.
connectionCredentials_connectionToken :: Lens' ConnectionCredentials (Maybe Text)

-- | The ID of the sender in the session.
item_participantId :: Lens' Item (Maybe Text)

-- | The time when the message or event was sent.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
item_absoluteTime :: Lens' Item (Maybe Text)

-- | Provides information about the attachments.
item_attachments :: Lens' Item (Maybe [AttachmentItem])

-- | The role of the sender. For example, is it a customer, agent, or
--   system.
item_participantRole :: Lens' Item (Maybe ParticipantRole)

-- | The content of the message or event.
item_content :: Lens' Item (Maybe Text)

-- | The ID of the item.
item_id :: Lens' Item (Maybe Text)

-- | The chat display name of the sender.
item_displayName :: Lens' Item (Maybe Text)

-- | Type of the item: message or event.
item_type :: Lens' Item (Maybe ChatItemType)

-- | The type of content of the item.
item_contentType :: Lens' Item (Maybe Text)

-- | The time in ISO format where to start.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
startPosition_absoluteTime :: Lens' StartPosition (Maybe Text)

-- | The ID of the message or event where to start.
startPosition_id :: Lens' StartPosition (Maybe Text)

-- | The start position of the most recent message where you want to start.
startPosition_mostRecent :: Lens' StartPosition (Maybe Natural)

-- | The expiration time of the URL in ISO timestamp. It's specified in ISO
--   8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
--   2019-11-08T02:41:28.172Z.
uploadMetadata_urlExpiry :: Lens' UploadMetadata (Maybe Text)

-- | The headers to be provided while uploading the file to the URL.
uploadMetadata_headersToInclude :: Lens' UploadMetadata (Maybe (HashMap Text Text))

-- | The pre-signed URL using which file would be downloaded from Amazon S3
--   by the API caller.
uploadMetadata_url :: Lens' UploadMetadata (Maybe Text)

-- | The URL of the websocket.
websocket_url :: Lens' Websocket (Maybe Text)

-- | The URL expiration timestamp in ISO date format.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
websocket_connectionExpiry :: Lens' Websocket (Maybe Text)


module Amazonka.ConnectParticipant.Waiters


-- | Derived from API version <tt>2018-09-07</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Connect is a cloud-based contact center solution that makes it
--   easy to set up and manage a customer contact center and provide
--   reliable customer engagement at any scale.
--   
--   Amazon Connect enables customer contacts through voice or chat.
--   
--   The APIs described here are used by chat participants, such as agents
--   and customers.
module Amazonka.ConnectParticipant

-- | API version <tt>2018-09-07</tt> of the Amazon Connect Participant
--   Service SDK configuration.
defaultService :: Service

-- | The input fails to satisfy the constraints specified by Amazon
--   Connect.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You do not have sufficient access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An attachment with that identifier is already being uploaded.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of attachments per contact exceeds the quota.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied due to request throttling.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception occurs when there is an internal failure in the Amazon
--   Connect service.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newSendMessage</a> smart constructor.
data SendMessage
SendMessage' :: Maybe Text -> Text -> Text -> Text -> SendMessage

-- | Create a value of <a>SendMessage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:SendMessage'</a>, <a>sendMessage_clientToken</a> -
--   A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
--   
--   <a>$sel:contentType:SendMessage'</a>, <a>sendMessage_contentType</a> -
--   The type of the content. Supported types are text/plain.
--   
--   <a>$sel:content:SendMessage'</a>, <a>sendMessage_content</a> - The
--   content of the message.
--   
--   <a>$sel:connectionToken:SendMessage'</a>,
--   <a>sendMessage_connectionToken</a> - The authentication token
--   associated with the connection.
newSendMessage :: Text -> Text -> Text -> SendMessage

-- | <i>See:</i> <a>newSendMessageResponse</a> smart constructor.
data SendMessageResponse
SendMessageResponse' :: Maybe Text -> Maybe Text -> Int -> SendMessageResponse

-- | Create a value of <a>SendMessageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:absoluteTime:SendMessageResponse'</a>,
--   <a>sendMessageResponse_absoluteTime</a> - The time when the message
--   was sent.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
--   
--   <a>$sel:id:SendMessageResponse'</a>, <a>sendMessageResponse_id</a> -
--   The ID of the message.
--   
--   <a>$sel:httpStatus:SendMessageResponse'</a>,
--   <a>sendMessageResponse_httpStatus</a> - The response's http status
--   code.
newSendMessageResponse :: Int -> SendMessageResponse

-- | <i>See:</i> <a>newDisconnectParticipant</a> smart constructor.
data DisconnectParticipant
DisconnectParticipant' :: Maybe Text -> Text -> DisconnectParticipant

-- | Create a value of <a>DisconnectParticipant</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:DisconnectParticipant'</a>,
--   <a>disconnectParticipant_clientToken</a> - A unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:connectionToken:DisconnectParticipant'</a>,
--   <a>disconnectParticipant_connectionToken</a> - The authentication
--   token associated with the participant's connection.
newDisconnectParticipant :: Text -> DisconnectParticipant

-- | <i>See:</i> <a>newDisconnectParticipantResponse</a> smart constructor.
data DisconnectParticipantResponse
DisconnectParticipantResponse' :: Int -> DisconnectParticipantResponse

-- | Create a value of <a>DisconnectParticipantResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DisconnectParticipantResponse'</a>,
--   <a>disconnectParticipantResponse_httpStatus</a> - The response's http
--   status code.
newDisconnectParticipantResponse :: Int -> DisconnectParticipantResponse

-- | <i>See:</i> <a>newCompleteAttachmentUpload</a> smart constructor.
data CompleteAttachmentUpload
CompleteAttachmentUpload' :: NonEmpty Text -> Text -> Text -> CompleteAttachmentUpload

-- | Create a value of <a>CompleteAttachmentUpload</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachmentIds:CompleteAttachmentUpload'</a>,
--   <a>completeAttachmentUpload_attachmentIds</a> - A list of unique
--   identifiers for the attachments.
--   
--   <a>$sel:clientToken:CompleteAttachmentUpload'</a>,
--   <a>completeAttachmentUpload_clientToken</a> - A unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:connectionToken:CompleteAttachmentUpload'</a>,
--   <a>completeAttachmentUpload_connectionToken</a> - The authentication
--   token associated with the participant's connection.
newCompleteAttachmentUpload :: NonEmpty Text -> Text -> Text -> CompleteAttachmentUpload

-- | <i>See:</i> <a>newCompleteAttachmentUploadResponse</a> smart
--   constructor.
data CompleteAttachmentUploadResponse
CompleteAttachmentUploadResponse' :: Int -> CompleteAttachmentUploadResponse

-- | Create a value of <a>CompleteAttachmentUploadResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CompleteAttachmentUploadResponse'</a>,
--   <a>completeAttachmentUploadResponse_httpStatus</a> - The response's
--   http status code.
newCompleteAttachmentUploadResponse :: Int -> CompleteAttachmentUploadResponse

-- | <i>See:</i> <a>newGetAttachment</a> smart constructor.
data GetAttachment
GetAttachment' :: Text -> Text -> GetAttachment

-- | Create a value of <a>GetAttachment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachmentId:GetAttachment'</a>,
--   <a>getAttachment_attachmentId</a> - A unique identifier for the
--   attachment.
--   
--   <a>$sel:connectionToken:GetAttachment'</a>,
--   <a>getAttachment_connectionToken</a> - The authentication token
--   associated with the participant's connection.
newGetAttachment :: Text -> Text -> GetAttachment

-- | <i>See:</i> <a>newGetAttachmentResponse</a> smart constructor.
data GetAttachmentResponse
GetAttachmentResponse' :: Maybe Text -> Maybe Text -> Int -> GetAttachmentResponse

-- | Create a value of <a>GetAttachmentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:urlExpiry:GetAttachmentResponse'</a>,
--   <a>getAttachmentResponse_urlExpiry</a> - The expiration time of the
--   URL in ISO timestamp. It's specified in ISO 8601 format:
--   yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.
--   
--   <a>$sel:url:GetAttachmentResponse'</a>,
--   <a>getAttachmentResponse_url</a> - The pre-signed URL using which file
--   would be downloaded from Amazon S3 by the API caller.
--   
--   <a>$sel:httpStatus:GetAttachmentResponse'</a>,
--   <a>getAttachmentResponse_httpStatus</a> - The response's http status
--   code.
newGetAttachmentResponse :: Int -> GetAttachmentResponse

-- | <i>See:</i> <a>newStartAttachmentUpload</a> smart constructor.
data StartAttachmentUpload
StartAttachmentUpload' :: Text -> Natural -> Text -> Text -> Text -> StartAttachmentUpload

-- | Create a value of <a>StartAttachmentUpload</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentType:StartAttachmentUpload'</a>,
--   <a>startAttachmentUpload_contentType</a> - Describes the MIME file
--   type of the attachment. For a list of supported file types, see
--   <a>Feature specifications</a> in the <i>Amazon Connect Administrator
--   Guide</i>.
--   
--   <a>$sel:attachmentSizeInBytes:StartAttachmentUpload'</a>,
--   <a>startAttachmentUpload_attachmentSizeInBytes</a> - The size of the
--   attachment in bytes.
--   
--   <a>$sel:attachmentName:StartAttachmentUpload'</a>,
--   <a>startAttachmentUpload_attachmentName</a> - A case-sensitive name of
--   the attachment being uploaded.
--   
--   <a>$sel:clientToken:StartAttachmentUpload'</a>,
--   <a>startAttachmentUpload_clientToken</a> - A unique case sensitive
--   identifier to support idempotency of request.
--   
--   <a>$sel:connectionToken:StartAttachmentUpload'</a>,
--   <a>startAttachmentUpload_connectionToken</a> - The authentication
--   token associated with the participant's connection.
newStartAttachmentUpload :: Text -> Natural -> Text -> Text -> Text -> StartAttachmentUpload

-- | <i>See:</i> <a>newStartAttachmentUploadResponse</a> smart constructor.
data StartAttachmentUploadResponse
StartAttachmentUploadResponse' :: Maybe Text -> Maybe UploadMetadata -> Int -> StartAttachmentUploadResponse

-- | Create a value of <a>StartAttachmentUploadResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attachmentId:StartAttachmentUploadResponse'</a>,
--   <a>startAttachmentUploadResponse_attachmentId</a> - A unique
--   identifier for the attachment.
--   
--   <a>$sel:uploadMetadata:StartAttachmentUploadResponse'</a>,
--   <a>startAttachmentUploadResponse_uploadMetadata</a> - Fields to be
--   used while uploading the attachment.
--   
--   <a>$sel:httpStatus:StartAttachmentUploadResponse'</a>,
--   <a>startAttachmentUploadResponse_httpStatus</a> - The response's http
--   status code.
newStartAttachmentUploadResponse :: Int -> StartAttachmentUploadResponse

-- | <i>See:</i> <a>newCreateParticipantConnection</a> smart constructor.
data CreateParticipantConnection
CreateParticipantConnection' :: NonEmpty ConnectionType -> Text -> CreateParticipantConnection

-- | Create a value of <a>CreateParticipantConnection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':CreateParticipantConnection'</a>,
--   <a>createParticipantConnection_type</a> - Type of connection
--   information required.
--   
--   <a>$sel:participantToken:CreateParticipantConnection'</a>,
--   <a>createParticipantConnection_participantToken</a> - This is a header
--   parameter.
--   
--   The Participant Token as obtained from <a>StartChatContact</a> API
--   response.
newCreateParticipantConnection :: NonEmpty ConnectionType -> Text -> CreateParticipantConnection

-- | <i>See:</i> <a>newCreateParticipantConnectionResponse</a> smart
--   constructor.
data CreateParticipantConnectionResponse
CreateParticipantConnectionResponse' :: Maybe ConnectionCredentials -> Maybe Websocket -> Int -> CreateParticipantConnectionResponse

-- | Create a value of <a>CreateParticipantConnectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:connectionCredentials:CreateParticipantConnectionResponse'</a>,
--   <a>createParticipantConnectionResponse_connectionCredentials</a> -
--   Creates the participant's connection credentials. The authentication
--   token associated with the participant's connection.
--   
--   <a>$sel:websocket:CreateParticipantConnectionResponse'</a>,
--   <a>createParticipantConnectionResponse_websocket</a> - Creates the
--   participant's websocket connection.
--   
--   <a>$sel:httpStatus:CreateParticipantConnectionResponse'</a>,
--   <a>createParticipantConnectionResponse_httpStatus</a> - The response's
--   http status code.
newCreateParticipantConnectionResponse :: Int -> CreateParticipantConnectionResponse

-- | <i>See:</i> <a>newGetTranscript</a> smart constructor.
data GetTranscript
GetTranscript' :: Maybe ScanDirection -> Maybe Text -> Maybe SortKey -> Maybe Text -> Maybe Natural -> Maybe StartPosition -> Text -> GetTranscript

-- | Create a value of <a>GetTranscript</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scanDirection:GetTranscript'</a>,
--   <a>getTranscript_scanDirection</a> - The direction from StartPosition
--   from which to retrieve message. Default: BACKWARD when no
--   StartPosition is provided, FORWARD with StartPosition.
--   
--   <a>$sel:nextToken:GetTranscript'</a>, <a>getTranscript_nextToken</a> -
--   The pagination token. Use the value returned previously in the next
--   subsequent request to retrieve the next set of results.
--   
--   <a>$sel:sortOrder:GetTranscript'</a>, <a>getTranscript_sortOrder</a> -
--   The sort order for the records. Default: DESCENDING.
--   
--   <a>$sel:contactId:GetTranscript'</a>, <a>getTranscript_contactId</a> -
--   The contactId from the current contact chain for which transcript is
--   needed.
--   
--   <a>$sel:maxResults:GetTranscript'</a>, <a>getTranscript_maxResults</a>
--   - The maximum number of results to return in the page. Default: 10.
--   
--   <a>$sel:startPosition:GetTranscript'</a>,
--   <a>getTranscript_startPosition</a> - A filtering option for where to
--   start.
--   
--   <a>$sel:connectionToken:GetTranscript'</a>,
--   <a>getTranscript_connectionToken</a> - The authentication token
--   associated with the participant's connection.
newGetTranscript :: Text -> GetTranscript

-- | <i>See:</i> <a>newGetTranscriptResponse</a> smart constructor.
data GetTranscriptResponse
GetTranscriptResponse' :: Maybe Text -> Maybe Text -> Maybe [Item] -> Int -> GetTranscriptResponse

-- | Create a value of <a>GetTranscriptResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetTranscript'</a>,
--   <a>getTranscriptResponse_nextToken</a> - The pagination token. Use the
--   value returned previously in the next subsequent request to retrieve
--   the next set of results.
--   
--   <a>$sel:initialContactId:GetTranscriptResponse'</a>,
--   <a>getTranscriptResponse_initialContactId</a> - The initial contact ID
--   for the contact.
--   
--   <a>$sel:transcript:GetTranscriptResponse'</a>,
--   <a>getTranscriptResponse_transcript</a> - The list of messages in the
--   session.
--   
--   <a>$sel:httpStatus:GetTranscriptResponse'</a>,
--   <a>getTranscriptResponse_httpStatus</a> - The response's http status
--   code.
newGetTranscriptResponse :: Int -> GetTranscriptResponse

-- | <i>See:</i> <a>newSendEvent</a> smart constructor.
data SendEvent
SendEvent' :: Maybe Text -> Maybe Text -> Text -> Text -> SendEvent

-- | Create a value of <a>SendEvent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:SendEvent'</a>, <a>sendEvent_clientToken</a> - A
--   unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
--   
--   <a>$sel:content:SendEvent'</a>, <a>sendEvent_content</a> - The content
--   of the event to be sent (for example, message text). This is not yet
--   supported.
--   
--   <a>$sel:contentType:SendEvent'</a>, <a>sendEvent_contentType</a> - The
--   content type of the request. Supported types are:
--   
--   <ul>
--   <li>application/vnd.amazonaws.connect.event.typing</li>
--   
--   <li>application/vnd.amazonaws.connect.event.connection.acknowledged</li>
--   </ul>
--   
--   <a>$sel:connectionToken:SendEvent'</a>,
--   <a>sendEvent_connectionToken</a> - The authentication token associated
--   with the participant's connection.
newSendEvent :: Text -> Text -> SendEvent

-- | <i>See:</i> <a>newSendEventResponse</a> smart constructor.
data SendEventResponse
SendEventResponse' :: Maybe Text -> Maybe Text -> Int -> SendEventResponse

-- | Create a value of <a>SendEventResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:absoluteTime:SendEventResponse'</a>,
--   <a>sendEventResponse_absoluteTime</a> - The time when the event was
--   sent.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
--   
--   <a>$sel:id:SendEventResponse'</a>, <a>sendEventResponse_id</a> - The
--   ID of the response.
--   
--   <a>$sel:httpStatus:SendEventResponse'</a>,
--   <a>sendEventResponse_httpStatus</a> - The response's http status code.
newSendEventResponse :: Int -> SendEventResponse
newtype ArtifactStatus
ArtifactStatus' :: Text -> ArtifactStatus
[fromArtifactStatus] :: ArtifactStatus -> Text
pattern ArtifactStatus_APPROVED :: ArtifactStatus
pattern ArtifactStatus_IN_PROGRESS :: ArtifactStatus
pattern ArtifactStatus_REJECTED :: ArtifactStatus
newtype ChatItemType
ChatItemType' :: Text -> ChatItemType
[fromChatItemType] :: ChatItemType -> Text
pattern ChatItemType_ATTACHMENT :: ChatItemType
pattern ChatItemType_CHAT_ENDED :: ChatItemType
pattern ChatItemType_CONNECTION_ACK :: ChatItemType
pattern ChatItemType_EVENT :: ChatItemType
pattern ChatItemType_MESSAGE :: ChatItemType
pattern ChatItemType_PARTICIPANT_JOINED :: ChatItemType
pattern ChatItemType_PARTICIPANT_LEFT :: ChatItemType
pattern ChatItemType_TRANSFER_FAILED :: ChatItemType
pattern ChatItemType_TRANSFER_SUCCEEDED :: ChatItemType
pattern ChatItemType_TYPING :: ChatItemType
newtype ConnectionType
ConnectionType' :: Text -> ConnectionType
[fromConnectionType] :: ConnectionType -> Text
pattern ConnectionType_CONNECTION_CREDENTIALS :: ConnectionType
pattern ConnectionType_WEBSOCKET :: ConnectionType
newtype ParticipantRole
ParticipantRole' :: Text -> ParticipantRole
[fromParticipantRole] :: ParticipantRole -> Text
pattern ParticipantRole_AGENT :: ParticipantRole
pattern ParticipantRole_CUSTOMER :: ParticipantRole
pattern ParticipantRole_SYSTEM :: ParticipantRole
newtype ScanDirection
ScanDirection' :: Text -> ScanDirection
[fromScanDirection] :: ScanDirection -> Text
pattern ScanDirection_BACKWARD :: ScanDirection
pattern ScanDirection_FORWARD :: ScanDirection
newtype SortKey
SortKey' :: Text -> SortKey
[fromSortKey] :: SortKey -> Text
pattern SortKey_ASCENDING :: SortKey
pattern SortKey_DESCENDING :: SortKey

-- | The case-insensitive input to indicate standard MIME type that
--   describes the format of the file that will be uploaded.
--   
--   <i>See:</i> <a>newAttachmentItem</a> smart constructor.
data AttachmentItem
AttachmentItem' :: Maybe ArtifactStatus -> Maybe Text -> Maybe Text -> Maybe Text -> AttachmentItem

-- | Create a value of <a>AttachmentItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:AttachmentItem'</a>, <a>attachmentItem_status</a> -
--   Status of the attachment.
--   
--   <a>$sel:attachmentName:AttachmentItem'</a>,
--   <a>attachmentItem_attachmentName</a> - A case-sensitive name of the
--   attachment being uploaded.
--   
--   <a>$sel:attachmentId:AttachmentItem'</a>,
--   <a>attachmentItem_attachmentId</a> - A unique identifier for the
--   attachment.
--   
--   <a>$sel:contentType:AttachmentItem'</a>,
--   <a>attachmentItem_contentType</a> - Describes the MIME file type of
--   the attachment. For a list of supported file types, see <a>Feature
--   specifications</a> in the <i>Amazon Connect Administrator Guide</i>.
newAttachmentItem :: AttachmentItem

-- | Connection credentials.
--   
--   <i>See:</i> <a>newConnectionCredentials</a> smart constructor.
data ConnectionCredentials
ConnectionCredentials' :: Maybe Text -> Maybe Text -> ConnectionCredentials

-- | Create a value of <a>ConnectionCredentials</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expiry:ConnectionCredentials'</a>,
--   <a>connectionCredentials_expiry</a> - The expiration of the token.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
--   
--   <a>$sel:connectionToken:ConnectionCredentials'</a>,
--   <a>connectionCredentials_connectionToken</a> - The connection token.
newConnectionCredentials :: ConnectionCredentials

-- | An item - message or event - that has been sent.
--   
--   <i>See:</i> <a>newItem</a> smart constructor.
data Item
Item' :: Maybe Text -> Maybe Text -> Maybe [AttachmentItem] -> Maybe ParticipantRole -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ChatItemType -> Maybe Text -> Item

-- | Create a value of <a>Item</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:participantId:Item'</a>, <a>item_participantId</a> - The ID of
--   the sender in the session.
--   
--   <a>$sel:absoluteTime:Item'</a>, <a>item_absoluteTime</a> - The time
--   when the message or event was sent.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
--   
--   <a>$sel:attachments:Item'</a>, <a>item_attachments</a> - Provides
--   information about the attachments.
--   
--   <a>$sel:participantRole:Item'</a>, <a>item_participantRole</a> - The
--   role of the sender. For example, is it a customer, agent, or system.
--   
--   <a>$sel:content:Item'</a>, <a>item_content</a> - The content of the
--   message or event.
--   
--   <a>$sel:id:Item'</a>, <a>item_id</a> - The ID of the item.
--   
--   <a>$sel:displayName:Item'</a>, <a>item_displayName</a> - The chat
--   display name of the sender.
--   
--   <a>$sel:type':Item'</a>, <a>item_type</a> - Type of the item: message
--   or event.
--   
--   <a>$sel:contentType:Item'</a>, <a>item_contentType</a> - The type of
--   content of the item.
newItem :: Item

-- | A filtering option for where to start. For example, if you sent 100
--   messages, start with message 50.
--   
--   <i>See:</i> <a>newStartPosition</a> smart constructor.
data StartPosition
StartPosition' :: Maybe Text -> Maybe Text -> Maybe Natural -> StartPosition

-- | Create a value of <a>StartPosition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:absoluteTime:StartPosition'</a>,
--   <a>startPosition_absoluteTime</a> - The time in ISO format where to
--   start.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
--   
--   <a>$sel:id:StartPosition'</a>, <a>startPosition_id</a> - The ID of the
--   message or event where to start.
--   
--   <a>$sel:mostRecent:StartPosition'</a>, <a>startPosition_mostRecent</a>
--   - The start position of the most recent message where you want to
--   start.
newStartPosition :: StartPosition

-- | Fields to be used while uploading the attachment.
--   
--   <i>See:</i> <a>newUploadMetadata</a> smart constructor.
data UploadMetadata
UploadMetadata' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> UploadMetadata

-- | Create a value of <a>UploadMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:urlExpiry:UploadMetadata'</a>, <a>uploadMetadata_urlExpiry</a>
--   - The expiration time of the URL in ISO timestamp. It's specified in
--   ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
--   2019-11-08T02:41:28.172Z.
--   
--   <a>$sel:headersToInclude:UploadMetadata'</a>,
--   <a>uploadMetadata_headersToInclude</a> - The headers to be provided
--   while uploading the file to the URL.
--   
--   <a>$sel:url:UploadMetadata'</a>, <a>uploadMetadata_url</a> - The
--   pre-signed URL using which file would be downloaded from Amazon S3 by
--   the API caller.
newUploadMetadata :: UploadMetadata

-- | The websocket for the participant's connection.
--   
--   <i>See:</i> <a>newWebsocket</a> smart constructor.
data Websocket
Websocket' :: Maybe Text -> Maybe Text -> Websocket

-- | Create a value of <a>Websocket</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:url:Websocket'</a>, <a>websocket_url</a> - The URL of the
--   websocket.
--   
--   <a>$sel:connectionExpiry:Websocket'</a>,
--   <a>websocket_connectionExpiry</a> - The URL expiration timestamp in
--   ISO date format.
--   
--   It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For
--   example, 2019-11-08T02:41:28.172Z.
newWebsocket :: Websocket
