-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-migrationhub-configZSamazonka-migrationhub-config
@version 2.0


module Amazonka.MigrationHubConfig.Types.TargetType
newtype TargetType
TargetType' :: Text -> TargetType
[fromTargetType] :: TargetType -> Text
pattern TargetType_ACCOUNT :: TargetType
instance Amazonka.Data.XML.ToXML Amazonka.MigrationHubConfig.Types.TargetType.TargetType
instance Amazonka.Data.XML.FromXML Amazonka.MigrationHubConfig.Types.TargetType.TargetType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MigrationHubConfig.Types.TargetType.TargetType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MigrationHubConfig.Types.TargetType.TargetType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MigrationHubConfig.Types.TargetType.TargetType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MigrationHubConfig.Types.TargetType.TargetType
instance Amazonka.Data.Query.ToQuery Amazonka.MigrationHubConfig.Types.TargetType.TargetType
instance Amazonka.Data.Headers.ToHeader Amazonka.MigrationHubConfig.Types.TargetType.TargetType
instance Amazonka.Data.Log.ToLog Amazonka.MigrationHubConfig.Types.TargetType.TargetType
instance Amazonka.Data.ByteString.ToByteString Amazonka.MigrationHubConfig.Types.TargetType.TargetType
instance Amazonka.Data.Text.ToText Amazonka.MigrationHubConfig.Types.TargetType.TargetType
instance Amazonka.Data.Text.FromText Amazonka.MigrationHubConfig.Types.TargetType.TargetType
instance Control.DeepSeq.NFData Amazonka.MigrationHubConfig.Types.TargetType.TargetType
instance Data.Hashable.Class.Hashable Amazonka.MigrationHubConfig.Types.TargetType.TargetType
instance GHC.Generics.Generic Amazonka.MigrationHubConfig.Types.TargetType.TargetType
instance GHC.Classes.Ord Amazonka.MigrationHubConfig.Types.TargetType.TargetType
instance GHC.Classes.Eq Amazonka.MigrationHubConfig.Types.TargetType.TargetType
instance GHC.Read.Read Amazonka.MigrationHubConfig.Types.TargetType.TargetType
instance GHC.Show.Show Amazonka.MigrationHubConfig.Types.TargetType.TargetType


module Amazonka.MigrationHubConfig.Types.Target

-- | The target parameter specifies the identifier to which the home region
--   is applied, which is always an <tt>ACCOUNT</tt>. It applies the home
--   region to the current <tt>ACCOUNT</tt>.
--   
--   <i>See:</i> <a>newTarget</a> smart constructor.
data Target
Target' :: Maybe Text -> TargetType -> Target

-- | The <tt>TargetID</tt> is a 12-character identifier of the
--   <tt>ACCOUNT</tt> for which the control was created. (This must be the
--   current account.)
[$sel:id:Target'] :: Target -> Maybe Text

-- | The target type is always an <tt>ACCOUNT</tt>.
[$sel:type':Target'] :: Target -> TargetType

-- | Create a value of <a>Target</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:Target'</a>, <a>target_id</a> - The <tt>TargetID</tt> is a
--   12-character identifier of the <tt>ACCOUNT</tt> for which the control
--   was created. (This must be the current account.)
--   
--   <a>$sel:type':Target'</a>, <a>target_type</a> - The target type is
--   always an <tt>ACCOUNT</tt>.
newTarget :: TargetType -> Target

-- | The <tt>TargetID</tt> is a 12-character identifier of the
--   <tt>ACCOUNT</tt> for which the control was created. (This must be the
--   current account.)
target_id :: Lens' Target (Maybe Text)

-- | The target type is always an <tt>ACCOUNT</tt>.
target_type :: Lens' Target TargetType
instance GHC.Generics.Generic Amazonka.MigrationHubConfig.Types.Target.Target
instance GHC.Show.Show Amazonka.MigrationHubConfig.Types.Target.Target
instance GHC.Read.Read Amazonka.MigrationHubConfig.Types.Target.Target
instance GHC.Classes.Eq Amazonka.MigrationHubConfig.Types.Target.Target
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MigrationHubConfig.Types.Target.Target
instance Data.Hashable.Class.Hashable Amazonka.MigrationHubConfig.Types.Target.Target
instance Control.DeepSeq.NFData Amazonka.MigrationHubConfig.Types.Target.Target
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MigrationHubConfig.Types.Target.Target


module Amazonka.MigrationHubConfig.Types.HomeRegionControl

-- | A home region control is an object that specifies the home region for
--   an account, with some additional information. It contains a target
--   (always of type <tt>ACCOUNT</tt>), an ID, and a time at which the home
--   region was set.
--   
--   <i>See:</i> <a>newHomeRegionControl</a> smart constructor.
data HomeRegionControl
HomeRegionControl' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Target -> HomeRegionControl

-- | A timestamp representing the time when the customer called
--   <tt>CreateHomeregionControl</tt> and set the home region for the
--   account.
[$sel:requestedTime:HomeRegionControl'] :: HomeRegionControl -> Maybe POSIX

-- | The AWS Region that's been set as home region. For example,
--   "us-west-2" or "eu-central-1" are valid home regions.
[$sel:homeRegion:HomeRegionControl'] :: HomeRegionControl -> Maybe Text

-- | A unique identifier that's generated for each home region control.
--   It's always a string that begins with "hrc-" followed by 12 lowercase
--   letters and numbers.
[$sel:controlId:HomeRegionControl'] :: HomeRegionControl -> Maybe Text

-- | The target parameter specifies the identifier to which the home region
--   is applied, which is always an <tt>ACCOUNT</tt>. It applies the home
--   region to the current <tt>ACCOUNT</tt>.
[$sel:target:HomeRegionControl'] :: HomeRegionControl -> Maybe Target

-- | Create a value of <a>HomeRegionControl</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestedTime:HomeRegionControl'</a>,
--   <a>homeRegionControl_requestedTime</a> - A timestamp representing the
--   time when the customer called <tt>CreateHomeregionControl</tt> and set
--   the home region for the account.
--   
--   <a>$sel:homeRegion:HomeRegionControl'</a>,
--   <a>homeRegionControl_homeRegion</a> - The AWS Region that's been set
--   as home region. For example, "us-west-2" or "eu-central-1" are valid
--   home regions.
--   
--   <a>$sel:controlId:HomeRegionControl'</a>,
--   <a>homeRegionControl_controlId</a> - A unique identifier that's
--   generated for each home region control. It's always a string that
--   begins with "hrc-" followed by 12 lowercase letters and numbers.
--   
--   <a>$sel:target:HomeRegionControl'</a>, <a>homeRegionControl_target</a>
--   - The target parameter specifies the identifier to which the home
--   region is applied, which is always an <tt>ACCOUNT</tt>. It applies the
--   home region to the current <tt>ACCOUNT</tt>.
newHomeRegionControl :: HomeRegionControl

-- | A timestamp representing the time when the customer called
--   <tt>CreateHomeregionControl</tt> and set the home region for the
--   account.
homeRegionControl_requestedTime :: Lens' HomeRegionControl (Maybe UTCTime)

-- | The AWS Region that's been set as home region. For example,
--   "us-west-2" or "eu-central-1" are valid home regions.
homeRegionControl_homeRegion :: Lens' HomeRegionControl (Maybe Text)

-- | A unique identifier that's generated for each home region control.
--   It's always a string that begins with "hrc-" followed by 12 lowercase
--   letters and numbers.
homeRegionControl_controlId :: Lens' HomeRegionControl (Maybe Text)

-- | The target parameter specifies the identifier to which the home region
--   is applied, which is always an <tt>ACCOUNT</tt>. It applies the home
--   region to the current <tt>ACCOUNT</tt>.
homeRegionControl_target :: Lens' HomeRegionControl (Maybe Target)
instance GHC.Generics.Generic Amazonka.MigrationHubConfig.Types.HomeRegionControl.HomeRegionControl
instance GHC.Show.Show Amazonka.MigrationHubConfig.Types.HomeRegionControl.HomeRegionControl
instance GHC.Read.Read Amazonka.MigrationHubConfig.Types.HomeRegionControl.HomeRegionControl
instance GHC.Classes.Eq Amazonka.MigrationHubConfig.Types.HomeRegionControl.HomeRegionControl
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MigrationHubConfig.Types.HomeRegionControl.HomeRegionControl
instance Data.Hashable.Class.Hashable Amazonka.MigrationHubConfig.Types.HomeRegionControl.HomeRegionControl
instance Control.DeepSeq.NFData Amazonka.MigrationHubConfig.Types.HomeRegionControl.HomeRegionControl


module Amazonka.MigrationHubConfig.Types

-- | API version <tt>2019-06-30</tt> of the Amazon Migration Hub Config SDK
--   configuration.
defaultService :: Service

-- | You do not have sufficient access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised to indicate that authorization of an action was
--   successful, when the <tt>DryRun</tt> flag is set to true.
_DryRunOperation :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied due to request throttling.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised when an internal, configuration, or dependency error
--   is encountered.
_InternalServerError :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised when the provided input violates a policy constraint
--   or is entered in the wrong format or data type.
_InvalidInputException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised when a request fails due to temporary unavailability
--   of the service.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError
newtype TargetType
TargetType' :: Text -> TargetType
[fromTargetType] :: TargetType -> Text
pattern TargetType_ACCOUNT :: TargetType

-- | A home region control is an object that specifies the home region for
--   an account, with some additional information. It contains a target
--   (always of type <tt>ACCOUNT</tt>), an ID, and a time at which the home
--   region was set.
--   
--   <i>See:</i> <a>newHomeRegionControl</a> smart constructor.
data HomeRegionControl
HomeRegionControl' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Target -> HomeRegionControl

-- | A timestamp representing the time when the customer called
--   <tt>CreateHomeregionControl</tt> and set the home region for the
--   account.
[$sel:requestedTime:HomeRegionControl'] :: HomeRegionControl -> Maybe POSIX

-- | The AWS Region that's been set as home region. For example,
--   "us-west-2" or "eu-central-1" are valid home regions.
[$sel:homeRegion:HomeRegionControl'] :: HomeRegionControl -> Maybe Text

-- | A unique identifier that's generated for each home region control.
--   It's always a string that begins with "hrc-" followed by 12 lowercase
--   letters and numbers.
[$sel:controlId:HomeRegionControl'] :: HomeRegionControl -> Maybe Text

-- | The target parameter specifies the identifier to which the home region
--   is applied, which is always an <tt>ACCOUNT</tt>. It applies the home
--   region to the current <tt>ACCOUNT</tt>.
[$sel:target:HomeRegionControl'] :: HomeRegionControl -> Maybe Target

-- | Create a value of <a>HomeRegionControl</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestedTime:HomeRegionControl'</a>,
--   <a>homeRegionControl_requestedTime</a> - A timestamp representing the
--   time when the customer called <tt>CreateHomeregionControl</tt> and set
--   the home region for the account.
--   
--   <a>$sel:homeRegion:HomeRegionControl'</a>,
--   <a>homeRegionControl_homeRegion</a> - The AWS Region that's been set
--   as home region. For example, "us-west-2" or "eu-central-1" are valid
--   home regions.
--   
--   <a>$sel:controlId:HomeRegionControl'</a>,
--   <a>homeRegionControl_controlId</a> - A unique identifier that's
--   generated for each home region control. It's always a string that
--   begins with "hrc-" followed by 12 lowercase letters and numbers.
--   
--   <a>$sel:target:HomeRegionControl'</a>, <a>homeRegionControl_target</a>
--   - The target parameter specifies the identifier to which the home
--   region is applied, which is always an <tt>ACCOUNT</tt>. It applies the
--   home region to the current <tt>ACCOUNT</tt>.
newHomeRegionControl :: HomeRegionControl

-- | A timestamp representing the time when the customer called
--   <tt>CreateHomeregionControl</tt> and set the home region for the
--   account.
homeRegionControl_requestedTime :: Lens' HomeRegionControl (Maybe UTCTime)

-- | The AWS Region that's been set as home region. For example,
--   "us-west-2" or "eu-central-1" are valid home regions.
homeRegionControl_homeRegion :: Lens' HomeRegionControl (Maybe Text)

-- | A unique identifier that's generated for each home region control.
--   It's always a string that begins with "hrc-" followed by 12 lowercase
--   letters and numbers.
homeRegionControl_controlId :: Lens' HomeRegionControl (Maybe Text)

-- | The target parameter specifies the identifier to which the home region
--   is applied, which is always an <tt>ACCOUNT</tt>. It applies the home
--   region to the current <tt>ACCOUNT</tt>.
homeRegionControl_target :: Lens' HomeRegionControl (Maybe Target)

-- | The target parameter specifies the identifier to which the home region
--   is applied, which is always an <tt>ACCOUNT</tt>. It applies the home
--   region to the current <tt>ACCOUNT</tt>.
--   
--   <i>See:</i> <a>newTarget</a> smart constructor.
data Target
Target' :: Maybe Text -> TargetType -> Target

-- | The <tt>TargetID</tt> is a 12-character identifier of the
--   <tt>ACCOUNT</tt> for which the control was created. (This must be the
--   current account.)
[$sel:id:Target'] :: Target -> Maybe Text

-- | The target type is always an <tt>ACCOUNT</tt>.
[$sel:type':Target'] :: Target -> TargetType

-- | Create a value of <a>Target</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:Target'</a>, <a>target_id</a> - The <tt>TargetID</tt> is a
--   12-character identifier of the <tt>ACCOUNT</tt> for which the control
--   was created. (This must be the current account.)
--   
--   <a>$sel:type':Target'</a>, <a>target_type</a> - The target type is
--   always an <tt>ACCOUNT</tt>.
newTarget :: TargetType -> Target

-- | The <tt>TargetID</tt> is a 12-character identifier of the
--   <tt>ACCOUNT</tt> for which the control was created. (This must be the
--   current account.)
target_id :: Lens' Target (Maybe Text)

-- | The target type is always an <tt>ACCOUNT</tt>.
target_type :: Lens' Target TargetType


-- | Returns the calling account’s home region, if configured. This API is
--   used by other AWS services to determine the regional endpoint for
--   calling AWS Application Discovery Service and Migration Hub. You must
--   call <tt>GetHomeRegion</tt> at least once before you call any other
--   AWS Application Discovery Service and AWS Migration Hub APIs, to
--   obtain the account's Migration Hub home region.
module Amazonka.MigrationHubConfig.GetHomeRegion

-- | <i>See:</i> <a>newGetHomeRegion</a> smart constructor.
data GetHomeRegion
GetHomeRegion' :: GetHomeRegion

-- | Create a value of <a>GetHomeRegion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetHomeRegion :: GetHomeRegion

-- | <i>See:</i> <a>newGetHomeRegionResponse</a> smart constructor.
data GetHomeRegionResponse
GetHomeRegionResponse' :: Maybe Text -> Int -> GetHomeRegionResponse

-- | The name of the home region of the calling account.
[$sel:homeRegion:GetHomeRegionResponse'] :: GetHomeRegionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetHomeRegionResponse'] :: GetHomeRegionResponse -> Int

-- | Create a value of <a>GetHomeRegionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeRegion:GetHomeRegionResponse'</a>,
--   <a>getHomeRegionResponse_homeRegion</a> - The name of the home region
--   of the calling account.
--   
--   <a>$sel:httpStatus:GetHomeRegionResponse'</a>,
--   <a>getHomeRegionResponse_httpStatus</a> - The response's http status
--   code.
newGetHomeRegionResponse :: Int -> GetHomeRegionResponse

-- | The name of the home region of the calling account.
getHomeRegionResponse_homeRegion :: Lens' GetHomeRegionResponse (Maybe Text)

-- | The response's http status code.
getHomeRegionResponse_httpStatus :: Lens' GetHomeRegionResponse Int
instance GHC.Generics.Generic Amazonka.MigrationHubConfig.GetHomeRegion.GetHomeRegion
instance GHC.Show.Show Amazonka.MigrationHubConfig.GetHomeRegion.GetHomeRegion
instance GHC.Read.Read Amazonka.MigrationHubConfig.GetHomeRegion.GetHomeRegion
instance GHC.Classes.Eq Amazonka.MigrationHubConfig.GetHomeRegion.GetHomeRegion
instance GHC.Generics.Generic Amazonka.MigrationHubConfig.GetHomeRegion.GetHomeRegionResponse
instance GHC.Show.Show Amazonka.MigrationHubConfig.GetHomeRegion.GetHomeRegionResponse
instance GHC.Read.Read Amazonka.MigrationHubConfig.GetHomeRegion.GetHomeRegionResponse
instance GHC.Classes.Eq Amazonka.MigrationHubConfig.GetHomeRegion.GetHomeRegionResponse
instance Amazonka.Types.AWSRequest Amazonka.MigrationHubConfig.GetHomeRegion.GetHomeRegion
instance Control.DeepSeq.NFData Amazonka.MigrationHubConfig.GetHomeRegion.GetHomeRegionResponse
instance Data.Hashable.Class.Hashable Amazonka.MigrationHubConfig.GetHomeRegion.GetHomeRegion
instance Control.DeepSeq.NFData Amazonka.MigrationHubConfig.GetHomeRegion.GetHomeRegion
instance Amazonka.Data.Headers.ToHeaders Amazonka.MigrationHubConfig.GetHomeRegion.GetHomeRegion
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MigrationHubConfig.GetHomeRegion.GetHomeRegion
instance Amazonka.Data.Path.ToPath Amazonka.MigrationHubConfig.GetHomeRegion.GetHomeRegion
instance Amazonka.Data.Query.ToQuery Amazonka.MigrationHubConfig.GetHomeRegion.GetHomeRegion


-- | This API permits filtering on the <tt>ControlId</tt> and
--   <tt>HomeRegion</tt> fields.
module Amazonka.MigrationHubConfig.DescribeHomeRegionControls

-- | <i>See:</i> <a>newDescribeHomeRegionControls</a> smart constructor.
data DescribeHomeRegionControls
DescribeHomeRegionControls' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Target -> DescribeHomeRegionControls

-- | If a <tt>NextToken</tt> was returned by a previous call, more results
--   are available. To retrieve the next page of results, make the call
--   again using the returned token in <tt>NextToken</tt>.
[$sel:nextToken:DescribeHomeRegionControls'] :: DescribeHomeRegionControls -> Maybe Text

-- | The name of the home region you'd like to view.
[$sel:homeRegion:DescribeHomeRegionControls'] :: DescribeHomeRegionControls -> Maybe Text

-- | The <tt>ControlID</tt> is a unique identifier string of your
--   <tt>HomeRegionControl</tt> object.
[$sel:controlId:DescribeHomeRegionControls'] :: DescribeHomeRegionControls -> Maybe Text

-- | The maximum number of filtering results to display per page.
[$sel:maxResults:DescribeHomeRegionControls'] :: DescribeHomeRegionControls -> Maybe Natural

-- | The target parameter specifies the identifier to which the home region
--   is applied, which is always of type <tt>ACCOUNT</tt>. It applies the
--   home region to the current <tt>ACCOUNT</tt>.
[$sel:target:DescribeHomeRegionControls'] :: DescribeHomeRegionControls -> Maybe Target

-- | Create a value of <a>DescribeHomeRegionControls</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeHomeRegionControls'</a>,
--   <a>describeHomeRegionControls_nextToken</a> - If a <tt>NextToken</tt>
--   was returned by a previous call, more results are available. To
--   retrieve the next page of results, make the call again using the
--   returned token in <tt>NextToken</tt>.
--   
--   <a>$sel:homeRegion:DescribeHomeRegionControls'</a>,
--   <a>describeHomeRegionControls_homeRegion</a> - The name of the home
--   region you'd like to view.
--   
--   <a>$sel:controlId:DescribeHomeRegionControls'</a>,
--   <a>describeHomeRegionControls_controlId</a> - The <tt>ControlID</tt>
--   is a unique identifier string of your <tt>HomeRegionControl</tt>
--   object.
--   
--   <a>$sel:maxResults:DescribeHomeRegionControls'</a>,
--   <a>describeHomeRegionControls_maxResults</a> - The maximum number of
--   filtering results to display per page.
--   
--   <a>$sel:target:DescribeHomeRegionControls'</a>,
--   <a>describeHomeRegionControls_target</a> - The target parameter
--   specifies the identifier to which the home region is applied, which is
--   always of type <tt>ACCOUNT</tt>. It applies the home region to the
--   current <tt>ACCOUNT</tt>.
newDescribeHomeRegionControls :: DescribeHomeRegionControls

-- | If a <tt>NextToken</tt> was returned by a previous call, more results
--   are available. To retrieve the next page of results, make the call
--   again using the returned token in <tt>NextToken</tt>.
describeHomeRegionControls_nextToken :: Lens' DescribeHomeRegionControls (Maybe Text)

-- | The name of the home region you'd like to view.
describeHomeRegionControls_homeRegion :: Lens' DescribeHomeRegionControls (Maybe Text)

-- | The <tt>ControlID</tt> is a unique identifier string of your
--   <tt>HomeRegionControl</tt> object.
describeHomeRegionControls_controlId :: Lens' DescribeHomeRegionControls (Maybe Text)

-- | The maximum number of filtering results to display per page.
describeHomeRegionControls_maxResults :: Lens' DescribeHomeRegionControls (Maybe Natural)

-- | The target parameter specifies the identifier to which the home region
--   is applied, which is always of type <tt>ACCOUNT</tt>. It applies the
--   home region to the current <tt>ACCOUNT</tt>.
describeHomeRegionControls_target :: Lens' DescribeHomeRegionControls (Maybe Target)

-- | <i>See:</i> <a>newDescribeHomeRegionControlsResponse</a> smart
--   constructor.
data DescribeHomeRegionControlsResponse
DescribeHomeRegionControlsResponse' :: Maybe Text -> Maybe [HomeRegionControl] -> Int -> DescribeHomeRegionControlsResponse

-- | If a <tt>NextToken</tt> was returned by a previous call, more results
--   are available. To retrieve the next page of results, make the call
--   again using the returned token in <tt>NextToken</tt>.
[$sel:nextToken:DescribeHomeRegionControlsResponse'] :: DescribeHomeRegionControlsResponse -> Maybe Text

-- | An array that contains your <tt>HomeRegionControl</tt> objects.
[$sel:homeRegionControls:DescribeHomeRegionControlsResponse'] :: DescribeHomeRegionControlsResponse -> Maybe [HomeRegionControl]

-- | The response's http status code.
[$sel:httpStatus:DescribeHomeRegionControlsResponse'] :: DescribeHomeRegionControlsResponse -> Int

-- | Create a value of <a>DescribeHomeRegionControlsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeHomeRegionControls'</a>,
--   <a>describeHomeRegionControlsResponse_nextToken</a> - If a
--   <tt>NextToken</tt> was returned by a previous call, more results are
--   available. To retrieve the next page of results, make the call again
--   using the returned token in <tt>NextToken</tt>.
--   
--   <a>$sel:homeRegionControls:DescribeHomeRegionControlsResponse'</a>,
--   <a>describeHomeRegionControlsResponse_homeRegionControls</a> - An
--   array that contains your <tt>HomeRegionControl</tt> objects.
--   
--   <a>$sel:httpStatus:DescribeHomeRegionControlsResponse'</a>,
--   <a>describeHomeRegionControlsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeHomeRegionControlsResponse :: Int -> DescribeHomeRegionControlsResponse

-- | If a <tt>NextToken</tt> was returned by a previous call, more results
--   are available. To retrieve the next page of results, make the call
--   again using the returned token in <tt>NextToken</tt>.
describeHomeRegionControlsResponse_nextToken :: Lens' DescribeHomeRegionControlsResponse (Maybe Text)

-- | An array that contains your <tt>HomeRegionControl</tt> objects.
describeHomeRegionControlsResponse_homeRegionControls :: Lens' DescribeHomeRegionControlsResponse (Maybe [HomeRegionControl])

-- | The response's http status code.
describeHomeRegionControlsResponse_httpStatus :: Lens' DescribeHomeRegionControlsResponse Int
instance GHC.Generics.Generic Amazonka.MigrationHubConfig.DescribeHomeRegionControls.DescribeHomeRegionControls
instance GHC.Show.Show Amazonka.MigrationHubConfig.DescribeHomeRegionControls.DescribeHomeRegionControls
instance GHC.Read.Read Amazonka.MigrationHubConfig.DescribeHomeRegionControls.DescribeHomeRegionControls
instance GHC.Classes.Eq Amazonka.MigrationHubConfig.DescribeHomeRegionControls.DescribeHomeRegionControls
instance GHC.Generics.Generic Amazonka.MigrationHubConfig.DescribeHomeRegionControls.DescribeHomeRegionControlsResponse
instance GHC.Show.Show Amazonka.MigrationHubConfig.DescribeHomeRegionControls.DescribeHomeRegionControlsResponse
instance GHC.Read.Read Amazonka.MigrationHubConfig.DescribeHomeRegionControls.DescribeHomeRegionControlsResponse
instance GHC.Classes.Eq Amazonka.MigrationHubConfig.DescribeHomeRegionControls.DescribeHomeRegionControlsResponse
instance Amazonka.Types.AWSRequest Amazonka.MigrationHubConfig.DescribeHomeRegionControls.DescribeHomeRegionControls
instance Control.DeepSeq.NFData Amazonka.MigrationHubConfig.DescribeHomeRegionControls.DescribeHomeRegionControlsResponse
instance Data.Hashable.Class.Hashable Amazonka.MigrationHubConfig.DescribeHomeRegionControls.DescribeHomeRegionControls
instance Control.DeepSeq.NFData Amazonka.MigrationHubConfig.DescribeHomeRegionControls.DescribeHomeRegionControls
instance Amazonka.Data.Headers.ToHeaders Amazonka.MigrationHubConfig.DescribeHomeRegionControls.DescribeHomeRegionControls
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MigrationHubConfig.DescribeHomeRegionControls.DescribeHomeRegionControls
instance Amazonka.Data.Path.ToPath Amazonka.MigrationHubConfig.DescribeHomeRegionControls.DescribeHomeRegionControls
instance Amazonka.Data.Query.ToQuery Amazonka.MigrationHubConfig.DescribeHomeRegionControls.DescribeHomeRegionControls


-- | This API sets up the home region for the calling account only.
module Amazonka.MigrationHubConfig.CreateHomeRegionControl

-- | <i>See:</i> <a>newCreateHomeRegionControl</a> smart constructor.
data CreateHomeRegionControl
CreateHomeRegionControl' :: Maybe Bool -> Text -> Target -> CreateHomeRegionControl

-- | Optional Boolean flag to indicate whether any effect should take
--   place. It tests whether the caller has permission to make the call.
[$sel:dryRun:CreateHomeRegionControl'] :: CreateHomeRegionControl -> Maybe Bool

-- | The name of the home region of the calling account.
[$sel:homeRegion:CreateHomeRegionControl'] :: CreateHomeRegionControl -> Text

-- | The account for which this command sets up a home region control. The
--   <tt>Target</tt> is always of type <tt>ACCOUNT</tt>.
[$sel:target:CreateHomeRegionControl'] :: CreateHomeRegionControl -> Target

-- | Create a value of <a>CreateHomeRegionControl</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dryRun:CreateHomeRegionControl'</a>,
--   <a>createHomeRegionControl_dryRun</a> - Optional Boolean flag to
--   indicate whether any effect should take place. It tests whether the
--   caller has permission to make the call.
--   
--   <a>$sel:homeRegion:CreateHomeRegionControl'</a>,
--   <a>createHomeRegionControl_homeRegion</a> - The name of the home
--   region of the calling account.
--   
--   <a>$sel:target:CreateHomeRegionControl'</a>,
--   <a>createHomeRegionControl_target</a> - The account for which this
--   command sets up a home region control. The <tt>Target</tt> is always
--   of type <tt>ACCOUNT</tt>.
newCreateHomeRegionControl :: Text -> Target -> CreateHomeRegionControl

-- | Optional Boolean flag to indicate whether any effect should take
--   place. It tests whether the caller has permission to make the call.
createHomeRegionControl_dryRun :: Lens' CreateHomeRegionControl (Maybe Bool)

-- | The name of the home region of the calling account.
createHomeRegionControl_homeRegion :: Lens' CreateHomeRegionControl Text

-- | The account for which this command sets up a home region control. The
--   <tt>Target</tt> is always of type <tt>ACCOUNT</tt>.
createHomeRegionControl_target :: Lens' CreateHomeRegionControl Target

-- | <i>See:</i> <a>newCreateHomeRegionControlResponse</a> smart
--   constructor.
data CreateHomeRegionControlResponse
CreateHomeRegionControlResponse' :: Maybe HomeRegionControl -> Int -> CreateHomeRegionControlResponse

-- | This object is the <tt>HomeRegionControl</tt> object that's returned
--   by a successful call to <tt>CreateHomeRegionControl</tt>.
[$sel:homeRegionControl:CreateHomeRegionControlResponse'] :: CreateHomeRegionControlResponse -> Maybe HomeRegionControl

-- | The response's http status code.
[$sel:httpStatus:CreateHomeRegionControlResponse'] :: CreateHomeRegionControlResponse -> Int

-- | Create a value of <a>CreateHomeRegionControlResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeRegionControl:CreateHomeRegionControlResponse'</a>,
--   <a>createHomeRegionControlResponse_homeRegionControl</a> - This object
--   is the <tt>HomeRegionControl</tt> object that's returned by a
--   successful call to <tt>CreateHomeRegionControl</tt>.
--   
--   <a>$sel:httpStatus:CreateHomeRegionControlResponse'</a>,
--   <a>createHomeRegionControlResponse_httpStatus</a> - The response's
--   http status code.
newCreateHomeRegionControlResponse :: Int -> CreateHomeRegionControlResponse

-- | This object is the <tt>HomeRegionControl</tt> object that's returned
--   by a successful call to <tt>CreateHomeRegionControl</tt>.
createHomeRegionControlResponse_homeRegionControl :: Lens' CreateHomeRegionControlResponse (Maybe HomeRegionControl)

-- | The response's http status code.
createHomeRegionControlResponse_httpStatus :: Lens' CreateHomeRegionControlResponse Int
instance GHC.Generics.Generic Amazonka.MigrationHubConfig.CreateHomeRegionControl.CreateHomeRegionControl
instance GHC.Show.Show Amazonka.MigrationHubConfig.CreateHomeRegionControl.CreateHomeRegionControl
instance GHC.Read.Read Amazonka.MigrationHubConfig.CreateHomeRegionControl.CreateHomeRegionControl
instance GHC.Classes.Eq Amazonka.MigrationHubConfig.CreateHomeRegionControl.CreateHomeRegionControl
instance GHC.Generics.Generic Amazonka.MigrationHubConfig.CreateHomeRegionControl.CreateHomeRegionControlResponse
instance GHC.Show.Show Amazonka.MigrationHubConfig.CreateHomeRegionControl.CreateHomeRegionControlResponse
instance GHC.Read.Read Amazonka.MigrationHubConfig.CreateHomeRegionControl.CreateHomeRegionControlResponse
instance GHC.Classes.Eq Amazonka.MigrationHubConfig.CreateHomeRegionControl.CreateHomeRegionControlResponse
instance Amazonka.Types.AWSRequest Amazonka.MigrationHubConfig.CreateHomeRegionControl.CreateHomeRegionControl
instance Control.DeepSeq.NFData Amazonka.MigrationHubConfig.CreateHomeRegionControl.CreateHomeRegionControlResponse
instance Data.Hashable.Class.Hashable Amazonka.MigrationHubConfig.CreateHomeRegionControl.CreateHomeRegionControl
instance Control.DeepSeq.NFData Amazonka.MigrationHubConfig.CreateHomeRegionControl.CreateHomeRegionControl
instance Amazonka.Data.Headers.ToHeaders Amazonka.MigrationHubConfig.CreateHomeRegionControl.CreateHomeRegionControl
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MigrationHubConfig.CreateHomeRegionControl.CreateHomeRegionControl
instance Amazonka.Data.Path.ToPath Amazonka.MigrationHubConfig.CreateHomeRegionControl.CreateHomeRegionControl
instance Amazonka.Data.Query.ToQuery Amazonka.MigrationHubConfig.CreateHomeRegionControl.CreateHomeRegionControl


module Amazonka.MigrationHubConfig.Lens

-- | The name of the home region of the calling account.
getHomeRegionResponse_homeRegion :: Lens' GetHomeRegionResponse (Maybe Text)

-- | The response's http status code.
getHomeRegionResponse_httpStatus :: Lens' GetHomeRegionResponse Int

-- | Optional Boolean flag to indicate whether any effect should take
--   place. It tests whether the caller has permission to make the call.
createHomeRegionControl_dryRun :: Lens' CreateHomeRegionControl (Maybe Bool)

-- | The name of the home region of the calling account.
createHomeRegionControl_homeRegion :: Lens' CreateHomeRegionControl Text

-- | The account for which this command sets up a home region control. The
--   <tt>Target</tt> is always of type <tt>ACCOUNT</tt>.
createHomeRegionControl_target :: Lens' CreateHomeRegionControl Target

-- | This object is the <tt>HomeRegionControl</tt> object that's returned
--   by a successful call to <tt>CreateHomeRegionControl</tt>.
createHomeRegionControlResponse_homeRegionControl :: Lens' CreateHomeRegionControlResponse (Maybe HomeRegionControl)

-- | The response's http status code.
createHomeRegionControlResponse_httpStatus :: Lens' CreateHomeRegionControlResponse Int

-- | If a <tt>NextToken</tt> was returned by a previous call, more results
--   are available. To retrieve the next page of results, make the call
--   again using the returned token in <tt>NextToken</tt>.
describeHomeRegionControls_nextToken :: Lens' DescribeHomeRegionControls (Maybe Text)

-- | The name of the home region you'd like to view.
describeHomeRegionControls_homeRegion :: Lens' DescribeHomeRegionControls (Maybe Text)

-- | The <tt>ControlID</tt> is a unique identifier string of your
--   <tt>HomeRegionControl</tt> object.
describeHomeRegionControls_controlId :: Lens' DescribeHomeRegionControls (Maybe Text)

-- | The maximum number of filtering results to display per page.
describeHomeRegionControls_maxResults :: Lens' DescribeHomeRegionControls (Maybe Natural)

-- | The target parameter specifies the identifier to which the home region
--   is applied, which is always of type <tt>ACCOUNT</tt>. It applies the
--   home region to the current <tt>ACCOUNT</tt>.
describeHomeRegionControls_target :: Lens' DescribeHomeRegionControls (Maybe Target)

-- | If a <tt>NextToken</tt> was returned by a previous call, more results
--   are available. To retrieve the next page of results, make the call
--   again using the returned token in <tt>NextToken</tt>.
describeHomeRegionControlsResponse_nextToken :: Lens' DescribeHomeRegionControlsResponse (Maybe Text)

-- | An array that contains your <tt>HomeRegionControl</tt> objects.
describeHomeRegionControlsResponse_homeRegionControls :: Lens' DescribeHomeRegionControlsResponse (Maybe [HomeRegionControl])

-- | The response's http status code.
describeHomeRegionControlsResponse_httpStatus :: Lens' DescribeHomeRegionControlsResponse Int

-- | A timestamp representing the time when the customer called
--   <tt>CreateHomeregionControl</tt> and set the home region for the
--   account.
homeRegionControl_requestedTime :: Lens' HomeRegionControl (Maybe UTCTime)

-- | The AWS Region that's been set as home region. For example,
--   "us-west-2" or "eu-central-1" are valid home regions.
homeRegionControl_homeRegion :: Lens' HomeRegionControl (Maybe Text)

-- | A unique identifier that's generated for each home region control.
--   It's always a string that begins with "hrc-" followed by 12 lowercase
--   letters and numbers.
homeRegionControl_controlId :: Lens' HomeRegionControl (Maybe Text)

-- | The target parameter specifies the identifier to which the home region
--   is applied, which is always an <tt>ACCOUNT</tt>. It applies the home
--   region to the current <tt>ACCOUNT</tt>.
homeRegionControl_target :: Lens' HomeRegionControl (Maybe Target)

-- | The <tt>TargetID</tt> is a 12-character identifier of the
--   <tt>ACCOUNT</tt> for which the control was created. (This must be the
--   current account.)
target_id :: Lens' Target (Maybe Text)

-- | The target type is always an <tt>ACCOUNT</tt>.
target_type :: Lens' Target TargetType


module Amazonka.MigrationHubConfig.Waiters


-- | Derived from API version <tt>2019-06-30</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   The AWS Migration Hub home region APIs are available specifically for
--   working with your Migration Hub home region. You can use these APIs to
--   determine a home region, as well as to create and work with controls
--   that describe the home region.
--   
--   <ul>
--   <li>You must make API calls for write actions (create, notify,
--   associate, disassociate, import, or put) while in your home region, or
--   a <tt>HomeRegionNotSetException</tt> error is returned.</li>
--   <li>API calls for read actions (list, describe, stop, and delete) are
--   permitted outside of your home region.</li>
--   <li>If you call a write API outside the home region, an
--   <tt>InvalidInputException</tt> is returned.</li>
--   <li>You can call <tt>GetHomeRegion</tt> action to obtain the account's
--   Migration Hub home region.</li>
--   </ul>
--   
--   For specific API usage, see the sections that follow in this AWS
--   Migration Hub Home Region API reference.
module Amazonka.MigrationHubConfig

-- | API version <tt>2019-06-30</tt> of the Amazon Migration Hub Config SDK
--   configuration.
defaultService :: Service

-- | You do not have sufficient access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised to indicate that authorization of an action was
--   successful, when the <tt>DryRun</tt> flag is set to true.
_DryRunOperation :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied due to request throttling.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised when an internal, configuration, or dependency error
--   is encountered.
_InternalServerError :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised when the provided input violates a policy constraint
--   or is entered in the wrong format or data type.
_InvalidInputException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception raised when a request fails due to temporary unavailability
--   of the service.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newGetHomeRegion</a> smart constructor.
data GetHomeRegion
GetHomeRegion' :: GetHomeRegion

-- | Create a value of <a>GetHomeRegion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetHomeRegion :: GetHomeRegion

-- | <i>See:</i> <a>newGetHomeRegionResponse</a> smart constructor.
data GetHomeRegionResponse
GetHomeRegionResponse' :: Maybe Text -> Int -> GetHomeRegionResponse

-- | Create a value of <a>GetHomeRegionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeRegion:GetHomeRegionResponse'</a>,
--   <a>getHomeRegionResponse_homeRegion</a> - The name of the home region
--   of the calling account.
--   
--   <a>$sel:httpStatus:GetHomeRegionResponse'</a>,
--   <a>getHomeRegionResponse_httpStatus</a> - The response's http status
--   code.
newGetHomeRegionResponse :: Int -> GetHomeRegionResponse

-- | <i>See:</i> <a>newCreateHomeRegionControl</a> smart constructor.
data CreateHomeRegionControl
CreateHomeRegionControl' :: Maybe Bool -> Text -> Target -> CreateHomeRegionControl

-- | Create a value of <a>CreateHomeRegionControl</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dryRun:CreateHomeRegionControl'</a>,
--   <a>createHomeRegionControl_dryRun</a> - Optional Boolean flag to
--   indicate whether any effect should take place. It tests whether the
--   caller has permission to make the call.
--   
--   <a>$sel:homeRegion:CreateHomeRegionControl'</a>,
--   <a>createHomeRegionControl_homeRegion</a> - The name of the home
--   region of the calling account.
--   
--   <a>$sel:target:CreateHomeRegionControl'</a>,
--   <a>createHomeRegionControl_target</a> - The account for which this
--   command sets up a home region control. The <tt>Target</tt> is always
--   of type <tt>ACCOUNT</tt>.
newCreateHomeRegionControl :: Text -> Target -> CreateHomeRegionControl

-- | <i>See:</i> <a>newCreateHomeRegionControlResponse</a> smart
--   constructor.
data CreateHomeRegionControlResponse
CreateHomeRegionControlResponse' :: Maybe HomeRegionControl -> Int -> CreateHomeRegionControlResponse

-- | Create a value of <a>CreateHomeRegionControlResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:homeRegionControl:CreateHomeRegionControlResponse'</a>,
--   <a>createHomeRegionControlResponse_homeRegionControl</a> - This object
--   is the <tt>HomeRegionControl</tt> object that's returned by a
--   successful call to <tt>CreateHomeRegionControl</tt>.
--   
--   <a>$sel:httpStatus:CreateHomeRegionControlResponse'</a>,
--   <a>createHomeRegionControlResponse_httpStatus</a> - The response's
--   http status code.
newCreateHomeRegionControlResponse :: Int -> CreateHomeRegionControlResponse

-- | <i>See:</i> <a>newDescribeHomeRegionControls</a> smart constructor.
data DescribeHomeRegionControls
DescribeHomeRegionControls' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Target -> DescribeHomeRegionControls

-- | Create a value of <a>DescribeHomeRegionControls</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeHomeRegionControls'</a>,
--   <a>describeHomeRegionControls_nextToken</a> - If a <tt>NextToken</tt>
--   was returned by a previous call, more results are available. To
--   retrieve the next page of results, make the call again using the
--   returned token in <tt>NextToken</tt>.
--   
--   <a>$sel:homeRegion:DescribeHomeRegionControls'</a>,
--   <a>describeHomeRegionControls_homeRegion</a> - The name of the home
--   region you'd like to view.
--   
--   <a>$sel:controlId:DescribeHomeRegionControls'</a>,
--   <a>describeHomeRegionControls_controlId</a> - The <tt>ControlID</tt>
--   is a unique identifier string of your <tt>HomeRegionControl</tt>
--   object.
--   
--   <a>$sel:maxResults:DescribeHomeRegionControls'</a>,
--   <a>describeHomeRegionControls_maxResults</a> - The maximum number of
--   filtering results to display per page.
--   
--   <a>$sel:target:DescribeHomeRegionControls'</a>,
--   <a>describeHomeRegionControls_target</a> - The target parameter
--   specifies the identifier to which the home region is applied, which is
--   always of type <tt>ACCOUNT</tt>. It applies the home region to the
--   current <tt>ACCOUNT</tt>.
newDescribeHomeRegionControls :: DescribeHomeRegionControls

-- | <i>See:</i> <a>newDescribeHomeRegionControlsResponse</a> smart
--   constructor.
data DescribeHomeRegionControlsResponse
DescribeHomeRegionControlsResponse' :: Maybe Text -> Maybe [HomeRegionControl] -> Int -> DescribeHomeRegionControlsResponse

-- | Create a value of <a>DescribeHomeRegionControlsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeHomeRegionControls'</a>,
--   <a>describeHomeRegionControlsResponse_nextToken</a> - If a
--   <tt>NextToken</tt> was returned by a previous call, more results are
--   available. To retrieve the next page of results, make the call again
--   using the returned token in <tt>NextToken</tt>.
--   
--   <a>$sel:homeRegionControls:DescribeHomeRegionControlsResponse'</a>,
--   <a>describeHomeRegionControlsResponse_homeRegionControls</a> - An
--   array that contains your <tt>HomeRegionControl</tt> objects.
--   
--   <a>$sel:httpStatus:DescribeHomeRegionControlsResponse'</a>,
--   <a>describeHomeRegionControlsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeHomeRegionControlsResponse :: Int -> DescribeHomeRegionControlsResponse
newtype TargetType
TargetType' :: Text -> TargetType
[fromTargetType] :: TargetType -> Text
pattern TargetType_ACCOUNT :: TargetType

-- | A home region control is an object that specifies the home region for
--   an account, with some additional information. It contains a target
--   (always of type <tt>ACCOUNT</tt>), an ID, and a time at which the home
--   region was set.
--   
--   <i>See:</i> <a>newHomeRegionControl</a> smart constructor.
data HomeRegionControl
HomeRegionControl' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Target -> HomeRegionControl

-- | Create a value of <a>HomeRegionControl</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestedTime:HomeRegionControl'</a>,
--   <a>homeRegionControl_requestedTime</a> - A timestamp representing the
--   time when the customer called <tt>CreateHomeregionControl</tt> and set
--   the home region for the account.
--   
--   <a>$sel:homeRegion:HomeRegionControl'</a>,
--   <a>homeRegionControl_homeRegion</a> - The AWS Region that's been set
--   as home region. For example, "us-west-2" or "eu-central-1" are valid
--   home regions.
--   
--   <a>$sel:controlId:HomeRegionControl'</a>,
--   <a>homeRegionControl_controlId</a> - A unique identifier that's
--   generated for each home region control. It's always a string that
--   begins with "hrc-" followed by 12 lowercase letters and numbers.
--   
--   <a>$sel:target:HomeRegionControl'</a>, <a>homeRegionControl_target</a>
--   - The target parameter specifies the identifier to which the home
--   region is applied, which is always an <tt>ACCOUNT</tt>. It applies the
--   home region to the current <tt>ACCOUNT</tt>.
newHomeRegionControl :: HomeRegionControl

-- | The target parameter specifies the identifier to which the home region
--   is applied, which is always an <tt>ACCOUNT</tt>. It applies the home
--   region to the current <tt>ACCOUNT</tt>.
--   
--   <i>See:</i> <a>newTarget</a> smart constructor.
data Target
Target' :: Maybe Text -> TargetType -> Target

-- | Create a value of <a>Target</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:Target'</a>, <a>target_id</a> - The <tt>TargetID</tt> is a
--   12-character identifier of the <tt>ACCOUNT</tt> for which the control
--   was created. (This must be the current account.)
--   
--   <a>$sel:type':Target'</a>, <a>target_type</a> - The target type is
--   always an <tt>ACCOUNT</tt>.
newTarget :: TargetType -> Target
