-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-appmeshZSamazonka-appmesh
@version 2.0


module Amazonka.AppMesh.Types.AwsCloudMapInstanceAttribute

-- | An object that represents the Cloud Map attribute information for your
--   virtual node.
--   
--   AWS Cloud Map is not available in the eu-south-1 Region.
--   
--   <i>See:</i> <a>newAwsCloudMapInstanceAttribute</a> smart constructor.
data AwsCloudMapInstanceAttribute
AwsCloudMapInstanceAttribute' :: Text -> Text -> AwsCloudMapInstanceAttribute

-- | The name of an Cloud Map service instance attribute key. Any Cloud Map
--   service instance that contains the specified key and value is
--   returned.
[$sel:key:AwsCloudMapInstanceAttribute'] :: AwsCloudMapInstanceAttribute -> Text

-- | The value of an Cloud Map service instance attribute key. Any Cloud
--   Map service instance that contains the specified key and value is
--   returned.
[$sel:value:AwsCloudMapInstanceAttribute'] :: AwsCloudMapInstanceAttribute -> Text

-- | Create a value of <a>AwsCloudMapInstanceAttribute</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:AwsCloudMapInstanceAttribute'</a>,
--   <a>awsCloudMapInstanceAttribute_key</a> - The name of an Cloud Map
--   service instance attribute key. Any Cloud Map service instance that
--   contains the specified key and value is returned.
--   
--   <a>$sel:value:AwsCloudMapInstanceAttribute'</a>,
--   <a>awsCloudMapInstanceAttribute_value</a> - The value of an Cloud Map
--   service instance attribute key. Any Cloud Map service instance that
--   contains the specified key and value is returned.
newAwsCloudMapInstanceAttribute :: Text -> Text -> AwsCloudMapInstanceAttribute

-- | The name of an Cloud Map service instance attribute key. Any Cloud Map
--   service instance that contains the specified key and value is
--   returned.
awsCloudMapInstanceAttribute_key :: Lens' AwsCloudMapInstanceAttribute Text

-- | The value of an Cloud Map service instance attribute key. Any Cloud
--   Map service instance that contains the specified key and value is
--   returned.
awsCloudMapInstanceAttribute_value :: Lens' AwsCloudMapInstanceAttribute Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.AwsCloudMapInstanceAttribute.AwsCloudMapInstanceAttribute
instance GHC.Show.Show Amazonka.AppMesh.Types.AwsCloudMapInstanceAttribute.AwsCloudMapInstanceAttribute
instance GHC.Read.Read Amazonka.AppMesh.Types.AwsCloudMapInstanceAttribute.AwsCloudMapInstanceAttribute
instance GHC.Classes.Eq Amazonka.AppMesh.Types.AwsCloudMapInstanceAttribute.AwsCloudMapInstanceAttribute
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.AwsCloudMapInstanceAttribute.AwsCloudMapInstanceAttribute
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.AwsCloudMapInstanceAttribute.AwsCloudMapInstanceAttribute
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.AwsCloudMapInstanceAttribute.AwsCloudMapInstanceAttribute
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.AwsCloudMapInstanceAttribute.AwsCloudMapInstanceAttribute


module Amazonka.AppMesh.Types.AwsCloudMapServiceDiscovery

-- | An object that represents the Cloud Map service discovery information
--   for your virtual node.
--   
--   Cloud Map is not available in the eu-south-1 Region.
--   
--   <i>See:</i> <a>newAwsCloudMapServiceDiscovery</a> smart constructor.
data AwsCloudMapServiceDiscovery
AwsCloudMapServiceDiscovery' :: Maybe [AwsCloudMapInstanceAttribute] -> Text -> Text -> AwsCloudMapServiceDiscovery

-- | A string map that contains attributes with values that you can use to
--   filter instances by any custom attribute that you specified when you
--   registered the instance. Only instances that match all of the
--   specified key/value pairs will be returned.
[$sel:attributes:AwsCloudMapServiceDiscovery'] :: AwsCloudMapServiceDiscovery -> Maybe [AwsCloudMapInstanceAttribute]

-- | The name of the Cloud Map namespace to use.
[$sel:namespaceName:AwsCloudMapServiceDiscovery'] :: AwsCloudMapServiceDiscovery -> Text

-- | The name of the Cloud Map service to use.
[$sel:serviceName:AwsCloudMapServiceDiscovery'] :: AwsCloudMapServiceDiscovery -> Text

-- | Create a value of <a>AwsCloudMapServiceDiscovery</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:AwsCloudMapServiceDiscovery'</a>,
--   <a>awsCloudMapServiceDiscovery_attributes</a> - A string map that
--   contains attributes with values that you can use to filter instances
--   by any custom attribute that you specified when you registered the
--   instance. Only instances that match all of the specified key/value
--   pairs will be returned.
--   
--   <a>$sel:namespaceName:AwsCloudMapServiceDiscovery'</a>,
--   <a>awsCloudMapServiceDiscovery_namespaceName</a> - The name of the
--   Cloud Map namespace to use.
--   
--   <a>$sel:serviceName:AwsCloudMapServiceDiscovery'</a>,
--   <a>awsCloudMapServiceDiscovery_serviceName</a> - The name of the Cloud
--   Map service to use.
newAwsCloudMapServiceDiscovery :: Text -> Text -> AwsCloudMapServiceDiscovery

-- | A string map that contains attributes with values that you can use to
--   filter instances by any custom attribute that you specified when you
--   registered the instance. Only instances that match all of the
--   specified key/value pairs will be returned.
awsCloudMapServiceDiscovery_attributes :: Lens' AwsCloudMapServiceDiscovery (Maybe [AwsCloudMapInstanceAttribute])

-- | The name of the Cloud Map namespace to use.
awsCloudMapServiceDiscovery_namespaceName :: Lens' AwsCloudMapServiceDiscovery Text

-- | The name of the Cloud Map service to use.
awsCloudMapServiceDiscovery_serviceName :: Lens' AwsCloudMapServiceDiscovery Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.AwsCloudMapServiceDiscovery.AwsCloudMapServiceDiscovery
instance GHC.Show.Show Amazonka.AppMesh.Types.AwsCloudMapServiceDiscovery.AwsCloudMapServiceDiscovery
instance GHC.Read.Read Amazonka.AppMesh.Types.AwsCloudMapServiceDiscovery.AwsCloudMapServiceDiscovery
instance GHC.Classes.Eq Amazonka.AppMesh.Types.AwsCloudMapServiceDiscovery.AwsCloudMapServiceDiscovery
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.AwsCloudMapServiceDiscovery.AwsCloudMapServiceDiscovery
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.AwsCloudMapServiceDiscovery.AwsCloudMapServiceDiscovery
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.AwsCloudMapServiceDiscovery.AwsCloudMapServiceDiscovery
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.AwsCloudMapServiceDiscovery.AwsCloudMapServiceDiscovery


module Amazonka.AppMesh.Types.DefaultGatewayRouteRewrite
newtype DefaultGatewayRouteRewrite
DefaultGatewayRouteRewrite' :: Text -> DefaultGatewayRouteRewrite
[fromDefaultGatewayRouteRewrite] :: DefaultGatewayRouteRewrite -> Text
pattern DefaultGatewayRouteRewrite_DISABLED :: DefaultGatewayRouteRewrite
pattern DefaultGatewayRouteRewrite_ENABLED :: DefaultGatewayRouteRewrite
instance Amazonka.Data.XML.ToXML Amazonka.AppMesh.Types.DefaultGatewayRouteRewrite.DefaultGatewayRouteRewrite
instance Amazonka.Data.XML.FromXML Amazonka.AppMesh.Types.DefaultGatewayRouteRewrite.DefaultGatewayRouteRewrite
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppMesh.Types.DefaultGatewayRouteRewrite.DefaultGatewayRouteRewrite
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.DefaultGatewayRouteRewrite.DefaultGatewayRouteRewrite
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppMesh.Types.DefaultGatewayRouteRewrite.DefaultGatewayRouteRewrite
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.DefaultGatewayRouteRewrite.DefaultGatewayRouteRewrite
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.Types.DefaultGatewayRouteRewrite.DefaultGatewayRouteRewrite
instance Amazonka.Data.Headers.ToHeader Amazonka.AppMesh.Types.DefaultGatewayRouteRewrite.DefaultGatewayRouteRewrite
instance Amazonka.Data.Log.ToLog Amazonka.AppMesh.Types.DefaultGatewayRouteRewrite.DefaultGatewayRouteRewrite
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppMesh.Types.DefaultGatewayRouteRewrite.DefaultGatewayRouteRewrite
instance Amazonka.Data.Text.ToText Amazonka.AppMesh.Types.DefaultGatewayRouteRewrite.DefaultGatewayRouteRewrite
instance Amazonka.Data.Text.FromText Amazonka.AppMesh.Types.DefaultGatewayRouteRewrite.DefaultGatewayRouteRewrite
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.DefaultGatewayRouteRewrite.DefaultGatewayRouteRewrite
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.DefaultGatewayRouteRewrite.DefaultGatewayRouteRewrite
instance GHC.Generics.Generic Amazonka.AppMesh.Types.DefaultGatewayRouteRewrite.DefaultGatewayRouteRewrite
instance GHC.Classes.Ord Amazonka.AppMesh.Types.DefaultGatewayRouteRewrite.DefaultGatewayRouteRewrite
instance GHC.Classes.Eq Amazonka.AppMesh.Types.DefaultGatewayRouteRewrite.DefaultGatewayRouteRewrite
instance GHC.Read.Read Amazonka.AppMesh.Types.DefaultGatewayRouteRewrite.DefaultGatewayRouteRewrite
instance GHC.Show.Show Amazonka.AppMesh.Types.DefaultGatewayRouteRewrite.DefaultGatewayRouteRewrite


module Amazonka.AppMesh.Types.DnsResponseType
newtype DnsResponseType
DnsResponseType' :: Text -> DnsResponseType
[fromDnsResponseType] :: DnsResponseType -> Text
pattern DnsResponseType_ENDPOINTS :: DnsResponseType
pattern DnsResponseType_LOADBALANCER :: DnsResponseType
instance Amazonka.Data.XML.ToXML Amazonka.AppMesh.Types.DnsResponseType.DnsResponseType
instance Amazonka.Data.XML.FromXML Amazonka.AppMesh.Types.DnsResponseType.DnsResponseType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppMesh.Types.DnsResponseType.DnsResponseType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.DnsResponseType.DnsResponseType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppMesh.Types.DnsResponseType.DnsResponseType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.DnsResponseType.DnsResponseType
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.Types.DnsResponseType.DnsResponseType
instance Amazonka.Data.Headers.ToHeader Amazonka.AppMesh.Types.DnsResponseType.DnsResponseType
instance Amazonka.Data.Log.ToLog Amazonka.AppMesh.Types.DnsResponseType.DnsResponseType
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppMesh.Types.DnsResponseType.DnsResponseType
instance Amazonka.Data.Text.ToText Amazonka.AppMesh.Types.DnsResponseType.DnsResponseType
instance Amazonka.Data.Text.FromText Amazonka.AppMesh.Types.DnsResponseType.DnsResponseType
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.DnsResponseType.DnsResponseType
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.DnsResponseType.DnsResponseType
instance GHC.Generics.Generic Amazonka.AppMesh.Types.DnsResponseType.DnsResponseType
instance GHC.Classes.Ord Amazonka.AppMesh.Types.DnsResponseType.DnsResponseType
instance GHC.Classes.Eq Amazonka.AppMesh.Types.DnsResponseType.DnsResponseType
instance GHC.Read.Read Amazonka.AppMesh.Types.DnsResponseType.DnsResponseType
instance GHC.Show.Show Amazonka.AppMesh.Types.DnsResponseType.DnsResponseType


module Amazonka.AppMesh.Types.DnsServiceDiscovery

-- | An object that represents the DNS service discovery information for
--   your virtual node.
--   
--   <i>See:</i> <a>newDnsServiceDiscovery</a> smart constructor.
data DnsServiceDiscovery
DnsServiceDiscovery' :: Maybe DnsResponseType -> Text -> DnsServiceDiscovery

-- | Specifies the DNS response type for the virtual node.
[$sel:responseType:DnsServiceDiscovery'] :: DnsServiceDiscovery -> Maybe DnsResponseType

-- | Specifies the DNS service discovery hostname for the virtual node.
[$sel:hostname:DnsServiceDiscovery'] :: DnsServiceDiscovery -> Text

-- | Create a value of <a>DnsServiceDiscovery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseType:DnsServiceDiscovery'</a>,
--   <a>dnsServiceDiscovery_responseType</a> - Specifies the DNS response
--   type for the virtual node.
--   
--   <a>$sel:hostname:DnsServiceDiscovery'</a>,
--   <a>dnsServiceDiscovery_hostname</a> - Specifies the DNS service
--   discovery hostname for the virtual node.
newDnsServiceDiscovery :: Text -> DnsServiceDiscovery

-- | Specifies the DNS response type for the virtual node.
dnsServiceDiscovery_responseType :: Lens' DnsServiceDiscovery (Maybe DnsResponseType)

-- | Specifies the DNS service discovery hostname for the virtual node.
dnsServiceDiscovery_hostname :: Lens' DnsServiceDiscovery Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.DnsServiceDiscovery.DnsServiceDiscovery
instance GHC.Show.Show Amazonka.AppMesh.Types.DnsServiceDiscovery.DnsServiceDiscovery
instance GHC.Read.Read Amazonka.AppMesh.Types.DnsServiceDiscovery.DnsServiceDiscovery
instance GHC.Classes.Eq Amazonka.AppMesh.Types.DnsServiceDiscovery.DnsServiceDiscovery
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.DnsServiceDiscovery.DnsServiceDiscovery
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.DnsServiceDiscovery.DnsServiceDiscovery
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.DnsServiceDiscovery.DnsServiceDiscovery
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.DnsServiceDiscovery.DnsServiceDiscovery


module Amazonka.AppMesh.Types.DurationUnit
newtype DurationUnit
DurationUnit' :: Text -> DurationUnit
[fromDurationUnit] :: DurationUnit -> Text
pattern DurationUnit_Ms :: DurationUnit
pattern DurationUnit_S :: DurationUnit
instance Amazonka.Data.XML.ToXML Amazonka.AppMesh.Types.DurationUnit.DurationUnit
instance Amazonka.Data.XML.FromXML Amazonka.AppMesh.Types.DurationUnit.DurationUnit
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppMesh.Types.DurationUnit.DurationUnit
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.DurationUnit.DurationUnit
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppMesh.Types.DurationUnit.DurationUnit
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.DurationUnit.DurationUnit
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.Types.DurationUnit.DurationUnit
instance Amazonka.Data.Headers.ToHeader Amazonka.AppMesh.Types.DurationUnit.DurationUnit
instance Amazonka.Data.Log.ToLog Amazonka.AppMesh.Types.DurationUnit.DurationUnit
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppMesh.Types.DurationUnit.DurationUnit
instance Amazonka.Data.Text.ToText Amazonka.AppMesh.Types.DurationUnit.DurationUnit
instance Amazonka.Data.Text.FromText Amazonka.AppMesh.Types.DurationUnit.DurationUnit
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.DurationUnit.DurationUnit
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.DurationUnit.DurationUnit
instance GHC.Generics.Generic Amazonka.AppMesh.Types.DurationUnit.DurationUnit
instance GHC.Classes.Ord Amazonka.AppMesh.Types.DurationUnit.DurationUnit
instance GHC.Classes.Eq Amazonka.AppMesh.Types.DurationUnit.DurationUnit
instance GHC.Read.Read Amazonka.AppMesh.Types.DurationUnit.DurationUnit
instance GHC.Show.Show Amazonka.AppMesh.Types.DurationUnit.DurationUnit


module Amazonka.AppMesh.Types.Duration

-- | An object that represents a duration of time.
--   
--   <i>See:</i> <a>newDuration</a> smart constructor.
data Duration
Duration' :: Maybe Natural -> Maybe DurationUnit -> Duration

-- | A number of time units.
[$sel:value:Duration'] :: Duration -> Maybe Natural

-- | A unit of time.
[$sel:unit:Duration'] :: Duration -> Maybe DurationUnit

-- | Create a value of <a>Duration</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Duration'</a>, <a>duration_value</a> - A number of time
--   units.
--   
--   <a>$sel:unit:Duration'</a>, <a>duration_unit</a> - A unit of time.
newDuration :: Duration

-- | A number of time units.
duration_value :: Lens' Duration (Maybe Natural)

-- | A unit of time.
duration_unit :: Lens' Duration (Maybe DurationUnit)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.Duration.Duration
instance GHC.Show.Show Amazonka.AppMesh.Types.Duration.Duration
instance GHC.Read.Read Amazonka.AppMesh.Types.Duration.Duration
instance GHC.Classes.Eq Amazonka.AppMesh.Types.Duration.Duration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.Duration.Duration
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.Duration.Duration
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.Duration.Duration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.Duration.Duration


module Amazonka.AppMesh.Types.EgressFilterType
newtype EgressFilterType
EgressFilterType' :: Text -> EgressFilterType
[fromEgressFilterType] :: EgressFilterType -> Text
pattern EgressFilterType_ALLOW_ALL :: EgressFilterType
pattern EgressFilterType_DROP_ALL :: EgressFilterType
instance Amazonka.Data.XML.ToXML Amazonka.AppMesh.Types.EgressFilterType.EgressFilterType
instance Amazonka.Data.XML.FromXML Amazonka.AppMesh.Types.EgressFilterType.EgressFilterType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppMesh.Types.EgressFilterType.EgressFilterType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.EgressFilterType.EgressFilterType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppMesh.Types.EgressFilterType.EgressFilterType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.EgressFilterType.EgressFilterType
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.Types.EgressFilterType.EgressFilterType
instance Amazonka.Data.Headers.ToHeader Amazonka.AppMesh.Types.EgressFilterType.EgressFilterType
instance Amazonka.Data.Log.ToLog Amazonka.AppMesh.Types.EgressFilterType.EgressFilterType
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppMesh.Types.EgressFilterType.EgressFilterType
instance Amazonka.Data.Text.ToText Amazonka.AppMesh.Types.EgressFilterType.EgressFilterType
instance Amazonka.Data.Text.FromText Amazonka.AppMesh.Types.EgressFilterType.EgressFilterType
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.EgressFilterType.EgressFilterType
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.EgressFilterType.EgressFilterType
instance GHC.Generics.Generic Amazonka.AppMesh.Types.EgressFilterType.EgressFilterType
instance GHC.Classes.Ord Amazonka.AppMesh.Types.EgressFilterType.EgressFilterType
instance GHC.Classes.Eq Amazonka.AppMesh.Types.EgressFilterType.EgressFilterType
instance GHC.Read.Read Amazonka.AppMesh.Types.EgressFilterType.EgressFilterType
instance GHC.Show.Show Amazonka.AppMesh.Types.EgressFilterType.EgressFilterType


module Amazonka.AppMesh.Types.EgressFilter

-- | An object that represents the egress filter rules for a service mesh.
--   
--   <i>See:</i> <a>newEgressFilter</a> smart constructor.
data EgressFilter
EgressFilter' :: EgressFilterType -> EgressFilter

-- | The egress filter type. By default, the type is <tt>DROP_ALL</tt>,
--   which allows egress only from virtual nodes to other defined resources
--   in the service mesh (and any traffic to <tt>*.amazonaws.com</tt> for
--   Amazon Web Services API calls). You can set the egress filter type to
--   <tt>ALLOW_ALL</tt> to allow egress to any endpoint inside or outside
--   of the service mesh.
[$sel:type':EgressFilter'] :: EgressFilter -> EgressFilterType

-- | Create a value of <a>EgressFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':EgressFilter'</a>, <a>egressFilter_type</a> - The egress
--   filter type. By default, the type is <tt>DROP_ALL</tt>, which allows
--   egress only from virtual nodes to other defined resources in the
--   service mesh (and any traffic to <tt>*.amazonaws.com</tt> for Amazon
--   Web Services API calls). You can set the egress filter type to
--   <tt>ALLOW_ALL</tt> to allow egress to any endpoint inside or outside
--   of the service mesh.
newEgressFilter :: EgressFilterType -> EgressFilter

-- | The egress filter type. By default, the type is <tt>DROP_ALL</tt>,
--   which allows egress only from virtual nodes to other defined resources
--   in the service mesh (and any traffic to <tt>*.amazonaws.com</tt> for
--   Amazon Web Services API calls). You can set the egress filter type to
--   <tt>ALLOW_ALL</tt> to allow egress to any endpoint inside or outside
--   of the service mesh.
egressFilter_type :: Lens' EgressFilter EgressFilterType
instance GHC.Generics.Generic Amazonka.AppMesh.Types.EgressFilter.EgressFilter
instance GHC.Show.Show Amazonka.AppMesh.Types.EgressFilter.EgressFilter
instance GHC.Read.Read Amazonka.AppMesh.Types.EgressFilter.EgressFilter
instance GHC.Classes.Eq Amazonka.AppMesh.Types.EgressFilter.EgressFilter
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.EgressFilter.EgressFilter
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.EgressFilter.EgressFilter
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.EgressFilter.EgressFilter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.EgressFilter.EgressFilter


module Amazonka.AppMesh.Types.FileAccessLog

-- | An object that represents an access log file.
--   
--   <i>See:</i> <a>newFileAccessLog</a> smart constructor.
data FileAccessLog
FileAccessLog' :: Text -> FileAccessLog

-- | The file path to write access logs to. You can use
--   <tt>/dev/stdout</tt> to send access logs to standard out and configure
--   your Envoy container to use a log driver, such as <tt>awslogs</tt>, to
--   export the access logs to a log storage service such as Amazon
--   CloudWatch Logs. You can also specify a path in the Envoy container's
--   file system to write the files to disk.
--   
--   The Envoy process must have write permissions to the path that you
--   specify here. Otherwise, Envoy fails to bootstrap properly.
[$sel:path:FileAccessLog'] :: FileAccessLog -> Text

-- | Create a value of <a>FileAccessLog</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:FileAccessLog'</a>, <a>fileAccessLog_path</a> - The file
--   path to write access logs to. You can use <tt>/dev/stdout</tt> to send
--   access logs to standard out and configure your Envoy container to use
--   a log driver, such as <tt>awslogs</tt>, to export the access logs to a
--   log storage service such as Amazon CloudWatch Logs. You can also
--   specify a path in the Envoy container's file system to write the files
--   to disk.
--   
--   The Envoy process must have write permissions to the path that you
--   specify here. Otherwise, Envoy fails to bootstrap properly.
newFileAccessLog :: Text -> FileAccessLog

-- | The file path to write access logs to. You can use
--   <tt>/dev/stdout</tt> to send access logs to standard out and configure
--   your Envoy container to use a log driver, such as <tt>awslogs</tt>, to
--   export the access logs to a log storage service such as Amazon
--   CloudWatch Logs. You can also specify a path in the Envoy container's
--   file system to write the files to disk.
--   
--   The Envoy process must have write permissions to the path that you
--   specify here. Otherwise, Envoy fails to bootstrap properly.
fileAccessLog_path :: Lens' FileAccessLog Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.FileAccessLog.FileAccessLog
instance GHC.Show.Show Amazonka.AppMesh.Types.FileAccessLog.FileAccessLog
instance GHC.Read.Read Amazonka.AppMesh.Types.FileAccessLog.FileAccessLog
instance GHC.Classes.Eq Amazonka.AppMesh.Types.FileAccessLog.FileAccessLog
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.FileAccessLog.FileAccessLog
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.FileAccessLog.FileAccessLog
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.FileAccessLog.FileAccessLog
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.FileAccessLog.FileAccessLog


module Amazonka.AppMesh.Types.AccessLog

-- | An object that represents the access logging information for a virtual
--   node.
--   
--   <i>See:</i> <a>newAccessLog</a> smart constructor.
data AccessLog
AccessLog' :: Maybe FileAccessLog -> AccessLog

-- | The file object to send virtual node access logs to.
[$sel:file:AccessLog'] :: AccessLog -> Maybe FileAccessLog

-- | Create a value of <a>AccessLog</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:file:AccessLog'</a>, <a>accessLog_file</a> - The file object
--   to send virtual node access logs to.
newAccessLog :: AccessLog

-- | The file object to send virtual node access logs to.
accessLog_file :: Lens' AccessLog (Maybe FileAccessLog)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.AccessLog.AccessLog
instance GHC.Show.Show Amazonka.AppMesh.Types.AccessLog.AccessLog
instance GHC.Read.Read Amazonka.AppMesh.Types.AccessLog.AccessLog
instance GHC.Classes.Eq Amazonka.AppMesh.Types.AccessLog.AccessLog
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.AccessLog.AccessLog
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.AccessLog.AccessLog
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.AccessLog.AccessLog
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.AccessLog.AccessLog


module Amazonka.AppMesh.Types.GatewayRouteHostnameMatch

-- | An object representing the gateway route host name to match.
--   
--   <i>See:</i> <a>newGatewayRouteHostnameMatch</a> smart constructor.
data GatewayRouteHostnameMatch
GatewayRouteHostnameMatch' :: Maybe Text -> Maybe Text -> GatewayRouteHostnameMatch

-- | The specified ending characters of the host name to match on.
[$sel:suffix:GatewayRouteHostnameMatch'] :: GatewayRouteHostnameMatch -> Maybe Text

-- | The exact host name to match on.
[$sel:exact:GatewayRouteHostnameMatch'] :: GatewayRouteHostnameMatch -> Maybe Text

-- | Create a value of <a>GatewayRouteHostnameMatch</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suffix:GatewayRouteHostnameMatch'</a>,
--   <a>gatewayRouteHostnameMatch_suffix</a> - The specified ending
--   characters of the host name to match on.
--   
--   <a>$sel:exact:GatewayRouteHostnameMatch'</a>,
--   <a>gatewayRouteHostnameMatch_exact</a> - The exact host name to match
--   on.
newGatewayRouteHostnameMatch :: GatewayRouteHostnameMatch

-- | The specified ending characters of the host name to match on.
gatewayRouteHostnameMatch_suffix :: Lens' GatewayRouteHostnameMatch (Maybe Text)

-- | The exact host name to match on.
gatewayRouteHostnameMatch_exact :: Lens' GatewayRouteHostnameMatch (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GatewayRouteHostnameMatch.GatewayRouteHostnameMatch
instance GHC.Show.Show Amazonka.AppMesh.Types.GatewayRouteHostnameMatch.GatewayRouteHostnameMatch
instance GHC.Read.Read Amazonka.AppMesh.Types.GatewayRouteHostnameMatch.GatewayRouteHostnameMatch
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GatewayRouteHostnameMatch.GatewayRouteHostnameMatch
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GatewayRouteHostnameMatch.GatewayRouteHostnameMatch
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GatewayRouteHostnameMatch.GatewayRouteHostnameMatch
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GatewayRouteHostnameMatch.GatewayRouteHostnameMatch
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.GatewayRouteHostnameMatch.GatewayRouteHostnameMatch


module Amazonka.AppMesh.Types.GatewayRouteHostnameRewrite

-- | An object representing the gateway route host name to rewrite.
--   
--   <i>See:</i> <a>newGatewayRouteHostnameRewrite</a> smart constructor.
data GatewayRouteHostnameRewrite
GatewayRouteHostnameRewrite' :: Maybe DefaultGatewayRouteRewrite -> GatewayRouteHostnameRewrite

-- | The default target host name to write to.
[$sel:defaultTargetHostname:GatewayRouteHostnameRewrite'] :: GatewayRouteHostnameRewrite -> Maybe DefaultGatewayRouteRewrite

-- | Create a value of <a>GatewayRouteHostnameRewrite</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultTargetHostname:GatewayRouteHostnameRewrite'</a>,
--   <a>gatewayRouteHostnameRewrite_defaultTargetHostname</a> - The default
--   target host name to write to.
newGatewayRouteHostnameRewrite :: GatewayRouteHostnameRewrite

-- | The default target host name to write to.
gatewayRouteHostnameRewrite_defaultTargetHostname :: Lens' GatewayRouteHostnameRewrite (Maybe DefaultGatewayRouteRewrite)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GatewayRouteHostnameRewrite.GatewayRouteHostnameRewrite
instance GHC.Show.Show Amazonka.AppMesh.Types.GatewayRouteHostnameRewrite.GatewayRouteHostnameRewrite
instance GHC.Read.Read Amazonka.AppMesh.Types.GatewayRouteHostnameRewrite.GatewayRouteHostnameRewrite
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GatewayRouteHostnameRewrite.GatewayRouteHostnameRewrite
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GatewayRouteHostnameRewrite.GatewayRouteHostnameRewrite
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GatewayRouteHostnameRewrite.GatewayRouteHostnameRewrite
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GatewayRouteHostnameRewrite.GatewayRouteHostnameRewrite
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.GatewayRouteHostnameRewrite.GatewayRouteHostnameRewrite


module Amazonka.AppMesh.Types.GatewayRouteRef

-- | An object that represents a gateway route returned by a list
--   operation.
--   
--   <i>See:</i> <a>newGatewayRouteRef</a> smart constructor.
data GatewayRouteRef
GatewayRouteRef' :: Text -> POSIX -> Text -> POSIX -> Text -> Text -> Text -> Integer -> Text -> GatewayRouteRef

-- | The full Amazon Resource Name (ARN) for the gateway route.
[$sel:arn:GatewayRouteRef'] :: GatewayRouteRef -> Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:GatewayRouteRef'] :: GatewayRouteRef -> POSIX

-- | The name of the gateway route.
[$sel:gatewayRouteName:GatewayRouteRef'] :: GatewayRouteRef -> Text

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
[$sel:lastUpdatedAt:GatewayRouteRef'] :: GatewayRouteRef -> POSIX

-- | The name of the service mesh that the resource resides in.
[$sel:meshName:GatewayRouteRef'] :: GatewayRouteRef -> Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:GatewayRouteRef'] :: GatewayRouteRef -> Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
[$sel:resourceOwner:GatewayRouteRef'] :: GatewayRouteRef -> Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
[$sel:version:GatewayRouteRef'] :: GatewayRouteRef -> Integer

-- | The virtual gateway that the gateway route is associated with.
[$sel:virtualGatewayName:GatewayRouteRef'] :: GatewayRouteRef -> Text

-- | Create a value of <a>GatewayRouteRef</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GatewayRouteRef'</a>, <a>gatewayRouteRef_arn</a> - The
--   full Amazon Resource Name (ARN) for the gateway route.
--   
--   <a>$sel:createdAt:GatewayRouteRef'</a>,
--   <a>gatewayRouteRef_createdAt</a> - The Unix epoch timestamp in seconds
--   for when the resource was created.
--   
--   <a>$sel:gatewayRouteName:GatewayRouteRef'</a>,
--   <a>gatewayRouteRef_gatewayRouteName</a> - The name of the gateway
--   route.
--   
--   <a>$sel:lastUpdatedAt:GatewayRouteRef'</a>,
--   <a>gatewayRouteRef_lastUpdatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was last updated.
--   
--   <a>$sel:meshName:GatewayRouteRef'</a>, <a>gatewayRouteRef_meshName</a>
--   - The name of the service mesh that the resource resides in.
--   
--   <a>$sel:meshOwner:GatewayRouteRef'</a>,
--   <a>gatewayRouteRef_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:GatewayRouteRef'</a>,
--   <a>gatewayRouteRef_resourceOwner</a> - The AWS IAM account ID of the
--   resource owner. If the account ID is not your own, then it's the ID of
--   the mesh owner or of another account that the mesh is shared with. For
--   more information about mesh sharing, see <a>Working with shared
--   meshes</a>.
--   
--   <a>$sel:version:GatewayRouteRef'</a>, <a>gatewayRouteRef_version</a> -
--   The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
--   
--   <a>$sel:virtualGatewayName:GatewayRouteRef'</a>,
--   <a>gatewayRouteRef_virtualGatewayName</a> - The virtual gateway that
--   the gateway route is associated with.
newGatewayRouteRef :: Text -> UTCTime -> Text -> UTCTime -> Text -> Text -> Text -> Integer -> Text -> GatewayRouteRef

-- | The full Amazon Resource Name (ARN) for the gateway route.
gatewayRouteRef_arn :: Lens' GatewayRouteRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
gatewayRouteRef_createdAt :: Lens' GatewayRouteRef UTCTime

-- | The name of the gateway route.
gatewayRouteRef_gatewayRouteName :: Lens' GatewayRouteRef Text

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
gatewayRouteRef_lastUpdatedAt :: Lens' GatewayRouteRef UTCTime

-- | The name of the service mesh that the resource resides in.
gatewayRouteRef_meshName :: Lens' GatewayRouteRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
gatewayRouteRef_meshOwner :: Lens' GatewayRouteRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
gatewayRouteRef_resourceOwner :: Lens' GatewayRouteRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
gatewayRouteRef_version :: Lens' GatewayRouteRef Integer

-- | The virtual gateway that the gateway route is associated with.
gatewayRouteRef_virtualGatewayName :: Lens' GatewayRouteRef Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GatewayRouteRef.GatewayRouteRef
instance GHC.Show.Show Amazonka.AppMesh.Types.GatewayRouteRef.GatewayRouteRef
instance GHC.Read.Read Amazonka.AppMesh.Types.GatewayRouteRef.GatewayRouteRef
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GatewayRouteRef.GatewayRouteRef
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GatewayRouteRef.GatewayRouteRef
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GatewayRouteRef.GatewayRouteRef
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GatewayRouteRef.GatewayRouteRef


module Amazonka.AppMesh.Types.GatewayRouteStatusCode
newtype GatewayRouteStatusCode
GatewayRouteStatusCode' :: Text -> GatewayRouteStatusCode
[fromGatewayRouteStatusCode] :: GatewayRouteStatusCode -> Text
pattern GatewayRouteStatusCode_ACTIVE :: GatewayRouteStatusCode
pattern GatewayRouteStatusCode_DELETED :: GatewayRouteStatusCode
pattern GatewayRouteStatusCode_INACTIVE :: GatewayRouteStatusCode
instance Amazonka.Data.XML.ToXML Amazonka.AppMesh.Types.GatewayRouteStatusCode.GatewayRouteStatusCode
instance Amazonka.Data.XML.FromXML Amazonka.AppMesh.Types.GatewayRouteStatusCode.GatewayRouteStatusCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppMesh.Types.GatewayRouteStatusCode.GatewayRouteStatusCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.GatewayRouteStatusCode.GatewayRouteStatusCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppMesh.Types.GatewayRouteStatusCode.GatewayRouteStatusCode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GatewayRouteStatusCode.GatewayRouteStatusCode
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.Types.GatewayRouteStatusCode.GatewayRouteStatusCode
instance Amazonka.Data.Headers.ToHeader Amazonka.AppMesh.Types.GatewayRouteStatusCode.GatewayRouteStatusCode
instance Amazonka.Data.Log.ToLog Amazonka.AppMesh.Types.GatewayRouteStatusCode.GatewayRouteStatusCode
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppMesh.Types.GatewayRouteStatusCode.GatewayRouteStatusCode
instance Amazonka.Data.Text.ToText Amazonka.AppMesh.Types.GatewayRouteStatusCode.GatewayRouteStatusCode
instance Amazonka.Data.Text.FromText Amazonka.AppMesh.Types.GatewayRouteStatusCode.GatewayRouteStatusCode
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GatewayRouteStatusCode.GatewayRouteStatusCode
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GatewayRouteStatusCode.GatewayRouteStatusCode
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GatewayRouteStatusCode.GatewayRouteStatusCode
instance GHC.Classes.Ord Amazonka.AppMesh.Types.GatewayRouteStatusCode.GatewayRouteStatusCode
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GatewayRouteStatusCode.GatewayRouteStatusCode
instance GHC.Read.Read Amazonka.AppMesh.Types.GatewayRouteStatusCode.GatewayRouteStatusCode
instance GHC.Show.Show Amazonka.AppMesh.Types.GatewayRouteStatusCode.GatewayRouteStatusCode


module Amazonka.AppMesh.Types.GatewayRouteStatus

-- | An object that represents the current status of a gateway route.
--   
--   <i>See:</i> <a>newGatewayRouteStatus</a> smart constructor.
data GatewayRouteStatus
GatewayRouteStatus' :: GatewayRouteStatusCode -> GatewayRouteStatus

-- | The current status for the gateway route.
[$sel:status:GatewayRouteStatus'] :: GatewayRouteStatus -> GatewayRouteStatusCode

-- | Create a value of <a>GatewayRouteStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GatewayRouteStatus'</a>,
--   <a>gatewayRouteStatus_status</a> - The current status for the gateway
--   route.
newGatewayRouteStatus :: GatewayRouteStatusCode -> GatewayRouteStatus

-- | The current status for the gateway route.
gatewayRouteStatus_status :: Lens' GatewayRouteStatus GatewayRouteStatusCode
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GatewayRouteStatus.GatewayRouteStatus
instance GHC.Show.Show Amazonka.AppMesh.Types.GatewayRouteStatus.GatewayRouteStatus
instance GHC.Read.Read Amazonka.AppMesh.Types.GatewayRouteStatus.GatewayRouteStatus
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GatewayRouteStatus.GatewayRouteStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GatewayRouteStatus.GatewayRouteStatus
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GatewayRouteStatus.GatewayRouteStatus
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GatewayRouteStatus.GatewayRouteStatus


module Amazonka.AppMesh.Types.GatewayRouteVirtualService

-- | An object that represents the virtual service that traffic is routed
--   to.
--   
--   <i>See:</i> <a>newGatewayRouteVirtualService</a> smart constructor.
data GatewayRouteVirtualService
GatewayRouteVirtualService' :: Text -> GatewayRouteVirtualService

-- | The name of the virtual service that traffic is routed to.
[$sel:virtualServiceName:GatewayRouteVirtualService'] :: GatewayRouteVirtualService -> Text

-- | Create a value of <a>GatewayRouteVirtualService</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualServiceName:GatewayRouteVirtualService'</a>,
--   <a>gatewayRouteVirtualService_virtualServiceName</a> - The name of the
--   virtual service that traffic is routed to.
newGatewayRouteVirtualService :: Text -> GatewayRouteVirtualService

-- | The name of the virtual service that traffic is routed to.
gatewayRouteVirtualService_virtualServiceName :: Lens' GatewayRouteVirtualService Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GatewayRouteVirtualService.GatewayRouteVirtualService
instance GHC.Show.Show Amazonka.AppMesh.Types.GatewayRouteVirtualService.GatewayRouteVirtualService
instance GHC.Read.Read Amazonka.AppMesh.Types.GatewayRouteVirtualService.GatewayRouteVirtualService
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GatewayRouteVirtualService.GatewayRouteVirtualService
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GatewayRouteVirtualService.GatewayRouteVirtualService
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GatewayRouteVirtualService.GatewayRouteVirtualService
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GatewayRouteVirtualService.GatewayRouteVirtualService
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.GatewayRouteVirtualService.GatewayRouteVirtualService


module Amazonka.AppMesh.Types.GatewayRouteTarget

-- | An object that represents a gateway route target.
--   
--   <i>See:</i> <a>newGatewayRouteTarget</a> smart constructor.
data GatewayRouteTarget
GatewayRouteTarget' :: GatewayRouteVirtualService -> GatewayRouteTarget

-- | An object that represents a virtual service gateway route target.
[$sel:virtualService:GatewayRouteTarget'] :: GatewayRouteTarget -> GatewayRouteVirtualService

-- | Create a value of <a>GatewayRouteTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualService:GatewayRouteTarget'</a>,
--   <a>gatewayRouteTarget_virtualService</a> - An object that represents a
--   virtual service gateway route target.
newGatewayRouteTarget :: GatewayRouteVirtualService -> GatewayRouteTarget

-- | An object that represents a virtual service gateway route target.
gatewayRouteTarget_virtualService :: Lens' GatewayRouteTarget GatewayRouteVirtualService
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GatewayRouteTarget.GatewayRouteTarget
instance GHC.Show.Show Amazonka.AppMesh.Types.GatewayRouteTarget.GatewayRouteTarget
instance GHC.Read.Read Amazonka.AppMesh.Types.GatewayRouteTarget.GatewayRouteTarget
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GatewayRouteTarget.GatewayRouteTarget
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GatewayRouteTarget.GatewayRouteTarget
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GatewayRouteTarget.GatewayRouteTarget
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GatewayRouteTarget.GatewayRouteTarget
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.GatewayRouteTarget.GatewayRouteTarget


module Amazonka.AppMesh.Types.GrpcGatewayRouteRewrite

-- | An object that represents the gateway route to rewrite.
--   
--   <i>See:</i> <a>newGrpcGatewayRouteRewrite</a> smart constructor.
data GrpcGatewayRouteRewrite
GrpcGatewayRouteRewrite' :: Maybe GatewayRouteHostnameRewrite -> GrpcGatewayRouteRewrite

-- | The host name of the gateway route to rewrite.
[$sel:hostname:GrpcGatewayRouteRewrite'] :: GrpcGatewayRouteRewrite -> Maybe GatewayRouteHostnameRewrite

-- | Create a value of <a>GrpcGatewayRouteRewrite</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostname:GrpcGatewayRouteRewrite'</a>,
--   <a>grpcGatewayRouteRewrite_hostname</a> - The host name of the gateway
--   route to rewrite.
newGrpcGatewayRouteRewrite :: GrpcGatewayRouteRewrite

-- | The host name of the gateway route to rewrite.
grpcGatewayRouteRewrite_hostname :: Lens' GrpcGatewayRouteRewrite (Maybe GatewayRouteHostnameRewrite)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GrpcGatewayRouteRewrite.GrpcGatewayRouteRewrite
instance GHC.Show.Show Amazonka.AppMesh.Types.GrpcGatewayRouteRewrite.GrpcGatewayRouteRewrite
instance GHC.Read.Read Amazonka.AppMesh.Types.GrpcGatewayRouteRewrite.GrpcGatewayRouteRewrite
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GrpcGatewayRouteRewrite.GrpcGatewayRouteRewrite
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GrpcGatewayRouteRewrite.GrpcGatewayRouteRewrite
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GrpcGatewayRouteRewrite.GrpcGatewayRouteRewrite
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GrpcGatewayRouteRewrite.GrpcGatewayRouteRewrite
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.GrpcGatewayRouteRewrite.GrpcGatewayRouteRewrite


module Amazonka.AppMesh.Types.GrpcGatewayRouteAction

-- | An object that represents the action to take if a match is determined.
--   
--   <i>See:</i> <a>newGrpcGatewayRouteAction</a> smart constructor.
data GrpcGatewayRouteAction
GrpcGatewayRouteAction' :: Maybe GrpcGatewayRouteRewrite -> GatewayRouteTarget -> GrpcGatewayRouteAction

-- | The gateway route action to rewrite.
[$sel:rewrite:GrpcGatewayRouteAction'] :: GrpcGatewayRouteAction -> Maybe GrpcGatewayRouteRewrite

-- | An object that represents the target that traffic is routed to when a
--   request matches the gateway route.
[$sel:target:GrpcGatewayRouteAction'] :: GrpcGatewayRouteAction -> GatewayRouteTarget

-- | Create a value of <a>GrpcGatewayRouteAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rewrite:GrpcGatewayRouteAction'</a>,
--   <a>grpcGatewayRouteAction_rewrite</a> - The gateway route action to
--   rewrite.
--   
--   <a>$sel:target:GrpcGatewayRouteAction'</a>,
--   <a>grpcGatewayRouteAction_target</a> - An object that represents the
--   target that traffic is routed to when a request matches the gateway
--   route.
newGrpcGatewayRouteAction :: GatewayRouteTarget -> GrpcGatewayRouteAction

-- | The gateway route action to rewrite.
grpcGatewayRouteAction_rewrite :: Lens' GrpcGatewayRouteAction (Maybe GrpcGatewayRouteRewrite)

-- | An object that represents the target that traffic is routed to when a
--   request matches the gateway route.
grpcGatewayRouteAction_target :: Lens' GrpcGatewayRouteAction GatewayRouteTarget
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GrpcGatewayRouteAction.GrpcGatewayRouteAction
instance GHC.Show.Show Amazonka.AppMesh.Types.GrpcGatewayRouteAction.GrpcGatewayRouteAction
instance GHC.Read.Read Amazonka.AppMesh.Types.GrpcGatewayRouteAction.GrpcGatewayRouteAction
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GrpcGatewayRouteAction.GrpcGatewayRouteAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GrpcGatewayRouteAction.GrpcGatewayRouteAction
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GrpcGatewayRouteAction.GrpcGatewayRouteAction
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GrpcGatewayRouteAction.GrpcGatewayRouteAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.GrpcGatewayRouteAction.GrpcGatewayRouteAction


module Amazonka.AppMesh.Types.GrpcRetryPolicyEvent
newtype GrpcRetryPolicyEvent
GrpcRetryPolicyEvent' :: Text -> GrpcRetryPolicyEvent
[fromGrpcRetryPolicyEvent] :: GrpcRetryPolicyEvent -> Text
pattern GrpcRetryPolicyEvent_Cancelled :: GrpcRetryPolicyEvent
pattern GrpcRetryPolicyEvent_Deadline_exceeded :: GrpcRetryPolicyEvent
pattern GrpcRetryPolicyEvent_Internal :: GrpcRetryPolicyEvent
pattern GrpcRetryPolicyEvent_Resource_exhausted :: GrpcRetryPolicyEvent
pattern GrpcRetryPolicyEvent_Unavailable :: GrpcRetryPolicyEvent
instance Amazonka.Data.XML.ToXML Amazonka.AppMesh.Types.GrpcRetryPolicyEvent.GrpcRetryPolicyEvent
instance Amazonka.Data.XML.FromXML Amazonka.AppMesh.Types.GrpcRetryPolicyEvent.GrpcRetryPolicyEvent
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppMesh.Types.GrpcRetryPolicyEvent.GrpcRetryPolicyEvent
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.GrpcRetryPolicyEvent.GrpcRetryPolicyEvent
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppMesh.Types.GrpcRetryPolicyEvent.GrpcRetryPolicyEvent
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GrpcRetryPolicyEvent.GrpcRetryPolicyEvent
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.Types.GrpcRetryPolicyEvent.GrpcRetryPolicyEvent
instance Amazonka.Data.Headers.ToHeader Amazonka.AppMesh.Types.GrpcRetryPolicyEvent.GrpcRetryPolicyEvent
instance Amazonka.Data.Log.ToLog Amazonka.AppMesh.Types.GrpcRetryPolicyEvent.GrpcRetryPolicyEvent
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppMesh.Types.GrpcRetryPolicyEvent.GrpcRetryPolicyEvent
instance Amazonka.Data.Text.ToText Amazonka.AppMesh.Types.GrpcRetryPolicyEvent.GrpcRetryPolicyEvent
instance Amazonka.Data.Text.FromText Amazonka.AppMesh.Types.GrpcRetryPolicyEvent.GrpcRetryPolicyEvent
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GrpcRetryPolicyEvent.GrpcRetryPolicyEvent
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GrpcRetryPolicyEvent.GrpcRetryPolicyEvent
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GrpcRetryPolicyEvent.GrpcRetryPolicyEvent
instance GHC.Classes.Ord Amazonka.AppMesh.Types.GrpcRetryPolicyEvent.GrpcRetryPolicyEvent
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GrpcRetryPolicyEvent.GrpcRetryPolicyEvent
instance GHC.Read.Read Amazonka.AppMesh.Types.GrpcRetryPolicyEvent.GrpcRetryPolicyEvent
instance GHC.Show.Show Amazonka.AppMesh.Types.GrpcRetryPolicyEvent.GrpcRetryPolicyEvent


module Amazonka.AppMesh.Types.GrpcTimeout

-- | An object that represents types of timeouts.
--   
--   <i>See:</i> <a>newGrpcTimeout</a> smart constructor.
data GrpcTimeout
GrpcTimeout' :: Maybe Duration -> Maybe Duration -> GrpcTimeout

-- | An object that represents an idle timeout. An idle timeout bounds the
--   amount of time that a connection may be idle. The default value is
--   none.
[$sel:idle:GrpcTimeout'] :: GrpcTimeout -> Maybe Duration

-- | An object that represents a per request timeout. The default value is
--   15 seconds. If you set a higher timeout, then make sure that the
--   higher value is set for each App Mesh resource in a conversation. For
--   example, if a virtual node backend uses a virtual router provider to
--   route to another virtual node, then the timeout should be greater than
--   15 seconds for the source and destination virtual node and the route.
[$sel:perRequest:GrpcTimeout'] :: GrpcTimeout -> Maybe Duration

-- | Create a value of <a>GrpcTimeout</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idle:GrpcTimeout'</a>, <a>grpcTimeout_idle</a> - An object
--   that represents an idle timeout. An idle timeout bounds the amount of
--   time that a connection may be idle. The default value is none.
--   
--   <a>$sel:perRequest:GrpcTimeout'</a>, <a>grpcTimeout_perRequest</a> -
--   An object that represents a per request timeout. The default value is
--   15 seconds. If you set a higher timeout, then make sure that the
--   higher value is set for each App Mesh resource in a conversation. For
--   example, if a virtual node backend uses a virtual router provider to
--   route to another virtual node, then the timeout should be greater than
--   15 seconds for the source and destination virtual node and the route.
newGrpcTimeout :: GrpcTimeout

-- | An object that represents an idle timeout. An idle timeout bounds the
--   amount of time that a connection may be idle. The default value is
--   none.
grpcTimeout_idle :: Lens' GrpcTimeout (Maybe Duration)

-- | An object that represents a per request timeout. The default value is
--   15 seconds. If you set a higher timeout, then make sure that the
--   higher value is set for each App Mesh resource in a conversation. For
--   example, if a virtual node backend uses a virtual router provider to
--   route to another virtual node, then the timeout should be greater than
--   15 seconds for the source and destination virtual node and the route.
grpcTimeout_perRequest :: Lens' GrpcTimeout (Maybe Duration)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GrpcTimeout.GrpcTimeout
instance GHC.Show.Show Amazonka.AppMesh.Types.GrpcTimeout.GrpcTimeout
instance GHC.Read.Read Amazonka.AppMesh.Types.GrpcTimeout.GrpcTimeout
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GrpcTimeout.GrpcTimeout
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GrpcTimeout.GrpcTimeout
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GrpcTimeout.GrpcTimeout
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GrpcTimeout.GrpcTimeout
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.GrpcTimeout.GrpcTimeout


module Amazonka.AppMesh.Types.HttpGatewayRoutePathRewrite

-- | An object that represents the path to rewrite.
--   
--   <i>See:</i> <a>newHttpGatewayRoutePathRewrite</a> smart constructor.
data HttpGatewayRoutePathRewrite
HttpGatewayRoutePathRewrite' :: Maybe Text -> HttpGatewayRoutePathRewrite

-- | The exact path to rewrite.
[$sel:exact:HttpGatewayRoutePathRewrite'] :: HttpGatewayRoutePathRewrite -> Maybe Text

-- | Create a value of <a>HttpGatewayRoutePathRewrite</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exact:HttpGatewayRoutePathRewrite'</a>,
--   <a>httpGatewayRoutePathRewrite_exact</a> - The exact path to rewrite.
newHttpGatewayRoutePathRewrite :: HttpGatewayRoutePathRewrite

-- | The exact path to rewrite.
httpGatewayRoutePathRewrite_exact :: Lens' HttpGatewayRoutePathRewrite (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.HttpGatewayRoutePathRewrite.HttpGatewayRoutePathRewrite
instance GHC.Show.Show Amazonka.AppMesh.Types.HttpGatewayRoutePathRewrite.HttpGatewayRoutePathRewrite
instance GHC.Read.Read Amazonka.AppMesh.Types.HttpGatewayRoutePathRewrite.HttpGatewayRoutePathRewrite
instance GHC.Classes.Eq Amazonka.AppMesh.Types.HttpGatewayRoutePathRewrite.HttpGatewayRoutePathRewrite
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.HttpGatewayRoutePathRewrite.HttpGatewayRoutePathRewrite
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.HttpGatewayRoutePathRewrite.HttpGatewayRoutePathRewrite
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.HttpGatewayRoutePathRewrite.HttpGatewayRoutePathRewrite
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.HttpGatewayRoutePathRewrite.HttpGatewayRoutePathRewrite


module Amazonka.AppMesh.Types.HttpGatewayRoutePrefixRewrite

-- | An object representing the beginning characters of the route to
--   rewrite.
--   
--   <i>See:</i> <a>newHttpGatewayRoutePrefixRewrite</a> smart constructor.
data HttpGatewayRoutePrefixRewrite
HttpGatewayRoutePrefixRewrite' :: Maybe Text -> Maybe DefaultGatewayRouteRewrite -> HttpGatewayRoutePrefixRewrite

-- | The value used to replace the incoming route prefix when rewritten.
[$sel:value:HttpGatewayRoutePrefixRewrite'] :: HttpGatewayRoutePrefixRewrite -> Maybe Text

-- | The default prefix used to replace the incoming route prefix when
--   rewritten.
[$sel:defaultPrefix:HttpGatewayRoutePrefixRewrite'] :: HttpGatewayRoutePrefixRewrite -> Maybe DefaultGatewayRouteRewrite

-- | Create a value of <a>HttpGatewayRoutePrefixRewrite</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:HttpGatewayRoutePrefixRewrite'</a>,
--   <a>httpGatewayRoutePrefixRewrite_value</a> - The value used to replace
--   the incoming route prefix when rewritten.
--   
--   <a>$sel:defaultPrefix:HttpGatewayRoutePrefixRewrite'</a>,
--   <a>httpGatewayRoutePrefixRewrite_defaultPrefix</a> - The default
--   prefix used to replace the incoming route prefix when rewritten.
newHttpGatewayRoutePrefixRewrite :: HttpGatewayRoutePrefixRewrite

-- | The value used to replace the incoming route prefix when rewritten.
httpGatewayRoutePrefixRewrite_value :: Lens' HttpGatewayRoutePrefixRewrite (Maybe Text)

-- | The default prefix used to replace the incoming route prefix when
--   rewritten.
httpGatewayRoutePrefixRewrite_defaultPrefix :: Lens' HttpGatewayRoutePrefixRewrite (Maybe DefaultGatewayRouteRewrite)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.HttpGatewayRoutePrefixRewrite.HttpGatewayRoutePrefixRewrite
instance GHC.Show.Show Amazonka.AppMesh.Types.HttpGatewayRoutePrefixRewrite.HttpGatewayRoutePrefixRewrite
instance GHC.Read.Read Amazonka.AppMesh.Types.HttpGatewayRoutePrefixRewrite.HttpGatewayRoutePrefixRewrite
instance GHC.Classes.Eq Amazonka.AppMesh.Types.HttpGatewayRoutePrefixRewrite.HttpGatewayRoutePrefixRewrite
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.HttpGatewayRoutePrefixRewrite.HttpGatewayRoutePrefixRewrite
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.HttpGatewayRoutePrefixRewrite.HttpGatewayRoutePrefixRewrite
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.HttpGatewayRoutePrefixRewrite.HttpGatewayRoutePrefixRewrite
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.HttpGatewayRoutePrefixRewrite.HttpGatewayRoutePrefixRewrite


module Amazonka.AppMesh.Types.HttpGatewayRouteRewrite

-- | An object representing the gateway route to rewrite.
--   
--   <i>See:</i> <a>newHttpGatewayRouteRewrite</a> smart constructor.
data HttpGatewayRouteRewrite
HttpGatewayRouteRewrite' :: Maybe GatewayRouteHostnameRewrite -> Maybe HttpGatewayRoutePathRewrite -> Maybe HttpGatewayRoutePrefixRewrite -> HttpGatewayRouteRewrite

-- | The host name to rewrite.
[$sel:hostname:HttpGatewayRouteRewrite'] :: HttpGatewayRouteRewrite -> Maybe GatewayRouteHostnameRewrite

-- | The path to rewrite.
[$sel:path:HttpGatewayRouteRewrite'] :: HttpGatewayRouteRewrite -> Maybe HttpGatewayRoutePathRewrite

-- | The specified beginning characters to rewrite.
[$sel:prefix:HttpGatewayRouteRewrite'] :: HttpGatewayRouteRewrite -> Maybe HttpGatewayRoutePrefixRewrite

-- | Create a value of <a>HttpGatewayRouteRewrite</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostname:HttpGatewayRouteRewrite'</a>,
--   <a>httpGatewayRouteRewrite_hostname</a> - The host name to rewrite.
--   
--   <a>$sel:path:HttpGatewayRouteRewrite'</a>,
--   <a>httpGatewayRouteRewrite_path</a> - The path to rewrite.
--   
--   <a>$sel:prefix:HttpGatewayRouteRewrite'</a>,
--   <a>httpGatewayRouteRewrite_prefix</a> - The specified beginning
--   characters to rewrite.
newHttpGatewayRouteRewrite :: HttpGatewayRouteRewrite

-- | The host name to rewrite.
httpGatewayRouteRewrite_hostname :: Lens' HttpGatewayRouteRewrite (Maybe GatewayRouteHostnameRewrite)

-- | The path to rewrite.
httpGatewayRouteRewrite_path :: Lens' HttpGatewayRouteRewrite (Maybe HttpGatewayRoutePathRewrite)

-- | The specified beginning characters to rewrite.
httpGatewayRouteRewrite_prefix :: Lens' HttpGatewayRouteRewrite (Maybe HttpGatewayRoutePrefixRewrite)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.HttpGatewayRouteRewrite.HttpGatewayRouteRewrite
instance GHC.Show.Show Amazonka.AppMesh.Types.HttpGatewayRouteRewrite.HttpGatewayRouteRewrite
instance GHC.Read.Read Amazonka.AppMesh.Types.HttpGatewayRouteRewrite.HttpGatewayRouteRewrite
instance GHC.Classes.Eq Amazonka.AppMesh.Types.HttpGatewayRouteRewrite.HttpGatewayRouteRewrite
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.HttpGatewayRouteRewrite.HttpGatewayRouteRewrite
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.HttpGatewayRouteRewrite.HttpGatewayRouteRewrite
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.HttpGatewayRouteRewrite.HttpGatewayRouteRewrite
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.HttpGatewayRouteRewrite.HttpGatewayRouteRewrite


module Amazonka.AppMesh.Types.HttpGatewayRouteAction

-- | An object that represents the action to take if a match is determined.
--   
--   <i>See:</i> <a>newHttpGatewayRouteAction</a> smart constructor.
data HttpGatewayRouteAction
HttpGatewayRouteAction' :: Maybe HttpGatewayRouteRewrite -> GatewayRouteTarget -> HttpGatewayRouteAction

-- | The gateway route action to rewrite.
[$sel:rewrite:HttpGatewayRouteAction'] :: HttpGatewayRouteAction -> Maybe HttpGatewayRouteRewrite

-- | An object that represents the target that traffic is routed to when a
--   request matches the gateway route.
[$sel:target:HttpGatewayRouteAction'] :: HttpGatewayRouteAction -> GatewayRouteTarget

-- | Create a value of <a>HttpGatewayRouteAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rewrite:HttpGatewayRouteAction'</a>,
--   <a>httpGatewayRouteAction_rewrite</a> - The gateway route action to
--   rewrite.
--   
--   <a>$sel:target:HttpGatewayRouteAction'</a>,
--   <a>httpGatewayRouteAction_target</a> - An object that represents the
--   target that traffic is routed to when a request matches the gateway
--   route.
newHttpGatewayRouteAction :: GatewayRouteTarget -> HttpGatewayRouteAction

-- | The gateway route action to rewrite.
httpGatewayRouteAction_rewrite :: Lens' HttpGatewayRouteAction (Maybe HttpGatewayRouteRewrite)

-- | An object that represents the target that traffic is routed to when a
--   request matches the gateway route.
httpGatewayRouteAction_target :: Lens' HttpGatewayRouteAction GatewayRouteTarget
instance GHC.Generics.Generic Amazonka.AppMesh.Types.HttpGatewayRouteAction.HttpGatewayRouteAction
instance GHC.Show.Show Amazonka.AppMesh.Types.HttpGatewayRouteAction.HttpGatewayRouteAction
instance GHC.Read.Read Amazonka.AppMesh.Types.HttpGatewayRouteAction.HttpGatewayRouteAction
instance GHC.Classes.Eq Amazonka.AppMesh.Types.HttpGatewayRouteAction.HttpGatewayRouteAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.HttpGatewayRouteAction.HttpGatewayRouteAction
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.HttpGatewayRouteAction.HttpGatewayRouteAction
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.HttpGatewayRouteAction.HttpGatewayRouteAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.HttpGatewayRouteAction.HttpGatewayRouteAction


module Amazonka.AppMesh.Types.HttpMethod
newtype HttpMethod
HttpMethod' :: Text -> HttpMethod
[fromHttpMethod] :: HttpMethod -> Text
pattern HttpMethod_CONNECT :: HttpMethod
pattern HttpMethod_DELETE :: HttpMethod
pattern HttpMethod_GET :: HttpMethod
pattern HttpMethod_HEAD :: HttpMethod
pattern HttpMethod_OPTIONS :: HttpMethod
pattern HttpMethod_PATCH :: HttpMethod
pattern HttpMethod_POST :: HttpMethod
pattern HttpMethod_PUT :: HttpMethod
pattern HttpMethod_TRACE :: HttpMethod
instance Amazonka.Data.XML.ToXML Amazonka.AppMesh.Types.HttpMethod.HttpMethod
instance Amazonka.Data.XML.FromXML Amazonka.AppMesh.Types.HttpMethod.HttpMethod
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppMesh.Types.HttpMethod.HttpMethod
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.HttpMethod.HttpMethod
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppMesh.Types.HttpMethod.HttpMethod
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.HttpMethod.HttpMethod
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.Types.HttpMethod.HttpMethod
instance Amazonka.Data.Headers.ToHeader Amazonka.AppMesh.Types.HttpMethod.HttpMethod
instance Amazonka.Data.Log.ToLog Amazonka.AppMesh.Types.HttpMethod.HttpMethod
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppMesh.Types.HttpMethod.HttpMethod
instance Amazonka.Data.Text.ToText Amazonka.AppMesh.Types.HttpMethod.HttpMethod
instance Amazonka.Data.Text.FromText Amazonka.AppMesh.Types.HttpMethod.HttpMethod
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.HttpMethod.HttpMethod
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.HttpMethod.HttpMethod
instance GHC.Generics.Generic Amazonka.AppMesh.Types.HttpMethod.HttpMethod
instance GHC.Classes.Ord Amazonka.AppMesh.Types.HttpMethod.HttpMethod
instance GHC.Classes.Eq Amazonka.AppMesh.Types.HttpMethod.HttpMethod
instance GHC.Read.Read Amazonka.AppMesh.Types.HttpMethod.HttpMethod
instance GHC.Show.Show Amazonka.AppMesh.Types.HttpMethod.HttpMethod


module Amazonka.AppMesh.Types.HttpPathMatch

-- | An object representing the path to match in the request.
--   
--   <i>See:</i> <a>newHttpPathMatch</a> smart constructor.
data HttpPathMatch
HttpPathMatch' :: Maybe Text -> Maybe Text -> HttpPathMatch

-- | The regex used to match the path.
[$sel:regex:HttpPathMatch'] :: HttpPathMatch -> Maybe Text

-- | The exact path to match on.
[$sel:exact:HttpPathMatch'] :: HttpPathMatch -> Maybe Text

-- | Create a value of <a>HttpPathMatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:regex:HttpPathMatch'</a>, <a>httpPathMatch_regex</a> - The
--   regex used to match the path.
--   
--   <a>$sel:exact:HttpPathMatch'</a>, <a>httpPathMatch_exact</a> - The
--   exact path to match on.
newHttpPathMatch :: HttpPathMatch

-- | The regex used to match the path.
httpPathMatch_regex :: Lens' HttpPathMatch (Maybe Text)

-- | The exact path to match on.
httpPathMatch_exact :: Lens' HttpPathMatch (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.HttpPathMatch.HttpPathMatch
instance GHC.Show.Show Amazonka.AppMesh.Types.HttpPathMatch.HttpPathMatch
instance GHC.Read.Read Amazonka.AppMesh.Types.HttpPathMatch.HttpPathMatch
instance GHC.Classes.Eq Amazonka.AppMesh.Types.HttpPathMatch.HttpPathMatch
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.HttpPathMatch.HttpPathMatch
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.HttpPathMatch.HttpPathMatch
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.HttpPathMatch.HttpPathMatch
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.HttpPathMatch.HttpPathMatch


module Amazonka.AppMesh.Types.HttpScheme
newtype HttpScheme
HttpScheme' :: Text -> HttpScheme
[fromHttpScheme] :: HttpScheme -> Text
pattern HttpScheme_Http :: HttpScheme
pattern HttpScheme_Https :: HttpScheme
instance Amazonka.Data.XML.ToXML Amazonka.AppMesh.Types.HttpScheme.HttpScheme
instance Amazonka.Data.XML.FromXML Amazonka.AppMesh.Types.HttpScheme.HttpScheme
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppMesh.Types.HttpScheme.HttpScheme
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.HttpScheme.HttpScheme
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppMesh.Types.HttpScheme.HttpScheme
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.HttpScheme.HttpScheme
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.Types.HttpScheme.HttpScheme
instance Amazonka.Data.Headers.ToHeader Amazonka.AppMesh.Types.HttpScheme.HttpScheme
instance Amazonka.Data.Log.ToLog Amazonka.AppMesh.Types.HttpScheme.HttpScheme
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppMesh.Types.HttpScheme.HttpScheme
instance Amazonka.Data.Text.ToText Amazonka.AppMesh.Types.HttpScheme.HttpScheme
instance Amazonka.Data.Text.FromText Amazonka.AppMesh.Types.HttpScheme.HttpScheme
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.HttpScheme.HttpScheme
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.HttpScheme.HttpScheme
instance GHC.Generics.Generic Amazonka.AppMesh.Types.HttpScheme.HttpScheme
instance GHC.Classes.Ord Amazonka.AppMesh.Types.HttpScheme.HttpScheme
instance GHC.Classes.Eq Amazonka.AppMesh.Types.HttpScheme.HttpScheme
instance GHC.Read.Read Amazonka.AppMesh.Types.HttpScheme.HttpScheme
instance GHC.Show.Show Amazonka.AppMesh.Types.HttpScheme.HttpScheme


module Amazonka.AppMesh.Types.HttpTimeout

-- | An object that represents types of timeouts.
--   
--   <i>See:</i> <a>newHttpTimeout</a> smart constructor.
data HttpTimeout
HttpTimeout' :: Maybe Duration -> Maybe Duration -> HttpTimeout

-- | An object that represents an idle timeout. An idle timeout bounds the
--   amount of time that a connection may be idle. The default value is
--   none.
[$sel:idle:HttpTimeout'] :: HttpTimeout -> Maybe Duration

-- | An object that represents a per request timeout. The default value is
--   15 seconds. If you set a higher timeout, then make sure that the
--   higher value is set for each App Mesh resource in a conversation. For
--   example, if a virtual node backend uses a virtual router provider to
--   route to another virtual node, then the timeout should be greater than
--   15 seconds for the source and destination virtual node and the route.
[$sel:perRequest:HttpTimeout'] :: HttpTimeout -> Maybe Duration

-- | Create a value of <a>HttpTimeout</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idle:HttpTimeout'</a>, <a>httpTimeout_idle</a> - An object
--   that represents an idle timeout. An idle timeout bounds the amount of
--   time that a connection may be idle. The default value is none.
--   
--   <a>$sel:perRequest:HttpTimeout'</a>, <a>httpTimeout_perRequest</a> -
--   An object that represents a per request timeout. The default value is
--   15 seconds. If you set a higher timeout, then make sure that the
--   higher value is set for each App Mesh resource in a conversation. For
--   example, if a virtual node backend uses a virtual router provider to
--   route to another virtual node, then the timeout should be greater than
--   15 seconds for the source and destination virtual node and the route.
newHttpTimeout :: HttpTimeout

-- | An object that represents an idle timeout. An idle timeout bounds the
--   amount of time that a connection may be idle. The default value is
--   none.
httpTimeout_idle :: Lens' HttpTimeout (Maybe Duration)

-- | An object that represents a per request timeout. The default value is
--   15 seconds. If you set a higher timeout, then make sure that the
--   higher value is set for each App Mesh resource in a conversation. For
--   example, if a virtual node backend uses a virtual router provider to
--   route to another virtual node, then the timeout should be greater than
--   15 seconds for the source and destination virtual node and the route.
httpTimeout_perRequest :: Lens' HttpTimeout (Maybe Duration)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.HttpTimeout.HttpTimeout
instance GHC.Show.Show Amazonka.AppMesh.Types.HttpTimeout.HttpTimeout
instance GHC.Read.Read Amazonka.AppMesh.Types.HttpTimeout.HttpTimeout
instance GHC.Classes.Eq Amazonka.AppMesh.Types.HttpTimeout.HttpTimeout
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.HttpTimeout.HttpTimeout
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.HttpTimeout.HttpTimeout
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.HttpTimeout.HttpTimeout
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.HttpTimeout.HttpTimeout


module Amazonka.AppMesh.Types.ListenerTlsAcmCertificate

-- | An object that represents an AWS Certicate Manager (ACM) certificate.
--   
--   <i>See:</i> <a>newListenerTlsAcmCertificate</a> smart constructor.
data ListenerTlsAcmCertificate
ListenerTlsAcmCertificate' :: Text -> ListenerTlsAcmCertificate

-- | The Amazon Resource Name (ARN) for the certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
[$sel:certificateArn:ListenerTlsAcmCertificate'] :: ListenerTlsAcmCertificate -> Text

-- | Create a value of <a>ListenerTlsAcmCertificate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateArn:ListenerTlsAcmCertificate'</a>,
--   <a>listenerTlsAcmCertificate_certificateArn</a> - The Amazon Resource
--   Name (ARN) for the certificate. The certificate must meet specific
--   requirements and you must have proxy authorization enabled. For more
--   information, see <a>Transport Layer Security (TLS)</a>.
newListenerTlsAcmCertificate :: Text -> ListenerTlsAcmCertificate

-- | The Amazon Resource Name (ARN) for the certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
listenerTlsAcmCertificate_certificateArn :: Lens' ListenerTlsAcmCertificate Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.ListenerTlsAcmCertificate.ListenerTlsAcmCertificate
instance GHC.Show.Show Amazonka.AppMesh.Types.ListenerTlsAcmCertificate.ListenerTlsAcmCertificate
instance GHC.Read.Read Amazonka.AppMesh.Types.ListenerTlsAcmCertificate.ListenerTlsAcmCertificate
instance GHC.Classes.Eq Amazonka.AppMesh.Types.ListenerTlsAcmCertificate.ListenerTlsAcmCertificate
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.ListenerTlsAcmCertificate.ListenerTlsAcmCertificate
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.ListenerTlsAcmCertificate.ListenerTlsAcmCertificate
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.ListenerTlsAcmCertificate.ListenerTlsAcmCertificate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.ListenerTlsAcmCertificate.ListenerTlsAcmCertificate


module Amazonka.AppMesh.Types.ListenerTlsFileCertificate

-- | An object that represents a local file certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
--   
--   <i>See:</i> <a>newListenerTlsFileCertificate</a> smart constructor.
data ListenerTlsFileCertificate
ListenerTlsFileCertificate' :: Text -> Text -> ListenerTlsFileCertificate

-- | The certificate chain for the certificate.
[$sel:certificateChain:ListenerTlsFileCertificate'] :: ListenerTlsFileCertificate -> Text

-- | The private key for a certificate stored on the file system of the
--   virtual node that the proxy is running on.
[$sel:privateKey:ListenerTlsFileCertificate'] :: ListenerTlsFileCertificate -> Text

-- | Create a value of <a>ListenerTlsFileCertificate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateChain:ListenerTlsFileCertificate'</a>,
--   <a>listenerTlsFileCertificate_certificateChain</a> - The certificate
--   chain for the certificate.
--   
--   <a>$sel:privateKey:ListenerTlsFileCertificate'</a>,
--   <a>listenerTlsFileCertificate_privateKey</a> - The private key for a
--   certificate stored on the file system of the virtual node that the
--   proxy is running on.
newListenerTlsFileCertificate :: Text -> Text -> ListenerTlsFileCertificate

-- | The certificate chain for the certificate.
listenerTlsFileCertificate_certificateChain :: Lens' ListenerTlsFileCertificate Text

-- | The private key for a certificate stored on the file system of the
--   virtual node that the proxy is running on.
listenerTlsFileCertificate_privateKey :: Lens' ListenerTlsFileCertificate Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.ListenerTlsFileCertificate.ListenerTlsFileCertificate
instance GHC.Show.Show Amazonka.AppMesh.Types.ListenerTlsFileCertificate.ListenerTlsFileCertificate
instance GHC.Read.Read Amazonka.AppMesh.Types.ListenerTlsFileCertificate.ListenerTlsFileCertificate
instance GHC.Classes.Eq Amazonka.AppMesh.Types.ListenerTlsFileCertificate.ListenerTlsFileCertificate
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.ListenerTlsFileCertificate.ListenerTlsFileCertificate
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.ListenerTlsFileCertificate.ListenerTlsFileCertificate
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.ListenerTlsFileCertificate.ListenerTlsFileCertificate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.ListenerTlsFileCertificate.ListenerTlsFileCertificate


module Amazonka.AppMesh.Types.ListenerTlsMode
newtype ListenerTlsMode
ListenerTlsMode' :: Text -> ListenerTlsMode
[fromListenerTlsMode] :: ListenerTlsMode -> Text
pattern ListenerTlsMode_DISABLED :: ListenerTlsMode
pattern ListenerTlsMode_PERMISSIVE :: ListenerTlsMode
pattern ListenerTlsMode_STRICT :: ListenerTlsMode
instance Amazonka.Data.XML.ToXML Amazonka.AppMesh.Types.ListenerTlsMode.ListenerTlsMode
instance Amazonka.Data.XML.FromXML Amazonka.AppMesh.Types.ListenerTlsMode.ListenerTlsMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppMesh.Types.ListenerTlsMode.ListenerTlsMode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.ListenerTlsMode.ListenerTlsMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppMesh.Types.ListenerTlsMode.ListenerTlsMode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.ListenerTlsMode.ListenerTlsMode
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.Types.ListenerTlsMode.ListenerTlsMode
instance Amazonka.Data.Headers.ToHeader Amazonka.AppMesh.Types.ListenerTlsMode.ListenerTlsMode
instance Amazonka.Data.Log.ToLog Amazonka.AppMesh.Types.ListenerTlsMode.ListenerTlsMode
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppMesh.Types.ListenerTlsMode.ListenerTlsMode
instance Amazonka.Data.Text.ToText Amazonka.AppMesh.Types.ListenerTlsMode.ListenerTlsMode
instance Amazonka.Data.Text.FromText Amazonka.AppMesh.Types.ListenerTlsMode.ListenerTlsMode
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.ListenerTlsMode.ListenerTlsMode
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.ListenerTlsMode.ListenerTlsMode
instance GHC.Generics.Generic Amazonka.AppMesh.Types.ListenerTlsMode.ListenerTlsMode
instance GHC.Classes.Ord Amazonka.AppMesh.Types.ListenerTlsMode.ListenerTlsMode
instance GHC.Classes.Eq Amazonka.AppMesh.Types.ListenerTlsMode.ListenerTlsMode
instance GHC.Read.Read Amazonka.AppMesh.Types.ListenerTlsMode.ListenerTlsMode
instance GHC.Show.Show Amazonka.AppMesh.Types.ListenerTlsMode.ListenerTlsMode


module Amazonka.AppMesh.Types.ListenerTlsSdsCertificate

-- | An object that represents the listener's Secret Discovery Service
--   certificate. The proxy must be configured with a local SDS provider
--   via a Unix Domain Socket. See App Mesh <a>TLS documentation</a> for
--   more info.
--   
--   <i>See:</i> <a>newListenerTlsSdsCertificate</a> smart constructor.
data ListenerTlsSdsCertificate
ListenerTlsSdsCertificate' :: Text -> ListenerTlsSdsCertificate

-- | A reference to an object that represents the name of the secret
--   requested from the Secret Discovery Service provider representing
--   Transport Layer Security (TLS) materials like a certificate or
--   certificate chain.
[$sel:secretName:ListenerTlsSdsCertificate'] :: ListenerTlsSdsCertificate -> Text

-- | Create a value of <a>ListenerTlsSdsCertificate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretName:ListenerTlsSdsCertificate'</a>,
--   <a>listenerTlsSdsCertificate_secretName</a> - A reference to an object
--   that represents the name of the secret requested from the Secret
--   Discovery Service provider representing Transport Layer Security (TLS)
--   materials like a certificate or certificate chain.
newListenerTlsSdsCertificate :: Text -> ListenerTlsSdsCertificate

-- | A reference to an object that represents the name of the secret
--   requested from the Secret Discovery Service provider representing
--   Transport Layer Security (TLS) materials like a certificate or
--   certificate chain.
listenerTlsSdsCertificate_secretName :: Lens' ListenerTlsSdsCertificate Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.ListenerTlsSdsCertificate.ListenerTlsSdsCertificate
instance GHC.Show.Show Amazonka.AppMesh.Types.ListenerTlsSdsCertificate.ListenerTlsSdsCertificate
instance GHC.Read.Read Amazonka.AppMesh.Types.ListenerTlsSdsCertificate.ListenerTlsSdsCertificate
instance GHC.Classes.Eq Amazonka.AppMesh.Types.ListenerTlsSdsCertificate.ListenerTlsSdsCertificate
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.ListenerTlsSdsCertificate.ListenerTlsSdsCertificate
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.ListenerTlsSdsCertificate.ListenerTlsSdsCertificate
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.ListenerTlsSdsCertificate.ListenerTlsSdsCertificate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.ListenerTlsSdsCertificate.ListenerTlsSdsCertificate


module Amazonka.AppMesh.Types.ListenerTlsCertificate

-- | An object that represents a listener's Transport Layer Security (TLS)
--   certificate.
--   
--   <i>See:</i> <a>newListenerTlsCertificate</a> smart constructor.
data ListenerTlsCertificate
ListenerTlsCertificate' :: Maybe ListenerTlsAcmCertificate -> Maybe ListenerTlsSdsCertificate -> Maybe ListenerTlsFileCertificate -> ListenerTlsCertificate

-- | A reference to an object that represents an AWS Certicate Manager
--   (ACM) certificate.
[$sel:acm:ListenerTlsCertificate'] :: ListenerTlsCertificate -> Maybe ListenerTlsAcmCertificate

-- | A reference to an object that represents a listener's Secret Discovery
--   Service certificate.
[$sel:sds:ListenerTlsCertificate'] :: ListenerTlsCertificate -> Maybe ListenerTlsSdsCertificate

-- | A reference to an object that represents a local file certificate.
[$sel:file:ListenerTlsCertificate'] :: ListenerTlsCertificate -> Maybe ListenerTlsFileCertificate

-- | Create a value of <a>ListenerTlsCertificate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acm:ListenerTlsCertificate'</a>,
--   <a>listenerTlsCertificate_acm</a> - A reference to an object that
--   represents an AWS Certicate Manager (ACM) certificate.
--   
--   <a>$sel:sds:ListenerTlsCertificate'</a>,
--   <a>listenerTlsCertificate_sds</a> - A reference to an object that
--   represents a listener's Secret Discovery Service certificate.
--   
--   <a>$sel:file:ListenerTlsCertificate'</a>,
--   <a>listenerTlsCertificate_file</a> - A reference to an object that
--   represents a local file certificate.
newListenerTlsCertificate :: ListenerTlsCertificate

-- | A reference to an object that represents an AWS Certicate Manager
--   (ACM) certificate.
listenerTlsCertificate_acm :: Lens' ListenerTlsCertificate (Maybe ListenerTlsAcmCertificate)

-- | A reference to an object that represents a listener's Secret Discovery
--   Service certificate.
listenerTlsCertificate_sds :: Lens' ListenerTlsCertificate (Maybe ListenerTlsSdsCertificate)

-- | A reference to an object that represents a local file certificate.
listenerTlsCertificate_file :: Lens' ListenerTlsCertificate (Maybe ListenerTlsFileCertificate)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.ListenerTlsCertificate.ListenerTlsCertificate
instance GHC.Show.Show Amazonka.AppMesh.Types.ListenerTlsCertificate.ListenerTlsCertificate
instance GHC.Read.Read Amazonka.AppMesh.Types.ListenerTlsCertificate.ListenerTlsCertificate
instance GHC.Classes.Eq Amazonka.AppMesh.Types.ListenerTlsCertificate.ListenerTlsCertificate
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.ListenerTlsCertificate.ListenerTlsCertificate
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.ListenerTlsCertificate.ListenerTlsCertificate
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.ListenerTlsCertificate.ListenerTlsCertificate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.ListenerTlsCertificate.ListenerTlsCertificate


module Amazonka.AppMesh.Types.ClientTlsCertificate

-- | An object that represents the client's certificate.
--   
--   <i>See:</i> <a>newClientTlsCertificate</a> smart constructor.
data ClientTlsCertificate
ClientTlsCertificate' :: Maybe ListenerTlsSdsCertificate -> Maybe ListenerTlsFileCertificate -> ClientTlsCertificate

-- | A reference to an object that represents a client's TLS Secret
--   Discovery Service certificate.
[$sel:sds:ClientTlsCertificate'] :: ClientTlsCertificate -> Maybe ListenerTlsSdsCertificate

-- | An object that represents a local file certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
[$sel:file:ClientTlsCertificate'] :: ClientTlsCertificate -> Maybe ListenerTlsFileCertificate

-- | Create a value of <a>ClientTlsCertificate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sds:ClientTlsCertificate'</a>, <a>clientTlsCertificate_sds</a>
--   - A reference to an object that represents a client's TLS Secret
--   Discovery Service certificate.
--   
--   <a>$sel:file:ClientTlsCertificate'</a>,
--   <a>clientTlsCertificate_file</a> - An object that represents a local
--   file certificate. The certificate must meet specific requirements and
--   you must have proxy authorization enabled. For more information, see
--   <a>Transport Layer Security (TLS)</a>.
newClientTlsCertificate :: ClientTlsCertificate

-- | A reference to an object that represents a client's TLS Secret
--   Discovery Service certificate.
clientTlsCertificate_sds :: Lens' ClientTlsCertificate (Maybe ListenerTlsSdsCertificate)

-- | An object that represents a local file certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
clientTlsCertificate_file :: Lens' ClientTlsCertificate (Maybe ListenerTlsFileCertificate)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.ClientTlsCertificate.ClientTlsCertificate
instance GHC.Show.Show Amazonka.AppMesh.Types.ClientTlsCertificate.ClientTlsCertificate
instance GHC.Read.Read Amazonka.AppMesh.Types.ClientTlsCertificate.ClientTlsCertificate
instance GHC.Classes.Eq Amazonka.AppMesh.Types.ClientTlsCertificate.ClientTlsCertificate
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.ClientTlsCertificate.ClientTlsCertificate
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.ClientTlsCertificate.ClientTlsCertificate
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.ClientTlsCertificate.ClientTlsCertificate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.ClientTlsCertificate.ClientTlsCertificate


module Amazonka.AppMesh.Types.Logging

-- | An object that represents the logging information for a virtual node.
--   
--   <i>See:</i> <a>newLogging</a> smart constructor.
data Logging
Logging' :: Maybe AccessLog -> Logging

-- | The access log configuration for a virtual node.
[$sel:accessLog:Logging'] :: Logging -> Maybe AccessLog

-- | Create a value of <a>Logging</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessLog:Logging'</a>, <a>logging_accessLog</a> - The access
--   log configuration for a virtual node.
newLogging :: Logging

-- | The access log configuration for a virtual node.
logging_accessLog :: Lens' Logging (Maybe AccessLog)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.Logging.Logging
instance GHC.Show.Show Amazonka.AppMesh.Types.Logging.Logging
instance GHC.Read.Read Amazonka.AppMesh.Types.Logging.Logging
instance GHC.Classes.Eq Amazonka.AppMesh.Types.Logging.Logging
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.Logging.Logging
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.Logging.Logging
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.Logging.Logging
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.Logging.Logging


module Amazonka.AppMesh.Types.MatchRange

-- | An object that represents the range of values to match on. The first
--   character of the range is included in the range, though the last
--   character is not. For example, if the range specified were 1-100, only
--   values 1-99 would be matched.
--   
--   <i>See:</i> <a>newMatchRange</a> smart constructor.
data MatchRange
MatchRange' :: Integer -> Integer -> MatchRange

-- | The end of the range.
[$sel:end:MatchRange'] :: MatchRange -> Integer

-- | The start of the range.
[$sel:start:MatchRange'] :: MatchRange -> Integer

-- | Create a value of <a>MatchRange</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:end:MatchRange'</a>, <a>matchRange_end</a> - The end of the
--   range.
--   
--   <a>$sel:start:MatchRange'</a>, <a>matchRange_start</a> - The start of
--   the range.
newMatchRange :: Integer -> Integer -> MatchRange

-- | The end of the range.
matchRange_end :: Lens' MatchRange Integer

-- | The start of the range.
matchRange_start :: Lens' MatchRange Integer
instance GHC.Generics.Generic Amazonka.AppMesh.Types.MatchRange.MatchRange
instance GHC.Show.Show Amazonka.AppMesh.Types.MatchRange.MatchRange
instance GHC.Read.Read Amazonka.AppMesh.Types.MatchRange.MatchRange
instance GHC.Classes.Eq Amazonka.AppMesh.Types.MatchRange.MatchRange
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.MatchRange.MatchRange
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.MatchRange.MatchRange
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.MatchRange.MatchRange
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.MatchRange.MatchRange


module Amazonka.AppMesh.Types.HeaderMatchMethod

-- | An object that represents the method and value to match with the
--   header value sent in a request. Specify one match method.
--   
--   <i>See:</i> <a>newHeaderMatchMethod</a> smart constructor.
data HeaderMatchMethod
HeaderMatchMethod' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe MatchRange -> Maybe Text -> HeaderMatchMethod

-- | The value sent by the client must end with the specified characters.
[$sel:suffix:HeaderMatchMethod'] :: HeaderMatchMethod -> Maybe Text

-- | The value sent by the client must include the specified characters.
[$sel:regex:HeaderMatchMethod'] :: HeaderMatchMethod -> Maybe Text

-- | The value sent by the client must begin with the specified characters.
[$sel:prefix:HeaderMatchMethod'] :: HeaderMatchMethod -> Maybe Text

-- | An object that represents the range of values to match on.
[$sel:range:HeaderMatchMethod'] :: HeaderMatchMethod -> Maybe MatchRange

-- | The value sent by the client must match the specified value exactly.
[$sel:exact:HeaderMatchMethod'] :: HeaderMatchMethod -> Maybe Text

-- | Create a value of <a>HeaderMatchMethod</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suffix:HeaderMatchMethod'</a>, <a>headerMatchMethod_suffix</a>
--   - The value sent by the client must end with the specified characters.
--   
--   <a>$sel:regex:HeaderMatchMethod'</a>, <a>headerMatchMethod_regex</a> -
--   The value sent by the client must include the specified characters.
--   
--   <a>$sel:prefix:HeaderMatchMethod'</a>, <a>headerMatchMethod_prefix</a>
--   - The value sent by the client must begin with the specified
--   characters.
--   
--   <a>$sel:range:HeaderMatchMethod'</a>, <a>headerMatchMethod_range</a> -
--   An object that represents the range of values to match on.
--   
--   <a>$sel:exact:HeaderMatchMethod'</a>, <a>headerMatchMethod_exact</a> -
--   The value sent by the client must match the specified value exactly.
newHeaderMatchMethod :: HeaderMatchMethod

-- | The value sent by the client must end with the specified characters.
headerMatchMethod_suffix :: Lens' HeaderMatchMethod (Maybe Text)

-- | The value sent by the client must include the specified characters.
headerMatchMethod_regex :: Lens' HeaderMatchMethod (Maybe Text)

-- | The value sent by the client must begin with the specified characters.
headerMatchMethod_prefix :: Lens' HeaderMatchMethod (Maybe Text)

-- | An object that represents the range of values to match on.
headerMatchMethod_range :: Lens' HeaderMatchMethod (Maybe MatchRange)

-- | The value sent by the client must match the specified value exactly.
headerMatchMethod_exact :: Lens' HeaderMatchMethod (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.HeaderMatchMethod.HeaderMatchMethod
instance GHC.Show.Show Amazonka.AppMesh.Types.HeaderMatchMethod.HeaderMatchMethod
instance GHC.Read.Read Amazonka.AppMesh.Types.HeaderMatchMethod.HeaderMatchMethod
instance GHC.Classes.Eq Amazonka.AppMesh.Types.HeaderMatchMethod.HeaderMatchMethod
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.HeaderMatchMethod.HeaderMatchMethod
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.HeaderMatchMethod.HeaderMatchMethod
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.HeaderMatchMethod.HeaderMatchMethod
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.HeaderMatchMethod.HeaderMatchMethod


module Amazonka.AppMesh.Types.HttpRouteHeader

-- | An object that represents the HTTP header in the request.
--   
--   <i>See:</i> <a>newHttpRouteHeader</a> smart constructor.
data HttpRouteHeader
HttpRouteHeader' :: Maybe Bool -> Maybe HeaderMatchMethod -> Text -> HttpRouteHeader

-- | Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
[$sel:invert:HttpRouteHeader'] :: HttpRouteHeader -> Maybe Bool

-- | The <tt>HeaderMatchMethod</tt> object.
[$sel:match:HttpRouteHeader'] :: HttpRouteHeader -> Maybe HeaderMatchMethod

-- | A name for the HTTP header in the client request that will be matched
--   on.
[$sel:name:HttpRouteHeader'] :: HttpRouteHeader -> Text

-- | Create a value of <a>HttpRouteHeader</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invert:HttpRouteHeader'</a>, <a>httpRouteHeader_invert</a> -
--   Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
--   
--   <a>$sel:match:HttpRouteHeader'</a>, <a>httpRouteHeader_match</a> - The
--   <tt>HeaderMatchMethod</tt> object.
--   
--   <a>$sel:name:HttpRouteHeader'</a>, <a>httpRouteHeader_name</a> - A
--   name for the HTTP header in the client request that will be matched
--   on.
newHttpRouteHeader :: Text -> HttpRouteHeader

-- | Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
httpRouteHeader_invert :: Lens' HttpRouteHeader (Maybe Bool)

-- | The <tt>HeaderMatchMethod</tt> object.
httpRouteHeader_match :: Lens' HttpRouteHeader (Maybe HeaderMatchMethod)

-- | A name for the HTTP header in the client request that will be matched
--   on.
httpRouteHeader_name :: Lens' HttpRouteHeader Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.HttpRouteHeader.HttpRouteHeader
instance GHC.Show.Show Amazonka.AppMesh.Types.HttpRouteHeader.HttpRouteHeader
instance GHC.Read.Read Amazonka.AppMesh.Types.HttpRouteHeader.HttpRouteHeader
instance GHC.Classes.Eq Amazonka.AppMesh.Types.HttpRouteHeader.HttpRouteHeader
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.HttpRouteHeader.HttpRouteHeader
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.HttpRouteHeader.HttpRouteHeader
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.HttpRouteHeader.HttpRouteHeader
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.HttpRouteHeader.HttpRouteHeader


module Amazonka.AppMesh.Types.HttpGatewayRouteHeader

-- | An object that represents the HTTP header in the gateway route.
--   
--   <i>See:</i> <a>newHttpGatewayRouteHeader</a> smart constructor.
data HttpGatewayRouteHeader
HttpGatewayRouteHeader' :: Maybe Bool -> Maybe HeaderMatchMethod -> Text -> HttpGatewayRouteHeader

-- | Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
[$sel:invert:HttpGatewayRouteHeader'] :: HttpGatewayRouteHeader -> Maybe Bool
[$sel:match:HttpGatewayRouteHeader'] :: HttpGatewayRouteHeader -> Maybe HeaderMatchMethod

-- | A name for the HTTP header in the gateway route that will be matched
--   on.
[$sel:name:HttpGatewayRouteHeader'] :: HttpGatewayRouteHeader -> Text

-- | Create a value of <a>HttpGatewayRouteHeader</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invert:HttpGatewayRouteHeader'</a>,
--   <a>httpGatewayRouteHeader_invert</a> - Specify <tt>True</tt> to match
--   anything except the match criteria. The default value is
--   <tt>False</tt>.
--   
--   <a>$sel:match:HttpGatewayRouteHeader'</a>,
--   <a>httpGatewayRouteHeader_match</a> - Undocumented member.
--   
--   <a>$sel:name:HttpGatewayRouteHeader'</a>,
--   <a>httpGatewayRouteHeader_name</a> - A name for the HTTP header in the
--   gateway route that will be matched on.
newHttpGatewayRouteHeader :: Text -> HttpGatewayRouteHeader

-- | Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
httpGatewayRouteHeader_invert :: Lens' HttpGatewayRouteHeader (Maybe Bool)

-- | Undocumented member.
httpGatewayRouteHeader_match :: Lens' HttpGatewayRouteHeader (Maybe HeaderMatchMethod)

-- | A name for the HTTP header in the gateway route that will be matched
--   on.
httpGatewayRouteHeader_name :: Lens' HttpGatewayRouteHeader Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.HttpGatewayRouteHeader.HttpGatewayRouteHeader
instance GHC.Show.Show Amazonka.AppMesh.Types.HttpGatewayRouteHeader.HttpGatewayRouteHeader
instance GHC.Read.Read Amazonka.AppMesh.Types.HttpGatewayRouteHeader.HttpGatewayRouteHeader
instance GHC.Classes.Eq Amazonka.AppMesh.Types.HttpGatewayRouteHeader.HttpGatewayRouteHeader
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.HttpGatewayRouteHeader.HttpGatewayRouteHeader
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.HttpGatewayRouteHeader.HttpGatewayRouteHeader
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.HttpGatewayRouteHeader.HttpGatewayRouteHeader
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.HttpGatewayRouteHeader.HttpGatewayRouteHeader


module Amazonka.AppMesh.Types.GrpcRouteMetadataMatchMethod

-- | An object that represents the match method. Specify one of the match
--   values.
--   
--   <i>See:</i> <a>newGrpcRouteMetadataMatchMethod</a> smart constructor.
data GrpcRouteMetadataMatchMethod
GrpcRouteMetadataMatchMethod' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe MatchRange -> Maybe Text -> GrpcRouteMetadataMatchMethod

-- | The value sent by the client must end with the specified characters.
[$sel:suffix:GrpcRouteMetadataMatchMethod'] :: GrpcRouteMetadataMatchMethod -> Maybe Text

-- | The value sent by the client must include the specified characters.
[$sel:regex:GrpcRouteMetadataMatchMethod'] :: GrpcRouteMetadataMatchMethod -> Maybe Text

-- | The value sent by the client must begin with the specified characters.
[$sel:prefix:GrpcRouteMetadataMatchMethod'] :: GrpcRouteMetadataMatchMethod -> Maybe Text

-- | An object that represents the range of values to match on.
[$sel:range:GrpcRouteMetadataMatchMethod'] :: GrpcRouteMetadataMatchMethod -> Maybe MatchRange

-- | The value sent by the client must match the specified value exactly.
[$sel:exact:GrpcRouteMetadataMatchMethod'] :: GrpcRouteMetadataMatchMethod -> Maybe Text

-- | Create a value of <a>GrpcRouteMetadataMatchMethod</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suffix:GrpcRouteMetadataMatchMethod'</a>,
--   <a>grpcRouteMetadataMatchMethod_suffix</a> - The value sent by the
--   client must end with the specified characters.
--   
--   <a>$sel:regex:GrpcRouteMetadataMatchMethod'</a>,
--   <a>grpcRouteMetadataMatchMethod_regex</a> - The value sent by the
--   client must include the specified characters.
--   
--   <a>$sel:prefix:GrpcRouteMetadataMatchMethod'</a>,
--   <a>grpcRouteMetadataMatchMethod_prefix</a> - The value sent by the
--   client must begin with the specified characters.
--   
--   <a>$sel:range:GrpcRouteMetadataMatchMethod'</a>,
--   <a>grpcRouteMetadataMatchMethod_range</a> - An object that represents
--   the range of values to match on.
--   
--   <a>$sel:exact:GrpcRouteMetadataMatchMethod'</a>,
--   <a>grpcRouteMetadataMatchMethod_exact</a> - The value sent by the
--   client must match the specified value exactly.
newGrpcRouteMetadataMatchMethod :: GrpcRouteMetadataMatchMethod

-- | The value sent by the client must end with the specified characters.
grpcRouteMetadataMatchMethod_suffix :: Lens' GrpcRouteMetadataMatchMethod (Maybe Text)

-- | The value sent by the client must include the specified characters.
grpcRouteMetadataMatchMethod_regex :: Lens' GrpcRouteMetadataMatchMethod (Maybe Text)

-- | The value sent by the client must begin with the specified characters.
grpcRouteMetadataMatchMethod_prefix :: Lens' GrpcRouteMetadataMatchMethod (Maybe Text)

-- | An object that represents the range of values to match on.
grpcRouteMetadataMatchMethod_range :: Lens' GrpcRouteMetadataMatchMethod (Maybe MatchRange)

-- | The value sent by the client must match the specified value exactly.
grpcRouteMetadataMatchMethod_exact :: Lens' GrpcRouteMetadataMatchMethod (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GrpcRouteMetadataMatchMethod.GrpcRouteMetadataMatchMethod
instance GHC.Show.Show Amazonka.AppMesh.Types.GrpcRouteMetadataMatchMethod.GrpcRouteMetadataMatchMethod
instance GHC.Read.Read Amazonka.AppMesh.Types.GrpcRouteMetadataMatchMethod.GrpcRouteMetadataMatchMethod
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GrpcRouteMetadataMatchMethod.GrpcRouteMetadataMatchMethod
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GrpcRouteMetadataMatchMethod.GrpcRouteMetadataMatchMethod
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GrpcRouteMetadataMatchMethod.GrpcRouteMetadataMatchMethod
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GrpcRouteMetadataMatchMethod.GrpcRouteMetadataMatchMethod
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.GrpcRouteMetadataMatchMethod.GrpcRouteMetadataMatchMethod


module Amazonka.AppMesh.Types.GrpcRouteMetadata

-- | An object that represents the match metadata for the route.
--   
--   <i>See:</i> <a>newGrpcRouteMetadata</a> smart constructor.
data GrpcRouteMetadata
GrpcRouteMetadata' :: Maybe Bool -> Maybe GrpcRouteMetadataMatchMethod -> Text -> GrpcRouteMetadata

-- | Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
[$sel:invert:GrpcRouteMetadata'] :: GrpcRouteMetadata -> Maybe Bool

-- | An object that represents the data to match from the request.
[$sel:match:GrpcRouteMetadata'] :: GrpcRouteMetadata -> Maybe GrpcRouteMetadataMatchMethod

-- | The name of the route.
[$sel:name:GrpcRouteMetadata'] :: GrpcRouteMetadata -> Text

-- | Create a value of <a>GrpcRouteMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invert:GrpcRouteMetadata'</a>, <a>grpcRouteMetadata_invert</a>
--   - Specify <tt>True</tt> to match anything except the match criteria.
--   The default value is <tt>False</tt>.
--   
--   <a>$sel:match:GrpcRouteMetadata'</a>, <a>grpcRouteMetadata_match</a> -
--   An object that represents the data to match from the request.
--   
--   <a>$sel:name:GrpcRouteMetadata'</a>, <a>grpcRouteMetadata_name</a> -
--   The name of the route.
newGrpcRouteMetadata :: Text -> GrpcRouteMetadata

-- | Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
grpcRouteMetadata_invert :: Lens' GrpcRouteMetadata (Maybe Bool)

-- | An object that represents the data to match from the request.
grpcRouteMetadata_match :: Lens' GrpcRouteMetadata (Maybe GrpcRouteMetadataMatchMethod)

-- | The name of the route.
grpcRouteMetadata_name :: Lens' GrpcRouteMetadata Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GrpcRouteMetadata.GrpcRouteMetadata
instance GHC.Show.Show Amazonka.AppMesh.Types.GrpcRouteMetadata.GrpcRouteMetadata
instance GHC.Read.Read Amazonka.AppMesh.Types.GrpcRouteMetadata.GrpcRouteMetadata
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GrpcRouteMetadata.GrpcRouteMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GrpcRouteMetadata.GrpcRouteMetadata
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GrpcRouteMetadata.GrpcRouteMetadata
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GrpcRouteMetadata.GrpcRouteMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.GrpcRouteMetadata.GrpcRouteMetadata


module Amazonka.AppMesh.Types.GrpcRouteMatch

-- | An object that represents the criteria for determining a request
--   match.
--   
--   <i>See:</i> <a>newGrpcRouteMatch</a> smart constructor.
data GrpcRouteMatch
GrpcRouteMatch' :: Maybe Text -> Maybe Text -> Maybe (NonEmpty GrpcRouteMetadata) -> GrpcRouteMatch

-- | The method name to match from the request. If you specify a name, you
--   must also specify a <tt>serviceName</tt>.
[$sel:methodName:GrpcRouteMatch'] :: GrpcRouteMatch -> Maybe Text

-- | The fully qualified domain name for the service to match from the
--   request.
[$sel:serviceName:GrpcRouteMatch'] :: GrpcRouteMatch -> Maybe Text

-- | An object that represents the data to match from the request.
[$sel:metadata:GrpcRouteMatch'] :: GrpcRouteMatch -> Maybe (NonEmpty GrpcRouteMetadata)

-- | Create a value of <a>GrpcRouteMatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:methodName:GrpcRouteMatch'</a>,
--   <a>grpcRouteMatch_methodName</a> - The method name to match from the
--   request. If you specify a name, you must also specify a
--   <tt>serviceName</tt>.
--   
--   <a>$sel:serviceName:GrpcRouteMatch'</a>,
--   <a>grpcRouteMatch_serviceName</a> - The fully qualified domain name
--   for the service to match from the request.
--   
--   <a>$sel:metadata:GrpcRouteMatch'</a>, <a>grpcRouteMatch_metadata</a> -
--   An object that represents the data to match from the request.
newGrpcRouteMatch :: GrpcRouteMatch

-- | The method name to match from the request. If you specify a name, you
--   must also specify a <tt>serviceName</tt>.
grpcRouteMatch_methodName :: Lens' GrpcRouteMatch (Maybe Text)

-- | The fully qualified domain name for the service to match from the
--   request.
grpcRouteMatch_serviceName :: Lens' GrpcRouteMatch (Maybe Text)

-- | An object that represents the data to match from the request.
grpcRouteMatch_metadata :: Lens' GrpcRouteMatch (Maybe (NonEmpty GrpcRouteMetadata))
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GrpcRouteMatch.GrpcRouteMatch
instance GHC.Show.Show Amazonka.AppMesh.Types.GrpcRouteMatch.GrpcRouteMatch
instance GHC.Read.Read Amazonka.AppMesh.Types.GrpcRouteMatch.GrpcRouteMatch
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GrpcRouteMatch.GrpcRouteMatch
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GrpcRouteMatch.GrpcRouteMatch
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GrpcRouteMatch.GrpcRouteMatch
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GrpcRouteMatch.GrpcRouteMatch
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.GrpcRouteMatch.GrpcRouteMatch


module Amazonka.AppMesh.Types.GrpcMetadataMatchMethod

-- | An object representing the method header to be matched.
--   
--   <i>See:</i> <a>newGrpcMetadataMatchMethod</a> smart constructor.
data GrpcMetadataMatchMethod
GrpcMetadataMatchMethod' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe MatchRange -> Maybe Text -> GrpcMetadataMatchMethod

-- | The specified ending characters of the method header to match on.
[$sel:suffix:GrpcMetadataMatchMethod'] :: GrpcMetadataMatchMethod -> Maybe Text

-- | The regex used to match the method header.
[$sel:regex:GrpcMetadataMatchMethod'] :: GrpcMetadataMatchMethod -> Maybe Text

-- | The specified beginning characters of the method header to be matched
--   on.
[$sel:prefix:GrpcMetadataMatchMethod'] :: GrpcMetadataMatchMethod -> Maybe Text
[$sel:range:GrpcMetadataMatchMethod'] :: GrpcMetadataMatchMethod -> Maybe MatchRange

-- | The exact method header to be matched on.
[$sel:exact:GrpcMetadataMatchMethod'] :: GrpcMetadataMatchMethod -> Maybe Text

-- | Create a value of <a>GrpcMetadataMatchMethod</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suffix:GrpcMetadataMatchMethod'</a>,
--   <a>grpcMetadataMatchMethod_suffix</a> - The specified ending
--   characters of the method header to match on.
--   
--   <a>$sel:regex:GrpcMetadataMatchMethod'</a>,
--   <a>grpcMetadataMatchMethod_regex</a> - The regex used to match the
--   method header.
--   
--   <a>$sel:prefix:GrpcMetadataMatchMethod'</a>,
--   <a>grpcMetadataMatchMethod_prefix</a> - The specified beginning
--   characters of the method header to be matched on.
--   
--   <a>$sel:range:GrpcMetadataMatchMethod'</a>,
--   <a>grpcMetadataMatchMethod_range</a> - Undocumented member.
--   
--   <a>$sel:exact:GrpcMetadataMatchMethod'</a>,
--   <a>grpcMetadataMatchMethod_exact</a> - The exact method header to be
--   matched on.
newGrpcMetadataMatchMethod :: GrpcMetadataMatchMethod

-- | The specified ending characters of the method header to match on.
grpcMetadataMatchMethod_suffix :: Lens' GrpcMetadataMatchMethod (Maybe Text)

-- | The regex used to match the method header.
grpcMetadataMatchMethod_regex :: Lens' GrpcMetadataMatchMethod (Maybe Text)

-- | The specified beginning characters of the method header to be matched
--   on.
grpcMetadataMatchMethod_prefix :: Lens' GrpcMetadataMatchMethod (Maybe Text)

-- | Undocumented member.
grpcMetadataMatchMethod_range :: Lens' GrpcMetadataMatchMethod (Maybe MatchRange)

-- | The exact method header to be matched on.
grpcMetadataMatchMethod_exact :: Lens' GrpcMetadataMatchMethod (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GrpcMetadataMatchMethod.GrpcMetadataMatchMethod
instance GHC.Show.Show Amazonka.AppMesh.Types.GrpcMetadataMatchMethod.GrpcMetadataMatchMethod
instance GHC.Read.Read Amazonka.AppMesh.Types.GrpcMetadataMatchMethod.GrpcMetadataMatchMethod
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GrpcMetadataMatchMethod.GrpcMetadataMatchMethod
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GrpcMetadataMatchMethod.GrpcMetadataMatchMethod
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GrpcMetadataMatchMethod.GrpcMetadataMatchMethod
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GrpcMetadataMatchMethod.GrpcMetadataMatchMethod
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.GrpcMetadataMatchMethod.GrpcMetadataMatchMethod


module Amazonka.AppMesh.Types.GrpcGatewayRouteMetadata

-- | An object representing the metadata of the gateway route.
--   
--   <i>See:</i> <a>newGrpcGatewayRouteMetadata</a> smart constructor.
data GrpcGatewayRouteMetadata
GrpcGatewayRouteMetadata' :: Maybe Bool -> Maybe GrpcMetadataMatchMethod -> Text -> GrpcGatewayRouteMetadata

-- | Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
[$sel:invert:GrpcGatewayRouteMetadata'] :: GrpcGatewayRouteMetadata -> Maybe Bool

-- | The criteria for determining a metadata match.
[$sel:match:GrpcGatewayRouteMetadata'] :: GrpcGatewayRouteMetadata -> Maybe GrpcMetadataMatchMethod

-- | A name for the gateway route metadata.
[$sel:name:GrpcGatewayRouteMetadata'] :: GrpcGatewayRouteMetadata -> Text

-- | Create a value of <a>GrpcGatewayRouteMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invert:GrpcGatewayRouteMetadata'</a>,
--   <a>grpcGatewayRouteMetadata_invert</a> - Specify <tt>True</tt> to
--   match anything except the match criteria. The default value is
--   <tt>False</tt>.
--   
--   <a>$sel:match:GrpcGatewayRouteMetadata'</a>,
--   <a>grpcGatewayRouteMetadata_match</a> - The criteria for determining a
--   metadata match.
--   
--   <a>$sel:name:GrpcGatewayRouteMetadata'</a>,
--   <a>grpcGatewayRouteMetadata_name</a> - A name for the gateway route
--   metadata.
newGrpcGatewayRouteMetadata :: Text -> GrpcGatewayRouteMetadata

-- | Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
grpcGatewayRouteMetadata_invert :: Lens' GrpcGatewayRouteMetadata (Maybe Bool)

-- | The criteria for determining a metadata match.
grpcGatewayRouteMetadata_match :: Lens' GrpcGatewayRouteMetadata (Maybe GrpcMetadataMatchMethod)

-- | A name for the gateway route metadata.
grpcGatewayRouteMetadata_name :: Lens' GrpcGatewayRouteMetadata Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GrpcGatewayRouteMetadata.GrpcGatewayRouteMetadata
instance GHC.Show.Show Amazonka.AppMesh.Types.GrpcGatewayRouteMetadata.GrpcGatewayRouteMetadata
instance GHC.Read.Read Amazonka.AppMesh.Types.GrpcGatewayRouteMetadata.GrpcGatewayRouteMetadata
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GrpcGatewayRouteMetadata.GrpcGatewayRouteMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GrpcGatewayRouteMetadata.GrpcGatewayRouteMetadata
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GrpcGatewayRouteMetadata.GrpcGatewayRouteMetadata
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GrpcGatewayRouteMetadata.GrpcGatewayRouteMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.GrpcGatewayRouteMetadata.GrpcGatewayRouteMetadata


module Amazonka.AppMesh.Types.GrpcGatewayRouteMatch

-- | An object that represents the criteria for determining a request
--   match.
--   
--   <i>See:</i> <a>newGrpcGatewayRouteMatch</a> smart constructor.
data GrpcGatewayRouteMatch
GrpcGatewayRouteMatch' :: Maybe GatewayRouteHostnameMatch -> Maybe Text -> Maybe (NonEmpty GrpcGatewayRouteMetadata) -> GrpcGatewayRouteMatch

-- | The gateway route host name to be matched on.
[$sel:hostname:GrpcGatewayRouteMatch'] :: GrpcGatewayRouteMatch -> Maybe GatewayRouteHostnameMatch

-- | The fully qualified domain name for the service to match from the
--   request.
[$sel:serviceName:GrpcGatewayRouteMatch'] :: GrpcGatewayRouteMatch -> Maybe Text

-- | The gateway route metadata to be matched on.
[$sel:metadata:GrpcGatewayRouteMatch'] :: GrpcGatewayRouteMatch -> Maybe (NonEmpty GrpcGatewayRouteMetadata)

-- | Create a value of <a>GrpcGatewayRouteMatch</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostname:GrpcGatewayRouteMatch'</a>,
--   <a>grpcGatewayRouteMatch_hostname</a> - The gateway route host name to
--   be matched on.
--   
--   <a>$sel:serviceName:GrpcGatewayRouteMatch'</a>,
--   <a>grpcGatewayRouteMatch_serviceName</a> - The fully qualified domain
--   name for the service to match from the request.
--   
--   <a>$sel:metadata:GrpcGatewayRouteMatch'</a>,
--   <a>grpcGatewayRouteMatch_metadata</a> - The gateway route metadata to
--   be matched on.
newGrpcGatewayRouteMatch :: GrpcGatewayRouteMatch

-- | The gateway route host name to be matched on.
grpcGatewayRouteMatch_hostname :: Lens' GrpcGatewayRouteMatch (Maybe GatewayRouteHostnameMatch)

-- | The fully qualified domain name for the service to match from the
--   request.
grpcGatewayRouteMatch_serviceName :: Lens' GrpcGatewayRouteMatch (Maybe Text)

-- | The gateway route metadata to be matched on.
grpcGatewayRouteMatch_metadata :: Lens' GrpcGatewayRouteMatch (Maybe (NonEmpty GrpcGatewayRouteMetadata))
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GrpcGatewayRouteMatch.GrpcGatewayRouteMatch
instance GHC.Show.Show Amazonka.AppMesh.Types.GrpcGatewayRouteMatch.GrpcGatewayRouteMatch
instance GHC.Read.Read Amazonka.AppMesh.Types.GrpcGatewayRouteMatch.GrpcGatewayRouteMatch
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GrpcGatewayRouteMatch.GrpcGatewayRouteMatch
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GrpcGatewayRouteMatch.GrpcGatewayRouteMatch
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GrpcGatewayRouteMatch.GrpcGatewayRouteMatch
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GrpcGatewayRouteMatch.GrpcGatewayRouteMatch
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.GrpcGatewayRouteMatch.GrpcGatewayRouteMatch


module Amazonka.AppMesh.Types.GrpcGatewayRoute

-- | An object that represents a gRPC gateway route.
--   
--   <i>See:</i> <a>newGrpcGatewayRoute</a> smart constructor.
data GrpcGatewayRoute
GrpcGatewayRoute' :: GrpcGatewayRouteAction -> GrpcGatewayRouteMatch -> GrpcGatewayRoute

-- | An object that represents the action to take if a match is determined.
[$sel:action:GrpcGatewayRoute'] :: GrpcGatewayRoute -> GrpcGatewayRouteAction

-- | An object that represents the criteria for determining a request
--   match.
[$sel:match:GrpcGatewayRoute'] :: GrpcGatewayRoute -> GrpcGatewayRouteMatch

-- | Create a value of <a>GrpcGatewayRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:GrpcGatewayRoute'</a>, <a>grpcGatewayRoute_action</a> -
--   An object that represents the action to take if a match is determined.
--   
--   <a>$sel:match:GrpcGatewayRoute'</a>, <a>grpcGatewayRoute_match</a> -
--   An object that represents the criteria for determining a request
--   match.
newGrpcGatewayRoute :: GrpcGatewayRouteAction -> GrpcGatewayRouteMatch -> GrpcGatewayRoute

-- | An object that represents the action to take if a match is determined.
grpcGatewayRoute_action :: Lens' GrpcGatewayRoute GrpcGatewayRouteAction

-- | An object that represents the criteria for determining a request
--   match.
grpcGatewayRoute_match :: Lens' GrpcGatewayRoute GrpcGatewayRouteMatch
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GrpcGatewayRoute.GrpcGatewayRoute
instance GHC.Show.Show Amazonka.AppMesh.Types.GrpcGatewayRoute.GrpcGatewayRoute
instance GHC.Read.Read Amazonka.AppMesh.Types.GrpcGatewayRoute.GrpcGatewayRoute
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GrpcGatewayRoute.GrpcGatewayRoute
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GrpcGatewayRoute.GrpcGatewayRoute
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GrpcGatewayRoute.GrpcGatewayRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GrpcGatewayRoute.GrpcGatewayRoute
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.GrpcGatewayRoute.GrpcGatewayRoute


module Amazonka.AppMesh.Types.MeshRef

-- | An object that represents a service mesh returned by a list operation.
--   
--   <i>See:</i> <a>newMeshRef</a> smart constructor.
data MeshRef
MeshRef' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Integer -> MeshRef

-- | The full Amazon Resource Name (ARN) of the service mesh.
[$sel:arn:MeshRef'] :: MeshRef -> Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:MeshRef'] :: MeshRef -> POSIX

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
[$sel:lastUpdatedAt:MeshRef'] :: MeshRef -> POSIX

-- | The name of the service mesh.
[$sel:meshName:MeshRef'] :: MeshRef -> Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:MeshRef'] :: MeshRef -> Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
[$sel:resourceOwner:MeshRef'] :: MeshRef -> Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
[$sel:version:MeshRef'] :: MeshRef -> Integer

-- | Create a value of <a>MeshRef</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:MeshRef'</a>, <a>meshRef_arn</a> - The full Amazon
--   Resource Name (ARN) of the service mesh.
--   
--   <a>$sel:createdAt:MeshRef'</a>, <a>meshRef_createdAt</a> - The Unix
--   epoch timestamp in seconds for when the resource was created.
--   
--   <a>$sel:lastUpdatedAt:MeshRef'</a>, <a>meshRef_lastUpdatedAt</a> - The
--   Unix epoch timestamp in seconds for when the resource was last
--   updated.
--   
--   <a>$sel:meshName:MeshRef'</a>, <a>meshRef_meshName</a> - The name of
--   the service mesh.
--   
--   <a>$sel:meshOwner:MeshRef'</a>, <a>meshRef_meshOwner</a> - The AWS IAM
--   account ID of the service mesh owner. If the account ID is not your
--   own, then it's the ID of the account that shared the mesh with your
--   account. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
--   
--   <a>$sel:resourceOwner:MeshRef'</a>, <a>meshRef_resourceOwner</a> - The
--   AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
--   
--   <a>$sel:version:MeshRef'</a>, <a>meshRef_version</a> - The version of
--   the resource. Resources are created at version 1, and this version is
--   incremented each time that they're updated.
newMeshRef :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Integer -> MeshRef

-- | The full Amazon Resource Name (ARN) of the service mesh.
meshRef_arn :: Lens' MeshRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
meshRef_createdAt :: Lens' MeshRef UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
meshRef_lastUpdatedAt :: Lens' MeshRef UTCTime

-- | The name of the service mesh.
meshRef_meshName :: Lens' MeshRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
meshRef_meshOwner :: Lens' MeshRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
meshRef_resourceOwner :: Lens' MeshRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
meshRef_version :: Lens' MeshRef Integer
instance GHC.Generics.Generic Amazonka.AppMesh.Types.MeshRef.MeshRef
instance GHC.Show.Show Amazonka.AppMesh.Types.MeshRef.MeshRef
instance GHC.Read.Read Amazonka.AppMesh.Types.MeshRef.MeshRef
instance GHC.Classes.Eq Amazonka.AppMesh.Types.MeshRef.MeshRef
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.MeshRef.MeshRef
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.MeshRef.MeshRef
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.MeshRef.MeshRef


module Amazonka.AppMesh.Types.MeshSpec

-- | An object that represents the specification of a service mesh.
--   
--   <i>See:</i> <a>newMeshSpec</a> smart constructor.
data MeshSpec
MeshSpec' :: Maybe EgressFilter -> MeshSpec

-- | The egress filter rules for the service mesh.
[$sel:egressFilter:MeshSpec'] :: MeshSpec -> Maybe EgressFilter

-- | Create a value of <a>MeshSpec</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:egressFilter:MeshSpec'</a>, <a>meshSpec_egressFilter</a> - The
--   egress filter rules for the service mesh.
newMeshSpec :: MeshSpec

-- | The egress filter rules for the service mesh.
meshSpec_egressFilter :: Lens' MeshSpec (Maybe EgressFilter)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.MeshSpec.MeshSpec
instance GHC.Show.Show Amazonka.AppMesh.Types.MeshSpec.MeshSpec
instance GHC.Read.Read Amazonka.AppMesh.Types.MeshSpec.MeshSpec
instance GHC.Classes.Eq Amazonka.AppMesh.Types.MeshSpec.MeshSpec
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.MeshSpec.MeshSpec
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.MeshSpec.MeshSpec
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.MeshSpec.MeshSpec
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.MeshSpec.MeshSpec


module Amazonka.AppMesh.Types.MeshStatusCode
newtype MeshStatusCode
MeshStatusCode' :: Text -> MeshStatusCode
[fromMeshStatusCode] :: MeshStatusCode -> Text
pattern MeshStatusCode_ACTIVE :: MeshStatusCode
pattern MeshStatusCode_DELETED :: MeshStatusCode
pattern MeshStatusCode_INACTIVE :: MeshStatusCode
instance Amazonka.Data.XML.ToXML Amazonka.AppMesh.Types.MeshStatusCode.MeshStatusCode
instance Amazonka.Data.XML.FromXML Amazonka.AppMesh.Types.MeshStatusCode.MeshStatusCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppMesh.Types.MeshStatusCode.MeshStatusCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.MeshStatusCode.MeshStatusCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppMesh.Types.MeshStatusCode.MeshStatusCode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.MeshStatusCode.MeshStatusCode
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.Types.MeshStatusCode.MeshStatusCode
instance Amazonka.Data.Headers.ToHeader Amazonka.AppMesh.Types.MeshStatusCode.MeshStatusCode
instance Amazonka.Data.Log.ToLog Amazonka.AppMesh.Types.MeshStatusCode.MeshStatusCode
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppMesh.Types.MeshStatusCode.MeshStatusCode
instance Amazonka.Data.Text.ToText Amazonka.AppMesh.Types.MeshStatusCode.MeshStatusCode
instance Amazonka.Data.Text.FromText Amazonka.AppMesh.Types.MeshStatusCode.MeshStatusCode
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.MeshStatusCode.MeshStatusCode
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.MeshStatusCode.MeshStatusCode
instance GHC.Generics.Generic Amazonka.AppMesh.Types.MeshStatusCode.MeshStatusCode
instance GHC.Classes.Ord Amazonka.AppMesh.Types.MeshStatusCode.MeshStatusCode
instance GHC.Classes.Eq Amazonka.AppMesh.Types.MeshStatusCode.MeshStatusCode
instance GHC.Read.Read Amazonka.AppMesh.Types.MeshStatusCode.MeshStatusCode
instance GHC.Show.Show Amazonka.AppMesh.Types.MeshStatusCode.MeshStatusCode


module Amazonka.AppMesh.Types.MeshStatus

-- | An object that represents the status of a service mesh.
--   
--   <i>See:</i> <a>newMeshStatus</a> smart constructor.
data MeshStatus
MeshStatus' :: Maybe MeshStatusCode -> MeshStatus

-- | The current mesh status.
[$sel:status:MeshStatus'] :: MeshStatus -> Maybe MeshStatusCode

-- | Create a value of <a>MeshStatus</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:MeshStatus'</a>, <a>meshStatus_status</a> - The current
--   mesh status.
newMeshStatus :: MeshStatus

-- | The current mesh status.
meshStatus_status :: Lens' MeshStatus (Maybe MeshStatusCode)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.MeshStatus.MeshStatus
instance GHC.Show.Show Amazonka.AppMesh.Types.MeshStatus.MeshStatus
instance GHC.Read.Read Amazonka.AppMesh.Types.MeshStatus.MeshStatus
instance GHC.Classes.Eq Amazonka.AppMesh.Types.MeshStatus.MeshStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.MeshStatus.MeshStatus
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.MeshStatus.MeshStatus
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.MeshStatus.MeshStatus


module Amazonka.AppMesh.Types.OutlierDetection

-- | An object that represents the outlier detection for a virtual node's
--   listener.
--   
--   <i>See:</i> <a>newOutlierDetection</a> smart constructor.
data OutlierDetection
OutlierDetection' :: Duration -> Duration -> Natural -> Natural -> OutlierDetection

-- | The base amount of time for which a host is ejected.
[$sel:baseEjectionDuration:OutlierDetection'] :: OutlierDetection -> Duration

-- | The time interval between ejection sweep analysis.
[$sel:interval:OutlierDetection'] :: OutlierDetection -> Duration

-- | Maximum percentage of hosts in load balancing pool for upstream
--   service that can be ejected. Will eject at least one host regardless
--   of the value.
[$sel:maxEjectionPercent:OutlierDetection'] :: OutlierDetection -> Natural

-- | Number of consecutive <tt>5xx</tt> errors required for ejection.
[$sel:maxServerErrors:OutlierDetection'] :: OutlierDetection -> Natural

-- | Create a value of <a>OutlierDetection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseEjectionDuration:OutlierDetection'</a>,
--   <a>outlierDetection_baseEjectionDuration</a> - The base amount of time
--   for which a host is ejected.
--   
--   <a>$sel:interval:OutlierDetection'</a>,
--   <a>outlierDetection_interval</a> - The time interval between ejection
--   sweep analysis.
--   
--   <a>$sel:maxEjectionPercent:OutlierDetection'</a>,
--   <a>outlierDetection_maxEjectionPercent</a> - Maximum percentage of
--   hosts in load balancing pool for upstream service that can be ejected.
--   Will eject at least one host regardless of the value.
--   
--   <a>$sel:maxServerErrors:OutlierDetection'</a>,
--   <a>outlierDetection_maxServerErrors</a> - Number of consecutive
--   <tt>5xx</tt> errors required for ejection.
newOutlierDetection :: Duration -> Duration -> Natural -> Natural -> OutlierDetection

-- | The base amount of time for which a host is ejected.
outlierDetection_baseEjectionDuration :: Lens' OutlierDetection Duration

-- | The time interval between ejection sweep analysis.
outlierDetection_interval :: Lens' OutlierDetection Duration

-- | Maximum percentage of hosts in load balancing pool for upstream
--   service that can be ejected. Will eject at least one host regardless
--   of the value.
outlierDetection_maxEjectionPercent :: Lens' OutlierDetection Natural

-- | Number of consecutive <tt>5xx</tt> errors required for ejection.
outlierDetection_maxServerErrors :: Lens' OutlierDetection Natural
instance GHC.Generics.Generic Amazonka.AppMesh.Types.OutlierDetection.OutlierDetection
instance GHC.Show.Show Amazonka.AppMesh.Types.OutlierDetection.OutlierDetection
instance GHC.Read.Read Amazonka.AppMesh.Types.OutlierDetection.OutlierDetection
instance GHC.Classes.Eq Amazonka.AppMesh.Types.OutlierDetection.OutlierDetection
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.OutlierDetection.OutlierDetection
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.OutlierDetection.OutlierDetection
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.OutlierDetection.OutlierDetection
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.OutlierDetection.OutlierDetection


module Amazonka.AppMesh.Types.PortProtocol
newtype PortProtocol
PortProtocol' :: Text -> PortProtocol
[fromPortProtocol] :: PortProtocol -> Text
pattern PortProtocol_Grpc :: PortProtocol
pattern PortProtocol_Http :: PortProtocol
pattern PortProtocol_Http2 :: PortProtocol
pattern PortProtocol_Tcp :: PortProtocol
instance Amazonka.Data.XML.ToXML Amazonka.AppMesh.Types.PortProtocol.PortProtocol
instance Amazonka.Data.XML.FromXML Amazonka.AppMesh.Types.PortProtocol.PortProtocol
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppMesh.Types.PortProtocol.PortProtocol
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.PortProtocol.PortProtocol
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppMesh.Types.PortProtocol.PortProtocol
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.PortProtocol.PortProtocol
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.Types.PortProtocol.PortProtocol
instance Amazonka.Data.Headers.ToHeader Amazonka.AppMesh.Types.PortProtocol.PortProtocol
instance Amazonka.Data.Log.ToLog Amazonka.AppMesh.Types.PortProtocol.PortProtocol
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppMesh.Types.PortProtocol.PortProtocol
instance Amazonka.Data.Text.ToText Amazonka.AppMesh.Types.PortProtocol.PortProtocol
instance Amazonka.Data.Text.FromText Amazonka.AppMesh.Types.PortProtocol.PortProtocol
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.PortProtocol.PortProtocol
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.PortProtocol.PortProtocol
instance GHC.Generics.Generic Amazonka.AppMesh.Types.PortProtocol.PortProtocol
instance GHC.Classes.Ord Amazonka.AppMesh.Types.PortProtocol.PortProtocol
instance GHC.Classes.Eq Amazonka.AppMesh.Types.PortProtocol.PortProtocol
instance GHC.Read.Read Amazonka.AppMesh.Types.PortProtocol.PortProtocol
instance GHC.Show.Show Amazonka.AppMesh.Types.PortProtocol.PortProtocol


module Amazonka.AppMesh.Types.PortMapping

-- | An object that represents a port mapping.
--   
--   <i>See:</i> <a>newPortMapping</a> smart constructor.
data PortMapping
PortMapping' :: Natural -> PortProtocol -> PortMapping

-- | The port used for the port mapping.
[$sel:port:PortMapping'] :: PortMapping -> Natural

-- | The protocol used for the port mapping. Specify one protocol.
[$sel:protocol:PortMapping'] :: PortMapping -> PortProtocol

-- | Create a value of <a>PortMapping</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:port:PortMapping'</a>, <a>portMapping_port</a> - The port used
--   for the port mapping.
--   
--   <a>$sel:protocol:PortMapping'</a>, <a>portMapping_protocol</a> - The
--   protocol used for the port mapping. Specify one protocol.
newPortMapping :: Natural -> PortProtocol -> PortMapping

-- | The port used for the port mapping.
portMapping_port :: Lens' PortMapping Natural

-- | The protocol used for the port mapping. Specify one protocol.
portMapping_protocol :: Lens' PortMapping PortProtocol
instance GHC.Generics.Generic Amazonka.AppMesh.Types.PortMapping.PortMapping
instance GHC.Show.Show Amazonka.AppMesh.Types.PortMapping.PortMapping
instance GHC.Read.Read Amazonka.AppMesh.Types.PortMapping.PortMapping
instance GHC.Classes.Eq Amazonka.AppMesh.Types.PortMapping.PortMapping
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.PortMapping.PortMapping
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.PortMapping.PortMapping
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.PortMapping.PortMapping
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.PortMapping.PortMapping


module Amazonka.AppMesh.Types.HealthCheckPolicy

-- | An object that represents the health check policy for a virtual node's
--   listener.
--   
--   <i>See:</i> <a>newHealthCheckPolicy</a> smart constructor.
data HealthCheckPolicy
HealthCheckPolicy' :: Maybe Text -> Maybe Natural -> Natural -> Natural -> PortProtocol -> Natural -> Natural -> HealthCheckPolicy

-- | The destination path for the health check request. This value is only
--   used if the specified protocol is HTTP or HTTP/2. For any other
--   protocol, this value is ignored.
[$sel:path:HealthCheckPolicy'] :: HealthCheckPolicy -> Maybe Text

-- | The destination port for the health check request. This port must
--   match the port defined in the PortMapping for the listener.
[$sel:port:HealthCheckPolicy'] :: HealthCheckPolicy -> Maybe Natural

-- | The number of consecutive successful health checks that must occur
--   before declaring listener healthy.
[$sel:healthyThreshold:HealthCheckPolicy'] :: HealthCheckPolicy -> Natural

-- | The time period in milliseconds between each health check execution.
[$sel:intervalMillis:HealthCheckPolicy'] :: HealthCheckPolicy -> Natural

-- | The protocol for the health check request. If you specify
--   <tt>grpc</tt>, then your service must conform to the <a>GRPC Health
--   Checking Protocol</a>.
[$sel:protocol:HealthCheckPolicy'] :: HealthCheckPolicy -> PortProtocol

-- | The amount of time to wait when receiving a response from the health
--   check, in milliseconds.
[$sel:timeoutMillis:HealthCheckPolicy'] :: HealthCheckPolicy -> Natural

-- | The number of consecutive failed health checks that must occur before
--   declaring a virtual node unhealthy.
[$sel:unhealthyThreshold:HealthCheckPolicy'] :: HealthCheckPolicy -> Natural

-- | Create a value of <a>HealthCheckPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:HealthCheckPolicy'</a>, <a>healthCheckPolicy_path</a> -
--   The destination path for the health check request. This value is only
--   used if the specified protocol is HTTP or HTTP/2. For any other
--   protocol, this value is ignored.
--   
--   <a>$sel:port:HealthCheckPolicy'</a>, <a>healthCheckPolicy_port</a> -
--   The destination port for the health check request. This port must
--   match the port defined in the PortMapping for the listener.
--   
--   <a>$sel:healthyThreshold:HealthCheckPolicy'</a>,
--   <a>healthCheckPolicy_healthyThreshold</a> - The number of consecutive
--   successful health checks that must occur before declaring listener
--   healthy.
--   
--   <a>$sel:intervalMillis:HealthCheckPolicy'</a>,
--   <a>healthCheckPolicy_intervalMillis</a> - The time period in
--   milliseconds between each health check execution.
--   
--   <a>$sel:protocol:HealthCheckPolicy'</a>,
--   <a>healthCheckPolicy_protocol</a> - The protocol for the health check
--   request. If you specify <tt>grpc</tt>, then your service must conform
--   to the <a>GRPC Health Checking Protocol</a>.
--   
--   <a>$sel:timeoutMillis:HealthCheckPolicy'</a>,
--   <a>healthCheckPolicy_timeoutMillis</a> - The amount of time to wait
--   when receiving a response from the health check, in milliseconds.
--   
--   <a>$sel:unhealthyThreshold:HealthCheckPolicy'</a>,
--   <a>healthCheckPolicy_unhealthyThreshold</a> - The number of
--   consecutive failed health checks that must occur before declaring a
--   virtual node unhealthy.
newHealthCheckPolicy :: Natural -> Natural -> PortProtocol -> Natural -> Natural -> HealthCheckPolicy

-- | The destination path for the health check request. This value is only
--   used if the specified protocol is HTTP or HTTP/2. For any other
--   protocol, this value is ignored.
healthCheckPolicy_path :: Lens' HealthCheckPolicy (Maybe Text)

-- | The destination port for the health check request. This port must
--   match the port defined in the PortMapping for the listener.
healthCheckPolicy_port :: Lens' HealthCheckPolicy (Maybe Natural)

-- | The number of consecutive successful health checks that must occur
--   before declaring listener healthy.
healthCheckPolicy_healthyThreshold :: Lens' HealthCheckPolicy Natural

-- | The time period in milliseconds between each health check execution.
healthCheckPolicy_intervalMillis :: Lens' HealthCheckPolicy Natural

-- | The protocol for the health check request. If you specify
--   <tt>grpc</tt>, then your service must conform to the <a>GRPC Health
--   Checking Protocol</a>.
healthCheckPolicy_protocol :: Lens' HealthCheckPolicy PortProtocol

-- | The amount of time to wait when receiving a response from the health
--   check, in milliseconds.
healthCheckPolicy_timeoutMillis :: Lens' HealthCheckPolicy Natural

-- | The number of consecutive failed health checks that must occur before
--   declaring a virtual node unhealthy.
healthCheckPolicy_unhealthyThreshold :: Lens' HealthCheckPolicy Natural
instance GHC.Generics.Generic Amazonka.AppMesh.Types.HealthCheckPolicy.HealthCheckPolicy
instance GHC.Show.Show Amazonka.AppMesh.Types.HealthCheckPolicy.HealthCheckPolicy
instance GHC.Read.Read Amazonka.AppMesh.Types.HealthCheckPolicy.HealthCheckPolicy
instance GHC.Classes.Eq Amazonka.AppMesh.Types.HealthCheckPolicy.HealthCheckPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.HealthCheckPolicy.HealthCheckPolicy
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.HealthCheckPolicy.HealthCheckPolicy
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.HealthCheckPolicy.HealthCheckPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.HealthCheckPolicy.HealthCheckPolicy


module Amazonka.AppMesh.Types.QueryParameterMatch

-- | An object representing the query parameter to match.
--   
--   <i>See:</i> <a>newQueryParameterMatch</a> smart constructor.
data QueryParameterMatch
QueryParameterMatch' :: Maybe Text -> QueryParameterMatch

-- | The exact query parameter to match on.
[$sel:exact:QueryParameterMatch'] :: QueryParameterMatch -> Maybe Text

-- | Create a value of <a>QueryParameterMatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exact:QueryParameterMatch'</a>,
--   <a>queryParameterMatch_exact</a> - The exact query parameter to match
--   on.
newQueryParameterMatch :: QueryParameterMatch

-- | The exact query parameter to match on.
queryParameterMatch_exact :: Lens' QueryParameterMatch (Maybe Text)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.QueryParameterMatch.QueryParameterMatch
instance GHC.Show.Show Amazonka.AppMesh.Types.QueryParameterMatch.QueryParameterMatch
instance GHC.Read.Read Amazonka.AppMesh.Types.QueryParameterMatch.QueryParameterMatch
instance GHC.Classes.Eq Amazonka.AppMesh.Types.QueryParameterMatch.QueryParameterMatch
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.QueryParameterMatch.QueryParameterMatch
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.QueryParameterMatch.QueryParameterMatch
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.QueryParameterMatch.QueryParameterMatch
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.QueryParameterMatch.QueryParameterMatch


module Amazonka.AppMesh.Types.HttpQueryParameter

-- | An object that represents the query parameter in the request.
--   
--   <i>See:</i> <a>newHttpQueryParameter</a> smart constructor.
data HttpQueryParameter
HttpQueryParameter' :: Maybe QueryParameterMatch -> Text -> HttpQueryParameter

-- | The query parameter to match on.
[$sel:match:HttpQueryParameter'] :: HttpQueryParameter -> Maybe QueryParameterMatch

-- | A name for the query parameter that will be matched on.
[$sel:name:HttpQueryParameter'] :: HttpQueryParameter -> Text

-- | Create a value of <a>HttpQueryParameter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:match:HttpQueryParameter'</a>, <a>httpQueryParameter_match</a>
--   - The query parameter to match on.
--   
--   <a>$sel:name:HttpQueryParameter'</a>, <a>httpQueryParameter_name</a> -
--   A name for the query parameter that will be matched on.
newHttpQueryParameter :: Text -> HttpQueryParameter

-- | The query parameter to match on.
httpQueryParameter_match :: Lens' HttpQueryParameter (Maybe QueryParameterMatch)

-- | A name for the query parameter that will be matched on.
httpQueryParameter_name :: Lens' HttpQueryParameter Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.HttpQueryParameter.HttpQueryParameter
instance GHC.Show.Show Amazonka.AppMesh.Types.HttpQueryParameter.HttpQueryParameter
instance GHC.Read.Read Amazonka.AppMesh.Types.HttpQueryParameter.HttpQueryParameter
instance GHC.Classes.Eq Amazonka.AppMesh.Types.HttpQueryParameter.HttpQueryParameter
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.HttpQueryParameter.HttpQueryParameter
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.HttpQueryParameter.HttpQueryParameter
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.HttpQueryParameter.HttpQueryParameter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.HttpQueryParameter.HttpQueryParameter


module Amazonka.AppMesh.Types.HttpRouteMatch

-- | An object that represents the requirements for a route to match HTTP
--   requests for a virtual router.
--   
--   <i>See:</i> <a>newHttpRouteMatch</a> smart constructor.
data HttpRouteMatch
HttpRouteMatch' :: Maybe HttpPathMatch -> Maybe Text -> Maybe (NonEmpty HttpQueryParameter) -> Maybe (NonEmpty HttpRouteHeader) -> Maybe HttpMethod -> Maybe HttpScheme -> HttpRouteMatch

-- | The client request path to match on.
[$sel:path:HttpRouteMatch'] :: HttpRouteMatch -> Maybe HttpPathMatch

-- | Specifies the path to match requests with. This parameter must always
--   start with <tt>/</tt>, which by itself matches all requests to the
--   virtual service name. You can also match for path-based routing of
--   requests. For example, if your virtual service name is
--   <tt>my-service.local</tt> and you want the route to match requests to
--   <tt>my-service.local/metrics</tt>, your prefix should be
--   <tt>/metrics</tt>.
[$sel:prefix:HttpRouteMatch'] :: HttpRouteMatch -> Maybe Text

-- | The client request query parameters to match on.
[$sel:queryParameters:HttpRouteMatch'] :: HttpRouteMatch -> Maybe (NonEmpty HttpQueryParameter)

-- | The client request headers to match on.
[$sel:headers:HttpRouteMatch'] :: HttpRouteMatch -> Maybe (NonEmpty HttpRouteHeader)

-- | The client request method to match on. Specify only one.
[$sel:method:HttpRouteMatch'] :: HttpRouteMatch -> Maybe HttpMethod

-- | The client request scheme to match on. Specify only one. Applicable
--   only for HTTP2 routes.
[$sel:scheme:HttpRouteMatch'] :: HttpRouteMatch -> Maybe HttpScheme

-- | Create a value of <a>HttpRouteMatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:HttpRouteMatch'</a>, <a>httpRouteMatch_path</a> - The
--   client request path to match on.
--   
--   <a>$sel:prefix:HttpRouteMatch'</a>, <a>httpRouteMatch_prefix</a> -
--   Specifies the path to match requests with. This parameter must always
--   start with <tt>/</tt>, which by itself matches all requests to the
--   virtual service name. You can also match for path-based routing of
--   requests. For example, if your virtual service name is
--   <tt>my-service.local</tt> and you want the route to match requests to
--   <tt>my-service.local/metrics</tt>, your prefix should be
--   <tt>/metrics</tt>.
--   
--   <a>$sel:queryParameters:HttpRouteMatch'</a>,
--   <a>httpRouteMatch_queryParameters</a> - The client request query
--   parameters to match on.
--   
--   <a>$sel:headers:HttpRouteMatch'</a>, <a>httpRouteMatch_headers</a> -
--   The client request headers to match on.
--   
--   <a>$sel:method:HttpRouteMatch'</a>, <a>httpRouteMatch_method</a> - The
--   client request method to match on. Specify only one.
--   
--   <a>$sel:scheme:HttpRouteMatch'</a>, <a>httpRouteMatch_scheme</a> - The
--   client request scheme to match on. Specify only one. Applicable only
--   for HTTP2 routes.
newHttpRouteMatch :: HttpRouteMatch

-- | The client request path to match on.
httpRouteMatch_path :: Lens' HttpRouteMatch (Maybe HttpPathMatch)

-- | Specifies the path to match requests with. This parameter must always
--   start with <tt>/</tt>, which by itself matches all requests to the
--   virtual service name. You can also match for path-based routing of
--   requests. For example, if your virtual service name is
--   <tt>my-service.local</tt> and you want the route to match requests to
--   <tt>my-service.local/metrics</tt>, your prefix should be
--   <tt>/metrics</tt>.
httpRouteMatch_prefix :: Lens' HttpRouteMatch (Maybe Text)

-- | The client request query parameters to match on.
httpRouteMatch_queryParameters :: Lens' HttpRouteMatch (Maybe (NonEmpty HttpQueryParameter))

-- | The client request headers to match on.
httpRouteMatch_headers :: Lens' HttpRouteMatch (Maybe (NonEmpty HttpRouteHeader))

-- | The client request method to match on. Specify only one.
httpRouteMatch_method :: Lens' HttpRouteMatch (Maybe HttpMethod)

-- | The client request scheme to match on. Specify only one. Applicable
--   only for HTTP2 routes.
httpRouteMatch_scheme :: Lens' HttpRouteMatch (Maybe HttpScheme)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.HttpRouteMatch.HttpRouteMatch
instance GHC.Show.Show Amazonka.AppMesh.Types.HttpRouteMatch.HttpRouteMatch
instance GHC.Read.Read Amazonka.AppMesh.Types.HttpRouteMatch.HttpRouteMatch
instance GHC.Classes.Eq Amazonka.AppMesh.Types.HttpRouteMatch.HttpRouteMatch
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.HttpRouteMatch.HttpRouteMatch
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.HttpRouteMatch.HttpRouteMatch
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.HttpRouteMatch.HttpRouteMatch
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.HttpRouteMatch.HttpRouteMatch


module Amazonka.AppMesh.Types.HttpGatewayRouteMatch

-- | An object that represents the criteria for determining a request
--   match.
--   
--   <i>See:</i> <a>newHttpGatewayRouteMatch</a> smart constructor.
data HttpGatewayRouteMatch
HttpGatewayRouteMatch' :: Maybe GatewayRouteHostnameMatch -> Maybe HttpPathMatch -> Maybe Text -> Maybe (NonEmpty HttpQueryParameter) -> Maybe (NonEmpty HttpGatewayRouteHeader) -> Maybe HttpMethod -> HttpGatewayRouteMatch

-- | The host name to match on.
[$sel:hostname:HttpGatewayRouteMatch'] :: HttpGatewayRouteMatch -> Maybe GatewayRouteHostnameMatch

-- | The path to match on.
[$sel:path:HttpGatewayRouteMatch'] :: HttpGatewayRouteMatch -> Maybe HttpPathMatch

-- | Specifies the path to match requests with. This parameter must always
--   start with <tt>/</tt>, which by itself matches all requests to the
--   virtual service name. You can also match for path-based routing of
--   requests. For example, if your virtual service name is
--   <tt>my-service.local</tt> and you want the route to match requests to
--   <tt>my-service.local/metrics</tt>, your prefix should be
--   <tt>/metrics</tt>.
[$sel:prefix:HttpGatewayRouteMatch'] :: HttpGatewayRouteMatch -> Maybe Text

-- | The query parameter to match on.
[$sel:queryParameters:HttpGatewayRouteMatch'] :: HttpGatewayRouteMatch -> Maybe (NonEmpty HttpQueryParameter)

-- | The client request headers to match on.
[$sel:headers:HttpGatewayRouteMatch'] :: HttpGatewayRouteMatch -> Maybe (NonEmpty HttpGatewayRouteHeader)

-- | The method to match on.
[$sel:method:HttpGatewayRouteMatch'] :: HttpGatewayRouteMatch -> Maybe HttpMethod

-- | Create a value of <a>HttpGatewayRouteMatch</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostname:HttpGatewayRouteMatch'</a>,
--   <a>httpGatewayRouteMatch_hostname</a> - The host name to match on.
--   
--   <a>$sel:path:HttpGatewayRouteMatch'</a>,
--   <a>httpGatewayRouteMatch_path</a> - The path to match on.
--   
--   <a>$sel:prefix:HttpGatewayRouteMatch'</a>,
--   <a>httpGatewayRouteMatch_prefix</a> - Specifies the path to match
--   requests with. This parameter must always start with <tt>/</tt>, which
--   by itself matches all requests to the virtual service name. You can
--   also match for path-based routing of requests. For example, if your
--   virtual service name is <tt>my-service.local</tt> and you want the
--   route to match requests to <tt>my-service.local/metrics</tt>, your
--   prefix should be <tt>/metrics</tt>.
--   
--   <a>$sel:queryParameters:HttpGatewayRouteMatch'</a>,
--   <a>httpGatewayRouteMatch_queryParameters</a> - The query parameter to
--   match on.
--   
--   <a>$sel:headers:HttpGatewayRouteMatch'</a>,
--   <a>httpGatewayRouteMatch_headers</a> - The client request headers to
--   match on.
--   
--   <a>$sel:method:HttpGatewayRouteMatch'</a>,
--   <a>httpGatewayRouteMatch_method</a> - The method to match on.
newHttpGatewayRouteMatch :: HttpGatewayRouteMatch

-- | The host name to match on.
httpGatewayRouteMatch_hostname :: Lens' HttpGatewayRouteMatch (Maybe GatewayRouteHostnameMatch)

-- | The path to match on.
httpGatewayRouteMatch_path :: Lens' HttpGatewayRouteMatch (Maybe HttpPathMatch)

-- | Specifies the path to match requests with. This parameter must always
--   start with <tt>/</tt>, which by itself matches all requests to the
--   virtual service name. You can also match for path-based routing of
--   requests. For example, if your virtual service name is
--   <tt>my-service.local</tt> and you want the route to match requests to
--   <tt>my-service.local/metrics</tt>, your prefix should be
--   <tt>/metrics</tt>.
httpGatewayRouteMatch_prefix :: Lens' HttpGatewayRouteMatch (Maybe Text)

-- | The query parameter to match on.
httpGatewayRouteMatch_queryParameters :: Lens' HttpGatewayRouteMatch (Maybe (NonEmpty HttpQueryParameter))

-- | The client request headers to match on.
httpGatewayRouteMatch_headers :: Lens' HttpGatewayRouteMatch (Maybe (NonEmpty HttpGatewayRouteHeader))

-- | The method to match on.
httpGatewayRouteMatch_method :: Lens' HttpGatewayRouteMatch (Maybe HttpMethod)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.HttpGatewayRouteMatch.HttpGatewayRouteMatch
instance GHC.Show.Show Amazonka.AppMesh.Types.HttpGatewayRouteMatch.HttpGatewayRouteMatch
instance GHC.Read.Read Amazonka.AppMesh.Types.HttpGatewayRouteMatch.HttpGatewayRouteMatch
instance GHC.Classes.Eq Amazonka.AppMesh.Types.HttpGatewayRouteMatch.HttpGatewayRouteMatch
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.HttpGatewayRouteMatch.HttpGatewayRouteMatch
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.HttpGatewayRouteMatch.HttpGatewayRouteMatch
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.HttpGatewayRouteMatch.HttpGatewayRouteMatch
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.HttpGatewayRouteMatch.HttpGatewayRouteMatch


module Amazonka.AppMesh.Types.HttpGatewayRoute

-- | An object that represents an HTTP gateway route.
--   
--   <i>See:</i> <a>newHttpGatewayRoute</a> smart constructor.
data HttpGatewayRoute
HttpGatewayRoute' :: HttpGatewayRouteAction -> HttpGatewayRouteMatch -> HttpGatewayRoute

-- | An object that represents the action to take if a match is determined.
[$sel:action:HttpGatewayRoute'] :: HttpGatewayRoute -> HttpGatewayRouteAction

-- | An object that represents the criteria for determining a request
--   match.
[$sel:match:HttpGatewayRoute'] :: HttpGatewayRoute -> HttpGatewayRouteMatch

-- | Create a value of <a>HttpGatewayRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:HttpGatewayRoute'</a>, <a>httpGatewayRoute_action</a> -
--   An object that represents the action to take if a match is determined.
--   
--   <a>$sel:match:HttpGatewayRoute'</a>, <a>httpGatewayRoute_match</a> -
--   An object that represents the criteria for determining a request
--   match.
newHttpGatewayRoute :: HttpGatewayRouteAction -> HttpGatewayRouteMatch -> HttpGatewayRoute

-- | An object that represents the action to take if a match is determined.
httpGatewayRoute_action :: Lens' HttpGatewayRoute HttpGatewayRouteAction

-- | An object that represents the criteria for determining a request
--   match.
httpGatewayRoute_match :: Lens' HttpGatewayRoute HttpGatewayRouteMatch
instance GHC.Generics.Generic Amazonka.AppMesh.Types.HttpGatewayRoute.HttpGatewayRoute
instance GHC.Show.Show Amazonka.AppMesh.Types.HttpGatewayRoute.HttpGatewayRoute
instance GHC.Read.Read Amazonka.AppMesh.Types.HttpGatewayRoute.HttpGatewayRoute
instance GHC.Classes.Eq Amazonka.AppMesh.Types.HttpGatewayRoute.HttpGatewayRoute
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.HttpGatewayRoute.HttpGatewayRoute
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.HttpGatewayRoute.HttpGatewayRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.HttpGatewayRoute.HttpGatewayRoute
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.HttpGatewayRoute.HttpGatewayRoute


module Amazonka.AppMesh.Types.GatewayRouteSpec

-- | An object that represents a gateway route specification. Specify one
--   gateway route type.
--   
--   <i>See:</i> <a>newGatewayRouteSpec</a> smart constructor.
data GatewayRouteSpec
GatewayRouteSpec' :: Maybe Natural -> Maybe HttpGatewayRoute -> Maybe GrpcGatewayRoute -> Maybe HttpGatewayRoute -> GatewayRouteSpec

-- | The ordering of the gateway routes spec.
[$sel:priority:GatewayRouteSpec'] :: GatewayRouteSpec -> Maybe Natural

-- | An object that represents the specification of an HTTP/2 gateway
--   route.
[$sel:http2Route:GatewayRouteSpec'] :: GatewayRouteSpec -> Maybe HttpGatewayRoute

-- | An object that represents the specification of a gRPC gateway route.
[$sel:grpcRoute:GatewayRouteSpec'] :: GatewayRouteSpec -> Maybe GrpcGatewayRoute

-- | An object that represents the specification of an HTTP gateway route.
[$sel:httpRoute:GatewayRouteSpec'] :: GatewayRouteSpec -> Maybe HttpGatewayRoute

-- | Create a value of <a>GatewayRouteSpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priority:GatewayRouteSpec'</a>,
--   <a>gatewayRouteSpec_priority</a> - The ordering of the gateway routes
--   spec.
--   
--   <a>$sel:http2Route:GatewayRouteSpec'</a>,
--   <a>gatewayRouteSpec_http2Route</a> - An object that represents the
--   specification of an HTTP/2 gateway route.
--   
--   <a>$sel:grpcRoute:GatewayRouteSpec'</a>,
--   <a>gatewayRouteSpec_grpcRoute</a> - An object that represents the
--   specification of a gRPC gateway route.
--   
--   <a>$sel:httpRoute:GatewayRouteSpec'</a>,
--   <a>gatewayRouteSpec_httpRoute</a> - An object that represents the
--   specification of an HTTP gateway route.
newGatewayRouteSpec :: GatewayRouteSpec

-- | The ordering of the gateway routes spec.
gatewayRouteSpec_priority :: Lens' GatewayRouteSpec (Maybe Natural)

-- | An object that represents the specification of an HTTP/2 gateway
--   route.
gatewayRouteSpec_http2Route :: Lens' GatewayRouteSpec (Maybe HttpGatewayRoute)

-- | An object that represents the specification of a gRPC gateway route.
gatewayRouteSpec_grpcRoute :: Lens' GatewayRouteSpec (Maybe GrpcGatewayRoute)

-- | An object that represents the specification of an HTTP gateway route.
gatewayRouteSpec_httpRoute :: Lens' GatewayRouteSpec (Maybe HttpGatewayRoute)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GatewayRouteSpec.GatewayRouteSpec
instance GHC.Show.Show Amazonka.AppMesh.Types.GatewayRouteSpec.GatewayRouteSpec
instance GHC.Read.Read Amazonka.AppMesh.Types.GatewayRouteSpec.GatewayRouteSpec
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GatewayRouteSpec.GatewayRouteSpec
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GatewayRouteSpec.GatewayRouteSpec
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GatewayRouteSpec.GatewayRouteSpec
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GatewayRouteSpec.GatewayRouteSpec
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.GatewayRouteSpec.GatewayRouteSpec


module Amazonka.AppMesh.Types.ResourceMetadata

-- | An object that represents metadata for a resource.
--   
--   <i>See:</i> <a>newResourceMetadata</a> smart constructor.
data ResourceMetadata
ResourceMetadata' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Integer -> ResourceMetadata

-- | The full Amazon Resource Name (ARN) for the resource.
[$sel:arn:ResourceMetadata'] :: ResourceMetadata -> Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:ResourceMetadata'] :: ResourceMetadata -> POSIX

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
[$sel:lastUpdatedAt:ResourceMetadata'] :: ResourceMetadata -> POSIX

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:ResourceMetadata'] :: ResourceMetadata -> Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
[$sel:resourceOwner:ResourceMetadata'] :: ResourceMetadata -> Text

-- | The unique identifier for the resource.
[$sel:uid:ResourceMetadata'] :: ResourceMetadata -> Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
[$sel:version:ResourceMetadata'] :: ResourceMetadata -> Integer

-- | Create a value of <a>ResourceMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ResourceMetadata'</a>, <a>resourceMetadata_arn</a> - The
--   full Amazon Resource Name (ARN) for the resource.
--   
--   <a>$sel:createdAt:ResourceMetadata'</a>,
--   <a>resourceMetadata_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:lastUpdatedAt:ResourceMetadata'</a>,
--   <a>resourceMetadata_lastUpdatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was last updated.
--   
--   <a>$sel:meshOwner:ResourceMetadata'</a>,
--   <a>resourceMetadata_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:ResourceMetadata'</a>,
--   <a>resourceMetadata_resourceOwner</a> - The AWS IAM account ID of the
--   resource owner. If the account ID is not your own, then it's the ID of
--   the mesh owner or of another account that the mesh is shared with. For
--   more information about mesh sharing, see <a>Working with shared
--   meshes</a>.
--   
--   <a>$sel:uid:ResourceMetadata'</a>, <a>resourceMetadata_uid</a> - The
--   unique identifier for the resource.
--   
--   <a>$sel:version:ResourceMetadata'</a>, <a>resourceMetadata_version</a>
--   - The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
newResourceMetadata :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Integer -> ResourceMetadata

-- | The full Amazon Resource Name (ARN) for the resource.
resourceMetadata_arn :: Lens' ResourceMetadata Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
resourceMetadata_createdAt :: Lens' ResourceMetadata UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
resourceMetadata_lastUpdatedAt :: Lens' ResourceMetadata UTCTime

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
resourceMetadata_meshOwner :: Lens' ResourceMetadata Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
resourceMetadata_resourceOwner :: Lens' ResourceMetadata Text

-- | The unique identifier for the resource.
resourceMetadata_uid :: Lens' ResourceMetadata Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
resourceMetadata_version :: Lens' ResourceMetadata Integer
instance GHC.Generics.Generic Amazonka.AppMesh.Types.ResourceMetadata.ResourceMetadata
instance GHC.Show.Show Amazonka.AppMesh.Types.ResourceMetadata.ResourceMetadata
instance GHC.Read.Read Amazonka.AppMesh.Types.ResourceMetadata.ResourceMetadata
instance GHC.Classes.Eq Amazonka.AppMesh.Types.ResourceMetadata.ResourceMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.ResourceMetadata.ResourceMetadata
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.ResourceMetadata.ResourceMetadata
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.ResourceMetadata.ResourceMetadata


module Amazonka.AppMesh.Types.MeshData

-- | An object that represents a service mesh returned by a describe
--   operation.
--   
--   <i>See:</i> <a>newMeshData</a> smart constructor.
data MeshData
MeshData' :: Text -> ResourceMetadata -> MeshSpec -> MeshStatus -> MeshData

-- | The name of the service mesh.
[$sel:meshName:MeshData'] :: MeshData -> Text

-- | The associated metadata for the service mesh.
[$sel:metadata:MeshData'] :: MeshData -> ResourceMetadata

-- | The associated specification for the service mesh.
[$sel:spec:MeshData'] :: MeshData -> MeshSpec

-- | The status of the service mesh.
[$sel:status:MeshData'] :: MeshData -> MeshStatus

-- | Create a value of <a>MeshData</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshName:MeshData'</a>, <a>meshData_meshName</a> - The name of
--   the service mesh.
--   
--   <a>$sel:metadata:MeshData'</a>, <a>meshData_metadata</a> - The
--   associated metadata for the service mesh.
--   
--   <a>$sel:spec:MeshData'</a>, <a>meshData_spec</a> - The associated
--   specification for the service mesh.
--   
--   <a>$sel:status:MeshData'</a>, <a>meshData_status</a> - The status of
--   the service mesh.
newMeshData :: Text -> ResourceMetadata -> MeshSpec -> MeshStatus -> MeshData

-- | The name of the service mesh.
meshData_meshName :: Lens' MeshData Text

-- | The associated metadata for the service mesh.
meshData_metadata :: Lens' MeshData ResourceMetadata

-- | The associated specification for the service mesh.
meshData_spec :: Lens' MeshData MeshSpec

-- | The status of the service mesh.
meshData_status :: Lens' MeshData MeshStatus
instance GHC.Generics.Generic Amazonka.AppMesh.Types.MeshData.MeshData
instance GHC.Show.Show Amazonka.AppMesh.Types.MeshData.MeshData
instance GHC.Read.Read Amazonka.AppMesh.Types.MeshData.MeshData
instance GHC.Classes.Eq Amazonka.AppMesh.Types.MeshData.MeshData
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.MeshData.MeshData
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.MeshData.MeshData
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.MeshData.MeshData


module Amazonka.AppMesh.Types.GatewayRouteData

-- | An object that represents a gateway route returned by a describe
--   operation.
--   
--   <i>See:</i> <a>newGatewayRouteData</a> smart constructor.
data GatewayRouteData
GatewayRouteData' :: Text -> Text -> ResourceMetadata -> GatewayRouteSpec -> GatewayRouteStatus -> Text -> GatewayRouteData

-- | The name of the gateway route.
[$sel:gatewayRouteName:GatewayRouteData'] :: GatewayRouteData -> Text

-- | The name of the service mesh that the resource resides in.
[$sel:meshName:GatewayRouteData'] :: GatewayRouteData -> Text
[$sel:metadata:GatewayRouteData'] :: GatewayRouteData -> ResourceMetadata

-- | The specifications of the gateway route.
[$sel:spec:GatewayRouteData'] :: GatewayRouteData -> GatewayRouteSpec

-- | The status of the gateway route.
[$sel:status:GatewayRouteData'] :: GatewayRouteData -> GatewayRouteStatus

-- | The virtual gateway that the gateway route is associated with.
[$sel:virtualGatewayName:GatewayRouteData'] :: GatewayRouteData -> Text

-- | Create a value of <a>GatewayRouteData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gatewayRouteName:GatewayRouteData'</a>,
--   <a>gatewayRouteData_gatewayRouteName</a> - The name of the gateway
--   route.
--   
--   <a>$sel:meshName:GatewayRouteData'</a>,
--   <a>gatewayRouteData_meshName</a> - The name of the service mesh that
--   the resource resides in.
--   
--   <a>$sel:metadata:GatewayRouteData'</a>,
--   <a>gatewayRouteData_metadata</a> - Undocumented member.
--   
--   <a>$sel:spec:GatewayRouteData'</a>, <a>gatewayRouteData_spec</a> - The
--   specifications of the gateway route.
--   
--   <a>$sel:status:GatewayRouteData'</a>, <a>gatewayRouteData_status</a> -
--   The status of the gateway route.
--   
--   <a>$sel:virtualGatewayName:GatewayRouteData'</a>,
--   <a>gatewayRouteData_virtualGatewayName</a> - The virtual gateway that
--   the gateway route is associated with.
newGatewayRouteData :: Text -> Text -> ResourceMetadata -> GatewayRouteSpec -> GatewayRouteStatus -> Text -> GatewayRouteData

-- | The name of the gateway route.
gatewayRouteData_gatewayRouteName :: Lens' GatewayRouteData Text

-- | The name of the service mesh that the resource resides in.
gatewayRouteData_meshName :: Lens' GatewayRouteData Text

-- | Undocumented member.
gatewayRouteData_metadata :: Lens' GatewayRouteData ResourceMetadata

-- | The specifications of the gateway route.
gatewayRouteData_spec :: Lens' GatewayRouteData GatewayRouteSpec

-- | The status of the gateway route.
gatewayRouteData_status :: Lens' GatewayRouteData GatewayRouteStatus

-- | The virtual gateway that the gateway route is associated with.
gatewayRouteData_virtualGatewayName :: Lens' GatewayRouteData Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GatewayRouteData.GatewayRouteData
instance GHC.Show.Show Amazonka.AppMesh.Types.GatewayRouteData.GatewayRouteData
instance GHC.Read.Read Amazonka.AppMesh.Types.GatewayRouteData.GatewayRouteData
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GatewayRouteData.GatewayRouteData
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GatewayRouteData.GatewayRouteData
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GatewayRouteData.GatewayRouteData
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GatewayRouteData.GatewayRouteData


module Amazonka.AppMesh.Types.RouteRef

-- | An object that represents a route returned by a list operation.
--   
--   <i>See:</i> <a>newRouteRef</a> smart constructor.
data RouteRef
RouteRef' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Text -> Integer -> Text -> RouteRef

-- | The full Amazon Resource Name (ARN) for the route.
[$sel:arn:RouteRef'] :: RouteRef -> Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:RouteRef'] :: RouteRef -> POSIX

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
[$sel:lastUpdatedAt:RouteRef'] :: RouteRef -> POSIX

-- | The name of the service mesh that the route resides in.
[$sel:meshName:RouteRef'] :: RouteRef -> Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:RouteRef'] :: RouteRef -> Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
[$sel:resourceOwner:RouteRef'] :: RouteRef -> Text

-- | The name of the route.
[$sel:routeName:RouteRef'] :: RouteRef -> Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
[$sel:version:RouteRef'] :: RouteRef -> Integer

-- | The virtual router that the route is associated with.
[$sel:virtualRouterName:RouteRef'] :: RouteRef -> Text

-- | Create a value of <a>RouteRef</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:RouteRef'</a>, <a>routeRef_arn</a> - The full Amazon
--   Resource Name (ARN) for the route.
--   
--   <a>$sel:createdAt:RouteRef'</a>, <a>routeRef_createdAt</a> - The Unix
--   epoch timestamp in seconds for when the resource was created.
--   
--   <a>$sel:lastUpdatedAt:RouteRef'</a>, <a>routeRef_lastUpdatedAt</a> -
--   The Unix epoch timestamp in seconds for when the resource was last
--   updated.
--   
--   <a>$sel:meshName:RouteRef'</a>, <a>routeRef_meshName</a> - The name of
--   the service mesh that the route resides in.
--   
--   <a>$sel:meshOwner:RouteRef'</a>, <a>routeRef_meshOwner</a> - The AWS
--   IAM account ID of the service mesh owner. If the account ID is not
--   your own, then it's the ID of the account that shared the mesh with
--   your account. For more information about mesh sharing, see <a>Working
--   with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:RouteRef'</a>, <a>routeRef_resourceOwner</a> -
--   The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
--   
--   <a>$sel:routeName:RouteRef'</a>, <a>routeRef_routeName</a> - The name
--   of the route.
--   
--   <a>$sel:version:RouteRef'</a>, <a>routeRef_version</a> - The version
--   of the resource. Resources are created at version 1, and this version
--   is incremented each time that they're updated.
--   
--   <a>$sel:virtualRouterName:RouteRef'</a>,
--   <a>routeRef_virtualRouterName</a> - The virtual router that the route
--   is associated with.
newRouteRef :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Text -> Integer -> Text -> RouteRef

-- | The full Amazon Resource Name (ARN) for the route.
routeRef_arn :: Lens' RouteRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
routeRef_createdAt :: Lens' RouteRef UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
routeRef_lastUpdatedAt :: Lens' RouteRef UTCTime

-- | The name of the service mesh that the route resides in.
routeRef_meshName :: Lens' RouteRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
routeRef_meshOwner :: Lens' RouteRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
routeRef_resourceOwner :: Lens' RouteRef Text

-- | The name of the route.
routeRef_routeName :: Lens' RouteRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
routeRef_version :: Lens' RouteRef Integer

-- | The virtual router that the route is associated with.
routeRef_virtualRouterName :: Lens' RouteRef Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.RouteRef.RouteRef
instance GHC.Show.Show Amazonka.AppMesh.Types.RouteRef.RouteRef
instance GHC.Read.Read Amazonka.AppMesh.Types.RouteRef.RouteRef
instance GHC.Classes.Eq Amazonka.AppMesh.Types.RouteRef.RouteRef
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.RouteRef.RouteRef
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.RouteRef.RouteRef
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.RouteRef.RouteRef


module Amazonka.AppMesh.Types.RouteStatusCode
newtype RouteStatusCode
RouteStatusCode' :: Text -> RouteStatusCode
[fromRouteStatusCode] :: RouteStatusCode -> Text
pattern RouteStatusCode_ACTIVE :: RouteStatusCode
pattern RouteStatusCode_DELETED :: RouteStatusCode
pattern RouteStatusCode_INACTIVE :: RouteStatusCode
instance Amazonka.Data.XML.ToXML Amazonka.AppMesh.Types.RouteStatusCode.RouteStatusCode
instance Amazonka.Data.XML.FromXML Amazonka.AppMesh.Types.RouteStatusCode.RouteStatusCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppMesh.Types.RouteStatusCode.RouteStatusCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.RouteStatusCode.RouteStatusCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppMesh.Types.RouteStatusCode.RouteStatusCode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.RouteStatusCode.RouteStatusCode
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.Types.RouteStatusCode.RouteStatusCode
instance Amazonka.Data.Headers.ToHeader Amazonka.AppMesh.Types.RouteStatusCode.RouteStatusCode
instance Amazonka.Data.Log.ToLog Amazonka.AppMesh.Types.RouteStatusCode.RouteStatusCode
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppMesh.Types.RouteStatusCode.RouteStatusCode
instance Amazonka.Data.Text.ToText Amazonka.AppMesh.Types.RouteStatusCode.RouteStatusCode
instance Amazonka.Data.Text.FromText Amazonka.AppMesh.Types.RouteStatusCode.RouteStatusCode
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.RouteStatusCode.RouteStatusCode
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.RouteStatusCode.RouteStatusCode
instance GHC.Generics.Generic Amazonka.AppMesh.Types.RouteStatusCode.RouteStatusCode
instance GHC.Classes.Ord Amazonka.AppMesh.Types.RouteStatusCode.RouteStatusCode
instance GHC.Classes.Eq Amazonka.AppMesh.Types.RouteStatusCode.RouteStatusCode
instance GHC.Read.Read Amazonka.AppMesh.Types.RouteStatusCode.RouteStatusCode
instance GHC.Show.Show Amazonka.AppMesh.Types.RouteStatusCode.RouteStatusCode


module Amazonka.AppMesh.Types.RouteStatus

-- | An object that represents the current status of a route.
--   
--   <i>See:</i> <a>newRouteStatus</a> smart constructor.
data RouteStatus
RouteStatus' :: RouteStatusCode -> RouteStatus

-- | The current status for the route.
[$sel:status:RouteStatus'] :: RouteStatus -> RouteStatusCode

-- | Create a value of <a>RouteStatus</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:RouteStatus'</a>, <a>routeStatus_status</a> - The
--   current status for the route.
newRouteStatus :: RouteStatusCode -> RouteStatus

-- | The current status for the route.
routeStatus_status :: Lens' RouteStatus RouteStatusCode
instance GHC.Generics.Generic Amazonka.AppMesh.Types.RouteStatus.RouteStatus
instance GHC.Show.Show Amazonka.AppMesh.Types.RouteStatus.RouteStatus
instance GHC.Read.Read Amazonka.AppMesh.Types.RouteStatus.RouteStatus
instance GHC.Classes.Eq Amazonka.AppMesh.Types.RouteStatus.RouteStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.RouteStatus.RouteStatus
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.RouteStatus.RouteStatus
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.RouteStatus.RouteStatus


module Amazonka.AppMesh.Types.ServiceDiscovery

-- | An object that represents the service discovery information for a
--   virtual node.
--   
--   <i>See:</i> <a>newServiceDiscovery</a> smart constructor.
data ServiceDiscovery
ServiceDiscovery' :: Maybe AwsCloudMapServiceDiscovery -> Maybe DnsServiceDiscovery -> ServiceDiscovery

-- | Specifies any Cloud Map information for the virtual node.
[$sel:awsCloudMap:ServiceDiscovery'] :: ServiceDiscovery -> Maybe AwsCloudMapServiceDiscovery

-- | Specifies the DNS information for the virtual node.
[$sel:dns:ServiceDiscovery'] :: ServiceDiscovery -> Maybe DnsServiceDiscovery

-- | Create a value of <a>ServiceDiscovery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:awsCloudMap:ServiceDiscovery'</a>,
--   <a>serviceDiscovery_awsCloudMap</a> - Specifies any Cloud Map
--   information for the virtual node.
--   
--   <a>$sel:dns:ServiceDiscovery'</a>, <a>serviceDiscovery_dns</a> -
--   Specifies the DNS information for the virtual node.
newServiceDiscovery :: ServiceDiscovery

-- | Specifies any Cloud Map information for the virtual node.
serviceDiscovery_awsCloudMap :: Lens' ServiceDiscovery (Maybe AwsCloudMapServiceDiscovery)

-- | Specifies the DNS information for the virtual node.
serviceDiscovery_dns :: Lens' ServiceDiscovery (Maybe DnsServiceDiscovery)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.ServiceDiscovery.ServiceDiscovery
instance GHC.Show.Show Amazonka.AppMesh.Types.ServiceDiscovery.ServiceDiscovery
instance GHC.Read.Read Amazonka.AppMesh.Types.ServiceDiscovery.ServiceDiscovery
instance GHC.Classes.Eq Amazonka.AppMesh.Types.ServiceDiscovery.ServiceDiscovery
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.ServiceDiscovery.ServiceDiscovery
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.ServiceDiscovery.ServiceDiscovery
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.ServiceDiscovery.ServiceDiscovery
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.ServiceDiscovery.ServiceDiscovery


module Amazonka.AppMesh.Types.SubjectAlternativeNameMatchers

-- | An object that represents the methods by which a subject alternative
--   name on a peer Transport Layer Security (TLS) certificate can be
--   matched.
--   
--   <i>See:</i> <a>newSubjectAlternativeNameMatchers</a> smart
--   constructor.
data SubjectAlternativeNameMatchers
SubjectAlternativeNameMatchers' :: [Text] -> SubjectAlternativeNameMatchers

-- | The values sent must match the specified values exactly.
[$sel:exact:SubjectAlternativeNameMatchers'] :: SubjectAlternativeNameMatchers -> [Text]

-- | Create a value of <a>SubjectAlternativeNameMatchers</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exact:SubjectAlternativeNameMatchers'</a>,
--   <a>subjectAlternativeNameMatchers_exact</a> - The values sent must
--   match the specified values exactly.
newSubjectAlternativeNameMatchers :: SubjectAlternativeNameMatchers

-- | The values sent must match the specified values exactly.
subjectAlternativeNameMatchers_exact :: Lens' SubjectAlternativeNameMatchers [Text]
instance GHC.Generics.Generic Amazonka.AppMesh.Types.SubjectAlternativeNameMatchers.SubjectAlternativeNameMatchers
instance GHC.Show.Show Amazonka.AppMesh.Types.SubjectAlternativeNameMatchers.SubjectAlternativeNameMatchers
instance GHC.Read.Read Amazonka.AppMesh.Types.SubjectAlternativeNameMatchers.SubjectAlternativeNameMatchers
instance GHC.Classes.Eq Amazonka.AppMesh.Types.SubjectAlternativeNameMatchers.SubjectAlternativeNameMatchers
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.SubjectAlternativeNameMatchers.SubjectAlternativeNameMatchers
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.SubjectAlternativeNameMatchers.SubjectAlternativeNameMatchers
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.SubjectAlternativeNameMatchers.SubjectAlternativeNameMatchers
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.SubjectAlternativeNameMatchers.SubjectAlternativeNameMatchers


module Amazonka.AppMesh.Types.SubjectAlternativeNames

-- | An object that represents the subject alternative names secured by the
--   certificate.
--   
--   <i>See:</i> <a>newSubjectAlternativeNames</a> smart constructor.
data SubjectAlternativeNames
SubjectAlternativeNames' :: SubjectAlternativeNameMatchers -> SubjectAlternativeNames

-- | An object that represents the criteria for determining a SANs match.
[$sel:match:SubjectAlternativeNames'] :: SubjectAlternativeNames -> SubjectAlternativeNameMatchers

-- | Create a value of <a>SubjectAlternativeNames</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:match:SubjectAlternativeNames'</a>,
--   <a>subjectAlternativeNames_match</a> - An object that represents the
--   criteria for determining a SANs match.
newSubjectAlternativeNames :: SubjectAlternativeNameMatchers -> SubjectAlternativeNames

-- | An object that represents the criteria for determining a SANs match.
subjectAlternativeNames_match :: Lens' SubjectAlternativeNames SubjectAlternativeNameMatchers
instance GHC.Generics.Generic Amazonka.AppMesh.Types.SubjectAlternativeNames.SubjectAlternativeNames
instance GHC.Show.Show Amazonka.AppMesh.Types.SubjectAlternativeNames.SubjectAlternativeNames
instance GHC.Read.Read Amazonka.AppMesh.Types.SubjectAlternativeNames.SubjectAlternativeNames
instance GHC.Classes.Eq Amazonka.AppMesh.Types.SubjectAlternativeNames.SubjectAlternativeNames
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.SubjectAlternativeNames.SubjectAlternativeNames
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.SubjectAlternativeNames.SubjectAlternativeNames
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.SubjectAlternativeNames.SubjectAlternativeNames
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.SubjectAlternativeNames.SubjectAlternativeNames


module Amazonka.AppMesh.Types.TagRef

-- | Optional metadata that you apply to a resource to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Tag keys can have a maximum
--   character length of 128 characters, and tag values can have a maximum
--   length of 256 characters.
--   
--   <i>See:</i> <a>newTagRef</a> smart constructor.
data TagRef
TagRef' :: Text -> Text -> TagRef

-- | One part of a key-value pair that make up a tag. A <tt>key</tt> is a
--   general label that acts like a category for more specific tag values.
[$sel:key:TagRef'] :: TagRef -> Text

-- | The optional part of a key-value pair that make up a tag. A
--   <tt>value</tt> acts as a descriptor within a tag category (key).
[$sel:value:TagRef'] :: TagRef -> Text

-- | Create a value of <a>TagRef</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:TagRef'</a>, <a>tagRef_key</a> - One part of a key-value
--   pair that make up a tag. A <tt>key</tt> is a general label that acts
--   like a category for more specific tag values.
--   
--   <a>$sel:value:TagRef'</a>, <a>tagRef_value</a> - The optional part of
--   a key-value pair that make up a tag. A <tt>value</tt> acts as a
--   descriptor within a tag category (key).
newTagRef :: Text -> Text -> TagRef

-- | One part of a key-value pair that make up a tag. A <tt>key</tt> is a
--   general label that acts like a category for more specific tag values.
tagRef_key :: Lens' TagRef Text

-- | The optional part of a key-value pair that make up a tag. A
--   <tt>value</tt> acts as a descriptor within a tag category (key).
tagRef_value :: Lens' TagRef Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.TagRef.TagRef
instance GHC.Show.Show Amazonka.AppMesh.Types.TagRef.TagRef
instance GHC.Read.Read Amazonka.AppMesh.Types.TagRef.TagRef
instance GHC.Classes.Eq Amazonka.AppMesh.Types.TagRef.TagRef
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.TagRef.TagRef
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.TagRef.TagRef
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.TagRef.TagRef
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.TagRef.TagRef


module Amazonka.AppMesh.Types.TcpRetryPolicyEvent
newtype TcpRetryPolicyEvent
TcpRetryPolicyEvent' :: Text -> TcpRetryPolicyEvent
[fromTcpRetryPolicyEvent] :: TcpRetryPolicyEvent -> Text
pattern TcpRetryPolicyEvent_Connection_error :: TcpRetryPolicyEvent
instance Amazonka.Data.XML.ToXML Amazonka.AppMesh.Types.TcpRetryPolicyEvent.TcpRetryPolicyEvent
instance Amazonka.Data.XML.FromXML Amazonka.AppMesh.Types.TcpRetryPolicyEvent.TcpRetryPolicyEvent
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppMesh.Types.TcpRetryPolicyEvent.TcpRetryPolicyEvent
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.TcpRetryPolicyEvent.TcpRetryPolicyEvent
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppMesh.Types.TcpRetryPolicyEvent.TcpRetryPolicyEvent
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.TcpRetryPolicyEvent.TcpRetryPolicyEvent
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.Types.TcpRetryPolicyEvent.TcpRetryPolicyEvent
instance Amazonka.Data.Headers.ToHeader Amazonka.AppMesh.Types.TcpRetryPolicyEvent.TcpRetryPolicyEvent
instance Amazonka.Data.Log.ToLog Amazonka.AppMesh.Types.TcpRetryPolicyEvent.TcpRetryPolicyEvent
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppMesh.Types.TcpRetryPolicyEvent.TcpRetryPolicyEvent
instance Amazonka.Data.Text.ToText Amazonka.AppMesh.Types.TcpRetryPolicyEvent.TcpRetryPolicyEvent
instance Amazonka.Data.Text.FromText Amazonka.AppMesh.Types.TcpRetryPolicyEvent.TcpRetryPolicyEvent
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.TcpRetryPolicyEvent.TcpRetryPolicyEvent
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.TcpRetryPolicyEvent.TcpRetryPolicyEvent
instance GHC.Generics.Generic Amazonka.AppMesh.Types.TcpRetryPolicyEvent.TcpRetryPolicyEvent
instance GHC.Classes.Ord Amazonka.AppMesh.Types.TcpRetryPolicyEvent.TcpRetryPolicyEvent
instance GHC.Classes.Eq Amazonka.AppMesh.Types.TcpRetryPolicyEvent.TcpRetryPolicyEvent
instance GHC.Read.Read Amazonka.AppMesh.Types.TcpRetryPolicyEvent.TcpRetryPolicyEvent
instance GHC.Show.Show Amazonka.AppMesh.Types.TcpRetryPolicyEvent.TcpRetryPolicyEvent


module Amazonka.AppMesh.Types.HttpRetryPolicy

-- | An object that represents a retry policy. Specify at least one value
--   for at least one of the types of <tt>RetryEvents</tt>, a value for
--   <tt>maxRetries</tt>, and a value for <tt>perRetryTimeout</tt>. Both
--   <tt>server-error</tt> and <tt>gateway-error</tt> under
--   <tt>httpRetryEvents</tt> include the Envoy <tt>reset</tt> policy. For
--   more information on the <tt>reset</tt> policy, see the <a>Envoy
--   documentation</a>.
--   
--   <i>See:</i> <a>newHttpRetryPolicy</a> smart constructor.
data HttpRetryPolicy
HttpRetryPolicy' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty TcpRetryPolicyEvent) -> Natural -> Duration -> HttpRetryPolicy

-- | Specify at least one of the following values.
--   
--   <ul>
--   <li><b>server-error</b> – HTTP status codes 500, 501, 502, 503, 504,
--   505, 506, 507, 508, 510, and 511</li>
--   <li><b>gateway-error</b> – HTTP status codes 502, 503, and 504</li>
--   <li><b>client-error</b> – HTTP status code 409</li>
--   <li><b>stream-error</b> – Retry on refused stream</li>
--   </ul>
[$sel:httpRetryEvents:HttpRetryPolicy'] :: HttpRetryPolicy -> Maybe (NonEmpty Text)

-- | Specify a valid value. The event occurs before any processing of a
--   request has started and is encountered when the upstream is
--   temporarily or permanently unavailable.
[$sel:tcpRetryEvents:HttpRetryPolicy'] :: HttpRetryPolicy -> Maybe (NonEmpty TcpRetryPolicyEvent)

-- | The maximum number of retry attempts.
[$sel:maxRetries:HttpRetryPolicy'] :: HttpRetryPolicy -> Natural

-- | The timeout for each retry attempt.
[$sel:perRetryTimeout:HttpRetryPolicy'] :: HttpRetryPolicy -> Duration

-- | Create a value of <a>HttpRetryPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpRetryEvents:HttpRetryPolicy'</a>,
--   <a>httpRetryPolicy_httpRetryEvents</a> - Specify at least one of the
--   following values.
--   
--   <ul>
--   <li><b>server-error</b> – HTTP status codes 500, 501, 502, 503, 504,
--   505, 506, 507, 508, 510, and 511</li>
--   <li><b>gateway-error</b> – HTTP status codes 502, 503, and 504</li>
--   <li><b>client-error</b> – HTTP status code 409</li>
--   <li><b>stream-error</b> – Retry on refused stream</li>
--   </ul>
--   
--   <a>$sel:tcpRetryEvents:HttpRetryPolicy'</a>,
--   <a>httpRetryPolicy_tcpRetryEvents</a> - Specify a valid value. The
--   event occurs before any processing of a request has started and is
--   encountered when the upstream is temporarily or permanently
--   unavailable.
--   
--   <a>$sel:maxRetries:HttpRetryPolicy'</a>,
--   <a>httpRetryPolicy_maxRetries</a> - The maximum number of retry
--   attempts.
--   
--   <a>$sel:perRetryTimeout:HttpRetryPolicy'</a>,
--   <a>httpRetryPolicy_perRetryTimeout</a> - The timeout for each retry
--   attempt.
newHttpRetryPolicy :: Natural -> Duration -> HttpRetryPolicy

-- | Specify at least one of the following values.
--   
--   <ul>
--   <li><b>server-error</b> – HTTP status codes 500, 501, 502, 503, 504,
--   505, 506, 507, 508, 510, and 511</li>
--   <li><b>gateway-error</b> – HTTP status codes 502, 503, and 504</li>
--   <li><b>client-error</b> – HTTP status code 409</li>
--   <li><b>stream-error</b> – Retry on refused stream</li>
--   </ul>
httpRetryPolicy_httpRetryEvents :: Lens' HttpRetryPolicy (Maybe (NonEmpty Text))

-- | Specify a valid value. The event occurs before any processing of a
--   request has started and is encountered when the upstream is
--   temporarily or permanently unavailable.
httpRetryPolicy_tcpRetryEvents :: Lens' HttpRetryPolicy (Maybe (NonEmpty TcpRetryPolicyEvent))

-- | The maximum number of retry attempts.
httpRetryPolicy_maxRetries :: Lens' HttpRetryPolicy Natural

-- | The timeout for each retry attempt.
httpRetryPolicy_perRetryTimeout :: Lens' HttpRetryPolicy Duration
instance GHC.Generics.Generic Amazonka.AppMesh.Types.HttpRetryPolicy.HttpRetryPolicy
instance GHC.Show.Show Amazonka.AppMesh.Types.HttpRetryPolicy.HttpRetryPolicy
instance GHC.Read.Read Amazonka.AppMesh.Types.HttpRetryPolicy.HttpRetryPolicy
instance GHC.Classes.Eq Amazonka.AppMesh.Types.HttpRetryPolicy.HttpRetryPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.HttpRetryPolicy.HttpRetryPolicy
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.HttpRetryPolicy.HttpRetryPolicy
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.HttpRetryPolicy.HttpRetryPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.HttpRetryPolicy.HttpRetryPolicy


module Amazonka.AppMesh.Types.GrpcRetryPolicy

-- | An object that represents a retry policy. Specify at least one value
--   for at least one of the types of <tt>RetryEvents</tt>, a value for
--   <tt>maxRetries</tt>, and a value for <tt>perRetryTimeout</tt>. Both
--   <tt>server-error</tt> and <tt>gateway-error</tt> under
--   <tt>httpRetryEvents</tt> include the Envoy <tt>reset</tt> policy. For
--   more information on the <tt>reset</tt> policy, see the <a>Envoy
--   documentation</a>.
--   
--   <i>See:</i> <a>newGrpcRetryPolicy</a> smart constructor.
data GrpcRetryPolicy
GrpcRetryPolicy' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty GrpcRetryPolicyEvent) -> Maybe (NonEmpty TcpRetryPolicyEvent) -> Natural -> Duration -> GrpcRetryPolicy

-- | Specify at least one of the following values.
--   
--   <ul>
--   <li><b>server-error</b> – HTTP status codes 500, 501, 502, 503, 504,
--   505, 506, 507, 508, 510, and 511</li>
--   <li><b>gateway-error</b> – HTTP status codes 502, 503, and 504</li>
--   <li><b>client-error</b> – HTTP status code 409</li>
--   <li><b>stream-error</b> – Retry on refused stream</li>
--   </ul>
[$sel:httpRetryEvents:GrpcRetryPolicy'] :: GrpcRetryPolicy -> Maybe (NonEmpty Text)

-- | Specify at least one of the valid values.
[$sel:grpcRetryEvents:GrpcRetryPolicy'] :: GrpcRetryPolicy -> Maybe (NonEmpty GrpcRetryPolicyEvent)

-- | Specify a valid value. The event occurs before any processing of a
--   request has started and is encountered when the upstream is
--   temporarily or permanently unavailable.
[$sel:tcpRetryEvents:GrpcRetryPolicy'] :: GrpcRetryPolicy -> Maybe (NonEmpty TcpRetryPolicyEvent)

-- | The maximum number of retry attempts.
[$sel:maxRetries:GrpcRetryPolicy'] :: GrpcRetryPolicy -> Natural

-- | The timeout for each retry attempt.
[$sel:perRetryTimeout:GrpcRetryPolicy'] :: GrpcRetryPolicy -> Duration

-- | Create a value of <a>GrpcRetryPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpRetryEvents:GrpcRetryPolicy'</a>,
--   <a>grpcRetryPolicy_httpRetryEvents</a> - Specify at least one of the
--   following values.
--   
--   <ul>
--   <li><b>server-error</b> – HTTP status codes 500, 501, 502, 503, 504,
--   505, 506, 507, 508, 510, and 511</li>
--   <li><b>gateway-error</b> – HTTP status codes 502, 503, and 504</li>
--   <li><b>client-error</b> – HTTP status code 409</li>
--   <li><b>stream-error</b> – Retry on refused stream</li>
--   </ul>
--   
--   <a>$sel:grpcRetryEvents:GrpcRetryPolicy'</a>,
--   <a>grpcRetryPolicy_grpcRetryEvents</a> - Specify at least one of the
--   valid values.
--   
--   <a>$sel:tcpRetryEvents:GrpcRetryPolicy'</a>,
--   <a>grpcRetryPolicy_tcpRetryEvents</a> - Specify a valid value. The
--   event occurs before any processing of a request has started and is
--   encountered when the upstream is temporarily or permanently
--   unavailable.
--   
--   <a>$sel:maxRetries:GrpcRetryPolicy'</a>,
--   <a>grpcRetryPolicy_maxRetries</a> - The maximum number of retry
--   attempts.
--   
--   <a>$sel:perRetryTimeout:GrpcRetryPolicy'</a>,
--   <a>grpcRetryPolicy_perRetryTimeout</a> - The timeout for each retry
--   attempt.
newGrpcRetryPolicy :: Natural -> Duration -> GrpcRetryPolicy

-- | Specify at least one of the following values.
--   
--   <ul>
--   <li><b>server-error</b> – HTTP status codes 500, 501, 502, 503, 504,
--   505, 506, 507, 508, 510, and 511</li>
--   <li><b>gateway-error</b> – HTTP status codes 502, 503, and 504</li>
--   <li><b>client-error</b> – HTTP status code 409</li>
--   <li><b>stream-error</b> – Retry on refused stream</li>
--   </ul>
grpcRetryPolicy_httpRetryEvents :: Lens' GrpcRetryPolicy (Maybe (NonEmpty Text))

-- | Specify at least one of the valid values.
grpcRetryPolicy_grpcRetryEvents :: Lens' GrpcRetryPolicy (Maybe (NonEmpty GrpcRetryPolicyEvent))

-- | Specify a valid value. The event occurs before any processing of a
--   request has started and is encountered when the upstream is
--   temporarily or permanently unavailable.
grpcRetryPolicy_tcpRetryEvents :: Lens' GrpcRetryPolicy (Maybe (NonEmpty TcpRetryPolicyEvent))

-- | The maximum number of retry attempts.
grpcRetryPolicy_maxRetries :: Lens' GrpcRetryPolicy Natural

-- | The timeout for each retry attempt.
grpcRetryPolicy_perRetryTimeout :: Lens' GrpcRetryPolicy Duration
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GrpcRetryPolicy.GrpcRetryPolicy
instance GHC.Show.Show Amazonka.AppMesh.Types.GrpcRetryPolicy.GrpcRetryPolicy
instance GHC.Read.Read Amazonka.AppMesh.Types.GrpcRetryPolicy.GrpcRetryPolicy
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GrpcRetryPolicy.GrpcRetryPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GrpcRetryPolicy.GrpcRetryPolicy
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GrpcRetryPolicy.GrpcRetryPolicy
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GrpcRetryPolicy.GrpcRetryPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.GrpcRetryPolicy.GrpcRetryPolicy


module Amazonka.AppMesh.Types.TcpTimeout

-- | An object that represents types of timeouts.
--   
--   <i>See:</i> <a>newTcpTimeout</a> smart constructor.
data TcpTimeout
TcpTimeout' :: Maybe Duration -> TcpTimeout

-- | An object that represents an idle timeout. An idle timeout bounds the
--   amount of time that a connection may be idle. The default value is
--   none.
[$sel:idle:TcpTimeout'] :: TcpTimeout -> Maybe Duration

-- | Create a value of <a>TcpTimeout</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idle:TcpTimeout'</a>, <a>tcpTimeout_idle</a> - An object that
--   represents an idle timeout. An idle timeout bounds the amount of time
--   that a connection may be idle. The default value is none.
newTcpTimeout :: TcpTimeout

-- | An object that represents an idle timeout. An idle timeout bounds the
--   amount of time that a connection may be idle. The default value is
--   none.
tcpTimeout_idle :: Lens' TcpTimeout (Maybe Duration)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.TcpTimeout.TcpTimeout
instance GHC.Show.Show Amazonka.AppMesh.Types.TcpTimeout.TcpTimeout
instance GHC.Read.Read Amazonka.AppMesh.Types.TcpTimeout.TcpTimeout
instance GHC.Classes.Eq Amazonka.AppMesh.Types.TcpTimeout.TcpTimeout
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.TcpTimeout.TcpTimeout
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.TcpTimeout.TcpTimeout
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.TcpTimeout.TcpTimeout
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.TcpTimeout.TcpTimeout


module Amazonka.AppMesh.Types.ListenerTimeout

-- | An object that represents timeouts for different protocols.
--   
--   <i>See:</i> <a>newListenerTimeout</a> smart constructor.
data ListenerTimeout
ListenerTimeout' :: Maybe HttpTimeout -> Maybe GrpcTimeout -> Maybe TcpTimeout -> Maybe HttpTimeout -> ListenerTimeout

-- | An object that represents types of timeouts.
[$sel:http2:ListenerTimeout'] :: ListenerTimeout -> Maybe HttpTimeout

-- | An object that represents types of timeouts.
[$sel:grpc:ListenerTimeout'] :: ListenerTimeout -> Maybe GrpcTimeout

-- | An object that represents types of timeouts.
[$sel:tcp:ListenerTimeout'] :: ListenerTimeout -> Maybe TcpTimeout

-- | An object that represents types of timeouts.
[$sel:http:ListenerTimeout'] :: ListenerTimeout -> Maybe HttpTimeout

-- | Create a value of <a>ListenerTimeout</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:http2:ListenerTimeout'</a>, <a>listenerTimeout_http2</a> - An
--   object that represents types of timeouts.
--   
--   <a>$sel:grpc:ListenerTimeout'</a>, <a>listenerTimeout_grpc</a> - An
--   object that represents types of timeouts.
--   
--   <a>$sel:tcp:ListenerTimeout'</a>, <a>listenerTimeout_tcp</a> - An
--   object that represents types of timeouts.
--   
--   <a>$sel:http:ListenerTimeout'</a>, <a>listenerTimeout_http</a> - An
--   object that represents types of timeouts.
newListenerTimeout :: ListenerTimeout

-- | An object that represents types of timeouts.
listenerTimeout_http2 :: Lens' ListenerTimeout (Maybe HttpTimeout)

-- | An object that represents types of timeouts.
listenerTimeout_grpc :: Lens' ListenerTimeout (Maybe GrpcTimeout)

-- | An object that represents types of timeouts.
listenerTimeout_tcp :: Lens' ListenerTimeout (Maybe TcpTimeout)

-- | An object that represents types of timeouts.
listenerTimeout_http :: Lens' ListenerTimeout (Maybe HttpTimeout)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.ListenerTimeout.ListenerTimeout
instance GHC.Show.Show Amazonka.AppMesh.Types.ListenerTimeout.ListenerTimeout
instance GHC.Read.Read Amazonka.AppMesh.Types.ListenerTimeout.ListenerTimeout
instance GHC.Classes.Eq Amazonka.AppMesh.Types.ListenerTimeout.ListenerTimeout
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.ListenerTimeout.ListenerTimeout
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.ListenerTimeout.ListenerTimeout
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.ListenerTimeout.ListenerTimeout
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.ListenerTimeout.ListenerTimeout


module Amazonka.AppMesh.Types.TlsValidationContextAcmTrust

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for an Certificate Manager certificate.
--   
--   <i>See:</i> <a>newTlsValidationContextAcmTrust</a> smart constructor.
data TlsValidationContextAcmTrust
TlsValidationContextAcmTrust' :: NonEmpty Text -> TlsValidationContextAcmTrust

-- | One or more ACM Amazon Resource Name (ARN)s.
[$sel:certificateAuthorityArns:TlsValidationContextAcmTrust'] :: TlsValidationContextAcmTrust -> NonEmpty Text

-- | Create a value of <a>TlsValidationContextAcmTrust</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityArns:TlsValidationContextAcmTrust'</a>,
--   <a>tlsValidationContextAcmTrust_certificateAuthorityArns</a> - One or
--   more ACM Amazon Resource Name (ARN)s.
newTlsValidationContextAcmTrust :: NonEmpty Text -> TlsValidationContextAcmTrust

-- | One or more ACM Amazon Resource Name (ARN)s.
tlsValidationContextAcmTrust_certificateAuthorityArns :: Lens' TlsValidationContextAcmTrust (NonEmpty Text)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.TlsValidationContextAcmTrust.TlsValidationContextAcmTrust
instance GHC.Show.Show Amazonka.AppMesh.Types.TlsValidationContextAcmTrust.TlsValidationContextAcmTrust
instance GHC.Read.Read Amazonka.AppMesh.Types.TlsValidationContextAcmTrust.TlsValidationContextAcmTrust
instance GHC.Classes.Eq Amazonka.AppMesh.Types.TlsValidationContextAcmTrust.TlsValidationContextAcmTrust
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.TlsValidationContextAcmTrust.TlsValidationContextAcmTrust
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.TlsValidationContextAcmTrust.TlsValidationContextAcmTrust
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.TlsValidationContextAcmTrust.TlsValidationContextAcmTrust
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.TlsValidationContextAcmTrust.TlsValidationContextAcmTrust


module Amazonka.AppMesh.Types.TlsValidationContextFileTrust

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
--   
--   <i>See:</i> <a>newTlsValidationContextFileTrust</a> smart constructor.
data TlsValidationContextFileTrust
TlsValidationContextFileTrust' :: Text -> TlsValidationContextFileTrust

-- | The certificate trust chain for a certificate stored on the file
--   system of the virtual node that the proxy is running on.
[$sel:certificateChain:TlsValidationContextFileTrust'] :: TlsValidationContextFileTrust -> Text

-- | Create a value of <a>TlsValidationContextFileTrust</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateChain:TlsValidationContextFileTrust'</a>,
--   <a>tlsValidationContextFileTrust_certificateChain</a> - The
--   certificate trust chain for a certificate stored on the file system of
--   the virtual node that the proxy is running on.
newTlsValidationContextFileTrust :: Text -> TlsValidationContextFileTrust

-- | The certificate trust chain for a certificate stored on the file
--   system of the virtual node that the proxy is running on.
tlsValidationContextFileTrust_certificateChain :: Lens' TlsValidationContextFileTrust Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.TlsValidationContextFileTrust.TlsValidationContextFileTrust
instance GHC.Show.Show Amazonka.AppMesh.Types.TlsValidationContextFileTrust.TlsValidationContextFileTrust
instance GHC.Read.Read Amazonka.AppMesh.Types.TlsValidationContextFileTrust.TlsValidationContextFileTrust
instance GHC.Classes.Eq Amazonka.AppMesh.Types.TlsValidationContextFileTrust.TlsValidationContextFileTrust
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.TlsValidationContextFileTrust.TlsValidationContextFileTrust
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.TlsValidationContextFileTrust.TlsValidationContextFileTrust
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.TlsValidationContextFileTrust.TlsValidationContextFileTrust
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.TlsValidationContextFileTrust.TlsValidationContextFileTrust


module Amazonka.AppMesh.Types.TlsValidationContextSdsTrust

-- | An object that represents a Transport Layer Security (TLS) Secret
--   Discovery Service validation context trust. The proxy must be
--   configured with a local SDS provider via a Unix Domain Socket. See App
--   Mesh <a>TLS documentation</a> for more info.
--   
--   <i>See:</i> <a>newTlsValidationContextSdsTrust</a> smart constructor.
data TlsValidationContextSdsTrust
TlsValidationContextSdsTrust' :: Text -> TlsValidationContextSdsTrust

-- | A reference to an object that represents the name of the secret for a
--   Transport Layer Security (TLS) Secret Discovery Service validation
--   context trust.
[$sel:secretName:TlsValidationContextSdsTrust'] :: TlsValidationContextSdsTrust -> Text

-- | Create a value of <a>TlsValidationContextSdsTrust</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretName:TlsValidationContextSdsTrust'</a>,
--   <a>tlsValidationContextSdsTrust_secretName</a> - A reference to an
--   object that represents the name of the secret for a Transport Layer
--   Security (TLS) Secret Discovery Service validation context trust.
newTlsValidationContextSdsTrust :: Text -> TlsValidationContextSdsTrust

-- | A reference to an object that represents the name of the secret for a
--   Transport Layer Security (TLS) Secret Discovery Service validation
--   context trust.
tlsValidationContextSdsTrust_secretName :: Lens' TlsValidationContextSdsTrust Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.TlsValidationContextSdsTrust.TlsValidationContextSdsTrust
instance GHC.Show.Show Amazonka.AppMesh.Types.TlsValidationContextSdsTrust.TlsValidationContextSdsTrust
instance GHC.Read.Read Amazonka.AppMesh.Types.TlsValidationContextSdsTrust.TlsValidationContextSdsTrust
instance GHC.Classes.Eq Amazonka.AppMesh.Types.TlsValidationContextSdsTrust.TlsValidationContextSdsTrust
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.TlsValidationContextSdsTrust.TlsValidationContextSdsTrust
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.TlsValidationContextSdsTrust.TlsValidationContextSdsTrust
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.TlsValidationContextSdsTrust.TlsValidationContextSdsTrust
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.TlsValidationContextSdsTrust.TlsValidationContextSdsTrust


module Amazonka.AppMesh.Types.ListenerTlsValidationContextTrust

-- | An object that represents a listener's Transport Layer Security (TLS)
--   validation context trust.
--   
--   <i>See:</i> <a>newListenerTlsValidationContextTrust</a> smart
--   constructor.
data ListenerTlsValidationContextTrust
ListenerTlsValidationContextTrust' :: Maybe TlsValidationContextSdsTrust -> Maybe TlsValidationContextFileTrust -> ListenerTlsValidationContextTrust

-- | A reference to an object that represents a listener's Transport Layer
--   Security (TLS) Secret Discovery Service validation context trust.
[$sel:sds:ListenerTlsValidationContextTrust'] :: ListenerTlsValidationContextTrust -> Maybe TlsValidationContextSdsTrust

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
[$sel:file:ListenerTlsValidationContextTrust'] :: ListenerTlsValidationContextTrust -> Maybe TlsValidationContextFileTrust

-- | Create a value of <a>ListenerTlsValidationContextTrust</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sds:ListenerTlsValidationContextTrust'</a>,
--   <a>listenerTlsValidationContextTrust_sds</a> - A reference to an
--   object that represents a listener's Transport Layer Security (TLS)
--   Secret Discovery Service validation context trust.
--   
--   <a>$sel:file:ListenerTlsValidationContextTrust'</a>,
--   <a>listenerTlsValidationContextTrust_file</a> - An object that
--   represents a Transport Layer Security (TLS) validation context trust
--   for a local file.
newListenerTlsValidationContextTrust :: ListenerTlsValidationContextTrust

-- | A reference to an object that represents a listener's Transport Layer
--   Security (TLS) Secret Discovery Service validation context trust.
listenerTlsValidationContextTrust_sds :: Lens' ListenerTlsValidationContextTrust (Maybe TlsValidationContextSdsTrust)

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
listenerTlsValidationContextTrust_file :: Lens' ListenerTlsValidationContextTrust (Maybe TlsValidationContextFileTrust)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.ListenerTlsValidationContextTrust.ListenerTlsValidationContextTrust
instance GHC.Show.Show Amazonka.AppMesh.Types.ListenerTlsValidationContextTrust.ListenerTlsValidationContextTrust
instance GHC.Read.Read Amazonka.AppMesh.Types.ListenerTlsValidationContextTrust.ListenerTlsValidationContextTrust
instance GHC.Classes.Eq Amazonka.AppMesh.Types.ListenerTlsValidationContextTrust.ListenerTlsValidationContextTrust
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.ListenerTlsValidationContextTrust.ListenerTlsValidationContextTrust
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.ListenerTlsValidationContextTrust.ListenerTlsValidationContextTrust
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.ListenerTlsValidationContextTrust.ListenerTlsValidationContextTrust
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.ListenerTlsValidationContextTrust.ListenerTlsValidationContextTrust


module Amazonka.AppMesh.Types.ListenerTlsValidationContext

-- | An object that represents a listener's Transport Layer Security (TLS)
--   validation context.
--   
--   <i>See:</i> <a>newListenerTlsValidationContext</a> smart constructor.
data ListenerTlsValidationContext
ListenerTlsValidationContext' :: Maybe SubjectAlternativeNames -> ListenerTlsValidationContextTrust -> ListenerTlsValidationContext

-- | A reference to an object that represents the SANs for a listener's
--   Transport Layer Security (TLS) validation context.
[$sel:subjectAlternativeNames:ListenerTlsValidationContext'] :: ListenerTlsValidationContext -> Maybe SubjectAlternativeNames

-- | A reference to where to retrieve the trust chain when validating a
--   peer’s Transport Layer Security (TLS) certificate.
[$sel:trust:ListenerTlsValidationContext'] :: ListenerTlsValidationContext -> ListenerTlsValidationContextTrust

-- | Create a value of <a>ListenerTlsValidationContext</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subjectAlternativeNames:ListenerTlsValidationContext'</a>,
--   <a>listenerTlsValidationContext_subjectAlternativeNames</a> - A
--   reference to an object that represents the SANs for a listener's
--   Transport Layer Security (TLS) validation context.
--   
--   <a>$sel:trust:ListenerTlsValidationContext'</a>,
--   <a>listenerTlsValidationContext_trust</a> - A reference to where to
--   retrieve the trust chain when validating a peer’s Transport Layer
--   Security (TLS) certificate.
newListenerTlsValidationContext :: ListenerTlsValidationContextTrust -> ListenerTlsValidationContext

-- | A reference to an object that represents the SANs for a listener's
--   Transport Layer Security (TLS) validation context.
listenerTlsValidationContext_subjectAlternativeNames :: Lens' ListenerTlsValidationContext (Maybe SubjectAlternativeNames)

-- | A reference to where to retrieve the trust chain when validating a
--   peer’s Transport Layer Security (TLS) certificate.
listenerTlsValidationContext_trust :: Lens' ListenerTlsValidationContext ListenerTlsValidationContextTrust
instance GHC.Generics.Generic Amazonka.AppMesh.Types.ListenerTlsValidationContext.ListenerTlsValidationContext
instance GHC.Show.Show Amazonka.AppMesh.Types.ListenerTlsValidationContext.ListenerTlsValidationContext
instance GHC.Read.Read Amazonka.AppMesh.Types.ListenerTlsValidationContext.ListenerTlsValidationContext
instance GHC.Classes.Eq Amazonka.AppMesh.Types.ListenerTlsValidationContext.ListenerTlsValidationContext
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.ListenerTlsValidationContext.ListenerTlsValidationContext
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.ListenerTlsValidationContext.ListenerTlsValidationContext
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.ListenerTlsValidationContext.ListenerTlsValidationContext
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.ListenerTlsValidationContext.ListenerTlsValidationContext


module Amazonka.AppMesh.Types.ListenerTls

-- | An object that represents the Transport Layer Security (TLS)
--   properties for a listener.
--   
--   <i>See:</i> <a>newListenerTls</a> smart constructor.
data ListenerTls
ListenerTls' :: Maybe ListenerTlsValidationContext -> ListenerTlsCertificate -> ListenerTlsMode -> ListenerTls

-- | A reference to an object that represents a listener's Transport Layer
--   Security (TLS) validation context.
[$sel:validation:ListenerTls'] :: ListenerTls -> Maybe ListenerTlsValidationContext

-- | A reference to an object that represents a listener's Transport Layer
--   Security (TLS) certificate.
[$sel:certificate:ListenerTls'] :: ListenerTls -> ListenerTlsCertificate

-- | Specify one of the following modes.
--   
--   <ul>
--   <li>____STRICT – Listener only accepts connections with TLS
--   enabled.</li>
--   <li>____PERMISSIVE – Listener accepts connections with or without TLS
--   enabled.</li>
--   <li>____DISABLED – Listener only accepts connections without TLS.</li>
--   </ul>
[$sel:mode:ListenerTls'] :: ListenerTls -> ListenerTlsMode

-- | Create a value of <a>ListenerTls</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validation:ListenerTls'</a>, <a>listenerTls_validation</a> - A
--   reference to an object that represents a listener's Transport Layer
--   Security (TLS) validation context.
--   
--   <a>$sel:certificate:ListenerTls'</a>, <a>listenerTls_certificate</a> -
--   A reference to an object that represents a listener's Transport Layer
--   Security (TLS) certificate.
--   
--   <a>$sel:mode:ListenerTls'</a>, <a>listenerTls_mode</a> - Specify one
--   of the following modes.
--   
--   <ul>
--   <li>____STRICT – Listener only accepts connections with TLS
--   enabled.</li>
--   <li>____PERMISSIVE – Listener accepts connections with or without TLS
--   enabled.</li>
--   <li>____DISABLED – Listener only accepts connections without TLS.</li>
--   </ul>
newListenerTls :: ListenerTlsCertificate -> ListenerTlsMode -> ListenerTls

-- | A reference to an object that represents a listener's Transport Layer
--   Security (TLS) validation context.
listenerTls_validation :: Lens' ListenerTls (Maybe ListenerTlsValidationContext)

-- | A reference to an object that represents a listener's Transport Layer
--   Security (TLS) certificate.
listenerTls_certificate :: Lens' ListenerTls ListenerTlsCertificate

-- | Specify one of the following modes.
--   
--   <ul>
--   <li>____STRICT – Listener only accepts connections with TLS
--   enabled.</li>
--   <li>____PERMISSIVE – Listener accepts connections with or without TLS
--   enabled.</li>
--   <li>____DISABLED – Listener only accepts connections without TLS.</li>
--   </ul>
listenerTls_mode :: Lens' ListenerTls ListenerTlsMode
instance GHC.Generics.Generic Amazonka.AppMesh.Types.ListenerTls.ListenerTls
instance GHC.Show.Show Amazonka.AppMesh.Types.ListenerTls.ListenerTls
instance GHC.Read.Read Amazonka.AppMesh.Types.ListenerTls.ListenerTls
instance GHC.Classes.Eq Amazonka.AppMesh.Types.ListenerTls.ListenerTls
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.ListenerTls.ListenerTls
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.ListenerTls.ListenerTls
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.ListenerTls.ListenerTls
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.ListenerTls.ListenerTls


module Amazonka.AppMesh.Types.TlsValidationContextTrust

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust.
--   
--   <i>See:</i> <a>newTlsValidationContextTrust</a> smart constructor.
data TlsValidationContextTrust
TlsValidationContextTrust' :: Maybe TlsValidationContextAcmTrust -> Maybe TlsValidationContextSdsTrust -> Maybe TlsValidationContextFileTrust -> TlsValidationContextTrust

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) validation context trust for an Certificate Manager certificate.
[$sel:acm:TlsValidationContextTrust'] :: TlsValidationContextTrust -> Maybe TlsValidationContextAcmTrust

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) Secret Discovery Service validation context trust.
[$sel:sds:TlsValidationContextTrust'] :: TlsValidationContextTrust -> Maybe TlsValidationContextSdsTrust

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
[$sel:file:TlsValidationContextTrust'] :: TlsValidationContextTrust -> Maybe TlsValidationContextFileTrust

-- | Create a value of <a>TlsValidationContextTrust</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acm:TlsValidationContextTrust'</a>,
--   <a>tlsValidationContextTrust_acm</a> - A reference to an object that
--   represents a Transport Layer Security (TLS) validation context trust
--   for an Certificate Manager certificate.
--   
--   <a>$sel:sds:TlsValidationContextTrust'</a>,
--   <a>tlsValidationContextTrust_sds</a> - A reference to an object that
--   represents a Transport Layer Security (TLS) Secret Discovery Service
--   validation context trust.
--   
--   <a>$sel:file:TlsValidationContextTrust'</a>,
--   <a>tlsValidationContextTrust_file</a> - An object that represents a
--   Transport Layer Security (TLS) validation context trust for a local
--   file.
newTlsValidationContextTrust :: TlsValidationContextTrust

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) validation context trust for an Certificate Manager certificate.
tlsValidationContextTrust_acm :: Lens' TlsValidationContextTrust (Maybe TlsValidationContextAcmTrust)

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) Secret Discovery Service validation context trust.
tlsValidationContextTrust_sds :: Lens' TlsValidationContextTrust (Maybe TlsValidationContextSdsTrust)

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
tlsValidationContextTrust_file :: Lens' TlsValidationContextTrust (Maybe TlsValidationContextFileTrust)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.TlsValidationContextTrust.TlsValidationContextTrust
instance GHC.Show.Show Amazonka.AppMesh.Types.TlsValidationContextTrust.TlsValidationContextTrust
instance GHC.Read.Read Amazonka.AppMesh.Types.TlsValidationContextTrust.TlsValidationContextTrust
instance GHC.Classes.Eq Amazonka.AppMesh.Types.TlsValidationContextTrust.TlsValidationContextTrust
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.TlsValidationContextTrust.TlsValidationContextTrust
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.TlsValidationContextTrust.TlsValidationContextTrust
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.TlsValidationContextTrust.TlsValidationContextTrust
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.TlsValidationContextTrust.TlsValidationContextTrust


module Amazonka.AppMesh.Types.TlsValidationContext

-- | An object that represents how the proxy will validate its peer during
--   Transport Layer Security (TLS) negotiation.
--   
--   <i>See:</i> <a>newTlsValidationContext</a> smart constructor.
data TlsValidationContext
TlsValidationContext' :: Maybe SubjectAlternativeNames -> TlsValidationContextTrust -> TlsValidationContext

-- | A reference to an object that represents the SANs for a Transport
--   Layer Security (TLS) validation context.
[$sel:subjectAlternativeNames:TlsValidationContext'] :: TlsValidationContext -> Maybe SubjectAlternativeNames

-- | A reference to where to retrieve the trust chain when validating a
--   peer’s Transport Layer Security (TLS) certificate.
[$sel:trust:TlsValidationContext'] :: TlsValidationContext -> TlsValidationContextTrust

-- | Create a value of <a>TlsValidationContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subjectAlternativeNames:TlsValidationContext'</a>,
--   <a>tlsValidationContext_subjectAlternativeNames</a> - A reference to
--   an object that represents the SANs for a Transport Layer Security
--   (TLS) validation context.
--   
--   <a>$sel:trust:TlsValidationContext'</a>,
--   <a>tlsValidationContext_trust</a> - A reference to where to retrieve
--   the trust chain when validating a peer’s Transport Layer Security
--   (TLS) certificate.
newTlsValidationContext :: TlsValidationContextTrust -> TlsValidationContext

-- | A reference to an object that represents the SANs for a Transport
--   Layer Security (TLS) validation context.
tlsValidationContext_subjectAlternativeNames :: Lens' TlsValidationContext (Maybe SubjectAlternativeNames)

-- | A reference to where to retrieve the trust chain when validating a
--   peer’s Transport Layer Security (TLS) certificate.
tlsValidationContext_trust :: Lens' TlsValidationContext TlsValidationContextTrust
instance GHC.Generics.Generic Amazonka.AppMesh.Types.TlsValidationContext.TlsValidationContext
instance GHC.Show.Show Amazonka.AppMesh.Types.TlsValidationContext.TlsValidationContext
instance GHC.Read.Read Amazonka.AppMesh.Types.TlsValidationContext.TlsValidationContext
instance GHC.Classes.Eq Amazonka.AppMesh.Types.TlsValidationContext.TlsValidationContext
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.TlsValidationContext.TlsValidationContext
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.TlsValidationContext.TlsValidationContext
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.TlsValidationContext.TlsValidationContext
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.TlsValidationContext.TlsValidationContext


module Amazonka.AppMesh.Types.ClientPolicyTls

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) client policy.
--   
--   <i>See:</i> <a>newClientPolicyTls</a> smart constructor.
data ClientPolicyTls
ClientPolicyTls' :: Maybe [Natural] -> Maybe ClientTlsCertificate -> Maybe Bool -> TlsValidationContext -> ClientPolicyTls

-- | One or more ports that the policy is enforced for.
[$sel:ports:ClientPolicyTls'] :: ClientPolicyTls -> Maybe [Natural]

-- | A reference to an object that represents a client's TLS certificate.
[$sel:certificate:ClientPolicyTls'] :: ClientPolicyTls -> Maybe ClientTlsCertificate

-- | Whether the policy is enforced. The default is <tt>True</tt>, if a
--   value isn't specified.
[$sel:enforce:ClientPolicyTls'] :: ClientPolicyTls -> Maybe Bool

-- | A reference to an object that represents a TLS validation context.
[$sel:validation:ClientPolicyTls'] :: ClientPolicyTls -> TlsValidationContext

-- | Create a value of <a>ClientPolicyTls</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ports:ClientPolicyTls'</a>, <a>clientPolicyTls_ports</a> - One
--   or more ports that the policy is enforced for.
--   
--   <a>$sel:certificate:ClientPolicyTls'</a>,
--   <a>clientPolicyTls_certificate</a> - A reference to an object that
--   represents a client's TLS certificate.
--   
--   <a>$sel:enforce:ClientPolicyTls'</a>, <a>clientPolicyTls_enforce</a> -
--   Whether the policy is enforced. The default is <tt>True</tt>, if a
--   value isn't specified.
--   
--   <a>$sel:validation:ClientPolicyTls'</a>,
--   <a>clientPolicyTls_validation</a> - A reference to an object that
--   represents a TLS validation context.
newClientPolicyTls :: TlsValidationContext -> ClientPolicyTls

-- | One or more ports that the policy is enforced for.
clientPolicyTls_ports :: Lens' ClientPolicyTls (Maybe [Natural])

-- | A reference to an object that represents a client's TLS certificate.
clientPolicyTls_certificate :: Lens' ClientPolicyTls (Maybe ClientTlsCertificate)

-- | Whether the policy is enforced. The default is <tt>True</tt>, if a
--   value isn't specified.
clientPolicyTls_enforce :: Lens' ClientPolicyTls (Maybe Bool)

-- | A reference to an object that represents a TLS validation context.
clientPolicyTls_validation :: Lens' ClientPolicyTls TlsValidationContext
instance GHC.Generics.Generic Amazonka.AppMesh.Types.ClientPolicyTls.ClientPolicyTls
instance GHC.Show.Show Amazonka.AppMesh.Types.ClientPolicyTls.ClientPolicyTls
instance GHC.Read.Read Amazonka.AppMesh.Types.ClientPolicyTls.ClientPolicyTls
instance GHC.Classes.Eq Amazonka.AppMesh.Types.ClientPolicyTls.ClientPolicyTls
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.ClientPolicyTls.ClientPolicyTls
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.ClientPolicyTls.ClientPolicyTls
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.ClientPolicyTls.ClientPolicyTls
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.ClientPolicyTls.ClientPolicyTls


module Amazonka.AppMesh.Types.ClientPolicy

-- | An object that represents a client policy.
--   
--   <i>See:</i> <a>newClientPolicy</a> smart constructor.
data ClientPolicy
ClientPolicy' :: Maybe ClientPolicyTls -> ClientPolicy

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) client policy.
[$sel:tls:ClientPolicy'] :: ClientPolicy -> Maybe ClientPolicyTls

-- | Create a value of <a>ClientPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tls:ClientPolicy'</a>, <a>clientPolicy_tls</a> - A reference
--   to an object that represents a Transport Layer Security (TLS) client
--   policy.
newClientPolicy :: ClientPolicy

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) client policy.
clientPolicy_tls :: Lens' ClientPolicy (Maybe ClientPolicyTls)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.ClientPolicy.ClientPolicy
instance GHC.Show.Show Amazonka.AppMesh.Types.ClientPolicy.ClientPolicy
instance GHC.Read.Read Amazonka.AppMesh.Types.ClientPolicy.ClientPolicy
instance GHC.Classes.Eq Amazonka.AppMesh.Types.ClientPolicy.ClientPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.ClientPolicy.ClientPolicy
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.ClientPolicy.ClientPolicy
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.ClientPolicy.ClientPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.ClientPolicy.ClientPolicy


module Amazonka.AppMesh.Types.BackendDefaults

-- | An object that represents the default properties for a backend.
--   
--   <i>See:</i> <a>newBackendDefaults</a> smart constructor.
data BackendDefaults
BackendDefaults' :: Maybe ClientPolicy -> BackendDefaults

-- | A reference to an object that represents a client policy.
[$sel:clientPolicy:BackendDefaults'] :: BackendDefaults -> Maybe ClientPolicy

-- | Create a value of <a>BackendDefaults</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientPolicy:BackendDefaults'</a>,
--   <a>backendDefaults_clientPolicy</a> - A reference to an object that
--   represents a client policy.
newBackendDefaults :: BackendDefaults

-- | A reference to an object that represents a client policy.
backendDefaults_clientPolicy :: Lens' BackendDefaults (Maybe ClientPolicy)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.BackendDefaults.BackendDefaults
instance GHC.Show.Show Amazonka.AppMesh.Types.BackendDefaults.BackendDefaults
instance GHC.Read.Read Amazonka.AppMesh.Types.BackendDefaults.BackendDefaults
instance GHC.Classes.Eq Amazonka.AppMesh.Types.BackendDefaults.BackendDefaults
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.BackendDefaults.BackendDefaults
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.BackendDefaults.BackendDefaults
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.BackendDefaults.BackendDefaults
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.BackendDefaults.BackendDefaults


module Amazonka.AppMesh.Types.VirtualGatewayFileAccessLog

-- | An object that represents an access log file.
--   
--   <i>See:</i> <a>newVirtualGatewayFileAccessLog</a> smart constructor.
data VirtualGatewayFileAccessLog
VirtualGatewayFileAccessLog' :: Text -> VirtualGatewayFileAccessLog

-- | The file path to write access logs to. You can use
--   <tt>/dev/stdout</tt> to send access logs to standard out and configure
--   your Envoy container to use a log driver, such as <tt>awslogs</tt>, to
--   export the access logs to a log storage service such as Amazon
--   CloudWatch Logs. You can also specify a path in the Envoy container's
--   file system to write the files to disk.
[$sel:path:VirtualGatewayFileAccessLog'] :: VirtualGatewayFileAccessLog -> Text

-- | Create a value of <a>VirtualGatewayFileAccessLog</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:VirtualGatewayFileAccessLog'</a>,
--   <a>virtualGatewayFileAccessLog_path</a> - The file path to write
--   access logs to. You can use <tt>/dev/stdout</tt> to send access logs
--   to standard out and configure your Envoy container to use a log
--   driver, such as <tt>awslogs</tt>, to export the access logs to a log
--   storage service such as Amazon CloudWatch Logs. You can also specify a
--   path in the Envoy container's file system to write the files to disk.
newVirtualGatewayFileAccessLog :: Text -> VirtualGatewayFileAccessLog

-- | The file path to write access logs to. You can use
--   <tt>/dev/stdout</tt> to send access logs to standard out and configure
--   your Envoy container to use a log driver, such as <tt>awslogs</tt>, to
--   export the access logs to a log storage service such as Amazon
--   CloudWatch Logs. You can also specify a path in the Envoy container's
--   file system to write the files to disk.
virtualGatewayFileAccessLog_path :: Lens' VirtualGatewayFileAccessLog Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayFileAccessLog.VirtualGatewayFileAccessLog
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayFileAccessLog.VirtualGatewayFileAccessLog
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayFileAccessLog.VirtualGatewayFileAccessLog
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayFileAccessLog.VirtualGatewayFileAccessLog
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayFileAccessLog.VirtualGatewayFileAccessLog
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayFileAccessLog.VirtualGatewayFileAccessLog
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayFileAccessLog.VirtualGatewayFileAccessLog
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayFileAccessLog.VirtualGatewayFileAccessLog


module Amazonka.AppMesh.Types.VirtualGatewayAccessLog

-- | The access log configuration for a virtual gateway.
--   
--   <i>See:</i> <a>newVirtualGatewayAccessLog</a> smart constructor.
data VirtualGatewayAccessLog
VirtualGatewayAccessLog' :: Maybe VirtualGatewayFileAccessLog -> VirtualGatewayAccessLog

-- | The file object to send virtual gateway access logs to.
[$sel:file:VirtualGatewayAccessLog'] :: VirtualGatewayAccessLog -> Maybe VirtualGatewayFileAccessLog

-- | Create a value of <a>VirtualGatewayAccessLog</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:file:VirtualGatewayAccessLog'</a>,
--   <a>virtualGatewayAccessLog_file</a> - The file object to send virtual
--   gateway access logs to.
newVirtualGatewayAccessLog :: VirtualGatewayAccessLog

-- | The file object to send virtual gateway access logs to.
virtualGatewayAccessLog_file :: Lens' VirtualGatewayAccessLog (Maybe VirtualGatewayFileAccessLog)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayAccessLog.VirtualGatewayAccessLog
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayAccessLog.VirtualGatewayAccessLog
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayAccessLog.VirtualGatewayAccessLog
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayAccessLog.VirtualGatewayAccessLog
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayAccessLog.VirtualGatewayAccessLog
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayAccessLog.VirtualGatewayAccessLog
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayAccessLog.VirtualGatewayAccessLog
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayAccessLog.VirtualGatewayAccessLog


module Amazonka.AppMesh.Types.VirtualGatewayGrpcConnectionPool

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualGatewayGrpcConnectionPool</a> smart
--   constructor.
data VirtualGatewayGrpcConnectionPool
VirtualGatewayGrpcConnectionPool' :: Natural -> VirtualGatewayGrpcConnectionPool

-- | Maximum number of inflight requests Envoy can concurrently support
--   across hosts in upstream cluster.
[$sel:maxRequests:VirtualGatewayGrpcConnectionPool'] :: VirtualGatewayGrpcConnectionPool -> Natural

-- | Create a value of <a>VirtualGatewayGrpcConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxRequests:VirtualGatewayGrpcConnectionPool'</a>,
--   <a>virtualGatewayGrpcConnectionPool_maxRequests</a> - Maximum number
--   of inflight requests Envoy can concurrently support across hosts in
--   upstream cluster.
newVirtualGatewayGrpcConnectionPool :: Natural -> VirtualGatewayGrpcConnectionPool

-- | Maximum number of inflight requests Envoy can concurrently support
--   across hosts in upstream cluster.
virtualGatewayGrpcConnectionPool_maxRequests :: Lens' VirtualGatewayGrpcConnectionPool Natural
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayGrpcConnectionPool.VirtualGatewayGrpcConnectionPool
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayGrpcConnectionPool.VirtualGatewayGrpcConnectionPool
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayGrpcConnectionPool.VirtualGatewayGrpcConnectionPool
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayGrpcConnectionPool.VirtualGatewayGrpcConnectionPool
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayGrpcConnectionPool.VirtualGatewayGrpcConnectionPool
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayGrpcConnectionPool.VirtualGatewayGrpcConnectionPool
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayGrpcConnectionPool.VirtualGatewayGrpcConnectionPool
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayGrpcConnectionPool.VirtualGatewayGrpcConnectionPool


module Amazonka.AppMesh.Types.VirtualGatewayHttp2ConnectionPool

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualGatewayHttp2ConnectionPool</a> smart
--   constructor.
data VirtualGatewayHttp2ConnectionPool
VirtualGatewayHttp2ConnectionPool' :: Natural -> VirtualGatewayHttp2ConnectionPool

-- | Maximum number of inflight requests Envoy can concurrently support
--   across hosts in upstream cluster.
[$sel:maxRequests:VirtualGatewayHttp2ConnectionPool'] :: VirtualGatewayHttp2ConnectionPool -> Natural

-- | Create a value of <a>VirtualGatewayHttp2ConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxRequests:VirtualGatewayHttp2ConnectionPool'</a>,
--   <a>virtualGatewayHttp2ConnectionPool_maxRequests</a> - Maximum number
--   of inflight requests Envoy can concurrently support across hosts in
--   upstream cluster.
newVirtualGatewayHttp2ConnectionPool :: Natural -> VirtualGatewayHttp2ConnectionPool

-- | Maximum number of inflight requests Envoy can concurrently support
--   across hosts in upstream cluster.
virtualGatewayHttp2ConnectionPool_maxRequests :: Lens' VirtualGatewayHttp2ConnectionPool Natural
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayHttp2ConnectionPool.VirtualGatewayHttp2ConnectionPool
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayHttp2ConnectionPool.VirtualGatewayHttp2ConnectionPool
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayHttp2ConnectionPool.VirtualGatewayHttp2ConnectionPool
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayHttp2ConnectionPool.VirtualGatewayHttp2ConnectionPool
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayHttp2ConnectionPool.VirtualGatewayHttp2ConnectionPool
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayHttp2ConnectionPool.VirtualGatewayHttp2ConnectionPool
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayHttp2ConnectionPool.VirtualGatewayHttp2ConnectionPool
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayHttp2ConnectionPool.VirtualGatewayHttp2ConnectionPool


module Amazonka.AppMesh.Types.VirtualGatewayHttpConnectionPool

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualGatewayHttpConnectionPool</a> smart
--   constructor.
data VirtualGatewayHttpConnectionPool
VirtualGatewayHttpConnectionPool' :: Maybe Natural -> Natural -> VirtualGatewayHttpConnectionPool

-- | Number of overflowing requests after <tt>max_connections</tt> Envoy
--   will queue to upstream cluster.
[$sel:maxPendingRequests:VirtualGatewayHttpConnectionPool'] :: VirtualGatewayHttpConnectionPool -> Maybe Natural

-- | Maximum number of outbound TCP connections Envoy can establish
--   concurrently with all hosts in upstream cluster.
[$sel:maxConnections:VirtualGatewayHttpConnectionPool'] :: VirtualGatewayHttpConnectionPool -> Natural

-- | Create a value of <a>VirtualGatewayHttpConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxPendingRequests:VirtualGatewayHttpConnectionPool'</a>,
--   <a>virtualGatewayHttpConnectionPool_maxPendingRequests</a> - Number of
--   overflowing requests after <tt>max_connections</tt> Envoy will queue
--   to upstream cluster.
--   
--   <a>$sel:maxConnections:VirtualGatewayHttpConnectionPool'</a>,
--   <a>virtualGatewayHttpConnectionPool_maxConnections</a> - Maximum
--   number of outbound TCP connections Envoy can establish concurrently
--   with all hosts in upstream cluster.
newVirtualGatewayHttpConnectionPool :: Natural -> VirtualGatewayHttpConnectionPool

-- | Number of overflowing requests after <tt>max_connections</tt> Envoy
--   will queue to upstream cluster.
virtualGatewayHttpConnectionPool_maxPendingRequests :: Lens' VirtualGatewayHttpConnectionPool (Maybe Natural)

-- | Maximum number of outbound TCP connections Envoy can establish
--   concurrently with all hosts in upstream cluster.
virtualGatewayHttpConnectionPool_maxConnections :: Lens' VirtualGatewayHttpConnectionPool Natural
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayHttpConnectionPool.VirtualGatewayHttpConnectionPool
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayHttpConnectionPool.VirtualGatewayHttpConnectionPool
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayHttpConnectionPool.VirtualGatewayHttpConnectionPool
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayHttpConnectionPool.VirtualGatewayHttpConnectionPool
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayHttpConnectionPool.VirtualGatewayHttpConnectionPool
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayHttpConnectionPool.VirtualGatewayHttpConnectionPool
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayHttpConnectionPool.VirtualGatewayHttpConnectionPool
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayHttpConnectionPool.VirtualGatewayHttpConnectionPool


module Amazonka.AppMesh.Types.VirtualGatewayConnectionPool

-- | An object that represents the type of virtual gateway connection pool.
--   
--   Only one protocol is used at a time and should be the same protocol as
--   the one chosen under port mapping.
--   
--   If not present the default value for <tt>maxPendingRequests</tt> is
--   <tt>2147483647</tt>.
--   
--   <i>See:</i> <a>newVirtualGatewayConnectionPool</a> smart constructor.
data VirtualGatewayConnectionPool
VirtualGatewayConnectionPool' :: Maybe VirtualGatewayHttp2ConnectionPool -> Maybe VirtualGatewayGrpcConnectionPool -> Maybe VirtualGatewayHttpConnectionPool -> VirtualGatewayConnectionPool

-- | An object that represents a type of connection pool.
[$sel:http2:VirtualGatewayConnectionPool'] :: VirtualGatewayConnectionPool -> Maybe VirtualGatewayHttp2ConnectionPool

-- | An object that represents a type of connection pool.
[$sel:grpc:VirtualGatewayConnectionPool'] :: VirtualGatewayConnectionPool -> Maybe VirtualGatewayGrpcConnectionPool

-- | An object that represents a type of connection pool.
[$sel:http:VirtualGatewayConnectionPool'] :: VirtualGatewayConnectionPool -> Maybe VirtualGatewayHttpConnectionPool

-- | Create a value of <a>VirtualGatewayConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:http2:VirtualGatewayConnectionPool'</a>,
--   <a>virtualGatewayConnectionPool_http2</a> - An object that represents
--   a type of connection pool.
--   
--   <a>$sel:grpc:VirtualGatewayConnectionPool'</a>,
--   <a>virtualGatewayConnectionPool_grpc</a> - An object that represents a
--   type of connection pool.
--   
--   <a>$sel:http:VirtualGatewayConnectionPool'</a>,
--   <a>virtualGatewayConnectionPool_http</a> - An object that represents a
--   type of connection pool.
newVirtualGatewayConnectionPool :: VirtualGatewayConnectionPool

-- | An object that represents a type of connection pool.
virtualGatewayConnectionPool_http2 :: Lens' VirtualGatewayConnectionPool (Maybe VirtualGatewayHttp2ConnectionPool)

-- | An object that represents a type of connection pool.
virtualGatewayConnectionPool_grpc :: Lens' VirtualGatewayConnectionPool (Maybe VirtualGatewayGrpcConnectionPool)

-- | An object that represents a type of connection pool.
virtualGatewayConnectionPool_http :: Lens' VirtualGatewayConnectionPool (Maybe VirtualGatewayHttpConnectionPool)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayConnectionPool.VirtualGatewayConnectionPool
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayConnectionPool.VirtualGatewayConnectionPool
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayConnectionPool.VirtualGatewayConnectionPool
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayConnectionPool.VirtualGatewayConnectionPool
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayConnectionPool.VirtualGatewayConnectionPool
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayConnectionPool.VirtualGatewayConnectionPool
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayConnectionPool.VirtualGatewayConnectionPool
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayConnectionPool.VirtualGatewayConnectionPool


module Amazonka.AppMesh.Types.VirtualGatewayListenerTlsAcmCertificate

-- | An object that represents an Certificate Manager certificate.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTlsAcmCertificate</a> smart
--   constructor.
data VirtualGatewayListenerTlsAcmCertificate
VirtualGatewayListenerTlsAcmCertificate' :: Text -> VirtualGatewayListenerTlsAcmCertificate

-- | The Amazon Resource Name (ARN) for the certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
[$sel:certificateArn:VirtualGatewayListenerTlsAcmCertificate'] :: VirtualGatewayListenerTlsAcmCertificate -> Text

-- | Create a value of <a>VirtualGatewayListenerTlsAcmCertificate</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateArn:VirtualGatewayListenerTlsAcmCertificate'</a>,
--   <a>virtualGatewayListenerTlsAcmCertificate_certificateArn</a> - The
--   Amazon Resource Name (ARN) for the certificate. The certificate must
--   meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
newVirtualGatewayListenerTlsAcmCertificate :: Text -> VirtualGatewayListenerTlsAcmCertificate

-- | The Amazon Resource Name (ARN) for the certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
virtualGatewayListenerTlsAcmCertificate_certificateArn :: Lens' VirtualGatewayListenerTlsAcmCertificate Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayListenerTlsAcmCertificate.VirtualGatewayListenerTlsAcmCertificate
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayListenerTlsAcmCertificate.VirtualGatewayListenerTlsAcmCertificate
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayListenerTlsAcmCertificate.VirtualGatewayListenerTlsAcmCertificate
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayListenerTlsAcmCertificate.VirtualGatewayListenerTlsAcmCertificate
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayListenerTlsAcmCertificate.VirtualGatewayListenerTlsAcmCertificate
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayListenerTlsAcmCertificate.VirtualGatewayListenerTlsAcmCertificate
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayListenerTlsAcmCertificate.VirtualGatewayListenerTlsAcmCertificate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayListenerTlsAcmCertificate.VirtualGatewayListenerTlsAcmCertificate


module Amazonka.AppMesh.Types.VirtualGatewayListenerTlsFileCertificate

-- | An object that represents a local file certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTlsFileCertificate</a> smart
--   constructor.
data VirtualGatewayListenerTlsFileCertificate
VirtualGatewayListenerTlsFileCertificate' :: Text -> Text -> VirtualGatewayListenerTlsFileCertificate

-- | The certificate chain for the certificate.
[$sel:certificateChain:VirtualGatewayListenerTlsFileCertificate'] :: VirtualGatewayListenerTlsFileCertificate -> Text

-- | The private key for a certificate stored on the file system of the
--   mesh endpoint that the proxy is running on.
[$sel:privateKey:VirtualGatewayListenerTlsFileCertificate'] :: VirtualGatewayListenerTlsFileCertificate -> Text

-- | Create a value of <a>VirtualGatewayListenerTlsFileCertificate</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateChain:VirtualGatewayListenerTlsFileCertificate'</a>,
--   <a>virtualGatewayListenerTlsFileCertificate_certificateChain</a> - The
--   certificate chain for the certificate.
--   
--   <a>$sel:privateKey:VirtualGatewayListenerTlsFileCertificate'</a>,
--   <a>virtualGatewayListenerTlsFileCertificate_privateKey</a> - The
--   private key for a certificate stored on the file system of the mesh
--   endpoint that the proxy is running on.
newVirtualGatewayListenerTlsFileCertificate :: Text -> Text -> VirtualGatewayListenerTlsFileCertificate

-- | The certificate chain for the certificate.
virtualGatewayListenerTlsFileCertificate_certificateChain :: Lens' VirtualGatewayListenerTlsFileCertificate Text

-- | The private key for a certificate stored on the file system of the
--   mesh endpoint that the proxy is running on.
virtualGatewayListenerTlsFileCertificate_privateKey :: Lens' VirtualGatewayListenerTlsFileCertificate Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayListenerTlsFileCertificate.VirtualGatewayListenerTlsFileCertificate
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayListenerTlsFileCertificate.VirtualGatewayListenerTlsFileCertificate
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayListenerTlsFileCertificate.VirtualGatewayListenerTlsFileCertificate
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayListenerTlsFileCertificate.VirtualGatewayListenerTlsFileCertificate
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayListenerTlsFileCertificate.VirtualGatewayListenerTlsFileCertificate
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayListenerTlsFileCertificate.VirtualGatewayListenerTlsFileCertificate
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayListenerTlsFileCertificate.VirtualGatewayListenerTlsFileCertificate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayListenerTlsFileCertificate.VirtualGatewayListenerTlsFileCertificate


module Amazonka.AppMesh.Types.VirtualGatewayListenerTlsMode
newtype VirtualGatewayListenerTlsMode
VirtualGatewayListenerTlsMode' :: Text -> VirtualGatewayListenerTlsMode
[fromVirtualGatewayListenerTlsMode] :: VirtualGatewayListenerTlsMode -> Text
pattern VirtualGatewayListenerTlsMode_DISABLED :: VirtualGatewayListenerTlsMode
pattern VirtualGatewayListenerTlsMode_PERMISSIVE :: VirtualGatewayListenerTlsMode
pattern VirtualGatewayListenerTlsMode_STRICT :: VirtualGatewayListenerTlsMode
instance Amazonka.Data.XML.ToXML Amazonka.AppMesh.Types.VirtualGatewayListenerTlsMode.VirtualGatewayListenerTlsMode
instance Amazonka.Data.XML.FromXML Amazonka.AppMesh.Types.VirtualGatewayListenerTlsMode.VirtualGatewayListenerTlsMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppMesh.Types.VirtualGatewayListenerTlsMode.VirtualGatewayListenerTlsMode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayListenerTlsMode.VirtualGatewayListenerTlsMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppMesh.Types.VirtualGatewayListenerTlsMode.VirtualGatewayListenerTlsMode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayListenerTlsMode.VirtualGatewayListenerTlsMode
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.Types.VirtualGatewayListenerTlsMode.VirtualGatewayListenerTlsMode
instance Amazonka.Data.Headers.ToHeader Amazonka.AppMesh.Types.VirtualGatewayListenerTlsMode.VirtualGatewayListenerTlsMode
instance Amazonka.Data.Log.ToLog Amazonka.AppMesh.Types.VirtualGatewayListenerTlsMode.VirtualGatewayListenerTlsMode
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppMesh.Types.VirtualGatewayListenerTlsMode.VirtualGatewayListenerTlsMode
instance Amazonka.Data.Text.ToText Amazonka.AppMesh.Types.VirtualGatewayListenerTlsMode.VirtualGatewayListenerTlsMode
instance Amazonka.Data.Text.FromText Amazonka.AppMesh.Types.VirtualGatewayListenerTlsMode.VirtualGatewayListenerTlsMode
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayListenerTlsMode.VirtualGatewayListenerTlsMode
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayListenerTlsMode.VirtualGatewayListenerTlsMode
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayListenerTlsMode.VirtualGatewayListenerTlsMode
instance GHC.Classes.Ord Amazonka.AppMesh.Types.VirtualGatewayListenerTlsMode.VirtualGatewayListenerTlsMode
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayListenerTlsMode.VirtualGatewayListenerTlsMode
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayListenerTlsMode.VirtualGatewayListenerTlsMode
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayListenerTlsMode.VirtualGatewayListenerTlsMode


module Amazonka.AppMesh.Types.VirtualGatewayListenerTlsSdsCertificate

-- | An object that represents the virtual gateway's listener's Secret
--   Discovery Service certificate.The proxy must be configured with a
--   local SDS provider via a Unix Domain Socket. See App Mesh<a>TLS
--   documentation</a> for more info.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTlsSdsCertificate</a> smart
--   constructor.
data VirtualGatewayListenerTlsSdsCertificate
VirtualGatewayListenerTlsSdsCertificate' :: Text -> VirtualGatewayListenerTlsSdsCertificate

-- | A reference to an object that represents the name of the secret secret
--   requested from the Secret Discovery Service provider representing
--   Transport Layer Security (TLS) materials like a certificate or
--   certificate chain.
[$sel:secretName:VirtualGatewayListenerTlsSdsCertificate'] :: VirtualGatewayListenerTlsSdsCertificate -> Text

-- | Create a value of <a>VirtualGatewayListenerTlsSdsCertificate</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretName:VirtualGatewayListenerTlsSdsCertificate'</a>,
--   <a>virtualGatewayListenerTlsSdsCertificate_secretName</a> - A
--   reference to an object that represents the name of the secret secret
--   requested from the Secret Discovery Service provider representing
--   Transport Layer Security (TLS) materials like a certificate or
--   certificate chain.
newVirtualGatewayListenerTlsSdsCertificate :: Text -> VirtualGatewayListenerTlsSdsCertificate

-- | A reference to an object that represents the name of the secret secret
--   requested from the Secret Discovery Service provider representing
--   Transport Layer Security (TLS) materials like a certificate or
--   certificate chain.
virtualGatewayListenerTlsSdsCertificate_secretName :: Lens' VirtualGatewayListenerTlsSdsCertificate Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayListenerTlsSdsCertificate.VirtualGatewayListenerTlsSdsCertificate
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayListenerTlsSdsCertificate.VirtualGatewayListenerTlsSdsCertificate
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayListenerTlsSdsCertificate.VirtualGatewayListenerTlsSdsCertificate
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayListenerTlsSdsCertificate.VirtualGatewayListenerTlsSdsCertificate
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayListenerTlsSdsCertificate.VirtualGatewayListenerTlsSdsCertificate
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayListenerTlsSdsCertificate.VirtualGatewayListenerTlsSdsCertificate
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayListenerTlsSdsCertificate.VirtualGatewayListenerTlsSdsCertificate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayListenerTlsSdsCertificate.VirtualGatewayListenerTlsSdsCertificate


module Amazonka.AppMesh.Types.VirtualGatewayListenerTlsCertificate

-- | An object that represents a listener's Transport Layer Security (TLS)
--   certificate.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTlsCertificate</a> smart
--   constructor.
data VirtualGatewayListenerTlsCertificate
VirtualGatewayListenerTlsCertificate' :: Maybe VirtualGatewayListenerTlsAcmCertificate -> Maybe VirtualGatewayListenerTlsSdsCertificate -> Maybe VirtualGatewayListenerTlsFileCertificate -> VirtualGatewayListenerTlsCertificate

-- | A reference to an object that represents an Certificate Manager
--   certificate.
[$sel:acm:VirtualGatewayListenerTlsCertificate'] :: VirtualGatewayListenerTlsCertificate -> Maybe VirtualGatewayListenerTlsAcmCertificate

-- | A reference to an object that represents a virtual gateway's
--   listener's Secret Discovery Service certificate.
[$sel:sds:VirtualGatewayListenerTlsCertificate'] :: VirtualGatewayListenerTlsCertificate -> Maybe VirtualGatewayListenerTlsSdsCertificate

-- | A reference to an object that represents a local file certificate.
[$sel:file:VirtualGatewayListenerTlsCertificate'] :: VirtualGatewayListenerTlsCertificate -> Maybe VirtualGatewayListenerTlsFileCertificate

-- | Create a value of <a>VirtualGatewayListenerTlsCertificate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acm:VirtualGatewayListenerTlsCertificate'</a>,
--   <a>virtualGatewayListenerTlsCertificate_acm</a> - A reference to an
--   object that represents an Certificate Manager certificate.
--   
--   <a>$sel:sds:VirtualGatewayListenerTlsCertificate'</a>,
--   <a>virtualGatewayListenerTlsCertificate_sds</a> - A reference to an
--   object that represents a virtual gateway's listener's Secret Discovery
--   Service certificate.
--   
--   <a>$sel:file:VirtualGatewayListenerTlsCertificate'</a>,
--   <a>virtualGatewayListenerTlsCertificate_file</a> - A reference to an
--   object that represents a local file certificate.
newVirtualGatewayListenerTlsCertificate :: VirtualGatewayListenerTlsCertificate

-- | A reference to an object that represents an Certificate Manager
--   certificate.
virtualGatewayListenerTlsCertificate_acm :: Lens' VirtualGatewayListenerTlsCertificate (Maybe VirtualGatewayListenerTlsAcmCertificate)

-- | A reference to an object that represents a virtual gateway's
--   listener's Secret Discovery Service certificate.
virtualGatewayListenerTlsCertificate_sds :: Lens' VirtualGatewayListenerTlsCertificate (Maybe VirtualGatewayListenerTlsSdsCertificate)

-- | A reference to an object that represents a local file certificate.
virtualGatewayListenerTlsCertificate_file :: Lens' VirtualGatewayListenerTlsCertificate (Maybe VirtualGatewayListenerTlsFileCertificate)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayListenerTlsCertificate.VirtualGatewayListenerTlsCertificate
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayListenerTlsCertificate.VirtualGatewayListenerTlsCertificate
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayListenerTlsCertificate.VirtualGatewayListenerTlsCertificate
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayListenerTlsCertificate.VirtualGatewayListenerTlsCertificate
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayListenerTlsCertificate.VirtualGatewayListenerTlsCertificate
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayListenerTlsCertificate.VirtualGatewayListenerTlsCertificate
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayListenerTlsCertificate.VirtualGatewayListenerTlsCertificate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayListenerTlsCertificate.VirtualGatewayListenerTlsCertificate


module Amazonka.AppMesh.Types.VirtualGatewayClientTlsCertificate

-- | An object that represents the virtual gateway's client's Transport
--   Layer Security (TLS) certificate.
--   
--   <i>See:</i> <a>newVirtualGatewayClientTlsCertificate</a> smart
--   constructor.
data VirtualGatewayClientTlsCertificate
VirtualGatewayClientTlsCertificate' :: Maybe VirtualGatewayListenerTlsSdsCertificate -> Maybe VirtualGatewayListenerTlsFileCertificate -> VirtualGatewayClientTlsCertificate

-- | A reference to an object that represents a virtual gateway's client's
--   Secret Discovery Service certificate.
[$sel:sds:VirtualGatewayClientTlsCertificate'] :: VirtualGatewayClientTlsCertificate -> Maybe VirtualGatewayListenerTlsSdsCertificate

-- | An object that represents a local file certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a> .
[$sel:file:VirtualGatewayClientTlsCertificate'] :: VirtualGatewayClientTlsCertificate -> Maybe VirtualGatewayListenerTlsFileCertificate

-- | Create a value of <a>VirtualGatewayClientTlsCertificate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sds:VirtualGatewayClientTlsCertificate'</a>,
--   <a>virtualGatewayClientTlsCertificate_sds</a> - A reference to an
--   object that represents a virtual gateway's client's Secret Discovery
--   Service certificate.
--   
--   <a>$sel:file:VirtualGatewayClientTlsCertificate'</a>,
--   <a>virtualGatewayClientTlsCertificate_file</a> - An object that
--   represents a local file certificate. The certificate must meet
--   specific requirements and you must have proxy authorization enabled.
--   For more information, see <a>Transport Layer Security (TLS)</a> .
newVirtualGatewayClientTlsCertificate :: VirtualGatewayClientTlsCertificate

-- | A reference to an object that represents a virtual gateway's client's
--   Secret Discovery Service certificate.
virtualGatewayClientTlsCertificate_sds :: Lens' VirtualGatewayClientTlsCertificate (Maybe VirtualGatewayListenerTlsSdsCertificate)

-- | An object that represents a local file certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a> .
virtualGatewayClientTlsCertificate_file :: Lens' VirtualGatewayClientTlsCertificate (Maybe VirtualGatewayListenerTlsFileCertificate)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayClientTlsCertificate.VirtualGatewayClientTlsCertificate
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayClientTlsCertificate.VirtualGatewayClientTlsCertificate
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayClientTlsCertificate.VirtualGatewayClientTlsCertificate
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayClientTlsCertificate.VirtualGatewayClientTlsCertificate
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayClientTlsCertificate.VirtualGatewayClientTlsCertificate
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayClientTlsCertificate.VirtualGatewayClientTlsCertificate
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayClientTlsCertificate.VirtualGatewayClientTlsCertificate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayClientTlsCertificate.VirtualGatewayClientTlsCertificate


module Amazonka.AppMesh.Types.VirtualGatewayLogging

-- | An object that represents logging information.
--   
--   <i>See:</i> <a>newVirtualGatewayLogging</a> smart constructor.
data VirtualGatewayLogging
VirtualGatewayLogging' :: Maybe VirtualGatewayAccessLog -> VirtualGatewayLogging

-- | The access log configuration.
[$sel:accessLog:VirtualGatewayLogging'] :: VirtualGatewayLogging -> Maybe VirtualGatewayAccessLog

-- | Create a value of <a>VirtualGatewayLogging</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessLog:VirtualGatewayLogging'</a>,
--   <a>virtualGatewayLogging_accessLog</a> - The access log configuration.
newVirtualGatewayLogging :: VirtualGatewayLogging

-- | The access log configuration.
virtualGatewayLogging_accessLog :: Lens' VirtualGatewayLogging (Maybe VirtualGatewayAccessLog)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayLogging.VirtualGatewayLogging
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayLogging.VirtualGatewayLogging
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayLogging.VirtualGatewayLogging
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayLogging.VirtualGatewayLogging
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayLogging.VirtualGatewayLogging
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayLogging.VirtualGatewayLogging
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayLogging.VirtualGatewayLogging
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayLogging.VirtualGatewayLogging


module Amazonka.AppMesh.Types.VirtualGatewayPortProtocol
newtype VirtualGatewayPortProtocol
VirtualGatewayPortProtocol' :: Text -> VirtualGatewayPortProtocol
[fromVirtualGatewayPortProtocol] :: VirtualGatewayPortProtocol -> Text
pattern VirtualGatewayPortProtocol_Grpc :: VirtualGatewayPortProtocol
pattern VirtualGatewayPortProtocol_Http :: VirtualGatewayPortProtocol
pattern VirtualGatewayPortProtocol_Http2 :: VirtualGatewayPortProtocol
instance Amazonka.Data.XML.ToXML Amazonka.AppMesh.Types.VirtualGatewayPortProtocol.VirtualGatewayPortProtocol
instance Amazonka.Data.XML.FromXML Amazonka.AppMesh.Types.VirtualGatewayPortProtocol.VirtualGatewayPortProtocol
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppMesh.Types.VirtualGatewayPortProtocol.VirtualGatewayPortProtocol
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayPortProtocol.VirtualGatewayPortProtocol
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppMesh.Types.VirtualGatewayPortProtocol.VirtualGatewayPortProtocol
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayPortProtocol.VirtualGatewayPortProtocol
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.Types.VirtualGatewayPortProtocol.VirtualGatewayPortProtocol
instance Amazonka.Data.Headers.ToHeader Amazonka.AppMesh.Types.VirtualGatewayPortProtocol.VirtualGatewayPortProtocol
instance Amazonka.Data.Log.ToLog Amazonka.AppMesh.Types.VirtualGatewayPortProtocol.VirtualGatewayPortProtocol
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppMesh.Types.VirtualGatewayPortProtocol.VirtualGatewayPortProtocol
instance Amazonka.Data.Text.ToText Amazonka.AppMesh.Types.VirtualGatewayPortProtocol.VirtualGatewayPortProtocol
instance Amazonka.Data.Text.FromText Amazonka.AppMesh.Types.VirtualGatewayPortProtocol.VirtualGatewayPortProtocol
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayPortProtocol.VirtualGatewayPortProtocol
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayPortProtocol.VirtualGatewayPortProtocol
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayPortProtocol.VirtualGatewayPortProtocol
instance GHC.Classes.Ord Amazonka.AppMesh.Types.VirtualGatewayPortProtocol.VirtualGatewayPortProtocol
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayPortProtocol.VirtualGatewayPortProtocol
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayPortProtocol.VirtualGatewayPortProtocol
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayPortProtocol.VirtualGatewayPortProtocol


module Amazonka.AppMesh.Types.VirtualGatewayPortMapping

-- | An object that represents a port mapping.
--   
--   <i>See:</i> <a>newVirtualGatewayPortMapping</a> smart constructor.
data VirtualGatewayPortMapping
VirtualGatewayPortMapping' :: Natural -> VirtualGatewayPortProtocol -> VirtualGatewayPortMapping

-- | The port used for the port mapping. Specify one protocol.
[$sel:port:VirtualGatewayPortMapping'] :: VirtualGatewayPortMapping -> Natural

-- | The protocol used for the port mapping.
[$sel:protocol:VirtualGatewayPortMapping'] :: VirtualGatewayPortMapping -> VirtualGatewayPortProtocol

-- | Create a value of <a>VirtualGatewayPortMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:port:VirtualGatewayPortMapping'</a>,
--   <a>virtualGatewayPortMapping_port</a> - The port used for the port
--   mapping. Specify one protocol.
--   
--   <a>$sel:protocol:VirtualGatewayPortMapping'</a>,
--   <a>virtualGatewayPortMapping_protocol</a> - The protocol used for the
--   port mapping.
newVirtualGatewayPortMapping :: Natural -> VirtualGatewayPortProtocol -> VirtualGatewayPortMapping

-- | The port used for the port mapping. Specify one protocol.
virtualGatewayPortMapping_port :: Lens' VirtualGatewayPortMapping Natural

-- | The protocol used for the port mapping.
virtualGatewayPortMapping_protocol :: Lens' VirtualGatewayPortMapping VirtualGatewayPortProtocol
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayPortMapping.VirtualGatewayPortMapping
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayPortMapping.VirtualGatewayPortMapping
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayPortMapping.VirtualGatewayPortMapping
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayPortMapping.VirtualGatewayPortMapping
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayPortMapping.VirtualGatewayPortMapping
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayPortMapping.VirtualGatewayPortMapping
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayPortMapping.VirtualGatewayPortMapping
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayPortMapping.VirtualGatewayPortMapping


module Amazonka.AppMesh.Types.VirtualGatewayHealthCheckPolicy

-- | An object that represents the health check policy for a virtual
--   gateway's listener.
--   
--   <i>See:</i> <a>newVirtualGatewayHealthCheckPolicy</a> smart
--   constructor.
data VirtualGatewayHealthCheckPolicy
VirtualGatewayHealthCheckPolicy' :: Maybe Text -> Maybe Natural -> Natural -> Natural -> VirtualGatewayPortProtocol -> Natural -> Natural -> VirtualGatewayHealthCheckPolicy

-- | The destination path for the health check request. This value is only
--   used if the specified protocol is HTTP or HTTP/2. For any other
--   protocol, this value is ignored.
[$sel:path:VirtualGatewayHealthCheckPolicy'] :: VirtualGatewayHealthCheckPolicy -> Maybe Text

-- | The destination port for the health check request. This port must
--   match the port defined in the PortMapping for the listener.
[$sel:port:VirtualGatewayHealthCheckPolicy'] :: VirtualGatewayHealthCheckPolicy -> Maybe Natural

-- | The number of consecutive successful health checks that must occur
--   before declaring the listener healthy.
[$sel:healthyThreshold:VirtualGatewayHealthCheckPolicy'] :: VirtualGatewayHealthCheckPolicy -> Natural

-- | The time period in milliseconds between each health check execution.
[$sel:intervalMillis:VirtualGatewayHealthCheckPolicy'] :: VirtualGatewayHealthCheckPolicy -> Natural

-- | The protocol for the health check request. If you specify
--   <tt>grpc</tt>, then your service must conform to the <a>GRPC Health
--   Checking Protocol</a>.
[$sel:protocol:VirtualGatewayHealthCheckPolicy'] :: VirtualGatewayHealthCheckPolicy -> VirtualGatewayPortProtocol

-- | The amount of time to wait when receiving a response from the health
--   check, in milliseconds.
[$sel:timeoutMillis:VirtualGatewayHealthCheckPolicy'] :: VirtualGatewayHealthCheckPolicy -> Natural

-- | The number of consecutive failed health checks that must occur before
--   declaring a virtual gateway unhealthy.
[$sel:unhealthyThreshold:VirtualGatewayHealthCheckPolicy'] :: VirtualGatewayHealthCheckPolicy -> Natural

-- | Create a value of <a>VirtualGatewayHealthCheckPolicy</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_path</a> - The destination path for
--   the health check request. This value is only used if the specified
--   protocol is HTTP or HTTP/2. For any other protocol, this value is
--   ignored.
--   
--   <a>$sel:port:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_port</a> - The destination port for
--   the health check request. This port must match the port defined in the
--   PortMapping for the listener.
--   
--   <a>$sel:healthyThreshold:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_healthyThreshold</a> - The number
--   of consecutive successful health checks that must occur before
--   declaring the listener healthy.
--   
--   <a>$sel:intervalMillis:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_intervalMillis</a> - The time
--   period in milliseconds between each health check execution.
--   
--   <a>$sel:protocol:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_protocol</a> - The protocol for the
--   health check request. If you specify <tt>grpc</tt>, then your service
--   must conform to the <a>GRPC Health Checking Protocol</a>.
--   
--   <a>$sel:timeoutMillis:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_timeoutMillis</a> - The amount of
--   time to wait when receiving a response from the health check, in
--   milliseconds.
--   
--   <a>$sel:unhealthyThreshold:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_unhealthyThreshold</a> - The number
--   of consecutive failed health checks that must occur before declaring a
--   virtual gateway unhealthy.
newVirtualGatewayHealthCheckPolicy :: Natural -> Natural -> VirtualGatewayPortProtocol -> Natural -> Natural -> VirtualGatewayHealthCheckPolicy

-- | The destination path for the health check request. This value is only
--   used if the specified protocol is HTTP or HTTP/2. For any other
--   protocol, this value is ignored.
virtualGatewayHealthCheckPolicy_path :: Lens' VirtualGatewayHealthCheckPolicy (Maybe Text)

-- | The destination port for the health check request. This port must
--   match the port defined in the PortMapping for the listener.
virtualGatewayHealthCheckPolicy_port :: Lens' VirtualGatewayHealthCheckPolicy (Maybe Natural)

-- | The number of consecutive successful health checks that must occur
--   before declaring the listener healthy.
virtualGatewayHealthCheckPolicy_healthyThreshold :: Lens' VirtualGatewayHealthCheckPolicy Natural

-- | The time period in milliseconds between each health check execution.
virtualGatewayHealthCheckPolicy_intervalMillis :: Lens' VirtualGatewayHealthCheckPolicy Natural

-- | The protocol for the health check request. If you specify
--   <tt>grpc</tt>, then your service must conform to the <a>GRPC Health
--   Checking Protocol</a>.
virtualGatewayHealthCheckPolicy_protocol :: Lens' VirtualGatewayHealthCheckPolicy VirtualGatewayPortProtocol

-- | The amount of time to wait when receiving a response from the health
--   check, in milliseconds.
virtualGatewayHealthCheckPolicy_timeoutMillis :: Lens' VirtualGatewayHealthCheckPolicy Natural

-- | The number of consecutive failed health checks that must occur before
--   declaring a virtual gateway unhealthy.
virtualGatewayHealthCheckPolicy_unhealthyThreshold :: Lens' VirtualGatewayHealthCheckPolicy Natural
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayHealthCheckPolicy.VirtualGatewayHealthCheckPolicy
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayHealthCheckPolicy.VirtualGatewayHealthCheckPolicy
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayHealthCheckPolicy.VirtualGatewayHealthCheckPolicy
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayHealthCheckPolicy.VirtualGatewayHealthCheckPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayHealthCheckPolicy.VirtualGatewayHealthCheckPolicy
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayHealthCheckPolicy.VirtualGatewayHealthCheckPolicy
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayHealthCheckPolicy.VirtualGatewayHealthCheckPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayHealthCheckPolicy.VirtualGatewayHealthCheckPolicy


module Amazonka.AppMesh.Types.VirtualGatewayRef

-- | An object that represents a virtual gateway returned by a list
--   operation.
--   
--   <i>See:</i> <a>newVirtualGatewayRef</a> smart constructor.
data VirtualGatewayRef
VirtualGatewayRef' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Integer -> Text -> VirtualGatewayRef

-- | The full Amazon Resource Name (ARN) for the resource.
[$sel:arn:VirtualGatewayRef'] :: VirtualGatewayRef -> Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:VirtualGatewayRef'] :: VirtualGatewayRef -> POSIX

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
[$sel:lastUpdatedAt:VirtualGatewayRef'] :: VirtualGatewayRef -> POSIX

-- | The name of the service mesh that the resource resides in.
[$sel:meshName:VirtualGatewayRef'] :: VirtualGatewayRef -> Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:VirtualGatewayRef'] :: VirtualGatewayRef -> Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
[$sel:resourceOwner:VirtualGatewayRef'] :: VirtualGatewayRef -> Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
[$sel:version:VirtualGatewayRef'] :: VirtualGatewayRef -> Integer

-- | The name of the resource.
[$sel:virtualGatewayName:VirtualGatewayRef'] :: VirtualGatewayRef -> Text

-- | Create a value of <a>VirtualGatewayRef</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:VirtualGatewayRef'</a>, <a>virtualGatewayRef_arn</a> - The
--   full Amazon Resource Name (ARN) for the resource.
--   
--   <a>$sel:createdAt:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:lastUpdatedAt:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_lastUpdatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was last updated.
--   
--   <a>$sel:meshName:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_meshName</a> - The name of the service mesh that
--   the resource resides in.
--   
--   <a>$sel:meshOwner:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_resourceOwner</a> - The AWS IAM account ID of the
--   resource owner. If the account ID is not your own, then it's the ID of
--   the mesh owner or of another account that the mesh is shared with. For
--   more information about mesh sharing, see <a>Working with shared
--   meshes</a>.
--   
--   <a>$sel:version:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_version</a> - The version of the resource.
--   Resources are created at version 1, and this version is incremented
--   each time that they're updated.
--   
--   <a>$sel:virtualGatewayName:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_virtualGatewayName</a> - The name of the
--   resource.
newVirtualGatewayRef :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Integer -> Text -> VirtualGatewayRef

-- | The full Amazon Resource Name (ARN) for the resource.
virtualGatewayRef_arn :: Lens' VirtualGatewayRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
virtualGatewayRef_createdAt :: Lens' VirtualGatewayRef UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
virtualGatewayRef_lastUpdatedAt :: Lens' VirtualGatewayRef UTCTime

-- | The name of the service mesh that the resource resides in.
virtualGatewayRef_meshName :: Lens' VirtualGatewayRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
virtualGatewayRef_meshOwner :: Lens' VirtualGatewayRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
virtualGatewayRef_resourceOwner :: Lens' VirtualGatewayRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
virtualGatewayRef_version :: Lens' VirtualGatewayRef Integer

-- | The name of the resource.
virtualGatewayRef_virtualGatewayName :: Lens' VirtualGatewayRef Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayRef.VirtualGatewayRef
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayRef.VirtualGatewayRef
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayRef.VirtualGatewayRef
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayRef.VirtualGatewayRef
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayRef.VirtualGatewayRef
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayRef.VirtualGatewayRef
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayRef.VirtualGatewayRef


module Amazonka.AppMesh.Types.VirtualGatewayStatusCode
newtype VirtualGatewayStatusCode
VirtualGatewayStatusCode' :: Text -> VirtualGatewayStatusCode
[fromVirtualGatewayStatusCode] :: VirtualGatewayStatusCode -> Text
pattern VirtualGatewayStatusCode_ACTIVE :: VirtualGatewayStatusCode
pattern VirtualGatewayStatusCode_DELETED :: VirtualGatewayStatusCode
pattern VirtualGatewayStatusCode_INACTIVE :: VirtualGatewayStatusCode
instance Amazonka.Data.XML.ToXML Amazonka.AppMesh.Types.VirtualGatewayStatusCode.VirtualGatewayStatusCode
instance Amazonka.Data.XML.FromXML Amazonka.AppMesh.Types.VirtualGatewayStatusCode.VirtualGatewayStatusCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppMesh.Types.VirtualGatewayStatusCode.VirtualGatewayStatusCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayStatusCode.VirtualGatewayStatusCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppMesh.Types.VirtualGatewayStatusCode.VirtualGatewayStatusCode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayStatusCode.VirtualGatewayStatusCode
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.Types.VirtualGatewayStatusCode.VirtualGatewayStatusCode
instance Amazonka.Data.Headers.ToHeader Amazonka.AppMesh.Types.VirtualGatewayStatusCode.VirtualGatewayStatusCode
instance Amazonka.Data.Log.ToLog Amazonka.AppMesh.Types.VirtualGatewayStatusCode.VirtualGatewayStatusCode
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppMesh.Types.VirtualGatewayStatusCode.VirtualGatewayStatusCode
instance Amazonka.Data.Text.ToText Amazonka.AppMesh.Types.VirtualGatewayStatusCode.VirtualGatewayStatusCode
instance Amazonka.Data.Text.FromText Amazonka.AppMesh.Types.VirtualGatewayStatusCode.VirtualGatewayStatusCode
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayStatusCode.VirtualGatewayStatusCode
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayStatusCode.VirtualGatewayStatusCode
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayStatusCode.VirtualGatewayStatusCode
instance GHC.Classes.Ord Amazonka.AppMesh.Types.VirtualGatewayStatusCode.VirtualGatewayStatusCode
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayStatusCode.VirtualGatewayStatusCode
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayStatusCode.VirtualGatewayStatusCode
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayStatusCode.VirtualGatewayStatusCode


module Amazonka.AppMesh.Types.VirtualGatewayStatus

-- | An object that represents the status of the mesh resource.
--   
--   <i>See:</i> <a>newVirtualGatewayStatus</a> smart constructor.
data VirtualGatewayStatus
VirtualGatewayStatus' :: VirtualGatewayStatusCode -> VirtualGatewayStatus

-- | The current status.
[$sel:status:VirtualGatewayStatus'] :: VirtualGatewayStatus -> VirtualGatewayStatusCode

-- | Create a value of <a>VirtualGatewayStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VirtualGatewayStatus'</a>,
--   <a>virtualGatewayStatus_status</a> - The current status.
newVirtualGatewayStatus :: VirtualGatewayStatusCode -> VirtualGatewayStatus

-- | The current status.
virtualGatewayStatus_status :: Lens' VirtualGatewayStatus VirtualGatewayStatusCode
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayStatus.VirtualGatewayStatus
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayStatus.VirtualGatewayStatus
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayStatus.VirtualGatewayStatus
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayStatus.VirtualGatewayStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayStatus.VirtualGatewayStatus
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayStatus.VirtualGatewayStatus
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayStatus.VirtualGatewayStatus


module Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextAcmTrust

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for an Certificate Manager certificate.
--   
--   <i>See:</i> <a>newVirtualGatewayTlsValidationContextAcmTrust</a> smart
--   constructor.
data VirtualGatewayTlsValidationContextAcmTrust
VirtualGatewayTlsValidationContextAcmTrust' :: NonEmpty Text -> VirtualGatewayTlsValidationContextAcmTrust

-- | One or more ACM Amazon Resource Name (ARN)s.
[$sel:certificateAuthorityArns:VirtualGatewayTlsValidationContextAcmTrust'] :: VirtualGatewayTlsValidationContextAcmTrust -> NonEmpty Text

-- | Create a value of <a>VirtualGatewayTlsValidationContextAcmTrust</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateAuthorityArns:VirtualGatewayTlsValidationContextAcmTrust'</a>,
--   <a>virtualGatewayTlsValidationContextAcmTrust_certificateAuthorityArns</a>
--   - One or more ACM Amazon Resource Name (ARN)s.
newVirtualGatewayTlsValidationContextAcmTrust :: NonEmpty Text -> VirtualGatewayTlsValidationContextAcmTrust

-- | One or more ACM Amazon Resource Name (ARN)s.
virtualGatewayTlsValidationContextAcmTrust_certificateAuthorityArns :: Lens' VirtualGatewayTlsValidationContextAcmTrust (NonEmpty Text)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextAcmTrust.VirtualGatewayTlsValidationContextAcmTrust
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextAcmTrust.VirtualGatewayTlsValidationContextAcmTrust
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextAcmTrust.VirtualGatewayTlsValidationContextAcmTrust
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextAcmTrust.VirtualGatewayTlsValidationContextAcmTrust
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextAcmTrust.VirtualGatewayTlsValidationContextAcmTrust
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextAcmTrust.VirtualGatewayTlsValidationContextAcmTrust
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextAcmTrust.VirtualGatewayTlsValidationContextAcmTrust
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextAcmTrust.VirtualGatewayTlsValidationContextAcmTrust


module Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextFileTrust

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
--   
--   <i>See:</i> <a>newVirtualGatewayTlsValidationContextFileTrust</a>
--   smart constructor.
data VirtualGatewayTlsValidationContextFileTrust
VirtualGatewayTlsValidationContextFileTrust' :: Text -> VirtualGatewayTlsValidationContextFileTrust

-- | The certificate trust chain for a certificate stored on the file
--   system of the virtual node that the proxy is running on.
[$sel:certificateChain:VirtualGatewayTlsValidationContextFileTrust'] :: VirtualGatewayTlsValidationContextFileTrust -> Text

-- | Create a value of <a>VirtualGatewayTlsValidationContextFileTrust</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateChain:VirtualGatewayTlsValidationContextFileTrust'</a>,
--   <a>virtualGatewayTlsValidationContextFileTrust_certificateChain</a> -
--   The certificate trust chain for a certificate stored on the file
--   system of the virtual node that the proxy is running on.
newVirtualGatewayTlsValidationContextFileTrust :: Text -> VirtualGatewayTlsValidationContextFileTrust

-- | The certificate trust chain for a certificate stored on the file
--   system of the virtual node that the proxy is running on.
virtualGatewayTlsValidationContextFileTrust_certificateChain :: Lens' VirtualGatewayTlsValidationContextFileTrust Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextFileTrust.VirtualGatewayTlsValidationContextFileTrust
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextFileTrust.VirtualGatewayTlsValidationContextFileTrust
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextFileTrust.VirtualGatewayTlsValidationContextFileTrust
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextFileTrust.VirtualGatewayTlsValidationContextFileTrust
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextFileTrust.VirtualGatewayTlsValidationContextFileTrust
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextFileTrust.VirtualGatewayTlsValidationContextFileTrust
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextFileTrust.VirtualGatewayTlsValidationContextFileTrust
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextFileTrust.VirtualGatewayTlsValidationContextFileTrust


module Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextSdsTrust

-- | An object that represents a virtual gateway's listener's Transport
--   Layer Security (TLS) Secret Discovery Service validation context
--   trust. The proxy must be configured with a local SDS provider via a
--   Unix Domain Socket. See App Mesh <a>TLS documentation</a> for more
--   info.
--   
--   <i>See:</i> <a>newVirtualGatewayTlsValidationContextSdsTrust</a> smart
--   constructor.
data VirtualGatewayTlsValidationContextSdsTrust
VirtualGatewayTlsValidationContextSdsTrust' :: Text -> VirtualGatewayTlsValidationContextSdsTrust

-- | A reference to an object that represents the name of the secret for a
--   virtual gateway's Transport Layer Security (TLS) Secret Discovery
--   Service validation context trust.
[$sel:secretName:VirtualGatewayTlsValidationContextSdsTrust'] :: VirtualGatewayTlsValidationContextSdsTrust -> Text

-- | Create a value of <a>VirtualGatewayTlsValidationContextSdsTrust</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretName:VirtualGatewayTlsValidationContextSdsTrust'</a>,
--   <a>virtualGatewayTlsValidationContextSdsTrust_secretName</a> - A
--   reference to an object that represents the name of the secret for a
--   virtual gateway's Transport Layer Security (TLS) Secret Discovery
--   Service validation context trust.
newVirtualGatewayTlsValidationContextSdsTrust :: Text -> VirtualGatewayTlsValidationContextSdsTrust

-- | A reference to an object that represents the name of the secret for a
--   virtual gateway's Transport Layer Security (TLS) Secret Discovery
--   Service validation context trust.
virtualGatewayTlsValidationContextSdsTrust_secretName :: Lens' VirtualGatewayTlsValidationContextSdsTrust Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextSdsTrust.VirtualGatewayTlsValidationContextSdsTrust
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextSdsTrust.VirtualGatewayTlsValidationContextSdsTrust
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextSdsTrust.VirtualGatewayTlsValidationContextSdsTrust
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextSdsTrust.VirtualGatewayTlsValidationContextSdsTrust
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextSdsTrust.VirtualGatewayTlsValidationContextSdsTrust
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextSdsTrust.VirtualGatewayTlsValidationContextSdsTrust
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextSdsTrust.VirtualGatewayTlsValidationContextSdsTrust
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextSdsTrust.VirtualGatewayTlsValidationContextSdsTrust


module Amazonka.AppMesh.Types.VirtualGatewayListenerTlsValidationContextTrust

-- | An object that represents a virtual gateway's listener's Transport
--   Layer Security (TLS) validation context trust.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTlsValidationContextTrust</a>
--   smart constructor.
data VirtualGatewayListenerTlsValidationContextTrust
VirtualGatewayListenerTlsValidationContextTrust' :: Maybe VirtualGatewayTlsValidationContextSdsTrust -> Maybe VirtualGatewayTlsValidationContextFileTrust -> VirtualGatewayListenerTlsValidationContextTrust

-- | A reference to an object that represents a virtual gateway's
--   listener's Transport Layer Security (TLS) Secret Discovery Service
--   validation context trust.
[$sel:sds:VirtualGatewayListenerTlsValidationContextTrust'] :: VirtualGatewayListenerTlsValidationContextTrust -> Maybe VirtualGatewayTlsValidationContextSdsTrust

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
[$sel:file:VirtualGatewayListenerTlsValidationContextTrust'] :: VirtualGatewayListenerTlsValidationContextTrust -> Maybe VirtualGatewayTlsValidationContextFileTrust

-- | Create a value of
--   <a>VirtualGatewayListenerTlsValidationContextTrust</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sds:VirtualGatewayListenerTlsValidationContextTrust'</a>,
--   <a>virtualGatewayListenerTlsValidationContextTrust_sds</a> - A
--   reference to an object that represents a virtual gateway's listener's
--   Transport Layer Security (TLS) Secret Discovery Service validation
--   context trust.
--   
--   <a>$sel:file:VirtualGatewayListenerTlsValidationContextTrust'</a>,
--   <a>virtualGatewayListenerTlsValidationContextTrust_file</a> - An
--   object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
newVirtualGatewayListenerTlsValidationContextTrust :: VirtualGatewayListenerTlsValidationContextTrust

-- | A reference to an object that represents a virtual gateway's
--   listener's Transport Layer Security (TLS) Secret Discovery Service
--   validation context trust.
virtualGatewayListenerTlsValidationContextTrust_sds :: Lens' VirtualGatewayListenerTlsValidationContextTrust (Maybe VirtualGatewayTlsValidationContextSdsTrust)

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
virtualGatewayListenerTlsValidationContextTrust_file :: Lens' VirtualGatewayListenerTlsValidationContextTrust (Maybe VirtualGatewayTlsValidationContextFileTrust)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayListenerTlsValidationContextTrust.VirtualGatewayListenerTlsValidationContextTrust
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayListenerTlsValidationContextTrust.VirtualGatewayListenerTlsValidationContextTrust
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayListenerTlsValidationContextTrust.VirtualGatewayListenerTlsValidationContextTrust
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayListenerTlsValidationContextTrust.VirtualGatewayListenerTlsValidationContextTrust
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayListenerTlsValidationContextTrust.VirtualGatewayListenerTlsValidationContextTrust
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayListenerTlsValidationContextTrust.VirtualGatewayListenerTlsValidationContextTrust
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayListenerTlsValidationContextTrust.VirtualGatewayListenerTlsValidationContextTrust
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayListenerTlsValidationContextTrust.VirtualGatewayListenerTlsValidationContextTrust


module Amazonka.AppMesh.Types.VirtualGatewayListenerTlsValidationContext

-- | An object that represents a virtual gateway's listener's Transport
--   Layer Security (TLS) validation context.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTlsValidationContext</a> smart
--   constructor.
data VirtualGatewayListenerTlsValidationContext
VirtualGatewayListenerTlsValidationContext' :: Maybe SubjectAlternativeNames -> VirtualGatewayListenerTlsValidationContextTrust -> VirtualGatewayListenerTlsValidationContext

-- | A reference to an object that represents the SANs for a virtual
--   gateway listener's Transport Layer Security (TLS) validation context.
[$sel:subjectAlternativeNames:VirtualGatewayListenerTlsValidationContext'] :: VirtualGatewayListenerTlsValidationContext -> Maybe SubjectAlternativeNames

-- | A reference to where to retrieve the trust chain when validating a
--   peer’s Transport Layer Security (TLS) certificate.
[$sel:trust:VirtualGatewayListenerTlsValidationContext'] :: VirtualGatewayListenerTlsValidationContext -> VirtualGatewayListenerTlsValidationContextTrust

-- | Create a value of <a>VirtualGatewayListenerTlsValidationContext</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:subjectAlternativeNames:VirtualGatewayListenerTlsValidationContext'</a>,
--   <a>virtualGatewayListenerTlsValidationContext_subjectAlternativeNames</a>
--   - A reference to an object that represents the SANs for a virtual
--   gateway listener's Transport Layer Security (TLS) validation context.
--   
--   <a>$sel:trust:VirtualGatewayListenerTlsValidationContext'</a>,
--   <a>virtualGatewayListenerTlsValidationContext_trust</a> - A reference
--   to where to retrieve the trust chain when validating a peer’s
--   Transport Layer Security (TLS) certificate.
newVirtualGatewayListenerTlsValidationContext :: VirtualGatewayListenerTlsValidationContextTrust -> VirtualGatewayListenerTlsValidationContext

-- | A reference to an object that represents the SANs for a virtual
--   gateway listener's Transport Layer Security (TLS) validation context.
virtualGatewayListenerTlsValidationContext_subjectAlternativeNames :: Lens' VirtualGatewayListenerTlsValidationContext (Maybe SubjectAlternativeNames)

-- | A reference to where to retrieve the trust chain when validating a
--   peer’s Transport Layer Security (TLS) certificate.
virtualGatewayListenerTlsValidationContext_trust :: Lens' VirtualGatewayListenerTlsValidationContext VirtualGatewayListenerTlsValidationContextTrust
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayListenerTlsValidationContext.VirtualGatewayListenerTlsValidationContext
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayListenerTlsValidationContext.VirtualGatewayListenerTlsValidationContext
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayListenerTlsValidationContext.VirtualGatewayListenerTlsValidationContext
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayListenerTlsValidationContext.VirtualGatewayListenerTlsValidationContext
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayListenerTlsValidationContext.VirtualGatewayListenerTlsValidationContext
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayListenerTlsValidationContext.VirtualGatewayListenerTlsValidationContext
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayListenerTlsValidationContext.VirtualGatewayListenerTlsValidationContext
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayListenerTlsValidationContext.VirtualGatewayListenerTlsValidationContext


module Amazonka.AppMesh.Types.VirtualGatewayListenerTls

-- | An object that represents the Transport Layer Security (TLS)
--   properties for a listener.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTls</a> smart constructor.
data VirtualGatewayListenerTls
VirtualGatewayListenerTls' :: Maybe VirtualGatewayListenerTlsValidationContext -> VirtualGatewayListenerTlsCertificate -> VirtualGatewayListenerTlsMode -> VirtualGatewayListenerTls

-- | A reference to an object that represents a virtual gateway's
--   listener's Transport Layer Security (TLS) validation context.
[$sel:validation:VirtualGatewayListenerTls'] :: VirtualGatewayListenerTls -> Maybe VirtualGatewayListenerTlsValidationContext

-- | An object that represents a Transport Layer Security (TLS)
--   certificate.
[$sel:certificate:VirtualGatewayListenerTls'] :: VirtualGatewayListenerTls -> VirtualGatewayListenerTlsCertificate

-- | Specify one of the following modes.
--   
--   <ul>
--   <li>____STRICT – Listener only accepts connections with TLS
--   enabled.</li>
--   <li>____PERMISSIVE – Listener accepts connections with or without TLS
--   enabled.</li>
--   <li>____DISABLED – Listener only accepts connections without TLS.</li>
--   </ul>
[$sel:mode:VirtualGatewayListenerTls'] :: VirtualGatewayListenerTls -> VirtualGatewayListenerTlsMode

-- | Create a value of <a>VirtualGatewayListenerTls</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validation:VirtualGatewayListenerTls'</a>,
--   <a>virtualGatewayListenerTls_validation</a> - A reference to an object
--   that represents a virtual gateway's listener's Transport Layer
--   Security (TLS) validation context.
--   
--   <a>$sel:certificate:VirtualGatewayListenerTls'</a>,
--   <a>virtualGatewayListenerTls_certificate</a> - An object that
--   represents a Transport Layer Security (TLS) certificate.
--   
--   <a>$sel:mode:VirtualGatewayListenerTls'</a>,
--   <a>virtualGatewayListenerTls_mode</a> - Specify one of the following
--   modes.
--   
--   <ul>
--   <li>____STRICT – Listener only accepts connections with TLS
--   enabled.</li>
--   <li>____PERMISSIVE – Listener accepts connections with or without TLS
--   enabled.</li>
--   <li>____DISABLED – Listener only accepts connections without TLS.</li>
--   </ul>
newVirtualGatewayListenerTls :: VirtualGatewayListenerTlsCertificate -> VirtualGatewayListenerTlsMode -> VirtualGatewayListenerTls

-- | A reference to an object that represents a virtual gateway's
--   listener's Transport Layer Security (TLS) validation context.
virtualGatewayListenerTls_validation :: Lens' VirtualGatewayListenerTls (Maybe VirtualGatewayListenerTlsValidationContext)

-- | An object that represents a Transport Layer Security (TLS)
--   certificate.
virtualGatewayListenerTls_certificate :: Lens' VirtualGatewayListenerTls VirtualGatewayListenerTlsCertificate

-- | Specify one of the following modes.
--   
--   <ul>
--   <li>____STRICT – Listener only accepts connections with TLS
--   enabled.</li>
--   <li>____PERMISSIVE – Listener accepts connections with or without TLS
--   enabled.</li>
--   <li>____DISABLED – Listener only accepts connections without TLS.</li>
--   </ul>
virtualGatewayListenerTls_mode :: Lens' VirtualGatewayListenerTls VirtualGatewayListenerTlsMode
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayListenerTls.VirtualGatewayListenerTls
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayListenerTls.VirtualGatewayListenerTls
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayListenerTls.VirtualGatewayListenerTls
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayListenerTls.VirtualGatewayListenerTls
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayListenerTls.VirtualGatewayListenerTls
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayListenerTls.VirtualGatewayListenerTls
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayListenerTls.VirtualGatewayListenerTls
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayListenerTls.VirtualGatewayListenerTls


module Amazonka.AppMesh.Types.VirtualGatewayListener

-- | An object that represents a listener for a virtual gateway.
--   
--   <i>See:</i> <a>newVirtualGatewayListener</a> smart constructor.
data VirtualGatewayListener
VirtualGatewayListener' :: Maybe VirtualGatewayHealthCheckPolicy -> Maybe VirtualGatewayConnectionPool -> Maybe VirtualGatewayListenerTls -> VirtualGatewayPortMapping -> VirtualGatewayListener

-- | The health check information for the listener.
[$sel:healthCheck:VirtualGatewayListener'] :: VirtualGatewayListener -> Maybe VirtualGatewayHealthCheckPolicy

-- | The connection pool information for the virtual gateway listener.
[$sel:connectionPool:VirtualGatewayListener'] :: VirtualGatewayListener -> Maybe VirtualGatewayConnectionPool

-- | A reference to an object that represents the Transport Layer Security
--   (TLS) properties for the listener.
[$sel:tls:VirtualGatewayListener'] :: VirtualGatewayListener -> Maybe VirtualGatewayListenerTls

-- | The port mapping information for the listener.
[$sel:portMapping:VirtualGatewayListener'] :: VirtualGatewayListener -> VirtualGatewayPortMapping

-- | Create a value of <a>VirtualGatewayListener</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthCheck:VirtualGatewayListener'</a>,
--   <a>virtualGatewayListener_healthCheck</a> - The health check
--   information for the listener.
--   
--   <a>$sel:connectionPool:VirtualGatewayListener'</a>,
--   <a>virtualGatewayListener_connectionPool</a> - The connection pool
--   information for the virtual gateway listener.
--   
--   <a>$sel:tls:VirtualGatewayListener'</a>,
--   <a>virtualGatewayListener_tls</a> - A reference to an object that
--   represents the Transport Layer Security (TLS) properties for the
--   listener.
--   
--   <a>$sel:portMapping:VirtualGatewayListener'</a>,
--   <a>virtualGatewayListener_portMapping</a> - The port mapping
--   information for the listener.
newVirtualGatewayListener :: VirtualGatewayPortMapping -> VirtualGatewayListener

-- | The health check information for the listener.
virtualGatewayListener_healthCheck :: Lens' VirtualGatewayListener (Maybe VirtualGatewayHealthCheckPolicy)

-- | The connection pool information for the virtual gateway listener.
virtualGatewayListener_connectionPool :: Lens' VirtualGatewayListener (Maybe VirtualGatewayConnectionPool)

-- | A reference to an object that represents the Transport Layer Security
--   (TLS) properties for the listener.
virtualGatewayListener_tls :: Lens' VirtualGatewayListener (Maybe VirtualGatewayListenerTls)

-- | The port mapping information for the listener.
virtualGatewayListener_portMapping :: Lens' VirtualGatewayListener VirtualGatewayPortMapping
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayListener.VirtualGatewayListener
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayListener.VirtualGatewayListener
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayListener.VirtualGatewayListener
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayListener.VirtualGatewayListener
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayListener.VirtualGatewayListener
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayListener.VirtualGatewayListener
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayListener.VirtualGatewayListener
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayListener.VirtualGatewayListener


module Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextTrust

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust.
--   
--   <i>See:</i> <a>newVirtualGatewayTlsValidationContextTrust</a> smart
--   constructor.
data VirtualGatewayTlsValidationContextTrust
VirtualGatewayTlsValidationContextTrust' :: Maybe VirtualGatewayTlsValidationContextAcmTrust -> Maybe VirtualGatewayTlsValidationContextSdsTrust -> Maybe VirtualGatewayTlsValidationContextFileTrust -> VirtualGatewayTlsValidationContextTrust

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) validation context trust for an Certificate Manager certificate.
[$sel:acm:VirtualGatewayTlsValidationContextTrust'] :: VirtualGatewayTlsValidationContextTrust -> Maybe VirtualGatewayTlsValidationContextAcmTrust

-- | A reference to an object that represents a virtual gateway's Transport
--   Layer Security (TLS) Secret Discovery Service validation context
--   trust.
[$sel:sds:VirtualGatewayTlsValidationContextTrust'] :: VirtualGatewayTlsValidationContextTrust -> Maybe VirtualGatewayTlsValidationContextSdsTrust

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
[$sel:file:VirtualGatewayTlsValidationContextTrust'] :: VirtualGatewayTlsValidationContextTrust -> Maybe VirtualGatewayTlsValidationContextFileTrust

-- | Create a value of <a>VirtualGatewayTlsValidationContextTrust</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acm:VirtualGatewayTlsValidationContextTrust'</a>,
--   <a>virtualGatewayTlsValidationContextTrust_acm</a> - A reference to an
--   object that represents a Transport Layer Security (TLS) validation
--   context trust for an Certificate Manager certificate.
--   
--   <a>$sel:sds:VirtualGatewayTlsValidationContextTrust'</a>,
--   <a>virtualGatewayTlsValidationContextTrust_sds</a> - A reference to an
--   object that represents a virtual gateway's Transport Layer Security
--   (TLS) Secret Discovery Service validation context trust.
--   
--   <a>$sel:file:VirtualGatewayTlsValidationContextTrust'</a>,
--   <a>virtualGatewayTlsValidationContextTrust_file</a> - An object that
--   represents a Transport Layer Security (TLS) validation context trust
--   for a local file.
newVirtualGatewayTlsValidationContextTrust :: VirtualGatewayTlsValidationContextTrust

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) validation context trust for an Certificate Manager certificate.
virtualGatewayTlsValidationContextTrust_acm :: Lens' VirtualGatewayTlsValidationContextTrust (Maybe VirtualGatewayTlsValidationContextAcmTrust)

-- | A reference to an object that represents a virtual gateway's Transport
--   Layer Security (TLS) Secret Discovery Service validation context
--   trust.
virtualGatewayTlsValidationContextTrust_sds :: Lens' VirtualGatewayTlsValidationContextTrust (Maybe VirtualGatewayTlsValidationContextSdsTrust)

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
virtualGatewayTlsValidationContextTrust_file :: Lens' VirtualGatewayTlsValidationContextTrust (Maybe VirtualGatewayTlsValidationContextFileTrust)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextTrust.VirtualGatewayTlsValidationContextTrust
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextTrust.VirtualGatewayTlsValidationContextTrust
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextTrust.VirtualGatewayTlsValidationContextTrust
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextTrust.VirtualGatewayTlsValidationContextTrust
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextTrust.VirtualGatewayTlsValidationContextTrust
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextTrust.VirtualGatewayTlsValidationContextTrust
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextTrust.VirtualGatewayTlsValidationContextTrust
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContextTrust.VirtualGatewayTlsValidationContextTrust


module Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContext

-- | An object that represents a Transport Layer Security (TLS) validation
--   context.
--   
--   <i>See:</i> <a>newVirtualGatewayTlsValidationContext</a> smart
--   constructor.
data VirtualGatewayTlsValidationContext
VirtualGatewayTlsValidationContext' :: Maybe SubjectAlternativeNames -> VirtualGatewayTlsValidationContextTrust -> VirtualGatewayTlsValidationContext

-- | A reference to an object that represents the SANs for a virtual
--   gateway's listener's Transport Layer Security (TLS) validation
--   context.
[$sel:subjectAlternativeNames:VirtualGatewayTlsValidationContext'] :: VirtualGatewayTlsValidationContext -> Maybe SubjectAlternativeNames

-- | A reference to where to retrieve the trust chain when validating a
--   peer’s Transport Layer Security (TLS) certificate.
[$sel:trust:VirtualGatewayTlsValidationContext'] :: VirtualGatewayTlsValidationContext -> VirtualGatewayTlsValidationContextTrust

-- | Create a value of <a>VirtualGatewayTlsValidationContext</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:subjectAlternativeNames:VirtualGatewayTlsValidationContext'</a>,
--   <a>virtualGatewayTlsValidationContext_subjectAlternativeNames</a> - A
--   reference to an object that represents the SANs for a virtual
--   gateway's listener's Transport Layer Security (TLS) validation
--   context.
--   
--   <a>$sel:trust:VirtualGatewayTlsValidationContext'</a>,
--   <a>virtualGatewayTlsValidationContext_trust</a> - A reference to where
--   to retrieve the trust chain when validating a peer’s Transport Layer
--   Security (TLS) certificate.
newVirtualGatewayTlsValidationContext :: VirtualGatewayTlsValidationContextTrust -> VirtualGatewayTlsValidationContext

-- | A reference to an object that represents the SANs for a virtual
--   gateway's listener's Transport Layer Security (TLS) validation
--   context.
virtualGatewayTlsValidationContext_subjectAlternativeNames :: Lens' VirtualGatewayTlsValidationContext (Maybe SubjectAlternativeNames)

-- | A reference to where to retrieve the trust chain when validating a
--   peer’s Transport Layer Security (TLS) certificate.
virtualGatewayTlsValidationContext_trust :: Lens' VirtualGatewayTlsValidationContext VirtualGatewayTlsValidationContextTrust
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContext.VirtualGatewayTlsValidationContext
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContext.VirtualGatewayTlsValidationContext
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContext.VirtualGatewayTlsValidationContext
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContext.VirtualGatewayTlsValidationContext
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContext.VirtualGatewayTlsValidationContext
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContext.VirtualGatewayTlsValidationContext
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContext.VirtualGatewayTlsValidationContext
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayTlsValidationContext.VirtualGatewayTlsValidationContext


module Amazonka.AppMesh.Types.VirtualGatewayClientPolicyTls

-- | An object that represents a Transport Layer Security (TLS) client
--   policy.
--   
--   <i>See:</i> <a>newVirtualGatewayClientPolicyTls</a> smart constructor.
data VirtualGatewayClientPolicyTls
VirtualGatewayClientPolicyTls' :: Maybe [Natural] -> Maybe VirtualGatewayClientTlsCertificate -> Maybe Bool -> VirtualGatewayTlsValidationContext -> VirtualGatewayClientPolicyTls

-- | One or more ports that the policy is enforced for.
[$sel:ports:VirtualGatewayClientPolicyTls'] :: VirtualGatewayClientPolicyTls -> Maybe [Natural]

-- | A reference to an object that represents a virtual gateway's client's
--   Transport Layer Security (TLS) certificate.
[$sel:certificate:VirtualGatewayClientPolicyTls'] :: VirtualGatewayClientPolicyTls -> Maybe VirtualGatewayClientTlsCertificate

-- | Whether the policy is enforced. The default is <tt>True</tt>, if a
--   value isn't specified.
[$sel:enforce:VirtualGatewayClientPolicyTls'] :: VirtualGatewayClientPolicyTls -> Maybe Bool

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) validation context.
[$sel:validation:VirtualGatewayClientPolicyTls'] :: VirtualGatewayClientPolicyTls -> VirtualGatewayTlsValidationContext

-- | Create a value of <a>VirtualGatewayClientPolicyTls</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ports:VirtualGatewayClientPolicyTls'</a>,
--   <a>virtualGatewayClientPolicyTls_ports</a> - One or more ports that
--   the policy is enforced for.
--   
--   <a>$sel:certificate:VirtualGatewayClientPolicyTls'</a>,
--   <a>virtualGatewayClientPolicyTls_certificate</a> - A reference to an
--   object that represents a virtual gateway's client's Transport Layer
--   Security (TLS) certificate.
--   
--   <a>$sel:enforce:VirtualGatewayClientPolicyTls'</a>,
--   <a>virtualGatewayClientPolicyTls_enforce</a> - Whether the policy is
--   enforced. The default is <tt>True</tt>, if a value isn't specified.
--   
--   <a>$sel:validation:VirtualGatewayClientPolicyTls'</a>,
--   <a>virtualGatewayClientPolicyTls_validation</a> - A reference to an
--   object that represents a Transport Layer Security (TLS) validation
--   context.
newVirtualGatewayClientPolicyTls :: VirtualGatewayTlsValidationContext -> VirtualGatewayClientPolicyTls

-- | One or more ports that the policy is enforced for.
virtualGatewayClientPolicyTls_ports :: Lens' VirtualGatewayClientPolicyTls (Maybe [Natural])

-- | A reference to an object that represents a virtual gateway's client's
--   Transport Layer Security (TLS) certificate.
virtualGatewayClientPolicyTls_certificate :: Lens' VirtualGatewayClientPolicyTls (Maybe VirtualGatewayClientTlsCertificate)

-- | Whether the policy is enforced. The default is <tt>True</tt>, if a
--   value isn't specified.
virtualGatewayClientPolicyTls_enforce :: Lens' VirtualGatewayClientPolicyTls (Maybe Bool)

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) validation context.
virtualGatewayClientPolicyTls_validation :: Lens' VirtualGatewayClientPolicyTls VirtualGatewayTlsValidationContext
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayClientPolicyTls.VirtualGatewayClientPolicyTls
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayClientPolicyTls.VirtualGatewayClientPolicyTls
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayClientPolicyTls.VirtualGatewayClientPolicyTls
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayClientPolicyTls.VirtualGatewayClientPolicyTls
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayClientPolicyTls.VirtualGatewayClientPolicyTls
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayClientPolicyTls.VirtualGatewayClientPolicyTls
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayClientPolicyTls.VirtualGatewayClientPolicyTls
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayClientPolicyTls.VirtualGatewayClientPolicyTls


module Amazonka.AppMesh.Types.VirtualGatewayClientPolicy

-- | An object that represents a client policy.
--   
--   <i>See:</i> <a>newVirtualGatewayClientPolicy</a> smart constructor.
data VirtualGatewayClientPolicy
VirtualGatewayClientPolicy' :: Maybe VirtualGatewayClientPolicyTls -> VirtualGatewayClientPolicy

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) client policy.
[$sel:tls:VirtualGatewayClientPolicy'] :: VirtualGatewayClientPolicy -> Maybe VirtualGatewayClientPolicyTls

-- | Create a value of <a>VirtualGatewayClientPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tls:VirtualGatewayClientPolicy'</a>,
--   <a>virtualGatewayClientPolicy_tls</a> - A reference to an object that
--   represents a Transport Layer Security (TLS) client policy.
newVirtualGatewayClientPolicy :: VirtualGatewayClientPolicy

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) client policy.
virtualGatewayClientPolicy_tls :: Lens' VirtualGatewayClientPolicy (Maybe VirtualGatewayClientPolicyTls)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayClientPolicy.VirtualGatewayClientPolicy
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayClientPolicy.VirtualGatewayClientPolicy
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayClientPolicy.VirtualGatewayClientPolicy
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayClientPolicy.VirtualGatewayClientPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayClientPolicy.VirtualGatewayClientPolicy
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayClientPolicy.VirtualGatewayClientPolicy
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayClientPolicy.VirtualGatewayClientPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayClientPolicy.VirtualGatewayClientPolicy


module Amazonka.AppMesh.Types.VirtualGatewayBackendDefaults

-- | An object that represents the default properties for a backend.
--   
--   <i>See:</i> <a>newVirtualGatewayBackendDefaults</a> smart constructor.
data VirtualGatewayBackendDefaults
VirtualGatewayBackendDefaults' :: Maybe VirtualGatewayClientPolicy -> VirtualGatewayBackendDefaults

-- | A reference to an object that represents a client policy.
[$sel:clientPolicy:VirtualGatewayBackendDefaults'] :: VirtualGatewayBackendDefaults -> Maybe VirtualGatewayClientPolicy

-- | Create a value of <a>VirtualGatewayBackendDefaults</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientPolicy:VirtualGatewayBackendDefaults'</a>,
--   <a>virtualGatewayBackendDefaults_clientPolicy</a> - A reference to an
--   object that represents a client policy.
newVirtualGatewayBackendDefaults :: VirtualGatewayBackendDefaults

-- | A reference to an object that represents a client policy.
virtualGatewayBackendDefaults_clientPolicy :: Lens' VirtualGatewayBackendDefaults (Maybe VirtualGatewayClientPolicy)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayBackendDefaults.VirtualGatewayBackendDefaults
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayBackendDefaults.VirtualGatewayBackendDefaults
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayBackendDefaults.VirtualGatewayBackendDefaults
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayBackendDefaults.VirtualGatewayBackendDefaults
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayBackendDefaults.VirtualGatewayBackendDefaults
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayBackendDefaults.VirtualGatewayBackendDefaults
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayBackendDefaults.VirtualGatewayBackendDefaults
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewayBackendDefaults.VirtualGatewayBackendDefaults


module Amazonka.AppMesh.Types.VirtualGatewaySpec

-- | An object that represents the specification of a service mesh
--   resource.
--   
--   <i>See:</i> <a>newVirtualGatewaySpec</a> smart constructor.
data VirtualGatewaySpec
VirtualGatewaySpec' :: Maybe VirtualGatewayBackendDefaults -> Maybe VirtualGatewayLogging -> [VirtualGatewayListener] -> VirtualGatewaySpec

-- | A reference to an object that represents the defaults for backends.
[$sel:backendDefaults:VirtualGatewaySpec'] :: VirtualGatewaySpec -> Maybe VirtualGatewayBackendDefaults
[$sel:logging:VirtualGatewaySpec'] :: VirtualGatewaySpec -> Maybe VirtualGatewayLogging

-- | The listeners that the mesh endpoint is expected to receive inbound
--   traffic from. You can specify one listener.
[$sel:listeners:VirtualGatewaySpec'] :: VirtualGatewaySpec -> [VirtualGatewayListener]

-- | Create a value of <a>VirtualGatewaySpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backendDefaults:VirtualGatewaySpec'</a>,
--   <a>virtualGatewaySpec_backendDefaults</a> - A reference to an object
--   that represents the defaults for backends.
--   
--   <a>$sel:logging:VirtualGatewaySpec'</a>,
--   <a>virtualGatewaySpec_logging</a> - Undocumented member.
--   
--   <a>$sel:listeners:VirtualGatewaySpec'</a>,
--   <a>virtualGatewaySpec_listeners</a> - The listeners that the mesh
--   endpoint is expected to receive inbound traffic from. You can specify
--   one listener.
newVirtualGatewaySpec :: VirtualGatewaySpec

-- | A reference to an object that represents the defaults for backends.
virtualGatewaySpec_backendDefaults :: Lens' VirtualGatewaySpec (Maybe VirtualGatewayBackendDefaults)

-- | Undocumented member.
virtualGatewaySpec_logging :: Lens' VirtualGatewaySpec (Maybe VirtualGatewayLogging)

-- | The listeners that the mesh endpoint is expected to receive inbound
--   traffic from. You can specify one listener.
virtualGatewaySpec_listeners :: Lens' VirtualGatewaySpec [VirtualGatewayListener]
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewaySpec.VirtualGatewaySpec
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewaySpec.VirtualGatewaySpec
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewaySpec.VirtualGatewaySpec
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewaySpec.VirtualGatewaySpec
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewaySpec.VirtualGatewaySpec
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewaySpec.VirtualGatewaySpec
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewaySpec.VirtualGatewaySpec
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualGatewaySpec.VirtualGatewaySpec


module Amazonka.AppMesh.Types.VirtualGatewayData

-- | An object that represents a virtual gateway returned by a describe
--   operation.
--   
--   <i>See:</i> <a>newVirtualGatewayData</a> smart constructor.
data VirtualGatewayData
VirtualGatewayData' :: Text -> ResourceMetadata -> VirtualGatewaySpec -> VirtualGatewayStatus -> Text -> VirtualGatewayData

-- | The name of the service mesh that the virtual gateway resides in.
[$sel:meshName:VirtualGatewayData'] :: VirtualGatewayData -> Text
[$sel:metadata:VirtualGatewayData'] :: VirtualGatewayData -> ResourceMetadata

-- | The specifications of the virtual gateway.
[$sel:spec:VirtualGatewayData'] :: VirtualGatewayData -> VirtualGatewaySpec

-- | The current status of the virtual gateway.
[$sel:status:VirtualGatewayData'] :: VirtualGatewayData -> VirtualGatewayStatus

-- | The name of the virtual gateway.
[$sel:virtualGatewayName:VirtualGatewayData'] :: VirtualGatewayData -> Text

-- | Create a value of <a>VirtualGatewayData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshName:VirtualGatewayData'</a>,
--   <a>virtualGatewayData_meshName</a> - The name of the service mesh that
--   the virtual gateway resides in.
--   
--   <a>$sel:metadata:VirtualGatewayData'</a>,
--   <a>virtualGatewayData_metadata</a> - Undocumented member.
--   
--   <a>$sel:spec:VirtualGatewayData'</a>, <a>virtualGatewayData_spec</a> -
--   The specifications of the virtual gateway.
--   
--   <a>$sel:status:VirtualGatewayData'</a>,
--   <a>virtualGatewayData_status</a> - The current status of the virtual
--   gateway.
--   
--   <a>$sel:virtualGatewayName:VirtualGatewayData'</a>,
--   <a>virtualGatewayData_virtualGatewayName</a> - The name of the virtual
--   gateway.
newVirtualGatewayData :: Text -> ResourceMetadata -> VirtualGatewaySpec -> VirtualGatewayStatus -> Text -> VirtualGatewayData

-- | The name of the service mesh that the virtual gateway resides in.
virtualGatewayData_meshName :: Lens' VirtualGatewayData Text

-- | Undocumented member.
virtualGatewayData_metadata :: Lens' VirtualGatewayData ResourceMetadata

-- | The specifications of the virtual gateway.
virtualGatewayData_spec :: Lens' VirtualGatewayData VirtualGatewaySpec

-- | The current status of the virtual gateway.
virtualGatewayData_status :: Lens' VirtualGatewayData VirtualGatewayStatus

-- | The name of the virtual gateway.
virtualGatewayData_virtualGatewayName :: Lens' VirtualGatewayData Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualGatewayData.VirtualGatewayData
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualGatewayData.VirtualGatewayData
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualGatewayData.VirtualGatewayData
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualGatewayData.VirtualGatewayData
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualGatewayData.VirtualGatewayData
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualGatewayData.VirtualGatewayData
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualGatewayData.VirtualGatewayData


module Amazonka.AppMesh.Types.VirtualNodeGrpcConnectionPool

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualNodeGrpcConnectionPool</a> smart constructor.
data VirtualNodeGrpcConnectionPool
VirtualNodeGrpcConnectionPool' :: Natural -> VirtualNodeGrpcConnectionPool

-- | Maximum number of inflight requests Envoy can concurrently support
--   across hosts in upstream cluster.
[$sel:maxRequests:VirtualNodeGrpcConnectionPool'] :: VirtualNodeGrpcConnectionPool -> Natural

-- | Create a value of <a>VirtualNodeGrpcConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxRequests:VirtualNodeGrpcConnectionPool'</a>,
--   <a>virtualNodeGrpcConnectionPool_maxRequests</a> - Maximum number of
--   inflight requests Envoy can concurrently support across hosts in
--   upstream cluster.
newVirtualNodeGrpcConnectionPool :: Natural -> VirtualNodeGrpcConnectionPool

-- | Maximum number of inflight requests Envoy can concurrently support
--   across hosts in upstream cluster.
virtualNodeGrpcConnectionPool_maxRequests :: Lens' VirtualNodeGrpcConnectionPool Natural
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualNodeGrpcConnectionPool.VirtualNodeGrpcConnectionPool
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualNodeGrpcConnectionPool.VirtualNodeGrpcConnectionPool
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualNodeGrpcConnectionPool.VirtualNodeGrpcConnectionPool
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualNodeGrpcConnectionPool.VirtualNodeGrpcConnectionPool
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualNodeGrpcConnectionPool.VirtualNodeGrpcConnectionPool
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualNodeGrpcConnectionPool.VirtualNodeGrpcConnectionPool
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualNodeGrpcConnectionPool.VirtualNodeGrpcConnectionPool
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualNodeGrpcConnectionPool.VirtualNodeGrpcConnectionPool


module Amazonka.AppMesh.Types.VirtualNodeHttp2ConnectionPool

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualNodeHttp2ConnectionPool</a> smart
--   constructor.
data VirtualNodeHttp2ConnectionPool
VirtualNodeHttp2ConnectionPool' :: Natural -> VirtualNodeHttp2ConnectionPool

-- | Maximum number of inflight requests Envoy can concurrently support
--   across hosts in upstream cluster.
[$sel:maxRequests:VirtualNodeHttp2ConnectionPool'] :: VirtualNodeHttp2ConnectionPool -> Natural

-- | Create a value of <a>VirtualNodeHttp2ConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxRequests:VirtualNodeHttp2ConnectionPool'</a>,
--   <a>virtualNodeHttp2ConnectionPool_maxRequests</a> - Maximum number of
--   inflight requests Envoy can concurrently support across hosts in
--   upstream cluster.
newVirtualNodeHttp2ConnectionPool :: Natural -> VirtualNodeHttp2ConnectionPool

-- | Maximum number of inflight requests Envoy can concurrently support
--   across hosts in upstream cluster.
virtualNodeHttp2ConnectionPool_maxRequests :: Lens' VirtualNodeHttp2ConnectionPool Natural
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualNodeHttp2ConnectionPool.VirtualNodeHttp2ConnectionPool
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualNodeHttp2ConnectionPool.VirtualNodeHttp2ConnectionPool
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualNodeHttp2ConnectionPool.VirtualNodeHttp2ConnectionPool
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualNodeHttp2ConnectionPool.VirtualNodeHttp2ConnectionPool
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualNodeHttp2ConnectionPool.VirtualNodeHttp2ConnectionPool
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualNodeHttp2ConnectionPool.VirtualNodeHttp2ConnectionPool
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualNodeHttp2ConnectionPool.VirtualNodeHttp2ConnectionPool
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualNodeHttp2ConnectionPool.VirtualNodeHttp2ConnectionPool


module Amazonka.AppMesh.Types.VirtualNodeHttpConnectionPool

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualNodeHttpConnectionPool</a> smart constructor.
data VirtualNodeHttpConnectionPool
VirtualNodeHttpConnectionPool' :: Maybe Natural -> Natural -> VirtualNodeHttpConnectionPool

-- | Number of overflowing requests after <tt>max_connections</tt> Envoy
--   will queue to upstream cluster.
[$sel:maxPendingRequests:VirtualNodeHttpConnectionPool'] :: VirtualNodeHttpConnectionPool -> Maybe Natural

-- | Maximum number of outbound TCP connections Envoy can establish
--   concurrently with all hosts in upstream cluster.
[$sel:maxConnections:VirtualNodeHttpConnectionPool'] :: VirtualNodeHttpConnectionPool -> Natural

-- | Create a value of <a>VirtualNodeHttpConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxPendingRequests:VirtualNodeHttpConnectionPool'</a>,
--   <a>virtualNodeHttpConnectionPool_maxPendingRequests</a> - Number of
--   overflowing requests after <tt>max_connections</tt> Envoy will queue
--   to upstream cluster.
--   
--   <a>$sel:maxConnections:VirtualNodeHttpConnectionPool'</a>,
--   <a>virtualNodeHttpConnectionPool_maxConnections</a> - Maximum number
--   of outbound TCP connections Envoy can establish concurrently with all
--   hosts in upstream cluster.
newVirtualNodeHttpConnectionPool :: Natural -> VirtualNodeHttpConnectionPool

-- | Number of overflowing requests after <tt>max_connections</tt> Envoy
--   will queue to upstream cluster.
virtualNodeHttpConnectionPool_maxPendingRequests :: Lens' VirtualNodeHttpConnectionPool (Maybe Natural)

-- | Maximum number of outbound TCP connections Envoy can establish
--   concurrently with all hosts in upstream cluster.
virtualNodeHttpConnectionPool_maxConnections :: Lens' VirtualNodeHttpConnectionPool Natural
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualNodeHttpConnectionPool.VirtualNodeHttpConnectionPool
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualNodeHttpConnectionPool.VirtualNodeHttpConnectionPool
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualNodeHttpConnectionPool.VirtualNodeHttpConnectionPool
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualNodeHttpConnectionPool.VirtualNodeHttpConnectionPool
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualNodeHttpConnectionPool.VirtualNodeHttpConnectionPool
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualNodeHttpConnectionPool.VirtualNodeHttpConnectionPool
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualNodeHttpConnectionPool.VirtualNodeHttpConnectionPool
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualNodeHttpConnectionPool.VirtualNodeHttpConnectionPool


module Amazonka.AppMesh.Types.VirtualNodeRef

-- | An object that represents a virtual node returned by a list operation.
--   
--   <i>See:</i> <a>newVirtualNodeRef</a> smart constructor.
data VirtualNodeRef
VirtualNodeRef' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Integer -> Text -> VirtualNodeRef

-- | The full Amazon Resource Name (ARN) for the virtual node.
[$sel:arn:VirtualNodeRef'] :: VirtualNodeRef -> Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:VirtualNodeRef'] :: VirtualNodeRef -> POSIX

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
[$sel:lastUpdatedAt:VirtualNodeRef'] :: VirtualNodeRef -> POSIX

-- | The name of the service mesh that the virtual node resides in.
[$sel:meshName:VirtualNodeRef'] :: VirtualNodeRef -> Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:VirtualNodeRef'] :: VirtualNodeRef -> Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
[$sel:resourceOwner:VirtualNodeRef'] :: VirtualNodeRef -> Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
[$sel:version:VirtualNodeRef'] :: VirtualNodeRef -> Integer

-- | The name of the virtual node.
[$sel:virtualNodeName:VirtualNodeRef'] :: VirtualNodeRef -> Text

-- | Create a value of <a>VirtualNodeRef</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:VirtualNodeRef'</a>, <a>virtualNodeRef_arn</a> - The full
--   Amazon Resource Name (ARN) for the virtual node.
--   
--   <a>$sel:createdAt:VirtualNodeRef'</a>, <a>virtualNodeRef_createdAt</a>
--   - The Unix epoch timestamp in seconds for when the resource was
--   created.
--   
--   <a>$sel:lastUpdatedAt:VirtualNodeRef'</a>,
--   <a>virtualNodeRef_lastUpdatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was last updated.
--   
--   <a>$sel:meshName:VirtualNodeRef'</a>, <a>virtualNodeRef_meshName</a> -
--   The name of the service mesh that the virtual node resides in.
--   
--   <a>$sel:meshOwner:VirtualNodeRef'</a>, <a>virtualNodeRef_meshOwner</a>
--   - The AWS IAM account ID of the service mesh owner. If the account ID
--   is not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:VirtualNodeRef'</a>,
--   <a>virtualNodeRef_resourceOwner</a> - The AWS IAM account ID of the
--   resource owner. If the account ID is not your own, then it's the ID of
--   the mesh owner or of another account that the mesh is shared with. For
--   more information about mesh sharing, see <a>Working with shared
--   meshes</a>.
--   
--   <a>$sel:version:VirtualNodeRef'</a>, <a>virtualNodeRef_version</a> -
--   The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
--   
--   <a>$sel:virtualNodeName:VirtualNodeRef'</a>,
--   <a>virtualNodeRef_virtualNodeName</a> - The name of the virtual node.
newVirtualNodeRef :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Integer -> Text -> VirtualNodeRef

-- | The full Amazon Resource Name (ARN) for the virtual node.
virtualNodeRef_arn :: Lens' VirtualNodeRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
virtualNodeRef_createdAt :: Lens' VirtualNodeRef UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
virtualNodeRef_lastUpdatedAt :: Lens' VirtualNodeRef UTCTime

-- | The name of the service mesh that the virtual node resides in.
virtualNodeRef_meshName :: Lens' VirtualNodeRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
virtualNodeRef_meshOwner :: Lens' VirtualNodeRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
virtualNodeRef_resourceOwner :: Lens' VirtualNodeRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
virtualNodeRef_version :: Lens' VirtualNodeRef Integer

-- | The name of the virtual node.
virtualNodeRef_virtualNodeName :: Lens' VirtualNodeRef Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualNodeRef.VirtualNodeRef
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualNodeRef.VirtualNodeRef
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualNodeRef.VirtualNodeRef
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualNodeRef.VirtualNodeRef
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualNodeRef.VirtualNodeRef
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualNodeRef.VirtualNodeRef
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualNodeRef.VirtualNodeRef


module Amazonka.AppMesh.Types.VirtualNodeServiceProvider

-- | An object that represents a virtual node service provider.
--   
--   <i>See:</i> <a>newVirtualNodeServiceProvider</a> smart constructor.
data VirtualNodeServiceProvider
VirtualNodeServiceProvider' :: Text -> VirtualNodeServiceProvider

-- | The name of the virtual node that is acting as a service provider.
[$sel:virtualNodeName:VirtualNodeServiceProvider'] :: VirtualNodeServiceProvider -> Text

-- | Create a value of <a>VirtualNodeServiceProvider</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualNodeName:VirtualNodeServiceProvider'</a>,
--   <a>virtualNodeServiceProvider_virtualNodeName</a> - The name of the
--   virtual node that is acting as a service provider.
newVirtualNodeServiceProvider :: Text -> VirtualNodeServiceProvider

-- | The name of the virtual node that is acting as a service provider.
virtualNodeServiceProvider_virtualNodeName :: Lens' VirtualNodeServiceProvider Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualNodeServiceProvider.VirtualNodeServiceProvider
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualNodeServiceProvider.VirtualNodeServiceProvider
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualNodeServiceProvider.VirtualNodeServiceProvider
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualNodeServiceProvider.VirtualNodeServiceProvider
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualNodeServiceProvider.VirtualNodeServiceProvider
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualNodeServiceProvider.VirtualNodeServiceProvider
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualNodeServiceProvider.VirtualNodeServiceProvider
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualNodeServiceProvider.VirtualNodeServiceProvider


module Amazonka.AppMesh.Types.VirtualNodeStatusCode
newtype VirtualNodeStatusCode
VirtualNodeStatusCode' :: Text -> VirtualNodeStatusCode
[fromVirtualNodeStatusCode] :: VirtualNodeStatusCode -> Text
pattern VirtualNodeStatusCode_ACTIVE :: VirtualNodeStatusCode
pattern VirtualNodeStatusCode_DELETED :: VirtualNodeStatusCode
pattern VirtualNodeStatusCode_INACTIVE :: VirtualNodeStatusCode
instance Amazonka.Data.XML.ToXML Amazonka.AppMesh.Types.VirtualNodeStatusCode.VirtualNodeStatusCode
instance Amazonka.Data.XML.FromXML Amazonka.AppMesh.Types.VirtualNodeStatusCode.VirtualNodeStatusCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppMesh.Types.VirtualNodeStatusCode.VirtualNodeStatusCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualNodeStatusCode.VirtualNodeStatusCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppMesh.Types.VirtualNodeStatusCode.VirtualNodeStatusCode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualNodeStatusCode.VirtualNodeStatusCode
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.Types.VirtualNodeStatusCode.VirtualNodeStatusCode
instance Amazonka.Data.Headers.ToHeader Amazonka.AppMesh.Types.VirtualNodeStatusCode.VirtualNodeStatusCode
instance Amazonka.Data.Log.ToLog Amazonka.AppMesh.Types.VirtualNodeStatusCode.VirtualNodeStatusCode
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppMesh.Types.VirtualNodeStatusCode.VirtualNodeStatusCode
instance Amazonka.Data.Text.ToText Amazonka.AppMesh.Types.VirtualNodeStatusCode.VirtualNodeStatusCode
instance Amazonka.Data.Text.FromText Amazonka.AppMesh.Types.VirtualNodeStatusCode.VirtualNodeStatusCode
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualNodeStatusCode.VirtualNodeStatusCode
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualNodeStatusCode.VirtualNodeStatusCode
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualNodeStatusCode.VirtualNodeStatusCode
instance GHC.Classes.Ord Amazonka.AppMesh.Types.VirtualNodeStatusCode.VirtualNodeStatusCode
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualNodeStatusCode.VirtualNodeStatusCode
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualNodeStatusCode.VirtualNodeStatusCode
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualNodeStatusCode.VirtualNodeStatusCode


module Amazonka.AppMesh.Types.VirtualNodeStatus

-- | An object that represents the current status of the virtual node.
--   
--   <i>See:</i> <a>newVirtualNodeStatus</a> smart constructor.
data VirtualNodeStatus
VirtualNodeStatus' :: VirtualNodeStatusCode -> VirtualNodeStatus

-- | The current status of the virtual node.
[$sel:status:VirtualNodeStatus'] :: VirtualNodeStatus -> VirtualNodeStatusCode

-- | Create a value of <a>VirtualNodeStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VirtualNodeStatus'</a>, <a>virtualNodeStatus_status</a>
--   - The current status of the virtual node.
newVirtualNodeStatus :: VirtualNodeStatusCode -> VirtualNodeStatus

-- | The current status of the virtual node.
virtualNodeStatus_status :: Lens' VirtualNodeStatus VirtualNodeStatusCode
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualNodeStatus.VirtualNodeStatus
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualNodeStatus.VirtualNodeStatus
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualNodeStatus.VirtualNodeStatus
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualNodeStatus.VirtualNodeStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualNodeStatus.VirtualNodeStatus
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualNodeStatus.VirtualNodeStatus
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualNodeStatus.VirtualNodeStatus


module Amazonka.AppMesh.Types.VirtualNodeTcpConnectionPool

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualNodeTcpConnectionPool</a> smart constructor.
data VirtualNodeTcpConnectionPool
VirtualNodeTcpConnectionPool' :: Natural -> VirtualNodeTcpConnectionPool

-- | Maximum number of outbound TCP connections Envoy can establish
--   concurrently with all hosts in upstream cluster.
[$sel:maxConnections:VirtualNodeTcpConnectionPool'] :: VirtualNodeTcpConnectionPool -> Natural

-- | Create a value of <a>VirtualNodeTcpConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxConnections:VirtualNodeTcpConnectionPool'</a>,
--   <a>virtualNodeTcpConnectionPool_maxConnections</a> - Maximum number of
--   outbound TCP connections Envoy can establish concurrently with all
--   hosts in upstream cluster.
newVirtualNodeTcpConnectionPool :: Natural -> VirtualNodeTcpConnectionPool

-- | Maximum number of outbound TCP connections Envoy can establish
--   concurrently with all hosts in upstream cluster.
virtualNodeTcpConnectionPool_maxConnections :: Lens' VirtualNodeTcpConnectionPool Natural
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualNodeTcpConnectionPool.VirtualNodeTcpConnectionPool
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualNodeTcpConnectionPool.VirtualNodeTcpConnectionPool
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualNodeTcpConnectionPool.VirtualNodeTcpConnectionPool
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualNodeTcpConnectionPool.VirtualNodeTcpConnectionPool
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualNodeTcpConnectionPool.VirtualNodeTcpConnectionPool
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualNodeTcpConnectionPool.VirtualNodeTcpConnectionPool
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualNodeTcpConnectionPool.VirtualNodeTcpConnectionPool
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualNodeTcpConnectionPool.VirtualNodeTcpConnectionPool


module Amazonka.AppMesh.Types.VirtualNodeConnectionPool

-- | An object that represents the type of virtual node connection pool.
--   
--   Only one protocol is used at a time and should be the same protocol as
--   the one chosen under port mapping.
--   
--   If not present the default value for <tt>maxPendingRequests</tt> is
--   <tt>2147483647</tt>.
--   
--   <i>See:</i> <a>newVirtualNodeConnectionPool</a> smart constructor.
data VirtualNodeConnectionPool
VirtualNodeConnectionPool' :: Maybe VirtualNodeHttp2ConnectionPool -> Maybe VirtualNodeGrpcConnectionPool -> Maybe VirtualNodeTcpConnectionPool -> Maybe VirtualNodeHttpConnectionPool -> VirtualNodeConnectionPool

-- | An object that represents a type of connection pool.
[$sel:http2:VirtualNodeConnectionPool'] :: VirtualNodeConnectionPool -> Maybe VirtualNodeHttp2ConnectionPool

-- | An object that represents a type of connection pool.
[$sel:grpc:VirtualNodeConnectionPool'] :: VirtualNodeConnectionPool -> Maybe VirtualNodeGrpcConnectionPool

-- | An object that represents a type of connection pool.
[$sel:tcp:VirtualNodeConnectionPool'] :: VirtualNodeConnectionPool -> Maybe VirtualNodeTcpConnectionPool

-- | An object that represents a type of connection pool.
[$sel:http:VirtualNodeConnectionPool'] :: VirtualNodeConnectionPool -> Maybe VirtualNodeHttpConnectionPool

-- | Create a value of <a>VirtualNodeConnectionPool</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:http2:VirtualNodeConnectionPool'</a>,
--   <a>virtualNodeConnectionPool_http2</a> - An object that represents a
--   type of connection pool.
--   
--   <a>$sel:grpc:VirtualNodeConnectionPool'</a>,
--   <a>virtualNodeConnectionPool_grpc</a> - An object that represents a
--   type of connection pool.
--   
--   <a>$sel:tcp:VirtualNodeConnectionPool'</a>,
--   <a>virtualNodeConnectionPool_tcp</a> - An object that represents a
--   type of connection pool.
--   
--   <a>$sel:http:VirtualNodeConnectionPool'</a>,
--   <a>virtualNodeConnectionPool_http</a> - An object that represents a
--   type of connection pool.
newVirtualNodeConnectionPool :: VirtualNodeConnectionPool

-- | An object that represents a type of connection pool.
virtualNodeConnectionPool_http2 :: Lens' VirtualNodeConnectionPool (Maybe VirtualNodeHttp2ConnectionPool)

-- | An object that represents a type of connection pool.
virtualNodeConnectionPool_grpc :: Lens' VirtualNodeConnectionPool (Maybe VirtualNodeGrpcConnectionPool)

-- | An object that represents a type of connection pool.
virtualNodeConnectionPool_tcp :: Lens' VirtualNodeConnectionPool (Maybe VirtualNodeTcpConnectionPool)

-- | An object that represents a type of connection pool.
virtualNodeConnectionPool_http :: Lens' VirtualNodeConnectionPool (Maybe VirtualNodeHttpConnectionPool)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualNodeConnectionPool.VirtualNodeConnectionPool
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualNodeConnectionPool.VirtualNodeConnectionPool
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualNodeConnectionPool.VirtualNodeConnectionPool
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualNodeConnectionPool.VirtualNodeConnectionPool
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualNodeConnectionPool.VirtualNodeConnectionPool
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualNodeConnectionPool.VirtualNodeConnectionPool
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualNodeConnectionPool.VirtualNodeConnectionPool
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualNodeConnectionPool.VirtualNodeConnectionPool


module Amazonka.AppMesh.Types.Listener

-- | An object that represents a listener for a virtual node.
--   
--   <i>See:</i> <a>newListener</a> smart constructor.
data Listener
Listener' :: Maybe HealthCheckPolicy -> Maybe VirtualNodeConnectionPool -> Maybe ListenerTls -> Maybe OutlierDetection -> Maybe ListenerTimeout -> PortMapping -> Listener

-- | The health check information for the listener.
[$sel:healthCheck:Listener'] :: Listener -> Maybe HealthCheckPolicy

-- | The connection pool information for the listener.
[$sel:connectionPool:Listener'] :: Listener -> Maybe VirtualNodeConnectionPool

-- | A reference to an object that represents the Transport Layer Security
--   (TLS) properties for a listener.
[$sel:tls:Listener'] :: Listener -> Maybe ListenerTls

-- | The outlier detection information for the listener.
[$sel:outlierDetection:Listener'] :: Listener -> Maybe OutlierDetection

-- | An object that represents timeouts for different protocols.
[$sel:timeout:Listener'] :: Listener -> Maybe ListenerTimeout

-- | The port mapping information for the listener.
[$sel:portMapping:Listener'] :: Listener -> PortMapping

-- | Create a value of <a>Listener</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthCheck:Listener'</a>, <a>listener_healthCheck</a> - The
--   health check information for the listener.
--   
--   <a>$sel:connectionPool:Listener'</a>, <a>listener_connectionPool</a> -
--   The connection pool information for the listener.
--   
--   <a>$sel:tls:Listener'</a>, <a>listener_tls</a> - A reference to an
--   object that represents the Transport Layer Security (TLS) properties
--   for a listener.
--   
--   <a>$sel:outlierDetection:Listener'</a>,
--   <a>listener_outlierDetection</a> - The outlier detection information
--   for the listener.
--   
--   <a>$sel:timeout:Listener'</a>, <a>listener_timeout</a> - An object
--   that represents timeouts for different protocols.
--   
--   <a>$sel:portMapping:Listener'</a>, <a>listener_portMapping</a> - The
--   port mapping information for the listener.
newListener :: PortMapping -> Listener

-- | The health check information for the listener.
listener_healthCheck :: Lens' Listener (Maybe HealthCheckPolicy)

-- | The connection pool information for the listener.
listener_connectionPool :: Lens' Listener (Maybe VirtualNodeConnectionPool)

-- | A reference to an object that represents the Transport Layer Security
--   (TLS) properties for a listener.
listener_tls :: Lens' Listener (Maybe ListenerTls)

-- | The outlier detection information for the listener.
listener_outlierDetection :: Lens' Listener (Maybe OutlierDetection)

-- | An object that represents timeouts for different protocols.
listener_timeout :: Lens' Listener (Maybe ListenerTimeout)

-- | The port mapping information for the listener.
listener_portMapping :: Lens' Listener PortMapping
instance GHC.Generics.Generic Amazonka.AppMesh.Types.Listener.Listener
instance GHC.Show.Show Amazonka.AppMesh.Types.Listener.Listener
instance GHC.Read.Read Amazonka.AppMesh.Types.Listener.Listener
instance GHC.Classes.Eq Amazonka.AppMesh.Types.Listener.Listener
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.Listener.Listener
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.Listener.Listener
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.Listener.Listener
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.Listener.Listener


module Amazonka.AppMesh.Types.VirtualRouterListener

-- | An object that represents a virtual router listener.
--   
--   <i>See:</i> <a>newVirtualRouterListener</a> smart constructor.
data VirtualRouterListener
VirtualRouterListener' :: PortMapping -> VirtualRouterListener
[$sel:portMapping:VirtualRouterListener'] :: VirtualRouterListener -> PortMapping

-- | Create a value of <a>VirtualRouterListener</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:portMapping:VirtualRouterListener'</a>,
--   <a>virtualRouterListener_portMapping</a> - Undocumented member.
newVirtualRouterListener :: PortMapping -> VirtualRouterListener

-- | Undocumented member.
virtualRouterListener_portMapping :: Lens' VirtualRouterListener PortMapping
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualRouterListener.VirtualRouterListener
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualRouterListener.VirtualRouterListener
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualRouterListener.VirtualRouterListener
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualRouterListener.VirtualRouterListener
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualRouterListener.VirtualRouterListener
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualRouterListener.VirtualRouterListener
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualRouterListener.VirtualRouterListener
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualRouterListener.VirtualRouterListener


module Amazonka.AppMesh.Types.VirtualRouterRef

-- | An object that represents a virtual router returned by a list
--   operation.
--   
--   <i>See:</i> <a>newVirtualRouterRef</a> smart constructor.
data VirtualRouterRef
VirtualRouterRef' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Integer -> Text -> VirtualRouterRef

-- | The full Amazon Resource Name (ARN) for the virtual router.
[$sel:arn:VirtualRouterRef'] :: VirtualRouterRef -> Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:VirtualRouterRef'] :: VirtualRouterRef -> POSIX

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
[$sel:lastUpdatedAt:VirtualRouterRef'] :: VirtualRouterRef -> POSIX

-- | The name of the service mesh that the virtual router resides in.
[$sel:meshName:VirtualRouterRef'] :: VirtualRouterRef -> Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:VirtualRouterRef'] :: VirtualRouterRef -> Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
[$sel:resourceOwner:VirtualRouterRef'] :: VirtualRouterRef -> Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
[$sel:version:VirtualRouterRef'] :: VirtualRouterRef -> Integer

-- | The name of the virtual router.
[$sel:virtualRouterName:VirtualRouterRef'] :: VirtualRouterRef -> Text

-- | Create a value of <a>VirtualRouterRef</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:VirtualRouterRef'</a>, <a>virtualRouterRef_arn</a> - The
--   full Amazon Resource Name (ARN) for the virtual router.
--   
--   <a>$sel:createdAt:VirtualRouterRef'</a>,
--   <a>virtualRouterRef_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:lastUpdatedAt:VirtualRouterRef'</a>,
--   <a>virtualRouterRef_lastUpdatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was last updated.
--   
--   <a>$sel:meshName:VirtualRouterRef'</a>,
--   <a>virtualRouterRef_meshName</a> - The name of the service mesh that
--   the virtual router resides in.
--   
--   <a>$sel:meshOwner:VirtualRouterRef'</a>,
--   <a>virtualRouterRef_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:VirtualRouterRef'</a>,
--   <a>virtualRouterRef_resourceOwner</a> - The AWS IAM account ID of the
--   resource owner. If the account ID is not your own, then it's the ID of
--   the mesh owner or of another account that the mesh is shared with. For
--   more information about mesh sharing, see <a>Working with shared
--   meshes</a>.
--   
--   <a>$sel:version:VirtualRouterRef'</a>, <a>virtualRouterRef_version</a>
--   - The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
--   
--   <a>$sel:virtualRouterName:VirtualRouterRef'</a>,
--   <a>virtualRouterRef_virtualRouterName</a> - The name of the virtual
--   router.
newVirtualRouterRef :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Integer -> Text -> VirtualRouterRef

-- | The full Amazon Resource Name (ARN) for the virtual router.
virtualRouterRef_arn :: Lens' VirtualRouterRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
virtualRouterRef_createdAt :: Lens' VirtualRouterRef UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
virtualRouterRef_lastUpdatedAt :: Lens' VirtualRouterRef UTCTime

-- | The name of the service mesh that the virtual router resides in.
virtualRouterRef_meshName :: Lens' VirtualRouterRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
virtualRouterRef_meshOwner :: Lens' VirtualRouterRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
virtualRouterRef_resourceOwner :: Lens' VirtualRouterRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
virtualRouterRef_version :: Lens' VirtualRouterRef Integer

-- | The name of the virtual router.
virtualRouterRef_virtualRouterName :: Lens' VirtualRouterRef Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualRouterRef.VirtualRouterRef
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualRouterRef.VirtualRouterRef
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualRouterRef.VirtualRouterRef
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualRouterRef.VirtualRouterRef
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualRouterRef.VirtualRouterRef
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualRouterRef.VirtualRouterRef
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualRouterRef.VirtualRouterRef


module Amazonka.AppMesh.Types.VirtualRouterServiceProvider

-- | An object that represents a virtual node service provider.
--   
--   <i>See:</i> <a>newVirtualRouterServiceProvider</a> smart constructor.
data VirtualRouterServiceProvider
VirtualRouterServiceProvider' :: Text -> VirtualRouterServiceProvider

-- | The name of the virtual router that is acting as a service provider.
[$sel:virtualRouterName:VirtualRouterServiceProvider'] :: VirtualRouterServiceProvider -> Text

-- | Create a value of <a>VirtualRouterServiceProvider</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualRouterName:VirtualRouterServiceProvider'</a>,
--   <a>virtualRouterServiceProvider_virtualRouterName</a> - The name of
--   the virtual router that is acting as a service provider.
newVirtualRouterServiceProvider :: Text -> VirtualRouterServiceProvider

-- | The name of the virtual router that is acting as a service provider.
virtualRouterServiceProvider_virtualRouterName :: Lens' VirtualRouterServiceProvider Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualRouterServiceProvider.VirtualRouterServiceProvider
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualRouterServiceProvider.VirtualRouterServiceProvider
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualRouterServiceProvider.VirtualRouterServiceProvider
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualRouterServiceProvider.VirtualRouterServiceProvider
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualRouterServiceProvider.VirtualRouterServiceProvider
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualRouterServiceProvider.VirtualRouterServiceProvider
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualRouterServiceProvider.VirtualRouterServiceProvider
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualRouterServiceProvider.VirtualRouterServiceProvider


module Amazonka.AppMesh.Types.VirtualRouterSpec

-- | An object that represents the specification of a virtual router.
--   
--   <i>See:</i> <a>newVirtualRouterSpec</a> smart constructor.
data VirtualRouterSpec
VirtualRouterSpec' :: Maybe (NonEmpty VirtualRouterListener) -> VirtualRouterSpec

-- | The listeners that the virtual router is expected to receive inbound
--   traffic from. You can specify one listener.
[$sel:listeners:VirtualRouterSpec'] :: VirtualRouterSpec -> Maybe (NonEmpty VirtualRouterListener)

-- | Create a value of <a>VirtualRouterSpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:listeners:VirtualRouterSpec'</a>,
--   <a>virtualRouterSpec_listeners</a> - The listeners that the virtual
--   router is expected to receive inbound traffic from. You can specify
--   one listener.
newVirtualRouterSpec :: VirtualRouterSpec

-- | The listeners that the virtual router is expected to receive inbound
--   traffic from. You can specify one listener.
virtualRouterSpec_listeners :: Lens' VirtualRouterSpec (Maybe (NonEmpty VirtualRouterListener))
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualRouterSpec.VirtualRouterSpec
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualRouterSpec.VirtualRouterSpec
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualRouterSpec.VirtualRouterSpec
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualRouterSpec.VirtualRouterSpec
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualRouterSpec.VirtualRouterSpec
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualRouterSpec.VirtualRouterSpec
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualRouterSpec.VirtualRouterSpec
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualRouterSpec.VirtualRouterSpec


module Amazonka.AppMesh.Types.VirtualRouterStatusCode
newtype VirtualRouterStatusCode
VirtualRouterStatusCode' :: Text -> VirtualRouterStatusCode
[fromVirtualRouterStatusCode] :: VirtualRouterStatusCode -> Text
pattern VirtualRouterStatusCode_ACTIVE :: VirtualRouterStatusCode
pattern VirtualRouterStatusCode_DELETED :: VirtualRouterStatusCode
pattern VirtualRouterStatusCode_INACTIVE :: VirtualRouterStatusCode
instance Amazonka.Data.XML.ToXML Amazonka.AppMesh.Types.VirtualRouterStatusCode.VirtualRouterStatusCode
instance Amazonka.Data.XML.FromXML Amazonka.AppMesh.Types.VirtualRouterStatusCode.VirtualRouterStatusCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppMesh.Types.VirtualRouterStatusCode.VirtualRouterStatusCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualRouterStatusCode.VirtualRouterStatusCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppMesh.Types.VirtualRouterStatusCode.VirtualRouterStatusCode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualRouterStatusCode.VirtualRouterStatusCode
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.Types.VirtualRouterStatusCode.VirtualRouterStatusCode
instance Amazonka.Data.Headers.ToHeader Amazonka.AppMesh.Types.VirtualRouterStatusCode.VirtualRouterStatusCode
instance Amazonka.Data.Log.ToLog Amazonka.AppMesh.Types.VirtualRouterStatusCode.VirtualRouterStatusCode
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppMesh.Types.VirtualRouterStatusCode.VirtualRouterStatusCode
instance Amazonka.Data.Text.ToText Amazonka.AppMesh.Types.VirtualRouterStatusCode.VirtualRouterStatusCode
instance Amazonka.Data.Text.FromText Amazonka.AppMesh.Types.VirtualRouterStatusCode.VirtualRouterStatusCode
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualRouterStatusCode.VirtualRouterStatusCode
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualRouterStatusCode.VirtualRouterStatusCode
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualRouterStatusCode.VirtualRouterStatusCode
instance GHC.Classes.Ord Amazonka.AppMesh.Types.VirtualRouterStatusCode.VirtualRouterStatusCode
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualRouterStatusCode.VirtualRouterStatusCode
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualRouterStatusCode.VirtualRouterStatusCode
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualRouterStatusCode.VirtualRouterStatusCode


module Amazonka.AppMesh.Types.VirtualRouterStatus

-- | An object that represents the status of a virtual router.
--   
--   <i>See:</i> <a>newVirtualRouterStatus</a> smart constructor.
data VirtualRouterStatus
VirtualRouterStatus' :: VirtualRouterStatusCode -> VirtualRouterStatus

-- | The current status of the virtual router.
[$sel:status:VirtualRouterStatus'] :: VirtualRouterStatus -> VirtualRouterStatusCode

-- | Create a value of <a>VirtualRouterStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VirtualRouterStatus'</a>,
--   <a>virtualRouterStatus_status</a> - The current status of the virtual
--   router.
newVirtualRouterStatus :: VirtualRouterStatusCode -> VirtualRouterStatus

-- | The current status of the virtual router.
virtualRouterStatus_status :: Lens' VirtualRouterStatus VirtualRouterStatusCode
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualRouterStatus.VirtualRouterStatus
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualRouterStatus.VirtualRouterStatus
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualRouterStatus.VirtualRouterStatus
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualRouterStatus.VirtualRouterStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualRouterStatus.VirtualRouterStatus
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualRouterStatus.VirtualRouterStatus
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualRouterStatus.VirtualRouterStatus


module Amazonka.AppMesh.Types.VirtualRouterData

-- | An object that represents a virtual router returned by a describe
--   operation.
--   
--   <i>See:</i> <a>newVirtualRouterData</a> smart constructor.
data VirtualRouterData
VirtualRouterData' :: Text -> ResourceMetadata -> VirtualRouterSpec -> VirtualRouterStatus -> Text -> VirtualRouterData

-- | The name of the service mesh that the virtual router resides in.
[$sel:meshName:VirtualRouterData'] :: VirtualRouterData -> Text

-- | The associated metadata for the virtual router.
[$sel:metadata:VirtualRouterData'] :: VirtualRouterData -> ResourceMetadata

-- | The specifications of the virtual router.
[$sel:spec:VirtualRouterData'] :: VirtualRouterData -> VirtualRouterSpec

-- | The current status of the virtual router.
[$sel:status:VirtualRouterData'] :: VirtualRouterData -> VirtualRouterStatus

-- | The name of the virtual router.
[$sel:virtualRouterName:VirtualRouterData'] :: VirtualRouterData -> Text

-- | Create a value of <a>VirtualRouterData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshName:VirtualRouterData'</a>,
--   <a>virtualRouterData_meshName</a> - The name of the service mesh that
--   the virtual router resides in.
--   
--   <a>$sel:metadata:VirtualRouterData'</a>,
--   <a>virtualRouterData_metadata</a> - The associated metadata for the
--   virtual router.
--   
--   <a>$sel:spec:VirtualRouterData'</a>, <a>virtualRouterData_spec</a> -
--   The specifications of the virtual router.
--   
--   <a>$sel:status:VirtualRouterData'</a>, <a>virtualRouterData_status</a>
--   - The current status of the virtual router.
--   
--   <a>$sel:virtualRouterName:VirtualRouterData'</a>,
--   <a>virtualRouterData_virtualRouterName</a> - The name of the virtual
--   router.
newVirtualRouterData :: Text -> ResourceMetadata -> VirtualRouterSpec -> VirtualRouterStatus -> Text -> VirtualRouterData

-- | The name of the service mesh that the virtual router resides in.
virtualRouterData_meshName :: Lens' VirtualRouterData Text

-- | The associated metadata for the virtual router.
virtualRouterData_metadata :: Lens' VirtualRouterData ResourceMetadata

-- | The specifications of the virtual router.
virtualRouterData_spec :: Lens' VirtualRouterData VirtualRouterSpec

-- | The current status of the virtual router.
virtualRouterData_status :: Lens' VirtualRouterData VirtualRouterStatus

-- | The name of the virtual router.
virtualRouterData_virtualRouterName :: Lens' VirtualRouterData Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualRouterData.VirtualRouterData
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualRouterData.VirtualRouterData
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualRouterData.VirtualRouterData
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualRouterData.VirtualRouterData
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualRouterData.VirtualRouterData
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualRouterData.VirtualRouterData
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualRouterData.VirtualRouterData


module Amazonka.AppMesh.Types.VirtualServiceBackend

-- | An object that represents a virtual service backend for a virtual
--   node.
--   
--   <i>See:</i> <a>newVirtualServiceBackend</a> smart constructor.
data VirtualServiceBackend
VirtualServiceBackend' :: Maybe ClientPolicy -> Text -> VirtualServiceBackend

-- | A reference to an object that represents the client policy for a
--   backend.
[$sel:clientPolicy:VirtualServiceBackend'] :: VirtualServiceBackend -> Maybe ClientPolicy

-- | The name of the virtual service that is acting as a virtual node
--   backend.
[$sel:virtualServiceName:VirtualServiceBackend'] :: VirtualServiceBackend -> Text

-- | Create a value of <a>VirtualServiceBackend</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientPolicy:VirtualServiceBackend'</a>,
--   <a>virtualServiceBackend_clientPolicy</a> - A reference to an object
--   that represents the client policy for a backend.
--   
--   <a>$sel:virtualServiceName:VirtualServiceBackend'</a>,
--   <a>virtualServiceBackend_virtualServiceName</a> - The name of the
--   virtual service that is acting as a virtual node backend.
newVirtualServiceBackend :: Text -> VirtualServiceBackend

-- | A reference to an object that represents the client policy for a
--   backend.
virtualServiceBackend_clientPolicy :: Lens' VirtualServiceBackend (Maybe ClientPolicy)

-- | The name of the virtual service that is acting as a virtual node
--   backend.
virtualServiceBackend_virtualServiceName :: Lens' VirtualServiceBackend Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualServiceBackend.VirtualServiceBackend
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualServiceBackend.VirtualServiceBackend
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualServiceBackend.VirtualServiceBackend
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualServiceBackend.VirtualServiceBackend
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualServiceBackend.VirtualServiceBackend
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualServiceBackend.VirtualServiceBackend
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualServiceBackend.VirtualServiceBackend
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualServiceBackend.VirtualServiceBackend


module Amazonka.AppMesh.Types.Backend

-- | An object that represents the backends that a virtual node is expected
--   to send outbound traffic to.
--   
--   <i>See:</i> <a>newBackend</a> smart constructor.
data Backend
Backend' :: Maybe VirtualServiceBackend -> Backend

-- | Specifies a virtual service to use as a backend.
[$sel:virtualService:Backend'] :: Backend -> Maybe VirtualServiceBackend

-- | Create a value of <a>Backend</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualService:Backend'</a>, <a>backend_virtualService</a> -
--   Specifies a virtual service to use as a backend.
newBackend :: Backend

-- | Specifies a virtual service to use as a backend.
backend_virtualService :: Lens' Backend (Maybe VirtualServiceBackend)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.Backend.Backend
instance GHC.Show.Show Amazonka.AppMesh.Types.Backend.Backend
instance GHC.Read.Read Amazonka.AppMesh.Types.Backend.Backend
instance GHC.Classes.Eq Amazonka.AppMesh.Types.Backend.Backend
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.Backend.Backend
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.Backend.Backend
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.Backend.Backend
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.Backend.Backend


module Amazonka.AppMesh.Types.VirtualNodeSpec

-- | An object that represents the specification of a virtual node.
--   
--   <i>See:</i> <a>newVirtualNodeSpec</a> smart constructor.
data VirtualNodeSpec
VirtualNodeSpec' :: Maybe [Backend] -> Maybe BackendDefaults -> Maybe ServiceDiscovery -> Maybe [Listener] -> Maybe Logging -> VirtualNodeSpec

-- | The backends that the virtual node is expected to send outbound
--   traffic to.
[$sel:backends:VirtualNodeSpec'] :: VirtualNodeSpec -> Maybe [Backend]

-- | A reference to an object that represents the defaults for backends.
[$sel:backendDefaults:VirtualNodeSpec'] :: VirtualNodeSpec -> Maybe BackendDefaults

-- | The service discovery information for the virtual node. If your
--   virtual node does not expect ingress traffic, you can omit this
--   parameter. If you specify a <tt>listener</tt>, then you must specify
--   service discovery information.
[$sel:serviceDiscovery:VirtualNodeSpec'] :: VirtualNodeSpec -> Maybe ServiceDiscovery

-- | The listener that the virtual node is expected to receive inbound
--   traffic from. You can specify one listener.
[$sel:listeners:VirtualNodeSpec'] :: VirtualNodeSpec -> Maybe [Listener]

-- | The inbound and outbound access logging information for the virtual
--   node.
[$sel:logging:VirtualNodeSpec'] :: VirtualNodeSpec -> Maybe Logging

-- | Create a value of <a>VirtualNodeSpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backends:VirtualNodeSpec'</a>, <a>virtualNodeSpec_backends</a>
--   - The backends that the virtual node is expected to send outbound
--   traffic to.
--   
--   <a>$sel:backendDefaults:VirtualNodeSpec'</a>,
--   <a>virtualNodeSpec_backendDefaults</a> - A reference to an object that
--   represents the defaults for backends.
--   
--   <a>$sel:serviceDiscovery:VirtualNodeSpec'</a>,
--   <a>virtualNodeSpec_serviceDiscovery</a> - The service discovery
--   information for the virtual node. If your virtual node does not expect
--   ingress traffic, you can omit this parameter. If you specify a
--   <tt>listener</tt>, then you must specify service discovery
--   information.
--   
--   <a>$sel:listeners:VirtualNodeSpec'</a>,
--   <a>virtualNodeSpec_listeners</a> - The listener that the virtual node
--   is expected to receive inbound traffic from. You can specify one
--   listener.
--   
--   <a>$sel:logging:VirtualNodeSpec'</a>, <a>virtualNodeSpec_logging</a> -
--   The inbound and outbound access logging information for the virtual
--   node.
newVirtualNodeSpec :: VirtualNodeSpec

-- | The backends that the virtual node is expected to send outbound
--   traffic to.
virtualNodeSpec_backends :: Lens' VirtualNodeSpec (Maybe [Backend])

-- | A reference to an object that represents the defaults for backends.
virtualNodeSpec_backendDefaults :: Lens' VirtualNodeSpec (Maybe BackendDefaults)

-- | The service discovery information for the virtual node. If your
--   virtual node does not expect ingress traffic, you can omit this
--   parameter. If you specify a <tt>listener</tt>, then you must specify
--   service discovery information.
virtualNodeSpec_serviceDiscovery :: Lens' VirtualNodeSpec (Maybe ServiceDiscovery)

-- | The listener that the virtual node is expected to receive inbound
--   traffic from. You can specify one listener.
virtualNodeSpec_listeners :: Lens' VirtualNodeSpec (Maybe [Listener])

-- | The inbound and outbound access logging information for the virtual
--   node.
virtualNodeSpec_logging :: Lens' VirtualNodeSpec (Maybe Logging)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualNodeSpec.VirtualNodeSpec
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualNodeSpec.VirtualNodeSpec
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualNodeSpec.VirtualNodeSpec
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualNodeSpec.VirtualNodeSpec
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualNodeSpec.VirtualNodeSpec
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualNodeSpec.VirtualNodeSpec
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualNodeSpec.VirtualNodeSpec
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualNodeSpec.VirtualNodeSpec


module Amazonka.AppMesh.Types.VirtualNodeData

-- | An object that represents a virtual node returned by a describe
--   operation.
--   
--   <i>See:</i> <a>newVirtualNodeData</a> smart constructor.
data VirtualNodeData
VirtualNodeData' :: Text -> ResourceMetadata -> VirtualNodeSpec -> VirtualNodeStatus -> Text -> VirtualNodeData

-- | The name of the service mesh that the virtual node resides in.
[$sel:meshName:VirtualNodeData'] :: VirtualNodeData -> Text

-- | The associated metadata for the virtual node.
[$sel:metadata:VirtualNodeData'] :: VirtualNodeData -> ResourceMetadata

-- | The specifications of the virtual node.
[$sel:spec:VirtualNodeData'] :: VirtualNodeData -> VirtualNodeSpec

-- | The current status for the virtual node.
[$sel:status:VirtualNodeData'] :: VirtualNodeData -> VirtualNodeStatus

-- | The name of the virtual node.
[$sel:virtualNodeName:VirtualNodeData'] :: VirtualNodeData -> Text

-- | Create a value of <a>VirtualNodeData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshName:VirtualNodeData'</a>, <a>virtualNodeData_meshName</a>
--   - The name of the service mesh that the virtual node resides in.
--   
--   <a>$sel:metadata:VirtualNodeData'</a>, <a>virtualNodeData_metadata</a>
--   - The associated metadata for the virtual node.
--   
--   <a>$sel:spec:VirtualNodeData'</a>, <a>virtualNodeData_spec</a> - The
--   specifications of the virtual node.
--   
--   <a>$sel:status:VirtualNodeData'</a>, <a>virtualNodeData_status</a> -
--   The current status for the virtual node.
--   
--   <a>$sel:virtualNodeName:VirtualNodeData'</a>,
--   <a>virtualNodeData_virtualNodeName</a> - The name of the virtual node.
newVirtualNodeData :: Text -> ResourceMetadata -> VirtualNodeSpec -> VirtualNodeStatus -> Text -> VirtualNodeData

-- | The name of the service mesh that the virtual node resides in.
virtualNodeData_meshName :: Lens' VirtualNodeData Text

-- | The associated metadata for the virtual node.
virtualNodeData_metadata :: Lens' VirtualNodeData ResourceMetadata

-- | The specifications of the virtual node.
virtualNodeData_spec :: Lens' VirtualNodeData VirtualNodeSpec

-- | The current status for the virtual node.
virtualNodeData_status :: Lens' VirtualNodeData VirtualNodeStatus

-- | The name of the virtual node.
virtualNodeData_virtualNodeName :: Lens' VirtualNodeData Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualNodeData.VirtualNodeData
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualNodeData.VirtualNodeData
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualNodeData.VirtualNodeData
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualNodeData.VirtualNodeData
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualNodeData.VirtualNodeData
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualNodeData.VirtualNodeData
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualNodeData.VirtualNodeData


module Amazonka.AppMesh.Types.VirtualServiceProvider

-- | An object that represents the provider for a virtual service.
--   
--   <i>See:</i> <a>newVirtualServiceProvider</a> smart constructor.
data VirtualServiceProvider
VirtualServiceProvider' :: Maybe VirtualRouterServiceProvider -> Maybe VirtualNodeServiceProvider -> VirtualServiceProvider

-- | The virtual router associated with a virtual service.
[$sel:virtualRouter:VirtualServiceProvider'] :: VirtualServiceProvider -> Maybe VirtualRouterServiceProvider

-- | The virtual node associated with a virtual service.
[$sel:virtualNode:VirtualServiceProvider'] :: VirtualServiceProvider -> Maybe VirtualNodeServiceProvider

-- | Create a value of <a>VirtualServiceProvider</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualRouter:VirtualServiceProvider'</a>,
--   <a>virtualServiceProvider_virtualRouter</a> - The virtual router
--   associated with a virtual service.
--   
--   <a>$sel:virtualNode:VirtualServiceProvider'</a>,
--   <a>virtualServiceProvider_virtualNode</a> - The virtual node
--   associated with a virtual service.
newVirtualServiceProvider :: VirtualServiceProvider

-- | The virtual router associated with a virtual service.
virtualServiceProvider_virtualRouter :: Lens' VirtualServiceProvider (Maybe VirtualRouterServiceProvider)

-- | The virtual node associated with a virtual service.
virtualServiceProvider_virtualNode :: Lens' VirtualServiceProvider (Maybe VirtualNodeServiceProvider)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualServiceProvider.VirtualServiceProvider
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualServiceProvider.VirtualServiceProvider
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualServiceProvider.VirtualServiceProvider
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualServiceProvider.VirtualServiceProvider
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualServiceProvider.VirtualServiceProvider
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualServiceProvider.VirtualServiceProvider
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualServiceProvider.VirtualServiceProvider
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualServiceProvider.VirtualServiceProvider


module Amazonka.AppMesh.Types.VirtualServiceRef

-- | An object that represents a virtual service returned by a list
--   operation.
--   
--   <i>See:</i> <a>newVirtualServiceRef</a> smart constructor.
data VirtualServiceRef
VirtualServiceRef' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Integer -> Text -> VirtualServiceRef

-- | The full Amazon Resource Name (ARN) for the virtual service.
[$sel:arn:VirtualServiceRef'] :: VirtualServiceRef -> Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:VirtualServiceRef'] :: VirtualServiceRef -> POSIX

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
[$sel:lastUpdatedAt:VirtualServiceRef'] :: VirtualServiceRef -> POSIX

-- | The name of the service mesh that the virtual service resides in.
[$sel:meshName:VirtualServiceRef'] :: VirtualServiceRef -> Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:VirtualServiceRef'] :: VirtualServiceRef -> Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
[$sel:resourceOwner:VirtualServiceRef'] :: VirtualServiceRef -> Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
[$sel:version:VirtualServiceRef'] :: VirtualServiceRef -> Integer

-- | The name of the virtual service.
[$sel:virtualServiceName:VirtualServiceRef'] :: VirtualServiceRef -> Text

-- | Create a value of <a>VirtualServiceRef</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:VirtualServiceRef'</a>, <a>virtualServiceRef_arn</a> - The
--   full Amazon Resource Name (ARN) for the virtual service.
--   
--   <a>$sel:createdAt:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:lastUpdatedAt:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_lastUpdatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was last updated.
--   
--   <a>$sel:meshName:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_meshName</a> - The name of the service mesh that
--   the virtual service resides in.
--   
--   <a>$sel:meshOwner:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_resourceOwner</a> - The AWS IAM account ID of the
--   resource owner. If the account ID is not your own, then it's the ID of
--   the mesh owner or of another account that the mesh is shared with. For
--   more information about mesh sharing, see <a>Working with shared
--   meshes</a>.
--   
--   <a>$sel:version:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_version</a> - The version of the resource.
--   Resources are created at version 1, and this version is incremented
--   each time that they're updated.
--   
--   <a>$sel:virtualServiceName:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_virtualServiceName</a> - The name of the virtual
--   service.
newVirtualServiceRef :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Integer -> Text -> VirtualServiceRef

-- | The full Amazon Resource Name (ARN) for the virtual service.
virtualServiceRef_arn :: Lens' VirtualServiceRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
virtualServiceRef_createdAt :: Lens' VirtualServiceRef UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
virtualServiceRef_lastUpdatedAt :: Lens' VirtualServiceRef UTCTime

-- | The name of the service mesh that the virtual service resides in.
virtualServiceRef_meshName :: Lens' VirtualServiceRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
virtualServiceRef_meshOwner :: Lens' VirtualServiceRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
virtualServiceRef_resourceOwner :: Lens' VirtualServiceRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
virtualServiceRef_version :: Lens' VirtualServiceRef Integer

-- | The name of the virtual service.
virtualServiceRef_virtualServiceName :: Lens' VirtualServiceRef Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualServiceRef.VirtualServiceRef
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualServiceRef.VirtualServiceRef
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualServiceRef.VirtualServiceRef
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualServiceRef.VirtualServiceRef
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualServiceRef.VirtualServiceRef
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualServiceRef.VirtualServiceRef
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualServiceRef.VirtualServiceRef


module Amazonka.AppMesh.Types.VirtualServiceSpec

-- | An object that represents the specification of a virtual service.
--   
--   <i>See:</i> <a>newVirtualServiceSpec</a> smart constructor.
data VirtualServiceSpec
VirtualServiceSpec' :: Maybe VirtualServiceProvider -> VirtualServiceSpec

-- | The App Mesh object that is acting as the provider for a virtual
--   service. You can specify a single virtual node or virtual router.
[$sel:provider:VirtualServiceSpec'] :: VirtualServiceSpec -> Maybe VirtualServiceProvider

-- | Create a value of <a>VirtualServiceSpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:provider:VirtualServiceSpec'</a>,
--   <a>virtualServiceSpec_provider</a> - The App Mesh object that is
--   acting as the provider for a virtual service. You can specify a single
--   virtual node or virtual router.
newVirtualServiceSpec :: VirtualServiceSpec

-- | The App Mesh object that is acting as the provider for a virtual
--   service. You can specify a single virtual node or virtual router.
virtualServiceSpec_provider :: Lens' VirtualServiceSpec (Maybe VirtualServiceProvider)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualServiceSpec.VirtualServiceSpec
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualServiceSpec.VirtualServiceSpec
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualServiceSpec.VirtualServiceSpec
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualServiceSpec.VirtualServiceSpec
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualServiceSpec.VirtualServiceSpec
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualServiceSpec.VirtualServiceSpec
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualServiceSpec.VirtualServiceSpec
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualServiceSpec.VirtualServiceSpec


module Amazonka.AppMesh.Types.VirtualServiceStatusCode
newtype VirtualServiceStatusCode
VirtualServiceStatusCode' :: Text -> VirtualServiceStatusCode
[fromVirtualServiceStatusCode] :: VirtualServiceStatusCode -> Text
pattern VirtualServiceStatusCode_ACTIVE :: VirtualServiceStatusCode
pattern VirtualServiceStatusCode_DELETED :: VirtualServiceStatusCode
pattern VirtualServiceStatusCode_INACTIVE :: VirtualServiceStatusCode
instance Amazonka.Data.XML.ToXML Amazonka.AppMesh.Types.VirtualServiceStatusCode.VirtualServiceStatusCode
instance Amazonka.Data.XML.FromXML Amazonka.AppMesh.Types.VirtualServiceStatusCode.VirtualServiceStatusCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.AppMesh.Types.VirtualServiceStatusCode.VirtualServiceStatusCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.VirtualServiceStatusCode.VirtualServiceStatusCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.AppMesh.Types.VirtualServiceStatusCode.VirtualServiceStatusCode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualServiceStatusCode.VirtualServiceStatusCode
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.Types.VirtualServiceStatusCode.VirtualServiceStatusCode
instance Amazonka.Data.Headers.ToHeader Amazonka.AppMesh.Types.VirtualServiceStatusCode.VirtualServiceStatusCode
instance Amazonka.Data.Log.ToLog Amazonka.AppMesh.Types.VirtualServiceStatusCode.VirtualServiceStatusCode
instance Amazonka.Data.ByteString.ToByteString Amazonka.AppMesh.Types.VirtualServiceStatusCode.VirtualServiceStatusCode
instance Amazonka.Data.Text.ToText Amazonka.AppMesh.Types.VirtualServiceStatusCode.VirtualServiceStatusCode
instance Amazonka.Data.Text.FromText Amazonka.AppMesh.Types.VirtualServiceStatusCode.VirtualServiceStatusCode
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualServiceStatusCode.VirtualServiceStatusCode
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualServiceStatusCode.VirtualServiceStatusCode
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualServiceStatusCode.VirtualServiceStatusCode
instance GHC.Classes.Ord Amazonka.AppMesh.Types.VirtualServiceStatusCode.VirtualServiceStatusCode
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualServiceStatusCode.VirtualServiceStatusCode
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualServiceStatusCode.VirtualServiceStatusCode
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualServiceStatusCode.VirtualServiceStatusCode


module Amazonka.AppMesh.Types.VirtualServiceStatus

-- | An object that represents the status of a virtual service.
--   
--   <i>See:</i> <a>newVirtualServiceStatus</a> smart constructor.
data VirtualServiceStatus
VirtualServiceStatus' :: VirtualServiceStatusCode -> VirtualServiceStatus

-- | The current status of the virtual service.
[$sel:status:VirtualServiceStatus'] :: VirtualServiceStatus -> VirtualServiceStatusCode

-- | Create a value of <a>VirtualServiceStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VirtualServiceStatus'</a>,
--   <a>virtualServiceStatus_status</a> - The current status of the virtual
--   service.
newVirtualServiceStatus :: VirtualServiceStatusCode -> VirtualServiceStatus

-- | The current status of the virtual service.
virtualServiceStatus_status :: Lens' VirtualServiceStatus VirtualServiceStatusCode
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualServiceStatus.VirtualServiceStatus
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualServiceStatus.VirtualServiceStatus
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualServiceStatus.VirtualServiceStatus
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualServiceStatus.VirtualServiceStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualServiceStatus.VirtualServiceStatus
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualServiceStatus.VirtualServiceStatus
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualServiceStatus.VirtualServiceStatus


module Amazonka.AppMesh.Types.VirtualServiceData

-- | An object that represents a virtual service returned by a describe
--   operation.
--   
--   <i>See:</i> <a>newVirtualServiceData</a> smart constructor.
data VirtualServiceData
VirtualServiceData' :: Text -> ResourceMetadata -> VirtualServiceSpec -> VirtualServiceStatus -> Text -> VirtualServiceData

-- | The name of the service mesh that the virtual service resides in.
[$sel:meshName:VirtualServiceData'] :: VirtualServiceData -> Text
[$sel:metadata:VirtualServiceData'] :: VirtualServiceData -> ResourceMetadata

-- | The specifications of the virtual service.
[$sel:spec:VirtualServiceData'] :: VirtualServiceData -> VirtualServiceSpec

-- | The current status of the virtual service.
[$sel:status:VirtualServiceData'] :: VirtualServiceData -> VirtualServiceStatus

-- | The name of the virtual service.
[$sel:virtualServiceName:VirtualServiceData'] :: VirtualServiceData -> Text

-- | Create a value of <a>VirtualServiceData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshName:VirtualServiceData'</a>,
--   <a>virtualServiceData_meshName</a> - The name of the service mesh that
--   the virtual service resides in.
--   
--   <a>$sel:metadata:VirtualServiceData'</a>,
--   <a>virtualServiceData_metadata</a> - Undocumented member.
--   
--   <a>$sel:spec:VirtualServiceData'</a>, <a>virtualServiceData_spec</a> -
--   The specifications of the virtual service.
--   
--   <a>$sel:status:VirtualServiceData'</a>,
--   <a>virtualServiceData_status</a> - The current status of the virtual
--   service.
--   
--   <a>$sel:virtualServiceName:VirtualServiceData'</a>,
--   <a>virtualServiceData_virtualServiceName</a> - The name of the virtual
--   service.
newVirtualServiceData :: Text -> ResourceMetadata -> VirtualServiceSpec -> VirtualServiceStatus -> Text -> VirtualServiceData

-- | The name of the service mesh that the virtual service resides in.
virtualServiceData_meshName :: Lens' VirtualServiceData Text

-- | Undocumented member.
virtualServiceData_metadata :: Lens' VirtualServiceData ResourceMetadata

-- | The specifications of the virtual service.
virtualServiceData_spec :: Lens' VirtualServiceData VirtualServiceSpec

-- | The current status of the virtual service.
virtualServiceData_status :: Lens' VirtualServiceData VirtualServiceStatus

-- | The name of the virtual service.
virtualServiceData_virtualServiceName :: Lens' VirtualServiceData Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.VirtualServiceData.VirtualServiceData
instance GHC.Show.Show Amazonka.AppMesh.Types.VirtualServiceData.VirtualServiceData
instance GHC.Read.Read Amazonka.AppMesh.Types.VirtualServiceData.VirtualServiceData
instance GHC.Classes.Eq Amazonka.AppMesh.Types.VirtualServiceData.VirtualServiceData
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.VirtualServiceData.VirtualServiceData
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.VirtualServiceData.VirtualServiceData
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.VirtualServiceData.VirtualServiceData


module Amazonka.AppMesh.Types.WeightedTarget

-- | An object that represents a target and its relative weight. Traffic is
--   distributed across targets according to their relative weight. For
--   example, a weighted target with a relative weight of 50 receives five
--   times as much traffic as one with a relative weight of 10. The total
--   weight for all targets combined must be less than or equal to 100.
--   
--   <i>See:</i> <a>newWeightedTarget</a> smart constructor.
data WeightedTarget
WeightedTarget' :: Text -> Natural -> WeightedTarget

-- | The virtual node to associate with the weighted target.
[$sel:virtualNode:WeightedTarget'] :: WeightedTarget -> Text

-- | The relative weight of the weighted target.
[$sel:weight:WeightedTarget'] :: WeightedTarget -> Natural

-- | Create a value of <a>WeightedTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualNode:WeightedTarget'</a>,
--   <a>weightedTarget_virtualNode</a> - The virtual node to associate with
--   the weighted target.
--   
--   <a>$sel:weight:WeightedTarget'</a>, <a>weightedTarget_weight</a> - The
--   relative weight of the weighted target.
newWeightedTarget :: Text -> Natural -> WeightedTarget

-- | The virtual node to associate with the weighted target.
weightedTarget_virtualNode :: Lens' WeightedTarget Text

-- | The relative weight of the weighted target.
weightedTarget_weight :: Lens' WeightedTarget Natural
instance GHC.Generics.Generic Amazonka.AppMesh.Types.WeightedTarget.WeightedTarget
instance GHC.Show.Show Amazonka.AppMesh.Types.WeightedTarget.WeightedTarget
instance GHC.Read.Read Amazonka.AppMesh.Types.WeightedTarget.WeightedTarget
instance GHC.Classes.Eq Amazonka.AppMesh.Types.WeightedTarget.WeightedTarget
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.WeightedTarget.WeightedTarget
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.WeightedTarget.WeightedTarget
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.WeightedTarget.WeightedTarget
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.WeightedTarget.WeightedTarget


module Amazonka.AppMesh.Types.TcpRouteAction

-- | An object that represents the action to take if a match is determined.
--   
--   <i>See:</i> <a>newTcpRouteAction</a> smart constructor.
data TcpRouteAction
TcpRouteAction' :: NonEmpty WeightedTarget -> TcpRouteAction

-- | An object that represents the targets that traffic is routed to when a
--   request matches the route.
[$sel:weightedTargets:TcpRouteAction'] :: TcpRouteAction -> NonEmpty WeightedTarget

-- | Create a value of <a>TcpRouteAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:weightedTargets:TcpRouteAction'</a>,
--   <a>tcpRouteAction_weightedTargets</a> - An object that represents the
--   targets that traffic is routed to when a request matches the route.
newTcpRouteAction :: NonEmpty WeightedTarget -> TcpRouteAction

-- | An object that represents the targets that traffic is routed to when a
--   request matches the route.
tcpRouteAction_weightedTargets :: Lens' TcpRouteAction (NonEmpty WeightedTarget)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.TcpRouteAction.TcpRouteAction
instance GHC.Show.Show Amazonka.AppMesh.Types.TcpRouteAction.TcpRouteAction
instance GHC.Read.Read Amazonka.AppMesh.Types.TcpRouteAction.TcpRouteAction
instance GHC.Classes.Eq Amazonka.AppMesh.Types.TcpRouteAction.TcpRouteAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.TcpRouteAction.TcpRouteAction
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.TcpRouteAction.TcpRouteAction
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.TcpRouteAction.TcpRouteAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.TcpRouteAction.TcpRouteAction


module Amazonka.AppMesh.Types.TcpRoute

-- | An object that represents a TCP route type.
--   
--   <i>See:</i> <a>newTcpRoute</a> smart constructor.
data TcpRoute
TcpRoute' :: Maybe TcpTimeout -> TcpRouteAction -> TcpRoute

-- | An object that represents types of timeouts.
[$sel:timeout:TcpRoute'] :: TcpRoute -> Maybe TcpTimeout

-- | The action to take if a match is determined.
[$sel:action:TcpRoute'] :: TcpRoute -> TcpRouteAction

-- | Create a value of <a>TcpRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeout:TcpRoute'</a>, <a>tcpRoute_timeout</a> - An object
--   that represents types of timeouts.
--   
--   <a>$sel:action:TcpRoute'</a>, <a>tcpRoute_action</a> - The action to
--   take if a match is determined.
newTcpRoute :: TcpRouteAction -> TcpRoute

-- | An object that represents types of timeouts.
tcpRoute_timeout :: Lens' TcpRoute (Maybe TcpTimeout)

-- | The action to take if a match is determined.
tcpRoute_action :: Lens' TcpRoute TcpRouteAction
instance GHC.Generics.Generic Amazonka.AppMesh.Types.TcpRoute.TcpRoute
instance GHC.Show.Show Amazonka.AppMesh.Types.TcpRoute.TcpRoute
instance GHC.Read.Read Amazonka.AppMesh.Types.TcpRoute.TcpRoute
instance GHC.Classes.Eq Amazonka.AppMesh.Types.TcpRoute.TcpRoute
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.TcpRoute.TcpRoute
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.TcpRoute.TcpRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.TcpRoute.TcpRoute
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.TcpRoute.TcpRoute


module Amazonka.AppMesh.Types.HttpRouteAction

-- | An object that represents the action to take if a match is determined.
--   
--   <i>See:</i> <a>newHttpRouteAction</a> smart constructor.
data HttpRouteAction
HttpRouteAction' :: NonEmpty WeightedTarget -> HttpRouteAction

-- | An object that represents the targets that traffic is routed to when a
--   request matches the route.
[$sel:weightedTargets:HttpRouteAction'] :: HttpRouteAction -> NonEmpty WeightedTarget

-- | Create a value of <a>HttpRouteAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:weightedTargets:HttpRouteAction'</a>,
--   <a>httpRouteAction_weightedTargets</a> - An object that represents the
--   targets that traffic is routed to when a request matches the route.
newHttpRouteAction :: NonEmpty WeightedTarget -> HttpRouteAction

-- | An object that represents the targets that traffic is routed to when a
--   request matches the route.
httpRouteAction_weightedTargets :: Lens' HttpRouteAction (NonEmpty WeightedTarget)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.HttpRouteAction.HttpRouteAction
instance GHC.Show.Show Amazonka.AppMesh.Types.HttpRouteAction.HttpRouteAction
instance GHC.Read.Read Amazonka.AppMesh.Types.HttpRouteAction.HttpRouteAction
instance GHC.Classes.Eq Amazonka.AppMesh.Types.HttpRouteAction.HttpRouteAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.HttpRouteAction.HttpRouteAction
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.HttpRouteAction.HttpRouteAction
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.HttpRouteAction.HttpRouteAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.HttpRouteAction.HttpRouteAction


module Amazonka.AppMesh.Types.HttpRoute

-- | An object that represents an HTTP or HTTP/2 route type.
--   
--   <i>See:</i> <a>newHttpRoute</a> smart constructor.
data HttpRoute
HttpRoute' :: Maybe HttpRetryPolicy -> Maybe HttpTimeout -> HttpRouteAction -> HttpRouteMatch -> HttpRoute

-- | An object that represents a retry policy.
[$sel:retryPolicy:HttpRoute'] :: HttpRoute -> Maybe HttpRetryPolicy

-- | An object that represents types of timeouts.
[$sel:timeout:HttpRoute'] :: HttpRoute -> Maybe HttpTimeout

-- | An object that represents the action to take if a match is determined.
[$sel:action:HttpRoute'] :: HttpRoute -> HttpRouteAction

-- | An object that represents the criteria for determining a request
--   match.
[$sel:match:HttpRoute'] :: HttpRoute -> HttpRouteMatch

-- | Create a value of <a>HttpRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retryPolicy:HttpRoute'</a>, <a>httpRoute_retryPolicy</a> - An
--   object that represents a retry policy.
--   
--   <a>$sel:timeout:HttpRoute'</a>, <a>httpRoute_timeout</a> - An object
--   that represents types of timeouts.
--   
--   <a>$sel:action:HttpRoute'</a>, <a>httpRoute_action</a> - An object
--   that represents the action to take if a match is determined.
--   
--   <a>$sel:match:HttpRoute'</a>, <a>httpRoute_match</a> - An object that
--   represents the criteria for determining a request match.
newHttpRoute :: HttpRouteAction -> HttpRouteMatch -> HttpRoute

-- | An object that represents a retry policy.
httpRoute_retryPolicy :: Lens' HttpRoute (Maybe HttpRetryPolicy)

-- | An object that represents types of timeouts.
httpRoute_timeout :: Lens' HttpRoute (Maybe HttpTimeout)

-- | An object that represents the action to take if a match is determined.
httpRoute_action :: Lens' HttpRoute HttpRouteAction

-- | An object that represents the criteria for determining a request
--   match.
httpRoute_match :: Lens' HttpRoute HttpRouteMatch
instance GHC.Generics.Generic Amazonka.AppMesh.Types.HttpRoute.HttpRoute
instance GHC.Show.Show Amazonka.AppMesh.Types.HttpRoute.HttpRoute
instance GHC.Read.Read Amazonka.AppMesh.Types.HttpRoute.HttpRoute
instance GHC.Classes.Eq Amazonka.AppMesh.Types.HttpRoute.HttpRoute
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.HttpRoute.HttpRoute
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.HttpRoute.HttpRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.HttpRoute.HttpRoute
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.HttpRoute.HttpRoute


module Amazonka.AppMesh.Types.GrpcRouteAction

-- | An object that represents the action to take if a match is determined.
--   
--   <i>See:</i> <a>newGrpcRouteAction</a> smart constructor.
data GrpcRouteAction
GrpcRouteAction' :: NonEmpty WeightedTarget -> GrpcRouteAction

-- | An object that represents the targets that traffic is routed to when a
--   request matches the route.
[$sel:weightedTargets:GrpcRouteAction'] :: GrpcRouteAction -> NonEmpty WeightedTarget

-- | Create a value of <a>GrpcRouteAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:weightedTargets:GrpcRouteAction'</a>,
--   <a>grpcRouteAction_weightedTargets</a> - An object that represents the
--   targets that traffic is routed to when a request matches the route.
newGrpcRouteAction :: NonEmpty WeightedTarget -> GrpcRouteAction

-- | An object that represents the targets that traffic is routed to when a
--   request matches the route.
grpcRouteAction_weightedTargets :: Lens' GrpcRouteAction (NonEmpty WeightedTarget)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GrpcRouteAction.GrpcRouteAction
instance GHC.Show.Show Amazonka.AppMesh.Types.GrpcRouteAction.GrpcRouteAction
instance GHC.Read.Read Amazonka.AppMesh.Types.GrpcRouteAction.GrpcRouteAction
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GrpcRouteAction.GrpcRouteAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GrpcRouteAction.GrpcRouteAction
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GrpcRouteAction.GrpcRouteAction
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GrpcRouteAction.GrpcRouteAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.GrpcRouteAction.GrpcRouteAction


module Amazonka.AppMesh.Types.GrpcRoute

-- | An object that represents a gRPC route type.
--   
--   <i>See:</i> <a>newGrpcRoute</a> smart constructor.
data GrpcRoute
GrpcRoute' :: Maybe GrpcRetryPolicy -> Maybe GrpcTimeout -> GrpcRouteAction -> GrpcRouteMatch -> GrpcRoute

-- | An object that represents a retry policy.
[$sel:retryPolicy:GrpcRoute'] :: GrpcRoute -> Maybe GrpcRetryPolicy

-- | An object that represents types of timeouts.
[$sel:timeout:GrpcRoute'] :: GrpcRoute -> Maybe GrpcTimeout

-- | An object that represents the action to take if a match is determined.
[$sel:action:GrpcRoute'] :: GrpcRoute -> GrpcRouteAction

-- | An object that represents the criteria for determining a request
--   match.
[$sel:match:GrpcRoute'] :: GrpcRoute -> GrpcRouteMatch

-- | Create a value of <a>GrpcRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retryPolicy:GrpcRoute'</a>, <a>grpcRoute_retryPolicy</a> - An
--   object that represents a retry policy.
--   
--   <a>$sel:timeout:GrpcRoute'</a>, <a>grpcRoute_timeout</a> - An object
--   that represents types of timeouts.
--   
--   <a>$sel:action:GrpcRoute'</a>, <a>grpcRoute_action</a> - An object
--   that represents the action to take if a match is determined.
--   
--   <a>$sel:match:GrpcRoute'</a>, <a>grpcRoute_match</a> - An object that
--   represents the criteria for determining a request match.
newGrpcRoute :: GrpcRouteAction -> GrpcRouteMatch -> GrpcRoute

-- | An object that represents a retry policy.
grpcRoute_retryPolicy :: Lens' GrpcRoute (Maybe GrpcRetryPolicy)

-- | An object that represents types of timeouts.
grpcRoute_timeout :: Lens' GrpcRoute (Maybe GrpcTimeout)

-- | An object that represents the action to take if a match is determined.
grpcRoute_action :: Lens' GrpcRoute GrpcRouteAction

-- | An object that represents the criteria for determining a request
--   match.
grpcRoute_match :: Lens' GrpcRoute GrpcRouteMatch
instance GHC.Generics.Generic Amazonka.AppMesh.Types.GrpcRoute.GrpcRoute
instance GHC.Show.Show Amazonka.AppMesh.Types.GrpcRoute.GrpcRoute
instance GHC.Read.Read Amazonka.AppMesh.Types.GrpcRoute.GrpcRoute
instance GHC.Classes.Eq Amazonka.AppMesh.Types.GrpcRoute.GrpcRoute
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.GrpcRoute.GrpcRoute
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.GrpcRoute.GrpcRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.GrpcRoute.GrpcRoute
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.GrpcRoute.GrpcRoute


module Amazonka.AppMesh.Types.RouteSpec

-- | An object that represents a route specification. Specify one route
--   type.
--   
--   <i>See:</i> <a>newRouteSpec</a> smart constructor.
data RouteSpec
RouteSpec' :: Maybe Natural -> Maybe HttpRoute -> Maybe GrpcRoute -> Maybe TcpRoute -> Maybe HttpRoute -> RouteSpec

-- | The priority for the route. Routes are matched based on the specified
--   value, where 0 is the highest priority.
[$sel:priority:RouteSpec'] :: RouteSpec -> Maybe Natural

-- | An object that represents the specification of an HTTP/2 route.
[$sel:http2Route:RouteSpec'] :: RouteSpec -> Maybe HttpRoute

-- | An object that represents the specification of a gRPC route.
[$sel:grpcRoute:RouteSpec'] :: RouteSpec -> Maybe GrpcRoute

-- | An object that represents the specification of a TCP route.
[$sel:tcpRoute:RouteSpec'] :: RouteSpec -> Maybe TcpRoute

-- | An object that represents the specification of an HTTP route.
[$sel:httpRoute:RouteSpec'] :: RouteSpec -> Maybe HttpRoute

-- | Create a value of <a>RouteSpec</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priority:RouteSpec'</a>, <a>routeSpec_priority</a> - The
--   priority for the route. Routes are matched based on the specified
--   value, where 0 is the highest priority.
--   
--   <a>$sel:http2Route:RouteSpec'</a>, <a>routeSpec_http2Route</a> - An
--   object that represents the specification of an HTTP/2 route.
--   
--   <a>$sel:grpcRoute:RouteSpec'</a>, <a>routeSpec_grpcRoute</a> - An
--   object that represents the specification of a gRPC route.
--   
--   <a>$sel:tcpRoute:RouteSpec'</a>, <a>routeSpec_tcpRoute</a> - An object
--   that represents the specification of a TCP route.
--   
--   <a>$sel:httpRoute:RouteSpec'</a>, <a>routeSpec_httpRoute</a> - An
--   object that represents the specification of an HTTP route.
newRouteSpec :: RouteSpec

-- | The priority for the route. Routes are matched based on the specified
--   value, where 0 is the highest priority.
routeSpec_priority :: Lens' RouteSpec (Maybe Natural)

-- | An object that represents the specification of an HTTP/2 route.
routeSpec_http2Route :: Lens' RouteSpec (Maybe HttpRoute)

-- | An object that represents the specification of a gRPC route.
routeSpec_grpcRoute :: Lens' RouteSpec (Maybe GrpcRoute)

-- | An object that represents the specification of a TCP route.
routeSpec_tcpRoute :: Lens' RouteSpec (Maybe TcpRoute)

-- | An object that represents the specification of an HTTP route.
routeSpec_httpRoute :: Lens' RouteSpec (Maybe HttpRoute)
instance GHC.Generics.Generic Amazonka.AppMesh.Types.RouteSpec.RouteSpec
instance GHC.Show.Show Amazonka.AppMesh.Types.RouteSpec.RouteSpec
instance GHC.Read.Read Amazonka.AppMesh.Types.RouteSpec.RouteSpec
instance GHC.Classes.Eq Amazonka.AppMesh.Types.RouteSpec.RouteSpec
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.RouteSpec.RouteSpec
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.RouteSpec.RouteSpec
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.RouteSpec.RouteSpec
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.Types.RouteSpec.RouteSpec


module Amazonka.AppMesh.Types.RouteData

-- | An object that represents a route returned by a describe operation.
--   
--   <i>See:</i> <a>newRouteData</a> smart constructor.
data RouteData
RouteData' :: Text -> ResourceMetadata -> Text -> RouteSpec -> RouteStatus -> Text -> RouteData

-- | The name of the service mesh that the route resides in.
[$sel:meshName:RouteData'] :: RouteData -> Text

-- | The associated metadata for the route.
[$sel:metadata:RouteData'] :: RouteData -> ResourceMetadata

-- | The name of the route.
[$sel:routeName:RouteData'] :: RouteData -> Text

-- | The specifications of the route.
[$sel:spec:RouteData'] :: RouteData -> RouteSpec

-- | The status of the route.
[$sel:status:RouteData'] :: RouteData -> RouteStatus

-- | The virtual router that the route is associated with.
[$sel:virtualRouterName:RouteData'] :: RouteData -> Text

-- | Create a value of <a>RouteData</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshName:RouteData'</a>, <a>routeData_meshName</a> - The name
--   of the service mesh that the route resides in.
--   
--   <a>$sel:metadata:RouteData'</a>, <a>routeData_metadata</a> - The
--   associated metadata for the route.
--   
--   <a>$sel:routeName:RouteData'</a>, <a>routeData_routeName</a> - The
--   name of the route.
--   
--   <a>$sel:spec:RouteData'</a>, <a>routeData_spec</a> - The
--   specifications of the route.
--   
--   <a>$sel:status:RouteData'</a>, <a>routeData_status</a> - The status of
--   the route.
--   
--   <a>$sel:virtualRouterName:RouteData'</a>,
--   <a>routeData_virtualRouterName</a> - The virtual router that the route
--   is associated with.
newRouteData :: Text -> ResourceMetadata -> Text -> RouteSpec -> RouteStatus -> Text -> RouteData

-- | The name of the service mesh that the route resides in.
routeData_meshName :: Lens' RouteData Text

-- | The associated metadata for the route.
routeData_metadata :: Lens' RouteData ResourceMetadata

-- | The name of the route.
routeData_routeName :: Lens' RouteData Text

-- | The specifications of the route.
routeData_spec :: Lens' RouteData RouteSpec

-- | The status of the route.
routeData_status :: Lens' RouteData RouteStatus

-- | The virtual router that the route is associated with.
routeData_virtualRouterName :: Lens' RouteData Text
instance GHC.Generics.Generic Amazonka.AppMesh.Types.RouteData.RouteData
instance GHC.Show.Show Amazonka.AppMesh.Types.RouteData.RouteData
instance GHC.Read.Read Amazonka.AppMesh.Types.RouteData.RouteData
instance GHC.Classes.Eq Amazonka.AppMesh.Types.RouteData.RouteData
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.AppMesh.Types.RouteData.RouteData
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.Types.RouteData.RouteData
instance Control.DeepSeq.NFData Amazonka.AppMesh.Types.RouteData.RouteData


module Amazonka.AppMesh.Types

-- | API version <tt>2019-01-25</tt> of the Amazon App Mesh SDK
--   configuration.
defaultService :: Service

-- | The request exceeds the maximum allowed number of tags allowed per
--   resource. The current limit is 50 user tags per resource. You must
--   reduce the number of tags in the request. None of the tags in this
--   request were applied.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request contains a client token that was used for a previous
--   update resource call with different specifications. Try the request
--   again with a new client token.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You don't have permissions to perform this action.
_ForbiddenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource doesn't exist. Check your request syntax and
--   try again.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum request rate permitted by the App Mesh APIs has been
--   exceeded for your account. For best results, use an increasing or
--   variable sleep interval between requests.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request processing has failed because of an unknown error,
--   exception, or failure.
_InternalServerErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request has failed due to a temporary failure of the service.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request syntax was malformed. Check your request syntax and try
--   again.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have exceeded a service limit for your account. For more
--   information, see <a>Service Limits</a> in the <i>AWS App Mesh User
--   Guide</i>.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You can't delete the specified resource because it's in use or
--   required by another resource.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError
newtype DefaultGatewayRouteRewrite
DefaultGatewayRouteRewrite' :: Text -> DefaultGatewayRouteRewrite
[fromDefaultGatewayRouteRewrite] :: DefaultGatewayRouteRewrite -> Text
pattern DefaultGatewayRouteRewrite_DISABLED :: DefaultGatewayRouteRewrite
pattern DefaultGatewayRouteRewrite_ENABLED :: DefaultGatewayRouteRewrite
newtype DnsResponseType
DnsResponseType' :: Text -> DnsResponseType
[fromDnsResponseType] :: DnsResponseType -> Text
pattern DnsResponseType_ENDPOINTS :: DnsResponseType
pattern DnsResponseType_LOADBALANCER :: DnsResponseType
newtype DurationUnit
DurationUnit' :: Text -> DurationUnit
[fromDurationUnit] :: DurationUnit -> Text
pattern DurationUnit_Ms :: DurationUnit
pattern DurationUnit_S :: DurationUnit
newtype EgressFilterType
EgressFilterType' :: Text -> EgressFilterType
[fromEgressFilterType] :: EgressFilterType -> Text
pattern EgressFilterType_ALLOW_ALL :: EgressFilterType
pattern EgressFilterType_DROP_ALL :: EgressFilterType
newtype GatewayRouteStatusCode
GatewayRouteStatusCode' :: Text -> GatewayRouteStatusCode
[fromGatewayRouteStatusCode] :: GatewayRouteStatusCode -> Text
pattern GatewayRouteStatusCode_ACTIVE :: GatewayRouteStatusCode
pattern GatewayRouteStatusCode_DELETED :: GatewayRouteStatusCode
pattern GatewayRouteStatusCode_INACTIVE :: GatewayRouteStatusCode
newtype GrpcRetryPolicyEvent
GrpcRetryPolicyEvent' :: Text -> GrpcRetryPolicyEvent
[fromGrpcRetryPolicyEvent] :: GrpcRetryPolicyEvent -> Text
pattern GrpcRetryPolicyEvent_Cancelled :: GrpcRetryPolicyEvent
pattern GrpcRetryPolicyEvent_Deadline_exceeded :: GrpcRetryPolicyEvent
pattern GrpcRetryPolicyEvent_Internal :: GrpcRetryPolicyEvent
pattern GrpcRetryPolicyEvent_Resource_exhausted :: GrpcRetryPolicyEvent
pattern GrpcRetryPolicyEvent_Unavailable :: GrpcRetryPolicyEvent
newtype HttpMethod
HttpMethod' :: Text -> HttpMethod
[fromHttpMethod] :: HttpMethod -> Text
pattern HttpMethod_CONNECT :: HttpMethod
pattern HttpMethod_DELETE :: HttpMethod
pattern HttpMethod_GET :: HttpMethod
pattern HttpMethod_HEAD :: HttpMethod
pattern HttpMethod_OPTIONS :: HttpMethod
pattern HttpMethod_PATCH :: HttpMethod
pattern HttpMethod_POST :: HttpMethod
pattern HttpMethod_PUT :: HttpMethod
pattern HttpMethod_TRACE :: HttpMethod
newtype HttpScheme
HttpScheme' :: Text -> HttpScheme
[fromHttpScheme] :: HttpScheme -> Text
pattern HttpScheme_Http :: HttpScheme
pattern HttpScheme_Https :: HttpScheme
newtype ListenerTlsMode
ListenerTlsMode' :: Text -> ListenerTlsMode
[fromListenerTlsMode] :: ListenerTlsMode -> Text
pattern ListenerTlsMode_DISABLED :: ListenerTlsMode
pattern ListenerTlsMode_PERMISSIVE :: ListenerTlsMode
pattern ListenerTlsMode_STRICT :: ListenerTlsMode
newtype MeshStatusCode
MeshStatusCode' :: Text -> MeshStatusCode
[fromMeshStatusCode] :: MeshStatusCode -> Text
pattern MeshStatusCode_ACTIVE :: MeshStatusCode
pattern MeshStatusCode_DELETED :: MeshStatusCode
pattern MeshStatusCode_INACTIVE :: MeshStatusCode
newtype PortProtocol
PortProtocol' :: Text -> PortProtocol
[fromPortProtocol] :: PortProtocol -> Text
pattern PortProtocol_Grpc :: PortProtocol
pattern PortProtocol_Http :: PortProtocol
pattern PortProtocol_Http2 :: PortProtocol
pattern PortProtocol_Tcp :: PortProtocol
newtype RouteStatusCode
RouteStatusCode' :: Text -> RouteStatusCode
[fromRouteStatusCode] :: RouteStatusCode -> Text
pattern RouteStatusCode_ACTIVE :: RouteStatusCode
pattern RouteStatusCode_DELETED :: RouteStatusCode
pattern RouteStatusCode_INACTIVE :: RouteStatusCode
newtype TcpRetryPolicyEvent
TcpRetryPolicyEvent' :: Text -> TcpRetryPolicyEvent
[fromTcpRetryPolicyEvent] :: TcpRetryPolicyEvent -> Text
pattern TcpRetryPolicyEvent_Connection_error :: TcpRetryPolicyEvent
newtype VirtualGatewayListenerTlsMode
VirtualGatewayListenerTlsMode' :: Text -> VirtualGatewayListenerTlsMode
[fromVirtualGatewayListenerTlsMode] :: VirtualGatewayListenerTlsMode -> Text
pattern VirtualGatewayListenerTlsMode_DISABLED :: VirtualGatewayListenerTlsMode
pattern VirtualGatewayListenerTlsMode_PERMISSIVE :: VirtualGatewayListenerTlsMode
pattern VirtualGatewayListenerTlsMode_STRICT :: VirtualGatewayListenerTlsMode
newtype VirtualGatewayPortProtocol
VirtualGatewayPortProtocol' :: Text -> VirtualGatewayPortProtocol
[fromVirtualGatewayPortProtocol] :: VirtualGatewayPortProtocol -> Text
pattern VirtualGatewayPortProtocol_Grpc :: VirtualGatewayPortProtocol
pattern VirtualGatewayPortProtocol_Http :: VirtualGatewayPortProtocol
pattern VirtualGatewayPortProtocol_Http2 :: VirtualGatewayPortProtocol
newtype VirtualGatewayStatusCode
VirtualGatewayStatusCode' :: Text -> VirtualGatewayStatusCode
[fromVirtualGatewayStatusCode] :: VirtualGatewayStatusCode -> Text
pattern VirtualGatewayStatusCode_ACTIVE :: VirtualGatewayStatusCode
pattern VirtualGatewayStatusCode_DELETED :: VirtualGatewayStatusCode
pattern VirtualGatewayStatusCode_INACTIVE :: VirtualGatewayStatusCode
newtype VirtualNodeStatusCode
VirtualNodeStatusCode' :: Text -> VirtualNodeStatusCode
[fromVirtualNodeStatusCode] :: VirtualNodeStatusCode -> Text
pattern VirtualNodeStatusCode_ACTIVE :: VirtualNodeStatusCode
pattern VirtualNodeStatusCode_DELETED :: VirtualNodeStatusCode
pattern VirtualNodeStatusCode_INACTIVE :: VirtualNodeStatusCode
newtype VirtualRouterStatusCode
VirtualRouterStatusCode' :: Text -> VirtualRouterStatusCode
[fromVirtualRouterStatusCode] :: VirtualRouterStatusCode -> Text
pattern VirtualRouterStatusCode_ACTIVE :: VirtualRouterStatusCode
pattern VirtualRouterStatusCode_DELETED :: VirtualRouterStatusCode
pattern VirtualRouterStatusCode_INACTIVE :: VirtualRouterStatusCode
newtype VirtualServiceStatusCode
VirtualServiceStatusCode' :: Text -> VirtualServiceStatusCode
[fromVirtualServiceStatusCode] :: VirtualServiceStatusCode -> Text
pattern VirtualServiceStatusCode_ACTIVE :: VirtualServiceStatusCode
pattern VirtualServiceStatusCode_DELETED :: VirtualServiceStatusCode
pattern VirtualServiceStatusCode_INACTIVE :: VirtualServiceStatusCode

-- | An object that represents the access logging information for a virtual
--   node.
--   
--   <i>See:</i> <a>newAccessLog</a> smart constructor.
data AccessLog
AccessLog' :: Maybe FileAccessLog -> AccessLog

-- | The file object to send virtual node access logs to.
[$sel:file:AccessLog'] :: AccessLog -> Maybe FileAccessLog

-- | Create a value of <a>AccessLog</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:file:AccessLog'</a>, <a>accessLog_file</a> - The file object
--   to send virtual node access logs to.
newAccessLog :: AccessLog

-- | The file object to send virtual node access logs to.
accessLog_file :: Lens' AccessLog (Maybe FileAccessLog)

-- | An object that represents the Cloud Map attribute information for your
--   virtual node.
--   
--   AWS Cloud Map is not available in the eu-south-1 Region.
--   
--   <i>See:</i> <a>newAwsCloudMapInstanceAttribute</a> smart constructor.
data AwsCloudMapInstanceAttribute
AwsCloudMapInstanceAttribute' :: Text -> Text -> AwsCloudMapInstanceAttribute

-- | The name of an Cloud Map service instance attribute key. Any Cloud Map
--   service instance that contains the specified key and value is
--   returned.
[$sel:key:AwsCloudMapInstanceAttribute'] :: AwsCloudMapInstanceAttribute -> Text

-- | The value of an Cloud Map service instance attribute key. Any Cloud
--   Map service instance that contains the specified key and value is
--   returned.
[$sel:value:AwsCloudMapInstanceAttribute'] :: AwsCloudMapInstanceAttribute -> Text

-- | Create a value of <a>AwsCloudMapInstanceAttribute</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:AwsCloudMapInstanceAttribute'</a>,
--   <a>awsCloudMapInstanceAttribute_key</a> - The name of an Cloud Map
--   service instance attribute key. Any Cloud Map service instance that
--   contains the specified key and value is returned.
--   
--   <a>$sel:value:AwsCloudMapInstanceAttribute'</a>,
--   <a>awsCloudMapInstanceAttribute_value</a> - The value of an Cloud Map
--   service instance attribute key. Any Cloud Map service instance that
--   contains the specified key and value is returned.
newAwsCloudMapInstanceAttribute :: Text -> Text -> AwsCloudMapInstanceAttribute

-- | The name of an Cloud Map service instance attribute key. Any Cloud Map
--   service instance that contains the specified key and value is
--   returned.
awsCloudMapInstanceAttribute_key :: Lens' AwsCloudMapInstanceAttribute Text

-- | The value of an Cloud Map service instance attribute key. Any Cloud
--   Map service instance that contains the specified key and value is
--   returned.
awsCloudMapInstanceAttribute_value :: Lens' AwsCloudMapInstanceAttribute Text

-- | An object that represents the Cloud Map service discovery information
--   for your virtual node.
--   
--   Cloud Map is not available in the eu-south-1 Region.
--   
--   <i>See:</i> <a>newAwsCloudMapServiceDiscovery</a> smart constructor.
data AwsCloudMapServiceDiscovery
AwsCloudMapServiceDiscovery' :: Maybe [AwsCloudMapInstanceAttribute] -> Text -> Text -> AwsCloudMapServiceDiscovery

-- | A string map that contains attributes with values that you can use to
--   filter instances by any custom attribute that you specified when you
--   registered the instance. Only instances that match all of the
--   specified key/value pairs will be returned.
[$sel:attributes:AwsCloudMapServiceDiscovery'] :: AwsCloudMapServiceDiscovery -> Maybe [AwsCloudMapInstanceAttribute]

-- | The name of the Cloud Map namespace to use.
[$sel:namespaceName:AwsCloudMapServiceDiscovery'] :: AwsCloudMapServiceDiscovery -> Text

-- | The name of the Cloud Map service to use.
[$sel:serviceName:AwsCloudMapServiceDiscovery'] :: AwsCloudMapServiceDiscovery -> Text

-- | Create a value of <a>AwsCloudMapServiceDiscovery</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:AwsCloudMapServiceDiscovery'</a>,
--   <a>awsCloudMapServiceDiscovery_attributes</a> - A string map that
--   contains attributes with values that you can use to filter instances
--   by any custom attribute that you specified when you registered the
--   instance. Only instances that match all of the specified key/value
--   pairs will be returned.
--   
--   <a>$sel:namespaceName:AwsCloudMapServiceDiscovery'</a>,
--   <a>awsCloudMapServiceDiscovery_namespaceName</a> - The name of the
--   Cloud Map namespace to use.
--   
--   <a>$sel:serviceName:AwsCloudMapServiceDiscovery'</a>,
--   <a>awsCloudMapServiceDiscovery_serviceName</a> - The name of the Cloud
--   Map service to use.
newAwsCloudMapServiceDiscovery :: Text -> Text -> AwsCloudMapServiceDiscovery

-- | A string map that contains attributes with values that you can use to
--   filter instances by any custom attribute that you specified when you
--   registered the instance. Only instances that match all of the
--   specified key/value pairs will be returned.
awsCloudMapServiceDiscovery_attributes :: Lens' AwsCloudMapServiceDiscovery (Maybe [AwsCloudMapInstanceAttribute])

-- | The name of the Cloud Map namespace to use.
awsCloudMapServiceDiscovery_namespaceName :: Lens' AwsCloudMapServiceDiscovery Text

-- | The name of the Cloud Map service to use.
awsCloudMapServiceDiscovery_serviceName :: Lens' AwsCloudMapServiceDiscovery Text

-- | An object that represents the backends that a virtual node is expected
--   to send outbound traffic to.
--   
--   <i>See:</i> <a>newBackend</a> smart constructor.
data Backend
Backend' :: Maybe VirtualServiceBackend -> Backend

-- | Specifies a virtual service to use as a backend.
[$sel:virtualService:Backend'] :: Backend -> Maybe VirtualServiceBackend

-- | Create a value of <a>Backend</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualService:Backend'</a>, <a>backend_virtualService</a> -
--   Specifies a virtual service to use as a backend.
newBackend :: Backend

-- | Specifies a virtual service to use as a backend.
backend_virtualService :: Lens' Backend (Maybe VirtualServiceBackend)

-- | An object that represents the default properties for a backend.
--   
--   <i>See:</i> <a>newBackendDefaults</a> smart constructor.
data BackendDefaults
BackendDefaults' :: Maybe ClientPolicy -> BackendDefaults

-- | A reference to an object that represents a client policy.
[$sel:clientPolicy:BackendDefaults'] :: BackendDefaults -> Maybe ClientPolicy

-- | Create a value of <a>BackendDefaults</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientPolicy:BackendDefaults'</a>,
--   <a>backendDefaults_clientPolicy</a> - A reference to an object that
--   represents a client policy.
newBackendDefaults :: BackendDefaults

-- | A reference to an object that represents a client policy.
backendDefaults_clientPolicy :: Lens' BackendDefaults (Maybe ClientPolicy)

-- | An object that represents a client policy.
--   
--   <i>See:</i> <a>newClientPolicy</a> smart constructor.
data ClientPolicy
ClientPolicy' :: Maybe ClientPolicyTls -> ClientPolicy

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) client policy.
[$sel:tls:ClientPolicy'] :: ClientPolicy -> Maybe ClientPolicyTls

-- | Create a value of <a>ClientPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tls:ClientPolicy'</a>, <a>clientPolicy_tls</a> - A reference
--   to an object that represents a Transport Layer Security (TLS) client
--   policy.
newClientPolicy :: ClientPolicy

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) client policy.
clientPolicy_tls :: Lens' ClientPolicy (Maybe ClientPolicyTls)

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) client policy.
--   
--   <i>See:</i> <a>newClientPolicyTls</a> smart constructor.
data ClientPolicyTls
ClientPolicyTls' :: Maybe [Natural] -> Maybe ClientTlsCertificate -> Maybe Bool -> TlsValidationContext -> ClientPolicyTls

-- | One or more ports that the policy is enforced for.
[$sel:ports:ClientPolicyTls'] :: ClientPolicyTls -> Maybe [Natural]

-- | A reference to an object that represents a client's TLS certificate.
[$sel:certificate:ClientPolicyTls'] :: ClientPolicyTls -> Maybe ClientTlsCertificate

-- | Whether the policy is enforced. The default is <tt>True</tt>, if a
--   value isn't specified.
[$sel:enforce:ClientPolicyTls'] :: ClientPolicyTls -> Maybe Bool

-- | A reference to an object that represents a TLS validation context.
[$sel:validation:ClientPolicyTls'] :: ClientPolicyTls -> TlsValidationContext

-- | Create a value of <a>ClientPolicyTls</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ports:ClientPolicyTls'</a>, <a>clientPolicyTls_ports</a> - One
--   or more ports that the policy is enforced for.
--   
--   <a>$sel:certificate:ClientPolicyTls'</a>,
--   <a>clientPolicyTls_certificate</a> - A reference to an object that
--   represents a client's TLS certificate.
--   
--   <a>$sel:enforce:ClientPolicyTls'</a>, <a>clientPolicyTls_enforce</a> -
--   Whether the policy is enforced. The default is <tt>True</tt>, if a
--   value isn't specified.
--   
--   <a>$sel:validation:ClientPolicyTls'</a>,
--   <a>clientPolicyTls_validation</a> - A reference to an object that
--   represents a TLS validation context.
newClientPolicyTls :: TlsValidationContext -> ClientPolicyTls

-- | One or more ports that the policy is enforced for.
clientPolicyTls_ports :: Lens' ClientPolicyTls (Maybe [Natural])

-- | A reference to an object that represents a client's TLS certificate.
clientPolicyTls_certificate :: Lens' ClientPolicyTls (Maybe ClientTlsCertificate)

-- | Whether the policy is enforced. The default is <tt>True</tt>, if a
--   value isn't specified.
clientPolicyTls_enforce :: Lens' ClientPolicyTls (Maybe Bool)

-- | A reference to an object that represents a TLS validation context.
clientPolicyTls_validation :: Lens' ClientPolicyTls TlsValidationContext

-- | An object that represents the client's certificate.
--   
--   <i>See:</i> <a>newClientTlsCertificate</a> smart constructor.
data ClientTlsCertificate
ClientTlsCertificate' :: Maybe ListenerTlsSdsCertificate -> Maybe ListenerTlsFileCertificate -> ClientTlsCertificate

-- | A reference to an object that represents a client's TLS Secret
--   Discovery Service certificate.
[$sel:sds:ClientTlsCertificate'] :: ClientTlsCertificate -> Maybe ListenerTlsSdsCertificate

-- | An object that represents a local file certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
[$sel:file:ClientTlsCertificate'] :: ClientTlsCertificate -> Maybe ListenerTlsFileCertificate

-- | Create a value of <a>ClientTlsCertificate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sds:ClientTlsCertificate'</a>, <a>clientTlsCertificate_sds</a>
--   - A reference to an object that represents a client's TLS Secret
--   Discovery Service certificate.
--   
--   <a>$sel:file:ClientTlsCertificate'</a>,
--   <a>clientTlsCertificate_file</a> - An object that represents a local
--   file certificate. The certificate must meet specific requirements and
--   you must have proxy authorization enabled. For more information, see
--   <a>Transport Layer Security (TLS)</a>.
newClientTlsCertificate :: ClientTlsCertificate

-- | A reference to an object that represents a client's TLS Secret
--   Discovery Service certificate.
clientTlsCertificate_sds :: Lens' ClientTlsCertificate (Maybe ListenerTlsSdsCertificate)

-- | An object that represents a local file certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
clientTlsCertificate_file :: Lens' ClientTlsCertificate (Maybe ListenerTlsFileCertificate)

-- | An object that represents the DNS service discovery information for
--   your virtual node.
--   
--   <i>See:</i> <a>newDnsServiceDiscovery</a> smart constructor.
data DnsServiceDiscovery
DnsServiceDiscovery' :: Maybe DnsResponseType -> Text -> DnsServiceDiscovery

-- | Specifies the DNS response type for the virtual node.
[$sel:responseType:DnsServiceDiscovery'] :: DnsServiceDiscovery -> Maybe DnsResponseType

-- | Specifies the DNS service discovery hostname for the virtual node.
[$sel:hostname:DnsServiceDiscovery'] :: DnsServiceDiscovery -> Text

-- | Create a value of <a>DnsServiceDiscovery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseType:DnsServiceDiscovery'</a>,
--   <a>dnsServiceDiscovery_responseType</a> - Specifies the DNS response
--   type for the virtual node.
--   
--   <a>$sel:hostname:DnsServiceDiscovery'</a>,
--   <a>dnsServiceDiscovery_hostname</a> - Specifies the DNS service
--   discovery hostname for the virtual node.
newDnsServiceDiscovery :: Text -> DnsServiceDiscovery

-- | Specifies the DNS response type for the virtual node.
dnsServiceDiscovery_responseType :: Lens' DnsServiceDiscovery (Maybe DnsResponseType)

-- | Specifies the DNS service discovery hostname for the virtual node.
dnsServiceDiscovery_hostname :: Lens' DnsServiceDiscovery Text

-- | An object that represents a duration of time.
--   
--   <i>See:</i> <a>newDuration</a> smart constructor.
data Duration
Duration' :: Maybe Natural -> Maybe DurationUnit -> Duration

-- | A number of time units.
[$sel:value:Duration'] :: Duration -> Maybe Natural

-- | A unit of time.
[$sel:unit:Duration'] :: Duration -> Maybe DurationUnit

-- | Create a value of <a>Duration</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Duration'</a>, <a>duration_value</a> - A number of time
--   units.
--   
--   <a>$sel:unit:Duration'</a>, <a>duration_unit</a> - A unit of time.
newDuration :: Duration

-- | A number of time units.
duration_value :: Lens' Duration (Maybe Natural)

-- | A unit of time.
duration_unit :: Lens' Duration (Maybe DurationUnit)

-- | An object that represents the egress filter rules for a service mesh.
--   
--   <i>See:</i> <a>newEgressFilter</a> smart constructor.
data EgressFilter
EgressFilter' :: EgressFilterType -> EgressFilter

-- | The egress filter type. By default, the type is <tt>DROP_ALL</tt>,
--   which allows egress only from virtual nodes to other defined resources
--   in the service mesh (and any traffic to <tt>*.amazonaws.com</tt> for
--   Amazon Web Services API calls). You can set the egress filter type to
--   <tt>ALLOW_ALL</tt> to allow egress to any endpoint inside or outside
--   of the service mesh.
[$sel:type':EgressFilter'] :: EgressFilter -> EgressFilterType

-- | Create a value of <a>EgressFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':EgressFilter'</a>, <a>egressFilter_type</a> - The egress
--   filter type. By default, the type is <tt>DROP_ALL</tt>, which allows
--   egress only from virtual nodes to other defined resources in the
--   service mesh (and any traffic to <tt>*.amazonaws.com</tt> for Amazon
--   Web Services API calls). You can set the egress filter type to
--   <tt>ALLOW_ALL</tt> to allow egress to any endpoint inside or outside
--   of the service mesh.
newEgressFilter :: EgressFilterType -> EgressFilter

-- | The egress filter type. By default, the type is <tt>DROP_ALL</tt>,
--   which allows egress only from virtual nodes to other defined resources
--   in the service mesh (and any traffic to <tt>*.amazonaws.com</tt> for
--   Amazon Web Services API calls). You can set the egress filter type to
--   <tt>ALLOW_ALL</tt> to allow egress to any endpoint inside or outside
--   of the service mesh.
egressFilter_type :: Lens' EgressFilter EgressFilterType

-- | An object that represents an access log file.
--   
--   <i>See:</i> <a>newFileAccessLog</a> smart constructor.
data FileAccessLog
FileAccessLog' :: Text -> FileAccessLog

-- | The file path to write access logs to. You can use
--   <tt>/dev/stdout</tt> to send access logs to standard out and configure
--   your Envoy container to use a log driver, such as <tt>awslogs</tt>, to
--   export the access logs to a log storage service such as Amazon
--   CloudWatch Logs. You can also specify a path in the Envoy container's
--   file system to write the files to disk.
--   
--   The Envoy process must have write permissions to the path that you
--   specify here. Otherwise, Envoy fails to bootstrap properly.
[$sel:path:FileAccessLog'] :: FileAccessLog -> Text

-- | Create a value of <a>FileAccessLog</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:FileAccessLog'</a>, <a>fileAccessLog_path</a> - The file
--   path to write access logs to. You can use <tt>/dev/stdout</tt> to send
--   access logs to standard out and configure your Envoy container to use
--   a log driver, such as <tt>awslogs</tt>, to export the access logs to a
--   log storage service such as Amazon CloudWatch Logs. You can also
--   specify a path in the Envoy container's file system to write the files
--   to disk.
--   
--   The Envoy process must have write permissions to the path that you
--   specify here. Otherwise, Envoy fails to bootstrap properly.
newFileAccessLog :: Text -> FileAccessLog

-- | The file path to write access logs to. You can use
--   <tt>/dev/stdout</tt> to send access logs to standard out and configure
--   your Envoy container to use a log driver, such as <tt>awslogs</tt>, to
--   export the access logs to a log storage service such as Amazon
--   CloudWatch Logs. You can also specify a path in the Envoy container's
--   file system to write the files to disk.
--   
--   The Envoy process must have write permissions to the path that you
--   specify here. Otherwise, Envoy fails to bootstrap properly.
fileAccessLog_path :: Lens' FileAccessLog Text

-- | An object that represents a gateway route returned by a describe
--   operation.
--   
--   <i>See:</i> <a>newGatewayRouteData</a> smart constructor.
data GatewayRouteData
GatewayRouteData' :: Text -> Text -> ResourceMetadata -> GatewayRouteSpec -> GatewayRouteStatus -> Text -> GatewayRouteData

-- | The name of the gateway route.
[$sel:gatewayRouteName:GatewayRouteData'] :: GatewayRouteData -> Text

-- | The name of the service mesh that the resource resides in.
[$sel:meshName:GatewayRouteData'] :: GatewayRouteData -> Text
[$sel:metadata:GatewayRouteData'] :: GatewayRouteData -> ResourceMetadata

-- | The specifications of the gateway route.
[$sel:spec:GatewayRouteData'] :: GatewayRouteData -> GatewayRouteSpec

-- | The status of the gateway route.
[$sel:status:GatewayRouteData'] :: GatewayRouteData -> GatewayRouteStatus

-- | The virtual gateway that the gateway route is associated with.
[$sel:virtualGatewayName:GatewayRouteData'] :: GatewayRouteData -> Text

-- | Create a value of <a>GatewayRouteData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gatewayRouteName:GatewayRouteData'</a>,
--   <a>gatewayRouteData_gatewayRouteName</a> - The name of the gateway
--   route.
--   
--   <a>$sel:meshName:GatewayRouteData'</a>,
--   <a>gatewayRouteData_meshName</a> - The name of the service mesh that
--   the resource resides in.
--   
--   <a>$sel:metadata:GatewayRouteData'</a>,
--   <a>gatewayRouteData_metadata</a> - Undocumented member.
--   
--   <a>$sel:spec:GatewayRouteData'</a>, <a>gatewayRouteData_spec</a> - The
--   specifications of the gateway route.
--   
--   <a>$sel:status:GatewayRouteData'</a>, <a>gatewayRouteData_status</a> -
--   The status of the gateway route.
--   
--   <a>$sel:virtualGatewayName:GatewayRouteData'</a>,
--   <a>gatewayRouteData_virtualGatewayName</a> - The virtual gateway that
--   the gateway route is associated with.
newGatewayRouteData :: Text -> Text -> ResourceMetadata -> GatewayRouteSpec -> GatewayRouteStatus -> Text -> GatewayRouteData

-- | The name of the gateway route.
gatewayRouteData_gatewayRouteName :: Lens' GatewayRouteData Text

-- | The name of the service mesh that the resource resides in.
gatewayRouteData_meshName :: Lens' GatewayRouteData Text

-- | Undocumented member.
gatewayRouteData_metadata :: Lens' GatewayRouteData ResourceMetadata

-- | The specifications of the gateway route.
gatewayRouteData_spec :: Lens' GatewayRouteData GatewayRouteSpec

-- | The status of the gateway route.
gatewayRouteData_status :: Lens' GatewayRouteData GatewayRouteStatus

-- | The virtual gateway that the gateway route is associated with.
gatewayRouteData_virtualGatewayName :: Lens' GatewayRouteData Text

-- | An object representing the gateway route host name to match.
--   
--   <i>See:</i> <a>newGatewayRouteHostnameMatch</a> smart constructor.
data GatewayRouteHostnameMatch
GatewayRouteHostnameMatch' :: Maybe Text -> Maybe Text -> GatewayRouteHostnameMatch

-- | The specified ending characters of the host name to match on.
[$sel:suffix:GatewayRouteHostnameMatch'] :: GatewayRouteHostnameMatch -> Maybe Text

-- | The exact host name to match on.
[$sel:exact:GatewayRouteHostnameMatch'] :: GatewayRouteHostnameMatch -> Maybe Text

-- | Create a value of <a>GatewayRouteHostnameMatch</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suffix:GatewayRouteHostnameMatch'</a>,
--   <a>gatewayRouteHostnameMatch_suffix</a> - The specified ending
--   characters of the host name to match on.
--   
--   <a>$sel:exact:GatewayRouteHostnameMatch'</a>,
--   <a>gatewayRouteHostnameMatch_exact</a> - The exact host name to match
--   on.
newGatewayRouteHostnameMatch :: GatewayRouteHostnameMatch

-- | The specified ending characters of the host name to match on.
gatewayRouteHostnameMatch_suffix :: Lens' GatewayRouteHostnameMatch (Maybe Text)

-- | The exact host name to match on.
gatewayRouteHostnameMatch_exact :: Lens' GatewayRouteHostnameMatch (Maybe Text)

-- | An object representing the gateway route host name to rewrite.
--   
--   <i>See:</i> <a>newGatewayRouteHostnameRewrite</a> smart constructor.
data GatewayRouteHostnameRewrite
GatewayRouteHostnameRewrite' :: Maybe DefaultGatewayRouteRewrite -> GatewayRouteHostnameRewrite

-- | The default target host name to write to.
[$sel:defaultTargetHostname:GatewayRouteHostnameRewrite'] :: GatewayRouteHostnameRewrite -> Maybe DefaultGatewayRouteRewrite

-- | Create a value of <a>GatewayRouteHostnameRewrite</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultTargetHostname:GatewayRouteHostnameRewrite'</a>,
--   <a>gatewayRouteHostnameRewrite_defaultTargetHostname</a> - The default
--   target host name to write to.
newGatewayRouteHostnameRewrite :: GatewayRouteHostnameRewrite

-- | The default target host name to write to.
gatewayRouteHostnameRewrite_defaultTargetHostname :: Lens' GatewayRouteHostnameRewrite (Maybe DefaultGatewayRouteRewrite)

-- | An object that represents a gateway route returned by a list
--   operation.
--   
--   <i>See:</i> <a>newGatewayRouteRef</a> smart constructor.
data GatewayRouteRef
GatewayRouteRef' :: Text -> POSIX -> Text -> POSIX -> Text -> Text -> Text -> Integer -> Text -> GatewayRouteRef

-- | The full Amazon Resource Name (ARN) for the gateway route.
[$sel:arn:GatewayRouteRef'] :: GatewayRouteRef -> Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:GatewayRouteRef'] :: GatewayRouteRef -> POSIX

-- | The name of the gateway route.
[$sel:gatewayRouteName:GatewayRouteRef'] :: GatewayRouteRef -> Text

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
[$sel:lastUpdatedAt:GatewayRouteRef'] :: GatewayRouteRef -> POSIX

-- | The name of the service mesh that the resource resides in.
[$sel:meshName:GatewayRouteRef'] :: GatewayRouteRef -> Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:GatewayRouteRef'] :: GatewayRouteRef -> Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
[$sel:resourceOwner:GatewayRouteRef'] :: GatewayRouteRef -> Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
[$sel:version:GatewayRouteRef'] :: GatewayRouteRef -> Integer

-- | The virtual gateway that the gateway route is associated with.
[$sel:virtualGatewayName:GatewayRouteRef'] :: GatewayRouteRef -> Text

-- | Create a value of <a>GatewayRouteRef</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GatewayRouteRef'</a>, <a>gatewayRouteRef_arn</a> - The
--   full Amazon Resource Name (ARN) for the gateway route.
--   
--   <a>$sel:createdAt:GatewayRouteRef'</a>,
--   <a>gatewayRouteRef_createdAt</a> - The Unix epoch timestamp in seconds
--   for when the resource was created.
--   
--   <a>$sel:gatewayRouteName:GatewayRouteRef'</a>,
--   <a>gatewayRouteRef_gatewayRouteName</a> - The name of the gateway
--   route.
--   
--   <a>$sel:lastUpdatedAt:GatewayRouteRef'</a>,
--   <a>gatewayRouteRef_lastUpdatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was last updated.
--   
--   <a>$sel:meshName:GatewayRouteRef'</a>, <a>gatewayRouteRef_meshName</a>
--   - The name of the service mesh that the resource resides in.
--   
--   <a>$sel:meshOwner:GatewayRouteRef'</a>,
--   <a>gatewayRouteRef_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:GatewayRouteRef'</a>,
--   <a>gatewayRouteRef_resourceOwner</a> - The AWS IAM account ID of the
--   resource owner. If the account ID is not your own, then it's the ID of
--   the mesh owner or of another account that the mesh is shared with. For
--   more information about mesh sharing, see <a>Working with shared
--   meshes</a>.
--   
--   <a>$sel:version:GatewayRouteRef'</a>, <a>gatewayRouteRef_version</a> -
--   The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
--   
--   <a>$sel:virtualGatewayName:GatewayRouteRef'</a>,
--   <a>gatewayRouteRef_virtualGatewayName</a> - The virtual gateway that
--   the gateway route is associated with.
newGatewayRouteRef :: Text -> UTCTime -> Text -> UTCTime -> Text -> Text -> Text -> Integer -> Text -> GatewayRouteRef

-- | The full Amazon Resource Name (ARN) for the gateway route.
gatewayRouteRef_arn :: Lens' GatewayRouteRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
gatewayRouteRef_createdAt :: Lens' GatewayRouteRef UTCTime

-- | The name of the gateway route.
gatewayRouteRef_gatewayRouteName :: Lens' GatewayRouteRef Text

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
gatewayRouteRef_lastUpdatedAt :: Lens' GatewayRouteRef UTCTime

-- | The name of the service mesh that the resource resides in.
gatewayRouteRef_meshName :: Lens' GatewayRouteRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
gatewayRouteRef_meshOwner :: Lens' GatewayRouteRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
gatewayRouteRef_resourceOwner :: Lens' GatewayRouteRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
gatewayRouteRef_version :: Lens' GatewayRouteRef Integer

-- | The virtual gateway that the gateway route is associated with.
gatewayRouteRef_virtualGatewayName :: Lens' GatewayRouteRef Text

-- | An object that represents a gateway route specification. Specify one
--   gateway route type.
--   
--   <i>See:</i> <a>newGatewayRouteSpec</a> smart constructor.
data GatewayRouteSpec
GatewayRouteSpec' :: Maybe Natural -> Maybe HttpGatewayRoute -> Maybe GrpcGatewayRoute -> Maybe HttpGatewayRoute -> GatewayRouteSpec

-- | The ordering of the gateway routes spec.
[$sel:priority:GatewayRouteSpec'] :: GatewayRouteSpec -> Maybe Natural

-- | An object that represents the specification of an HTTP/2 gateway
--   route.
[$sel:http2Route:GatewayRouteSpec'] :: GatewayRouteSpec -> Maybe HttpGatewayRoute

-- | An object that represents the specification of a gRPC gateway route.
[$sel:grpcRoute:GatewayRouteSpec'] :: GatewayRouteSpec -> Maybe GrpcGatewayRoute

-- | An object that represents the specification of an HTTP gateway route.
[$sel:httpRoute:GatewayRouteSpec'] :: GatewayRouteSpec -> Maybe HttpGatewayRoute

-- | Create a value of <a>GatewayRouteSpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priority:GatewayRouteSpec'</a>,
--   <a>gatewayRouteSpec_priority</a> - The ordering of the gateway routes
--   spec.
--   
--   <a>$sel:http2Route:GatewayRouteSpec'</a>,
--   <a>gatewayRouteSpec_http2Route</a> - An object that represents the
--   specification of an HTTP/2 gateway route.
--   
--   <a>$sel:grpcRoute:GatewayRouteSpec'</a>,
--   <a>gatewayRouteSpec_grpcRoute</a> - An object that represents the
--   specification of a gRPC gateway route.
--   
--   <a>$sel:httpRoute:GatewayRouteSpec'</a>,
--   <a>gatewayRouteSpec_httpRoute</a> - An object that represents the
--   specification of an HTTP gateway route.
newGatewayRouteSpec :: GatewayRouteSpec

-- | The ordering of the gateway routes spec.
gatewayRouteSpec_priority :: Lens' GatewayRouteSpec (Maybe Natural)

-- | An object that represents the specification of an HTTP/2 gateway
--   route.
gatewayRouteSpec_http2Route :: Lens' GatewayRouteSpec (Maybe HttpGatewayRoute)

-- | An object that represents the specification of a gRPC gateway route.
gatewayRouteSpec_grpcRoute :: Lens' GatewayRouteSpec (Maybe GrpcGatewayRoute)

-- | An object that represents the specification of an HTTP gateway route.
gatewayRouteSpec_httpRoute :: Lens' GatewayRouteSpec (Maybe HttpGatewayRoute)

-- | An object that represents the current status of a gateway route.
--   
--   <i>See:</i> <a>newGatewayRouteStatus</a> smart constructor.
data GatewayRouteStatus
GatewayRouteStatus' :: GatewayRouteStatusCode -> GatewayRouteStatus

-- | The current status for the gateway route.
[$sel:status:GatewayRouteStatus'] :: GatewayRouteStatus -> GatewayRouteStatusCode

-- | Create a value of <a>GatewayRouteStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GatewayRouteStatus'</a>,
--   <a>gatewayRouteStatus_status</a> - The current status for the gateway
--   route.
newGatewayRouteStatus :: GatewayRouteStatusCode -> GatewayRouteStatus

-- | The current status for the gateway route.
gatewayRouteStatus_status :: Lens' GatewayRouteStatus GatewayRouteStatusCode

-- | An object that represents a gateway route target.
--   
--   <i>See:</i> <a>newGatewayRouteTarget</a> smart constructor.
data GatewayRouteTarget
GatewayRouteTarget' :: GatewayRouteVirtualService -> GatewayRouteTarget

-- | An object that represents a virtual service gateway route target.
[$sel:virtualService:GatewayRouteTarget'] :: GatewayRouteTarget -> GatewayRouteVirtualService

-- | Create a value of <a>GatewayRouteTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualService:GatewayRouteTarget'</a>,
--   <a>gatewayRouteTarget_virtualService</a> - An object that represents a
--   virtual service gateway route target.
newGatewayRouteTarget :: GatewayRouteVirtualService -> GatewayRouteTarget

-- | An object that represents a virtual service gateway route target.
gatewayRouteTarget_virtualService :: Lens' GatewayRouteTarget GatewayRouteVirtualService

-- | An object that represents the virtual service that traffic is routed
--   to.
--   
--   <i>See:</i> <a>newGatewayRouteVirtualService</a> smart constructor.
data GatewayRouteVirtualService
GatewayRouteVirtualService' :: Text -> GatewayRouteVirtualService

-- | The name of the virtual service that traffic is routed to.
[$sel:virtualServiceName:GatewayRouteVirtualService'] :: GatewayRouteVirtualService -> Text

-- | Create a value of <a>GatewayRouteVirtualService</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualServiceName:GatewayRouteVirtualService'</a>,
--   <a>gatewayRouteVirtualService_virtualServiceName</a> - The name of the
--   virtual service that traffic is routed to.
newGatewayRouteVirtualService :: Text -> GatewayRouteVirtualService

-- | The name of the virtual service that traffic is routed to.
gatewayRouteVirtualService_virtualServiceName :: Lens' GatewayRouteVirtualService Text

-- | An object that represents a gRPC gateway route.
--   
--   <i>See:</i> <a>newGrpcGatewayRoute</a> smart constructor.
data GrpcGatewayRoute
GrpcGatewayRoute' :: GrpcGatewayRouteAction -> GrpcGatewayRouteMatch -> GrpcGatewayRoute

-- | An object that represents the action to take if a match is determined.
[$sel:action:GrpcGatewayRoute'] :: GrpcGatewayRoute -> GrpcGatewayRouteAction

-- | An object that represents the criteria for determining a request
--   match.
[$sel:match:GrpcGatewayRoute'] :: GrpcGatewayRoute -> GrpcGatewayRouteMatch

-- | Create a value of <a>GrpcGatewayRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:GrpcGatewayRoute'</a>, <a>grpcGatewayRoute_action</a> -
--   An object that represents the action to take if a match is determined.
--   
--   <a>$sel:match:GrpcGatewayRoute'</a>, <a>grpcGatewayRoute_match</a> -
--   An object that represents the criteria for determining a request
--   match.
newGrpcGatewayRoute :: GrpcGatewayRouteAction -> GrpcGatewayRouteMatch -> GrpcGatewayRoute

-- | An object that represents the action to take if a match is determined.
grpcGatewayRoute_action :: Lens' GrpcGatewayRoute GrpcGatewayRouteAction

-- | An object that represents the criteria for determining a request
--   match.
grpcGatewayRoute_match :: Lens' GrpcGatewayRoute GrpcGatewayRouteMatch

-- | An object that represents the action to take if a match is determined.
--   
--   <i>See:</i> <a>newGrpcGatewayRouteAction</a> smart constructor.
data GrpcGatewayRouteAction
GrpcGatewayRouteAction' :: Maybe GrpcGatewayRouteRewrite -> GatewayRouteTarget -> GrpcGatewayRouteAction

-- | The gateway route action to rewrite.
[$sel:rewrite:GrpcGatewayRouteAction'] :: GrpcGatewayRouteAction -> Maybe GrpcGatewayRouteRewrite

-- | An object that represents the target that traffic is routed to when a
--   request matches the gateway route.
[$sel:target:GrpcGatewayRouteAction'] :: GrpcGatewayRouteAction -> GatewayRouteTarget

-- | Create a value of <a>GrpcGatewayRouteAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rewrite:GrpcGatewayRouteAction'</a>,
--   <a>grpcGatewayRouteAction_rewrite</a> - The gateway route action to
--   rewrite.
--   
--   <a>$sel:target:GrpcGatewayRouteAction'</a>,
--   <a>grpcGatewayRouteAction_target</a> - An object that represents the
--   target that traffic is routed to when a request matches the gateway
--   route.
newGrpcGatewayRouteAction :: GatewayRouteTarget -> GrpcGatewayRouteAction

-- | The gateway route action to rewrite.
grpcGatewayRouteAction_rewrite :: Lens' GrpcGatewayRouteAction (Maybe GrpcGatewayRouteRewrite)

-- | An object that represents the target that traffic is routed to when a
--   request matches the gateway route.
grpcGatewayRouteAction_target :: Lens' GrpcGatewayRouteAction GatewayRouteTarget

-- | An object that represents the criteria for determining a request
--   match.
--   
--   <i>See:</i> <a>newGrpcGatewayRouteMatch</a> smart constructor.
data GrpcGatewayRouteMatch
GrpcGatewayRouteMatch' :: Maybe GatewayRouteHostnameMatch -> Maybe Text -> Maybe (NonEmpty GrpcGatewayRouteMetadata) -> GrpcGatewayRouteMatch

-- | The gateway route host name to be matched on.
[$sel:hostname:GrpcGatewayRouteMatch'] :: GrpcGatewayRouteMatch -> Maybe GatewayRouteHostnameMatch

-- | The fully qualified domain name for the service to match from the
--   request.
[$sel:serviceName:GrpcGatewayRouteMatch'] :: GrpcGatewayRouteMatch -> Maybe Text

-- | The gateway route metadata to be matched on.
[$sel:metadata:GrpcGatewayRouteMatch'] :: GrpcGatewayRouteMatch -> Maybe (NonEmpty GrpcGatewayRouteMetadata)

-- | Create a value of <a>GrpcGatewayRouteMatch</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostname:GrpcGatewayRouteMatch'</a>,
--   <a>grpcGatewayRouteMatch_hostname</a> - The gateway route host name to
--   be matched on.
--   
--   <a>$sel:serviceName:GrpcGatewayRouteMatch'</a>,
--   <a>grpcGatewayRouteMatch_serviceName</a> - The fully qualified domain
--   name for the service to match from the request.
--   
--   <a>$sel:metadata:GrpcGatewayRouteMatch'</a>,
--   <a>grpcGatewayRouteMatch_metadata</a> - The gateway route metadata to
--   be matched on.
newGrpcGatewayRouteMatch :: GrpcGatewayRouteMatch

-- | The gateway route host name to be matched on.
grpcGatewayRouteMatch_hostname :: Lens' GrpcGatewayRouteMatch (Maybe GatewayRouteHostnameMatch)

-- | The fully qualified domain name for the service to match from the
--   request.
grpcGatewayRouteMatch_serviceName :: Lens' GrpcGatewayRouteMatch (Maybe Text)

-- | The gateway route metadata to be matched on.
grpcGatewayRouteMatch_metadata :: Lens' GrpcGatewayRouteMatch (Maybe (NonEmpty GrpcGatewayRouteMetadata))

-- | An object representing the metadata of the gateway route.
--   
--   <i>See:</i> <a>newGrpcGatewayRouteMetadata</a> smart constructor.
data GrpcGatewayRouteMetadata
GrpcGatewayRouteMetadata' :: Maybe Bool -> Maybe GrpcMetadataMatchMethod -> Text -> GrpcGatewayRouteMetadata

-- | Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
[$sel:invert:GrpcGatewayRouteMetadata'] :: GrpcGatewayRouteMetadata -> Maybe Bool

-- | The criteria for determining a metadata match.
[$sel:match:GrpcGatewayRouteMetadata'] :: GrpcGatewayRouteMetadata -> Maybe GrpcMetadataMatchMethod

-- | A name for the gateway route metadata.
[$sel:name:GrpcGatewayRouteMetadata'] :: GrpcGatewayRouteMetadata -> Text

-- | Create a value of <a>GrpcGatewayRouteMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invert:GrpcGatewayRouteMetadata'</a>,
--   <a>grpcGatewayRouteMetadata_invert</a> - Specify <tt>True</tt> to
--   match anything except the match criteria. The default value is
--   <tt>False</tt>.
--   
--   <a>$sel:match:GrpcGatewayRouteMetadata'</a>,
--   <a>grpcGatewayRouteMetadata_match</a> - The criteria for determining a
--   metadata match.
--   
--   <a>$sel:name:GrpcGatewayRouteMetadata'</a>,
--   <a>grpcGatewayRouteMetadata_name</a> - A name for the gateway route
--   metadata.
newGrpcGatewayRouteMetadata :: Text -> GrpcGatewayRouteMetadata

-- | Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
grpcGatewayRouteMetadata_invert :: Lens' GrpcGatewayRouteMetadata (Maybe Bool)

-- | The criteria for determining a metadata match.
grpcGatewayRouteMetadata_match :: Lens' GrpcGatewayRouteMetadata (Maybe GrpcMetadataMatchMethod)

-- | A name for the gateway route metadata.
grpcGatewayRouteMetadata_name :: Lens' GrpcGatewayRouteMetadata Text

-- | An object that represents the gateway route to rewrite.
--   
--   <i>See:</i> <a>newGrpcGatewayRouteRewrite</a> smart constructor.
data GrpcGatewayRouteRewrite
GrpcGatewayRouteRewrite' :: Maybe GatewayRouteHostnameRewrite -> GrpcGatewayRouteRewrite

-- | The host name of the gateway route to rewrite.
[$sel:hostname:GrpcGatewayRouteRewrite'] :: GrpcGatewayRouteRewrite -> Maybe GatewayRouteHostnameRewrite

-- | Create a value of <a>GrpcGatewayRouteRewrite</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostname:GrpcGatewayRouteRewrite'</a>,
--   <a>grpcGatewayRouteRewrite_hostname</a> - The host name of the gateway
--   route to rewrite.
newGrpcGatewayRouteRewrite :: GrpcGatewayRouteRewrite

-- | The host name of the gateway route to rewrite.
grpcGatewayRouteRewrite_hostname :: Lens' GrpcGatewayRouteRewrite (Maybe GatewayRouteHostnameRewrite)

-- | An object representing the method header to be matched.
--   
--   <i>See:</i> <a>newGrpcMetadataMatchMethod</a> smart constructor.
data GrpcMetadataMatchMethod
GrpcMetadataMatchMethod' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe MatchRange -> Maybe Text -> GrpcMetadataMatchMethod

-- | The specified ending characters of the method header to match on.
[$sel:suffix:GrpcMetadataMatchMethod'] :: GrpcMetadataMatchMethod -> Maybe Text

-- | The regex used to match the method header.
[$sel:regex:GrpcMetadataMatchMethod'] :: GrpcMetadataMatchMethod -> Maybe Text

-- | The specified beginning characters of the method header to be matched
--   on.
[$sel:prefix:GrpcMetadataMatchMethod'] :: GrpcMetadataMatchMethod -> Maybe Text
[$sel:range:GrpcMetadataMatchMethod'] :: GrpcMetadataMatchMethod -> Maybe MatchRange

-- | The exact method header to be matched on.
[$sel:exact:GrpcMetadataMatchMethod'] :: GrpcMetadataMatchMethod -> Maybe Text

-- | Create a value of <a>GrpcMetadataMatchMethod</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suffix:GrpcMetadataMatchMethod'</a>,
--   <a>grpcMetadataMatchMethod_suffix</a> - The specified ending
--   characters of the method header to match on.
--   
--   <a>$sel:regex:GrpcMetadataMatchMethod'</a>,
--   <a>grpcMetadataMatchMethod_regex</a> - The regex used to match the
--   method header.
--   
--   <a>$sel:prefix:GrpcMetadataMatchMethod'</a>,
--   <a>grpcMetadataMatchMethod_prefix</a> - The specified beginning
--   characters of the method header to be matched on.
--   
--   <a>$sel:range:GrpcMetadataMatchMethod'</a>,
--   <a>grpcMetadataMatchMethod_range</a> - Undocumented member.
--   
--   <a>$sel:exact:GrpcMetadataMatchMethod'</a>,
--   <a>grpcMetadataMatchMethod_exact</a> - The exact method header to be
--   matched on.
newGrpcMetadataMatchMethod :: GrpcMetadataMatchMethod

-- | The specified ending characters of the method header to match on.
grpcMetadataMatchMethod_suffix :: Lens' GrpcMetadataMatchMethod (Maybe Text)

-- | The regex used to match the method header.
grpcMetadataMatchMethod_regex :: Lens' GrpcMetadataMatchMethod (Maybe Text)

-- | The specified beginning characters of the method header to be matched
--   on.
grpcMetadataMatchMethod_prefix :: Lens' GrpcMetadataMatchMethod (Maybe Text)

-- | Undocumented member.
grpcMetadataMatchMethod_range :: Lens' GrpcMetadataMatchMethod (Maybe MatchRange)

-- | The exact method header to be matched on.
grpcMetadataMatchMethod_exact :: Lens' GrpcMetadataMatchMethod (Maybe Text)

-- | An object that represents a retry policy. Specify at least one value
--   for at least one of the types of <tt>RetryEvents</tt>, a value for
--   <tt>maxRetries</tt>, and a value for <tt>perRetryTimeout</tt>. Both
--   <tt>server-error</tt> and <tt>gateway-error</tt> under
--   <tt>httpRetryEvents</tt> include the Envoy <tt>reset</tt> policy. For
--   more information on the <tt>reset</tt> policy, see the <a>Envoy
--   documentation</a>.
--   
--   <i>See:</i> <a>newGrpcRetryPolicy</a> smart constructor.
data GrpcRetryPolicy
GrpcRetryPolicy' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty GrpcRetryPolicyEvent) -> Maybe (NonEmpty TcpRetryPolicyEvent) -> Natural -> Duration -> GrpcRetryPolicy

-- | Specify at least one of the following values.
--   
--   <ul>
--   <li><b>server-error</b> – HTTP status codes 500, 501, 502, 503, 504,
--   505, 506, 507, 508, 510, and 511</li>
--   <li><b>gateway-error</b> – HTTP status codes 502, 503, and 504</li>
--   <li><b>client-error</b> – HTTP status code 409</li>
--   <li><b>stream-error</b> – Retry on refused stream</li>
--   </ul>
[$sel:httpRetryEvents:GrpcRetryPolicy'] :: GrpcRetryPolicy -> Maybe (NonEmpty Text)

-- | Specify at least one of the valid values.
[$sel:grpcRetryEvents:GrpcRetryPolicy'] :: GrpcRetryPolicy -> Maybe (NonEmpty GrpcRetryPolicyEvent)

-- | Specify a valid value. The event occurs before any processing of a
--   request has started and is encountered when the upstream is
--   temporarily or permanently unavailable.
[$sel:tcpRetryEvents:GrpcRetryPolicy'] :: GrpcRetryPolicy -> Maybe (NonEmpty TcpRetryPolicyEvent)

-- | The maximum number of retry attempts.
[$sel:maxRetries:GrpcRetryPolicy'] :: GrpcRetryPolicy -> Natural

-- | The timeout for each retry attempt.
[$sel:perRetryTimeout:GrpcRetryPolicy'] :: GrpcRetryPolicy -> Duration

-- | Create a value of <a>GrpcRetryPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpRetryEvents:GrpcRetryPolicy'</a>,
--   <a>grpcRetryPolicy_httpRetryEvents</a> - Specify at least one of the
--   following values.
--   
--   <ul>
--   <li><b>server-error</b> – HTTP status codes 500, 501, 502, 503, 504,
--   505, 506, 507, 508, 510, and 511</li>
--   <li><b>gateway-error</b> – HTTP status codes 502, 503, and 504</li>
--   <li><b>client-error</b> – HTTP status code 409</li>
--   <li><b>stream-error</b> – Retry on refused stream</li>
--   </ul>
--   
--   <a>$sel:grpcRetryEvents:GrpcRetryPolicy'</a>,
--   <a>grpcRetryPolicy_grpcRetryEvents</a> - Specify at least one of the
--   valid values.
--   
--   <a>$sel:tcpRetryEvents:GrpcRetryPolicy'</a>,
--   <a>grpcRetryPolicy_tcpRetryEvents</a> - Specify a valid value. The
--   event occurs before any processing of a request has started and is
--   encountered when the upstream is temporarily or permanently
--   unavailable.
--   
--   <a>$sel:maxRetries:GrpcRetryPolicy'</a>,
--   <a>grpcRetryPolicy_maxRetries</a> - The maximum number of retry
--   attempts.
--   
--   <a>$sel:perRetryTimeout:GrpcRetryPolicy'</a>,
--   <a>grpcRetryPolicy_perRetryTimeout</a> - The timeout for each retry
--   attempt.
newGrpcRetryPolicy :: Natural -> Duration -> GrpcRetryPolicy

-- | Specify at least one of the following values.
--   
--   <ul>
--   <li><b>server-error</b> – HTTP status codes 500, 501, 502, 503, 504,
--   505, 506, 507, 508, 510, and 511</li>
--   <li><b>gateway-error</b> – HTTP status codes 502, 503, and 504</li>
--   <li><b>client-error</b> – HTTP status code 409</li>
--   <li><b>stream-error</b> – Retry on refused stream</li>
--   </ul>
grpcRetryPolicy_httpRetryEvents :: Lens' GrpcRetryPolicy (Maybe (NonEmpty Text))

-- | Specify at least one of the valid values.
grpcRetryPolicy_grpcRetryEvents :: Lens' GrpcRetryPolicy (Maybe (NonEmpty GrpcRetryPolicyEvent))

-- | Specify a valid value. The event occurs before any processing of a
--   request has started and is encountered when the upstream is
--   temporarily or permanently unavailable.
grpcRetryPolicy_tcpRetryEvents :: Lens' GrpcRetryPolicy (Maybe (NonEmpty TcpRetryPolicyEvent))

-- | The maximum number of retry attempts.
grpcRetryPolicy_maxRetries :: Lens' GrpcRetryPolicy Natural

-- | The timeout for each retry attempt.
grpcRetryPolicy_perRetryTimeout :: Lens' GrpcRetryPolicy Duration

-- | An object that represents a gRPC route type.
--   
--   <i>See:</i> <a>newGrpcRoute</a> smart constructor.
data GrpcRoute
GrpcRoute' :: Maybe GrpcRetryPolicy -> Maybe GrpcTimeout -> GrpcRouteAction -> GrpcRouteMatch -> GrpcRoute

-- | An object that represents a retry policy.
[$sel:retryPolicy:GrpcRoute'] :: GrpcRoute -> Maybe GrpcRetryPolicy

-- | An object that represents types of timeouts.
[$sel:timeout:GrpcRoute'] :: GrpcRoute -> Maybe GrpcTimeout

-- | An object that represents the action to take if a match is determined.
[$sel:action:GrpcRoute'] :: GrpcRoute -> GrpcRouteAction

-- | An object that represents the criteria for determining a request
--   match.
[$sel:match:GrpcRoute'] :: GrpcRoute -> GrpcRouteMatch

-- | Create a value of <a>GrpcRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retryPolicy:GrpcRoute'</a>, <a>grpcRoute_retryPolicy</a> - An
--   object that represents a retry policy.
--   
--   <a>$sel:timeout:GrpcRoute'</a>, <a>grpcRoute_timeout</a> - An object
--   that represents types of timeouts.
--   
--   <a>$sel:action:GrpcRoute'</a>, <a>grpcRoute_action</a> - An object
--   that represents the action to take if a match is determined.
--   
--   <a>$sel:match:GrpcRoute'</a>, <a>grpcRoute_match</a> - An object that
--   represents the criteria for determining a request match.
newGrpcRoute :: GrpcRouteAction -> GrpcRouteMatch -> GrpcRoute

-- | An object that represents a retry policy.
grpcRoute_retryPolicy :: Lens' GrpcRoute (Maybe GrpcRetryPolicy)

-- | An object that represents types of timeouts.
grpcRoute_timeout :: Lens' GrpcRoute (Maybe GrpcTimeout)

-- | An object that represents the action to take if a match is determined.
grpcRoute_action :: Lens' GrpcRoute GrpcRouteAction

-- | An object that represents the criteria for determining a request
--   match.
grpcRoute_match :: Lens' GrpcRoute GrpcRouteMatch

-- | An object that represents the action to take if a match is determined.
--   
--   <i>See:</i> <a>newGrpcRouteAction</a> smart constructor.
data GrpcRouteAction
GrpcRouteAction' :: NonEmpty WeightedTarget -> GrpcRouteAction

-- | An object that represents the targets that traffic is routed to when a
--   request matches the route.
[$sel:weightedTargets:GrpcRouteAction'] :: GrpcRouteAction -> NonEmpty WeightedTarget

-- | Create a value of <a>GrpcRouteAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:weightedTargets:GrpcRouteAction'</a>,
--   <a>grpcRouteAction_weightedTargets</a> - An object that represents the
--   targets that traffic is routed to when a request matches the route.
newGrpcRouteAction :: NonEmpty WeightedTarget -> GrpcRouteAction

-- | An object that represents the targets that traffic is routed to when a
--   request matches the route.
grpcRouteAction_weightedTargets :: Lens' GrpcRouteAction (NonEmpty WeightedTarget)

-- | An object that represents the criteria for determining a request
--   match.
--   
--   <i>See:</i> <a>newGrpcRouteMatch</a> smart constructor.
data GrpcRouteMatch
GrpcRouteMatch' :: Maybe Text -> Maybe Text -> Maybe (NonEmpty GrpcRouteMetadata) -> GrpcRouteMatch

-- | The method name to match from the request. If you specify a name, you
--   must also specify a <tt>serviceName</tt>.
[$sel:methodName:GrpcRouteMatch'] :: GrpcRouteMatch -> Maybe Text

-- | The fully qualified domain name for the service to match from the
--   request.
[$sel:serviceName:GrpcRouteMatch'] :: GrpcRouteMatch -> Maybe Text

-- | An object that represents the data to match from the request.
[$sel:metadata:GrpcRouteMatch'] :: GrpcRouteMatch -> Maybe (NonEmpty GrpcRouteMetadata)

-- | Create a value of <a>GrpcRouteMatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:methodName:GrpcRouteMatch'</a>,
--   <a>grpcRouteMatch_methodName</a> - The method name to match from the
--   request. If you specify a name, you must also specify a
--   <tt>serviceName</tt>.
--   
--   <a>$sel:serviceName:GrpcRouteMatch'</a>,
--   <a>grpcRouteMatch_serviceName</a> - The fully qualified domain name
--   for the service to match from the request.
--   
--   <a>$sel:metadata:GrpcRouteMatch'</a>, <a>grpcRouteMatch_metadata</a> -
--   An object that represents the data to match from the request.
newGrpcRouteMatch :: GrpcRouteMatch

-- | The method name to match from the request. If you specify a name, you
--   must also specify a <tt>serviceName</tt>.
grpcRouteMatch_methodName :: Lens' GrpcRouteMatch (Maybe Text)

-- | The fully qualified domain name for the service to match from the
--   request.
grpcRouteMatch_serviceName :: Lens' GrpcRouteMatch (Maybe Text)

-- | An object that represents the data to match from the request.
grpcRouteMatch_metadata :: Lens' GrpcRouteMatch (Maybe (NonEmpty GrpcRouteMetadata))

-- | An object that represents the match metadata for the route.
--   
--   <i>See:</i> <a>newGrpcRouteMetadata</a> smart constructor.
data GrpcRouteMetadata
GrpcRouteMetadata' :: Maybe Bool -> Maybe GrpcRouteMetadataMatchMethod -> Text -> GrpcRouteMetadata

-- | Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
[$sel:invert:GrpcRouteMetadata'] :: GrpcRouteMetadata -> Maybe Bool

-- | An object that represents the data to match from the request.
[$sel:match:GrpcRouteMetadata'] :: GrpcRouteMetadata -> Maybe GrpcRouteMetadataMatchMethod

-- | The name of the route.
[$sel:name:GrpcRouteMetadata'] :: GrpcRouteMetadata -> Text

-- | Create a value of <a>GrpcRouteMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invert:GrpcRouteMetadata'</a>, <a>grpcRouteMetadata_invert</a>
--   - Specify <tt>True</tt> to match anything except the match criteria.
--   The default value is <tt>False</tt>.
--   
--   <a>$sel:match:GrpcRouteMetadata'</a>, <a>grpcRouteMetadata_match</a> -
--   An object that represents the data to match from the request.
--   
--   <a>$sel:name:GrpcRouteMetadata'</a>, <a>grpcRouteMetadata_name</a> -
--   The name of the route.
newGrpcRouteMetadata :: Text -> GrpcRouteMetadata

-- | Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
grpcRouteMetadata_invert :: Lens' GrpcRouteMetadata (Maybe Bool)

-- | An object that represents the data to match from the request.
grpcRouteMetadata_match :: Lens' GrpcRouteMetadata (Maybe GrpcRouteMetadataMatchMethod)

-- | The name of the route.
grpcRouteMetadata_name :: Lens' GrpcRouteMetadata Text

-- | An object that represents the match method. Specify one of the match
--   values.
--   
--   <i>See:</i> <a>newGrpcRouteMetadataMatchMethod</a> smart constructor.
data GrpcRouteMetadataMatchMethod
GrpcRouteMetadataMatchMethod' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe MatchRange -> Maybe Text -> GrpcRouteMetadataMatchMethod

-- | The value sent by the client must end with the specified characters.
[$sel:suffix:GrpcRouteMetadataMatchMethod'] :: GrpcRouteMetadataMatchMethod -> Maybe Text

-- | The value sent by the client must include the specified characters.
[$sel:regex:GrpcRouteMetadataMatchMethod'] :: GrpcRouteMetadataMatchMethod -> Maybe Text

-- | The value sent by the client must begin with the specified characters.
[$sel:prefix:GrpcRouteMetadataMatchMethod'] :: GrpcRouteMetadataMatchMethod -> Maybe Text

-- | An object that represents the range of values to match on.
[$sel:range:GrpcRouteMetadataMatchMethod'] :: GrpcRouteMetadataMatchMethod -> Maybe MatchRange

-- | The value sent by the client must match the specified value exactly.
[$sel:exact:GrpcRouteMetadataMatchMethod'] :: GrpcRouteMetadataMatchMethod -> Maybe Text

-- | Create a value of <a>GrpcRouteMetadataMatchMethod</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suffix:GrpcRouteMetadataMatchMethod'</a>,
--   <a>grpcRouteMetadataMatchMethod_suffix</a> - The value sent by the
--   client must end with the specified characters.
--   
--   <a>$sel:regex:GrpcRouteMetadataMatchMethod'</a>,
--   <a>grpcRouteMetadataMatchMethod_regex</a> - The value sent by the
--   client must include the specified characters.
--   
--   <a>$sel:prefix:GrpcRouteMetadataMatchMethod'</a>,
--   <a>grpcRouteMetadataMatchMethod_prefix</a> - The value sent by the
--   client must begin with the specified characters.
--   
--   <a>$sel:range:GrpcRouteMetadataMatchMethod'</a>,
--   <a>grpcRouteMetadataMatchMethod_range</a> - An object that represents
--   the range of values to match on.
--   
--   <a>$sel:exact:GrpcRouteMetadataMatchMethod'</a>,
--   <a>grpcRouteMetadataMatchMethod_exact</a> - The value sent by the
--   client must match the specified value exactly.
newGrpcRouteMetadataMatchMethod :: GrpcRouteMetadataMatchMethod

-- | The value sent by the client must end with the specified characters.
grpcRouteMetadataMatchMethod_suffix :: Lens' GrpcRouteMetadataMatchMethod (Maybe Text)

-- | The value sent by the client must include the specified characters.
grpcRouteMetadataMatchMethod_regex :: Lens' GrpcRouteMetadataMatchMethod (Maybe Text)

-- | The value sent by the client must begin with the specified characters.
grpcRouteMetadataMatchMethod_prefix :: Lens' GrpcRouteMetadataMatchMethod (Maybe Text)

-- | An object that represents the range of values to match on.
grpcRouteMetadataMatchMethod_range :: Lens' GrpcRouteMetadataMatchMethod (Maybe MatchRange)

-- | The value sent by the client must match the specified value exactly.
grpcRouteMetadataMatchMethod_exact :: Lens' GrpcRouteMetadataMatchMethod (Maybe Text)

-- | An object that represents types of timeouts.
--   
--   <i>See:</i> <a>newGrpcTimeout</a> smart constructor.
data GrpcTimeout
GrpcTimeout' :: Maybe Duration -> Maybe Duration -> GrpcTimeout

-- | An object that represents an idle timeout. An idle timeout bounds the
--   amount of time that a connection may be idle. The default value is
--   none.
[$sel:idle:GrpcTimeout'] :: GrpcTimeout -> Maybe Duration

-- | An object that represents a per request timeout. The default value is
--   15 seconds. If you set a higher timeout, then make sure that the
--   higher value is set for each App Mesh resource in a conversation. For
--   example, if a virtual node backend uses a virtual router provider to
--   route to another virtual node, then the timeout should be greater than
--   15 seconds for the source and destination virtual node and the route.
[$sel:perRequest:GrpcTimeout'] :: GrpcTimeout -> Maybe Duration

-- | Create a value of <a>GrpcTimeout</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idle:GrpcTimeout'</a>, <a>grpcTimeout_idle</a> - An object
--   that represents an idle timeout. An idle timeout bounds the amount of
--   time that a connection may be idle. The default value is none.
--   
--   <a>$sel:perRequest:GrpcTimeout'</a>, <a>grpcTimeout_perRequest</a> -
--   An object that represents a per request timeout. The default value is
--   15 seconds. If you set a higher timeout, then make sure that the
--   higher value is set for each App Mesh resource in a conversation. For
--   example, if a virtual node backend uses a virtual router provider to
--   route to another virtual node, then the timeout should be greater than
--   15 seconds for the source and destination virtual node and the route.
newGrpcTimeout :: GrpcTimeout

-- | An object that represents an idle timeout. An idle timeout bounds the
--   amount of time that a connection may be idle. The default value is
--   none.
grpcTimeout_idle :: Lens' GrpcTimeout (Maybe Duration)

-- | An object that represents a per request timeout. The default value is
--   15 seconds. If you set a higher timeout, then make sure that the
--   higher value is set for each App Mesh resource in a conversation. For
--   example, if a virtual node backend uses a virtual router provider to
--   route to another virtual node, then the timeout should be greater than
--   15 seconds for the source and destination virtual node and the route.
grpcTimeout_perRequest :: Lens' GrpcTimeout (Maybe Duration)

-- | An object that represents the method and value to match with the
--   header value sent in a request. Specify one match method.
--   
--   <i>See:</i> <a>newHeaderMatchMethod</a> smart constructor.
data HeaderMatchMethod
HeaderMatchMethod' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe MatchRange -> Maybe Text -> HeaderMatchMethod

-- | The value sent by the client must end with the specified characters.
[$sel:suffix:HeaderMatchMethod'] :: HeaderMatchMethod -> Maybe Text

-- | The value sent by the client must include the specified characters.
[$sel:regex:HeaderMatchMethod'] :: HeaderMatchMethod -> Maybe Text

-- | The value sent by the client must begin with the specified characters.
[$sel:prefix:HeaderMatchMethod'] :: HeaderMatchMethod -> Maybe Text

-- | An object that represents the range of values to match on.
[$sel:range:HeaderMatchMethod'] :: HeaderMatchMethod -> Maybe MatchRange

-- | The value sent by the client must match the specified value exactly.
[$sel:exact:HeaderMatchMethod'] :: HeaderMatchMethod -> Maybe Text

-- | Create a value of <a>HeaderMatchMethod</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suffix:HeaderMatchMethod'</a>, <a>headerMatchMethod_suffix</a>
--   - The value sent by the client must end with the specified characters.
--   
--   <a>$sel:regex:HeaderMatchMethod'</a>, <a>headerMatchMethod_regex</a> -
--   The value sent by the client must include the specified characters.
--   
--   <a>$sel:prefix:HeaderMatchMethod'</a>, <a>headerMatchMethod_prefix</a>
--   - The value sent by the client must begin with the specified
--   characters.
--   
--   <a>$sel:range:HeaderMatchMethod'</a>, <a>headerMatchMethod_range</a> -
--   An object that represents the range of values to match on.
--   
--   <a>$sel:exact:HeaderMatchMethod'</a>, <a>headerMatchMethod_exact</a> -
--   The value sent by the client must match the specified value exactly.
newHeaderMatchMethod :: HeaderMatchMethod

-- | The value sent by the client must end with the specified characters.
headerMatchMethod_suffix :: Lens' HeaderMatchMethod (Maybe Text)

-- | The value sent by the client must include the specified characters.
headerMatchMethod_regex :: Lens' HeaderMatchMethod (Maybe Text)

-- | The value sent by the client must begin with the specified characters.
headerMatchMethod_prefix :: Lens' HeaderMatchMethod (Maybe Text)

-- | An object that represents the range of values to match on.
headerMatchMethod_range :: Lens' HeaderMatchMethod (Maybe MatchRange)

-- | The value sent by the client must match the specified value exactly.
headerMatchMethod_exact :: Lens' HeaderMatchMethod (Maybe Text)

-- | An object that represents the health check policy for a virtual node's
--   listener.
--   
--   <i>See:</i> <a>newHealthCheckPolicy</a> smart constructor.
data HealthCheckPolicy
HealthCheckPolicy' :: Maybe Text -> Maybe Natural -> Natural -> Natural -> PortProtocol -> Natural -> Natural -> HealthCheckPolicy

-- | The destination path for the health check request. This value is only
--   used if the specified protocol is HTTP or HTTP/2. For any other
--   protocol, this value is ignored.
[$sel:path:HealthCheckPolicy'] :: HealthCheckPolicy -> Maybe Text

-- | The destination port for the health check request. This port must
--   match the port defined in the PortMapping for the listener.
[$sel:port:HealthCheckPolicy'] :: HealthCheckPolicy -> Maybe Natural

-- | The number of consecutive successful health checks that must occur
--   before declaring listener healthy.
[$sel:healthyThreshold:HealthCheckPolicy'] :: HealthCheckPolicy -> Natural

-- | The time period in milliseconds between each health check execution.
[$sel:intervalMillis:HealthCheckPolicy'] :: HealthCheckPolicy -> Natural

-- | The protocol for the health check request. If you specify
--   <tt>grpc</tt>, then your service must conform to the <a>GRPC Health
--   Checking Protocol</a>.
[$sel:protocol:HealthCheckPolicy'] :: HealthCheckPolicy -> PortProtocol

-- | The amount of time to wait when receiving a response from the health
--   check, in milliseconds.
[$sel:timeoutMillis:HealthCheckPolicy'] :: HealthCheckPolicy -> Natural

-- | The number of consecutive failed health checks that must occur before
--   declaring a virtual node unhealthy.
[$sel:unhealthyThreshold:HealthCheckPolicy'] :: HealthCheckPolicy -> Natural

-- | Create a value of <a>HealthCheckPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:HealthCheckPolicy'</a>, <a>healthCheckPolicy_path</a> -
--   The destination path for the health check request. This value is only
--   used if the specified protocol is HTTP or HTTP/2. For any other
--   protocol, this value is ignored.
--   
--   <a>$sel:port:HealthCheckPolicy'</a>, <a>healthCheckPolicy_port</a> -
--   The destination port for the health check request. This port must
--   match the port defined in the PortMapping for the listener.
--   
--   <a>$sel:healthyThreshold:HealthCheckPolicy'</a>,
--   <a>healthCheckPolicy_healthyThreshold</a> - The number of consecutive
--   successful health checks that must occur before declaring listener
--   healthy.
--   
--   <a>$sel:intervalMillis:HealthCheckPolicy'</a>,
--   <a>healthCheckPolicy_intervalMillis</a> - The time period in
--   milliseconds between each health check execution.
--   
--   <a>$sel:protocol:HealthCheckPolicy'</a>,
--   <a>healthCheckPolicy_protocol</a> - The protocol for the health check
--   request. If you specify <tt>grpc</tt>, then your service must conform
--   to the <a>GRPC Health Checking Protocol</a>.
--   
--   <a>$sel:timeoutMillis:HealthCheckPolicy'</a>,
--   <a>healthCheckPolicy_timeoutMillis</a> - The amount of time to wait
--   when receiving a response from the health check, in milliseconds.
--   
--   <a>$sel:unhealthyThreshold:HealthCheckPolicy'</a>,
--   <a>healthCheckPolicy_unhealthyThreshold</a> - The number of
--   consecutive failed health checks that must occur before declaring a
--   virtual node unhealthy.
newHealthCheckPolicy :: Natural -> Natural -> PortProtocol -> Natural -> Natural -> HealthCheckPolicy

-- | The destination path for the health check request. This value is only
--   used if the specified protocol is HTTP or HTTP/2. For any other
--   protocol, this value is ignored.
healthCheckPolicy_path :: Lens' HealthCheckPolicy (Maybe Text)

-- | The destination port for the health check request. This port must
--   match the port defined in the PortMapping for the listener.
healthCheckPolicy_port :: Lens' HealthCheckPolicy (Maybe Natural)

-- | The number of consecutive successful health checks that must occur
--   before declaring listener healthy.
healthCheckPolicy_healthyThreshold :: Lens' HealthCheckPolicy Natural

-- | The time period in milliseconds between each health check execution.
healthCheckPolicy_intervalMillis :: Lens' HealthCheckPolicy Natural

-- | The protocol for the health check request. If you specify
--   <tt>grpc</tt>, then your service must conform to the <a>GRPC Health
--   Checking Protocol</a>.
healthCheckPolicy_protocol :: Lens' HealthCheckPolicy PortProtocol

-- | The amount of time to wait when receiving a response from the health
--   check, in milliseconds.
healthCheckPolicy_timeoutMillis :: Lens' HealthCheckPolicy Natural

-- | The number of consecutive failed health checks that must occur before
--   declaring a virtual node unhealthy.
healthCheckPolicy_unhealthyThreshold :: Lens' HealthCheckPolicy Natural

-- | An object that represents an HTTP gateway route.
--   
--   <i>See:</i> <a>newHttpGatewayRoute</a> smart constructor.
data HttpGatewayRoute
HttpGatewayRoute' :: HttpGatewayRouteAction -> HttpGatewayRouteMatch -> HttpGatewayRoute

-- | An object that represents the action to take if a match is determined.
[$sel:action:HttpGatewayRoute'] :: HttpGatewayRoute -> HttpGatewayRouteAction

-- | An object that represents the criteria for determining a request
--   match.
[$sel:match:HttpGatewayRoute'] :: HttpGatewayRoute -> HttpGatewayRouteMatch

-- | Create a value of <a>HttpGatewayRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:HttpGatewayRoute'</a>, <a>httpGatewayRoute_action</a> -
--   An object that represents the action to take if a match is determined.
--   
--   <a>$sel:match:HttpGatewayRoute'</a>, <a>httpGatewayRoute_match</a> -
--   An object that represents the criteria for determining a request
--   match.
newHttpGatewayRoute :: HttpGatewayRouteAction -> HttpGatewayRouteMatch -> HttpGatewayRoute

-- | An object that represents the action to take if a match is determined.
httpGatewayRoute_action :: Lens' HttpGatewayRoute HttpGatewayRouteAction

-- | An object that represents the criteria for determining a request
--   match.
httpGatewayRoute_match :: Lens' HttpGatewayRoute HttpGatewayRouteMatch

-- | An object that represents the action to take if a match is determined.
--   
--   <i>See:</i> <a>newHttpGatewayRouteAction</a> smart constructor.
data HttpGatewayRouteAction
HttpGatewayRouteAction' :: Maybe HttpGatewayRouteRewrite -> GatewayRouteTarget -> HttpGatewayRouteAction

-- | The gateway route action to rewrite.
[$sel:rewrite:HttpGatewayRouteAction'] :: HttpGatewayRouteAction -> Maybe HttpGatewayRouteRewrite

-- | An object that represents the target that traffic is routed to when a
--   request matches the gateway route.
[$sel:target:HttpGatewayRouteAction'] :: HttpGatewayRouteAction -> GatewayRouteTarget

-- | Create a value of <a>HttpGatewayRouteAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rewrite:HttpGatewayRouteAction'</a>,
--   <a>httpGatewayRouteAction_rewrite</a> - The gateway route action to
--   rewrite.
--   
--   <a>$sel:target:HttpGatewayRouteAction'</a>,
--   <a>httpGatewayRouteAction_target</a> - An object that represents the
--   target that traffic is routed to when a request matches the gateway
--   route.
newHttpGatewayRouteAction :: GatewayRouteTarget -> HttpGatewayRouteAction

-- | The gateway route action to rewrite.
httpGatewayRouteAction_rewrite :: Lens' HttpGatewayRouteAction (Maybe HttpGatewayRouteRewrite)

-- | An object that represents the target that traffic is routed to when a
--   request matches the gateway route.
httpGatewayRouteAction_target :: Lens' HttpGatewayRouteAction GatewayRouteTarget

-- | An object that represents the HTTP header in the gateway route.
--   
--   <i>See:</i> <a>newHttpGatewayRouteHeader</a> smart constructor.
data HttpGatewayRouteHeader
HttpGatewayRouteHeader' :: Maybe Bool -> Maybe HeaderMatchMethod -> Text -> HttpGatewayRouteHeader

-- | Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
[$sel:invert:HttpGatewayRouteHeader'] :: HttpGatewayRouteHeader -> Maybe Bool
[$sel:match:HttpGatewayRouteHeader'] :: HttpGatewayRouteHeader -> Maybe HeaderMatchMethod

-- | A name for the HTTP header in the gateway route that will be matched
--   on.
[$sel:name:HttpGatewayRouteHeader'] :: HttpGatewayRouteHeader -> Text

-- | Create a value of <a>HttpGatewayRouteHeader</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invert:HttpGatewayRouteHeader'</a>,
--   <a>httpGatewayRouteHeader_invert</a> - Specify <tt>True</tt> to match
--   anything except the match criteria. The default value is
--   <tt>False</tt>.
--   
--   <a>$sel:match:HttpGatewayRouteHeader'</a>,
--   <a>httpGatewayRouteHeader_match</a> - Undocumented member.
--   
--   <a>$sel:name:HttpGatewayRouteHeader'</a>,
--   <a>httpGatewayRouteHeader_name</a> - A name for the HTTP header in the
--   gateway route that will be matched on.
newHttpGatewayRouteHeader :: Text -> HttpGatewayRouteHeader

-- | Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
httpGatewayRouteHeader_invert :: Lens' HttpGatewayRouteHeader (Maybe Bool)

-- | Undocumented member.
httpGatewayRouteHeader_match :: Lens' HttpGatewayRouteHeader (Maybe HeaderMatchMethod)

-- | A name for the HTTP header in the gateway route that will be matched
--   on.
httpGatewayRouteHeader_name :: Lens' HttpGatewayRouteHeader Text

-- | An object that represents the criteria for determining a request
--   match.
--   
--   <i>See:</i> <a>newHttpGatewayRouteMatch</a> smart constructor.
data HttpGatewayRouteMatch
HttpGatewayRouteMatch' :: Maybe GatewayRouteHostnameMatch -> Maybe HttpPathMatch -> Maybe Text -> Maybe (NonEmpty HttpQueryParameter) -> Maybe (NonEmpty HttpGatewayRouteHeader) -> Maybe HttpMethod -> HttpGatewayRouteMatch

-- | The host name to match on.
[$sel:hostname:HttpGatewayRouteMatch'] :: HttpGatewayRouteMatch -> Maybe GatewayRouteHostnameMatch

-- | The path to match on.
[$sel:path:HttpGatewayRouteMatch'] :: HttpGatewayRouteMatch -> Maybe HttpPathMatch

-- | Specifies the path to match requests with. This parameter must always
--   start with <tt>/</tt>, which by itself matches all requests to the
--   virtual service name. You can also match for path-based routing of
--   requests. For example, if your virtual service name is
--   <tt>my-service.local</tt> and you want the route to match requests to
--   <tt>my-service.local/metrics</tt>, your prefix should be
--   <tt>/metrics</tt>.
[$sel:prefix:HttpGatewayRouteMatch'] :: HttpGatewayRouteMatch -> Maybe Text

-- | The query parameter to match on.
[$sel:queryParameters:HttpGatewayRouteMatch'] :: HttpGatewayRouteMatch -> Maybe (NonEmpty HttpQueryParameter)

-- | The client request headers to match on.
[$sel:headers:HttpGatewayRouteMatch'] :: HttpGatewayRouteMatch -> Maybe (NonEmpty HttpGatewayRouteHeader)

-- | The method to match on.
[$sel:method:HttpGatewayRouteMatch'] :: HttpGatewayRouteMatch -> Maybe HttpMethod

-- | Create a value of <a>HttpGatewayRouteMatch</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostname:HttpGatewayRouteMatch'</a>,
--   <a>httpGatewayRouteMatch_hostname</a> - The host name to match on.
--   
--   <a>$sel:path:HttpGatewayRouteMatch'</a>,
--   <a>httpGatewayRouteMatch_path</a> - The path to match on.
--   
--   <a>$sel:prefix:HttpGatewayRouteMatch'</a>,
--   <a>httpGatewayRouteMatch_prefix</a> - Specifies the path to match
--   requests with. This parameter must always start with <tt>/</tt>, which
--   by itself matches all requests to the virtual service name. You can
--   also match for path-based routing of requests. For example, if your
--   virtual service name is <tt>my-service.local</tt> and you want the
--   route to match requests to <tt>my-service.local/metrics</tt>, your
--   prefix should be <tt>/metrics</tt>.
--   
--   <a>$sel:queryParameters:HttpGatewayRouteMatch'</a>,
--   <a>httpGatewayRouteMatch_queryParameters</a> - The query parameter to
--   match on.
--   
--   <a>$sel:headers:HttpGatewayRouteMatch'</a>,
--   <a>httpGatewayRouteMatch_headers</a> - The client request headers to
--   match on.
--   
--   <a>$sel:method:HttpGatewayRouteMatch'</a>,
--   <a>httpGatewayRouteMatch_method</a> - The method to match on.
newHttpGatewayRouteMatch :: HttpGatewayRouteMatch

-- | The host name to match on.
httpGatewayRouteMatch_hostname :: Lens' HttpGatewayRouteMatch (Maybe GatewayRouteHostnameMatch)

-- | The path to match on.
httpGatewayRouteMatch_path :: Lens' HttpGatewayRouteMatch (Maybe HttpPathMatch)

-- | Specifies the path to match requests with. This parameter must always
--   start with <tt>/</tt>, which by itself matches all requests to the
--   virtual service name. You can also match for path-based routing of
--   requests. For example, if your virtual service name is
--   <tt>my-service.local</tt> and you want the route to match requests to
--   <tt>my-service.local/metrics</tt>, your prefix should be
--   <tt>/metrics</tt>.
httpGatewayRouteMatch_prefix :: Lens' HttpGatewayRouteMatch (Maybe Text)

-- | The query parameter to match on.
httpGatewayRouteMatch_queryParameters :: Lens' HttpGatewayRouteMatch (Maybe (NonEmpty HttpQueryParameter))

-- | The client request headers to match on.
httpGatewayRouteMatch_headers :: Lens' HttpGatewayRouteMatch (Maybe (NonEmpty HttpGatewayRouteHeader))

-- | The method to match on.
httpGatewayRouteMatch_method :: Lens' HttpGatewayRouteMatch (Maybe HttpMethod)

-- | An object that represents the path to rewrite.
--   
--   <i>See:</i> <a>newHttpGatewayRoutePathRewrite</a> smart constructor.
data HttpGatewayRoutePathRewrite
HttpGatewayRoutePathRewrite' :: Maybe Text -> HttpGatewayRoutePathRewrite

-- | The exact path to rewrite.
[$sel:exact:HttpGatewayRoutePathRewrite'] :: HttpGatewayRoutePathRewrite -> Maybe Text

-- | Create a value of <a>HttpGatewayRoutePathRewrite</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exact:HttpGatewayRoutePathRewrite'</a>,
--   <a>httpGatewayRoutePathRewrite_exact</a> - The exact path to rewrite.
newHttpGatewayRoutePathRewrite :: HttpGatewayRoutePathRewrite

-- | The exact path to rewrite.
httpGatewayRoutePathRewrite_exact :: Lens' HttpGatewayRoutePathRewrite (Maybe Text)

-- | An object representing the beginning characters of the route to
--   rewrite.
--   
--   <i>See:</i> <a>newHttpGatewayRoutePrefixRewrite</a> smart constructor.
data HttpGatewayRoutePrefixRewrite
HttpGatewayRoutePrefixRewrite' :: Maybe Text -> Maybe DefaultGatewayRouteRewrite -> HttpGatewayRoutePrefixRewrite

-- | The value used to replace the incoming route prefix when rewritten.
[$sel:value:HttpGatewayRoutePrefixRewrite'] :: HttpGatewayRoutePrefixRewrite -> Maybe Text

-- | The default prefix used to replace the incoming route prefix when
--   rewritten.
[$sel:defaultPrefix:HttpGatewayRoutePrefixRewrite'] :: HttpGatewayRoutePrefixRewrite -> Maybe DefaultGatewayRouteRewrite

-- | Create a value of <a>HttpGatewayRoutePrefixRewrite</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:HttpGatewayRoutePrefixRewrite'</a>,
--   <a>httpGatewayRoutePrefixRewrite_value</a> - The value used to replace
--   the incoming route prefix when rewritten.
--   
--   <a>$sel:defaultPrefix:HttpGatewayRoutePrefixRewrite'</a>,
--   <a>httpGatewayRoutePrefixRewrite_defaultPrefix</a> - The default
--   prefix used to replace the incoming route prefix when rewritten.
newHttpGatewayRoutePrefixRewrite :: HttpGatewayRoutePrefixRewrite

-- | The value used to replace the incoming route prefix when rewritten.
httpGatewayRoutePrefixRewrite_value :: Lens' HttpGatewayRoutePrefixRewrite (Maybe Text)

-- | The default prefix used to replace the incoming route prefix when
--   rewritten.
httpGatewayRoutePrefixRewrite_defaultPrefix :: Lens' HttpGatewayRoutePrefixRewrite (Maybe DefaultGatewayRouteRewrite)

-- | An object representing the gateway route to rewrite.
--   
--   <i>See:</i> <a>newHttpGatewayRouteRewrite</a> smart constructor.
data HttpGatewayRouteRewrite
HttpGatewayRouteRewrite' :: Maybe GatewayRouteHostnameRewrite -> Maybe HttpGatewayRoutePathRewrite -> Maybe HttpGatewayRoutePrefixRewrite -> HttpGatewayRouteRewrite

-- | The host name to rewrite.
[$sel:hostname:HttpGatewayRouteRewrite'] :: HttpGatewayRouteRewrite -> Maybe GatewayRouteHostnameRewrite

-- | The path to rewrite.
[$sel:path:HttpGatewayRouteRewrite'] :: HttpGatewayRouteRewrite -> Maybe HttpGatewayRoutePathRewrite

-- | The specified beginning characters to rewrite.
[$sel:prefix:HttpGatewayRouteRewrite'] :: HttpGatewayRouteRewrite -> Maybe HttpGatewayRoutePrefixRewrite

-- | Create a value of <a>HttpGatewayRouteRewrite</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostname:HttpGatewayRouteRewrite'</a>,
--   <a>httpGatewayRouteRewrite_hostname</a> - The host name to rewrite.
--   
--   <a>$sel:path:HttpGatewayRouteRewrite'</a>,
--   <a>httpGatewayRouteRewrite_path</a> - The path to rewrite.
--   
--   <a>$sel:prefix:HttpGatewayRouteRewrite'</a>,
--   <a>httpGatewayRouteRewrite_prefix</a> - The specified beginning
--   characters to rewrite.
newHttpGatewayRouteRewrite :: HttpGatewayRouteRewrite

-- | The host name to rewrite.
httpGatewayRouteRewrite_hostname :: Lens' HttpGatewayRouteRewrite (Maybe GatewayRouteHostnameRewrite)

-- | The path to rewrite.
httpGatewayRouteRewrite_path :: Lens' HttpGatewayRouteRewrite (Maybe HttpGatewayRoutePathRewrite)

-- | The specified beginning characters to rewrite.
httpGatewayRouteRewrite_prefix :: Lens' HttpGatewayRouteRewrite (Maybe HttpGatewayRoutePrefixRewrite)

-- | An object representing the path to match in the request.
--   
--   <i>See:</i> <a>newHttpPathMatch</a> smart constructor.
data HttpPathMatch
HttpPathMatch' :: Maybe Text -> Maybe Text -> HttpPathMatch

-- | The regex used to match the path.
[$sel:regex:HttpPathMatch'] :: HttpPathMatch -> Maybe Text

-- | The exact path to match on.
[$sel:exact:HttpPathMatch'] :: HttpPathMatch -> Maybe Text

-- | Create a value of <a>HttpPathMatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:regex:HttpPathMatch'</a>, <a>httpPathMatch_regex</a> - The
--   regex used to match the path.
--   
--   <a>$sel:exact:HttpPathMatch'</a>, <a>httpPathMatch_exact</a> - The
--   exact path to match on.
newHttpPathMatch :: HttpPathMatch

-- | The regex used to match the path.
httpPathMatch_regex :: Lens' HttpPathMatch (Maybe Text)

-- | The exact path to match on.
httpPathMatch_exact :: Lens' HttpPathMatch (Maybe Text)

-- | An object that represents the query parameter in the request.
--   
--   <i>See:</i> <a>newHttpQueryParameter</a> smart constructor.
data HttpQueryParameter
HttpQueryParameter' :: Maybe QueryParameterMatch -> Text -> HttpQueryParameter

-- | The query parameter to match on.
[$sel:match:HttpQueryParameter'] :: HttpQueryParameter -> Maybe QueryParameterMatch

-- | A name for the query parameter that will be matched on.
[$sel:name:HttpQueryParameter'] :: HttpQueryParameter -> Text

-- | Create a value of <a>HttpQueryParameter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:match:HttpQueryParameter'</a>, <a>httpQueryParameter_match</a>
--   - The query parameter to match on.
--   
--   <a>$sel:name:HttpQueryParameter'</a>, <a>httpQueryParameter_name</a> -
--   A name for the query parameter that will be matched on.
newHttpQueryParameter :: Text -> HttpQueryParameter

-- | The query parameter to match on.
httpQueryParameter_match :: Lens' HttpQueryParameter (Maybe QueryParameterMatch)

-- | A name for the query parameter that will be matched on.
httpQueryParameter_name :: Lens' HttpQueryParameter Text

-- | An object that represents a retry policy. Specify at least one value
--   for at least one of the types of <tt>RetryEvents</tt>, a value for
--   <tt>maxRetries</tt>, and a value for <tt>perRetryTimeout</tt>. Both
--   <tt>server-error</tt> and <tt>gateway-error</tt> under
--   <tt>httpRetryEvents</tt> include the Envoy <tt>reset</tt> policy. For
--   more information on the <tt>reset</tt> policy, see the <a>Envoy
--   documentation</a>.
--   
--   <i>See:</i> <a>newHttpRetryPolicy</a> smart constructor.
data HttpRetryPolicy
HttpRetryPolicy' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty TcpRetryPolicyEvent) -> Natural -> Duration -> HttpRetryPolicy

-- | Specify at least one of the following values.
--   
--   <ul>
--   <li><b>server-error</b> – HTTP status codes 500, 501, 502, 503, 504,
--   505, 506, 507, 508, 510, and 511</li>
--   <li><b>gateway-error</b> – HTTP status codes 502, 503, and 504</li>
--   <li><b>client-error</b> – HTTP status code 409</li>
--   <li><b>stream-error</b> – Retry on refused stream</li>
--   </ul>
[$sel:httpRetryEvents:HttpRetryPolicy'] :: HttpRetryPolicy -> Maybe (NonEmpty Text)

-- | Specify a valid value. The event occurs before any processing of a
--   request has started and is encountered when the upstream is
--   temporarily or permanently unavailable.
[$sel:tcpRetryEvents:HttpRetryPolicy'] :: HttpRetryPolicy -> Maybe (NonEmpty TcpRetryPolicyEvent)

-- | The maximum number of retry attempts.
[$sel:maxRetries:HttpRetryPolicy'] :: HttpRetryPolicy -> Natural

-- | The timeout for each retry attempt.
[$sel:perRetryTimeout:HttpRetryPolicy'] :: HttpRetryPolicy -> Duration

-- | Create a value of <a>HttpRetryPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpRetryEvents:HttpRetryPolicy'</a>,
--   <a>httpRetryPolicy_httpRetryEvents</a> - Specify at least one of the
--   following values.
--   
--   <ul>
--   <li><b>server-error</b> – HTTP status codes 500, 501, 502, 503, 504,
--   505, 506, 507, 508, 510, and 511</li>
--   <li><b>gateway-error</b> – HTTP status codes 502, 503, and 504</li>
--   <li><b>client-error</b> – HTTP status code 409</li>
--   <li><b>stream-error</b> – Retry on refused stream</li>
--   </ul>
--   
--   <a>$sel:tcpRetryEvents:HttpRetryPolicy'</a>,
--   <a>httpRetryPolicy_tcpRetryEvents</a> - Specify a valid value. The
--   event occurs before any processing of a request has started and is
--   encountered when the upstream is temporarily or permanently
--   unavailable.
--   
--   <a>$sel:maxRetries:HttpRetryPolicy'</a>,
--   <a>httpRetryPolicy_maxRetries</a> - The maximum number of retry
--   attempts.
--   
--   <a>$sel:perRetryTimeout:HttpRetryPolicy'</a>,
--   <a>httpRetryPolicy_perRetryTimeout</a> - The timeout for each retry
--   attempt.
newHttpRetryPolicy :: Natural -> Duration -> HttpRetryPolicy

-- | Specify at least one of the following values.
--   
--   <ul>
--   <li><b>server-error</b> – HTTP status codes 500, 501, 502, 503, 504,
--   505, 506, 507, 508, 510, and 511</li>
--   <li><b>gateway-error</b> – HTTP status codes 502, 503, and 504</li>
--   <li><b>client-error</b> – HTTP status code 409</li>
--   <li><b>stream-error</b> – Retry on refused stream</li>
--   </ul>
httpRetryPolicy_httpRetryEvents :: Lens' HttpRetryPolicy (Maybe (NonEmpty Text))

-- | Specify a valid value. The event occurs before any processing of a
--   request has started and is encountered when the upstream is
--   temporarily or permanently unavailable.
httpRetryPolicy_tcpRetryEvents :: Lens' HttpRetryPolicy (Maybe (NonEmpty TcpRetryPolicyEvent))

-- | The maximum number of retry attempts.
httpRetryPolicy_maxRetries :: Lens' HttpRetryPolicy Natural

-- | The timeout for each retry attempt.
httpRetryPolicy_perRetryTimeout :: Lens' HttpRetryPolicy Duration

-- | An object that represents an HTTP or HTTP/2 route type.
--   
--   <i>See:</i> <a>newHttpRoute</a> smart constructor.
data HttpRoute
HttpRoute' :: Maybe HttpRetryPolicy -> Maybe HttpTimeout -> HttpRouteAction -> HttpRouteMatch -> HttpRoute

-- | An object that represents a retry policy.
[$sel:retryPolicy:HttpRoute'] :: HttpRoute -> Maybe HttpRetryPolicy

-- | An object that represents types of timeouts.
[$sel:timeout:HttpRoute'] :: HttpRoute -> Maybe HttpTimeout

-- | An object that represents the action to take if a match is determined.
[$sel:action:HttpRoute'] :: HttpRoute -> HttpRouteAction

-- | An object that represents the criteria for determining a request
--   match.
[$sel:match:HttpRoute'] :: HttpRoute -> HttpRouteMatch

-- | Create a value of <a>HttpRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retryPolicy:HttpRoute'</a>, <a>httpRoute_retryPolicy</a> - An
--   object that represents a retry policy.
--   
--   <a>$sel:timeout:HttpRoute'</a>, <a>httpRoute_timeout</a> - An object
--   that represents types of timeouts.
--   
--   <a>$sel:action:HttpRoute'</a>, <a>httpRoute_action</a> - An object
--   that represents the action to take if a match is determined.
--   
--   <a>$sel:match:HttpRoute'</a>, <a>httpRoute_match</a> - An object that
--   represents the criteria for determining a request match.
newHttpRoute :: HttpRouteAction -> HttpRouteMatch -> HttpRoute

-- | An object that represents a retry policy.
httpRoute_retryPolicy :: Lens' HttpRoute (Maybe HttpRetryPolicy)

-- | An object that represents types of timeouts.
httpRoute_timeout :: Lens' HttpRoute (Maybe HttpTimeout)

-- | An object that represents the action to take if a match is determined.
httpRoute_action :: Lens' HttpRoute HttpRouteAction

-- | An object that represents the criteria for determining a request
--   match.
httpRoute_match :: Lens' HttpRoute HttpRouteMatch

-- | An object that represents the action to take if a match is determined.
--   
--   <i>See:</i> <a>newHttpRouteAction</a> smart constructor.
data HttpRouteAction
HttpRouteAction' :: NonEmpty WeightedTarget -> HttpRouteAction

-- | An object that represents the targets that traffic is routed to when a
--   request matches the route.
[$sel:weightedTargets:HttpRouteAction'] :: HttpRouteAction -> NonEmpty WeightedTarget

-- | Create a value of <a>HttpRouteAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:weightedTargets:HttpRouteAction'</a>,
--   <a>httpRouteAction_weightedTargets</a> - An object that represents the
--   targets that traffic is routed to when a request matches the route.
newHttpRouteAction :: NonEmpty WeightedTarget -> HttpRouteAction

-- | An object that represents the targets that traffic is routed to when a
--   request matches the route.
httpRouteAction_weightedTargets :: Lens' HttpRouteAction (NonEmpty WeightedTarget)

-- | An object that represents the HTTP header in the request.
--   
--   <i>See:</i> <a>newHttpRouteHeader</a> smart constructor.
data HttpRouteHeader
HttpRouteHeader' :: Maybe Bool -> Maybe HeaderMatchMethod -> Text -> HttpRouteHeader

-- | Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
[$sel:invert:HttpRouteHeader'] :: HttpRouteHeader -> Maybe Bool

-- | The <tt>HeaderMatchMethod</tt> object.
[$sel:match:HttpRouteHeader'] :: HttpRouteHeader -> Maybe HeaderMatchMethod

-- | A name for the HTTP header in the client request that will be matched
--   on.
[$sel:name:HttpRouteHeader'] :: HttpRouteHeader -> Text

-- | Create a value of <a>HttpRouteHeader</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invert:HttpRouteHeader'</a>, <a>httpRouteHeader_invert</a> -
--   Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
--   
--   <a>$sel:match:HttpRouteHeader'</a>, <a>httpRouteHeader_match</a> - The
--   <tt>HeaderMatchMethod</tt> object.
--   
--   <a>$sel:name:HttpRouteHeader'</a>, <a>httpRouteHeader_name</a> - A
--   name for the HTTP header in the client request that will be matched
--   on.
newHttpRouteHeader :: Text -> HttpRouteHeader

-- | Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
httpRouteHeader_invert :: Lens' HttpRouteHeader (Maybe Bool)

-- | The <tt>HeaderMatchMethod</tt> object.
httpRouteHeader_match :: Lens' HttpRouteHeader (Maybe HeaderMatchMethod)

-- | A name for the HTTP header in the client request that will be matched
--   on.
httpRouteHeader_name :: Lens' HttpRouteHeader Text

-- | An object that represents the requirements for a route to match HTTP
--   requests for a virtual router.
--   
--   <i>See:</i> <a>newHttpRouteMatch</a> smart constructor.
data HttpRouteMatch
HttpRouteMatch' :: Maybe HttpPathMatch -> Maybe Text -> Maybe (NonEmpty HttpQueryParameter) -> Maybe (NonEmpty HttpRouteHeader) -> Maybe HttpMethod -> Maybe HttpScheme -> HttpRouteMatch

-- | The client request path to match on.
[$sel:path:HttpRouteMatch'] :: HttpRouteMatch -> Maybe HttpPathMatch

-- | Specifies the path to match requests with. This parameter must always
--   start with <tt>/</tt>, which by itself matches all requests to the
--   virtual service name. You can also match for path-based routing of
--   requests. For example, if your virtual service name is
--   <tt>my-service.local</tt> and you want the route to match requests to
--   <tt>my-service.local/metrics</tt>, your prefix should be
--   <tt>/metrics</tt>.
[$sel:prefix:HttpRouteMatch'] :: HttpRouteMatch -> Maybe Text

-- | The client request query parameters to match on.
[$sel:queryParameters:HttpRouteMatch'] :: HttpRouteMatch -> Maybe (NonEmpty HttpQueryParameter)

-- | The client request headers to match on.
[$sel:headers:HttpRouteMatch'] :: HttpRouteMatch -> Maybe (NonEmpty HttpRouteHeader)

-- | The client request method to match on. Specify only one.
[$sel:method:HttpRouteMatch'] :: HttpRouteMatch -> Maybe HttpMethod

-- | The client request scheme to match on. Specify only one. Applicable
--   only for HTTP2 routes.
[$sel:scheme:HttpRouteMatch'] :: HttpRouteMatch -> Maybe HttpScheme

-- | Create a value of <a>HttpRouteMatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:HttpRouteMatch'</a>, <a>httpRouteMatch_path</a> - The
--   client request path to match on.
--   
--   <a>$sel:prefix:HttpRouteMatch'</a>, <a>httpRouteMatch_prefix</a> -
--   Specifies the path to match requests with. This parameter must always
--   start with <tt>/</tt>, which by itself matches all requests to the
--   virtual service name. You can also match for path-based routing of
--   requests. For example, if your virtual service name is
--   <tt>my-service.local</tt> and you want the route to match requests to
--   <tt>my-service.local/metrics</tt>, your prefix should be
--   <tt>/metrics</tt>.
--   
--   <a>$sel:queryParameters:HttpRouteMatch'</a>,
--   <a>httpRouteMatch_queryParameters</a> - The client request query
--   parameters to match on.
--   
--   <a>$sel:headers:HttpRouteMatch'</a>, <a>httpRouteMatch_headers</a> -
--   The client request headers to match on.
--   
--   <a>$sel:method:HttpRouteMatch'</a>, <a>httpRouteMatch_method</a> - The
--   client request method to match on. Specify only one.
--   
--   <a>$sel:scheme:HttpRouteMatch'</a>, <a>httpRouteMatch_scheme</a> - The
--   client request scheme to match on. Specify only one. Applicable only
--   for HTTP2 routes.
newHttpRouteMatch :: HttpRouteMatch

-- | The client request path to match on.
httpRouteMatch_path :: Lens' HttpRouteMatch (Maybe HttpPathMatch)

-- | Specifies the path to match requests with. This parameter must always
--   start with <tt>/</tt>, which by itself matches all requests to the
--   virtual service name. You can also match for path-based routing of
--   requests. For example, if your virtual service name is
--   <tt>my-service.local</tt> and you want the route to match requests to
--   <tt>my-service.local/metrics</tt>, your prefix should be
--   <tt>/metrics</tt>.
httpRouteMatch_prefix :: Lens' HttpRouteMatch (Maybe Text)

-- | The client request query parameters to match on.
httpRouteMatch_queryParameters :: Lens' HttpRouteMatch (Maybe (NonEmpty HttpQueryParameter))

-- | The client request headers to match on.
httpRouteMatch_headers :: Lens' HttpRouteMatch (Maybe (NonEmpty HttpRouteHeader))

-- | The client request method to match on. Specify only one.
httpRouteMatch_method :: Lens' HttpRouteMatch (Maybe HttpMethod)

-- | The client request scheme to match on. Specify only one. Applicable
--   only for HTTP2 routes.
httpRouteMatch_scheme :: Lens' HttpRouteMatch (Maybe HttpScheme)

-- | An object that represents types of timeouts.
--   
--   <i>See:</i> <a>newHttpTimeout</a> smart constructor.
data HttpTimeout
HttpTimeout' :: Maybe Duration -> Maybe Duration -> HttpTimeout

-- | An object that represents an idle timeout. An idle timeout bounds the
--   amount of time that a connection may be idle. The default value is
--   none.
[$sel:idle:HttpTimeout'] :: HttpTimeout -> Maybe Duration

-- | An object that represents a per request timeout. The default value is
--   15 seconds. If you set a higher timeout, then make sure that the
--   higher value is set for each App Mesh resource in a conversation. For
--   example, if a virtual node backend uses a virtual router provider to
--   route to another virtual node, then the timeout should be greater than
--   15 seconds for the source and destination virtual node and the route.
[$sel:perRequest:HttpTimeout'] :: HttpTimeout -> Maybe Duration

-- | Create a value of <a>HttpTimeout</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idle:HttpTimeout'</a>, <a>httpTimeout_idle</a> - An object
--   that represents an idle timeout. An idle timeout bounds the amount of
--   time that a connection may be idle. The default value is none.
--   
--   <a>$sel:perRequest:HttpTimeout'</a>, <a>httpTimeout_perRequest</a> -
--   An object that represents a per request timeout. The default value is
--   15 seconds. If you set a higher timeout, then make sure that the
--   higher value is set for each App Mesh resource in a conversation. For
--   example, if a virtual node backend uses a virtual router provider to
--   route to another virtual node, then the timeout should be greater than
--   15 seconds for the source and destination virtual node and the route.
newHttpTimeout :: HttpTimeout

-- | An object that represents an idle timeout. An idle timeout bounds the
--   amount of time that a connection may be idle. The default value is
--   none.
httpTimeout_idle :: Lens' HttpTimeout (Maybe Duration)

-- | An object that represents a per request timeout. The default value is
--   15 seconds. If you set a higher timeout, then make sure that the
--   higher value is set for each App Mesh resource in a conversation. For
--   example, if a virtual node backend uses a virtual router provider to
--   route to another virtual node, then the timeout should be greater than
--   15 seconds for the source and destination virtual node and the route.
httpTimeout_perRequest :: Lens' HttpTimeout (Maybe Duration)

-- | An object that represents a listener for a virtual node.
--   
--   <i>See:</i> <a>newListener</a> smart constructor.
data Listener
Listener' :: Maybe HealthCheckPolicy -> Maybe VirtualNodeConnectionPool -> Maybe ListenerTls -> Maybe OutlierDetection -> Maybe ListenerTimeout -> PortMapping -> Listener

-- | The health check information for the listener.
[$sel:healthCheck:Listener'] :: Listener -> Maybe HealthCheckPolicy

-- | The connection pool information for the listener.
[$sel:connectionPool:Listener'] :: Listener -> Maybe VirtualNodeConnectionPool

-- | A reference to an object that represents the Transport Layer Security
--   (TLS) properties for a listener.
[$sel:tls:Listener'] :: Listener -> Maybe ListenerTls

-- | The outlier detection information for the listener.
[$sel:outlierDetection:Listener'] :: Listener -> Maybe OutlierDetection

-- | An object that represents timeouts for different protocols.
[$sel:timeout:Listener'] :: Listener -> Maybe ListenerTimeout

-- | The port mapping information for the listener.
[$sel:portMapping:Listener'] :: Listener -> PortMapping

-- | Create a value of <a>Listener</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthCheck:Listener'</a>, <a>listener_healthCheck</a> - The
--   health check information for the listener.
--   
--   <a>$sel:connectionPool:Listener'</a>, <a>listener_connectionPool</a> -
--   The connection pool information for the listener.
--   
--   <a>$sel:tls:Listener'</a>, <a>listener_tls</a> - A reference to an
--   object that represents the Transport Layer Security (TLS) properties
--   for a listener.
--   
--   <a>$sel:outlierDetection:Listener'</a>,
--   <a>listener_outlierDetection</a> - The outlier detection information
--   for the listener.
--   
--   <a>$sel:timeout:Listener'</a>, <a>listener_timeout</a> - An object
--   that represents timeouts for different protocols.
--   
--   <a>$sel:portMapping:Listener'</a>, <a>listener_portMapping</a> - The
--   port mapping information for the listener.
newListener :: PortMapping -> Listener

-- | The health check information for the listener.
listener_healthCheck :: Lens' Listener (Maybe HealthCheckPolicy)

-- | The connection pool information for the listener.
listener_connectionPool :: Lens' Listener (Maybe VirtualNodeConnectionPool)

-- | A reference to an object that represents the Transport Layer Security
--   (TLS) properties for a listener.
listener_tls :: Lens' Listener (Maybe ListenerTls)

-- | The outlier detection information for the listener.
listener_outlierDetection :: Lens' Listener (Maybe OutlierDetection)

-- | An object that represents timeouts for different protocols.
listener_timeout :: Lens' Listener (Maybe ListenerTimeout)

-- | The port mapping information for the listener.
listener_portMapping :: Lens' Listener PortMapping

-- | An object that represents timeouts for different protocols.
--   
--   <i>See:</i> <a>newListenerTimeout</a> smart constructor.
data ListenerTimeout
ListenerTimeout' :: Maybe HttpTimeout -> Maybe GrpcTimeout -> Maybe TcpTimeout -> Maybe HttpTimeout -> ListenerTimeout

-- | An object that represents types of timeouts.
[$sel:http2:ListenerTimeout'] :: ListenerTimeout -> Maybe HttpTimeout

-- | An object that represents types of timeouts.
[$sel:grpc:ListenerTimeout'] :: ListenerTimeout -> Maybe GrpcTimeout

-- | An object that represents types of timeouts.
[$sel:tcp:ListenerTimeout'] :: ListenerTimeout -> Maybe TcpTimeout

-- | An object that represents types of timeouts.
[$sel:http:ListenerTimeout'] :: ListenerTimeout -> Maybe HttpTimeout

-- | Create a value of <a>ListenerTimeout</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:http2:ListenerTimeout'</a>, <a>listenerTimeout_http2</a> - An
--   object that represents types of timeouts.
--   
--   <a>$sel:grpc:ListenerTimeout'</a>, <a>listenerTimeout_grpc</a> - An
--   object that represents types of timeouts.
--   
--   <a>$sel:tcp:ListenerTimeout'</a>, <a>listenerTimeout_tcp</a> - An
--   object that represents types of timeouts.
--   
--   <a>$sel:http:ListenerTimeout'</a>, <a>listenerTimeout_http</a> - An
--   object that represents types of timeouts.
newListenerTimeout :: ListenerTimeout

-- | An object that represents types of timeouts.
listenerTimeout_http2 :: Lens' ListenerTimeout (Maybe HttpTimeout)

-- | An object that represents types of timeouts.
listenerTimeout_grpc :: Lens' ListenerTimeout (Maybe GrpcTimeout)

-- | An object that represents types of timeouts.
listenerTimeout_tcp :: Lens' ListenerTimeout (Maybe TcpTimeout)

-- | An object that represents types of timeouts.
listenerTimeout_http :: Lens' ListenerTimeout (Maybe HttpTimeout)

-- | An object that represents the Transport Layer Security (TLS)
--   properties for a listener.
--   
--   <i>See:</i> <a>newListenerTls</a> smart constructor.
data ListenerTls
ListenerTls' :: Maybe ListenerTlsValidationContext -> ListenerTlsCertificate -> ListenerTlsMode -> ListenerTls

-- | A reference to an object that represents a listener's Transport Layer
--   Security (TLS) validation context.
[$sel:validation:ListenerTls'] :: ListenerTls -> Maybe ListenerTlsValidationContext

-- | A reference to an object that represents a listener's Transport Layer
--   Security (TLS) certificate.
[$sel:certificate:ListenerTls'] :: ListenerTls -> ListenerTlsCertificate

-- | Specify one of the following modes.
--   
--   <ul>
--   <li>____STRICT – Listener only accepts connections with TLS
--   enabled.</li>
--   <li>____PERMISSIVE – Listener accepts connections with or without TLS
--   enabled.</li>
--   <li>____DISABLED – Listener only accepts connections without TLS.</li>
--   </ul>
[$sel:mode:ListenerTls'] :: ListenerTls -> ListenerTlsMode

-- | Create a value of <a>ListenerTls</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validation:ListenerTls'</a>, <a>listenerTls_validation</a> - A
--   reference to an object that represents a listener's Transport Layer
--   Security (TLS) validation context.
--   
--   <a>$sel:certificate:ListenerTls'</a>, <a>listenerTls_certificate</a> -
--   A reference to an object that represents a listener's Transport Layer
--   Security (TLS) certificate.
--   
--   <a>$sel:mode:ListenerTls'</a>, <a>listenerTls_mode</a> - Specify one
--   of the following modes.
--   
--   <ul>
--   <li>____STRICT – Listener only accepts connections with TLS
--   enabled.</li>
--   <li>____PERMISSIVE – Listener accepts connections with or without TLS
--   enabled.</li>
--   <li>____DISABLED – Listener only accepts connections without TLS.</li>
--   </ul>
newListenerTls :: ListenerTlsCertificate -> ListenerTlsMode -> ListenerTls

-- | A reference to an object that represents a listener's Transport Layer
--   Security (TLS) validation context.
listenerTls_validation :: Lens' ListenerTls (Maybe ListenerTlsValidationContext)

-- | A reference to an object that represents a listener's Transport Layer
--   Security (TLS) certificate.
listenerTls_certificate :: Lens' ListenerTls ListenerTlsCertificate

-- | Specify one of the following modes.
--   
--   <ul>
--   <li>____STRICT – Listener only accepts connections with TLS
--   enabled.</li>
--   <li>____PERMISSIVE – Listener accepts connections with or without TLS
--   enabled.</li>
--   <li>____DISABLED – Listener only accepts connections without TLS.</li>
--   </ul>
listenerTls_mode :: Lens' ListenerTls ListenerTlsMode

-- | An object that represents an AWS Certicate Manager (ACM) certificate.
--   
--   <i>See:</i> <a>newListenerTlsAcmCertificate</a> smart constructor.
data ListenerTlsAcmCertificate
ListenerTlsAcmCertificate' :: Text -> ListenerTlsAcmCertificate

-- | The Amazon Resource Name (ARN) for the certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
[$sel:certificateArn:ListenerTlsAcmCertificate'] :: ListenerTlsAcmCertificate -> Text

-- | Create a value of <a>ListenerTlsAcmCertificate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateArn:ListenerTlsAcmCertificate'</a>,
--   <a>listenerTlsAcmCertificate_certificateArn</a> - The Amazon Resource
--   Name (ARN) for the certificate. The certificate must meet specific
--   requirements and you must have proxy authorization enabled. For more
--   information, see <a>Transport Layer Security (TLS)</a>.
newListenerTlsAcmCertificate :: Text -> ListenerTlsAcmCertificate

-- | The Amazon Resource Name (ARN) for the certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
listenerTlsAcmCertificate_certificateArn :: Lens' ListenerTlsAcmCertificate Text

-- | An object that represents a listener's Transport Layer Security (TLS)
--   certificate.
--   
--   <i>See:</i> <a>newListenerTlsCertificate</a> smart constructor.
data ListenerTlsCertificate
ListenerTlsCertificate' :: Maybe ListenerTlsAcmCertificate -> Maybe ListenerTlsSdsCertificate -> Maybe ListenerTlsFileCertificate -> ListenerTlsCertificate

-- | A reference to an object that represents an AWS Certicate Manager
--   (ACM) certificate.
[$sel:acm:ListenerTlsCertificate'] :: ListenerTlsCertificate -> Maybe ListenerTlsAcmCertificate

-- | A reference to an object that represents a listener's Secret Discovery
--   Service certificate.
[$sel:sds:ListenerTlsCertificate'] :: ListenerTlsCertificate -> Maybe ListenerTlsSdsCertificate

-- | A reference to an object that represents a local file certificate.
[$sel:file:ListenerTlsCertificate'] :: ListenerTlsCertificate -> Maybe ListenerTlsFileCertificate

-- | Create a value of <a>ListenerTlsCertificate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acm:ListenerTlsCertificate'</a>,
--   <a>listenerTlsCertificate_acm</a> - A reference to an object that
--   represents an AWS Certicate Manager (ACM) certificate.
--   
--   <a>$sel:sds:ListenerTlsCertificate'</a>,
--   <a>listenerTlsCertificate_sds</a> - A reference to an object that
--   represents a listener's Secret Discovery Service certificate.
--   
--   <a>$sel:file:ListenerTlsCertificate'</a>,
--   <a>listenerTlsCertificate_file</a> - A reference to an object that
--   represents a local file certificate.
newListenerTlsCertificate :: ListenerTlsCertificate

-- | A reference to an object that represents an AWS Certicate Manager
--   (ACM) certificate.
listenerTlsCertificate_acm :: Lens' ListenerTlsCertificate (Maybe ListenerTlsAcmCertificate)

-- | A reference to an object that represents a listener's Secret Discovery
--   Service certificate.
listenerTlsCertificate_sds :: Lens' ListenerTlsCertificate (Maybe ListenerTlsSdsCertificate)

-- | A reference to an object that represents a local file certificate.
listenerTlsCertificate_file :: Lens' ListenerTlsCertificate (Maybe ListenerTlsFileCertificate)

-- | An object that represents a local file certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
--   
--   <i>See:</i> <a>newListenerTlsFileCertificate</a> smart constructor.
data ListenerTlsFileCertificate
ListenerTlsFileCertificate' :: Text -> Text -> ListenerTlsFileCertificate

-- | The certificate chain for the certificate.
[$sel:certificateChain:ListenerTlsFileCertificate'] :: ListenerTlsFileCertificate -> Text

-- | The private key for a certificate stored on the file system of the
--   virtual node that the proxy is running on.
[$sel:privateKey:ListenerTlsFileCertificate'] :: ListenerTlsFileCertificate -> Text

-- | Create a value of <a>ListenerTlsFileCertificate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateChain:ListenerTlsFileCertificate'</a>,
--   <a>listenerTlsFileCertificate_certificateChain</a> - The certificate
--   chain for the certificate.
--   
--   <a>$sel:privateKey:ListenerTlsFileCertificate'</a>,
--   <a>listenerTlsFileCertificate_privateKey</a> - The private key for a
--   certificate stored on the file system of the virtual node that the
--   proxy is running on.
newListenerTlsFileCertificate :: Text -> Text -> ListenerTlsFileCertificate

-- | The certificate chain for the certificate.
listenerTlsFileCertificate_certificateChain :: Lens' ListenerTlsFileCertificate Text

-- | The private key for a certificate stored on the file system of the
--   virtual node that the proxy is running on.
listenerTlsFileCertificate_privateKey :: Lens' ListenerTlsFileCertificate Text

-- | An object that represents the listener's Secret Discovery Service
--   certificate. The proxy must be configured with a local SDS provider
--   via a Unix Domain Socket. See App Mesh <a>TLS documentation</a> for
--   more info.
--   
--   <i>See:</i> <a>newListenerTlsSdsCertificate</a> smart constructor.
data ListenerTlsSdsCertificate
ListenerTlsSdsCertificate' :: Text -> ListenerTlsSdsCertificate

-- | A reference to an object that represents the name of the secret
--   requested from the Secret Discovery Service provider representing
--   Transport Layer Security (TLS) materials like a certificate or
--   certificate chain.
[$sel:secretName:ListenerTlsSdsCertificate'] :: ListenerTlsSdsCertificate -> Text

-- | Create a value of <a>ListenerTlsSdsCertificate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretName:ListenerTlsSdsCertificate'</a>,
--   <a>listenerTlsSdsCertificate_secretName</a> - A reference to an object
--   that represents the name of the secret requested from the Secret
--   Discovery Service provider representing Transport Layer Security (TLS)
--   materials like a certificate or certificate chain.
newListenerTlsSdsCertificate :: Text -> ListenerTlsSdsCertificate

-- | A reference to an object that represents the name of the secret
--   requested from the Secret Discovery Service provider representing
--   Transport Layer Security (TLS) materials like a certificate or
--   certificate chain.
listenerTlsSdsCertificate_secretName :: Lens' ListenerTlsSdsCertificate Text

-- | An object that represents a listener's Transport Layer Security (TLS)
--   validation context.
--   
--   <i>See:</i> <a>newListenerTlsValidationContext</a> smart constructor.
data ListenerTlsValidationContext
ListenerTlsValidationContext' :: Maybe SubjectAlternativeNames -> ListenerTlsValidationContextTrust -> ListenerTlsValidationContext

-- | A reference to an object that represents the SANs for a listener's
--   Transport Layer Security (TLS) validation context.
[$sel:subjectAlternativeNames:ListenerTlsValidationContext'] :: ListenerTlsValidationContext -> Maybe SubjectAlternativeNames

-- | A reference to where to retrieve the trust chain when validating a
--   peer’s Transport Layer Security (TLS) certificate.
[$sel:trust:ListenerTlsValidationContext'] :: ListenerTlsValidationContext -> ListenerTlsValidationContextTrust

-- | Create a value of <a>ListenerTlsValidationContext</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subjectAlternativeNames:ListenerTlsValidationContext'</a>,
--   <a>listenerTlsValidationContext_subjectAlternativeNames</a> - A
--   reference to an object that represents the SANs for a listener's
--   Transport Layer Security (TLS) validation context.
--   
--   <a>$sel:trust:ListenerTlsValidationContext'</a>,
--   <a>listenerTlsValidationContext_trust</a> - A reference to where to
--   retrieve the trust chain when validating a peer’s Transport Layer
--   Security (TLS) certificate.
newListenerTlsValidationContext :: ListenerTlsValidationContextTrust -> ListenerTlsValidationContext

-- | A reference to an object that represents the SANs for a listener's
--   Transport Layer Security (TLS) validation context.
listenerTlsValidationContext_subjectAlternativeNames :: Lens' ListenerTlsValidationContext (Maybe SubjectAlternativeNames)

-- | A reference to where to retrieve the trust chain when validating a
--   peer’s Transport Layer Security (TLS) certificate.
listenerTlsValidationContext_trust :: Lens' ListenerTlsValidationContext ListenerTlsValidationContextTrust

-- | An object that represents a listener's Transport Layer Security (TLS)
--   validation context trust.
--   
--   <i>See:</i> <a>newListenerTlsValidationContextTrust</a> smart
--   constructor.
data ListenerTlsValidationContextTrust
ListenerTlsValidationContextTrust' :: Maybe TlsValidationContextSdsTrust -> Maybe TlsValidationContextFileTrust -> ListenerTlsValidationContextTrust

-- | A reference to an object that represents a listener's Transport Layer
--   Security (TLS) Secret Discovery Service validation context trust.
[$sel:sds:ListenerTlsValidationContextTrust'] :: ListenerTlsValidationContextTrust -> Maybe TlsValidationContextSdsTrust

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
[$sel:file:ListenerTlsValidationContextTrust'] :: ListenerTlsValidationContextTrust -> Maybe TlsValidationContextFileTrust

-- | Create a value of <a>ListenerTlsValidationContextTrust</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sds:ListenerTlsValidationContextTrust'</a>,
--   <a>listenerTlsValidationContextTrust_sds</a> - A reference to an
--   object that represents a listener's Transport Layer Security (TLS)
--   Secret Discovery Service validation context trust.
--   
--   <a>$sel:file:ListenerTlsValidationContextTrust'</a>,
--   <a>listenerTlsValidationContextTrust_file</a> - An object that
--   represents a Transport Layer Security (TLS) validation context trust
--   for a local file.
newListenerTlsValidationContextTrust :: ListenerTlsValidationContextTrust

-- | A reference to an object that represents a listener's Transport Layer
--   Security (TLS) Secret Discovery Service validation context trust.
listenerTlsValidationContextTrust_sds :: Lens' ListenerTlsValidationContextTrust (Maybe TlsValidationContextSdsTrust)

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
listenerTlsValidationContextTrust_file :: Lens' ListenerTlsValidationContextTrust (Maybe TlsValidationContextFileTrust)

-- | An object that represents the logging information for a virtual node.
--   
--   <i>See:</i> <a>newLogging</a> smart constructor.
data Logging
Logging' :: Maybe AccessLog -> Logging

-- | The access log configuration for a virtual node.
[$sel:accessLog:Logging'] :: Logging -> Maybe AccessLog

-- | Create a value of <a>Logging</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessLog:Logging'</a>, <a>logging_accessLog</a> - The access
--   log configuration for a virtual node.
newLogging :: Logging

-- | The access log configuration for a virtual node.
logging_accessLog :: Lens' Logging (Maybe AccessLog)

-- | An object that represents the range of values to match on. The first
--   character of the range is included in the range, though the last
--   character is not. For example, if the range specified were 1-100, only
--   values 1-99 would be matched.
--   
--   <i>See:</i> <a>newMatchRange</a> smart constructor.
data MatchRange
MatchRange' :: Integer -> Integer -> MatchRange

-- | The end of the range.
[$sel:end:MatchRange'] :: MatchRange -> Integer

-- | The start of the range.
[$sel:start:MatchRange'] :: MatchRange -> Integer

-- | Create a value of <a>MatchRange</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:end:MatchRange'</a>, <a>matchRange_end</a> - The end of the
--   range.
--   
--   <a>$sel:start:MatchRange'</a>, <a>matchRange_start</a> - The start of
--   the range.
newMatchRange :: Integer -> Integer -> MatchRange

-- | The end of the range.
matchRange_end :: Lens' MatchRange Integer

-- | The start of the range.
matchRange_start :: Lens' MatchRange Integer

-- | An object that represents a service mesh returned by a describe
--   operation.
--   
--   <i>See:</i> <a>newMeshData</a> smart constructor.
data MeshData
MeshData' :: Text -> ResourceMetadata -> MeshSpec -> MeshStatus -> MeshData

-- | The name of the service mesh.
[$sel:meshName:MeshData'] :: MeshData -> Text

-- | The associated metadata for the service mesh.
[$sel:metadata:MeshData'] :: MeshData -> ResourceMetadata

-- | The associated specification for the service mesh.
[$sel:spec:MeshData'] :: MeshData -> MeshSpec

-- | The status of the service mesh.
[$sel:status:MeshData'] :: MeshData -> MeshStatus

-- | Create a value of <a>MeshData</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshName:MeshData'</a>, <a>meshData_meshName</a> - The name of
--   the service mesh.
--   
--   <a>$sel:metadata:MeshData'</a>, <a>meshData_metadata</a> - The
--   associated metadata for the service mesh.
--   
--   <a>$sel:spec:MeshData'</a>, <a>meshData_spec</a> - The associated
--   specification for the service mesh.
--   
--   <a>$sel:status:MeshData'</a>, <a>meshData_status</a> - The status of
--   the service mesh.
newMeshData :: Text -> ResourceMetadata -> MeshSpec -> MeshStatus -> MeshData

-- | The name of the service mesh.
meshData_meshName :: Lens' MeshData Text

-- | The associated metadata for the service mesh.
meshData_metadata :: Lens' MeshData ResourceMetadata

-- | The associated specification for the service mesh.
meshData_spec :: Lens' MeshData MeshSpec

-- | The status of the service mesh.
meshData_status :: Lens' MeshData MeshStatus

-- | An object that represents a service mesh returned by a list operation.
--   
--   <i>See:</i> <a>newMeshRef</a> smart constructor.
data MeshRef
MeshRef' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Integer -> MeshRef

-- | The full Amazon Resource Name (ARN) of the service mesh.
[$sel:arn:MeshRef'] :: MeshRef -> Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:MeshRef'] :: MeshRef -> POSIX

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
[$sel:lastUpdatedAt:MeshRef'] :: MeshRef -> POSIX

-- | The name of the service mesh.
[$sel:meshName:MeshRef'] :: MeshRef -> Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:MeshRef'] :: MeshRef -> Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
[$sel:resourceOwner:MeshRef'] :: MeshRef -> Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
[$sel:version:MeshRef'] :: MeshRef -> Integer

-- | Create a value of <a>MeshRef</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:MeshRef'</a>, <a>meshRef_arn</a> - The full Amazon
--   Resource Name (ARN) of the service mesh.
--   
--   <a>$sel:createdAt:MeshRef'</a>, <a>meshRef_createdAt</a> - The Unix
--   epoch timestamp in seconds for when the resource was created.
--   
--   <a>$sel:lastUpdatedAt:MeshRef'</a>, <a>meshRef_lastUpdatedAt</a> - The
--   Unix epoch timestamp in seconds for when the resource was last
--   updated.
--   
--   <a>$sel:meshName:MeshRef'</a>, <a>meshRef_meshName</a> - The name of
--   the service mesh.
--   
--   <a>$sel:meshOwner:MeshRef'</a>, <a>meshRef_meshOwner</a> - The AWS IAM
--   account ID of the service mesh owner. If the account ID is not your
--   own, then it's the ID of the account that shared the mesh with your
--   account. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
--   
--   <a>$sel:resourceOwner:MeshRef'</a>, <a>meshRef_resourceOwner</a> - The
--   AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
--   
--   <a>$sel:version:MeshRef'</a>, <a>meshRef_version</a> - The version of
--   the resource. Resources are created at version 1, and this version is
--   incremented each time that they're updated.
newMeshRef :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Integer -> MeshRef

-- | The full Amazon Resource Name (ARN) of the service mesh.
meshRef_arn :: Lens' MeshRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
meshRef_createdAt :: Lens' MeshRef UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
meshRef_lastUpdatedAt :: Lens' MeshRef UTCTime

-- | The name of the service mesh.
meshRef_meshName :: Lens' MeshRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
meshRef_meshOwner :: Lens' MeshRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
meshRef_resourceOwner :: Lens' MeshRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
meshRef_version :: Lens' MeshRef Integer

-- | An object that represents the specification of a service mesh.
--   
--   <i>See:</i> <a>newMeshSpec</a> smart constructor.
data MeshSpec
MeshSpec' :: Maybe EgressFilter -> MeshSpec

-- | The egress filter rules for the service mesh.
[$sel:egressFilter:MeshSpec'] :: MeshSpec -> Maybe EgressFilter

-- | Create a value of <a>MeshSpec</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:egressFilter:MeshSpec'</a>, <a>meshSpec_egressFilter</a> - The
--   egress filter rules for the service mesh.
newMeshSpec :: MeshSpec

-- | The egress filter rules for the service mesh.
meshSpec_egressFilter :: Lens' MeshSpec (Maybe EgressFilter)

-- | An object that represents the status of a service mesh.
--   
--   <i>See:</i> <a>newMeshStatus</a> smart constructor.
data MeshStatus
MeshStatus' :: Maybe MeshStatusCode -> MeshStatus

-- | The current mesh status.
[$sel:status:MeshStatus'] :: MeshStatus -> Maybe MeshStatusCode

-- | Create a value of <a>MeshStatus</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:MeshStatus'</a>, <a>meshStatus_status</a> - The current
--   mesh status.
newMeshStatus :: MeshStatus

-- | The current mesh status.
meshStatus_status :: Lens' MeshStatus (Maybe MeshStatusCode)

-- | An object that represents the outlier detection for a virtual node's
--   listener.
--   
--   <i>See:</i> <a>newOutlierDetection</a> smart constructor.
data OutlierDetection
OutlierDetection' :: Duration -> Duration -> Natural -> Natural -> OutlierDetection

-- | The base amount of time for which a host is ejected.
[$sel:baseEjectionDuration:OutlierDetection'] :: OutlierDetection -> Duration

-- | The time interval between ejection sweep analysis.
[$sel:interval:OutlierDetection'] :: OutlierDetection -> Duration

-- | Maximum percentage of hosts in load balancing pool for upstream
--   service that can be ejected. Will eject at least one host regardless
--   of the value.
[$sel:maxEjectionPercent:OutlierDetection'] :: OutlierDetection -> Natural

-- | Number of consecutive <tt>5xx</tt> errors required for ejection.
[$sel:maxServerErrors:OutlierDetection'] :: OutlierDetection -> Natural

-- | Create a value of <a>OutlierDetection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseEjectionDuration:OutlierDetection'</a>,
--   <a>outlierDetection_baseEjectionDuration</a> - The base amount of time
--   for which a host is ejected.
--   
--   <a>$sel:interval:OutlierDetection'</a>,
--   <a>outlierDetection_interval</a> - The time interval between ejection
--   sweep analysis.
--   
--   <a>$sel:maxEjectionPercent:OutlierDetection'</a>,
--   <a>outlierDetection_maxEjectionPercent</a> - Maximum percentage of
--   hosts in load balancing pool for upstream service that can be ejected.
--   Will eject at least one host regardless of the value.
--   
--   <a>$sel:maxServerErrors:OutlierDetection'</a>,
--   <a>outlierDetection_maxServerErrors</a> - Number of consecutive
--   <tt>5xx</tt> errors required for ejection.
newOutlierDetection :: Duration -> Duration -> Natural -> Natural -> OutlierDetection

-- | The base amount of time for which a host is ejected.
outlierDetection_baseEjectionDuration :: Lens' OutlierDetection Duration

-- | The time interval between ejection sweep analysis.
outlierDetection_interval :: Lens' OutlierDetection Duration

-- | Maximum percentage of hosts in load balancing pool for upstream
--   service that can be ejected. Will eject at least one host regardless
--   of the value.
outlierDetection_maxEjectionPercent :: Lens' OutlierDetection Natural

-- | Number of consecutive <tt>5xx</tt> errors required for ejection.
outlierDetection_maxServerErrors :: Lens' OutlierDetection Natural

-- | An object that represents a port mapping.
--   
--   <i>See:</i> <a>newPortMapping</a> smart constructor.
data PortMapping
PortMapping' :: Natural -> PortProtocol -> PortMapping

-- | The port used for the port mapping.
[$sel:port:PortMapping'] :: PortMapping -> Natural

-- | The protocol used for the port mapping. Specify one protocol.
[$sel:protocol:PortMapping'] :: PortMapping -> PortProtocol

-- | Create a value of <a>PortMapping</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:port:PortMapping'</a>, <a>portMapping_port</a> - The port used
--   for the port mapping.
--   
--   <a>$sel:protocol:PortMapping'</a>, <a>portMapping_protocol</a> - The
--   protocol used for the port mapping. Specify one protocol.
newPortMapping :: Natural -> PortProtocol -> PortMapping

-- | The port used for the port mapping.
portMapping_port :: Lens' PortMapping Natural

-- | The protocol used for the port mapping. Specify one protocol.
portMapping_protocol :: Lens' PortMapping PortProtocol

-- | An object representing the query parameter to match.
--   
--   <i>See:</i> <a>newQueryParameterMatch</a> smart constructor.
data QueryParameterMatch
QueryParameterMatch' :: Maybe Text -> QueryParameterMatch

-- | The exact query parameter to match on.
[$sel:exact:QueryParameterMatch'] :: QueryParameterMatch -> Maybe Text

-- | Create a value of <a>QueryParameterMatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exact:QueryParameterMatch'</a>,
--   <a>queryParameterMatch_exact</a> - The exact query parameter to match
--   on.
newQueryParameterMatch :: QueryParameterMatch

-- | The exact query parameter to match on.
queryParameterMatch_exact :: Lens' QueryParameterMatch (Maybe Text)

-- | An object that represents metadata for a resource.
--   
--   <i>See:</i> <a>newResourceMetadata</a> smart constructor.
data ResourceMetadata
ResourceMetadata' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Integer -> ResourceMetadata

-- | The full Amazon Resource Name (ARN) for the resource.
[$sel:arn:ResourceMetadata'] :: ResourceMetadata -> Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:ResourceMetadata'] :: ResourceMetadata -> POSIX

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
[$sel:lastUpdatedAt:ResourceMetadata'] :: ResourceMetadata -> POSIX

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:ResourceMetadata'] :: ResourceMetadata -> Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
[$sel:resourceOwner:ResourceMetadata'] :: ResourceMetadata -> Text

-- | The unique identifier for the resource.
[$sel:uid:ResourceMetadata'] :: ResourceMetadata -> Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
[$sel:version:ResourceMetadata'] :: ResourceMetadata -> Integer

-- | Create a value of <a>ResourceMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ResourceMetadata'</a>, <a>resourceMetadata_arn</a> - The
--   full Amazon Resource Name (ARN) for the resource.
--   
--   <a>$sel:createdAt:ResourceMetadata'</a>,
--   <a>resourceMetadata_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:lastUpdatedAt:ResourceMetadata'</a>,
--   <a>resourceMetadata_lastUpdatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was last updated.
--   
--   <a>$sel:meshOwner:ResourceMetadata'</a>,
--   <a>resourceMetadata_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:ResourceMetadata'</a>,
--   <a>resourceMetadata_resourceOwner</a> - The AWS IAM account ID of the
--   resource owner. If the account ID is not your own, then it's the ID of
--   the mesh owner or of another account that the mesh is shared with. For
--   more information about mesh sharing, see <a>Working with shared
--   meshes</a>.
--   
--   <a>$sel:uid:ResourceMetadata'</a>, <a>resourceMetadata_uid</a> - The
--   unique identifier for the resource.
--   
--   <a>$sel:version:ResourceMetadata'</a>, <a>resourceMetadata_version</a>
--   - The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
newResourceMetadata :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Integer -> ResourceMetadata

-- | The full Amazon Resource Name (ARN) for the resource.
resourceMetadata_arn :: Lens' ResourceMetadata Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
resourceMetadata_createdAt :: Lens' ResourceMetadata UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
resourceMetadata_lastUpdatedAt :: Lens' ResourceMetadata UTCTime

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
resourceMetadata_meshOwner :: Lens' ResourceMetadata Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
resourceMetadata_resourceOwner :: Lens' ResourceMetadata Text

-- | The unique identifier for the resource.
resourceMetadata_uid :: Lens' ResourceMetadata Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
resourceMetadata_version :: Lens' ResourceMetadata Integer

-- | An object that represents a route returned by a describe operation.
--   
--   <i>See:</i> <a>newRouteData</a> smart constructor.
data RouteData
RouteData' :: Text -> ResourceMetadata -> Text -> RouteSpec -> RouteStatus -> Text -> RouteData

-- | The name of the service mesh that the route resides in.
[$sel:meshName:RouteData'] :: RouteData -> Text

-- | The associated metadata for the route.
[$sel:metadata:RouteData'] :: RouteData -> ResourceMetadata

-- | The name of the route.
[$sel:routeName:RouteData'] :: RouteData -> Text

-- | The specifications of the route.
[$sel:spec:RouteData'] :: RouteData -> RouteSpec

-- | The status of the route.
[$sel:status:RouteData'] :: RouteData -> RouteStatus

-- | The virtual router that the route is associated with.
[$sel:virtualRouterName:RouteData'] :: RouteData -> Text

-- | Create a value of <a>RouteData</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshName:RouteData'</a>, <a>routeData_meshName</a> - The name
--   of the service mesh that the route resides in.
--   
--   <a>$sel:metadata:RouteData'</a>, <a>routeData_metadata</a> - The
--   associated metadata for the route.
--   
--   <a>$sel:routeName:RouteData'</a>, <a>routeData_routeName</a> - The
--   name of the route.
--   
--   <a>$sel:spec:RouteData'</a>, <a>routeData_spec</a> - The
--   specifications of the route.
--   
--   <a>$sel:status:RouteData'</a>, <a>routeData_status</a> - The status of
--   the route.
--   
--   <a>$sel:virtualRouterName:RouteData'</a>,
--   <a>routeData_virtualRouterName</a> - The virtual router that the route
--   is associated with.
newRouteData :: Text -> ResourceMetadata -> Text -> RouteSpec -> RouteStatus -> Text -> RouteData

-- | The name of the service mesh that the route resides in.
routeData_meshName :: Lens' RouteData Text

-- | The associated metadata for the route.
routeData_metadata :: Lens' RouteData ResourceMetadata

-- | The name of the route.
routeData_routeName :: Lens' RouteData Text

-- | The specifications of the route.
routeData_spec :: Lens' RouteData RouteSpec

-- | The status of the route.
routeData_status :: Lens' RouteData RouteStatus

-- | The virtual router that the route is associated with.
routeData_virtualRouterName :: Lens' RouteData Text

-- | An object that represents a route returned by a list operation.
--   
--   <i>See:</i> <a>newRouteRef</a> smart constructor.
data RouteRef
RouteRef' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Text -> Integer -> Text -> RouteRef

-- | The full Amazon Resource Name (ARN) for the route.
[$sel:arn:RouteRef'] :: RouteRef -> Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:RouteRef'] :: RouteRef -> POSIX

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
[$sel:lastUpdatedAt:RouteRef'] :: RouteRef -> POSIX

-- | The name of the service mesh that the route resides in.
[$sel:meshName:RouteRef'] :: RouteRef -> Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:RouteRef'] :: RouteRef -> Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
[$sel:resourceOwner:RouteRef'] :: RouteRef -> Text

-- | The name of the route.
[$sel:routeName:RouteRef'] :: RouteRef -> Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
[$sel:version:RouteRef'] :: RouteRef -> Integer

-- | The virtual router that the route is associated with.
[$sel:virtualRouterName:RouteRef'] :: RouteRef -> Text

-- | Create a value of <a>RouteRef</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:RouteRef'</a>, <a>routeRef_arn</a> - The full Amazon
--   Resource Name (ARN) for the route.
--   
--   <a>$sel:createdAt:RouteRef'</a>, <a>routeRef_createdAt</a> - The Unix
--   epoch timestamp in seconds for when the resource was created.
--   
--   <a>$sel:lastUpdatedAt:RouteRef'</a>, <a>routeRef_lastUpdatedAt</a> -
--   The Unix epoch timestamp in seconds for when the resource was last
--   updated.
--   
--   <a>$sel:meshName:RouteRef'</a>, <a>routeRef_meshName</a> - The name of
--   the service mesh that the route resides in.
--   
--   <a>$sel:meshOwner:RouteRef'</a>, <a>routeRef_meshOwner</a> - The AWS
--   IAM account ID of the service mesh owner. If the account ID is not
--   your own, then it's the ID of the account that shared the mesh with
--   your account. For more information about mesh sharing, see <a>Working
--   with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:RouteRef'</a>, <a>routeRef_resourceOwner</a> -
--   The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
--   
--   <a>$sel:routeName:RouteRef'</a>, <a>routeRef_routeName</a> - The name
--   of the route.
--   
--   <a>$sel:version:RouteRef'</a>, <a>routeRef_version</a> - The version
--   of the resource. Resources are created at version 1, and this version
--   is incremented each time that they're updated.
--   
--   <a>$sel:virtualRouterName:RouteRef'</a>,
--   <a>routeRef_virtualRouterName</a> - The virtual router that the route
--   is associated with.
newRouteRef :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Text -> Integer -> Text -> RouteRef

-- | The full Amazon Resource Name (ARN) for the route.
routeRef_arn :: Lens' RouteRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
routeRef_createdAt :: Lens' RouteRef UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
routeRef_lastUpdatedAt :: Lens' RouteRef UTCTime

-- | The name of the service mesh that the route resides in.
routeRef_meshName :: Lens' RouteRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
routeRef_meshOwner :: Lens' RouteRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
routeRef_resourceOwner :: Lens' RouteRef Text

-- | The name of the route.
routeRef_routeName :: Lens' RouteRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
routeRef_version :: Lens' RouteRef Integer

-- | The virtual router that the route is associated with.
routeRef_virtualRouterName :: Lens' RouteRef Text

-- | An object that represents a route specification. Specify one route
--   type.
--   
--   <i>See:</i> <a>newRouteSpec</a> smart constructor.
data RouteSpec
RouteSpec' :: Maybe Natural -> Maybe HttpRoute -> Maybe GrpcRoute -> Maybe TcpRoute -> Maybe HttpRoute -> RouteSpec

-- | The priority for the route. Routes are matched based on the specified
--   value, where 0 is the highest priority.
[$sel:priority:RouteSpec'] :: RouteSpec -> Maybe Natural

-- | An object that represents the specification of an HTTP/2 route.
[$sel:http2Route:RouteSpec'] :: RouteSpec -> Maybe HttpRoute

-- | An object that represents the specification of a gRPC route.
[$sel:grpcRoute:RouteSpec'] :: RouteSpec -> Maybe GrpcRoute

-- | An object that represents the specification of a TCP route.
[$sel:tcpRoute:RouteSpec'] :: RouteSpec -> Maybe TcpRoute

-- | An object that represents the specification of an HTTP route.
[$sel:httpRoute:RouteSpec'] :: RouteSpec -> Maybe HttpRoute

-- | Create a value of <a>RouteSpec</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priority:RouteSpec'</a>, <a>routeSpec_priority</a> - The
--   priority for the route. Routes are matched based on the specified
--   value, where 0 is the highest priority.
--   
--   <a>$sel:http2Route:RouteSpec'</a>, <a>routeSpec_http2Route</a> - An
--   object that represents the specification of an HTTP/2 route.
--   
--   <a>$sel:grpcRoute:RouteSpec'</a>, <a>routeSpec_grpcRoute</a> - An
--   object that represents the specification of a gRPC route.
--   
--   <a>$sel:tcpRoute:RouteSpec'</a>, <a>routeSpec_tcpRoute</a> - An object
--   that represents the specification of a TCP route.
--   
--   <a>$sel:httpRoute:RouteSpec'</a>, <a>routeSpec_httpRoute</a> - An
--   object that represents the specification of an HTTP route.
newRouteSpec :: RouteSpec

-- | The priority for the route. Routes are matched based on the specified
--   value, where 0 is the highest priority.
routeSpec_priority :: Lens' RouteSpec (Maybe Natural)

-- | An object that represents the specification of an HTTP/2 route.
routeSpec_http2Route :: Lens' RouteSpec (Maybe HttpRoute)

-- | An object that represents the specification of a gRPC route.
routeSpec_grpcRoute :: Lens' RouteSpec (Maybe GrpcRoute)

-- | An object that represents the specification of a TCP route.
routeSpec_tcpRoute :: Lens' RouteSpec (Maybe TcpRoute)

-- | An object that represents the specification of an HTTP route.
routeSpec_httpRoute :: Lens' RouteSpec (Maybe HttpRoute)

-- | An object that represents the current status of a route.
--   
--   <i>See:</i> <a>newRouteStatus</a> smart constructor.
data RouteStatus
RouteStatus' :: RouteStatusCode -> RouteStatus

-- | The current status for the route.
[$sel:status:RouteStatus'] :: RouteStatus -> RouteStatusCode

-- | Create a value of <a>RouteStatus</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:RouteStatus'</a>, <a>routeStatus_status</a> - The
--   current status for the route.
newRouteStatus :: RouteStatusCode -> RouteStatus

-- | The current status for the route.
routeStatus_status :: Lens' RouteStatus RouteStatusCode

-- | An object that represents the service discovery information for a
--   virtual node.
--   
--   <i>See:</i> <a>newServiceDiscovery</a> smart constructor.
data ServiceDiscovery
ServiceDiscovery' :: Maybe AwsCloudMapServiceDiscovery -> Maybe DnsServiceDiscovery -> ServiceDiscovery

-- | Specifies any Cloud Map information for the virtual node.
[$sel:awsCloudMap:ServiceDiscovery'] :: ServiceDiscovery -> Maybe AwsCloudMapServiceDiscovery

-- | Specifies the DNS information for the virtual node.
[$sel:dns:ServiceDiscovery'] :: ServiceDiscovery -> Maybe DnsServiceDiscovery

-- | Create a value of <a>ServiceDiscovery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:awsCloudMap:ServiceDiscovery'</a>,
--   <a>serviceDiscovery_awsCloudMap</a> - Specifies any Cloud Map
--   information for the virtual node.
--   
--   <a>$sel:dns:ServiceDiscovery'</a>, <a>serviceDiscovery_dns</a> -
--   Specifies the DNS information for the virtual node.
newServiceDiscovery :: ServiceDiscovery

-- | Specifies any Cloud Map information for the virtual node.
serviceDiscovery_awsCloudMap :: Lens' ServiceDiscovery (Maybe AwsCloudMapServiceDiscovery)

-- | Specifies the DNS information for the virtual node.
serviceDiscovery_dns :: Lens' ServiceDiscovery (Maybe DnsServiceDiscovery)

-- | An object that represents the methods by which a subject alternative
--   name on a peer Transport Layer Security (TLS) certificate can be
--   matched.
--   
--   <i>See:</i> <a>newSubjectAlternativeNameMatchers</a> smart
--   constructor.
data SubjectAlternativeNameMatchers
SubjectAlternativeNameMatchers' :: [Text] -> SubjectAlternativeNameMatchers

-- | The values sent must match the specified values exactly.
[$sel:exact:SubjectAlternativeNameMatchers'] :: SubjectAlternativeNameMatchers -> [Text]

-- | Create a value of <a>SubjectAlternativeNameMatchers</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exact:SubjectAlternativeNameMatchers'</a>,
--   <a>subjectAlternativeNameMatchers_exact</a> - The values sent must
--   match the specified values exactly.
newSubjectAlternativeNameMatchers :: SubjectAlternativeNameMatchers

-- | The values sent must match the specified values exactly.
subjectAlternativeNameMatchers_exact :: Lens' SubjectAlternativeNameMatchers [Text]

-- | An object that represents the subject alternative names secured by the
--   certificate.
--   
--   <i>See:</i> <a>newSubjectAlternativeNames</a> smart constructor.
data SubjectAlternativeNames
SubjectAlternativeNames' :: SubjectAlternativeNameMatchers -> SubjectAlternativeNames

-- | An object that represents the criteria for determining a SANs match.
[$sel:match:SubjectAlternativeNames'] :: SubjectAlternativeNames -> SubjectAlternativeNameMatchers

-- | Create a value of <a>SubjectAlternativeNames</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:match:SubjectAlternativeNames'</a>,
--   <a>subjectAlternativeNames_match</a> - An object that represents the
--   criteria for determining a SANs match.
newSubjectAlternativeNames :: SubjectAlternativeNameMatchers -> SubjectAlternativeNames

-- | An object that represents the criteria for determining a SANs match.
subjectAlternativeNames_match :: Lens' SubjectAlternativeNames SubjectAlternativeNameMatchers

-- | Optional metadata that you apply to a resource to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Tag keys can have a maximum
--   character length of 128 characters, and tag values can have a maximum
--   length of 256 characters.
--   
--   <i>See:</i> <a>newTagRef</a> smart constructor.
data TagRef
TagRef' :: Text -> Text -> TagRef

-- | One part of a key-value pair that make up a tag. A <tt>key</tt> is a
--   general label that acts like a category for more specific tag values.
[$sel:key:TagRef'] :: TagRef -> Text

-- | The optional part of a key-value pair that make up a tag. A
--   <tt>value</tt> acts as a descriptor within a tag category (key).
[$sel:value:TagRef'] :: TagRef -> Text

-- | Create a value of <a>TagRef</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:TagRef'</a>, <a>tagRef_key</a> - One part of a key-value
--   pair that make up a tag. A <tt>key</tt> is a general label that acts
--   like a category for more specific tag values.
--   
--   <a>$sel:value:TagRef'</a>, <a>tagRef_value</a> - The optional part of
--   a key-value pair that make up a tag. A <tt>value</tt> acts as a
--   descriptor within a tag category (key).
newTagRef :: Text -> Text -> TagRef

-- | One part of a key-value pair that make up a tag. A <tt>key</tt> is a
--   general label that acts like a category for more specific tag values.
tagRef_key :: Lens' TagRef Text

-- | The optional part of a key-value pair that make up a tag. A
--   <tt>value</tt> acts as a descriptor within a tag category (key).
tagRef_value :: Lens' TagRef Text

-- | An object that represents a TCP route type.
--   
--   <i>See:</i> <a>newTcpRoute</a> smart constructor.
data TcpRoute
TcpRoute' :: Maybe TcpTimeout -> TcpRouteAction -> TcpRoute

-- | An object that represents types of timeouts.
[$sel:timeout:TcpRoute'] :: TcpRoute -> Maybe TcpTimeout

-- | The action to take if a match is determined.
[$sel:action:TcpRoute'] :: TcpRoute -> TcpRouteAction

-- | Create a value of <a>TcpRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeout:TcpRoute'</a>, <a>tcpRoute_timeout</a> - An object
--   that represents types of timeouts.
--   
--   <a>$sel:action:TcpRoute'</a>, <a>tcpRoute_action</a> - The action to
--   take if a match is determined.
newTcpRoute :: TcpRouteAction -> TcpRoute

-- | An object that represents types of timeouts.
tcpRoute_timeout :: Lens' TcpRoute (Maybe TcpTimeout)

-- | The action to take if a match is determined.
tcpRoute_action :: Lens' TcpRoute TcpRouteAction

-- | An object that represents the action to take if a match is determined.
--   
--   <i>See:</i> <a>newTcpRouteAction</a> smart constructor.
data TcpRouteAction
TcpRouteAction' :: NonEmpty WeightedTarget -> TcpRouteAction

-- | An object that represents the targets that traffic is routed to when a
--   request matches the route.
[$sel:weightedTargets:TcpRouteAction'] :: TcpRouteAction -> NonEmpty WeightedTarget

-- | Create a value of <a>TcpRouteAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:weightedTargets:TcpRouteAction'</a>,
--   <a>tcpRouteAction_weightedTargets</a> - An object that represents the
--   targets that traffic is routed to when a request matches the route.
newTcpRouteAction :: NonEmpty WeightedTarget -> TcpRouteAction

-- | An object that represents the targets that traffic is routed to when a
--   request matches the route.
tcpRouteAction_weightedTargets :: Lens' TcpRouteAction (NonEmpty WeightedTarget)

-- | An object that represents types of timeouts.
--   
--   <i>See:</i> <a>newTcpTimeout</a> smart constructor.
data TcpTimeout
TcpTimeout' :: Maybe Duration -> TcpTimeout

-- | An object that represents an idle timeout. An idle timeout bounds the
--   amount of time that a connection may be idle. The default value is
--   none.
[$sel:idle:TcpTimeout'] :: TcpTimeout -> Maybe Duration

-- | Create a value of <a>TcpTimeout</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idle:TcpTimeout'</a>, <a>tcpTimeout_idle</a> - An object that
--   represents an idle timeout. An idle timeout bounds the amount of time
--   that a connection may be idle. The default value is none.
newTcpTimeout :: TcpTimeout

-- | An object that represents an idle timeout. An idle timeout bounds the
--   amount of time that a connection may be idle. The default value is
--   none.
tcpTimeout_idle :: Lens' TcpTimeout (Maybe Duration)

-- | An object that represents how the proxy will validate its peer during
--   Transport Layer Security (TLS) negotiation.
--   
--   <i>See:</i> <a>newTlsValidationContext</a> smart constructor.
data TlsValidationContext
TlsValidationContext' :: Maybe SubjectAlternativeNames -> TlsValidationContextTrust -> TlsValidationContext

-- | A reference to an object that represents the SANs for a Transport
--   Layer Security (TLS) validation context.
[$sel:subjectAlternativeNames:TlsValidationContext'] :: TlsValidationContext -> Maybe SubjectAlternativeNames

-- | A reference to where to retrieve the trust chain when validating a
--   peer’s Transport Layer Security (TLS) certificate.
[$sel:trust:TlsValidationContext'] :: TlsValidationContext -> TlsValidationContextTrust

-- | Create a value of <a>TlsValidationContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subjectAlternativeNames:TlsValidationContext'</a>,
--   <a>tlsValidationContext_subjectAlternativeNames</a> - A reference to
--   an object that represents the SANs for a Transport Layer Security
--   (TLS) validation context.
--   
--   <a>$sel:trust:TlsValidationContext'</a>,
--   <a>tlsValidationContext_trust</a> - A reference to where to retrieve
--   the trust chain when validating a peer’s Transport Layer Security
--   (TLS) certificate.
newTlsValidationContext :: TlsValidationContextTrust -> TlsValidationContext

-- | A reference to an object that represents the SANs for a Transport
--   Layer Security (TLS) validation context.
tlsValidationContext_subjectAlternativeNames :: Lens' TlsValidationContext (Maybe SubjectAlternativeNames)

-- | A reference to where to retrieve the trust chain when validating a
--   peer’s Transport Layer Security (TLS) certificate.
tlsValidationContext_trust :: Lens' TlsValidationContext TlsValidationContextTrust

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for an Certificate Manager certificate.
--   
--   <i>See:</i> <a>newTlsValidationContextAcmTrust</a> smart constructor.
data TlsValidationContextAcmTrust
TlsValidationContextAcmTrust' :: NonEmpty Text -> TlsValidationContextAcmTrust

-- | One or more ACM Amazon Resource Name (ARN)s.
[$sel:certificateAuthorityArns:TlsValidationContextAcmTrust'] :: TlsValidationContextAcmTrust -> NonEmpty Text

-- | Create a value of <a>TlsValidationContextAcmTrust</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityArns:TlsValidationContextAcmTrust'</a>,
--   <a>tlsValidationContextAcmTrust_certificateAuthorityArns</a> - One or
--   more ACM Amazon Resource Name (ARN)s.
newTlsValidationContextAcmTrust :: NonEmpty Text -> TlsValidationContextAcmTrust

-- | One or more ACM Amazon Resource Name (ARN)s.
tlsValidationContextAcmTrust_certificateAuthorityArns :: Lens' TlsValidationContextAcmTrust (NonEmpty Text)

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
--   
--   <i>See:</i> <a>newTlsValidationContextFileTrust</a> smart constructor.
data TlsValidationContextFileTrust
TlsValidationContextFileTrust' :: Text -> TlsValidationContextFileTrust

-- | The certificate trust chain for a certificate stored on the file
--   system of the virtual node that the proxy is running on.
[$sel:certificateChain:TlsValidationContextFileTrust'] :: TlsValidationContextFileTrust -> Text

-- | Create a value of <a>TlsValidationContextFileTrust</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateChain:TlsValidationContextFileTrust'</a>,
--   <a>tlsValidationContextFileTrust_certificateChain</a> - The
--   certificate trust chain for a certificate stored on the file system of
--   the virtual node that the proxy is running on.
newTlsValidationContextFileTrust :: Text -> TlsValidationContextFileTrust

-- | The certificate trust chain for a certificate stored on the file
--   system of the virtual node that the proxy is running on.
tlsValidationContextFileTrust_certificateChain :: Lens' TlsValidationContextFileTrust Text

-- | An object that represents a Transport Layer Security (TLS) Secret
--   Discovery Service validation context trust. The proxy must be
--   configured with a local SDS provider via a Unix Domain Socket. See App
--   Mesh <a>TLS documentation</a> for more info.
--   
--   <i>See:</i> <a>newTlsValidationContextSdsTrust</a> smart constructor.
data TlsValidationContextSdsTrust
TlsValidationContextSdsTrust' :: Text -> TlsValidationContextSdsTrust

-- | A reference to an object that represents the name of the secret for a
--   Transport Layer Security (TLS) Secret Discovery Service validation
--   context trust.
[$sel:secretName:TlsValidationContextSdsTrust'] :: TlsValidationContextSdsTrust -> Text

-- | Create a value of <a>TlsValidationContextSdsTrust</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretName:TlsValidationContextSdsTrust'</a>,
--   <a>tlsValidationContextSdsTrust_secretName</a> - A reference to an
--   object that represents the name of the secret for a Transport Layer
--   Security (TLS) Secret Discovery Service validation context trust.
newTlsValidationContextSdsTrust :: Text -> TlsValidationContextSdsTrust

-- | A reference to an object that represents the name of the secret for a
--   Transport Layer Security (TLS) Secret Discovery Service validation
--   context trust.
tlsValidationContextSdsTrust_secretName :: Lens' TlsValidationContextSdsTrust Text

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust.
--   
--   <i>See:</i> <a>newTlsValidationContextTrust</a> smart constructor.
data TlsValidationContextTrust
TlsValidationContextTrust' :: Maybe TlsValidationContextAcmTrust -> Maybe TlsValidationContextSdsTrust -> Maybe TlsValidationContextFileTrust -> TlsValidationContextTrust

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) validation context trust for an Certificate Manager certificate.
[$sel:acm:TlsValidationContextTrust'] :: TlsValidationContextTrust -> Maybe TlsValidationContextAcmTrust

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) Secret Discovery Service validation context trust.
[$sel:sds:TlsValidationContextTrust'] :: TlsValidationContextTrust -> Maybe TlsValidationContextSdsTrust

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
[$sel:file:TlsValidationContextTrust'] :: TlsValidationContextTrust -> Maybe TlsValidationContextFileTrust

-- | Create a value of <a>TlsValidationContextTrust</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acm:TlsValidationContextTrust'</a>,
--   <a>tlsValidationContextTrust_acm</a> - A reference to an object that
--   represents a Transport Layer Security (TLS) validation context trust
--   for an Certificate Manager certificate.
--   
--   <a>$sel:sds:TlsValidationContextTrust'</a>,
--   <a>tlsValidationContextTrust_sds</a> - A reference to an object that
--   represents a Transport Layer Security (TLS) Secret Discovery Service
--   validation context trust.
--   
--   <a>$sel:file:TlsValidationContextTrust'</a>,
--   <a>tlsValidationContextTrust_file</a> - An object that represents a
--   Transport Layer Security (TLS) validation context trust for a local
--   file.
newTlsValidationContextTrust :: TlsValidationContextTrust

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) validation context trust for an Certificate Manager certificate.
tlsValidationContextTrust_acm :: Lens' TlsValidationContextTrust (Maybe TlsValidationContextAcmTrust)

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) Secret Discovery Service validation context trust.
tlsValidationContextTrust_sds :: Lens' TlsValidationContextTrust (Maybe TlsValidationContextSdsTrust)

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
tlsValidationContextTrust_file :: Lens' TlsValidationContextTrust (Maybe TlsValidationContextFileTrust)

-- | The access log configuration for a virtual gateway.
--   
--   <i>See:</i> <a>newVirtualGatewayAccessLog</a> smart constructor.
data VirtualGatewayAccessLog
VirtualGatewayAccessLog' :: Maybe VirtualGatewayFileAccessLog -> VirtualGatewayAccessLog

-- | The file object to send virtual gateway access logs to.
[$sel:file:VirtualGatewayAccessLog'] :: VirtualGatewayAccessLog -> Maybe VirtualGatewayFileAccessLog

-- | Create a value of <a>VirtualGatewayAccessLog</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:file:VirtualGatewayAccessLog'</a>,
--   <a>virtualGatewayAccessLog_file</a> - The file object to send virtual
--   gateway access logs to.
newVirtualGatewayAccessLog :: VirtualGatewayAccessLog

-- | The file object to send virtual gateway access logs to.
virtualGatewayAccessLog_file :: Lens' VirtualGatewayAccessLog (Maybe VirtualGatewayFileAccessLog)

-- | An object that represents the default properties for a backend.
--   
--   <i>See:</i> <a>newVirtualGatewayBackendDefaults</a> smart constructor.
data VirtualGatewayBackendDefaults
VirtualGatewayBackendDefaults' :: Maybe VirtualGatewayClientPolicy -> VirtualGatewayBackendDefaults

-- | A reference to an object that represents a client policy.
[$sel:clientPolicy:VirtualGatewayBackendDefaults'] :: VirtualGatewayBackendDefaults -> Maybe VirtualGatewayClientPolicy

-- | Create a value of <a>VirtualGatewayBackendDefaults</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientPolicy:VirtualGatewayBackendDefaults'</a>,
--   <a>virtualGatewayBackendDefaults_clientPolicy</a> - A reference to an
--   object that represents a client policy.
newVirtualGatewayBackendDefaults :: VirtualGatewayBackendDefaults

-- | A reference to an object that represents a client policy.
virtualGatewayBackendDefaults_clientPolicy :: Lens' VirtualGatewayBackendDefaults (Maybe VirtualGatewayClientPolicy)

-- | An object that represents a client policy.
--   
--   <i>See:</i> <a>newVirtualGatewayClientPolicy</a> smart constructor.
data VirtualGatewayClientPolicy
VirtualGatewayClientPolicy' :: Maybe VirtualGatewayClientPolicyTls -> VirtualGatewayClientPolicy

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) client policy.
[$sel:tls:VirtualGatewayClientPolicy'] :: VirtualGatewayClientPolicy -> Maybe VirtualGatewayClientPolicyTls

-- | Create a value of <a>VirtualGatewayClientPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tls:VirtualGatewayClientPolicy'</a>,
--   <a>virtualGatewayClientPolicy_tls</a> - A reference to an object that
--   represents a Transport Layer Security (TLS) client policy.
newVirtualGatewayClientPolicy :: VirtualGatewayClientPolicy

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) client policy.
virtualGatewayClientPolicy_tls :: Lens' VirtualGatewayClientPolicy (Maybe VirtualGatewayClientPolicyTls)

-- | An object that represents a Transport Layer Security (TLS) client
--   policy.
--   
--   <i>See:</i> <a>newVirtualGatewayClientPolicyTls</a> smart constructor.
data VirtualGatewayClientPolicyTls
VirtualGatewayClientPolicyTls' :: Maybe [Natural] -> Maybe VirtualGatewayClientTlsCertificate -> Maybe Bool -> VirtualGatewayTlsValidationContext -> VirtualGatewayClientPolicyTls

-- | One or more ports that the policy is enforced for.
[$sel:ports:VirtualGatewayClientPolicyTls'] :: VirtualGatewayClientPolicyTls -> Maybe [Natural]

-- | A reference to an object that represents a virtual gateway's client's
--   Transport Layer Security (TLS) certificate.
[$sel:certificate:VirtualGatewayClientPolicyTls'] :: VirtualGatewayClientPolicyTls -> Maybe VirtualGatewayClientTlsCertificate

-- | Whether the policy is enforced. The default is <tt>True</tt>, if a
--   value isn't specified.
[$sel:enforce:VirtualGatewayClientPolicyTls'] :: VirtualGatewayClientPolicyTls -> Maybe Bool

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) validation context.
[$sel:validation:VirtualGatewayClientPolicyTls'] :: VirtualGatewayClientPolicyTls -> VirtualGatewayTlsValidationContext

-- | Create a value of <a>VirtualGatewayClientPolicyTls</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ports:VirtualGatewayClientPolicyTls'</a>,
--   <a>virtualGatewayClientPolicyTls_ports</a> - One or more ports that
--   the policy is enforced for.
--   
--   <a>$sel:certificate:VirtualGatewayClientPolicyTls'</a>,
--   <a>virtualGatewayClientPolicyTls_certificate</a> - A reference to an
--   object that represents a virtual gateway's client's Transport Layer
--   Security (TLS) certificate.
--   
--   <a>$sel:enforce:VirtualGatewayClientPolicyTls'</a>,
--   <a>virtualGatewayClientPolicyTls_enforce</a> - Whether the policy is
--   enforced. The default is <tt>True</tt>, if a value isn't specified.
--   
--   <a>$sel:validation:VirtualGatewayClientPolicyTls'</a>,
--   <a>virtualGatewayClientPolicyTls_validation</a> - A reference to an
--   object that represents a Transport Layer Security (TLS) validation
--   context.
newVirtualGatewayClientPolicyTls :: VirtualGatewayTlsValidationContext -> VirtualGatewayClientPolicyTls

-- | One or more ports that the policy is enforced for.
virtualGatewayClientPolicyTls_ports :: Lens' VirtualGatewayClientPolicyTls (Maybe [Natural])

-- | A reference to an object that represents a virtual gateway's client's
--   Transport Layer Security (TLS) certificate.
virtualGatewayClientPolicyTls_certificate :: Lens' VirtualGatewayClientPolicyTls (Maybe VirtualGatewayClientTlsCertificate)

-- | Whether the policy is enforced. The default is <tt>True</tt>, if a
--   value isn't specified.
virtualGatewayClientPolicyTls_enforce :: Lens' VirtualGatewayClientPolicyTls (Maybe Bool)

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) validation context.
virtualGatewayClientPolicyTls_validation :: Lens' VirtualGatewayClientPolicyTls VirtualGatewayTlsValidationContext

-- | An object that represents the virtual gateway's client's Transport
--   Layer Security (TLS) certificate.
--   
--   <i>See:</i> <a>newVirtualGatewayClientTlsCertificate</a> smart
--   constructor.
data VirtualGatewayClientTlsCertificate
VirtualGatewayClientTlsCertificate' :: Maybe VirtualGatewayListenerTlsSdsCertificate -> Maybe VirtualGatewayListenerTlsFileCertificate -> VirtualGatewayClientTlsCertificate

-- | A reference to an object that represents a virtual gateway's client's
--   Secret Discovery Service certificate.
[$sel:sds:VirtualGatewayClientTlsCertificate'] :: VirtualGatewayClientTlsCertificate -> Maybe VirtualGatewayListenerTlsSdsCertificate

-- | An object that represents a local file certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a> .
[$sel:file:VirtualGatewayClientTlsCertificate'] :: VirtualGatewayClientTlsCertificate -> Maybe VirtualGatewayListenerTlsFileCertificate

-- | Create a value of <a>VirtualGatewayClientTlsCertificate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sds:VirtualGatewayClientTlsCertificate'</a>,
--   <a>virtualGatewayClientTlsCertificate_sds</a> - A reference to an
--   object that represents a virtual gateway's client's Secret Discovery
--   Service certificate.
--   
--   <a>$sel:file:VirtualGatewayClientTlsCertificate'</a>,
--   <a>virtualGatewayClientTlsCertificate_file</a> - An object that
--   represents a local file certificate. The certificate must meet
--   specific requirements and you must have proxy authorization enabled.
--   For more information, see <a>Transport Layer Security (TLS)</a> .
newVirtualGatewayClientTlsCertificate :: VirtualGatewayClientTlsCertificate

-- | A reference to an object that represents a virtual gateway's client's
--   Secret Discovery Service certificate.
virtualGatewayClientTlsCertificate_sds :: Lens' VirtualGatewayClientTlsCertificate (Maybe VirtualGatewayListenerTlsSdsCertificate)

-- | An object that represents a local file certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a> .
virtualGatewayClientTlsCertificate_file :: Lens' VirtualGatewayClientTlsCertificate (Maybe VirtualGatewayListenerTlsFileCertificate)

-- | An object that represents the type of virtual gateway connection pool.
--   
--   Only one protocol is used at a time and should be the same protocol as
--   the one chosen under port mapping.
--   
--   If not present the default value for <tt>maxPendingRequests</tt> is
--   <tt>2147483647</tt>.
--   
--   <i>See:</i> <a>newVirtualGatewayConnectionPool</a> smart constructor.
data VirtualGatewayConnectionPool
VirtualGatewayConnectionPool' :: Maybe VirtualGatewayHttp2ConnectionPool -> Maybe VirtualGatewayGrpcConnectionPool -> Maybe VirtualGatewayHttpConnectionPool -> VirtualGatewayConnectionPool

-- | An object that represents a type of connection pool.
[$sel:http2:VirtualGatewayConnectionPool'] :: VirtualGatewayConnectionPool -> Maybe VirtualGatewayHttp2ConnectionPool

-- | An object that represents a type of connection pool.
[$sel:grpc:VirtualGatewayConnectionPool'] :: VirtualGatewayConnectionPool -> Maybe VirtualGatewayGrpcConnectionPool

-- | An object that represents a type of connection pool.
[$sel:http:VirtualGatewayConnectionPool'] :: VirtualGatewayConnectionPool -> Maybe VirtualGatewayHttpConnectionPool

-- | Create a value of <a>VirtualGatewayConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:http2:VirtualGatewayConnectionPool'</a>,
--   <a>virtualGatewayConnectionPool_http2</a> - An object that represents
--   a type of connection pool.
--   
--   <a>$sel:grpc:VirtualGatewayConnectionPool'</a>,
--   <a>virtualGatewayConnectionPool_grpc</a> - An object that represents a
--   type of connection pool.
--   
--   <a>$sel:http:VirtualGatewayConnectionPool'</a>,
--   <a>virtualGatewayConnectionPool_http</a> - An object that represents a
--   type of connection pool.
newVirtualGatewayConnectionPool :: VirtualGatewayConnectionPool

-- | An object that represents a type of connection pool.
virtualGatewayConnectionPool_http2 :: Lens' VirtualGatewayConnectionPool (Maybe VirtualGatewayHttp2ConnectionPool)

-- | An object that represents a type of connection pool.
virtualGatewayConnectionPool_grpc :: Lens' VirtualGatewayConnectionPool (Maybe VirtualGatewayGrpcConnectionPool)

-- | An object that represents a type of connection pool.
virtualGatewayConnectionPool_http :: Lens' VirtualGatewayConnectionPool (Maybe VirtualGatewayHttpConnectionPool)

-- | An object that represents a virtual gateway returned by a describe
--   operation.
--   
--   <i>See:</i> <a>newVirtualGatewayData</a> smart constructor.
data VirtualGatewayData
VirtualGatewayData' :: Text -> ResourceMetadata -> VirtualGatewaySpec -> VirtualGatewayStatus -> Text -> VirtualGatewayData

-- | The name of the service mesh that the virtual gateway resides in.
[$sel:meshName:VirtualGatewayData'] :: VirtualGatewayData -> Text
[$sel:metadata:VirtualGatewayData'] :: VirtualGatewayData -> ResourceMetadata

-- | The specifications of the virtual gateway.
[$sel:spec:VirtualGatewayData'] :: VirtualGatewayData -> VirtualGatewaySpec

-- | The current status of the virtual gateway.
[$sel:status:VirtualGatewayData'] :: VirtualGatewayData -> VirtualGatewayStatus

-- | The name of the virtual gateway.
[$sel:virtualGatewayName:VirtualGatewayData'] :: VirtualGatewayData -> Text

-- | Create a value of <a>VirtualGatewayData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshName:VirtualGatewayData'</a>,
--   <a>virtualGatewayData_meshName</a> - The name of the service mesh that
--   the virtual gateway resides in.
--   
--   <a>$sel:metadata:VirtualGatewayData'</a>,
--   <a>virtualGatewayData_metadata</a> - Undocumented member.
--   
--   <a>$sel:spec:VirtualGatewayData'</a>, <a>virtualGatewayData_spec</a> -
--   The specifications of the virtual gateway.
--   
--   <a>$sel:status:VirtualGatewayData'</a>,
--   <a>virtualGatewayData_status</a> - The current status of the virtual
--   gateway.
--   
--   <a>$sel:virtualGatewayName:VirtualGatewayData'</a>,
--   <a>virtualGatewayData_virtualGatewayName</a> - The name of the virtual
--   gateway.
newVirtualGatewayData :: Text -> ResourceMetadata -> VirtualGatewaySpec -> VirtualGatewayStatus -> Text -> VirtualGatewayData

-- | The name of the service mesh that the virtual gateway resides in.
virtualGatewayData_meshName :: Lens' VirtualGatewayData Text

-- | Undocumented member.
virtualGatewayData_metadata :: Lens' VirtualGatewayData ResourceMetadata

-- | The specifications of the virtual gateway.
virtualGatewayData_spec :: Lens' VirtualGatewayData VirtualGatewaySpec

-- | The current status of the virtual gateway.
virtualGatewayData_status :: Lens' VirtualGatewayData VirtualGatewayStatus

-- | The name of the virtual gateway.
virtualGatewayData_virtualGatewayName :: Lens' VirtualGatewayData Text

-- | An object that represents an access log file.
--   
--   <i>See:</i> <a>newVirtualGatewayFileAccessLog</a> smart constructor.
data VirtualGatewayFileAccessLog
VirtualGatewayFileAccessLog' :: Text -> VirtualGatewayFileAccessLog

-- | The file path to write access logs to. You can use
--   <tt>/dev/stdout</tt> to send access logs to standard out and configure
--   your Envoy container to use a log driver, such as <tt>awslogs</tt>, to
--   export the access logs to a log storage service such as Amazon
--   CloudWatch Logs. You can also specify a path in the Envoy container's
--   file system to write the files to disk.
[$sel:path:VirtualGatewayFileAccessLog'] :: VirtualGatewayFileAccessLog -> Text

-- | Create a value of <a>VirtualGatewayFileAccessLog</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:VirtualGatewayFileAccessLog'</a>,
--   <a>virtualGatewayFileAccessLog_path</a> - The file path to write
--   access logs to. You can use <tt>/dev/stdout</tt> to send access logs
--   to standard out and configure your Envoy container to use a log
--   driver, such as <tt>awslogs</tt>, to export the access logs to a log
--   storage service such as Amazon CloudWatch Logs. You can also specify a
--   path in the Envoy container's file system to write the files to disk.
newVirtualGatewayFileAccessLog :: Text -> VirtualGatewayFileAccessLog

-- | The file path to write access logs to. You can use
--   <tt>/dev/stdout</tt> to send access logs to standard out and configure
--   your Envoy container to use a log driver, such as <tt>awslogs</tt>, to
--   export the access logs to a log storage service such as Amazon
--   CloudWatch Logs. You can also specify a path in the Envoy container's
--   file system to write the files to disk.
virtualGatewayFileAccessLog_path :: Lens' VirtualGatewayFileAccessLog Text

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualGatewayGrpcConnectionPool</a> smart
--   constructor.
data VirtualGatewayGrpcConnectionPool
VirtualGatewayGrpcConnectionPool' :: Natural -> VirtualGatewayGrpcConnectionPool

-- | Maximum number of inflight requests Envoy can concurrently support
--   across hosts in upstream cluster.
[$sel:maxRequests:VirtualGatewayGrpcConnectionPool'] :: VirtualGatewayGrpcConnectionPool -> Natural

-- | Create a value of <a>VirtualGatewayGrpcConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxRequests:VirtualGatewayGrpcConnectionPool'</a>,
--   <a>virtualGatewayGrpcConnectionPool_maxRequests</a> - Maximum number
--   of inflight requests Envoy can concurrently support across hosts in
--   upstream cluster.
newVirtualGatewayGrpcConnectionPool :: Natural -> VirtualGatewayGrpcConnectionPool

-- | Maximum number of inflight requests Envoy can concurrently support
--   across hosts in upstream cluster.
virtualGatewayGrpcConnectionPool_maxRequests :: Lens' VirtualGatewayGrpcConnectionPool Natural

-- | An object that represents the health check policy for a virtual
--   gateway's listener.
--   
--   <i>See:</i> <a>newVirtualGatewayHealthCheckPolicy</a> smart
--   constructor.
data VirtualGatewayHealthCheckPolicy
VirtualGatewayHealthCheckPolicy' :: Maybe Text -> Maybe Natural -> Natural -> Natural -> VirtualGatewayPortProtocol -> Natural -> Natural -> VirtualGatewayHealthCheckPolicy

-- | The destination path for the health check request. This value is only
--   used if the specified protocol is HTTP or HTTP/2. For any other
--   protocol, this value is ignored.
[$sel:path:VirtualGatewayHealthCheckPolicy'] :: VirtualGatewayHealthCheckPolicy -> Maybe Text

-- | The destination port for the health check request. This port must
--   match the port defined in the PortMapping for the listener.
[$sel:port:VirtualGatewayHealthCheckPolicy'] :: VirtualGatewayHealthCheckPolicy -> Maybe Natural

-- | The number of consecutive successful health checks that must occur
--   before declaring the listener healthy.
[$sel:healthyThreshold:VirtualGatewayHealthCheckPolicy'] :: VirtualGatewayHealthCheckPolicy -> Natural

-- | The time period in milliseconds between each health check execution.
[$sel:intervalMillis:VirtualGatewayHealthCheckPolicy'] :: VirtualGatewayHealthCheckPolicy -> Natural

-- | The protocol for the health check request. If you specify
--   <tt>grpc</tt>, then your service must conform to the <a>GRPC Health
--   Checking Protocol</a>.
[$sel:protocol:VirtualGatewayHealthCheckPolicy'] :: VirtualGatewayHealthCheckPolicy -> VirtualGatewayPortProtocol

-- | The amount of time to wait when receiving a response from the health
--   check, in milliseconds.
[$sel:timeoutMillis:VirtualGatewayHealthCheckPolicy'] :: VirtualGatewayHealthCheckPolicy -> Natural

-- | The number of consecutive failed health checks that must occur before
--   declaring a virtual gateway unhealthy.
[$sel:unhealthyThreshold:VirtualGatewayHealthCheckPolicy'] :: VirtualGatewayHealthCheckPolicy -> Natural

-- | Create a value of <a>VirtualGatewayHealthCheckPolicy</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_path</a> - The destination path for
--   the health check request. This value is only used if the specified
--   protocol is HTTP or HTTP/2. For any other protocol, this value is
--   ignored.
--   
--   <a>$sel:port:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_port</a> - The destination port for
--   the health check request. This port must match the port defined in the
--   PortMapping for the listener.
--   
--   <a>$sel:healthyThreshold:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_healthyThreshold</a> - The number
--   of consecutive successful health checks that must occur before
--   declaring the listener healthy.
--   
--   <a>$sel:intervalMillis:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_intervalMillis</a> - The time
--   period in milliseconds between each health check execution.
--   
--   <a>$sel:protocol:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_protocol</a> - The protocol for the
--   health check request. If you specify <tt>grpc</tt>, then your service
--   must conform to the <a>GRPC Health Checking Protocol</a>.
--   
--   <a>$sel:timeoutMillis:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_timeoutMillis</a> - The amount of
--   time to wait when receiving a response from the health check, in
--   milliseconds.
--   
--   <a>$sel:unhealthyThreshold:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_unhealthyThreshold</a> - The number
--   of consecutive failed health checks that must occur before declaring a
--   virtual gateway unhealthy.
newVirtualGatewayHealthCheckPolicy :: Natural -> Natural -> VirtualGatewayPortProtocol -> Natural -> Natural -> VirtualGatewayHealthCheckPolicy

-- | The destination path for the health check request. This value is only
--   used if the specified protocol is HTTP or HTTP/2. For any other
--   protocol, this value is ignored.
virtualGatewayHealthCheckPolicy_path :: Lens' VirtualGatewayHealthCheckPolicy (Maybe Text)

-- | The destination port for the health check request. This port must
--   match the port defined in the PortMapping for the listener.
virtualGatewayHealthCheckPolicy_port :: Lens' VirtualGatewayHealthCheckPolicy (Maybe Natural)

-- | The number of consecutive successful health checks that must occur
--   before declaring the listener healthy.
virtualGatewayHealthCheckPolicy_healthyThreshold :: Lens' VirtualGatewayHealthCheckPolicy Natural

-- | The time period in milliseconds between each health check execution.
virtualGatewayHealthCheckPolicy_intervalMillis :: Lens' VirtualGatewayHealthCheckPolicy Natural

-- | The protocol for the health check request. If you specify
--   <tt>grpc</tt>, then your service must conform to the <a>GRPC Health
--   Checking Protocol</a>.
virtualGatewayHealthCheckPolicy_protocol :: Lens' VirtualGatewayHealthCheckPolicy VirtualGatewayPortProtocol

-- | The amount of time to wait when receiving a response from the health
--   check, in milliseconds.
virtualGatewayHealthCheckPolicy_timeoutMillis :: Lens' VirtualGatewayHealthCheckPolicy Natural

-- | The number of consecutive failed health checks that must occur before
--   declaring a virtual gateway unhealthy.
virtualGatewayHealthCheckPolicy_unhealthyThreshold :: Lens' VirtualGatewayHealthCheckPolicy Natural

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualGatewayHttp2ConnectionPool</a> smart
--   constructor.
data VirtualGatewayHttp2ConnectionPool
VirtualGatewayHttp2ConnectionPool' :: Natural -> VirtualGatewayHttp2ConnectionPool

-- | Maximum number of inflight requests Envoy can concurrently support
--   across hosts in upstream cluster.
[$sel:maxRequests:VirtualGatewayHttp2ConnectionPool'] :: VirtualGatewayHttp2ConnectionPool -> Natural

-- | Create a value of <a>VirtualGatewayHttp2ConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxRequests:VirtualGatewayHttp2ConnectionPool'</a>,
--   <a>virtualGatewayHttp2ConnectionPool_maxRequests</a> - Maximum number
--   of inflight requests Envoy can concurrently support across hosts in
--   upstream cluster.
newVirtualGatewayHttp2ConnectionPool :: Natural -> VirtualGatewayHttp2ConnectionPool

-- | Maximum number of inflight requests Envoy can concurrently support
--   across hosts in upstream cluster.
virtualGatewayHttp2ConnectionPool_maxRequests :: Lens' VirtualGatewayHttp2ConnectionPool Natural

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualGatewayHttpConnectionPool</a> smart
--   constructor.
data VirtualGatewayHttpConnectionPool
VirtualGatewayHttpConnectionPool' :: Maybe Natural -> Natural -> VirtualGatewayHttpConnectionPool

-- | Number of overflowing requests after <tt>max_connections</tt> Envoy
--   will queue to upstream cluster.
[$sel:maxPendingRequests:VirtualGatewayHttpConnectionPool'] :: VirtualGatewayHttpConnectionPool -> Maybe Natural

-- | Maximum number of outbound TCP connections Envoy can establish
--   concurrently with all hosts in upstream cluster.
[$sel:maxConnections:VirtualGatewayHttpConnectionPool'] :: VirtualGatewayHttpConnectionPool -> Natural

-- | Create a value of <a>VirtualGatewayHttpConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxPendingRequests:VirtualGatewayHttpConnectionPool'</a>,
--   <a>virtualGatewayHttpConnectionPool_maxPendingRequests</a> - Number of
--   overflowing requests after <tt>max_connections</tt> Envoy will queue
--   to upstream cluster.
--   
--   <a>$sel:maxConnections:VirtualGatewayHttpConnectionPool'</a>,
--   <a>virtualGatewayHttpConnectionPool_maxConnections</a> - Maximum
--   number of outbound TCP connections Envoy can establish concurrently
--   with all hosts in upstream cluster.
newVirtualGatewayHttpConnectionPool :: Natural -> VirtualGatewayHttpConnectionPool

-- | Number of overflowing requests after <tt>max_connections</tt> Envoy
--   will queue to upstream cluster.
virtualGatewayHttpConnectionPool_maxPendingRequests :: Lens' VirtualGatewayHttpConnectionPool (Maybe Natural)

-- | Maximum number of outbound TCP connections Envoy can establish
--   concurrently with all hosts in upstream cluster.
virtualGatewayHttpConnectionPool_maxConnections :: Lens' VirtualGatewayHttpConnectionPool Natural

-- | An object that represents a listener for a virtual gateway.
--   
--   <i>See:</i> <a>newVirtualGatewayListener</a> smart constructor.
data VirtualGatewayListener
VirtualGatewayListener' :: Maybe VirtualGatewayHealthCheckPolicy -> Maybe VirtualGatewayConnectionPool -> Maybe VirtualGatewayListenerTls -> VirtualGatewayPortMapping -> VirtualGatewayListener

-- | The health check information for the listener.
[$sel:healthCheck:VirtualGatewayListener'] :: VirtualGatewayListener -> Maybe VirtualGatewayHealthCheckPolicy

-- | The connection pool information for the virtual gateway listener.
[$sel:connectionPool:VirtualGatewayListener'] :: VirtualGatewayListener -> Maybe VirtualGatewayConnectionPool

-- | A reference to an object that represents the Transport Layer Security
--   (TLS) properties for the listener.
[$sel:tls:VirtualGatewayListener'] :: VirtualGatewayListener -> Maybe VirtualGatewayListenerTls

-- | The port mapping information for the listener.
[$sel:portMapping:VirtualGatewayListener'] :: VirtualGatewayListener -> VirtualGatewayPortMapping

-- | Create a value of <a>VirtualGatewayListener</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthCheck:VirtualGatewayListener'</a>,
--   <a>virtualGatewayListener_healthCheck</a> - The health check
--   information for the listener.
--   
--   <a>$sel:connectionPool:VirtualGatewayListener'</a>,
--   <a>virtualGatewayListener_connectionPool</a> - The connection pool
--   information for the virtual gateway listener.
--   
--   <a>$sel:tls:VirtualGatewayListener'</a>,
--   <a>virtualGatewayListener_tls</a> - A reference to an object that
--   represents the Transport Layer Security (TLS) properties for the
--   listener.
--   
--   <a>$sel:portMapping:VirtualGatewayListener'</a>,
--   <a>virtualGatewayListener_portMapping</a> - The port mapping
--   information for the listener.
newVirtualGatewayListener :: VirtualGatewayPortMapping -> VirtualGatewayListener

-- | The health check information for the listener.
virtualGatewayListener_healthCheck :: Lens' VirtualGatewayListener (Maybe VirtualGatewayHealthCheckPolicy)

-- | The connection pool information for the virtual gateway listener.
virtualGatewayListener_connectionPool :: Lens' VirtualGatewayListener (Maybe VirtualGatewayConnectionPool)

-- | A reference to an object that represents the Transport Layer Security
--   (TLS) properties for the listener.
virtualGatewayListener_tls :: Lens' VirtualGatewayListener (Maybe VirtualGatewayListenerTls)

-- | The port mapping information for the listener.
virtualGatewayListener_portMapping :: Lens' VirtualGatewayListener VirtualGatewayPortMapping

-- | An object that represents the Transport Layer Security (TLS)
--   properties for a listener.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTls</a> smart constructor.
data VirtualGatewayListenerTls
VirtualGatewayListenerTls' :: Maybe VirtualGatewayListenerTlsValidationContext -> VirtualGatewayListenerTlsCertificate -> VirtualGatewayListenerTlsMode -> VirtualGatewayListenerTls

-- | A reference to an object that represents a virtual gateway's
--   listener's Transport Layer Security (TLS) validation context.
[$sel:validation:VirtualGatewayListenerTls'] :: VirtualGatewayListenerTls -> Maybe VirtualGatewayListenerTlsValidationContext

-- | An object that represents a Transport Layer Security (TLS)
--   certificate.
[$sel:certificate:VirtualGatewayListenerTls'] :: VirtualGatewayListenerTls -> VirtualGatewayListenerTlsCertificate

-- | Specify one of the following modes.
--   
--   <ul>
--   <li>____STRICT – Listener only accepts connections with TLS
--   enabled.</li>
--   <li>____PERMISSIVE – Listener accepts connections with or without TLS
--   enabled.</li>
--   <li>____DISABLED – Listener only accepts connections without TLS.</li>
--   </ul>
[$sel:mode:VirtualGatewayListenerTls'] :: VirtualGatewayListenerTls -> VirtualGatewayListenerTlsMode

-- | Create a value of <a>VirtualGatewayListenerTls</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validation:VirtualGatewayListenerTls'</a>,
--   <a>virtualGatewayListenerTls_validation</a> - A reference to an object
--   that represents a virtual gateway's listener's Transport Layer
--   Security (TLS) validation context.
--   
--   <a>$sel:certificate:VirtualGatewayListenerTls'</a>,
--   <a>virtualGatewayListenerTls_certificate</a> - An object that
--   represents a Transport Layer Security (TLS) certificate.
--   
--   <a>$sel:mode:VirtualGatewayListenerTls'</a>,
--   <a>virtualGatewayListenerTls_mode</a> - Specify one of the following
--   modes.
--   
--   <ul>
--   <li>____STRICT – Listener only accepts connections with TLS
--   enabled.</li>
--   <li>____PERMISSIVE – Listener accepts connections with or without TLS
--   enabled.</li>
--   <li>____DISABLED – Listener only accepts connections without TLS.</li>
--   </ul>
newVirtualGatewayListenerTls :: VirtualGatewayListenerTlsCertificate -> VirtualGatewayListenerTlsMode -> VirtualGatewayListenerTls

-- | A reference to an object that represents a virtual gateway's
--   listener's Transport Layer Security (TLS) validation context.
virtualGatewayListenerTls_validation :: Lens' VirtualGatewayListenerTls (Maybe VirtualGatewayListenerTlsValidationContext)

-- | An object that represents a Transport Layer Security (TLS)
--   certificate.
virtualGatewayListenerTls_certificate :: Lens' VirtualGatewayListenerTls VirtualGatewayListenerTlsCertificate

-- | Specify one of the following modes.
--   
--   <ul>
--   <li>____STRICT – Listener only accepts connections with TLS
--   enabled.</li>
--   <li>____PERMISSIVE – Listener accepts connections with or without TLS
--   enabled.</li>
--   <li>____DISABLED – Listener only accepts connections without TLS.</li>
--   </ul>
virtualGatewayListenerTls_mode :: Lens' VirtualGatewayListenerTls VirtualGatewayListenerTlsMode

-- | An object that represents an Certificate Manager certificate.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTlsAcmCertificate</a> smart
--   constructor.
data VirtualGatewayListenerTlsAcmCertificate
VirtualGatewayListenerTlsAcmCertificate' :: Text -> VirtualGatewayListenerTlsAcmCertificate

-- | The Amazon Resource Name (ARN) for the certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
[$sel:certificateArn:VirtualGatewayListenerTlsAcmCertificate'] :: VirtualGatewayListenerTlsAcmCertificate -> Text

-- | Create a value of <a>VirtualGatewayListenerTlsAcmCertificate</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateArn:VirtualGatewayListenerTlsAcmCertificate'</a>,
--   <a>virtualGatewayListenerTlsAcmCertificate_certificateArn</a> - The
--   Amazon Resource Name (ARN) for the certificate. The certificate must
--   meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
newVirtualGatewayListenerTlsAcmCertificate :: Text -> VirtualGatewayListenerTlsAcmCertificate

-- | The Amazon Resource Name (ARN) for the certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
virtualGatewayListenerTlsAcmCertificate_certificateArn :: Lens' VirtualGatewayListenerTlsAcmCertificate Text

-- | An object that represents a listener's Transport Layer Security (TLS)
--   certificate.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTlsCertificate</a> smart
--   constructor.
data VirtualGatewayListenerTlsCertificate
VirtualGatewayListenerTlsCertificate' :: Maybe VirtualGatewayListenerTlsAcmCertificate -> Maybe VirtualGatewayListenerTlsSdsCertificate -> Maybe VirtualGatewayListenerTlsFileCertificate -> VirtualGatewayListenerTlsCertificate

-- | A reference to an object that represents an Certificate Manager
--   certificate.
[$sel:acm:VirtualGatewayListenerTlsCertificate'] :: VirtualGatewayListenerTlsCertificate -> Maybe VirtualGatewayListenerTlsAcmCertificate

-- | A reference to an object that represents a virtual gateway's
--   listener's Secret Discovery Service certificate.
[$sel:sds:VirtualGatewayListenerTlsCertificate'] :: VirtualGatewayListenerTlsCertificate -> Maybe VirtualGatewayListenerTlsSdsCertificate

-- | A reference to an object that represents a local file certificate.
[$sel:file:VirtualGatewayListenerTlsCertificate'] :: VirtualGatewayListenerTlsCertificate -> Maybe VirtualGatewayListenerTlsFileCertificate

-- | Create a value of <a>VirtualGatewayListenerTlsCertificate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acm:VirtualGatewayListenerTlsCertificate'</a>,
--   <a>virtualGatewayListenerTlsCertificate_acm</a> - A reference to an
--   object that represents an Certificate Manager certificate.
--   
--   <a>$sel:sds:VirtualGatewayListenerTlsCertificate'</a>,
--   <a>virtualGatewayListenerTlsCertificate_sds</a> - A reference to an
--   object that represents a virtual gateway's listener's Secret Discovery
--   Service certificate.
--   
--   <a>$sel:file:VirtualGatewayListenerTlsCertificate'</a>,
--   <a>virtualGatewayListenerTlsCertificate_file</a> - A reference to an
--   object that represents a local file certificate.
newVirtualGatewayListenerTlsCertificate :: VirtualGatewayListenerTlsCertificate

-- | A reference to an object that represents an Certificate Manager
--   certificate.
virtualGatewayListenerTlsCertificate_acm :: Lens' VirtualGatewayListenerTlsCertificate (Maybe VirtualGatewayListenerTlsAcmCertificate)

-- | A reference to an object that represents a virtual gateway's
--   listener's Secret Discovery Service certificate.
virtualGatewayListenerTlsCertificate_sds :: Lens' VirtualGatewayListenerTlsCertificate (Maybe VirtualGatewayListenerTlsSdsCertificate)

-- | A reference to an object that represents a local file certificate.
virtualGatewayListenerTlsCertificate_file :: Lens' VirtualGatewayListenerTlsCertificate (Maybe VirtualGatewayListenerTlsFileCertificate)

-- | An object that represents a local file certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTlsFileCertificate</a> smart
--   constructor.
data VirtualGatewayListenerTlsFileCertificate
VirtualGatewayListenerTlsFileCertificate' :: Text -> Text -> VirtualGatewayListenerTlsFileCertificate

-- | The certificate chain for the certificate.
[$sel:certificateChain:VirtualGatewayListenerTlsFileCertificate'] :: VirtualGatewayListenerTlsFileCertificate -> Text

-- | The private key for a certificate stored on the file system of the
--   mesh endpoint that the proxy is running on.
[$sel:privateKey:VirtualGatewayListenerTlsFileCertificate'] :: VirtualGatewayListenerTlsFileCertificate -> Text

-- | Create a value of <a>VirtualGatewayListenerTlsFileCertificate</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateChain:VirtualGatewayListenerTlsFileCertificate'</a>,
--   <a>virtualGatewayListenerTlsFileCertificate_certificateChain</a> - The
--   certificate chain for the certificate.
--   
--   <a>$sel:privateKey:VirtualGatewayListenerTlsFileCertificate'</a>,
--   <a>virtualGatewayListenerTlsFileCertificate_privateKey</a> - The
--   private key for a certificate stored on the file system of the mesh
--   endpoint that the proxy is running on.
newVirtualGatewayListenerTlsFileCertificate :: Text -> Text -> VirtualGatewayListenerTlsFileCertificate

-- | The certificate chain for the certificate.
virtualGatewayListenerTlsFileCertificate_certificateChain :: Lens' VirtualGatewayListenerTlsFileCertificate Text

-- | The private key for a certificate stored on the file system of the
--   mesh endpoint that the proxy is running on.
virtualGatewayListenerTlsFileCertificate_privateKey :: Lens' VirtualGatewayListenerTlsFileCertificate Text

-- | An object that represents the virtual gateway's listener's Secret
--   Discovery Service certificate.The proxy must be configured with a
--   local SDS provider via a Unix Domain Socket. See App Mesh<a>TLS
--   documentation</a> for more info.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTlsSdsCertificate</a> smart
--   constructor.
data VirtualGatewayListenerTlsSdsCertificate
VirtualGatewayListenerTlsSdsCertificate' :: Text -> VirtualGatewayListenerTlsSdsCertificate

-- | A reference to an object that represents the name of the secret secret
--   requested from the Secret Discovery Service provider representing
--   Transport Layer Security (TLS) materials like a certificate or
--   certificate chain.
[$sel:secretName:VirtualGatewayListenerTlsSdsCertificate'] :: VirtualGatewayListenerTlsSdsCertificate -> Text

-- | Create a value of <a>VirtualGatewayListenerTlsSdsCertificate</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretName:VirtualGatewayListenerTlsSdsCertificate'</a>,
--   <a>virtualGatewayListenerTlsSdsCertificate_secretName</a> - A
--   reference to an object that represents the name of the secret secret
--   requested from the Secret Discovery Service provider representing
--   Transport Layer Security (TLS) materials like a certificate or
--   certificate chain.
newVirtualGatewayListenerTlsSdsCertificate :: Text -> VirtualGatewayListenerTlsSdsCertificate

-- | A reference to an object that represents the name of the secret secret
--   requested from the Secret Discovery Service provider representing
--   Transport Layer Security (TLS) materials like a certificate or
--   certificate chain.
virtualGatewayListenerTlsSdsCertificate_secretName :: Lens' VirtualGatewayListenerTlsSdsCertificate Text

-- | An object that represents a virtual gateway's listener's Transport
--   Layer Security (TLS) validation context.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTlsValidationContext</a> smart
--   constructor.
data VirtualGatewayListenerTlsValidationContext
VirtualGatewayListenerTlsValidationContext' :: Maybe SubjectAlternativeNames -> VirtualGatewayListenerTlsValidationContextTrust -> VirtualGatewayListenerTlsValidationContext

-- | A reference to an object that represents the SANs for a virtual
--   gateway listener's Transport Layer Security (TLS) validation context.
[$sel:subjectAlternativeNames:VirtualGatewayListenerTlsValidationContext'] :: VirtualGatewayListenerTlsValidationContext -> Maybe SubjectAlternativeNames

-- | A reference to where to retrieve the trust chain when validating a
--   peer’s Transport Layer Security (TLS) certificate.
[$sel:trust:VirtualGatewayListenerTlsValidationContext'] :: VirtualGatewayListenerTlsValidationContext -> VirtualGatewayListenerTlsValidationContextTrust

-- | Create a value of <a>VirtualGatewayListenerTlsValidationContext</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:subjectAlternativeNames:VirtualGatewayListenerTlsValidationContext'</a>,
--   <a>virtualGatewayListenerTlsValidationContext_subjectAlternativeNames</a>
--   - A reference to an object that represents the SANs for a virtual
--   gateway listener's Transport Layer Security (TLS) validation context.
--   
--   <a>$sel:trust:VirtualGatewayListenerTlsValidationContext'</a>,
--   <a>virtualGatewayListenerTlsValidationContext_trust</a> - A reference
--   to where to retrieve the trust chain when validating a peer’s
--   Transport Layer Security (TLS) certificate.
newVirtualGatewayListenerTlsValidationContext :: VirtualGatewayListenerTlsValidationContextTrust -> VirtualGatewayListenerTlsValidationContext

-- | A reference to an object that represents the SANs for a virtual
--   gateway listener's Transport Layer Security (TLS) validation context.
virtualGatewayListenerTlsValidationContext_subjectAlternativeNames :: Lens' VirtualGatewayListenerTlsValidationContext (Maybe SubjectAlternativeNames)

-- | A reference to where to retrieve the trust chain when validating a
--   peer’s Transport Layer Security (TLS) certificate.
virtualGatewayListenerTlsValidationContext_trust :: Lens' VirtualGatewayListenerTlsValidationContext VirtualGatewayListenerTlsValidationContextTrust

-- | An object that represents a virtual gateway's listener's Transport
--   Layer Security (TLS) validation context trust.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTlsValidationContextTrust</a>
--   smart constructor.
data VirtualGatewayListenerTlsValidationContextTrust
VirtualGatewayListenerTlsValidationContextTrust' :: Maybe VirtualGatewayTlsValidationContextSdsTrust -> Maybe VirtualGatewayTlsValidationContextFileTrust -> VirtualGatewayListenerTlsValidationContextTrust

-- | A reference to an object that represents a virtual gateway's
--   listener's Transport Layer Security (TLS) Secret Discovery Service
--   validation context trust.
[$sel:sds:VirtualGatewayListenerTlsValidationContextTrust'] :: VirtualGatewayListenerTlsValidationContextTrust -> Maybe VirtualGatewayTlsValidationContextSdsTrust

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
[$sel:file:VirtualGatewayListenerTlsValidationContextTrust'] :: VirtualGatewayListenerTlsValidationContextTrust -> Maybe VirtualGatewayTlsValidationContextFileTrust

-- | Create a value of
--   <a>VirtualGatewayListenerTlsValidationContextTrust</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sds:VirtualGatewayListenerTlsValidationContextTrust'</a>,
--   <a>virtualGatewayListenerTlsValidationContextTrust_sds</a> - A
--   reference to an object that represents a virtual gateway's listener's
--   Transport Layer Security (TLS) Secret Discovery Service validation
--   context trust.
--   
--   <a>$sel:file:VirtualGatewayListenerTlsValidationContextTrust'</a>,
--   <a>virtualGatewayListenerTlsValidationContextTrust_file</a> - An
--   object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
newVirtualGatewayListenerTlsValidationContextTrust :: VirtualGatewayListenerTlsValidationContextTrust

-- | A reference to an object that represents a virtual gateway's
--   listener's Transport Layer Security (TLS) Secret Discovery Service
--   validation context trust.
virtualGatewayListenerTlsValidationContextTrust_sds :: Lens' VirtualGatewayListenerTlsValidationContextTrust (Maybe VirtualGatewayTlsValidationContextSdsTrust)

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
virtualGatewayListenerTlsValidationContextTrust_file :: Lens' VirtualGatewayListenerTlsValidationContextTrust (Maybe VirtualGatewayTlsValidationContextFileTrust)

-- | An object that represents logging information.
--   
--   <i>See:</i> <a>newVirtualGatewayLogging</a> smart constructor.
data VirtualGatewayLogging
VirtualGatewayLogging' :: Maybe VirtualGatewayAccessLog -> VirtualGatewayLogging

-- | The access log configuration.
[$sel:accessLog:VirtualGatewayLogging'] :: VirtualGatewayLogging -> Maybe VirtualGatewayAccessLog

-- | Create a value of <a>VirtualGatewayLogging</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessLog:VirtualGatewayLogging'</a>,
--   <a>virtualGatewayLogging_accessLog</a> - The access log configuration.
newVirtualGatewayLogging :: VirtualGatewayLogging

-- | The access log configuration.
virtualGatewayLogging_accessLog :: Lens' VirtualGatewayLogging (Maybe VirtualGatewayAccessLog)

-- | An object that represents a port mapping.
--   
--   <i>See:</i> <a>newVirtualGatewayPortMapping</a> smart constructor.
data VirtualGatewayPortMapping
VirtualGatewayPortMapping' :: Natural -> VirtualGatewayPortProtocol -> VirtualGatewayPortMapping

-- | The port used for the port mapping. Specify one protocol.
[$sel:port:VirtualGatewayPortMapping'] :: VirtualGatewayPortMapping -> Natural

-- | The protocol used for the port mapping.
[$sel:protocol:VirtualGatewayPortMapping'] :: VirtualGatewayPortMapping -> VirtualGatewayPortProtocol

-- | Create a value of <a>VirtualGatewayPortMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:port:VirtualGatewayPortMapping'</a>,
--   <a>virtualGatewayPortMapping_port</a> - The port used for the port
--   mapping. Specify one protocol.
--   
--   <a>$sel:protocol:VirtualGatewayPortMapping'</a>,
--   <a>virtualGatewayPortMapping_protocol</a> - The protocol used for the
--   port mapping.
newVirtualGatewayPortMapping :: Natural -> VirtualGatewayPortProtocol -> VirtualGatewayPortMapping

-- | The port used for the port mapping. Specify one protocol.
virtualGatewayPortMapping_port :: Lens' VirtualGatewayPortMapping Natural

-- | The protocol used for the port mapping.
virtualGatewayPortMapping_protocol :: Lens' VirtualGatewayPortMapping VirtualGatewayPortProtocol

-- | An object that represents a virtual gateway returned by a list
--   operation.
--   
--   <i>See:</i> <a>newVirtualGatewayRef</a> smart constructor.
data VirtualGatewayRef
VirtualGatewayRef' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Integer -> Text -> VirtualGatewayRef

-- | The full Amazon Resource Name (ARN) for the resource.
[$sel:arn:VirtualGatewayRef'] :: VirtualGatewayRef -> Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:VirtualGatewayRef'] :: VirtualGatewayRef -> POSIX

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
[$sel:lastUpdatedAt:VirtualGatewayRef'] :: VirtualGatewayRef -> POSIX

-- | The name of the service mesh that the resource resides in.
[$sel:meshName:VirtualGatewayRef'] :: VirtualGatewayRef -> Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:VirtualGatewayRef'] :: VirtualGatewayRef -> Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
[$sel:resourceOwner:VirtualGatewayRef'] :: VirtualGatewayRef -> Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
[$sel:version:VirtualGatewayRef'] :: VirtualGatewayRef -> Integer

-- | The name of the resource.
[$sel:virtualGatewayName:VirtualGatewayRef'] :: VirtualGatewayRef -> Text

-- | Create a value of <a>VirtualGatewayRef</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:VirtualGatewayRef'</a>, <a>virtualGatewayRef_arn</a> - The
--   full Amazon Resource Name (ARN) for the resource.
--   
--   <a>$sel:createdAt:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:lastUpdatedAt:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_lastUpdatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was last updated.
--   
--   <a>$sel:meshName:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_meshName</a> - The name of the service mesh that
--   the resource resides in.
--   
--   <a>$sel:meshOwner:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_resourceOwner</a> - The AWS IAM account ID of the
--   resource owner. If the account ID is not your own, then it's the ID of
--   the mesh owner or of another account that the mesh is shared with. For
--   more information about mesh sharing, see <a>Working with shared
--   meshes</a>.
--   
--   <a>$sel:version:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_version</a> - The version of the resource.
--   Resources are created at version 1, and this version is incremented
--   each time that they're updated.
--   
--   <a>$sel:virtualGatewayName:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_virtualGatewayName</a> - The name of the
--   resource.
newVirtualGatewayRef :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Integer -> Text -> VirtualGatewayRef

-- | The full Amazon Resource Name (ARN) for the resource.
virtualGatewayRef_arn :: Lens' VirtualGatewayRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
virtualGatewayRef_createdAt :: Lens' VirtualGatewayRef UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
virtualGatewayRef_lastUpdatedAt :: Lens' VirtualGatewayRef UTCTime

-- | The name of the service mesh that the resource resides in.
virtualGatewayRef_meshName :: Lens' VirtualGatewayRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
virtualGatewayRef_meshOwner :: Lens' VirtualGatewayRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
virtualGatewayRef_resourceOwner :: Lens' VirtualGatewayRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
virtualGatewayRef_version :: Lens' VirtualGatewayRef Integer

-- | The name of the resource.
virtualGatewayRef_virtualGatewayName :: Lens' VirtualGatewayRef Text

-- | An object that represents the specification of a service mesh
--   resource.
--   
--   <i>See:</i> <a>newVirtualGatewaySpec</a> smart constructor.
data VirtualGatewaySpec
VirtualGatewaySpec' :: Maybe VirtualGatewayBackendDefaults -> Maybe VirtualGatewayLogging -> [VirtualGatewayListener] -> VirtualGatewaySpec

-- | A reference to an object that represents the defaults for backends.
[$sel:backendDefaults:VirtualGatewaySpec'] :: VirtualGatewaySpec -> Maybe VirtualGatewayBackendDefaults
[$sel:logging:VirtualGatewaySpec'] :: VirtualGatewaySpec -> Maybe VirtualGatewayLogging

-- | The listeners that the mesh endpoint is expected to receive inbound
--   traffic from. You can specify one listener.
[$sel:listeners:VirtualGatewaySpec'] :: VirtualGatewaySpec -> [VirtualGatewayListener]

-- | Create a value of <a>VirtualGatewaySpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backendDefaults:VirtualGatewaySpec'</a>,
--   <a>virtualGatewaySpec_backendDefaults</a> - A reference to an object
--   that represents the defaults for backends.
--   
--   <a>$sel:logging:VirtualGatewaySpec'</a>,
--   <a>virtualGatewaySpec_logging</a> - Undocumented member.
--   
--   <a>$sel:listeners:VirtualGatewaySpec'</a>,
--   <a>virtualGatewaySpec_listeners</a> - The listeners that the mesh
--   endpoint is expected to receive inbound traffic from. You can specify
--   one listener.
newVirtualGatewaySpec :: VirtualGatewaySpec

-- | A reference to an object that represents the defaults for backends.
virtualGatewaySpec_backendDefaults :: Lens' VirtualGatewaySpec (Maybe VirtualGatewayBackendDefaults)

-- | Undocumented member.
virtualGatewaySpec_logging :: Lens' VirtualGatewaySpec (Maybe VirtualGatewayLogging)

-- | The listeners that the mesh endpoint is expected to receive inbound
--   traffic from. You can specify one listener.
virtualGatewaySpec_listeners :: Lens' VirtualGatewaySpec [VirtualGatewayListener]

-- | An object that represents the status of the mesh resource.
--   
--   <i>See:</i> <a>newVirtualGatewayStatus</a> smart constructor.
data VirtualGatewayStatus
VirtualGatewayStatus' :: VirtualGatewayStatusCode -> VirtualGatewayStatus

-- | The current status.
[$sel:status:VirtualGatewayStatus'] :: VirtualGatewayStatus -> VirtualGatewayStatusCode

-- | Create a value of <a>VirtualGatewayStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VirtualGatewayStatus'</a>,
--   <a>virtualGatewayStatus_status</a> - The current status.
newVirtualGatewayStatus :: VirtualGatewayStatusCode -> VirtualGatewayStatus

-- | The current status.
virtualGatewayStatus_status :: Lens' VirtualGatewayStatus VirtualGatewayStatusCode

-- | An object that represents a Transport Layer Security (TLS) validation
--   context.
--   
--   <i>See:</i> <a>newVirtualGatewayTlsValidationContext</a> smart
--   constructor.
data VirtualGatewayTlsValidationContext
VirtualGatewayTlsValidationContext' :: Maybe SubjectAlternativeNames -> VirtualGatewayTlsValidationContextTrust -> VirtualGatewayTlsValidationContext

-- | A reference to an object that represents the SANs for a virtual
--   gateway's listener's Transport Layer Security (TLS) validation
--   context.
[$sel:subjectAlternativeNames:VirtualGatewayTlsValidationContext'] :: VirtualGatewayTlsValidationContext -> Maybe SubjectAlternativeNames

-- | A reference to where to retrieve the trust chain when validating a
--   peer’s Transport Layer Security (TLS) certificate.
[$sel:trust:VirtualGatewayTlsValidationContext'] :: VirtualGatewayTlsValidationContext -> VirtualGatewayTlsValidationContextTrust

-- | Create a value of <a>VirtualGatewayTlsValidationContext</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:subjectAlternativeNames:VirtualGatewayTlsValidationContext'</a>,
--   <a>virtualGatewayTlsValidationContext_subjectAlternativeNames</a> - A
--   reference to an object that represents the SANs for a virtual
--   gateway's listener's Transport Layer Security (TLS) validation
--   context.
--   
--   <a>$sel:trust:VirtualGatewayTlsValidationContext'</a>,
--   <a>virtualGatewayTlsValidationContext_trust</a> - A reference to where
--   to retrieve the trust chain when validating a peer’s Transport Layer
--   Security (TLS) certificate.
newVirtualGatewayTlsValidationContext :: VirtualGatewayTlsValidationContextTrust -> VirtualGatewayTlsValidationContext

-- | A reference to an object that represents the SANs for a virtual
--   gateway's listener's Transport Layer Security (TLS) validation
--   context.
virtualGatewayTlsValidationContext_subjectAlternativeNames :: Lens' VirtualGatewayTlsValidationContext (Maybe SubjectAlternativeNames)

-- | A reference to where to retrieve the trust chain when validating a
--   peer’s Transport Layer Security (TLS) certificate.
virtualGatewayTlsValidationContext_trust :: Lens' VirtualGatewayTlsValidationContext VirtualGatewayTlsValidationContextTrust

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for an Certificate Manager certificate.
--   
--   <i>See:</i> <a>newVirtualGatewayTlsValidationContextAcmTrust</a> smart
--   constructor.
data VirtualGatewayTlsValidationContextAcmTrust
VirtualGatewayTlsValidationContextAcmTrust' :: NonEmpty Text -> VirtualGatewayTlsValidationContextAcmTrust

-- | One or more ACM Amazon Resource Name (ARN)s.
[$sel:certificateAuthorityArns:VirtualGatewayTlsValidationContextAcmTrust'] :: VirtualGatewayTlsValidationContextAcmTrust -> NonEmpty Text

-- | Create a value of <a>VirtualGatewayTlsValidationContextAcmTrust</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateAuthorityArns:VirtualGatewayTlsValidationContextAcmTrust'</a>,
--   <a>virtualGatewayTlsValidationContextAcmTrust_certificateAuthorityArns</a>
--   - One or more ACM Amazon Resource Name (ARN)s.
newVirtualGatewayTlsValidationContextAcmTrust :: NonEmpty Text -> VirtualGatewayTlsValidationContextAcmTrust

-- | One or more ACM Amazon Resource Name (ARN)s.
virtualGatewayTlsValidationContextAcmTrust_certificateAuthorityArns :: Lens' VirtualGatewayTlsValidationContextAcmTrust (NonEmpty Text)

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
--   
--   <i>See:</i> <a>newVirtualGatewayTlsValidationContextFileTrust</a>
--   smart constructor.
data VirtualGatewayTlsValidationContextFileTrust
VirtualGatewayTlsValidationContextFileTrust' :: Text -> VirtualGatewayTlsValidationContextFileTrust

-- | The certificate trust chain for a certificate stored on the file
--   system of the virtual node that the proxy is running on.
[$sel:certificateChain:VirtualGatewayTlsValidationContextFileTrust'] :: VirtualGatewayTlsValidationContextFileTrust -> Text

-- | Create a value of <a>VirtualGatewayTlsValidationContextFileTrust</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateChain:VirtualGatewayTlsValidationContextFileTrust'</a>,
--   <a>virtualGatewayTlsValidationContextFileTrust_certificateChain</a> -
--   The certificate trust chain for a certificate stored on the file
--   system of the virtual node that the proxy is running on.
newVirtualGatewayTlsValidationContextFileTrust :: Text -> VirtualGatewayTlsValidationContextFileTrust

-- | The certificate trust chain for a certificate stored on the file
--   system of the virtual node that the proxy is running on.
virtualGatewayTlsValidationContextFileTrust_certificateChain :: Lens' VirtualGatewayTlsValidationContextFileTrust Text

-- | An object that represents a virtual gateway's listener's Transport
--   Layer Security (TLS) Secret Discovery Service validation context
--   trust. The proxy must be configured with a local SDS provider via a
--   Unix Domain Socket. See App Mesh <a>TLS documentation</a> for more
--   info.
--   
--   <i>See:</i> <a>newVirtualGatewayTlsValidationContextSdsTrust</a> smart
--   constructor.
data VirtualGatewayTlsValidationContextSdsTrust
VirtualGatewayTlsValidationContextSdsTrust' :: Text -> VirtualGatewayTlsValidationContextSdsTrust

-- | A reference to an object that represents the name of the secret for a
--   virtual gateway's Transport Layer Security (TLS) Secret Discovery
--   Service validation context trust.
[$sel:secretName:VirtualGatewayTlsValidationContextSdsTrust'] :: VirtualGatewayTlsValidationContextSdsTrust -> Text

-- | Create a value of <a>VirtualGatewayTlsValidationContextSdsTrust</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretName:VirtualGatewayTlsValidationContextSdsTrust'</a>,
--   <a>virtualGatewayTlsValidationContextSdsTrust_secretName</a> - A
--   reference to an object that represents the name of the secret for a
--   virtual gateway's Transport Layer Security (TLS) Secret Discovery
--   Service validation context trust.
newVirtualGatewayTlsValidationContextSdsTrust :: Text -> VirtualGatewayTlsValidationContextSdsTrust

-- | A reference to an object that represents the name of the secret for a
--   virtual gateway's Transport Layer Security (TLS) Secret Discovery
--   Service validation context trust.
virtualGatewayTlsValidationContextSdsTrust_secretName :: Lens' VirtualGatewayTlsValidationContextSdsTrust Text

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust.
--   
--   <i>See:</i> <a>newVirtualGatewayTlsValidationContextTrust</a> smart
--   constructor.
data VirtualGatewayTlsValidationContextTrust
VirtualGatewayTlsValidationContextTrust' :: Maybe VirtualGatewayTlsValidationContextAcmTrust -> Maybe VirtualGatewayTlsValidationContextSdsTrust -> Maybe VirtualGatewayTlsValidationContextFileTrust -> VirtualGatewayTlsValidationContextTrust

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) validation context trust for an Certificate Manager certificate.
[$sel:acm:VirtualGatewayTlsValidationContextTrust'] :: VirtualGatewayTlsValidationContextTrust -> Maybe VirtualGatewayTlsValidationContextAcmTrust

-- | A reference to an object that represents a virtual gateway's Transport
--   Layer Security (TLS) Secret Discovery Service validation context
--   trust.
[$sel:sds:VirtualGatewayTlsValidationContextTrust'] :: VirtualGatewayTlsValidationContextTrust -> Maybe VirtualGatewayTlsValidationContextSdsTrust

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
[$sel:file:VirtualGatewayTlsValidationContextTrust'] :: VirtualGatewayTlsValidationContextTrust -> Maybe VirtualGatewayTlsValidationContextFileTrust

-- | Create a value of <a>VirtualGatewayTlsValidationContextTrust</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acm:VirtualGatewayTlsValidationContextTrust'</a>,
--   <a>virtualGatewayTlsValidationContextTrust_acm</a> - A reference to an
--   object that represents a Transport Layer Security (TLS) validation
--   context trust for an Certificate Manager certificate.
--   
--   <a>$sel:sds:VirtualGatewayTlsValidationContextTrust'</a>,
--   <a>virtualGatewayTlsValidationContextTrust_sds</a> - A reference to an
--   object that represents a virtual gateway's Transport Layer Security
--   (TLS) Secret Discovery Service validation context trust.
--   
--   <a>$sel:file:VirtualGatewayTlsValidationContextTrust'</a>,
--   <a>virtualGatewayTlsValidationContextTrust_file</a> - An object that
--   represents a Transport Layer Security (TLS) validation context trust
--   for a local file.
newVirtualGatewayTlsValidationContextTrust :: VirtualGatewayTlsValidationContextTrust

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) validation context trust for an Certificate Manager certificate.
virtualGatewayTlsValidationContextTrust_acm :: Lens' VirtualGatewayTlsValidationContextTrust (Maybe VirtualGatewayTlsValidationContextAcmTrust)

-- | A reference to an object that represents a virtual gateway's Transport
--   Layer Security (TLS) Secret Discovery Service validation context
--   trust.
virtualGatewayTlsValidationContextTrust_sds :: Lens' VirtualGatewayTlsValidationContextTrust (Maybe VirtualGatewayTlsValidationContextSdsTrust)

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
virtualGatewayTlsValidationContextTrust_file :: Lens' VirtualGatewayTlsValidationContextTrust (Maybe VirtualGatewayTlsValidationContextFileTrust)

-- | An object that represents the type of virtual node connection pool.
--   
--   Only one protocol is used at a time and should be the same protocol as
--   the one chosen under port mapping.
--   
--   If not present the default value for <tt>maxPendingRequests</tt> is
--   <tt>2147483647</tt>.
--   
--   <i>See:</i> <a>newVirtualNodeConnectionPool</a> smart constructor.
data VirtualNodeConnectionPool
VirtualNodeConnectionPool' :: Maybe VirtualNodeHttp2ConnectionPool -> Maybe VirtualNodeGrpcConnectionPool -> Maybe VirtualNodeTcpConnectionPool -> Maybe VirtualNodeHttpConnectionPool -> VirtualNodeConnectionPool

-- | An object that represents a type of connection pool.
[$sel:http2:VirtualNodeConnectionPool'] :: VirtualNodeConnectionPool -> Maybe VirtualNodeHttp2ConnectionPool

-- | An object that represents a type of connection pool.
[$sel:grpc:VirtualNodeConnectionPool'] :: VirtualNodeConnectionPool -> Maybe VirtualNodeGrpcConnectionPool

-- | An object that represents a type of connection pool.
[$sel:tcp:VirtualNodeConnectionPool'] :: VirtualNodeConnectionPool -> Maybe VirtualNodeTcpConnectionPool

-- | An object that represents a type of connection pool.
[$sel:http:VirtualNodeConnectionPool'] :: VirtualNodeConnectionPool -> Maybe VirtualNodeHttpConnectionPool

-- | Create a value of <a>VirtualNodeConnectionPool</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:http2:VirtualNodeConnectionPool'</a>,
--   <a>virtualNodeConnectionPool_http2</a> - An object that represents a
--   type of connection pool.
--   
--   <a>$sel:grpc:VirtualNodeConnectionPool'</a>,
--   <a>virtualNodeConnectionPool_grpc</a> - An object that represents a
--   type of connection pool.
--   
--   <a>$sel:tcp:VirtualNodeConnectionPool'</a>,
--   <a>virtualNodeConnectionPool_tcp</a> - An object that represents a
--   type of connection pool.
--   
--   <a>$sel:http:VirtualNodeConnectionPool'</a>,
--   <a>virtualNodeConnectionPool_http</a> - An object that represents a
--   type of connection pool.
newVirtualNodeConnectionPool :: VirtualNodeConnectionPool

-- | An object that represents a type of connection pool.
virtualNodeConnectionPool_http2 :: Lens' VirtualNodeConnectionPool (Maybe VirtualNodeHttp2ConnectionPool)

-- | An object that represents a type of connection pool.
virtualNodeConnectionPool_grpc :: Lens' VirtualNodeConnectionPool (Maybe VirtualNodeGrpcConnectionPool)

-- | An object that represents a type of connection pool.
virtualNodeConnectionPool_tcp :: Lens' VirtualNodeConnectionPool (Maybe VirtualNodeTcpConnectionPool)

-- | An object that represents a type of connection pool.
virtualNodeConnectionPool_http :: Lens' VirtualNodeConnectionPool (Maybe VirtualNodeHttpConnectionPool)

-- | An object that represents a virtual node returned by a describe
--   operation.
--   
--   <i>See:</i> <a>newVirtualNodeData</a> smart constructor.
data VirtualNodeData
VirtualNodeData' :: Text -> ResourceMetadata -> VirtualNodeSpec -> VirtualNodeStatus -> Text -> VirtualNodeData

-- | The name of the service mesh that the virtual node resides in.
[$sel:meshName:VirtualNodeData'] :: VirtualNodeData -> Text

-- | The associated metadata for the virtual node.
[$sel:metadata:VirtualNodeData'] :: VirtualNodeData -> ResourceMetadata

-- | The specifications of the virtual node.
[$sel:spec:VirtualNodeData'] :: VirtualNodeData -> VirtualNodeSpec

-- | The current status for the virtual node.
[$sel:status:VirtualNodeData'] :: VirtualNodeData -> VirtualNodeStatus

-- | The name of the virtual node.
[$sel:virtualNodeName:VirtualNodeData'] :: VirtualNodeData -> Text

-- | Create a value of <a>VirtualNodeData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshName:VirtualNodeData'</a>, <a>virtualNodeData_meshName</a>
--   - The name of the service mesh that the virtual node resides in.
--   
--   <a>$sel:metadata:VirtualNodeData'</a>, <a>virtualNodeData_metadata</a>
--   - The associated metadata for the virtual node.
--   
--   <a>$sel:spec:VirtualNodeData'</a>, <a>virtualNodeData_spec</a> - The
--   specifications of the virtual node.
--   
--   <a>$sel:status:VirtualNodeData'</a>, <a>virtualNodeData_status</a> -
--   The current status for the virtual node.
--   
--   <a>$sel:virtualNodeName:VirtualNodeData'</a>,
--   <a>virtualNodeData_virtualNodeName</a> - The name of the virtual node.
newVirtualNodeData :: Text -> ResourceMetadata -> VirtualNodeSpec -> VirtualNodeStatus -> Text -> VirtualNodeData

-- | The name of the service mesh that the virtual node resides in.
virtualNodeData_meshName :: Lens' VirtualNodeData Text

-- | The associated metadata for the virtual node.
virtualNodeData_metadata :: Lens' VirtualNodeData ResourceMetadata

-- | The specifications of the virtual node.
virtualNodeData_spec :: Lens' VirtualNodeData VirtualNodeSpec

-- | The current status for the virtual node.
virtualNodeData_status :: Lens' VirtualNodeData VirtualNodeStatus

-- | The name of the virtual node.
virtualNodeData_virtualNodeName :: Lens' VirtualNodeData Text

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualNodeGrpcConnectionPool</a> smart constructor.
data VirtualNodeGrpcConnectionPool
VirtualNodeGrpcConnectionPool' :: Natural -> VirtualNodeGrpcConnectionPool

-- | Maximum number of inflight requests Envoy can concurrently support
--   across hosts in upstream cluster.
[$sel:maxRequests:VirtualNodeGrpcConnectionPool'] :: VirtualNodeGrpcConnectionPool -> Natural

-- | Create a value of <a>VirtualNodeGrpcConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxRequests:VirtualNodeGrpcConnectionPool'</a>,
--   <a>virtualNodeGrpcConnectionPool_maxRequests</a> - Maximum number of
--   inflight requests Envoy can concurrently support across hosts in
--   upstream cluster.
newVirtualNodeGrpcConnectionPool :: Natural -> VirtualNodeGrpcConnectionPool

-- | Maximum number of inflight requests Envoy can concurrently support
--   across hosts in upstream cluster.
virtualNodeGrpcConnectionPool_maxRequests :: Lens' VirtualNodeGrpcConnectionPool Natural

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualNodeHttp2ConnectionPool</a> smart
--   constructor.
data VirtualNodeHttp2ConnectionPool
VirtualNodeHttp2ConnectionPool' :: Natural -> VirtualNodeHttp2ConnectionPool

-- | Maximum number of inflight requests Envoy can concurrently support
--   across hosts in upstream cluster.
[$sel:maxRequests:VirtualNodeHttp2ConnectionPool'] :: VirtualNodeHttp2ConnectionPool -> Natural

-- | Create a value of <a>VirtualNodeHttp2ConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxRequests:VirtualNodeHttp2ConnectionPool'</a>,
--   <a>virtualNodeHttp2ConnectionPool_maxRequests</a> - Maximum number of
--   inflight requests Envoy can concurrently support across hosts in
--   upstream cluster.
newVirtualNodeHttp2ConnectionPool :: Natural -> VirtualNodeHttp2ConnectionPool

-- | Maximum number of inflight requests Envoy can concurrently support
--   across hosts in upstream cluster.
virtualNodeHttp2ConnectionPool_maxRequests :: Lens' VirtualNodeHttp2ConnectionPool Natural

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualNodeHttpConnectionPool</a> smart constructor.
data VirtualNodeHttpConnectionPool
VirtualNodeHttpConnectionPool' :: Maybe Natural -> Natural -> VirtualNodeHttpConnectionPool

-- | Number of overflowing requests after <tt>max_connections</tt> Envoy
--   will queue to upstream cluster.
[$sel:maxPendingRequests:VirtualNodeHttpConnectionPool'] :: VirtualNodeHttpConnectionPool -> Maybe Natural

-- | Maximum number of outbound TCP connections Envoy can establish
--   concurrently with all hosts in upstream cluster.
[$sel:maxConnections:VirtualNodeHttpConnectionPool'] :: VirtualNodeHttpConnectionPool -> Natural

-- | Create a value of <a>VirtualNodeHttpConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxPendingRequests:VirtualNodeHttpConnectionPool'</a>,
--   <a>virtualNodeHttpConnectionPool_maxPendingRequests</a> - Number of
--   overflowing requests after <tt>max_connections</tt> Envoy will queue
--   to upstream cluster.
--   
--   <a>$sel:maxConnections:VirtualNodeHttpConnectionPool'</a>,
--   <a>virtualNodeHttpConnectionPool_maxConnections</a> - Maximum number
--   of outbound TCP connections Envoy can establish concurrently with all
--   hosts in upstream cluster.
newVirtualNodeHttpConnectionPool :: Natural -> VirtualNodeHttpConnectionPool

-- | Number of overflowing requests after <tt>max_connections</tt> Envoy
--   will queue to upstream cluster.
virtualNodeHttpConnectionPool_maxPendingRequests :: Lens' VirtualNodeHttpConnectionPool (Maybe Natural)

-- | Maximum number of outbound TCP connections Envoy can establish
--   concurrently with all hosts in upstream cluster.
virtualNodeHttpConnectionPool_maxConnections :: Lens' VirtualNodeHttpConnectionPool Natural

-- | An object that represents a virtual node returned by a list operation.
--   
--   <i>See:</i> <a>newVirtualNodeRef</a> smart constructor.
data VirtualNodeRef
VirtualNodeRef' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Integer -> Text -> VirtualNodeRef

-- | The full Amazon Resource Name (ARN) for the virtual node.
[$sel:arn:VirtualNodeRef'] :: VirtualNodeRef -> Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:VirtualNodeRef'] :: VirtualNodeRef -> POSIX

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
[$sel:lastUpdatedAt:VirtualNodeRef'] :: VirtualNodeRef -> POSIX

-- | The name of the service mesh that the virtual node resides in.
[$sel:meshName:VirtualNodeRef'] :: VirtualNodeRef -> Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:VirtualNodeRef'] :: VirtualNodeRef -> Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
[$sel:resourceOwner:VirtualNodeRef'] :: VirtualNodeRef -> Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
[$sel:version:VirtualNodeRef'] :: VirtualNodeRef -> Integer

-- | The name of the virtual node.
[$sel:virtualNodeName:VirtualNodeRef'] :: VirtualNodeRef -> Text

-- | Create a value of <a>VirtualNodeRef</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:VirtualNodeRef'</a>, <a>virtualNodeRef_arn</a> - The full
--   Amazon Resource Name (ARN) for the virtual node.
--   
--   <a>$sel:createdAt:VirtualNodeRef'</a>, <a>virtualNodeRef_createdAt</a>
--   - The Unix epoch timestamp in seconds for when the resource was
--   created.
--   
--   <a>$sel:lastUpdatedAt:VirtualNodeRef'</a>,
--   <a>virtualNodeRef_lastUpdatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was last updated.
--   
--   <a>$sel:meshName:VirtualNodeRef'</a>, <a>virtualNodeRef_meshName</a> -
--   The name of the service mesh that the virtual node resides in.
--   
--   <a>$sel:meshOwner:VirtualNodeRef'</a>, <a>virtualNodeRef_meshOwner</a>
--   - The AWS IAM account ID of the service mesh owner. If the account ID
--   is not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:VirtualNodeRef'</a>,
--   <a>virtualNodeRef_resourceOwner</a> - The AWS IAM account ID of the
--   resource owner. If the account ID is not your own, then it's the ID of
--   the mesh owner or of another account that the mesh is shared with. For
--   more information about mesh sharing, see <a>Working with shared
--   meshes</a>.
--   
--   <a>$sel:version:VirtualNodeRef'</a>, <a>virtualNodeRef_version</a> -
--   The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
--   
--   <a>$sel:virtualNodeName:VirtualNodeRef'</a>,
--   <a>virtualNodeRef_virtualNodeName</a> - The name of the virtual node.
newVirtualNodeRef :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Integer -> Text -> VirtualNodeRef

-- | The full Amazon Resource Name (ARN) for the virtual node.
virtualNodeRef_arn :: Lens' VirtualNodeRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
virtualNodeRef_createdAt :: Lens' VirtualNodeRef UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
virtualNodeRef_lastUpdatedAt :: Lens' VirtualNodeRef UTCTime

-- | The name of the service mesh that the virtual node resides in.
virtualNodeRef_meshName :: Lens' VirtualNodeRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
virtualNodeRef_meshOwner :: Lens' VirtualNodeRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
virtualNodeRef_resourceOwner :: Lens' VirtualNodeRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
virtualNodeRef_version :: Lens' VirtualNodeRef Integer

-- | The name of the virtual node.
virtualNodeRef_virtualNodeName :: Lens' VirtualNodeRef Text

-- | An object that represents a virtual node service provider.
--   
--   <i>See:</i> <a>newVirtualNodeServiceProvider</a> smart constructor.
data VirtualNodeServiceProvider
VirtualNodeServiceProvider' :: Text -> VirtualNodeServiceProvider

-- | The name of the virtual node that is acting as a service provider.
[$sel:virtualNodeName:VirtualNodeServiceProvider'] :: VirtualNodeServiceProvider -> Text

-- | Create a value of <a>VirtualNodeServiceProvider</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualNodeName:VirtualNodeServiceProvider'</a>,
--   <a>virtualNodeServiceProvider_virtualNodeName</a> - The name of the
--   virtual node that is acting as a service provider.
newVirtualNodeServiceProvider :: Text -> VirtualNodeServiceProvider

-- | The name of the virtual node that is acting as a service provider.
virtualNodeServiceProvider_virtualNodeName :: Lens' VirtualNodeServiceProvider Text

-- | An object that represents the specification of a virtual node.
--   
--   <i>See:</i> <a>newVirtualNodeSpec</a> smart constructor.
data VirtualNodeSpec
VirtualNodeSpec' :: Maybe [Backend] -> Maybe BackendDefaults -> Maybe ServiceDiscovery -> Maybe [Listener] -> Maybe Logging -> VirtualNodeSpec

-- | The backends that the virtual node is expected to send outbound
--   traffic to.
[$sel:backends:VirtualNodeSpec'] :: VirtualNodeSpec -> Maybe [Backend]

-- | A reference to an object that represents the defaults for backends.
[$sel:backendDefaults:VirtualNodeSpec'] :: VirtualNodeSpec -> Maybe BackendDefaults

-- | The service discovery information for the virtual node. If your
--   virtual node does not expect ingress traffic, you can omit this
--   parameter. If you specify a <tt>listener</tt>, then you must specify
--   service discovery information.
[$sel:serviceDiscovery:VirtualNodeSpec'] :: VirtualNodeSpec -> Maybe ServiceDiscovery

-- | The listener that the virtual node is expected to receive inbound
--   traffic from. You can specify one listener.
[$sel:listeners:VirtualNodeSpec'] :: VirtualNodeSpec -> Maybe [Listener]

-- | The inbound and outbound access logging information for the virtual
--   node.
[$sel:logging:VirtualNodeSpec'] :: VirtualNodeSpec -> Maybe Logging

-- | Create a value of <a>VirtualNodeSpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backends:VirtualNodeSpec'</a>, <a>virtualNodeSpec_backends</a>
--   - The backends that the virtual node is expected to send outbound
--   traffic to.
--   
--   <a>$sel:backendDefaults:VirtualNodeSpec'</a>,
--   <a>virtualNodeSpec_backendDefaults</a> - A reference to an object that
--   represents the defaults for backends.
--   
--   <a>$sel:serviceDiscovery:VirtualNodeSpec'</a>,
--   <a>virtualNodeSpec_serviceDiscovery</a> - The service discovery
--   information for the virtual node. If your virtual node does not expect
--   ingress traffic, you can omit this parameter. If you specify a
--   <tt>listener</tt>, then you must specify service discovery
--   information.
--   
--   <a>$sel:listeners:VirtualNodeSpec'</a>,
--   <a>virtualNodeSpec_listeners</a> - The listener that the virtual node
--   is expected to receive inbound traffic from. You can specify one
--   listener.
--   
--   <a>$sel:logging:VirtualNodeSpec'</a>, <a>virtualNodeSpec_logging</a> -
--   The inbound and outbound access logging information for the virtual
--   node.
newVirtualNodeSpec :: VirtualNodeSpec

-- | The backends that the virtual node is expected to send outbound
--   traffic to.
virtualNodeSpec_backends :: Lens' VirtualNodeSpec (Maybe [Backend])

-- | A reference to an object that represents the defaults for backends.
virtualNodeSpec_backendDefaults :: Lens' VirtualNodeSpec (Maybe BackendDefaults)

-- | The service discovery information for the virtual node. If your
--   virtual node does not expect ingress traffic, you can omit this
--   parameter. If you specify a <tt>listener</tt>, then you must specify
--   service discovery information.
virtualNodeSpec_serviceDiscovery :: Lens' VirtualNodeSpec (Maybe ServiceDiscovery)

-- | The listener that the virtual node is expected to receive inbound
--   traffic from. You can specify one listener.
virtualNodeSpec_listeners :: Lens' VirtualNodeSpec (Maybe [Listener])

-- | The inbound and outbound access logging information for the virtual
--   node.
virtualNodeSpec_logging :: Lens' VirtualNodeSpec (Maybe Logging)

-- | An object that represents the current status of the virtual node.
--   
--   <i>See:</i> <a>newVirtualNodeStatus</a> smart constructor.
data VirtualNodeStatus
VirtualNodeStatus' :: VirtualNodeStatusCode -> VirtualNodeStatus

-- | The current status of the virtual node.
[$sel:status:VirtualNodeStatus'] :: VirtualNodeStatus -> VirtualNodeStatusCode

-- | Create a value of <a>VirtualNodeStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VirtualNodeStatus'</a>, <a>virtualNodeStatus_status</a>
--   - The current status of the virtual node.
newVirtualNodeStatus :: VirtualNodeStatusCode -> VirtualNodeStatus

-- | The current status of the virtual node.
virtualNodeStatus_status :: Lens' VirtualNodeStatus VirtualNodeStatusCode

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualNodeTcpConnectionPool</a> smart constructor.
data VirtualNodeTcpConnectionPool
VirtualNodeTcpConnectionPool' :: Natural -> VirtualNodeTcpConnectionPool

-- | Maximum number of outbound TCP connections Envoy can establish
--   concurrently with all hosts in upstream cluster.
[$sel:maxConnections:VirtualNodeTcpConnectionPool'] :: VirtualNodeTcpConnectionPool -> Natural

-- | Create a value of <a>VirtualNodeTcpConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxConnections:VirtualNodeTcpConnectionPool'</a>,
--   <a>virtualNodeTcpConnectionPool_maxConnections</a> - Maximum number of
--   outbound TCP connections Envoy can establish concurrently with all
--   hosts in upstream cluster.
newVirtualNodeTcpConnectionPool :: Natural -> VirtualNodeTcpConnectionPool

-- | Maximum number of outbound TCP connections Envoy can establish
--   concurrently with all hosts in upstream cluster.
virtualNodeTcpConnectionPool_maxConnections :: Lens' VirtualNodeTcpConnectionPool Natural

-- | An object that represents a virtual router returned by a describe
--   operation.
--   
--   <i>See:</i> <a>newVirtualRouterData</a> smart constructor.
data VirtualRouterData
VirtualRouterData' :: Text -> ResourceMetadata -> VirtualRouterSpec -> VirtualRouterStatus -> Text -> VirtualRouterData

-- | The name of the service mesh that the virtual router resides in.
[$sel:meshName:VirtualRouterData'] :: VirtualRouterData -> Text

-- | The associated metadata for the virtual router.
[$sel:metadata:VirtualRouterData'] :: VirtualRouterData -> ResourceMetadata

-- | The specifications of the virtual router.
[$sel:spec:VirtualRouterData'] :: VirtualRouterData -> VirtualRouterSpec

-- | The current status of the virtual router.
[$sel:status:VirtualRouterData'] :: VirtualRouterData -> VirtualRouterStatus

-- | The name of the virtual router.
[$sel:virtualRouterName:VirtualRouterData'] :: VirtualRouterData -> Text

-- | Create a value of <a>VirtualRouterData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshName:VirtualRouterData'</a>,
--   <a>virtualRouterData_meshName</a> - The name of the service mesh that
--   the virtual router resides in.
--   
--   <a>$sel:metadata:VirtualRouterData'</a>,
--   <a>virtualRouterData_metadata</a> - The associated metadata for the
--   virtual router.
--   
--   <a>$sel:spec:VirtualRouterData'</a>, <a>virtualRouterData_spec</a> -
--   The specifications of the virtual router.
--   
--   <a>$sel:status:VirtualRouterData'</a>, <a>virtualRouterData_status</a>
--   - The current status of the virtual router.
--   
--   <a>$sel:virtualRouterName:VirtualRouterData'</a>,
--   <a>virtualRouterData_virtualRouterName</a> - The name of the virtual
--   router.
newVirtualRouterData :: Text -> ResourceMetadata -> VirtualRouterSpec -> VirtualRouterStatus -> Text -> VirtualRouterData

-- | The name of the service mesh that the virtual router resides in.
virtualRouterData_meshName :: Lens' VirtualRouterData Text

-- | The associated metadata for the virtual router.
virtualRouterData_metadata :: Lens' VirtualRouterData ResourceMetadata

-- | The specifications of the virtual router.
virtualRouterData_spec :: Lens' VirtualRouterData VirtualRouterSpec

-- | The current status of the virtual router.
virtualRouterData_status :: Lens' VirtualRouterData VirtualRouterStatus

-- | The name of the virtual router.
virtualRouterData_virtualRouterName :: Lens' VirtualRouterData Text

-- | An object that represents a virtual router listener.
--   
--   <i>See:</i> <a>newVirtualRouterListener</a> smart constructor.
data VirtualRouterListener
VirtualRouterListener' :: PortMapping -> VirtualRouterListener
[$sel:portMapping:VirtualRouterListener'] :: VirtualRouterListener -> PortMapping

-- | Create a value of <a>VirtualRouterListener</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:portMapping:VirtualRouterListener'</a>,
--   <a>virtualRouterListener_portMapping</a> - Undocumented member.
newVirtualRouterListener :: PortMapping -> VirtualRouterListener

-- | Undocumented member.
virtualRouterListener_portMapping :: Lens' VirtualRouterListener PortMapping

-- | An object that represents a virtual router returned by a list
--   operation.
--   
--   <i>See:</i> <a>newVirtualRouterRef</a> smart constructor.
data VirtualRouterRef
VirtualRouterRef' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Integer -> Text -> VirtualRouterRef

-- | The full Amazon Resource Name (ARN) for the virtual router.
[$sel:arn:VirtualRouterRef'] :: VirtualRouterRef -> Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:VirtualRouterRef'] :: VirtualRouterRef -> POSIX

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
[$sel:lastUpdatedAt:VirtualRouterRef'] :: VirtualRouterRef -> POSIX

-- | The name of the service mesh that the virtual router resides in.
[$sel:meshName:VirtualRouterRef'] :: VirtualRouterRef -> Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:VirtualRouterRef'] :: VirtualRouterRef -> Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
[$sel:resourceOwner:VirtualRouterRef'] :: VirtualRouterRef -> Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
[$sel:version:VirtualRouterRef'] :: VirtualRouterRef -> Integer

-- | The name of the virtual router.
[$sel:virtualRouterName:VirtualRouterRef'] :: VirtualRouterRef -> Text

-- | Create a value of <a>VirtualRouterRef</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:VirtualRouterRef'</a>, <a>virtualRouterRef_arn</a> - The
--   full Amazon Resource Name (ARN) for the virtual router.
--   
--   <a>$sel:createdAt:VirtualRouterRef'</a>,
--   <a>virtualRouterRef_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:lastUpdatedAt:VirtualRouterRef'</a>,
--   <a>virtualRouterRef_lastUpdatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was last updated.
--   
--   <a>$sel:meshName:VirtualRouterRef'</a>,
--   <a>virtualRouterRef_meshName</a> - The name of the service mesh that
--   the virtual router resides in.
--   
--   <a>$sel:meshOwner:VirtualRouterRef'</a>,
--   <a>virtualRouterRef_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:VirtualRouterRef'</a>,
--   <a>virtualRouterRef_resourceOwner</a> - The AWS IAM account ID of the
--   resource owner. If the account ID is not your own, then it's the ID of
--   the mesh owner or of another account that the mesh is shared with. For
--   more information about mesh sharing, see <a>Working with shared
--   meshes</a>.
--   
--   <a>$sel:version:VirtualRouterRef'</a>, <a>virtualRouterRef_version</a>
--   - The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
--   
--   <a>$sel:virtualRouterName:VirtualRouterRef'</a>,
--   <a>virtualRouterRef_virtualRouterName</a> - The name of the virtual
--   router.
newVirtualRouterRef :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Integer -> Text -> VirtualRouterRef

-- | The full Amazon Resource Name (ARN) for the virtual router.
virtualRouterRef_arn :: Lens' VirtualRouterRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
virtualRouterRef_createdAt :: Lens' VirtualRouterRef UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
virtualRouterRef_lastUpdatedAt :: Lens' VirtualRouterRef UTCTime

-- | The name of the service mesh that the virtual router resides in.
virtualRouterRef_meshName :: Lens' VirtualRouterRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
virtualRouterRef_meshOwner :: Lens' VirtualRouterRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
virtualRouterRef_resourceOwner :: Lens' VirtualRouterRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
virtualRouterRef_version :: Lens' VirtualRouterRef Integer

-- | The name of the virtual router.
virtualRouterRef_virtualRouterName :: Lens' VirtualRouterRef Text

-- | An object that represents a virtual node service provider.
--   
--   <i>See:</i> <a>newVirtualRouterServiceProvider</a> smart constructor.
data VirtualRouterServiceProvider
VirtualRouterServiceProvider' :: Text -> VirtualRouterServiceProvider

-- | The name of the virtual router that is acting as a service provider.
[$sel:virtualRouterName:VirtualRouterServiceProvider'] :: VirtualRouterServiceProvider -> Text

-- | Create a value of <a>VirtualRouterServiceProvider</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualRouterName:VirtualRouterServiceProvider'</a>,
--   <a>virtualRouterServiceProvider_virtualRouterName</a> - The name of
--   the virtual router that is acting as a service provider.
newVirtualRouterServiceProvider :: Text -> VirtualRouterServiceProvider

-- | The name of the virtual router that is acting as a service provider.
virtualRouterServiceProvider_virtualRouterName :: Lens' VirtualRouterServiceProvider Text

-- | An object that represents the specification of a virtual router.
--   
--   <i>See:</i> <a>newVirtualRouterSpec</a> smart constructor.
data VirtualRouterSpec
VirtualRouterSpec' :: Maybe (NonEmpty VirtualRouterListener) -> VirtualRouterSpec

-- | The listeners that the virtual router is expected to receive inbound
--   traffic from. You can specify one listener.
[$sel:listeners:VirtualRouterSpec'] :: VirtualRouterSpec -> Maybe (NonEmpty VirtualRouterListener)

-- | Create a value of <a>VirtualRouterSpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:listeners:VirtualRouterSpec'</a>,
--   <a>virtualRouterSpec_listeners</a> - The listeners that the virtual
--   router is expected to receive inbound traffic from. You can specify
--   one listener.
newVirtualRouterSpec :: VirtualRouterSpec

-- | The listeners that the virtual router is expected to receive inbound
--   traffic from. You can specify one listener.
virtualRouterSpec_listeners :: Lens' VirtualRouterSpec (Maybe (NonEmpty VirtualRouterListener))

-- | An object that represents the status of a virtual router.
--   
--   <i>See:</i> <a>newVirtualRouterStatus</a> smart constructor.
data VirtualRouterStatus
VirtualRouterStatus' :: VirtualRouterStatusCode -> VirtualRouterStatus

-- | The current status of the virtual router.
[$sel:status:VirtualRouterStatus'] :: VirtualRouterStatus -> VirtualRouterStatusCode

-- | Create a value of <a>VirtualRouterStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VirtualRouterStatus'</a>,
--   <a>virtualRouterStatus_status</a> - The current status of the virtual
--   router.
newVirtualRouterStatus :: VirtualRouterStatusCode -> VirtualRouterStatus

-- | The current status of the virtual router.
virtualRouterStatus_status :: Lens' VirtualRouterStatus VirtualRouterStatusCode

-- | An object that represents a virtual service backend for a virtual
--   node.
--   
--   <i>See:</i> <a>newVirtualServiceBackend</a> smart constructor.
data VirtualServiceBackend
VirtualServiceBackend' :: Maybe ClientPolicy -> Text -> VirtualServiceBackend

-- | A reference to an object that represents the client policy for a
--   backend.
[$sel:clientPolicy:VirtualServiceBackend'] :: VirtualServiceBackend -> Maybe ClientPolicy

-- | The name of the virtual service that is acting as a virtual node
--   backend.
[$sel:virtualServiceName:VirtualServiceBackend'] :: VirtualServiceBackend -> Text

-- | Create a value of <a>VirtualServiceBackend</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientPolicy:VirtualServiceBackend'</a>,
--   <a>virtualServiceBackend_clientPolicy</a> - A reference to an object
--   that represents the client policy for a backend.
--   
--   <a>$sel:virtualServiceName:VirtualServiceBackend'</a>,
--   <a>virtualServiceBackend_virtualServiceName</a> - The name of the
--   virtual service that is acting as a virtual node backend.
newVirtualServiceBackend :: Text -> VirtualServiceBackend

-- | A reference to an object that represents the client policy for a
--   backend.
virtualServiceBackend_clientPolicy :: Lens' VirtualServiceBackend (Maybe ClientPolicy)

-- | The name of the virtual service that is acting as a virtual node
--   backend.
virtualServiceBackend_virtualServiceName :: Lens' VirtualServiceBackend Text

-- | An object that represents a virtual service returned by a describe
--   operation.
--   
--   <i>See:</i> <a>newVirtualServiceData</a> smart constructor.
data VirtualServiceData
VirtualServiceData' :: Text -> ResourceMetadata -> VirtualServiceSpec -> VirtualServiceStatus -> Text -> VirtualServiceData

-- | The name of the service mesh that the virtual service resides in.
[$sel:meshName:VirtualServiceData'] :: VirtualServiceData -> Text
[$sel:metadata:VirtualServiceData'] :: VirtualServiceData -> ResourceMetadata

-- | The specifications of the virtual service.
[$sel:spec:VirtualServiceData'] :: VirtualServiceData -> VirtualServiceSpec

-- | The current status of the virtual service.
[$sel:status:VirtualServiceData'] :: VirtualServiceData -> VirtualServiceStatus

-- | The name of the virtual service.
[$sel:virtualServiceName:VirtualServiceData'] :: VirtualServiceData -> Text

-- | Create a value of <a>VirtualServiceData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshName:VirtualServiceData'</a>,
--   <a>virtualServiceData_meshName</a> - The name of the service mesh that
--   the virtual service resides in.
--   
--   <a>$sel:metadata:VirtualServiceData'</a>,
--   <a>virtualServiceData_metadata</a> - Undocumented member.
--   
--   <a>$sel:spec:VirtualServiceData'</a>, <a>virtualServiceData_spec</a> -
--   The specifications of the virtual service.
--   
--   <a>$sel:status:VirtualServiceData'</a>,
--   <a>virtualServiceData_status</a> - The current status of the virtual
--   service.
--   
--   <a>$sel:virtualServiceName:VirtualServiceData'</a>,
--   <a>virtualServiceData_virtualServiceName</a> - The name of the virtual
--   service.
newVirtualServiceData :: Text -> ResourceMetadata -> VirtualServiceSpec -> VirtualServiceStatus -> Text -> VirtualServiceData

-- | The name of the service mesh that the virtual service resides in.
virtualServiceData_meshName :: Lens' VirtualServiceData Text

-- | Undocumented member.
virtualServiceData_metadata :: Lens' VirtualServiceData ResourceMetadata

-- | The specifications of the virtual service.
virtualServiceData_spec :: Lens' VirtualServiceData VirtualServiceSpec

-- | The current status of the virtual service.
virtualServiceData_status :: Lens' VirtualServiceData VirtualServiceStatus

-- | The name of the virtual service.
virtualServiceData_virtualServiceName :: Lens' VirtualServiceData Text

-- | An object that represents the provider for a virtual service.
--   
--   <i>See:</i> <a>newVirtualServiceProvider</a> smart constructor.
data VirtualServiceProvider
VirtualServiceProvider' :: Maybe VirtualRouterServiceProvider -> Maybe VirtualNodeServiceProvider -> VirtualServiceProvider

-- | The virtual router associated with a virtual service.
[$sel:virtualRouter:VirtualServiceProvider'] :: VirtualServiceProvider -> Maybe VirtualRouterServiceProvider

-- | The virtual node associated with a virtual service.
[$sel:virtualNode:VirtualServiceProvider'] :: VirtualServiceProvider -> Maybe VirtualNodeServiceProvider

-- | Create a value of <a>VirtualServiceProvider</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualRouter:VirtualServiceProvider'</a>,
--   <a>virtualServiceProvider_virtualRouter</a> - The virtual router
--   associated with a virtual service.
--   
--   <a>$sel:virtualNode:VirtualServiceProvider'</a>,
--   <a>virtualServiceProvider_virtualNode</a> - The virtual node
--   associated with a virtual service.
newVirtualServiceProvider :: VirtualServiceProvider

-- | The virtual router associated with a virtual service.
virtualServiceProvider_virtualRouter :: Lens' VirtualServiceProvider (Maybe VirtualRouterServiceProvider)

-- | The virtual node associated with a virtual service.
virtualServiceProvider_virtualNode :: Lens' VirtualServiceProvider (Maybe VirtualNodeServiceProvider)

-- | An object that represents a virtual service returned by a list
--   operation.
--   
--   <i>See:</i> <a>newVirtualServiceRef</a> smart constructor.
data VirtualServiceRef
VirtualServiceRef' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Integer -> Text -> VirtualServiceRef

-- | The full Amazon Resource Name (ARN) for the virtual service.
[$sel:arn:VirtualServiceRef'] :: VirtualServiceRef -> Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:VirtualServiceRef'] :: VirtualServiceRef -> POSIX

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
[$sel:lastUpdatedAt:VirtualServiceRef'] :: VirtualServiceRef -> POSIX

-- | The name of the service mesh that the virtual service resides in.
[$sel:meshName:VirtualServiceRef'] :: VirtualServiceRef -> Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:VirtualServiceRef'] :: VirtualServiceRef -> Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
[$sel:resourceOwner:VirtualServiceRef'] :: VirtualServiceRef -> Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
[$sel:version:VirtualServiceRef'] :: VirtualServiceRef -> Integer

-- | The name of the virtual service.
[$sel:virtualServiceName:VirtualServiceRef'] :: VirtualServiceRef -> Text

-- | Create a value of <a>VirtualServiceRef</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:VirtualServiceRef'</a>, <a>virtualServiceRef_arn</a> - The
--   full Amazon Resource Name (ARN) for the virtual service.
--   
--   <a>$sel:createdAt:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:lastUpdatedAt:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_lastUpdatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was last updated.
--   
--   <a>$sel:meshName:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_meshName</a> - The name of the service mesh that
--   the virtual service resides in.
--   
--   <a>$sel:meshOwner:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_resourceOwner</a> - The AWS IAM account ID of the
--   resource owner. If the account ID is not your own, then it's the ID of
--   the mesh owner or of another account that the mesh is shared with. For
--   more information about mesh sharing, see <a>Working with shared
--   meshes</a>.
--   
--   <a>$sel:version:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_version</a> - The version of the resource.
--   Resources are created at version 1, and this version is incremented
--   each time that they're updated.
--   
--   <a>$sel:virtualServiceName:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_virtualServiceName</a> - The name of the virtual
--   service.
newVirtualServiceRef :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Integer -> Text -> VirtualServiceRef

-- | The full Amazon Resource Name (ARN) for the virtual service.
virtualServiceRef_arn :: Lens' VirtualServiceRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
virtualServiceRef_createdAt :: Lens' VirtualServiceRef UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
virtualServiceRef_lastUpdatedAt :: Lens' VirtualServiceRef UTCTime

-- | The name of the service mesh that the virtual service resides in.
virtualServiceRef_meshName :: Lens' VirtualServiceRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
virtualServiceRef_meshOwner :: Lens' VirtualServiceRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
virtualServiceRef_resourceOwner :: Lens' VirtualServiceRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
virtualServiceRef_version :: Lens' VirtualServiceRef Integer

-- | The name of the virtual service.
virtualServiceRef_virtualServiceName :: Lens' VirtualServiceRef Text

-- | An object that represents the specification of a virtual service.
--   
--   <i>See:</i> <a>newVirtualServiceSpec</a> smart constructor.
data VirtualServiceSpec
VirtualServiceSpec' :: Maybe VirtualServiceProvider -> VirtualServiceSpec

-- | The App Mesh object that is acting as the provider for a virtual
--   service. You can specify a single virtual node or virtual router.
[$sel:provider:VirtualServiceSpec'] :: VirtualServiceSpec -> Maybe VirtualServiceProvider

-- | Create a value of <a>VirtualServiceSpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:provider:VirtualServiceSpec'</a>,
--   <a>virtualServiceSpec_provider</a> - The App Mesh object that is
--   acting as the provider for a virtual service. You can specify a single
--   virtual node or virtual router.
newVirtualServiceSpec :: VirtualServiceSpec

-- | The App Mesh object that is acting as the provider for a virtual
--   service. You can specify a single virtual node or virtual router.
virtualServiceSpec_provider :: Lens' VirtualServiceSpec (Maybe VirtualServiceProvider)

-- | An object that represents the status of a virtual service.
--   
--   <i>See:</i> <a>newVirtualServiceStatus</a> smart constructor.
data VirtualServiceStatus
VirtualServiceStatus' :: VirtualServiceStatusCode -> VirtualServiceStatus

-- | The current status of the virtual service.
[$sel:status:VirtualServiceStatus'] :: VirtualServiceStatus -> VirtualServiceStatusCode

-- | Create a value of <a>VirtualServiceStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VirtualServiceStatus'</a>,
--   <a>virtualServiceStatus_status</a> - The current status of the virtual
--   service.
newVirtualServiceStatus :: VirtualServiceStatusCode -> VirtualServiceStatus

-- | The current status of the virtual service.
virtualServiceStatus_status :: Lens' VirtualServiceStatus VirtualServiceStatusCode

-- | An object that represents a target and its relative weight. Traffic is
--   distributed across targets according to their relative weight. For
--   example, a weighted target with a relative weight of 50 receives five
--   times as much traffic as one with a relative weight of 10. The total
--   weight for all targets combined must be less than or equal to 100.
--   
--   <i>See:</i> <a>newWeightedTarget</a> smart constructor.
data WeightedTarget
WeightedTarget' :: Text -> Natural -> WeightedTarget

-- | The virtual node to associate with the weighted target.
[$sel:virtualNode:WeightedTarget'] :: WeightedTarget -> Text

-- | The relative weight of the weighted target.
[$sel:weight:WeightedTarget'] :: WeightedTarget -> Natural

-- | Create a value of <a>WeightedTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualNode:WeightedTarget'</a>,
--   <a>weightedTarget_virtualNode</a> - The virtual node to associate with
--   the weighted target.
--   
--   <a>$sel:weight:WeightedTarget'</a>, <a>weightedTarget_weight</a> - The
--   relative weight of the weighted target.
newWeightedTarget :: Text -> Natural -> WeightedTarget

-- | The virtual node to associate with the weighted target.
weightedTarget_virtualNode :: Lens' WeightedTarget Text

-- | The relative weight of the weighted target.
weightedTarget_weight :: Lens' WeightedTarget Natural


-- | Associates the specified tags to a resource with the specified
--   <tt>resourceArn</tt>. If existing tags on a resource aren't specified
--   in the request parameters, they aren't changed. When a resource is
--   deleted, the tags associated with that resource are also deleted.
module Amazonka.AppMesh.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [TagRef] -> TagResource

-- | The Amazon Resource Name (ARN) of the resource to add tags to.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The tags to add to the resource. A tag is an array of key-value pairs.
--   Tag keys can have a maximum character length of 128 characters, and
--   tag values can have a maximum length of 256 characters.
[$sel:tags:TagResource'] :: TagResource -> [TagRef]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource to add tags to.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   add to the resource. A tag is an array of key-value pairs. Tag keys
--   can have a maximum character length of 128 characters, and tag values
--   can have a maximum length of 256 characters.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource to add tags to.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to add to the resource. A tag is an array of key-value pairs.
--   Tag keys can have a maximum character length of 128 characters, and
--   tag values can have a maximum length of 256 characters.
tagResource_tags :: Lens' TagResource [TagRef]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.AppMesh.TagResource.TagResource
instance GHC.Show.Show Amazonka.AppMesh.TagResource.TagResource
instance GHC.Read.Read Amazonka.AppMesh.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.AppMesh.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.AppMesh.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.AppMesh.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.AppMesh.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.AppMesh.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.AppMesh.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.AppMesh.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.TagResource.TagResource


-- | Returns a list of existing virtual services in a service mesh.
--   
--   This operation returns paginated results.
module Amazonka.AppMesh.ListVirtualServices

-- | <i>See:</i> <a>newListVirtualServices</a> smart constructor.
data ListVirtualServices
ListVirtualServices' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListVirtualServices

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:ListVirtualServices'] :: ListVirtualServices -> Maybe Text

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListVirtualServices</tt> request where <tt>limit</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
[$sel:nextToken:ListVirtualServices'] :: ListVirtualServices -> Maybe Text

-- | The maximum number of results returned by <tt>ListVirtualServices</tt>
--   in paginated output. When you use this parameter,
--   <tt>ListVirtualServices</tt> returns only <tt>limit</tt> results in a
--   single page along with a <tt>nextToken</tt> response element. You can
--   see the remaining results of the initial request by sending another
--   <tt>ListVirtualServices</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListVirtualServices</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
[$sel:limit:ListVirtualServices'] :: ListVirtualServices -> Maybe Natural

-- | The name of the service mesh to list virtual services in.
[$sel:meshName:ListVirtualServices'] :: ListVirtualServices -> Text

-- | Create a value of <a>ListVirtualServices</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:ListVirtualServices'</a>,
--   <a>listVirtualServices_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:nextToken:ListVirtualServices'</a>,
--   <a>listVirtualServices_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated <tt>ListVirtualServices</tt>
--   request where <tt>limit</tt> was used and the results exceeded the
--   value of that parameter. Pagination continues from the end of the
--   previous results that returned the <tt>nextToken</tt> value.
--   
--   <a>$sel:limit:ListVirtualServices'</a>,
--   <a>listVirtualServices_limit</a> - The maximum number of results
--   returned by <tt>ListVirtualServices</tt> in paginated output. When you
--   use this parameter, <tt>ListVirtualServices</tt> returns only
--   <tt>limit</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListVirtualServices</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If you don't use this parameter,
--   <tt>ListVirtualServices</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
--   
--   <a>$sel:meshName:ListVirtualServices'</a>,
--   <a>listVirtualServices_meshName</a> - The name of the service mesh to
--   list virtual services in.
newListVirtualServices :: Text -> ListVirtualServices

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
listVirtualServices_meshOwner :: Lens' ListVirtualServices (Maybe Text)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListVirtualServices</tt> request where <tt>limit</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listVirtualServices_nextToken :: Lens' ListVirtualServices (Maybe Text)

-- | The maximum number of results returned by <tt>ListVirtualServices</tt>
--   in paginated output. When you use this parameter,
--   <tt>ListVirtualServices</tt> returns only <tt>limit</tt> results in a
--   single page along with a <tt>nextToken</tt> response element. You can
--   see the remaining results of the initial request by sending another
--   <tt>ListVirtualServices</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListVirtualServices</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
listVirtualServices_limit :: Lens' ListVirtualServices (Maybe Natural)

-- | The name of the service mesh to list virtual services in.
listVirtualServices_meshName :: Lens' ListVirtualServices Text

-- | <i>See:</i> <a>newListVirtualServicesResponse</a> smart constructor.
data ListVirtualServicesResponse
ListVirtualServicesResponse' :: Maybe Text -> Int -> [VirtualServiceRef] -> ListVirtualServicesResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListVirtualServices</tt> request. When the results of a
--   <tt>ListVirtualServices</tt> request exceed <tt>limit</tt>, you can
--   use this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
[$sel:nextToken:ListVirtualServicesResponse'] :: ListVirtualServicesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListVirtualServicesResponse'] :: ListVirtualServicesResponse -> Int

-- | The list of existing virtual services for the specified service mesh.
[$sel:virtualServices:ListVirtualServicesResponse'] :: ListVirtualServicesResponse -> [VirtualServiceRef]

-- | Create a value of <a>ListVirtualServicesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVirtualServices'</a>,
--   <a>listVirtualServicesResponse_nextToken</a> - The <tt>nextToken</tt>
--   value to include in a future <tt>ListVirtualServices</tt> request.
--   When the results of a <tt>ListVirtualServices</tt> request exceed
--   <tt>limit</tt>, you can use this value to retrieve the next page of
--   results. This value is <tt>null</tt> when there are no more results to
--   return.
--   
--   <a>$sel:httpStatus:ListVirtualServicesResponse'</a>,
--   <a>listVirtualServicesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualServices:ListVirtualServicesResponse'</a>,
--   <a>listVirtualServicesResponse_virtualServices</a> - The list of
--   existing virtual services for the specified service mesh.
newListVirtualServicesResponse :: Int -> ListVirtualServicesResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListVirtualServices</tt> request. When the results of a
--   <tt>ListVirtualServices</tt> request exceed <tt>limit</tt>, you can
--   use this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listVirtualServicesResponse_nextToken :: Lens' ListVirtualServicesResponse (Maybe Text)

-- | The response's http status code.
listVirtualServicesResponse_httpStatus :: Lens' ListVirtualServicesResponse Int

-- | The list of existing virtual services for the specified service mesh.
listVirtualServicesResponse_virtualServices :: Lens' ListVirtualServicesResponse [VirtualServiceRef]
instance GHC.Generics.Generic Amazonka.AppMesh.ListVirtualServices.ListVirtualServices
instance GHC.Show.Show Amazonka.AppMesh.ListVirtualServices.ListVirtualServices
instance GHC.Read.Read Amazonka.AppMesh.ListVirtualServices.ListVirtualServices
instance GHC.Classes.Eq Amazonka.AppMesh.ListVirtualServices.ListVirtualServices
instance GHC.Generics.Generic Amazonka.AppMesh.ListVirtualServices.ListVirtualServicesResponse
instance GHC.Show.Show Amazonka.AppMesh.ListVirtualServices.ListVirtualServicesResponse
instance GHC.Read.Read Amazonka.AppMesh.ListVirtualServices.ListVirtualServicesResponse
instance GHC.Classes.Eq Amazonka.AppMesh.ListVirtualServices.ListVirtualServicesResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.ListVirtualServices.ListVirtualServices
instance Control.DeepSeq.NFData Amazonka.AppMesh.ListVirtualServices.ListVirtualServicesResponse
instance Amazonka.Pager.AWSPager Amazonka.AppMesh.ListVirtualServices.ListVirtualServices
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.ListVirtualServices.ListVirtualServices
instance Control.DeepSeq.NFData Amazonka.AppMesh.ListVirtualServices.ListVirtualServices
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.ListVirtualServices.ListVirtualServices
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.ListVirtualServices.ListVirtualServices
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.ListVirtualServices.ListVirtualServices


-- | Returns a list of existing virtual routers in a service mesh.
--   
--   This operation returns paginated results.
module Amazonka.AppMesh.ListVirtualRouters

-- | <i>See:</i> <a>newListVirtualRouters</a> smart constructor.
data ListVirtualRouters
ListVirtualRouters' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListVirtualRouters

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:ListVirtualRouters'] :: ListVirtualRouters -> Maybe Text

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListVirtualRouters</tt> request where <tt>limit</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
[$sel:nextToken:ListVirtualRouters'] :: ListVirtualRouters -> Maybe Text

-- | The maximum number of results returned by <tt>ListVirtualRouters</tt>
--   in paginated output. When you use this parameter,
--   <tt>ListVirtualRouters</tt> returns only <tt>limit</tt> results in a
--   single page along with a <tt>nextToken</tt> response element. You can
--   see the remaining results of the initial request by sending another
--   <tt>ListVirtualRouters</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListVirtualRouters</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
[$sel:limit:ListVirtualRouters'] :: ListVirtualRouters -> Maybe Natural

-- | The name of the service mesh to list virtual routers in.
[$sel:meshName:ListVirtualRouters'] :: ListVirtualRouters -> Text

-- | Create a value of <a>ListVirtualRouters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:ListVirtualRouters'</a>,
--   <a>listVirtualRouters_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:nextToken:ListVirtualRouters'</a>,
--   <a>listVirtualRouters_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated <tt>ListVirtualRouters</tt> request
--   where <tt>limit</tt> was used and the results exceeded the value of
--   that parameter. Pagination continues from the end of the previous
--   results that returned the <tt>nextToken</tt> value.
--   
--   <a>$sel:limit:ListVirtualRouters'</a>, <a>listVirtualRouters_limit</a>
--   - The maximum number of results returned by
--   <tt>ListVirtualRouters</tt> in paginated output. When you use this
--   parameter, <tt>ListVirtualRouters</tt> returns only <tt>limit</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. You can see the remaining results of the initial request by
--   sending another <tt>ListVirtualRouters</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListVirtualRouters</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
--   
--   <a>$sel:meshName:ListVirtualRouters'</a>,
--   <a>listVirtualRouters_meshName</a> - The name of the service mesh to
--   list virtual routers in.
newListVirtualRouters :: Text -> ListVirtualRouters

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
listVirtualRouters_meshOwner :: Lens' ListVirtualRouters (Maybe Text)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListVirtualRouters</tt> request where <tt>limit</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listVirtualRouters_nextToken :: Lens' ListVirtualRouters (Maybe Text)

-- | The maximum number of results returned by <tt>ListVirtualRouters</tt>
--   in paginated output. When you use this parameter,
--   <tt>ListVirtualRouters</tt> returns only <tt>limit</tt> results in a
--   single page along with a <tt>nextToken</tt> response element. You can
--   see the remaining results of the initial request by sending another
--   <tt>ListVirtualRouters</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListVirtualRouters</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
listVirtualRouters_limit :: Lens' ListVirtualRouters (Maybe Natural)

-- | The name of the service mesh to list virtual routers in.
listVirtualRouters_meshName :: Lens' ListVirtualRouters Text

-- | <i>See:</i> <a>newListVirtualRoutersResponse</a> smart constructor.
data ListVirtualRoutersResponse
ListVirtualRoutersResponse' :: Maybe Text -> Int -> [VirtualRouterRef] -> ListVirtualRoutersResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListVirtualRouters</tt> request. When the results of a
--   <tt>ListVirtualRouters</tt> request exceed <tt>limit</tt>, you can use
--   this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
[$sel:nextToken:ListVirtualRoutersResponse'] :: ListVirtualRoutersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListVirtualRoutersResponse'] :: ListVirtualRoutersResponse -> Int

-- | The list of existing virtual routers for the specified service mesh.
[$sel:virtualRouters:ListVirtualRoutersResponse'] :: ListVirtualRoutersResponse -> [VirtualRouterRef]

-- | Create a value of <a>ListVirtualRoutersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVirtualRouters'</a>,
--   <a>listVirtualRoutersResponse_nextToken</a> - The <tt>nextToken</tt>
--   value to include in a future <tt>ListVirtualRouters</tt> request. When
--   the results of a <tt>ListVirtualRouters</tt> request exceed
--   <tt>limit</tt>, you can use this value to retrieve the next page of
--   results. This value is <tt>null</tt> when there are no more results to
--   return.
--   
--   <a>$sel:httpStatus:ListVirtualRoutersResponse'</a>,
--   <a>listVirtualRoutersResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualRouters:ListVirtualRoutersResponse'</a>,
--   <a>listVirtualRoutersResponse_virtualRouters</a> - The list of
--   existing virtual routers for the specified service mesh.
newListVirtualRoutersResponse :: Int -> ListVirtualRoutersResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListVirtualRouters</tt> request. When the results of a
--   <tt>ListVirtualRouters</tt> request exceed <tt>limit</tt>, you can use
--   this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listVirtualRoutersResponse_nextToken :: Lens' ListVirtualRoutersResponse (Maybe Text)

-- | The response's http status code.
listVirtualRoutersResponse_httpStatus :: Lens' ListVirtualRoutersResponse Int

-- | The list of existing virtual routers for the specified service mesh.
listVirtualRoutersResponse_virtualRouters :: Lens' ListVirtualRoutersResponse [VirtualRouterRef]
instance GHC.Generics.Generic Amazonka.AppMesh.ListVirtualRouters.ListVirtualRouters
instance GHC.Show.Show Amazonka.AppMesh.ListVirtualRouters.ListVirtualRouters
instance GHC.Read.Read Amazonka.AppMesh.ListVirtualRouters.ListVirtualRouters
instance GHC.Classes.Eq Amazonka.AppMesh.ListVirtualRouters.ListVirtualRouters
instance GHC.Generics.Generic Amazonka.AppMesh.ListVirtualRouters.ListVirtualRoutersResponse
instance GHC.Show.Show Amazonka.AppMesh.ListVirtualRouters.ListVirtualRoutersResponse
instance GHC.Read.Read Amazonka.AppMesh.ListVirtualRouters.ListVirtualRoutersResponse
instance GHC.Classes.Eq Amazonka.AppMesh.ListVirtualRouters.ListVirtualRoutersResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.ListVirtualRouters.ListVirtualRouters
instance Control.DeepSeq.NFData Amazonka.AppMesh.ListVirtualRouters.ListVirtualRoutersResponse
instance Amazonka.Pager.AWSPager Amazonka.AppMesh.ListVirtualRouters.ListVirtualRouters
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.ListVirtualRouters.ListVirtualRouters
instance Control.DeepSeq.NFData Amazonka.AppMesh.ListVirtualRouters.ListVirtualRouters
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.ListVirtualRouters.ListVirtualRouters
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.ListVirtualRouters.ListVirtualRouters
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.ListVirtualRouters.ListVirtualRouters


-- | Returns a list of existing virtual nodes.
--   
--   This operation returns paginated results.
module Amazonka.AppMesh.ListVirtualNodes

-- | <i>See:</i> <a>newListVirtualNodes</a> smart constructor.
data ListVirtualNodes
ListVirtualNodes' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListVirtualNodes

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:ListVirtualNodes'] :: ListVirtualNodes -> Maybe Text

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListVirtualNodes</tt> request where <tt>limit</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
[$sel:nextToken:ListVirtualNodes'] :: ListVirtualNodes -> Maybe Text

-- | The maximum number of results returned by <tt>ListVirtualNodes</tt> in
--   paginated output. When you use this parameter,
--   <tt>ListVirtualNodes</tt> returns only <tt>limit</tt> results in a
--   single page along with a <tt>nextToken</tt> response element. You can
--   see the remaining results of the initial request by sending another
--   <tt>ListVirtualNodes</tt> request with the returned <tt>nextToken</tt>
--   value. This value can be between 1 and 100. If you don't use this
--   parameter, <tt>ListVirtualNodes</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
[$sel:limit:ListVirtualNodes'] :: ListVirtualNodes -> Maybe Natural

-- | The name of the service mesh to list virtual nodes in.
[$sel:meshName:ListVirtualNodes'] :: ListVirtualNodes -> Text

-- | Create a value of <a>ListVirtualNodes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:ListVirtualNodes'</a>,
--   <a>listVirtualNodes_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:nextToken:ListVirtualNodes'</a>,
--   <a>listVirtualNodes_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated <tt>ListVirtualNodes</tt> request
--   where <tt>limit</tt> was used and the results exceeded the value of
--   that parameter. Pagination continues from the end of the previous
--   results that returned the <tt>nextToken</tt> value.
--   
--   <a>$sel:limit:ListVirtualNodes'</a>, <a>listVirtualNodes_limit</a> -
--   The maximum number of results returned by <tt>ListVirtualNodes</tt> in
--   paginated output. When you use this parameter,
--   <tt>ListVirtualNodes</tt> returns only <tt>limit</tt> results in a
--   single page along with a <tt>nextToken</tt> response element. You can
--   see the remaining results of the initial request by sending another
--   <tt>ListVirtualNodes</tt> request with the returned <tt>nextToken</tt>
--   value. This value can be between 1 and 100. If you don't use this
--   parameter, <tt>ListVirtualNodes</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
--   
--   <a>$sel:meshName:ListVirtualNodes'</a>,
--   <a>listVirtualNodes_meshName</a> - The name of the service mesh to
--   list virtual nodes in.
newListVirtualNodes :: Text -> ListVirtualNodes

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
listVirtualNodes_meshOwner :: Lens' ListVirtualNodes (Maybe Text)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListVirtualNodes</tt> request where <tt>limit</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listVirtualNodes_nextToken :: Lens' ListVirtualNodes (Maybe Text)

-- | The maximum number of results returned by <tt>ListVirtualNodes</tt> in
--   paginated output. When you use this parameter,
--   <tt>ListVirtualNodes</tt> returns only <tt>limit</tt> results in a
--   single page along with a <tt>nextToken</tt> response element. You can
--   see the remaining results of the initial request by sending another
--   <tt>ListVirtualNodes</tt> request with the returned <tt>nextToken</tt>
--   value. This value can be between 1 and 100. If you don't use this
--   parameter, <tt>ListVirtualNodes</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
listVirtualNodes_limit :: Lens' ListVirtualNodes (Maybe Natural)

-- | The name of the service mesh to list virtual nodes in.
listVirtualNodes_meshName :: Lens' ListVirtualNodes Text

-- | <i>See:</i> <a>newListVirtualNodesResponse</a> smart constructor.
data ListVirtualNodesResponse
ListVirtualNodesResponse' :: Maybe Text -> Int -> [VirtualNodeRef] -> ListVirtualNodesResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListVirtualNodes</tt> request. When the results of a
--   <tt>ListVirtualNodes</tt> request exceed <tt>limit</tt>, you can use
--   this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
[$sel:nextToken:ListVirtualNodesResponse'] :: ListVirtualNodesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListVirtualNodesResponse'] :: ListVirtualNodesResponse -> Int

-- | The list of existing virtual nodes for the specified service mesh.
[$sel:virtualNodes:ListVirtualNodesResponse'] :: ListVirtualNodesResponse -> [VirtualNodeRef]

-- | Create a value of <a>ListVirtualNodesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVirtualNodes'</a>,
--   <a>listVirtualNodesResponse_nextToken</a> - The <tt>nextToken</tt>
--   value to include in a future <tt>ListVirtualNodes</tt> request. When
--   the results of a <tt>ListVirtualNodes</tt> request exceed
--   <tt>limit</tt>, you can use this value to retrieve the next page of
--   results. This value is <tt>null</tt> when there are no more results to
--   return.
--   
--   <a>$sel:httpStatus:ListVirtualNodesResponse'</a>,
--   <a>listVirtualNodesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualNodes:ListVirtualNodesResponse'</a>,
--   <a>listVirtualNodesResponse_virtualNodes</a> - The list of existing
--   virtual nodes for the specified service mesh.
newListVirtualNodesResponse :: Int -> ListVirtualNodesResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListVirtualNodes</tt> request. When the results of a
--   <tt>ListVirtualNodes</tt> request exceed <tt>limit</tt>, you can use
--   this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listVirtualNodesResponse_nextToken :: Lens' ListVirtualNodesResponse (Maybe Text)

-- | The response's http status code.
listVirtualNodesResponse_httpStatus :: Lens' ListVirtualNodesResponse Int

-- | The list of existing virtual nodes for the specified service mesh.
listVirtualNodesResponse_virtualNodes :: Lens' ListVirtualNodesResponse [VirtualNodeRef]
instance GHC.Generics.Generic Amazonka.AppMesh.ListVirtualNodes.ListVirtualNodes
instance GHC.Show.Show Amazonka.AppMesh.ListVirtualNodes.ListVirtualNodes
instance GHC.Read.Read Amazonka.AppMesh.ListVirtualNodes.ListVirtualNodes
instance GHC.Classes.Eq Amazonka.AppMesh.ListVirtualNodes.ListVirtualNodes
instance GHC.Generics.Generic Amazonka.AppMesh.ListVirtualNodes.ListVirtualNodesResponse
instance GHC.Show.Show Amazonka.AppMesh.ListVirtualNodes.ListVirtualNodesResponse
instance GHC.Read.Read Amazonka.AppMesh.ListVirtualNodes.ListVirtualNodesResponse
instance GHC.Classes.Eq Amazonka.AppMesh.ListVirtualNodes.ListVirtualNodesResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.ListVirtualNodes.ListVirtualNodes
instance Control.DeepSeq.NFData Amazonka.AppMesh.ListVirtualNodes.ListVirtualNodesResponse
instance Amazonka.Pager.AWSPager Amazonka.AppMesh.ListVirtualNodes.ListVirtualNodes
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.ListVirtualNodes.ListVirtualNodes
instance Control.DeepSeq.NFData Amazonka.AppMesh.ListVirtualNodes.ListVirtualNodes
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.ListVirtualNodes.ListVirtualNodes
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.ListVirtualNodes.ListVirtualNodes
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.ListVirtualNodes.ListVirtualNodes


-- | Returns a list of existing virtual gateways in a service mesh.
--   
--   This operation returns paginated results.
module Amazonka.AppMesh.ListVirtualGateways

-- | <i>See:</i> <a>newListVirtualGateways</a> smart constructor.
data ListVirtualGateways
ListVirtualGateways' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListVirtualGateways

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:ListVirtualGateways'] :: ListVirtualGateways -> Maybe Text

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListVirtualGateways</tt> request where <tt>limit</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
[$sel:nextToken:ListVirtualGateways'] :: ListVirtualGateways -> Maybe Text

-- | The maximum number of results returned by <tt>ListVirtualGateways</tt>
--   in paginated output. When you use this parameter,
--   <tt>ListVirtualGateways</tt> returns only <tt>limit</tt> results in a
--   single page along with a <tt>nextToken</tt> response element. You can
--   see the remaining results of the initial request by sending another
--   <tt>ListVirtualGateways</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListVirtualGateways</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
[$sel:limit:ListVirtualGateways'] :: ListVirtualGateways -> Maybe Natural

-- | The name of the service mesh to list virtual gateways in.
[$sel:meshName:ListVirtualGateways'] :: ListVirtualGateways -> Text

-- | Create a value of <a>ListVirtualGateways</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:ListVirtualGateways'</a>,
--   <a>listVirtualGateways_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:nextToken:ListVirtualGateways'</a>,
--   <a>listVirtualGateways_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated <tt>ListVirtualGateways</tt>
--   request where <tt>limit</tt> was used and the results exceeded the
--   value of that parameter. Pagination continues from the end of the
--   previous results that returned the <tt>nextToken</tt> value.
--   
--   <a>$sel:limit:ListVirtualGateways'</a>,
--   <a>listVirtualGateways_limit</a> - The maximum number of results
--   returned by <tt>ListVirtualGateways</tt> in paginated output. When you
--   use this parameter, <tt>ListVirtualGateways</tt> returns only
--   <tt>limit</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListVirtualGateways</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If you don't use this parameter,
--   <tt>ListVirtualGateways</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
--   
--   <a>$sel:meshName:ListVirtualGateways'</a>,
--   <a>listVirtualGateways_meshName</a> - The name of the service mesh to
--   list virtual gateways in.
newListVirtualGateways :: Text -> ListVirtualGateways

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
listVirtualGateways_meshOwner :: Lens' ListVirtualGateways (Maybe Text)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListVirtualGateways</tt> request where <tt>limit</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listVirtualGateways_nextToken :: Lens' ListVirtualGateways (Maybe Text)

-- | The maximum number of results returned by <tt>ListVirtualGateways</tt>
--   in paginated output. When you use this parameter,
--   <tt>ListVirtualGateways</tt> returns only <tt>limit</tt> results in a
--   single page along with a <tt>nextToken</tt> response element. You can
--   see the remaining results of the initial request by sending another
--   <tt>ListVirtualGateways</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListVirtualGateways</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
listVirtualGateways_limit :: Lens' ListVirtualGateways (Maybe Natural)

-- | The name of the service mesh to list virtual gateways in.
listVirtualGateways_meshName :: Lens' ListVirtualGateways Text

-- | <i>See:</i> <a>newListVirtualGatewaysResponse</a> smart constructor.
data ListVirtualGatewaysResponse
ListVirtualGatewaysResponse' :: Maybe Text -> Int -> [VirtualGatewayRef] -> ListVirtualGatewaysResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListVirtualGateways</tt> request. When the results of a
--   <tt>ListVirtualGateways</tt> request exceed <tt>limit</tt>, you can
--   use this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
[$sel:nextToken:ListVirtualGatewaysResponse'] :: ListVirtualGatewaysResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListVirtualGatewaysResponse'] :: ListVirtualGatewaysResponse -> Int

-- | The list of existing virtual gateways for the specified service mesh.
[$sel:virtualGateways:ListVirtualGatewaysResponse'] :: ListVirtualGatewaysResponse -> [VirtualGatewayRef]

-- | Create a value of <a>ListVirtualGatewaysResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVirtualGateways'</a>,
--   <a>listVirtualGatewaysResponse_nextToken</a> - The <tt>nextToken</tt>
--   value to include in a future <tt>ListVirtualGateways</tt> request.
--   When the results of a <tt>ListVirtualGateways</tt> request exceed
--   <tt>limit</tt>, you can use this value to retrieve the next page of
--   results. This value is <tt>null</tt> when there are no more results to
--   return.
--   
--   <a>$sel:httpStatus:ListVirtualGatewaysResponse'</a>,
--   <a>listVirtualGatewaysResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualGateways:ListVirtualGatewaysResponse'</a>,
--   <a>listVirtualGatewaysResponse_virtualGateways</a> - The list of
--   existing virtual gateways for the specified service mesh.
newListVirtualGatewaysResponse :: Int -> ListVirtualGatewaysResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListVirtualGateways</tt> request. When the results of a
--   <tt>ListVirtualGateways</tt> request exceed <tt>limit</tt>, you can
--   use this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listVirtualGatewaysResponse_nextToken :: Lens' ListVirtualGatewaysResponse (Maybe Text)

-- | The response's http status code.
listVirtualGatewaysResponse_httpStatus :: Lens' ListVirtualGatewaysResponse Int

-- | The list of existing virtual gateways for the specified service mesh.
listVirtualGatewaysResponse_virtualGateways :: Lens' ListVirtualGatewaysResponse [VirtualGatewayRef]
instance GHC.Generics.Generic Amazonka.AppMesh.ListVirtualGateways.ListVirtualGateways
instance GHC.Show.Show Amazonka.AppMesh.ListVirtualGateways.ListVirtualGateways
instance GHC.Read.Read Amazonka.AppMesh.ListVirtualGateways.ListVirtualGateways
instance GHC.Classes.Eq Amazonka.AppMesh.ListVirtualGateways.ListVirtualGateways
instance GHC.Generics.Generic Amazonka.AppMesh.ListVirtualGateways.ListVirtualGatewaysResponse
instance GHC.Show.Show Amazonka.AppMesh.ListVirtualGateways.ListVirtualGatewaysResponse
instance GHC.Read.Read Amazonka.AppMesh.ListVirtualGateways.ListVirtualGatewaysResponse
instance GHC.Classes.Eq Amazonka.AppMesh.ListVirtualGateways.ListVirtualGatewaysResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.ListVirtualGateways.ListVirtualGateways
instance Control.DeepSeq.NFData Amazonka.AppMesh.ListVirtualGateways.ListVirtualGatewaysResponse
instance Amazonka.Pager.AWSPager Amazonka.AppMesh.ListVirtualGateways.ListVirtualGateways
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.ListVirtualGateways.ListVirtualGateways
instance Control.DeepSeq.NFData Amazonka.AppMesh.ListVirtualGateways.ListVirtualGateways
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.ListVirtualGateways.ListVirtualGateways
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.ListVirtualGateways.ListVirtualGateways
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.ListVirtualGateways.ListVirtualGateways


-- | List the tags for an App Mesh resource.
--   
--   This operation returns paginated results.
module Amazonka.AppMesh.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Maybe Natural -> Text -> ListTagsForResource

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListTagsForResource</tt> request where <tt>limit</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
[$sel:nextToken:ListTagsForResource'] :: ListTagsForResource -> Maybe Text

-- | The maximum number of tag results returned by
--   <tt>ListTagsForResource</tt> in paginated output. When this parameter
--   is used, <tt>ListTagsForResource</tt> returns only <tt>limit</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. You can see the remaining results of the initial request by
--   sending another <tt>ListTagsForResource</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListTagsForResource</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
[$sel:limit:ListTagsForResource'] :: ListTagsForResource -> Maybe Natural

-- | The Amazon Resource Name (ARN) that identifies the resource to list
--   the tags for.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated <tt>ListTagsForResource</tt>
--   request where <tt>limit</tt> was used and the results exceeded the
--   value of that parameter. Pagination continues from the end of the
--   previous results that returned the <tt>nextToken</tt> value.
--   
--   <a>$sel:limit:ListTagsForResource'</a>,
--   <a>listTagsForResource_limit</a> - The maximum number of tag results
--   returned by <tt>ListTagsForResource</tt> in paginated output. When
--   this parameter is used, <tt>ListTagsForResource</tt> returns only
--   <tt>limit</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListTagsForResource</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If you don't use this parameter,
--   <tt>ListTagsForResource</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) that identifies the resource to list the tags for.
newListTagsForResource :: Text -> ListTagsForResource

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListTagsForResource</tt> request where <tt>limit</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | The maximum number of tag results returned by
--   <tt>ListTagsForResource</tt> in paginated output. When this parameter
--   is used, <tt>ListTagsForResource</tt> returns only <tt>limit</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. You can see the remaining results of the initial request by
--   sending another <tt>ListTagsForResource</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListTagsForResource</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
listTagsForResource_limit :: Lens' ListTagsForResource (Maybe Natural)

-- | The Amazon Resource Name (ARN) that identifies the resource to list
--   the tags for.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Int -> [TagRef] -> ListTagsForResourceResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListTagsForResource</tt> request. When the results of a
--   <tt>ListTagsForResource</tt> request exceed <tt>limit</tt>, you can
--   use this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
[$sel:nextToken:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | The tags for the resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> [TagRef]

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - The <tt>nextToken</tt>
--   value to include in a future <tt>ListTagsForResource</tt> request.
--   When the results of a <tt>ListTagsForResource</tt> request exceed
--   <tt>limit</tt>, you can use this value to retrieve the next page of
--   results. This value is <tt>null</tt> when there are no more results to
--   return.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags for the resource.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListTagsForResource</tt> request. When the results of a
--   <tt>ListTagsForResource</tt> request exceed <tt>limit</tt>, you can
--   use this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The tags for the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse [TagRef]
instance GHC.Generics.Generic Amazonka.AppMesh.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.AppMesh.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.AppMesh.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.AppMesh.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.AppMesh.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.AppMesh.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.AppMesh.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.AppMesh.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.AppMesh.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Pager.AWSPager Amazonka.AppMesh.ListTagsForResource.ListTagsForResource
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.AppMesh.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.ListTagsForResource.ListTagsForResource


-- | Returns a list of existing routes in a service mesh.
--   
--   This operation returns paginated results.
module Amazonka.AppMesh.ListRoutes

-- | <i>See:</i> <a>newListRoutes</a> smart constructor.
data ListRoutes
ListRoutes' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> Text -> ListRoutes

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:ListRoutes'] :: ListRoutes -> Maybe Text

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListRoutes</tt> request where <tt>limit</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
[$sel:nextToken:ListRoutes'] :: ListRoutes -> Maybe Text

-- | The maximum number of results returned by <tt>ListRoutes</tt> in
--   paginated output. When you use this parameter, <tt>ListRoutes</tt>
--   returns only <tt>limit</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListRoutes</tt> request
--   with the returned <tt>nextToken</tt> value. This value can be between
--   1 and 100. If you don't use this parameter, <tt>ListRoutes</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
[$sel:limit:ListRoutes'] :: ListRoutes -> Maybe Natural

-- | The name of the service mesh to list routes in.
[$sel:meshName:ListRoutes'] :: ListRoutes -> Text

-- | The name of the virtual router to list routes in.
[$sel:virtualRouterName:ListRoutes'] :: ListRoutes -> Text

-- | Create a value of <a>ListRoutes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:ListRoutes'</a>, <a>listRoutes_meshOwner</a> - The
--   AWS IAM account ID of the service mesh owner. If the account ID is not
--   your own, then it's the ID of the account that shared the mesh with
--   your account. For more information about mesh sharing, see <a>Working
--   with shared meshes</a>.
--   
--   <a>$sel:nextToken:ListRoutes'</a>, <a>listRoutes_nextToken</a> - The
--   <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListRoutes</tt> request where <tt>limit</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   <a>$sel:limit:ListRoutes'</a>, <a>listRoutes_limit</a> - The maximum
--   number of results returned by <tt>ListRoutes</tt> in paginated output.
--   When you use this parameter, <tt>ListRoutes</tt> returns only
--   <tt>limit</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListRoutes</tt> request
--   with the returned <tt>nextToken</tt> value. This value can be between
--   1 and 100. If you don't use this parameter, <tt>ListRoutes</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
--   
--   <a>$sel:meshName:ListRoutes'</a>, <a>listRoutes_meshName</a> - The
--   name of the service mesh to list routes in.
--   
--   <a>$sel:virtualRouterName:ListRoutes'</a>,
--   <a>listRoutes_virtualRouterName</a> - The name of the virtual router
--   to list routes in.
newListRoutes :: Text -> Text -> ListRoutes

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
listRoutes_meshOwner :: Lens' ListRoutes (Maybe Text)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListRoutes</tt> request where <tt>limit</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listRoutes_nextToken :: Lens' ListRoutes (Maybe Text)

-- | The maximum number of results returned by <tt>ListRoutes</tt> in
--   paginated output. When you use this parameter, <tt>ListRoutes</tt>
--   returns only <tt>limit</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListRoutes</tt> request
--   with the returned <tt>nextToken</tt> value. This value can be between
--   1 and 100. If you don't use this parameter, <tt>ListRoutes</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
listRoutes_limit :: Lens' ListRoutes (Maybe Natural)

-- | The name of the service mesh to list routes in.
listRoutes_meshName :: Lens' ListRoutes Text

-- | The name of the virtual router to list routes in.
listRoutes_virtualRouterName :: Lens' ListRoutes Text

-- | <i>See:</i> <a>newListRoutesResponse</a> smart constructor.
data ListRoutesResponse
ListRoutesResponse' :: Maybe Text -> Int -> [RouteRef] -> ListRoutesResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListRoutes</tt> request. When the results of a <tt>ListRoutes</tt>
--   request exceed <tt>limit</tt>, you can use this value to retrieve the
--   next page of results. This value is <tt>null</tt> when there are no
--   more results to return.
[$sel:nextToken:ListRoutesResponse'] :: ListRoutesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListRoutesResponse'] :: ListRoutesResponse -> Int

-- | The list of existing routes for the specified service mesh and virtual
--   router.
[$sel:routes:ListRoutesResponse'] :: ListRoutesResponse -> [RouteRef]

-- | Create a value of <a>ListRoutesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRoutes'</a>, <a>listRoutesResponse_nextToken</a>
--   - The <tt>nextToken</tt> value to include in a future
--   <tt>ListRoutes</tt> request. When the results of a <tt>ListRoutes</tt>
--   request exceed <tt>limit</tt>, you can use this value to retrieve the
--   next page of results. This value is <tt>null</tt> when there are no
--   more results to return.
--   
--   <a>$sel:httpStatus:ListRoutesResponse'</a>,
--   <a>listRoutesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:routes:ListRoutesResponse'</a>,
--   <a>listRoutesResponse_routes</a> - The list of existing routes for the
--   specified service mesh and virtual router.
newListRoutesResponse :: Int -> ListRoutesResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListRoutes</tt> request. When the results of a <tt>ListRoutes</tt>
--   request exceed <tt>limit</tt>, you can use this value to retrieve the
--   next page of results. This value is <tt>null</tt> when there are no
--   more results to return.
listRoutesResponse_nextToken :: Lens' ListRoutesResponse (Maybe Text)

-- | The response's http status code.
listRoutesResponse_httpStatus :: Lens' ListRoutesResponse Int

-- | The list of existing routes for the specified service mesh and virtual
--   router.
listRoutesResponse_routes :: Lens' ListRoutesResponse [RouteRef]
instance GHC.Generics.Generic Amazonka.AppMesh.ListRoutes.ListRoutes
instance GHC.Show.Show Amazonka.AppMesh.ListRoutes.ListRoutes
instance GHC.Read.Read Amazonka.AppMesh.ListRoutes.ListRoutes
instance GHC.Classes.Eq Amazonka.AppMesh.ListRoutes.ListRoutes
instance GHC.Generics.Generic Amazonka.AppMesh.ListRoutes.ListRoutesResponse
instance GHC.Show.Show Amazonka.AppMesh.ListRoutes.ListRoutesResponse
instance GHC.Read.Read Amazonka.AppMesh.ListRoutes.ListRoutesResponse
instance GHC.Classes.Eq Amazonka.AppMesh.ListRoutes.ListRoutesResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.ListRoutes.ListRoutes
instance Control.DeepSeq.NFData Amazonka.AppMesh.ListRoutes.ListRoutesResponse
instance Amazonka.Pager.AWSPager Amazonka.AppMesh.ListRoutes.ListRoutes
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.ListRoutes.ListRoutes
instance Control.DeepSeq.NFData Amazonka.AppMesh.ListRoutes.ListRoutes
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.ListRoutes.ListRoutes
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.ListRoutes.ListRoutes
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.ListRoutes.ListRoutes


-- | Returns a list of existing service meshes.
--   
--   This operation returns paginated results.
module Amazonka.AppMesh.ListMeshes

-- | <i>See:</i> <a>newListMeshes</a> smart constructor.
data ListMeshes
ListMeshes' :: Maybe Text -> Maybe Natural -> ListMeshes

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListMeshes</tt> request where <tt>limit</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
[$sel:nextToken:ListMeshes'] :: ListMeshes -> Maybe Text

-- | The maximum number of results returned by <tt>ListMeshes</tt> in
--   paginated output. When you use this parameter, <tt>ListMeshes</tt>
--   returns only <tt>limit</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListMeshes</tt> request
--   with the returned <tt>nextToken</tt> value. This value can be between
--   1 and 100. If you don't use this parameter, <tt>ListMeshes</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
[$sel:limit:ListMeshes'] :: ListMeshes -> Maybe Natural

-- | Create a value of <a>ListMeshes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMeshes'</a>, <a>listMeshes_nextToken</a> - The
--   <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListMeshes</tt> request where <tt>limit</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:limit:ListMeshes'</a>, <a>listMeshes_limit</a> - The maximum
--   number of results returned by <tt>ListMeshes</tt> in paginated output.
--   When you use this parameter, <tt>ListMeshes</tt> returns only
--   <tt>limit</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListMeshes</tt> request
--   with the returned <tt>nextToken</tt> value. This value can be between
--   1 and 100. If you don't use this parameter, <tt>ListMeshes</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
newListMeshes :: ListMeshes

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListMeshes</tt> request where <tt>limit</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
listMeshes_nextToken :: Lens' ListMeshes (Maybe Text)

-- | The maximum number of results returned by <tt>ListMeshes</tt> in
--   paginated output. When you use this parameter, <tt>ListMeshes</tt>
--   returns only <tt>limit</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListMeshes</tt> request
--   with the returned <tt>nextToken</tt> value. This value can be between
--   1 and 100. If you don't use this parameter, <tt>ListMeshes</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
listMeshes_limit :: Lens' ListMeshes (Maybe Natural)

-- | <i>See:</i> <a>newListMeshesResponse</a> smart constructor.
data ListMeshesResponse
ListMeshesResponse' :: Maybe Text -> Int -> [MeshRef] -> ListMeshesResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListMeshes</tt> request. When the results of a <tt>ListMeshes</tt>
--   request exceed <tt>limit</tt>, you can use this value to retrieve the
--   next page of results. This value is <tt>null</tt> when there are no
--   more results to return.
[$sel:nextToken:ListMeshesResponse'] :: ListMeshesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListMeshesResponse'] :: ListMeshesResponse -> Int

-- | The list of existing service meshes.
[$sel:meshes:ListMeshesResponse'] :: ListMeshesResponse -> [MeshRef]

-- | Create a value of <a>ListMeshesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMeshes'</a>, <a>listMeshesResponse_nextToken</a>
--   - The <tt>nextToken</tt> value to include in a future
--   <tt>ListMeshes</tt> request. When the results of a <tt>ListMeshes</tt>
--   request exceed <tt>limit</tt>, you can use this value to retrieve the
--   next page of results. This value is <tt>null</tt> when there are no
--   more results to return.
--   
--   <a>$sel:httpStatus:ListMeshesResponse'</a>,
--   <a>listMeshesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:meshes:ListMeshesResponse'</a>,
--   <a>listMeshesResponse_meshes</a> - The list of existing service
--   meshes.
newListMeshesResponse :: Int -> ListMeshesResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListMeshes</tt> request. When the results of a <tt>ListMeshes</tt>
--   request exceed <tt>limit</tt>, you can use this value to retrieve the
--   next page of results. This value is <tt>null</tt> when there are no
--   more results to return.
listMeshesResponse_nextToken :: Lens' ListMeshesResponse (Maybe Text)

-- | The response's http status code.
listMeshesResponse_httpStatus :: Lens' ListMeshesResponse Int

-- | The list of existing service meshes.
listMeshesResponse_meshes :: Lens' ListMeshesResponse [MeshRef]
instance GHC.Generics.Generic Amazonka.AppMesh.ListMeshes.ListMeshes
instance GHC.Show.Show Amazonka.AppMesh.ListMeshes.ListMeshes
instance GHC.Read.Read Amazonka.AppMesh.ListMeshes.ListMeshes
instance GHC.Classes.Eq Amazonka.AppMesh.ListMeshes.ListMeshes
instance GHC.Generics.Generic Amazonka.AppMesh.ListMeshes.ListMeshesResponse
instance GHC.Show.Show Amazonka.AppMesh.ListMeshes.ListMeshesResponse
instance GHC.Read.Read Amazonka.AppMesh.ListMeshes.ListMeshesResponse
instance GHC.Classes.Eq Amazonka.AppMesh.ListMeshes.ListMeshesResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.ListMeshes.ListMeshes
instance Control.DeepSeq.NFData Amazonka.AppMesh.ListMeshes.ListMeshesResponse
instance Amazonka.Pager.AWSPager Amazonka.AppMesh.ListMeshes.ListMeshes
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.ListMeshes.ListMeshes
instance Control.DeepSeq.NFData Amazonka.AppMesh.ListMeshes.ListMeshes
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.ListMeshes.ListMeshes
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.ListMeshes.ListMeshes
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.ListMeshes.ListMeshes


-- | Returns a list of existing gateway routes that are associated to a
--   virtual gateway.
--   
--   This operation returns paginated results.
module Amazonka.AppMesh.ListGatewayRoutes

-- | <i>See:</i> <a>newListGatewayRoutes</a> smart constructor.
data ListGatewayRoutes
ListGatewayRoutes' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> Text -> ListGatewayRoutes

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:ListGatewayRoutes'] :: ListGatewayRoutes -> Maybe Text

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListGatewayRoutes</tt> request where <tt>limit</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
[$sel:nextToken:ListGatewayRoutes'] :: ListGatewayRoutes -> Maybe Text

-- | The maximum number of results returned by <tt>ListGatewayRoutes</tt>
--   in paginated output. When you use this parameter,
--   <tt>ListGatewayRoutes</tt> returns only <tt>limit</tt> results in a
--   single page along with a <tt>nextToken</tt> response element. You can
--   see the remaining results of the initial request by sending another
--   <tt>ListGatewayRoutes</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListGatewayRoutes</tt> returns up to 100
--   results and a <tt>nextToken</tt> value if applicable.
[$sel:limit:ListGatewayRoutes'] :: ListGatewayRoutes -> Maybe Natural

-- | The name of the service mesh to list gateway routes in.
[$sel:meshName:ListGatewayRoutes'] :: ListGatewayRoutes -> Text

-- | The name of the virtual gateway to list gateway routes in.
[$sel:virtualGatewayName:ListGatewayRoutes'] :: ListGatewayRoutes -> Text

-- | Create a value of <a>ListGatewayRoutes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:ListGatewayRoutes'</a>,
--   <a>listGatewayRoutes_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:nextToken:ListGatewayRoutes'</a>,
--   <a>listGatewayRoutes_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated <tt>ListGatewayRoutes</tt> request
--   where <tt>limit</tt> was used and the results exceeded the value of
--   that parameter. Pagination continues from the end of the previous
--   results that returned the <tt>nextToken</tt> value.
--   
--   <a>$sel:limit:ListGatewayRoutes'</a>, <a>listGatewayRoutes_limit</a> -
--   The maximum number of results returned by <tt>ListGatewayRoutes</tt>
--   in paginated output. When you use this parameter,
--   <tt>ListGatewayRoutes</tt> returns only <tt>limit</tt> results in a
--   single page along with a <tt>nextToken</tt> response element. You can
--   see the remaining results of the initial request by sending another
--   <tt>ListGatewayRoutes</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListGatewayRoutes</tt> returns up to 100
--   results and a <tt>nextToken</tt> value if applicable.
--   
--   <a>$sel:meshName:ListGatewayRoutes'</a>,
--   <a>listGatewayRoutes_meshName</a> - The name of the service mesh to
--   list gateway routes in.
--   
--   <a>$sel:virtualGatewayName:ListGatewayRoutes'</a>,
--   <a>listGatewayRoutes_virtualGatewayName</a> - The name of the virtual
--   gateway to list gateway routes in.
newListGatewayRoutes :: Text -> Text -> ListGatewayRoutes

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
listGatewayRoutes_meshOwner :: Lens' ListGatewayRoutes (Maybe Text)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListGatewayRoutes</tt> request where <tt>limit</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listGatewayRoutes_nextToken :: Lens' ListGatewayRoutes (Maybe Text)

-- | The maximum number of results returned by <tt>ListGatewayRoutes</tt>
--   in paginated output. When you use this parameter,
--   <tt>ListGatewayRoutes</tt> returns only <tt>limit</tt> results in a
--   single page along with a <tt>nextToken</tt> response element. You can
--   see the remaining results of the initial request by sending another
--   <tt>ListGatewayRoutes</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListGatewayRoutes</tt> returns up to 100
--   results and a <tt>nextToken</tt> value if applicable.
listGatewayRoutes_limit :: Lens' ListGatewayRoutes (Maybe Natural)

-- | The name of the service mesh to list gateway routes in.
listGatewayRoutes_meshName :: Lens' ListGatewayRoutes Text

-- | The name of the virtual gateway to list gateway routes in.
listGatewayRoutes_virtualGatewayName :: Lens' ListGatewayRoutes Text

-- | <i>See:</i> <a>newListGatewayRoutesResponse</a> smart constructor.
data ListGatewayRoutesResponse
ListGatewayRoutesResponse' :: Maybe Text -> Int -> [GatewayRouteRef] -> ListGatewayRoutesResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListGatewayRoutes</tt> request. When the results of a
--   <tt>ListGatewayRoutes</tt> request exceed <tt>limit</tt>, you can use
--   this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
[$sel:nextToken:ListGatewayRoutesResponse'] :: ListGatewayRoutesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListGatewayRoutesResponse'] :: ListGatewayRoutesResponse -> Int

-- | The list of existing gateway routes for the specified service mesh and
--   virtual gateway.
[$sel:gatewayRoutes:ListGatewayRoutesResponse'] :: ListGatewayRoutesResponse -> [GatewayRouteRef]

-- | Create a value of <a>ListGatewayRoutesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGatewayRoutes'</a>,
--   <a>listGatewayRoutesResponse_nextToken</a> - The <tt>nextToken</tt>
--   value to include in a future <tt>ListGatewayRoutes</tt> request. When
--   the results of a <tt>ListGatewayRoutes</tt> request exceed
--   <tt>limit</tt>, you can use this value to retrieve the next page of
--   results. This value is <tt>null</tt> when there are no more results to
--   return.
--   
--   <a>$sel:httpStatus:ListGatewayRoutesResponse'</a>,
--   <a>listGatewayRoutesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:gatewayRoutes:ListGatewayRoutesResponse'</a>,
--   <a>listGatewayRoutesResponse_gatewayRoutes</a> - The list of existing
--   gateway routes for the specified service mesh and virtual gateway.
newListGatewayRoutesResponse :: Int -> ListGatewayRoutesResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListGatewayRoutes</tt> request. When the results of a
--   <tt>ListGatewayRoutes</tt> request exceed <tt>limit</tt>, you can use
--   this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listGatewayRoutesResponse_nextToken :: Lens' ListGatewayRoutesResponse (Maybe Text)

-- | The response's http status code.
listGatewayRoutesResponse_httpStatus :: Lens' ListGatewayRoutesResponse Int

-- | The list of existing gateway routes for the specified service mesh and
--   virtual gateway.
listGatewayRoutesResponse_gatewayRoutes :: Lens' ListGatewayRoutesResponse [GatewayRouteRef]
instance GHC.Generics.Generic Amazonka.AppMesh.ListGatewayRoutes.ListGatewayRoutes
instance GHC.Show.Show Amazonka.AppMesh.ListGatewayRoutes.ListGatewayRoutes
instance GHC.Read.Read Amazonka.AppMesh.ListGatewayRoutes.ListGatewayRoutes
instance GHC.Classes.Eq Amazonka.AppMesh.ListGatewayRoutes.ListGatewayRoutes
instance GHC.Generics.Generic Amazonka.AppMesh.ListGatewayRoutes.ListGatewayRoutesResponse
instance GHC.Show.Show Amazonka.AppMesh.ListGatewayRoutes.ListGatewayRoutesResponse
instance GHC.Read.Read Amazonka.AppMesh.ListGatewayRoutes.ListGatewayRoutesResponse
instance GHC.Classes.Eq Amazonka.AppMesh.ListGatewayRoutes.ListGatewayRoutesResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.ListGatewayRoutes.ListGatewayRoutes
instance Control.DeepSeq.NFData Amazonka.AppMesh.ListGatewayRoutes.ListGatewayRoutesResponse
instance Amazonka.Pager.AWSPager Amazonka.AppMesh.ListGatewayRoutes.ListGatewayRoutes
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.ListGatewayRoutes.ListGatewayRoutes
instance Control.DeepSeq.NFData Amazonka.AppMesh.ListGatewayRoutes.ListGatewayRoutes
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.ListGatewayRoutes.ListGatewayRoutes
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.ListGatewayRoutes.ListGatewayRoutes
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.ListGatewayRoutes.ListGatewayRoutes


-- | Describes an existing virtual service.
module Amazonka.AppMesh.DescribeVirtualService

-- | <i>See:</i> <a>newDescribeVirtualService</a> smart constructor.
data DescribeVirtualService
DescribeVirtualService' :: Maybe Text -> Text -> Text -> DescribeVirtualService

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:DescribeVirtualService'] :: DescribeVirtualService -> Maybe Text

-- | The name of the service mesh that the virtual service resides in.
[$sel:meshName:DescribeVirtualService'] :: DescribeVirtualService -> Text

-- | The name of the virtual service to describe.
[$sel:virtualServiceName:DescribeVirtualService'] :: DescribeVirtualService -> Text

-- | Create a value of <a>DescribeVirtualService</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DescribeVirtualService'</a>,
--   <a>describeVirtualService_meshOwner</a> - The AWS IAM account ID of
--   the service mesh owner. If the account ID is not your own, then it's
--   the ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:DescribeVirtualService'</a>,
--   <a>describeVirtualService_meshName</a> - The name of the service mesh
--   that the virtual service resides in.
--   
--   <a>$sel:virtualServiceName:DescribeVirtualService'</a>,
--   <a>describeVirtualService_virtualServiceName</a> - The name of the
--   virtual service to describe.
newDescribeVirtualService :: Text -> Text -> DescribeVirtualService

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
describeVirtualService_meshOwner :: Lens' DescribeVirtualService (Maybe Text)

-- | The name of the service mesh that the virtual service resides in.
describeVirtualService_meshName :: Lens' DescribeVirtualService Text

-- | The name of the virtual service to describe.
describeVirtualService_virtualServiceName :: Lens' DescribeVirtualService Text

-- | <i>See:</i> <a>newDescribeVirtualServiceResponse</a> smart
--   constructor.
data DescribeVirtualServiceResponse
DescribeVirtualServiceResponse' :: Int -> VirtualServiceData -> DescribeVirtualServiceResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeVirtualServiceResponse'] :: DescribeVirtualServiceResponse -> Int

-- | The full description of your virtual service.
[$sel:virtualService:DescribeVirtualServiceResponse'] :: DescribeVirtualServiceResponse -> VirtualServiceData

-- | Create a value of <a>DescribeVirtualServiceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeVirtualServiceResponse'</a>,
--   <a>describeVirtualServiceResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualService:DescribeVirtualServiceResponse'</a>,
--   <a>describeVirtualServiceResponse_virtualService</a> - The full
--   description of your virtual service.
newDescribeVirtualServiceResponse :: Int -> VirtualServiceData -> DescribeVirtualServiceResponse

-- | The response's http status code.
describeVirtualServiceResponse_httpStatus :: Lens' DescribeVirtualServiceResponse Int

-- | The full description of your virtual service.
describeVirtualServiceResponse_virtualService :: Lens' DescribeVirtualServiceResponse VirtualServiceData
instance GHC.Generics.Generic Amazonka.AppMesh.DescribeVirtualService.DescribeVirtualService
instance GHC.Show.Show Amazonka.AppMesh.DescribeVirtualService.DescribeVirtualService
instance GHC.Read.Read Amazonka.AppMesh.DescribeVirtualService.DescribeVirtualService
instance GHC.Classes.Eq Amazonka.AppMesh.DescribeVirtualService.DescribeVirtualService
instance GHC.Generics.Generic Amazonka.AppMesh.DescribeVirtualService.DescribeVirtualServiceResponse
instance GHC.Show.Show Amazonka.AppMesh.DescribeVirtualService.DescribeVirtualServiceResponse
instance GHC.Read.Read Amazonka.AppMesh.DescribeVirtualService.DescribeVirtualServiceResponse
instance GHC.Classes.Eq Amazonka.AppMesh.DescribeVirtualService.DescribeVirtualServiceResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.DescribeVirtualService.DescribeVirtualService
instance Control.DeepSeq.NFData Amazonka.AppMesh.DescribeVirtualService.DescribeVirtualServiceResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.DescribeVirtualService.DescribeVirtualService
instance Control.DeepSeq.NFData Amazonka.AppMesh.DescribeVirtualService.DescribeVirtualService
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.DescribeVirtualService.DescribeVirtualService
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.DescribeVirtualService.DescribeVirtualService
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.DescribeVirtualService.DescribeVirtualService


-- | Describes an existing virtual router.
module Amazonka.AppMesh.DescribeVirtualRouter

-- | <i>See:</i> <a>newDescribeVirtualRouter</a> smart constructor.
data DescribeVirtualRouter
DescribeVirtualRouter' :: Maybe Text -> Text -> Text -> DescribeVirtualRouter

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:DescribeVirtualRouter'] :: DescribeVirtualRouter -> Maybe Text

-- | The name of the service mesh that the virtual router resides in.
[$sel:meshName:DescribeVirtualRouter'] :: DescribeVirtualRouter -> Text

-- | The name of the virtual router to describe.
[$sel:virtualRouterName:DescribeVirtualRouter'] :: DescribeVirtualRouter -> Text

-- | Create a value of <a>DescribeVirtualRouter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DescribeVirtualRouter'</a>,
--   <a>describeVirtualRouter_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:DescribeVirtualRouter'</a>,
--   <a>describeVirtualRouter_meshName</a> - The name of the service mesh
--   that the virtual router resides in.
--   
--   <a>$sel:virtualRouterName:DescribeVirtualRouter'</a>,
--   <a>describeVirtualRouter_virtualRouterName</a> - The name of the
--   virtual router to describe.
newDescribeVirtualRouter :: Text -> Text -> DescribeVirtualRouter

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
describeVirtualRouter_meshOwner :: Lens' DescribeVirtualRouter (Maybe Text)

-- | The name of the service mesh that the virtual router resides in.
describeVirtualRouter_meshName :: Lens' DescribeVirtualRouter Text

-- | The name of the virtual router to describe.
describeVirtualRouter_virtualRouterName :: Lens' DescribeVirtualRouter Text

-- | <i>See:</i> <a>newDescribeVirtualRouterResponse</a> smart constructor.
data DescribeVirtualRouterResponse
DescribeVirtualRouterResponse' :: Int -> VirtualRouterData -> DescribeVirtualRouterResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeVirtualRouterResponse'] :: DescribeVirtualRouterResponse -> Int

-- | The full description of your virtual router.
[$sel:virtualRouter:DescribeVirtualRouterResponse'] :: DescribeVirtualRouterResponse -> VirtualRouterData

-- | Create a value of <a>DescribeVirtualRouterResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeVirtualRouterResponse'</a>,
--   <a>describeVirtualRouterResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualRouter:DescribeVirtualRouterResponse'</a>,
--   <a>describeVirtualRouterResponse_virtualRouter</a> - The full
--   description of your virtual router.
newDescribeVirtualRouterResponse :: Int -> VirtualRouterData -> DescribeVirtualRouterResponse

-- | The response's http status code.
describeVirtualRouterResponse_httpStatus :: Lens' DescribeVirtualRouterResponse Int

-- | The full description of your virtual router.
describeVirtualRouterResponse_virtualRouter :: Lens' DescribeVirtualRouterResponse VirtualRouterData
instance GHC.Generics.Generic Amazonka.AppMesh.DescribeVirtualRouter.DescribeVirtualRouter
instance GHC.Show.Show Amazonka.AppMesh.DescribeVirtualRouter.DescribeVirtualRouter
instance GHC.Read.Read Amazonka.AppMesh.DescribeVirtualRouter.DescribeVirtualRouter
instance GHC.Classes.Eq Amazonka.AppMesh.DescribeVirtualRouter.DescribeVirtualRouter
instance GHC.Generics.Generic Amazonka.AppMesh.DescribeVirtualRouter.DescribeVirtualRouterResponse
instance GHC.Show.Show Amazonka.AppMesh.DescribeVirtualRouter.DescribeVirtualRouterResponse
instance GHC.Read.Read Amazonka.AppMesh.DescribeVirtualRouter.DescribeVirtualRouterResponse
instance GHC.Classes.Eq Amazonka.AppMesh.DescribeVirtualRouter.DescribeVirtualRouterResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.DescribeVirtualRouter.DescribeVirtualRouter
instance Control.DeepSeq.NFData Amazonka.AppMesh.DescribeVirtualRouter.DescribeVirtualRouterResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.DescribeVirtualRouter.DescribeVirtualRouter
instance Control.DeepSeq.NFData Amazonka.AppMesh.DescribeVirtualRouter.DescribeVirtualRouter
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.DescribeVirtualRouter.DescribeVirtualRouter
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.DescribeVirtualRouter.DescribeVirtualRouter
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.DescribeVirtualRouter.DescribeVirtualRouter


-- | Describes an existing virtual node.
module Amazonka.AppMesh.DescribeVirtualNode

-- | <i>See:</i> <a>newDescribeVirtualNode</a> smart constructor.
data DescribeVirtualNode
DescribeVirtualNode' :: Maybe Text -> Text -> Text -> DescribeVirtualNode

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:DescribeVirtualNode'] :: DescribeVirtualNode -> Maybe Text

-- | The name of the service mesh that the virtual node resides in.
[$sel:meshName:DescribeVirtualNode'] :: DescribeVirtualNode -> Text

-- | The name of the virtual node to describe.
[$sel:virtualNodeName:DescribeVirtualNode'] :: DescribeVirtualNode -> Text

-- | Create a value of <a>DescribeVirtualNode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DescribeVirtualNode'</a>,
--   <a>describeVirtualNode_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:DescribeVirtualNode'</a>,
--   <a>describeVirtualNode_meshName</a> - The name of the service mesh
--   that the virtual node resides in.
--   
--   <a>$sel:virtualNodeName:DescribeVirtualNode'</a>,
--   <a>describeVirtualNode_virtualNodeName</a> - The name of the virtual
--   node to describe.
newDescribeVirtualNode :: Text -> Text -> DescribeVirtualNode

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
describeVirtualNode_meshOwner :: Lens' DescribeVirtualNode (Maybe Text)

-- | The name of the service mesh that the virtual node resides in.
describeVirtualNode_meshName :: Lens' DescribeVirtualNode Text

-- | The name of the virtual node to describe.
describeVirtualNode_virtualNodeName :: Lens' DescribeVirtualNode Text

-- | <i>See:</i> <a>newDescribeVirtualNodeResponse</a> smart constructor.
data DescribeVirtualNodeResponse
DescribeVirtualNodeResponse' :: Int -> VirtualNodeData -> DescribeVirtualNodeResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeVirtualNodeResponse'] :: DescribeVirtualNodeResponse -> Int

-- | The full description of your virtual node.
[$sel:virtualNode:DescribeVirtualNodeResponse'] :: DescribeVirtualNodeResponse -> VirtualNodeData

-- | Create a value of <a>DescribeVirtualNodeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeVirtualNodeResponse'</a>,
--   <a>describeVirtualNodeResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualNode:DescribeVirtualNodeResponse'</a>,
--   <a>describeVirtualNodeResponse_virtualNode</a> - The full description
--   of your virtual node.
newDescribeVirtualNodeResponse :: Int -> VirtualNodeData -> DescribeVirtualNodeResponse

-- | The response's http status code.
describeVirtualNodeResponse_httpStatus :: Lens' DescribeVirtualNodeResponse Int

-- | The full description of your virtual node.
describeVirtualNodeResponse_virtualNode :: Lens' DescribeVirtualNodeResponse VirtualNodeData
instance GHC.Generics.Generic Amazonka.AppMesh.DescribeVirtualNode.DescribeVirtualNode
instance GHC.Show.Show Amazonka.AppMesh.DescribeVirtualNode.DescribeVirtualNode
instance GHC.Read.Read Amazonka.AppMesh.DescribeVirtualNode.DescribeVirtualNode
instance GHC.Classes.Eq Amazonka.AppMesh.DescribeVirtualNode.DescribeVirtualNode
instance GHC.Generics.Generic Amazonka.AppMesh.DescribeVirtualNode.DescribeVirtualNodeResponse
instance GHC.Show.Show Amazonka.AppMesh.DescribeVirtualNode.DescribeVirtualNodeResponse
instance GHC.Read.Read Amazonka.AppMesh.DescribeVirtualNode.DescribeVirtualNodeResponse
instance GHC.Classes.Eq Amazonka.AppMesh.DescribeVirtualNode.DescribeVirtualNodeResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.DescribeVirtualNode.DescribeVirtualNode
instance Control.DeepSeq.NFData Amazonka.AppMesh.DescribeVirtualNode.DescribeVirtualNodeResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.DescribeVirtualNode.DescribeVirtualNode
instance Control.DeepSeq.NFData Amazonka.AppMesh.DescribeVirtualNode.DescribeVirtualNode
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.DescribeVirtualNode.DescribeVirtualNode
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.DescribeVirtualNode.DescribeVirtualNode
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.DescribeVirtualNode.DescribeVirtualNode


-- | Describes an existing virtual gateway.
module Amazonka.AppMesh.DescribeVirtualGateway

-- | <i>See:</i> <a>newDescribeVirtualGateway</a> smart constructor.
data DescribeVirtualGateway
DescribeVirtualGateway' :: Maybe Text -> Text -> Text -> DescribeVirtualGateway

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:DescribeVirtualGateway'] :: DescribeVirtualGateway -> Maybe Text

-- | The name of the service mesh that the gateway route resides in.
[$sel:meshName:DescribeVirtualGateway'] :: DescribeVirtualGateway -> Text

-- | The name of the virtual gateway to describe.
[$sel:virtualGatewayName:DescribeVirtualGateway'] :: DescribeVirtualGateway -> Text

-- | Create a value of <a>DescribeVirtualGateway</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DescribeVirtualGateway'</a>,
--   <a>describeVirtualGateway_meshOwner</a> - The AWS IAM account ID of
--   the service mesh owner. If the account ID is not your own, then it's
--   the ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:DescribeVirtualGateway'</a>,
--   <a>describeVirtualGateway_meshName</a> - The name of the service mesh
--   that the gateway route resides in.
--   
--   <a>$sel:virtualGatewayName:DescribeVirtualGateway'</a>,
--   <a>describeVirtualGateway_virtualGatewayName</a> - The name of the
--   virtual gateway to describe.
newDescribeVirtualGateway :: Text -> Text -> DescribeVirtualGateway

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
describeVirtualGateway_meshOwner :: Lens' DescribeVirtualGateway (Maybe Text)

-- | The name of the service mesh that the gateway route resides in.
describeVirtualGateway_meshName :: Lens' DescribeVirtualGateway Text

-- | The name of the virtual gateway to describe.
describeVirtualGateway_virtualGatewayName :: Lens' DescribeVirtualGateway Text

-- | <i>See:</i> <a>newDescribeVirtualGatewayResponse</a> smart
--   constructor.
data DescribeVirtualGatewayResponse
DescribeVirtualGatewayResponse' :: Int -> VirtualGatewayData -> DescribeVirtualGatewayResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeVirtualGatewayResponse'] :: DescribeVirtualGatewayResponse -> Int

-- | The full description of your virtual gateway.
[$sel:virtualGateway:DescribeVirtualGatewayResponse'] :: DescribeVirtualGatewayResponse -> VirtualGatewayData

-- | Create a value of <a>DescribeVirtualGatewayResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeVirtualGatewayResponse'</a>,
--   <a>describeVirtualGatewayResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualGateway:DescribeVirtualGatewayResponse'</a>,
--   <a>describeVirtualGatewayResponse_virtualGateway</a> - The full
--   description of your virtual gateway.
newDescribeVirtualGatewayResponse :: Int -> VirtualGatewayData -> DescribeVirtualGatewayResponse

-- | The response's http status code.
describeVirtualGatewayResponse_httpStatus :: Lens' DescribeVirtualGatewayResponse Int

-- | The full description of your virtual gateway.
describeVirtualGatewayResponse_virtualGateway :: Lens' DescribeVirtualGatewayResponse VirtualGatewayData
instance GHC.Generics.Generic Amazonka.AppMesh.DescribeVirtualGateway.DescribeVirtualGateway
instance GHC.Show.Show Amazonka.AppMesh.DescribeVirtualGateway.DescribeVirtualGateway
instance GHC.Read.Read Amazonka.AppMesh.DescribeVirtualGateway.DescribeVirtualGateway
instance GHC.Classes.Eq Amazonka.AppMesh.DescribeVirtualGateway.DescribeVirtualGateway
instance GHC.Generics.Generic Amazonka.AppMesh.DescribeVirtualGateway.DescribeVirtualGatewayResponse
instance GHC.Show.Show Amazonka.AppMesh.DescribeVirtualGateway.DescribeVirtualGatewayResponse
instance GHC.Read.Read Amazonka.AppMesh.DescribeVirtualGateway.DescribeVirtualGatewayResponse
instance GHC.Classes.Eq Amazonka.AppMesh.DescribeVirtualGateway.DescribeVirtualGatewayResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.DescribeVirtualGateway.DescribeVirtualGateway
instance Control.DeepSeq.NFData Amazonka.AppMesh.DescribeVirtualGateway.DescribeVirtualGatewayResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.DescribeVirtualGateway.DescribeVirtualGateway
instance Control.DeepSeq.NFData Amazonka.AppMesh.DescribeVirtualGateway.DescribeVirtualGateway
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.DescribeVirtualGateway.DescribeVirtualGateway
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.DescribeVirtualGateway.DescribeVirtualGateway
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.DescribeVirtualGateway.DescribeVirtualGateway


-- | Describes an existing route.
module Amazonka.AppMesh.DescribeRoute

-- | <i>See:</i> <a>newDescribeRoute</a> smart constructor.
data DescribeRoute
DescribeRoute' :: Maybe Text -> Text -> Text -> Text -> DescribeRoute

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:DescribeRoute'] :: DescribeRoute -> Maybe Text

-- | The name of the service mesh that the route resides in.
[$sel:meshName:DescribeRoute'] :: DescribeRoute -> Text

-- | The name of the route to describe.
[$sel:routeName:DescribeRoute'] :: DescribeRoute -> Text

-- | The name of the virtual router that the route is associated with.
[$sel:virtualRouterName:DescribeRoute'] :: DescribeRoute -> Text

-- | Create a value of <a>DescribeRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DescribeRoute'</a>, <a>describeRoute_meshOwner</a> -
--   The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:DescribeRoute'</a>, <a>describeRoute_meshName</a> -
--   The name of the service mesh that the route resides in.
--   
--   <a>$sel:routeName:DescribeRoute'</a>, <a>describeRoute_routeName</a> -
--   The name of the route to describe.
--   
--   <a>$sel:virtualRouterName:DescribeRoute'</a>,
--   <a>describeRoute_virtualRouterName</a> - The name of the virtual
--   router that the route is associated with.
newDescribeRoute :: Text -> Text -> Text -> DescribeRoute

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
describeRoute_meshOwner :: Lens' DescribeRoute (Maybe Text)

-- | The name of the service mesh that the route resides in.
describeRoute_meshName :: Lens' DescribeRoute Text

-- | The name of the route to describe.
describeRoute_routeName :: Lens' DescribeRoute Text

-- | The name of the virtual router that the route is associated with.
describeRoute_virtualRouterName :: Lens' DescribeRoute Text

-- | <i>See:</i> <a>newDescribeRouteResponse</a> smart constructor.
data DescribeRouteResponse
DescribeRouteResponse' :: Int -> RouteData -> DescribeRouteResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeRouteResponse'] :: DescribeRouteResponse -> Int

-- | The full description of your route.
[$sel:route:DescribeRouteResponse'] :: DescribeRouteResponse -> RouteData

-- | Create a value of <a>DescribeRouteResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeRouteResponse'</a>,
--   <a>describeRouteResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:route:DescribeRouteResponse'</a>,
--   <a>describeRouteResponse_route</a> - The full description of your
--   route.
newDescribeRouteResponse :: Int -> RouteData -> DescribeRouteResponse

-- | The response's http status code.
describeRouteResponse_httpStatus :: Lens' DescribeRouteResponse Int

-- | The full description of your route.
describeRouteResponse_route :: Lens' DescribeRouteResponse RouteData
instance GHC.Generics.Generic Amazonka.AppMesh.DescribeRoute.DescribeRoute
instance GHC.Show.Show Amazonka.AppMesh.DescribeRoute.DescribeRoute
instance GHC.Read.Read Amazonka.AppMesh.DescribeRoute.DescribeRoute
instance GHC.Classes.Eq Amazonka.AppMesh.DescribeRoute.DescribeRoute
instance GHC.Generics.Generic Amazonka.AppMesh.DescribeRoute.DescribeRouteResponse
instance GHC.Show.Show Amazonka.AppMesh.DescribeRoute.DescribeRouteResponse
instance GHC.Read.Read Amazonka.AppMesh.DescribeRoute.DescribeRouteResponse
instance GHC.Classes.Eq Amazonka.AppMesh.DescribeRoute.DescribeRouteResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.DescribeRoute.DescribeRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.DescribeRoute.DescribeRouteResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.DescribeRoute.DescribeRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.DescribeRoute.DescribeRoute
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.DescribeRoute.DescribeRoute
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.DescribeRoute.DescribeRoute
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.DescribeRoute.DescribeRoute


-- | Describes an existing service mesh.
module Amazonka.AppMesh.DescribeMesh

-- | <i>See:</i> <a>newDescribeMesh</a> smart constructor.
data DescribeMesh
DescribeMesh' :: Maybe Text -> Text -> DescribeMesh

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:DescribeMesh'] :: DescribeMesh -> Maybe Text

-- | The name of the service mesh to describe.
[$sel:meshName:DescribeMesh'] :: DescribeMesh -> Text

-- | Create a value of <a>DescribeMesh</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DescribeMesh'</a>, <a>describeMesh_meshOwner</a> -
--   The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:DescribeMesh'</a>, <a>describeMesh_meshName</a> - The
--   name of the service mesh to describe.
newDescribeMesh :: Text -> DescribeMesh

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
describeMesh_meshOwner :: Lens' DescribeMesh (Maybe Text)

-- | The name of the service mesh to describe.
describeMesh_meshName :: Lens' DescribeMesh Text

-- | <i>See:</i> <a>newDescribeMeshResponse</a> smart constructor.
data DescribeMeshResponse
DescribeMeshResponse' :: Int -> MeshData -> DescribeMeshResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeMeshResponse'] :: DescribeMeshResponse -> Int

-- | The full description of your service mesh.
[$sel:mesh:DescribeMeshResponse'] :: DescribeMeshResponse -> MeshData

-- | Create a value of <a>DescribeMeshResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeMeshResponse'</a>,
--   <a>describeMeshResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:mesh:DescribeMeshResponse'</a>,
--   <a>describeMeshResponse_mesh</a> - The full description of your
--   service mesh.
newDescribeMeshResponse :: Int -> MeshData -> DescribeMeshResponse

-- | The response's http status code.
describeMeshResponse_httpStatus :: Lens' DescribeMeshResponse Int

-- | The full description of your service mesh.
describeMeshResponse_mesh :: Lens' DescribeMeshResponse MeshData
instance GHC.Generics.Generic Amazonka.AppMesh.DescribeMesh.DescribeMesh
instance GHC.Show.Show Amazonka.AppMesh.DescribeMesh.DescribeMesh
instance GHC.Read.Read Amazonka.AppMesh.DescribeMesh.DescribeMesh
instance GHC.Classes.Eq Amazonka.AppMesh.DescribeMesh.DescribeMesh
instance GHC.Generics.Generic Amazonka.AppMesh.DescribeMesh.DescribeMeshResponse
instance GHC.Show.Show Amazonka.AppMesh.DescribeMesh.DescribeMeshResponse
instance GHC.Read.Read Amazonka.AppMesh.DescribeMesh.DescribeMeshResponse
instance GHC.Classes.Eq Amazonka.AppMesh.DescribeMesh.DescribeMeshResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.DescribeMesh.DescribeMesh
instance Control.DeepSeq.NFData Amazonka.AppMesh.DescribeMesh.DescribeMeshResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.DescribeMesh.DescribeMesh
instance Control.DeepSeq.NFData Amazonka.AppMesh.DescribeMesh.DescribeMesh
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.DescribeMesh.DescribeMesh
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.DescribeMesh.DescribeMesh
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.DescribeMesh.DescribeMesh


-- | Describes an existing gateway route.
module Amazonka.AppMesh.DescribeGatewayRoute

-- | <i>See:</i> <a>newDescribeGatewayRoute</a> smart constructor.
data DescribeGatewayRoute
DescribeGatewayRoute' :: Maybe Text -> Text -> Text -> Text -> DescribeGatewayRoute

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:DescribeGatewayRoute'] :: DescribeGatewayRoute -> Maybe Text

-- | The name of the gateway route to describe.
[$sel:gatewayRouteName:DescribeGatewayRoute'] :: DescribeGatewayRoute -> Text

-- | The name of the service mesh that the gateway route resides in.
[$sel:meshName:DescribeGatewayRoute'] :: DescribeGatewayRoute -> Text

-- | The name of the virtual gateway that the gateway route is associated
--   with.
[$sel:virtualGatewayName:DescribeGatewayRoute'] :: DescribeGatewayRoute -> Text

-- | Create a value of <a>DescribeGatewayRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DescribeGatewayRoute'</a>,
--   <a>describeGatewayRoute_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:gatewayRouteName:DescribeGatewayRoute'</a>,
--   <a>describeGatewayRoute_gatewayRouteName</a> - The name of the gateway
--   route to describe.
--   
--   <a>$sel:meshName:DescribeGatewayRoute'</a>,
--   <a>describeGatewayRoute_meshName</a> - The name of the service mesh
--   that the gateway route resides in.
--   
--   <a>$sel:virtualGatewayName:DescribeGatewayRoute'</a>,
--   <a>describeGatewayRoute_virtualGatewayName</a> - The name of the
--   virtual gateway that the gateway route is associated with.
newDescribeGatewayRoute :: Text -> Text -> Text -> DescribeGatewayRoute

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
describeGatewayRoute_meshOwner :: Lens' DescribeGatewayRoute (Maybe Text)

-- | The name of the gateway route to describe.
describeGatewayRoute_gatewayRouteName :: Lens' DescribeGatewayRoute Text

-- | The name of the service mesh that the gateway route resides in.
describeGatewayRoute_meshName :: Lens' DescribeGatewayRoute Text

-- | The name of the virtual gateway that the gateway route is associated
--   with.
describeGatewayRoute_virtualGatewayName :: Lens' DescribeGatewayRoute Text

-- | <i>See:</i> <a>newDescribeGatewayRouteResponse</a> smart constructor.
data DescribeGatewayRouteResponse
DescribeGatewayRouteResponse' :: Int -> GatewayRouteData -> DescribeGatewayRouteResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeGatewayRouteResponse'] :: DescribeGatewayRouteResponse -> Int

-- | The full description of your gateway route.
[$sel:gatewayRoute:DescribeGatewayRouteResponse'] :: DescribeGatewayRouteResponse -> GatewayRouteData

-- | Create a value of <a>DescribeGatewayRouteResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeGatewayRouteResponse'</a>,
--   <a>describeGatewayRouteResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:gatewayRoute:DescribeGatewayRouteResponse'</a>,
--   <a>describeGatewayRouteResponse_gatewayRoute</a> - The full
--   description of your gateway route.
newDescribeGatewayRouteResponse :: Int -> GatewayRouteData -> DescribeGatewayRouteResponse

-- | The response's http status code.
describeGatewayRouteResponse_httpStatus :: Lens' DescribeGatewayRouteResponse Int

-- | The full description of your gateway route.
describeGatewayRouteResponse_gatewayRoute :: Lens' DescribeGatewayRouteResponse GatewayRouteData
instance GHC.Generics.Generic Amazonka.AppMesh.DescribeGatewayRoute.DescribeGatewayRoute
instance GHC.Show.Show Amazonka.AppMesh.DescribeGatewayRoute.DescribeGatewayRoute
instance GHC.Read.Read Amazonka.AppMesh.DescribeGatewayRoute.DescribeGatewayRoute
instance GHC.Classes.Eq Amazonka.AppMesh.DescribeGatewayRoute.DescribeGatewayRoute
instance GHC.Generics.Generic Amazonka.AppMesh.DescribeGatewayRoute.DescribeGatewayRouteResponse
instance GHC.Show.Show Amazonka.AppMesh.DescribeGatewayRoute.DescribeGatewayRouteResponse
instance GHC.Read.Read Amazonka.AppMesh.DescribeGatewayRoute.DescribeGatewayRouteResponse
instance GHC.Classes.Eq Amazonka.AppMesh.DescribeGatewayRoute.DescribeGatewayRouteResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.DescribeGatewayRoute.DescribeGatewayRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.DescribeGatewayRoute.DescribeGatewayRouteResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.DescribeGatewayRoute.DescribeGatewayRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.DescribeGatewayRoute.DescribeGatewayRoute
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.DescribeGatewayRoute.DescribeGatewayRoute
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.DescribeGatewayRoute.DescribeGatewayRoute
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.DescribeGatewayRoute.DescribeGatewayRoute


-- | Deletes an existing virtual service.
module Amazonka.AppMesh.DeleteVirtualService

-- | <i>See:</i> <a>newDeleteVirtualService</a> smart constructor.
data DeleteVirtualService
DeleteVirtualService' :: Maybe Text -> Text -> Text -> DeleteVirtualService

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:DeleteVirtualService'] :: DeleteVirtualService -> Maybe Text

-- | The name of the service mesh to delete the virtual service in.
[$sel:meshName:DeleteVirtualService'] :: DeleteVirtualService -> Text

-- | The name of the virtual service to delete.
[$sel:virtualServiceName:DeleteVirtualService'] :: DeleteVirtualService -> Text

-- | Create a value of <a>DeleteVirtualService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DeleteVirtualService'</a>,
--   <a>deleteVirtualService_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:DeleteVirtualService'</a>,
--   <a>deleteVirtualService_meshName</a> - The name of the service mesh to
--   delete the virtual service in.
--   
--   <a>$sel:virtualServiceName:DeleteVirtualService'</a>,
--   <a>deleteVirtualService_virtualServiceName</a> - The name of the
--   virtual service to delete.
newDeleteVirtualService :: Text -> Text -> DeleteVirtualService

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
deleteVirtualService_meshOwner :: Lens' DeleteVirtualService (Maybe Text)

-- | The name of the service mesh to delete the virtual service in.
deleteVirtualService_meshName :: Lens' DeleteVirtualService Text

-- | The name of the virtual service to delete.
deleteVirtualService_virtualServiceName :: Lens' DeleteVirtualService Text

-- | <i>See:</i> <a>newDeleteVirtualServiceResponse</a> smart constructor.
data DeleteVirtualServiceResponse
DeleteVirtualServiceResponse' :: Int -> VirtualServiceData -> DeleteVirtualServiceResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteVirtualServiceResponse'] :: DeleteVirtualServiceResponse -> Int

-- | The virtual service that was deleted.
[$sel:virtualService:DeleteVirtualServiceResponse'] :: DeleteVirtualServiceResponse -> VirtualServiceData

-- | Create a value of <a>DeleteVirtualServiceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVirtualServiceResponse'</a>,
--   <a>deleteVirtualServiceResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualService:DeleteVirtualServiceResponse'</a>,
--   <a>deleteVirtualServiceResponse_virtualService</a> - The virtual
--   service that was deleted.
newDeleteVirtualServiceResponse :: Int -> VirtualServiceData -> DeleteVirtualServiceResponse

-- | The response's http status code.
deleteVirtualServiceResponse_httpStatus :: Lens' DeleteVirtualServiceResponse Int

-- | The virtual service that was deleted.
deleteVirtualServiceResponse_virtualService :: Lens' DeleteVirtualServiceResponse VirtualServiceData
instance GHC.Generics.Generic Amazonka.AppMesh.DeleteVirtualService.DeleteVirtualService
instance GHC.Show.Show Amazonka.AppMesh.DeleteVirtualService.DeleteVirtualService
instance GHC.Read.Read Amazonka.AppMesh.DeleteVirtualService.DeleteVirtualService
instance GHC.Classes.Eq Amazonka.AppMesh.DeleteVirtualService.DeleteVirtualService
instance GHC.Generics.Generic Amazonka.AppMesh.DeleteVirtualService.DeleteVirtualServiceResponse
instance GHC.Show.Show Amazonka.AppMesh.DeleteVirtualService.DeleteVirtualServiceResponse
instance GHC.Read.Read Amazonka.AppMesh.DeleteVirtualService.DeleteVirtualServiceResponse
instance GHC.Classes.Eq Amazonka.AppMesh.DeleteVirtualService.DeleteVirtualServiceResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.DeleteVirtualService.DeleteVirtualService
instance Control.DeepSeq.NFData Amazonka.AppMesh.DeleteVirtualService.DeleteVirtualServiceResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.DeleteVirtualService.DeleteVirtualService
instance Control.DeepSeq.NFData Amazonka.AppMesh.DeleteVirtualService.DeleteVirtualService
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.DeleteVirtualService.DeleteVirtualService
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.DeleteVirtualService.DeleteVirtualService
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.DeleteVirtualService.DeleteVirtualService


-- | Deletes an existing virtual router.
--   
--   You must delete any routes associated with the virtual router before
--   you can delete the router itself.
module Amazonka.AppMesh.DeleteVirtualRouter

-- | <i>See:</i> <a>newDeleteVirtualRouter</a> smart constructor.
data DeleteVirtualRouter
DeleteVirtualRouter' :: Maybe Text -> Text -> Text -> DeleteVirtualRouter

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:DeleteVirtualRouter'] :: DeleteVirtualRouter -> Maybe Text

-- | The name of the service mesh to delete the virtual router in.
[$sel:meshName:DeleteVirtualRouter'] :: DeleteVirtualRouter -> Text

-- | The name of the virtual router to delete.
[$sel:virtualRouterName:DeleteVirtualRouter'] :: DeleteVirtualRouter -> Text

-- | Create a value of <a>DeleteVirtualRouter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DeleteVirtualRouter'</a>,
--   <a>deleteVirtualRouter_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:DeleteVirtualRouter'</a>,
--   <a>deleteVirtualRouter_meshName</a> - The name of the service mesh to
--   delete the virtual router in.
--   
--   <a>$sel:virtualRouterName:DeleteVirtualRouter'</a>,
--   <a>deleteVirtualRouter_virtualRouterName</a> - The name of the virtual
--   router to delete.
newDeleteVirtualRouter :: Text -> Text -> DeleteVirtualRouter

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
deleteVirtualRouter_meshOwner :: Lens' DeleteVirtualRouter (Maybe Text)

-- | The name of the service mesh to delete the virtual router in.
deleteVirtualRouter_meshName :: Lens' DeleteVirtualRouter Text

-- | The name of the virtual router to delete.
deleteVirtualRouter_virtualRouterName :: Lens' DeleteVirtualRouter Text

-- | <i>See:</i> <a>newDeleteVirtualRouterResponse</a> smart constructor.
data DeleteVirtualRouterResponse
DeleteVirtualRouterResponse' :: Int -> VirtualRouterData -> DeleteVirtualRouterResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteVirtualRouterResponse'] :: DeleteVirtualRouterResponse -> Int

-- | The virtual router that was deleted.
[$sel:virtualRouter:DeleteVirtualRouterResponse'] :: DeleteVirtualRouterResponse -> VirtualRouterData

-- | Create a value of <a>DeleteVirtualRouterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVirtualRouterResponse'</a>,
--   <a>deleteVirtualRouterResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualRouter:DeleteVirtualRouterResponse'</a>,
--   <a>deleteVirtualRouterResponse_virtualRouter</a> - The virtual router
--   that was deleted.
newDeleteVirtualRouterResponse :: Int -> VirtualRouterData -> DeleteVirtualRouterResponse

-- | The response's http status code.
deleteVirtualRouterResponse_httpStatus :: Lens' DeleteVirtualRouterResponse Int

-- | The virtual router that was deleted.
deleteVirtualRouterResponse_virtualRouter :: Lens' DeleteVirtualRouterResponse VirtualRouterData
instance GHC.Generics.Generic Amazonka.AppMesh.DeleteVirtualRouter.DeleteVirtualRouter
instance GHC.Show.Show Amazonka.AppMesh.DeleteVirtualRouter.DeleteVirtualRouter
instance GHC.Read.Read Amazonka.AppMesh.DeleteVirtualRouter.DeleteVirtualRouter
instance GHC.Classes.Eq Amazonka.AppMesh.DeleteVirtualRouter.DeleteVirtualRouter
instance GHC.Generics.Generic Amazonka.AppMesh.DeleteVirtualRouter.DeleteVirtualRouterResponse
instance GHC.Show.Show Amazonka.AppMesh.DeleteVirtualRouter.DeleteVirtualRouterResponse
instance GHC.Read.Read Amazonka.AppMesh.DeleteVirtualRouter.DeleteVirtualRouterResponse
instance GHC.Classes.Eq Amazonka.AppMesh.DeleteVirtualRouter.DeleteVirtualRouterResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.DeleteVirtualRouter.DeleteVirtualRouter
instance Control.DeepSeq.NFData Amazonka.AppMesh.DeleteVirtualRouter.DeleteVirtualRouterResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.DeleteVirtualRouter.DeleteVirtualRouter
instance Control.DeepSeq.NFData Amazonka.AppMesh.DeleteVirtualRouter.DeleteVirtualRouter
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.DeleteVirtualRouter.DeleteVirtualRouter
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.DeleteVirtualRouter.DeleteVirtualRouter
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.DeleteVirtualRouter.DeleteVirtualRouter


-- | Deletes an existing virtual node.
--   
--   You must delete any virtual services that list a virtual node as a
--   service provider before you can delete the virtual node itself.
module Amazonka.AppMesh.DeleteVirtualNode

-- | Deletes a virtual node input.
--   
--   <i>See:</i> <a>newDeleteVirtualNode</a> smart constructor.
data DeleteVirtualNode
DeleteVirtualNode' :: Maybe Text -> Text -> Text -> DeleteVirtualNode

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:DeleteVirtualNode'] :: DeleteVirtualNode -> Maybe Text

-- | The name of the service mesh to delete the virtual node in.
[$sel:meshName:DeleteVirtualNode'] :: DeleteVirtualNode -> Text

-- | The name of the virtual node to delete.
[$sel:virtualNodeName:DeleteVirtualNode'] :: DeleteVirtualNode -> Text

-- | Create a value of <a>DeleteVirtualNode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DeleteVirtualNode'</a>,
--   <a>deleteVirtualNode_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:DeleteVirtualNode'</a>,
--   <a>deleteVirtualNode_meshName</a> - The name of the service mesh to
--   delete the virtual node in.
--   
--   <a>$sel:virtualNodeName:DeleteVirtualNode'</a>,
--   <a>deleteVirtualNode_virtualNodeName</a> - The name of the virtual
--   node to delete.
newDeleteVirtualNode :: Text -> Text -> DeleteVirtualNode

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
deleteVirtualNode_meshOwner :: Lens' DeleteVirtualNode (Maybe Text)

-- | The name of the service mesh to delete the virtual node in.
deleteVirtualNode_meshName :: Lens' DeleteVirtualNode Text

-- | The name of the virtual node to delete.
deleteVirtualNode_virtualNodeName :: Lens' DeleteVirtualNode Text

-- | <i>See:</i> <a>newDeleteVirtualNodeResponse</a> smart constructor.
data DeleteVirtualNodeResponse
DeleteVirtualNodeResponse' :: Int -> VirtualNodeData -> DeleteVirtualNodeResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteVirtualNodeResponse'] :: DeleteVirtualNodeResponse -> Int

-- | The virtual node that was deleted.
[$sel:virtualNode:DeleteVirtualNodeResponse'] :: DeleteVirtualNodeResponse -> VirtualNodeData

-- | Create a value of <a>DeleteVirtualNodeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVirtualNodeResponse'</a>,
--   <a>deleteVirtualNodeResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualNode:DeleteVirtualNodeResponse'</a>,
--   <a>deleteVirtualNodeResponse_virtualNode</a> - The virtual node that
--   was deleted.
newDeleteVirtualNodeResponse :: Int -> VirtualNodeData -> DeleteVirtualNodeResponse

-- | The response's http status code.
deleteVirtualNodeResponse_httpStatus :: Lens' DeleteVirtualNodeResponse Int

-- | The virtual node that was deleted.
deleteVirtualNodeResponse_virtualNode :: Lens' DeleteVirtualNodeResponse VirtualNodeData
instance GHC.Generics.Generic Amazonka.AppMesh.DeleteVirtualNode.DeleteVirtualNode
instance GHC.Show.Show Amazonka.AppMesh.DeleteVirtualNode.DeleteVirtualNode
instance GHC.Read.Read Amazonka.AppMesh.DeleteVirtualNode.DeleteVirtualNode
instance GHC.Classes.Eq Amazonka.AppMesh.DeleteVirtualNode.DeleteVirtualNode
instance GHC.Generics.Generic Amazonka.AppMesh.DeleteVirtualNode.DeleteVirtualNodeResponse
instance GHC.Show.Show Amazonka.AppMesh.DeleteVirtualNode.DeleteVirtualNodeResponse
instance GHC.Read.Read Amazonka.AppMesh.DeleteVirtualNode.DeleteVirtualNodeResponse
instance GHC.Classes.Eq Amazonka.AppMesh.DeleteVirtualNode.DeleteVirtualNodeResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.DeleteVirtualNode.DeleteVirtualNode
instance Control.DeepSeq.NFData Amazonka.AppMesh.DeleteVirtualNode.DeleteVirtualNodeResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.DeleteVirtualNode.DeleteVirtualNode
instance Control.DeepSeq.NFData Amazonka.AppMesh.DeleteVirtualNode.DeleteVirtualNode
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.DeleteVirtualNode.DeleteVirtualNode
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.DeleteVirtualNode.DeleteVirtualNode
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.DeleteVirtualNode.DeleteVirtualNode


-- | Deletes an existing virtual gateway. You cannot delete a virtual
--   gateway if any gateway routes are associated to it.
module Amazonka.AppMesh.DeleteVirtualGateway

-- | <i>See:</i> <a>newDeleteVirtualGateway</a> smart constructor.
data DeleteVirtualGateway
DeleteVirtualGateway' :: Maybe Text -> Text -> Text -> DeleteVirtualGateway

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:DeleteVirtualGateway'] :: DeleteVirtualGateway -> Maybe Text

-- | The name of the service mesh to delete the virtual gateway from.
[$sel:meshName:DeleteVirtualGateway'] :: DeleteVirtualGateway -> Text

-- | The name of the virtual gateway to delete.
[$sel:virtualGatewayName:DeleteVirtualGateway'] :: DeleteVirtualGateway -> Text

-- | Create a value of <a>DeleteVirtualGateway</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DeleteVirtualGateway'</a>,
--   <a>deleteVirtualGateway_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:DeleteVirtualGateway'</a>,
--   <a>deleteVirtualGateway_meshName</a> - The name of the service mesh to
--   delete the virtual gateway from.
--   
--   <a>$sel:virtualGatewayName:DeleteVirtualGateway'</a>,
--   <a>deleteVirtualGateway_virtualGatewayName</a> - The name of the
--   virtual gateway to delete.
newDeleteVirtualGateway :: Text -> Text -> DeleteVirtualGateway

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
deleteVirtualGateway_meshOwner :: Lens' DeleteVirtualGateway (Maybe Text)

-- | The name of the service mesh to delete the virtual gateway from.
deleteVirtualGateway_meshName :: Lens' DeleteVirtualGateway Text

-- | The name of the virtual gateway to delete.
deleteVirtualGateway_virtualGatewayName :: Lens' DeleteVirtualGateway Text

-- | <i>See:</i> <a>newDeleteVirtualGatewayResponse</a> smart constructor.
data DeleteVirtualGatewayResponse
DeleteVirtualGatewayResponse' :: Int -> VirtualGatewayData -> DeleteVirtualGatewayResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteVirtualGatewayResponse'] :: DeleteVirtualGatewayResponse -> Int

-- | The virtual gateway that was deleted.
[$sel:virtualGateway:DeleteVirtualGatewayResponse'] :: DeleteVirtualGatewayResponse -> VirtualGatewayData

-- | Create a value of <a>DeleteVirtualGatewayResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVirtualGatewayResponse'</a>,
--   <a>deleteVirtualGatewayResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualGateway:DeleteVirtualGatewayResponse'</a>,
--   <a>deleteVirtualGatewayResponse_virtualGateway</a> - The virtual
--   gateway that was deleted.
newDeleteVirtualGatewayResponse :: Int -> VirtualGatewayData -> DeleteVirtualGatewayResponse

-- | The response's http status code.
deleteVirtualGatewayResponse_httpStatus :: Lens' DeleteVirtualGatewayResponse Int

-- | The virtual gateway that was deleted.
deleteVirtualGatewayResponse_virtualGateway :: Lens' DeleteVirtualGatewayResponse VirtualGatewayData
instance GHC.Generics.Generic Amazonka.AppMesh.DeleteVirtualGateway.DeleteVirtualGateway
instance GHC.Show.Show Amazonka.AppMesh.DeleteVirtualGateway.DeleteVirtualGateway
instance GHC.Read.Read Amazonka.AppMesh.DeleteVirtualGateway.DeleteVirtualGateway
instance GHC.Classes.Eq Amazonka.AppMesh.DeleteVirtualGateway.DeleteVirtualGateway
instance GHC.Generics.Generic Amazonka.AppMesh.DeleteVirtualGateway.DeleteVirtualGatewayResponse
instance GHC.Show.Show Amazonka.AppMesh.DeleteVirtualGateway.DeleteVirtualGatewayResponse
instance GHC.Read.Read Amazonka.AppMesh.DeleteVirtualGateway.DeleteVirtualGatewayResponse
instance GHC.Classes.Eq Amazonka.AppMesh.DeleteVirtualGateway.DeleteVirtualGatewayResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.DeleteVirtualGateway.DeleteVirtualGateway
instance Control.DeepSeq.NFData Amazonka.AppMesh.DeleteVirtualGateway.DeleteVirtualGatewayResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.DeleteVirtualGateway.DeleteVirtualGateway
instance Control.DeepSeq.NFData Amazonka.AppMesh.DeleteVirtualGateway.DeleteVirtualGateway
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.DeleteVirtualGateway.DeleteVirtualGateway
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.DeleteVirtualGateway.DeleteVirtualGateway
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.DeleteVirtualGateway.DeleteVirtualGateway


-- | Deletes an existing route.
module Amazonka.AppMesh.DeleteRoute

-- | <i>See:</i> <a>newDeleteRoute</a> smart constructor.
data DeleteRoute
DeleteRoute' :: Maybe Text -> Text -> Text -> Text -> DeleteRoute

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:DeleteRoute'] :: DeleteRoute -> Maybe Text

-- | The name of the service mesh to delete the route in.
[$sel:meshName:DeleteRoute'] :: DeleteRoute -> Text

-- | The name of the route to delete.
[$sel:routeName:DeleteRoute'] :: DeleteRoute -> Text

-- | The name of the virtual router to delete the route in.
[$sel:virtualRouterName:DeleteRoute'] :: DeleteRoute -> Text

-- | Create a value of <a>DeleteRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DeleteRoute'</a>, <a>deleteRoute_meshOwner</a> - The
--   AWS IAM account ID of the service mesh owner. If the account ID is not
--   your own, then it's the ID of the account that shared the mesh with
--   your account. For more information about mesh sharing, see <a>Working
--   with shared meshes</a>.
--   
--   <a>$sel:meshName:DeleteRoute'</a>, <a>deleteRoute_meshName</a> - The
--   name of the service mesh to delete the route in.
--   
--   <a>$sel:routeName:DeleteRoute'</a>, <a>deleteRoute_routeName</a> - The
--   name of the route to delete.
--   
--   <a>$sel:virtualRouterName:DeleteRoute'</a>,
--   <a>deleteRoute_virtualRouterName</a> - The name of the virtual router
--   to delete the route in.
newDeleteRoute :: Text -> Text -> Text -> DeleteRoute

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
deleteRoute_meshOwner :: Lens' DeleteRoute (Maybe Text)

-- | The name of the service mesh to delete the route in.
deleteRoute_meshName :: Lens' DeleteRoute Text

-- | The name of the route to delete.
deleteRoute_routeName :: Lens' DeleteRoute Text

-- | The name of the virtual router to delete the route in.
deleteRoute_virtualRouterName :: Lens' DeleteRoute Text

-- | <i>See:</i> <a>newDeleteRouteResponse</a> smart constructor.
data DeleteRouteResponse
DeleteRouteResponse' :: Int -> RouteData -> DeleteRouteResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteRouteResponse'] :: DeleteRouteResponse -> Int

-- | The route that was deleted.
[$sel:route:DeleteRouteResponse'] :: DeleteRouteResponse -> RouteData

-- | Create a value of <a>DeleteRouteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRouteResponse'</a>,
--   <a>deleteRouteResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:route:DeleteRouteResponse'</a>,
--   <a>deleteRouteResponse_route</a> - The route that was deleted.
newDeleteRouteResponse :: Int -> RouteData -> DeleteRouteResponse

-- | The response's http status code.
deleteRouteResponse_httpStatus :: Lens' DeleteRouteResponse Int

-- | The route that was deleted.
deleteRouteResponse_route :: Lens' DeleteRouteResponse RouteData
instance GHC.Generics.Generic Amazonka.AppMesh.DeleteRoute.DeleteRoute
instance GHC.Show.Show Amazonka.AppMesh.DeleteRoute.DeleteRoute
instance GHC.Read.Read Amazonka.AppMesh.DeleteRoute.DeleteRoute
instance GHC.Classes.Eq Amazonka.AppMesh.DeleteRoute.DeleteRoute
instance GHC.Generics.Generic Amazonka.AppMesh.DeleteRoute.DeleteRouteResponse
instance GHC.Show.Show Amazonka.AppMesh.DeleteRoute.DeleteRouteResponse
instance GHC.Read.Read Amazonka.AppMesh.DeleteRoute.DeleteRouteResponse
instance GHC.Classes.Eq Amazonka.AppMesh.DeleteRoute.DeleteRouteResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.DeleteRoute.DeleteRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.DeleteRoute.DeleteRouteResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.DeleteRoute.DeleteRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.DeleteRoute.DeleteRoute
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.DeleteRoute.DeleteRoute
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.DeleteRoute.DeleteRoute
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.DeleteRoute.DeleteRoute


-- | Deletes an existing service mesh.
--   
--   You must delete all resources (virtual services, routes, virtual
--   routers, and virtual nodes) in the service mesh before you can delete
--   the mesh itself.
module Amazonka.AppMesh.DeleteMesh

-- | <i>See:</i> <a>newDeleteMesh</a> smart constructor.
data DeleteMesh
DeleteMesh' :: Text -> DeleteMesh

-- | The name of the service mesh to delete.
[$sel:meshName:DeleteMesh'] :: DeleteMesh -> Text

-- | Create a value of <a>DeleteMesh</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshName:DeleteMesh'</a>, <a>deleteMesh_meshName</a> - The
--   name of the service mesh to delete.
newDeleteMesh :: Text -> DeleteMesh

-- | The name of the service mesh to delete.
deleteMesh_meshName :: Lens' DeleteMesh Text

-- | <i>See:</i> <a>newDeleteMeshResponse</a> smart constructor.
data DeleteMeshResponse
DeleteMeshResponse' :: Int -> MeshData -> DeleteMeshResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteMeshResponse'] :: DeleteMeshResponse -> Int

-- | The service mesh that was deleted.
[$sel:mesh:DeleteMeshResponse'] :: DeleteMeshResponse -> MeshData

-- | Create a value of <a>DeleteMeshResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteMeshResponse'</a>,
--   <a>deleteMeshResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:mesh:DeleteMeshResponse'</a>, <a>deleteMeshResponse_mesh</a> -
--   The service mesh that was deleted.
newDeleteMeshResponse :: Int -> MeshData -> DeleteMeshResponse

-- | The response's http status code.
deleteMeshResponse_httpStatus :: Lens' DeleteMeshResponse Int

-- | The service mesh that was deleted.
deleteMeshResponse_mesh :: Lens' DeleteMeshResponse MeshData
instance GHC.Generics.Generic Amazonka.AppMesh.DeleteMesh.DeleteMesh
instance GHC.Show.Show Amazonka.AppMesh.DeleteMesh.DeleteMesh
instance GHC.Read.Read Amazonka.AppMesh.DeleteMesh.DeleteMesh
instance GHC.Classes.Eq Amazonka.AppMesh.DeleteMesh.DeleteMesh
instance GHC.Generics.Generic Amazonka.AppMesh.DeleteMesh.DeleteMeshResponse
instance GHC.Show.Show Amazonka.AppMesh.DeleteMesh.DeleteMeshResponse
instance GHC.Read.Read Amazonka.AppMesh.DeleteMesh.DeleteMeshResponse
instance GHC.Classes.Eq Amazonka.AppMesh.DeleteMesh.DeleteMeshResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.DeleteMesh.DeleteMesh
instance Control.DeepSeq.NFData Amazonka.AppMesh.DeleteMesh.DeleteMeshResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.DeleteMesh.DeleteMesh
instance Control.DeepSeq.NFData Amazonka.AppMesh.DeleteMesh.DeleteMesh
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.DeleteMesh.DeleteMesh
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.DeleteMesh.DeleteMesh
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.DeleteMesh.DeleteMesh


-- | Deletes an existing gateway route.
module Amazonka.AppMesh.DeleteGatewayRoute

-- | <i>See:</i> <a>newDeleteGatewayRoute</a> smart constructor.
data DeleteGatewayRoute
DeleteGatewayRoute' :: Maybe Text -> Text -> Text -> Text -> DeleteGatewayRoute

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:DeleteGatewayRoute'] :: DeleteGatewayRoute -> Maybe Text

-- | The name of the gateway route to delete.
[$sel:gatewayRouteName:DeleteGatewayRoute'] :: DeleteGatewayRoute -> Text

-- | The name of the service mesh to delete the gateway route from.
[$sel:meshName:DeleteGatewayRoute'] :: DeleteGatewayRoute -> Text

-- | The name of the virtual gateway to delete the route from.
[$sel:virtualGatewayName:DeleteGatewayRoute'] :: DeleteGatewayRoute -> Text

-- | Create a value of <a>DeleteGatewayRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DeleteGatewayRoute'</a>,
--   <a>deleteGatewayRoute_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:gatewayRouteName:DeleteGatewayRoute'</a>,
--   <a>deleteGatewayRoute_gatewayRouteName</a> - The name of the gateway
--   route to delete.
--   
--   <a>$sel:meshName:DeleteGatewayRoute'</a>,
--   <a>deleteGatewayRoute_meshName</a> - The name of the service mesh to
--   delete the gateway route from.
--   
--   <a>$sel:virtualGatewayName:DeleteGatewayRoute'</a>,
--   <a>deleteGatewayRoute_virtualGatewayName</a> - The name of the virtual
--   gateway to delete the route from.
newDeleteGatewayRoute :: Text -> Text -> Text -> DeleteGatewayRoute

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
deleteGatewayRoute_meshOwner :: Lens' DeleteGatewayRoute (Maybe Text)

-- | The name of the gateway route to delete.
deleteGatewayRoute_gatewayRouteName :: Lens' DeleteGatewayRoute Text

-- | The name of the service mesh to delete the gateway route from.
deleteGatewayRoute_meshName :: Lens' DeleteGatewayRoute Text

-- | The name of the virtual gateway to delete the route from.
deleteGatewayRoute_virtualGatewayName :: Lens' DeleteGatewayRoute Text

-- | <i>See:</i> <a>newDeleteGatewayRouteResponse</a> smart constructor.
data DeleteGatewayRouteResponse
DeleteGatewayRouteResponse' :: Int -> GatewayRouteData -> DeleteGatewayRouteResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteGatewayRouteResponse'] :: DeleteGatewayRouteResponse -> Int

-- | The gateway route that was deleted.
[$sel:gatewayRoute:DeleteGatewayRouteResponse'] :: DeleteGatewayRouteResponse -> GatewayRouteData

-- | Create a value of <a>DeleteGatewayRouteResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteGatewayRouteResponse'</a>,
--   <a>deleteGatewayRouteResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:gatewayRoute:DeleteGatewayRouteResponse'</a>,
--   <a>deleteGatewayRouteResponse_gatewayRoute</a> - The gateway route
--   that was deleted.
newDeleteGatewayRouteResponse :: Int -> GatewayRouteData -> DeleteGatewayRouteResponse

-- | The response's http status code.
deleteGatewayRouteResponse_httpStatus :: Lens' DeleteGatewayRouteResponse Int

-- | The gateway route that was deleted.
deleteGatewayRouteResponse_gatewayRoute :: Lens' DeleteGatewayRouteResponse GatewayRouteData
instance GHC.Generics.Generic Amazonka.AppMesh.DeleteGatewayRoute.DeleteGatewayRoute
instance GHC.Show.Show Amazonka.AppMesh.DeleteGatewayRoute.DeleteGatewayRoute
instance GHC.Read.Read Amazonka.AppMesh.DeleteGatewayRoute.DeleteGatewayRoute
instance GHC.Classes.Eq Amazonka.AppMesh.DeleteGatewayRoute.DeleteGatewayRoute
instance GHC.Generics.Generic Amazonka.AppMesh.DeleteGatewayRoute.DeleteGatewayRouteResponse
instance GHC.Show.Show Amazonka.AppMesh.DeleteGatewayRoute.DeleteGatewayRouteResponse
instance GHC.Read.Read Amazonka.AppMesh.DeleteGatewayRoute.DeleteGatewayRouteResponse
instance GHC.Classes.Eq Amazonka.AppMesh.DeleteGatewayRoute.DeleteGatewayRouteResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.DeleteGatewayRoute.DeleteGatewayRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.DeleteGatewayRoute.DeleteGatewayRouteResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.DeleteGatewayRoute.DeleteGatewayRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.DeleteGatewayRoute.DeleteGatewayRoute
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.DeleteGatewayRoute.DeleteGatewayRoute
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.DeleteGatewayRoute.DeleteGatewayRoute
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.DeleteGatewayRoute.DeleteGatewayRoute


-- | Creates a virtual service within a service mesh.
--   
--   A virtual service is an abstraction of a real service that is provided
--   by a virtual node directly or indirectly by means of a virtual router.
--   Dependent services call your virtual service by its
--   <tt>virtualServiceName</tt>, and those requests are routed to the
--   virtual node or virtual router that is specified as the provider for
--   the virtual service.
--   
--   For more information about virtual services, see <a>Virtual
--   services</a>.
module Amazonka.AppMesh.CreateVirtualService

-- | <i>See:</i> <a>newCreateVirtualService</a> smart constructor.
data CreateVirtualService
CreateVirtualService' :: Maybe Text -> Maybe Text -> Maybe [TagRef] -> Text -> VirtualServiceSpec -> Text -> CreateVirtualService

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
[$sel:clientToken:CreateVirtualService'] :: CreateVirtualService -> Maybe Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then the account that you specify must share the mesh
--   with your account before you can create the resource in the service
--   mesh. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
[$sel:meshOwner:CreateVirtualService'] :: CreateVirtualService -> Maybe Text

-- | Optional metadata that you can apply to the virtual service to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
[$sel:tags:CreateVirtualService'] :: CreateVirtualService -> Maybe [TagRef]

-- | The name of the service mesh to create the virtual service in.
[$sel:meshName:CreateVirtualService'] :: CreateVirtualService -> Text

-- | The virtual service specification to apply.
[$sel:spec:CreateVirtualService'] :: CreateVirtualService -> VirtualServiceSpec

-- | The name to use for the virtual service.
[$sel:virtualServiceName:CreateVirtualService'] :: CreateVirtualService -> Text

-- | Create a value of <a>CreateVirtualService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateVirtualService'</a>,
--   <a>createVirtualService_clientToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   Up to 36 letters, numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:meshOwner:CreateVirtualService'</a>,
--   <a>createVirtualService_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then the
--   account that you specify must share the mesh with your account before
--   you can create the resource in the service mesh. For more information
--   about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:tags:CreateVirtualService'</a>,
--   <a>createVirtualService_tags</a> - Optional metadata that you can
--   apply to the virtual service to assist with categorization and
--   organization. Each tag consists of a key and an optional value, both
--   of which you define. Tag keys can have a maximum character length of
--   128 characters, and tag values can have a maximum length of 256
--   characters.
--   
--   <a>$sel:meshName:CreateVirtualService'</a>,
--   <a>createVirtualService_meshName</a> - The name of the service mesh to
--   create the virtual service in.
--   
--   <a>$sel:spec:CreateVirtualService'</a>,
--   <a>createVirtualService_spec</a> - The virtual service specification
--   to apply.
--   
--   <a>$sel:virtualServiceName:CreateVirtualService'</a>,
--   <a>createVirtualService_virtualServiceName</a> - The name to use for
--   the virtual service.
newCreateVirtualService :: Text -> VirtualServiceSpec -> Text -> CreateVirtualService

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
createVirtualService_clientToken :: Lens' CreateVirtualService (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then the account that you specify must share the mesh
--   with your account before you can create the resource in the service
--   mesh. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
createVirtualService_meshOwner :: Lens' CreateVirtualService (Maybe Text)

-- | Optional metadata that you can apply to the virtual service to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
createVirtualService_tags :: Lens' CreateVirtualService (Maybe [TagRef])

-- | The name of the service mesh to create the virtual service in.
createVirtualService_meshName :: Lens' CreateVirtualService Text

-- | The virtual service specification to apply.
createVirtualService_spec :: Lens' CreateVirtualService VirtualServiceSpec

-- | The name to use for the virtual service.
createVirtualService_virtualServiceName :: Lens' CreateVirtualService Text

-- | <i>See:</i> <a>newCreateVirtualServiceResponse</a> smart constructor.
data CreateVirtualServiceResponse
CreateVirtualServiceResponse' :: Int -> VirtualServiceData -> CreateVirtualServiceResponse

-- | The response's http status code.
[$sel:httpStatus:CreateVirtualServiceResponse'] :: CreateVirtualServiceResponse -> Int

-- | The full description of your virtual service following the create
--   call.
[$sel:virtualService:CreateVirtualServiceResponse'] :: CreateVirtualServiceResponse -> VirtualServiceData

-- | Create a value of <a>CreateVirtualServiceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateVirtualServiceResponse'</a>,
--   <a>createVirtualServiceResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualService:CreateVirtualServiceResponse'</a>,
--   <a>createVirtualServiceResponse_virtualService</a> - The full
--   description of your virtual service following the create call.
newCreateVirtualServiceResponse :: Int -> VirtualServiceData -> CreateVirtualServiceResponse

-- | The response's http status code.
createVirtualServiceResponse_httpStatus :: Lens' CreateVirtualServiceResponse Int

-- | The full description of your virtual service following the create
--   call.
createVirtualServiceResponse_virtualService :: Lens' CreateVirtualServiceResponse VirtualServiceData
instance GHC.Generics.Generic Amazonka.AppMesh.CreateVirtualService.CreateVirtualService
instance GHC.Show.Show Amazonka.AppMesh.CreateVirtualService.CreateVirtualService
instance GHC.Read.Read Amazonka.AppMesh.CreateVirtualService.CreateVirtualService
instance GHC.Classes.Eq Amazonka.AppMesh.CreateVirtualService.CreateVirtualService
instance GHC.Generics.Generic Amazonka.AppMesh.CreateVirtualService.CreateVirtualServiceResponse
instance GHC.Show.Show Amazonka.AppMesh.CreateVirtualService.CreateVirtualServiceResponse
instance GHC.Read.Read Amazonka.AppMesh.CreateVirtualService.CreateVirtualServiceResponse
instance GHC.Classes.Eq Amazonka.AppMesh.CreateVirtualService.CreateVirtualServiceResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.CreateVirtualService.CreateVirtualService
instance Control.DeepSeq.NFData Amazonka.AppMesh.CreateVirtualService.CreateVirtualServiceResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.CreateVirtualService.CreateVirtualService
instance Control.DeepSeq.NFData Amazonka.AppMesh.CreateVirtualService.CreateVirtualService
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.CreateVirtualService.CreateVirtualService
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.CreateVirtualService.CreateVirtualService
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.CreateVirtualService.CreateVirtualService
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.CreateVirtualService.CreateVirtualService


-- | Creates a virtual router within a service mesh.
--   
--   Specify a <tt>listener</tt> for any inbound traffic that your virtual
--   router receives. Create a virtual router for each protocol and port
--   that you need to route. Virtual routers handle traffic for one or more
--   virtual services within your mesh. After you create your virtual
--   router, create and associate routes for your virtual router that
--   direct incoming requests to different virtual nodes.
--   
--   For more information about virtual routers, see <a>Virtual
--   routers</a>.
module Amazonka.AppMesh.CreateVirtualRouter

-- | <i>See:</i> <a>newCreateVirtualRouter</a> smart constructor.
data CreateVirtualRouter
CreateVirtualRouter' :: Maybe Text -> Maybe Text -> Maybe [TagRef] -> Text -> VirtualRouterSpec -> Text -> CreateVirtualRouter

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
[$sel:clientToken:CreateVirtualRouter'] :: CreateVirtualRouter -> Maybe Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then the account that you specify must share the mesh
--   with your account before you can create the resource in the service
--   mesh. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
[$sel:meshOwner:CreateVirtualRouter'] :: CreateVirtualRouter -> Maybe Text

-- | Optional metadata that you can apply to the virtual router to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
[$sel:tags:CreateVirtualRouter'] :: CreateVirtualRouter -> Maybe [TagRef]

-- | The name of the service mesh to create the virtual router in.
[$sel:meshName:CreateVirtualRouter'] :: CreateVirtualRouter -> Text

-- | The virtual router specification to apply.
[$sel:spec:CreateVirtualRouter'] :: CreateVirtualRouter -> VirtualRouterSpec

-- | The name to use for the virtual router.
[$sel:virtualRouterName:CreateVirtualRouter'] :: CreateVirtualRouter -> Text

-- | Create a value of <a>CreateVirtualRouter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateVirtualRouter'</a>,
--   <a>createVirtualRouter_clientToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   Up to 36 letters, numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:meshOwner:CreateVirtualRouter'</a>,
--   <a>createVirtualRouter_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then the
--   account that you specify must share the mesh with your account before
--   you can create the resource in the service mesh. For more information
--   about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:tags:CreateVirtualRouter'</a>, <a>createVirtualRouter_tags</a>
--   - Optional metadata that you can apply to the virtual router to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
--   
--   <a>$sel:meshName:CreateVirtualRouter'</a>,
--   <a>createVirtualRouter_meshName</a> - The name of the service mesh to
--   create the virtual router in.
--   
--   <a>$sel:spec:CreateVirtualRouter'</a>, <a>createVirtualRouter_spec</a>
--   - The virtual router specification to apply.
--   
--   <a>$sel:virtualRouterName:CreateVirtualRouter'</a>,
--   <a>createVirtualRouter_virtualRouterName</a> - The name to use for the
--   virtual router.
newCreateVirtualRouter :: Text -> VirtualRouterSpec -> Text -> CreateVirtualRouter

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
createVirtualRouter_clientToken :: Lens' CreateVirtualRouter (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then the account that you specify must share the mesh
--   with your account before you can create the resource in the service
--   mesh. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
createVirtualRouter_meshOwner :: Lens' CreateVirtualRouter (Maybe Text)

-- | Optional metadata that you can apply to the virtual router to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
createVirtualRouter_tags :: Lens' CreateVirtualRouter (Maybe [TagRef])

-- | The name of the service mesh to create the virtual router in.
createVirtualRouter_meshName :: Lens' CreateVirtualRouter Text

-- | The virtual router specification to apply.
createVirtualRouter_spec :: Lens' CreateVirtualRouter VirtualRouterSpec

-- | The name to use for the virtual router.
createVirtualRouter_virtualRouterName :: Lens' CreateVirtualRouter Text

-- | <i>See:</i> <a>newCreateVirtualRouterResponse</a> smart constructor.
data CreateVirtualRouterResponse
CreateVirtualRouterResponse' :: Int -> VirtualRouterData -> CreateVirtualRouterResponse

-- | The response's http status code.
[$sel:httpStatus:CreateVirtualRouterResponse'] :: CreateVirtualRouterResponse -> Int

-- | The full description of your virtual router following the create call.
[$sel:virtualRouter:CreateVirtualRouterResponse'] :: CreateVirtualRouterResponse -> VirtualRouterData

-- | Create a value of <a>CreateVirtualRouterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateVirtualRouterResponse'</a>,
--   <a>createVirtualRouterResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualRouter:CreateVirtualRouterResponse'</a>,
--   <a>createVirtualRouterResponse_virtualRouter</a> - The full
--   description of your virtual router following the create call.
newCreateVirtualRouterResponse :: Int -> VirtualRouterData -> CreateVirtualRouterResponse

-- | The response's http status code.
createVirtualRouterResponse_httpStatus :: Lens' CreateVirtualRouterResponse Int

-- | The full description of your virtual router following the create call.
createVirtualRouterResponse_virtualRouter :: Lens' CreateVirtualRouterResponse VirtualRouterData
instance GHC.Generics.Generic Amazonka.AppMesh.CreateVirtualRouter.CreateVirtualRouter
instance GHC.Show.Show Amazonka.AppMesh.CreateVirtualRouter.CreateVirtualRouter
instance GHC.Read.Read Amazonka.AppMesh.CreateVirtualRouter.CreateVirtualRouter
instance GHC.Classes.Eq Amazonka.AppMesh.CreateVirtualRouter.CreateVirtualRouter
instance GHC.Generics.Generic Amazonka.AppMesh.CreateVirtualRouter.CreateVirtualRouterResponse
instance GHC.Show.Show Amazonka.AppMesh.CreateVirtualRouter.CreateVirtualRouterResponse
instance GHC.Read.Read Amazonka.AppMesh.CreateVirtualRouter.CreateVirtualRouterResponse
instance GHC.Classes.Eq Amazonka.AppMesh.CreateVirtualRouter.CreateVirtualRouterResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.CreateVirtualRouter.CreateVirtualRouter
instance Control.DeepSeq.NFData Amazonka.AppMesh.CreateVirtualRouter.CreateVirtualRouterResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.CreateVirtualRouter.CreateVirtualRouter
instance Control.DeepSeq.NFData Amazonka.AppMesh.CreateVirtualRouter.CreateVirtualRouter
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.CreateVirtualRouter.CreateVirtualRouter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.CreateVirtualRouter.CreateVirtualRouter
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.CreateVirtualRouter.CreateVirtualRouter
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.CreateVirtualRouter.CreateVirtualRouter


-- | Creates a virtual node within a service mesh.
--   
--   A virtual node acts as a logical pointer to a particular task group,
--   such as an Amazon ECS service or a Kubernetes deployment. When you
--   create a virtual node, you can specify the service discovery
--   information for your task group, and whether the proxy running in a
--   task group will communicate with other proxies using Transport Layer
--   Security (TLS).
--   
--   You define a <tt>listener</tt> for any inbound traffic that your
--   virtual node expects. Any virtual service that your virtual node
--   expects to communicate to is specified as a <tt>backend</tt>.
--   
--   The response metadata for your new virtual node contains the
--   <tt>arn</tt> that is associated with the virtual node. Set this value
--   to the full ARN; for example,
--   <tt>arn:aws:appmesh:us-west-2:123456789012:myMesh/default/virtualNode/myApp</tt>)
--   as the <tt>APPMESH_RESOURCE_ARN</tt> environment variable for your
--   task group's Envoy proxy container in your task definition or pod
--   spec. This is then mapped to the <tt>node.id</tt> and
--   <tt>node.cluster</tt> Envoy parameters.
--   
--   By default, App Mesh uses the name of the resource you specified in
--   <tt>APPMESH_RESOURCE_ARN</tt> when Envoy is referring to itself in
--   metrics and traces. You can override this behavior by setting the
--   <tt>APPMESH_RESOURCE_CLUSTER</tt> environment variable with your own
--   name.
--   
--   For more information about virtual nodes, see <a>Virtual nodes</a>.
--   You must be using <tt>1.15.0</tt> or later of the Envoy image when
--   setting these variables. For more information aboutApp Mesh Envoy
--   variables, see <a>Envoy image</a> in the AWS App Mesh User Guide.
module Amazonka.AppMesh.CreateVirtualNode

-- | <i>See:</i> <a>newCreateVirtualNode</a> smart constructor.
data CreateVirtualNode
CreateVirtualNode' :: Maybe Text -> Maybe Text -> Maybe [TagRef] -> Text -> VirtualNodeSpec -> Text -> CreateVirtualNode

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
[$sel:clientToken:CreateVirtualNode'] :: CreateVirtualNode -> Maybe Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then the account that you specify must share the mesh
--   with your account before you can create the resource in the service
--   mesh. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
[$sel:meshOwner:CreateVirtualNode'] :: CreateVirtualNode -> Maybe Text

-- | Optional metadata that you can apply to the virtual node to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
[$sel:tags:CreateVirtualNode'] :: CreateVirtualNode -> Maybe [TagRef]

-- | The name of the service mesh to create the virtual node in.
[$sel:meshName:CreateVirtualNode'] :: CreateVirtualNode -> Text

-- | The virtual node specification to apply.
[$sel:spec:CreateVirtualNode'] :: CreateVirtualNode -> VirtualNodeSpec

-- | The name to use for the virtual node.
[$sel:virtualNodeName:CreateVirtualNode'] :: CreateVirtualNode -> Text

-- | Create a value of <a>CreateVirtualNode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateVirtualNode'</a>,
--   <a>createVirtualNode_clientToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   Up to 36 letters, numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:meshOwner:CreateVirtualNode'</a>,
--   <a>createVirtualNode_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then the
--   account that you specify must share the mesh with your account before
--   you can create the resource in the service mesh. For more information
--   about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:tags:CreateVirtualNode'</a>, <a>createVirtualNode_tags</a> -
--   Optional metadata that you can apply to the virtual node to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
--   
--   <a>$sel:meshName:CreateVirtualNode'</a>,
--   <a>createVirtualNode_meshName</a> - The name of the service mesh to
--   create the virtual node in.
--   
--   <a>$sel:spec:CreateVirtualNode'</a>, <a>createVirtualNode_spec</a> -
--   The virtual node specification to apply.
--   
--   <a>$sel:virtualNodeName:CreateVirtualNode'</a>,
--   <a>createVirtualNode_virtualNodeName</a> - The name to use for the
--   virtual node.
newCreateVirtualNode :: Text -> VirtualNodeSpec -> Text -> CreateVirtualNode

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
createVirtualNode_clientToken :: Lens' CreateVirtualNode (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then the account that you specify must share the mesh
--   with your account before you can create the resource in the service
--   mesh. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
createVirtualNode_meshOwner :: Lens' CreateVirtualNode (Maybe Text)

-- | Optional metadata that you can apply to the virtual node to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
createVirtualNode_tags :: Lens' CreateVirtualNode (Maybe [TagRef])

-- | The name of the service mesh to create the virtual node in.
createVirtualNode_meshName :: Lens' CreateVirtualNode Text

-- | The virtual node specification to apply.
createVirtualNode_spec :: Lens' CreateVirtualNode VirtualNodeSpec

-- | The name to use for the virtual node.
createVirtualNode_virtualNodeName :: Lens' CreateVirtualNode Text

-- | <i>See:</i> <a>newCreateVirtualNodeResponse</a> smart constructor.
data CreateVirtualNodeResponse
CreateVirtualNodeResponse' :: Int -> VirtualNodeData -> CreateVirtualNodeResponse

-- | The response's http status code.
[$sel:httpStatus:CreateVirtualNodeResponse'] :: CreateVirtualNodeResponse -> Int

-- | The full description of your virtual node following the create call.
[$sel:virtualNode:CreateVirtualNodeResponse'] :: CreateVirtualNodeResponse -> VirtualNodeData

-- | Create a value of <a>CreateVirtualNodeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateVirtualNodeResponse'</a>,
--   <a>createVirtualNodeResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualNode:CreateVirtualNodeResponse'</a>,
--   <a>createVirtualNodeResponse_virtualNode</a> - The full description of
--   your virtual node following the create call.
newCreateVirtualNodeResponse :: Int -> VirtualNodeData -> CreateVirtualNodeResponse

-- | The response's http status code.
createVirtualNodeResponse_httpStatus :: Lens' CreateVirtualNodeResponse Int

-- | The full description of your virtual node following the create call.
createVirtualNodeResponse_virtualNode :: Lens' CreateVirtualNodeResponse VirtualNodeData
instance GHC.Generics.Generic Amazonka.AppMesh.CreateVirtualNode.CreateVirtualNode
instance GHC.Show.Show Amazonka.AppMesh.CreateVirtualNode.CreateVirtualNode
instance GHC.Read.Read Amazonka.AppMesh.CreateVirtualNode.CreateVirtualNode
instance GHC.Classes.Eq Amazonka.AppMesh.CreateVirtualNode.CreateVirtualNode
instance GHC.Generics.Generic Amazonka.AppMesh.CreateVirtualNode.CreateVirtualNodeResponse
instance GHC.Show.Show Amazonka.AppMesh.CreateVirtualNode.CreateVirtualNodeResponse
instance GHC.Read.Read Amazonka.AppMesh.CreateVirtualNode.CreateVirtualNodeResponse
instance GHC.Classes.Eq Amazonka.AppMesh.CreateVirtualNode.CreateVirtualNodeResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.CreateVirtualNode.CreateVirtualNode
instance Control.DeepSeq.NFData Amazonka.AppMesh.CreateVirtualNode.CreateVirtualNodeResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.CreateVirtualNode.CreateVirtualNode
instance Control.DeepSeq.NFData Amazonka.AppMesh.CreateVirtualNode.CreateVirtualNode
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.CreateVirtualNode.CreateVirtualNode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.CreateVirtualNode.CreateVirtualNode
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.CreateVirtualNode.CreateVirtualNode
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.CreateVirtualNode.CreateVirtualNode


-- | Creates a virtual gateway.
--   
--   A virtual gateway allows resources outside your mesh to communicate to
--   resources that are inside your mesh. The virtual gateway represents an
--   Envoy proxy running in an Amazon ECS task, in a Kubernetes service, or
--   on an Amazon EC2 instance. Unlike a virtual node, which represents an
--   Envoy running with an application, a virtual gateway represents Envoy
--   deployed by itself.
--   
--   For more information about virtual gateways, see <a>Virtual
--   gateways</a>.
module Amazonka.AppMesh.CreateVirtualGateway

-- | <i>See:</i> <a>newCreateVirtualGateway</a> smart constructor.
data CreateVirtualGateway
CreateVirtualGateway' :: Maybe Text -> Maybe Text -> Maybe [TagRef] -> Text -> VirtualGatewaySpec -> Text -> CreateVirtualGateway

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
[$sel:clientToken:CreateVirtualGateway'] :: CreateVirtualGateway -> Maybe Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then the account that you specify must share the mesh
--   with your account before you can create the resource in the service
--   mesh. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
[$sel:meshOwner:CreateVirtualGateway'] :: CreateVirtualGateway -> Maybe Text

-- | Optional metadata that you can apply to the virtual gateway to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
[$sel:tags:CreateVirtualGateway'] :: CreateVirtualGateway -> Maybe [TagRef]

-- | The name of the service mesh to create the virtual gateway in.
[$sel:meshName:CreateVirtualGateway'] :: CreateVirtualGateway -> Text

-- | The virtual gateway specification to apply.
[$sel:spec:CreateVirtualGateway'] :: CreateVirtualGateway -> VirtualGatewaySpec

-- | The name to use for the virtual gateway.
[$sel:virtualGatewayName:CreateVirtualGateway'] :: CreateVirtualGateway -> Text

-- | Create a value of <a>CreateVirtualGateway</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateVirtualGateway'</a>,
--   <a>createVirtualGateway_clientToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   Up to 36 letters, numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:meshOwner:CreateVirtualGateway'</a>,
--   <a>createVirtualGateway_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then the
--   account that you specify must share the mesh with your account before
--   you can create the resource in the service mesh. For more information
--   about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:tags:CreateVirtualGateway'</a>,
--   <a>createVirtualGateway_tags</a> - Optional metadata that you can
--   apply to the virtual gateway to assist with categorization and
--   organization. Each tag consists of a key and an optional value, both
--   of which you define. Tag keys can have a maximum character length of
--   128 characters, and tag values can have a maximum length of 256
--   characters.
--   
--   <a>$sel:meshName:CreateVirtualGateway'</a>,
--   <a>createVirtualGateway_meshName</a> - The name of the service mesh to
--   create the virtual gateway in.
--   
--   <a>$sel:spec:CreateVirtualGateway'</a>,
--   <a>createVirtualGateway_spec</a> - The virtual gateway specification
--   to apply.
--   
--   <a>$sel:virtualGatewayName:CreateVirtualGateway'</a>,
--   <a>createVirtualGateway_virtualGatewayName</a> - The name to use for
--   the virtual gateway.
newCreateVirtualGateway :: Text -> VirtualGatewaySpec -> Text -> CreateVirtualGateway

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
createVirtualGateway_clientToken :: Lens' CreateVirtualGateway (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then the account that you specify must share the mesh
--   with your account before you can create the resource in the service
--   mesh. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
createVirtualGateway_meshOwner :: Lens' CreateVirtualGateway (Maybe Text)

-- | Optional metadata that you can apply to the virtual gateway to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
createVirtualGateway_tags :: Lens' CreateVirtualGateway (Maybe [TagRef])

-- | The name of the service mesh to create the virtual gateway in.
createVirtualGateway_meshName :: Lens' CreateVirtualGateway Text

-- | The virtual gateway specification to apply.
createVirtualGateway_spec :: Lens' CreateVirtualGateway VirtualGatewaySpec

-- | The name to use for the virtual gateway.
createVirtualGateway_virtualGatewayName :: Lens' CreateVirtualGateway Text

-- | <i>See:</i> <a>newCreateVirtualGatewayResponse</a> smart constructor.
data CreateVirtualGatewayResponse
CreateVirtualGatewayResponse' :: Int -> VirtualGatewayData -> CreateVirtualGatewayResponse

-- | The response's http status code.
[$sel:httpStatus:CreateVirtualGatewayResponse'] :: CreateVirtualGatewayResponse -> Int

-- | The full description of your virtual gateway following the create
--   call.
[$sel:virtualGateway:CreateVirtualGatewayResponse'] :: CreateVirtualGatewayResponse -> VirtualGatewayData

-- | Create a value of <a>CreateVirtualGatewayResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateVirtualGatewayResponse'</a>,
--   <a>createVirtualGatewayResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualGateway:CreateVirtualGatewayResponse'</a>,
--   <a>createVirtualGatewayResponse_virtualGateway</a> - The full
--   description of your virtual gateway following the create call.
newCreateVirtualGatewayResponse :: Int -> VirtualGatewayData -> CreateVirtualGatewayResponse

-- | The response's http status code.
createVirtualGatewayResponse_httpStatus :: Lens' CreateVirtualGatewayResponse Int

-- | The full description of your virtual gateway following the create
--   call.
createVirtualGatewayResponse_virtualGateway :: Lens' CreateVirtualGatewayResponse VirtualGatewayData
instance GHC.Generics.Generic Amazonka.AppMesh.CreateVirtualGateway.CreateVirtualGateway
instance GHC.Show.Show Amazonka.AppMesh.CreateVirtualGateway.CreateVirtualGateway
instance GHC.Read.Read Amazonka.AppMesh.CreateVirtualGateway.CreateVirtualGateway
instance GHC.Classes.Eq Amazonka.AppMesh.CreateVirtualGateway.CreateVirtualGateway
instance GHC.Generics.Generic Amazonka.AppMesh.CreateVirtualGateway.CreateVirtualGatewayResponse
instance GHC.Show.Show Amazonka.AppMesh.CreateVirtualGateway.CreateVirtualGatewayResponse
instance GHC.Read.Read Amazonka.AppMesh.CreateVirtualGateway.CreateVirtualGatewayResponse
instance GHC.Classes.Eq Amazonka.AppMesh.CreateVirtualGateway.CreateVirtualGatewayResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.CreateVirtualGateway.CreateVirtualGateway
instance Control.DeepSeq.NFData Amazonka.AppMesh.CreateVirtualGateway.CreateVirtualGatewayResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.CreateVirtualGateway.CreateVirtualGateway
instance Control.DeepSeq.NFData Amazonka.AppMesh.CreateVirtualGateway.CreateVirtualGateway
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.CreateVirtualGateway.CreateVirtualGateway
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.CreateVirtualGateway.CreateVirtualGateway
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.CreateVirtualGateway.CreateVirtualGateway
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.CreateVirtualGateway.CreateVirtualGateway


-- | Creates a route that is associated with a virtual router.
--   
--   You can route several different protocols and define a retry policy
--   for a route. Traffic can be routed to one or more virtual nodes.
--   
--   For more information about routes, see <a>Routes</a>.
module Amazonka.AppMesh.CreateRoute

-- | <i>See:</i> <a>newCreateRoute</a> smart constructor.
data CreateRoute
CreateRoute' :: Maybe Text -> Maybe Text -> Maybe [TagRef] -> Text -> Text -> RouteSpec -> Text -> CreateRoute

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
[$sel:clientToken:CreateRoute'] :: CreateRoute -> Maybe Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then the account that you specify must share the mesh
--   with your account before you can create the resource in the service
--   mesh. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
[$sel:meshOwner:CreateRoute'] :: CreateRoute -> Maybe Text

-- | Optional metadata that you can apply to the route to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Tag keys can have a maximum
--   character length of 128 characters, and tag values can have a maximum
--   length of 256 characters.
[$sel:tags:CreateRoute'] :: CreateRoute -> Maybe [TagRef]

-- | The name of the service mesh to create the route in.
[$sel:meshName:CreateRoute'] :: CreateRoute -> Text

-- | The name to use for the route.
[$sel:routeName:CreateRoute'] :: CreateRoute -> Text

-- | The route specification to apply.
[$sel:spec:CreateRoute'] :: CreateRoute -> RouteSpec

-- | The name of the virtual router in which to create the route. If the
--   virtual router is in a shared mesh, then you must be the owner of the
--   virtual router resource.
[$sel:virtualRouterName:CreateRoute'] :: CreateRoute -> Text

-- | Create a value of <a>CreateRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateRoute'</a>, <a>createRoute_clientToken</a> -
--   Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
--   
--   <a>$sel:meshOwner:CreateRoute'</a>, <a>createRoute_meshOwner</a> - The
--   AWS IAM account ID of the service mesh owner. If the account ID is not
--   your own, then the account that you specify must share the mesh with
--   your account before you can create the resource in the service mesh.
--   For more information about mesh sharing, see <a>Working with shared
--   meshes</a>.
--   
--   <a>$sel:tags:CreateRoute'</a>, <a>createRoute_tags</a> - Optional
--   metadata that you can apply to the route to assist with categorization
--   and organization. Each tag consists of a key and an optional value,
--   both of which you define. Tag keys can have a maximum character length
--   of 128 characters, and tag values can have a maximum length of 256
--   characters.
--   
--   <a>$sel:meshName:CreateRoute'</a>, <a>createRoute_meshName</a> - The
--   name of the service mesh to create the route in.
--   
--   <a>$sel:routeName:CreateRoute'</a>, <a>createRoute_routeName</a> - The
--   name to use for the route.
--   
--   <a>$sel:spec:CreateRoute'</a>, <a>createRoute_spec</a> - The route
--   specification to apply.
--   
--   <a>$sel:virtualRouterName:CreateRoute'</a>,
--   <a>createRoute_virtualRouterName</a> - The name of the virtual router
--   in which to create the route. If the virtual router is in a shared
--   mesh, then you must be the owner of the virtual router resource.
newCreateRoute :: Text -> Text -> RouteSpec -> Text -> CreateRoute

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
createRoute_clientToken :: Lens' CreateRoute (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then the account that you specify must share the mesh
--   with your account before you can create the resource in the service
--   mesh. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
createRoute_meshOwner :: Lens' CreateRoute (Maybe Text)

-- | Optional metadata that you can apply to the route to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Tag keys can have a maximum
--   character length of 128 characters, and tag values can have a maximum
--   length of 256 characters.
createRoute_tags :: Lens' CreateRoute (Maybe [TagRef])

-- | The name of the service mesh to create the route in.
createRoute_meshName :: Lens' CreateRoute Text

-- | The name to use for the route.
createRoute_routeName :: Lens' CreateRoute Text

-- | The route specification to apply.
createRoute_spec :: Lens' CreateRoute RouteSpec

-- | The name of the virtual router in which to create the route. If the
--   virtual router is in a shared mesh, then you must be the owner of the
--   virtual router resource.
createRoute_virtualRouterName :: Lens' CreateRoute Text

-- | <i>See:</i> <a>newCreateRouteResponse</a> smart constructor.
data CreateRouteResponse
CreateRouteResponse' :: Int -> RouteData -> CreateRouteResponse

-- | The response's http status code.
[$sel:httpStatus:CreateRouteResponse'] :: CreateRouteResponse -> Int

-- | The full description of your mesh following the create call.
[$sel:route:CreateRouteResponse'] :: CreateRouteResponse -> RouteData

-- | Create a value of <a>CreateRouteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateRouteResponse'</a>,
--   <a>createRouteResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:route:CreateRouteResponse'</a>,
--   <a>createRouteResponse_route</a> - The full description of your mesh
--   following the create call.
newCreateRouteResponse :: Int -> RouteData -> CreateRouteResponse

-- | The response's http status code.
createRouteResponse_httpStatus :: Lens' CreateRouteResponse Int

-- | The full description of your mesh following the create call.
createRouteResponse_route :: Lens' CreateRouteResponse RouteData
instance GHC.Generics.Generic Amazonka.AppMesh.CreateRoute.CreateRoute
instance GHC.Show.Show Amazonka.AppMesh.CreateRoute.CreateRoute
instance GHC.Read.Read Amazonka.AppMesh.CreateRoute.CreateRoute
instance GHC.Classes.Eq Amazonka.AppMesh.CreateRoute.CreateRoute
instance GHC.Generics.Generic Amazonka.AppMesh.CreateRoute.CreateRouteResponse
instance GHC.Show.Show Amazonka.AppMesh.CreateRoute.CreateRouteResponse
instance GHC.Read.Read Amazonka.AppMesh.CreateRoute.CreateRouteResponse
instance GHC.Classes.Eq Amazonka.AppMesh.CreateRoute.CreateRouteResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.CreateRoute.CreateRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.CreateRoute.CreateRouteResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.CreateRoute.CreateRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.CreateRoute.CreateRoute
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.CreateRoute.CreateRoute
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.CreateRoute.CreateRoute
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.CreateRoute.CreateRoute
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.CreateRoute.CreateRoute


-- | Creates a service mesh.
--   
--   A service mesh is a logical boundary for network traffic between
--   services that are represented by resources within the mesh. After you
--   create your service mesh, you can create virtual services, virtual
--   nodes, virtual routers, and routes to distribute traffic between the
--   applications in your mesh.
--   
--   For more information about service meshes, see <a>Service meshes</a>.
module Amazonka.AppMesh.CreateMesh

-- | <i>See:</i> <a>newCreateMesh</a> smart constructor.
data CreateMesh
CreateMesh' :: Maybe Text -> Maybe MeshSpec -> Maybe [TagRef] -> Text -> CreateMesh

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
[$sel:clientToken:CreateMesh'] :: CreateMesh -> Maybe Text

-- | The service mesh specification to apply.
[$sel:spec:CreateMesh'] :: CreateMesh -> Maybe MeshSpec

-- | Optional metadata that you can apply to the service mesh to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
[$sel:tags:CreateMesh'] :: CreateMesh -> Maybe [TagRef]

-- | The name to use for the service mesh.
[$sel:meshName:CreateMesh'] :: CreateMesh -> Text

-- | Create a value of <a>CreateMesh</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateMesh'</a>, <a>createMesh_clientToken</a> -
--   Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
--   
--   <a>$sel:spec:CreateMesh'</a>, <a>createMesh_spec</a> - The service
--   mesh specification to apply.
--   
--   <a>$sel:tags:CreateMesh'</a>, <a>createMesh_tags</a> - Optional
--   metadata that you can apply to the service mesh to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Tag keys can have a maximum
--   character length of 128 characters, and tag values can have a maximum
--   length of 256 characters.
--   
--   <a>$sel:meshName:CreateMesh'</a>, <a>createMesh_meshName</a> - The
--   name to use for the service mesh.
newCreateMesh :: Text -> CreateMesh

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
createMesh_clientToken :: Lens' CreateMesh (Maybe Text)

-- | The service mesh specification to apply.
createMesh_spec :: Lens' CreateMesh (Maybe MeshSpec)

-- | Optional metadata that you can apply to the service mesh to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
createMesh_tags :: Lens' CreateMesh (Maybe [TagRef])

-- | The name to use for the service mesh.
createMesh_meshName :: Lens' CreateMesh Text

-- | <i>See:</i> <a>newCreateMeshResponse</a> smart constructor.
data CreateMeshResponse
CreateMeshResponse' :: Int -> MeshData -> CreateMeshResponse

-- | The response's http status code.
[$sel:httpStatus:CreateMeshResponse'] :: CreateMeshResponse -> Int

-- | The full description of your service mesh following the create call.
[$sel:mesh:CreateMeshResponse'] :: CreateMeshResponse -> MeshData

-- | Create a value of <a>CreateMeshResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateMeshResponse'</a>,
--   <a>createMeshResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:mesh:CreateMeshResponse'</a>, <a>createMeshResponse_mesh</a> -
--   The full description of your service mesh following the create call.
newCreateMeshResponse :: Int -> MeshData -> CreateMeshResponse

-- | The response's http status code.
createMeshResponse_httpStatus :: Lens' CreateMeshResponse Int

-- | The full description of your service mesh following the create call.
createMeshResponse_mesh :: Lens' CreateMeshResponse MeshData
instance GHC.Generics.Generic Amazonka.AppMesh.CreateMesh.CreateMesh
instance GHC.Show.Show Amazonka.AppMesh.CreateMesh.CreateMesh
instance GHC.Read.Read Amazonka.AppMesh.CreateMesh.CreateMesh
instance GHC.Classes.Eq Amazonka.AppMesh.CreateMesh.CreateMesh
instance GHC.Generics.Generic Amazonka.AppMesh.CreateMesh.CreateMeshResponse
instance GHC.Show.Show Amazonka.AppMesh.CreateMesh.CreateMeshResponse
instance GHC.Read.Read Amazonka.AppMesh.CreateMesh.CreateMeshResponse
instance GHC.Classes.Eq Amazonka.AppMesh.CreateMesh.CreateMeshResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.CreateMesh.CreateMesh
instance Control.DeepSeq.NFData Amazonka.AppMesh.CreateMesh.CreateMeshResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.CreateMesh.CreateMesh
instance Control.DeepSeq.NFData Amazonka.AppMesh.CreateMesh.CreateMesh
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.CreateMesh.CreateMesh
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.CreateMesh.CreateMesh
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.CreateMesh.CreateMesh
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.CreateMesh.CreateMesh


-- | Creates a gateway route.
--   
--   A gateway route is attached to a virtual gateway and routes traffic to
--   an existing virtual service. If a route matches a request, it can
--   distribute traffic to a target virtual service.
--   
--   For more information about gateway routes, see <a>Gateway routes</a>.
module Amazonka.AppMesh.CreateGatewayRoute

-- | <i>See:</i> <a>newCreateGatewayRoute</a> smart constructor.
data CreateGatewayRoute
CreateGatewayRoute' :: Maybe Text -> Maybe Text -> Maybe [TagRef] -> Text -> Text -> GatewayRouteSpec -> Text -> CreateGatewayRoute

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
[$sel:clientToken:CreateGatewayRoute'] :: CreateGatewayRoute -> Maybe Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then the account that you specify must share the mesh
--   with your account before you can create the resource in the service
--   mesh. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
[$sel:meshOwner:CreateGatewayRoute'] :: CreateGatewayRoute -> Maybe Text

-- | Optional metadata that you can apply to the gateway route to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
[$sel:tags:CreateGatewayRoute'] :: CreateGatewayRoute -> Maybe [TagRef]

-- | The name to use for the gateway route.
[$sel:gatewayRouteName:CreateGatewayRoute'] :: CreateGatewayRoute -> Text

-- | The name of the service mesh to create the gateway route in.
[$sel:meshName:CreateGatewayRoute'] :: CreateGatewayRoute -> Text

-- | The gateway route specification to apply.
[$sel:spec:CreateGatewayRoute'] :: CreateGatewayRoute -> GatewayRouteSpec

-- | The name of the virtual gateway to associate the gateway route with.
--   If the virtual gateway is in a shared mesh, then you must be the owner
--   of the virtual gateway resource.
[$sel:virtualGatewayName:CreateGatewayRoute'] :: CreateGatewayRoute -> Text

-- | Create a value of <a>CreateGatewayRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateGatewayRoute'</a>,
--   <a>createGatewayRoute_clientToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   Up to 36 letters, numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:meshOwner:CreateGatewayRoute'</a>,
--   <a>createGatewayRoute_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then the
--   account that you specify must share the mesh with your account before
--   you can create the resource in the service mesh. For more information
--   about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:tags:CreateGatewayRoute'</a>, <a>createGatewayRoute_tags</a> -
--   Optional metadata that you can apply to the gateway route to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
--   
--   <a>$sel:gatewayRouteName:CreateGatewayRoute'</a>,
--   <a>createGatewayRoute_gatewayRouteName</a> - The name to use for the
--   gateway route.
--   
--   <a>$sel:meshName:CreateGatewayRoute'</a>,
--   <a>createGatewayRoute_meshName</a> - The name of the service mesh to
--   create the gateway route in.
--   
--   <a>$sel:spec:CreateGatewayRoute'</a>, <a>createGatewayRoute_spec</a> -
--   The gateway route specification to apply.
--   
--   <a>$sel:virtualGatewayName:CreateGatewayRoute'</a>,
--   <a>createGatewayRoute_virtualGatewayName</a> - The name of the virtual
--   gateway to associate the gateway route with. If the virtual gateway is
--   in a shared mesh, then you must be the owner of the virtual gateway
--   resource.
newCreateGatewayRoute :: Text -> Text -> GatewayRouteSpec -> Text -> CreateGatewayRoute

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
createGatewayRoute_clientToken :: Lens' CreateGatewayRoute (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then the account that you specify must share the mesh
--   with your account before you can create the resource in the service
--   mesh. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
createGatewayRoute_meshOwner :: Lens' CreateGatewayRoute (Maybe Text)

-- | Optional metadata that you can apply to the gateway route to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
createGatewayRoute_tags :: Lens' CreateGatewayRoute (Maybe [TagRef])

-- | The name to use for the gateway route.
createGatewayRoute_gatewayRouteName :: Lens' CreateGatewayRoute Text

-- | The name of the service mesh to create the gateway route in.
createGatewayRoute_meshName :: Lens' CreateGatewayRoute Text

-- | The gateway route specification to apply.
createGatewayRoute_spec :: Lens' CreateGatewayRoute GatewayRouteSpec

-- | The name of the virtual gateway to associate the gateway route with.
--   If the virtual gateway is in a shared mesh, then you must be the owner
--   of the virtual gateway resource.
createGatewayRoute_virtualGatewayName :: Lens' CreateGatewayRoute Text

-- | <i>See:</i> <a>newCreateGatewayRouteResponse</a> smart constructor.
data CreateGatewayRouteResponse
CreateGatewayRouteResponse' :: Int -> GatewayRouteData -> CreateGatewayRouteResponse

-- | The response's http status code.
[$sel:httpStatus:CreateGatewayRouteResponse'] :: CreateGatewayRouteResponse -> Int

-- | The full description of your gateway route following the create call.
[$sel:gatewayRoute:CreateGatewayRouteResponse'] :: CreateGatewayRouteResponse -> GatewayRouteData

-- | Create a value of <a>CreateGatewayRouteResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateGatewayRouteResponse'</a>,
--   <a>createGatewayRouteResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:gatewayRoute:CreateGatewayRouteResponse'</a>,
--   <a>createGatewayRouteResponse_gatewayRoute</a> - The full description
--   of your gateway route following the create call.
newCreateGatewayRouteResponse :: Int -> GatewayRouteData -> CreateGatewayRouteResponse

-- | The response's http status code.
createGatewayRouteResponse_httpStatus :: Lens' CreateGatewayRouteResponse Int

-- | The full description of your gateway route following the create call.
createGatewayRouteResponse_gatewayRoute :: Lens' CreateGatewayRouteResponse GatewayRouteData
instance GHC.Generics.Generic Amazonka.AppMesh.CreateGatewayRoute.CreateGatewayRoute
instance GHC.Show.Show Amazonka.AppMesh.CreateGatewayRoute.CreateGatewayRoute
instance GHC.Read.Read Amazonka.AppMesh.CreateGatewayRoute.CreateGatewayRoute
instance GHC.Classes.Eq Amazonka.AppMesh.CreateGatewayRoute.CreateGatewayRoute
instance GHC.Generics.Generic Amazonka.AppMesh.CreateGatewayRoute.CreateGatewayRouteResponse
instance GHC.Show.Show Amazonka.AppMesh.CreateGatewayRoute.CreateGatewayRouteResponse
instance GHC.Read.Read Amazonka.AppMesh.CreateGatewayRoute.CreateGatewayRouteResponse
instance GHC.Classes.Eq Amazonka.AppMesh.CreateGatewayRoute.CreateGatewayRouteResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.CreateGatewayRoute.CreateGatewayRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.CreateGatewayRoute.CreateGatewayRouteResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.CreateGatewayRoute.CreateGatewayRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.CreateGatewayRoute.CreateGatewayRoute
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.CreateGatewayRoute.CreateGatewayRoute
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.CreateGatewayRoute.CreateGatewayRoute
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.CreateGatewayRoute.CreateGatewayRoute
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.CreateGatewayRoute.CreateGatewayRoute


-- | Deletes specified tags from a resource.
module Amazonka.AppMesh.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource to delete tags from.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The keys of the tags to be removed.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource to delete tags from.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of the tags to be removed.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource to delete tags from.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The keys of the tags to be removed.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.AppMesh.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.AppMesh.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.AppMesh.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.AppMesh.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.AppMesh.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.AppMesh.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.AppMesh.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.AppMesh.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.AppMesh.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.AppMesh.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.UntagResource.UntagResource


-- | Updates an existing gateway route that is associated to a specified
--   virtual gateway in a service mesh.
module Amazonka.AppMesh.UpdateGatewayRoute

-- | <i>See:</i> <a>newUpdateGatewayRoute</a> smart constructor.
data UpdateGatewayRoute
UpdateGatewayRoute' :: Maybe Text -> Maybe Text -> Text -> Text -> GatewayRouteSpec -> Text -> UpdateGatewayRoute

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
[$sel:clientToken:UpdateGatewayRoute'] :: UpdateGatewayRoute -> Maybe Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:UpdateGatewayRoute'] :: UpdateGatewayRoute -> Maybe Text

-- | The name of the gateway route to update.
[$sel:gatewayRouteName:UpdateGatewayRoute'] :: UpdateGatewayRoute -> Text

-- | The name of the service mesh that the gateway route resides in.
[$sel:meshName:UpdateGatewayRoute'] :: UpdateGatewayRoute -> Text

-- | The new gateway route specification to apply. This overwrites the
--   existing data.
[$sel:spec:UpdateGatewayRoute'] :: UpdateGatewayRoute -> GatewayRouteSpec

-- | The name of the virtual gateway that the gateway route is associated
--   with.
[$sel:virtualGatewayName:UpdateGatewayRoute'] :: UpdateGatewayRoute -> Text

-- | Create a value of <a>UpdateGatewayRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateGatewayRoute'</a>,
--   <a>updateGatewayRoute_clientToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   Up to 36 letters, numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:meshOwner:UpdateGatewayRoute'</a>,
--   <a>updateGatewayRoute_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:gatewayRouteName:UpdateGatewayRoute'</a>,
--   <a>updateGatewayRoute_gatewayRouteName</a> - The name of the gateway
--   route to update.
--   
--   <a>$sel:meshName:UpdateGatewayRoute'</a>,
--   <a>updateGatewayRoute_meshName</a> - The name of the service mesh that
--   the gateway route resides in.
--   
--   <a>$sel:spec:UpdateGatewayRoute'</a>, <a>updateGatewayRoute_spec</a> -
--   The new gateway route specification to apply. This overwrites the
--   existing data.
--   
--   <a>$sel:virtualGatewayName:UpdateGatewayRoute'</a>,
--   <a>updateGatewayRoute_virtualGatewayName</a> - The name of the virtual
--   gateway that the gateway route is associated with.
newUpdateGatewayRoute :: Text -> Text -> GatewayRouteSpec -> Text -> UpdateGatewayRoute

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
updateGatewayRoute_clientToken :: Lens' UpdateGatewayRoute (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
updateGatewayRoute_meshOwner :: Lens' UpdateGatewayRoute (Maybe Text)

-- | The name of the gateway route to update.
updateGatewayRoute_gatewayRouteName :: Lens' UpdateGatewayRoute Text

-- | The name of the service mesh that the gateway route resides in.
updateGatewayRoute_meshName :: Lens' UpdateGatewayRoute Text

-- | The new gateway route specification to apply. This overwrites the
--   existing data.
updateGatewayRoute_spec :: Lens' UpdateGatewayRoute GatewayRouteSpec

-- | The name of the virtual gateway that the gateway route is associated
--   with.
updateGatewayRoute_virtualGatewayName :: Lens' UpdateGatewayRoute Text

-- | <i>See:</i> <a>newUpdateGatewayRouteResponse</a> smart constructor.
data UpdateGatewayRouteResponse
UpdateGatewayRouteResponse' :: Int -> GatewayRouteData -> UpdateGatewayRouteResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateGatewayRouteResponse'] :: UpdateGatewayRouteResponse -> Int

-- | A full description of the gateway route that was updated.
[$sel:gatewayRoute:UpdateGatewayRouteResponse'] :: UpdateGatewayRouteResponse -> GatewayRouteData

-- | Create a value of <a>UpdateGatewayRouteResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateGatewayRouteResponse'</a>,
--   <a>updateGatewayRouteResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:gatewayRoute:UpdateGatewayRouteResponse'</a>,
--   <a>updateGatewayRouteResponse_gatewayRoute</a> - A full description of
--   the gateway route that was updated.
newUpdateGatewayRouteResponse :: Int -> GatewayRouteData -> UpdateGatewayRouteResponse

-- | The response's http status code.
updateGatewayRouteResponse_httpStatus :: Lens' UpdateGatewayRouteResponse Int

-- | A full description of the gateway route that was updated.
updateGatewayRouteResponse_gatewayRoute :: Lens' UpdateGatewayRouteResponse GatewayRouteData
instance GHC.Generics.Generic Amazonka.AppMesh.UpdateGatewayRoute.UpdateGatewayRoute
instance GHC.Show.Show Amazonka.AppMesh.UpdateGatewayRoute.UpdateGatewayRoute
instance GHC.Read.Read Amazonka.AppMesh.UpdateGatewayRoute.UpdateGatewayRoute
instance GHC.Classes.Eq Amazonka.AppMesh.UpdateGatewayRoute.UpdateGatewayRoute
instance GHC.Generics.Generic Amazonka.AppMesh.UpdateGatewayRoute.UpdateGatewayRouteResponse
instance GHC.Show.Show Amazonka.AppMesh.UpdateGatewayRoute.UpdateGatewayRouteResponse
instance GHC.Read.Read Amazonka.AppMesh.UpdateGatewayRoute.UpdateGatewayRouteResponse
instance GHC.Classes.Eq Amazonka.AppMesh.UpdateGatewayRoute.UpdateGatewayRouteResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.UpdateGatewayRoute.UpdateGatewayRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.UpdateGatewayRoute.UpdateGatewayRouteResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.UpdateGatewayRoute.UpdateGatewayRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.UpdateGatewayRoute.UpdateGatewayRoute
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.UpdateGatewayRoute.UpdateGatewayRoute
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.UpdateGatewayRoute.UpdateGatewayRoute
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.UpdateGatewayRoute.UpdateGatewayRoute
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.UpdateGatewayRoute.UpdateGatewayRoute


-- | Updates an existing service mesh.
module Amazonka.AppMesh.UpdateMesh

-- | <i>See:</i> <a>newUpdateMesh</a> smart constructor.
data UpdateMesh
UpdateMesh' :: Maybe Text -> Maybe MeshSpec -> Text -> UpdateMesh

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
[$sel:clientToken:UpdateMesh'] :: UpdateMesh -> Maybe Text

-- | The service mesh specification to apply.
[$sel:spec:UpdateMesh'] :: UpdateMesh -> Maybe MeshSpec

-- | The name of the service mesh to update.
[$sel:meshName:UpdateMesh'] :: UpdateMesh -> Text

-- | Create a value of <a>UpdateMesh</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateMesh'</a>, <a>updateMesh_clientToken</a> -
--   Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
--   
--   <a>$sel:spec:UpdateMesh'</a>, <a>updateMesh_spec</a> - The service
--   mesh specification to apply.
--   
--   <a>$sel:meshName:UpdateMesh'</a>, <a>updateMesh_meshName</a> - The
--   name of the service mesh to update.
newUpdateMesh :: Text -> UpdateMesh

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
updateMesh_clientToken :: Lens' UpdateMesh (Maybe Text)

-- | The service mesh specification to apply.
updateMesh_spec :: Lens' UpdateMesh (Maybe MeshSpec)

-- | The name of the service mesh to update.
updateMesh_meshName :: Lens' UpdateMesh Text

-- | <i>See:</i> <a>newUpdateMeshResponse</a> smart constructor.
data UpdateMeshResponse
UpdateMeshResponse' :: Int -> MeshData -> UpdateMeshResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateMeshResponse'] :: UpdateMeshResponse -> Int
[$sel:mesh:UpdateMeshResponse'] :: UpdateMeshResponse -> MeshData

-- | Create a value of <a>UpdateMeshResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateMeshResponse'</a>,
--   <a>updateMeshResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:mesh:UpdateMeshResponse'</a>, <a>updateMeshResponse_mesh</a> -
--   Undocumented member.
newUpdateMeshResponse :: Int -> MeshData -> UpdateMeshResponse

-- | The response's http status code.
updateMeshResponse_httpStatus :: Lens' UpdateMeshResponse Int

-- | Undocumented member.
updateMeshResponse_mesh :: Lens' UpdateMeshResponse MeshData
instance GHC.Generics.Generic Amazonka.AppMesh.UpdateMesh.UpdateMesh
instance GHC.Show.Show Amazonka.AppMesh.UpdateMesh.UpdateMesh
instance GHC.Read.Read Amazonka.AppMesh.UpdateMesh.UpdateMesh
instance GHC.Classes.Eq Amazonka.AppMesh.UpdateMesh.UpdateMesh
instance GHC.Generics.Generic Amazonka.AppMesh.UpdateMesh.UpdateMeshResponse
instance GHC.Show.Show Amazonka.AppMesh.UpdateMesh.UpdateMeshResponse
instance GHC.Read.Read Amazonka.AppMesh.UpdateMesh.UpdateMeshResponse
instance GHC.Classes.Eq Amazonka.AppMesh.UpdateMesh.UpdateMeshResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.UpdateMesh.UpdateMesh
instance Control.DeepSeq.NFData Amazonka.AppMesh.UpdateMesh.UpdateMeshResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.UpdateMesh.UpdateMesh
instance Control.DeepSeq.NFData Amazonka.AppMesh.UpdateMesh.UpdateMesh
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.UpdateMesh.UpdateMesh
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.UpdateMesh.UpdateMesh
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.UpdateMesh.UpdateMesh
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.UpdateMesh.UpdateMesh


-- | Updates an existing route for a specified service mesh and virtual
--   router.
module Amazonka.AppMesh.UpdateRoute

-- | <i>See:</i> <a>newUpdateRoute</a> smart constructor.
data UpdateRoute
UpdateRoute' :: Maybe Text -> Maybe Text -> Text -> Text -> RouteSpec -> Text -> UpdateRoute

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
[$sel:clientToken:UpdateRoute'] :: UpdateRoute -> Maybe Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:UpdateRoute'] :: UpdateRoute -> Maybe Text

-- | The name of the service mesh that the route resides in.
[$sel:meshName:UpdateRoute'] :: UpdateRoute -> Text

-- | The name of the route to update.
[$sel:routeName:UpdateRoute'] :: UpdateRoute -> Text

-- | The new route specification to apply. This overwrites the existing
--   data.
[$sel:spec:UpdateRoute'] :: UpdateRoute -> RouteSpec

-- | The name of the virtual router that the route is associated with.
[$sel:virtualRouterName:UpdateRoute'] :: UpdateRoute -> Text

-- | Create a value of <a>UpdateRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateRoute'</a>, <a>updateRoute_clientToken</a> -
--   Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
--   
--   <a>$sel:meshOwner:UpdateRoute'</a>, <a>updateRoute_meshOwner</a> - The
--   AWS IAM account ID of the service mesh owner. If the account ID is not
--   your own, then it's the ID of the account that shared the mesh with
--   your account. For more information about mesh sharing, see <a>Working
--   with shared meshes</a>.
--   
--   <a>$sel:meshName:UpdateRoute'</a>, <a>updateRoute_meshName</a> - The
--   name of the service mesh that the route resides in.
--   
--   <a>$sel:routeName:UpdateRoute'</a>, <a>updateRoute_routeName</a> - The
--   name of the route to update.
--   
--   <a>$sel:spec:UpdateRoute'</a>, <a>updateRoute_spec</a> - The new route
--   specification to apply. This overwrites the existing data.
--   
--   <a>$sel:virtualRouterName:UpdateRoute'</a>,
--   <a>updateRoute_virtualRouterName</a> - The name of the virtual router
--   that the route is associated with.
newUpdateRoute :: Text -> Text -> RouteSpec -> Text -> UpdateRoute

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
updateRoute_clientToken :: Lens' UpdateRoute (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
updateRoute_meshOwner :: Lens' UpdateRoute (Maybe Text)

-- | The name of the service mesh that the route resides in.
updateRoute_meshName :: Lens' UpdateRoute Text

-- | The name of the route to update.
updateRoute_routeName :: Lens' UpdateRoute Text

-- | The new route specification to apply. This overwrites the existing
--   data.
updateRoute_spec :: Lens' UpdateRoute RouteSpec

-- | The name of the virtual router that the route is associated with.
updateRoute_virtualRouterName :: Lens' UpdateRoute Text

-- | <i>See:</i> <a>newUpdateRouteResponse</a> smart constructor.
data UpdateRouteResponse
UpdateRouteResponse' :: Int -> RouteData -> UpdateRouteResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateRouteResponse'] :: UpdateRouteResponse -> Int

-- | A full description of the route that was updated.
[$sel:route:UpdateRouteResponse'] :: UpdateRouteResponse -> RouteData

-- | Create a value of <a>UpdateRouteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateRouteResponse'</a>,
--   <a>updateRouteResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:route:UpdateRouteResponse'</a>,
--   <a>updateRouteResponse_route</a> - A full description of the route
--   that was updated.
newUpdateRouteResponse :: Int -> RouteData -> UpdateRouteResponse

-- | The response's http status code.
updateRouteResponse_httpStatus :: Lens' UpdateRouteResponse Int

-- | A full description of the route that was updated.
updateRouteResponse_route :: Lens' UpdateRouteResponse RouteData
instance GHC.Generics.Generic Amazonka.AppMesh.UpdateRoute.UpdateRoute
instance GHC.Show.Show Amazonka.AppMesh.UpdateRoute.UpdateRoute
instance GHC.Read.Read Amazonka.AppMesh.UpdateRoute.UpdateRoute
instance GHC.Classes.Eq Amazonka.AppMesh.UpdateRoute.UpdateRoute
instance GHC.Generics.Generic Amazonka.AppMesh.UpdateRoute.UpdateRouteResponse
instance GHC.Show.Show Amazonka.AppMesh.UpdateRoute.UpdateRouteResponse
instance GHC.Read.Read Amazonka.AppMesh.UpdateRoute.UpdateRouteResponse
instance GHC.Classes.Eq Amazonka.AppMesh.UpdateRoute.UpdateRouteResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.UpdateRoute.UpdateRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.UpdateRoute.UpdateRouteResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.UpdateRoute.UpdateRoute
instance Control.DeepSeq.NFData Amazonka.AppMesh.UpdateRoute.UpdateRoute
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.UpdateRoute.UpdateRoute
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.UpdateRoute.UpdateRoute
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.UpdateRoute.UpdateRoute
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.UpdateRoute.UpdateRoute


-- | Updates an existing virtual gateway in a specified service mesh.
module Amazonka.AppMesh.UpdateVirtualGateway

-- | <i>See:</i> <a>newUpdateVirtualGateway</a> smart constructor.
data UpdateVirtualGateway
UpdateVirtualGateway' :: Maybe Text -> Maybe Text -> Text -> VirtualGatewaySpec -> Text -> UpdateVirtualGateway

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
[$sel:clientToken:UpdateVirtualGateway'] :: UpdateVirtualGateway -> Maybe Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:UpdateVirtualGateway'] :: UpdateVirtualGateway -> Maybe Text

-- | The name of the service mesh that the virtual gateway resides in.
[$sel:meshName:UpdateVirtualGateway'] :: UpdateVirtualGateway -> Text

-- | The new virtual gateway specification to apply. This overwrites the
--   existing data.
[$sel:spec:UpdateVirtualGateway'] :: UpdateVirtualGateway -> VirtualGatewaySpec

-- | The name of the virtual gateway to update.
[$sel:virtualGatewayName:UpdateVirtualGateway'] :: UpdateVirtualGateway -> Text

-- | Create a value of <a>UpdateVirtualGateway</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateVirtualGateway'</a>,
--   <a>updateVirtualGateway_clientToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   Up to 36 letters, numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:meshOwner:UpdateVirtualGateway'</a>,
--   <a>updateVirtualGateway_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:UpdateVirtualGateway'</a>,
--   <a>updateVirtualGateway_meshName</a> - The name of the service mesh
--   that the virtual gateway resides in.
--   
--   <a>$sel:spec:UpdateVirtualGateway'</a>,
--   <a>updateVirtualGateway_spec</a> - The new virtual gateway
--   specification to apply. This overwrites the existing data.
--   
--   <a>$sel:virtualGatewayName:UpdateVirtualGateway'</a>,
--   <a>updateVirtualGateway_virtualGatewayName</a> - The name of the
--   virtual gateway to update.
newUpdateVirtualGateway :: Text -> VirtualGatewaySpec -> Text -> UpdateVirtualGateway

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
updateVirtualGateway_clientToken :: Lens' UpdateVirtualGateway (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
updateVirtualGateway_meshOwner :: Lens' UpdateVirtualGateway (Maybe Text)

-- | The name of the service mesh that the virtual gateway resides in.
updateVirtualGateway_meshName :: Lens' UpdateVirtualGateway Text

-- | The new virtual gateway specification to apply. This overwrites the
--   existing data.
updateVirtualGateway_spec :: Lens' UpdateVirtualGateway VirtualGatewaySpec

-- | The name of the virtual gateway to update.
updateVirtualGateway_virtualGatewayName :: Lens' UpdateVirtualGateway Text

-- | <i>See:</i> <a>newUpdateVirtualGatewayResponse</a> smart constructor.
data UpdateVirtualGatewayResponse
UpdateVirtualGatewayResponse' :: Int -> VirtualGatewayData -> UpdateVirtualGatewayResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateVirtualGatewayResponse'] :: UpdateVirtualGatewayResponse -> Int

-- | A full description of the virtual gateway that was updated.
[$sel:virtualGateway:UpdateVirtualGatewayResponse'] :: UpdateVirtualGatewayResponse -> VirtualGatewayData

-- | Create a value of <a>UpdateVirtualGatewayResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateVirtualGatewayResponse'</a>,
--   <a>updateVirtualGatewayResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualGateway:UpdateVirtualGatewayResponse'</a>,
--   <a>updateVirtualGatewayResponse_virtualGateway</a> - A full
--   description of the virtual gateway that was updated.
newUpdateVirtualGatewayResponse :: Int -> VirtualGatewayData -> UpdateVirtualGatewayResponse

-- | The response's http status code.
updateVirtualGatewayResponse_httpStatus :: Lens' UpdateVirtualGatewayResponse Int

-- | A full description of the virtual gateway that was updated.
updateVirtualGatewayResponse_virtualGateway :: Lens' UpdateVirtualGatewayResponse VirtualGatewayData
instance GHC.Generics.Generic Amazonka.AppMesh.UpdateVirtualGateway.UpdateVirtualGateway
instance GHC.Show.Show Amazonka.AppMesh.UpdateVirtualGateway.UpdateVirtualGateway
instance GHC.Read.Read Amazonka.AppMesh.UpdateVirtualGateway.UpdateVirtualGateway
instance GHC.Classes.Eq Amazonka.AppMesh.UpdateVirtualGateway.UpdateVirtualGateway
instance GHC.Generics.Generic Amazonka.AppMesh.UpdateVirtualGateway.UpdateVirtualGatewayResponse
instance GHC.Show.Show Amazonka.AppMesh.UpdateVirtualGateway.UpdateVirtualGatewayResponse
instance GHC.Read.Read Amazonka.AppMesh.UpdateVirtualGateway.UpdateVirtualGatewayResponse
instance GHC.Classes.Eq Amazonka.AppMesh.UpdateVirtualGateway.UpdateVirtualGatewayResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.UpdateVirtualGateway.UpdateVirtualGateway
instance Control.DeepSeq.NFData Amazonka.AppMesh.UpdateVirtualGateway.UpdateVirtualGatewayResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.UpdateVirtualGateway.UpdateVirtualGateway
instance Control.DeepSeq.NFData Amazonka.AppMesh.UpdateVirtualGateway.UpdateVirtualGateway
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.UpdateVirtualGateway.UpdateVirtualGateway
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.UpdateVirtualGateway.UpdateVirtualGateway
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.UpdateVirtualGateway.UpdateVirtualGateway
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.UpdateVirtualGateway.UpdateVirtualGateway


-- | Updates an existing virtual node in a specified service mesh.
module Amazonka.AppMesh.UpdateVirtualNode

-- | <i>See:</i> <a>newUpdateVirtualNode</a> smart constructor.
data UpdateVirtualNode
UpdateVirtualNode' :: Maybe Text -> Maybe Text -> Text -> VirtualNodeSpec -> Text -> UpdateVirtualNode

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
[$sel:clientToken:UpdateVirtualNode'] :: UpdateVirtualNode -> Maybe Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:UpdateVirtualNode'] :: UpdateVirtualNode -> Maybe Text

-- | The name of the service mesh that the virtual node resides in.
[$sel:meshName:UpdateVirtualNode'] :: UpdateVirtualNode -> Text

-- | The new virtual node specification to apply. This overwrites the
--   existing data.
[$sel:spec:UpdateVirtualNode'] :: UpdateVirtualNode -> VirtualNodeSpec

-- | The name of the virtual node to update.
[$sel:virtualNodeName:UpdateVirtualNode'] :: UpdateVirtualNode -> Text

-- | Create a value of <a>UpdateVirtualNode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateVirtualNode'</a>,
--   <a>updateVirtualNode_clientToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   Up to 36 letters, numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:meshOwner:UpdateVirtualNode'</a>,
--   <a>updateVirtualNode_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:UpdateVirtualNode'</a>,
--   <a>updateVirtualNode_meshName</a> - The name of the service mesh that
--   the virtual node resides in.
--   
--   <a>$sel:spec:UpdateVirtualNode'</a>, <a>updateVirtualNode_spec</a> -
--   The new virtual node specification to apply. This overwrites the
--   existing data.
--   
--   <a>$sel:virtualNodeName:UpdateVirtualNode'</a>,
--   <a>updateVirtualNode_virtualNodeName</a> - The name of the virtual
--   node to update.
newUpdateVirtualNode :: Text -> VirtualNodeSpec -> Text -> UpdateVirtualNode

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
updateVirtualNode_clientToken :: Lens' UpdateVirtualNode (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
updateVirtualNode_meshOwner :: Lens' UpdateVirtualNode (Maybe Text)

-- | The name of the service mesh that the virtual node resides in.
updateVirtualNode_meshName :: Lens' UpdateVirtualNode Text

-- | The new virtual node specification to apply. This overwrites the
--   existing data.
updateVirtualNode_spec :: Lens' UpdateVirtualNode VirtualNodeSpec

-- | The name of the virtual node to update.
updateVirtualNode_virtualNodeName :: Lens' UpdateVirtualNode Text

-- | <i>See:</i> <a>newUpdateVirtualNodeResponse</a> smart constructor.
data UpdateVirtualNodeResponse
UpdateVirtualNodeResponse' :: Int -> VirtualNodeData -> UpdateVirtualNodeResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateVirtualNodeResponse'] :: UpdateVirtualNodeResponse -> Int

-- | A full description of the virtual node that was updated.
[$sel:virtualNode:UpdateVirtualNodeResponse'] :: UpdateVirtualNodeResponse -> VirtualNodeData

-- | Create a value of <a>UpdateVirtualNodeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateVirtualNodeResponse'</a>,
--   <a>updateVirtualNodeResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualNode:UpdateVirtualNodeResponse'</a>,
--   <a>updateVirtualNodeResponse_virtualNode</a> - A full description of
--   the virtual node that was updated.
newUpdateVirtualNodeResponse :: Int -> VirtualNodeData -> UpdateVirtualNodeResponse

-- | The response's http status code.
updateVirtualNodeResponse_httpStatus :: Lens' UpdateVirtualNodeResponse Int

-- | A full description of the virtual node that was updated.
updateVirtualNodeResponse_virtualNode :: Lens' UpdateVirtualNodeResponse VirtualNodeData
instance GHC.Generics.Generic Amazonka.AppMesh.UpdateVirtualNode.UpdateVirtualNode
instance GHC.Show.Show Amazonka.AppMesh.UpdateVirtualNode.UpdateVirtualNode
instance GHC.Read.Read Amazonka.AppMesh.UpdateVirtualNode.UpdateVirtualNode
instance GHC.Classes.Eq Amazonka.AppMesh.UpdateVirtualNode.UpdateVirtualNode
instance GHC.Generics.Generic Amazonka.AppMesh.UpdateVirtualNode.UpdateVirtualNodeResponse
instance GHC.Show.Show Amazonka.AppMesh.UpdateVirtualNode.UpdateVirtualNodeResponse
instance GHC.Read.Read Amazonka.AppMesh.UpdateVirtualNode.UpdateVirtualNodeResponse
instance GHC.Classes.Eq Amazonka.AppMesh.UpdateVirtualNode.UpdateVirtualNodeResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.UpdateVirtualNode.UpdateVirtualNode
instance Control.DeepSeq.NFData Amazonka.AppMesh.UpdateVirtualNode.UpdateVirtualNodeResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.UpdateVirtualNode.UpdateVirtualNode
instance Control.DeepSeq.NFData Amazonka.AppMesh.UpdateVirtualNode.UpdateVirtualNode
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.UpdateVirtualNode.UpdateVirtualNode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.UpdateVirtualNode.UpdateVirtualNode
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.UpdateVirtualNode.UpdateVirtualNode
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.UpdateVirtualNode.UpdateVirtualNode


-- | Updates an existing virtual router in a specified service mesh.
module Amazonka.AppMesh.UpdateVirtualRouter

-- | <i>See:</i> <a>newUpdateVirtualRouter</a> smart constructor.
data UpdateVirtualRouter
UpdateVirtualRouter' :: Maybe Text -> Maybe Text -> Text -> VirtualRouterSpec -> Text -> UpdateVirtualRouter

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
[$sel:clientToken:UpdateVirtualRouter'] :: UpdateVirtualRouter -> Maybe Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:UpdateVirtualRouter'] :: UpdateVirtualRouter -> Maybe Text

-- | The name of the service mesh that the virtual router resides in.
[$sel:meshName:UpdateVirtualRouter'] :: UpdateVirtualRouter -> Text

-- | The new virtual router specification to apply. This overwrites the
--   existing data.
[$sel:spec:UpdateVirtualRouter'] :: UpdateVirtualRouter -> VirtualRouterSpec

-- | The name of the virtual router to update.
[$sel:virtualRouterName:UpdateVirtualRouter'] :: UpdateVirtualRouter -> Text

-- | Create a value of <a>UpdateVirtualRouter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateVirtualRouter'</a>,
--   <a>updateVirtualRouter_clientToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   Up to 36 letters, numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:meshOwner:UpdateVirtualRouter'</a>,
--   <a>updateVirtualRouter_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:UpdateVirtualRouter'</a>,
--   <a>updateVirtualRouter_meshName</a> - The name of the service mesh
--   that the virtual router resides in.
--   
--   <a>$sel:spec:UpdateVirtualRouter'</a>, <a>updateVirtualRouter_spec</a>
--   - The new virtual router specification to apply. This overwrites the
--   existing data.
--   
--   <a>$sel:virtualRouterName:UpdateVirtualRouter'</a>,
--   <a>updateVirtualRouter_virtualRouterName</a> - The name of the virtual
--   router to update.
newUpdateVirtualRouter :: Text -> VirtualRouterSpec -> Text -> UpdateVirtualRouter

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
updateVirtualRouter_clientToken :: Lens' UpdateVirtualRouter (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
updateVirtualRouter_meshOwner :: Lens' UpdateVirtualRouter (Maybe Text)

-- | The name of the service mesh that the virtual router resides in.
updateVirtualRouter_meshName :: Lens' UpdateVirtualRouter Text

-- | The new virtual router specification to apply. This overwrites the
--   existing data.
updateVirtualRouter_spec :: Lens' UpdateVirtualRouter VirtualRouterSpec

-- | The name of the virtual router to update.
updateVirtualRouter_virtualRouterName :: Lens' UpdateVirtualRouter Text

-- | <i>See:</i> <a>newUpdateVirtualRouterResponse</a> smart constructor.
data UpdateVirtualRouterResponse
UpdateVirtualRouterResponse' :: Int -> VirtualRouterData -> UpdateVirtualRouterResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateVirtualRouterResponse'] :: UpdateVirtualRouterResponse -> Int

-- | A full description of the virtual router that was updated.
[$sel:virtualRouter:UpdateVirtualRouterResponse'] :: UpdateVirtualRouterResponse -> VirtualRouterData

-- | Create a value of <a>UpdateVirtualRouterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateVirtualRouterResponse'</a>,
--   <a>updateVirtualRouterResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualRouter:UpdateVirtualRouterResponse'</a>,
--   <a>updateVirtualRouterResponse_virtualRouter</a> - A full description
--   of the virtual router that was updated.
newUpdateVirtualRouterResponse :: Int -> VirtualRouterData -> UpdateVirtualRouterResponse

-- | The response's http status code.
updateVirtualRouterResponse_httpStatus :: Lens' UpdateVirtualRouterResponse Int

-- | A full description of the virtual router that was updated.
updateVirtualRouterResponse_virtualRouter :: Lens' UpdateVirtualRouterResponse VirtualRouterData
instance GHC.Generics.Generic Amazonka.AppMesh.UpdateVirtualRouter.UpdateVirtualRouter
instance GHC.Show.Show Amazonka.AppMesh.UpdateVirtualRouter.UpdateVirtualRouter
instance GHC.Read.Read Amazonka.AppMesh.UpdateVirtualRouter.UpdateVirtualRouter
instance GHC.Classes.Eq Amazonka.AppMesh.UpdateVirtualRouter.UpdateVirtualRouter
instance GHC.Generics.Generic Amazonka.AppMesh.UpdateVirtualRouter.UpdateVirtualRouterResponse
instance GHC.Show.Show Amazonka.AppMesh.UpdateVirtualRouter.UpdateVirtualRouterResponse
instance GHC.Read.Read Amazonka.AppMesh.UpdateVirtualRouter.UpdateVirtualRouterResponse
instance GHC.Classes.Eq Amazonka.AppMesh.UpdateVirtualRouter.UpdateVirtualRouterResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.UpdateVirtualRouter.UpdateVirtualRouter
instance Control.DeepSeq.NFData Amazonka.AppMesh.UpdateVirtualRouter.UpdateVirtualRouterResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.UpdateVirtualRouter.UpdateVirtualRouter
instance Control.DeepSeq.NFData Amazonka.AppMesh.UpdateVirtualRouter.UpdateVirtualRouter
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.UpdateVirtualRouter.UpdateVirtualRouter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.UpdateVirtualRouter.UpdateVirtualRouter
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.UpdateVirtualRouter.UpdateVirtualRouter
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.UpdateVirtualRouter.UpdateVirtualRouter


-- | Updates an existing virtual service in a specified service mesh.
module Amazonka.AppMesh.UpdateVirtualService

-- | <i>See:</i> <a>newUpdateVirtualService</a> smart constructor.
data UpdateVirtualService
UpdateVirtualService' :: Maybe Text -> Maybe Text -> Text -> VirtualServiceSpec -> Text -> UpdateVirtualService

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
[$sel:clientToken:UpdateVirtualService'] :: UpdateVirtualService -> Maybe Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
[$sel:meshOwner:UpdateVirtualService'] :: UpdateVirtualService -> Maybe Text

-- | The name of the service mesh that the virtual service resides in.
[$sel:meshName:UpdateVirtualService'] :: UpdateVirtualService -> Text

-- | The new virtual service specification to apply. This overwrites the
--   existing data.
[$sel:spec:UpdateVirtualService'] :: UpdateVirtualService -> VirtualServiceSpec

-- | The name of the virtual service to update.
[$sel:virtualServiceName:UpdateVirtualService'] :: UpdateVirtualService -> Text

-- | Create a value of <a>UpdateVirtualService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateVirtualService'</a>,
--   <a>updateVirtualService_clientToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   Up to 36 letters, numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:meshOwner:UpdateVirtualService'</a>,
--   <a>updateVirtualService_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:UpdateVirtualService'</a>,
--   <a>updateVirtualService_meshName</a> - The name of the service mesh
--   that the virtual service resides in.
--   
--   <a>$sel:spec:UpdateVirtualService'</a>,
--   <a>updateVirtualService_spec</a> - The new virtual service
--   specification to apply. This overwrites the existing data.
--   
--   <a>$sel:virtualServiceName:UpdateVirtualService'</a>,
--   <a>updateVirtualService_virtualServiceName</a> - The name of the
--   virtual service to update.
newUpdateVirtualService :: Text -> VirtualServiceSpec -> Text -> UpdateVirtualService

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
updateVirtualService_clientToken :: Lens' UpdateVirtualService (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
updateVirtualService_meshOwner :: Lens' UpdateVirtualService (Maybe Text)

-- | The name of the service mesh that the virtual service resides in.
updateVirtualService_meshName :: Lens' UpdateVirtualService Text

-- | The new virtual service specification to apply. This overwrites the
--   existing data.
updateVirtualService_spec :: Lens' UpdateVirtualService VirtualServiceSpec

-- | The name of the virtual service to update.
updateVirtualService_virtualServiceName :: Lens' UpdateVirtualService Text

-- | <i>See:</i> <a>newUpdateVirtualServiceResponse</a> smart constructor.
data UpdateVirtualServiceResponse
UpdateVirtualServiceResponse' :: Int -> VirtualServiceData -> UpdateVirtualServiceResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateVirtualServiceResponse'] :: UpdateVirtualServiceResponse -> Int

-- | A full description of the virtual service that was updated.
[$sel:virtualService:UpdateVirtualServiceResponse'] :: UpdateVirtualServiceResponse -> VirtualServiceData

-- | Create a value of <a>UpdateVirtualServiceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateVirtualServiceResponse'</a>,
--   <a>updateVirtualServiceResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualService:UpdateVirtualServiceResponse'</a>,
--   <a>updateVirtualServiceResponse_virtualService</a> - A full
--   description of the virtual service that was updated.
newUpdateVirtualServiceResponse :: Int -> VirtualServiceData -> UpdateVirtualServiceResponse

-- | The response's http status code.
updateVirtualServiceResponse_httpStatus :: Lens' UpdateVirtualServiceResponse Int

-- | A full description of the virtual service that was updated.
updateVirtualServiceResponse_virtualService :: Lens' UpdateVirtualServiceResponse VirtualServiceData
instance GHC.Generics.Generic Amazonka.AppMesh.UpdateVirtualService.UpdateVirtualService
instance GHC.Show.Show Amazonka.AppMesh.UpdateVirtualService.UpdateVirtualService
instance GHC.Read.Read Amazonka.AppMesh.UpdateVirtualService.UpdateVirtualService
instance GHC.Classes.Eq Amazonka.AppMesh.UpdateVirtualService.UpdateVirtualService
instance GHC.Generics.Generic Amazonka.AppMesh.UpdateVirtualService.UpdateVirtualServiceResponse
instance GHC.Show.Show Amazonka.AppMesh.UpdateVirtualService.UpdateVirtualServiceResponse
instance GHC.Read.Read Amazonka.AppMesh.UpdateVirtualService.UpdateVirtualServiceResponse
instance GHC.Classes.Eq Amazonka.AppMesh.UpdateVirtualService.UpdateVirtualServiceResponse
instance Amazonka.Types.AWSRequest Amazonka.AppMesh.UpdateVirtualService.UpdateVirtualService
instance Control.DeepSeq.NFData Amazonka.AppMesh.UpdateVirtualService.UpdateVirtualServiceResponse
instance Data.Hashable.Class.Hashable Amazonka.AppMesh.UpdateVirtualService.UpdateVirtualService
instance Control.DeepSeq.NFData Amazonka.AppMesh.UpdateVirtualService.UpdateVirtualService
instance Amazonka.Data.Headers.ToHeaders Amazonka.AppMesh.UpdateVirtualService.UpdateVirtualService
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.AppMesh.UpdateVirtualService.UpdateVirtualService
instance Amazonka.Data.Path.ToPath Amazonka.AppMesh.UpdateVirtualService.UpdateVirtualService
instance Amazonka.Data.Query.ToQuery Amazonka.AppMesh.UpdateVirtualService.UpdateVirtualService


module Amazonka.AppMesh.Lens

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
describeVirtualNode_meshOwner :: Lens' DescribeVirtualNode (Maybe Text)

-- | The name of the service mesh that the virtual node resides in.
describeVirtualNode_meshName :: Lens' DescribeVirtualNode Text

-- | The name of the virtual node to describe.
describeVirtualNode_virtualNodeName :: Lens' DescribeVirtualNode Text

-- | The response's http status code.
describeVirtualNodeResponse_httpStatus :: Lens' DescribeVirtualNodeResponse Int

-- | The full description of your virtual node.
describeVirtualNodeResponse_virtualNode :: Lens' DescribeVirtualNodeResponse VirtualNodeData

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
describeVirtualGateway_meshOwner :: Lens' DescribeVirtualGateway (Maybe Text)

-- | The name of the service mesh that the gateway route resides in.
describeVirtualGateway_meshName :: Lens' DescribeVirtualGateway Text

-- | The name of the virtual gateway to describe.
describeVirtualGateway_virtualGatewayName :: Lens' DescribeVirtualGateway Text

-- | The response's http status code.
describeVirtualGatewayResponse_httpStatus :: Lens' DescribeVirtualGatewayResponse Int

-- | The full description of your virtual gateway.
describeVirtualGatewayResponse_virtualGateway :: Lens' DescribeVirtualGatewayResponse VirtualGatewayData

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
describeRoute_meshOwner :: Lens' DescribeRoute (Maybe Text)

-- | The name of the service mesh that the route resides in.
describeRoute_meshName :: Lens' DescribeRoute Text

-- | The name of the route to describe.
describeRoute_routeName :: Lens' DescribeRoute Text

-- | The name of the virtual router that the route is associated with.
describeRoute_virtualRouterName :: Lens' DescribeRoute Text

-- | The response's http status code.
describeRouteResponse_httpStatus :: Lens' DescribeRouteResponse Int

-- | The full description of your route.
describeRouteResponse_route :: Lens' DescribeRouteResponse RouteData

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
describeVirtualRouter_meshOwner :: Lens' DescribeVirtualRouter (Maybe Text)

-- | The name of the service mesh that the virtual router resides in.
describeVirtualRouter_meshName :: Lens' DescribeVirtualRouter Text

-- | The name of the virtual router to describe.
describeVirtualRouter_virtualRouterName :: Lens' DescribeVirtualRouter Text

-- | The response's http status code.
describeVirtualRouterResponse_httpStatus :: Lens' DescribeVirtualRouterResponse Int

-- | The full description of your virtual router.
describeVirtualRouterResponse_virtualRouter :: Lens' DescribeVirtualRouterResponse VirtualRouterData

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListMeshes</tt> request where <tt>limit</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
listMeshes_nextToken :: Lens' ListMeshes (Maybe Text)

-- | The maximum number of results returned by <tt>ListMeshes</tt> in
--   paginated output. When you use this parameter, <tt>ListMeshes</tt>
--   returns only <tt>limit</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListMeshes</tt> request
--   with the returned <tt>nextToken</tt> value. This value can be between
--   1 and 100. If you don't use this parameter, <tt>ListMeshes</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
listMeshes_limit :: Lens' ListMeshes (Maybe Natural)

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListMeshes</tt> request. When the results of a <tt>ListMeshes</tt>
--   request exceed <tt>limit</tt>, you can use this value to retrieve the
--   next page of results. This value is <tt>null</tt> when there are no
--   more results to return.
listMeshesResponse_nextToken :: Lens' ListMeshesResponse (Maybe Text)

-- | The response's http status code.
listMeshesResponse_httpStatus :: Lens' ListMeshesResponse Int

-- | The list of existing service meshes.
listMeshesResponse_meshes :: Lens' ListMeshesResponse [MeshRef]

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
createMesh_clientToken :: Lens' CreateMesh (Maybe Text)

-- | The service mesh specification to apply.
createMesh_spec :: Lens' CreateMesh (Maybe MeshSpec)

-- | Optional metadata that you can apply to the service mesh to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
createMesh_tags :: Lens' CreateMesh (Maybe [TagRef])

-- | The name to use for the service mesh.
createMesh_meshName :: Lens' CreateMesh Text

-- | The response's http status code.
createMeshResponse_httpStatus :: Lens' CreateMeshResponse Int

-- | The full description of your service mesh following the create call.
createMeshResponse_mesh :: Lens' CreateMeshResponse MeshData

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
updateMesh_clientToken :: Lens' UpdateMesh (Maybe Text)

-- | The service mesh specification to apply.
updateMesh_spec :: Lens' UpdateMesh (Maybe MeshSpec)

-- | The name of the service mesh to update.
updateMesh_meshName :: Lens' UpdateMesh Text

-- | The response's http status code.
updateMeshResponse_httpStatus :: Lens' UpdateMeshResponse Int

-- | Undocumented member.
updateMeshResponse_mesh :: Lens' UpdateMeshResponse MeshData

-- | The name of the service mesh to delete.
deleteMesh_meshName :: Lens' DeleteMesh Text

-- | The response's http status code.
deleteMeshResponse_httpStatus :: Lens' DeleteMeshResponse Int

-- | The service mesh that was deleted.
deleteMeshResponse_mesh :: Lens' DeleteMeshResponse MeshData

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListTagsForResource</tt> request where <tt>limit</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | The maximum number of tag results returned by
--   <tt>ListTagsForResource</tt> in paginated output. When this parameter
--   is used, <tt>ListTagsForResource</tt> returns only <tt>limit</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. You can see the remaining results of the initial request by
--   sending another <tt>ListTagsForResource</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListTagsForResource</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
listTagsForResource_limit :: Lens' ListTagsForResource (Maybe Natural)

-- | The Amazon Resource Name (ARN) that identifies the resource to list
--   the tags for.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListTagsForResource</tt> request. When the results of a
--   <tt>ListTagsForResource</tt> request exceed <tt>limit</tt>, you can
--   use this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The tags for the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse [TagRef]

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
createVirtualGateway_clientToken :: Lens' CreateVirtualGateway (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then the account that you specify must share the mesh
--   with your account before you can create the resource in the service
--   mesh. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
createVirtualGateway_meshOwner :: Lens' CreateVirtualGateway (Maybe Text)

-- | Optional metadata that you can apply to the virtual gateway to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
createVirtualGateway_tags :: Lens' CreateVirtualGateway (Maybe [TagRef])

-- | The name of the service mesh to create the virtual gateway in.
createVirtualGateway_meshName :: Lens' CreateVirtualGateway Text

-- | The virtual gateway specification to apply.
createVirtualGateway_spec :: Lens' CreateVirtualGateway VirtualGatewaySpec

-- | The name to use for the virtual gateway.
createVirtualGateway_virtualGatewayName :: Lens' CreateVirtualGateway Text

-- | The response's http status code.
createVirtualGatewayResponse_httpStatus :: Lens' CreateVirtualGatewayResponse Int

-- | The full description of your virtual gateway following the create
--   call.
createVirtualGatewayResponse_virtualGateway :: Lens' CreateVirtualGatewayResponse VirtualGatewayData

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
listVirtualServices_meshOwner :: Lens' ListVirtualServices (Maybe Text)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListVirtualServices</tt> request where <tt>limit</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listVirtualServices_nextToken :: Lens' ListVirtualServices (Maybe Text)

-- | The maximum number of results returned by <tt>ListVirtualServices</tt>
--   in paginated output. When you use this parameter,
--   <tt>ListVirtualServices</tt> returns only <tt>limit</tt> results in a
--   single page along with a <tt>nextToken</tt> response element. You can
--   see the remaining results of the initial request by sending another
--   <tt>ListVirtualServices</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListVirtualServices</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
listVirtualServices_limit :: Lens' ListVirtualServices (Maybe Natural)

-- | The name of the service mesh to list virtual services in.
listVirtualServices_meshName :: Lens' ListVirtualServices Text

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListVirtualServices</tt> request. When the results of a
--   <tt>ListVirtualServices</tt> request exceed <tt>limit</tt>, you can
--   use this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listVirtualServicesResponse_nextToken :: Lens' ListVirtualServicesResponse (Maybe Text)

-- | The response's http status code.
listVirtualServicesResponse_httpStatus :: Lens' ListVirtualServicesResponse Int

-- | The list of existing virtual services for the specified service mesh.
listVirtualServicesResponse_virtualServices :: Lens' ListVirtualServicesResponse [VirtualServiceRef]

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
deleteVirtualService_meshOwner :: Lens' DeleteVirtualService (Maybe Text)

-- | The name of the service mesh to delete the virtual service in.
deleteVirtualService_meshName :: Lens' DeleteVirtualService Text

-- | The name of the virtual service to delete.
deleteVirtualService_virtualServiceName :: Lens' DeleteVirtualService Text

-- | The response's http status code.
deleteVirtualServiceResponse_httpStatus :: Lens' DeleteVirtualServiceResponse Int

-- | The virtual service that was deleted.
deleteVirtualServiceResponse_virtualService :: Lens' DeleteVirtualServiceResponse VirtualServiceData

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
updateVirtualService_clientToken :: Lens' UpdateVirtualService (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
updateVirtualService_meshOwner :: Lens' UpdateVirtualService (Maybe Text)

-- | The name of the service mesh that the virtual service resides in.
updateVirtualService_meshName :: Lens' UpdateVirtualService Text

-- | The new virtual service specification to apply. This overwrites the
--   existing data.
updateVirtualService_spec :: Lens' UpdateVirtualService VirtualServiceSpec

-- | The name of the virtual service to update.
updateVirtualService_virtualServiceName :: Lens' UpdateVirtualService Text

-- | The response's http status code.
updateVirtualServiceResponse_httpStatus :: Lens' UpdateVirtualServiceResponse Int

-- | A full description of the virtual service that was updated.
updateVirtualServiceResponse_virtualService :: Lens' UpdateVirtualServiceResponse VirtualServiceData

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
updateVirtualGateway_clientToken :: Lens' UpdateVirtualGateway (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
updateVirtualGateway_meshOwner :: Lens' UpdateVirtualGateway (Maybe Text)

-- | The name of the service mesh that the virtual gateway resides in.
updateVirtualGateway_meshName :: Lens' UpdateVirtualGateway Text

-- | The new virtual gateway specification to apply. This overwrites the
--   existing data.
updateVirtualGateway_spec :: Lens' UpdateVirtualGateway VirtualGatewaySpec

-- | The name of the virtual gateway to update.
updateVirtualGateway_virtualGatewayName :: Lens' UpdateVirtualGateway Text

-- | The response's http status code.
updateVirtualGatewayResponse_httpStatus :: Lens' UpdateVirtualGatewayResponse Int

-- | A full description of the virtual gateway that was updated.
updateVirtualGatewayResponse_virtualGateway :: Lens' UpdateVirtualGatewayResponse VirtualGatewayData

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
deleteVirtualGateway_meshOwner :: Lens' DeleteVirtualGateway (Maybe Text)

-- | The name of the service mesh to delete the virtual gateway from.
deleteVirtualGateway_meshName :: Lens' DeleteVirtualGateway Text

-- | The name of the virtual gateway to delete.
deleteVirtualGateway_virtualGatewayName :: Lens' DeleteVirtualGateway Text

-- | The response's http status code.
deleteVirtualGatewayResponse_httpStatus :: Lens' DeleteVirtualGatewayResponse Int

-- | The virtual gateway that was deleted.
deleteVirtualGatewayResponse_virtualGateway :: Lens' DeleteVirtualGatewayResponse VirtualGatewayData

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
deleteRoute_meshOwner :: Lens' DeleteRoute (Maybe Text)

-- | The name of the service mesh to delete the route in.
deleteRoute_meshName :: Lens' DeleteRoute Text

-- | The name of the route to delete.
deleteRoute_routeName :: Lens' DeleteRoute Text

-- | The name of the virtual router to delete the route in.
deleteRoute_virtualRouterName :: Lens' DeleteRoute Text

-- | The response's http status code.
deleteRouteResponse_httpStatus :: Lens' DeleteRouteResponse Int

-- | The route that was deleted.
deleteRouteResponse_route :: Lens' DeleteRouteResponse RouteData

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
updateRoute_clientToken :: Lens' UpdateRoute (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
updateRoute_meshOwner :: Lens' UpdateRoute (Maybe Text)

-- | The name of the service mesh that the route resides in.
updateRoute_meshName :: Lens' UpdateRoute Text

-- | The name of the route to update.
updateRoute_routeName :: Lens' UpdateRoute Text

-- | The new route specification to apply. This overwrites the existing
--   data.
updateRoute_spec :: Lens' UpdateRoute RouteSpec

-- | The name of the virtual router that the route is associated with.
updateRoute_virtualRouterName :: Lens' UpdateRoute Text

-- | The response's http status code.
updateRouteResponse_httpStatus :: Lens' UpdateRouteResponse Int

-- | A full description of the route that was updated.
updateRouteResponse_route :: Lens' UpdateRouteResponse RouteData

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
createVirtualService_clientToken :: Lens' CreateVirtualService (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then the account that you specify must share the mesh
--   with your account before you can create the resource in the service
--   mesh. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
createVirtualService_meshOwner :: Lens' CreateVirtualService (Maybe Text)

-- | Optional metadata that you can apply to the virtual service to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
createVirtualService_tags :: Lens' CreateVirtualService (Maybe [TagRef])

-- | The name of the service mesh to create the virtual service in.
createVirtualService_meshName :: Lens' CreateVirtualService Text

-- | The virtual service specification to apply.
createVirtualService_spec :: Lens' CreateVirtualService VirtualServiceSpec

-- | The name to use for the virtual service.
createVirtualService_virtualServiceName :: Lens' CreateVirtualService Text

-- | The response's http status code.
createVirtualServiceResponse_httpStatus :: Lens' CreateVirtualServiceResponse Int

-- | The full description of your virtual service following the create
--   call.
createVirtualServiceResponse_virtualService :: Lens' CreateVirtualServiceResponse VirtualServiceData

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
deleteVirtualNode_meshOwner :: Lens' DeleteVirtualNode (Maybe Text)

-- | The name of the service mesh to delete the virtual node in.
deleteVirtualNode_meshName :: Lens' DeleteVirtualNode Text

-- | The name of the virtual node to delete.
deleteVirtualNode_virtualNodeName :: Lens' DeleteVirtualNode Text

-- | The response's http status code.
deleteVirtualNodeResponse_httpStatus :: Lens' DeleteVirtualNodeResponse Int

-- | The virtual node that was deleted.
deleteVirtualNodeResponse_virtualNode :: Lens' DeleteVirtualNodeResponse VirtualNodeData

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
updateVirtualNode_clientToken :: Lens' UpdateVirtualNode (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
updateVirtualNode_meshOwner :: Lens' UpdateVirtualNode (Maybe Text)

-- | The name of the service mesh that the virtual node resides in.
updateVirtualNode_meshName :: Lens' UpdateVirtualNode Text

-- | The new virtual node specification to apply. This overwrites the
--   existing data.
updateVirtualNode_spec :: Lens' UpdateVirtualNode VirtualNodeSpec

-- | The name of the virtual node to update.
updateVirtualNode_virtualNodeName :: Lens' UpdateVirtualNode Text

-- | The response's http status code.
updateVirtualNodeResponse_httpStatus :: Lens' UpdateVirtualNodeResponse Int

-- | A full description of the virtual node that was updated.
updateVirtualNodeResponse_virtualNode :: Lens' UpdateVirtualNodeResponse VirtualNodeData

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
listGatewayRoutes_meshOwner :: Lens' ListGatewayRoutes (Maybe Text)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListGatewayRoutes</tt> request where <tt>limit</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listGatewayRoutes_nextToken :: Lens' ListGatewayRoutes (Maybe Text)

-- | The maximum number of results returned by <tt>ListGatewayRoutes</tt>
--   in paginated output. When you use this parameter,
--   <tt>ListGatewayRoutes</tt> returns only <tt>limit</tt> results in a
--   single page along with a <tt>nextToken</tt> response element. You can
--   see the remaining results of the initial request by sending another
--   <tt>ListGatewayRoutes</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListGatewayRoutes</tt> returns up to 100
--   results and a <tt>nextToken</tt> value if applicable.
listGatewayRoutes_limit :: Lens' ListGatewayRoutes (Maybe Natural)

-- | The name of the service mesh to list gateway routes in.
listGatewayRoutes_meshName :: Lens' ListGatewayRoutes Text

-- | The name of the virtual gateway to list gateway routes in.
listGatewayRoutes_virtualGatewayName :: Lens' ListGatewayRoutes Text

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListGatewayRoutes</tt> request. When the results of a
--   <tt>ListGatewayRoutes</tt> request exceed <tt>limit</tt>, you can use
--   this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listGatewayRoutesResponse_nextToken :: Lens' ListGatewayRoutesResponse (Maybe Text)

-- | The response's http status code.
listGatewayRoutesResponse_httpStatus :: Lens' ListGatewayRoutesResponse Int

-- | The list of existing gateway routes for the specified service mesh and
--   virtual gateway.
listGatewayRoutesResponse_gatewayRoutes :: Lens' ListGatewayRoutesResponse [GatewayRouteRef]

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
listRoutes_meshOwner :: Lens' ListRoutes (Maybe Text)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListRoutes</tt> request where <tt>limit</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listRoutes_nextToken :: Lens' ListRoutes (Maybe Text)

-- | The maximum number of results returned by <tt>ListRoutes</tt> in
--   paginated output. When you use this parameter, <tt>ListRoutes</tt>
--   returns only <tt>limit</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListRoutes</tt> request
--   with the returned <tt>nextToken</tt> value. This value can be between
--   1 and 100. If you don't use this parameter, <tt>ListRoutes</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
listRoutes_limit :: Lens' ListRoutes (Maybe Natural)

-- | The name of the service mesh to list routes in.
listRoutes_meshName :: Lens' ListRoutes Text

-- | The name of the virtual router to list routes in.
listRoutes_virtualRouterName :: Lens' ListRoutes Text

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListRoutes</tt> request. When the results of a <tt>ListRoutes</tt>
--   request exceed <tt>limit</tt>, you can use this value to retrieve the
--   next page of results. This value is <tt>null</tt> when there are no
--   more results to return.
listRoutesResponse_nextToken :: Lens' ListRoutesResponse (Maybe Text)

-- | The response's http status code.
listRoutesResponse_httpStatus :: Lens' ListRoutesResponse Int

-- | The list of existing routes for the specified service mesh and virtual
--   router.
listRoutesResponse_routes :: Lens' ListRoutesResponse [RouteRef]

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
listVirtualNodes_meshOwner :: Lens' ListVirtualNodes (Maybe Text)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListVirtualNodes</tt> request where <tt>limit</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listVirtualNodes_nextToken :: Lens' ListVirtualNodes (Maybe Text)

-- | The maximum number of results returned by <tt>ListVirtualNodes</tt> in
--   paginated output. When you use this parameter,
--   <tt>ListVirtualNodes</tt> returns only <tt>limit</tt> results in a
--   single page along with a <tt>nextToken</tt> response element. You can
--   see the remaining results of the initial request by sending another
--   <tt>ListVirtualNodes</tt> request with the returned <tt>nextToken</tt>
--   value. This value can be between 1 and 100. If you don't use this
--   parameter, <tt>ListVirtualNodes</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
listVirtualNodes_limit :: Lens' ListVirtualNodes (Maybe Natural)

-- | The name of the service mesh to list virtual nodes in.
listVirtualNodes_meshName :: Lens' ListVirtualNodes Text

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListVirtualNodes</tt> request. When the results of a
--   <tt>ListVirtualNodes</tt> request exceed <tt>limit</tt>, you can use
--   this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listVirtualNodesResponse_nextToken :: Lens' ListVirtualNodesResponse (Maybe Text)

-- | The response's http status code.
listVirtualNodesResponse_httpStatus :: Lens' ListVirtualNodesResponse Int

-- | The list of existing virtual nodes for the specified service mesh.
listVirtualNodesResponse_virtualNodes :: Lens' ListVirtualNodesResponse [VirtualNodeRef]

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
deleteVirtualRouter_meshOwner :: Lens' DeleteVirtualRouter (Maybe Text)

-- | The name of the service mesh to delete the virtual router in.
deleteVirtualRouter_meshName :: Lens' DeleteVirtualRouter Text

-- | The name of the virtual router to delete.
deleteVirtualRouter_virtualRouterName :: Lens' DeleteVirtualRouter Text

-- | The response's http status code.
deleteVirtualRouterResponse_httpStatus :: Lens' DeleteVirtualRouterResponse Int

-- | The virtual router that was deleted.
deleteVirtualRouterResponse_virtualRouter :: Lens' DeleteVirtualRouterResponse VirtualRouterData

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
updateVirtualRouter_clientToken :: Lens' UpdateVirtualRouter (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
updateVirtualRouter_meshOwner :: Lens' UpdateVirtualRouter (Maybe Text)

-- | The name of the service mesh that the virtual router resides in.
updateVirtualRouter_meshName :: Lens' UpdateVirtualRouter Text

-- | The new virtual router specification to apply. This overwrites the
--   existing data.
updateVirtualRouter_spec :: Lens' UpdateVirtualRouter VirtualRouterSpec

-- | The name of the virtual router to update.
updateVirtualRouter_virtualRouterName :: Lens' UpdateVirtualRouter Text

-- | The response's http status code.
updateVirtualRouterResponse_httpStatus :: Lens' UpdateVirtualRouterResponse Int

-- | A full description of the virtual router that was updated.
updateVirtualRouterResponse_virtualRouter :: Lens' UpdateVirtualRouterResponse VirtualRouterData

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
createVirtualRouter_clientToken :: Lens' CreateVirtualRouter (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then the account that you specify must share the mesh
--   with your account before you can create the resource in the service
--   mesh. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
createVirtualRouter_meshOwner :: Lens' CreateVirtualRouter (Maybe Text)

-- | Optional metadata that you can apply to the virtual router to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
createVirtualRouter_tags :: Lens' CreateVirtualRouter (Maybe [TagRef])

-- | The name of the service mesh to create the virtual router in.
createVirtualRouter_meshName :: Lens' CreateVirtualRouter Text

-- | The virtual router specification to apply.
createVirtualRouter_spec :: Lens' CreateVirtualRouter VirtualRouterSpec

-- | The name to use for the virtual router.
createVirtualRouter_virtualRouterName :: Lens' CreateVirtualRouter Text

-- | The response's http status code.
createVirtualRouterResponse_httpStatus :: Lens' CreateVirtualRouterResponse Int

-- | The full description of your virtual router following the create call.
createVirtualRouterResponse_virtualRouter :: Lens' CreateVirtualRouterResponse VirtualRouterData

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
describeVirtualService_meshOwner :: Lens' DescribeVirtualService (Maybe Text)

-- | The name of the service mesh that the virtual service resides in.
describeVirtualService_meshName :: Lens' DescribeVirtualService Text

-- | The name of the virtual service to describe.
describeVirtualService_virtualServiceName :: Lens' DescribeVirtualService Text

-- | The response's http status code.
describeVirtualServiceResponse_httpStatus :: Lens' DescribeVirtualServiceResponse Int

-- | The full description of your virtual service.
describeVirtualServiceResponse_virtualService :: Lens' DescribeVirtualServiceResponse VirtualServiceData

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
describeGatewayRoute_meshOwner :: Lens' DescribeGatewayRoute (Maybe Text)

-- | The name of the gateway route to describe.
describeGatewayRoute_gatewayRouteName :: Lens' DescribeGatewayRoute Text

-- | The name of the service mesh that the gateway route resides in.
describeGatewayRoute_meshName :: Lens' DescribeGatewayRoute Text

-- | The name of the virtual gateway that the gateway route is associated
--   with.
describeGatewayRoute_virtualGatewayName :: Lens' DescribeGatewayRoute Text

-- | The response's http status code.
describeGatewayRouteResponse_httpStatus :: Lens' DescribeGatewayRouteResponse Int

-- | The full description of your gateway route.
describeGatewayRouteResponse_gatewayRoute :: Lens' DescribeGatewayRouteResponse GatewayRouteData

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
createRoute_clientToken :: Lens' CreateRoute (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then the account that you specify must share the mesh
--   with your account before you can create the resource in the service
--   mesh. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
createRoute_meshOwner :: Lens' CreateRoute (Maybe Text)

-- | Optional metadata that you can apply to the route to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Tag keys can have a maximum
--   character length of 128 characters, and tag values can have a maximum
--   length of 256 characters.
createRoute_tags :: Lens' CreateRoute (Maybe [TagRef])

-- | The name of the service mesh to create the route in.
createRoute_meshName :: Lens' CreateRoute Text

-- | The name to use for the route.
createRoute_routeName :: Lens' CreateRoute Text

-- | The route specification to apply.
createRoute_spec :: Lens' CreateRoute RouteSpec

-- | The name of the virtual router in which to create the route. If the
--   virtual router is in a shared mesh, then you must be the owner of the
--   virtual router resource.
createRoute_virtualRouterName :: Lens' CreateRoute Text

-- | The response's http status code.
createRouteResponse_httpStatus :: Lens' CreateRouteResponse Int

-- | The full description of your mesh following the create call.
createRouteResponse_route :: Lens' CreateRouteResponse RouteData

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
createVirtualNode_clientToken :: Lens' CreateVirtualNode (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then the account that you specify must share the mesh
--   with your account before you can create the resource in the service
--   mesh. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
createVirtualNode_meshOwner :: Lens' CreateVirtualNode (Maybe Text)

-- | Optional metadata that you can apply to the virtual node to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
createVirtualNode_tags :: Lens' CreateVirtualNode (Maybe [TagRef])

-- | The name of the service mesh to create the virtual node in.
createVirtualNode_meshName :: Lens' CreateVirtualNode Text

-- | The virtual node specification to apply.
createVirtualNode_spec :: Lens' CreateVirtualNode VirtualNodeSpec

-- | The name to use for the virtual node.
createVirtualNode_virtualNodeName :: Lens' CreateVirtualNode Text

-- | The response's http status code.
createVirtualNodeResponse_httpStatus :: Lens' CreateVirtualNodeResponse Int

-- | The full description of your virtual node following the create call.
createVirtualNodeResponse_virtualNode :: Lens' CreateVirtualNodeResponse VirtualNodeData

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
createGatewayRoute_clientToken :: Lens' CreateGatewayRoute (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then the account that you specify must share the mesh
--   with your account before you can create the resource in the service
--   mesh. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
createGatewayRoute_meshOwner :: Lens' CreateGatewayRoute (Maybe Text)

-- | Optional metadata that you can apply to the gateway route to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
createGatewayRoute_tags :: Lens' CreateGatewayRoute (Maybe [TagRef])

-- | The name to use for the gateway route.
createGatewayRoute_gatewayRouteName :: Lens' CreateGatewayRoute Text

-- | The name of the service mesh to create the gateway route in.
createGatewayRoute_meshName :: Lens' CreateGatewayRoute Text

-- | The gateway route specification to apply.
createGatewayRoute_spec :: Lens' CreateGatewayRoute GatewayRouteSpec

-- | The name of the virtual gateway to associate the gateway route with.
--   If the virtual gateway is in a shared mesh, then you must be the owner
--   of the virtual gateway resource.
createGatewayRoute_virtualGatewayName :: Lens' CreateGatewayRoute Text

-- | The response's http status code.
createGatewayRouteResponse_httpStatus :: Lens' CreateGatewayRouteResponse Int

-- | The full description of your gateway route following the create call.
createGatewayRouteResponse_gatewayRoute :: Lens' CreateGatewayRouteResponse GatewayRouteData

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
updateGatewayRoute_clientToken :: Lens' UpdateGatewayRoute (Maybe Text)

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
updateGatewayRoute_meshOwner :: Lens' UpdateGatewayRoute (Maybe Text)

-- | The name of the gateway route to update.
updateGatewayRoute_gatewayRouteName :: Lens' UpdateGatewayRoute Text

-- | The name of the service mesh that the gateway route resides in.
updateGatewayRoute_meshName :: Lens' UpdateGatewayRoute Text

-- | The new gateway route specification to apply. This overwrites the
--   existing data.
updateGatewayRoute_spec :: Lens' UpdateGatewayRoute GatewayRouteSpec

-- | The name of the virtual gateway that the gateway route is associated
--   with.
updateGatewayRoute_virtualGatewayName :: Lens' UpdateGatewayRoute Text

-- | The response's http status code.
updateGatewayRouteResponse_httpStatus :: Lens' UpdateGatewayRouteResponse Int

-- | A full description of the gateway route that was updated.
updateGatewayRouteResponse_gatewayRoute :: Lens' UpdateGatewayRouteResponse GatewayRouteData

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
deleteGatewayRoute_meshOwner :: Lens' DeleteGatewayRoute (Maybe Text)

-- | The name of the gateway route to delete.
deleteGatewayRoute_gatewayRouteName :: Lens' DeleteGatewayRoute Text

-- | The name of the service mesh to delete the gateway route from.
deleteGatewayRoute_meshName :: Lens' DeleteGatewayRoute Text

-- | The name of the virtual gateway to delete the route from.
deleteGatewayRoute_virtualGatewayName :: Lens' DeleteGatewayRoute Text

-- | The response's http status code.
deleteGatewayRouteResponse_httpStatus :: Lens' DeleteGatewayRouteResponse Int

-- | The gateway route that was deleted.
deleteGatewayRouteResponse_gatewayRoute :: Lens' DeleteGatewayRouteResponse GatewayRouteData

-- | The Amazon Resource Name (ARN) of the resource to add tags to.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to add to the resource. A tag is an array of key-value pairs.
--   Tag keys can have a maximum character length of 128 characters, and
--   tag values can have a maximum length of 256 characters.
tagResource_tags :: Lens' TagResource [TagRef]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
listVirtualGateways_meshOwner :: Lens' ListVirtualGateways (Maybe Text)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListVirtualGateways</tt> request where <tt>limit</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listVirtualGateways_nextToken :: Lens' ListVirtualGateways (Maybe Text)

-- | The maximum number of results returned by <tt>ListVirtualGateways</tt>
--   in paginated output. When you use this parameter,
--   <tt>ListVirtualGateways</tt> returns only <tt>limit</tt> results in a
--   single page along with a <tt>nextToken</tt> response element. You can
--   see the remaining results of the initial request by sending another
--   <tt>ListVirtualGateways</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListVirtualGateways</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
listVirtualGateways_limit :: Lens' ListVirtualGateways (Maybe Natural)

-- | The name of the service mesh to list virtual gateways in.
listVirtualGateways_meshName :: Lens' ListVirtualGateways Text

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListVirtualGateways</tt> request. When the results of a
--   <tt>ListVirtualGateways</tt> request exceed <tt>limit</tt>, you can
--   use this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listVirtualGatewaysResponse_nextToken :: Lens' ListVirtualGatewaysResponse (Maybe Text)

-- | The response's http status code.
listVirtualGatewaysResponse_httpStatus :: Lens' ListVirtualGatewaysResponse Int

-- | The list of existing virtual gateways for the specified service mesh.
listVirtualGatewaysResponse_virtualGateways :: Lens' ListVirtualGatewaysResponse [VirtualGatewayRef]

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
listVirtualRouters_meshOwner :: Lens' ListVirtualRouters (Maybe Text)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListVirtualRouters</tt> request where <tt>limit</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listVirtualRouters_nextToken :: Lens' ListVirtualRouters (Maybe Text)

-- | The maximum number of results returned by <tt>ListVirtualRouters</tt>
--   in paginated output. When you use this parameter,
--   <tt>ListVirtualRouters</tt> returns only <tt>limit</tt> results in a
--   single page along with a <tt>nextToken</tt> response element. You can
--   see the remaining results of the initial request by sending another
--   <tt>ListVirtualRouters</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListVirtualRouters</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
listVirtualRouters_limit :: Lens' ListVirtualRouters (Maybe Natural)

-- | The name of the service mesh to list virtual routers in.
listVirtualRouters_meshName :: Lens' ListVirtualRouters Text

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListVirtualRouters</tt> request. When the results of a
--   <tt>ListVirtualRouters</tt> request exceed <tt>limit</tt>, you can use
--   this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listVirtualRoutersResponse_nextToken :: Lens' ListVirtualRoutersResponse (Maybe Text)

-- | The response's http status code.
listVirtualRoutersResponse_httpStatus :: Lens' ListVirtualRoutersResponse Int

-- | The list of existing virtual routers for the specified service mesh.
listVirtualRoutersResponse_virtualRouters :: Lens' ListVirtualRoutersResponse [VirtualRouterRef]

-- | The Amazon Resource Name (ARN) of the resource to delete tags from.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The keys of the tags to be removed.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
describeMesh_meshOwner :: Lens' DescribeMesh (Maybe Text)

-- | The name of the service mesh to describe.
describeMesh_meshName :: Lens' DescribeMesh Text

-- | The response's http status code.
describeMeshResponse_httpStatus :: Lens' DescribeMeshResponse Int

-- | The full description of your service mesh.
describeMeshResponse_mesh :: Lens' DescribeMeshResponse MeshData

-- | The file object to send virtual node access logs to.
accessLog_file :: Lens' AccessLog (Maybe FileAccessLog)

-- | The name of an Cloud Map service instance attribute key. Any Cloud Map
--   service instance that contains the specified key and value is
--   returned.
awsCloudMapInstanceAttribute_key :: Lens' AwsCloudMapInstanceAttribute Text

-- | The value of an Cloud Map service instance attribute key. Any Cloud
--   Map service instance that contains the specified key and value is
--   returned.
awsCloudMapInstanceAttribute_value :: Lens' AwsCloudMapInstanceAttribute Text

-- | A string map that contains attributes with values that you can use to
--   filter instances by any custom attribute that you specified when you
--   registered the instance. Only instances that match all of the
--   specified key/value pairs will be returned.
awsCloudMapServiceDiscovery_attributes :: Lens' AwsCloudMapServiceDiscovery (Maybe [AwsCloudMapInstanceAttribute])

-- | The name of the Cloud Map namespace to use.
awsCloudMapServiceDiscovery_namespaceName :: Lens' AwsCloudMapServiceDiscovery Text

-- | The name of the Cloud Map service to use.
awsCloudMapServiceDiscovery_serviceName :: Lens' AwsCloudMapServiceDiscovery Text

-- | Specifies a virtual service to use as a backend.
backend_virtualService :: Lens' Backend (Maybe VirtualServiceBackend)

-- | A reference to an object that represents a client policy.
backendDefaults_clientPolicy :: Lens' BackendDefaults (Maybe ClientPolicy)

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) client policy.
clientPolicy_tls :: Lens' ClientPolicy (Maybe ClientPolicyTls)

-- | One or more ports that the policy is enforced for.
clientPolicyTls_ports :: Lens' ClientPolicyTls (Maybe [Natural])

-- | A reference to an object that represents a client's TLS certificate.
clientPolicyTls_certificate :: Lens' ClientPolicyTls (Maybe ClientTlsCertificate)

-- | Whether the policy is enforced. The default is <tt>True</tt>, if a
--   value isn't specified.
clientPolicyTls_enforce :: Lens' ClientPolicyTls (Maybe Bool)

-- | A reference to an object that represents a TLS validation context.
clientPolicyTls_validation :: Lens' ClientPolicyTls TlsValidationContext

-- | A reference to an object that represents a client's TLS Secret
--   Discovery Service certificate.
clientTlsCertificate_sds :: Lens' ClientTlsCertificate (Maybe ListenerTlsSdsCertificate)

-- | An object that represents a local file certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
clientTlsCertificate_file :: Lens' ClientTlsCertificate (Maybe ListenerTlsFileCertificate)

-- | Specifies the DNS response type for the virtual node.
dnsServiceDiscovery_responseType :: Lens' DnsServiceDiscovery (Maybe DnsResponseType)

-- | Specifies the DNS service discovery hostname for the virtual node.
dnsServiceDiscovery_hostname :: Lens' DnsServiceDiscovery Text

-- | A number of time units.
duration_value :: Lens' Duration (Maybe Natural)

-- | A unit of time.
duration_unit :: Lens' Duration (Maybe DurationUnit)

-- | The egress filter type. By default, the type is <tt>DROP_ALL</tt>,
--   which allows egress only from virtual nodes to other defined resources
--   in the service mesh (and any traffic to <tt>*.amazonaws.com</tt> for
--   Amazon Web Services API calls). You can set the egress filter type to
--   <tt>ALLOW_ALL</tt> to allow egress to any endpoint inside or outside
--   of the service mesh.
egressFilter_type :: Lens' EgressFilter EgressFilterType

-- | The file path to write access logs to. You can use
--   <tt>/dev/stdout</tt> to send access logs to standard out and configure
--   your Envoy container to use a log driver, such as <tt>awslogs</tt>, to
--   export the access logs to a log storage service such as Amazon
--   CloudWatch Logs. You can also specify a path in the Envoy container's
--   file system to write the files to disk.
--   
--   The Envoy process must have write permissions to the path that you
--   specify here. Otherwise, Envoy fails to bootstrap properly.
fileAccessLog_path :: Lens' FileAccessLog Text

-- | The name of the gateway route.
gatewayRouteData_gatewayRouteName :: Lens' GatewayRouteData Text

-- | The name of the service mesh that the resource resides in.
gatewayRouteData_meshName :: Lens' GatewayRouteData Text

-- | Undocumented member.
gatewayRouteData_metadata :: Lens' GatewayRouteData ResourceMetadata

-- | The specifications of the gateway route.
gatewayRouteData_spec :: Lens' GatewayRouteData GatewayRouteSpec

-- | The status of the gateway route.
gatewayRouteData_status :: Lens' GatewayRouteData GatewayRouteStatus

-- | The virtual gateway that the gateway route is associated with.
gatewayRouteData_virtualGatewayName :: Lens' GatewayRouteData Text

-- | The specified ending characters of the host name to match on.
gatewayRouteHostnameMatch_suffix :: Lens' GatewayRouteHostnameMatch (Maybe Text)

-- | The exact host name to match on.
gatewayRouteHostnameMatch_exact :: Lens' GatewayRouteHostnameMatch (Maybe Text)

-- | The default target host name to write to.
gatewayRouteHostnameRewrite_defaultTargetHostname :: Lens' GatewayRouteHostnameRewrite (Maybe DefaultGatewayRouteRewrite)

-- | The full Amazon Resource Name (ARN) for the gateway route.
gatewayRouteRef_arn :: Lens' GatewayRouteRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
gatewayRouteRef_createdAt :: Lens' GatewayRouteRef UTCTime

-- | The name of the gateway route.
gatewayRouteRef_gatewayRouteName :: Lens' GatewayRouteRef Text

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
gatewayRouteRef_lastUpdatedAt :: Lens' GatewayRouteRef UTCTime

-- | The name of the service mesh that the resource resides in.
gatewayRouteRef_meshName :: Lens' GatewayRouteRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
gatewayRouteRef_meshOwner :: Lens' GatewayRouteRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
gatewayRouteRef_resourceOwner :: Lens' GatewayRouteRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
gatewayRouteRef_version :: Lens' GatewayRouteRef Integer

-- | The virtual gateway that the gateway route is associated with.
gatewayRouteRef_virtualGatewayName :: Lens' GatewayRouteRef Text

-- | The ordering of the gateway routes spec.
gatewayRouteSpec_priority :: Lens' GatewayRouteSpec (Maybe Natural)

-- | An object that represents the specification of an HTTP/2 gateway
--   route.
gatewayRouteSpec_http2Route :: Lens' GatewayRouteSpec (Maybe HttpGatewayRoute)

-- | An object that represents the specification of a gRPC gateway route.
gatewayRouteSpec_grpcRoute :: Lens' GatewayRouteSpec (Maybe GrpcGatewayRoute)

-- | An object that represents the specification of an HTTP gateway route.
gatewayRouteSpec_httpRoute :: Lens' GatewayRouteSpec (Maybe HttpGatewayRoute)

-- | The current status for the gateway route.
gatewayRouteStatus_status :: Lens' GatewayRouteStatus GatewayRouteStatusCode

-- | An object that represents a virtual service gateway route target.
gatewayRouteTarget_virtualService :: Lens' GatewayRouteTarget GatewayRouteVirtualService

-- | The name of the virtual service that traffic is routed to.
gatewayRouteVirtualService_virtualServiceName :: Lens' GatewayRouteVirtualService Text

-- | An object that represents the action to take if a match is determined.
grpcGatewayRoute_action :: Lens' GrpcGatewayRoute GrpcGatewayRouteAction

-- | An object that represents the criteria for determining a request
--   match.
grpcGatewayRoute_match :: Lens' GrpcGatewayRoute GrpcGatewayRouteMatch

-- | The gateway route action to rewrite.
grpcGatewayRouteAction_rewrite :: Lens' GrpcGatewayRouteAction (Maybe GrpcGatewayRouteRewrite)

-- | An object that represents the target that traffic is routed to when a
--   request matches the gateway route.
grpcGatewayRouteAction_target :: Lens' GrpcGatewayRouteAction GatewayRouteTarget

-- | The gateway route host name to be matched on.
grpcGatewayRouteMatch_hostname :: Lens' GrpcGatewayRouteMatch (Maybe GatewayRouteHostnameMatch)

-- | The fully qualified domain name for the service to match from the
--   request.
grpcGatewayRouteMatch_serviceName :: Lens' GrpcGatewayRouteMatch (Maybe Text)

-- | The gateway route metadata to be matched on.
grpcGatewayRouteMatch_metadata :: Lens' GrpcGatewayRouteMatch (Maybe (NonEmpty GrpcGatewayRouteMetadata))

-- | Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
grpcGatewayRouteMetadata_invert :: Lens' GrpcGatewayRouteMetadata (Maybe Bool)

-- | The criteria for determining a metadata match.
grpcGatewayRouteMetadata_match :: Lens' GrpcGatewayRouteMetadata (Maybe GrpcMetadataMatchMethod)

-- | A name for the gateway route metadata.
grpcGatewayRouteMetadata_name :: Lens' GrpcGatewayRouteMetadata Text

-- | The host name of the gateway route to rewrite.
grpcGatewayRouteRewrite_hostname :: Lens' GrpcGatewayRouteRewrite (Maybe GatewayRouteHostnameRewrite)

-- | The specified ending characters of the method header to match on.
grpcMetadataMatchMethod_suffix :: Lens' GrpcMetadataMatchMethod (Maybe Text)

-- | The regex used to match the method header.
grpcMetadataMatchMethod_regex :: Lens' GrpcMetadataMatchMethod (Maybe Text)

-- | The specified beginning characters of the method header to be matched
--   on.
grpcMetadataMatchMethod_prefix :: Lens' GrpcMetadataMatchMethod (Maybe Text)

-- | Undocumented member.
grpcMetadataMatchMethod_range :: Lens' GrpcMetadataMatchMethod (Maybe MatchRange)

-- | The exact method header to be matched on.
grpcMetadataMatchMethod_exact :: Lens' GrpcMetadataMatchMethod (Maybe Text)

-- | Specify at least one of the following values.
--   
--   <ul>
--   <li><b>server-error</b> – HTTP status codes 500, 501, 502, 503, 504,
--   505, 506, 507, 508, 510, and 511</li>
--   <li><b>gateway-error</b> – HTTP status codes 502, 503, and 504</li>
--   <li><b>client-error</b> – HTTP status code 409</li>
--   <li><b>stream-error</b> – Retry on refused stream</li>
--   </ul>
grpcRetryPolicy_httpRetryEvents :: Lens' GrpcRetryPolicy (Maybe (NonEmpty Text))

-- | Specify at least one of the valid values.
grpcRetryPolicy_grpcRetryEvents :: Lens' GrpcRetryPolicy (Maybe (NonEmpty GrpcRetryPolicyEvent))

-- | Specify a valid value. The event occurs before any processing of a
--   request has started and is encountered when the upstream is
--   temporarily or permanently unavailable.
grpcRetryPolicy_tcpRetryEvents :: Lens' GrpcRetryPolicy (Maybe (NonEmpty TcpRetryPolicyEvent))

-- | The maximum number of retry attempts.
grpcRetryPolicy_maxRetries :: Lens' GrpcRetryPolicy Natural

-- | The timeout for each retry attempt.
grpcRetryPolicy_perRetryTimeout :: Lens' GrpcRetryPolicy Duration

-- | An object that represents a retry policy.
grpcRoute_retryPolicy :: Lens' GrpcRoute (Maybe GrpcRetryPolicy)

-- | An object that represents types of timeouts.
grpcRoute_timeout :: Lens' GrpcRoute (Maybe GrpcTimeout)

-- | An object that represents the action to take if a match is determined.
grpcRoute_action :: Lens' GrpcRoute GrpcRouteAction

-- | An object that represents the criteria for determining a request
--   match.
grpcRoute_match :: Lens' GrpcRoute GrpcRouteMatch

-- | An object that represents the targets that traffic is routed to when a
--   request matches the route.
grpcRouteAction_weightedTargets :: Lens' GrpcRouteAction (NonEmpty WeightedTarget)

-- | The method name to match from the request. If you specify a name, you
--   must also specify a <tt>serviceName</tt>.
grpcRouteMatch_methodName :: Lens' GrpcRouteMatch (Maybe Text)

-- | The fully qualified domain name for the service to match from the
--   request.
grpcRouteMatch_serviceName :: Lens' GrpcRouteMatch (Maybe Text)

-- | An object that represents the data to match from the request.
grpcRouteMatch_metadata :: Lens' GrpcRouteMatch (Maybe (NonEmpty GrpcRouteMetadata))

-- | Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
grpcRouteMetadata_invert :: Lens' GrpcRouteMetadata (Maybe Bool)

-- | An object that represents the data to match from the request.
grpcRouteMetadata_match :: Lens' GrpcRouteMetadata (Maybe GrpcRouteMetadataMatchMethod)

-- | The name of the route.
grpcRouteMetadata_name :: Lens' GrpcRouteMetadata Text

-- | The value sent by the client must end with the specified characters.
grpcRouteMetadataMatchMethod_suffix :: Lens' GrpcRouteMetadataMatchMethod (Maybe Text)

-- | The value sent by the client must include the specified characters.
grpcRouteMetadataMatchMethod_regex :: Lens' GrpcRouteMetadataMatchMethod (Maybe Text)

-- | The value sent by the client must begin with the specified characters.
grpcRouteMetadataMatchMethod_prefix :: Lens' GrpcRouteMetadataMatchMethod (Maybe Text)

-- | An object that represents the range of values to match on.
grpcRouteMetadataMatchMethod_range :: Lens' GrpcRouteMetadataMatchMethod (Maybe MatchRange)

-- | The value sent by the client must match the specified value exactly.
grpcRouteMetadataMatchMethod_exact :: Lens' GrpcRouteMetadataMatchMethod (Maybe Text)

-- | An object that represents an idle timeout. An idle timeout bounds the
--   amount of time that a connection may be idle. The default value is
--   none.
grpcTimeout_idle :: Lens' GrpcTimeout (Maybe Duration)

-- | An object that represents a per request timeout. The default value is
--   15 seconds. If you set a higher timeout, then make sure that the
--   higher value is set for each App Mesh resource in a conversation. For
--   example, if a virtual node backend uses a virtual router provider to
--   route to another virtual node, then the timeout should be greater than
--   15 seconds for the source and destination virtual node and the route.
grpcTimeout_perRequest :: Lens' GrpcTimeout (Maybe Duration)

-- | The value sent by the client must end with the specified characters.
headerMatchMethod_suffix :: Lens' HeaderMatchMethod (Maybe Text)

-- | The value sent by the client must include the specified characters.
headerMatchMethod_regex :: Lens' HeaderMatchMethod (Maybe Text)

-- | The value sent by the client must begin with the specified characters.
headerMatchMethod_prefix :: Lens' HeaderMatchMethod (Maybe Text)

-- | An object that represents the range of values to match on.
headerMatchMethod_range :: Lens' HeaderMatchMethod (Maybe MatchRange)

-- | The value sent by the client must match the specified value exactly.
headerMatchMethod_exact :: Lens' HeaderMatchMethod (Maybe Text)

-- | The destination path for the health check request. This value is only
--   used if the specified protocol is HTTP or HTTP/2. For any other
--   protocol, this value is ignored.
healthCheckPolicy_path :: Lens' HealthCheckPolicy (Maybe Text)

-- | The destination port for the health check request. This port must
--   match the port defined in the PortMapping for the listener.
healthCheckPolicy_port :: Lens' HealthCheckPolicy (Maybe Natural)

-- | The number of consecutive successful health checks that must occur
--   before declaring listener healthy.
healthCheckPolicy_healthyThreshold :: Lens' HealthCheckPolicy Natural

-- | The time period in milliseconds between each health check execution.
healthCheckPolicy_intervalMillis :: Lens' HealthCheckPolicy Natural

-- | The protocol for the health check request. If you specify
--   <tt>grpc</tt>, then your service must conform to the <a>GRPC Health
--   Checking Protocol</a>.
healthCheckPolicy_protocol :: Lens' HealthCheckPolicy PortProtocol

-- | The amount of time to wait when receiving a response from the health
--   check, in milliseconds.
healthCheckPolicy_timeoutMillis :: Lens' HealthCheckPolicy Natural

-- | The number of consecutive failed health checks that must occur before
--   declaring a virtual node unhealthy.
healthCheckPolicy_unhealthyThreshold :: Lens' HealthCheckPolicy Natural

-- | An object that represents the action to take if a match is determined.
httpGatewayRoute_action :: Lens' HttpGatewayRoute HttpGatewayRouteAction

-- | An object that represents the criteria for determining a request
--   match.
httpGatewayRoute_match :: Lens' HttpGatewayRoute HttpGatewayRouteMatch

-- | The gateway route action to rewrite.
httpGatewayRouteAction_rewrite :: Lens' HttpGatewayRouteAction (Maybe HttpGatewayRouteRewrite)

-- | An object that represents the target that traffic is routed to when a
--   request matches the gateway route.
httpGatewayRouteAction_target :: Lens' HttpGatewayRouteAction GatewayRouteTarget

-- | Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
httpGatewayRouteHeader_invert :: Lens' HttpGatewayRouteHeader (Maybe Bool)

-- | Undocumented member.
httpGatewayRouteHeader_match :: Lens' HttpGatewayRouteHeader (Maybe HeaderMatchMethod)

-- | A name for the HTTP header in the gateway route that will be matched
--   on.
httpGatewayRouteHeader_name :: Lens' HttpGatewayRouteHeader Text

-- | The host name to match on.
httpGatewayRouteMatch_hostname :: Lens' HttpGatewayRouteMatch (Maybe GatewayRouteHostnameMatch)

-- | The path to match on.
httpGatewayRouteMatch_path :: Lens' HttpGatewayRouteMatch (Maybe HttpPathMatch)

-- | Specifies the path to match requests with. This parameter must always
--   start with <tt>/</tt>, which by itself matches all requests to the
--   virtual service name. You can also match for path-based routing of
--   requests. For example, if your virtual service name is
--   <tt>my-service.local</tt> and you want the route to match requests to
--   <tt>my-service.local/metrics</tt>, your prefix should be
--   <tt>/metrics</tt>.
httpGatewayRouteMatch_prefix :: Lens' HttpGatewayRouteMatch (Maybe Text)

-- | The query parameter to match on.
httpGatewayRouteMatch_queryParameters :: Lens' HttpGatewayRouteMatch (Maybe (NonEmpty HttpQueryParameter))

-- | The client request headers to match on.
httpGatewayRouteMatch_headers :: Lens' HttpGatewayRouteMatch (Maybe (NonEmpty HttpGatewayRouteHeader))

-- | The method to match on.
httpGatewayRouteMatch_method :: Lens' HttpGatewayRouteMatch (Maybe HttpMethod)

-- | The exact path to rewrite.
httpGatewayRoutePathRewrite_exact :: Lens' HttpGatewayRoutePathRewrite (Maybe Text)

-- | The value used to replace the incoming route prefix when rewritten.
httpGatewayRoutePrefixRewrite_value :: Lens' HttpGatewayRoutePrefixRewrite (Maybe Text)

-- | The default prefix used to replace the incoming route prefix when
--   rewritten.
httpGatewayRoutePrefixRewrite_defaultPrefix :: Lens' HttpGatewayRoutePrefixRewrite (Maybe DefaultGatewayRouteRewrite)

-- | The host name to rewrite.
httpGatewayRouteRewrite_hostname :: Lens' HttpGatewayRouteRewrite (Maybe GatewayRouteHostnameRewrite)

-- | The path to rewrite.
httpGatewayRouteRewrite_path :: Lens' HttpGatewayRouteRewrite (Maybe HttpGatewayRoutePathRewrite)

-- | The specified beginning characters to rewrite.
httpGatewayRouteRewrite_prefix :: Lens' HttpGatewayRouteRewrite (Maybe HttpGatewayRoutePrefixRewrite)

-- | The regex used to match the path.
httpPathMatch_regex :: Lens' HttpPathMatch (Maybe Text)

-- | The exact path to match on.
httpPathMatch_exact :: Lens' HttpPathMatch (Maybe Text)

-- | The query parameter to match on.
httpQueryParameter_match :: Lens' HttpQueryParameter (Maybe QueryParameterMatch)

-- | A name for the query parameter that will be matched on.
httpQueryParameter_name :: Lens' HttpQueryParameter Text

-- | Specify at least one of the following values.
--   
--   <ul>
--   <li><b>server-error</b> – HTTP status codes 500, 501, 502, 503, 504,
--   505, 506, 507, 508, 510, and 511</li>
--   <li><b>gateway-error</b> – HTTP status codes 502, 503, and 504</li>
--   <li><b>client-error</b> – HTTP status code 409</li>
--   <li><b>stream-error</b> – Retry on refused stream</li>
--   </ul>
httpRetryPolicy_httpRetryEvents :: Lens' HttpRetryPolicy (Maybe (NonEmpty Text))

-- | Specify a valid value. The event occurs before any processing of a
--   request has started and is encountered when the upstream is
--   temporarily or permanently unavailable.
httpRetryPolicy_tcpRetryEvents :: Lens' HttpRetryPolicy (Maybe (NonEmpty TcpRetryPolicyEvent))

-- | The maximum number of retry attempts.
httpRetryPolicy_maxRetries :: Lens' HttpRetryPolicy Natural

-- | The timeout for each retry attempt.
httpRetryPolicy_perRetryTimeout :: Lens' HttpRetryPolicy Duration

-- | An object that represents a retry policy.
httpRoute_retryPolicy :: Lens' HttpRoute (Maybe HttpRetryPolicy)

-- | An object that represents types of timeouts.
httpRoute_timeout :: Lens' HttpRoute (Maybe HttpTimeout)

-- | An object that represents the action to take if a match is determined.
httpRoute_action :: Lens' HttpRoute HttpRouteAction

-- | An object that represents the criteria for determining a request
--   match.
httpRoute_match :: Lens' HttpRoute HttpRouteMatch

-- | An object that represents the targets that traffic is routed to when a
--   request matches the route.
httpRouteAction_weightedTargets :: Lens' HttpRouteAction (NonEmpty WeightedTarget)

-- | Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
httpRouteHeader_invert :: Lens' HttpRouteHeader (Maybe Bool)

-- | The <tt>HeaderMatchMethod</tt> object.
httpRouteHeader_match :: Lens' HttpRouteHeader (Maybe HeaderMatchMethod)

-- | A name for the HTTP header in the client request that will be matched
--   on.
httpRouteHeader_name :: Lens' HttpRouteHeader Text

-- | The client request path to match on.
httpRouteMatch_path :: Lens' HttpRouteMatch (Maybe HttpPathMatch)

-- | Specifies the path to match requests with. This parameter must always
--   start with <tt>/</tt>, which by itself matches all requests to the
--   virtual service name. You can also match for path-based routing of
--   requests. For example, if your virtual service name is
--   <tt>my-service.local</tt> and you want the route to match requests to
--   <tt>my-service.local/metrics</tt>, your prefix should be
--   <tt>/metrics</tt>.
httpRouteMatch_prefix :: Lens' HttpRouteMatch (Maybe Text)

-- | The client request query parameters to match on.
httpRouteMatch_queryParameters :: Lens' HttpRouteMatch (Maybe (NonEmpty HttpQueryParameter))

-- | The client request headers to match on.
httpRouteMatch_headers :: Lens' HttpRouteMatch (Maybe (NonEmpty HttpRouteHeader))

-- | The client request method to match on. Specify only one.
httpRouteMatch_method :: Lens' HttpRouteMatch (Maybe HttpMethod)

-- | The client request scheme to match on. Specify only one. Applicable
--   only for HTTP2 routes.
httpRouteMatch_scheme :: Lens' HttpRouteMatch (Maybe HttpScheme)

-- | An object that represents an idle timeout. An idle timeout bounds the
--   amount of time that a connection may be idle. The default value is
--   none.
httpTimeout_idle :: Lens' HttpTimeout (Maybe Duration)

-- | An object that represents a per request timeout. The default value is
--   15 seconds. If you set a higher timeout, then make sure that the
--   higher value is set for each App Mesh resource in a conversation. For
--   example, if a virtual node backend uses a virtual router provider to
--   route to another virtual node, then the timeout should be greater than
--   15 seconds for the source and destination virtual node and the route.
httpTimeout_perRequest :: Lens' HttpTimeout (Maybe Duration)

-- | The health check information for the listener.
listener_healthCheck :: Lens' Listener (Maybe HealthCheckPolicy)

-- | The connection pool information for the listener.
listener_connectionPool :: Lens' Listener (Maybe VirtualNodeConnectionPool)

-- | A reference to an object that represents the Transport Layer Security
--   (TLS) properties for a listener.
listener_tls :: Lens' Listener (Maybe ListenerTls)

-- | The outlier detection information for the listener.
listener_outlierDetection :: Lens' Listener (Maybe OutlierDetection)

-- | An object that represents timeouts for different protocols.
listener_timeout :: Lens' Listener (Maybe ListenerTimeout)

-- | The port mapping information for the listener.
listener_portMapping :: Lens' Listener PortMapping

-- | An object that represents types of timeouts.
listenerTimeout_http2 :: Lens' ListenerTimeout (Maybe HttpTimeout)

-- | An object that represents types of timeouts.
listenerTimeout_grpc :: Lens' ListenerTimeout (Maybe GrpcTimeout)

-- | An object that represents types of timeouts.
listenerTimeout_tcp :: Lens' ListenerTimeout (Maybe TcpTimeout)

-- | An object that represents types of timeouts.
listenerTimeout_http :: Lens' ListenerTimeout (Maybe HttpTimeout)

-- | A reference to an object that represents a listener's Transport Layer
--   Security (TLS) validation context.
listenerTls_validation :: Lens' ListenerTls (Maybe ListenerTlsValidationContext)

-- | A reference to an object that represents a listener's Transport Layer
--   Security (TLS) certificate.
listenerTls_certificate :: Lens' ListenerTls ListenerTlsCertificate

-- | Specify one of the following modes.
--   
--   <ul>
--   <li>____STRICT – Listener only accepts connections with TLS
--   enabled.</li>
--   <li>____PERMISSIVE – Listener accepts connections with or without TLS
--   enabled.</li>
--   <li>____DISABLED – Listener only accepts connections without TLS.</li>
--   </ul>
listenerTls_mode :: Lens' ListenerTls ListenerTlsMode

-- | The Amazon Resource Name (ARN) for the certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
listenerTlsAcmCertificate_certificateArn :: Lens' ListenerTlsAcmCertificate Text

-- | A reference to an object that represents an AWS Certicate Manager
--   (ACM) certificate.
listenerTlsCertificate_acm :: Lens' ListenerTlsCertificate (Maybe ListenerTlsAcmCertificate)

-- | A reference to an object that represents a listener's Secret Discovery
--   Service certificate.
listenerTlsCertificate_sds :: Lens' ListenerTlsCertificate (Maybe ListenerTlsSdsCertificate)

-- | A reference to an object that represents a local file certificate.
listenerTlsCertificate_file :: Lens' ListenerTlsCertificate (Maybe ListenerTlsFileCertificate)

-- | The certificate chain for the certificate.
listenerTlsFileCertificate_certificateChain :: Lens' ListenerTlsFileCertificate Text

-- | The private key for a certificate stored on the file system of the
--   virtual node that the proxy is running on.
listenerTlsFileCertificate_privateKey :: Lens' ListenerTlsFileCertificate Text

-- | A reference to an object that represents the name of the secret
--   requested from the Secret Discovery Service provider representing
--   Transport Layer Security (TLS) materials like a certificate or
--   certificate chain.
listenerTlsSdsCertificate_secretName :: Lens' ListenerTlsSdsCertificate Text

-- | A reference to an object that represents the SANs for a listener's
--   Transport Layer Security (TLS) validation context.
listenerTlsValidationContext_subjectAlternativeNames :: Lens' ListenerTlsValidationContext (Maybe SubjectAlternativeNames)

-- | A reference to where to retrieve the trust chain when validating a
--   peer’s Transport Layer Security (TLS) certificate.
listenerTlsValidationContext_trust :: Lens' ListenerTlsValidationContext ListenerTlsValidationContextTrust

-- | A reference to an object that represents a listener's Transport Layer
--   Security (TLS) Secret Discovery Service validation context trust.
listenerTlsValidationContextTrust_sds :: Lens' ListenerTlsValidationContextTrust (Maybe TlsValidationContextSdsTrust)

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
listenerTlsValidationContextTrust_file :: Lens' ListenerTlsValidationContextTrust (Maybe TlsValidationContextFileTrust)

-- | The access log configuration for a virtual node.
logging_accessLog :: Lens' Logging (Maybe AccessLog)

-- | The end of the range.
matchRange_end :: Lens' MatchRange Integer

-- | The start of the range.
matchRange_start :: Lens' MatchRange Integer

-- | The name of the service mesh.
meshData_meshName :: Lens' MeshData Text

-- | The associated metadata for the service mesh.
meshData_metadata :: Lens' MeshData ResourceMetadata

-- | The associated specification for the service mesh.
meshData_spec :: Lens' MeshData MeshSpec

-- | The status of the service mesh.
meshData_status :: Lens' MeshData MeshStatus

-- | The full Amazon Resource Name (ARN) of the service mesh.
meshRef_arn :: Lens' MeshRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
meshRef_createdAt :: Lens' MeshRef UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
meshRef_lastUpdatedAt :: Lens' MeshRef UTCTime

-- | The name of the service mesh.
meshRef_meshName :: Lens' MeshRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
meshRef_meshOwner :: Lens' MeshRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
meshRef_resourceOwner :: Lens' MeshRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
meshRef_version :: Lens' MeshRef Integer

-- | The egress filter rules for the service mesh.
meshSpec_egressFilter :: Lens' MeshSpec (Maybe EgressFilter)

-- | The current mesh status.
meshStatus_status :: Lens' MeshStatus (Maybe MeshStatusCode)

-- | The base amount of time for which a host is ejected.
outlierDetection_baseEjectionDuration :: Lens' OutlierDetection Duration

-- | The time interval between ejection sweep analysis.
outlierDetection_interval :: Lens' OutlierDetection Duration

-- | Maximum percentage of hosts in load balancing pool for upstream
--   service that can be ejected. Will eject at least one host regardless
--   of the value.
outlierDetection_maxEjectionPercent :: Lens' OutlierDetection Natural

-- | Number of consecutive <tt>5xx</tt> errors required for ejection.
outlierDetection_maxServerErrors :: Lens' OutlierDetection Natural

-- | The port used for the port mapping.
portMapping_port :: Lens' PortMapping Natural

-- | The protocol used for the port mapping. Specify one protocol.
portMapping_protocol :: Lens' PortMapping PortProtocol

-- | The exact query parameter to match on.
queryParameterMatch_exact :: Lens' QueryParameterMatch (Maybe Text)

-- | The full Amazon Resource Name (ARN) for the resource.
resourceMetadata_arn :: Lens' ResourceMetadata Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
resourceMetadata_createdAt :: Lens' ResourceMetadata UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
resourceMetadata_lastUpdatedAt :: Lens' ResourceMetadata UTCTime

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
resourceMetadata_meshOwner :: Lens' ResourceMetadata Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
resourceMetadata_resourceOwner :: Lens' ResourceMetadata Text

-- | The unique identifier for the resource.
resourceMetadata_uid :: Lens' ResourceMetadata Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
resourceMetadata_version :: Lens' ResourceMetadata Integer

-- | The name of the service mesh that the route resides in.
routeData_meshName :: Lens' RouteData Text

-- | The associated metadata for the route.
routeData_metadata :: Lens' RouteData ResourceMetadata

-- | The name of the route.
routeData_routeName :: Lens' RouteData Text

-- | The specifications of the route.
routeData_spec :: Lens' RouteData RouteSpec

-- | The status of the route.
routeData_status :: Lens' RouteData RouteStatus

-- | The virtual router that the route is associated with.
routeData_virtualRouterName :: Lens' RouteData Text

-- | The full Amazon Resource Name (ARN) for the route.
routeRef_arn :: Lens' RouteRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
routeRef_createdAt :: Lens' RouteRef UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
routeRef_lastUpdatedAt :: Lens' RouteRef UTCTime

-- | The name of the service mesh that the route resides in.
routeRef_meshName :: Lens' RouteRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
routeRef_meshOwner :: Lens' RouteRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
routeRef_resourceOwner :: Lens' RouteRef Text

-- | The name of the route.
routeRef_routeName :: Lens' RouteRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
routeRef_version :: Lens' RouteRef Integer

-- | The virtual router that the route is associated with.
routeRef_virtualRouterName :: Lens' RouteRef Text

-- | The priority for the route. Routes are matched based on the specified
--   value, where 0 is the highest priority.
routeSpec_priority :: Lens' RouteSpec (Maybe Natural)

-- | An object that represents the specification of an HTTP/2 route.
routeSpec_http2Route :: Lens' RouteSpec (Maybe HttpRoute)

-- | An object that represents the specification of a gRPC route.
routeSpec_grpcRoute :: Lens' RouteSpec (Maybe GrpcRoute)

-- | An object that represents the specification of a TCP route.
routeSpec_tcpRoute :: Lens' RouteSpec (Maybe TcpRoute)

-- | An object that represents the specification of an HTTP route.
routeSpec_httpRoute :: Lens' RouteSpec (Maybe HttpRoute)

-- | The current status for the route.
routeStatus_status :: Lens' RouteStatus RouteStatusCode

-- | Specifies any Cloud Map information for the virtual node.
serviceDiscovery_awsCloudMap :: Lens' ServiceDiscovery (Maybe AwsCloudMapServiceDiscovery)

-- | Specifies the DNS information for the virtual node.
serviceDiscovery_dns :: Lens' ServiceDiscovery (Maybe DnsServiceDiscovery)

-- | The values sent must match the specified values exactly.
subjectAlternativeNameMatchers_exact :: Lens' SubjectAlternativeNameMatchers [Text]

-- | An object that represents the criteria for determining a SANs match.
subjectAlternativeNames_match :: Lens' SubjectAlternativeNames SubjectAlternativeNameMatchers

-- | One part of a key-value pair that make up a tag. A <tt>key</tt> is a
--   general label that acts like a category for more specific tag values.
tagRef_key :: Lens' TagRef Text

-- | The optional part of a key-value pair that make up a tag. A
--   <tt>value</tt> acts as a descriptor within a tag category (key).
tagRef_value :: Lens' TagRef Text

-- | An object that represents types of timeouts.
tcpRoute_timeout :: Lens' TcpRoute (Maybe TcpTimeout)

-- | The action to take if a match is determined.
tcpRoute_action :: Lens' TcpRoute TcpRouteAction

-- | An object that represents the targets that traffic is routed to when a
--   request matches the route.
tcpRouteAction_weightedTargets :: Lens' TcpRouteAction (NonEmpty WeightedTarget)

-- | An object that represents an idle timeout. An idle timeout bounds the
--   amount of time that a connection may be idle. The default value is
--   none.
tcpTimeout_idle :: Lens' TcpTimeout (Maybe Duration)

-- | A reference to an object that represents the SANs for a Transport
--   Layer Security (TLS) validation context.
tlsValidationContext_subjectAlternativeNames :: Lens' TlsValidationContext (Maybe SubjectAlternativeNames)

-- | A reference to where to retrieve the trust chain when validating a
--   peer’s Transport Layer Security (TLS) certificate.
tlsValidationContext_trust :: Lens' TlsValidationContext TlsValidationContextTrust

-- | One or more ACM Amazon Resource Name (ARN)s.
tlsValidationContextAcmTrust_certificateAuthorityArns :: Lens' TlsValidationContextAcmTrust (NonEmpty Text)

-- | The certificate trust chain for a certificate stored on the file
--   system of the virtual node that the proxy is running on.
tlsValidationContextFileTrust_certificateChain :: Lens' TlsValidationContextFileTrust Text

-- | A reference to an object that represents the name of the secret for a
--   Transport Layer Security (TLS) Secret Discovery Service validation
--   context trust.
tlsValidationContextSdsTrust_secretName :: Lens' TlsValidationContextSdsTrust Text

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) validation context trust for an Certificate Manager certificate.
tlsValidationContextTrust_acm :: Lens' TlsValidationContextTrust (Maybe TlsValidationContextAcmTrust)

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) Secret Discovery Service validation context trust.
tlsValidationContextTrust_sds :: Lens' TlsValidationContextTrust (Maybe TlsValidationContextSdsTrust)

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
tlsValidationContextTrust_file :: Lens' TlsValidationContextTrust (Maybe TlsValidationContextFileTrust)

-- | The file object to send virtual gateway access logs to.
virtualGatewayAccessLog_file :: Lens' VirtualGatewayAccessLog (Maybe VirtualGatewayFileAccessLog)

-- | A reference to an object that represents a client policy.
virtualGatewayBackendDefaults_clientPolicy :: Lens' VirtualGatewayBackendDefaults (Maybe VirtualGatewayClientPolicy)

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) client policy.
virtualGatewayClientPolicy_tls :: Lens' VirtualGatewayClientPolicy (Maybe VirtualGatewayClientPolicyTls)

-- | One or more ports that the policy is enforced for.
virtualGatewayClientPolicyTls_ports :: Lens' VirtualGatewayClientPolicyTls (Maybe [Natural])

-- | A reference to an object that represents a virtual gateway's client's
--   Transport Layer Security (TLS) certificate.
virtualGatewayClientPolicyTls_certificate :: Lens' VirtualGatewayClientPolicyTls (Maybe VirtualGatewayClientTlsCertificate)

-- | Whether the policy is enforced. The default is <tt>True</tt>, if a
--   value isn't specified.
virtualGatewayClientPolicyTls_enforce :: Lens' VirtualGatewayClientPolicyTls (Maybe Bool)

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) validation context.
virtualGatewayClientPolicyTls_validation :: Lens' VirtualGatewayClientPolicyTls VirtualGatewayTlsValidationContext

-- | A reference to an object that represents a virtual gateway's client's
--   Secret Discovery Service certificate.
virtualGatewayClientTlsCertificate_sds :: Lens' VirtualGatewayClientTlsCertificate (Maybe VirtualGatewayListenerTlsSdsCertificate)

-- | An object that represents a local file certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a> .
virtualGatewayClientTlsCertificate_file :: Lens' VirtualGatewayClientTlsCertificate (Maybe VirtualGatewayListenerTlsFileCertificate)

-- | An object that represents a type of connection pool.
virtualGatewayConnectionPool_http2 :: Lens' VirtualGatewayConnectionPool (Maybe VirtualGatewayHttp2ConnectionPool)

-- | An object that represents a type of connection pool.
virtualGatewayConnectionPool_grpc :: Lens' VirtualGatewayConnectionPool (Maybe VirtualGatewayGrpcConnectionPool)

-- | An object that represents a type of connection pool.
virtualGatewayConnectionPool_http :: Lens' VirtualGatewayConnectionPool (Maybe VirtualGatewayHttpConnectionPool)

-- | The name of the service mesh that the virtual gateway resides in.
virtualGatewayData_meshName :: Lens' VirtualGatewayData Text

-- | Undocumented member.
virtualGatewayData_metadata :: Lens' VirtualGatewayData ResourceMetadata

-- | The specifications of the virtual gateway.
virtualGatewayData_spec :: Lens' VirtualGatewayData VirtualGatewaySpec

-- | The current status of the virtual gateway.
virtualGatewayData_status :: Lens' VirtualGatewayData VirtualGatewayStatus

-- | The name of the virtual gateway.
virtualGatewayData_virtualGatewayName :: Lens' VirtualGatewayData Text

-- | The file path to write access logs to. You can use
--   <tt>/dev/stdout</tt> to send access logs to standard out and configure
--   your Envoy container to use a log driver, such as <tt>awslogs</tt>, to
--   export the access logs to a log storage service such as Amazon
--   CloudWatch Logs. You can also specify a path in the Envoy container's
--   file system to write the files to disk.
virtualGatewayFileAccessLog_path :: Lens' VirtualGatewayFileAccessLog Text

-- | Maximum number of inflight requests Envoy can concurrently support
--   across hosts in upstream cluster.
virtualGatewayGrpcConnectionPool_maxRequests :: Lens' VirtualGatewayGrpcConnectionPool Natural

-- | The destination path for the health check request. This value is only
--   used if the specified protocol is HTTP or HTTP/2. For any other
--   protocol, this value is ignored.
virtualGatewayHealthCheckPolicy_path :: Lens' VirtualGatewayHealthCheckPolicy (Maybe Text)

-- | The destination port for the health check request. This port must
--   match the port defined in the PortMapping for the listener.
virtualGatewayHealthCheckPolicy_port :: Lens' VirtualGatewayHealthCheckPolicy (Maybe Natural)

-- | The number of consecutive successful health checks that must occur
--   before declaring the listener healthy.
virtualGatewayHealthCheckPolicy_healthyThreshold :: Lens' VirtualGatewayHealthCheckPolicy Natural

-- | The time period in milliseconds between each health check execution.
virtualGatewayHealthCheckPolicy_intervalMillis :: Lens' VirtualGatewayHealthCheckPolicy Natural

-- | The protocol for the health check request. If you specify
--   <tt>grpc</tt>, then your service must conform to the <a>GRPC Health
--   Checking Protocol</a>.
virtualGatewayHealthCheckPolicy_protocol :: Lens' VirtualGatewayHealthCheckPolicy VirtualGatewayPortProtocol

-- | The amount of time to wait when receiving a response from the health
--   check, in milliseconds.
virtualGatewayHealthCheckPolicy_timeoutMillis :: Lens' VirtualGatewayHealthCheckPolicy Natural

-- | The number of consecutive failed health checks that must occur before
--   declaring a virtual gateway unhealthy.
virtualGatewayHealthCheckPolicy_unhealthyThreshold :: Lens' VirtualGatewayHealthCheckPolicy Natural

-- | Maximum number of inflight requests Envoy can concurrently support
--   across hosts in upstream cluster.
virtualGatewayHttp2ConnectionPool_maxRequests :: Lens' VirtualGatewayHttp2ConnectionPool Natural

-- | Number of overflowing requests after <tt>max_connections</tt> Envoy
--   will queue to upstream cluster.
virtualGatewayHttpConnectionPool_maxPendingRequests :: Lens' VirtualGatewayHttpConnectionPool (Maybe Natural)

-- | Maximum number of outbound TCP connections Envoy can establish
--   concurrently with all hosts in upstream cluster.
virtualGatewayHttpConnectionPool_maxConnections :: Lens' VirtualGatewayHttpConnectionPool Natural

-- | The health check information for the listener.
virtualGatewayListener_healthCheck :: Lens' VirtualGatewayListener (Maybe VirtualGatewayHealthCheckPolicy)

-- | The connection pool information for the virtual gateway listener.
virtualGatewayListener_connectionPool :: Lens' VirtualGatewayListener (Maybe VirtualGatewayConnectionPool)

-- | A reference to an object that represents the Transport Layer Security
--   (TLS) properties for the listener.
virtualGatewayListener_tls :: Lens' VirtualGatewayListener (Maybe VirtualGatewayListenerTls)

-- | The port mapping information for the listener.
virtualGatewayListener_portMapping :: Lens' VirtualGatewayListener VirtualGatewayPortMapping

-- | A reference to an object that represents a virtual gateway's
--   listener's Transport Layer Security (TLS) validation context.
virtualGatewayListenerTls_validation :: Lens' VirtualGatewayListenerTls (Maybe VirtualGatewayListenerTlsValidationContext)

-- | An object that represents a Transport Layer Security (TLS)
--   certificate.
virtualGatewayListenerTls_certificate :: Lens' VirtualGatewayListenerTls VirtualGatewayListenerTlsCertificate

-- | Specify one of the following modes.
--   
--   <ul>
--   <li>____STRICT – Listener only accepts connections with TLS
--   enabled.</li>
--   <li>____PERMISSIVE – Listener accepts connections with or without TLS
--   enabled.</li>
--   <li>____DISABLED – Listener only accepts connections without TLS.</li>
--   </ul>
virtualGatewayListenerTls_mode :: Lens' VirtualGatewayListenerTls VirtualGatewayListenerTlsMode

-- | The Amazon Resource Name (ARN) for the certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
virtualGatewayListenerTlsAcmCertificate_certificateArn :: Lens' VirtualGatewayListenerTlsAcmCertificate Text

-- | A reference to an object that represents an Certificate Manager
--   certificate.
virtualGatewayListenerTlsCertificate_acm :: Lens' VirtualGatewayListenerTlsCertificate (Maybe VirtualGatewayListenerTlsAcmCertificate)

-- | A reference to an object that represents a virtual gateway's
--   listener's Secret Discovery Service certificate.
virtualGatewayListenerTlsCertificate_sds :: Lens' VirtualGatewayListenerTlsCertificate (Maybe VirtualGatewayListenerTlsSdsCertificate)

-- | A reference to an object that represents a local file certificate.
virtualGatewayListenerTlsCertificate_file :: Lens' VirtualGatewayListenerTlsCertificate (Maybe VirtualGatewayListenerTlsFileCertificate)

-- | The certificate chain for the certificate.
virtualGatewayListenerTlsFileCertificate_certificateChain :: Lens' VirtualGatewayListenerTlsFileCertificate Text

-- | The private key for a certificate stored on the file system of the
--   mesh endpoint that the proxy is running on.
virtualGatewayListenerTlsFileCertificate_privateKey :: Lens' VirtualGatewayListenerTlsFileCertificate Text

-- | A reference to an object that represents the name of the secret secret
--   requested from the Secret Discovery Service provider representing
--   Transport Layer Security (TLS) materials like a certificate or
--   certificate chain.
virtualGatewayListenerTlsSdsCertificate_secretName :: Lens' VirtualGatewayListenerTlsSdsCertificate Text

-- | A reference to an object that represents the SANs for a virtual
--   gateway listener's Transport Layer Security (TLS) validation context.
virtualGatewayListenerTlsValidationContext_subjectAlternativeNames :: Lens' VirtualGatewayListenerTlsValidationContext (Maybe SubjectAlternativeNames)

-- | A reference to where to retrieve the trust chain when validating a
--   peer’s Transport Layer Security (TLS) certificate.
virtualGatewayListenerTlsValidationContext_trust :: Lens' VirtualGatewayListenerTlsValidationContext VirtualGatewayListenerTlsValidationContextTrust

-- | A reference to an object that represents a virtual gateway's
--   listener's Transport Layer Security (TLS) Secret Discovery Service
--   validation context trust.
virtualGatewayListenerTlsValidationContextTrust_sds :: Lens' VirtualGatewayListenerTlsValidationContextTrust (Maybe VirtualGatewayTlsValidationContextSdsTrust)

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
virtualGatewayListenerTlsValidationContextTrust_file :: Lens' VirtualGatewayListenerTlsValidationContextTrust (Maybe VirtualGatewayTlsValidationContextFileTrust)

-- | The access log configuration.
virtualGatewayLogging_accessLog :: Lens' VirtualGatewayLogging (Maybe VirtualGatewayAccessLog)

-- | The port used for the port mapping. Specify one protocol.
virtualGatewayPortMapping_port :: Lens' VirtualGatewayPortMapping Natural

-- | The protocol used for the port mapping.
virtualGatewayPortMapping_protocol :: Lens' VirtualGatewayPortMapping VirtualGatewayPortProtocol

-- | The full Amazon Resource Name (ARN) for the resource.
virtualGatewayRef_arn :: Lens' VirtualGatewayRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
virtualGatewayRef_createdAt :: Lens' VirtualGatewayRef UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
virtualGatewayRef_lastUpdatedAt :: Lens' VirtualGatewayRef UTCTime

-- | The name of the service mesh that the resource resides in.
virtualGatewayRef_meshName :: Lens' VirtualGatewayRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
virtualGatewayRef_meshOwner :: Lens' VirtualGatewayRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
virtualGatewayRef_resourceOwner :: Lens' VirtualGatewayRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
virtualGatewayRef_version :: Lens' VirtualGatewayRef Integer

-- | The name of the resource.
virtualGatewayRef_virtualGatewayName :: Lens' VirtualGatewayRef Text

-- | A reference to an object that represents the defaults for backends.
virtualGatewaySpec_backendDefaults :: Lens' VirtualGatewaySpec (Maybe VirtualGatewayBackendDefaults)

-- | Undocumented member.
virtualGatewaySpec_logging :: Lens' VirtualGatewaySpec (Maybe VirtualGatewayLogging)

-- | The listeners that the mesh endpoint is expected to receive inbound
--   traffic from. You can specify one listener.
virtualGatewaySpec_listeners :: Lens' VirtualGatewaySpec [VirtualGatewayListener]

-- | The current status.
virtualGatewayStatus_status :: Lens' VirtualGatewayStatus VirtualGatewayStatusCode

-- | A reference to an object that represents the SANs for a virtual
--   gateway's listener's Transport Layer Security (TLS) validation
--   context.
virtualGatewayTlsValidationContext_subjectAlternativeNames :: Lens' VirtualGatewayTlsValidationContext (Maybe SubjectAlternativeNames)

-- | A reference to where to retrieve the trust chain when validating a
--   peer’s Transport Layer Security (TLS) certificate.
virtualGatewayTlsValidationContext_trust :: Lens' VirtualGatewayTlsValidationContext VirtualGatewayTlsValidationContextTrust

-- | One or more ACM Amazon Resource Name (ARN)s.
virtualGatewayTlsValidationContextAcmTrust_certificateAuthorityArns :: Lens' VirtualGatewayTlsValidationContextAcmTrust (NonEmpty Text)

-- | The certificate trust chain for a certificate stored on the file
--   system of the virtual node that the proxy is running on.
virtualGatewayTlsValidationContextFileTrust_certificateChain :: Lens' VirtualGatewayTlsValidationContextFileTrust Text

-- | A reference to an object that represents the name of the secret for a
--   virtual gateway's Transport Layer Security (TLS) Secret Discovery
--   Service validation context trust.
virtualGatewayTlsValidationContextSdsTrust_secretName :: Lens' VirtualGatewayTlsValidationContextSdsTrust Text

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) validation context trust for an Certificate Manager certificate.
virtualGatewayTlsValidationContextTrust_acm :: Lens' VirtualGatewayTlsValidationContextTrust (Maybe VirtualGatewayTlsValidationContextAcmTrust)

-- | A reference to an object that represents a virtual gateway's Transport
--   Layer Security (TLS) Secret Discovery Service validation context
--   trust.
virtualGatewayTlsValidationContextTrust_sds :: Lens' VirtualGatewayTlsValidationContextTrust (Maybe VirtualGatewayTlsValidationContextSdsTrust)

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
virtualGatewayTlsValidationContextTrust_file :: Lens' VirtualGatewayTlsValidationContextTrust (Maybe VirtualGatewayTlsValidationContextFileTrust)

-- | An object that represents a type of connection pool.
virtualNodeConnectionPool_http2 :: Lens' VirtualNodeConnectionPool (Maybe VirtualNodeHttp2ConnectionPool)

-- | An object that represents a type of connection pool.
virtualNodeConnectionPool_grpc :: Lens' VirtualNodeConnectionPool (Maybe VirtualNodeGrpcConnectionPool)

-- | An object that represents a type of connection pool.
virtualNodeConnectionPool_tcp :: Lens' VirtualNodeConnectionPool (Maybe VirtualNodeTcpConnectionPool)

-- | An object that represents a type of connection pool.
virtualNodeConnectionPool_http :: Lens' VirtualNodeConnectionPool (Maybe VirtualNodeHttpConnectionPool)

-- | The name of the service mesh that the virtual node resides in.
virtualNodeData_meshName :: Lens' VirtualNodeData Text

-- | The associated metadata for the virtual node.
virtualNodeData_metadata :: Lens' VirtualNodeData ResourceMetadata

-- | The specifications of the virtual node.
virtualNodeData_spec :: Lens' VirtualNodeData VirtualNodeSpec

-- | The current status for the virtual node.
virtualNodeData_status :: Lens' VirtualNodeData VirtualNodeStatus

-- | The name of the virtual node.
virtualNodeData_virtualNodeName :: Lens' VirtualNodeData Text

-- | Maximum number of inflight requests Envoy can concurrently support
--   across hosts in upstream cluster.
virtualNodeGrpcConnectionPool_maxRequests :: Lens' VirtualNodeGrpcConnectionPool Natural

-- | Maximum number of inflight requests Envoy can concurrently support
--   across hosts in upstream cluster.
virtualNodeHttp2ConnectionPool_maxRequests :: Lens' VirtualNodeHttp2ConnectionPool Natural

-- | Number of overflowing requests after <tt>max_connections</tt> Envoy
--   will queue to upstream cluster.
virtualNodeHttpConnectionPool_maxPendingRequests :: Lens' VirtualNodeHttpConnectionPool (Maybe Natural)

-- | Maximum number of outbound TCP connections Envoy can establish
--   concurrently with all hosts in upstream cluster.
virtualNodeHttpConnectionPool_maxConnections :: Lens' VirtualNodeHttpConnectionPool Natural

-- | The full Amazon Resource Name (ARN) for the virtual node.
virtualNodeRef_arn :: Lens' VirtualNodeRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
virtualNodeRef_createdAt :: Lens' VirtualNodeRef UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
virtualNodeRef_lastUpdatedAt :: Lens' VirtualNodeRef UTCTime

-- | The name of the service mesh that the virtual node resides in.
virtualNodeRef_meshName :: Lens' VirtualNodeRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
virtualNodeRef_meshOwner :: Lens' VirtualNodeRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
virtualNodeRef_resourceOwner :: Lens' VirtualNodeRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
virtualNodeRef_version :: Lens' VirtualNodeRef Integer

-- | The name of the virtual node.
virtualNodeRef_virtualNodeName :: Lens' VirtualNodeRef Text

-- | The name of the virtual node that is acting as a service provider.
virtualNodeServiceProvider_virtualNodeName :: Lens' VirtualNodeServiceProvider Text

-- | The backends that the virtual node is expected to send outbound
--   traffic to.
virtualNodeSpec_backends :: Lens' VirtualNodeSpec (Maybe [Backend])

-- | A reference to an object that represents the defaults for backends.
virtualNodeSpec_backendDefaults :: Lens' VirtualNodeSpec (Maybe BackendDefaults)

-- | The service discovery information for the virtual node. If your
--   virtual node does not expect ingress traffic, you can omit this
--   parameter. If you specify a <tt>listener</tt>, then you must specify
--   service discovery information.
virtualNodeSpec_serviceDiscovery :: Lens' VirtualNodeSpec (Maybe ServiceDiscovery)

-- | The listener that the virtual node is expected to receive inbound
--   traffic from. You can specify one listener.
virtualNodeSpec_listeners :: Lens' VirtualNodeSpec (Maybe [Listener])

-- | The inbound and outbound access logging information for the virtual
--   node.
virtualNodeSpec_logging :: Lens' VirtualNodeSpec (Maybe Logging)

-- | The current status of the virtual node.
virtualNodeStatus_status :: Lens' VirtualNodeStatus VirtualNodeStatusCode

-- | Maximum number of outbound TCP connections Envoy can establish
--   concurrently with all hosts in upstream cluster.
virtualNodeTcpConnectionPool_maxConnections :: Lens' VirtualNodeTcpConnectionPool Natural

-- | The name of the service mesh that the virtual router resides in.
virtualRouterData_meshName :: Lens' VirtualRouterData Text

-- | The associated metadata for the virtual router.
virtualRouterData_metadata :: Lens' VirtualRouterData ResourceMetadata

-- | The specifications of the virtual router.
virtualRouterData_spec :: Lens' VirtualRouterData VirtualRouterSpec

-- | The current status of the virtual router.
virtualRouterData_status :: Lens' VirtualRouterData VirtualRouterStatus

-- | The name of the virtual router.
virtualRouterData_virtualRouterName :: Lens' VirtualRouterData Text

-- | Undocumented member.
virtualRouterListener_portMapping :: Lens' VirtualRouterListener PortMapping

-- | The full Amazon Resource Name (ARN) for the virtual router.
virtualRouterRef_arn :: Lens' VirtualRouterRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
virtualRouterRef_createdAt :: Lens' VirtualRouterRef UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
virtualRouterRef_lastUpdatedAt :: Lens' VirtualRouterRef UTCTime

-- | The name of the service mesh that the virtual router resides in.
virtualRouterRef_meshName :: Lens' VirtualRouterRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
virtualRouterRef_meshOwner :: Lens' VirtualRouterRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
virtualRouterRef_resourceOwner :: Lens' VirtualRouterRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
virtualRouterRef_version :: Lens' VirtualRouterRef Integer

-- | The name of the virtual router.
virtualRouterRef_virtualRouterName :: Lens' VirtualRouterRef Text

-- | The name of the virtual router that is acting as a service provider.
virtualRouterServiceProvider_virtualRouterName :: Lens' VirtualRouterServiceProvider Text

-- | The listeners that the virtual router is expected to receive inbound
--   traffic from. You can specify one listener.
virtualRouterSpec_listeners :: Lens' VirtualRouterSpec (Maybe (NonEmpty VirtualRouterListener))

-- | The current status of the virtual router.
virtualRouterStatus_status :: Lens' VirtualRouterStatus VirtualRouterStatusCode

-- | A reference to an object that represents the client policy for a
--   backend.
virtualServiceBackend_clientPolicy :: Lens' VirtualServiceBackend (Maybe ClientPolicy)

-- | The name of the virtual service that is acting as a virtual node
--   backend.
virtualServiceBackend_virtualServiceName :: Lens' VirtualServiceBackend Text

-- | The name of the service mesh that the virtual service resides in.
virtualServiceData_meshName :: Lens' VirtualServiceData Text

-- | Undocumented member.
virtualServiceData_metadata :: Lens' VirtualServiceData ResourceMetadata

-- | The specifications of the virtual service.
virtualServiceData_spec :: Lens' VirtualServiceData VirtualServiceSpec

-- | The current status of the virtual service.
virtualServiceData_status :: Lens' VirtualServiceData VirtualServiceStatus

-- | The name of the virtual service.
virtualServiceData_virtualServiceName :: Lens' VirtualServiceData Text

-- | The virtual router associated with a virtual service.
virtualServiceProvider_virtualRouter :: Lens' VirtualServiceProvider (Maybe VirtualRouterServiceProvider)

-- | The virtual node associated with a virtual service.
virtualServiceProvider_virtualNode :: Lens' VirtualServiceProvider (Maybe VirtualNodeServiceProvider)

-- | The full Amazon Resource Name (ARN) for the virtual service.
virtualServiceRef_arn :: Lens' VirtualServiceRef Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
virtualServiceRef_createdAt :: Lens' VirtualServiceRef UTCTime

-- | The Unix epoch timestamp in seconds for when the resource was last
--   updated.
virtualServiceRef_lastUpdatedAt :: Lens' VirtualServiceRef UTCTime

-- | The name of the service mesh that the virtual service resides in.
virtualServiceRef_meshName :: Lens' VirtualServiceRef Text

-- | The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
virtualServiceRef_meshOwner :: Lens' VirtualServiceRef Text

-- | The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
virtualServiceRef_resourceOwner :: Lens' VirtualServiceRef Text

-- | The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
virtualServiceRef_version :: Lens' VirtualServiceRef Integer

-- | The name of the virtual service.
virtualServiceRef_virtualServiceName :: Lens' VirtualServiceRef Text

-- | The App Mesh object that is acting as the provider for a virtual
--   service. You can specify a single virtual node or virtual router.
virtualServiceSpec_provider :: Lens' VirtualServiceSpec (Maybe VirtualServiceProvider)

-- | The current status of the virtual service.
virtualServiceStatus_status :: Lens' VirtualServiceStatus VirtualServiceStatusCode

-- | The virtual node to associate with the weighted target.
weightedTarget_virtualNode :: Lens' WeightedTarget Text

-- | The relative weight of the weighted target.
weightedTarget_weight :: Lens' WeightedTarget Natural


module Amazonka.AppMesh.Waiters


-- | Derived from API version <tt>2019-01-25</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   App Mesh is a service mesh based on the Envoy proxy that makes it easy
--   to monitor and control microservices. App Mesh standardizes how your
--   microservices communicate, giving you end-to-end visibility and
--   helping to ensure high availability for your applications.
--   
--   App Mesh gives you consistent visibility and network traffic controls
--   for every microservice in an application. You can use App Mesh with
--   Amazon Web Services Fargate, Amazon ECS, Amazon EKS, Kubernetes on
--   Amazon Web Services, and Amazon EC2.
--   
--   App Mesh supports microservice applications that use service discovery
--   naming for their components. For more information about service
--   discovery on Amazon ECS, see <a>Service Discovery</a> in the <i>Amazon
--   Elastic Container Service Developer Guide</i>. Kubernetes
--   <tt>kube-dns</tt> and <tt>coredns</tt> are supported. For more
--   information, see <a>DNS for Services and Pods</a> in the Kubernetes
--   documentation.
module Amazonka.AppMesh

-- | API version <tt>2019-01-25</tt> of the Amazon App Mesh SDK
--   configuration.
defaultService :: Service

-- | The request exceeds the maximum allowed number of tags allowed per
--   resource. The current limit is 50 user tags per resource. You must
--   reduce the number of tags in the request. None of the tags in this
--   request were applied.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request contains a client token that was used for a previous
--   update resource call with different specifications. Try the request
--   again with a new client token.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You don't have permissions to perform this action.
_ForbiddenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource doesn't exist. Check your request syntax and
--   try again.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum request rate permitted by the App Mesh APIs has been
--   exceeded for your account. For best results, use an increasing or
--   variable sleep interval between requests.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request processing has failed because of an unknown error,
--   exception, or failure.
_InternalServerErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request has failed due to a temporary failure of the service.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request syntax was malformed. Check your request syntax and try
--   again.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have exceeded a service limit for your account. For more
--   information, see <a>Service Limits</a> in the <i>AWS App Mesh User
--   Guide</i>.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You can't delete the specified resource because it's in use or
--   required by another resource.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newDescribeVirtualNode</a> smart constructor.
data DescribeVirtualNode
DescribeVirtualNode' :: Maybe Text -> Text -> Text -> DescribeVirtualNode

-- | Create a value of <a>DescribeVirtualNode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DescribeVirtualNode'</a>,
--   <a>describeVirtualNode_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:DescribeVirtualNode'</a>,
--   <a>describeVirtualNode_meshName</a> - The name of the service mesh
--   that the virtual node resides in.
--   
--   <a>$sel:virtualNodeName:DescribeVirtualNode'</a>,
--   <a>describeVirtualNode_virtualNodeName</a> - The name of the virtual
--   node to describe.
newDescribeVirtualNode :: Text -> Text -> DescribeVirtualNode

-- | <i>See:</i> <a>newDescribeVirtualNodeResponse</a> smart constructor.
data DescribeVirtualNodeResponse
DescribeVirtualNodeResponse' :: Int -> VirtualNodeData -> DescribeVirtualNodeResponse

-- | Create a value of <a>DescribeVirtualNodeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeVirtualNodeResponse'</a>,
--   <a>describeVirtualNodeResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualNode:DescribeVirtualNodeResponse'</a>,
--   <a>describeVirtualNodeResponse_virtualNode</a> - The full description
--   of your virtual node.
newDescribeVirtualNodeResponse :: Int -> VirtualNodeData -> DescribeVirtualNodeResponse

-- | <i>See:</i> <a>newDescribeVirtualGateway</a> smart constructor.
data DescribeVirtualGateway
DescribeVirtualGateway' :: Maybe Text -> Text -> Text -> DescribeVirtualGateway

-- | Create a value of <a>DescribeVirtualGateway</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DescribeVirtualGateway'</a>,
--   <a>describeVirtualGateway_meshOwner</a> - The AWS IAM account ID of
--   the service mesh owner. If the account ID is not your own, then it's
--   the ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:DescribeVirtualGateway'</a>,
--   <a>describeVirtualGateway_meshName</a> - The name of the service mesh
--   that the gateway route resides in.
--   
--   <a>$sel:virtualGatewayName:DescribeVirtualGateway'</a>,
--   <a>describeVirtualGateway_virtualGatewayName</a> - The name of the
--   virtual gateway to describe.
newDescribeVirtualGateway :: Text -> Text -> DescribeVirtualGateway

-- | <i>See:</i> <a>newDescribeVirtualGatewayResponse</a> smart
--   constructor.
data DescribeVirtualGatewayResponse
DescribeVirtualGatewayResponse' :: Int -> VirtualGatewayData -> DescribeVirtualGatewayResponse

-- | Create a value of <a>DescribeVirtualGatewayResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeVirtualGatewayResponse'</a>,
--   <a>describeVirtualGatewayResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualGateway:DescribeVirtualGatewayResponse'</a>,
--   <a>describeVirtualGatewayResponse_virtualGateway</a> - The full
--   description of your virtual gateway.
newDescribeVirtualGatewayResponse :: Int -> VirtualGatewayData -> DescribeVirtualGatewayResponse

-- | <i>See:</i> <a>newDescribeRoute</a> smart constructor.
data DescribeRoute
DescribeRoute' :: Maybe Text -> Text -> Text -> Text -> DescribeRoute

-- | Create a value of <a>DescribeRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DescribeRoute'</a>, <a>describeRoute_meshOwner</a> -
--   The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:DescribeRoute'</a>, <a>describeRoute_meshName</a> -
--   The name of the service mesh that the route resides in.
--   
--   <a>$sel:routeName:DescribeRoute'</a>, <a>describeRoute_routeName</a> -
--   The name of the route to describe.
--   
--   <a>$sel:virtualRouterName:DescribeRoute'</a>,
--   <a>describeRoute_virtualRouterName</a> - The name of the virtual
--   router that the route is associated with.
newDescribeRoute :: Text -> Text -> Text -> DescribeRoute

-- | <i>See:</i> <a>newDescribeRouteResponse</a> smart constructor.
data DescribeRouteResponse
DescribeRouteResponse' :: Int -> RouteData -> DescribeRouteResponse

-- | Create a value of <a>DescribeRouteResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeRouteResponse'</a>,
--   <a>describeRouteResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:route:DescribeRouteResponse'</a>,
--   <a>describeRouteResponse_route</a> - The full description of your
--   route.
newDescribeRouteResponse :: Int -> RouteData -> DescribeRouteResponse

-- | <i>See:</i> <a>newDescribeVirtualRouter</a> smart constructor.
data DescribeVirtualRouter
DescribeVirtualRouter' :: Maybe Text -> Text -> Text -> DescribeVirtualRouter

-- | Create a value of <a>DescribeVirtualRouter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DescribeVirtualRouter'</a>,
--   <a>describeVirtualRouter_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:DescribeVirtualRouter'</a>,
--   <a>describeVirtualRouter_meshName</a> - The name of the service mesh
--   that the virtual router resides in.
--   
--   <a>$sel:virtualRouterName:DescribeVirtualRouter'</a>,
--   <a>describeVirtualRouter_virtualRouterName</a> - The name of the
--   virtual router to describe.
newDescribeVirtualRouter :: Text -> Text -> DescribeVirtualRouter

-- | <i>See:</i> <a>newDescribeVirtualRouterResponse</a> smart constructor.
data DescribeVirtualRouterResponse
DescribeVirtualRouterResponse' :: Int -> VirtualRouterData -> DescribeVirtualRouterResponse

-- | Create a value of <a>DescribeVirtualRouterResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeVirtualRouterResponse'</a>,
--   <a>describeVirtualRouterResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualRouter:DescribeVirtualRouterResponse'</a>,
--   <a>describeVirtualRouterResponse_virtualRouter</a> - The full
--   description of your virtual router.
newDescribeVirtualRouterResponse :: Int -> VirtualRouterData -> DescribeVirtualRouterResponse

-- | <i>See:</i> <a>newListMeshes</a> smart constructor.
data ListMeshes
ListMeshes' :: Maybe Text -> Maybe Natural -> ListMeshes

-- | Create a value of <a>ListMeshes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMeshes'</a>, <a>listMeshes_nextToken</a> - The
--   <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListMeshes</tt> request where <tt>limit</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:limit:ListMeshes'</a>, <a>listMeshes_limit</a> - The maximum
--   number of results returned by <tt>ListMeshes</tt> in paginated output.
--   When you use this parameter, <tt>ListMeshes</tt> returns only
--   <tt>limit</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListMeshes</tt> request
--   with the returned <tt>nextToken</tt> value. This value can be between
--   1 and 100. If you don't use this parameter, <tt>ListMeshes</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
newListMeshes :: ListMeshes

-- | <i>See:</i> <a>newListMeshesResponse</a> smart constructor.
data ListMeshesResponse
ListMeshesResponse' :: Maybe Text -> Int -> [MeshRef] -> ListMeshesResponse

-- | Create a value of <a>ListMeshesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMeshes'</a>, <a>listMeshesResponse_nextToken</a>
--   - The <tt>nextToken</tt> value to include in a future
--   <tt>ListMeshes</tt> request. When the results of a <tt>ListMeshes</tt>
--   request exceed <tt>limit</tt>, you can use this value to retrieve the
--   next page of results. This value is <tt>null</tt> when there are no
--   more results to return.
--   
--   <a>$sel:httpStatus:ListMeshesResponse'</a>,
--   <a>listMeshesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:meshes:ListMeshesResponse'</a>,
--   <a>listMeshesResponse_meshes</a> - The list of existing service
--   meshes.
newListMeshesResponse :: Int -> ListMeshesResponse

-- | <i>See:</i> <a>newCreateMesh</a> smart constructor.
data CreateMesh
CreateMesh' :: Maybe Text -> Maybe MeshSpec -> Maybe [TagRef] -> Text -> CreateMesh

-- | Create a value of <a>CreateMesh</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateMesh'</a>, <a>createMesh_clientToken</a> -
--   Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
--   
--   <a>$sel:spec:CreateMesh'</a>, <a>createMesh_spec</a> - The service
--   mesh specification to apply.
--   
--   <a>$sel:tags:CreateMesh'</a>, <a>createMesh_tags</a> - Optional
--   metadata that you can apply to the service mesh to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Tag keys can have a maximum
--   character length of 128 characters, and tag values can have a maximum
--   length of 256 characters.
--   
--   <a>$sel:meshName:CreateMesh'</a>, <a>createMesh_meshName</a> - The
--   name to use for the service mesh.
newCreateMesh :: Text -> CreateMesh

-- | <i>See:</i> <a>newCreateMeshResponse</a> smart constructor.
data CreateMeshResponse
CreateMeshResponse' :: Int -> MeshData -> CreateMeshResponse

-- | Create a value of <a>CreateMeshResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateMeshResponse'</a>,
--   <a>createMeshResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:mesh:CreateMeshResponse'</a>, <a>createMeshResponse_mesh</a> -
--   The full description of your service mesh following the create call.
newCreateMeshResponse :: Int -> MeshData -> CreateMeshResponse

-- | <i>See:</i> <a>newUpdateMesh</a> smart constructor.
data UpdateMesh
UpdateMesh' :: Maybe Text -> Maybe MeshSpec -> Text -> UpdateMesh

-- | Create a value of <a>UpdateMesh</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateMesh'</a>, <a>updateMesh_clientToken</a> -
--   Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
--   
--   <a>$sel:spec:UpdateMesh'</a>, <a>updateMesh_spec</a> - The service
--   mesh specification to apply.
--   
--   <a>$sel:meshName:UpdateMesh'</a>, <a>updateMesh_meshName</a> - The
--   name of the service mesh to update.
newUpdateMesh :: Text -> UpdateMesh

-- | <i>See:</i> <a>newUpdateMeshResponse</a> smart constructor.
data UpdateMeshResponse
UpdateMeshResponse' :: Int -> MeshData -> UpdateMeshResponse

-- | Create a value of <a>UpdateMeshResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateMeshResponse'</a>,
--   <a>updateMeshResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:mesh:UpdateMeshResponse'</a>, <a>updateMeshResponse_mesh</a> -
--   Undocumented member.
newUpdateMeshResponse :: Int -> MeshData -> UpdateMeshResponse

-- | <i>See:</i> <a>newDeleteMesh</a> smart constructor.
data DeleteMesh
DeleteMesh' :: Text -> DeleteMesh

-- | Create a value of <a>DeleteMesh</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshName:DeleteMesh'</a>, <a>deleteMesh_meshName</a> - The
--   name of the service mesh to delete.
newDeleteMesh :: Text -> DeleteMesh

-- | <i>See:</i> <a>newDeleteMeshResponse</a> smart constructor.
data DeleteMeshResponse
DeleteMeshResponse' :: Int -> MeshData -> DeleteMeshResponse

-- | Create a value of <a>DeleteMeshResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteMeshResponse'</a>,
--   <a>deleteMeshResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:mesh:DeleteMeshResponse'</a>, <a>deleteMeshResponse_mesh</a> -
--   The service mesh that was deleted.
newDeleteMeshResponse :: Int -> MeshData -> DeleteMeshResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Maybe Natural -> Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated <tt>ListTagsForResource</tt>
--   request where <tt>limit</tt> was used and the results exceeded the
--   value of that parameter. Pagination continues from the end of the
--   previous results that returned the <tt>nextToken</tt> value.
--   
--   <a>$sel:limit:ListTagsForResource'</a>,
--   <a>listTagsForResource_limit</a> - The maximum number of tag results
--   returned by <tt>ListTagsForResource</tt> in paginated output. When
--   this parameter is used, <tt>ListTagsForResource</tt> returns only
--   <tt>limit</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListTagsForResource</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If you don't use this parameter,
--   <tt>ListTagsForResource</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) that identifies the resource to list the tags for.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Int -> [TagRef] -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - The <tt>nextToken</tt>
--   value to include in a future <tt>ListTagsForResource</tt> request.
--   When the results of a <tt>ListTagsForResource</tt> request exceed
--   <tt>limit</tt>, you can use this value to retrieve the next page of
--   results. This value is <tt>null</tt> when there are no more results to
--   return.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags for the resource.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newCreateVirtualGateway</a> smart constructor.
data CreateVirtualGateway
CreateVirtualGateway' :: Maybe Text -> Maybe Text -> Maybe [TagRef] -> Text -> VirtualGatewaySpec -> Text -> CreateVirtualGateway

-- | Create a value of <a>CreateVirtualGateway</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateVirtualGateway'</a>,
--   <a>createVirtualGateway_clientToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   Up to 36 letters, numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:meshOwner:CreateVirtualGateway'</a>,
--   <a>createVirtualGateway_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then the
--   account that you specify must share the mesh with your account before
--   you can create the resource in the service mesh. For more information
--   about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:tags:CreateVirtualGateway'</a>,
--   <a>createVirtualGateway_tags</a> - Optional metadata that you can
--   apply to the virtual gateway to assist with categorization and
--   organization. Each tag consists of a key and an optional value, both
--   of which you define. Tag keys can have a maximum character length of
--   128 characters, and tag values can have a maximum length of 256
--   characters.
--   
--   <a>$sel:meshName:CreateVirtualGateway'</a>,
--   <a>createVirtualGateway_meshName</a> - The name of the service mesh to
--   create the virtual gateway in.
--   
--   <a>$sel:spec:CreateVirtualGateway'</a>,
--   <a>createVirtualGateway_spec</a> - The virtual gateway specification
--   to apply.
--   
--   <a>$sel:virtualGatewayName:CreateVirtualGateway'</a>,
--   <a>createVirtualGateway_virtualGatewayName</a> - The name to use for
--   the virtual gateway.
newCreateVirtualGateway :: Text -> VirtualGatewaySpec -> Text -> CreateVirtualGateway

-- | <i>See:</i> <a>newCreateVirtualGatewayResponse</a> smart constructor.
data CreateVirtualGatewayResponse
CreateVirtualGatewayResponse' :: Int -> VirtualGatewayData -> CreateVirtualGatewayResponse

-- | Create a value of <a>CreateVirtualGatewayResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateVirtualGatewayResponse'</a>,
--   <a>createVirtualGatewayResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualGateway:CreateVirtualGatewayResponse'</a>,
--   <a>createVirtualGatewayResponse_virtualGateway</a> - The full
--   description of your virtual gateway following the create call.
newCreateVirtualGatewayResponse :: Int -> VirtualGatewayData -> CreateVirtualGatewayResponse

-- | <i>See:</i> <a>newListVirtualServices</a> smart constructor.
data ListVirtualServices
ListVirtualServices' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListVirtualServices

-- | Create a value of <a>ListVirtualServices</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:ListVirtualServices'</a>,
--   <a>listVirtualServices_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:nextToken:ListVirtualServices'</a>,
--   <a>listVirtualServices_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated <tt>ListVirtualServices</tt>
--   request where <tt>limit</tt> was used and the results exceeded the
--   value of that parameter. Pagination continues from the end of the
--   previous results that returned the <tt>nextToken</tt> value.
--   
--   <a>$sel:limit:ListVirtualServices'</a>,
--   <a>listVirtualServices_limit</a> - The maximum number of results
--   returned by <tt>ListVirtualServices</tt> in paginated output. When you
--   use this parameter, <tt>ListVirtualServices</tt> returns only
--   <tt>limit</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListVirtualServices</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If you don't use this parameter,
--   <tt>ListVirtualServices</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
--   
--   <a>$sel:meshName:ListVirtualServices'</a>,
--   <a>listVirtualServices_meshName</a> - The name of the service mesh to
--   list virtual services in.
newListVirtualServices :: Text -> ListVirtualServices

-- | <i>See:</i> <a>newListVirtualServicesResponse</a> smart constructor.
data ListVirtualServicesResponse
ListVirtualServicesResponse' :: Maybe Text -> Int -> [VirtualServiceRef] -> ListVirtualServicesResponse

-- | Create a value of <a>ListVirtualServicesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVirtualServices'</a>,
--   <a>listVirtualServicesResponse_nextToken</a> - The <tt>nextToken</tt>
--   value to include in a future <tt>ListVirtualServices</tt> request.
--   When the results of a <tt>ListVirtualServices</tt> request exceed
--   <tt>limit</tt>, you can use this value to retrieve the next page of
--   results. This value is <tt>null</tt> when there are no more results to
--   return.
--   
--   <a>$sel:httpStatus:ListVirtualServicesResponse'</a>,
--   <a>listVirtualServicesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualServices:ListVirtualServicesResponse'</a>,
--   <a>listVirtualServicesResponse_virtualServices</a> - The list of
--   existing virtual services for the specified service mesh.
newListVirtualServicesResponse :: Int -> ListVirtualServicesResponse

-- | <i>See:</i> <a>newDeleteVirtualService</a> smart constructor.
data DeleteVirtualService
DeleteVirtualService' :: Maybe Text -> Text -> Text -> DeleteVirtualService

-- | Create a value of <a>DeleteVirtualService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DeleteVirtualService'</a>,
--   <a>deleteVirtualService_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:DeleteVirtualService'</a>,
--   <a>deleteVirtualService_meshName</a> - The name of the service mesh to
--   delete the virtual service in.
--   
--   <a>$sel:virtualServiceName:DeleteVirtualService'</a>,
--   <a>deleteVirtualService_virtualServiceName</a> - The name of the
--   virtual service to delete.
newDeleteVirtualService :: Text -> Text -> DeleteVirtualService

-- | <i>See:</i> <a>newDeleteVirtualServiceResponse</a> smart constructor.
data DeleteVirtualServiceResponse
DeleteVirtualServiceResponse' :: Int -> VirtualServiceData -> DeleteVirtualServiceResponse

-- | Create a value of <a>DeleteVirtualServiceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVirtualServiceResponse'</a>,
--   <a>deleteVirtualServiceResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualService:DeleteVirtualServiceResponse'</a>,
--   <a>deleteVirtualServiceResponse_virtualService</a> - The virtual
--   service that was deleted.
newDeleteVirtualServiceResponse :: Int -> VirtualServiceData -> DeleteVirtualServiceResponse

-- | <i>See:</i> <a>newUpdateVirtualService</a> smart constructor.
data UpdateVirtualService
UpdateVirtualService' :: Maybe Text -> Maybe Text -> Text -> VirtualServiceSpec -> Text -> UpdateVirtualService

-- | Create a value of <a>UpdateVirtualService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateVirtualService'</a>,
--   <a>updateVirtualService_clientToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   Up to 36 letters, numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:meshOwner:UpdateVirtualService'</a>,
--   <a>updateVirtualService_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:UpdateVirtualService'</a>,
--   <a>updateVirtualService_meshName</a> - The name of the service mesh
--   that the virtual service resides in.
--   
--   <a>$sel:spec:UpdateVirtualService'</a>,
--   <a>updateVirtualService_spec</a> - The new virtual service
--   specification to apply. This overwrites the existing data.
--   
--   <a>$sel:virtualServiceName:UpdateVirtualService'</a>,
--   <a>updateVirtualService_virtualServiceName</a> - The name of the
--   virtual service to update.
newUpdateVirtualService :: Text -> VirtualServiceSpec -> Text -> UpdateVirtualService

-- | <i>See:</i> <a>newUpdateVirtualServiceResponse</a> smart constructor.
data UpdateVirtualServiceResponse
UpdateVirtualServiceResponse' :: Int -> VirtualServiceData -> UpdateVirtualServiceResponse

-- | Create a value of <a>UpdateVirtualServiceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateVirtualServiceResponse'</a>,
--   <a>updateVirtualServiceResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualService:UpdateVirtualServiceResponse'</a>,
--   <a>updateVirtualServiceResponse_virtualService</a> - A full
--   description of the virtual service that was updated.
newUpdateVirtualServiceResponse :: Int -> VirtualServiceData -> UpdateVirtualServiceResponse

-- | <i>See:</i> <a>newUpdateVirtualGateway</a> smart constructor.
data UpdateVirtualGateway
UpdateVirtualGateway' :: Maybe Text -> Maybe Text -> Text -> VirtualGatewaySpec -> Text -> UpdateVirtualGateway

-- | Create a value of <a>UpdateVirtualGateway</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateVirtualGateway'</a>,
--   <a>updateVirtualGateway_clientToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   Up to 36 letters, numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:meshOwner:UpdateVirtualGateway'</a>,
--   <a>updateVirtualGateway_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:UpdateVirtualGateway'</a>,
--   <a>updateVirtualGateway_meshName</a> - The name of the service mesh
--   that the virtual gateway resides in.
--   
--   <a>$sel:spec:UpdateVirtualGateway'</a>,
--   <a>updateVirtualGateway_spec</a> - The new virtual gateway
--   specification to apply. This overwrites the existing data.
--   
--   <a>$sel:virtualGatewayName:UpdateVirtualGateway'</a>,
--   <a>updateVirtualGateway_virtualGatewayName</a> - The name of the
--   virtual gateway to update.
newUpdateVirtualGateway :: Text -> VirtualGatewaySpec -> Text -> UpdateVirtualGateway

-- | <i>See:</i> <a>newUpdateVirtualGatewayResponse</a> smart constructor.
data UpdateVirtualGatewayResponse
UpdateVirtualGatewayResponse' :: Int -> VirtualGatewayData -> UpdateVirtualGatewayResponse

-- | Create a value of <a>UpdateVirtualGatewayResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateVirtualGatewayResponse'</a>,
--   <a>updateVirtualGatewayResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualGateway:UpdateVirtualGatewayResponse'</a>,
--   <a>updateVirtualGatewayResponse_virtualGateway</a> - A full
--   description of the virtual gateway that was updated.
newUpdateVirtualGatewayResponse :: Int -> VirtualGatewayData -> UpdateVirtualGatewayResponse

-- | <i>See:</i> <a>newDeleteVirtualGateway</a> smart constructor.
data DeleteVirtualGateway
DeleteVirtualGateway' :: Maybe Text -> Text -> Text -> DeleteVirtualGateway

-- | Create a value of <a>DeleteVirtualGateway</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DeleteVirtualGateway'</a>,
--   <a>deleteVirtualGateway_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:DeleteVirtualGateway'</a>,
--   <a>deleteVirtualGateway_meshName</a> - The name of the service mesh to
--   delete the virtual gateway from.
--   
--   <a>$sel:virtualGatewayName:DeleteVirtualGateway'</a>,
--   <a>deleteVirtualGateway_virtualGatewayName</a> - The name of the
--   virtual gateway to delete.
newDeleteVirtualGateway :: Text -> Text -> DeleteVirtualGateway

-- | <i>See:</i> <a>newDeleteVirtualGatewayResponse</a> smart constructor.
data DeleteVirtualGatewayResponse
DeleteVirtualGatewayResponse' :: Int -> VirtualGatewayData -> DeleteVirtualGatewayResponse

-- | Create a value of <a>DeleteVirtualGatewayResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVirtualGatewayResponse'</a>,
--   <a>deleteVirtualGatewayResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualGateway:DeleteVirtualGatewayResponse'</a>,
--   <a>deleteVirtualGatewayResponse_virtualGateway</a> - The virtual
--   gateway that was deleted.
newDeleteVirtualGatewayResponse :: Int -> VirtualGatewayData -> DeleteVirtualGatewayResponse

-- | <i>See:</i> <a>newDeleteRoute</a> smart constructor.
data DeleteRoute
DeleteRoute' :: Maybe Text -> Text -> Text -> Text -> DeleteRoute

-- | Create a value of <a>DeleteRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DeleteRoute'</a>, <a>deleteRoute_meshOwner</a> - The
--   AWS IAM account ID of the service mesh owner. If the account ID is not
--   your own, then it's the ID of the account that shared the mesh with
--   your account. For more information about mesh sharing, see <a>Working
--   with shared meshes</a>.
--   
--   <a>$sel:meshName:DeleteRoute'</a>, <a>deleteRoute_meshName</a> - The
--   name of the service mesh to delete the route in.
--   
--   <a>$sel:routeName:DeleteRoute'</a>, <a>deleteRoute_routeName</a> - The
--   name of the route to delete.
--   
--   <a>$sel:virtualRouterName:DeleteRoute'</a>,
--   <a>deleteRoute_virtualRouterName</a> - The name of the virtual router
--   to delete the route in.
newDeleteRoute :: Text -> Text -> Text -> DeleteRoute

-- | <i>See:</i> <a>newDeleteRouteResponse</a> smart constructor.
data DeleteRouteResponse
DeleteRouteResponse' :: Int -> RouteData -> DeleteRouteResponse

-- | Create a value of <a>DeleteRouteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRouteResponse'</a>,
--   <a>deleteRouteResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:route:DeleteRouteResponse'</a>,
--   <a>deleteRouteResponse_route</a> - The route that was deleted.
newDeleteRouteResponse :: Int -> RouteData -> DeleteRouteResponse

-- | <i>See:</i> <a>newUpdateRoute</a> smart constructor.
data UpdateRoute
UpdateRoute' :: Maybe Text -> Maybe Text -> Text -> Text -> RouteSpec -> Text -> UpdateRoute

-- | Create a value of <a>UpdateRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateRoute'</a>, <a>updateRoute_clientToken</a> -
--   Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
--   
--   <a>$sel:meshOwner:UpdateRoute'</a>, <a>updateRoute_meshOwner</a> - The
--   AWS IAM account ID of the service mesh owner. If the account ID is not
--   your own, then it's the ID of the account that shared the mesh with
--   your account. For more information about mesh sharing, see <a>Working
--   with shared meshes</a>.
--   
--   <a>$sel:meshName:UpdateRoute'</a>, <a>updateRoute_meshName</a> - The
--   name of the service mesh that the route resides in.
--   
--   <a>$sel:routeName:UpdateRoute'</a>, <a>updateRoute_routeName</a> - The
--   name of the route to update.
--   
--   <a>$sel:spec:UpdateRoute'</a>, <a>updateRoute_spec</a> - The new route
--   specification to apply. This overwrites the existing data.
--   
--   <a>$sel:virtualRouterName:UpdateRoute'</a>,
--   <a>updateRoute_virtualRouterName</a> - The name of the virtual router
--   that the route is associated with.
newUpdateRoute :: Text -> Text -> RouteSpec -> Text -> UpdateRoute

-- | <i>See:</i> <a>newUpdateRouteResponse</a> smart constructor.
data UpdateRouteResponse
UpdateRouteResponse' :: Int -> RouteData -> UpdateRouteResponse

-- | Create a value of <a>UpdateRouteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateRouteResponse'</a>,
--   <a>updateRouteResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:route:UpdateRouteResponse'</a>,
--   <a>updateRouteResponse_route</a> - A full description of the route
--   that was updated.
newUpdateRouteResponse :: Int -> RouteData -> UpdateRouteResponse

-- | <i>See:</i> <a>newCreateVirtualService</a> smart constructor.
data CreateVirtualService
CreateVirtualService' :: Maybe Text -> Maybe Text -> Maybe [TagRef] -> Text -> VirtualServiceSpec -> Text -> CreateVirtualService

-- | Create a value of <a>CreateVirtualService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateVirtualService'</a>,
--   <a>createVirtualService_clientToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   Up to 36 letters, numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:meshOwner:CreateVirtualService'</a>,
--   <a>createVirtualService_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then the
--   account that you specify must share the mesh with your account before
--   you can create the resource in the service mesh. For more information
--   about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:tags:CreateVirtualService'</a>,
--   <a>createVirtualService_tags</a> - Optional metadata that you can
--   apply to the virtual service to assist with categorization and
--   organization. Each tag consists of a key and an optional value, both
--   of which you define. Tag keys can have a maximum character length of
--   128 characters, and tag values can have a maximum length of 256
--   characters.
--   
--   <a>$sel:meshName:CreateVirtualService'</a>,
--   <a>createVirtualService_meshName</a> - The name of the service mesh to
--   create the virtual service in.
--   
--   <a>$sel:spec:CreateVirtualService'</a>,
--   <a>createVirtualService_spec</a> - The virtual service specification
--   to apply.
--   
--   <a>$sel:virtualServiceName:CreateVirtualService'</a>,
--   <a>createVirtualService_virtualServiceName</a> - The name to use for
--   the virtual service.
newCreateVirtualService :: Text -> VirtualServiceSpec -> Text -> CreateVirtualService

-- | <i>See:</i> <a>newCreateVirtualServiceResponse</a> smart constructor.
data CreateVirtualServiceResponse
CreateVirtualServiceResponse' :: Int -> VirtualServiceData -> CreateVirtualServiceResponse

-- | Create a value of <a>CreateVirtualServiceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateVirtualServiceResponse'</a>,
--   <a>createVirtualServiceResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualService:CreateVirtualServiceResponse'</a>,
--   <a>createVirtualServiceResponse_virtualService</a> - The full
--   description of your virtual service following the create call.
newCreateVirtualServiceResponse :: Int -> VirtualServiceData -> CreateVirtualServiceResponse

-- | Deletes a virtual node input.
--   
--   <i>See:</i> <a>newDeleteVirtualNode</a> smart constructor.
data DeleteVirtualNode
DeleteVirtualNode' :: Maybe Text -> Text -> Text -> DeleteVirtualNode

-- | Create a value of <a>DeleteVirtualNode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DeleteVirtualNode'</a>,
--   <a>deleteVirtualNode_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:DeleteVirtualNode'</a>,
--   <a>deleteVirtualNode_meshName</a> - The name of the service mesh to
--   delete the virtual node in.
--   
--   <a>$sel:virtualNodeName:DeleteVirtualNode'</a>,
--   <a>deleteVirtualNode_virtualNodeName</a> - The name of the virtual
--   node to delete.
newDeleteVirtualNode :: Text -> Text -> DeleteVirtualNode

-- | <i>See:</i> <a>newDeleteVirtualNodeResponse</a> smart constructor.
data DeleteVirtualNodeResponse
DeleteVirtualNodeResponse' :: Int -> VirtualNodeData -> DeleteVirtualNodeResponse

-- | Create a value of <a>DeleteVirtualNodeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVirtualNodeResponse'</a>,
--   <a>deleteVirtualNodeResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualNode:DeleteVirtualNodeResponse'</a>,
--   <a>deleteVirtualNodeResponse_virtualNode</a> - The virtual node that
--   was deleted.
newDeleteVirtualNodeResponse :: Int -> VirtualNodeData -> DeleteVirtualNodeResponse

-- | <i>See:</i> <a>newUpdateVirtualNode</a> smart constructor.
data UpdateVirtualNode
UpdateVirtualNode' :: Maybe Text -> Maybe Text -> Text -> VirtualNodeSpec -> Text -> UpdateVirtualNode

-- | Create a value of <a>UpdateVirtualNode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateVirtualNode'</a>,
--   <a>updateVirtualNode_clientToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   Up to 36 letters, numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:meshOwner:UpdateVirtualNode'</a>,
--   <a>updateVirtualNode_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:UpdateVirtualNode'</a>,
--   <a>updateVirtualNode_meshName</a> - The name of the service mesh that
--   the virtual node resides in.
--   
--   <a>$sel:spec:UpdateVirtualNode'</a>, <a>updateVirtualNode_spec</a> -
--   The new virtual node specification to apply. This overwrites the
--   existing data.
--   
--   <a>$sel:virtualNodeName:UpdateVirtualNode'</a>,
--   <a>updateVirtualNode_virtualNodeName</a> - The name of the virtual
--   node to update.
newUpdateVirtualNode :: Text -> VirtualNodeSpec -> Text -> UpdateVirtualNode

-- | <i>See:</i> <a>newUpdateVirtualNodeResponse</a> smart constructor.
data UpdateVirtualNodeResponse
UpdateVirtualNodeResponse' :: Int -> VirtualNodeData -> UpdateVirtualNodeResponse

-- | Create a value of <a>UpdateVirtualNodeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateVirtualNodeResponse'</a>,
--   <a>updateVirtualNodeResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualNode:UpdateVirtualNodeResponse'</a>,
--   <a>updateVirtualNodeResponse_virtualNode</a> - A full description of
--   the virtual node that was updated.
newUpdateVirtualNodeResponse :: Int -> VirtualNodeData -> UpdateVirtualNodeResponse

-- | <i>See:</i> <a>newListGatewayRoutes</a> smart constructor.
data ListGatewayRoutes
ListGatewayRoutes' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> Text -> ListGatewayRoutes

-- | Create a value of <a>ListGatewayRoutes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:ListGatewayRoutes'</a>,
--   <a>listGatewayRoutes_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:nextToken:ListGatewayRoutes'</a>,
--   <a>listGatewayRoutes_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated <tt>ListGatewayRoutes</tt> request
--   where <tt>limit</tt> was used and the results exceeded the value of
--   that parameter. Pagination continues from the end of the previous
--   results that returned the <tt>nextToken</tt> value.
--   
--   <a>$sel:limit:ListGatewayRoutes'</a>, <a>listGatewayRoutes_limit</a> -
--   The maximum number of results returned by <tt>ListGatewayRoutes</tt>
--   in paginated output. When you use this parameter,
--   <tt>ListGatewayRoutes</tt> returns only <tt>limit</tt> results in a
--   single page along with a <tt>nextToken</tt> response element. You can
--   see the remaining results of the initial request by sending another
--   <tt>ListGatewayRoutes</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListGatewayRoutes</tt> returns up to 100
--   results and a <tt>nextToken</tt> value if applicable.
--   
--   <a>$sel:meshName:ListGatewayRoutes'</a>,
--   <a>listGatewayRoutes_meshName</a> - The name of the service mesh to
--   list gateway routes in.
--   
--   <a>$sel:virtualGatewayName:ListGatewayRoutes'</a>,
--   <a>listGatewayRoutes_virtualGatewayName</a> - The name of the virtual
--   gateway to list gateway routes in.
newListGatewayRoutes :: Text -> Text -> ListGatewayRoutes

-- | <i>See:</i> <a>newListGatewayRoutesResponse</a> smart constructor.
data ListGatewayRoutesResponse
ListGatewayRoutesResponse' :: Maybe Text -> Int -> [GatewayRouteRef] -> ListGatewayRoutesResponse

-- | Create a value of <a>ListGatewayRoutesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGatewayRoutes'</a>,
--   <a>listGatewayRoutesResponse_nextToken</a> - The <tt>nextToken</tt>
--   value to include in a future <tt>ListGatewayRoutes</tt> request. When
--   the results of a <tt>ListGatewayRoutes</tt> request exceed
--   <tt>limit</tt>, you can use this value to retrieve the next page of
--   results. This value is <tt>null</tt> when there are no more results to
--   return.
--   
--   <a>$sel:httpStatus:ListGatewayRoutesResponse'</a>,
--   <a>listGatewayRoutesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:gatewayRoutes:ListGatewayRoutesResponse'</a>,
--   <a>listGatewayRoutesResponse_gatewayRoutes</a> - The list of existing
--   gateway routes for the specified service mesh and virtual gateway.
newListGatewayRoutesResponse :: Int -> ListGatewayRoutesResponse

-- | <i>See:</i> <a>newListRoutes</a> smart constructor.
data ListRoutes
ListRoutes' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> Text -> ListRoutes

-- | Create a value of <a>ListRoutes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:ListRoutes'</a>, <a>listRoutes_meshOwner</a> - The
--   AWS IAM account ID of the service mesh owner. If the account ID is not
--   your own, then it's the ID of the account that shared the mesh with
--   your account. For more information about mesh sharing, see <a>Working
--   with shared meshes</a>.
--   
--   <a>$sel:nextToken:ListRoutes'</a>, <a>listRoutes_nextToken</a> - The
--   <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListRoutes</tt> request where <tt>limit</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   <a>$sel:limit:ListRoutes'</a>, <a>listRoutes_limit</a> - The maximum
--   number of results returned by <tt>ListRoutes</tt> in paginated output.
--   When you use this parameter, <tt>ListRoutes</tt> returns only
--   <tt>limit</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListRoutes</tt> request
--   with the returned <tt>nextToken</tt> value. This value can be between
--   1 and 100. If you don't use this parameter, <tt>ListRoutes</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
--   
--   <a>$sel:meshName:ListRoutes'</a>, <a>listRoutes_meshName</a> - The
--   name of the service mesh to list routes in.
--   
--   <a>$sel:virtualRouterName:ListRoutes'</a>,
--   <a>listRoutes_virtualRouterName</a> - The name of the virtual router
--   to list routes in.
newListRoutes :: Text -> Text -> ListRoutes

-- | <i>See:</i> <a>newListRoutesResponse</a> smart constructor.
data ListRoutesResponse
ListRoutesResponse' :: Maybe Text -> Int -> [RouteRef] -> ListRoutesResponse

-- | Create a value of <a>ListRoutesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRoutes'</a>, <a>listRoutesResponse_nextToken</a>
--   - The <tt>nextToken</tt> value to include in a future
--   <tt>ListRoutes</tt> request. When the results of a <tt>ListRoutes</tt>
--   request exceed <tt>limit</tt>, you can use this value to retrieve the
--   next page of results. This value is <tt>null</tt> when there are no
--   more results to return.
--   
--   <a>$sel:httpStatus:ListRoutesResponse'</a>,
--   <a>listRoutesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:routes:ListRoutesResponse'</a>,
--   <a>listRoutesResponse_routes</a> - The list of existing routes for the
--   specified service mesh and virtual router.
newListRoutesResponse :: Int -> ListRoutesResponse

-- | <i>See:</i> <a>newListVirtualNodes</a> smart constructor.
data ListVirtualNodes
ListVirtualNodes' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListVirtualNodes

-- | Create a value of <a>ListVirtualNodes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:ListVirtualNodes'</a>,
--   <a>listVirtualNodes_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:nextToken:ListVirtualNodes'</a>,
--   <a>listVirtualNodes_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated <tt>ListVirtualNodes</tt> request
--   where <tt>limit</tt> was used and the results exceeded the value of
--   that parameter. Pagination continues from the end of the previous
--   results that returned the <tt>nextToken</tt> value.
--   
--   <a>$sel:limit:ListVirtualNodes'</a>, <a>listVirtualNodes_limit</a> -
--   The maximum number of results returned by <tt>ListVirtualNodes</tt> in
--   paginated output. When you use this parameter,
--   <tt>ListVirtualNodes</tt> returns only <tt>limit</tt> results in a
--   single page along with a <tt>nextToken</tt> response element. You can
--   see the remaining results of the initial request by sending another
--   <tt>ListVirtualNodes</tt> request with the returned <tt>nextToken</tt>
--   value. This value can be between 1 and 100. If you don't use this
--   parameter, <tt>ListVirtualNodes</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
--   
--   <a>$sel:meshName:ListVirtualNodes'</a>,
--   <a>listVirtualNodes_meshName</a> - The name of the service mesh to
--   list virtual nodes in.
newListVirtualNodes :: Text -> ListVirtualNodes

-- | <i>See:</i> <a>newListVirtualNodesResponse</a> smart constructor.
data ListVirtualNodesResponse
ListVirtualNodesResponse' :: Maybe Text -> Int -> [VirtualNodeRef] -> ListVirtualNodesResponse

-- | Create a value of <a>ListVirtualNodesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVirtualNodes'</a>,
--   <a>listVirtualNodesResponse_nextToken</a> - The <tt>nextToken</tt>
--   value to include in a future <tt>ListVirtualNodes</tt> request. When
--   the results of a <tt>ListVirtualNodes</tt> request exceed
--   <tt>limit</tt>, you can use this value to retrieve the next page of
--   results. This value is <tt>null</tt> when there are no more results to
--   return.
--   
--   <a>$sel:httpStatus:ListVirtualNodesResponse'</a>,
--   <a>listVirtualNodesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualNodes:ListVirtualNodesResponse'</a>,
--   <a>listVirtualNodesResponse_virtualNodes</a> - The list of existing
--   virtual nodes for the specified service mesh.
newListVirtualNodesResponse :: Int -> ListVirtualNodesResponse

-- | <i>See:</i> <a>newDeleteVirtualRouter</a> smart constructor.
data DeleteVirtualRouter
DeleteVirtualRouter' :: Maybe Text -> Text -> Text -> DeleteVirtualRouter

-- | Create a value of <a>DeleteVirtualRouter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DeleteVirtualRouter'</a>,
--   <a>deleteVirtualRouter_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:DeleteVirtualRouter'</a>,
--   <a>deleteVirtualRouter_meshName</a> - The name of the service mesh to
--   delete the virtual router in.
--   
--   <a>$sel:virtualRouterName:DeleteVirtualRouter'</a>,
--   <a>deleteVirtualRouter_virtualRouterName</a> - The name of the virtual
--   router to delete.
newDeleteVirtualRouter :: Text -> Text -> DeleteVirtualRouter

-- | <i>See:</i> <a>newDeleteVirtualRouterResponse</a> smart constructor.
data DeleteVirtualRouterResponse
DeleteVirtualRouterResponse' :: Int -> VirtualRouterData -> DeleteVirtualRouterResponse

-- | Create a value of <a>DeleteVirtualRouterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVirtualRouterResponse'</a>,
--   <a>deleteVirtualRouterResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualRouter:DeleteVirtualRouterResponse'</a>,
--   <a>deleteVirtualRouterResponse_virtualRouter</a> - The virtual router
--   that was deleted.
newDeleteVirtualRouterResponse :: Int -> VirtualRouterData -> DeleteVirtualRouterResponse

-- | <i>See:</i> <a>newUpdateVirtualRouter</a> smart constructor.
data UpdateVirtualRouter
UpdateVirtualRouter' :: Maybe Text -> Maybe Text -> Text -> VirtualRouterSpec -> Text -> UpdateVirtualRouter

-- | Create a value of <a>UpdateVirtualRouter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateVirtualRouter'</a>,
--   <a>updateVirtualRouter_clientToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   Up to 36 letters, numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:meshOwner:UpdateVirtualRouter'</a>,
--   <a>updateVirtualRouter_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:UpdateVirtualRouter'</a>,
--   <a>updateVirtualRouter_meshName</a> - The name of the service mesh
--   that the virtual router resides in.
--   
--   <a>$sel:spec:UpdateVirtualRouter'</a>, <a>updateVirtualRouter_spec</a>
--   - The new virtual router specification to apply. This overwrites the
--   existing data.
--   
--   <a>$sel:virtualRouterName:UpdateVirtualRouter'</a>,
--   <a>updateVirtualRouter_virtualRouterName</a> - The name of the virtual
--   router to update.
newUpdateVirtualRouter :: Text -> VirtualRouterSpec -> Text -> UpdateVirtualRouter

-- | <i>See:</i> <a>newUpdateVirtualRouterResponse</a> smart constructor.
data UpdateVirtualRouterResponse
UpdateVirtualRouterResponse' :: Int -> VirtualRouterData -> UpdateVirtualRouterResponse

-- | Create a value of <a>UpdateVirtualRouterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateVirtualRouterResponse'</a>,
--   <a>updateVirtualRouterResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualRouter:UpdateVirtualRouterResponse'</a>,
--   <a>updateVirtualRouterResponse_virtualRouter</a> - A full description
--   of the virtual router that was updated.
newUpdateVirtualRouterResponse :: Int -> VirtualRouterData -> UpdateVirtualRouterResponse

-- | <i>See:</i> <a>newCreateVirtualRouter</a> smart constructor.
data CreateVirtualRouter
CreateVirtualRouter' :: Maybe Text -> Maybe Text -> Maybe [TagRef] -> Text -> VirtualRouterSpec -> Text -> CreateVirtualRouter

-- | Create a value of <a>CreateVirtualRouter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateVirtualRouter'</a>,
--   <a>createVirtualRouter_clientToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   Up to 36 letters, numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:meshOwner:CreateVirtualRouter'</a>,
--   <a>createVirtualRouter_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then the
--   account that you specify must share the mesh with your account before
--   you can create the resource in the service mesh. For more information
--   about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:tags:CreateVirtualRouter'</a>, <a>createVirtualRouter_tags</a>
--   - Optional metadata that you can apply to the virtual router to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
--   
--   <a>$sel:meshName:CreateVirtualRouter'</a>,
--   <a>createVirtualRouter_meshName</a> - The name of the service mesh to
--   create the virtual router in.
--   
--   <a>$sel:spec:CreateVirtualRouter'</a>, <a>createVirtualRouter_spec</a>
--   - The virtual router specification to apply.
--   
--   <a>$sel:virtualRouterName:CreateVirtualRouter'</a>,
--   <a>createVirtualRouter_virtualRouterName</a> - The name to use for the
--   virtual router.
newCreateVirtualRouter :: Text -> VirtualRouterSpec -> Text -> CreateVirtualRouter

-- | <i>See:</i> <a>newCreateVirtualRouterResponse</a> smart constructor.
data CreateVirtualRouterResponse
CreateVirtualRouterResponse' :: Int -> VirtualRouterData -> CreateVirtualRouterResponse

-- | Create a value of <a>CreateVirtualRouterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateVirtualRouterResponse'</a>,
--   <a>createVirtualRouterResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualRouter:CreateVirtualRouterResponse'</a>,
--   <a>createVirtualRouterResponse_virtualRouter</a> - The full
--   description of your virtual router following the create call.
newCreateVirtualRouterResponse :: Int -> VirtualRouterData -> CreateVirtualRouterResponse

-- | <i>See:</i> <a>newDescribeVirtualService</a> smart constructor.
data DescribeVirtualService
DescribeVirtualService' :: Maybe Text -> Text -> Text -> DescribeVirtualService

-- | Create a value of <a>DescribeVirtualService</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DescribeVirtualService'</a>,
--   <a>describeVirtualService_meshOwner</a> - The AWS IAM account ID of
--   the service mesh owner. If the account ID is not your own, then it's
--   the ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:DescribeVirtualService'</a>,
--   <a>describeVirtualService_meshName</a> - The name of the service mesh
--   that the virtual service resides in.
--   
--   <a>$sel:virtualServiceName:DescribeVirtualService'</a>,
--   <a>describeVirtualService_virtualServiceName</a> - The name of the
--   virtual service to describe.
newDescribeVirtualService :: Text -> Text -> DescribeVirtualService

-- | <i>See:</i> <a>newDescribeVirtualServiceResponse</a> smart
--   constructor.
data DescribeVirtualServiceResponse
DescribeVirtualServiceResponse' :: Int -> VirtualServiceData -> DescribeVirtualServiceResponse

-- | Create a value of <a>DescribeVirtualServiceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeVirtualServiceResponse'</a>,
--   <a>describeVirtualServiceResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualService:DescribeVirtualServiceResponse'</a>,
--   <a>describeVirtualServiceResponse_virtualService</a> - The full
--   description of your virtual service.
newDescribeVirtualServiceResponse :: Int -> VirtualServiceData -> DescribeVirtualServiceResponse

-- | <i>See:</i> <a>newDescribeGatewayRoute</a> smart constructor.
data DescribeGatewayRoute
DescribeGatewayRoute' :: Maybe Text -> Text -> Text -> Text -> DescribeGatewayRoute

-- | Create a value of <a>DescribeGatewayRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DescribeGatewayRoute'</a>,
--   <a>describeGatewayRoute_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:gatewayRouteName:DescribeGatewayRoute'</a>,
--   <a>describeGatewayRoute_gatewayRouteName</a> - The name of the gateway
--   route to describe.
--   
--   <a>$sel:meshName:DescribeGatewayRoute'</a>,
--   <a>describeGatewayRoute_meshName</a> - The name of the service mesh
--   that the gateway route resides in.
--   
--   <a>$sel:virtualGatewayName:DescribeGatewayRoute'</a>,
--   <a>describeGatewayRoute_virtualGatewayName</a> - The name of the
--   virtual gateway that the gateway route is associated with.
newDescribeGatewayRoute :: Text -> Text -> Text -> DescribeGatewayRoute

-- | <i>See:</i> <a>newDescribeGatewayRouteResponse</a> smart constructor.
data DescribeGatewayRouteResponse
DescribeGatewayRouteResponse' :: Int -> GatewayRouteData -> DescribeGatewayRouteResponse

-- | Create a value of <a>DescribeGatewayRouteResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeGatewayRouteResponse'</a>,
--   <a>describeGatewayRouteResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:gatewayRoute:DescribeGatewayRouteResponse'</a>,
--   <a>describeGatewayRouteResponse_gatewayRoute</a> - The full
--   description of your gateway route.
newDescribeGatewayRouteResponse :: Int -> GatewayRouteData -> DescribeGatewayRouteResponse

-- | <i>See:</i> <a>newCreateRoute</a> smart constructor.
data CreateRoute
CreateRoute' :: Maybe Text -> Maybe Text -> Maybe [TagRef] -> Text -> Text -> RouteSpec -> Text -> CreateRoute

-- | Create a value of <a>CreateRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateRoute'</a>, <a>createRoute_clientToken</a> -
--   Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Up to 36 letters, numbers, hyphens, and
--   underscores are allowed.
--   
--   <a>$sel:meshOwner:CreateRoute'</a>, <a>createRoute_meshOwner</a> - The
--   AWS IAM account ID of the service mesh owner. If the account ID is not
--   your own, then the account that you specify must share the mesh with
--   your account before you can create the resource in the service mesh.
--   For more information about mesh sharing, see <a>Working with shared
--   meshes</a>.
--   
--   <a>$sel:tags:CreateRoute'</a>, <a>createRoute_tags</a> - Optional
--   metadata that you can apply to the route to assist with categorization
--   and organization. Each tag consists of a key and an optional value,
--   both of which you define. Tag keys can have a maximum character length
--   of 128 characters, and tag values can have a maximum length of 256
--   characters.
--   
--   <a>$sel:meshName:CreateRoute'</a>, <a>createRoute_meshName</a> - The
--   name of the service mesh to create the route in.
--   
--   <a>$sel:routeName:CreateRoute'</a>, <a>createRoute_routeName</a> - The
--   name to use for the route.
--   
--   <a>$sel:spec:CreateRoute'</a>, <a>createRoute_spec</a> - The route
--   specification to apply.
--   
--   <a>$sel:virtualRouterName:CreateRoute'</a>,
--   <a>createRoute_virtualRouterName</a> - The name of the virtual router
--   in which to create the route. If the virtual router is in a shared
--   mesh, then you must be the owner of the virtual router resource.
newCreateRoute :: Text -> Text -> RouteSpec -> Text -> CreateRoute

-- | <i>See:</i> <a>newCreateRouteResponse</a> smart constructor.
data CreateRouteResponse
CreateRouteResponse' :: Int -> RouteData -> CreateRouteResponse

-- | Create a value of <a>CreateRouteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateRouteResponse'</a>,
--   <a>createRouteResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:route:CreateRouteResponse'</a>,
--   <a>createRouteResponse_route</a> - The full description of your mesh
--   following the create call.
newCreateRouteResponse :: Int -> RouteData -> CreateRouteResponse

-- | <i>See:</i> <a>newCreateVirtualNode</a> smart constructor.
data CreateVirtualNode
CreateVirtualNode' :: Maybe Text -> Maybe Text -> Maybe [TagRef] -> Text -> VirtualNodeSpec -> Text -> CreateVirtualNode

-- | Create a value of <a>CreateVirtualNode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateVirtualNode'</a>,
--   <a>createVirtualNode_clientToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   Up to 36 letters, numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:meshOwner:CreateVirtualNode'</a>,
--   <a>createVirtualNode_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then the
--   account that you specify must share the mesh with your account before
--   you can create the resource in the service mesh. For more information
--   about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:tags:CreateVirtualNode'</a>, <a>createVirtualNode_tags</a> -
--   Optional metadata that you can apply to the virtual node to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
--   
--   <a>$sel:meshName:CreateVirtualNode'</a>,
--   <a>createVirtualNode_meshName</a> - The name of the service mesh to
--   create the virtual node in.
--   
--   <a>$sel:spec:CreateVirtualNode'</a>, <a>createVirtualNode_spec</a> -
--   The virtual node specification to apply.
--   
--   <a>$sel:virtualNodeName:CreateVirtualNode'</a>,
--   <a>createVirtualNode_virtualNodeName</a> - The name to use for the
--   virtual node.
newCreateVirtualNode :: Text -> VirtualNodeSpec -> Text -> CreateVirtualNode

-- | <i>See:</i> <a>newCreateVirtualNodeResponse</a> smart constructor.
data CreateVirtualNodeResponse
CreateVirtualNodeResponse' :: Int -> VirtualNodeData -> CreateVirtualNodeResponse

-- | Create a value of <a>CreateVirtualNodeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateVirtualNodeResponse'</a>,
--   <a>createVirtualNodeResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualNode:CreateVirtualNodeResponse'</a>,
--   <a>createVirtualNodeResponse_virtualNode</a> - The full description of
--   your virtual node following the create call.
newCreateVirtualNodeResponse :: Int -> VirtualNodeData -> CreateVirtualNodeResponse

-- | <i>See:</i> <a>newCreateGatewayRoute</a> smart constructor.
data CreateGatewayRoute
CreateGatewayRoute' :: Maybe Text -> Maybe Text -> Maybe [TagRef] -> Text -> Text -> GatewayRouteSpec -> Text -> CreateGatewayRoute

-- | Create a value of <a>CreateGatewayRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateGatewayRoute'</a>,
--   <a>createGatewayRoute_clientToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   Up to 36 letters, numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:meshOwner:CreateGatewayRoute'</a>,
--   <a>createGatewayRoute_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then the
--   account that you specify must share the mesh with your account before
--   you can create the resource in the service mesh. For more information
--   about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:tags:CreateGatewayRoute'</a>, <a>createGatewayRoute_tags</a> -
--   Optional metadata that you can apply to the gateway route to assist
--   with categorization and organization. Each tag consists of a key and
--   an optional value, both of which you define. Tag keys can have a
--   maximum character length of 128 characters, and tag values can have a
--   maximum length of 256 characters.
--   
--   <a>$sel:gatewayRouteName:CreateGatewayRoute'</a>,
--   <a>createGatewayRoute_gatewayRouteName</a> - The name to use for the
--   gateway route.
--   
--   <a>$sel:meshName:CreateGatewayRoute'</a>,
--   <a>createGatewayRoute_meshName</a> - The name of the service mesh to
--   create the gateway route in.
--   
--   <a>$sel:spec:CreateGatewayRoute'</a>, <a>createGatewayRoute_spec</a> -
--   The gateway route specification to apply.
--   
--   <a>$sel:virtualGatewayName:CreateGatewayRoute'</a>,
--   <a>createGatewayRoute_virtualGatewayName</a> - The name of the virtual
--   gateway to associate the gateway route with. If the virtual gateway is
--   in a shared mesh, then you must be the owner of the virtual gateway
--   resource.
newCreateGatewayRoute :: Text -> Text -> GatewayRouteSpec -> Text -> CreateGatewayRoute

-- | <i>See:</i> <a>newCreateGatewayRouteResponse</a> smart constructor.
data CreateGatewayRouteResponse
CreateGatewayRouteResponse' :: Int -> GatewayRouteData -> CreateGatewayRouteResponse

-- | Create a value of <a>CreateGatewayRouteResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateGatewayRouteResponse'</a>,
--   <a>createGatewayRouteResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:gatewayRoute:CreateGatewayRouteResponse'</a>,
--   <a>createGatewayRouteResponse_gatewayRoute</a> - The full description
--   of your gateway route following the create call.
newCreateGatewayRouteResponse :: Int -> GatewayRouteData -> CreateGatewayRouteResponse

-- | <i>See:</i> <a>newUpdateGatewayRoute</a> smart constructor.
data UpdateGatewayRoute
UpdateGatewayRoute' :: Maybe Text -> Maybe Text -> Text -> Text -> GatewayRouteSpec -> Text -> UpdateGatewayRoute

-- | Create a value of <a>UpdateGatewayRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateGatewayRoute'</a>,
--   <a>updateGatewayRoute_clientToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   Up to 36 letters, numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:meshOwner:UpdateGatewayRoute'</a>,
--   <a>updateGatewayRoute_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:gatewayRouteName:UpdateGatewayRoute'</a>,
--   <a>updateGatewayRoute_gatewayRouteName</a> - The name of the gateway
--   route to update.
--   
--   <a>$sel:meshName:UpdateGatewayRoute'</a>,
--   <a>updateGatewayRoute_meshName</a> - The name of the service mesh that
--   the gateway route resides in.
--   
--   <a>$sel:spec:UpdateGatewayRoute'</a>, <a>updateGatewayRoute_spec</a> -
--   The new gateway route specification to apply. This overwrites the
--   existing data.
--   
--   <a>$sel:virtualGatewayName:UpdateGatewayRoute'</a>,
--   <a>updateGatewayRoute_virtualGatewayName</a> - The name of the virtual
--   gateway that the gateway route is associated with.
newUpdateGatewayRoute :: Text -> Text -> GatewayRouteSpec -> Text -> UpdateGatewayRoute

-- | <i>See:</i> <a>newUpdateGatewayRouteResponse</a> smart constructor.
data UpdateGatewayRouteResponse
UpdateGatewayRouteResponse' :: Int -> GatewayRouteData -> UpdateGatewayRouteResponse

-- | Create a value of <a>UpdateGatewayRouteResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateGatewayRouteResponse'</a>,
--   <a>updateGatewayRouteResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:gatewayRoute:UpdateGatewayRouteResponse'</a>,
--   <a>updateGatewayRouteResponse_gatewayRoute</a> - A full description of
--   the gateway route that was updated.
newUpdateGatewayRouteResponse :: Int -> GatewayRouteData -> UpdateGatewayRouteResponse

-- | <i>See:</i> <a>newDeleteGatewayRoute</a> smart constructor.
data DeleteGatewayRoute
DeleteGatewayRoute' :: Maybe Text -> Text -> Text -> Text -> DeleteGatewayRoute

-- | Create a value of <a>DeleteGatewayRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DeleteGatewayRoute'</a>,
--   <a>deleteGatewayRoute_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:gatewayRouteName:DeleteGatewayRoute'</a>,
--   <a>deleteGatewayRoute_gatewayRouteName</a> - The name of the gateway
--   route to delete.
--   
--   <a>$sel:meshName:DeleteGatewayRoute'</a>,
--   <a>deleteGatewayRoute_meshName</a> - The name of the service mesh to
--   delete the gateway route from.
--   
--   <a>$sel:virtualGatewayName:DeleteGatewayRoute'</a>,
--   <a>deleteGatewayRoute_virtualGatewayName</a> - The name of the virtual
--   gateway to delete the route from.
newDeleteGatewayRoute :: Text -> Text -> Text -> DeleteGatewayRoute

-- | <i>See:</i> <a>newDeleteGatewayRouteResponse</a> smart constructor.
data DeleteGatewayRouteResponse
DeleteGatewayRouteResponse' :: Int -> GatewayRouteData -> DeleteGatewayRouteResponse

-- | Create a value of <a>DeleteGatewayRouteResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteGatewayRouteResponse'</a>,
--   <a>deleteGatewayRouteResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:gatewayRoute:DeleteGatewayRouteResponse'</a>,
--   <a>deleteGatewayRouteResponse_gatewayRoute</a> - The gateway route
--   that was deleted.
newDeleteGatewayRouteResponse :: Int -> GatewayRouteData -> DeleteGatewayRouteResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [TagRef] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource to add tags to.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   add to the resource. A tag is an array of key-value pairs. Tag keys
--   can have a maximum character length of 128 characters, and tag values
--   can have a maximum length of 256 characters.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newListVirtualGateways</a> smart constructor.
data ListVirtualGateways
ListVirtualGateways' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListVirtualGateways

-- | Create a value of <a>ListVirtualGateways</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:ListVirtualGateways'</a>,
--   <a>listVirtualGateways_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:nextToken:ListVirtualGateways'</a>,
--   <a>listVirtualGateways_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated <tt>ListVirtualGateways</tt>
--   request where <tt>limit</tt> was used and the results exceeded the
--   value of that parameter. Pagination continues from the end of the
--   previous results that returned the <tt>nextToken</tt> value.
--   
--   <a>$sel:limit:ListVirtualGateways'</a>,
--   <a>listVirtualGateways_limit</a> - The maximum number of results
--   returned by <tt>ListVirtualGateways</tt> in paginated output. When you
--   use this parameter, <tt>ListVirtualGateways</tt> returns only
--   <tt>limit</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListVirtualGateways</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If you don't use this parameter,
--   <tt>ListVirtualGateways</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
--   
--   <a>$sel:meshName:ListVirtualGateways'</a>,
--   <a>listVirtualGateways_meshName</a> - The name of the service mesh to
--   list virtual gateways in.
newListVirtualGateways :: Text -> ListVirtualGateways

-- | <i>See:</i> <a>newListVirtualGatewaysResponse</a> smart constructor.
data ListVirtualGatewaysResponse
ListVirtualGatewaysResponse' :: Maybe Text -> Int -> [VirtualGatewayRef] -> ListVirtualGatewaysResponse

-- | Create a value of <a>ListVirtualGatewaysResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVirtualGateways'</a>,
--   <a>listVirtualGatewaysResponse_nextToken</a> - The <tt>nextToken</tt>
--   value to include in a future <tt>ListVirtualGateways</tt> request.
--   When the results of a <tt>ListVirtualGateways</tt> request exceed
--   <tt>limit</tt>, you can use this value to retrieve the next page of
--   results. This value is <tt>null</tt> when there are no more results to
--   return.
--   
--   <a>$sel:httpStatus:ListVirtualGatewaysResponse'</a>,
--   <a>listVirtualGatewaysResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualGateways:ListVirtualGatewaysResponse'</a>,
--   <a>listVirtualGatewaysResponse_virtualGateways</a> - The list of
--   existing virtual gateways for the specified service mesh.
newListVirtualGatewaysResponse :: Int -> ListVirtualGatewaysResponse

-- | <i>See:</i> <a>newListVirtualRouters</a> smart constructor.
data ListVirtualRouters
ListVirtualRouters' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListVirtualRouters

-- | Create a value of <a>ListVirtualRouters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:ListVirtualRouters'</a>,
--   <a>listVirtualRouters_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:nextToken:ListVirtualRouters'</a>,
--   <a>listVirtualRouters_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated <tt>ListVirtualRouters</tt> request
--   where <tt>limit</tt> was used and the results exceeded the value of
--   that parameter. Pagination continues from the end of the previous
--   results that returned the <tt>nextToken</tt> value.
--   
--   <a>$sel:limit:ListVirtualRouters'</a>, <a>listVirtualRouters_limit</a>
--   - The maximum number of results returned by
--   <tt>ListVirtualRouters</tt> in paginated output. When you use this
--   parameter, <tt>ListVirtualRouters</tt> returns only <tt>limit</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. You can see the remaining results of the initial request by
--   sending another <tt>ListVirtualRouters</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListVirtualRouters</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
--   
--   <a>$sel:meshName:ListVirtualRouters'</a>,
--   <a>listVirtualRouters_meshName</a> - The name of the service mesh to
--   list virtual routers in.
newListVirtualRouters :: Text -> ListVirtualRouters

-- | <i>See:</i> <a>newListVirtualRoutersResponse</a> smart constructor.
data ListVirtualRoutersResponse
ListVirtualRoutersResponse' :: Maybe Text -> Int -> [VirtualRouterRef] -> ListVirtualRoutersResponse

-- | Create a value of <a>ListVirtualRoutersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVirtualRouters'</a>,
--   <a>listVirtualRoutersResponse_nextToken</a> - The <tt>nextToken</tt>
--   value to include in a future <tt>ListVirtualRouters</tt> request. When
--   the results of a <tt>ListVirtualRouters</tt> request exceed
--   <tt>limit</tt>, you can use this value to retrieve the next page of
--   results. This value is <tt>null</tt> when there are no more results to
--   return.
--   
--   <a>$sel:httpStatus:ListVirtualRoutersResponse'</a>,
--   <a>listVirtualRoutersResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:virtualRouters:ListVirtualRoutersResponse'</a>,
--   <a>listVirtualRoutersResponse_virtualRouters</a> - The list of
--   existing virtual routers for the specified service mesh.
newListVirtualRoutersResponse :: Int -> ListVirtualRoutersResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource to delete tags from.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of the tags to be removed.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newDescribeMesh</a> smart constructor.
data DescribeMesh
DescribeMesh' :: Maybe Text -> Text -> DescribeMesh

-- | Create a value of <a>DescribeMesh</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshOwner:DescribeMesh'</a>, <a>describeMesh_meshOwner</a> -
--   The AWS IAM account ID of the service mesh owner. If the account ID is
--   not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
--   
--   <a>$sel:meshName:DescribeMesh'</a>, <a>describeMesh_meshName</a> - The
--   name of the service mesh to describe.
newDescribeMesh :: Text -> DescribeMesh

-- | <i>See:</i> <a>newDescribeMeshResponse</a> smart constructor.
data DescribeMeshResponse
DescribeMeshResponse' :: Int -> MeshData -> DescribeMeshResponse

-- | Create a value of <a>DescribeMeshResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeMeshResponse'</a>,
--   <a>describeMeshResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:mesh:DescribeMeshResponse'</a>,
--   <a>describeMeshResponse_mesh</a> - The full description of your
--   service mesh.
newDescribeMeshResponse :: Int -> MeshData -> DescribeMeshResponse
newtype DefaultGatewayRouteRewrite
DefaultGatewayRouteRewrite' :: Text -> DefaultGatewayRouteRewrite
[fromDefaultGatewayRouteRewrite] :: DefaultGatewayRouteRewrite -> Text
pattern DefaultGatewayRouteRewrite_DISABLED :: DefaultGatewayRouteRewrite
pattern DefaultGatewayRouteRewrite_ENABLED :: DefaultGatewayRouteRewrite
newtype DnsResponseType
DnsResponseType' :: Text -> DnsResponseType
[fromDnsResponseType] :: DnsResponseType -> Text
pattern DnsResponseType_ENDPOINTS :: DnsResponseType
pattern DnsResponseType_LOADBALANCER :: DnsResponseType
newtype DurationUnit
DurationUnit' :: Text -> DurationUnit
[fromDurationUnit] :: DurationUnit -> Text
pattern DurationUnit_Ms :: DurationUnit
pattern DurationUnit_S :: DurationUnit
newtype EgressFilterType
EgressFilterType' :: Text -> EgressFilterType
[fromEgressFilterType] :: EgressFilterType -> Text
pattern EgressFilterType_ALLOW_ALL :: EgressFilterType
pattern EgressFilterType_DROP_ALL :: EgressFilterType
newtype GatewayRouteStatusCode
GatewayRouteStatusCode' :: Text -> GatewayRouteStatusCode
[fromGatewayRouteStatusCode] :: GatewayRouteStatusCode -> Text
pattern GatewayRouteStatusCode_ACTIVE :: GatewayRouteStatusCode
pattern GatewayRouteStatusCode_DELETED :: GatewayRouteStatusCode
pattern GatewayRouteStatusCode_INACTIVE :: GatewayRouteStatusCode
newtype GrpcRetryPolicyEvent
GrpcRetryPolicyEvent' :: Text -> GrpcRetryPolicyEvent
[fromGrpcRetryPolicyEvent] :: GrpcRetryPolicyEvent -> Text
pattern GrpcRetryPolicyEvent_Cancelled :: GrpcRetryPolicyEvent
pattern GrpcRetryPolicyEvent_Deadline_exceeded :: GrpcRetryPolicyEvent
pattern GrpcRetryPolicyEvent_Internal :: GrpcRetryPolicyEvent
pattern GrpcRetryPolicyEvent_Resource_exhausted :: GrpcRetryPolicyEvent
pattern GrpcRetryPolicyEvent_Unavailable :: GrpcRetryPolicyEvent
newtype HttpMethod
HttpMethod' :: Text -> HttpMethod
[fromHttpMethod] :: HttpMethod -> Text
pattern HttpMethod_CONNECT :: HttpMethod
pattern HttpMethod_DELETE :: HttpMethod
pattern HttpMethod_GET :: HttpMethod
pattern HttpMethod_HEAD :: HttpMethod
pattern HttpMethod_OPTIONS :: HttpMethod
pattern HttpMethod_PATCH :: HttpMethod
pattern HttpMethod_POST :: HttpMethod
pattern HttpMethod_PUT :: HttpMethod
pattern HttpMethod_TRACE :: HttpMethod
newtype HttpScheme
HttpScheme' :: Text -> HttpScheme
[fromHttpScheme] :: HttpScheme -> Text
pattern HttpScheme_Http :: HttpScheme
pattern HttpScheme_Https :: HttpScheme
newtype ListenerTlsMode
ListenerTlsMode' :: Text -> ListenerTlsMode
[fromListenerTlsMode] :: ListenerTlsMode -> Text
pattern ListenerTlsMode_DISABLED :: ListenerTlsMode
pattern ListenerTlsMode_PERMISSIVE :: ListenerTlsMode
pattern ListenerTlsMode_STRICT :: ListenerTlsMode
newtype MeshStatusCode
MeshStatusCode' :: Text -> MeshStatusCode
[fromMeshStatusCode] :: MeshStatusCode -> Text
pattern MeshStatusCode_ACTIVE :: MeshStatusCode
pattern MeshStatusCode_DELETED :: MeshStatusCode
pattern MeshStatusCode_INACTIVE :: MeshStatusCode
newtype PortProtocol
PortProtocol' :: Text -> PortProtocol
[fromPortProtocol] :: PortProtocol -> Text
pattern PortProtocol_Grpc :: PortProtocol
pattern PortProtocol_Http :: PortProtocol
pattern PortProtocol_Http2 :: PortProtocol
pattern PortProtocol_Tcp :: PortProtocol
newtype RouteStatusCode
RouteStatusCode' :: Text -> RouteStatusCode
[fromRouteStatusCode] :: RouteStatusCode -> Text
pattern RouteStatusCode_ACTIVE :: RouteStatusCode
pattern RouteStatusCode_DELETED :: RouteStatusCode
pattern RouteStatusCode_INACTIVE :: RouteStatusCode
newtype TcpRetryPolicyEvent
TcpRetryPolicyEvent' :: Text -> TcpRetryPolicyEvent
[fromTcpRetryPolicyEvent] :: TcpRetryPolicyEvent -> Text
pattern TcpRetryPolicyEvent_Connection_error :: TcpRetryPolicyEvent
newtype VirtualGatewayListenerTlsMode
VirtualGatewayListenerTlsMode' :: Text -> VirtualGatewayListenerTlsMode
[fromVirtualGatewayListenerTlsMode] :: VirtualGatewayListenerTlsMode -> Text
pattern VirtualGatewayListenerTlsMode_DISABLED :: VirtualGatewayListenerTlsMode
pattern VirtualGatewayListenerTlsMode_PERMISSIVE :: VirtualGatewayListenerTlsMode
pattern VirtualGatewayListenerTlsMode_STRICT :: VirtualGatewayListenerTlsMode
newtype VirtualGatewayPortProtocol
VirtualGatewayPortProtocol' :: Text -> VirtualGatewayPortProtocol
[fromVirtualGatewayPortProtocol] :: VirtualGatewayPortProtocol -> Text
pattern VirtualGatewayPortProtocol_Grpc :: VirtualGatewayPortProtocol
pattern VirtualGatewayPortProtocol_Http :: VirtualGatewayPortProtocol
pattern VirtualGatewayPortProtocol_Http2 :: VirtualGatewayPortProtocol
newtype VirtualGatewayStatusCode
VirtualGatewayStatusCode' :: Text -> VirtualGatewayStatusCode
[fromVirtualGatewayStatusCode] :: VirtualGatewayStatusCode -> Text
pattern VirtualGatewayStatusCode_ACTIVE :: VirtualGatewayStatusCode
pattern VirtualGatewayStatusCode_DELETED :: VirtualGatewayStatusCode
pattern VirtualGatewayStatusCode_INACTIVE :: VirtualGatewayStatusCode
newtype VirtualNodeStatusCode
VirtualNodeStatusCode' :: Text -> VirtualNodeStatusCode
[fromVirtualNodeStatusCode] :: VirtualNodeStatusCode -> Text
pattern VirtualNodeStatusCode_ACTIVE :: VirtualNodeStatusCode
pattern VirtualNodeStatusCode_DELETED :: VirtualNodeStatusCode
pattern VirtualNodeStatusCode_INACTIVE :: VirtualNodeStatusCode
newtype VirtualRouterStatusCode
VirtualRouterStatusCode' :: Text -> VirtualRouterStatusCode
[fromVirtualRouterStatusCode] :: VirtualRouterStatusCode -> Text
pattern VirtualRouterStatusCode_ACTIVE :: VirtualRouterStatusCode
pattern VirtualRouterStatusCode_DELETED :: VirtualRouterStatusCode
pattern VirtualRouterStatusCode_INACTIVE :: VirtualRouterStatusCode
newtype VirtualServiceStatusCode
VirtualServiceStatusCode' :: Text -> VirtualServiceStatusCode
[fromVirtualServiceStatusCode] :: VirtualServiceStatusCode -> Text
pattern VirtualServiceStatusCode_ACTIVE :: VirtualServiceStatusCode
pattern VirtualServiceStatusCode_DELETED :: VirtualServiceStatusCode
pattern VirtualServiceStatusCode_INACTIVE :: VirtualServiceStatusCode

-- | An object that represents the access logging information for a virtual
--   node.
--   
--   <i>See:</i> <a>newAccessLog</a> smart constructor.
data AccessLog
AccessLog' :: Maybe FileAccessLog -> AccessLog

-- | Create a value of <a>AccessLog</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:file:AccessLog'</a>, <a>accessLog_file</a> - The file object
--   to send virtual node access logs to.
newAccessLog :: AccessLog

-- | An object that represents the Cloud Map attribute information for your
--   virtual node.
--   
--   AWS Cloud Map is not available in the eu-south-1 Region.
--   
--   <i>See:</i> <a>newAwsCloudMapInstanceAttribute</a> smart constructor.
data AwsCloudMapInstanceAttribute
AwsCloudMapInstanceAttribute' :: Text -> Text -> AwsCloudMapInstanceAttribute

-- | Create a value of <a>AwsCloudMapInstanceAttribute</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:AwsCloudMapInstanceAttribute'</a>,
--   <a>awsCloudMapInstanceAttribute_key</a> - The name of an Cloud Map
--   service instance attribute key. Any Cloud Map service instance that
--   contains the specified key and value is returned.
--   
--   <a>$sel:value:AwsCloudMapInstanceAttribute'</a>,
--   <a>awsCloudMapInstanceAttribute_value</a> - The value of an Cloud Map
--   service instance attribute key. Any Cloud Map service instance that
--   contains the specified key and value is returned.
newAwsCloudMapInstanceAttribute :: Text -> Text -> AwsCloudMapInstanceAttribute

-- | An object that represents the Cloud Map service discovery information
--   for your virtual node.
--   
--   Cloud Map is not available in the eu-south-1 Region.
--   
--   <i>See:</i> <a>newAwsCloudMapServiceDiscovery</a> smart constructor.
data AwsCloudMapServiceDiscovery
AwsCloudMapServiceDiscovery' :: Maybe [AwsCloudMapInstanceAttribute] -> Text -> Text -> AwsCloudMapServiceDiscovery

-- | Create a value of <a>AwsCloudMapServiceDiscovery</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:AwsCloudMapServiceDiscovery'</a>,
--   <a>awsCloudMapServiceDiscovery_attributes</a> - A string map that
--   contains attributes with values that you can use to filter instances
--   by any custom attribute that you specified when you registered the
--   instance. Only instances that match all of the specified key/value
--   pairs will be returned.
--   
--   <a>$sel:namespaceName:AwsCloudMapServiceDiscovery'</a>,
--   <a>awsCloudMapServiceDiscovery_namespaceName</a> - The name of the
--   Cloud Map namespace to use.
--   
--   <a>$sel:serviceName:AwsCloudMapServiceDiscovery'</a>,
--   <a>awsCloudMapServiceDiscovery_serviceName</a> - The name of the Cloud
--   Map service to use.
newAwsCloudMapServiceDiscovery :: Text -> Text -> AwsCloudMapServiceDiscovery

-- | An object that represents the backends that a virtual node is expected
--   to send outbound traffic to.
--   
--   <i>See:</i> <a>newBackend</a> smart constructor.
data Backend
Backend' :: Maybe VirtualServiceBackend -> Backend

-- | Create a value of <a>Backend</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualService:Backend'</a>, <a>backend_virtualService</a> -
--   Specifies a virtual service to use as a backend.
newBackend :: Backend

-- | An object that represents the default properties for a backend.
--   
--   <i>See:</i> <a>newBackendDefaults</a> smart constructor.
data BackendDefaults
BackendDefaults' :: Maybe ClientPolicy -> BackendDefaults

-- | Create a value of <a>BackendDefaults</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientPolicy:BackendDefaults'</a>,
--   <a>backendDefaults_clientPolicy</a> - A reference to an object that
--   represents a client policy.
newBackendDefaults :: BackendDefaults

-- | An object that represents a client policy.
--   
--   <i>See:</i> <a>newClientPolicy</a> smart constructor.
data ClientPolicy
ClientPolicy' :: Maybe ClientPolicyTls -> ClientPolicy

-- | Create a value of <a>ClientPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tls:ClientPolicy'</a>, <a>clientPolicy_tls</a> - A reference
--   to an object that represents a Transport Layer Security (TLS) client
--   policy.
newClientPolicy :: ClientPolicy

-- | A reference to an object that represents a Transport Layer Security
--   (TLS) client policy.
--   
--   <i>See:</i> <a>newClientPolicyTls</a> smart constructor.
data ClientPolicyTls
ClientPolicyTls' :: Maybe [Natural] -> Maybe ClientTlsCertificate -> Maybe Bool -> TlsValidationContext -> ClientPolicyTls

-- | Create a value of <a>ClientPolicyTls</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ports:ClientPolicyTls'</a>, <a>clientPolicyTls_ports</a> - One
--   or more ports that the policy is enforced for.
--   
--   <a>$sel:certificate:ClientPolicyTls'</a>,
--   <a>clientPolicyTls_certificate</a> - A reference to an object that
--   represents a client's TLS certificate.
--   
--   <a>$sel:enforce:ClientPolicyTls'</a>, <a>clientPolicyTls_enforce</a> -
--   Whether the policy is enforced. The default is <tt>True</tt>, if a
--   value isn't specified.
--   
--   <a>$sel:validation:ClientPolicyTls'</a>,
--   <a>clientPolicyTls_validation</a> - A reference to an object that
--   represents a TLS validation context.
newClientPolicyTls :: TlsValidationContext -> ClientPolicyTls

-- | An object that represents the client's certificate.
--   
--   <i>See:</i> <a>newClientTlsCertificate</a> smart constructor.
data ClientTlsCertificate
ClientTlsCertificate' :: Maybe ListenerTlsSdsCertificate -> Maybe ListenerTlsFileCertificate -> ClientTlsCertificate

-- | Create a value of <a>ClientTlsCertificate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sds:ClientTlsCertificate'</a>, <a>clientTlsCertificate_sds</a>
--   - A reference to an object that represents a client's TLS Secret
--   Discovery Service certificate.
--   
--   <a>$sel:file:ClientTlsCertificate'</a>,
--   <a>clientTlsCertificate_file</a> - An object that represents a local
--   file certificate. The certificate must meet specific requirements and
--   you must have proxy authorization enabled. For more information, see
--   <a>Transport Layer Security (TLS)</a>.
newClientTlsCertificate :: ClientTlsCertificate

-- | An object that represents the DNS service discovery information for
--   your virtual node.
--   
--   <i>See:</i> <a>newDnsServiceDiscovery</a> smart constructor.
data DnsServiceDiscovery
DnsServiceDiscovery' :: Maybe DnsResponseType -> Text -> DnsServiceDiscovery

-- | Create a value of <a>DnsServiceDiscovery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseType:DnsServiceDiscovery'</a>,
--   <a>dnsServiceDiscovery_responseType</a> - Specifies the DNS response
--   type for the virtual node.
--   
--   <a>$sel:hostname:DnsServiceDiscovery'</a>,
--   <a>dnsServiceDiscovery_hostname</a> - Specifies the DNS service
--   discovery hostname for the virtual node.
newDnsServiceDiscovery :: Text -> DnsServiceDiscovery

-- | An object that represents a duration of time.
--   
--   <i>See:</i> <a>newDuration</a> smart constructor.
data Duration
Duration' :: Maybe Natural -> Maybe DurationUnit -> Duration

-- | Create a value of <a>Duration</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Duration'</a>, <a>duration_value</a> - A number of time
--   units.
--   
--   <a>$sel:unit:Duration'</a>, <a>duration_unit</a> - A unit of time.
newDuration :: Duration

-- | An object that represents the egress filter rules for a service mesh.
--   
--   <i>See:</i> <a>newEgressFilter</a> smart constructor.
data EgressFilter
EgressFilter' :: EgressFilterType -> EgressFilter

-- | Create a value of <a>EgressFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':EgressFilter'</a>, <a>egressFilter_type</a> - The egress
--   filter type. By default, the type is <tt>DROP_ALL</tt>, which allows
--   egress only from virtual nodes to other defined resources in the
--   service mesh (and any traffic to <tt>*.amazonaws.com</tt> for Amazon
--   Web Services API calls). You can set the egress filter type to
--   <tt>ALLOW_ALL</tt> to allow egress to any endpoint inside or outside
--   of the service mesh.
newEgressFilter :: EgressFilterType -> EgressFilter

-- | An object that represents an access log file.
--   
--   <i>See:</i> <a>newFileAccessLog</a> smart constructor.
data FileAccessLog
FileAccessLog' :: Text -> FileAccessLog

-- | Create a value of <a>FileAccessLog</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:FileAccessLog'</a>, <a>fileAccessLog_path</a> - The file
--   path to write access logs to. You can use <tt>/dev/stdout</tt> to send
--   access logs to standard out and configure your Envoy container to use
--   a log driver, such as <tt>awslogs</tt>, to export the access logs to a
--   log storage service such as Amazon CloudWatch Logs. You can also
--   specify a path in the Envoy container's file system to write the files
--   to disk.
--   
--   The Envoy process must have write permissions to the path that you
--   specify here. Otherwise, Envoy fails to bootstrap properly.
newFileAccessLog :: Text -> FileAccessLog

-- | An object that represents a gateway route returned by a describe
--   operation.
--   
--   <i>See:</i> <a>newGatewayRouteData</a> smart constructor.
data GatewayRouteData
GatewayRouteData' :: Text -> Text -> ResourceMetadata -> GatewayRouteSpec -> GatewayRouteStatus -> Text -> GatewayRouteData

-- | Create a value of <a>GatewayRouteData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gatewayRouteName:GatewayRouteData'</a>,
--   <a>gatewayRouteData_gatewayRouteName</a> - The name of the gateway
--   route.
--   
--   <a>$sel:meshName:GatewayRouteData'</a>,
--   <a>gatewayRouteData_meshName</a> - The name of the service mesh that
--   the resource resides in.
--   
--   <a>$sel:metadata:GatewayRouteData'</a>,
--   <a>gatewayRouteData_metadata</a> - Undocumented member.
--   
--   <a>$sel:spec:GatewayRouteData'</a>, <a>gatewayRouteData_spec</a> - The
--   specifications of the gateway route.
--   
--   <a>$sel:status:GatewayRouteData'</a>, <a>gatewayRouteData_status</a> -
--   The status of the gateway route.
--   
--   <a>$sel:virtualGatewayName:GatewayRouteData'</a>,
--   <a>gatewayRouteData_virtualGatewayName</a> - The virtual gateway that
--   the gateway route is associated with.
newGatewayRouteData :: Text -> Text -> ResourceMetadata -> GatewayRouteSpec -> GatewayRouteStatus -> Text -> GatewayRouteData

-- | An object representing the gateway route host name to match.
--   
--   <i>See:</i> <a>newGatewayRouteHostnameMatch</a> smart constructor.
data GatewayRouteHostnameMatch
GatewayRouteHostnameMatch' :: Maybe Text -> Maybe Text -> GatewayRouteHostnameMatch

-- | Create a value of <a>GatewayRouteHostnameMatch</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suffix:GatewayRouteHostnameMatch'</a>,
--   <a>gatewayRouteHostnameMatch_suffix</a> - The specified ending
--   characters of the host name to match on.
--   
--   <a>$sel:exact:GatewayRouteHostnameMatch'</a>,
--   <a>gatewayRouteHostnameMatch_exact</a> - The exact host name to match
--   on.
newGatewayRouteHostnameMatch :: GatewayRouteHostnameMatch

-- | An object representing the gateway route host name to rewrite.
--   
--   <i>See:</i> <a>newGatewayRouteHostnameRewrite</a> smart constructor.
data GatewayRouteHostnameRewrite
GatewayRouteHostnameRewrite' :: Maybe DefaultGatewayRouteRewrite -> GatewayRouteHostnameRewrite

-- | Create a value of <a>GatewayRouteHostnameRewrite</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultTargetHostname:GatewayRouteHostnameRewrite'</a>,
--   <a>gatewayRouteHostnameRewrite_defaultTargetHostname</a> - The default
--   target host name to write to.
newGatewayRouteHostnameRewrite :: GatewayRouteHostnameRewrite

-- | An object that represents a gateway route returned by a list
--   operation.
--   
--   <i>See:</i> <a>newGatewayRouteRef</a> smart constructor.
data GatewayRouteRef
GatewayRouteRef' :: Text -> POSIX -> Text -> POSIX -> Text -> Text -> Text -> Integer -> Text -> GatewayRouteRef

-- | Create a value of <a>GatewayRouteRef</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GatewayRouteRef'</a>, <a>gatewayRouteRef_arn</a> - The
--   full Amazon Resource Name (ARN) for the gateway route.
--   
--   <a>$sel:createdAt:GatewayRouteRef'</a>,
--   <a>gatewayRouteRef_createdAt</a> - The Unix epoch timestamp in seconds
--   for when the resource was created.
--   
--   <a>$sel:gatewayRouteName:GatewayRouteRef'</a>,
--   <a>gatewayRouteRef_gatewayRouteName</a> - The name of the gateway
--   route.
--   
--   <a>$sel:lastUpdatedAt:GatewayRouteRef'</a>,
--   <a>gatewayRouteRef_lastUpdatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was last updated.
--   
--   <a>$sel:meshName:GatewayRouteRef'</a>, <a>gatewayRouteRef_meshName</a>
--   - The name of the service mesh that the resource resides in.
--   
--   <a>$sel:meshOwner:GatewayRouteRef'</a>,
--   <a>gatewayRouteRef_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:GatewayRouteRef'</a>,
--   <a>gatewayRouteRef_resourceOwner</a> - The AWS IAM account ID of the
--   resource owner. If the account ID is not your own, then it's the ID of
--   the mesh owner or of another account that the mesh is shared with. For
--   more information about mesh sharing, see <a>Working with shared
--   meshes</a>.
--   
--   <a>$sel:version:GatewayRouteRef'</a>, <a>gatewayRouteRef_version</a> -
--   The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
--   
--   <a>$sel:virtualGatewayName:GatewayRouteRef'</a>,
--   <a>gatewayRouteRef_virtualGatewayName</a> - The virtual gateway that
--   the gateway route is associated with.
newGatewayRouteRef :: Text -> UTCTime -> Text -> UTCTime -> Text -> Text -> Text -> Integer -> Text -> GatewayRouteRef

-- | An object that represents a gateway route specification. Specify one
--   gateway route type.
--   
--   <i>See:</i> <a>newGatewayRouteSpec</a> smart constructor.
data GatewayRouteSpec
GatewayRouteSpec' :: Maybe Natural -> Maybe HttpGatewayRoute -> Maybe GrpcGatewayRoute -> Maybe HttpGatewayRoute -> GatewayRouteSpec

-- | Create a value of <a>GatewayRouteSpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priority:GatewayRouteSpec'</a>,
--   <a>gatewayRouteSpec_priority</a> - The ordering of the gateway routes
--   spec.
--   
--   <a>$sel:http2Route:GatewayRouteSpec'</a>,
--   <a>gatewayRouteSpec_http2Route</a> - An object that represents the
--   specification of an HTTP/2 gateway route.
--   
--   <a>$sel:grpcRoute:GatewayRouteSpec'</a>,
--   <a>gatewayRouteSpec_grpcRoute</a> - An object that represents the
--   specification of a gRPC gateway route.
--   
--   <a>$sel:httpRoute:GatewayRouteSpec'</a>,
--   <a>gatewayRouteSpec_httpRoute</a> - An object that represents the
--   specification of an HTTP gateway route.
newGatewayRouteSpec :: GatewayRouteSpec

-- | An object that represents the current status of a gateway route.
--   
--   <i>See:</i> <a>newGatewayRouteStatus</a> smart constructor.
data GatewayRouteStatus
GatewayRouteStatus' :: GatewayRouteStatusCode -> GatewayRouteStatus

-- | Create a value of <a>GatewayRouteStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GatewayRouteStatus'</a>,
--   <a>gatewayRouteStatus_status</a> - The current status for the gateway
--   route.
newGatewayRouteStatus :: GatewayRouteStatusCode -> GatewayRouteStatus

-- | An object that represents a gateway route target.
--   
--   <i>See:</i> <a>newGatewayRouteTarget</a> smart constructor.
data GatewayRouteTarget
GatewayRouteTarget' :: GatewayRouteVirtualService -> GatewayRouteTarget

-- | Create a value of <a>GatewayRouteTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualService:GatewayRouteTarget'</a>,
--   <a>gatewayRouteTarget_virtualService</a> - An object that represents a
--   virtual service gateway route target.
newGatewayRouteTarget :: GatewayRouteVirtualService -> GatewayRouteTarget

-- | An object that represents the virtual service that traffic is routed
--   to.
--   
--   <i>See:</i> <a>newGatewayRouteVirtualService</a> smart constructor.
data GatewayRouteVirtualService
GatewayRouteVirtualService' :: Text -> GatewayRouteVirtualService

-- | Create a value of <a>GatewayRouteVirtualService</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualServiceName:GatewayRouteVirtualService'</a>,
--   <a>gatewayRouteVirtualService_virtualServiceName</a> - The name of the
--   virtual service that traffic is routed to.
newGatewayRouteVirtualService :: Text -> GatewayRouteVirtualService

-- | An object that represents a gRPC gateway route.
--   
--   <i>See:</i> <a>newGrpcGatewayRoute</a> smart constructor.
data GrpcGatewayRoute
GrpcGatewayRoute' :: GrpcGatewayRouteAction -> GrpcGatewayRouteMatch -> GrpcGatewayRoute

-- | Create a value of <a>GrpcGatewayRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:GrpcGatewayRoute'</a>, <a>grpcGatewayRoute_action</a> -
--   An object that represents the action to take if a match is determined.
--   
--   <a>$sel:match:GrpcGatewayRoute'</a>, <a>grpcGatewayRoute_match</a> -
--   An object that represents the criteria for determining a request
--   match.
newGrpcGatewayRoute :: GrpcGatewayRouteAction -> GrpcGatewayRouteMatch -> GrpcGatewayRoute

-- | An object that represents the action to take if a match is determined.
--   
--   <i>See:</i> <a>newGrpcGatewayRouteAction</a> smart constructor.
data GrpcGatewayRouteAction
GrpcGatewayRouteAction' :: Maybe GrpcGatewayRouteRewrite -> GatewayRouteTarget -> GrpcGatewayRouteAction

-- | Create a value of <a>GrpcGatewayRouteAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rewrite:GrpcGatewayRouteAction'</a>,
--   <a>grpcGatewayRouteAction_rewrite</a> - The gateway route action to
--   rewrite.
--   
--   <a>$sel:target:GrpcGatewayRouteAction'</a>,
--   <a>grpcGatewayRouteAction_target</a> - An object that represents the
--   target that traffic is routed to when a request matches the gateway
--   route.
newGrpcGatewayRouteAction :: GatewayRouteTarget -> GrpcGatewayRouteAction

-- | An object that represents the criteria for determining a request
--   match.
--   
--   <i>See:</i> <a>newGrpcGatewayRouteMatch</a> smart constructor.
data GrpcGatewayRouteMatch
GrpcGatewayRouteMatch' :: Maybe GatewayRouteHostnameMatch -> Maybe Text -> Maybe (NonEmpty GrpcGatewayRouteMetadata) -> GrpcGatewayRouteMatch

-- | Create a value of <a>GrpcGatewayRouteMatch</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostname:GrpcGatewayRouteMatch'</a>,
--   <a>grpcGatewayRouteMatch_hostname</a> - The gateway route host name to
--   be matched on.
--   
--   <a>$sel:serviceName:GrpcGatewayRouteMatch'</a>,
--   <a>grpcGatewayRouteMatch_serviceName</a> - The fully qualified domain
--   name for the service to match from the request.
--   
--   <a>$sel:metadata:GrpcGatewayRouteMatch'</a>,
--   <a>grpcGatewayRouteMatch_metadata</a> - The gateway route metadata to
--   be matched on.
newGrpcGatewayRouteMatch :: GrpcGatewayRouteMatch

-- | An object representing the metadata of the gateway route.
--   
--   <i>See:</i> <a>newGrpcGatewayRouteMetadata</a> smart constructor.
data GrpcGatewayRouteMetadata
GrpcGatewayRouteMetadata' :: Maybe Bool -> Maybe GrpcMetadataMatchMethod -> Text -> GrpcGatewayRouteMetadata

-- | Create a value of <a>GrpcGatewayRouteMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invert:GrpcGatewayRouteMetadata'</a>,
--   <a>grpcGatewayRouteMetadata_invert</a> - Specify <tt>True</tt> to
--   match anything except the match criteria. The default value is
--   <tt>False</tt>.
--   
--   <a>$sel:match:GrpcGatewayRouteMetadata'</a>,
--   <a>grpcGatewayRouteMetadata_match</a> - The criteria for determining a
--   metadata match.
--   
--   <a>$sel:name:GrpcGatewayRouteMetadata'</a>,
--   <a>grpcGatewayRouteMetadata_name</a> - A name for the gateway route
--   metadata.
newGrpcGatewayRouteMetadata :: Text -> GrpcGatewayRouteMetadata

-- | An object that represents the gateway route to rewrite.
--   
--   <i>See:</i> <a>newGrpcGatewayRouteRewrite</a> smart constructor.
data GrpcGatewayRouteRewrite
GrpcGatewayRouteRewrite' :: Maybe GatewayRouteHostnameRewrite -> GrpcGatewayRouteRewrite

-- | Create a value of <a>GrpcGatewayRouteRewrite</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostname:GrpcGatewayRouteRewrite'</a>,
--   <a>grpcGatewayRouteRewrite_hostname</a> - The host name of the gateway
--   route to rewrite.
newGrpcGatewayRouteRewrite :: GrpcGatewayRouteRewrite

-- | An object representing the method header to be matched.
--   
--   <i>See:</i> <a>newGrpcMetadataMatchMethod</a> smart constructor.
data GrpcMetadataMatchMethod
GrpcMetadataMatchMethod' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe MatchRange -> Maybe Text -> GrpcMetadataMatchMethod

-- | Create a value of <a>GrpcMetadataMatchMethod</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suffix:GrpcMetadataMatchMethod'</a>,
--   <a>grpcMetadataMatchMethod_suffix</a> - The specified ending
--   characters of the method header to match on.
--   
--   <a>$sel:regex:GrpcMetadataMatchMethod'</a>,
--   <a>grpcMetadataMatchMethod_regex</a> - The regex used to match the
--   method header.
--   
--   <a>$sel:prefix:GrpcMetadataMatchMethod'</a>,
--   <a>grpcMetadataMatchMethod_prefix</a> - The specified beginning
--   characters of the method header to be matched on.
--   
--   <a>$sel:range:GrpcMetadataMatchMethod'</a>,
--   <a>grpcMetadataMatchMethod_range</a> - Undocumented member.
--   
--   <a>$sel:exact:GrpcMetadataMatchMethod'</a>,
--   <a>grpcMetadataMatchMethod_exact</a> - The exact method header to be
--   matched on.
newGrpcMetadataMatchMethod :: GrpcMetadataMatchMethod

-- | An object that represents a retry policy. Specify at least one value
--   for at least one of the types of <tt>RetryEvents</tt>, a value for
--   <tt>maxRetries</tt>, and a value for <tt>perRetryTimeout</tt>. Both
--   <tt>server-error</tt> and <tt>gateway-error</tt> under
--   <tt>httpRetryEvents</tt> include the Envoy <tt>reset</tt> policy. For
--   more information on the <tt>reset</tt> policy, see the <a>Envoy
--   documentation</a>.
--   
--   <i>See:</i> <a>newGrpcRetryPolicy</a> smart constructor.
data GrpcRetryPolicy
GrpcRetryPolicy' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty GrpcRetryPolicyEvent) -> Maybe (NonEmpty TcpRetryPolicyEvent) -> Natural -> Duration -> GrpcRetryPolicy

-- | Create a value of <a>GrpcRetryPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpRetryEvents:GrpcRetryPolicy'</a>,
--   <a>grpcRetryPolicy_httpRetryEvents</a> - Specify at least one of the
--   following values.
--   
--   <ul>
--   <li><b>server-error</b> – HTTP status codes 500, 501, 502, 503, 504,
--   505, 506, 507, 508, 510, and 511</li>
--   <li><b>gateway-error</b> – HTTP status codes 502, 503, and 504</li>
--   <li><b>client-error</b> – HTTP status code 409</li>
--   <li><b>stream-error</b> – Retry on refused stream</li>
--   </ul>
--   
--   <a>$sel:grpcRetryEvents:GrpcRetryPolicy'</a>,
--   <a>grpcRetryPolicy_grpcRetryEvents</a> - Specify at least one of the
--   valid values.
--   
--   <a>$sel:tcpRetryEvents:GrpcRetryPolicy'</a>,
--   <a>grpcRetryPolicy_tcpRetryEvents</a> - Specify a valid value. The
--   event occurs before any processing of a request has started and is
--   encountered when the upstream is temporarily or permanently
--   unavailable.
--   
--   <a>$sel:maxRetries:GrpcRetryPolicy'</a>,
--   <a>grpcRetryPolicy_maxRetries</a> - The maximum number of retry
--   attempts.
--   
--   <a>$sel:perRetryTimeout:GrpcRetryPolicy'</a>,
--   <a>grpcRetryPolicy_perRetryTimeout</a> - The timeout for each retry
--   attempt.
newGrpcRetryPolicy :: Natural -> Duration -> GrpcRetryPolicy

-- | An object that represents a gRPC route type.
--   
--   <i>See:</i> <a>newGrpcRoute</a> smart constructor.
data GrpcRoute
GrpcRoute' :: Maybe GrpcRetryPolicy -> Maybe GrpcTimeout -> GrpcRouteAction -> GrpcRouteMatch -> GrpcRoute

-- | Create a value of <a>GrpcRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retryPolicy:GrpcRoute'</a>, <a>grpcRoute_retryPolicy</a> - An
--   object that represents a retry policy.
--   
--   <a>$sel:timeout:GrpcRoute'</a>, <a>grpcRoute_timeout</a> - An object
--   that represents types of timeouts.
--   
--   <a>$sel:action:GrpcRoute'</a>, <a>grpcRoute_action</a> - An object
--   that represents the action to take if a match is determined.
--   
--   <a>$sel:match:GrpcRoute'</a>, <a>grpcRoute_match</a> - An object that
--   represents the criteria for determining a request match.
newGrpcRoute :: GrpcRouteAction -> GrpcRouteMatch -> GrpcRoute

-- | An object that represents the action to take if a match is determined.
--   
--   <i>See:</i> <a>newGrpcRouteAction</a> smart constructor.
data GrpcRouteAction
GrpcRouteAction' :: NonEmpty WeightedTarget -> GrpcRouteAction

-- | Create a value of <a>GrpcRouteAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:weightedTargets:GrpcRouteAction'</a>,
--   <a>grpcRouteAction_weightedTargets</a> - An object that represents the
--   targets that traffic is routed to when a request matches the route.
newGrpcRouteAction :: NonEmpty WeightedTarget -> GrpcRouteAction

-- | An object that represents the criteria for determining a request
--   match.
--   
--   <i>See:</i> <a>newGrpcRouteMatch</a> smart constructor.
data GrpcRouteMatch
GrpcRouteMatch' :: Maybe Text -> Maybe Text -> Maybe (NonEmpty GrpcRouteMetadata) -> GrpcRouteMatch

-- | Create a value of <a>GrpcRouteMatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:methodName:GrpcRouteMatch'</a>,
--   <a>grpcRouteMatch_methodName</a> - The method name to match from the
--   request. If you specify a name, you must also specify a
--   <tt>serviceName</tt>.
--   
--   <a>$sel:serviceName:GrpcRouteMatch'</a>,
--   <a>grpcRouteMatch_serviceName</a> - The fully qualified domain name
--   for the service to match from the request.
--   
--   <a>$sel:metadata:GrpcRouteMatch'</a>, <a>grpcRouteMatch_metadata</a> -
--   An object that represents the data to match from the request.
newGrpcRouteMatch :: GrpcRouteMatch

-- | An object that represents the match metadata for the route.
--   
--   <i>See:</i> <a>newGrpcRouteMetadata</a> smart constructor.
data GrpcRouteMetadata
GrpcRouteMetadata' :: Maybe Bool -> Maybe GrpcRouteMetadataMatchMethod -> Text -> GrpcRouteMetadata

-- | Create a value of <a>GrpcRouteMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invert:GrpcRouteMetadata'</a>, <a>grpcRouteMetadata_invert</a>
--   - Specify <tt>True</tt> to match anything except the match criteria.
--   The default value is <tt>False</tt>.
--   
--   <a>$sel:match:GrpcRouteMetadata'</a>, <a>grpcRouteMetadata_match</a> -
--   An object that represents the data to match from the request.
--   
--   <a>$sel:name:GrpcRouteMetadata'</a>, <a>grpcRouteMetadata_name</a> -
--   The name of the route.
newGrpcRouteMetadata :: Text -> GrpcRouteMetadata

-- | An object that represents the match method. Specify one of the match
--   values.
--   
--   <i>See:</i> <a>newGrpcRouteMetadataMatchMethod</a> smart constructor.
data GrpcRouteMetadataMatchMethod
GrpcRouteMetadataMatchMethod' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe MatchRange -> Maybe Text -> GrpcRouteMetadataMatchMethod

-- | Create a value of <a>GrpcRouteMetadataMatchMethod</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suffix:GrpcRouteMetadataMatchMethod'</a>,
--   <a>grpcRouteMetadataMatchMethod_suffix</a> - The value sent by the
--   client must end with the specified characters.
--   
--   <a>$sel:regex:GrpcRouteMetadataMatchMethod'</a>,
--   <a>grpcRouteMetadataMatchMethod_regex</a> - The value sent by the
--   client must include the specified characters.
--   
--   <a>$sel:prefix:GrpcRouteMetadataMatchMethod'</a>,
--   <a>grpcRouteMetadataMatchMethod_prefix</a> - The value sent by the
--   client must begin with the specified characters.
--   
--   <a>$sel:range:GrpcRouteMetadataMatchMethod'</a>,
--   <a>grpcRouteMetadataMatchMethod_range</a> - An object that represents
--   the range of values to match on.
--   
--   <a>$sel:exact:GrpcRouteMetadataMatchMethod'</a>,
--   <a>grpcRouteMetadataMatchMethod_exact</a> - The value sent by the
--   client must match the specified value exactly.
newGrpcRouteMetadataMatchMethod :: GrpcRouteMetadataMatchMethod

-- | An object that represents types of timeouts.
--   
--   <i>See:</i> <a>newGrpcTimeout</a> smart constructor.
data GrpcTimeout
GrpcTimeout' :: Maybe Duration -> Maybe Duration -> GrpcTimeout

-- | Create a value of <a>GrpcTimeout</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idle:GrpcTimeout'</a>, <a>grpcTimeout_idle</a> - An object
--   that represents an idle timeout. An idle timeout bounds the amount of
--   time that a connection may be idle. The default value is none.
--   
--   <a>$sel:perRequest:GrpcTimeout'</a>, <a>grpcTimeout_perRequest</a> -
--   An object that represents a per request timeout. The default value is
--   15 seconds. If you set a higher timeout, then make sure that the
--   higher value is set for each App Mesh resource in a conversation. For
--   example, if a virtual node backend uses a virtual router provider to
--   route to another virtual node, then the timeout should be greater than
--   15 seconds for the source and destination virtual node and the route.
newGrpcTimeout :: GrpcTimeout

-- | An object that represents the method and value to match with the
--   header value sent in a request. Specify one match method.
--   
--   <i>See:</i> <a>newHeaderMatchMethod</a> smart constructor.
data HeaderMatchMethod
HeaderMatchMethod' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe MatchRange -> Maybe Text -> HeaderMatchMethod

-- | Create a value of <a>HeaderMatchMethod</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suffix:HeaderMatchMethod'</a>, <a>headerMatchMethod_suffix</a>
--   - The value sent by the client must end with the specified characters.
--   
--   <a>$sel:regex:HeaderMatchMethod'</a>, <a>headerMatchMethod_regex</a> -
--   The value sent by the client must include the specified characters.
--   
--   <a>$sel:prefix:HeaderMatchMethod'</a>, <a>headerMatchMethod_prefix</a>
--   - The value sent by the client must begin with the specified
--   characters.
--   
--   <a>$sel:range:HeaderMatchMethod'</a>, <a>headerMatchMethod_range</a> -
--   An object that represents the range of values to match on.
--   
--   <a>$sel:exact:HeaderMatchMethod'</a>, <a>headerMatchMethod_exact</a> -
--   The value sent by the client must match the specified value exactly.
newHeaderMatchMethod :: HeaderMatchMethod

-- | An object that represents the health check policy for a virtual node's
--   listener.
--   
--   <i>See:</i> <a>newHealthCheckPolicy</a> smart constructor.
data HealthCheckPolicy
HealthCheckPolicy' :: Maybe Text -> Maybe Natural -> Natural -> Natural -> PortProtocol -> Natural -> Natural -> HealthCheckPolicy

-- | Create a value of <a>HealthCheckPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:HealthCheckPolicy'</a>, <a>healthCheckPolicy_path</a> -
--   The destination path for the health check request. This value is only
--   used if the specified protocol is HTTP or HTTP/2. For any other
--   protocol, this value is ignored.
--   
--   <a>$sel:port:HealthCheckPolicy'</a>, <a>healthCheckPolicy_port</a> -
--   The destination port for the health check request. This port must
--   match the port defined in the PortMapping for the listener.
--   
--   <a>$sel:healthyThreshold:HealthCheckPolicy'</a>,
--   <a>healthCheckPolicy_healthyThreshold</a> - The number of consecutive
--   successful health checks that must occur before declaring listener
--   healthy.
--   
--   <a>$sel:intervalMillis:HealthCheckPolicy'</a>,
--   <a>healthCheckPolicy_intervalMillis</a> - The time period in
--   milliseconds between each health check execution.
--   
--   <a>$sel:protocol:HealthCheckPolicy'</a>,
--   <a>healthCheckPolicy_protocol</a> - The protocol for the health check
--   request. If you specify <tt>grpc</tt>, then your service must conform
--   to the <a>GRPC Health Checking Protocol</a>.
--   
--   <a>$sel:timeoutMillis:HealthCheckPolicy'</a>,
--   <a>healthCheckPolicy_timeoutMillis</a> - The amount of time to wait
--   when receiving a response from the health check, in milliseconds.
--   
--   <a>$sel:unhealthyThreshold:HealthCheckPolicy'</a>,
--   <a>healthCheckPolicy_unhealthyThreshold</a> - The number of
--   consecutive failed health checks that must occur before declaring a
--   virtual node unhealthy.
newHealthCheckPolicy :: Natural -> Natural -> PortProtocol -> Natural -> Natural -> HealthCheckPolicy

-- | An object that represents an HTTP gateway route.
--   
--   <i>See:</i> <a>newHttpGatewayRoute</a> smart constructor.
data HttpGatewayRoute
HttpGatewayRoute' :: HttpGatewayRouteAction -> HttpGatewayRouteMatch -> HttpGatewayRoute

-- | Create a value of <a>HttpGatewayRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:HttpGatewayRoute'</a>, <a>httpGatewayRoute_action</a> -
--   An object that represents the action to take if a match is determined.
--   
--   <a>$sel:match:HttpGatewayRoute'</a>, <a>httpGatewayRoute_match</a> -
--   An object that represents the criteria for determining a request
--   match.
newHttpGatewayRoute :: HttpGatewayRouteAction -> HttpGatewayRouteMatch -> HttpGatewayRoute

-- | An object that represents the action to take if a match is determined.
--   
--   <i>See:</i> <a>newHttpGatewayRouteAction</a> smart constructor.
data HttpGatewayRouteAction
HttpGatewayRouteAction' :: Maybe HttpGatewayRouteRewrite -> GatewayRouteTarget -> HttpGatewayRouteAction

-- | Create a value of <a>HttpGatewayRouteAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rewrite:HttpGatewayRouteAction'</a>,
--   <a>httpGatewayRouteAction_rewrite</a> - The gateway route action to
--   rewrite.
--   
--   <a>$sel:target:HttpGatewayRouteAction'</a>,
--   <a>httpGatewayRouteAction_target</a> - An object that represents the
--   target that traffic is routed to when a request matches the gateway
--   route.
newHttpGatewayRouteAction :: GatewayRouteTarget -> HttpGatewayRouteAction

-- | An object that represents the HTTP header in the gateway route.
--   
--   <i>See:</i> <a>newHttpGatewayRouteHeader</a> smart constructor.
data HttpGatewayRouteHeader
HttpGatewayRouteHeader' :: Maybe Bool -> Maybe HeaderMatchMethod -> Text -> HttpGatewayRouteHeader

-- | Create a value of <a>HttpGatewayRouteHeader</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invert:HttpGatewayRouteHeader'</a>,
--   <a>httpGatewayRouteHeader_invert</a> - Specify <tt>True</tt> to match
--   anything except the match criteria. The default value is
--   <tt>False</tt>.
--   
--   <a>$sel:match:HttpGatewayRouteHeader'</a>,
--   <a>httpGatewayRouteHeader_match</a> - Undocumented member.
--   
--   <a>$sel:name:HttpGatewayRouteHeader'</a>,
--   <a>httpGatewayRouteHeader_name</a> - A name for the HTTP header in the
--   gateway route that will be matched on.
newHttpGatewayRouteHeader :: Text -> HttpGatewayRouteHeader

-- | An object that represents the criteria for determining a request
--   match.
--   
--   <i>See:</i> <a>newHttpGatewayRouteMatch</a> smart constructor.
data HttpGatewayRouteMatch
HttpGatewayRouteMatch' :: Maybe GatewayRouteHostnameMatch -> Maybe HttpPathMatch -> Maybe Text -> Maybe (NonEmpty HttpQueryParameter) -> Maybe (NonEmpty HttpGatewayRouteHeader) -> Maybe HttpMethod -> HttpGatewayRouteMatch

-- | Create a value of <a>HttpGatewayRouteMatch</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostname:HttpGatewayRouteMatch'</a>,
--   <a>httpGatewayRouteMatch_hostname</a> - The host name to match on.
--   
--   <a>$sel:path:HttpGatewayRouteMatch'</a>,
--   <a>httpGatewayRouteMatch_path</a> - The path to match on.
--   
--   <a>$sel:prefix:HttpGatewayRouteMatch'</a>,
--   <a>httpGatewayRouteMatch_prefix</a> - Specifies the path to match
--   requests with. This parameter must always start with <tt>/</tt>, which
--   by itself matches all requests to the virtual service name. You can
--   also match for path-based routing of requests. For example, if your
--   virtual service name is <tt>my-service.local</tt> and you want the
--   route to match requests to <tt>my-service.local/metrics</tt>, your
--   prefix should be <tt>/metrics</tt>.
--   
--   <a>$sel:queryParameters:HttpGatewayRouteMatch'</a>,
--   <a>httpGatewayRouteMatch_queryParameters</a> - The query parameter to
--   match on.
--   
--   <a>$sel:headers:HttpGatewayRouteMatch'</a>,
--   <a>httpGatewayRouteMatch_headers</a> - The client request headers to
--   match on.
--   
--   <a>$sel:method:HttpGatewayRouteMatch'</a>,
--   <a>httpGatewayRouteMatch_method</a> - The method to match on.
newHttpGatewayRouteMatch :: HttpGatewayRouteMatch

-- | An object that represents the path to rewrite.
--   
--   <i>See:</i> <a>newHttpGatewayRoutePathRewrite</a> smart constructor.
data HttpGatewayRoutePathRewrite
HttpGatewayRoutePathRewrite' :: Maybe Text -> HttpGatewayRoutePathRewrite

-- | Create a value of <a>HttpGatewayRoutePathRewrite</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exact:HttpGatewayRoutePathRewrite'</a>,
--   <a>httpGatewayRoutePathRewrite_exact</a> - The exact path to rewrite.
newHttpGatewayRoutePathRewrite :: HttpGatewayRoutePathRewrite

-- | An object representing the beginning characters of the route to
--   rewrite.
--   
--   <i>See:</i> <a>newHttpGatewayRoutePrefixRewrite</a> smart constructor.
data HttpGatewayRoutePrefixRewrite
HttpGatewayRoutePrefixRewrite' :: Maybe Text -> Maybe DefaultGatewayRouteRewrite -> HttpGatewayRoutePrefixRewrite

-- | Create a value of <a>HttpGatewayRoutePrefixRewrite</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:HttpGatewayRoutePrefixRewrite'</a>,
--   <a>httpGatewayRoutePrefixRewrite_value</a> - The value used to replace
--   the incoming route prefix when rewritten.
--   
--   <a>$sel:defaultPrefix:HttpGatewayRoutePrefixRewrite'</a>,
--   <a>httpGatewayRoutePrefixRewrite_defaultPrefix</a> - The default
--   prefix used to replace the incoming route prefix when rewritten.
newHttpGatewayRoutePrefixRewrite :: HttpGatewayRoutePrefixRewrite

-- | An object representing the gateway route to rewrite.
--   
--   <i>See:</i> <a>newHttpGatewayRouteRewrite</a> smart constructor.
data HttpGatewayRouteRewrite
HttpGatewayRouteRewrite' :: Maybe GatewayRouteHostnameRewrite -> Maybe HttpGatewayRoutePathRewrite -> Maybe HttpGatewayRoutePrefixRewrite -> HttpGatewayRouteRewrite

-- | Create a value of <a>HttpGatewayRouteRewrite</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostname:HttpGatewayRouteRewrite'</a>,
--   <a>httpGatewayRouteRewrite_hostname</a> - The host name to rewrite.
--   
--   <a>$sel:path:HttpGatewayRouteRewrite'</a>,
--   <a>httpGatewayRouteRewrite_path</a> - The path to rewrite.
--   
--   <a>$sel:prefix:HttpGatewayRouteRewrite'</a>,
--   <a>httpGatewayRouteRewrite_prefix</a> - The specified beginning
--   characters to rewrite.
newHttpGatewayRouteRewrite :: HttpGatewayRouteRewrite

-- | An object representing the path to match in the request.
--   
--   <i>See:</i> <a>newHttpPathMatch</a> smart constructor.
data HttpPathMatch
HttpPathMatch' :: Maybe Text -> Maybe Text -> HttpPathMatch

-- | Create a value of <a>HttpPathMatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:regex:HttpPathMatch'</a>, <a>httpPathMatch_regex</a> - The
--   regex used to match the path.
--   
--   <a>$sel:exact:HttpPathMatch'</a>, <a>httpPathMatch_exact</a> - The
--   exact path to match on.
newHttpPathMatch :: HttpPathMatch

-- | An object that represents the query parameter in the request.
--   
--   <i>See:</i> <a>newHttpQueryParameter</a> smart constructor.
data HttpQueryParameter
HttpQueryParameter' :: Maybe QueryParameterMatch -> Text -> HttpQueryParameter

-- | Create a value of <a>HttpQueryParameter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:match:HttpQueryParameter'</a>, <a>httpQueryParameter_match</a>
--   - The query parameter to match on.
--   
--   <a>$sel:name:HttpQueryParameter'</a>, <a>httpQueryParameter_name</a> -
--   A name for the query parameter that will be matched on.
newHttpQueryParameter :: Text -> HttpQueryParameter

-- | An object that represents a retry policy. Specify at least one value
--   for at least one of the types of <tt>RetryEvents</tt>, a value for
--   <tt>maxRetries</tt>, and a value for <tt>perRetryTimeout</tt>. Both
--   <tt>server-error</tt> and <tt>gateway-error</tt> under
--   <tt>httpRetryEvents</tt> include the Envoy <tt>reset</tt> policy. For
--   more information on the <tt>reset</tt> policy, see the <a>Envoy
--   documentation</a>.
--   
--   <i>See:</i> <a>newHttpRetryPolicy</a> smart constructor.
data HttpRetryPolicy
HttpRetryPolicy' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty TcpRetryPolicyEvent) -> Natural -> Duration -> HttpRetryPolicy

-- | Create a value of <a>HttpRetryPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpRetryEvents:HttpRetryPolicy'</a>,
--   <a>httpRetryPolicy_httpRetryEvents</a> - Specify at least one of the
--   following values.
--   
--   <ul>
--   <li><b>server-error</b> – HTTP status codes 500, 501, 502, 503, 504,
--   505, 506, 507, 508, 510, and 511</li>
--   <li><b>gateway-error</b> – HTTP status codes 502, 503, and 504</li>
--   <li><b>client-error</b> – HTTP status code 409</li>
--   <li><b>stream-error</b> – Retry on refused stream</li>
--   </ul>
--   
--   <a>$sel:tcpRetryEvents:HttpRetryPolicy'</a>,
--   <a>httpRetryPolicy_tcpRetryEvents</a> - Specify a valid value. The
--   event occurs before any processing of a request has started and is
--   encountered when the upstream is temporarily or permanently
--   unavailable.
--   
--   <a>$sel:maxRetries:HttpRetryPolicy'</a>,
--   <a>httpRetryPolicy_maxRetries</a> - The maximum number of retry
--   attempts.
--   
--   <a>$sel:perRetryTimeout:HttpRetryPolicy'</a>,
--   <a>httpRetryPolicy_perRetryTimeout</a> - The timeout for each retry
--   attempt.
newHttpRetryPolicy :: Natural -> Duration -> HttpRetryPolicy

-- | An object that represents an HTTP or HTTP/2 route type.
--   
--   <i>See:</i> <a>newHttpRoute</a> smart constructor.
data HttpRoute
HttpRoute' :: Maybe HttpRetryPolicy -> Maybe HttpTimeout -> HttpRouteAction -> HttpRouteMatch -> HttpRoute

-- | Create a value of <a>HttpRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retryPolicy:HttpRoute'</a>, <a>httpRoute_retryPolicy</a> - An
--   object that represents a retry policy.
--   
--   <a>$sel:timeout:HttpRoute'</a>, <a>httpRoute_timeout</a> - An object
--   that represents types of timeouts.
--   
--   <a>$sel:action:HttpRoute'</a>, <a>httpRoute_action</a> - An object
--   that represents the action to take if a match is determined.
--   
--   <a>$sel:match:HttpRoute'</a>, <a>httpRoute_match</a> - An object that
--   represents the criteria for determining a request match.
newHttpRoute :: HttpRouteAction -> HttpRouteMatch -> HttpRoute

-- | An object that represents the action to take if a match is determined.
--   
--   <i>See:</i> <a>newHttpRouteAction</a> smart constructor.
data HttpRouteAction
HttpRouteAction' :: NonEmpty WeightedTarget -> HttpRouteAction

-- | Create a value of <a>HttpRouteAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:weightedTargets:HttpRouteAction'</a>,
--   <a>httpRouteAction_weightedTargets</a> - An object that represents the
--   targets that traffic is routed to when a request matches the route.
newHttpRouteAction :: NonEmpty WeightedTarget -> HttpRouteAction

-- | An object that represents the HTTP header in the request.
--   
--   <i>See:</i> <a>newHttpRouteHeader</a> smart constructor.
data HttpRouteHeader
HttpRouteHeader' :: Maybe Bool -> Maybe HeaderMatchMethod -> Text -> HttpRouteHeader

-- | Create a value of <a>HttpRouteHeader</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invert:HttpRouteHeader'</a>, <a>httpRouteHeader_invert</a> -
--   Specify <tt>True</tt> to match anything except the match criteria. The
--   default value is <tt>False</tt>.
--   
--   <a>$sel:match:HttpRouteHeader'</a>, <a>httpRouteHeader_match</a> - The
--   <tt>HeaderMatchMethod</tt> object.
--   
--   <a>$sel:name:HttpRouteHeader'</a>, <a>httpRouteHeader_name</a> - A
--   name for the HTTP header in the client request that will be matched
--   on.
newHttpRouteHeader :: Text -> HttpRouteHeader

-- | An object that represents the requirements for a route to match HTTP
--   requests for a virtual router.
--   
--   <i>See:</i> <a>newHttpRouteMatch</a> smart constructor.
data HttpRouteMatch
HttpRouteMatch' :: Maybe HttpPathMatch -> Maybe Text -> Maybe (NonEmpty HttpQueryParameter) -> Maybe (NonEmpty HttpRouteHeader) -> Maybe HttpMethod -> Maybe HttpScheme -> HttpRouteMatch

-- | Create a value of <a>HttpRouteMatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:HttpRouteMatch'</a>, <a>httpRouteMatch_path</a> - The
--   client request path to match on.
--   
--   <a>$sel:prefix:HttpRouteMatch'</a>, <a>httpRouteMatch_prefix</a> -
--   Specifies the path to match requests with. This parameter must always
--   start with <tt>/</tt>, which by itself matches all requests to the
--   virtual service name. You can also match for path-based routing of
--   requests. For example, if your virtual service name is
--   <tt>my-service.local</tt> and you want the route to match requests to
--   <tt>my-service.local/metrics</tt>, your prefix should be
--   <tt>/metrics</tt>.
--   
--   <a>$sel:queryParameters:HttpRouteMatch'</a>,
--   <a>httpRouteMatch_queryParameters</a> - The client request query
--   parameters to match on.
--   
--   <a>$sel:headers:HttpRouteMatch'</a>, <a>httpRouteMatch_headers</a> -
--   The client request headers to match on.
--   
--   <a>$sel:method:HttpRouteMatch'</a>, <a>httpRouteMatch_method</a> - The
--   client request method to match on. Specify only one.
--   
--   <a>$sel:scheme:HttpRouteMatch'</a>, <a>httpRouteMatch_scheme</a> - The
--   client request scheme to match on. Specify only one. Applicable only
--   for HTTP2 routes.
newHttpRouteMatch :: HttpRouteMatch

-- | An object that represents types of timeouts.
--   
--   <i>See:</i> <a>newHttpTimeout</a> smart constructor.
data HttpTimeout
HttpTimeout' :: Maybe Duration -> Maybe Duration -> HttpTimeout

-- | Create a value of <a>HttpTimeout</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idle:HttpTimeout'</a>, <a>httpTimeout_idle</a> - An object
--   that represents an idle timeout. An idle timeout bounds the amount of
--   time that a connection may be idle. The default value is none.
--   
--   <a>$sel:perRequest:HttpTimeout'</a>, <a>httpTimeout_perRequest</a> -
--   An object that represents a per request timeout. The default value is
--   15 seconds. If you set a higher timeout, then make sure that the
--   higher value is set for each App Mesh resource in a conversation. For
--   example, if a virtual node backend uses a virtual router provider to
--   route to another virtual node, then the timeout should be greater than
--   15 seconds for the source and destination virtual node and the route.
newHttpTimeout :: HttpTimeout

-- | An object that represents a listener for a virtual node.
--   
--   <i>See:</i> <a>newListener</a> smart constructor.
data Listener
Listener' :: Maybe HealthCheckPolicy -> Maybe VirtualNodeConnectionPool -> Maybe ListenerTls -> Maybe OutlierDetection -> Maybe ListenerTimeout -> PortMapping -> Listener

-- | Create a value of <a>Listener</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthCheck:Listener'</a>, <a>listener_healthCheck</a> - The
--   health check information for the listener.
--   
--   <a>$sel:connectionPool:Listener'</a>, <a>listener_connectionPool</a> -
--   The connection pool information for the listener.
--   
--   <a>$sel:tls:Listener'</a>, <a>listener_tls</a> - A reference to an
--   object that represents the Transport Layer Security (TLS) properties
--   for a listener.
--   
--   <a>$sel:outlierDetection:Listener'</a>,
--   <a>listener_outlierDetection</a> - The outlier detection information
--   for the listener.
--   
--   <a>$sel:timeout:Listener'</a>, <a>listener_timeout</a> - An object
--   that represents timeouts for different protocols.
--   
--   <a>$sel:portMapping:Listener'</a>, <a>listener_portMapping</a> - The
--   port mapping information for the listener.
newListener :: PortMapping -> Listener

-- | An object that represents timeouts for different protocols.
--   
--   <i>See:</i> <a>newListenerTimeout</a> smart constructor.
data ListenerTimeout
ListenerTimeout' :: Maybe HttpTimeout -> Maybe GrpcTimeout -> Maybe TcpTimeout -> Maybe HttpTimeout -> ListenerTimeout

-- | Create a value of <a>ListenerTimeout</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:http2:ListenerTimeout'</a>, <a>listenerTimeout_http2</a> - An
--   object that represents types of timeouts.
--   
--   <a>$sel:grpc:ListenerTimeout'</a>, <a>listenerTimeout_grpc</a> - An
--   object that represents types of timeouts.
--   
--   <a>$sel:tcp:ListenerTimeout'</a>, <a>listenerTimeout_tcp</a> - An
--   object that represents types of timeouts.
--   
--   <a>$sel:http:ListenerTimeout'</a>, <a>listenerTimeout_http</a> - An
--   object that represents types of timeouts.
newListenerTimeout :: ListenerTimeout

-- | An object that represents the Transport Layer Security (TLS)
--   properties for a listener.
--   
--   <i>See:</i> <a>newListenerTls</a> smart constructor.
data ListenerTls
ListenerTls' :: Maybe ListenerTlsValidationContext -> ListenerTlsCertificate -> ListenerTlsMode -> ListenerTls

-- | Create a value of <a>ListenerTls</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validation:ListenerTls'</a>, <a>listenerTls_validation</a> - A
--   reference to an object that represents a listener's Transport Layer
--   Security (TLS) validation context.
--   
--   <a>$sel:certificate:ListenerTls'</a>, <a>listenerTls_certificate</a> -
--   A reference to an object that represents a listener's Transport Layer
--   Security (TLS) certificate.
--   
--   <a>$sel:mode:ListenerTls'</a>, <a>listenerTls_mode</a> - Specify one
--   of the following modes.
--   
--   <ul>
--   <li>____STRICT – Listener only accepts connections with TLS
--   enabled.</li>
--   <li>____PERMISSIVE – Listener accepts connections with or without TLS
--   enabled.</li>
--   <li>____DISABLED – Listener only accepts connections without TLS.</li>
--   </ul>
newListenerTls :: ListenerTlsCertificate -> ListenerTlsMode -> ListenerTls

-- | An object that represents an AWS Certicate Manager (ACM) certificate.
--   
--   <i>See:</i> <a>newListenerTlsAcmCertificate</a> smart constructor.
data ListenerTlsAcmCertificate
ListenerTlsAcmCertificate' :: Text -> ListenerTlsAcmCertificate

-- | Create a value of <a>ListenerTlsAcmCertificate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateArn:ListenerTlsAcmCertificate'</a>,
--   <a>listenerTlsAcmCertificate_certificateArn</a> - The Amazon Resource
--   Name (ARN) for the certificate. The certificate must meet specific
--   requirements and you must have proxy authorization enabled. For more
--   information, see <a>Transport Layer Security (TLS)</a>.
newListenerTlsAcmCertificate :: Text -> ListenerTlsAcmCertificate

-- | An object that represents a listener's Transport Layer Security (TLS)
--   certificate.
--   
--   <i>See:</i> <a>newListenerTlsCertificate</a> smart constructor.
data ListenerTlsCertificate
ListenerTlsCertificate' :: Maybe ListenerTlsAcmCertificate -> Maybe ListenerTlsSdsCertificate -> Maybe ListenerTlsFileCertificate -> ListenerTlsCertificate

-- | Create a value of <a>ListenerTlsCertificate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acm:ListenerTlsCertificate'</a>,
--   <a>listenerTlsCertificate_acm</a> - A reference to an object that
--   represents an AWS Certicate Manager (ACM) certificate.
--   
--   <a>$sel:sds:ListenerTlsCertificate'</a>,
--   <a>listenerTlsCertificate_sds</a> - A reference to an object that
--   represents a listener's Secret Discovery Service certificate.
--   
--   <a>$sel:file:ListenerTlsCertificate'</a>,
--   <a>listenerTlsCertificate_file</a> - A reference to an object that
--   represents a local file certificate.
newListenerTlsCertificate :: ListenerTlsCertificate

-- | An object that represents a local file certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
--   
--   <i>See:</i> <a>newListenerTlsFileCertificate</a> smart constructor.
data ListenerTlsFileCertificate
ListenerTlsFileCertificate' :: Text -> Text -> ListenerTlsFileCertificate

-- | Create a value of <a>ListenerTlsFileCertificate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateChain:ListenerTlsFileCertificate'</a>,
--   <a>listenerTlsFileCertificate_certificateChain</a> - The certificate
--   chain for the certificate.
--   
--   <a>$sel:privateKey:ListenerTlsFileCertificate'</a>,
--   <a>listenerTlsFileCertificate_privateKey</a> - The private key for a
--   certificate stored on the file system of the virtual node that the
--   proxy is running on.
newListenerTlsFileCertificate :: Text -> Text -> ListenerTlsFileCertificate

-- | An object that represents the listener's Secret Discovery Service
--   certificate. The proxy must be configured with a local SDS provider
--   via a Unix Domain Socket. See App Mesh <a>TLS documentation</a> for
--   more info.
--   
--   <i>See:</i> <a>newListenerTlsSdsCertificate</a> smart constructor.
data ListenerTlsSdsCertificate
ListenerTlsSdsCertificate' :: Text -> ListenerTlsSdsCertificate

-- | Create a value of <a>ListenerTlsSdsCertificate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretName:ListenerTlsSdsCertificate'</a>,
--   <a>listenerTlsSdsCertificate_secretName</a> - A reference to an object
--   that represents the name of the secret requested from the Secret
--   Discovery Service provider representing Transport Layer Security (TLS)
--   materials like a certificate or certificate chain.
newListenerTlsSdsCertificate :: Text -> ListenerTlsSdsCertificate

-- | An object that represents a listener's Transport Layer Security (TLS)
--   validation context.
--   
--   <i>See:</i> <a>newListenerTlsValidationContext</a> smart constructor.
data ListenerTlsValidationContext
ListenerTlsValidationContext' :: Maybe SubjectAlternativeNames -> ListenerTlsValidationContextTrust -> ListenerTlsValidationContext

-- | Create a value of <a>ListenerTlsValidationContext</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subjectAlternativeNames:ListenerTlsValidationContext'</a>,
--   <a>listenerTlsValidationContext_subjectAlternativeNames</a> - A
--   reference to an object that represents the SANs for a listener's
--   Transport Layer Security (TLS) validation context.
--   
--   <a>$sel:trust:ListenerTlsValidationContext'</a>,
--   <a>listenerTlsValidationContext_trust</a> - A reference to where to
--   retrieve the trust chain when validating a peer’s Transport Layer
--   Security (TLS) certificate.
newListenerTlsValidationContext :: ListenerTlsValidationContextTrust -> ListenerTlsValidationContext

-- | An object that represents a listener's Transport Layer Security (TLS)
--   validation context trust.
--   
--   <i>See:</i> <a>newListenerTlsValidationContextTrust</a> smart
--   constructor.
data ListenerTlsValidationContextTrust
ListenerTlsValidationContextTrust' :: Maybe TlsValidationContextSdsTrust -> Maybe TlsValidationContextFileTrust -> ListenerTlsValidationContextTrust

-- | Create a value of <a>ListenerTlsValidationContextTrust</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sds:ListenerTlsValidationContextTrust'</a>,
--   <a>listenerTlsValidationContextTrust_sds</a> - A reference to an
--   object that represents a listener's Transport Layer Security (TLS)
--   Secret Discovery Service validation context trust.
--   
--   <a>$sel:file:ListenerTlsValidationContextTrust'</a>,
--   <a>listenerTlsValidationContextTrust_file</a> - An object that
--   represents a Transport Layer Security (TLS) validation context trust
--   for a local file.
newListenerTlsValidationContextTrust :: ListenerTlsValidationContextTrust

-- | An object that represents the logging information for a virtual node.
--   
--   <i>See:</i> <a>newLogging</a> smart constructor.
data Logging
Logging' :: Maybe AccessLog -> Logging

-- | Create a value of <a>Logging</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessLog:Logging'</a>, <a>logging_accessLog</a> - The access
--   log configuration for a virtual node.
newLogging :: Logging

-- | An object that represents the range of values to match on. The first
--   character of the range is included in the range, though the last
--   character is not. For example, if the range specified were 1-100, only
--   values 1-99 would be matched.
--   
--   <i>See:</i> <a>newMatchRange</a> smart constructor.
data MatchRange
MatchRange' :: Integer -> Integer -> MatchRange

-- | Create a value of <a>MatchRange</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:end:MatchRange'</a>, <a>matchRange_end</a> - The end of the
--   range.
--   
--   <a>$sel:start:MatchRange'</a>, <a>matchRange_start</a> - The start of
--   the range.
newMatchRange :: Integer -> Integer -> MatchRange

-- | An object that represents a service mesh returned by a describe
--   operation.
--   
--   <i>See:</i> <a>newMeshData</a> smart constructor.
data MeshData
MeshData' :: Text -> ResourceMetadata -> MeshSpec -> MeshStatus -> MeshData

-- | Create a value of <a>MeshData</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshName:MeshData'</a>, <a>meshData_meshName</a> - The name of
--   the service mesh.
--   
--   <a>$sel:metadata:MeshData'</a>, <a>meshData_metadata</a> - The
--   associated metadata for the service mesh.
--   
--   <a>$sel:spec:MeshData'</a>, <a>meshData_spec</a> - The associated
--   specification for the service mesh.
--   
--   <a>$sel:status:MeshData'</a>, <a>meshData_status</a> - The status of
--   the service mesh.
newMeshData :: Text -> ResourceMetadata -> MeshSpec -> MeshStatus -> MeshData

-- | An object that represents a service mesh returned by a list operation.
--   
--   <i>See:</i> <a>newMeshRef</a> smart constructor.
data MeshRef
MeshRef' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Integer -> MeshRef

-- | Create a value of <a>MeshRef</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:MeshRef'</a>, <a>meshRef_arn</a> - The full Amazon
--   Resource Name (ARN) of the service mesh.
--   
--   <a>$sel:createdAt:MeshRef'</a>, <a>meshRef_createdAt</a> - The Unix
--   epoch timestamp in seconds for when the resource was created.
--   
--   <a>$sel:lastUpdatedAt:MeshRef'</a>, <a>meshRef_lastUpdatedAt</a> - The
--   Unix epoch timestamp in seconds for when the resource was last
--   updated.
--   
--   <a>$sel:meshName:MeshRef'</a>, <a>meshRef_meshName</a> - The name of
--   the service mesh.
--   
--   <a>$sel:meshOwner:MeshRef'</a>, <a>meshRef_meshOwner</a> - The AWS IAM
--   account ID of the service mesh owner. If the account ID is not your
--   own, then it's the ID of the account that shared the mesh with your
--   account. For more information about mesh sharing, see <a>Working with
--   shared meshes</a>.
--   
--   <a>$sel:resourceOwner:MeshRef'</a>, <a>meshRef_resourceOwner</a> - The
--   AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
--   
--   <a>$sel:version:MeshRef'</a>, <a>meshRef_version</a> - The version of
--   the resource. Resources are created at version 1, and this version is
--   incremented each time that they're updated.
newMeshRef :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Integer -> MeshRef

-- | An object that represents the specification of a service mesh.
--   
--   <i>See:</i> <a>newMeshSpec</a> smart constructor.
data MeshSpec
MeshSpec' :: Maybe EgressFilter -> MeshSpec

-- | Create a value of <a>MeshSpec</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:egressFilter:MeshSpec'</a>, <a>meshSpec_egressFilter</a> - The
--   egress filter rules for the service mesh.
newMeshSpec :: MeshSpec

-- | An object that represents the status of a service mesh.
--   
--   <i>See:</i> <a>newMeshStatus</a> smart constructor.
data MeshStatus
MeshStatus' :: Maybe MeshStatusCode -> MeshStatus

-- | Create a value of <a>MeshStatus</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:MeshStatus'</a>, <a>meshStatus_status</a> - The current
--   mesh status.
newMeshStatus :: MeshStatus

-- | An object that represents the outlier detection for a virtual node's
--   listener.
--   
--   <i>See:</i> <a>newOutlierDetection</a> smart constructor.
data OutlierDetection
OutlierDetection' :: Duration -> Duration -> Natural -> Natural -> OutlierDetection

-- | Create a value of <a>OutlierDetection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseEjectionDuration:OutlierDetection'</a>,
--   <a>outlierDetection_baseEjectionDuration</a> - The base amount of time
--   for which a host is ejected.
--   
--   <a>$sel:interval:OutlierDetection'</a>,
--   <a>outlierDetection_interval</a> - The time interval between ejection
--   sweep analysis.
--   
--   <a>$sel:maxEjectionPercent:OutlierDetection'</a>,
--   <a>outlierDetection_maxEjectionPercent</a> - Maximum percentage of
--   hosts in load balancing pool for upstream service that can be ejected.
--   Will eject at least one host regardless of the value.
--   
--   <a>$sel:maxServerErrors:OutlierDetection'</a>,
--   <a>outlierDetection_maxServerErrors</a> - Number of consecutive
--   <tt>5xx</tt> errors required for ejection.
newOutlierDetection :: Duration -> Duration -> Natural -> Natural -> OutlierDetection

-- | An object that represents a port mapping.
--   
--   <i>See:</i> <a>newPortMapping</a> smart constructor.
data PortMapping
PortMapping' :: Natural -> PortProtocol -> PortMapping

-- | Create a value of <a>PortMapping</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:port:PortMapping'</a>, <a>portMapping_port</a> - The port used
--   for the port mapping.
--   
--   <a>$sel:protocol:PortMapping'</a>, <a>portMapping_protocol</a> - The
--   protocol used for the port mapping. Specify one protocol.
newPortMapping :: Natural -> PortProtocol -> PortMapping

-- | An object representing the query parameter to match.
--   
--   <i>See:</i> <a>newQueryParameterMatch</a> smart constructor.
data QueryParameterMatch
QueryParameterMatch' :: Maybe Text -> QueryParameterMatch

-- | Create a value of <a>QueryParameterMatch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exact:QueryParameterMatch'</a>,
--   <a>queryParameterMatch_exact</a> - The exact query parameter to match
--   on.
newQueryParameterMatch :: QueryParameterMatch

-- | An object that represents metadata for a resource.
--   
--   <i>See:</i> <a>newResourceMetadata</a> smart constructor.
data ResourceMetadata
ResourceMetadata' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Integer -> ResourceMetadata

-- | Create a value of <a>ResourceMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ResourceMetadata'</a>, <a>resourceMetadata_arn</a> - The
--   full Amazon Resource Name (ARN) for the resource.
--   
--   <a>$sel:createdAt:ResourceMetadata'</a>,
--   <a>resourceMetadata_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:lastUpdatedAt:ResourceMetadata'</a>,
--   <a>resourceMetadata_lastUpdatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was last updated.
--   
--   <a>$sel:meshOwner:ResourceMetadata'</a>,
--   <a>resourceMetadata_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:ResourceMetadata'</a>,
--   <a>resourceMetadata_resourceOwner</a> - The AWS IAM account ID of the
--   resource owner. If the account ID is not your own, then it's the ID of
--   the mesh owner or of another account that the mesh is shared with. For
--   more information about mesh sharing, see <a>Working with shared
--   meshes</a>.
--   
--   <a>$sel:uid:ResourceMetadata'</a>, <a>resourceMetadata_uid</a> - The
--   unique identifier for the resource.
--   
--   <a>$sel:version:ResourceMetadata'</a>, <a>resourceMetadata_version</a>
--   - The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
newResourceMetadata :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Integer -> ResourceMetadata

-- | An object that represents a route returned by a describe operation.
--   
--   <i>See:</i> <a>newRouteData</a> smart constructor.
data RouteData
RouteData' :: Text -> ResourceMetadata -> Text -> RouteSpec -> RouteStatus -> Text -> RouteData

-- | Create a value of <a>RouteData</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshName:RouteData'</a>, <a>routeData_meshName</a> - The name
--   of the service mesh that the route resides in.
--   
--   <a>$sel:metadata:RouteData'</a>, <a>routeData_metadata</a> - The
--   associated metadata for the route.
--   
--   <a>$sel:routeName:RouteData'</a>, <a>routeData_routeName</a> - The
--   name of the route.
--   
--   <a>$sel:spec:RouteData'</a>, <a>routeData_spec</a> - The
--   specifications of the route.
--   
--   <a>$sel:status:RouteData'</a>, <a>routeData_status</a> - The status of
--   the route.
--   
--   <a>$sel:virtualRouterName:RouteData'</a>,
--   <a>routeData_virtualRouterName</a> - The virtual router that the route
--   is associated with.
newRouteData :: Text -> ResourceMetadata -> Text -> RouteSpec -> RouteStatus -> Text -> RouteData

-- | An object that represents a route returned by a list operation.
--   
--   <i>See:</i> <a>newRouteRef</a> smart constructor.
data RouteRef
RouteRef' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Text -> Integer -> Text -> RouteRef

-- | Create a value of <a>RouteRef</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:RouteRef'</a>, <a>routeRef_arn</a> - The full Amazon
--   Resource Name (ARN) for the route.
--   
--   <a>$sel:createdAt:RouteRef'</a>, <a>routeRef_createdAt</a> - The Unix
--   epoch timestamp in seconds for when the resource was created.
--   
--   <a>$sel:lastUpdatedAt:RouteRef'</a>, <a>routeRef_lastUpdatedAt</a> -
--   The Unix epoch timestamp in seconds for when the resource was last
--   updated.
--   
--   <a>$sel:meshName:RouteRef'</a>, <a>routeRef_meshName</a> - The name of
--   the service mesh that the route resides in.
--   
--   <a>$sel:meshOwner:RouteRef'</a>, <a>routeRef_meshOwner</a> - The AWS
--   IAM account ID of the service mesh owner. If the account ID is not
--   your own, then it's the ID of the account that shared the mesh with
--   your account. For more information about mesh sharing, see <a>Working
--   with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:RouteRef'</a>, <a>routeRef_resourceOwner</a> -
--   The AWS IAM account ID of the resource owner. If the account ID is not
--   your own, then it's the ID of the mesh owner or of another account
--   that the mesh is shared with. For more information about mesh sharing,
--   see <a>Working with shared meshes</a>.
--   
--   <a>$sel:routeName:RouteRef'</a>, <a>routeRef_routeName</a> - The name
--   of the route.
--   
--   <a>$sel:version:RouteRef'</a>, <a>routeRef_version</a> - The version
--   of the resource. Resources are created at version 1, and this version
--   is incremented each time that they're updated.
--   
--   <a>$sel:virtualRouterName:RouteRef'</a>,
--   <a>routeRef_virtualRouterName</a> - The virtual router that the route
--   is associated with.
newRouteRef :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Text -> Integer -> Text -> RouteRef

-- | An object that represents a route specification. Specify one route
--   type.
--   
--   <i>See:</i> <a>newRouteSpec</a> smart constructor.
data RouteSpec
RouteSpec' :: Maybe Natural -> Maybe HttpRoute -> Maybe GrpcRoute -> Maybe TcpRoute -> Maybe HttpRoute -> RouteSpec

-- | Create a value of <a>RouteSpec</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priority:RouteSpec'</a>, <a>routeSpec_priority</a> - The
--   priority for the route. Routes are matched based on the specified
--   value, where 0 is the highest priority.
--   
--   <a>$sel:http2Route:RouteSpec'</a>, <a>routeSpec_http2Route</a> - An
--   object that represents the specification of an HTTP/2 route.
--   
--   <a>$sel:grpcRoute:RouteSpec'</a>, <a>routeSpec_grpcRoute</a> - An
--   object that represents the specification of a gRPC route.
--   
--   <a>$sel:tcpRoute:RouteSpec'</a>, <a>routeSpec_tcpRoute</a> - An object
--   that represents the specification of a TCP route.
--   
--   <a>$sel:httpRoute:RouteSpec'</a>, <a>routeSpec_httpRoute</a> - An
--   object that represents the specification of an HTTP route.
newRouteSpec :: RouteSpec

-- | An object that represents the current status of a route.
--   
--   <i>See:</i> <a>newRouteStatus</a> smart constructor.
data RouteStatus
RouteStatus' :: RouteStatusCode -> RouteStatus

-- | Create a value of <a>RouteStatus</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:RouteStatus'</a>, <a>routeStatus_status</a> - The
--   current status for the route.
newRouteStatus :: RouteStatusCode -> RouteStatus

-- | An object that represents the service discovery information for a
--   virtual node.
--   
--   <i>See:</i> <a>newServiceDiscovery</a> smart constructor.
data ServiceDiscovery
ServiceDiscovery' :: Maybe AwsCloudMapServiceDiscovery -> Maybe DnsServiceDiscovery -> ServiceDiscovery

-- | Create a value of <a>ServiceDiscovery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:awsCloudMap:ServiceDiscovery'</a>,
--   <a>serviceDiscovery_awsCloudMap</a> - Specifies any Cloud Map
--   information for the virtual node.
--   
--   <a>$sel:dns:ServiceDiscovery'</a>, <a>serviceDiscovery_dns</a> -
--   Specifies the DNS information for the virtual node.
newServiceDiscovery :: ServiceDiscovery

-- | An object that represents the methods by which a subject alternative
--   name on a peer Transport Layer Security (TLS) certificate can be
--   matched.
--   
--   <i>See:</i> <a>newSubjectAlternativeNameMatchers</a> smart
--   constructor.
data SubjectAlternativeNameMatchers
SubjectAlternativeNameMatchers' :: [Text] -> SubjectAlternativeNameMatchers

-- | Create a value of <a>SubjectAlternativeNameMatchers</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exact:SubjectAlternativeNameMatchers'</a>,
--   <a>subjectAlternativeNameMatchers_exact</a> - The values sent must
--   match the specified values exactly.
newSubjectAlternativeNameMatchers :: SubjectAlternativeNameMatchers

-- | An object that represents the subject alternative names secured by the
--   certificate.
--   
--   <i>See:</i> <a>newSubjectAlternativeNames</a> smart constructor.
data SubjectAlternativeNames
SubjectAlternativeNames' :: SubjectAlternativeNameMatchers -> SubjectAlternativeNames

-- | Create a value of <a>SubjectAlternativeNames</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:match:SubjectAlternativeNames'</a>,
--   <a>subjectAlternativeNames_match</a> - An object that represents the
--   criteria for determining a SANs match.
newSubjectAlternativeNames :: SubjectAlternativeNameMatchers -> SubjectAlternativeNames

-- | Optional metadata that you apply to a resource to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Tag keys can have a maximum
--   character length of 128 characters, and tag values can have a maximum
--   length of 256 characters.
--   
--   <i>See:</i> <a>newTagRef</a> smart constructor.
data TagRef
TagRef' :: Text -> Text -> TagRef

-- | Create a value of <a>TagRef</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:TagRef'</a>, <a>tagRef_key</a> - One part of a key-value
--   pair that make up a tag. A <tt>key</tt> is a general label that acts
--   like a category for more specific tag values.
--   
--   <a>$sel:value:TagRef'</a>, <a>tagRef_value</a> - The optional part of
--   a key-value pair that make up a tag. A <tt>value</tt> acts as a
--   descriptor within a tag category (key).
newTagRef :: Text -> Text -> TagRef

-- | An object that represents a TCP route type.
--   
--   <i>See:</i> <a>newTcpRoute</a> smart constructor.
data TcpRoute
TcpRoute' :: Maybe TcpTimeout -> TcpRouteAction -> TcpRoute

-- | Create a value of <a>TcpRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeout:TcpRoute'</a>, <a>tcpRoute_timeout</a> - An object
--   that represents types of timeouts.
--   
--   <a>$sel:action:TcpRoute'</a>, <a>tcpRoute_action</a> - The action to
--   take if a match is determined.
newTcpRoute :: TcpRouteAction -> TcpRoute

-- | An object that represents the action to take if a match is determined.
--   
--   <i>See:</i> <a>newTcpRouteAction</a> smart constructor.
data TcpRouteAction
TcpRouteAction' :: NonEmpty WeightedTarget -> TcpRouteAction

-- | Create a value of <a>TcpRouteAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:weightedTargets:TcpRouteAction'</a>,
--   <a>tcpRouteAction_weightedTargets</a> - An object that represents the
--   targets that traffic is routed to when a request matches the route.
newTcpRouteAction :: NonEmpty WeightedTarget -> TcpRouteAction

-- | An object that represents types of timeouts.
--   
--   <i>See:</i> <a>newTcpTimeout</a> smart constructor.
data TcpTimeout
TcpTimeout' :: Maybe Duration -> TcpTimeout

-- | Create a value of <a>TcpTimeout</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idle:TcpTimeout'</a>, <a>tcpTimeout_idle</a> - An object that
--   represents an idle timeout. An idle timeout bounds the amount of time
--   that a connection may be idle. The default value is none.
newTcpTimeout :: TcpTimeout

-- | An object that represents how the proxy will validate its peer during
--   Transport Layer Security (TLS) negotiation.
--   
--   <i>See:</i> <a>newTlsValidationContext</a> smart constructor.
data TlsValidationContext
TlsValidationContext' :: Maybe SubjectAlternativeNames -> TlsValidationContextTrust -> TlsValidationContext

-- | Create a value of <a>TlsValidationContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subjectAlternativeNames:TlsValidationContext'</a>,
--   <a>tlsValidationContext_subjectAlternativeNames</a> - A reference to
--   an object that represents the SANs for a Transport Layer Security
--   (TLS) validation context.
--   
--   <a>$sel:trust:TlsValidationContext'</a>,
--   <a>tlsValidationContext_trust</a> - A reference to where to retrieve
--   the trust chain when validating a peer’s Transport Layer Security
--   (TLS) certificate.
newTlsValidationContext :: TlsValidationContextTrust -> TlsValidationContext

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for an Certificate Manager certificate.
--   
--   <i>See:</i> <a>newTlsValidationContextAcmTrust</a> smart constructor.
data TlsValidationContextAcmTrust
TlsValidationContextAcmTrust' :: NonEmpty Text -> TlsValidationContextAcmTrust

-- | Create a value of <a>TlsValidationContextAcmTrust</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityArns:TlsValidationContextAcmTrust'</a>,
--   <a>tlsValidationContextAcmTrust_certificateAuthorityArns</a> - One or
--   more ACM Amazon Resource Name (ARN)s.
newTlsValidationContextAcmTrust :: NonEmpty Text -> TlsValidationContextAcmTrust

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
--   
--   <i>See:</i> <a>newTlsValidationContextFileTrust</a> smart constructor.
data TlsValidationContextFileTrust
TlsValidationContextFileTrust' :: Text -> TlsValidationContextFileTrust

-- | Create a value of <a>TlsValidationContextFileTrust</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateChain:TlsValidationContextFileTrust'</a>,
--   <a>tlsValidationContextFileTrust_certificateChain</a> - The
--   certificate trust chain for a certificate stored on the file system of
--   the virtual node that the proxy is running on.
newTlsValidationContextFileTrust :: Text -> TlsValidationContextFileTrust

-- | An object that represents a Transport Layer Security (TLS) Secret
--   Discovery Service validation context trust. The proxy must be
--   configured with a local SDS provider via a Unix Domain Socket. See App
--   Mesh <a>TLS documentation</a> for more info.
--   
--   <i>See:</i> <a>newTlsValidationContextSdsTrust</a> smart constructor.
data TlsValidationContextSdsTrust
TlsValidationContextSdsTrust' :: Text -> TlsValidationContextSdsTrust

-- | Create a value of <a>TlsValidationContextSdsTrust</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretName:TlsValidationContextSdsTrust'</a>,
--   <a>tlsValidationContextSdsTrust_secretName</a> - A reference to an
--   object that represents the name of the secret for a Transport Layer
--   Security (TLS) Secret Discovery Service validation context trust.
newTlsValidationContextSdsTrust :: Text -> TlsValidationContextSdsTrust

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust.
--   
--   <i>See:</i> <a>newTlsValidationContextTrust</a> smart constructor.
data TlsValidationContextTrust
TlsValidationContextTrust' :: Maybe TlsValidationContextAcmTrust -> Maybe TlsValidationContextSdsTrust -> Maybe TlsValidationContextFileTrust -> TlsValidationContextTrust

-- | Create a value of <a>TlsValidationContextTrust</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acm:TlsValidationContextTrust'</a>,
--   <a>tlsValidationContextTrust_acm</a> - A reference to an object that
--   represents a Transport Layer Security (TLS) validation context trust
--   for an Certificate Manager certificate.
--   
--   <a>$sel:sds:TlsValidationContextTrust'</a>,
--   <a>tlsValidationContextTrust_sds</a> - A reference to an object that
--   represents a Transport Layer Security (TLS) Secret Discovery Service
--   validation context trust.
--   
--   <a>$sel:file:TlsValidationContextTrust'</a>,
--   <a>tlsValidationContextTrust_file</a> - An object that represents a
--   Transport Layer Security (TLS) validation context trust for a local
--   file.
newTlsValidationContextTrust :: TlsValidationContextTrust

-- | The access log configuration for a virtual gateway.
--   
--   <i>See:</i> <a>newVirtualGatewayAccessLog</a> smart constructor.
data VirtualGatewayAccessLog
VirtualGatewayAccessLog' :: Maybe VirtualGatewayFileAccessLog -> VirtualGatewayAccessLog

-- | Create a value of <a>VirtualGatewayAccessLog</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:file:VirtualGatewayAccessLog'</a>,
--   <a>virtualGatewayAccessLog_file</a> - The file object to send virtual
--   gateway access logs to.
newVirtualGatewayAccessLog :: VirtualGatewayAccessLog

-- | An object that represents the default properties for a backend.
--   
--   <i>See:</i> <a>newVirtualGatewayBackendDefaults</a> smart constructor.
data VirtualGatewayBackendDefaults
VirtualGatewayBackendDefaults' :: Maybe VirtualGatewayClientPolicy -> VirtualGatewayBackendDefaults

-- | Create a value of <a>VirtualGatewayBackendDefaults</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientPolicy:VirtualGatewayBackendDefaults'</a>,
--   <a>virtualGatewayBackendDefaults_clientPolicy</a> - A reference to an
--   object that represents a client policy.
newVirtualGatewayBackendDefaults :: VirtualGatewayBackendDefaults

-- | An object that represents a client policy.
--   
--   <i>See:</i> <a>newVirtualGatewayClientPolicy</a> smart constructor.
data VirtualGatewayClientPolicy
VirtualGatewayClientPolicy' :: Maybe VirtualGatewayClientPolicyTls -> VirtualGatewayClientPolicy

-- | Create a value of <a>VirtualGatewayClientPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tls:VirtualGatewayClientPolicy'</a>,
--   <a>virtualGatewayClientPolicy_tls</a> - A reference to an object that
--   represents a Transport Layer Security (TLS) client policy.
newVirtualGatewayClientPolicy :: VirtualGatewayClientPolicy

-- | An object that represents a Transport Layer Security (TLS) client
--   policy.
--   
--   <i>See:</i> <a>newVirtualGatewayClientPolicyTls</a> smart constructor.
data VirtualGatewayClientPolicyTls
VirtualGatewayClientPolicyTls' :: Maybe [Natural] -> Maybe VirtualGatewayClientTlsCertificate -> Maybe Bool -> VirtualGatewayTlsValidationContext -> VirtualGatewayClientPolicyTls

-- | Create a value of <a>VirtualGatewayClientPolicyTls</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ports:VirtualGatewayClientPolicyTls'</a>,
--   <a>virtualGatewayClientPolicyTls_ports</a> - One or more ports that
--   the policy is enforced for.
--   
--   <a>$sel:certificate:VirtualGatewayClientPolicyTls'</a>,
--   <a>virtualGatewayClientPolicyTls_certificate</a> - A reference to an
--   object that represents a virtual gateway's client's Transport Layer
--   Security (TLS) certificate.
--   
--   <a>$sel:enforce:VirtualGatewayClientPolicyTls'</a>,
--   <a>virtualGatewayClientPolicyTls_enforce</a> - Whether the policy is
--   enforced. The default is <tt>True</tt>, if a value isn't specified.
--   
--   <a>$sel:validation:VirtualGatewayClientPolicyTls'</a>,
--   <a>virtualGatewayClientPolicyTls_validation</a> - A reference to an
--   object that represents a Transport Layer Security (TLS) validation
--   context.
newVirtualGatewayClientPolicyTls :: VirtualGatewayTlsValidationContext -> VirtualGatewayClientPolicyTls

-- | An object that represents the virtual gateway's client's Transport
--   Layer Security (TLS) certificate.
--   
--   <i>See:</i> <a>newVirtualGatewayClientTlsCertificate</a> smart
--   constructor.
data VirtualGatewayClientTlsCertificate
VirtualGatewayClientTlsCertificate' :: Maybe VirtualGatewayListenerTlsSdsCertificate -> Maybe VirtualGatewayListenerTlsFileCertificate -> VirtualGatewayClientTlsCertificate

-- | Create a value of <a>VirtualGatewayClientTlsCertificate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sds:VirtualGatewayClientTlsCertificate'</a>,
--   <a>virtualGatewayClientTlsCertificate_sds</a> - A reference to an
--   object that represents a virtual gateway's client's Secret Discovery
--   Service certificate.
--   
--   <a>$sel:file:VirtualGatewayClientTlsCertificate'</a>,
--   <a>virtualGatewayClientTlsCertificate_file</a> - An object that
--   represents a local file certificate. The certificate must meet
--   specific requirements and you must have proxy authorization enabled.
--   For more information, see <a>Transport Layer Security (TLS)</a> .
newVirtualGatewayClientTlsCertificate :: VirtualGatewayClientTlsCertificate

-- | An object that represents the type of virtual gateway connection pool.
--   
--   Only one protocol is used at a time and should be the same protocol as
--   the one chosen under port mapping.
--   
--   If not present the default value for <tt>maxPendingRequests</tt> is
--   <tt>2147483647</tt>.
--   
--   <i>See:</i> <a>newVirtualGatewayConnectionPool</a> smart constructor.
data VirtualGatewayConnectionPool
VirtualGatewayConnectionPool' :: Maybe VirtualGatewayHttp2ConnectionPool -> Maybe VirtualGatewayGrpcConnectionPool -> Maybe VirtualGatewayHttpConnectionPool -> VirtualGatewayConnectionPool

-- | Create a value of <a>VirtualGatewayConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:http2:VirtualGatewayConnectionPool'</a>,
--   <a>virtualGatewayConnectionPool_http2</a> - An object that represents
--   a type of connection pool.
--   
--   <a>$sel:grpc:VirtualGatewayConnectionPool'</a>,
--   <a>virtualGatewayConnectionPool_grpc</a> - An object that represents a
--   type of connection pool.
--   
--   <a>$sel:http:VirtualGatewayConnectionPool'</a>,
--   <a>virtualGatewayConnectionPool_http</a> - An object that represents a
--   type of connection pool.
newVirtualGatewayConnectionPool :: VirtualGatewayConnectionPool

-- | An object that represents a virtual gateway returned by a describe
--   operation.
--   
--   <i>See:</i> <a>newVirtualGatewayData</a> smart constructor.
data VirtualGatewayData
VirtualGatewayData' :: Text -> ResourceMetadata -> VirtualGatewaySpec -> VirtualGatewayStatus -> Text -> VirtualGatewayData

-- | Create a value of <a>VirtualGatewayData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshName:VirtualGatewayData'</a>,
--   <a>virtualGatewayData_meshName</a> - The name of the service mesh that
--   the virtual gateway resides in.
--   
--   <a>$sel:metadata:VirtualGatewayData'</a>,
--   <a>virtualGatewayData_metadata</a> - Undocumented member.
--   
--   <a>$sel:spec:VirtualGatewayData'</a>, <a>virtualGatewayData_spec</a> -
--   The specifications of the virtual gateway.
--   
--   <a>$sel:status:VirtualGatewayData'</a>,
--   <a>virtualGatewayData_status</a> - The current status of the virtual
--   gateway.
--   
--   <a>$sel:virtualGatewayName:VirtualGatewayData'</a>,
--   <a>virtualGatewayData_virtualGatewayName</a> - The name of the virtual
--   gateway.
newVirtualGatewayData :: Text -> ResourceMetadata -> VirtualGatewaySpec -> VirtualGatewayStatus -> Text -> VirtualGatewayData

-- | An object that represents an access log file.
--   
--   <i>See:</i> <a>newVirtualGatewayFileAccessLog</a> smart constructor.
data VirtualGatewayFileAccessLog
VirtualGatewayFileAccessLog' :: Text -> VirtualGatewayFileAccessLog

-- | Create a value of <a>VirtualGatewayFileAccessLog</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:VirtualGatewayFileAccessLog'</a>,
--   <a>virtualGatewayFileAccessLog_path</a> - The file path to write
--   access logs to. You can use <tt>/dev/stdout</tt> to send access logs
--   to standard out and configure your Envoy container to use a log
--   driver, such as <tt>awslogs</tt>, to export the access logs to a log
--   storage service such as Amazon CloudWatch Logs. You can also specify a
--   path in the Envoy container's file system to write the files to disk.
newVirtualGatewayFileAccessLog :: Text -> VirtualGatewayFileAccessLog

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualGatewayGrpcConnectionPool</a> smart
--   constructor.
data VirtualGatewayGrpcConnectionPool
VirtualGatewayGrpcConnectionPool' :: Natural -> VirtualGatewayGrpcConnectionPool

-- | Create a value of <a>VirtualGatewayGrpcConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxRequests:VirtualGatewayGrpcConnectionPool'</a>,
--   <a>virtualGatewayGrpcConnectionPool_maxRequests</a> - Maximum number
--   of inflight requests Envoy can concurrently support across hosts in
--   upstream cluster.
newVirtualGatewayGrpcConnectionPool :: Natural -> VirtualGatewayGrpcConnectionPool

-- | An object that represents the health check policy for a virtual
--   gateway's listener.
--   
--   <i>See:</i> <a>newVirtualGatewayHealthCheckPolicy</a> smart
--   constructor.
data VirtualGatewayHealthCheckPolicy
VirtualGatewayHealthCheckPolicy' :: Maybe Text -> Maybe Natural -> Natural -> Natural -> VirtualGatewayPortProtocol -> Natural -> Natural -> VirtualGatewayHealthCheckPolicy

-- | Create a value of <a>VirtualGatewayHealthCheckPolicy</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_path</a> - The destination path for
--   the health check request. This value is only used if the specified
--   protocol is HTTP or HTTP/2. For any other protocol, this value is
--   ignored.
--   
--   <a>$sel:port:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_port</a> - The destination port for
--   the health check request. This port must match the port defined in the
--   PortMapping for the listener.
--   
--   <a>$sel:healthyThreshold:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_healthyThreshold</a> - The number
--   of consecutive successful health checks that must occur before
--   declaring the listener healthy.
--   
--   <a>$sel:intervalMillis:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_intervalMillis</a> - The time
--   period in milliseconds between each health check execution.
--   
--   <a>$sel:protocol:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_protocol</a> - The protocol for the
--   health check request. If you specify <tt>grpc</tt>, then your service
--   must conform to the <a>GRPC Health Checking Protocol</a>.
--   
--   <a>$sel:timeoutMillis:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_timeoutMillis</a> - The amount of
--   time to wait when receiving a response from the health check, in
--   milliseconds.
--   
--   <a>$sel:unhealthyThreshold:VirtualGatewayHealthCheckPolicy'</a>,
--   <a>virtualGatewayHealthCheckPolicy_unhealthyThreshold</a> - The number
--   of consecutive failed health checks that must occur before declaring a
--   virtual gateway unhealthy.
newVirtualGatewayHealthCheckPolicy :: Natural -> Natural -> VirtualGatewayPortProtocol -> Natural -> Natural -> VirtualGatewayHealthCheckPolicy

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualGatewayHttp2ConnectionPool</a> smart
--   constructor.
data VirtualGatewayHttp2ConnectionPool
VirtualGatewayHttp2ConnectionPool' :: Natural -> VirtualGatewayHttp2ConnectionPool

-- | Create a value of <a>VirtualGatewayHttp2ConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxRequests:VirtualGatewayHttp2ConnectionPool'</a>,
--   <a>virtualGatewayHttp2ConnectionPool_maxRequests</a> - Maximum number
--   of inflight requests Envoy can concurrently support across hosts in
--   upstream cluster.
newVirtualGatewayHttp2ConnectionPool :: Natural -> VirtualGatewayHttp2ConnectionPool

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualGatewayHttpConnectionPool</a> smart
--   constructor.
data VirtualGatewayHttpConnectionPool
VirtualGatewayHttpConnectionPool' :: Maybe Natural -> Natural -> VirtualGatewayHttpConnectionPool

-- | Create a value of <a>VirtualGatewayHttpConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxPendingRequests:VirtualGatewayHttpConnectionPool'</a>,
--   <a>virtualGatewayHttpConnectionPool_maxPendingRequests</a> - Number of
--   overflowing requests after <tt>max_connections</tt> Envoy will queue
--   to upstream cluster.
--   
--   <a>$sel:maxConnections:VirtualGatewayHttpConnectionPool'</a>,
--   <a>virtualGatewayHttpConnectionPool_maxConnections</a> - Maximum
--   number of outbound TCP connections Envoy can establish concurrently
--   with all hosts in upstream cluster.
newVirtualGatewayHttpConnectionPool :: Natural -> VirtualGatewayHttpConnectionPool

-- | An object that represents a listener for a virtual gateway.
--   
--   <i>See:</i> <a>newVirtualGatewayListener</a> smart constructor.
data VirtualGatewayListener
VirtualGatewayListener' :: Maybe VirtualGatewayHealthCheckPolicy -> Maybe VirtualGatewayConnectionPool -> Maybe VirtualGatewayListenerTls -> VirtualGatewayPortMapping -> VirtualGatewayListener

-- | Create a value of <a>VirtualGatewayListener</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthCheck:VirtualGatewayListener'</a>,
--   <a>virtualGatewayListener_healthCheck</a> - The health check
--   information for the listener.
--   
--   <a>$sel:connectionPool:VirtualGatewayListener'</a>,
--   <a>virtualGatewayListener_connectionPool</a> - The connection pool
--   information for the virtual gateway listener.
--   
--   <a>$sel:tls:VirtualGatewayListener'</a>,
--   <a>virtualGatewayListener_tls</a> - A reference to an object that
--   represents the Transport Layer Security (TLS) properties for the
--   listener.
--   
--   <a>$sel:portMapping:VirtualGatewayListener'</a>,
--   <a>virtualGatewayListener_portMapping</a> - The port mapping
--   information for the listener.
newVirtualGatewayListener :: VirtualGatewayPortMapping -> VirtualGatewayListener

-- | An object that represents the Transport Layer Security (TLS)
--   properties for a listener.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTls</a> smart constructor.
data VirtualGatewayListenerTls
VirtualGatewayListenerTls' :: Maybe VirtualGatewayListenerTlsValidationContext -> VirtualGatewayListenerTlsCertificate -> VirtualGatewayListenerTlsMode -> VirtualGatewayListenerTls

-- | Create a value of <a>VirtualGatewayListenerTls</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validation:VirtualGatewayListenerTls'</a>,
--   <a>virtualGatewayListenerTls_validation</a> - A reference to an object
--   that represents a virtual gateway's listener's Transport Layer
--   Security (TLS) validation context.
--   
--   <a>$sel:certificate:VirtualGatewayListenerTls'</a>,
--   <a>virtualGatewayListenerTls_certificate</a> - An object that
--   represents a Transport Layer Security (TLS) certificate.
--   
--   <a>$sel:mode:VirtualGatewayListenerTls'</a>,
--   <a>virtualGatewayListenerTls_mode</a> - Specify one of the following
--   modes.
--   
--   <ul>
--   <li>____STRICT – Listener only accepts connections with TLS
--   enabled.</li>
--   <li>____PERMISSIVE – Listener accepts connections with or without TLS
--   enabled.</li>
--   <li>____DISABLED – Listener only accepts connections without TLS.</li>
--   </ul>
newVirtualGatewayListenerTls :: VirtualGatewayListenerTlsCertificate -> VirtualGatewayListenerTlsMode -> VirtualGatewayListenerTls

-- | An object that represents an Certificate Manager certificate.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTlsAcmCertificate</a> smart
--   constructor.
data VirtualGatewayListenerTlsAcmCertificate
VirtualGatewayListenerTlsAcmCertificate' :: Text -> VirtualGatewayListenerTlsAcmCertificate

-- | Create a value of <a>VirtualGatewayListenerTlsAcmCertificate</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateArn:VirtualGatewayListenerTlsAcmCertificate'</a>,
--   <a>virtualGatewayListenerTlsAcmCertificate_certificateArn</a> - The
--   Amazon Resource Name (ARN) for the certificate. The certificate must
--   meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
newVirtualGatewayListenerTlsAcmCertificate :: Text -> VirtualGatewayListenerTlsAcmCertificate

-- | An object that represents a listener's Transport Layer Security (TLS)
--   certificate.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTlsCertificate</a> smart
--   constructor.
data VirtualGatewayListenerTlsCertificate
VirtualGatewayListenerTlsCertificate' :: Maybe VirtualGatewayListenerTlsAcmCertificate -> Maybe VirtualGatewayListenerTlsSdsCertificate -> Maybe VirtualGatewayListenerTlsFileCertificate -> VirtualGatewayListenerTlsCertificate

-- | Create a value of <a>VirtualGatewayListenerTlsCertificate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acm:VirtualGatewayListenerTlsCertificate'</a>,
--   <a>virtualGatewayListenerTlsCertificate_acm</a> - A reference to an
--   object that represents an Certificate Manager certificate.
--   
--   <a>$sel:sds:VirtualGatewayListenerTlsCertificate'</a>,
--   <a>virtualGatewayListenerTlsCertificate_sds</a> - A reference to an
--   object that represents a virtual gateway's listener's Secret Discovery
--   Service certificate.
--   
--   <a>$sel:file:VirtualGatewayListenerTlsCertificate'</a>,
--   <a>virtualGatewayListenerTlsCertificate_file</a> - A reference to an
--   object that represents a local file certificate.
newVirtualGatewayListenerTlsCertificate :: VirtualGatewayListenerTlsCertificate

-- | An object that represents a local file certificate. The certificate
--   must meet specific requirements and you must have proxy authorization
--   enabled. For more information, see <a>Transport Layer Security
--   (TLS)</a>.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTlsFileCertificate</a> smart
--   constructor.
data VirtualGatewayListenerTlsFileCertificate
VirtualGatewayListenerTlsFileCertificate' :: Text -> Text -> VirtualGatewayListenerTlsFileCertificate

-- | Create a value of <a>VirtualGatewayListenerTlsFileCertificate</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateChain:VirtualGatewayListenerTlsFileCertificate'</a>,
--   <a>virtualGatewayListenerTlsFileCertificate_certificateChain</a> - The
--   certificate chain for the certificate.
--   
--   <a>$sel:privateKey:VirtualGatewayListenerTlsFileCertificate'</a>,
--   <a>virtualGatewayListenerTlsFileCertificate_privateKey</a> - The
--   private key for a certificate stored on the file system of the mesh
--   endpoint that the proxy is running on.
newVirtualGatewayListenerTlsFileCertificate :: Text -> Text -> VirtualGatewayListenerTlsFileCertificate

-- | An object that represents the virtual gateway's listener's Secret
--   Discovery Service certificate.The proxy must be configured with a
--   local SDS provider via a Unix Domain Socket. See App Mesh<a>TLS
--   documentation</a> for more info.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTlsSdsCertificate</a> smart
--   constructor.
data VirtualGatewayListenerTlsSdsCertificate
VirtualGatewayListenerTlsSdsCertificate' :: Text -> VirtualGatewayListenerTlsSdsCertificate

-- | Create a value of <a>VirtualGatewayListenerTlsSdsCertificate</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretName:VirtualGatewayListenerTlsSdsCertificate'</a>,
--   <a>virtualGatewayListenerTlsSdsCertificate_secretName</a> - A
--   reference to an object that represents the name of the secret secret
--   requested from the Secret Discovery Service provider representing
--   Transport Layer Security (TLS) materials like a certificate or
--   certificate chain.
newVirtualGatewayListenerTlsSdsCertificate :: Text -> VirtualGatewayListenerTlsSdsCertificate

-- | An object that represents a virtual gateway's listener's Transport
--   Layer Security (TLS) validation context.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTlsValidationContext</a> smart
--   constructor.
data VirtualGatewayListenerTlsValidationContext
VirtualGatewayListenerTlsValidationContext' :: Maybe SubjectAlternativeNames -> VirtualGatewayListenerTlsValidationContextTrust -> VirtualGatewayListenerTlsValidationContext

-- | Create a value of <a>VirtualGatewayListenerTlsValidationContext</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:subjectAlternativeNames:VirtualGatewayListenerTlsValidationContext'</a>,
--   <a>virtualGatewayListenerTlsValidationContext_subjectAlternativeNames</a>
--   - A reference to an object that represents the SANs for a virtual
--   gateway listener's Transport Layer Security (TLS) validation context.
--   
--   <a>$sel:trust:VirtualGatewayListenerTlsValidationContext'</a>,
--   <a>virtualGatewayListenerTlsValidationContext_trust</a> - A reference
--   to where to retrieve the trust chain when validating a peer’s
--   Transport Layer Security (TLS) certificate.
newVirtualGatewayListenerTlsValidationContext :: VirtualGatewayListenerTlsValidationContextTrust -> VirtualGatewayListenerTlsValidationContext

-- | An object that represents a virtual gateway's listener's Transport
--   Layer Security (TLS) validation context trust.
--   
--   <i>See:</i> <a>newVirtualGatewayListenerTlsValidationContextTrust</a>
--   smart constructor.
data VirtualGatewayListenerTlsValidationContextTrust
VirtualGatewayListenerTlsValidationContextTrust' :: Maybe VirtualGatewayTlsValidationContextSdsTrust -> Maybe VirtualGatewayTlsValidationContextFileTrust -> VirtualGatewayListenerTlsValidationContextTrust

-- | Create a value of
--   <a>VirtualGatewayListenerTlsValidationContextTrust</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sds:VirtualGatewayListenerTlsValidationContextTrust'</a>,
--   <a>virtualGatewayListenerTlsValidationContextTrust_sds</a> - A
--   reference to an object that represents a virtual gateway's listener's
--   Transport Layer Security (TLS) Secret Discovery Service validation
--   context trust.
--   
--   <a>$sel:file:VirtualGatewayListenerTlsValidationContextTrust'</a>,
--   <a>virtualGatewayListenerTlsValidationContextTrust_file</a> - An
--   object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
newVirtualGatewayListenerTlsValidationContextTrust :: VirtualGatewayListenerTlsValidationContextTrust

-- | An object that represents logging information.
--   
--   <i>See:</i> <a>newVirtualGatewayLogging</a> smart constructor.
data VirtualGatewayLogging
VirtualGatewayLogging' :: Maybe VirtualGatewayAccessLog -> VirtualGatewayLogging

-- | Create a value of <a>VirtualGatewayLogging</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessLog:VirtualGatewayLogging'</a>,
--   <a>virtualGatewayLogging_accessLog</a> - The access log configuration.
newVirtualGatewayLogging :: VirtualGatewayLogging

-- | An object that represents a port mapping.
--   
--   <i>See:</i> <a>newVirtualGatewayPortMapping</a> smart constructor.
data VirtualGatewayPortMapping
VirtualGatewayPortMapping' :: Natural -> VirtualGatewayPortProtocol -> VirtualGatewayPortMapping

-- | Create a value of <a>VirtualGatewayPortMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:port:VirtualGatewayPortMapping'</a>,
--   <a>virtualGatewayPortMapping_port</a> - The port used for the port
--   mapping. Specify one protocol.
--   
--   <a>$sel:protocol:VirtualGatewayPortMapping'</a>,
--   <a>virtualGatewayPortMapping_protocol</a> - The protocol used for the
--   port mapping.
newVirtualGatewayPortMapping :: Natural -> VirtualGatewayPortProtocol -> VirtualGatewayPortMapping

-- | An object that represents a virtual gateway returned by a list
--   operation.
--   
--   <i>See:</i> <a>newVirtualGatewayRef</a> smart constructor.
data VirtualGatewayRef
VirtualGatewayRef' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Integer -> Text -> VirtualGatewayRef

-- | Create a value of <a>VirtualGatewayRef</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:VirtualGatewayRef'</a>, <a>virtualGatewayRef_arn</a> - The
--   full Amazon Resource Name (ARN) for the resource.
--   
--   <a>$sel:createdAt:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:lastUpdatedAt:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_lastUpdatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was last updated.
--   
--   <a>$sel:meshName:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_meshName</a> - The name of the service mesh that
--   the resource resides in.
--   
--   <a>$sel:meshOwner:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_resourceOwner</a> - The AWS IAM account ID of the
--   resource owner. If the account ID is not your own, then it's the ID of
--   the mesh owner or of another account that the mesh is shared with. For
--   more information about mesh sharing, see <a>Working with shared
--   meshes</a>.
--   
--   <a>$sel:version:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_version</a> - The version of the resource.
--   Resources are created at version 1, and this version is incremented
--   each time that they're updated.
--   
--   <a>$sel:virtualGatewayName:VirtualGatewayRef'</a>,
--   <a>virtualGatewayRef_virtualGatewayName</a> - The name of the
--   resource.
newVirtualGatewayRef :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Integer -> Text -> VirtualGatewayRef

-- | An object that represents the specification of a service mesh
--   resource.
--   
--   <i>See:</i> <a>newVirtualGatewaySpec</a> smart constructor.
data VirtualGatewaySpec
VirtualGatewaySpec' :: Maybe VirtualGatewayBackendDefaults -> Maybe VirtualGatewayLogging -> [VirtualGatewayListener] -> VirtualGatewaySpec

-- | Create a value of <a>VirtualGatewaySpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backendDefaults:VirtualGatewaySpec'</a>,
--   <a>virtualGatewaySpec_backendDefaults</a> - A reference to an object
--   that represents the defaults for backends.
--   
--   <a>$sel:logging:VirtualGatewaySpec'</a>,
--   <a>virtualGatewaySpec_logging</a> - Undocumented member.
--   
--   <a>$sel:listeners:VirtualGatewaySpec'</a>,
--   <a>virtualGatewaySpec_listeners</a> - The listeners that the mesh
--   endpoint is expected to receive inbound traffic from. You can specify
--   one listener.
newVirtualGatewaySpec :: VirtualGatewaySpec

-- | An object that represents the status of the mesh resource.
--   
--   <i>See:</i> <a>newVirtualGatewayStatus</a> smart constructor.
data VirtualGatewayStatus
VirtualGatewayStatus' :: VirtualGatewayStatusCode -> VirtualGatewayStatus

-- | Create a value of <a>VirtualGatewayStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VirtualGatewayStatus'</a>,
--   <a>virtualGatewayStatus_status</a> - The current status.
newVirtualGatewayStatus :: VirtualGatewayStatusCode -> VirtualGatewayStatus

-- | An object that represents a Transport Layer Security (TLS) validation
--   context.
--   
--   <i>See:</i> <a>newVirtualGatewayTlsValidationContext</a> smart
--   constructor.
data VirtualGatewayTlsValidationContext
VirtualGatewayTlsValidationContext' :: Maybe SubjectAlternativeNames -> VirtualGatewayTlsValidationContextTrust -> VirtualGatewayTlsValidationContext

-- | Create a value of <a>VirtualGatewayTlsValidationContext</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:subjectAlternativeNames:VirtualGatewayTlsValidationContext'</a>,
--   <a>virtualGatewayTlsValidationContext_subjectAlternativeNames</a> - A
--   reference to an object that represents the SANs for a virtual
--   gateway's listener's Transport Layer Security (TLS) validation
--   context.
--   
--   <a>$sel:trust:VirtualGatewayTlsValidationContext'</a>,
--   <a>virtualGatewayTlsValidationContext_trust</a> - A reference to where
--   to retrieve the trust chain when validating a peer’s Transport Layer
--   Security (TLS) certificate.
newVirtualGatewayTlsValidationContext :: VirtualGatewayTlsValidationContextTrust -> VirtualGatewayTlsValidationContext

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for an Certificate Manager certificate.
--   
--   <i>See:</i> <a>newVirtualGatewayTlsValidationContextAcmTrust</a> smart
--   constructor.
data VirtualGatewayTlsValidationContextAcmTrust
VirtualGatewayTlsValidationContextAcmTrust' :: NonEmpty Text -> VirtualGatewayTlsValidationContextAcmTrust

-- | Create a value of <a>VirtualGatewayTlsValidationContextAcmTrust</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateAuthorityArns:VirtualGatewayTlsValidationContextAcmTrust'</a>,
--   <a>virtualGatewayTlsValidationContextAcmTrust_certificateAuthorityArns</a>
--   - One or more ACM Amazon Resource Name (ARN)s.
newVirtualGatewayTlsValidationContextAcmTrust :: NonEmpty Text -> VirtualGatewayTlsValidationContextAcmTrust

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust for a local file.
--   
--   <i>See:</i> <a>newVirtualGatewayTlsValidationContextFileTrust</a>
--   smart constructor.
data VirtualGatewayTlsValidationContextFileTrust
VirtualGatewayTlsValidationContextFileTrust' :: Text -> VirtualGatewayTlsValidationContextFileTrust

-- | Create a value of <a>VirtualGatewayTlsValidationContextFileTrust</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateChain:VirtualGatewayTlsValidationContextFileTrust'</a>,
--   <a>virtualGatewayTlsValidationContextFileTrust_certificateChain</a> -
--   The certificate trust chain for a certificate stored on the file
--   system of the virtual node that the proxy is running on.
newVirtualGatewayTlsValidationContextFileTrust :: Text -> VirtualGatewayTlsValidationContextFileTrust

-- | An object that represents a virtual gateway's listener's Transport
--   Layer Security (TLS) Secret Discovery Service validation context
--   trust. The proxy must be configured with a local SDS provider via a
--   Unix Domain Socket. See App Mesh <a>TLS documentation</a> for more
--   info.
--   
--   <i>See:</i> <a>newVirtualGatewayTlsValidationContextSdsTrust</a> smart
--   constructor.
data VirtualGatewayTlsValidationContextSdsTrust
VirtualGatewayTlsValidationContextSdsTrust' :: Text -> VirtualGatewayTlsValidationContextSdsTrust

-- | Create a value of <a>VirtualGatewayTlsValidationContextSdsTrust</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretName:VirtualGatewayTlsValidationContextSdsTrust'</a>,
--   <a>virtualGatewayTlsValidationContextSdsTrust_secretName</a> - A
--   reference to an object that represents the name of the secret for a
--   virtual gateway's Transport Layer Security (TLS) Secret Discovery
--   Service validation context trust.
newVirtualGatewayTlsValidationContextSdsTrust :: Text -> VirtualGatewayTlsValidationContextSdsTrust

-- | An object that represents a Transport Layer Security (TLS) validation
--   context trust.
--   
--   <i>See:</i> <a>newVirtualGatewayTlsValidationContextTrust</a> smart
--   constructor.
data VirtualGatewayTlsValidationContextTrust
VirtualGatewayTlsValidationContextTrust' :: Maybe VirtualGatewayTlsValidationContextAcmTrust -> Maybe VirtualGatewayTlsValidationContextSdsTrust -> Maybe VirtualGatewayTlsValidationContextFileTrust -> VirtualGatewayTlsValidationContextTrust

-- | Create a value of <a>VirtualGatewayTlsValidationContextTrust</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acm:VirtualGatewayTlsValidationContextTrust'</a>,
--   <a>virtualGatewayTlsValidationContextTrust_acm</a> - A reference to an
--   object that represents a Transport Layer Security (TLS) validation
--   context trust for an Certificate Manager certificate.
--   
--   <a>$sel:sds:VirtualGatewayTlsValidationContextTrust'</a>,
--   <a>virtualGatewayTlsValidationContextTrust_sds</a> - A reference to an
--   object that represents a virtual gateway's Transport Layer Security
--   (TLS) Secret Discovery Service validation context trust.
--   
--   <a>$sel:file:VirtualGatewayTlsValidationContextTrust'</a>,
--   <a>virtualGatewayTlsValidationContextTrust_file</a> - An object that
--   represents a Transport Layer Security (TLS) validation context trust
--   for a local file.
newVirtualGatewayTlsValidationContextTrust :: VirtualGatewayTlsValidationContextTrust

-- | An object that represents the type of virtual node connection pool.
--   
--   Only one protocol is used at a time and should be the same protocol as
--   the one chosen under port mapping.
--   
--   If not present the default value for <tt>maxPendingRequests</tt> is
--   <tt>2147483647</tt>.
--   
--   <i>See:</i> <a>newVirtualNodeConnectionPool</a> smart constructor.
data VirtualNodeConnectionPool
VirtualNodeConnectionPool' :: Maybe VirtualNodeHttp2ConnectionPool -> Maybe VirtualNodeGrpcConnectionPool -> Maybe VirtualNodeTcpConnectionPool -> Maybe VirtualNodeHttpConnectionPool -> VirtualNodeConnectionPool

-- | Create a value of <a>VirtualNodeConnectionPool</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:http2:VirtualNodeConnectionPool'</a>,
--   <a>virtualNodeConnectionPool_http2</a> - An object that represents a
--   type of connection pool.
--   
--   <a>$sel:grpc:VirtualNodeConnectionPool'</a>,
--   <a>virtualNodeConnectionPool_grpc</a> - An object that represents a
--   type of connection pool.
--   
--   <a>$sel:tcp:VirtualNodeConnectionPool'</a>,
--   <a>virtualNodeConnectionPool_tcp</a> - An object that represents a
--   type of connection pool.
--   
--   <a>$sel:http:VirtualNodeConnectionPool'</a>,
--   <a>virtualNodeConnectionPool_http</a> - An object that represents a
--   type of connection pool.
newVirtualNodeConnectionPool :: VirtualNodeConnectionPool

-- | An object that represents a virtual node returned by a describe
--   operation.
--   
--   <i>See:</i> <a>newVirtualNodeData</a> smart constructor.
data VirtualNodeData
VirtualNodeData' :: Text -> ResourceMetadata -> VirtualNodeSpec -> VirtualNodeStatus -> Text -> VirtualNodeData

-- | Create a value of <a>VirtualNodeData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshName:VirtualNodeData'</a>, <a>virtualNodeData_meshName</a>
--   - The name of the service mesh that the virtual node resides in.
--   
--   <a>$sel:metadata:VirtualNodeData'</a>, <a>virtualNodeData_metadata</a>
--   - The associated metadata for the virtual node.
--   
--   <a>$sel:spec:VirtualNodeData'</a>, <a>virtualNodeData_spec</a> - The
--   specifications of the virtual node.
--   
--   <a>$sel:status:VirtualNodeData'</a>, <a>virtualNodeData_status</a> -
--   The current status for the virtual node.
--   
--   <a>$sel:virtualNodeName:VirtualNodeData'</a>,
--   <a>virtualNodeData_virtualNodeName</a> - The name of the virtual node.
newVirtualNodeData :: Text -> ResourceMetadata -> VirtualNodeSpec -> VirtualNodeStatus -> Text -> VirtualNodeData

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualNodeGrpcConnectionPool</a> smart constructor.
data VirtualNodeGrpcConnectionPool
VirtualNodeGrpcConnectionPool' :: Natural -> VirtualNodeGrpcConnectionPool

-- | Create a value of <a>VirtualNodeGrpcConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxRequests:VirtualNodeGrpcConnectionPool'</a>,
--   <a>virtualNodeGrpcConnectionPool_maxRequests</a> - Maximum number of
--   inflight requests Envoy can concurrently support across hosts in
--   upstream cluster.
newVirtualNodeGrpcConnectionPool :: Natural -> VirtualNodeGrpcConnectionPool

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualNodeHttp2ConnectionPool</a> smart
--   constructor.
data VirtualNodeHttp2ConnectionPool
VirtualNodeHttp2ConnectionPool' :: Natural -> VirtualNodeHttp2ConnectionPool

-- | Create a value of <a>VirtualNodeHttp2ConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxRequests:VirtualNodeHttp2ConnectionPool'</a>,
--   <a>virtualNodeHttp2ConnectionPool_maxRequests</a> - Maximum number of
--   inflight requests Envoy can concurrently support across hosts in
--   upstream cluster.
newVirtualNodeHttp2ConnectionPool :: Natural -> VirtualNodeHttp2ConnectionPool

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualNodeHttpConnectionPool</a> smart constructor.
data VirtualNodeHttpConnectionPool
VirtualNodeHttpConnectionPool' :: Maybe Natural -> Natural -> VirtualNodeHttpConnectionPool

-- | Create a value of <a>VirtualNodeHttpConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxPendingRequests:VirtualNodeHttpConnectionPool'</a>,
--   <a>virtualNodeHttpConnectionPool_maxPendingRequests</a> - Number of
--   overflowing requests after <tt>max_connections</tt> Envoy will queue
--   to upstream cluster.
--   
--   <a>$sel:maxConnections:VirtualNodeHttpConnectionPool'</a>,
--   <a>virtualNodeHttpConnectionPool_maxConnections</a> - Maximum number
--   of outbound TCP connections Envoy can establish concurrently with all
--   hosts in upstream cluster.
newVirtualNodeHttpConnectionPool :: Natural -> VirtualNodeHttpConnectionPool

-- | An object that represents a virtual node returned by a list operation.
--   
--   <i>See:</i> <a>newVirtualNodeRef</a> smart constructor.
data VirtualNodeRef
VirtualNodeRef' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Integer -> Text -> VirtualNodeRef

-- | Create a value of <a>VirtualNodeRef</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:VirtualNodeRef'</a>, <a>virtualNodeRef_arn</a> - The full
--   Amazon Resource Name (ARN) for the virtual node.
--   
--   <a>$sel:createdAt:VirtualNodeRef'</a>, <a>virtualNodeRef_createdAt</a>
--   - The Unix epoch timestamp in seconds for when the resource was
--   created.
--   
--   <a>$sel:lastUpdatedAt:VirtualNodeRef'</a>,
--   <a>virtualNodeRef_lastUpdatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was last updated.
--   
--   <a>$sel:meshName:VirtualNodeRef'</a>, <a>virtualNodeRef_meshName</a> -
--   The name of the service mesh that the virtual node resides in.
--   
--   <a>$sel:meshOwner:VirtualNodeRef'</a>, <a>virtualNodeRef_meshOwner</a>
--   - The AWS IAM account ID of the service mesh owner. If the account ID
--   is not your own, then it's the ID of the account that shared the mesh
--   with your account. For more information about mesh sharing, see
--   <a>Working with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:VirtualNodeRef'</a>,
--   <a>virtualNodeRef_resourceOwner</a> - The AWS IAM account ID of the
--   resource owner. If the account ID is not your own, then it's the ID of
--   the mesh owner or of another account that the mesh is shared with. For
--   more information about mesh sharing, see <a>Working with shared
--   meshes</a>.
--   
--   <a>$sel:version:VirtualNodeRef'</a>, <a>virtualNodeRef_version</a> -
--   The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
--   
--   <a>$sel:virtualNodeName:VirtualNodeRef'</a>,
--   <a>virtualNodeRef_virtualNodeName</a> - The name of the virtual node.
newVirtualNodeRef :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Integer -> Text -> VirtualNodeRef

-- | An object that represents a virtual node service provider.
--   
--   <i>See:</i> <a>newVirtualNodeServiceProvider</a> smart constructor.
data VirtualNodeServiceProvider
VirtualNodeServiceProvider' :: Text -> VirtualNodeServiceProvider

-- | Create a value of <a>VirtualNodeServiceProvider</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualNodeName:VirtualNodeServiceProvider'</a>,
--   <a>virtualNodeServiceProvider_virtualNodeName</a> - The name of the
--   virtual node that is acting as a service provider.
newVirtualNodeServiceProvider :: Text -> VirtualNodeServiceProvider

-- | An object that represents the specification of a virtual node.
--   
--   <i>See:</i> <a>newVirtualNodeSpec</a> smart constructor.
data VirtualNodeSpec
VirtualNodeSpec' :: Maybe [Backend] -> Maybe BackendDefaults -> Maybe ServiceDiscovery -> Maybe [Listener] -> Maybe Logging -> VirtualNodeSpec

-- | Create a value of <a>VirtualNodeSpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backends:VirtualNodeSpec'</a>, <a>virtualNodeSpec_backends</a>
--   - The backends that the virtual node is expected to send outbound
--   traffic to.
--   
--   <a>$sel:backendDefaults:VirtualNodeSpec'</a>,
--   <a>virtualNodeSpec_backendDefaults</a> - A reference to an object that
--   represents the defaults for backends.
--   
--   <a>$sel:serviceDiscovery:VirtualNodeSpec'</a>,
--   <a>virtualNodeSpec_serviceDiscovery</a> - The service discovery
--   information for the virtual node. If your virtual node does not expect
--   ingress traffic, you can omit this parameter. If you specify a
--   <tt>listener</tt>, then you must specify service discovery
--   information.
--   
--   <a>$sel:listeners:VirtualNodeSpec'</a>,
--   <a>virtualNodeSpec_listeners</a> - The listener that the virtual node
--   is expected to receive inbound traffic from. You can specify one
--   listener.
--   
--   <a>$sel:logging:VirtualNodeSpec'</a>, <a>virtualNodeSpec_logging</a> -
--   The inbound and outbound access logging information for the virtual
--   node.
newVirtualNodeSpec :: VirtualNodeSpec

-- | An object that represents the current status of the virtual node.
--   
--   <i>See:</i> <a>newVirtualNodeStatus</a> smart constructor.
data VirtualNodeStatus
VirtualNodeStatus' :: VirtualNodeStatusCode -> VirtualNodeStatus

-- | Create a value of <a>VirtualNodeStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VirtualNodeStatus'</a>, <a>virtualNodeStatus_status</a>
--   - The current status of the virtual node.
newVirtualNodeStatus :: VirtualNodeStatusCode -> VirtualNodeStatus

-- | An object that represents a type of connection pool.
--   
--   <i>See:</i> <a>newVirtualNodeTcpConnectionPool</a> smart constructor.
data VirtualNodeTcpConnectionPool
VirtualNodeTcpConnectionPool' :: Natural -> VirtualNodeTcpConnectionPool

-- | Create a value of <a>VirtualNodeTcpConnectionPool</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxConnections:VirtualNodeTcpConnectionPool'</a>,
--   <a>virtualNodeTcpConnectionPool_maxConnections</a> - Maximum number of
--   outbound TCP connections Envoy can establish concurrently with all
--   hosts in upstream cluster.
newVirtualNodeTcpConnectionPool :: Natural -> VirtualNodeTcpConnectionPool

-- | An object that represents a virtual router returned by a describe
--   operation.
--   
--   <i>See:</i> <a>newVirtualRouterData</a> smart constructor.
data VirtualRouterData
VirtualRouterData' :: Text -> ResourceMetadata -> VirtualRouterSpec -> VirtualRouterStatus -> Text -> VirtualRouterData

-- | Create a value of <a>VirtualRouterData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshName:VirtualRouterData'</a>,
--   <a>virtualRouterData_meshName</a> - The name of the service mesh that
--   the virtual router resides in.
--   
--   <a>$sel:metadata:VirtualRouterData'</a>,
--   <a>virtualRouterData_metadata</a> - The associated metadata for the
--   virtual router.
--   
--   <a>$sel:spec:VirtualRouterData'</a>, <a>virtualRouterData_spec</a> -
--   The specifications of the virtual router.
--   
--   <a>$sel:status:VirtualRouterData'</a>, <a>virtualRouterData_status</a>
--   - The current status of the virtual router.
--   
--   <a>$sel:virtualRouterName:VirtualRouterData'</a>,
--   <a>virtualRouterData_virtualRouterName</a> - The name of the virtual
--   router.
newVirtualRouterData :: Text -> ResourceMetadata -> VirtualRouterSpec -> VirtualRouterStatus -> Text -> VirtualRouterData

-- | An object that represents a virtual router listener.
--   
--   <i>See:</i> <a>newVirtualRouterListener</a> smart constructor.
data VirtualRouterListener
VirtualRouterListener' :: PortMapping -> VirtualRouterListener

-- | Create a value of <a>VirtualRouterListener</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:portMapping:VirtualRouterListener'</a>,
--   <a>virtualRouterListener_portMapping</a> - Undocumented member.
newVirtualRouterListener :: PortMapping -> VirtualRouterListener

-- | An object that represents a virtual router returned by a list
--   operation.
--   
--   <i>See:</i> <a>newVirtualRouterRef</a> smart constructor.
data VirtualRouterRef
VirtualRouterRef' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Integer -> Text -> VirtualRouterRef

-- | Create a value of <a>VirtualRouterRef</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:VirtualRouterRef'</a>, <a>virtualRouterRef_arn</a> - The
--   full Amazon Resource Name (ARN) for the virtual router.
--   
--   <a>$sel:createdAt:VirtualRouterRef'</a>,
--   <a>virtualRouterRef_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:lastUpdatedAt:VirtualRouterRef'</a>,
--   <a>virtualRouterRef_lastUpdatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was last updated.
--   
--   <a>$sel:meshName:VirtualRouterRef'</a>,
--   <a>virtualRouterRef_meshName</a> - The name of the service mesh that
--   the virtual router resides in.
--   
--   <a>$sel:meshOwner:VirtualRouterRef'</a>,
--   <a>virtualRouterRef_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:VirtualRouterRef'</a>,
--   <a>virtualRouterRef_resourceOwner</a> - The AWS IAM account ID of the
--   resource owner. If the account ID is not your own, then it's the ID of
--   the mesh owner or of another account that the mesh is shared with. For
--   more information about mesh sharing, see <a>Working with shared
--   meshes</a>.
--   
--   <a>$sel:version:VirtualRouterRef'</a>, <a>virtualRouterRef_version</a>
--   - The version of the resource. Resources are created at version 1, and
--   this version is incremented each time that they're updated.
--   
--   <a>$sel:virtualRouterName:VirtualRouterRef'</a>,
--   <a>virtualRouterRef_virtualRouterName</a> - The name of the virtual
--   router.
newVirtualRouterRef :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Integer -> Text -> VirtualRouterRef

-- | An object that represents a virtual node service provider.
--   
--   <i>See:</i> <a>newVirtualRouterServiceProvider</a> smart constructor.
data VirtualRouterServiceProvider
VirtualRouterServiceProvider' :: Text -> VirtualRouterServiceProvider

-- | Create a value of <a>VirtualRouterServiceProvider</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualRouterName:VirtualRouterServiceProvider'</a>,
--   <a>virtualRouterServiceProvider_virtualRouterName</a> - The name of
--   the virtual router that is acting as a service provider.
newVirtualRouterServiceProvider :: Text -> VirtualRouterServiceProvider

-- | An object that represents the specification of a virtual router.
--   
--   <i>See:</i> <a>newVirtualRouterSpec</a> smart constructor.
data VirtualRouterSpec
VirtualRouterSpec' :: Maybe (NonEmpty VirtualRouterListener) -> VirtualRouterSpec

-- | Create a value of <a>VirtualRouterSpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:listeners:VirtualRouterSpec'</a>,
--   <a>virtualRouterSpec_listeners</a> - The listeners that the virtual
--   router is expected to receive inbound traffic from. You can specify
--   one listener.
newVirtualRouterSpec :: VirtualRouterSpec

-- | An object that represents the status of a virtual router.
--   
--   <i>See:</i> <a>newVirtualRouterStatus</a> smart constructor.
data VirtualRouterStatus
VirtualRouterStatus' :: VirtualRouterStatusCode -> VirtualRouterStatus

-- | Create a value of <a>VirtualRouterStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VirtualRouterStatus'</a>,
--   <a>virtualRouterStatus_status</a> - The current status of the virtual
--   router.
newVirtualRouterStatus :: VirtualRouterStatusCode -> VirtualRouterStatus

-- | An object that represents a virtual service backend for a virtual
--   node.
--   
--   <i>See:</i> <a>newVirtualServiceBackend</a> smart constructor.
data VirtualServiceBackend
VirtualServiceBackend' :: Maybe ClientPolicy -> Text -> VirtualServiceBackend

-- | Create a value of <a>VirtualServiceBackend</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientPolicy:VirtualServiceBackend'</a>,
--   <a>virtualServiceBackend_clientPolicy</a> - A reference to an object
--   that represents the client policy for a backend.
--   
--   <a>$sel:virtualServiceName:VirtualServiceBackend'</a>,
--   <a>virtualServiceBackend_virtualServiceName</a> - The name of the
--   virtual service that is acting as a virtual node backend.
newVirtualServiceBackend :: Text -> VirtualServiceBackend

-- | An object that represents a virtual service returned by a describe
--   operation.
--   
--   <i>See:</i> <a>newVirtualServiceData</a> smart constructor.
data VirtualServiceData
VirtualServiceData' :: Text -> ResourceMetadata -> VirtualServiceSpec -> VirtualServiceStatus -> Text -> VirtualServiceData

-- | Create a value of <a>VirtualServiceData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:meshName:VirtualServiceData'</a>,
--   <a>virtualServiceData_meshName</a> - The name of the service mesh that
--   the virtual service resides in.
--   
--   <a>$sel:metadata:VirtualServiceData'</a>,
--   <a>virtualServiceData_metadata</a> - Undocumented member.
--   
--   <a>$sel:spec:VirtualServiceData'</a>, <a>virtualServiceData_spec</a> -
--   The specifications of the virtual service.
--   
--   <a>$sel:status:VirtualServiceData'</a>,
--   <a>virtualServiceData_status</a> - The current status of the virtual
--   service.
--   
--   <a>$sel:virtualServiceName:VirtualServiceData'</a>,
--   <a>virtualServiceData_virtualServiceName</a> - The name of the virtual
--   service.
newVirtualServiceData :: Text -> ResourceMetadata -> VirtualServiceSpec -> VirtualServiceStatus -> Text -> VirtualServiceData

-- | An object that represents the provider for a virtual service.
--   
--   <i>See:</i> <a>newVirtualServiceProvider</a> smart constructor.
data VirtualServiceProvider
VirtualServiceProvider' :: Maybe VirtualRouterServiceProvider -> Maybe VirtualNodeServiceProvider -> VirtualServiceProvider

-- | Create a value of <a>VirtualServiceProvider</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualRouter:VirtualServiceProvider'</a>,
--   <a>virtualServiceProvider_virtualRouter</a> - The virtual router
--   associated with a virtual service.
--   
--   <a>$sel:virtualNode:VirtualServiceProvider'</a>,
--   <a>virtualServiceProvider_virtualNode</a> - The virtual node
--   associated with a virtual service.
newVirtualServiceProvider :: VirtualServiceProvider

-- | An object that represents a virtual service returned by a list
--   operation.
--   
--   <i>See:</i> <a>newVirtualServiceRef</a> smart constructor.
data VirtualServiceRef
VirtualServiceRef' :: Text -> POSIX -> POSIX -> Text -> Text -> Text -> Integer -> Text -> VirtualServiceRef

-- | Create a value of <a>VirtualServiceRef</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:VirtualServiceRef'</a>, <a>virtualServiceRef_arn</a> - The
--   full Amazon Resource Name (ARN) for the virtual service.
--   
--   <a>$sel:createdAt:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:lastUpdatedAt:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_lastUpdatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was last updated.
--   
--   <a>$sel:meshName:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_meshName</a> - The name of the service mesh that
--   the virtual service resides in.
--   
--   <a>$sel:meshOwner:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_meshOwner</a> - The AWS IAM account ID of the
--   service mesh owner. If the account ID is not your own, then it's the
--   ID of the account that shared the mesh with your account. For more
--   information about mesh sharing, see <a>Working with shared meshes</a>.
--   
--   <a>$sel:resourceOwner:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_resourceOwner</a> - The AWS IAM account ID of the
--   resource owner. If the account ID is not your own, then it's the ID of
--   the mesh owner or of another account that the mesh is shared with. For
--   more information about mesh sharing, see <a>Working with shared
--   meshes</a>.
--   
--   <a>$sel:version:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_version</a> - The version of the resource.
--   Resources are created at version 1, and this version is incremented
--   each time that they're updated.
--   
--   <a>$sel:virtualServiceName:VirtualServiceRef'</a>,
--   <a>virtualServiceRef_virtualServiceName</a> - The name of the virtual
--   service.
newVirtualServiceRef :: Text -> UTCTime -> UTCTime -> Text -> Text -> Text -> Integer -> Text -> VirtualServiceRef

-- | An object that represents the specification of a virtual service.
--   
--   <i>See:</i> <a>newVirtualServiceSpec</a> smart constructor.
data VirtualServiceSpec
VirtualServiceSpec' :: Maybe VirtualServiceProvider -> VirtualServiceSpec

-- | Create a value of <a>VirtualServiceSpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:provider:VirtualServiceSpec'</a>,
--   <a>virtualServiceSpec_provider</a> - The App Mesh object that is
--   acting as the provider for a virtual service. You can specify a single
--   virtual node or virtual router.
newVirtualServiceSpec :: VirtualServiceSpec

-- | An object that represents the status of a virtual service.
--   
--   <i>See:</i> <a>newVirtualServiceStatus</a> smart constructor.
data VirtualServiceStatus
VirtualServiceStatus' :: VirtualServiceStatusCode -> VirtualServiceStatus

-- | Create a value of <a>VirtualServiceStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VirtualServiceStatus'</a>,
--   <a>virtualServiceStatus_status</a> - The current status of the virtual
--   service.
newVirtualServiceStatus :: VirtualServiceStatusCode -> VirtualServiceStatus

-- | An object that represents a target and its relative weight. Traffic is
--   distributed across targets according to their relative weight. For
--   example, a weighted target with a relative weight of 50 receives five
--   times as much traffic as one with a relative weight of 10. The total
--   weight for all targets combined must be less than or equal to 100.
--   
--   <i>See:</i> <a>newWeightedTarget</a> smart constructor.
data WeightedTarget
WeightedTarget' :: Text -> Natural -> WeightedTarget

-- | Create a value of <a>WeightedTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualNode:WeightedTarget'</a>,
--   <a>weightedTarget_virtualNode</a> - The virtual node to associate with
--   the weighted target.
--   
--   <a>$sel:weight:WeightedTarget'</a>, <a>weightedTarget_weight</a> - The
--   relative weight of the weighted target.
newWeightedTarget :: Text -> Natural -> WeightedTarget
