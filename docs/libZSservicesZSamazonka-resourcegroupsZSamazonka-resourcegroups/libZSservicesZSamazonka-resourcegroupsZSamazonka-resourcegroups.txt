-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-resourcegroupsZSamazonka-resourcegroups
@version 1.6.1


module Network.AWS.ResourceGroups.Types.FailedResource

-- | A resource that failed to be added to or removed from a group.
--   
--   <i>See:</i> <a>newFailedResource</a> smart constructor.
data FailedResource
FailedResource' :: Maybe Text -> Maybe Text -> Maybe Text -> FailedResource

-- | The ARN of the resource that failed to be added or removed.
[$sel:resourceArn:FailedResource'] :: FailedResource -> Maybe Text

-- | The error message text associated with the failure.
[$sel:errorMessage:FailedResource'] :: FailedResource -> Maybe Text

-- | The error code associated with the failure.
[$sel:errorCode:FailedResource'] :: FailedResource -> Maybe Text

-- | Create a value of <a>FailedResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:FailedResource'</a>,
--   <a>failedResource_resourceArn</a> - The ARN of the resource that
--   failed to be added or removed.
--   
--   <a>$sel:errorMessage:FailedResource'</a>,
--   <a>failedResource_errorMessage</a> - The error message text associated
--   with the failure.
--   
--   <a>$sel:errorCode:FailedResource'</a>, <a>failedResource_errorCode</a>
--   - The error code associated with the failure.
newFailedResource :: FailedResource

-- | The ARN of the resource that failed to be added or removed.
failedResource_resourceArn :: Lens' FailedResource (Maybe Text)

-- | The error message text associated with the failure.
failedResource_errorMessage :: Lens' FailedResource (Maybe Text)

-- | The error code associated with the failure.
failedResource_errorCode :: Lens' FailedResource (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.FailedResource.FailedResource
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.FailedResource.FailedResource
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.FailedResource.FailedResource
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.FailedResource.FailedResource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroups.Types.FailedResource.FailedResource
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.FailedResource.FailedResource
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.FailedResource.FailedResource


module Network.AWS.ResourceGroups.Types.Group

-- | A resource group that contains AWS resources. You can assign resources
--   to the group by associating either of the following elements with the
--   group:
--   
--   <ul>
--   <li>ResourceQuery - Use a resource query to specify a set of tag keys
--   and values. All resources in the same AWS Region and AWS account that
--   have those keys with the same values are included in the group. You
--   can add a resource query when you create the group, or later by using
--   the PutGroupConfiguration operation.</li>
--   <li>GroupConfiguration - Use a service configuration to associate the
--   group with an AWS service. The configuration specifies which resource
--   types can be included in the group.</li>
--   </ul>
--   
--   <i>See:</i> <a>newGroup</a> smart constructor.
data Group
Group' :: Maybe Text -> Text -> Text -> Group

-- | The description of the resource group.
[$sel:description:Group'] :: Group -> Maybe Text

-- | The ARN of the resource group.
[$sel:groupArn:Group'] :: Group -> Text

-- | The name of the resource group.
[$sel:name:Group'] :: Group -> Text

-- | Create a value of <a>Group</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:Group'</a>, <a>group_description</a> - The
--   description of the resource group.
--   
--   <a>$sel:groupArn:Group'</a>, <a>group_groupArn</a> - The ARN of the
--   resource group.
--   
--   <a>$sel:name:Group'</a>, <a>group_name</a> - The name of the resource
--   group.
newGroup :: Text -> Text -> Group

-- | The description of the resource group.
group_description :: Lens' Group (Maybe Text)

-- | The ARN of the resource group.
group_groupArn :: Lens' Group Text

-- | The name of the resource group.
group_name :: Lens' Group Text
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.Group.Group
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.Group.Group
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.Group.Group
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.Group.Group
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroups.Types.Group.Group
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.Group.Group
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.Group.Group


module Network.AWS.ResourceGroups.Types.GroupConfigurationParameter

-- | A parameter for a group configuration item. For details about group
--   service configuration syntax, see <a>Service configurations for
--   resource groups</a>.
--   
--   <i>See:</i> <a>newGroupConfigurationParameter</a> smart constructor.
data GroupConfigurationParameter
GroupConfigurationParameter' :: Maybe [Text] -> Text -> GroupConfigurationParameter

-- | The value or values to be used for the specified parameter. For the
--   list of values you can use with each parameter, see <a>Supported
--   resource types and parameters</a>.
[$sel:values:GroupConfigurationParameter'] :: GroupConfigurationParameter -> Maybe [Text]

-- | The name of the group configuration parameter. For the list of
--   parameters that you can use with each configuration item type, see
--   <a>Supported resource types and parameters</a>.
[$sel:name:GroupConfigurationParameter'] :: GroupConfigurationParameter -> Text

-- | Create a value of <a>GroupConfigurationParameter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:GroupConfigurationParameter'</a>,
--   <a>groupConfigurationParameter_values</a> - The value or values to be
--   used for the specified parameter. For the list of values you can use
--   with each parameter, see <a>Supported resource types and
--   parameters</a>.
--   
--   <a>$sel:name:GroupConfigurationParameter'</a>,
--   <a>groupConfigurationParameter_name</a> - The name of the group
--   configuration parameter. For the list of parameters that you can use
--   with each configuration item type, see <a>Supported resource types and
--   parameters</a>.
newGroupConfigurationParameter :: Text -> GroupConfigurationParameter

-- | The value or values to be used for the specified parameter. For the
--   list of values you can use with each parameter, see <a>Supported
--   resource types and parameters</a>.
groupConfigurationParameter_values :: Lens' GroupConfigurationParameter (Maybe [Text])

-- | The name of the group configuration parameter. For the list of
--   parameters that you can use with each configuration item type, see
--   <a>Supported resource types and parameters</a>.
groupConfigurationParameter_name :: Lens' GroupConfigurationParameter Text
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.GroupConfigurationParameter.GroupConfigurationParameter
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.GroupConfigurationParameter.GroupConfigurationParameter
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.GroupConfigurationParameter.GroupConfigurationParameter
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.GroupConfigurationParameter.GroupConfigurationParameter
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroups.Types.GroupConfigurationParameter.GroupConfigurationParameter
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.GroupConfigurationParameter.GroupConfigurationParameter
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.GroupConfigurationParameter.GroupConfigurationParameter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.Types.GroupConfigurationParameter.GroupConfigurationParameter


module Network.AWS.ResourceGroups.Types.GroupConfigurationItem

-- | An item in a group configuration. A group service configuration can
--   have one or more items. For details about group service configuration
--   syntax, see <a>Service configurations for resource groups</a>.
--   
--   <i>See:</i> <a>newGroupConfigurationItem</a> smart constructor.
data GroupConfigurationItem
GroupConfigurationItem' :: Maybe [GroupConfigurationParameter] -> Text -> GroupConfigurationItem

-- | A collection of parameters for this group configuration item. For the
--   list of parameters that you can use with each configuration item type,
--   see <a>Supported resource types and parameters</a>.
[$sel:parameters:GroupConfigurationItem'] :: GroupConfigurationItem -> Maybe [GroupConfigurationParameter]

-- | Specifies the type of group configuration item. Each item must have a
--   unique value for <tt>type</tt>. For the list of types that you can
--   specify for a configuration item, see <a>Supported resource types and
--   parameters</a>.
[$sel:type':GroupConfigurationItem'] :: GroupConfigurationItem -> Text

-- | Create a value of <a>GroupConfigurationItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:GroupConfigurationItem'</a>,
--   <a>groupConfigurationItem_parameters</a> - A collection of parameters
--   for this group configuration item. For the list of parameters that you
--   can use with each configuration item type, see <a>Supported resource
--   types and parameters</a>.
--   
--   <a>$sel:type':GroupConfigurationItem'</a>,
--   <a>groupConfigurationItem_type</a> - Specifies the type of group
--   configuration item. Each item must have a unique value for
--   <tt>type</tt>. For the list of types that you can specify for a
--   configuration item, see <a>Supported resource types and
--   parameters</a>.
newGroupConfigurationItem :: Text -> GroupConfigurationItem

-- | A collection of parameters for this group configuration item. For the
--   list of parameters that you can use with each configuration item type,
--   see <a>Supported resource types and parameters</a>.
groupConfigurationItem_parameters :: Lens' GroupConfigurationItem (Maybe [GroupConfigurationParameter])

-- | Specifies the type of group configuration item. Each item must have a
--   unique value for <tt>type</tt>. For the list of types that you can
--   specify for a configuration item, see <a>Supported resource types and
--   parameters</a>.
groupConfigurationItem_type :: Lens' GroupConfigurationItem Text
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.GroupConfigurationItem.GroupConfigurationItem
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.GroupConfigurationItem.GroupConfigurationItem
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.GroupConfigurationItem.GroupConfigurationItem
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.GroupConfigurationItem.GroupConfigurationItem
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroups.Types.GroupConfigurationItem.GroupConfigurationItem
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.GroupConfigurationItem.GroupConfigurationItem
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.GroupConfigurationItem.GroupConfigurationItem
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.Types.GroupConfigurationItem.GroupConfigurationItem


module Network.AWS.ResourceGroups.Types.GroupConfigurationStatus
newtype GroupConfigurationStatus
GroupConfigurationStatus' :: Text -> GroupConfigurationStatus
[fromGroupConfigurationStatus] :: GroupConfigurationStatus -> Text
pattern GroupConfigurationStatus_UPDATE_COMPLETE :: GroupConfigurationStatus
pattern GroupConfigurationStatus_UPDATE_FAILED :: GroupConfigurationStatus
pattern GroupConfigurationStatus_UPDATING :: GroupConfigurationStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.ResourceGroups.Types.GroupConfigurationStatus.GroupConfigurationStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.ResourceGroups.Types.GroupConfigurationStatus.GroupConfigurationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ResourceGroups.Types.GroupConfigurationStatus.GroupConfigurationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.Types.GroupConfigurationStatus.GroupConfigurationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ResourceGroups.Types.GroupConfigurationStatus.GroupConfigurationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroups.Types.GroupConfigurationStatus.GroupConfigurationStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.Types.GroupConfigurationStatus.GroupConfigurationStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ResourceGroups.Types.GroupConfigurationStatus.GroupConfigurationStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.ResourceGroups.Types.GroupConfigurationStatus.GroupConfigurationStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ResourceGroups.Types.GroupConfigurationStatus.GroupConfigurationStatus
instance Network.AWS.Data.Text.ToText Network.AWS.ResourceGroups.Types.GroupConfigurationStatus.GroupConfigurationStatus
instance Network.AWS.Data.Text.FromText Network.AWS.ResourceGroups.Types.GroupConfigurationStatus.GroupConfigurationStatus
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.GroupConfigurationStatus.GroupConfigurationStatus
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.GroupConfigurationStatus.GroupConfigurationStatus
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.GroupConfigurationStatus.GroupConfigurationStatus
instance GHC.Classes.Ord Network.AWS.ResourceGroups.Types.GroupConfigurationStatus.GroupConfigurationStatus
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.GroupConfigurationStatus.GroupConfigurationStatus
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.GroupConfigurationStatus.GroupConfigurationStatus
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.GroupConfigurationStatus.GroupConfigurationStatus


module Network.AWS.ResourceGroups.Types.GroupConfiguration

-- | A service configuration associated with a resource group. The
--   configuration options are determined by the AWS service that defines
--   the <tt>Type</tt>, and specifies which resources can be included in
--   the group. You can add a service configuration when you create the
--   group by using CreateGroup, or later by using the
--   PutGroupConfiguration operation. For details about group service
--   configuration syntax, see <a>Service configurations for resource
--   groups</a>.
--   
--   <i>See:</i> <a>newGroupConfiguration</a> smart constructor.
data GroupConfiguration
GroupConfiguration' :: Maybe GroupConfigurationStatus -> Maybe [GroupConfigurationItem] -> Maybe Text -> Maybe [GroupConfigurationItem] -> GroupConfiguration

-- | The current status of an attempt to update the group configuration.
[$sel:status:GroupConfiguration'] :: GroupConfiguration -> Maybe GroupConfigurationStatus

-- | The configuration currently associated with the group and in effect.
[$sel:configuration:GroupConfiguration'] :: GroupConfiguration -> Maybe [GroupConfigurationItem]

-- | If present, the reason why a request to update the group configuration
--   failed.
[$sel:failureReason:GroupConfiguration'] :: GroupConfiguration -> Maybe Text

-- | If present, the new configuration that is in the process of being
--   applied to the group.
[$sel:proposedConfiguration:GroupConfiguration'] :: GroupConfiguration -> Maybe [GroupConfigurationItem]

-- | Create a value of <a>GroupConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GroupConfiguration'</a>,
--   <a>groupConfiguration_status</a> - The current status of an attempt to
--   update the group configuration.
--   
--   <a>$sel:configuration:GroupConfiguration'</a>,
--   <a>groupConfiguration_configuration</a> - The configuration currently
--   associated with the group and in effect.
--   
--   <a>$sel:failureReason:GroupConfiguration'</a>,
--   <a>groupConfiguration_failureReason</a> - If present, the reason why a
--   request to update the group configuration failed.
--   
--   <a>$sel:proposedConfiguration:GroupConfiguration'</a>,
--   <a>groupConfiguration_proposedConfiguration</a> - If present, the new
--   configuration that is in the process of being applied to the group.
newGroupConfiguration :: GroupConfiguration

-- | The current status of an attempt to update the group configuration.
groupConfiguration_status :: Lens' GroupConfiguration (Maybe GroupConfigurationStatus)

-- | The configuration currently associated with the group and in effect.
groupConfiguration_configuration :: Lens' GroupConfiguration (Maybe [GroupConfigurationItem])

-- | If present, the reason why a request to update the group configuration
--   failed.
groupConfiguration_failureReason :: Lens' GroupConfiguration (Maybe Text)

-- | If present, the new configuration that is in the process of being
--   applied to the group.
groupConfiguration_proposedConfiguration :: Lens' GroupConfiguration (Maybe [GroupConfigurationItem])
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.GroupConfiguration.GroupConfiguration
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.GroupConfiguration.GroupConfiguration
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.GroupConfiguration.GroupConfiguration
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.GroupConfiguration.GroupConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroups.Types.GroupConfiguration.GroupConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.GroupConfiguration.GroupConfiguration
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.GroupConfiguration.GroupConfiguration


module Network.AWS.ResourceGroups.Types.GroupFilterName
newtype GroupFilterName
GroupFilterName' :: Text -> GroupFilterName
[fromGroupFilterName] :: GroupFilterName -> Text
pattern GroupFilterName_Configuration_type :: GroupFilterName
pattern GroupFilterName_Resource_type :: GroupFilterName
instance Network.AWS.Data.XML.ToXML Network.AWS.ResourceGroups.Types.GroupFilterName.GroupFilterName
instance Network.AWS.Data.XML.FromXML Network.AWS.ResourceGroups.Types.GroupFilterName.GroupFilterName
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ResourceGroups.Types.GroupFilterName.GroupFilterName
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.Types.GroupFilterName.GroupFilterName
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ResourceGroups.Types.GroupFilterName.GroupFilterName
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroups.Types.GroupFilterName.GroupFilterName
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.Types.GroupFilterName.GroupFilterName
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ResourceGroups.Types.GroupFilterName.GroupFilterName
instance Network.AWS.Data.Log.ToLog Network.AWS.ResourceGroups.Types.GroupFilterName.GroupFilterName
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ResourceGroups.Types.GroupFilterName.GroupFilterName
instance Network.AWS.Data.Text.ToText Network.AWS.ResourceGroups.Types.GroupFilterName.GroupFilterName
instance Network.AWS.Data.Text.FromText Network.AWS.ResourceGroups.Types.GroupFilterName.GroupFilterName
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.GroupFilterName.GroupFilterName
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.GroupFilterName.GroupFilterName
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.GroupFilterName.GroupFilterName
instance GHC.Classes.Ord Network.AWS.ResourceGroups.Types.GroupFilterName.GroupFilterName
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.GroupFilterName.GroupFilterName
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.GroupFilterName.GroupFilterName
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.GroupFilterName.GroupFilterName


module Network.AWS.ResourceGroups.Types.GroupFilter

-- | A filter collection that you can use to restrict the results from a
--   <tt>List</tt> operation to only those you want to include.
--   
--   <i>See:</i> <a>newGroupFilter</a> smart constructor.
data GroupFilter
GroupFilter' :: GroupFilterName -> NonEmpty Text -> GroupFilter

-- | The name of the filter. Filter names are case-sensitive.
[$sel:name:GroupFilter'] :: GroupFilter -> GroupFilterName

-- | One or more filter values. Allowed filter values vary by group filter
--   name, and are case-sensitive.
[$sel:values:GroupFilter'] :: GroupFilter -> NonEmpty Text

-- | Create a value of <a>GroupFilter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GroupFilter'</a>, <a>groupFilter_name</a> - The name of
--   the filter. Filter names are case-sensitive.
--   
--   <a>$sel:values:GroupFilter'</a>, <a>groupFilter_values</a> - One or
--   more filter values. Allowed filter values vary by group filter name,
--   and are case-sensitive.
newGroupFilter :: GroupFilterName -> NonEmpty Text -> GroupFilter

-- | The name of the filter. Filter names are case-sensitive.
groupFilter_name :: Lens' GroupFilter GroupFilterName

-- | One or more filter values. Allowed filter values vary by group filter
--   name, and are case-sensitive.
groupFilter_values :: Lens' GroupFilter (NonEmpty Text)
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.GroupFilter.GroupFilter
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.GroupFilter.GroupFilter
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.GroupFilter.GroupFilter
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.GroupFilter.GroupFilter
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.GroupFilter.GroupFilter
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.GroupFilter.GroupFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.Types.GroupFilter.GroupFilter


module Network.AWS.ResourceGroups.Types.GroupIdentifier

-- | The unique identifiers for a resource group.
--   
--   <i>See:</i> <a>newGroupIdentifier</a> smart constructor.
data GroupIdentifier
GroupIdentifier' :: Maybe Text -> Maybe Text -> GroupIdentifier

-- | The name of the resource group.
[$sel:groupName:GroupIdentifier'] :: GroupIdentifier -> Maybe Text

-- | The ARN of the resource group.
[$sel:groupArn:GroupIdentifier'] :: GroupIdentifier -> Maybe Text

-- | Create a value of <a>GroupIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:GroupIdentifier'</a>,
--   <a>groupIdentifier_groupName</a> - The name of the resource group.
--   
--   <a>$sel:groupArn:GroupIdentifier'</a>, <a>groupIdentifier_groupArn</a>
--   - The ARN of the resource group.
newGroupIdentifier :: GroupIdentifier

-- | The name of the resource group.
groupIdentifier_groupName :: Lens' GroupIdentifier (Maybe Text)

-- | The ARN of the resource group.
groupIdentifier_groupArn :: Lens' GroupIdentifier (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.GroupIdentifier.GroupIdentifier
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.GroupIdentifier.GroupIdentifier
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.GroupIdentifier.GroupIdentifier
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.GroupIdentifier.GroupIdentifier
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroups.Types.GroupIdentifier.GroupIdentifier
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.GroupIdentifier.GroupIdentifier
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.GroupIdentifier.GroupIdentifier


module Network.AWS.ResourceGroups.Types.PendingResource

-- | A structure that identifies a resource that is currently pending
--   addition to the group as a member. Adding a resource to a resource
--   group happens asynchronously as a background task and this one isn't
--   completed yet.
--   
--   <i>See:</i> <a>newPendingResource</a> smart constructor.
data PendingResource
PendingResource' :: Maybe Text -> PendingResource

-- | The Amazon resource name (ARN) of the resource that's in a pending
--   state.
[$sel:resourceArn:PendingResource'] :: PendingResource -> Maybe Text

-- | Create a value of <a>PendingResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:PendingResource'</a>,
--   <a>pendingResource_resourceArn</a> - The Amazon resource name (ARN) of
--   the resource that's in a pending state.
newPendingResource :: PendingResource

-- | The Amazon resource name (ARN) of the resource that's in a pending
--   state.
pendingResource_resourceArn :: Lens' PendingResource (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.PendingResource.PendingResource
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.PendingResource.PendingResource
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.PendingResource.PendingResource
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.PendingResource.PendingResource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroups.Types.PendingResource.PendingResource
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.PendingResource.PendingResource
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.PendingResource.PendingResource


module Network.AWS.ResourceGroups.Types.QueryErrorCode
newtype QueryErrorCode
QueryErrorCode' :: Text -> QueryErrorCode
[fromQueryErrorCode] :: QueryErrorCode -> Text
pattern QueryErrorCode_CLOUDFORMATION_STACK_INACTIVE :: QueryErrorCode
pattern QueryErrorCode_CLOUDFORMATION_STACK_NOT_EXISTING :: QueryErrorCode
instance Network.AWS.Data.XML.ToXML Network.AWS.ResourceGroups.Types.QueryErrorCode.QueryErrorCode
instance Network.AWS.Data.XML.FromXML Network.AWS.ResourceGroups.Types.QueryErrorCode.QueryErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ResourceGroups.Types.QueryErrorCode.QueryErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.Types.QueryErrorCode.QueryErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ResourceGroups.Types.QueryErrorCode.QueryErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroups.Types.QueryErrorCode.QueryErrorCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.Types.QueryErrorCode.QueryErrorCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ResourceGroups.Types.QueryErrorCode.QueryErrorCode
instance Network.AWS.Data.Log.ToLog Network.AWS.ResourceGroups.Types.QueryErrorCode.QueryErrorCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ResourceGroups.Types.QueryErrorCode.QueryErrorCode
instance Network.AWS.Data.Text.ToText Network.AWS.ResourceGroups.Types.QueryErrorCode.QueryErrorCode
instance Network.AWS.Data.Text.FromText Network.AWS.ResourceGroups.Types.QueryErrorCode.QueryErrorCode
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.QueryErrorCode.QueryErrorCode
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.QueryErrorCode.QueryErrorCode
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.QueryErrorCode.QueryErrorCode
instance GHC.Classes.Ord Network.AWS.ResourceGroups.Types.QueryErrorCode.QueryErrorCode
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.QueryErrorCode.QueryErrorCode
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.QueryErrorCode.QueryErrorCode
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.QueryErrorCode.QueryErrorCode


module Network.AWS.ResourceGroups.Types.QueryError

-- | A two-part error structure that can occur in
--   <tt>ListGroupResources</tt> or <tt>SearchResources</tt> operations on
--   CloudFormation stack-based queries. The error occurs if the
--   CloudFormation stack on which the query is based either does not
--   exist, or has a status that renders the stack inactive. A
--   <tt>QueryError</tt> occurrence does not necessarily mean that AWS
--   Resource Groups could not complete the operation, but the resulting
--   group might have no member resources.
--   
--   <i>See:</i> <a>newQueryError</a> smart constructor.
data QueryError
QueryError' :: Maybe Text -> Maybe QueryErrorCode -> QueryError

-- | A message that explains the <tt>ErrorCode</tt> value. Messages might
--   state that the specified CloudFormation stack does not exist (or no
--   longer exists). For <tt>CLOUDFORMATION_STACK_INACTIVE</tt>, the
--   message typically states that the CloudFormation stack has a status
--   that is not (or no longer) active, such as <tt>CREATE_FAILED</tt>.
[$sel:message:QueryError'] :: QueryError -> Maybe Text

-- | Possible values are <tt>CLOUDFORMATION_STACK_INACTIVE</tt> and
--   <tt>CLOUDFORMATION_STACK_NOT_EXISTING</tt>.
[$sel:errorCode:QueryError'] :: QueryError -> Maybe QueryErrorCode

-- | Create a value of <a>QueryError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:QueryError'</a>, <a>queryError_message</a> - A message
--   that explains the <tt>ErrorCode</tt> value. Messages might state that
--   the specified CloudFormation stack does not exist (or no longer
--   exists). For <tt>CLOUDFORMATION_STACK_INACTIVE</tt>, the message
--   typically states that the CloudFormation stack has a status that is
--   not (or no longer) active, such as <tt>CREATE_FAILED</tt>.
--   
--   <a>$sel:errorCode:QueryError'</a>, <a>queryError_errorCode</a> -
--   Possible values are <tt>CLOUDFORMATION_STACK_INACTIVE</tt> and
--   <tt>CLOUDFORMATION_STACK_NOT_EXISTING</tt>.
newQueryError :: QueryError

-- | A message that explains the <tt>ErrorCode</tt> value. Messages might
--   state that the specified CloudFormation stack does not exist (or no
--   longer exists). For <tt>CLOUDFORMATION_STACK_INACTIVE</tt>, the
--   message typically states that the CloudFormation stack has a status
--   that is not (or no longer) active, such as <tt>CREATE_FAILED</tt>.
queryError_message :: Lens' QueryError (Maybe Text)

-- | Possible values are <tt>CLOUDFORMATION_STACK_INACTIVE</tt> and
--   <tt>CLOUDFORMATION_STACK_NOT_EXISTING</tt>.
queryError_errorCode :: Lens' QueryError (Maybe QueryErrorCode)
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.QueryError.QueryError
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.QueryError.QueryError
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.QueryError.QueryError
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.QueryError.QueryError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroups.Types.QueryError.QueryError
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.QueryError.QueryError
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.QueryError.QueryError


module Network.AWS.ResourceGroups.Types.QueryType
newtype QueryType
QueryType' :: Text -> QueryType
[fromQueryType] :: QueryType -> Text
pattern QueryType_CLOUDFORMATION_STACK_1_0 :: QueryType
pattern QueryType_TAG_FILTERS_1_0 :: QueryType
instance Network.AWS.Data.XML.ToXML Network.AWS.ResourceGroups.Types.QueryType.QueryType
instance Network.AWS.Data.XML.FromXML Network.AWS.ResourceGroups.Types.QueryType.QueryType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ResourceGroups.Types.QueryType.QueryType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.Types.QueryType.QueryType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ResourceGroups.Types.QueryType.QueryType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroups.Types.QueryType.QueryType
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.Types.QueryType.QueryType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ResourceGroups.Types.QueryType.QueryType
instance Network.AWS.Data.Log.ToLog Network.AWS.ResourceGroups.Types.QueryType.QueryType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ResourceGroups.Types.QueryType.QueryType
instance Network.AWS.Data.Text.ToText Network.AWS.ResourceGroups.Types.QueryType.QueryType
instance Network.AWS.Data.Text.FromText Network.AWS.ResourceGroups.Types.QueryType.QueryType
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.QueryType.QueryType
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.QueryType.QueryType
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.QueryType.QueryType
instance GHC.Classes.Ord Network.AWS.ResourceGroups.Types.QueryType.QueryType
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.QueryType.QueryType
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.QueryType.QueryType
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.QueryType.QueryType


module Network.AWS.ResourceGroups.Types.ResourceFilterName
newtype ResourceFilterName
ResourceFilterName' :: Text -> ResourceFilterName
[fromResourceFilterName] :: ResourceFilterName -> Text
pattern ResourceFilterName_Resource_type :: ResourceFilterName
instance Network.AWS.Data.XML.ToXML Network.AWS.ResourceGroups.Types.ResourceFilterName.ResourceFilterName
instance Network.AWS.Data.XML.FromXML Network.AWS.ResourceGroups.Types.ResourceFilterName.ResourceFilterName
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ResourceGroups.Types.ResourceFilterName.ResourceFilterName
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.Types.ResourceFilterName.ResourceFilterName
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ResourceGroups.Types.ResourceFilterName.ResourceFilterName
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroups.Types.ResourceFilterName.ResourceFilterName
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.Types.ResourceFilterName.ResourceFilterName
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ResourceGroups.Types.ResourceFilterName.ResourceFilterName
instance Network.AWS.Data.Log.ToLog Network.AWS.ResourceGroups.Types.ResourceFilterName.ResourceFilterName
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ResourceGroups.Types.ResourceFilterName.ResourceFilterName
instance Network.AWS.Data.Text.ToText Network.AWS.ResourceGroups.Types.ResourceFilterName.ResourceFilterName
instance Network.AWS.Data.Text.FromText Network.AWS.ResourceGroups.Types.ResourceFilterName.ResourceFilterName
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.ResourceFilterName.ResourceFilterName
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.ResourceFilterName.ResourceFilterName
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.ResourceFilterName.ResourceFilterName
instance GHC.Classes.Ord Network.AWS.ResourceGroups.Types.ResourceFilterName.ResourceFilterName
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.ResourceFilterName.ResourceFilterName
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.ResourceFilterName.ResourceFilterName
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.ResourceFilterName.ResourceFilterName


module Network.AWS.ResourceGroups.Types.ResourceFilter

-- | A filter name and value pair that is used to obtain more specific
--   results from a list of resources.
--   
--   <i>See:</i> <a>newResourceFilter</a> smart constructor.
data ResourceFilter
ResourceFilter' :: ResourceFilterName -> NonEmpty Text -> ResourceFilter

-- | The name of the filter. Filter names are case-sensitive.
[$sel:name:ResourceFilter'] :: ResourceFilter -> ResourceFilterName

-- | One or more filter values. Allowed filter values vary by resource
--   filter name, and are case-sensitive.
[$sel:values:ResourceFilter'] :: ResourceFilter -> NonEmpty Text

-- | Create a value of <a>ResourceFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ResourceFilter'</a>, <a>resourceFilter_name</a> - The
--   name of the filter. Filter names are case-sensitive.
--   
--   <a>$sel:values:ResourceFilter'</a>, <a>resourceFilter_values</a> - One
--   or more filter values. Allowed filter values vary by resource filter
--   name, and are case-sensitive.
newResourceFilter :: ResourceFilterName -> NonEmpty Text -> ResourceFilter

-- | The name of the filter. Filter names are case-sensitive.
resourceFilter_name :: Lens' ResourceFilter ResourceFilterName

-- | One or more filter values. Allowed filter values vary by resource
--   filter name, and are case-sensitive.
resourceFilter_values :: Lens' ResourceFilter (NonEmpty Text)
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.ResourceFilter.ResourceFilter
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.ResourceFilter.ResourceFilter
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.ResourceFilter.ResourceFilter
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.ResourceFilter.ResourceFilter
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.ResourceFilter.ResourceFilter
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.ResourceFilter.ResourceFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.Types.ResourceFilter.ResourceFilter


module Network.AWS.ResourceGroups.Types.ResourceIdentifier

-- | A structure that contains the ARN of a resource and its resource type.
--   
--   <i>See:</i> <a>newResourceIdentifier</a> smart constructor.
data ResourceIdentifier
ResourceIdentifier' :: Maybe Text -> Maybe Text -> ResourceIdentifier

-- | The ARN of a resource.
[$sel:resourceArn:ResourceIdentifier'] :: ResourceIdentifier -> Maybe Text

-- | The resource type of a resource, such as <tt>AWS::EC2::Instance</tt>.
[$sel:resourceType:ResourceIdentifier'] :: ResourceIdentifier -> Maybe Text

-- | Create a value of <a>ResourceIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ResourceIdentifier'</a>,
--   <a>resourceIdentifier_resourceArn</a> - The ARN of a resource.
--   
--   <a>$sel:resourceType:ResourceIdentifier'</a>,
--   <a>resourceIdentifier_resourceType</a> - The resource type of a
--   resource, such as <tt>AWS::EC2::Instance</tt>.
newResourceIdentifier :: ResourceIdentifier

-- | The ARN of a resource.
resourceIdentifier_resourceArn :: Lens' ResourceIdentifier (Maybe Text)

-- | The resource type of a resource, such as <tt>AWS::EC2::Instance</tt>.
resourceIdentifier_resourceType :: Lens' ResourceIdentifier (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.ResourceIdentifier.ResourceIdentifier
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.ResourceIdentifier.ResourceIdentifier
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.ResourceIdentifier.ResourceIdentifier
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.ResourceIdentifier.ResourceIdentifier
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroups.Types.ResourceIdentifier.ResourceIdentifier
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.ResourceIdentifier.ResourceIdentifier
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.ResourceIdentifier.ResourceIdentifier


module Network.AWS.ResourceGroups.Types.ResourceQuery

-- | The query that is used to define a resource group or a search for
--   resources. A query specifies both a query type and a query string as a
--   JSON object. See the examples section for example JSON strings.
--   
--   The examples that follow are shown as standard JSON strings. If you
--   include such a string as a parameter to the AWS CLI or an SDK API, you
--   might need to 'escape' the string into a single line. For example, see
--   the <a>Quoting strings</a> in the <i>AWS CLI User Guide</i>.
--   
--   <b>Example 1</b>
--   
--   The following generic example shows a resource query JSON string that
--   includes only resources that meet the following criteria:
--   
--   <ul>
--   <li>The resource type must be either <tt>resource_type1</tt> or
--   <tt>resource_type2</tt>.</li>
--   <li>The resource must have a tag <tt>Key1</tt> with a value of either
--   <tt>ValueA</tt> or <tt>ValueB</tt>.</li>
--   <li>The resource must have a tag <tt>Key2</tt> with a value of either
--   <tt>ValueC</tt> or <tt>ValueD</tt>.</li>
--   </ul>
--   
--   <pre>
--   { "Type": "TAG_FILTERS_1_0", "Query": { "ResourceTypeFilters": [ "resource_type1", "resource_type2"], "TagFilters": [ { "Key": "Key1", "Values": ["ValueA","ValueB"] }, { "Key":"Key2", "Values":["ValueC","ValueD"] } ] } }
--   </pre>
--   
--   This has the equivalent "shortcut" syntax of the following:
--   
--   <pre>
--   { "Type": "TAG_FILTERS_1_0", "Query": { "ResourceTypeFilters": [ "resource_type1", "resource_type2"], "TagFilters": [ { "Key1": ["ValueA","ValueB"] }, { "Key2": ["ValueC","ValueD"] } ] } }
--   </pre>
--   
--   <b>Example 2</b>
--   
--   The following example shows a resource query JSON string that includes
--   only Amazon EC2 instances that are tagged <tt>Stage</tt> with a value
--   of <tt>Test</tt>.
--   
--   <pre>
--   { "Type": "TAG_FILTERS_1_0", "Query": "{ "ResourceTypeFilters": "AWS::EC2::Instance", "TagFilters": { "Stage": "Test" } } }
--   </pre>
--   
--   <b>Example 3</b>
--   
--   The following example shows a resource query JSON string that includes
--   resource of any supported type as long as it is tagged <tt>Stage</tt>
--   with a value of <tt>Prod</tt>.
--   
--   <pre>
--   { "Type": "TAG_FILTERS_1_0", "Query": { "ResourceTypeFilters": "AWS::AllSupported", "TagFilters": { "Stage": "Prod" } } }
--   </pre>
--   
--   <b>Example 4</b>
--   
--   The following example shows a resource query JSON string that includes
--   only Amazon EC2 instances and Amazon S3 buckets that are part of the
--   specified AWS CloudFormation stack.
--   
--   <pre>
--   { "Type": "CLOUDFORMATION_STACK_1_0", "Query": { "ResourceTypeFilters": [ "AWS::EC2::Instance", "AWS::S3::Bucket" ], "StackIdentifier": "arn:aws:cloudformation:us-west-2:123456789012:stack/AWStestuseraccount/fb0d5000-aba8-00e8-aa9e-50d5cEXAMPLE" } }
--   </pre>
--   
--   <i>See:</i> <a>newResourceQuery</a> smart constructor.
data ResourceQuery
ResourceQuery' :: QueryType -> Text -> ResourceQuery

-- | The type of the query. You can use the following values:
--   
--   <ul>
--   <li><i><tt>CLOUDFORMATION_STACK_1_0:</tt></i> Specifies that the
--   <tt>Query</tt> contains an ARN for a CloudFormation stack.</li>
--   <li><i><tt>TAG_FILTERS_1_0:</tt></i> Specifies that the <tt>Query</tt>
--   parameter contains a JSON string that represents a collection of
--   simple tag filters for resource types and tags. The JSON string uses a
--   syntax similar to the <tt> GetResources </tt> operation, but uses only
--   the <tt> ResourceTypeFilters </tt> and <tt> TagFilters </tt> fields.
--   If you specify more than one tag key, only resources that match all
--   tag keys, and at least one value of each specified tag key, are
--   returned in your query. If you specify more than one value for a tag
--   key, a resource matches the filter if it has a tag key value that
--   matches <i>any</i> of the specified values.For example, consider the
--   following sample query for resources that have two tags,
--   <tt>Stage</tt> and <tt>Version</tt>, with two values
--   each:<pre>[{"Stage":["Test","Deploy"]},{"Version":["1","2"]}]</pre>The
--   results of this query could include the following.<ul><li>An EC2
--   instance that has the following two tags: <tt>{"Stage":"Deploy"}</tt>,
--   and <tt>{"Version":"2"}</tt></li><li>An S3 bucket that has the
--   following two tags: <tt>{"Stage":"Test"}</tt>, and
--   <tt>{"Version":"1"}</tt></li></ul>The query would not include the
--   following items in the results, however.<ul><li>An EC2 instance that
--   has only the following tag: <tt>{"Stage":"Deploy"}</tt>.The instance
--   does not have <b>all</b> of the tag keys specified in the filter, so
--   it is excluded from the results.</li><li>An RDS database that has the
--   following two tags: <tt>{"Stage":"Archived"}</tt> and
--   <tt>{"Version":"4"}</tt>The database has all of the tag keys, but none
--   of those keys has an associated value that matches at least one of the
--   specified values in the filter.</li></ul></li>
--   </ul>
[$sel:type':ResourceQuery'] :: ResourceQuery -> QueryType

-- | The query that defines a group or a search.
[$sel:query:ResourceQuery'] :: ResourceQuery -> Text

-- | Create a value of <a>ResourceQuery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':ResourceQuery'</a>, <a>resourceQuery_type</a> - The type
--   of the query. You can use the following values:
--   
--   <ul>
--   <li><i><tt>CLOUDFORMATION_STACK_1_0:</tt></i> Specifies that the
--   <tt>Query</tt> contains an ARN for a CloudFormation stack.</li>
--   <li><i><tt>TAG_FILTERS_1_0:</tt></i> Specifies that the <tt>Query</tt>
--   parameter contains a JSON string that represents a collection of
--   simple tag filters for resource types and tags. The JSON string uses a
--   syntax similar to the <tt> GetResources </tt> operation, but uses only
--   the <tt> ResourceTypeFilters </tt> and <tt> TagFilters </tt> fields.
--   If you specify more than one tag key, only resources that match all
--   tag keys, and at least one value of each specified tag key, are
--   returned in your query. If you specify more than one value for a tag
--   key, a resource matches the filter if it has a tag key value that
--   matches <i>any</i> of the specified values.For example, consider the
--   following sample query for resources that have two tags,
--   <tt>Stage</tt> and <tt>Version</tt>, with two values
--   each:<pre>[{"Stage":["Test","Deploy"]},{"Version":["1","2"]}]</pre>The
--   results of this query could include the following.<ul><li>An EC2
--   instance that has the following two tags: <tt>{"Stage":"Deploy"}</tt>,
--   and <tt>{"Version":"2"}</tt></li><li>An S3 bucket that has the
--   following two tags: <tt>{"Stage":"Test"}</tt>, and
--   <tt>{"Version":"1"}</tt></li></ul>The query would not include the
--   following items in the results, however.<ul><li>An EC2 instance that
--   has only the following tag: <tt>{"Stage":"Deploy"}</tt>.The instance
--   does not have <b>all</b> of the tag keys specified in the filter, so
--   it is excluded from the results.</li><li>An RDS database that has the
--   following two tags: <tt>{"Stage":"Archived"}</tt> and
--   <tt>{"Version":"4"}</tt>The database has all of the tag keys, but none
--   of those keys has an associated value that matches at least one of the
--   specified values in the filter.</li></ul></li>
--   </ul>
--   
--   <a>$sel:query:ResourceQuery'</a>, <a>resourceQuery_searchQuery</a> -
--   The query that defines a group or a search.
newResourceQuery :: QueryType -> Text -> ResourceQuery

-- | The type of the query. You can use the following values:
--   
--   <ul>
--   <li><i><tt>CLOUDFORMATION_STACK_1_0:</tt></i> Specifies that the
--   <tt>Query</tt> contains an ARN for a CloudFormation stack.</li>
--   <li><i><tt>TAG_FILTERS_1_0:</tt></i> Specifies that the <tt>Query</tt>
--   parameter contains a JSON string that represents a collection of
--   simple tag filters for resource types and tags. The JSON string uses a
--   syntax similar to the <tt> GetResources </tt> operation, but uses only
--   the <tt> ResourceTypeFilters </tt> and <tt> TagFilters </tt> fields.
--   If you specify more than one tag key, only resources that match all
--   tag keys, and at least one value of each specified tag key, are
--   returned in your query. If you specify more than one value for a tag
--   key, a resource matches the filter if it has a tag key value that
--   matches <i>any</i> of the specified values.For example, consider the
--   following sample query for resources that have two tags,
--   <tt>Stage</tt> and <tt>Version</tt>, with two values
--   each:<pre>[{"Stage":["Test","Deploy"]},{"Version":["1","2"]}]</pre>The
--   results of this query could include the following.<ul><li>An EC2
--   instance that has the following two tags: <tt>{"Stage":"Deploy"}</tt>,
--   and <tt>{"Version":"2"}</tt></li><li>An S3 bucket that has the
--   following two tags: <tt>{"Stage":"Test"}</tt>, and
--   <tt>{"Version":"1"}</tt></li></ul>The query would not include the
--   following items in the results, however.<ul><li>An EC2 instance that
--   has only the following tag: <tt>{"Stage":"Deploy"}</tt>.The instance
--   does not have <b>all</b> of the tag keys specified in the filter, so
--   it is excluded from the results.</li><li>An RDS database that has the
--   following two tags: <tt>{"Stage":"Archived"}</tt> and
--   <tt>{"Version":"4"}</tt>The database has all of the tag keys, but none
--   of those keys has an associated value that matches at least one of the
--   specified values in the filter.</li></ul></li>
--   </ul>
resourceQuery_type :: Lens' ResourceQuery QueryType

-- | The query that defines a group or a search.
resourceQuery_searchQuery :: Lens' ResourceQuery Text
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.ResourceQuery.ResourceQuery
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.ResourceQuery.ResourceQuery
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.ResourceQuery.ResourceQuery
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.ResourceQuery.ResourceQuery
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroups.Types.ResourceQuery.ResourceQuery
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.ResourceQuery.ResourceQuery
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.ResourceQuery.ResourceQuery
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.Types.ResourceQuery.ResourceQuery


module Network.AWS.ResourceGroups.Types.GroupQuery

-- | A mapping of a query attached to a resource group that determines the
--   AWS resources that are members of the group.
--   
--   <i>See:</i> <a>newGroupQuery</a> smart constructor.
data GroupQuery
GroupQuery' :: Text -> ResourceQuery -> GroupQuery

-- | The name of the resource group that is associated with the specified
--   resource query.
[$sel:groupName:GroupQuery'] :: GroupQuery -> Text

-- | The resource query that determines which AWS resources are members of
--   the associated resource group.
[$sel:resourceQuery:GroupQuery'] :: GroupQuery -> ResourceQuery

-- | Create a value of <a>GroupQuery</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:GroupQuery'</a>, <a>groupQuery_groupName</a> - The
--   name of the resource group that is associated with the specified
--   resource query.
--   
--   <a>$sel:resourceQuery:GroupQuery'</a>, <a>groupQuery_resourceQuery</a>
--   - The resource query that determines which AWS resources are members
--   of the associated resource group.
newGroupQuery :: Text -> ResourceQuery -> GroupQuery

-- | The name of the resource group that is associated with the specified
--   resource query.
groupQuery_groupName :: Lens' GroupQuery Text

-- | The resource query that determines which AWS resources are members of
--   the associated resource group.
groupQuery_resourceQuery :: Lens' GroupQuery ResourceQuery
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.GroupQuery.GroupQuery
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.GroupQuery.GroupQuery
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.GroupQuery.GroupQuery
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.GroupQuery.GroupQuery
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroups.Types.GroupQuery.GroupQuery
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.GroupQuery.GroupQuery
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.GroupQuery.GroupQuery


module Network.AWS.ResourceGroups.Types.ResourceStatusValue
newtype ResourceStatusValue
ResourceStatusValue' :: Text -> ResourceStatusValue
[fromResourceStatusValue] :: ResourceStatusValue -> Text
pattern ResourceStatusValue_PENDING :: ResourceStatusValue
instance Network.AWS.Data.XML.ToXML Network.AWS.ResourceGroups.Types.ResourceStatusValue.ResourceStatusValue
instance Network.AWS.Data.XML.FromXML Network.AWS.ResourceGroups.Types.ResourceStatusValue.ResourceStatusValue
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ResourceGroups.Types.ResourceStatusValue.ResourceStatusValue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.Types.ResourceStatusValue.ResourceStatusValue
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ResourceGroups.Types.ResourceStatusValue.ResourceStatusValue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroups.Types.ResourceStatusValue.ResourceStatusValue
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.Types.ResourceStatusValue.ResourceStatusValue
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ResourceGroups.Types.ResourceStatusValue.ResourceStatusValue
instance Network.AWS.Data.Log.ToLog Network.AWS.ResourceGroups.Types.ResourceStatusValue.ResourceStatusValue
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ResourceGroups.Types.ResourceStatusValue.ResourceStatusValue
instance Network.AWS.Data.Text.ToText Network.AWS.ResourceGroups.Types.ResourceStatusValue.ResourceStatusValue
instance Network.AWS.Data.Text.FromText Network.AWS.ResourceGroups.Types.ResourceStatusValue.ResourceStatusValue
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.ResourceStatusValue.ResourceStatusValue
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.ResourceStatusValue.ResourceStatusValue
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.ResourceStatusValue.ResourceStatusValue
instance GHC.Classes.Ord Network.AWS.ResourceGroups.Types.ResourceStatusValue.ResourceStatusValue
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.ResourceStatusValue.ResourceStatusValue
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.ResourceStatusValue.ResourceStatusValue
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.ResourceStatusValue.ResourceStatusValue


module Network.AWS.ResourceGroups.Types.ResourceStatus

-- | A structure that identifies the current group membership status for a
--   resource. Adding a resource to a resource group is performed
--   asynchronously as a background task. A <tt>PENDING</tt> status
--   indicates, for this resource, that the process isn't completed yet.
--   
--   <i>See:</i> <a>newResourceStatus</a> smart constructor.
data ResourceStatus
ResourceStatus' :: Maybe ResourceStatusValue -> ResourceStatus

-- | The current status.
[$sel:name:ResourceStatus'] :: ResourceStatus -> Maybe ResourceStatusValue

-- | Create a value of <a>ResourceStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ResourceStatus'</a>, <a>resourceStatus_name</a> - The
--   current status.
newResourceStatus :: ResourceStatus

-- | The current status.
resourceStatus_name :: Lens' ResourceStatus (Maybe ResourceStatusValue)
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.ResourceStatus.ResourceStatus
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.ResourceStatus.ResourceStatus
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.ResourceStatus.ResourceStatus
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.ResourceStatus.ResourceStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroups.Types.ResourceStatus.ResourceStatus
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.ResourceStatus.ResourceStatus
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.ResourceStatus.ResourceStatus


module Network.AWS.ResourceGroups.Types.ListGroupResourcesItem

-- | A structure returned by the ListGroupResources operation that contains
--   identity and group membership status information for one of the
--   resources in the group.
--   
--   <i>See:</i> <a>newListGroupResourcesItem</a> smart constructor.
data ListGroupResourcesItem
ListGroupResourcesItem' :: Maybe ResourceStatus -> Maybe ResourceIdentifier -> ListGroupResourcesItem

-- | A structure that contains the status of this resource's membership in
--   the group.
--   
--   This field is present in the response only if the group is of type
--   <tt>AWS::EC2::HostManagement</tt>.
[$sel:status:ListGroupResourcesItem'] :: ListGroupResourcesItem -> Maybe ResourceStatus
[$sel:identifier:ListGroupResourcesItem'] :: ListGroupResourcesItem -> Maybe ResourceIdentifier

-- | Create a value of <a>ListGroupResourcesItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListGroupResourcesItem'</a>,
--   <a>listGroupResourcesItem_status</a> - A structure that contains the
--   status of this resource's membership in the group.
--   
--   This field is present in the response only if the group is of type
--   <tt>AWS::EC2::HostManagement</tt>.
--   
--   <a>$sel:identifier:ListGroupResourcesItem'</a>,
--   <a>listGroupResourcesItem_identifier</a> - Undocumented member.
newListGroupResourcesItem :: ListGroupResourcesItem

-- | A structure that contains the status of this resource's membership in
--   the group.
--   
--   This field is present in the response only if the group is of type
--   <tt>AWS::EC2::HostManagement</tt>.
listGroupResourcesItem_status :: Lens' ListGroupResourcesItem (Maybe ResourceStatus)

-- | Undocumented member.
listGroupResourcesItem_identifier :: Lens' ListGroupResourcesItem (Maybe ResourceIdentifier)
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Types.ListGroupResourcesItem.ListGroupResourcesItem
instance GHC.Show.Show Network.AWS.ResourceGroups.Types.ListGroupResourcesItem.ListGroupResourcesItem
instance GHC.Read.Read Network.AWS.ResourceGroups.Types.ListGroupResourcesItem.ListGroupResourcesItem
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Types.ListGroupResourcesItem.ListGroupResourcesItem
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ResourceGroups.Types.ListGroupResourcesItem.ListGroupResourcesItem
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Types.ListGroupResourcesItem.ListGroupResourcesItem
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Types.ListGroupResourcesItem.ListGroupResourcesItem


module Network.AWS.ResourceGroups.Types

-- | API version <tt>2017-11-27</tt> of the Amazon Resource Groups SDK
--   configuration.
defaultService :: Service

-- | One or more of the specified resources don't exist.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request includes one or more parameters that violate validation
--   rules.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was rejected because it doesn't have valid credentials for
--   the target resource.
_UnauthorizedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal error occurred while processing the request. Try again
--   later.
_InternalServerErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The caller isn't authorized to make the request. Check permissions.
_ForbiddenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request uses an HTTP method that isn't allowed for the specified
--   resource.
_MethodNotAllowedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've exceeded throttling limits by making too many requests in a
--   period of time.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError
newtype GroupConfigurationStatus
GroupConfigurationStatus' :: Text -> GroupConfigurationStatus
[fromGroupConfigurationStatus] :: GroupConfigurationStatus -> Text
pattern GroupConfigurationStatus_UPDATE_COMPLETE :: GroupConfigurationStatus
pattern GroupConfigurationStatus_UPDATE_FAILED :: GroupConfigurationStatus
pattern GroupConfigurationStatus_UPDATING :: GroupConfigurationStatus
newtype GroupFilterName
GroupFilterName' :: Text -> GroupFilterName
[fromGroupFilterName] :: GroupFilterName -> Text
pattern GroupFilterName_Configuration_type :: GroupFilterName
pattern GroupFilterName_Resource_type :: GroupFilterName
newtype QueryErrorCode
QueryErrorCode' :: Text -> QueryErrorCode
[fromQueryErrorCode] :: QueryErrorCode -> Text
pattern QueryErrorCode_CLOUDFORMATION_STACK_INACTIVE :: QueryErrorCode
pattern QueryErrorCode_CLOUDFORMATION_STACK_NOT_EXISTING :: QueryErrorCode
newtype QueryType
QueryType' :: Text -> QueryType
[fromQueryType] :: QueryType -> Text
pattern QueryType_CLOUDFORMATION_STACK_1_0 :: QueryType
pattern QueryType_TAG_FILTERS_1_0 :: QueryType
newtype ResourceFilterName
ResourceFilterName' :: Text -> ResourceFilterName
[fromResourceFilterName] :: ResourceFilterName -> Text
pattern ResourceFilterName_Resource_type :: ResourceFilterName
newtype ResourceStatusValue
ResourceStatusValue' :: Text -> ResourceStatusValue
[fromResourceStatusValue] :: ResourceStatusValue -> Text
pattern ResourceStatusValue_PENDING :: ResourceStatusValue

-- | A resource that failed to be added to or removed from a group.
--   
--   <i>See:</i> <a>newFailedResource</a> smart constructor.
data FailedResource
FailedResource' :: Maybe Text -> Maybe Text -> Maybe Text -> FailedResource

-- | The ARN of the resource that failed to be added or removed.
[$sel:resourceArn:FailedResource'] :: FailedResource -> Maybe Text

-- | The error message text associated with the failure.
[$sel:errorMessage:FailedResource'] :: FailedResource -> Maybe Text

-- | The error code associated with the failure.
[$sel:errorCode:FailedResource'] :: FailedResource -> Maybe Text

-- | Create a value of <a>FailedResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:FailedResource'</a>,
--   <a>failedResource_resourceArn</a> - The ARN of the resource that
--   failed to be added or removed.
--   
--   <a>$sel:errorMessage:FailedResource'</a>,
--   <a>failedResource_errorMessage</a> - The error message text associated
--   with the failure.
--   
--   <a>$sel:errorCode:FailedResource'</a>, <a>failedResource_errorCode</a>
--   - The error code associated with the failure.
newFailedResource :: FailedResource

-- | The ARN of the resource that failed to be added or removed.
failedResource_resourceArn :: Lens' FailedResource (Maybe Text)

-- | The error message text associated with the failure.
failedResource_errorMessage :: Lens' FailedResource (Maybe Text)

-- | The error code associated with the failure.
failedResource_errorCode :: Lens' FailedResource (Maybe Text)

-- | A resource group that contains AWS resources. You can assign resources
--   to the group by associating either of the following elements with the
--   group:
--   
--   <ul>
--   <li>ResourceQuery - Use a resource query to specify a set of tag keys
--   and values. All resources in the same AWS Region and AWS account that
--   have those keys with the same values are included in the group. You
--   can add a resource query when you create the group, or later by using
--   the PutGroupConfiguration operation.</li>
--   <li>GroupConfiguration - Use a service configuration to associate the
--   group with an AWS service. The configuration specifies which resource
--   types can be included in the group.</li>
--   </ul>
--   
--   <i>See:</i> <a>newGroup</a> smart constructor.
data Group
Group' :: Maybe Text -> Text -> Text -> Group

-- | The description of the resource group.
[$sel:description:Group'] :: Group -> Maybe Text

-- | The ARN of the resource group.
[$sel:groupArn:Group'] :: Group -> Text

-- | The name of the resource group.
[$sel:name:Group'] :: Group -> Text

-- | Create a value of <a>Group</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:Group'</a>, <a>group_description</a> - The
--   description of the resource group.
--   
--   <a>$sel:groupArn:Group'</a>, <a>group_groupArn</a> - The ARN of the
--   resource group.
--   
--   <a>$sel:name:Group'</a>, <a>group_name</a> - The name of the resource
--   group.
newGroup :: Text -> Text -> Group

-- | The description of the resource group.
group_description :: Lens' Group (Maybe Text)

-- | The ARN of the resource group.
group_groupArn :: Lens' Group Text

-- | The name of the resource group.
group_name :: Lens' Group Text

-- | A service configuration associated with a resource group. The
--   configuration options are determined by the AWS service that defines
--   the <tt>Type</tt>, and specifies which resources can be included in
--   the group. You can add a service configuration when you create the
--   group by using CreateGroup, or later by using the
--   PutGroupConfiguration operation. For details about group service
--   configuration syntax, see <a>Service configurations for resource
--   groups</a>.
--   
--   <i>See:</i> <a>newGroupConfiguration</a> smart constructor.
data GroupConfiguration
GroupConfiguration' :: Maybe GroupConfigurationStatus -> Maybe [GroupConfigurationItem] -> Maybe Text -> Maybe [GroupConfigurationItem] -> GroupConfiguration

-- | The current status of an attempt to update the group configuration.
[$sel:status:GroupConfiguration'] :: GroupConfiguration -> Maybe GroupConfigurationStatus

-- | The configuration currently associated with the group and in effect.
[$sel:configuration:GroupConfiguration'] :: GroupConfiguration -> Maybe [GroupConfigurationItem]

-- | If present, the reason why a request to update the group configuration
--   failed.
[$sel:failureReason:GroupConfiguration'] :: GroupConfiguration -> Maybe Text

-- | If present, the new configuration that is in the process of being
--   applied to the group.
[$sel:proposedConfiguration:GroupConfiguration'] :: GroupConfiguration -> Maybe [GroupConfigurationItem]

-- | Create a value of <a>GroupConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GroupConfiguration'</a>,
--   <a>groupConfiguration_status</a> - The current status of an attempt to
--   update the group configuration.
--   
--   <a>$sel:configuration:GroupConfiguration'</a>,
--   <a>groupConfiguration_configuration</a> - The configuration currently
--   associated with the group and in effect.
--   
--   <a>$sel:failureReason:GroupConfiguration'</a>,
--   <a>groupConfiguration_failureReason</a> - If present, the reason why a
--   request to update the group configuration failed.
--   
--   <a>$sel:proposedConfiguration:GroupConfiguration'</a>,
--   <a>groupConfiguration_proposedConfiguration</a> - If present, the new
--   configuration that is in the process of being applied to the group.
newGroupConfiguration :: GroupConfiguration

-- | The current status of an attempt to update the group configuration.
groupConfiguration_status :: Lens' GroupConfiguration (Maybe GroupConfigurationStatus)

-- | The configuration currently associated with the group and in effect.
groupConfiguration_configuration :: Lens' GroupConfiguration (Maybe [GroupConfigurationItem])

-- | If present, the reason why a request to update the group configuration
--   failed.
groupConfiguration_failureReason :: Lens' GroupConfiguration (Maybe Text)

-- | If present, the new configuration that is in the process of being
--   applied to the group.
groupConfiguration_proposedConfiguration :: Lens' GroupConfiguration (Maybe [GroupConfigurationItem])

-- | An item in a group configuration. A group service configuration can
--   have one or more items. For details about group service configuration
--   syntax, see <a>Service configurations for resource groups</a>.
--   
--   <i>See:</i> <a>newGroupConfigurationItem</a> smart constructor.
data GroupConfigurationItem
GroupConfigurationItem' :: Maybe [GroupConfigurationParameter] -> Text -> GroupConfigurationItem

-- | A collection of parameters for this group configuration item. For the
--   list of parameters that you can use with each configuration item type,
--   see <a>Supported resource types and parameters</a>.
[$sel:parameters:GroupConfigurationItem'] :: GroupConfigurationItem -> Maybe [GroupConfigurationParameter]

-- | Specifies the type of group configuration item. Each item must have a
--   unique value for <tt>type</tt>. For the list of types that you can
--   specify for a configuration item, see <a>Supported resource types and
--   parameters</a>.
[$sel:type':GroupConfigurationItem'] :: GroupConfigurationItem -> Text

-- | Create a value of <a>GroupConfigurationItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:GroupConfigurationItem'</a>,
--   <a>groupConfigurationItem_parameters</a> - A collection of parameters
--   for this group configuration item. For the list of parameters that you
--   can use with each configuration item type, see <a>Supported resource
--   types and parameters</a>.
--   
--   <a>$sel:type':GroupConfigurationItem'</a>,
--   <a>groupConfigurationItem_type</a> - Specifies the type of group
--   configuration item. Each item must have a unique value for
--   <tt>type</tt>. For the list of types that you can specify for a
--   configuration item, see <a>Supported resource types and
--   parameters</a>.
newGroupConfigurationItem :: Text -> GroupConfigurationItem

-- | A collection of parameters for this group configuration item. For the
--   list of parameters that you can use with each configuration item type,
--   see <a>Supported resource types and parameters</a>.
groupConfigurationItem_parameters :: Lens' GroupConfigurationItem (Maybe [GroupConfigurationParameter])

-- | Specifies the type of group configuration item. Each item must have a
--   unique value for <tt>type</tt>. For the list of types that you can
--   specify for a configuration item, see <a>Supported resource types and
--   parameters</a>.
groupConfigurationItem_type :: Lens' GroupConfigurationItem Text

-- | A parameter for a group configuration item. For details about group
--   service configuration syntax, see <a>Service configurations for
--   resource groups</a>.
--   
--   <i>See:</i> <a>newGroupConfigurationParameter</a> smart constructor.
data GroupConfigurationParameter
GroupConfigurationParameter' :: Maybe [Text] -> Text -> GroupConfigurationParameter

-- | The value or values to be used for the specified parameter. For the
--   list of values you can use with each parameter, see <a>Supported
--   resource types and parameters</a>.
[$sel:values:GroupConfigurationParameter'] :: GroupConfigurationParameter -> Maybe [Text]

-- | The name of the group configuration parameter. For the list of
--   parameters that you can use with each configuration item type, see
--   <a>Supported resource types and parameters</a>.
[$sel:name:GroupConfigurationParameter'] :: GroupConfigurationParameter -> Text

-- | Create a value of <a>GroupConfigurationParameter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:GroupConfigurationParameter'</a>,
--   <a>groupConfigurationParameter_values</a> - The value or values to be
--   used for the specified parameter. For the list of values you can use
--   with each parameter, see <a>Supported resource types and
--   parameters</a>.
--   
--   <a>$sel:name:GroupConfigurationParameter'</a>,
--   <a>groupConfigurationParameter_name</a> - The name of the group
--   configuration parameter. For the list of parameters that you can use
--   with each configuration item type, see <a>Supported resource types and
--   parameters</a>.
newGroupConfigurationParameter :: Text -> GroupConfigurationParameter

-- | The value or values to be used for the specified parameter. For the
--   list of values you can use with each parameter, see <a>Supported
--   resource types and parameters</a>.
groupConfigurationParameter_values :: Lens' GroupConfigurationParameter (Maybe [Text])

-- | The name of the group configuration parameter. For the list of
--   parameters that you can use with each configuration item type, see
--   <a>Supported resource types and parameters</a>.
groupConfigurationParameter_name :: Lens' GroupConfigurationParameter Text

-- | A filter collection that you can use to restrict the results from a
--   <tt>List</tt> operation to only those you want to include.
--   
--   <i>See:</i> <a>newGroupFilter</a> smart constructor.
data GroupFilter
GroupFilter' :: GroupFilterName -> NonEmpty Text -> GroupFilter

-- | The name of the filter. Filter names are case-sensitive.
[$sel:name:GroupFilter'] :: GroupFilter -> GroupFilterName

-- | One or more filter values. Allowed filter values vary by group filter
--   name, and are case-sensitive.
[$sel:values:GroupFilter'] :: GroupFilter -> NonEmpty Text

-- | Create a value of <a>GroupFilter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GroupFilter'</a>, <a>groupFilter_name</a> - The name of
--   the filter. Filter names are case-sensitive.
--   
--   <a>$sel:values:GroupFilter'</a>, <a>groupFilter_values</a> - One or
--   more filter values. Allowed filter values vary by group filter name,
--   and are case-sensitive.
newGroupFilter :: GroupFilterName -> NonEmpty Text -> GroupFilter

-- | The name of the filter. Filter names are case-sensitive.
groupFilter_name :: Lens' GroupFilter GroupFilterName

-- | One or more filter values. Allowed filter values vary by group filter
--   name, and are case-sensitive.
groupFilter_values :: Lens' GroupFilter (NonEmpty Text)

-- | The unique identifiers for a resource group.
--   
--   <i>See:</i> <a>newGroupIdentifier</a> smart constructor.
data GroupIdentifier
GroupIdentifier' :: Maybe Text -> Maybe Text -> GroupIdentifier

-- | The name of the resource group.
[$sel:groupName:GroupIdentifier'] :: GroupIdentifier -> Maybe Text

-- | The ARN of the resource group.
[$sel:groupArn:GroupIdentifier'] :: GroupIdentifier -> Maybe Text

-- | Create a value of <a>GroupIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:GroupIdentifier'</a>,
--   <a>groupIdentifier_groupName</a> - The name of the resource group.
--   
--   <a>$sel:groupArn:GroupIdentifier'</a>, <a>groupIdentifier_groupArn</a>
--   - The ARN of the resource group.
newGroupIdentifier :: GroupIdentifier

-- | The name of the resource group.
groupIdentifier_groupName :: Lens' GroupIdentifier (Maybe Text)

-- | The ARN of the resource group.
groupIdentifier_groupArn :: Lens' GroupIdentifier (Maybe Text)

-- | A mapping of a query attached to a resource group that determines the
--   AWS resources that are members of the group.
--   
--   <i>See:</i> <a>newGroupQuery</a> smart constructor.
data GroupQuery
GroupQuery' :: Text -> ResourceQuery -> GroupQuery

-- | The name of the resource group that is associated with the specified
--   resource query.
[$sel:groupName:GroupQuery'] :: GroupQuery -> Text

-- | The resource query that determines which AWS resources are members of
--   the associated resource group.
[$sel:resourceQuery:GroupQuery'] :: GroupQuery -> ResourceQuery

-- | Create a value of <a>GroupQuery</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:GroupQuery'</a>, <a>groupQuery_groupName</a> - The
--   name of the resource group that is associated with the specified
--   resource query.
--   
--   <a>$sel:resourceQuery:GroupQuery'</a>, <a>groupQuery_resourceQuery</a>
--   - The resource query that determines which AWS resources are members
--   of the associated resource group.
newGroupQuery :: Text -> ResourceQuery -> GroupQuery

-- | The name of the resource group that is associated with the specified
--   resource query.
groupQuery_groupName :: Lens' GroupQuery Text

-- | The resource query that determines which AWS resources are members of
--   the associated resource group.
groupQuery_resourceQuery :: Lens' GroupQuery ResourceQuery

-- | A structure returned by the ListGroupResources operation that contains
--   identity and group membership status information for one of the
--   resources in the group.
--   
--   <i>See:</i> <a>newListGroupResourcesItem</a> smart constructor.
data ListGroupResourcesItem
ListGroupResourcesItem' :: Maybe ResourceStatus -> Maybe ResourceIdentifier -> ListGroupResourcesItem

-- | A structure that contains the status of this resource's membership in
--   the group.
--   
--   This field is present in the response only if the group is of type
--   <tt>AWS::EC2::HostManagement</tt>.
[$sel:status:ListGroupResourcesItem'] :: ListGroupResourcesItem -> Maybe ResourceStatus
[$sel:identifier:ListGroupResourcesItem'] :: ListGroupResourcesItem -> Maybe ResourceIdentifier

-- | Create a value of <a>ListGroupResourcesItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListGroupResourcesItem'</a>,
--   <a>listGroupResourcesItem_status</a> - A structure that contains the
--   status of this resource's membership in the group.
--   
--   This field is present in the response only if the group is of type
--   <tt>AWS::EC2::HostManagement</tt>.
--   
--   <a>$sel:identifier:ListGroupResourcesItem'</a>,
--   <a>listGroupResourcesItem_identifier</a> - Undocumented member.
newListGroupResourcesItem :: ListGroupResourcesItem

-- | A structure that contains the status of this resource's membership in
--   the group.
--   
--   This field is present in the response only if the group is of type
--   <tt>AWS::EC2::HostManagement</tt>.
listGroupResourcesItem_status :: Lens' ListGroupResourcesItem (Maybe ResourceStatus)

-- | Undocumented member.
listGroupResourcesItem_identifier :: Lens' ListGroupResourcesItem (Maybe ResourceIdentifier)

-- | A structure that identifies a resource that is currently pending
--   addition to the group as a member. Adding a resource to a resource
--   group happens asynchronously as a background task and this one isn't
--   completed yet.
--   
--   <i>See:</i> <a>newPendingResource</a> smart constructor.
data PendingResource
PendingResource' :: Maybe Text -> PendingResource

-- | The Amazon resource name (ARN) of the resource that's in a pending
--   state.
[$sel:resourceArn:PendingResource'] :: PendingResource -> Maybe Text

-- | Create a value of <a>PendingResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:PendingResource'</a>,
--   <a>pendingResource_resourceArn</a> - The Amazon resource name (ARN) of
--   the resource that's in a pending state.
newPendingResource :: PendingResource

-- | The Amazon resource name (ARN) of the resource that's in a pending
--   state.
pendingResource_resourceArn :: Lens' PendingResource (Maybe Text)

-- | A two-part error structure that can occur in
--   <tt>ListGroupResources</tt> or <tt>SearchResources</tt> operations on
--   CloudFormation stack-based queries. The error occurs if the
--   CloudFormation stack on which the query is based either does not
--   exist, or has a status that renders the stack inactive. A
--   <tt>QueryError</tt> occurrence does not necessarily mean that AWS
--   Resource Groups could not complete the operation, but the resulting
--   group might have no member resources.
--   
--   <i>See:</i> <a>newQueryError</a> smart constructor.
data QueryError
QueryError' :: Maybe Text -> Maybe QueryErrorCode -> QueryError

-- | A message that explains the <tt>ErrorCode</tt> value. Messages might
--   state that the specified CloudFormation stack does not exist (or no
--   longer exists). For <tt>CLOUDFORMATION_STACK_INACTIVE</tt>, the
--   message typically states that the CloudFormation stack has a status
--   that is not (or no longer) active, such as <tt>CREATE_FAILED</tt>.
[$sel:message:QueryError'] :: QueryError -> Maybe Text

-- | Possible values are <tt>CLOUDFORMATION_STACK_INACTIVE</tt> and
--   <tt>CLOUDFORMATION_STACK_NOT_EXISTING</tt>.
[$sel:errorCode:QueryError'] :: QueryError -> Maybe QueryErrorCode

-- | Create a value of <a>QueryError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:QueryError'</a>, <a>queryError_message</a> - A message
--   that explains the <tt>ErrorCode</tt> value. Messages might state that
--   the specified CloudFormation stack does not exist (or no longer
--   exists). For <tt>CLOUDFORMATION_STACK_INACTIVE</tt>, the message
--   typically states that the CloudFormation stack has a status that is
--   not (or no longer) active, such as <tt>CREATE_FAILED</tt>.
--   
--   <a>$sel:errorCode:QueryError'</a>, <a>queryError_errorCode</a> -
--   Possible values are <tt>CLOUDFORMATION_STACK_INACTIVE</tt> and
--   <tt>CLOUDFORMATION_STACK_NOT_EXISTING</tt>.
newQueryError :: QueryError

-- | A message that explains the <tt>ErrorCode</tt> value. Messages might
--   state that the specified CloudFormation stack does not exist (or no
--   longer exists). For <tt>CLOUDFORMATION_STACK_INACTIVE</tt>, the
--   message typically states that the CloudFormation stack has a status
--   that is not (or no longer) active, such as <tt>CREATE_FAILED</tt>.
queryError_message :: Lens' QueryError (Maybe Text)

-- | Possible values are <tt>CLOUDFORMATION_STACK_INACTIVE</tt> and
--   <tt>CLOUDFORMATION_STACK_NOT_EXISTING</tt>.
queryError_errorCode :: Lens' QueryError (Maybe QueryErrorCode)

-- | A filter name and value pair that is used to obtain more specific
--   results from a list of resources.
--   
--   <i>See:</i> <a>newResourceFilter</a> smart constructor.
data ResourceFilter
ResourceFilter' :: ResourceFilterName -> NonEmpty Text -> ResourceFilter

-- | The name of the filter. Filter names are case-sensitive.
[$sel:name:ResourceFilter'] :: ResourceFilter -> ResourceFilterName

-- | One or more filter values. Allowed filter values vary by resource
--   filter name, and are case-sensitive.
[$sel:values:ResourceFilter'] :: ResourceFilter -> NonEmpty Text

-- | Create a value of <a>ResourceFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ResourceFilter'</a>, <a>resourceFilter_name</a> - The
--   name of the filter. Filter names are case-sensitive.
--   
--   <a>$sel:values:ResourceFilter'</a>, <a>resourceFilter_values</a> - One
--   or more filter values. Allowed filter values vary by resource filter
--   name, and are case-sensitive.
newResourceFilter :: ResourceFilterName -> NonEmpty Text -> ResourceFilter

-- | The name of the filter. Filter names are case-sensitive.
resourceFilter_name :: Lens' ResourceFilter ResourceFilterName

-- | One or more filter values. Allowed filter values vary by resource
--   filter name, and are case-sensitive.
resourceFilter_values :: Lens' ResourceFilter (NonEmpty Text)

-- | A structure that contains the ARN of a resource and its resource type.
--   
--   <i>See:</i> <a>newResourceIdentifier</a> smart constructor.
data ResourceIdentifier
ResourceIdentifier' :: Maybe Text -> Maybe Text -> ResourceIdentifier

-- | The ARN of a resource.
[$sel:resourceArn:ResourceIdentifier'] :: ResourceIdentifier -> Maybe Text

-- | The resource type of a resource, such as <tt>AWS::EC2::Instance</tt>.
[$sel:resourceType:ResourceIdentifier'] :: ResourceIdentifier -> Maybe Text

-- | Create a value of <a>ResourceIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ResourceIdentifier'</a>,
--   <a>resourceIdentifier_resourceArn</a> - The ARN of a resource.
--   
--   <a>$sel:resourceType:ResourceIdentifier'</a>,
--   <a>resourceIdentifier_resourceType</a> - The resource type of a
--   resource, such as <tt>AWS::EC2::Instance</tt>.
newResourceIdentifier :: ResourceIdentifier

-- | The ARN of a resource.
resourceIdentifier_resourceArn :: Lens' ResourceIdentifier (Maybe Text)

-- | The resource type of a resource, such as <tt>AWS::EC2::Instance</tt>.
resourceIdentifier_resourceType :: Lens' ResourceIdentifier (Maybe Text)

-- | The query that is used to define a resource group or a search for
--   resources. A query specifies both a query type and a query string as a
--   JSON object. See the examples section for example JSON strings.
--   
--   The examples that follow are shown as standard JSON strings. If you
--   include such a string as a parameter to the AWS CLI or an SDK API, you
--   might need to 'escape' the string into a single line. For example, see
--   the <a>Quoting strings</a> in the <i>AWS CLI User Guide</i>.
--   
--   <b>Example 1</b>
--   
--   The following generic example shows a resource query JSON string that
--   includes only resources that meet the following criteria:
--   
--   <ul>
--   <li>The resource type must be either <tt>resource_type1</tt> or
--   <tt>resource_type2</tt>.</li>
--   <li>The resource must have a tag <tt>Key1</tt> with a value of either
--   <tt>ValueA</tt> or <tt>ValueB</tt>.</li>
--   <li>The resource must have a tag <tt>Key2</tt> with a value of either
--   <tt>ValueC</tt> or <tt>ValueD</tt>.</li>
--   </ul>
--   
--   <pre>
--   { "Type": "TAG_FILTERS_1_0", "Query": { "ResourceTypeFilters": [ "resource_type1", "resource_type2"], "TagFilters": [ { "Key": "Key1", "Values": ["ValueA","ValueB"] }, { "Key":"Key2", "Values":["ValueC","ValueD"] } ] } }
--   </pre>
--   
--   This has the equivalent "shortcut" syntax of the following:
--   
--   <pre>
--   { "Type": "TAG_FILTERS_1_0", "Query": { "ResourceTypeFilters": [ "resource_type1", "resource_type2"], "TagFilters": [ { "Key1": ["ValueA","ValueB"] }, { "Key2": ["ValueC","ValueD"] } ] } }
--   </pre>
--   
--   <b>Example 2</b>
--   
--   The following example shows a resource query JSON string that includes
--   only Amazon EC2 instances that are tagged <tt>Stage</tt> with a value
--   of <tt>Test</tt>.
--   
--   <pre>
--   { "Type": "TAG_FILTERS_1_0", "Query": "{ "ResourceTypeFilters": "AWS::EC2::Instance", "TagFilters": { "Stage": "Test" } } }
--   </pre>
--   
--   <b>Example 3</b>
--   
--   The following example shows a resource query JSON string that includes
--   resource of any supported type as long as it is tagged <tt>Stage</tt>
--   with a value of <tt>Prod</tt>.
--   
--   <pre>
--   { "Type": "TAG_FILTERS_1_0", "Query": { "ResourceTypeFilters": "AWS::AllSupported", "TagFilters": { "Stage": "Prod" } } }
--   </pre>
--   
--   <b>Example 4</b>
--   
--   The following example shows a resource query JSON string that includes
--   only Amazon EC2 instances and Amazon S3 buckets that are part of the
--   specified AWS CloudFormation stack.
--   
--   <pre>
--   { "Type": "CLOUDFORMATION_STACK_1_0", "Query": { "ResourceTypeFilters": [ "AWS::EC2::Instance", "AWS::S3::Bucket" ], "StackIdentifier": "arn:aws:cloudformation:us-west-2:123456789012:stack/AWStestuseraccount/fb0d5000-aba8-00e8-aa9e-50d5cEXAMPLE" } }
--   </pre>
--   
--   <i>See:</i> <a>newResourceQuery</a> smart constructor.
data ResourceQuery
ResourceQuery' :: QueryType -> Text -> ResourceQuery

-- | The type of the query. You can use the following values:
--   
--   <ul>
--   <li><i><tt>CLOUDFORMATION_STACK_1_0:</tt></i> Specifies that the
--   <tt>Query</tt> contains an ARN for a CloudFormation stack.</li>
--   <li><i><tt>TAG_FILTERS_1_0:</tt></i> Specifies that the <tt>Query</tt>
--   parameter contains a JSON string that represents a collection of
--   simple tag filters for resource types and tags. The JSON string uses a
--   syntax similar to the <tt> GetResources </tt> operation, but uses only
--   the <tt> ResourceTypeFilters </tt> and <tt> TagFilters </tt> fields.
--   If you specify more than one tag key, only resources that match all
--   tag keys, and at least one value of each specified tag key, are
--   returned in your query. If you specify more than one value for a tag
--   key, a resource matches the filter if it has a tag key value that
--   matches <i>any</i> of the specified values.For example, consider the
--   following sample query for resources that have two tags,
--   <tt>Stage</tt> and <tt>Version</tt>, with two values
--   each:<pre>[{"Stage":["Test","Deploy"]},{"Version":["1","2"]}]</pre>The
--   results of this query could include the following.<ul><li>An EC2
--   instance that has the following two tags: <tt>{"Stage":"Deploy"}</tt>,
--   and <tt>{"Version":"2"}</tt></li><li>An S3 bucket that has the
--   following two tags: <tt>{"Stage":"Test"}</tt>, and
--   <tt>{"Version":"1"}</tt></li></ul>The query would not include the
--   following items in the results, however.<ul><li>An EC2 instance that
--   has only the following tag: <tt>{"Stage":"Deploy"}</tt>.The instance
--   does not have <b>all</b> of the tag keys specified in the filter, so
--   it is excluded from the results.</li><li>An RDS database that has the
--   following two tags: <tt>{"Stage":"Archived"}</tt> and
--   <tt>{"Version":"4"}</tt>The database has all of the tag keys, but none
--   of those keys has an associated value that matches at least one of the
--   specified values in the filter.</li></ul></li>
--   </ul>
[$sel:type':ResourceQuery'] :: ResourceQuery -> QueryType

-- | The query that defines a group or a search.
[$sel:query:ResourceQuery'] :: ResourceQuery -> Text

-- | Create a value of <a>ResourceQuery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':ResourceQuery'</a>, <a>resourceQuery_type</a> - The type
--   of the query. You can use the following values:
--   
--   <ul>
--   <li><i><tt>CLOUDFORMATION_STACK_1_0:</tt></i> Specifies that the
--   <tt>Query</tt> contains an ARN for a CloudFormation stack.</li>
--   <li><i><tt>TAG_FILTERS_1_0:</tt></i> Specifies that the <tt>Query</tt>
--   parameter contains a JSON string that represents a collection of
--   simple tag filters for resource types and tags. The JSON string uses a
--   syntax similar to the <tt> GetResources </tt> operation, but uses only
--   the <tt> ResourceTypeFilters </tt> and <tt> TagFilters </tt> fields.
--   If you specify more than one tag key, only resources that match all
--   tag keys, and at least one value of each specified tag key, are
--   returned in your query. If you specify more than one value for a tag
--   key, a resource matches the filter if it has a tag key value that
--   matches <i>any</i> of the specified values.For example, consider the
--   following sample query for resources that have two tags,
--   <tt>Stage</tt> and <tt>Version</tt>, with two values
--   each:<pre>[{"Stage":["Test","Deploy"]},{"Version":["1","2"]}]</pre>The
--   results of this query could include the following.<ul><li>An EC2
--   instance that has the following two tags: <tt>{"Stage":"Deploy"}</tt>,
--   and <tt>{"Version":"2"}</tt></li><li>An S3 bucket that has the
--   following two tags: <tt>{"Stage":"Test"}</tt>, and
--   <tt>{"Version":"1"}</tt></li></ul>The query would not include the
--   following items in the results, however.<ul><li>An EC2 instance that
--   has only the following tag: <tt>{"Stage":"Deploy"}</tt>.The instance
--   does not have <b>all</b> of the tag keys specified in the filter, so
--   it is excluded from the results.</li><li>An RDS database that has the
--   following two tags: <tt>{"Stage":"Archived"}</tt> and
--   <tt>{"Version":"4"}</tt>The database has all of the tag keys, but none
--   of those keys has an associated value that matches at least one of the
--   specified values in the filter.</li></ul></li>
--   </ul>
--   
--   <a>$sel:query:ResourceQuery'</a>, <a>resourceQuery_searchQuery</a> -
--   The query that defines a group or a search.
newResourceQuery :: QueryType -> Text -> ResourceQuery

-- | The type of the query. You can use the following values:
--   
--   <ul>
--   <li><i><tt>CLOUDFORMATION_STACK_1_0:</tt></i> Specifies that the
--   <tt>Query</tt> contains an ARN for a CloudFormation stack.</li>
--   <li><i><tt>TAG_FILTERS_1_0:</tt></i> Specifies that the <tt>Query</tt>
--   parameter contains a JSON string that represents a collection of
--   simple tag filters for resource types and tags. The JSON string uses a
--   syntax similar to the <tt> GetResources </tt> operation, but uses only
--   the <tt> ResourceTypeFilters </tt> and <tt> TagFilters </tt> fields.
--   If you specify more than one tag key, only resources that match all
--   tag keys, and at least one value of each specified tag key, are
--   returned in your query. If you specify more than one value for a tag
--   key, a resource matches the filter if it has a tag key value that
--   matches <i>any</i> of the specified values.For example, consider the
--   following sample query for resources that have two tags,
--   <tt>Stage</tt> and <tt>Version</tt>, with two values
--   each:<pre>[{"Stage":["Test","Deploy"]},{"Version":["1","2"]}]</pre>The
--   results of this query could include the following.<ul><li>An EC2
--   instance that has the following two tags: <tt>{"Stage":"Deploy"}</tt>,
--   and <tt>{"Version":"2"}</tt></li><li>An S3 bucket that has the
--   following two tags: <tt>{"Stage":"Test"}</tt>, and
--   <tt>{"Version":"1"}</tt></li></ul>The query would not include the
--   following items in the results, however.<ul><li>An EC2 instance that
--   has only the following tag: <tt>{"Stage":"Deploy"}</tt>.The instance
--   does not have <b>all</b> of the tag keys specified in the filter, so
--   it is excluded from the results.</li><li>An RDS database that has the
--   following two tags: <tt>{"Stage":"Archived"}</tt> and
--   <tt>{"Version":"4"}</tt>The database has all of the tag keys, but none
--   of those keys has an associated value that matches at least one of the
--   specified values in the filter.</li></ul></li>
--   </ul>
resourceQuery_type :: Lens' ResourceQuery QueryType

-- | The query that defines a group or a search.
resourceQuery_searchQuery :: Lens' ResourceQuery Text

-- | A structure that identifies the current group membership status for a
--   resource. Adding a resource to a resource group is performed
--   asynchronously as a background task. A <tt>PENDING</tt> status
--   indicates, for this resource, that the process isn't completed yet.
--   
--   <i>See:</i> <a>newResourceStatus</a> smart constructor.
data ResourceStatus
ResourceStatus' :: Maybe ResourceStatusValue -> ResourceStatus

-- | The current status.
[$sel:name:ResourceStatus'] :: ResourceStatus -> Maybe ResourceStatusValue

-- | Create a value of <a>ResourceStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ResourceStatus'</a>, <a>resourceStatus_name</a> - The
--   current status.
newResourceStatus :: ResourceStatus

-- | The current status.
resourceStatus_name :: Lens' ResourceStatus (Maybe ResourceStatusValue)


-- | Adds tags to a resource group with the specified ARN. Existing tags on
--   a resource group are not changed if they are not specified in the
--   request parameters.
--   
--   Do not store personally identifiable information (PII) or other
--   confidential or sensitive information in tags. We use tags to provide
--   you with billing and administration services. Tags are not intended to
--   be used for private or sensitive data.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li><pre>resource-groups:Tag</pre></li>
--   </ul>
module Network.AWS.ResourceGroups.Tag

-- | <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> HashMap Text Text -> Tag

-- | The ARN of the resource group to which to add tags.
[$sel:arn:Tag'] :: Tag -> Text

-- | The tags to add to the specified resource group. A tag is a
--   string-to-string map of key-value pairs.
[$sel:tags:Tag'] :: Tag -> HashMap Text Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Tag'</a>, <a>tag_arn</a> - The ARN of the resource group
--   to which to add tags.
--   
--   <a>$sel:tags:Tag'</a>, <a>tag_tags</a> - The tags to add to the
--   specified resource group. A tag is a string-to-string map of key-value
--   pairs.
newTag :: Text -> Tag

-- | The ARN of the resource group to which to add tags.
tag_arn :: Lens' Tag Text

-- | The tags to add to the specified resource group. A tag is a
--   string-to-string map of key-value pairs.
tag_tags :: Lens' Tag (HashMap Text Text)

-- | <i>See:</i> <a>newTagResponse</a> smart constructor.
data TagResponse
TagResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Int -> TagResponse

-- | The ARN of the tagged resource.
[$sel:arn:TagResponse'] :: TagResponse -> Maybe Text

-- | The tags that have been added to the specified resource group.
[$sel:tags:TagResponse'] :: TagResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:TagResponse'] :: TagResponse -> Int

-- | Create a value of <a>TagResponse</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Tag'</a>, <a>tagResponse_arn</a> - The ARN of the tagged
--   resource.
--   
--   <a>$sel:tags:Tag'</a>, <a>tagResponse_tags</a> - The tags that have
--   been added to the specified resource group.
--   
--   <a>$sel:httpStatus:TagResponse'</a>, <a>tagResponse_httpStatus</a> -
--   The response's http status code.
newTagResponse :: Int -> TagResponse

-- | The ARN of the tagged resource.
tagResponse_arn :: Lens' TagResponse (Maybe Text)

-- | The tags that have been added to the specified resource group.
tagResponse_tags :: Lens' TagResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
tagResponse_httpStatus :: Lens' TagResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Tag.Tag
instance GHC.Show.Show Network.AWS.ResourceGroups.Tag.Tag
instance GHC.Read.Read Network.AWS.ResourceGroups.Tag.Tag
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Tag.Tag
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Tag.TagResponse
instance GHC.Show.Show Network.AWS.ResourceGroups.Tag.TagResponse
instance GHC.Read.Read Network.AWS.ResourceGroups.Tag.TagResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Tag.TagResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroups.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Tag.TagResponse
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Tag.Tag
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroups.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.Tag.Tag
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroups.Tag.Tag
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.Tag.Tag


-- | Returns a list of AWS resource identifiers that matches the specified
--   query. The query uses the same format as a resource query in a
--   CreateGroup or UpdateGroupQuery operation.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li><pre>resource-groups:SearchResources</pre></li>
--   <li><pre>cloudformation:DescribeStacks</pre></li>
--   <li><pre>cloudformation:ListStackResources</pre></li>
--   <li><pre>tag:GetResources</pre></li>
--   </ul>
--   
--   This operation returns paginated results.
module Network.AWS.ResourceGroups.SearchResources

-- | <i>See:</i> <a>newSearchResources</a> smart constructor.
data SearchResources
SearchResources' :: Maybe Text -> Maybe Natural -> ResourceQuery -> SearchResources

-- | The parameter for receiving additional results if you receive a
--   <tt>NextToken</tt> response in a previous request. A
--   <tt>NextToken</tt> response indicates that more output is available.
--   Set this parameter to the value provided by a previous call's
--   <tt>NextToken</tt> response to indicate where the output should
--   continue from.
[$sel:nextToken:SearchResources'] :: SearchResources -> Maybe Text

-- | The total number of results that you want included on each page of the
--   response. If you do not include this parameter, it defaults to a value
--   that is specific to the operation. If additional items exist beyond
--   the maximum you specify, the <tt>NextToken</tt> response element is
--   present and has a value (is not null). Include that value as the
--   <tt>NextToken</tt> request parameter in the next call to the operation
--   to get the next part of the results. Note that the service might
--   return fewer results than the maximum even when there are more results
--   available. You should check <tt>NextToken</tt> after every operation
--   to ensure that you receive all of the results.
[$sel:maxResults:SearchResources'] :: SearchResources -> Maybe Natural

-- | The search query, using the same formats that are supported for
--   resource group definition. For more information, see CreateGroup.
[$sel:resourceQuery:SearchResources'] :: SearchResources -> ResourceQuery

-- | Create a value of <a>SearchResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:SearchResources'</a>,
--   <a>searchResources_nextToken</a> - The parameter for receiving
--   additional results if you receive a <tt>NextToken</tt> response in a
--   previous request. A <tt>NextToken</tt> response indicates that more
--   output is available. Set this parameter to the value provided by a
--   previous call's <tt>NextToken</tt> response to indicate where the
--   output should continue from.
--   
--   <a>$sel:maxResults:SearchResources'</a>,
--   <a>searchResources_maxResults</a> - The total number of results that
--   you want included on each page of the response. If you do not include
--   this parameter, it defaults to a value that is specific to the
--   operation. If additional items exist beyond the maximum you specify,
--   the <tt>NextToken</tt> response element is present and has a value (is
--   not null). Include that value as the <tt>NextToken</tt> request
--   parameter in the next call to the operation to get the next part of
--   the results. Note that the service might return fewer results than the
--   maximum even when there are more results available. You should check
--   <tt>NextToken</tt> after every operation to ensure that you receive
--   all of the results.
--   
--   <a>$sel:resourceQuery:SearchResources'</a>,
--   <a>searchResources_resourceQuery</a> - The search query, using the
--   same formats that are supported for resource group definition. For
--   more information, see CreateGroup.
newSearchResources :: ResourceQuery -> SearchResources

-- | The parameter for receiving additional results if you receive a
--   <tt>NextToken</tt> response in a previous request. A
--   <tt>NextToken</tt> response indicates that more output is available.
--   Set this parameter to the value provided by a previous call's
--   <tt>NextToken</tt> response to indicate where the output should
--   continue from.
searchResources_nextToken :: Lens' SearchResources (Maybe Text)

-- | The total number of results that you want included on each page of the
--   response. If you do not include this parameter, it defaults to a value
--   that is specific to the operation. If additional items exist beyond
--   the maximum you specify, the <tt>NextToken</tt> response element is
--   present and has a value (is not null). Include that value as the
--   <tt>NextToken</tt> request parameter in the next call to the operation
--   to get the next part of the results. Note that the service might
--   return fewer results than the maximum even when there are more results
--   available. You should check <tt>NextToken</tt> after every operation
--   to ensure that you receive all of the results.
searchResources_maxResults :: Lens' SearchResources (Maybe Natural)

-- | The search query, using the same formats that are supported for
--   resource group definition. For more information, see CreateGroup.
searchResources_resourceQuery :: Lens' SearchResources ResourceQuery

-- | <i>See:</i> <a>newSearchResourcesResponse</a> smart constructor.
data SearchResourcesResponse
SearchResourcesResponse' :: Maybe Text -> Maybe [ResourceIdentifier] -> Maybe [QueryError] -> Int -> SearchResourcesResponse

-- | If present, indicates that more output is available than is included
--   in the current response. Use this value in the <tt>NextToken</tt>
--   request parameter in a subsequent call to the operation to get the
--   next part of the output. You should repeat this until the
--   <tt>NextToken</tt> response element comes back as <tt>null</tt>.
[$sel:nextToken:SearchResourcesResponse'] :: SearchResourcesResponse -> Maybe Text

-- | The ARNs and resource types of resources that are members of the group
--   that you specified.
[$sel:resourceIdentifiers:SearchResourcesResponse'] :: SearchResourcesResponse -> Maybe [ResourceIdentifier]

-- | A list of <tt>QueryError</tt> objects. Each error is an object that
--   contains <tt>ErrorCode</tt> and <tt>Message</tt> structures. Possible
--   values for <tt>ErrorCode</tt> are
--   <tt>CLOUDFORMATION_STACK_INACTIVE</tt> and
--   <tt>CLOUDFORMATION_STACK_NOT_EXISTING</tt>.
[$sel:queryErrors:SearchResourcesResponse'] :: SearchResourcesResponse -> Maybe [QueryError]

-- | The response's http status code.
[$sel:httpStatus:SearchResourcesResponse'] :: SearchResourcesResponse -> Int

-- | Create a value of <a>SearchResourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:SearchResources'</a>,
--   <a>searchResourcesResponse_nextToken</a> - If present, indicates that
--   more output is available than is included in the current response. Use
--   this value in the <tt>NextToken</tt> request parameter in a subsequent
--   call to the operation to get the next part of the output. You should
--   repeat this until the <tt>NextToken</tt> response element comes back
--   as <tt>null</tt>.
--   
--   <a>$sel:resourceIdentifiers:SearchResourcesResponse'</a>,
--   <a>searchResourcesResponse_resourceIdentifiers</a> - The ARNs and
--   resource types of resources that are members of the group that you
--   specified.
--   
--   <a>$sel:queryErrors:SearchResourcesResponse'</a>,
--   <a>searchResourcesResponse_queryErrors</a> - A list of
--   <tt>QueryError</tt> objects. Each error is an object that contains
--   <tt>ErrorCode</tt> and <tt>Message</tt> structures. Possible values
--   for <tt>ErrorCode</tt> are <tt>CLOUDFORMATION_STACK_INACTIVE</tt> and
--   <tt>CLOUDFORMATION_STACK_NOT_EXISTING</tt>.
--   
--   <a>$sel:httpStatus:SearchResourcesResponse'</a>,
--   <a>searchResourcesResponse_httpStatus</a> - The response's http status
--   code.
newSearchResourcesResponse :: Int -> SearchResourcesResponse

-- | If present, indicates that more output is available than is included
--   in the current response. Use this value in the <tt>NextToken</tt>
--   request parameter in a subsequent call to the operation to get the
--   next part of the output. You should repeat this until the
--   <tt>NextToken</tt> response element comes back as <tt>null</tt>.
searchResourcesResponse_nextToken :: Lens' SearchResourcesResponse (Maybe Text)

-- | The ARNs and resource types of resources that are members of the group
--   that you specified.
searchResourcesResponse_resourceIdentifiers :: Lens' SearchResourcesResponse (Maybe [ResourceIdentifier])

-- | A list of <tt>QueryError</tt> objects. Each error is an object that
--   contains <tt>ErrorCode</tt> and <tt>Message</tt> structures. Possible
--   values for <tt>ErrorCode</tt> are
--   <tt>CLOUDFORMATION_STACK_INACTIVE</tt> and
--   <tt>CLOUDFORMATION_STACK_NOT_EXISTING</tt>.
searchResourcesResponse_queryErrors :: Lens' SearchResourcesResponse (Maybe [QueryError])

-- | The response's http status code.
searchResourcesResponse_httpStatus :: Lens' SearchResourcesResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroups.SearchResources.SearchResources
instance GHC.Show.Show Network.AWS.ResourceGroups.SearchResources.SearchResources
instance GHC.Read.Read Network.AWS.ResourceGroups.SearchResources.SearchResources
instance GHC.Classes.Eq Network.AWS.ResourceGroups.SearchResources.SearchResources
instance GHC.Generics.Generic Network.AWS.ResourceGroups.SearchResources.SearchResourcesResponse
instance GHC.Show.Show Network.AWS.ResourceGroups.SearchResources.SearchResourcesResponse
instance GHC.Read.Read Network.AWS.ResourceGroups.SearchResources.SearchResourcesResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroups.SearchResources.SearchResourcesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroups.SearchResources.SearchResources
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.SearchResources.SearchResourcesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ResourceGroups.SearchResources.SearchResources
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.SearchResources.SearchResources
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.SearchResources.SearchResources
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroups.SearchResources.SearchResources
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.SearchResources.SearchResources
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroups.SearchResources.SearchResources
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.SearchResources.SearchResources


-- | Attaches a service configuration to the specified group. This occurs
--   asynchronously, and can take time to complete. You can use
--   GetGroupConfiguration to check the status of the update.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li><pre>resource-groups:PutGroupConfiguration</pre></li>
--   </ul>
module Network.AWS.ResourceGroups.PutGroupConfiguration

-- | <i>See:</i> <a>newPutGroupConfiguration</a> smart constructor.
data PutGroupConfiguration
PutGroupConfiguration' :: Maybe [GroupConfigurationItem] -> Maybe Text -> PutGroupConfiguration

-- | The new configuration to associate with the specified group. A
--   configuration associates the resource group with an AWS service and
--   specifies how the service can interact with the resources in the
--   group. A configuration is an array of GroupConfigurationItem elements.
--   
--   For information about the syntax of a service configuration, see
--   <a>Service configurations for resource groups</a>.
--   
--   A resource group can contain either a <tt>Configuration</tt> or a
--   <tt>ResourceQuery</tt>, but not both.
[$sel:configuration:PutGroupConfiguration'] :: PutGroupConfiguration -> Maybe [GroupConfigurationItem]

-- | The name or ARN of the resource group with the configuration that you
--   want to update.
[$sel:group':PutGroupConfiguration'] :: PutGroupConfiguration -> Maybe Text

-- | Create a value of <a>PutGroupConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configuration:PutGroupConfiguration'</a>,
--   <a>putGroupConfiguration_configuration</a> - The new configuration to
--   associate with the specified group. A configuration associates the
--   resource group with an AWS service and specifies how the service can
--   interact with the resources in the group. A configuration is an array
--   of GroupConfigurationItem elements.
--   
--   For information about the syntax of a service configuration, see
--   <a>Service configurations for resource groups</a>.
--   
--   A resource group can contain either a <tt>Configuration</tt> or a
--   <tt>ResourceQuery</tt>, but not both.
--   
--   <a>$sel:group':PutGroupConfiguration'</a>,
--   <a>putGroupConfiguration_group</a> - The name or ARN of the resource
--   group with the configuration that you want to update.
newPutGroupConfiguration :: PutGroupConfiguration

-- | The new configuration to associate with the specified group. A
--   configuration associates the resource group with an AWS service and
--   specifies how the service can interact with the resources in the
--   group. A configuration is an array of GroupConfigurationItem elements.
--   
--   For information about the syntax of a service configuration, see
--   <a>Service configurations for resource groups</a>.
--   
--   A resource group can contain either a <tt>Configuration</tt> or a
--   <tt>ResourceQuery</tt>, but not both.
putGroupConfiguration_configuration :: Lens' PutGroupConfiguration (Maybe [GroupConfigurationItem])

-- | The name or ARN of the resource group with the configuration that you
--   want to update.
putGroupConfiguration_group :: Lens' PutGroupConfiguration (Maybe Text)

-- | <i>See:</i> <a>newPutGroupConfigurationResponse</a> smart constructor.
data PutGroupConfigurationResponse
PutGroupConfigurationResponse' :: Int -> PutGroupConfigurationResponse

-- | The response's http status code.
[$sel:httpStatus:PutGroupConfigurationResponse'] :: PutGroupConfigurationResponse -> Int

-- | Create a value of <a>PutGroupConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutGroupConfigurationResponse'</a>,
--   <a>putGroupConfigurationResponse_httpStatus</a> - The response's http
--   status code.
newPutGroupConfigurationResponse :: Int -> PutGroupConfigurationResponse

-- | The response's http status code.
putGroupConfigurationResponse_httpStatus :: Lens' PutGroupConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroups.PutGroupConfiguration.PutGroupConfiguration
instance GHC.Show.Show Network.AWS.ResourceGroups.PutGroupConfiguration.PutGroupConfiguration
instance GHC.Read.Read Network.AWS.ResourceGroups.PutGroupConfiguration.PutGroupConfiguration
instance GHC.Classes.Eq Network.AWS.ResourceGroups.PutGroupConfiguration.PutGroupConfiguration
instance GHC.Generics.Generic Network.AWS.ResourceGroups.PutGroupConfiguration.PutGroupConfigurationResponse
instance GHC.Show.Show Network.AWS.ResourceGroups.PutGroupConfiguration.PutGroupConfigurationResponse
instance GHC.Read.Read Network.AWS.ResourceGroups.PutGroupConfiguration.PutGroupConfigurationResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroups.PutGroupConfiguration.PutGroupConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroups.PutGroupConfiguration.PutGroupConfiguration
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.PutGroupConfiguration.PutGroupConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.PutGroupConfiguration.PutGroupConfiguration
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.PutGroupConfiguration.PutGroupConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroups.PutGroupConfiguration.PutGroupConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.PutGroupConfiguration.PutGroupConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroups.PutGroupConfiguration.PutGroupConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.PutGroupConfiguration.PutGroupConfiguration


-- | Returns a list of existing resource groups in your account.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li><pre>resource-groups:ListGroups</pre></li>
--   </ul>
--   
--   This operation returns paginated results.
module Network.AWS.ResourceGroups.ListGroups

-- | <i>See:</i> <a>newListGroups</a> smart constructor.
data ListGroups
ListGroups' :: Maybe Text -> Maybe Natural -> Maybe [GroupFilter] -> ListGroups

-- | The parameter for receiving additional results if you receive a
--   <tt>NextToken</tt> response in a previous request. A
--   <tt>NextToken</tt> response indicates that more output is available.
--   Set this parameter to the value provided by a previous call's
--   <tt>NextToken</tt> response to indicate where the output should
--   continue from.
[$sel:nextToken:ListGroups'] :: ListGroups -> Maybe Text

-- | The total number of results that you want included on each page of the
--   response. If you do not include this parameter, it defaults to a value
--   that is specific to the operation. If additional items exist beyond
--   the maximum you specify, the <tt>NextToken</tt> response element is
--   present and has a value (is not null). Include that value as the
--   <tt>NextToken</tt> request parameter in the next call to the operation
--   to get the next part of the results. Note that the service might
--   return fewer results than the maximum even when there are more results
--   available. You should check <tt>NextToken</tt> after every operation
--   to ensure that you receive all of the results.
[$sel:maxResults:ListGroups'] :: ListGroups -> Maybe Natural

-- | Filters, formatted as GroupFilter objects, that you want to apply to a
--   <tt>ListGroups</tt> operation.
--   
--   <ul>
--   <li><tt>resource-type</tt> - Filter the results to include only those
--   of the specified resource types. Specify up to five resource types in
--   the format <tt>AWS::ServiceCode::ResourceType </tt>. For example,
--   <tt>AWS::EC2::Instance</tt>, or <tt>AWS::S3::Bucket</tt>.</li>
--   <li><tt>configuration-type</tt> - Filter the results to include only
--   those groups that have the specified configuration types attached. The
--   current supported values
--   are:<ul><li><pre>AWS:EC2::CapacityReservationPool</pre></li><li><pre>AWS:EC2::HostManagement</pre></li></ul></li>
--   </ul>
[$sel:filters:ListGroups'] :: ListGroups -> Maybe [GroupFilter]

-- | Create a value of <a>ListGroups</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGroups'</a>, <a>listGroups_nextToken</a> - The
--   parameter for receiving additional results if you receive a
--   <tt>NextToken</tt> response in a previous request. A
--   <tt>NextToken</tt> response indicates that more output is available.
--   Set this parameter to the value provided by a previous call's
--   <tt>NextToken</tt> response to indicate where the output should
--   continue from.
--   
--   <a>$sel:maxResults:ListGroups'</a>, <a>listGroups_maxResults</a> - The
--   total number of results that you want included on each page of the
--   response. If you do not include this parameter, it defaults to a value
--   that is specific to the operation. If additional items exist beyond
--   the maximum you specify, the <tt>NextToken</tt> response element is
--   present and has a value (is not null). Include that value as the
--   <tt>NextToken</tt> request parameter in the next call to the operation
--   to get the next part of the results. Note that the service might
--   return fewer results than the maximum even when there are more results
--   available. You should check <tt>NextToken</tt> after every operation
--   to ensure that you receive all of the results.
--   
--   <a>$sel:filters:ListGroups'</a>, <a>listGroups_filters</a> - Filters,
--   formatted as GroupFilter objects, that you want to apply to a
--   <tt>ListGroups</tt> operation.
--   
--   <ul>
--   <li><tt>resource-type</tt> - Filter the results to include only those
--   of the specified resource types. Specify up to five resource types in
--   the format <tt>AWS::ServiceCode::ResourceType </tt>. For example,
--   <tt>AWS::EC2::Instance</tt>, or <tt>AWS::S3::Bucket</tt>.</li>
--   <li><tt>configuration-type</tt> - Filter the results to include only
--   those groups that have the specified configuration types attached. The
--   current supported values
--   are:<ul><li><pre>AWS:EC2::CapacityReservationPool</pre></li><li><pre>AWS:EC2::HostManagement</pre></li></ul></li>
--   </ul>
newListGroups :: ListGroups

-- | The parameter for receiving additional results if you receive a
--   <tt>NextToken</tt> response in a previous request. A
--   <tt>NextToken</tt> response indicates that more output is available.
--   Set this parameter to the value provided by a previous call's
--   <tt>NextToken</tt> response to indicate where the output should
--   continue from.
listGroups_nextToken :: Lens' ListGroups (Maybe Text)

-- | The total number of results that you want included on each page of the
--   response. If you do not include this parameter, it defaults to a value
--   that is specific to the operation. If additional items exist beyond
--   the maximum you specify, the <tt>NextToken</tt> response element is
--   present and has a value (is not null). Include that value as the
--   <tt>NextToken</tt> request parameter in the next call to the operation
--   to get the next part of the results. Note that the service might
--   return fewer results than the maximum even when there are more results
--   available. You should check <tt>NextToken</tt> after every operation
--   to ensure that you receive all of the results.
listGroups_maxResults :: Lens' ListGroups (Maybe Natural)

-- | Filters, formatted as GroupFilter objects, that you want to apply to a
--   <tt>ListGroups</tt> operation.
--   
--   <ul>
--   <li><tt>resource-type</tt> - Filter the results to include only those
--   of the specified resource types. Specify up to five resource types in
--   the format <tt>AWS::ServiceCode::ResourceType </tt>. For example,
--   <tt>AWS::EC2::Instance</tt>, or <tt>AWS::S3::Bucket</tt>.</li>
--   <li><tt>configuration-type</tt> - Filter the results to include only
--   those groups that have the specified configuration types attached. The
--   current supported values
--   are:<ul><li><pre>AWS:EC2::CapacityReservationPool</pre></li><li><pre>AWS:EC2::HostManagement</pre></li></ul></li>
--   </ul>
listGroups_filters :: Lens' ListGroups (Maybe [GroupFilter])

-- | <i>See:</i> <a>newListGroupsResponse</a> smart constructor.
data ListGroupsResponse
ListGroupsResponse' :: Maybe [Group] -> Maybe Text -> Maybe [GroupIdentifier] -> Int -> ListGroupsResponse

-- | /__Deprecated - don't use this field. Use the
--   <tt>GroupIdentifiers</tt> response field instead.__/
[$sel:groups:ListGroupsResponse'] :: ListGroupsResponse -> Maybe [Group]

-- | If present, indicates that more output is available than is included
--   in the current response. Use this value in the <tt>NextToken</tt>
--   request parameter in a subsequent call to the operation to get the
--   next part of the output. You should repeat this until the
--   <tt>NextToken</tt> response element comes back as <tt>null</tt>.
[$sel:nextToken:ListGroupsResponse'] :: ListGroupsResponse -> Maybe Text

-- | A list of GroupIdentifier objects. Each identifier is an object that
--   contains both the <tt>Name</tt> and the <tt>GroupArn</tt>.
[$sel:groupIdentifiers:ListGroupsResponse'] :: ListGroupsResponse -> Maybe [GroupIdentifier]

-- | The response's http status code.
[$sel:httpStatus:ListGroupsResponse'] :: ListGroupsResponse -> Int

-- | Create a value of <a>ListGroupsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groups:ListGroupsResponse'</a>,
--   <a>listGroupsResponse_groups</a> - /__Deprecated - don't use this
--   field. Use the <tt>GroupIdentifiers</tt> response field instead.__/
--   
--   <a>$sel:nextToken:ListGroups'</a>, <a>listGroupsResponse_nextToken</a>
--   - If present, indicates that more output is available than is included
--   in the current response. Use this value in the <tt>NextToken</tt>
--   request parameter in a subsequent call to the operation to get the
--   next part of the output. You should repeat this until the
--   <tt>NextToken</tt> response element comes back as <tt>null</tt>.
--   
--   <a>$sel:groupIdentifiers:ListGroupsResponse'</a>,
--   <a>listGroupsResponse_groupIdentifiers</a> - A list of GroupIdentifier
--   objects. Each identifier is an object that contains both the
--   <tt>Name</tt> and the <tt>GroupArn</tt>.
--   
--   <a>$sel:httpStatus:ListGroupsResponse'</a>,
--   <a>listGroupsResponse_httpStatus</a> - The response's http status
--   code.
newListGroupsResponse :: Int -> ListGroupsResponse

-- | /__Deprecated - don't use this field. Use the
--   <tt>GroupIdentifiers</tt> response field instead.__/
listGroupsResponse_groups :: Lens' ListGroupsResponse (Maybe [Group])

-- | If present, indicates that more output is available than is included
--   in the current response. Use this value in the <tt>NextToken</tt>
--   request parameter in a subsequent call to the operation to get the
--   next part of the output. You should repeat this until the
--   <tt>NextToken</tt> response element comes back as <tt>null</tt>.
listGroupsResponse_nextToken :: Lens' ListGroupsResponse (Maybe Text)

-- | A list of GroupIdentifier objects. Each identifier is an object that
--   contains both the <tt>Name</tt> and the <tt>GroupArn</tt>.
listGroupsResponse_groupIdentifiers :: Lens' ListGroupsResponse (Maybe [GroupIdentifier])

-- | The response's http status code.
listGroupsResponse_httpStatus :: Lens' ListGroupsResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroups.ListGroups.ListGroups
instance GHC.Show.Show Network.AWS.ResourceGroups.ListGroups.ListGroups
instance GHC.Read.Read Network.AWS.ResourceGroups.ListGroups.ListGroups
instance GHC.Classes.Eq Network.AWS.ResourceGroups.ListGroups.ListGroups
instance GHC.Generics.Generic Network.AWS.ResourceGroups.ListGroups.ListGroupsResponse
instance GHC.Show.Show Network.AWS.ResourceGroups.ListGroups.ListGroupsResponse
instance GHC.Read.Read Network.AWS.ResourceGroups.ListGroups.ListGroupsResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroups.ListGroups.ListGroupsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroups.ListGroups.ListGroups
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.ListGroups.ListGroupsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ResourceGroups.ListGroups.ListGroups
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.ListGroups.ListGroups
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.ListGroups.ListGroups
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroups.ListGroups.ListGroups
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.ListGroups.ListGroups
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroups.ListGroups.ListGroups
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.ListGroups.ListGroups


-- | Returns a list of ARNs of the resources that are members of a
--   specified resource group.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li><pre>resource-groups:ListGroupResources</pre></li>
--   <li><pre>cloudformation:DescribeStacks</pre></li>
--   <li><pre>cloudformation:ListStackResources</pre></li>
--   <li><pre>tag:GetResources</pre></li>
--   </ul>
--   
--   This operation returns paginated results.
module Network.AWS.ResourceGroups.ListGroupResources

-- | <i>See:</i> <a>newListGroupResources</a> smart constructor.
data ListGroupResources
ListGroupResources' :: Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe [ResourceFilter] -> ListGroupResources

-- | The parameter for receiving additional results if you receive a
--   <tt>NextToken</tt> response in a previous request. A
--   <tt>NextToken</tt> response indicates that more output is available.
--   Set this parameter to the value provided by a previous call's
--   <tt>NextToken</tt> response to indicate where the output should
--   continue from.
[$sel:nextToken:ListGroupResources'] :: ListGroupResources -> Maybe Text

-- | The total number of results that you want included on each page of the
--   response. If you do not include this parameter, it defaults to a value
--   that is specific to the operation. If additional items exist beyond
--   the maximum you specify, the <tt>NextToken</tt> response element is
--   present and has a value (is not null). Include that value as the
--   <tt>NextToken</tt> request parameter in the next call to the operation
--   to get the next part of the results. Note that the service might
--   return fewer results than the maximum even when there are more results
--   available. You should check <tt>NextToken</tt> after every operation
--   to ensure that you receive all of the results.
[$sel:maxResults:ListGroupResources'] :: ListGroupResources -> Maybe Natural

-- | /__Deprecated - don't use this parameter. Use the <tt>Group</tt>
--   request field instead.__/
[$sel:groupName:ListGroupResources'] :: ListGroupResources -> Maybe Text

-- | The name or the ARN of the resource group
[$sel:group':ListGroupResources'] :: ListGroupResources -> Maybe Text

-- | Filters, formatted as ResourceFilter objects, that you want to apply
--   to a <tt>ListGroupResources</tt> operation. Filters the results to
--   include only those of the specified resource types.
--   
--   <ul>
--   <li><tt>resource-type</tt> - Filter resources by their type. Specify
--   up to five resource types in the format
--   <tt>AWS::ServiceCode::ResourceType</tt>. For example,
--   <tt>AWS::EC2::Instance</tt>, or <tt>AWS::S3::Bucket</tt>.</li>
--   </ul>
--   
--   When you specify a <tt>resource-type</tt> filter for
--   <tt>ListGroupResources</tt>, AWS Resource Groups validates your filter
--   resource types against the types that are defined in the query
--   associated with the group. For example, if a group contains only S3
--   buckets because its query specifies only that resource type, but your
--   <tt>resource-type</tt> filter includes EC2 instances, AWS Resource
--   Groups does not filter for EC2 instances. In this case, a
--   <tt>ListGroupResources</tt> request returns a
--   <tt>BadRequestException</tt> error with a message similar to the
--   following:
--   
--   <pre>
--   The resource types specified as filters in the request are not valid.
--   </pre>
--   
--   The error includes a list of resource types that failed the validation
--   because they are not part of the query associated with the group. This
--   validation doesn't occur when the group query specifies
--   <tt>AWS::AllSupported</tt>, because a group based on such a query can
--   contain any of the allowed resource types for the query type
--   (tag-based or AWS CloudFormation stack-based queries).
[$sel:filters:ListGroupResources'] :: ListGroupResources -> Maybe [ResourceFilter]

-- | Create a value of <a>ListGroupResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGroupResources'</a>,
--   <a>listGroupResources_nextToken</a> - The parameter for receiving
--   additional results if you receive a <tt>NextToken</tt> response in a
--   previous request. A <tt>NextToken</tt> response indicates that more
--   output is available. Set this parameter to the value provided by a
--   previous call's <tt>NextToken</tt> response to indicate where the
--   output should continue from.
--   
--   <a>$sel:maxResults:ListGroupResources'</a>,
--   <a>listGroupResources_maxResults</a> - The total number of results
--   that you want included on each page of the response. If you do not
--   include this parameter, it defaults to a value that is specific to the
--   operation. If additional items exist beyond the maximum you specify,
--   the <tt>NextToken</tt> response element is present and has a value (is
--   not null). Include that value as the <tt>NextToken</tt> request
--   parameter in the next call to the operation to get the next part of
--   the results. Note that the service might return fewer results than the
--   maximum even when there are more results available. You should check
--   <tt>NextToken</tt> after every operation to ensure that you receive
--   all of the results.
--   
--   <a>$sel:groupName:ListGroupResources'</a>,
--   <a>listGroupResources_groupName</a> - /__Deprecated - don't use this
--   parameter. Use the <tt>Group</tt> request field instead.__/
--   
--   <a>$sel:group':ListGroupResources'</a>,
--   <a>listGroupResources_group</a> - The name or the ARN of the resource
--   group
--   
--   <a>$sel:filters:ListGroupResources'</a>,
--   <a>listGroupResources_filters</a> - Filters, formatted as
--   ResourceFilter objects, that you want to apply to a
--   <tt>ListGroupResources</tt> operation. Filters the results to include
--   only those of the specified resource types.
--   
--   <ul>
--   <li><tt>resource-type</tt> - Filter resources by their type. Specify
--   up to five resource types in the format
--   <tt>AWS::ServiceCode::ResourceType</tt>. For example,
--   <tt>AWS::EC2::Instance</tt>, or <tt>AWS::S3::Bucket</tt>.</li>
--   </ul>
--   
--   When you specify a <tt>resource-type</tt> filter for
--   <tt>ListGroupResources</tt>, AWS Resource Groups validates your filter
--   resource types against the types that are defined in the query
--   associated with the group. For example, if a group contains only S3
--   buckets because its query specifies only that resource type, but your
--   <tt>resource-type</tt> filter includes EC2 instances, AWS Resource
--   Groups does not filter for EC2 instances. In this case, a
--   <tt>ListGroupResources</tt> request returns a
--   <tt>BadRequestException</tt> error with a message similar to the
--   following:
--   
--   <pre>
--   The resource types specified as filters in the request are not valid.
--   </pre>
--   
--   The error includes a list of resource types that failed the validation
--   because they are not part of the query associated with the group. This
--   validation doesn't occur when the group query specifies
--   <tt>AWS::AllSupported</tt>, because a group based on such a query can
--   contain any of the allowed resource types for the query type
--   (tag-based or AWS CloudFormation stack-based queries).
newListGroupResources :: ListGroupResources

-- | The parameter for receiving additional results if you receive a
--   <tt>NextToken</tt> response in a previous request. A
--   <tt>NextToken</tt> response indicates that more output is available.
--   Set this parameter to the value provided by a previous call's
--   <tt>NextToken</tt> response to indicate where the output should
--   continue from.
listGroupResources_nextToken :: Lens' ListGroupResources (Maybe Text)

-- | The total number of results that you want included on each page of the
--   response. If you do not include this parameter, it defaults to a value
--   that is specific to the operation. If additional items exist beyond
--   the maximum you specify, the <tt>NextToken</tt> response element is
--   present and has a value (is not null). Include that value as the
--   <tt>NextToken</tt> request parameter in the next call to the operation
--   to get the next part of the results. Note that the service might
--   return fewer results than the maximum even when there are more results
--   available. You should check <tt>NextToken</tt> after every operation
--   to ensure that you receive all of the results.
listGroupResources_maxResults :: Lens' ListGroupResources (Maybe Natural)

-- | /__Deprecated - don't use this parameter. Use the <tt>Group</tt>
--   request field instead.__/
listGroupResources_groupName :: Lens' ListGroupResources (Maybe Text)

-- | The name or the ARN of the resource group
listGroupResources_group :: Lens' ListGroupResources (Maybe Text)

-- | Filters, formatted as ResourceFilter objects, that you want to apply
--   to a <tt>ListGroupResources</tt> operation. Filters the results to
--   include only those of the specified resource types.
--   
--   <ul>
--   <li><tt>resource-type</tt> - Filter resources by their type. Specify
--   up to five resource types in the format
--   <tt>AWS::ServiceCode::ResourceType</tt>. For example,
--   <tt>AWS::EC2::Instance</tt>, or <tt>AWS::S3::Bucket</tt>.</li>
--   </ul>
--   
--   When you specify a <tt>resource-type</tt> filter for
--   <tt>ListGroupResources</tt>, AWS Resource Groups validates your filter
--   resource types against the types that are defined in the query
--   associated with the group. For example, if a group contains only S3
--   buckets because its query specifies only that resource type, but your
--   <tt>resource-type</tt> filter includes EC2 instances, AWS Resource
--   Groups does not filter for EC2 instances. In this case, a
--   <tt>ListGroupResources</tt> request returns a
--   <tt>BadRequestException</tt> error with a message similar to the
--   following:
--   
--   <pre>
--   The resource types specified as filters in the request are not valid.
--   </pre>
--   
--   The error includes a list of resource types that failed the validation
--   because they are not part of the query associated with the group. This
--   validation doesn't occur when the group query specifies
--   <tt>AWS::AllSupported</tt>, because a group based on such a query can
--   contain any of the allowed resource types for the query type
--   (tag-based or AWS CloudFormation stack-based queries).
listGroupResources_filters :: Lens' ListGroupResources (Maybe [ResourceFilter])

-- | <i>See:</i> <a>newListGroupResourcesResponse</a> smart constructor.
data ListGroupResourcesResponse
ListGroupResourcesResponse' :: Maybe Text -> Maybe [ResourceIdentifier] -> Maybe [QueryError] -> Maybe [ListGroupResourcesItem] -> Int -> ListGroupResourcesResponse

-- | If present, indicates that more output is available than is included
--   in the current response. Use this value in the <tt>NextToken</tt>
--   request parameter in a subsequent call to the operation to get the
--   next part of the output. You should repeat this until the
--   <tt>NextToken</tt> response element comes back as <tt>null</tt>.
[$sel:nextToken:ListGroupResourcesResponse'] :: ListGroupResourcesResponse -> Maybe Text

-- | __/Deprecated - don't use this parameter. Use the <tt>Resources</tt>
--   response field instead./__
[$sel:resourceIdentifiers:ListGroupResourcesResponse'] :: ListGroupResourcesResponse -> Maybe [ResourceIdentifier]

-- | A list of <tt>QueryError</tt> objects. Each error is an object that
--   contains <tt>ErrorCode</tt> and <tt>Message</tt> structures. Possible
--   values for <tt>ErrorCode</tt> are
--   <tt>CLOUDFORMATION_STACK_INACTIVE</tt> and
--   <tt>CLOUDFORMATION_STACK_NOT_EXISTING</tt>.
[$sel:queryErrors:ListGroupResourcesResponse'] :: ListGroupResourcesResponse -> Maybe [QueryError]

-- | An array of resources from which you can determine each resource's
--   identity, type, and group membership status.
[$sel:resources:ListGroupResourcesResponse'] :: ListGroupResourcesResponse -> Maybe [ListGroupResourcesItem]

-- | The response's http status code.
[$sel:httpStatus:ListGroupResourcesResponse'] :: ListGroupResourcesResponse -> Int

-- | Create a value of <a>ListGroupResourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGroupResources'</a>,
--   <a>listGroupResourcesResponse_nextToken</a> - If present, indicates
--   that more output is available than is included in the current
--   response. Use this value in the <tt>NextToken</tt> request parameter
--   in a subsequent call to the operation to get the next part of the
--   output. You should repeat this until the <tt>NextToken</tt> response
--   element comes back as <tt>null</tt>.
--   
--   <a>$sel:resourceIdentifiers:ListGroupResourcesResponse'</a>,
--   <a>listGroupResourcesResponse_resourceIdentifiers</a> - __/Deprecated
--   - don't use this parameter. Use the <tt>Resources</tt> response field
--   instead./__
--   
--   <a>$sel:queryErrors:ListGroupResourcesResponse'</a>,
--   <a>listGroupResourcesResponse_queryErrors</a> - A list of
--   <tt>QueryError</tt> objects. Each error is an object that contains
--   <tt>ErrorCode</tt> and <tt>Message</tt> structures. Possible values
--   for <tt>ErrorCode</tt> are <tt>CLOUDFORMATION_STACK_INACTIVE</tt> and
--   <tt>CLOUDFORMATION_STACK_NOT_EXISTING</tt>.
--   
--   <a>$sel:resources:ListGroupResourcesResponse'</a>,
--   <a>listGroupResourcesResponse_resources</a> - An array of resources
--   from which you can determine each resource's identity, type, and group
--   membership status.
--   
--   <a>$sel:httpStatus:ListGroupResourcesResponse'</a>,
--   <a>listGroupResourcesResponse_httpStatus</a> - The response's http
--   status code.
newListGroupResourcesResponse :: Int -> ListGroupResourcesResponse

-- | If present, indicates that more output is available than is included
--   in the current response. Use this value in the <tt>NextToken</tt>
--   request parameter in a subsequent call to the operation to get the
--   next part of the output. You should repeat this until the
--   <tt>NextToken</tt> response element comes back as <tt>null</tt>.
listGroupResourcesResponse_nextToken :: Lens' ListGroupResourcesResponse (Maybe Text)

-- | __/Deprecated - don't use this parameter. Use the <tt>Resources</tt>
--   response field instead./__
listGroupResourcesResponse_resourceIdentifiers :: Lens' ListGroupResourcesResponse (Maybe [ResourceIdentifier])

-- | A list of <tt>QueryError</tt> objects. Each error is an object that
--   contains <tt>ErrorCode</tt> and <tt>Message</tt> structures. Possible
--   values for <tt>ErrorCode</tt> are
--   <tt>CLOUDFORMATION_STACK_INACTIVE</tt> and
--   <tt>CLOUDFORMATION_STACK_NOT_EXISTING</tt>.
listGroupResourcesResponse_queryErrors :: Lens' ListGroupResourcesResponse (Maybe [QueryError])

-- | An array of resources from which you can determine each resource's
--   identity, type, and group membership status.
listGroupResourcesResponse_resources :: Lens' ListGroupResourcesResponse (Maybe [ListGroupResourcesItem])

-- | The response's http status code.
listGroupResourcesResponse_httpStatus :: Lens' ListGroupResourcesResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroups.ListGroupResources.ListGroupResources
instance GHC.Show.Show Network.AWS.ResourceGroups.ListGroupResources.ListGroupResources
instance GHC.Read.Read Network.AWS.ResourceGroups.ListGroupResources.ListGroupResources
instance GHC.Classes.Eq Network.AWS.ResourceGroups.ListGroupResources.ListGroupResources
instance GHC.Generics.Generic Network.AWS.ResourceGroups.ListGroupResources.ListGroupResourcesResponse
instance GHC.Show.Show Network.AWS.ResourceGroups.ListGroupResources.ListGroupResourcesResponse
instance GHC.Read.Read Network.AWS.ResourceGroups.ListGroupResources.ListGroupResourcesResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroups.ListGroupResources.ListGroupResourcesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroups.ListGroupResources.ListGroupResources
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.ListGroupResources.ListGroupResourcesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ResourceGroups.ListGroupResources.ListGroupResources
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.ListGroupResources.ListGroupResources
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.ListGroupResources.ListGroupResources
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroups.ListGroupResources.ListGroupResources
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.ListGroupResources.ListGroupResources
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroups.ListGroupResources.ListGroupResources
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.ListGroupResources.ListGroupResources


-- | Adds the specified resources to the specified group.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li><pre>resource-groups:GroupResources</pre></li>
--   </ul>
module Network.AWS.ResourceGroups.GroupResources

-- | <i>See:</i> <a>newGroupResources</a> smart constructor.
data GroupResources
GroupResources' :: Text -> NonEmpty Text -> GroupResources

-- | The name or the ARN of the resource group to add resources to.
[$sel:group':GroupResources'] :: GroupResources -> Text

-- | The list of ARNs for resources to be added to the group.
[$sel:resourceArns:GroupResources'] :: GroupResources -> NonEmpty Text

-- | Create a value of <a>GroupResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':GroupResources'</a>, <a>groupResources_group</a> - The
--   name or the ARN of the resource group to add resources to.
--   
--   <a>$sel:resourceArns:GroupResources'</a>,
--   <a>groupResources_resourceArns</a> - The list of ARNs for resources to
--   be added to the group.
newGroupResources :: Text -> NonEmpty Text -> GroupResources

-- | The name or the ARN of the resource group to add resources to.
groupResources_group :: Lens' GroupResources Text

-- | The list of ARNs for resources to be added to the group.
groupResources_resourceArns :: Lens' GroupResources (NonEmpty Text)

-- | <i>See:</i> <a>newGroupResourcesResponse</a> smart constructor.
data GroupResourcesResponse
GroupResourcesResponse' :: Maybe (NonEmpty Text) -> Maybe [PendingResource] -> Maybe [FailedResource] -> Int -> GroupResourcesResponse

-- | A list of ARNs of resources that were successfully added to the group
--   by this operation.
[$sel:succeeded:GroupResourcesResponse'] :: GroupResourcesResponse -> Maybe (NonEmpty Text)

-- | A list of ARNs of any resources that are still in the process of being
--   added to the group by this operation. These pending additions continue
--   asynchronously. You can check the status of pending additions by using
--   the <tt> ListGroupResources </tt> operation, and checking the
--   <tt>Resources</tt> array in the response and the <tt>Status</tt> field
--   of each object in that array.
[$sel:pending:GroupResourcesResponse'] :: GroupResourcesResponse -> Maybe [PendingResource]

-- | A list of ARNs of any resources that failed to be added to the group
--   by this operation.
[$sel:failed:GroupResourcesResponse'] :: GroupResourcesResponse -> Maybe [FailedResource]

-- | The response's http status code.
[$sel:httpStatus:GroupResourcesResponse'] :: GroupResourcesResponse -> Int

-- | Create a value of <a>GroupResourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:succeeded:GroupResourcesResponse'</a>,
--   <a>groupResourcesResponse_succeeded</a> - A list of ARNs of resources
--   that were successfully added to the group by this operation.
--   
--   <a>$sel:pending:GroupResourcesResponse'</a>,
--   <a>groupResourcesResponse_pending</a> - A list of ARNs of any
--   resources that are still in the process of being added to the group by
--   this operation. These pending additions continue asynchronously. You
--   can check the status of pending additions by using the <tt>
--   ListGroupResources </tt> operation, and checking the
--   <tt>Resources</tt> array in the response and the <tt>Status</tt> field
--   of each object in that array.
--   
--   <a>$sel:failed:GroupResourcesResponse'</a>,
--   <a>groupResourcesResponse_failed</a> - A list of ARNs of any resources
--   that failed to be added to the group by this operation.
--   
--   <a>$sel:httpStatus:GroupResourcesResponse'</a>,
--   <a>groupResourcesResponse_httpStatus</a> - The response's http status
--   code.
newGroupResourcesResponse :: Int -> GroupResourcesResponse

-- | A list of ARNs of resources that were successfully added to the group
--   by this operation.
groupResourcesResponse_succeeded :: Lens' GroupResourcesResponse (Maybe (NonEmpty Text))

-- | A list of ARNs of any resources that are still in the process of being
--   added to the group by this operation. These pending additions continue
--   asynchronously. You can check the status of pending additions by using
--   the <tt> ListGroupResources </tt> operation, and checking the
--   <tt>Resources</tt> array in the response and the <tt>Status</tt> field
--   of each object in that array.
groupResourcesResponse_pending :: Lens' GroupResourcesResponse (Maybe [PendingResource])

-- | A list of ARNs of any resources that failed to be added to the group
--   by this operation.
groupResourcesResponse_failed :: Lens' GroupResourcesResponse (Maybe [FailedResource])

-- | The response's http status code.
groupResourcesResponse_httpStatus :: Lens' GroupResourcesResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroups.GroupResources.GroupResources
instance GHC.Show.Show Network.AWS.ResourceGroups.GroupResources.GroupResources
instance GHC.Read.Read Network.AWS.ResourceGroups.GroupResources.GroupResources
instance GHC.Classes.Eq Network.AWS.ResourceGroups.GroupResources.GroupResources
instance GHC.Generics.Generic Network.AWS.ResourceGroups.GroupResources.GroupResourcesResponse
instance GHC.Show.Show Network.AWS.ResourceGroups.GroupResources.GroupResourcesResponse
instance GHC.Read.Read Network.AWS.ResourceGroups.GroupResources.GroupResourcesResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroups.GroupResources.GroupResourcesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroups.GroupResources.GroupResources
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.GroupResources.GroupResourcesResponse
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.GroupResources.GroupResources
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.GroupResources.GroupResources
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroups.GroupResources.GroupResources
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.GroupResources.GroupResources
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroups.GroupResources.GroupResources
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.GroupResources.GroupResources


-- | Returns a list of tags that are associated with a resource group,
--   specified by an ARN.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li><pre>resource-groups:GetTags</pre></li>
--   </ul>
module Network.AWS.ResourceGroups.GetTags

-- | <i>See:</i> <a>newGetTags</a> smart constructor.
data GetTags
GetTags' :: Text -> GetTags

-- | The ARN of the resource group whose tags you want to retrieve.
[$sel:arn:GetTags'] :: GetTags -> Text

-- | Create a value of <a>GetTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetTags'</a>, <a>getTags_arn</a> - The ARN of the resource
--   group whose tags you want to retrieve.
newGetTags :: Text -> GetTags

-- | The ARN of the resource group whose tags you want to retrieve.
getTags_arn :: Lens' GetTags Text

-- | <i>See:</i> <a>newGetTagsResponse</a> smart constructor.
data GetTagsResponse
GetTagsResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Int -> GetTagsResponse

-- | The ARN of the tagged resource group.
[$sel:arn:GetTagsResponse'] :: GetTagsResponse -> Maybe Text

-- | The tags associated with the specified resource group.
[$sel:tags:GetTagsResponse'] :: GetTagsResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetTagsResponse'] :: GetTagsResponse -> Int

-- | Create a value of <a>GetTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetTags'</a>, <a>getTagsResponse_arn</a> - The ARN of the
--   tagged resource group.
--   
--   <a>$sel:tags:GetTagsResponse'</a>, <a>getTagsResponse_tags</a> - The
--   tags associated with the specified resource group.
--   
--   <a>$sel:httpStatus:GetTagsResponse'</a>,
--   <a>getTagsResponse_httpStatus</a> - The response's http status code.
newGetTagsResponse :: Int -> GetTagsResponse

-- | The ARN of the tagged resource group.
getTagsResponse_arn :: Lens' GetTagsResponse (Maybe Text)

-- | The tags associated with the specified resource group.
getTagsResponse_tags :: Lens' GetTagsResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getTagsResponse_httpStatus :: Lens' GetTagsResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroups.GetTags.GetTags
instance GHC.Show.Show Network.AWS.ResourceGroups.GetTags.GetTags
instance GHC.Read.Read Network.AWS.ResourceGroups.GetTags.GetTags
instance GHC.Classes.Eq Network.AWS.ResourceGroups.GetTags.GetTags
instance GHC.Generics.Generic Network.AWS.ResourceGroups.GetTags.GetTagsResponse
instance GHC.Show.Show Network.AWS.ResourceGroups.GetTags.GetTagsResponse
instance GHC.Read.Read Network.AWS.ResourceGroups.GetTags.GetTagsResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroups.GetTags.GetTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroups.GetTags.GetTags
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.GetTags.GetTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.GetTags.GetTags
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.GetTags.GetTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroups.GetTags.GetTags
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroups.GetTags.GetTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.GetTags.GetTags


-- | Retrieves the resource query associated with the specified resource
--   group. For more information about resource queries, see <a>Create a
--   tag-based group in Resource Groups</a>.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li><pre>resource-groups:GetGroupQuery</pre></li>
--   </ul>
module Network.AWS.ResourceGroups.GetGroupQuery

-- | <i>See:</i> <a>newGetGroupQuery</a> smart constructor.
data GetGroupQuery
GetGroupQuery' :: Maybe Text -> Maybe Text -> GetGroupQuery

-- | Don't use this parameter. Use <tt>Group</tt> instead.
[$sel:groupName:GetGroupQuery'] :: GetGroupQuery -> Maybe Text

-- | The name or the ARN of the resource group to query.
[$sel:group':GetGroupQuery'] :: GetGroupQuery -> Maybe Text

-- | Create a value of <a>GetGroupQuery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:GetGroupQuery'</a>, <a>getGroupQuery_groupName</a> -
--   Don't use this parameter. Use <tt>Group</tt> instead.
--   
--   <a>$sel:group':GetGroupQuery'</a>, <a>getGroupQuery_group</a> - The
--   name or the ARN of the resource group to query.
newGetGroupQuery :: GetGroupQuery

-- | Don't use this parameter. Use <tt>Group</tt> instead.
getGroupQuery_groupName :: Lens' GetGroupQuery (Maybe Text)

-- | The name or the ARN of the resource group to query.
getGroupQuery_group :: Lens' GetGroupQuery (Maybe Text)

-- | <i>See:</i> <a>newGetGroupQueryResponse</a> smart constructor.
data GetGroupQueryResponse
GetGroupQueryResponse' :: Maybe GroupQuery -> Int -> GetGroupQueryResponse

-- | The resource query associated with the specified group. For more
--   information about resource queries, see <a>Create a tag-based group in
--   Resource Groups</a>.
[$sel:groupQuery:GetGroupQueryResponse'] :: GetGroupQueryResponse -> Maybe GroupQuery

-- | The response's http status code.
[$sel:httpStatus:GetGroupQueryResponse'] :: GetGroupQueryResponse -> Int

-- | Create a value of <a>GetGroupQueryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupQuery:GetGroupQueryResponse'</a>,
--   <a>getGroupQueryResponse_groupQuery</a> - The resource query
--   associated with the specified group. For more information about
--   resource queries, see <a>Create a tag-based group in Resource
--   Groups</a>.
--   
--   <a>$sel:httpStatus:GetGroupQueryResponse'</a>,
--   <a>getGroupQueryResponse_httpStatus</a> - The response's http status
--   code.
newGetGroupQueryResponse :: Int -> GetGroupQueryResponse

-- | The resource query associated with the specified group. For more
--   information about resource queries, see <a>Create a tag-based group in
--   Resource Groups</a>.
getGroupQueryResponse_groupQuery :: Lens' GetGroupQueryResponse (Maybe GroupQuery)

-- | The response's http status code.
getGroupQueryResponse_httpStatus :: Lens' GetGroupQueryResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroups.GetGroupQuery.GetGroupQuery
instance GHC.Show.Show Network.AWS.ResourceGroups.GetGroupQuery.GetGroupQuery
instance GHC.Read.Read Network.AWS.ResourceGroups.GetGroupQuery.GetGroupQuery
instance GHC.Classes.Eq Network.AWS.ResourceGroups.GetGroupQuery.GetGroupQuery
instance GHC.Generics.Generic Network.AWS.ResourceGroups.GetGroupQuery.GetGroupQueryResponse
instance GHC.Show.Show Network.AWS.ResourceGroups.GetGroupQuery.GetGroupQueryResponse
instance GHC.Read.Read Network.AWS.ResourceGroups.GetGroupQuery.GetGroupQueryResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroups.GetGroupQuery.GetGroupQueryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroups.GetGroupQuery.GetGroupQuery
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.GetGroupQuery.GetGroupQueryResponse
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.GetGroupQuery.GetGroupQuery
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.GetGroupQuery.GetGroupQuery
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroups.GetGroupQuery.GetGroupQuery
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.GetGroupQuery.GetGroupQuery
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroups.GetGroupQuery.GetGroupQuery
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.GetGroupQuery.GetGroupQuery


-- | Returns the service configuration associated with the specified
--   resource group. For details about the service configuration syntax,
--   see <a>Service configurations for resource groups</a>.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li><pre>resource-groups:GetGroupConfiguration</pre></li>
--   </ul>
module Network.AWS.ResourceGroups.GetGroupConfiguration

-- | <i>See:</i> <a>newGetGroupConfiguration</a> smart constructor.
data GetGroupConfiguration
GetGroupConfiguration' :: Maybe Text -> GetGroupConfiguration

-- | The name or the ARN of the resource group.
[$sel:group':GetGroupConfiguration'] :: GetGroupConfiguration -> Maybe Text

-- | Create a value of <a>GetGroupConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':GetGroupConfiguration'</a>,
--   <a>getGroupConfiguration_group</a> - The name or the ARN of the
--   resource group.
newGetGroupConfiguration :: GetGroupConfiguration

-- | The name or the ARN of the resource group.
getGroupConfiguration_group :: Lens' GetGroupConfiguration (Maybe Text)

-- | <i>See:</i> <a>newGetGroupConfigurationResponse</a> smart constructor.
data GetGroupConfigurationResponse
GetGroupConfigurationResponse' :: Maybe GroupConfiguration -> Int -> GetGroupConfigurationResponse

-- | The service configuration associated with the specified group. For
--   details about the service configuration syntax, see <a>Service
--   configurations for resource groups</a>.
[$sel:groupConfiguration:GetGroupConfigurationResponse'] :: GetGroupConfigurationResponse -> Maybe GroupConfiguration

-- | The response's http status code.
[$sel:httpStatus:GetGroupConfigurationResponse'] :: GetGroupConfigurationResponse -> Int

-- | Create a value of <a>GetGroupConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupConfiguration:GetGroupConfigurationResponse'</a>,
--   <a>getGroupConfigurationResponse_groupConfiguration</a> - The service
--   configuration associated with the specified group. For details about
--   the service configuration syntax, see <a>Service configurations for
--   resource groups</a>.
--   
--   <a>$sel:httpStatus:GetGroupConfigurationResponse'</a>,
--   <a>getGroupConfigurationResponse_httpStatus</a> - The response's http
--   status code.
newGetGroupConfigurationResponse :: Int -> GetGroupConfigurationResponse

-- | The service configuration associated with the specified group. For
--   details about the service configuration syntax, see <a>Service
--   configurations for resource groups</a>.
getGroupConfigurationResponse_groupConfiguration :: Lens' GetGroupConfigurationResponse (Maybe GroupConfiguration)

-- | The response's http status code.
getGroupConfigurationResponse_httpStatus :: Lens' GetGroupConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroups.GetGroupConfiguration.GetGroupConfiguration
instance GHC.Show.Show Network.AWS.ResourceGroups.GetGroupConfiguration.GetGroupConfiguration
instance GHC.Read.Read Network.AWS.ResourceGroups.GetGroupConfiguration.GetGroupConfiguration
instance GHC.Classes.Eq Network.AWS.ResourceGroups.GetGroupConfiguration.GetGroupConfiguration
instance GHC.Generics.Generic Network.AWS.ResourceGroups.GetGroupConfiguration.GetGroupConfigurationResponse
instance GHC.Show.Show Network.AWS.ResourceGroups.GetGroupConfiguration.GetGroupConfigurationResponse
instance GHC.Read.Read Network.AWS.ResourceGroups.GetGroupConfiguration.GetGroupConfigurationResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroups.GetGroupConfiguration.GetGroupConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroups.GetGroupConfiguration.GetGroupConfiguration
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.GetGroupConfiguration.GetGroupConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.GetGroupConfiguration.GetGroupConfiguration
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.GetGroupConfiguration.GetGroupConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroups.GetGroupConfiguration.GetGroupConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.GetGroupConfiguration.GetGroupConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroups.GetGroupConfiguration.GetGroupConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.GetGroupConfiguration.GetGroupConfiguration


-- | Returns information about a specified resource group.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li><pre>resource-groups:GetGroup</pre></li>
--   </ul>
module Network.AWS.ResourceGroups.GetGroup

-- | <i>See:</i> <a>newGetGroup</a> smart constructor.
data GetGroup
GetGroup' :: Maybe Text -> Maybe Text -> GetGroup

-- | Deprecated - don't use this parameter. Use <tt>Group</tt> instead.
[$sel:groupName:GetGroup'] :: GetGroup -> Maybe Text

-- | The name or the ARN of the resource group to retrieve.
[$sel:group':GetGroup'] :: GetGroup -> Maybe Text

-- | Create a value of <a>GetGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:GetGroup'</a>, <a>getGroup_groupName</a> -
--   Deprecated - don't use this parameter. Use <tt>Group</tt> instead.
--   
--   <a>$sel:group':GetGroup'</a>, <a>getGroup_group</a> - The name or the
--   ARN of the resource group to retrieve.
newGetGroup :: GetGroup

-- | Deprecated - don't use this parameter. Use <tt>Group</tt> instead.
getGroup_groupName :: Lens' GetGroup (Maybe Text)

-- | The name or the ARN of the resource group to retrieve.
getGroup_group :: Lens' GetGroup (Maybe Text)

-- | <i>See:</i> <a>newGetGroupResponse</a> smart constructor.
data GetGroupResponse
GetGroupResponse' :: Maybe Group -> Int -> GetGroupResponse

-- | A full description of the resource group.
[$sel:group':GetGroupResponse'] :: GetGroupResponse -> Maybe Group

-- | The response's http status code.
[$sel:httpStatus:GetGroupResponse'] :: GetGroupResponse -> Int

-- | Create a value of <a>GetGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':GetGroup'</a>, <a>getGroupResponse_group</a> - A full
--   description of the resource group.
--   
--   <a>$sel:httpStatus:GetGroupResponse'</a>,
--   <a>getGroupResponse_httpStatus</a> - The response's http status code.
newGetGroupResponse :: Int -> GetGroupResponse

-- | A full description of the resource group.
getGroupResponse_group :: Lens' GetGroupResponse (Maybe Group)

-- | The response's http status code.
getGroupResponse_httpStatus :: Lens' GetGroupResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroups.GetGroup.GetGroup
instance GHC.Show.Show Network.AWS.ResourceGroups.GetGroup.GetGroup
instance GHC.Read.Read Network.AWS.ResourceGroups.GetGroup.GetGroup
instance GHC.Classes.Eq Network.AWS.ResourceGroups.GetGroup.GetGroup
instance GHC.Generics.Generic Network.AWS.ResourceGroups.GetGroup.GetGroupResponse
instance GHC.Show.Show Network.AWS.ResourceGroups.GetGroup.GetGroupResponse
instance GHC.Read.Read Network.AWS.ResourceGroups.GetGroup.GetGroupResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroups.GetGroup.GetGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroups.GetGroup.GetGroup
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.GetGroup.GetGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.GetGroup.GetGroup
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.GetGroup.GetGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroups.GetGroup.GetGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.GetGroup.GetGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroups.GetGroup.GetGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.GetGroup.GetGroup


-- | Deletes the specified resource group. Deleting a resource group does
--   not delete any resources that are members of the group; it only
--   deletes the group structure.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li><pre>resource-groups:DeleteGroup</pre></li>
--   </ul>
module Network.AWS.ResourceGroups.DeleteGroup

-- | <i>See:</i> <a>newDeleteGroup</a> smart constructor.
data DeleteGroup
DeleteGroup' :: Maybe Text -> Maybe Text -> DeleteGroup

-- | Deprecated - don't use this parameter. Use <tt>Group</tt> instead.
[$sel:groupName:DeleteGroup'] :: DeleteGroup -> Maybe Text

-- | The name or the ARN of the resource group to delete.
[$sel:group':DeleteGroup'] :: DeleteGroup -> Maybe Text

-- | Create a value of <a>DeleteGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:DeleteGroup'</a>, <a>deleteGroup_groupName</a> -
--   Deprecated - don't use this parameter. Use <tt>Group</tt> instead.
--   
--   <a>$sel:group':DeleteGroup'</a>, <a>deleteGroup_group</a> - The name
--   or the ARN of the resource group to delete.
newDeleteGroup :: DeleteGroup

-- | Deprecated - don't use this parameter. Use <tt>Group</tt> instead.
deleteGroup_groupName :: Lens' DeleteGroup (Maybe Text)

-- | The name or the ARN of the resource group to delete.
deleteGroup_group :: Lens' DeleteGroup (Maybe Text)

-- | <i>See:</i> <a>newDeleteGroupResponse</a> smart constructor.
data DeleteGroupResponse
DeleteGroupResponse' :: Maybe Group -> Int -> DeleteGroupResponse

-- | A full description of the deleted resource group.
[$sel:group':DeleteGroupResponse'] :: DeleteGroupResponse -> Maybe Group

-- | The response's http status code.
[$sel:httpStatus:DeleteGroupResponse'] :: DeleteGroupResponse -> Int

-- | Create a value of <a>DeleteGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':DeleteGroup'</a>, <a>deleteGroupResponse_group</a> - A
--   full description of the deleted resource group.
--   
--   <a>$sel:httpStatus:DeleteGroupResponse'</a>,
--   <a>deleteGroupResponse_httpStatus</a> - The response's http status
--   code.
newDeleteGroupResponse :: Int -> DeleteGroupResponse

-- | A full description of the deleted resource group.
deleteGroupResponse_group :: Lens' DeleteGroupResponse (Maybe Group)

-- | The response's http status code.
deleteGroupResponse_httpStatus :: Lens' DeleteGroupResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroups.DeleteGroup.DeleteGroup
instance GHC.Show.Show Network.AWS.ResourceGroups.DeleteGroup.DeleteGroup
instance GHC.Read.Read Network.AWS.ResourceGroups.DeleteGroup.DeleteGroup
instance GHC.Classes.Eq Network.AWS.ResourceGroups.DeleteGroup.DeleteGroup
instance GHC.Generics.Generic Network.AWS.ResourceGroups.DeleteGroup.DeleteGroupResponse
instance GHC.Show.Show Network.AWS.ResourceGroups.DeleteGroup.DeleteGroupResponse
instance GHC.Read.Read Network.AWS.ResourceGroups.DeleteGroup.DeleteGroupResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroups.DeleteGroup.DeleteGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroups.DeleteGroup.DeleteGroup
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.DeleteGroup.DeleteGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.DeleteGroup.DeleteGroup
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.DeleteGroup.DeleteGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroups.DeleteGroup.DeleteGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.DeleteGroup.DeleteGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroups.DeleteGroup.DeleteGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.DeleteGroup.DeleteGroup


-- | Creates a resource group with the specified name and description. You
--   can optionally include a resource query, or a service configuration.
--   For more information about constructing a resource query, see
--   <a>Create a tag-based group in Resource Groups</a>. For more
--   information about service configurations, see <a>Service
--   configurations for resource groups</a>.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li><pre>resource-groups:CreateGroup</pre></li>
--   </ul>
module Network.AWS.ResourceGroups.CreateGroup

-- | <i>See:</i> <a>newCreateGroup</a> smart constructor.
data CreateGroup
CreateGroup' :: Maybe [GroupConfigurationItem] -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe ResourceQuery -> Text -> CreateGroup

-- | A configuration associates the resource group with an AWS service and
--   specifies how the service can interact with the resources in the
--   group. A configuration is an array of GroupConfigurationItem elements.
--   For details about the syntax of service configurations, see <a>Service
--   configurations for resource groups</a>.
--   
--   A resource group can contain either a <tt>Configuration</tt> or a
--   <tt>ResourceQuery</tt>, but not both.
[$sel:configuration:CreateGroup'] :: CreateGroup -> Maybe [GroupConfigurationItem]

-- | The tags to add to the group. A tag is key-value pair string.
[$sel:tags:CreateGroup'] :: CreateGroup -> Maybe (HashMap Text Text)

-- | The description of the resource group. Descriptions can consist of
--   letters, numbers, hyphens, underscores, periods, and spaces.
[$sel:description:CreateGroup'] :: CreateGroup -> Maybe Text

-- | The resource query that determines which AWS resources are members of
--   this group. For more information about resource queries, see <a>Create
--   a tag-based group in Resource Groups</a>.
--   
--   A resource group can contain either a <tt>ResourceQuery</tt> or a
--   <tt>Configuration</tt>, but not both.
[$sel:resourceQuery:CreateGroup'] :: CreateGroup -> Maybe ResourceQuery

-- | The name of the group, which is the identifier of the group in other
--   operations. You can't change the name of a resource group after you
--   create it. A resource group name can consist of letters, numbers,
--   hyphens, periods, and underscores. The name cannot start with
--   <tt>AWS</tt> or <tt>aws</tt>; these are reserved. A resource group
--   name must be unique within each AWS Region in your AWS account.
[$sel:name:CreateGroup'] :: CreateGroup -> Text

-- | Create a value of <a>CreateGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configuration:CreateGroup'</a>,
--   <a>createGroup_configuration</a> - A configuration associates the
--   resource group with an AWS service and specifies how the service can
--   interact with the resources in the group. A configuration is an array
--   of GroupConfigurationItem elements. For details about the syntax of
--   service configurations, see <a>Service configurations for resource
--   groups</a>.
--   
--   A resource group can contain either a <tt>Configuration</tt> or a
--   <tt>ResourceQuery</tt>, but not both.
--   
--   <a>$sel:tags:CreateGroup'</a>, <a>createGroup_tags</a> - The tags to
--   add to the group. A tag is key-value pair string.
--   
--   <a>$sel:description:CreateGroup'</a>, <a>createGroup_description</a> -
--   The description of the resource group. Descriptions can consist of
--   letters, numbers, hyphens, underscores, periods, and spaces.
--   
--   <a>$sel:resourceQuery:CreateGroup'</a>,
--   <a>createGroup_resourceQuery</a> - The resource query that determines
--   which AWS resources are members of this group. For more information
--   about resource queries, see <a>Create a tag-based group in Resource
--   Groups</a>.
--   
--   A resource group can contain either a <tt>ResourceQuery</tt> or a
--   <tt>Configuration</tt>, but not both.
--   
--   <a>$sel:name:CreateGroup'</a>, <a>createGroup_name</a> - The name of
--   the group, which is the identifier of the group in other operations.
--   You can't change the name of a resource group after you create it. A
--   resource group name can consist of letters, numbers, hyphens, periods,
--   and underscores. The name cannot start with <tt>AWS</tt> or
--   <tt>aws</tt>; these are reserved. A resource group name must be unique
--   within each AWS Region in your AWS account.
newCreateGroup :: Text -> CreateGroup

-- | A configuration associates the resource group with an AWS service and
--   specifies how the service can interact with the resources in the
--   group. A configuration is an array of GroupConfigurationItem elements.
--   For details about the syntax of service configurations, see <a>Service
--   configurations for resource groups</a>.
--   
--   A resource group can contain either a <tt>Configuration</tt> or a
--   <tt>ResourceQuery</tt>, but not both.
createGroup_configuration :: Lens' CreateGroup (Maybe [GroupConfigurationItem])

-- | The tags to add to the group. A tag is key-value pair string.
createGroup_tags :: Lens' CreateGroup (Maybe (HashMap Text Text))

-- | The description of the resource group. Descriptions can consist of
--   letters, numbers, hyphens, underscores, periods, and spaces.
createGroup_description :: Lens' CreateGroup (Maybe Text)

-- | The resource query that determines which AWS resources are members of
--   this group. For more information about resource queries, see <a>Create
--   a tag-based group in Resource Groups</a>.
--   
--   A resource group can contain either a <tt>ResourceQuery</tt> or a
--   <tt>Configuration</tt>, but not both.
createGroup_resourceQuery :: Lens' CreateGroup (Maybe ResourceQuery)

-- | The name of the group, which is the identifier of the group in other
--   operations. You can't change the name of a resource group after you
--   create it. A resource group name can consist of letters, numbers,
--   hyphens, periods, and underscores. The name cannot start with
--   <tt>AWS</tt> or <tt>aws</tt>; these are reserved. A resource group
--   name must be unique within each AWS Region in your AWS account.
createGroup_name :: Lens' CreateGroup Text

-- | <i>See:</i> <a>newCreateGroupResponse</a> smart constructor.
data CreateGroupResponse
CreateGroupResponse' :: Maybe GroupConfiguration -> Maybe Group -> Maybe (HashMap Text Text) -> Maybe ResourceQuery -> Int -> CreateGroupResponse

-- | The service configuration associated with the resource group. For
--   details about the syntax of a service configuration, see <a>Service
--   configurations for resource groups</a>.
[$sel:groupConfiguration:CreateGroupResponse'] :: CreateGroupResponse -> Maybe GroupConfiguration

-- | The description of the resource group.
[$sel:group':CreateGroupResponse'] :: CreateGroupResponse -> Maybe Group

-- | The tags associated with the group.
[$sel:tags:CreateGroupResponse'] :: CreateGroupResponse -> Maybe (HashMap Text Text)

-- | The resource query associated with the group. For more information
--   about resource queries, see <a>Create a tag-based group in Resource
--   Groups</a>.
[$sel:resourceQuery:CreateGroupResponse'] :: CreateGroupResponse -> Maybe ResourceQuery

-- | The response's http status code.
[$sel:httpStatus:CreateGroupResponse'] :: CreateGroupResponse -> Int

-- | Create a value of <a>CreateGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupConfiguration:CreateGroupResponse'</a>,
--   <a>createGroupResponse_groupConfiguration</a> - The service
--   configuration associated with the resource group. For details about
--   the syntax of a service configuration, see <a>Service configurations
--   for resource groups</a>.
--   
--   <a>$sel:group':CreateGroupResponse'</a>,
--   <a>createGroupResponse_group</a> - The description of the resource
--   group.
--   
--   <a>$sel:tags:CreateGroup'</a>, <a>createGroupResponse_tags</a> - The
--   tags associated with the group.
--   
--   <a>$sel:resourceQuery:CreateGroup'</a>,
--   <a>createGroupResponse_resourceQuery</a> - The resource query
--   associated with the group. For more information about resource
--   queries, see <a>Create a tag-based group in Resource Groups</a>.
--   
--   <a>$sel:httpStatus:CreateGroupResponse'</a>,
--   <a>createGroupResponse_httpStatus</a> - The response's http status
--   code.
newCreateGroupResponse :: Int -> CreateGroupResponse

-- | The service configuration associated with the resource group. For
--   details about the syntax of a service configuration, see <a>Service
--   configurations for resource groups</a>.
createGroupResponse_groupConfiguration :: Lens' CreateGroupResponse (Maybe GroupConfiguration)

-- | The description of the resource group.
createGroupResponse_group :: Lens' CreateGroupResponse (Maybe Group)

-- | The tags associated with the group.
createGroupResponse_tags :: Lens' CreateGroupResponse (Maybe (HashMap Text Text))

-- | The resource query associated with the group. For more information
--   about resource queries, see <a>Create a tag-based group in Resource
--   Groups</a>.
createGroupResponse_resourceQuery :: Lens' CreateGroupResponse (Maybe ResourceQuery)

-- | The response's http status code.
createGroupResponse_httpStatus :: Lens' CreateGroupResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroups.CreateGroup.CreateGroup
instance GHC.Show.Show Network.AWS.ResourceGroups.CreateGroup.CreateGroup
instance GHC.Read.Read Network.AWS.ResourceGroups.CreateGroup.CreateGroup
instance GHC.Classes.Eq Network.AWS.ResourceGroups.CreateGroup.CreateGroup
instance GHC.Generics.Generic Network.AWS.ResourceGroups.CreateGroup.CreateGroupResponse
instance GHC.Show.Show Network.AWS.ResourceGroups.CreateGroup.CreateGroupResponse
instance GHC.Read.Read Network.AWS.ResourceGroups.CreateGroup.CreateGroupResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroups.CreateGroup.CreateGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroups.CreateGroup.CreateGroup
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.CreateGroup.CreateGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.CreateGroup.CreateGroup
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.CreateGroup.CreateGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroups.CreateGroup.CreateGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.CreateGroup.CreateGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroups.CreateGroup.CreateGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.CreateGroup.CreateGroup


-- | Removes the specified resources from the specified group.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li><pre>resource-groups:UngroupResources</pre></li>
--   </ul>
module Network.AWS.ResourceGroups.UngroupResources

-- | <i>See:</i> <a>newUngroupResources</a> smart constructor.
data UngroupResources
UngroupResources' :: Text -> NonEmpty Text -> UngroupResources

-- | The name or the ARN of the resource group from which to remove the
--   resources.
[$sel:group':UngroupResources'] :: UngroupResources -> Text

-- | The ARNs of the resources to be removed from the group.
[$sel:resourceArns:UngroupResources'] :: UngroupResources -> NonEmpty Text

-- | Create a value of <a>UngroupResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':UngroupResources'</a>, <a>ungroupResources_group</a> -
--   The name or the ARN of the resource group from which to remove the
--   resources.
--   
--   <a>$sel:resourceArns:UngroupResources'</a>,
--   <a>ungroupResources_resourceArns</a> - The ARNs of the resources to be
--   removed from the group.
newUngroupResources :: Text -> NonEmpty Text -> UngroupResources

-- | The name or the ARN of the resource group from which to remove the
--   resources.
ungroupResources_group :: Lens' UngroupResources Text

-- | The ARNs of the resources to be removed from the group.
ungroupResources_resourceArns :: Lens' UngroupResources (NonEmpty Text)

-- | <i>See:</i> <a>newUngroupResourcesResponse</a> smart constructor.
data UngroupResourcesResponse
UngroupResourcesResponse' :: Maybe (NonEmpty Text) -> Maybe [PendingResource] -> Maybe [FailedResource] -> Int -> UngroupResourcesResponse

-- | A list of resources that were successfully removed from the group by
--   this operation.
[$sel:succeeded:UngroupResourcesResponse'] :: UngroupResourcesResponse -> Maybe (NonEmpty Text)

-- | A list of any resources that are still in the process of being removed
--   from the group by this operation. These pending removals continue
--   asynchronously. You can check the status of pending removals by using
--   the <tt> ListGroupResources </tt> operation. After the resource is
--   successfully removed, it no longer appears in the response.
[$sel:pending:UngroupResourcesResponse'] :: UngroupResourcesResponse -> Maybe [PendingResource]

-- | A list of any resources that failed to be removed from the group by
--   this operation.
[$sel:failed:UngroupResourcesResponse'] :: UngroupResourcesResponse -> Maybe [FailedResource]

-- | The response's http status code.
[$sel:httpStatus:UngroupResourcesResponse'] :: UngroupResourcesResponse -> Int

-- | Create a value of <a>UngroupResourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:succeeded:UngroupResourcesResponse'</a>,
--   <a>ungroupResourcesResponse_succeeded</a> - A list of resources that
--   were successfully removed from the group by this operation.
--   
--   <a>$sel:pending:UngroupResourcesResponse'</a>,
--   <a>ungroupResourcesResponse_pending</a> - A list of any resources that
--   are still in the process of being removed from the group by this
--   operation. These pending removals continue asynchronously. You can
--   check the status of pending removals by using the <tt>
--   ListGroupResources </tt> operation. After the resource is successfully
--   removed, it no longer appears in the response.
--   
--   <a>$sel:failed:UngroupResourcesResponse'</a>,
--   <a>ungroupResourcesResponse_failed</a> - A list of any resources that
--   failed to be removed from the group by this operation.
--   
--   <a>$sel:httpStatus:UngroupResourcesResponse'</a>,
--   <a>ungroupResourcesResponse_httpStatus</a> - The response's http
--   status code.
newUngroupResourcesResponse :: Int -> UngroupResourcesResponse

-- | A list of resources that were successfully removed from the group by
--   this operation.
ungroupResourcesResponse_succeeded :: Lens' UngroupResourcesResponse (Maybe (NonEmpty Text))

-- | A list of any resources that are still in the process of being removed
--   from the group by this operation. These pending removals continue
--   asynchronously. You can check the status of pending removals by using
--   the <tt> ListGroupResources </tt> operation. After the resource is
--   successfully removed, it no longer appears in the response.
ungroupResourcesResponse_pending :: Lens' UngroupResourcesResponse (Maybe [PendingResource])

-- | A list of any resources that failed to be removed from the group by
--   this operation.
ungroupResourcesResponse_failed :: Lens' UngroupResourcesResponse (Maybe [FailedResource])

-- | The response's http status code.
ungroupResourcesResponse_httpStatus :: Lens' UngroupResourcesResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroups.UngroupResources.UngroupResources
instance GHC.Show.Show Network.AWS.ResourceGroups.UngroupResources.UngroupResources
instance GHC.Read.Read Network.AWS.ResourceGroups.UngroupResources.UngroupResources
instance GHC.Classes.Eq Network.AWS.ResourceGroups.UngroupResources.UngroupResources
instance GHC.Generics.Generic Network.AWS.ResourceGroups.UngroupResources.UngroupResourcesResponse
instance GHC.Show.Show Network.AWS.ResourceGroups.UngroupResources.UngroupResourcesResponse
instance GHC.Read.Read Network.AWS.ResourceGroups.UngroupResources.UngroupResourcesResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroups.UngroupResources.UngroupResourcesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroups.UngroupResources.UngroupResources
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.UngroupResources.UngroupResourcesResponse
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.UngroupResources.UngroupResources
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.UngroupResources.UngroupResources
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroups.UngroupResources.UngroupResources
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.UngroupResources.UngroupResources
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroups.UngroupResources.UngroupResources
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.UngroupResources.UngroupResources


-- | Deletes tags from a specified resource group.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li><pre>resource-groups:Untag</pre></li>
--   </ul>
module Network.AWS.ResourceGroups.Untag

-- | <i>See:</i> <a>newUntag</a> smart constructor.
data Untag
Untag' :: Text -> [Text] -> Untag

-- | The ARN of the resource group from which to remove tags. The command
--   removed both the specified keys and any values associated with those
--   keys.
[$sel:arn:Untag'] :: Untag -> Text

-- | The keys of the tags to be removed.
[$sel:keys:Untag'] :: Untag -> [Text]

-- | Create a value of <a>Untag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Untag'</a>, <a>untag_arn</a> - The ARN of the resource
--   group from which to remove tags. The command removed both the
--   specified keys and any values associated with those keys.
--   
--   <a>$sel:keys:Untag'</a>, <a>untag_keys</a> - The keys of the tags to
--   be removed.
newUntag :: Text -> Untag

-- | The ARN of the resource group from which to remove tags. The command
--   removed both the specified keys and any values associated with those
--   keys.
untag_arn :: Lens' Untag Text

-- | The keys of the tags to be removed.
untag_keys :: Lens' Untag [Text]

-- | <i>See:</i> <a>newUntagResponse</a> smart constructor.
data UntagResponse
UntagResponse' :: Maybe Text -> Maybe [Text] -> Int -> UntagResponse

-- | The ARN of the resource group from which tags have been removed.
[$sel:arn:UntagResponse'] :: UntagResponse -> Maybe Text

-- | The keys of the tags that were removed.
[$sel:keys:UntagResponse'] :: UntagResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:UntagResponse'] :: UntagResponse -> Int

-- | Create a value of <a>UntagResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Untag'</a>, <a>untagResponse_arn</a> - The ARN of the
--   resource group from which tags have been removed.
--   
--   <a>$sel:keys:Untag'</a>, <a>untagResponse_keys</a> - The keys of the
--   tags that were removed.
--   
--   <a>$sel:httpStatus:UntagResponse'</a>, <a>untagResponse_httpStatus</a>
--   - The response's http status code.
newUntagResponse :: Int -> UntagResponse

-- | The ARN of the resource group from which tags have been removed.
untagResponse_arn :: Lens' UntagResponse (Maybe Text)

-- | The keys of the tags that were removed.
untagResponse_keys :: Lens' UntagResponse (Maybe [Text])

-- | The response's http status code.
untagResponse_httpStatus :: Lens' UntagResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Untag.Untag
instance GHC.Show.Show Network.AWS.ResourceGroups.Untag.Untag
instance GHC.Read.Read Network.AWS.ResourceGroups.Untag.Untag
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Untag.Untag
instance GHC.Generics.Generic Network.AWS.ResourceGroups.Untag.UntagResponse
instance GHC.Show.Show Network.AWS.ResourceGroups.Untag.UntagResponse
instance GHC.Read.Read Network.AWS.ResourceGroups.Untag.UntagResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroups.Untag.UntagResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroups.Untag.Untag
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Untag.UntagResponse
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.Untag.Untag
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.Untag.Untag
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroups.Untag.Untag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.Untag.Untag
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroups.Untag.Untag
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.Untag.Untag


-- | Updates the description for an existing group. You cannot update the
--   name of a resource group.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li><pre>resource-groups:UpdateGroup</pre></li>
--   </ul>
module Network.AWS.ResourceGroups.UpdateGroup

-- | <i>See:</i> <a>newUpdateGroup</a> smart constructor.
data UpdateGroup
UpdateGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> UpdateGroup

-- | Don't use this parameter. Use <tt>Group</tt> instead.
[$sel:groupName:UpdateGroup'] :: UpdateGroup -> Maybe Text

-- | The name or the ARN of the resource group to modify.
[$sel:group':UpdateGroup'] :: UpdateGroup -> Maybe Text

-- | The new description that you want to update the resource group with.
--   Descriptions can contain letters, numbers, hyphens, underscores,
--   periods, and spaces.
[$sel:description:UpdateGroup'] :: UpdateGroup -> Maybe Text

-- | Create a value of <a>UpdateGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:UpdateGroup'</a>, <a>updateGroup_groupName</a> -
--   Don't use this parameter. Use <tt>Group</tt> instead.
--   
--   <a>$sel:group':UpdateGroup'</a>, <a>updateGroup_group</a> - The name
--   or the ARN of the resource group to modify.
--   
--   <a>$sel:description:UpdateGroup'</a>, <a>updateGroup_description</a> -
--   The new description that you want to update the resource group with.
--   Descriptions can contain letters, numbers, hyphens, underscores,
--   periods, and spaces.
newUpdateGroup :: UpdateGroup

-- | Don't use this parameter. Use <tt>Group</tt> instead.
updateGroup_groupName :: Lens' UpdateGroup (Maybe Text)

-- | The name or the ARN of the resource group to modify.
updateGroup_group :: Lens' UpdateGroup (Maybe Text)

-- | The new description that you want to update the resource group with.
--   Descriptions can contain letters, numbers, hyphens, underscores,
--   periods, and spaces.
updateGroup_description :: Lens' UpdateGroup (Maybe Text)

-- | <i>See:</i> <a>newUpdateGroupResponse</a> smart constructor.
data UpdateGroupResponse
UpdateGroupResponse' :: Maybe Group -> Int -> UpdateGroupResponse

-- | The update description of the resource group.
[$sel:group':UpdateGroupResponse'] :: UpdateGroupResponse -> Maybe Group

-- | The response's http status code.
[$sel:httpStatus:UpdateGroupResponse'] :: UpdateGroupResponse -> Int

-- | Create a value of <a>UpdateGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':UpdateGroup'</a>, <a>updateGroupResponse_group</a> -
--   The update description of the resource group.
--   
--   <a>$sel:httpStatus:UpdateGroupResponse'</a>,
--   <a>updateGroupResponse_httpStatus</a> - The response's http status
--   code.
newUpdateGroupResponse :: Int -> UpdateGroupResponse

-- | The update description of the resource group.
updateGroupResponse_group :: Lens' UpdateGroupResponse (Maybe Group)

-- | The response's http status code.
updateGroupResponse_httpStatus :: Lens' UpdateGroupResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroups.UpdateGroup.UpdateGroup
instance GHC.Show.Show Network.AWS.ResourceGroups.UpdateGroup.UpdateGroup
instance GHC.Read.Read Network.AWS.ResourceGroups.UpdateGroup.UpdateGroup
instance GHC.Classes.Eq Network.AWS.ResourceGroups.UpdateGroup.UpdateGroup
instance GHC.Generics.Generic Network.AWS.ResourceGroups.UpdateGroup.UpdateGroupResponse
instance GHC.Show.Show Network.AWS.ResourceGroups.UpdateGroup.UpdateGroupResponse
instance GHC.Read.Read Network.AWS.ResourceGroups.UpdateGroup.UpdateGroupResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroups.UpdateGroup.UpdateGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroups.UpdateGroup.UpdateGroup
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.UpdateGroup.UpdateGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.UpdateGroup.UpdateGroup
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.UpdateGroup.UpdateGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroups.UpdateGroup.UpdateGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.UpdateGroup.UpdateGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroups.UpdateGroup.UpdateGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.UpdateGroup.UpdateGroup


-- | Updates the resource query of a group. For more information about
--   resource queries, see <a>Create a tag-based group in Resource
--   Groups</a>.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li><pre>resource-groups:UpdateGroupQuery</pre></li>
--   </ul>
module Network.AWS.ResourceGroups.UpdateGroupQuery

-- | <i>See:</i> <a>newUpdateGroupQuery</a> smart constructor.
data UpdateGroupQuery
UpdateGroupQuery' :: Maybe Text -> Maybe Text -> ResourceQuery -> UpdateGroupQuery

-- | Don't use this parameter. Use <tt>Group</tt> instead.
[$sel:groupName:UpdateGroupQuery'] :: UpdateGroupQuery -> Maybe Text

-- | The name or the ARN of the resource group to query.
[$sel:group':UpdateGroupQuery'] :: UpdateGroupQuery -> Maybe Text

-- | The resource query to determine which AWS resources are members of
--   this resource group.
--   
--   A resource group can contain either a <tt>Configuration</tt> or a
--   <tt>ResourceQuery</tt>, but not both.
[$sel:resourceQuery:UpdateGroupQuery'] :: UpdateGroupQuery -> ResourceQuery

-- | Create a value of <a>UpdateGroupQuery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:UpdateGroupQuery'</a>,
--   <a>updateGroupQuery_groupName</a> - Don't use this parameter. Use
--   <tt>Group</tt> instead.
--   
--   <a>$sel:group':UpdateGroupQuery'</a>, <a>updateGroupQuery_group</a> -
--   The name or the ARN of the resource group to query.
--   
--   <a>$sel:resourceQuery:UpdateGroupQuery'</a>,
--   <a>updateGroupQuery_resourceQuery</a> - The resource query to
--   determine which AWS resources are members of this resource group.
--   
--   A resource group can contain either a <tt>Configuration</tt> or a
--   <tt>ResourceQuery</tt>, but not both.
newUpdateGroupQuery :: ResourceQuery -> UpdateGroupQuery

-- | Don't use this parameter. Use <tt>Group</tt> instead.
updateGroupQuery_groupName :: Lens' UpdateGroupQuery (Maybe Text)

-- | The name or the ARN of the resource group to query.
updateGroupQuery_group :: Lens' UpdateGroupQuery (Maybe Text)

-- | The resource query to determine which AWS resources are members of
--   this resource group.
--   
--   A resource group can contain either a <tt>Configuration</tt> or a
--   <tt>ResourceQuery</tt>, but not both.
updateGroupQuery_resourceQuery :: Lens' UpdateGroupQuery ResourceQuery

-- | <i>See:</i> <a>newUpdateGroupQueryResponse</a> smart constructor.
data UpdateGroupQueryResponse
UpdateGroupQueryResponse' :: Maybe GroupQuery -> Int -> UpdateGroupQueryResponse

-- | The updated resource query associated with the resource group after
--   the update.
[$sel:groupQuery:UpdateGroupQueryResponse'] :: UpdateGroupQueryResponse -> Maybe GroupQuery

-- | The response's http status code.
[$sel:httpStatus:UpdateGroupQueryResponse'] :: UpdateGroupQueryResponse -> Int

-- | Create a value of <a>UpdateGroupQueryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupQuery:UpdateGroupQueryResponse'</a>,
--   <a>updateGroupQueryResponse_groupQuery</a> - The updated resource
--   query associated with the resource group after the update.
--   
--   <a>$sel:httpStatus:UpdateGroupQueryResponse'</a>,
--   <a>updateGroupQueryResponse_httpStatus</a> - The response's http
--   status code.
newUpdateGroupQueryResponse :: Int -> UpdateGroupQueryResponse

-- | The updated resource query associated with the resource group after
--   the update.
updateGroupQueryResponse_groupQuery :: Lens' UpdateGroupQueryResponse (Maybe GroupQuery)

-- | The response's http status code.
updateGroupQueryResponse_httpStatus :: Lens' UpdateGroupQueryResponse Int
instance GHC.Generics.Generic Network.AWS.ResourceGroups.UpdateGroupQuery.UpdateGroupQuery
instance GHC.Show.Show Network.AWS.ResourceGroups.UpdateGroupQuery.UpdateGroupQuery
instance GHC.Read.Read Network.AWS.ResourceGroups.UpdateGroupQuery.UpdateGroupQuery
instance GHC.Classes.Eq Network.AWS.ResourceGroups.UpdateGroupQuery.UpdateGroupQuery
instance GHC.Generics.Generic Network.AWS.ResourceGroups.UpdateGroupQuery.UpdateGroupQueryResponse
instance GHC.Show.Show Network.AWS.ResourceGroups.UpdateGroupQuery.UpdateGroupQueryResponse
instance GHC.Read.Read Network.AWS.ResourceGroups.UpdateGroupQuery.UpdateGroupQueryResponse
instance GHC.Classes.Eq Network.AWS.ResourceGroups.UpdateGroupQuery.UpdateGroupQueryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ResourceGroups.UpdateGroupQuery.UpdateGroupQuery
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.UpdateGroupQuery.UpdateGroupQueryResponse
instance Data.Hashable.Class.Hashable Network.AWS.ResourceGroups.UpdateGroupQuery.UpdateGroupQuery
instance Control.DeepSeq.NFData Network.AWS.ResourceGroups.UpdateGroupQuery.UpdateGroupQuery
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ResourceGroups.UpdateGroupQuery.UpdateGroupQuery
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ResourceGroups.UpdateGroupQuery.UpdateGroupQuery
instance Network.AWS.Data.Path.ToPath Network.AWS.ResourceGroups.UpdateGroupQuery.UpdateGroupQuery
instance Network.AWS.Data.Query.ToQuery Network.AWS.ResourceGroups.UpdateGroupQuery.UpdateGroupQuery


module Network.AWS.ResourceGroups.Lens

-- | The name or the ARN of the resource group.
getGroupConfiguration_group :: Lens' GetGroupConfiguration (Maybe Text)

-- | The service configuration associated with the specified group. For
--   details about the service configuration syntax, see <a>Service
--   configurations for resource groups</a>.
getGroupConfigurationResponse_groupConfiguration :: Lens' GetGroupConfigurationResponse (Maybe GroupConfiguration)

-- | The response's http status code.
getGroupConfigurationResponse_httpStatus :: Lens' GetGroupConfigurationResponse Int

-- | The new configuration to associate with the specified group. A
--   configuration associates the resource group with an AWS service and
--   specifies how the service can interact with the resources in the
--   group. A configuration is an array of GroupConfigurationItem elements.
--   
--   For information about the syntax of a service configuration, see
--   <a>Service configurations for resource groups</a>.
--   
--   A resource group can contain either a <tt>Configuration</tt> or a
--   <tt>ResourceQuery</tt>, but not both.
putGroupConfiguration_configuration :: Lens' PutGroupConfiguration (Maybe [GroupConfigurationItem])

-- | The name or ARN of the resource group with the configuration that you
--   want to update.
putGroupConfiguration_group :: Lens' PutGroupConfiguration (Maybe Text)

-- | The response's http status code.
putGroupConfigurationResponse_httpStatus :: Lens' PutGroupConfigurationResponse Int

-- | The parameter for receiving additional results if you receive a
--   <tt>NextToken</tt> response in a previous request. A
--   <tt>NextToken</tt> response indicates that more output is available.
--   Set this parameter to the value provided by a previous call's
--   <tt>NextToken</tt> response to indicate where the output should
--   continue from.
listGroups_nextToken :: Lens' ListGroups (Maybe Text)

-- | The total number of results that you want included on each page of the
--   response. If you do not include this parameter, it defaults to a value
--   that is specific to the operation. If additional items exist beyond
--   the maximum you specify, the <tt>NextToken</tt> response element is
--   present and has a value (is not null). Include that value as the
--   <tt>NextToken</tt> request parameter in the next call to the operation
--   to get the next part of the results. Note that the service might
--   return fewer results than the maximum even when there are more results
--   available. You should check <tt>NextToken</tt> after every operation
--   to ensure that you receive all of the results.
listGroups_maxResults :: Lens' ListGroups (Maybe Natural)

-- | Filters, formatted as GroupFilter objects, that you want to apply to a
--   <tt>ListGroups</tt> operation.
--   
--   <ul>
--   <li><tt>resource-type</tt> - Filter the results to include only those
--   of the specified resource types. Specify up to five resource types in
--   the format <tt>AWS::ServiceCode::ResourceType </tt>. For example,
--   <tt>AWS::EC2::Instance</tt>, or <tt>AWS::S3::Bucket</tt>.</li>
--   <li><tt>configuration-type</tt> - Filter the results to include only
--   those groups that have the specified configuration types attached. The
--   current supported values
--   are:<ul><li><pre>AWS:EC2::CapacityReservationPool</pre></li><li><pre>AWS:EC2::HostManagement</pre></li></ul></li>
--   </ul>
listGroups_filters :: Lens' ListGroups (Maybe [GroupFilter])

-- | /__Deprecated - don't use this field. Use the
--   <tt>GroupIdentifiers</tt> response field instead.__/
listGroupsResponse_groups :: Lens' ListGroupsResponse (Maybe [Group])

-- | If present, indicates that more output is available than is included
--   in the current response. Use this value in the <tt>NextToken</tt>
--   request parameter in a subsequent call to the operation to get the
--   next part of the output. You should repeat this until the
--   <tt>NextToken</tt> response element comes back as <tt>null</tt>.
listGroupsResponse_nextToken :: Lens' ListGroupsResponse (Maybe Text)

-- | A list of GroupIdentifier objects. Each identifier is an object that
--   contains both the <tt>Name</tt> and the <tt>GroupArn</tt>.
listGroupsResponse_groupIdentifiers :: Lens' ListGroupsResponse (Maybe [GroupIdentifier])

-- | The response's http status code.
listGroupsResponse_httpStatus :: Lens' ListGroupsResponse Int

-- | A configuration associates the resource group with an AWS service and
--   specifies how the service can interact with the resources in the
--   group. A configuration is an array of GroupConfigurationItem elements.
--   For details about the syntax of service configurations, see <a>Service
--   configurations for resource groups</a>.
--   
--   A resource group can contain either a <tt>Configuration</tt> or a
--   <tt>ResourceQuery</tt>, but not both.
createGroup_configuration :: Lens' CreateGroup (Maybe [GroupConfigurationItem])

-- | The tags to add to the group. A tag is key-value pair string.
createGroup_tags :: Lens' CreateGroup (Maybe (HashMap Text Text))

-- | The description of the resource group. Descriptions can consist of
--   letters, numbers, hyphens, underscores, periods, and spaces.
createGroup_description :: Lens' CreateGroup (Maybe Text)

-- | The resource query that determines which AWS resources are members of
--   this group. For more information about resource queries, see <a>Create
--   a tag-based group in Resource Groups</a>.
--   
--   A resource group can contain either a <tt>ResourceQuery</tt> or a
--   <tt>Configuration</tt>, but not both.
createGroup_resourceQuery :: Lens' CreateGroup (Maybe ResourceQuery)

-- | The name of the group, which is the identifier of the group in other
--   operations. You can't change the name of a resource group after you
--   create it. A resource group name can consist of letters, numbers,
--   hyphens, periods, and underscores. The name cannot start with
--   <tt>AWS</tt> or <tt>aws</tt>; these are reserved. A resource group
--   name must be unique within each AWS Region in your AWS account.
createGroup_name :: Lens' CreateGroup Text

-- | The service configuration associated with the resource group. For
--   details about the syntax of a service configuration, see <a>Service
--   configurations for resource groups</a>.
createGroupResponse_groupConfiguration :: Lens' CreateGroupResponse (Maybe GroupConfiguration)

-- | The description of the resource group.
createGroupResponse_group :: Lens' CreateGroupResponse (Maybe Group)

-- | The tags associated with the group.
createGroupResponse_tags :: Lens' CreateGroupResponse (Maybe (HashMap Text Text))

-- | The resource query associated with the group. For more information
--   about resource queries, see <a>Create a tag-based group in Resource
--   Groups</a>.
createGroupResponse_resourceQuery :: Lens' CreateGroupResponse (Maybe ResourceQuery)

-- | The response's http status code.
createGroupResponse_httpStatus :: Lens' CreateGroupResponse Int

-- | Don't use this parameter. Use <tt>Group</tt> instead.
getGroupQuery_groupName :: Lens' GetGroupQuery (Maybe Text)

-- | The name or the ARN of the resource group to query.
getGroupQuery_group :: Lens' GetGroupQuery (Maybe Text)

-- | The resource query associated with the specified group. For more
--   information about resource queries, see <a>Create a tag-based group in
--   Resource Groups</a>.
getGroupQueryResponse_groupQuery :: Lens' GetGroupQueryResponse (Maybe GroupQuery)

-- | The response's http status code.
getGroupQueryResponse_httpStatus :: Lens' GetGroupQueryResponse Int

-- | The parameter for receiving additional results if you receive a
--   <tt>NextToken</tt> response in a previous request. A
--   <tt>NextToken</tt> response indicates that more output is available.
--   Set this parameter to the value provided by a previous call's
--   <tt>NextToken</tt> response to indicate where the output should
--   continue from.
searchResources_nextToken :: Lens' SearchResources (Maybe Text)

-- | The total number of results that you want included on each page of the
--   response. If you do not include this parameter, it defaults to a value
--   that is specific to the operation. If additional items exist beyond
--   the maximum you specify, the <tt>NextToken</tt> response element is
--   present and has a value (is not null). Include that value as the
--   <tt>NextToken</tt> request parameter in the next call to the operation
--   to get the next part of the results. Note that the service might
--   return fewer results than the maximum even when there are more results
--   available. You should check <tt>NextToken</tt> after every operation
--   to ensure that you receive all of the results.
searchResources_maxResults :: Lens' SearchResources (Maybe Natural)

-- | The search query, using the same formats that are supported for
--   resource group definition. For more information, see CreateGroup.
searchResources_resourceQuery :: Lens' SearchResources ResourceQuery

-- | If present, indicates that more output is available than is included
--   in the current response. Use this value in the <tt>NextToken</tt>
--   request parameter in a subsequent call to the operation to get the
--   next part of the output. You should repeat this until the
--   <tt>NextToken</tt> response element comes back as <tt>null</tt>.
searchResourcesResponse_nextToken :: Lens' SearchResourcesResponse (Maybe Text)

-- | The ARNs and resource types of resources that are members of the group
--   that you specified.
searchResourcesResponse_resourceIdentifiers :: Lens' SearchResourcesResponse (Maybe [ResourceIdentifier])

-- | A list of <tt>QueryError</tt> objects. Each error is an object that
--   contains <tt>ErrorCode</tt> and <tt>Message</tt> structures. Possible
--   values for <tt>ErrorCode</tt> are
--   <tt>CLOUDFORMATION_STACK_INACTIVE</tt> and
--   <tt>CLOUDFORMATION_STACK_NOT_EXISTING</tt>.
searchResourcesResponse_queryErrors :: Lens' SearchResourcesResponse (Maybe [QueryError])

-- | The response's http status code.
searchResourcesResponse_httpStatus :: Lens' SearchResourcesResponse Int

-- | The ARN of the resource group whose tags you want to retrieve.
getTags_arn :: Lens' GetTags Text

-- | The ARN of the tagged resource group.
getTagsResponse_arn :: Lens' GetTagsResponse (Maybe Text)

-- | The tags associated with the specified resource group.
getTagsResponse_tags :: Lens' GetTagsResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getTagsResponse_httpStatus :: Lens' GetTagsResponse Int

-- | Don't use this parameter. Use <tt>Group</tt> instead.
updateGroupQuery_groupName :: Lens' UpdateGroupQuery (Maybe Text)

-- | The name or the ARN of the resource group to query.
updateGroupQuery_group :: Lens' UpdateGroupQuery (Maybe Text)

-- | The resource query to determine which AWS resources are members of
--   this resource group.
--   
--   A resource group can contain either a <tt>Configuration</tt> or a
--   <tt>ResourceQuery</tt>, but not both.
updateGroupQuery_resourceQuery :: Lens' UpdateGroupQuery ResourceQuery

-- | The updated resource query associated with the resource group after
--   the update.
updateGroupQueryResponse_groupQuery :: Lens' UpdateGroupQueryResponse (Maybe GroupQuery)

-- | The response's http status code.
updateGroupQueryResponse_httpStatus :: Lens' UpdateGroupQueryResponse Int

-- | The parameter for receiving additional results if you receive a
--   <tt>NextToken</tt> response in a previous request. A
--   <tt>NextToken</tt> response indicates that more output is available.
--   Set this parameter to the value provided by a previous call's
--   <tt>NextToken</tt> response to indicate where the output should
--   continue from.
listGroupResources_nextToken :: Lens' ListGroupResources (Maybe Text)

-- | The total number of results that you want included on each page of the
--   response. If you do not include this parameter, it defaults to a value
--   that is specific to the operation. If additional items exist beyond
--   the maximum you specify, the <tt>NextToken</tt> response element is
--   present and has a value (is not null). Include that value as the
--   <tt>NextToken</tt> request parameter in the next call to the operation
--   to get the next part of the results. Note that the service might
--   return fewer results than the maximum even when there are more results
--   available. You should check <tt>NextToken</tt> after every operation
--   to ensure that you receive all of the results.
listGroupResources_maxResults :: Lens' ListGroupResources (Maybe Natural)

-- | /__Deprecated - don't use this parameter. Use the <tt>Group</tt>
--   request field instead.__/
listGroupResources_groupName :: Lens' ListGroupResources (Maybe Text)

-- | The name or the ARN of the resource group
listGroupResources_group :: Lens' ListGroupResources (Maybe Text)

-- | Filters, formatted as ResourceFilter objects, that you want to apply
--   to a <tt>ListGroupResources</tt> operation. Filters the results to
--   include only those of the specified resource types.
--   
--   <ul>
--   <li><tt>resource-type</tt> - Filter resources by their type. Specify
--   up to five resource types in the format
--   <tt>AWS::ServiceCode::ResourceType</tt>. For example,
--   <tt>AWS::EC2::Instance</tt>, or <tt>AWS::S3::Bucket</tt>.</li>
--   </ul>
--   
--   When you specify a <tt>resource-type</tt> filter for
--   <tt>ListGroupResources</tt>, AWS Resource Groups validates your filter
--   resource types against the types that are defined in the query
--   associated with the group. For example, if a group contains only S3
--   buckets because its query specifies only that resource type, but your
--   <tt>resource-type</tt> filter includes EC2 instances, AWS Resource
--   Groups does not filter for EC2 instances. In this case, a
--   <tt>ListGroupResources</tt> request returns a
--   <tt>BadRequestException</tt> error with a message similar to the
--   following:
--   
--   <pre>
--   The resource types specified as filters in the request are not valid.
--   </pre>
--   
--   The error includes a list of resource types that failed the validation
--   because they are not part of the query associated with the group. This
--   validation doesn't occur when the group query specifies
--   <tt>AWS::AllSupported</tt>, because a group based on such a query can
--   contain any of the allowed resource types for the query type
--   (tag-based or AWS CloudFormation stack-based queries).
listGroupResources_filters :: Lens' ListGroupResources (Maybe [ResourceFilter])

-- | If present, indicates that more output is available than is included
--   in the current response. Use this value in the <tt>NextToken</tt>
--   request parameter in a subsequent call to the operation to get the
--   next part of the output. You should repeat this until the
--   <tt>NextToken</tt> response element comes back as <tt>null</tt>.
listGroupResourcesResponse_nextToken :: Lens' ListGroupResourcesResponse (Maybe Text)

-- | __/Deprecated - don't use this parameter. Use the <tt>Resources</tt>
--   response field instead./__
listGroupResourcesResponse_resourceIdentifiers :: Lens' ListGroupResourcesResponse (Maybe [ResourceIdentifier])

-- | A list of <tt>QueryError</tt> objects. Each error is an object that
--   contains <tt>ErrorCode</tt> and <tt>Message</tt> structures. Possible
--   values for <tt>ErrorCode</tt> are
--   <tt>CLOUDFORMATION_STACK_INACTIVE</tt> and
--   <tt>CLOUDFORMATION_STACK_NOT_EXISTING</tt>.
listGroupResourcesResponse_queryErrors :: Lens' ListGroupResourcesResponse (Maybe [QueryError])

-- | An array of resources from which you can determine each resource's
--   identity, type, and group membership status.
listGroupResourcesResponse_resources :: Lens' ListGroupResourcesResponse (Maybe [ListGroupResourcesItem])

-- | The response's http status code.
listGroupResourcesResponse_httpStatus :: Lens' ListGroupResourcesResponse Int

-- | The ARN of the resource group from which to remove tags. The command
--   removed both the specified keys and any values associated with those
--   keys.
untag_arn :: Lens' Untag Text

-- | The keys of the tags to be removed.
untag_keys :: Lens' Untag [Text]

-- | The ARN of the resource group from which tags have been removed.
untagResponse_arn :: Lens' UntagResponse (Maybe Text)

-- | The keys of the tags that were removed.
untagResponse_keys :: Lens' UntagResponse (Maybe [Text])

-- | The response's http status code.
untagResponse_httpStatus :: Lens' UntagResponse Int

-- | Deprecated - don't use this parameter. Use <tt>Group</tt> instead.
getGroup_groupName :: Lens' GetGroup (Maybe Text)

-- | The name or the ARN of the resource group to retrieve.
getGroup_group :: Lens' GetGroup (Maybe Text)

-- | A full description of the resource group.
getGroupResponse_group :: Lens' GetGroupResponse (Maybe Group)

-- | The response's http status code.
getGroupResponse_httpStatus :: Lens' GetGroupResponse Int

-- | Deprecated - don't use this parameter. Use <tt>Group</tt> instead.
deleteGroup_groupName :: Lens' DeleteGroup (Maybe Text)

-- | The name or the ARN of the resource group to delete.
deleteGroup_group :: Lens' DeleteGroup (Maybe Text)

-- | A full description of the deleted resource group.
deleteGroupResponse_group :: Lens' DeleteGroupResponse (Maybe Group)

-- | The response's http status code.
deleteGroupResponse_httpStatus :: Lens' DeleteGroupResponse Int

-- | The name or the ARN of the resource group to add resources to.
groupResources_group :: Lens' GroupResources Text

-- | The list of ARNs for resources to be added to the group.
groupResources_resourceArns :: Lens' GroupResources (NonEmpty Text)

-- | A list of ARNs of resources that were successfully added to the group
--   by this operation.
groupResourcesResponse_succeeded :: Lens' GroupResourcesResponse (Maybe (NonEmpty Text))

-- | A list of ARNs of any resources that are still in the process of being
--   added to the group by this operation. These pending additions continue
--   asynchronously. You can check the status of pending additions by using
--   the <tt> ListGroupResources </tt> operation, and checking the
--   <tt>Resources</tt> array in the response and the <tt>Status</tt> field
--   of each object in that array.
groupResourcesResponse_pending :: Lens' GroupResourcesResponse (Maybe [PendingResource])

-- | A list of ARNs of any resources that failed to be added to the group
--   by this operation.
groupResourcesResponse_failed :: Lens' GroupResourcesResponse (Maybe [FailedResource])

-- | The response's http status code.
groupResourcesResponse_httpStatus :: Lens' GroupResourcesResponse Int

-- | Don't use this parameter. Use <tt>Group</tt> instead.
updateGroup_groupName :: Lens' UpdateGroup (Maybe Text)

-- | The name or the ARN of the resource group to modify.
updateGroup_group :: Lens' UpdateGroup (Maybe Text)

-- | The new description that you want to update the resource group with.
--   Descriptions can contain letters, numbers, hyphens, underscores,
--   periods, and spaces.
updateGroup_description :: Lens' UpdateGroup (Maybe Text)

-- | The update description of the resource group.
updateGroupResponse_group :: Lens' UpdateGroupResponse (Maybe Group)

-- | The response's http status code.
updateGroupResponse_httpStatus :: Lens' UpdateGroupResponse Int

-- | The name or the ARN of the resource group from which to remove the
--   resources.
ungroupResources_group :: Lens' UngroupResources Text

-- | The ARNs of the resources to be removed from the group.
ungroupResources_resourceArns :: Lens' UngroupResources (NonEmpty Text)

-- | A list of resources that were successfully removed from the group by
--   this operation.
ungroupResourcesResponse_succeeded :: Lens' UngroupResourcesResponse (Maybe (NonEmpty Text))

-- | A list of any resources that are still in the process of being removed
--   from the group by this operation. These pending removals continue
--   asynchronously. You can check the status of pending removals by using
--   the <tt> ListGroupResources </tt> operation. After the resource is
--   successfully removed, it no longer appears in the response.
ungroupResourcesResponse_pending :: Lens' UngroupResourcesResponse (Maybe [PendingResource])

-- | A list of any resources that failed to be removed from the group by
--   this operation.
ungroupResourcesResponse_failed :: Lens' UngroupResourcesResponse (Maybe [FailedResource])

-- | The response's http status code.
ungroupResourcesResponse_httpStatus :: Lens' UngroupResourcesResponse Int

-- | The ARN of the resource group to which to add tags.
tag_arn :: Lens' Tag Text

-- | The tags to add to the specified resource group. A tag is a
--   string-to-string map of key-value pairs.
tag_tags :: Lens' Tag (HashMap Text Text)

-- | The ARN of the tagged resource.
tagResponse_arn :: Lens' TagResponse (Maybe Text)

-- | The tags that have been added to the specified resource group.
tagResponse_tags :: Lens' TagResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
tagResponse_httpStatus :: Lens' TagResponse Int

-- | The ARN of the resource that failed to be added or removed.
failedResource_resourceArn :: Lens' FailedResource (Maybe Text)

-- | The error message text associated with the failure.
failedResource_errorMessage :: Lens' FailedResource (Maybe Text)

-- | The error code associated with the failure.
failedResource_errorCode :: Lens' FailedResource (Maybe Text)

-- | The description of the resource group.
group_description :: Lens' Group (Maybe Text)

-- | The ARN of the resource group.
group_groupArn :: Lens' Group Text

-- | The name of the resource group.
group_name :: Lens' Group Text

-- | The current status of an attempt to update the group configuration.
groupConfiguration_status :: Lens' GroupConfiguration (Maybe GroupConfigurationStatus)

-- | The configuration currently associated with the group and in effect.
groupConfiguration_configuration :: Lens' GroupConfiguration (Maybe [GroupConfigurationItem])

-- | If present, the reason why a request to update the group configuration
--   failed.
groupConfiguration_failureReason :: Lens' GroupConfiguration (Maybe Text)

-- | If present, the new configuration that is in the process of being
--   applied to the group.
groupConfiguration_proposedConfiguration :: Lens' GroupConfiguration (Maybe [GroupConfigurationItem])

-- | A collection of parameters for this group configuration item. For the
--   list of parameters that you can use with each configuration item type,
--   see <a>Supported resource types and parameters</a>.
groupConfigurationItem_parameters :: Lens' GroupConfigurationItem (Maybe [GroupConfigurationParameter])

-- | Specifies the type of group configuration item. Each item must have a
--   unique value for <tt>type</tt>. For the list of types that you can
--   specify for a configuration item, see <a>Supported resource types and
--   parameters</a>.
groupConfigurationItem_type :: Lens' GroupConfigurationItem Text

-- | The value or values to be used for the specified parameter. For the
--   list of values you can use with each parameter, see <a>Supported
--   resource types and parameters</a>.
groupConfigurationParameter_values :: Lens' GroupConfigurationParameter (Maybe [Text])

-- | The name of the group configuration parameter. For the list of
--   parameters that you can use with each configuration item type, see
--   <a>Supported resource types and parameters</a>.
groupConfigurationParameter_name :: Lens' GroupConfigurationParameter Text

-- | The name of the filter. Filter names are case-sensitive.
groupFilter_name :: Lens' GroupFilter GroupFilterName

-- | One or more filter values. Allowed filter values vary by group filter
--   name, and are case-sensitive.
groupFilter_values :: Lens' GroupFilter (NonEmpty Text)

-- | The name of the resource group.
groupIdentifier_groupName :: Lens' GroupIdentifier (Maybe Text)

-- | The ARN of the resource group.
groupIdentifier_groupArn :: Lens' GroupIdentifier (Maybe Text)

-- | The name of the resource group that is associated with the specified
--   resource query.
groupQuery_groupName :: Lens' GroupQuery Text

-- | The resource query that determines which AWS resources are members of
--   the associated resource group.
groupQuery_resourceQuery :: Lens' GroupQuery ResourceQuery

-- | A structure that contains the status of this resource's membership in
--   the group.
--   
--   This field is present in the response only if the group is of type
--   <tt>AWS::EC2::HostManagement</tt>.
listGroupResourcesItem_status :: Lens' ListGroupResourcesItem (Maybe ResourceStatus)

-- | Undocumented member.
listGroupResourcesItem_identifier :: Lens' ListGroupResourcesItem (Maybe ResourceIdentifier)

-- | The Amazon resource name (ARN) of the resource that's in a pending
--   state.
pendingResource_resourceArn :: Lens' PendingResource (Maybe Text)

-- | A message that explains the <tt>ErrorCode</tt> value. Messages might
--   state that the specified CloudFormation stack does not exist (or no
--   longer exists). For <tt>CLOUDFORMATION_STACK_INACTIVE</tt>, the
--   message typically states that the CloudFormation stack has a status
--   that is not (or no longer) active, such as <tt>CREATE_FAILED</tt>.
queryError_message :: Lens' QueryError (Maybe Text)

-- | Possible values are <tt>CLOUDFORMATION_STACK_INACTIVE</tt> and
--   <tt>CLOUDFORMATION_STACK_NOT_EXISTING</tt>.
queryError_errorCode :: Lens' QueryError (Maybe QueryErrorCode)

-- | The name of the filter. Filter names are case-sensitive.
resourceFilter_name :: Lens' ResourceFilter ResourceFilterName

-- | One or more filter values. Allowed filter values vary by resource
--   filter name, and are case-sensitive.
resourceFilter_values :: Lens' ResourceFilter (NonEmpty Text)

-- | The ARN of a resource.
resourceIdentifier_resourceArn :: Lens' ResourceIdentifier (Maybe Text)

-- | The resource type of a resource, such as <tt>AWS::EC2::Instance</tt>.
resourceIdentifier_resourceType :: Lens' ResourceIdentifier (Maybe Text)

-- | The type of the query. You can use the following values:
--   
--   <ul>
--   <li><i><tt>CLOUDFORMATION_STACK_1_0:</tt></i> Specifies that the
--   <tt>Query</tt> contains an ARN for a CloudFormation stack.</li>
--   <li><i><tt>TAG_FILTERS_1_0:</tt></i> Specifies that the <tt>Query</tt>
--   parameter contains a JSON string that represents a collection of
--   simple tag filters for resource types and tags. The JSON string uses a
--   syntax similar to the <tt> GetResources </tt> operation, but uses only
--   the <tt> ResourceTypeFilters </tt> and <tt> TagFilters </tt> fields.
--   If you specify more than one tag key, only resources that match all
--   tag keys, and at least one value of each specified tag key, are
--   returned in your query. If you specify more than one value for a tag
--   key, a resource matches the filter if it has a tag key value that
--   matches <i>any</i> of the specified values.For example, consider the
--   following sample query for resources that have two tags,
--   <tt>Stage</tt> and <tt>Version</tt>, with two values
--   each:<pre>[{"Stage":["Test","Deploy"]},{"Version":["1","2"]}]</pre>The
--   results of this query could include the following.<ul><li>An EC2
--   instance that has the following two tags: <tt>{"Stage":"Deploy"}</tt>,
--   and <tt>{"Version":"2"}</tt></li><li>An S3 bucket that has the
--   following two tags: <tt>{"Stage":"Test"}</tt>, and
--   <tt>{"Version":"1"}</tt></li></ul>The query would not include the
--   following items in the results, however.<ul><li>An EC2 instance that
--   has only the following tag: <tt>{"Stage":"Deploy"}</tt>.The instance
--   does not have <b>all</b> of the tag keys specified in the filter, so
--   it is excluded from the results.</li><li>An RDS database that has the
--   following two tags: <tt>{"Stage":"Archived"}</tt> and
--   <tt>{"Version":"4"}</tt>The database has all of the tag keys, but none
--   of those keys has an associated value that matches at least one of the
--   specified values in the filter.</li></ul></li>
--   </ul>
resourceQuery_type :: Lens' ResourceQuery QueryType

-- | The query that defines a group or a search.
resourceQuery_searchQuery :: Lens' ResourceQuery Text

-- | The current status.
resourceStatus_name :: Lens' ResourceStatus (Maybe ResourceStatusValue)


module Network.AWS.ResourceGroups.Waiters


-- | Derived from API version <tt>2017-11-27</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS Resource Groups
--   
--   AWS Resource Groups lets you organize AWS resources such as Amazon EC2
--   instances, Amazon Relational Database Service databases, and Amazon S3
--   buckets into groups using criteria that you define as tags. A resource
--   group is a collection of resources that match the resource types
--   specified in a query, and share one or more tags or portions of tags.
--   You can create a group of resources based on their roles in your cloud
--   infrastructure, lifecycle stages, regions, application layers, or
--   virtually any criteria. Resource Groups enable you to automate
--   management tasks, such as those in AWS Systems Manager Automation
--   documents, on tag-related resources in AWS Systems Manager. Groups of
--   tagged resources also let you quickly view a custom console in AWS
--   Systems Manager that shows AWS Config compliance and other monitoring
--   data about member resources.
--   
--   To create a resource group, build a resource query, and specify tags
--   that identify the criteria that members of the group have in common.
--   Tags are key-value pairs.
--   
--   For more information about Resource Groups, see the <a>AWS Resource
--   Groups User Guide</a>.
--   
--   AWS Resource Groups uses a REST-compliant API that you can use to
--   perform the following types of operations.
--   
--   <ul>
--   <li>Create, Read, Update, and Delete (CRUD) operations on resource
--   groups and resource query entities</li>
--   <li>Applying, editing, and removing tags from resource groups</li>
--   <li>Resolving resource group member ARNs so they can be returned as
--   search results</li>
--   <li>Getting data about resources that are members of a group</li>
--   <li>Searching AWS resources based on a resource query</li>
--   </ul>
module Network.AWS.ResourceGroups

-- | API version <tt>2017-11-27</tt> of the Amazon Resource Groups SDK
--   configuration.
defaultService :: Service

-- | One or more of the specified resources don't exist.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request includes one or more parameters that violate validation
--   rules.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was rejected because it doesn't have valid credentials for
--   the target resource.
_UnauthorizedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal error occurred while processing the request. Try again
--   later.
_InternalServerErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The caller isn't authorized to make the request. Check permissions.
_ForbiddenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request uses an HTTP method that isn't allowed for the specified
--   resource.
_MethodNotAllowedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've exceeded throttling limits by making too many requests in a
--   period of time.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newGetGroupConfiguration</a> smart constructor.
data GetGroupConfiguration
GetGroupConfiguration' :: Maybe Text -> GetGroupConfiguration

-- | Create a value of <a>GetGroupConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':GetGroupConfiguration'</a>,
--   <a>getGroupConfiguration_group</a> - The name or the ARN of the
--   resource group.
newGetGroupConfiguration :: GetGroupConfiguration

-- | <i>See:</i> <a>newGetGroupConfigurationResponse</a> smart constructor.
data GetGroupConfigurationResponse
GetGroupConfigurationResponse' :: Maybe GroupConfiguration -> Int -> GetGroupConfigurationResponse

-- | Create a value of <a>GetGroupConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupConfiguration:GetGroupConfigurationResponse'</a>,
--   <a>getGroupConfigurationResponse_groupConfiguration</a> - The service
--   configuration associated with the specified group. For details about
--   the service configuration syntax, see <a>Service configurations for
--   resource groups</a>.
--   
--   <a>$sel:httpStatus:GetGroupConfigurationResponse'</a>,
--   <a>getGroupConfigurationResponse_httpStatus</a> - The response's http
--   status code.
newGetGroupConfigurationResponse :: Int -> GetGroupConfigurationResponse

-- | <i>See:</i> <a>newPutGroupConfiguration</a> smart constructor.
data PutGroupConfiguration
PutGroupConfiguration' :: Maybe [GroupConfigurationItem] -> Maybe Text -> PutGroupConfiguration

-- | Create a value of <a>PutGroupConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configuration:PutGroupConfiguration'</a>,
--   <a>putGroupConfiguration_configuration</a> - The new configuration to
--   associate with the specified group. A configuration associates the
--   resource group with an AWS service and specifies how the service can
--   interact with the resources in the group. A configuration is an array
--   of GroupConfigurationItem elements.
--   
--   For information about the syntax of a service configuration, see
--   <a>Service configurations for resource groups</a>.
--   
--   A resource group can contain either a <tt>Configuration</tt> or a
--   <tt>ResourceQuery</tt>, but not both.
--   
--   <a>$sel:group':PutGroupConfiguration'</a>,
--   <a>putGroupConfiguration_group</a> - The name or ARN of the resource
--   group with the configuration that you want to update.
newPutGroupConfiguration :: PutGroupConfiguration

-- | <i>See:</i> <a>newPutGroupConfigurationResponse</a> smart constructor.
data PutGroupConfigurationResponse
PutGroupConfigurationResponse' :: Int -> PutGroupConfigurationResponse

-- | Create a value of <a>PutGroupConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutGroupConfigurationResponse'</a>,
--   <a>putGroupConfigurationResponse_httpStatus</a> - The response's http
--   status code.
newPutGroupConfigurationResponse :: Int -> PutGroupConfigurationResponse

-- | <i>See:</i> <a>newListGroups</a> smart constructor.
data ListGroups
ListGroups' :: Maybe Text -> Maybe Natural -> Maybe [GroupFilter] -> ListGroups

-- | Create a value of <a>ListGroups</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGroups'</a>, <a>listGroups_nextToken</a> - The
--   parameter for receiving additional results if you receive a
--   <tt>NextToken</tt> response in a previous request. A
--   <tt>NextToken</tt> response indicates that more output is available.
--   Set this parameter to the value provided by a previous call's
--   <tt>NextToken</tt> response to indicate where the output should
--   continue from.
--   
--   <a>$sel:maxResults:ListGroups'</a>, <a>listGroups_maxResults</a> - The
--   total number of results that you want included on each page of the
--   response. If you do not include this parameter, it defaults to a value
--   that is specific to the operation. If additional items exist beyond
--   the maximum you specify, the <tt>NextToken</tt> response element is
--   present and has a value (is not null). Include that value as the
--   <tt>NextToken</tt> request parameter in the next call to the operation
--   to get the next part of the results. Note that the service might
--   return fewer results than the maximum even when there are more results
--   available. You should check <tt>NextToken</tt> after every operation
--   to ensure that you receive all of the results.
--   
--   <a>$sel:filters:ListGroups'</a>, <a>listGroups_filters</a> - Filters,
--   formatted as GroupFilter objects, that you want to apply to a
--   <tt>ListGroups</tt> operation.
--   
--   <ul>
--   <li><tt>resource-type</tt> - Filter the results to include only those
--   of the specified resource types. Specify up to five resource types in
--   the format <tt>AWS::ServiceCode::ResourceType </tt>. For example,
--   <tt>AWS::EC2::Instance</tt>, or <tt>AWS::S3::Bucket</tt>.</li>
--   <li><tt>configuration-type</tt> - Filter the results to include only
--   those groups that have the specified configuration types attached. The
--   current supported values
--   are:<ul><li><pre>AWS:EC2::CapacityReservationPool</pre></li><li><pre>AWS:EC2::HostManagement</pre></li></ul></li>
--   </ul>
newListGroups :: ListGroups

-- | <i>See:</i> <a>newListGroupsResponse</a> smart constructor.
data ListGroupsResponse
ListGroupsResponse' :: Maybe [Group] -> Maybe Text -> Maybe [GroupIdentifier] -> Int -> ListGroupsResponse

-- | Create a value of <a>ListGroupsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groups:ListGroupsResponse'</a>,
--   <a>listGroupsResponse_groups</a> - /__Deprecated - don't use this
--   field. Use the <tt>GroupIdentifiers</tt> response field instead.__/
--   
--   <a>$sel:nextToken:ListGroups'</a>, <a>listGroupsResponse_nextToken</a>
--   - If present, indicates that more output is available than is included
--   in the current response. Use this value in the <tt>NextToken</tt>
--   request parameter in a subsequent call to the operation to get the
--   next part of the output. You should repeat this until the
--   <tt>NextToken</tt> response element comes back as <tt>null</tt>.
--   
--   <a>$sel:groupIdentifiers:ListGroupsResponse'</a>,
--   <a>listGroupsResponse_groupIdentifiers</a> - A list of GroupIdentifier
--   objects. Each identifier is an object that contains both the
--   <tt>Name</tt> and the <tt>GroupArn</tt>.
--   
--   <a>$sel:httpStatus:ListGroupsResponse'</a>,
--   <a>listGroupsResponse_httpStatus</a> - The response's http status
--   code.
newListGroupsResponse :: Int -> ListGroupsResponse

-- | <i>See:</i> <a>newCreateGroup</a> smart constructor.
data CreateGroup
CreateGroup' :: Maybe [GroupConfigurationItem] -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe ResourceQuery -> Text -> CreateGroup

-- | Create a value of <a>CreateGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configuration:CreateGroup'</a>,
--   <a>createGroup_configuration</a> - A configuration associates the
--   resource group with an AWS service and specifies how the service can
--   interact with the resources in the group. A configuration is an array
--   of GroupConfigurationItem elements. For details about the syntax of
--   service configurations, see <a>Service configurations for resource
--   groups</a>.
--   
--   A resource group can contain either a <tt>Configuration</tt> or a
--   <tt>ResourceQuery</tt>, but not both.
--   
--   <a>$sel:tags:CreateGroup'</a>, <a>createGroup_tags</a> - The tags to
--   add to the group. A tag is key-value pair string.
--   
--   <a>$sel:description:CreateGroup'</a>, <a>createGroup_description</a> -
--   The description of the resource group. Descriptions can consist of
--   letters, numbers, hyphens, underscores, periods, and spaces.
--   
--   <a>$sel:resourceQuery:CreateGroup'</a>,
--   <a>createGroup_resourceQuery</a> - The resource query that determines
--   which AWS resources are members of this group. For more information
--   about resource queries, see <a>Create a tag-based group in Resource
--   Groups</a>.
--   
--   A resource group can contain either a <tt>ResourceQuery</tt> or a
--   <tt>Configuration</tt>, but not both.
--   
--   <a>$sel:name:CreateGroup'</a>, <a>createGroup_name</a> - The name of
--   the group, which is the identifier of the group in other operations.
--   You can't change the name of a resource group after you create it. A
--   resource group name can consist of letters, numbers, hyphens, periods,
--   and underscores. The name cannot start with <tt>AWS</tt> or
--   <tt>aws</tt>; these are reserved. A resource group name must be unique
--   within each AWS Region in your AWS account.
newCreateGroup :: Text -> CreateGroup

-- | <i>See:</i> <a>newCreateGroupResponse</a> smart constructor.
data CreateGroupResponse
CreateGroupResponse' :: Maybe GroupConfiguration -> Maybe Group -> Maybe (HashMap Text Text) -> Maybe ResourceQuery -> Int -> CreateGroupResponse

-- | Create a value of <a>CreateGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupConfiguration:CreateGroupResponse'</a>,
--   <a>createGroupResponse_groupConfiguration</a> - The service
--   configuration associated with the resource group. For details about
--   the syntax of a service configuration, see <a>Service configurations
--   for resource groups</a>.
--   
--   <a>$sel:group':CreateGroupResponse'</a>,
--   <a>createGroupResponse_group</a> - The description of the resource
--   group.
--   
--   <a>$sel:tags:CreateGroup'</a>, <a>createGroupResponse_tags</a> - The
--   tags associated with the group.
--   
--   <a>$sel:resourceQuery:CreateGroup'</a>,
--   <a>createGroupResponse_resourceQuery</a> - The resource query
--   associated with the group. For more information about resource
--   queries, see <a>Create a tag-based group in Resource Groups</a>.
--   
--   <a>$sel:httpStatus:CreateGroupResponse'</a>,
--   <a>createGroupResponse_httpStatus</a> - The response's http status
--   code.
newCreateGroupResponse :: Int -> CreateGroupResponse

-- | <i>See:</i> <a>newGetGroupQuery</a> smart constructor.
data GetGroupQuery
GetGroupQuery' :: Maybe Text -> Maybe Text -> GetGroupQuery

-- | Create a value of <a>GetGroupQuery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:GetGroupQuery'</a>, <a>getGroupQuery_groupName</a> -
--   Don't use this parameter. Use <tt>Group</tt> instead.
--   
--   <a>$sel:group':GetGroupQuery'</a>, <a>getGroupQuery_group</a> - The
--   name or the ARN of the resource group to query.
newGetGroupQuery :: GetGroupQuery

-- | <i>See:</i> <a>newGetGroupQueryResponse</a> smart constructor.
data GetGroupQueryResponse
GetGroupQueryResponse' :: Maybe GroupQuery -> Int -> GetGroupQueryResponse

-- | Create a value of <a>GetGroupQueryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupQuery:GetGroupQueryResponse'</a>,
--   <a>getGroupQueryResponse_groupQuery</a> - The resource query
--   associated with the specified group. For more information about
--   resource queries, see <a>Create a tag-based group in Resource
--   Groups</a>.
--   
--   <a>$sel:httpStatus:GetGroupQueryResponse'</a>,
--   <a>getGroupQueryResponse_httpStatus</a> - The response's http status
--   code.
newGetGroupQueryResponse :: Int -> GetGroupQueryResponse

-- | <i>See:</i> <a>newSearchResources</a> smart constructor.
data SearchResources
SearchResources' :: Maybe Text -> Maybe Natural -> ResourceQuery -> SearchResources

-- | Create a value of <a>SearchResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:SearchResources'</a>,
--   <a>searchResources_nextToken</a> - The parameter for receiving
--   additional results if you receive a <tt>NextToken</tt> response in a
--   previous request. A <tt>NextToken</tt> response indicates that more
--   output is available. Set this parameter to the value provided by a
--   previous call's <tt>NextToken</tt> response to indicate where the
--   output should continue from.
--   
--   <a>$sel:maxResults:SearchResources'</a>,
--   <a>searchResources_maxResults</a> - The total number of results that
--   you want included on each page of the response. If you do not include
--   this parameter, it defaults to a value that is specific to the
--   operation. If additional items exist beyond the maximum you specify,
--   the <tt>NextToken</tt> response element is present and has a value (is
--   not null). Include that value as the <tt>NextToken</tt> request
--   parameter in the next call to the operation to get the next part of
--   the results. Note that the service might return fewer results than the
--   maximum even when there are more results available. You should check
--   <tt>NextToken</tt> after every operation to ensure that you receive
--   all of the results.
--   
--   <a>$sel:resourceQuery:SearchResources'</a>,
--   <a>searchResources_resourceQuery</a> - The search query, using the
--   same formats that are supported for resource group definition. For
--   more information, see CreateGroup.
newSearchResources :: ResourceQuery -> SearchResources

-- | <i>See:</i> <a>newSearchResourcesResponse</a> smart constructor.
data SearchResourcesResponse
SearchResourcesResponse' :: Maybe Text -> Maybe [ResourceIdentifier] -> Maybe [QueryError] -> Int -> SearchResourcesResponse

-- | Create a value of <a>SearchResourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:SearchResources'</a>,
--   <a>searchResourcesResponse_nextToken</a> - If present, indicates that
--   more output is available than is included in the current response. Use
--   this value in the <tt>NextToken</tt> request parameter in a subsequent
--   call to the operation to get the next part of the output. You should
--   repeat this until the <tt>NextToken</tt> response element comes back
--   as <tt>null</tt>.
--   
--   <a>$sel:resourceIdentifiers:SearchResourcesResponse'</a>,
--   <a>searchResourcesResponse_resourceIdentifiers</a> - The ARNs and
--   resource types of resources that are members of the group that you
--   specified.
--   
--   <a>$sel:queryErrors:SearchResourcesResponse'</a>,
--   <a>searchResourcesResponse_queryErrors</a> - A list of
--   <tt>QueryError</tt> objects. Each error is an object that contains
--   <tt>ErrorCode</tt> and <tt>Message</tt> structures. Possible values
--   for <tt>ErrorCode</tt> are <tt>CLOUDFORMATION_STACK_INACTIVE</tt> and
--   <tt>CLOUDFORMATION_STACK_NOT_EXISTING</tt>.
--   
--   <a>$sel:httpStatus:SearchResourcesResponse'</a>,
--   <a>searchResourcesResponse_httpStatus</a> - The response's http status
--   code.
newSearchResourcesResponse :: Int -> SearchResourcesResponse

-- | <i>See:</i> <a>newGetTags</a> smart constructor.
data GetTags
GetTags' :: Text -> GetTags

-- | Create a value of <a>GetTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetTags'</a>, <a>getTags_arn</a> - The ARN of the resource
--   group whose tags you want to retrieve.
newGetTags :: Text -> GetTags

-- | <i>See:</i> <a>newGetTagsResponse</a> smart constructor.
data GetTagsResponse
GetTagsResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Int -> GetTagsResponse

-- | Create a value of <a>GetTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetTags'</a>, <a>getTagsResponse_arn</a> - The ARN of the
--   tagged resource group.
--   
--   <a>$sel:tags:GetTagsResponse'</a>, <a>getTagsResponse_tags</a> - The
--   tags associated with the specified resource group.
--   
--   <a>$sel:httpStatus:GetTagsResponse'</a>,
--   <a>getTagsResponse_httpStatus</a> - The response's http status code.
newGetTagsResponse :: Int -> GetTagsResponse

-- | <i>See:</i> <a>newUpdateGroupQuery</a> smart constructor.
data UpdateGroupQuery
UpdateGroupQuery' :: Maybe Text -> Maybe Text -> ResourceQuery -> UpdateGroupQuery

-- | Create a value of <a>UpdateGroupQuery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:UpdateGroupQuery'</a>,
--   <a>updateGroupQuery_groupName</a> - Don't use this parameter. Use
--   <tt>Group</tt> instead.
--   
--   <a>$sel:group':UpdateGroupQuery'</a>, <a>updateGroupQuery_group</a> -
--   The name or the ARN of the resource group to query.
--   
--   <a>$sel:resourceQuery:UpdateGroupQuery'</a>,
--   <a>updateGroupQuery_resourceQuery</a> - The resource query to
--   determine which AWS resources are members of this resource group.
--   
--   A resource group can contain either a <tt>Configuration</tt> or a
--   <tt>ResourceQuery</tt>, but not both.
newUpdateGroupQuery :: ResourceQuery -> UpdateGroupQuery

-- | <i>See:</i> <a>newUpdateGroupQueryResponse</a> smart constructor.
data UpdateGroupQueryResponse
UpdateGroupQueryResponse' :: Maybe GroupQuery -> Int -> UpdateGroupQueryResponse

-- | Create a value of <a>UpdateGroupQueryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupQuery:UpdateGroupQueryResponse'</a>,
--   <a>updateGroupQueryResponse_groupQuery</a> - The updated resource
--   query associated with the resource group after the update.
--   
--   <a>$sel:httpStatus:UpdateGroupQueryResponse'</a>,
--   <a>updateGroupQueryResponse_httpStatus</a> - The response's http
--   status code.
newUpdateGroupQueryResponse :: Int -> UpdateGroupQueryResponse

-- | <i>See:</i> <a>newListGroupResources</a> smart constructor.
data ListGroupResources
ListGroupResources' :: Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe [ResourceFilter] -> ListGroupResources

-- | Create a value of <a>ListGroupResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGroupResources'</a>,
--   <a>listGroupResources_nextToken</a> - The parameter for receiving
--   additional results if you receive a <tt>NextToken</tt> response in a
--   previous request. A <tt>NextToken</tt> response indicates that more
--   output is available. Set this parameter to the value provided by a
--   previous call's <tt>NextToken</tt> response to indicate where the
--   output should continue from.
--   
--   <a>$sel:maxResults:ListGroupResources'</a>,
--   <a>listGroupResources_maxResults</a> - The total number of results
--   that you want included on each page of the response. If you do not
--   include this parameter, it defaults to a value that is specific to the
--   operation. If additional items exist beyond the maximum you specify,
--   the <tt>NextToken</tt> response element is present and has a value (is
--   not null). Include that value as the <tt>NextToken</tt> request
--   parameter in the next call to the operation to get the next part of
--   the results. Note that the service might return fewer results than the
--   maximum even when there are more results available. You should check
--   <tt>NextToken</tt> after every operation to ensure that you receive
--   all of the results.
--   
--   <a>$sel:groupName:ListGroupResources'</a>,
--   <a>listGroupResources_groupName</a> - /__Deprecated - don't use this
--   parameter. Use the <tt>Group</tt> request field instead.__/
--   
--   <a>$sel:group':ListGroupResources'</a>,
--   <a>listGroupResources_group</a> - The name or the ARN of the resource
--   group
--   
--   <a>$sel:filters:ListGroupResources'</a>,
--   <a>listGroupResources_filters</a> - Filters, formatted as
--   ResourceFilter objects, that you want to apply to a
--   <tt>ListGroupResources</tt> operation. Filters the results to include
--   only those of the specified resource types.
--   
--   <ul>
--   <li><tt>resource-type</tt> - Filter resources by their type. Specify
--   up to five resource types in the format
--   <tt>AWS::ServiceCode::ResourceType</tt>. For example,
--   <tt>AWS::EC2::Instance</tt>, or <tt>AWS::S3::Bucket</tt>.</li>
--   </ul>
--   
--   When you specify a <tt>resource-type</tt> filter for
--   <tt>ListGroupResources</tt>, AWS Resource Groups validates your filter
--   resource types against the types that are defined in the query
--   associated with the group. For example, if a group contains only S3
--   buckets because its query specifies only that resource type, but your
--   <tt>resource-type</tt> filter includes EC2 instances, AWS Resource
--   Groups does not filter for EC2 instances. In this case, a
--   <tt>ListGroupResources</tt> request returns a
--   <tt>BadRequestException</tt> error with a message similar to the
--   following:
--   
--   <pre>
--   The resource types specified as filters in the request are not valid.
--   </pre>
--   
--   The error includes a list of resource types that failed the validation
--   because they are not part of the query associated with the group. This
--   validation doesn't occur when the group query specifies
--   <tt>AWS::AllSupported</tt>, because a group based on such a query can
--   contain any of the allowed resource types for the query type
--   (tag-based or AWS CloudFormation stack-based queries).
newListGroupResources :: ListGroupResources

-- | <i>See:</i> <a>newListGroupResourcesResponse</a> smart constructor.
data ListGroupResourcesResponse
ListGroupResourcesResponse' :: Maybe Text -> Maybe [ResourceIdentifier] -> Maybe [QueryError] -> Maybe [ListGroupResourcesItem] -> Int -> ListGroupResourcesResponse

-- | Create a value of <a>ListGroupResourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGroupResources'</a>,
--   <a>listGroupResourcesResponse_nextToken</a> - If present, indicates
--   that more output is available than is included in the current
--   response. Use this value in the <tt>NextToken</tt> request parameter
--   in a subsequent call to the operation to get the next part of the
--   output. You should repeat this until the <tt>NextToken</tt> response
--   element comes back as <tt>null</tt>.
--   
--   <a>$sel:resourceIdentifiers:ListGroupResourcesResponse'</a>,
--   <a>listGroupResourcesResponse_resourceIdentifiers</a> - __/Deprecated
--   - don't use this parameter. Use the <tt>Resources</tt> response field
--   instead./__
--   
--   <a>$sel:queryErrors:ListGroupResourcesResponse'</a>,
--   <a>listGroupResourcesResponse_queryErrors</a> - A list of
--   <tt>QueryError</tt> objects. Each error is an object that contains
--   <tt>ErrorCode</tt> and <tt>Message</tt> structures. Possible values
--   for <tt>ErrorCode</tt> are <tt>CLOUDFORMATION_STACK_INACTIVE</tt> and
--   <tt>CLOUDFORMATION_STACK_NOT_EXISTING</tt>.
--   
--   <a>$sel:resources:ListGroupResourcesResponse'</a>,
--   <a>listGroupResourcesResponse_resources</a> - An array of resources
--   from which you can determine each resource's identity, type, and group
--   membership status.
--   
--   <a>$sel:httpStatus:ListGroupResourcesResponse'</a>,
--   <a>listGroupResourcesResponse_httpStatus</a> - The response's http
--   status code.
newListGroupResourcesResponse :: Int -> ListGroupResourcesResponse

-- | <i>See:</i> <a>newUntag</a> smart constructor.
data Untag
Untag' :: Text -> [Text] -> Untag

-- | Create a value of <a>Untag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Untag'</a>, <a>untag_arn</a> - The ARN of the resource
--   group from which to remove tags. The command removed both the
--   specified keys and any values associated with those keys.
--   
--   <a>$sel:keys:Untag'</a>, <a>untag_keys</a> - The keys of the tags to
--   be removed.
newUntag :: Text -> Untag

-- | <i>See:</i> <a>newUntagResponse</a> smart constructor.
data UntagResponse
UntagResponse' :: Maybe Text -> Maybe [Text] -> Int -> UntagResponse

-- | Create a value of <a>UntagResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Untag'</a>, <a>untagResponse_arn</a> - The ARN of the
--   resource group from which tags have been removed.
--   
--   <a>$sel:keys:Untag'</a>, <a>untagResponse_keys</a> - The keys of the
--   tags that were removed.
--   
--   <a>$sel:httpStatus:UntagResponse'</a>, <a>untagResponse_httpStatus</a>
--   - The response's http status code.
newUntagResponse :: Int -> UntagResponse

-- | <i>See:</i> <a>newGetGroup</a> smart constructor.
data GetGroup
GetGroup' :: Maybe Text -> Maybe Text -> GetGroup

-- | Create a value of <a>GetGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:GetGroup'</a>, <a>getGroup_groupName</a> -
--   Deprecated - don't use this parameter. Use <tt>Group</tt> instead.
--   
--   <a>$sel:group':GetGroup'</a>, <a>getGroup_group</a> - The name or the
--   ARN of the resource group to retrieve.
newGetGroup :: GetGroup

-- | <i>See:</i> <a>newGetGroupResponse</a> smart constructor.
data GetGroupResponse
GetGroupResponse' :: Maybe Group -> Int -> GetGroupResponse

-- | Create a value of <a>GetGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':GetGroup'</a>, <a>getGroupResponse_group</a> - A full
--   description of the resource group.
--   
--   <a>$sel:httpStatus:GetGroupResponse'</a>,
--   <a>getGroupResponse_httpStatus</a> - The response's http status code.
newGetGroupResponse :: Int -> GetGroupResponse

-- | <i>See:</i> <a>newDeleteGroup</a> smart constructor.
data DeleteGroup
DeleteGroup' :: Maybe Text -> Maybe Text -> DeleteGroup

-- | Create a value of <a>DeleteGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:DeleteGroup'</a>, <a>deleteGroup_groupName</a> -
--   Deprecated - don't use this parameter. Use <tt>Group</tt> instead.
--   
--   <a>$sel:group':DeleteGroup'</a>, <a>deleteGroup_group</a> - The name
--   or the ARN of the resource group to delete.
newDeleteGroup :: DeleteGroup

-- | <i>See:</i> <a>newDeleteGroupResponse</a> smart constructor.
data DeleteGroupResponse
DeleteGroupResponse' :: Maybe Group -> Int -> DeleteGroupResponse

-- | Create a value of <a>DeleteGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':DeleteGroup'</a>, <a>deleteGroupResponse_group</a> - A
--   full description of the deleted resource group.
--   
--   <a>$sel:httpStatus:DeleteGroupResponse'</a>,
--   <a>deleteGroupResponse_httpStatus</a> - The response's http status
--   code.
newDeleteGroupResponse :: Int -> DeleteGroupResponse

-- | <i>See:</i> <a>newGroupResources</a> smart constructor.
data GroupResources
GroupResources' :: Text -> NonEmpty Text -> GroupResources

-- | Create a value of <a>GroupResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':GroupResources'</a>, <a>groupResources_group</a> - The
--   name or the ARN of the resource group to add resources to.
--   
--   <a>$sel:resourceArns:GroupResources'</a>,
--   <a>groupResources_resourceArns</a> - The list of ARNs for resources to
--   be added to the group.
newGroupResources :: Text -> NonEmpty Text -> GroupResources

-- | <i>See:</i> <a>newGroupResourcesResponse</a> smart constructor.
data GroupResourcesResponse
GroupResourcesResponse' :: Maybe (NonEmpty Text) -> Maybe [PendingResource] -> Maybe [FailedResource] -> Int -> GroupResourcesResponse

-- | Create a value of <a>GroupResourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:succeeded:GroupResourcesResponse'</a>,
--   <a>groupResourcesResponse_succeeded</a> - A list of ARNs of resources
--   that were successfully added to the group by this operation.
--   
--   <a>$sel:pending:GroupResourcesResponse'</a>,
--   <a>groupResourcesResponse_pending</a> - A list of ARNs of any
--   resources that are still in the process of being added to the group by
--   this operation. These pending additions continue asynchronously. You
--   can check the status of pending additions by using the <tt>
--   ListGroupResources </tt> operation, and checking the
--   <tt>Resources</tt> array in the response and the <tt>Status</tt> field
--   of each object in that array.
--   
--   <a>$sel:failed:GroupResourcesResponse'</a>,
--   <a>groupResourcesResponse_failed</a> - A list of ARNs of any resources
--   that failed to be added to the group by this operation.
--   
--   <a>$sel:httpStatus:GroupResourcesResponse'</a>,
--   <a>groupResourcesResponse_httpStatus</a> - The response's http status
--   code.
newGroupResourcesResponse :: Int -> GroupResourcesResponse

-- | <i>See:</i> <a>newUpdateGroup</a> smart constructor.
data UpdateGroup
UpdateGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> UpdateGroup

-- | Create a value of <a>UpdateGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:UpdateGroup'</a>, <a>updateGroup_groupName</a> -
--   Don't use this parameter. Use <tt>Group</tt> instead.
--   
--   <a>$sel:group':UpdateGroup'</a>, <a>updateGroup_group</a> - The name
--   or the ARN of the resource group to modify.
--   
--   <a>$sel:description:UpdateGroup'</a>, <a>updateGroup_description</a> -
--   The new description that you want to update the resource group with.
--   Descriptions can contain letters, numbers, hyphens, underscores,
--   periods, and spaces.
newUpdateGroup :: UpdateGroup

-- | <i>See:</i> <a>newUpdateGroupResponse</a> smart constructor.
data UpdateGroupResponse
UpdateGroupResponse' :: Maybe Group -> Int -> UpdateGroupResponse

-- | Create a value of <a>UpdateGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':UpdateGroup'</a>, <a>updateGroupResponse_group</a> -
--   The update description of the resource group.
--   
--   <a>$sel:httpStatus:UpdateGroupResponse'</a>,
--   <a>updateGroupResponse_httpStatus</a> - The response's http status
--   code.
newUpdateGroupResponse :: Int -> UpdateGroupResponse

-- | <i>See:</i> <a>newUngroupResources</a> smart constructor.
data UngroupResources
UngroupResources' :: Text -> NonEmpty Text -> UngroupResources

-- | Create a value of <a>UngroupResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':UngroupResources'</a>, <a>ungroupResources_group</a> -
--   The name or the ARN of the resource group from which to remove the
--   resources.
--   
--   <a>$sel:resourceArns:UngroupResources'</a>,
--   <a>ungroupResources_resourceArns</a> - The ARNs of the resources to be
--   removed from the group.
newUngroupResources :: Text -> NonEmpty Text -> UngroupResources

-- | <i>See:</i> <a>newUngroupResourcesResponse</a> smart constructor.
data UngroupResourcesResponse
UngroupResourcesResponse' :: Maybe (NonEmpty Text) -> Maybe [PendingResource] -> Maybe [FailedResource] -> Int -> UngroupResourcesResponse

-- | Create a value of <a>UngroupResourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:succeeded:UngroupResourcesResponse'</a>,
--   <a>ungroupResourcesResponse_succeeded</a> - A list of resources that
--   were successfully removed from the group by this operation.
--   
--   <a>$sel:pending:UngroupResourcesResponse'</a>,
--   <a>ungroupResourcesResponse_pending</a> - A list of any resources that
--   are still in the process of being removed from the group by this
--   operation. These pending removals continue asynchronously. You can
--   check the status of pending removals by using the <tt>
--   ListGroupResources </tt> operation. After the resource is successfully
--   removed, it no longer appears in the response.
--   
--   <a>$sel:failed:UngroupResourcesResponse'</a>,
--   <a>ungroupResourcesResponse_failed</a> - A list of any resources that
--   failed to be removed from the group by this operation.
--   
--   <a>$sel:httpStatus:UngroupResourcesResponse'</a>,
--   <a>ungroupResourcesResponse_httpStatus</a> - The response's http
--   status code.
newUngroupResourcesResponse :: Int -> UngroupResourcesResponse

-- | <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> HashMap Text Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Tag'</a>, <a>tag_arn</a> - The ARN of the resource group
--   to which to add tags.
--   
--   <a>$sel:tags:Tag'</a>, <a>tag_tags</a> - The tags to add to the
--   specified resource group. A tag is a string-to-string map of key-value
--   pairs.
newTag :: Text -> Tag

-- | <i>See:</i> <a>newTagResponse</a> smart constructor.
data TagResponse
TagResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Int -> TagResponse

-- | Create a value of <a>TagResponse</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Tag'</a>, <a>tagResponse_arn</a> - The ARN of the tagged
--   resource.
--   
--   <a>$sel:tags:Tag'</a>, <a>tagResponse_tags</a> - The tags that have
--   been added to the specified resource group.
--   
--   <a>$sel:httpStatus:TagResponse'</a>, <a>tagResponse_httpStatus</a> -
--   The response's http status code.
newTagResponse :: Int -> TagResponse
newtype GroupConfigurationStatus
GroupConfigurationStatus' :: Text -> GroupConfigurationStatus
[fromGroupConfigurationStatus] :: GroupConfigurationStatus -> Text
pattern GroupConfigurationStatus_UPDATE_COMPLETE :: GroupConfigurationStatus
pattern GroupConfigurationStatus_UPDATE_FAILED :: GroupConfigurationStatus
pattern GroupConfigurationStatus_UPDATING :: GroupConfigurationStatus
newtype GroupFilterName
GroupFilterName' :: Text -> GroupFilterName
[fromGroupFilterName] :: GroupFilterName -> Text
pattern GroupFilterName_Configuration_type :: GroupFilterName
pattern GroupFilterName_Resource_type :: GroupFilterName
newtype QueryErrorCode
QueryErrorCode' :: Text -> QueryErrorCode
[fromQueryErrorCode] :: QueryErrorCode -> Text
pattern QueryErrorCode_CLOUDFORMATION_STACK_INACTIVE :: QueryErrorCode
pattern QueryErrorCode_CLOUDFORMATION_STACK_NOT_EXISTING :: QueryErrorCode
newtype QueryType
QueryType' :: Text -> QueryType
[fromQueryType] :: QueryType -> Text
pattern QueryType_CLOUDFORMATION_STACK_1_0 :: QueryType
pattern QueryType_TAG_FILTERS_1_0 :: QueryType
newtype ResourceFilterName
ResourceFilterName' :: Text -> ResourceFilterName
[fromResourceFilterName] :: ResourceFilterName -> Text
pattern ResourceFilterName_Resource_type :: ResourceFilterName
newtype ResourceStatusValue
ResourceStatusValue' :: Text -> ResourceStatusValue
[fromResourceStatusValue] :: ResourceStatusValue -> Text
pattern ResourceStatusValue_PENDING :: ResourceStatusValue

-- | A resource that failed to be added to or removed from a group.
--   
--   <i>See:</i> <a>newFailedResource</a> smart constructor.
data FailedResource
FailedResource' :: Maybe Text -> Maybe Text -> Maybe Text -> FailedResource

-- | Create a value of <a>FailedResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:FailedResource'</a>,
--   <a>failedResource_resourceArn</a> - The ARN of the resource that
--   failed to be added or removed.
--   
--   <a>$sel:errorMessage:FailedResource'</a>,
--   <a>failedResource_errorMessage</a> - The error message text associated
--   with the failure.
--   
--   <a>$sel:errorCode:FailedResource'</a>, <a>failedResource_errorCode</a>
--   - The error code associated with the failure.
newFailedResource :: FailedResource

-- | A resource group that contains AWS resources. You can assign resources
--   to the group by associating either of the following elements with the
--   group:
--   
--   <ul>
--   <li>ResourceQuery - Use a resource query to specify a set of tag keys
--   and values. All resources in the same AWS Region and AWS account that
--   have those keys with the same values are included in the group. You
--   can add a resource query when you create the group, or later by using
--   the PutGroupConfiguration operation.</li>
--   <li>GroupConfiguration - Use a service configuration to associate the
--   group with an AWS service. The configuration specifies which resource
--   types can be included in the group.</li>
--   </ul>
--   
--   <i>See:</i> <a>newGroup</a> smart constructor.
data Group
Group' :: Maybe Text -> Text -> Text -> Group

-- | Create a value of <a>Group</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:Group'</a>, <a>group_description</a> - The
--   description of the resource group.
--   
--   <a>$sel:groupArn:Group'</a>, <a>group_groupArn</a> - The ARN of the
--   resource group.
--   
--   <a>$sel:name:Group'</a>, <a>group_name</a> - The name of the resource
--   group.
newGroup :: Text -> Text -> Group

-- | A service configuration associated with a resource group. The
--   configuration options are determined by the AWS service that defines
--   the <tt>Type</tt>, and specifies which resources can be included in
--   the group. You can add a service configuration when you create the
--   group by using CreateGroup, or later by using the
--   PutGroupConfiguration operation. For details about group service
--   configuration syntax, see <a>Service configurations for resource
--   groups</a>.
--   
--   <i>See:</i> <a>newGroupConfiguration</a> smart constructor.
data GroupConfiguration
GroupConfiguration' :: Maybe GroupConfigurationStatus -> Maybe [GroupConfigurationItem] -> Maybe Text -> Maybe [GroupConfigurationItem] -> GroupConfiguration

-- | Create a value of <a>GroupConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GroupConfiguration'</a>,
--   <a>groupConfiguration_status</a> - The current status of an attempt to
--   update the group configuration.
--   
--   <a>$sel:configuration:GroupConfiguration'</a>,
--   <a>groupConfiguration_configuration</a> - The configuration currently
--   associated with the group and in effect.
--   
--   <a>$sel:failureReason:GroupConfiguration'</a>,
--   <a>groupConfiguration_failureReason</a> - If present, the reason why a
--   request to update the group configuration failed.
--   
--   <a>$sel:proposedConfiguration:GroupConfiguration'</a>,
--   <a>groupConfiguration_proposedConfiguration</a> - If present, the new
--   configuration that is in the process of being applied to the group.
newGroupConfiguration :: GroupConfiguration

-- | An item in a group configuration. A group service configuration can
--   have one or more items. For details about group service configuration
--   syntax, see <a>Service configurations for resource groups</a>.
--   
--   <i>See:</i> <a>newGroupConfigurationItem</a> smart constructor.
data GroupConfigurationItem
GroupConfigurationItem' :: Maybe [GroupConfigurationParameter] -> Text -> GroupConfigurationItem

-- | Create a value of <a>GroupConfigurationItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:GroupConfigurationItem'</a>,
--   <a>groupConfigurationItem_parameters</a> - A collection of parameters
--   for this group configuration item. For the list of parameters that you
--   can use with each configuration item type, see <a>Supported resource
--   types and parameters</a>.
--   
--   <a>$sel:type':GroupConfigurationItem'</a>,
--   <a>groupConfigurationItem_type</a> - Specifies the type of group
--   configuration item. Each item must have a unique value for
--   <tt>type</tt>. For the list of types that you can specify for a
--   configuration item, see <a>Supported resource types and
--   parameters</a>.
newGroupConfigurationItem :: Text -> GroupConfigurationItem

-- | A parameter for a group configuration item. For details about group
--   service configuration syntax, see <a>Service configurations for
--   resource groups</a>.
--   
--   <i>See:</i> <a>newGroupConfigurationParameter</a> smart constructor.
data GroupConfigurationParameter
GroupConfigurationParameter' :: Maybe [Text] -> Text -> GroupConfigurationParameter

-- | Create a value of <a>GroupConfigurationParameter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:GroupConfigurationParameter'</a>,
--   <a>groupConfigurationParameter_values</a> - The value or values to be
--   used for the specified parameter. For the list of values you can use
--   with each parameter, see <a>Supported resource types and
--   parameters</a>.
--   
--   <a>$sel:name:GroupConfigurationParameter'</a>,
--   <a>groupConfigurationParameter_name</a> - The name of the group
--   configuration parameter. For the list of parameters that you can use
--   with each configuration item type, see <a>Supported resource types and
--   parameters</a>.
newGroupConfigurationParameter :: Text -> GroupConfigurationParameter

-- | A filter collection that you can use to restrict the results from a
--   <tt>List</tt> operation to only those you want to include.
--   
--   <i>See:</i> <a>newGroupFilter</a> smart constructor.
data GroupFilter
GroupFilter' :: GroupFilterName -> NonEmpty Text -> GroupFilter

-- | Create a value of <a>GroupFilter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GroupFilter'</a>, <a>groupFilter_name</a> - The name of
--   the filter. Filter names are case-sensitive.
--   
--   <a>$sel:values:GroupFilter'</a>, <a>groupFilter_values</a> - One or
--   more filter values. Allowed filter values vary by group filter name,
--   and are case-sensitive.
newGroupFilter :: GroupFilterName -> NonEmpty Text -> GroupFilter

-- | The unique identifiers for a resource group.
--   
--   <i>See:</i> <a>newGroupIdentifier</a> smart constructor.
data GroupIdentifier
GroupIdentifier' :: Maybe Text -> Maybe Text -> GroupIdentifier

-- | Create a value of <a>GroupIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:GroupIdentifier'</a>,
--   <a>groupIdentifier_groupName</a> - The name of the resource group.
--   
--   <a>$sel:groupArn:GroupIdentifier'</a>, <a>groupIdentifier_groupArn</a>
--   - The ARN of the resource group.
newGroupIdentifier :: GroupIdentifier

-- | A mapping of a query attached to a resource group that determines the
--   AWS resources that are members of the group.
--   
--   <i>See:</i> <a>newGroupQuery</a> smart constructor.
data GroupQuery
GroupQuery' :: Text -> ResourceQuery -> GroupQuery

-- | Create a value of <a>GroupQuery</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:GroupQuery'</a>, <a>groupQuery_groupName</a> - The
--   name of the resource group that is associated with the specified
--   resource query.
--   
--   <a>$sel:resourceQuery:GroupQuery'</a>, <a>groupQuery_resourceQuery</a>
--   - The resource query that determines which AWS resources are members
--   of the associated resource group.
newGroupQuery :: Text -> ResourceQuery -> GroupQuery

-- | A structure returned by the ListGroupResources operation that contains
--   identity and group membership status information for one of the
--   resources in the group.
--   
--   <i>See:</i> <a>newListGroupResourcesItem</a> smart constructor.
data ListGroupResourcesItem
ListGroupResourcesItem' :: Maybe ResourceStatus -> Maybe ResourceIdentifier -> ListGroupResourcesItem

-- | Create a value of <a>ListGroupResourcesItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListGroupResourcesItem'</a>,
--   <a>listGroupResourcesItem_status</a> - A structure that contains the
--   status of this resource's membership in the group.
--   
--   This field is present in the response only if the group is of type
--   <tt>AWS::EC2::HostManagement</tt>.
--   
--   <a>$sel:identifier:ListGroupResourcesItem'</a>,
--   <a>listGroupResourcesItem_identifier</a> - Undocumented member.
newListGroupResourcesItem :: ListGroupResourcesItem

-- | A structure that identifies a resource that is currently pending
--   addition to the group as a member. Adding a resource to a resource
--   group happens asynchronously as a background task and this one isn't
--   completed yet.
--   
--   <i>See:</i> <a>newPendingResource</a> smart constructor.
data PendingResource
PendingResource' :: Maybe Text -> PendingResource

-- | Create a value of <a>PendingResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:PendingResource'</a>,
--   <a>pendingResource_resourceArn</a> - The Amazon resource name (ARN) of
--   the resource that's in a pending state.
newPendingResource :: PendingResource

-- | A two-part error structure that can occur in
--   <tt>ListGroupResources</tt> or <tt>SearchResources</tt> operations on
--   CloudFormation stack-based queries. The error occurs if the
--   CloudFormation stack on which the query is based either does not
--   exist, or has a status that renders the stack inactive. A
--   <tt>QueryError</tt> occurrence does not necessarily mean that AWS
--   Resource Groups could not complete the operation, but the resulting
--   group might have no member resources.
--   
--   <i>See:</i> <a>newQueryError</a> smart constructor.
data QueryError
QueryError' :: Maybe Text -> Maybe QueryErrorCode -> QueryError

-- | Create a value of <a>QueryError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:QueryError'</a>, <a>queryError_message</a> - A message
--   that explains the <tt>ErrorCode</tt> value. Messages might state that
--   the specified CloudFormation stack does not exist (or no longer
--   exists). For <tt>CLOUDFORMATION_STACK_INACTIVE</tt>, the message
--   typically states that the CloudFormation stack has a status that is
--   not (or no longer) active, such as <tt>CREATE_FAILED</tt>.
--   
--   <a>$sel:errorCode:QueryError'</a>, <a>queryError_errorCode</a> -
--   Possible values are <tt>CLOUDFORMATION_STACK_INACTIVE</tt> and
--   <tt>CLOUDFORMATION_STACK_NOT_EXISTING</tt>.
newQueryError :: QueryError

-- | A filter name and value pair that is used to obtain more specific
--   results from a list of resources.
--   
--   <i>See:</i> <a>newResourceFilter</a> smart constructor.
data ResourceFilter
ResourceFilter' :: ResourceFilterName -> NonEmpty Text -> ResourceFilter

-- | Create a value of <a>ResourceFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ResourceFilter'</a>, <a>resourceFilter_name</a> - The
--   name of the filter. Filter names are case-sensitive.
--   
--   <a>$sel:values:ResourceFilter'</a>, <a>resourceFilter_values</a> - One
--   or more filter values. Allowed filter values vary by resource filter
--   name, and are case-sensitive.
newResourceFilter :: ResourceFilterName -> NonEmpty Text -> ResourceFilter

-- | A structure that contains the ARN of a resource and its resource type.
--   
--   <i>See:</i> <a>newResourceIdentifier</a> smart constructor.
data ResourceIdentifier
ResourceIdentifier' :: Maybe Text -> Maybe Text -> ResourceIdentifier

-- | Create a value of <a>ResourceIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ResourceIdentifier'</a>,
--   <a>resourceIdentifier_resourceArn</a> - The ARN of a resource.
--   
--   <a>$sel:resourceType:ResourceIdentifier'</a>,
--   <a>resourceIdentifier_resourceType</a> - The resource type of a
--   resource, such as <tt>AWS::EC2::Instance</tt>.
newResourceIdentifier :: ResourceIdentifier

-- | The query that is used to define a resource group or a search for
--   resources. A query specifies both a query type and a query string as a
--   JSON object. See the examples section for example JSON strings.
--   
--   The examples that follow are shown as standard JSON strings. If you
--   include such a string as a parameter to the AWS CLI or an SDK API, you
--   might need to 'escape' the string into a single line. For example, see
--   the <a>Quoting strings</a> in the <i>AWS CLI User Guide</i>.
--   
--   <b>Example 1</b>
--   
--   The following generic example shows a resource query JSON string that
--   includes only resources that meet the following criteria:
--   
--   <ul>
--   <li>The resource type must be either <tt>resource_type1</tt> or
--   <tt>resource_type2</tt>.</li>
--   <li>The resource must have a tag <tt>Key1</tt> with a value of either
--   <tt>ValueA</tt> or <tt>ValueB</tt>.</li>
--   <li>The resource must have a tag <tt>Key2</tt> with a value of either
--   <tt>ValueC</tt> or <tt>ValueD</tt>.</li>
--   </ul>
--   
--   <pre>
--   { "Type": "TAG_FILTERS_1_0", "Query": { "ResourceTypeFilters": [ "resource_type1", "resource_type2"], "TagFilters": [ { "Key": "Key1", "Values": ["ValueA","ValueB"] }, { "Key":"Key2", "Values":["ValueC","ValueD"] } ] } }
--   </pre>
--   
--   This has the equivalent "shortcut" syntax of the following:
--   
--   <pre>
--   { "Type": "TAG_FILTERS_1_0", "Query": { "ResourceTypeFilters": [ "resource_type1", "resource_type2"], "TagFilters": [ { "Key1": ["ValueA","ValueB"] }, { "Key2": ["ValueC","ValueD"] } ] } }
--   </pre>
--   
--   <b>Example 2</b>
--   
--   The following example shows a resource query JSON string that includes
--   only Amazon EC2 instances that are tagged <tt>Stage</tt> with a value
--   of <tt>Test</tt>.
--   
--   <pre>
--   { "Type": "TAG_FILTERS_1_0", "Query": "{ "ResourceTypeFilters": "AWS::EC2::Instance", "TagFilters": { "Stage": "Test" } } }
--   </pre>
--   
--   <b>Example 3</b>
--   
--   The following example shows a resource query JSON string that includes
--   resource of any supported type as long as it is tagged <tt>Stage</tt>
--   with a value of <tt>Prod</tt>.
--   
--   <pre>
--   { "Type": "TAG_FILTERS_1_0", "Query": { "ResourceTypeFilters": "AWS::AllSupported", "TagFilters": { "Stage": "Prod" } } }
--   </pre>
--   
--   <b>Example 4</b>
--   
--   The following example shows a resource query JSON string that includes
--   only Amazon EC2 instances and Amazon S3 buckets that are part of the
--   specified AWS CloudFormation stack.
--   
--   <pre>
--   { "Type": "CLOUDFORMATION_STACK_1_0", "Query": { "ResourceTypeFilters": [ "AWS::EC2::Instance", "AWS::S3::Bucket" ], "StackIdentifier": "arn:aws:cloudformation:us-west-2:123456789012:stack/AWStestuseraccount/fb0d5000-aba8-00e8-aa9e-50d5cEXAMPLE" } }
--   </pre>
--   
--   <i>See:</i> <a>newResourceQuery</a> smart constructor.
data ResourceQuery
ResourceQuery' :: QueryType -> Text -> ResourceQuery

-- | Create a value of <a>ResourceQuery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':ResourceQuery'</a>, <a>resourceQuery_type</a> - The type
--   of the query. You can use the following values:
--   
--   <ul>
--   <li><i><tt>CLOUDFORMATION_STACK_1_0:</tt></i> Specifies that the
--   <tt>Query</tt> contains an ARN for a CloudFormation stack.</li>
--   <li><i><tt>TAG_FILTERS_1_0:</tt></i> Specifies that the <tt>Query</tt>
--   parameter contains a JSON string that represents a collection of
--   simple tag filters for resource types and tags. The JSON string uses a
--   syntax similar to the <tt> GetResources </tt> operation, but uses only
--   the <tt> ResourceTypeFilters </tt> and <tt> TagFilters </tt> fields.
--   If you specify more than one tag key, only resources that match all
--   tag keys, and at least one value of each specified tag key, are
--   returned in your query. If you specify more than one value for a tag
--   key, a resource matches the filter if it has a tag key value that
--   matches <i>any</i> of the specified values.For example, consider the
--   following sample query for resources that have two tags,
--   <tt>Stage</tt> and <tt>Version</tt>, with two values
--   each:<pre>[{"Stage":["Test","Deploy"]},{"Version":["1","2"]}]</pre>The
--   results of this query could include the following.<ul><li>An EC2
--   instance that has the following two tags: <tt>{"Stage":"Deploy"}</tt>,
--   and <tt>{"Version":"2"}</tt></li><li>An S3 bucket that has the
--   following two tags: <tt>{"Stage":"Test"}</tt>, and
--   <tt>{"Version":"1"}</tt></li></ul>The query would not include the
--   following items in the results, however.<ul><li>An EC2 instance that
--   has only the following tag: <tt>{"Stage":"Deploy"}</tt>.The instance
--   does not have <b>all</b> of the tag keys specified in the filter, so
--   it is excluded from the results.</li><li>An RDS database that has the
--   following two tags: <tt>{"Stage":"Archived"}</tt> and
--   <tt>{"Version":"4"}</tt>The database has all of the tag keys, but none
--   of those keys has an associated value that matches at least one of the
--   specified values in the filter.</li></ul></li>
--   </ul>
--   
--   <a>$sel:query:ResourceQuery'</a>, <a>resourceQuery_searchQuery</a> -
--   The query that defines a group or a search.
newResourceQuery :: QueryType -> Text -> ResourceQuery

-- | A structure that identifies the current group membership status for a
--   resource. Adding a resource to a resource group is performed
--   asynchronously as a background task. A <tt>PENDING</tt> status
--   indicates, for this resource, that the process isn't completed yet.
--   
--   <i>See:</i> <a>newResourceStatus</a> smart constructor.
data ResourceStatus
ResourceStatus' :: Maybe ResourceStatusValue -> ResourceStatus

-- | Create a value of <a>ResourceStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ResourceStatus'</a>, <a>resourceStatus_name</a> - The
--   current status.
newResourceStatus :: ResourceStatus
