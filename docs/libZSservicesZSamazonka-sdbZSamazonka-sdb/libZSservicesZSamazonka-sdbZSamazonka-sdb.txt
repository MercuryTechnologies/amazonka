-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-sdbZSamazonka-sdb
@version 1.6.1


module Network.AWS.SDB.Types.Attribute

-- | <i>See:</i> <a>newAttribute</a> smart constructor.
data Attribute
Attribute' :: Maybe Text -> Maybe Text -> Text -> Text -> Attribute
[$sel:alternateNameEncoding:Attribute'] :: Attribute -> Maybe Text
[$sel:alternateValueEncoding:Attribute'] :: Attribute -> Maybe Text

-- | The name of the attribute.
[$sel:name:Attribute'] :: Attribute -> Text

-- | The value of the attribute.
[$sel:value:Attribute'] :: Attribute -> Text

-- | Create a value of <a>Attribute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alternateNameEncoding:Attribute'</a>,
--   <a>attribute_alternateNameEncoding</a> -
--   
--   <a>$sel:alternateValueEncoding:Attribute'</a>,
--   <a>attribute_alternateValueEncoding</a> -
--   
--   <a>$sel:name:Attribute'</a>, <a>attribute_name</a> - The name of the
--   attribute.
--   
--   <a>$sel:value:Attribute'</a>, <a>attribute_value</a> - The value of
--   the attribute.
newAttribute :: Text -> Text -> Attribute

attribute_alternateNameEncoding :: Lens' Attribute (Maybe Text)

attribute_alternateValueEncoding :: Lens' Attribute (Maybe Text)

-- | The name of the attribute.
attribute_name :: Lens' Attribute Text

-- | The value of the attribute.
attribute_value :: Lens' Attribute Text
instance GHC.Generics.Generic Network.AWS.SDB.Types.Attribute.Attribute
instance GHC.Show.Show Network.AWS.SDB.Types.Attribute.Attribute
instance GHC.Read.Read Network.AWS.SDB.Types.Attribute.Attribute
instance GHC.Classes.Eq Network.AWS.SDB.Types.Attribute.Attribute
instance Network.AWS.Data.XML.FromXML Network.AWS.SDB.Types.Attribute.Attribute
instance Data.Hashable.Class.Hashable Network.AWS.SDB.Types.Attribute.Attribute
instance Control.DeepSeq.NFData Network.AWS.SDB.Types.Attribute.Attribute
instance Network.AWS.Data.Query.ToQuery Network.AWS.SDB.Types.Attribute.Attribute


module Network.AWS.SDB.Types.DeletableItem

-- | <i>See:</i> <a>newDeletableItem</a> smart constructor.
data DeletableItem
DeletableItem' :: Maybe [Attribute] -> Text -> DeletableItem
[$sel:attributes:DeletableItem'] :: DeletableItem -> Maybe [Attribute]
[$sel:name:DeletableItem'] :: DeletableItem -> Text

-- | Create a value of <a>DeletableItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:DeletableItem'</a>, <a>deletableItem_attributes</a>
--   - Undocumented member.
--   
--   <a>$sel:name:DeletableItem'</a>, <a>deletableItem_name</a> -
--   Undocumented member.
newDeletableItem :: Text -> DeletableItem

-- | Undocumented member.
deletableItem_attributes :: Lens' DeletableItem (Maybe [Attribute])

-- | Undocumented member.
deletableItem_name :: Lens' DeletableItem Text
instance GHC.Generics.Generic Network.AWS.SDB.Types.DeletableItem.DeletableItem
instance GHC.Show.Show Network.AWS.SDB.Types.DeletableItem.DeletableItem
instance GHC.Read.Read Network.AWS.SDB.Types.DeletableItem.DeletableItem
instance GHC.Classes.Eq Network.AWS.SDB.Types.DeletableItem.DeletableItem
instance Data.Hashable.Class.Hashable Network.AWS.SDB.Types.DeletableItem.DeletableItem
instance Control.DeepSeq.NFData Network.AWS.SDB.Types.DeletableItem.DeletableItem
instance Network.AWS.Data.Query.ToQuery Network.AWS.SDB.Types.DeletableItem.DeletableItem


module Network.AWS.SDB.Types.Item

-- | <i>See:</i> <a>newItem</a> smart constructor.
data Item
Item' :: Maybe Text -> Text -> [Attribute] -> Item
[$sel:alternateNameEncoding:Item'] :: Item -> Maybe Text

-- | The name of the item.
[$sel:name:Item'] :: Item -> Text

-- | A list of attributes.
[$sel:attributes:Item'] :: Item -> [Attribute]

-- | Create a value of <a>Item</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alternateNameEncoding:Item'</a>,
--   <a>item_alternateNameEncoding</a> -
--   
--   <a>$sel:name:Item'</a>, <a>item_name</a> - The name of the item.
--   
--   <a>$sel:attributes:Item'</a>, <a>item_attributes</a> - A list of
--   attributes.
newItem :: Text -> Item

item_alternateNameEncoding :: Lens' Item (Maybe Text)

-- | The name of the item.
item_name :: Lens' Item Text

-- | A list of attributes.
item_attributes :: Lens' Item [Attribute]
instance GHC.Generics.Generic Network.AWS.SDB.Types.Item.Item
instance GHC.Show.Show Network.AWS.SDB.Types.Item.Item
instance GHC.Read.Read Network.AWS.SDB.Types.Item.Item
instance GHC.Classes.Eq Network.AWS.SDB.Types.Item.Item
instance Network.AWS.Data.XML.FromXML Network.AWS.SDB.Types.Item.Item
instance Data.Hashable.Class.Hashable Network.AWS.SDB.Types.Item.Item
instance Control.DeepSeq.NFData Network.AWS.SDB.Types.Item.Item


module Network.AWS.SDB.Types.ReplaceableAttribute

-- | <i>See:</i> <a>newReplaceableAttribute</a> smart constructor.
data ReplaceableAttribute
ReplaceableAttribute' :: Maybe Bool -> Text -> Text -> ReplaceableAttribute

-- | A flag specifying whether or not to replace the attribute/value pair
--   or to add a new attribute/value pair. The default setting is
--   <tt>false</tt>.
[$sel:replace:ReplaceableAttribute'] :: ReplaceableAttribute -> Maybe Bool

-- | The name of the replaceable attribute.
[$sel:name:ReplaceableAttribute'] :: ReplaceableAttribute -> Text

-- | The value of the replaceable attribute.
[$sel:value:ReplaceableAttribute'] :: ReplaceableAttribute -> Text

-- | Create a value of <a>ReplaceableAttribute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replace:ReplaceableAttribute'</a>,
--   <a>replaceableAttribute_replace</a> - A flag specifying whether or not
--   to replace the attribute/value pair or to add a new attribute/value
--   pair. The default setting is <tt>false</tt>.
--   
--   <a>$sel:name:ReplaceableAttribute'</a>,
--   <a>replaceableAttribute_name</a> - The name of the replaceable
--   attribute.
--   
--   <a>$sel:value:ReplaceableAttribute'</a>,
--   <a>replaceableAttribute_value</a> - The value of the replaceable
--   attribute.
newReplaceableAttribute :: Text -> Text -> ReplaceableAttribute

-- | A flag specifying whether or not to replace the attribute/value pair
--   or to add a new attribute/value pair. The default setting is
--   <tt>false</tt>.
replaceableAttribute_replace :: Lens' ReplaceableAttribute (Maybe Bool)

-- | The name of the replaceable attribute.
replaceableAttribute_name :: Lens' ReplaceableAttribute Text

-- | The value of the replaceable attribute.
replaceableAttribute_value :: Lens' ReplaceableAttribute Text
instance GHC.Generics.Generic Network.AWS.SDB.Types.ReplaceableAttribute.ReplaceableAttribute
instance GHC.Show.Show Network.AWS.SDB.Types.ReplaceableAttribute.ReplaceableAttribute
instance GHC.Read.Read Network.AWS.SDB.Types.ReplaceableAttribute.ReplaceableAttribute
instance GHC.Classes.Eq Network.AWS.SDB.Types.ReplaceableAttribute.ReplaceableAttribute
instance Data.Hashable.Class.Hashable Network.AWS.SDB.Types.ReplaceableAttribute.ReplaceableAttribute
instance Control.DeepSeq.NFData Network.AWS.SDB.Types.ReplaceableAttribute.ReplaceableAttribute
instance Network.AWS.Data.Query.ToQuery Network.AWS.SDB.Types.ReplaceableAttribute.ReplaceableAttribute


module Network.AWS.SDB.Types.ReplaceableItem

-- | <i>See:</i> <a>newReplaceableItem</a> smart constructor.
data ReplaceableItem
ReplaceableItem' :: Text -> [ReplaceableAttribute] -> ReplaceableItem

-- | The name of the replaceable item.
[$sel:name:ReplaceableItem'] :: ReplaceableItem -> Text

-- | The list of attributes for a replaceable item.
[$sel:attributes:ReplaceableItem'] :: ReplaceableItem -> [ReplaceableAttribute]

-- | Create a value of <a>ReplaceableItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ReplaceableItem'</a>, <a>replaceableItem_name</a> - The
--   name of the replaceable item.
--   
--   <a>$sel:attributes:ReplaceableItem'</a>,
--   <a>replaceableItem_attributes</a> - The list of attributes for a
--   replaceable item.
newReplaceableItem :: Text -> ReplaceableItem

-- | The name of the replaceable item.
replaceableItem_name :: Lens' ReplaceableItem Text

-- | The list of attributes for a replaceable item.
replaceableItem_attributes :: Lens' ReplaceableItem [ReplaceableAttribute]
instance GHC.Generics.Generic Network.AWS.SDB.Types.ReplaceableItem.ReplaceableItem
instance GHC.Show.Show Network.AWS.SDB.Types.ReplaceableItem.ReplaceableItem
instance GHC.Read.Read Network.AWS.SDB.Types.ReplaceableItem.ReplaceableItem
instance GHC.Classes.Eq Network.AWS.SDB.Types.ReplaceableItem.ReplaceableItem
instance Data.Hashable.Class.Hashable Network.AWS.SDB.Types.ReplaceableItem.ReplaceableItem
instance Control.DeepSeq.NFData Network.AWS.SDB.Types.ReplaceableItem.ReplaceableItem
instance Network.AWS.Data.Query.ToQuery Network.AWS.SDB.Types.ReplaceableItem.ReplaceableItem


module Network.AWS.SDB.Types.UpdateCondition

-- | Specifies the conditions under which data should be updated. If an
--   update condition is specified for a request, the data will only be
--   updated if the condition is satisfied. For example, if an attribute
--   with a specific name and value exists, or if a specific attribute
--   doesn't exist.
--   
--   <i>See:</i> <a>newUpdateCondition</a> smart constructor.
data UpdateCondition
UpdateCondition' :: Maybe Bool -> Maybe Text -> Maybe Text -> UpdateCondition

-- | A value specifying whether or not the specified attribute must exist
--   with the specified value in order for the update condition to be
--   satisfied. Specify <tt>true</tt> if the attribute must exist for the
--   update condition to be satisfied. Specify <tt>false</tt> if the
--   attribute should not exist in order for the update condition to be
--   satisfied.
[$sel:exists:UpdateCondition'] :: UpdateCondition -> Maybe Bool

-- | The name of the attribute involved in the condition.
[$sel:name:UpdateCondition'] :: UpdateCondition -> Maybe Text

-- | The value of an attribute. This value can only be specified when the
--   <tt>Exists</tt> parameter is equal to <tt>true</tt>.
[$sel:value:UpdateCondition'] :: UpdateCondition -> Maybe Text

-- | Create a value of <a>UpdateCondition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exists:UpdateCondition'</a>, <a>updateCondition_exists</a> - A
--   value specifying whether or not the specified attribute must exist
--   with the specified value in order for the update condition to be
--   satisfied. Specify <tt>true</tt> if the attribute must exist for the
--   update condition to be satisfied. Specify <tt>false</tt> if the
--   attribute should not exist in order for the update condition to be
--   satisfied.
--   
--   <a>$sel:name:UpdateCondition'</a>, <a>updateCondition_name</a> - The
--   name of the attribute involved in the condition.
--   
--   <a>$sel:value:UpdateCondition'</a>, <a>updateCondition_value</a> - The
--   value of an attribute. This value can only be specified when the
--   <tt>Exists</tt> parameter is equal to <tt>true</tt>.
newUpdateCondition :: UpdateCondition

-- | A value specifying whether or not the specified attribute must exist
--   with the specified value in order for the update condition to be
--   satisfied. Specify <tt>true</tt> if the attribute must exist for the
--   update condition to be satisfied. Specify <tt>false</tt> if the
--   attribute should not exist in order for the update condition to be
--   satisfied.
updateCondition_exists :: Lens' UpdateCondition (Maybe Bool)

-- | The name of the attribute involved in the condition.
updateCondition_name :: Lens' UpdateCondition (Maybe Text)

-- | The value of an attribute. This value can only be specified when the
--   <tt>Exists</tt> parameter is equal to <tt>true</tt>.
updateCondition_value :: Lens' UpdateCondition (Maybe Text)
instance GHC.Generics.Generic Network.AWS.SDB.Types.UpdateCondition.UpdateCondition
instance GHC.Show.Show Network.AWS.SDB.Types.UpdateCondition.UpdateCondition
instance GHC.Read.Read Network.AWS.SDB.Types.UpdateCondition.UpdateCondition
instance GHC.Classes.Eq Network.AWS.SDB.Types.UpdateCondition.UpdateCondition
instance Data.Hashable.Class.Hashable Network.AWS.SDB.Types.UpdateCondition.UpdateCondition
instance Control.DeepSeq.NFData Network.AWS.SDB.Types.UpdateCondition.UpdateCondition
instance Network.AWS.Data.Query.ToQuery Network.AWS.SDB.Types.UpdateCondition.UpdateCondition


module Network.AWS.SDB.Types

-- | API version <tt>2009-04-15</tt> of the Amazon SimpleDB SDK
--   configuration.
defaultService :: Service

-- | Too many attributes in this domain.
_NumberDomainAttributesExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | Too many items exist in a single call.
_NumberSubmittedItemsExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified domain does not exist.
_NoSuchDomain :: AsError a => Getting (First ServiceError) a ServiceError

-- | Too many bytes in this domain.
_NumberDomainBytesExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | Too many domains exist per this account.
_NumberDomainsExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | Too many predicates exist in the query expression.
_InvalidNumberPredicates :: AsError a => Getting (First ServiceError) a ServiceError

-- | The item name was specified more than once.
_DuplicateItemName :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified attribute does not exist.
_AttributeDoesNotExist :: AsError a => Getting (First ServiceError) a ServiceError

-- | Too many predicates exist in the query expression.
_InvalidNumberValueTests :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified query expression syntax is not valid.
_InvalidQueryExpression :: AsError a => Getting (First ServiceError) a ServiceError

-- | Too many attributes exist in a single call.
_NumberSubmittedAttributesExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value for a parameter is invalid.
_InvalidParameterValue :: AsError a => Getting (First ServiceError) a ServiceError

-- | Too many attributes requested.
_TooManyRequestedAttributes :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified NextToken is not valid.
_InvalidNextToken :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request must contain the specified missing parameter.
_MissingParameter :: AsError a => Getting (First ServiceError) a ServiceError

-- | Too many attributes in this item.
_NumberItemAttributesExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | A timeout occurred when attempting to query the specified domain with
--   specified query expression.
_RequestTimeout :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newAttribute</a> smart constructor.
data Attribute
Attribute' :: Maybe Text -> Maybe Text -> Text -> Text -> Attribute
[$sel:alternateNameEncoding:Attribute'] :: Attribute -> Maybe Text
[$sel:alternateValueEncoding:Attribute'] :: Attribute -> Maybe Text

-- | The name of the attribute.
[$sel:name:Attribute'] :: Attribute -> Text

-- | The value of the attribute.
[$sel:value:Attribute'] :: Attribute -> Text

-- | Create a value of <a>Attribute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alternateNameEncoding:Attribute'</a>,
--   <a>attribute_alternateNameEncoding</a> -
--   
--   <a>$sel:alternateValueEncoding:Attribute'</a>,
--   <a>attribute_alternateValueEncoding</a> -
--   
--   <a>$sel:name:Attribute'</a>, <a>attribute_name</a> - The name of the
--   attribute.
--   
--   <a>$sel:value:Attribute'</a>, <a>attribute_value</a> - The value of
--   the attribute.
newAttribute :: Text -> Text -> Attribute

attribute_alternateNameEncoding :: Lens' Attribute (Maybe Text)

attribute_alternateValueEncoding :: Lens' Attribute (Maybe Text)

-- | The name of the attribute.
attribute_name :: Lens' Attribute Text

-- | The value of the attribute.
attribute_value :: Lens' Attribute Text

-- | <i>See:</i> <a>newDeletableItem</a> smart constructor.
data DeletableItem
DeletableItem' :: Maybe [Attribute] -> Text -> DeletableItem
[$sel:attributes:DeletableItem'] :: DeletableItem -> Maybe [Attribute]
[$sel:name:DeletableItem'] :: DeletableItem -> Text

-- | Create a value of <a>DeletableItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:DeletableItem'</a>, <a>deletableItem_attributes</a>
--   - Undocumented member.
--   
--   <a>$sel:name:DeletableItem'</a>, <a>deletableItem_name</a> -
--   Undocumented member.
newDeletableItem :: Text -> DeletableItem

-- | Undocumented member.
deletableItem_attributes :: Lens' DeletableItem (Maybe [Attribute])

-- | Undocumented member.
deletableItem_name :: Lens' DeletableItem Text

-- | <i>See:</i> <a>newItem</a> smart constructor.
data Item
Item' :: Maybe Text -> Text -> [Attribute] -> Item
[$sel:alternateNameEncoding:Item'] :: Item -> Maybe Text

-- | The name of the item.
[$sel:name:Item'] :: Item -> Text

-- | A list of attributes.
[$sel:attributes:Item'] :: Item -> [Attribute]

-- | Create a value of <a>Item</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alternateNameEncoding:Item'</a>,
--   <a>item_alternateNameEncoding</a> -
--   
--   <a>$sel:name:Item'</a>, <a>item_name</a> - The name of the item.
--   
--   <a>$sel:attributes:Item'</a>, <a>item_attributes</a> - A list of
--   attributes.
newItem :: Text -> Item

item_alternateNameEncoding :: Lens' Item (Maybe Text)

-- | The name of the item.
item_name :: Lens' Item Text

-- | A list of attributes.
item_attributes :: Lens' Item [Attribute]

-- | <i>See:</i> <a>newReplaceableAttribute</a> smart constructor.
data ReplaceableAttribute
ReplaceableAttribute' :: Maybe Bool -> Text -> Text -> ReplaceableAttribute

-- | A flag specifying whether or not to replace the attribute/value pair
--   or to add a new attribute/value pair. The default setting is
--   <tt>false</tt>.
[$sel:replace:ReplaceableAttribute'] :: ReplaceableAttribute -> Maybe Bool

-- | The name of the replaceable attribute.
[$sel:name:ReplaceableAttribute'] :: ReplaceableAttribute -> Text

-- | The value of the replaceable attribute.
[$sel:value:ReplaceableAttribute'] :: ReplaceableAttribute -> Text

-- | Create a value of <a>ReplaceableAttribute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replace:ReplaceableAttribute'</a>,
--   <a>replaceableAttribute_replace</a> - A flag specifying whether or not
--   to replace the attribute/value pair or to add a new attribute/value
--   pair. The default setting is <tt>false</tt>.
--   
--   <a>$sel:name:ReplaceableAttribute'</a>,
--   <a>replaceableAttribute_name</a> - The name of the replaceable
--   attribute.
--   
--   <a>$sel:value:ReplaceableAttribute'</a>,
--   <a>replaceableAttribute_value</a> - The value of the replaceable
--   attribute.
newReplaceableAttribute :: Text -> Text -> ReplaceableAttribute

-- | A flag specifying whether or not to replace the attribute/value pair
--   or to add a new attribute/value pair. The default setting is
--   <tt>false</tt>.
replaceableAttribute_replace :: Lens' ReplaceableAttribute (Maybe Bool)

-- | The name of the replaceable attribute.
replaceableAttribute_name :: Lens' ReplaceableAttribute Text

-- | The value of the replaceable attribute.
replaceableAttribute_value :: Lens' ReplaceableAttribute Text

-- | <i>See:</i> <a>newReplaceableItem</a> smart constructor.
data ReplaceableItem
ReplaceableItem' :: Text -> [ReplaceableAttribute] -> ReplaceableItem

-- | The name of the replaceable item.
[$sel:name:ReplaceableItem'] :: ReplaceableItem -> Text

-- | The list of attributes for a replaceable item.
[$sel:attributes:ReplaceableItem'] :: ReplaceableItem -> [ReplaceableAttribute]

-- | Create a value of <a>ReplaceableItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ReplaceableItem'</a>, <a>replaceableItem_name</a> - The
--   name of the replaceable item.
--   
--   <a>$sel:attributes:ReplaceableItem'</a>,
--   <a>replaceableItem_attributes</a> - The list of attributes for a
--   replaceable item.
newReplaceableItem :: Text -> ReplaceableItem

-- | The name of the replaceable item.
replaceableItem_name :: Lens' ReplaceableItem Text

-- | The list of attributes for a replaceable item.
replaceableItem_attributes :: Lens' ReplaceableItem [ReplaceableAttribute]

-- | Specifies the conditions under which data should be updated. If an
--   update condition is specified for a request, the data will only be
--   updated if the condition is satisfied. For example, if an attribute
--   with a specific name and value exists, or if a specific attribute
--   doesn't exist.
--   
--   <i>See:</i> <a>newUpdateCondition</a> smart constructor.
data UpdateCondition
UpdateCondition' :: Maybe Bool -> Maybe Text -> Maybe Text -> UpdateCondition

-- | A value specifying whether or not the specified attribute must exist
--   with the specified value in order for the update condition to be
--   satisfied. Specify <tt>true</tt> if the attribute must exist for the
--   update condition to be satisfied. Specify <tt>false</tt> if the
--   attribute should not exist in order for the update condition to be
--   satisfied.
[$sel:exists:UpdateCondition'] :: UpdateCondition -> Maybe Bool

-- | The name of the attribute involved in the condition.
[$sel:name:UpdateCondition'] :: UpdateCondition -> Maybe Text

-- | The value of an attribute. This value can only be specified when the
--   <tt>Exists</tt> parameter is equal to <tt>true</tt>.
[$sel:value:UpdateCondition'] :: UpdateCondition -> Maybe Text

-- | Create a value of <a>UpdateCondition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exists:UpdateCondition'</a>, <a>updateCondition_exists</a> - A
--   value specifying whether or not the specified attribute must exist
--   with the specified value in order for the update condition to be
--   satisfied. Specify <tt>true</tt> if the attribute must exist for the
--   update condition to be satisfied. Specify <tt>false</tt> if the
--   attribute should not exist in order for the update condition to be
--   satisfied.
--   
--   <a>$sel:name:UpdateCondition'</a>, <a>updateCondition_name</a> - The
--   name of the attribute involved in the condition.
--   
--   <a>$sel:value:UpdateCondition'</a>, <a>updateCondition_value</a> - The
--   value of an attribute. This value can only be specified when the
--   <tt>Exists</tt> parameter is equal to <tt>true</tt>.
newUpdateCondition :: UpdateCondition

-- | A value specifying whether or not the specified attribute must exist
--   with the specified value in order for the update condition to be
--   satisfied. Specify <tt>true</tt> if the attribute must exist for the
--   update condition to be satisfied. Specify <tt>false</tt> if the
--   attribute should not exist in order for the update condition to be
--   satisfied.
updateCondition_exists :: Lens' UpdateCondition (Maybe Bool)

-- | The name of the attribute involved in the condition.
updateCondition_name :: Lens' UpdateCondition (Maybe Text)

-- | The value of an attribute. This value can only be specified when the
--   <tt>Exists</tt> parameter is equal to <tt>true</tt>.
updateCondition_value :: Lens' UpdateCondition (Maybe Text)


-- | The <tt>Select</tt> operation returns a set of attributes for
--   <tt>ItemNames</tt> that match the select expression. <tt>Select</tt>
--   is similar to the standard SQL SELECT statement.
--   
--   The total size of the response cannot exceed 1 MB in total size.
--   Amazon SimpleDB automatically adjusts the number of items returned per
--   page to enforce this limit. For example, if the client asks to
--   retrieve 2500 items, but each individual item is 10 kB in size, the
--   system returns 100 items and an appropriate <tt>NextToken</tt> so the
--   client can access the next page of results.
--   
--   For information on how to construct select expressions, see Using
--   Select to Create Amazon SimpleDB Queries in the Developer Guide.
--   
--   This operation returns paginated results.
module Network.AWS.SDB.Select

-- | <i>See:</i> <a>newSelect</a> smart constructor.
data Select
Select' :: Maybe Text -> Maybe Bool -> Text -> Select

-- | A string informing Amazon SimpleDB where to start the next list of
--   <tt>ItemNames</tt>.
[$sel:nextToken:Select'] :: Select -> Maybe Text

-- | Determines whether or not strong consistency should be enforced when
--   data is read from SimpleDB. If <tt>true</tt>, any data previously
--   written to SimpleDB will be returned. Otherwise, results will be
--   consistent eventually, and the client may not see data that was
--   written immediately before your read.
[$sel:consistentRead:Select'] :: Select -> Maybe Bool

-- | The expression used to query the domain.
[$sel:selectExpression:Select'] :: Select -> Text

-- | Create a value of <a>Select</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:Select'</a>, <a>select_nextToken</a> - A string
--   informing Amazon SimpleDB where to start the next list of
--   <tt>ItemNames</tt>.
--   
--   <a>$sel:consistentRead:Select'</a>, <a>select_consistentRead</a> -
--   Determines whether or not strong consistency should be enforced when
--   data is read from SimpleDB. If <tt>true</tt>, any data previously
--   written to SimpleDB will be returned. Otherwise, results will be
--   consistent eventually, and the client may not see data that was
--   written immediately before your read.
--   
--   <a>$sel:selectExpression:Select'</a>, <a>select_selectExpression</a> -
--   The expression used to query the domain.
newSelect :: Text -> Select

-- | A string informing Amazon SimpleDB where to start the next list of
--   <tt>ItemNames</tt>.
select_nextToken :: Lens' Select (Maybe Text)

-- | Determines whether or not strong consistency should be enforced when
--   data is read from SimpleDB. If <tt>true</tt>, any data previously
--   written to SimpleDB will be returned. Otherwise, results will be
--   consistent eventually, and the client may not see data that was
--   written immediately before your read.
select_consistentRead :: Lens' Select (Maybe Bool)

-- | The expression used to query the domain.
select_selectExpression :: Lens' Select Text

-- | <i>See:</i> <a>newSelectResponse</a> smart constructor.
data SelectResponse
SelectResponse' :: Maybe Text -> Maybe [Item] -> Int -> SelectResponse

-- | An opaque token indicating that more items than
--   <tt>MaxNumberOfItems</tt> were matched, the response size exceeded 1
--   megabyte, or the execution time exceeded 5 seconds.
[$sel:nextToken:SelectResponse'] :: SelectResponse -> Maybe Text

-- | A list of items that match the select expression.
[$sel:items:SelectResponse'] :: SelectResponse -> Maybe [Item]

-- | The response's http status code.
[$sel:httpStatus:SelectResponse'] :: SelectResponse -> Int

-- | Create a value of <a>SelectResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:Select'</a>, <a>selectResponse_nextToken</a> - An
--   opaque token indicating that more items than <tt>MaxNumberOfItems</tt>
--   were matched, the response size exceeded 1 megabyte, or the execution
--   time exceeded 5 seconds.
--   
--   <a>$sel:items:SelectResponse'</a>, <a>selectResponse_items</a> - A
--   list of items that match the select expression.
--   
--   <a>$sel:httpStatus:SelectResponse'</a>,
--   <a>selectResponse_httpStatus</a> - The response's http status code.
newSelectResponse :: Int -> SelectResponse

-- | An opaque token indicating that more items than
--   <tt>MaxNumberOfItems</tt> were matched, the response size exceeded 1
--   megabyte, or the execution time exceeded 5 seconds.
selectResponse_nextToken :: Lens' SelectResponse (Maybe Text)

-- | A list of items that match the select expression.
selectResponse_items :: Lens' SelectResponse (Maybe [Item])

-- | The response's http status code.
selectResponse_httpStatus :: Lens' SelectResponse Int
instance GHC.Generics.Generic Network.AWS.SDB.Select.Select
instance GHC.Show.Show Network.AWS.SDB.Select.Select
instance GHC.Read.Read Network.AWS.SDB.Select.Select
instance GHC.Classes.Eq Network.AWS.SDB.Select.Select
instance GHC.Generics.Generic Network.AWS.SDB.Select.SelectResponse
instance GHC.Show.Show Network.AWS.SDB.Select.SelectResponse
instance GHC.Read.Read Network.AWS.SDB.Select.SelectResponse
instance GHC.Classes.Eq Network.AWS.SDB.Select.SelectResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SDB.Select.Select
instance Control.DeepSeq.NFData Network.AWS.SDB.Select.SelectResponse
instance Network.AWS.Pager.AWSPager Network.AWS.SDB.Select.Select
instance Data.Hashable.Class.Hashable Network.AWS.SDB.Select.Select
instance Control.DeepSeq.NFData Network.AWS.SDB.Select.Select
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SDB.Select.Select
instance Network.AWS.Data.Path.ToPath Network.AWS.SDB.Select.Select
instance Network.AWS.Data.Query.ToQuery Network.AWS.SDB.Select.Select


-- | The PutAttributes operation creates or replaces attributes in an item.
--   The client may specify new attributes using a combination of the
--   <tt>Attribute.X.Name</tt> and <tt>Attribute.X.Value</tt> parameters.
--   The client specifies the first attribute by the parameters
--   <tt>Attribute.0.Name</tt> and <tt>Attribute.0.Value</tt>, the second
--   attribute by the parameters <tt>Attribute.1.Name</tt> and
--   <tt>Attribute.1.Value</tt>, and so on.
--   
--   Attributes are uniquely identified in an item by their name/value
--   combination. For example, a single item can have the attributes <tt>{
--   "first_name", "first_value" }</tt> and <tt>{ "first_name",
--   second_value" }</tt>. However, it cannot have two attribute instances
--   where both the <tt>Attribute.X.Name</tt> and
--   <tt>Attribute.X.Value</tt> are the same.
--   
--   Optionally, the requestor can supply the <tt>Replace</tt> parameter
--   for each individual attribute. Setting this value to <tt>true</tt>
--   causes the new attribute value to replace the existing attribute
--   value(s). For example, if an item has the attributes <tt>{ 'a', '1'
--   }</tt>, <tt>{ 'b', '2'}</tt> and <tt>{ 'b', '3' }</tt> and the
--   requestor calls <tt>PutAttributes</tt> using the attributes <tt>{ 'b',
--   '4' }</tt> with the <tt>Replace</tt> parameter set to true, the final
--   attributes of the item are changed to <tt>{ 'a', '1' }</tt> and <tt>{
--   'b', '4' }</tt>, which replaces the previous values of the 'b'
--   attribute with the new value.
--   
--   You cannot specify an empty string as an attribute name.
--   
--   Because Amazon SimpleDB makes multiple copies of client data and uses
--   an eventual consistency update model, an immediate GetAttributes or
--   Select operation (read) immediately after a PutAttributes or
--   DeleteAttributes operation (write) might not return the updated data.
--   
--   The following limitations are enforced for this operation:
--   
--   <ul>
--   <li>256 total attribute name-value pairs per item</li>
--   <li>One billion attributes per domain</li>
--   <li>10 GB of total user data storage per domain</li>
--   </ul>
module Network.AWS.SDB.PutAttributes

-- | <i>See:</i> <a>newPutAttributes</a> smart constructor.
data PutAttributes
PutAttributes' :: Maybe UpdateCondition -> Text -> Text -> [ReplaceableAttribute] -> PutAttributes

-- | The update condition which, if specified, determines whether the
--   specified attributes will be updated or not. The update condition must
--   be satisfied in order for this request to be processed and the
--   attributes to be updated.
[$sel:expected:PutAttributes'] :: PutAttributes -> Maybe UpdateCondition

-- | The name of the domain in which to perform the operation.
[$sel:domainName:PutAttributes'] :: PutAttributes -> Text

-- | The name of the item.
[$sel:itemName:PutAttributes'] :: PutAttributes -> Text

-- | The list of attributes.
[$sel:attributes:PutAttributes'] :: PutAttributes -> [ReplaceableAttribute]

-- | Create a value of <a>PutAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expected:PutAttributes'</a>, <a>putAttributes_expected</a> -
--   The update condition which, if specified, determines whether the
--   specified attributes will be updated or not. The update condition must
--   be satisfied in order for this request to be processed and the
--   attributes to be updated.
--   
--   <a>$sel:domainName:PutAttributes'</a>, <a>putAttributes_domainName</a>
--   - The name of the domain in which to perform the operation.
--   
--   <a>$sel:itemName:PutAttributes'</a>, <a>putAttributes_itemName</a> -
--   The name of the item.
--   
--   <a>$sel:attributes:PutAttributes'</a>, <a>putAttributes_attributes</a>
--   - The list of attributes.
newPutAttributes :: Text -> Text -> PutAttributes

-- | The update condition which, if specified, determines whether the
--   specified attributes will be updated or not. The update condition must
--   be satisfied in order for this request to be processed and the
--   attributes to be updated.
putAttributes_expected :: Lens' PutAttributes (Maybe UpdateCondition)

-- | The name of the domain in which to perform the operation.
putAttributes_domainName :: Lens' PutAttributes Text

-- | The name of the item.
putAttributes_itemName :: Lens' PutAttributes Text

-- | The list of attributes.
putAttributes_attributes :: Lens' PutAttributes [ReplaceableAttribute]

-- | <i>See:</i> <a>newPutAttributesResponse</a> smart constructor.
data PutAttributesResponse
PutAttributesResponse' :: PutAttributesResponse

-- | Create a value of <a>PutAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutAttributesResponse :: PutAttributesResponse
instance GHC.Generics.Generic Network.AWS.SDB.PutAttributes.PutAttributes
instance GHC.Show.Show Network.AWS.SDB.PutAttributes.PutAttributes
instance GHC.Read.Read Network.AWS.SDB.PutAttributes.PutAttributes
instance GHC.Classes.Eq Network.AWS.SDB.PutAttributes.PutAttributes
instance GHC.Generics.Generic Network.AWS.SDB.PutAttributes.PutAttributesResponse
instance GHC.Show.Show Network.AWS.SDB.PutAttributes.PutAttributesResponse
instance GHC.Read.Read Network.AWS.SDB.PutAttributes.PutAttributesResponse
instance GHC.Classes.Eq Network.AWS.SDB.PutAttributes.PutAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SDB.PutAttributes.PutAttributes
instance Control.DeepSeq.NFData Network.AWS.SDB.PutAttributes.PutAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.SDB.PutAttributes.PutAttributes
instance Control.DeepSeq.NFData Network.AWS.SDB.PutAttributes.PutAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SDB.PutAttributes.PutAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.SDB.PutAttributes.PutAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.SDB.PutAttributes.PutAttributes


-- | The <tt>ListDomains</tt> operation lists all domains associated with
--   the Access Key ID. It returns domain names up to the limit set by
--   <a>MaxNumberOfDomains</a>. A <a>NextToken</a> is returned if there are
--   more than <tt>MaxNumberOfDomains</tt> domains. Calling
--   <tt>ListDomains</tt> successive times with the <tt>NextToken</tt>
--   provided by the operation returns up to <tt>MaxNumberOfDomains</tt>
--   more domain names with each successive operation call.
--   
--   This operation returns paginated results.
module Network.AWS.SDB.ListDomains

-- | <i>See:</i> <a>newListDomains</a> smart constructor.
data ListDomains
ListDomains' :: Maybe Text -> Maybe Int -> ListDomains

-- | A string informing Amazon SimpleDB where to start the next list of
--   domain names.
[$sel:nextToken:ListDomains'] :: ListDomains -> Maybe Text

-- | The maximum number of domain names you want returned. The range is 1
--   to 100. The default setting is 100.
[$sel:maxNumberOfDomains:ListDomains'] :: ListDomains -> Maybe Int

-- | Create a value of <a>ListDomains</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDomains'</a>, <a>listDomains_nextToken</a> - A
--   string informing Amazon SimpleDB where to start the next list of
--   domain names.
--   
--   <a>$sel:maxNumberOfDomains:ListDomains'</a>,
--   <a>listDomains_maxNumberOfDomains</a> - The maximum number of domain
--   names you want returned. The range is 1 to 100. The default setting is
--   100.
newListDomains :: ListDomains

-- | A string informing Amazon SimpleDB where to start the next list of
--   domain names.
listDomains_nextToken :: Lens' ListDomains (Maybe Text)

-- | The maximum number of domain names you want returned. The range is 1
--   to 100. The default setting is 100.
listDomains_maxNumberOfDomains :: Lens' ListDomains (Maybe Int)

-- | <i>See:</i> <a>newListDomainsResponse</a> smart constructor.
data ListDomainsResponse
ListDomainsResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListDomainsResponse

-- | A list of domain names that match the expression.
[$sel:domainNames:ListDomainsResponse'] :: ListDomainsResponse -> Maybe [Text]

-- | An opaque token indicating that there are more domains than the
--   specified <tt>MaxNumberOfDomains</tt> still available.
[$sel:nextToken:ListDomainsResponse'] :: ListDomainsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListDomainsResponse'] :: ListDomainsResponse -> Int

-- | Create a value of <a>ListDomainsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainNames:ListDomainsResponse'</a>,
--   <a>listDomainsResponse_domainNames</a> - A list of domain names that
--   match the expression.
--   
--   <a>$sel:nextToken:ListDomains'</a>,
--   <a>listDomainsResponse_nextToken</a> - An opaque token indicating that
--   there are more domains than the specified <tt>MaxNumberOfDomains</tt>
--   still available.
--   
--   <a>$sel:httpStatus:ListDomainsResponse'</a>,
--   <a>listDomainsResponse_httpStatus</a> - The response's http status
--   code.
newListDomainsResponse :: Int -> ListDomainsResponse

-- | A list of domain names that match the expression.
listDomainsResponse_domainNames :: Lens' ListDomainsResponse (Maybe [Text])

-- | An opaque token indicating that there are more domains than the
--   specified <tt>MaxNumberOfDomains</tt> still available.
listDomainsResponse_nextToken :: Lens' ListDomainsResponse (Maybe Text)

-- | The response's http status code.
listDomainsResponse_httpStatus :: Lens' ListDomainsResponse Int
instance GHC.Generics.Generic Network.AWS.SDB.ListDomains.ListDomains
instance GHC.Show.Show Network.AWS.SDB.ListDomains.ListDomains
instance GHC.Read.Read Network.AWS.SDB.ListDomains.ListDomains
instance GHC.Classes.Eq Network.AWS.SDB.ListDomains.ListDomains
instance GHC.Generics.Generic Network.AWS.SDB.ListDomains.ListDomainsResponse
instance GHC.Show.Show Network.AWS.SDB.ListDomains.ListDomainsResponse
instance GHC.Read.Read Network.AWS.SDB.ListDomains.ListDomainsResponse
instance GHC.Classes.Eq Network.AWS.SDB.ListDomains.ListDomainsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SDB.ListDomains.ListDomains
instance Control.DeepSeq.NFData Network.AWS.SDB.ListDomains.ListDomainsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.SDB.ListDomains.ListDomains
instance Data.Hashable.Class.Hashable Network.AWS.SDB.ListDomains.ListDomains
instance Control.DeepSeq.NFData Network.AWS.SDB.ListDomains.ListDomains
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SDB.ListDomains.ListDomains
instance Network.AWS.Data.Path.ToPath Network.AWS.SDB.ListDomains.ListDomains
instance Network.AWS.Data.Query.ToQuery Network.AWS.SDB.ListDomains.ListDomains


-- | Returns all of the attributes associated with the specified item.
--   Optionally, the attributes returned can be limited to one or more
--   attributes by specifying an attribute name parameter.
--   
--   If the item does not exist on the replica that was accessed for this
--   operation, an empty set is returned. The system does not return an
--   error as it cannot guarantee the item does not exist on other
--   replicas.
module Network.AWS.SDB.GetAttributes

-- | <i>See:</i> <a>newGetAttributes</a> smart constructor.
data GetAttributes
GetAttributes' :: Maybe Bool -> Maybe [Text] -> Text -> Text -> GetAttributes

-- | Determines whether or not strong consistency should be enforced when
--   data is read from SimpleDB. If <tt>true</tt>, any data previously
--   written to SimpleDB will be returned. Otherwise, results will be
--   consistent eventually, and the client may not see data that was
--   written immediately before your read.
[$sel:consistentRead:GetAttributes'] :: GetAttributes -> Maybe Bool

-- | The names of the attributes.
[$sel:attributeNames:GetAttributes'] :: GetAttributes -> Maybe [Text]

-- | The name of the domain in which to perform the operation.
[$sel:domainName:GetAttributes'] :: GetAttributes -> Text

-- | The name of the item.
[$sel:itemName:GetAttributes'] :: GetAttributes -> Text

-- | Create a value of <a>GetAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:consistentRead:GetAttributes'</a>,
--   <a>getAttributes_consistentRead</a> - Determines whether or not strong
--   consistency should be enforced when data is read from SimpleDB. If
--   <tt>true</tt>, any data previously written to SimpleDB will be
--   returned. Otherwise, results will be consistent eventually, and the
--   client may not see data that was written immediately before your read.
--   
--   <a>$sel:attributeNames:GetAttributes'</a>,
--   <a>getAttributes_attributeNames</a> - The names of the attributes.
--   
--   <a>$sel:domainName:GetAttributes'</a>, <a>getAttributes_domainName</a>
--   - The name of the domain in which to perform the operation.
--   
--   <a>$sel:itemName:GetAttributes'</a>, <a>getAttributes_itemName</a> -
--   The name of the item.
newGetAttributes :: Text -> Text -> GetAttributes

-- | Determines whether or not strong consistency should be enforced when
--   data is read from SimpleDB. If <tt>true</tt>, any data previously
--   written to SimpleDB will be returned. Otherwise, results will be
--   consistent eventually, and the client may not see data that was
--   written immediately before your read.
getAttributes_consistentRead :: Lens' GetAttributes (Maybe Bool)

-- | The names of the attributes.
getAttributes_attributeNames :: Lens' GetAttributes (Maybe [Text])

-- | The name of the domain in which to perform the operation.
getAttributes_domainName :: Lens' GetAttributes Text

-- | The name of the item.
getAttributes_itemName :: Lens' GetAttributes Text

-- | <i>See:</i> <a>newGetAttributesResponse</a> smart constructor.
data GetAttributesResponse
GetAttributesResponse' :: Maybe [Attribute] -> Int -> GetAttributesResponse

-- | The list of attributes returned by the operation.
[$sel:attributes:GetAttributesResponse'] :: GetAttributesResponse -> Maybe [Attribute]

-- | The response's http status code.
[$sel:httpStatus:GetAttributesResponse'] :: GetAttributesResponse -> Int

-- | Create a value of <a>GetAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:GetAttributesResponse'</a>,
--   <a>getAttributesResponse_attributes</a> - The list of attributes
--   returned by the operation.
--   
--   <a>$sel:httpStatus:GetAttributesResponse'</a>,
--   <a>getAttributesResponse_httpStatus</a> - The response's http status
--   code.
newGetAttributesResponse :: Int -> GetAttributesResponse

-- | The list of attributes returned by the operation.
getAttributesResponse_attributes :: Lens' GetAttributesResponse (Maybe [Attribute])

-- | The response's http status code.
getAttributesResponse_httpStatus :: Lens' GetAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.SDB.GetAttributes.GetAttributes
instance GHC.Show.Show Network.AWS.SDB.GetAttributes.GetAttributes
instance GHC.Read.Read Network.AWS.SDB.GetAttributes.GetAttributes
instance GHC.Classes.Eq Network.AWS.SDB.GetAttributes.GetAttributes
instance GHC.Generics.Generic Network.AWS.SDB.GetAttributes.GetAttributesResponse
instance GHC.Show.Show Network.AWS.SDB.GetAttributes.GetAttributesResponse
instance GHC.Read.Read Network.AWS.SDB.GetAttributes.GetAttributesResponse
instance GHC.Classes.Eq Network.AWS.SDB.GetAttributes.GetAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SDB.GetAttributes.GetAttributes
instance Control.DeepSeq.NFData Network.AWS.SDB.GetAttributes.GetAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.SDB.GetAttributes.GetAttributes
instance Control.DeepSeq.NFData Network.AWS.SDB.GetAttributes.GetAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SDB.GetAttributes.GetAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.SDB.GetAttributes.GetAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.SDB.GetAttributes.GetAttributes


-- | Returns information about the domain, including when the domain was
--   created, the number of items and attributes in the domain, and the
--   size of the attribute names and values.
module Network.AWS.SDB.DomainMetadata

-- | <i>See:</i> <a>newDomainMetadata</a> smart constructor.
data DomainMetadata
DomainMetadata' :: Text -> DomainMetadata

-- | The name of the domain for which to display the metadata of.
[$sel:domainName:DomainMetadata'] :: DomainMetadata -> Text

-- | Create a value of <a>DomainMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:DomainMetadata'</a>,
--   <a>domainMetadata_domainName</a> - The name of the domain for which to
--   display the metadata of.
newDomainMetadata :: Text -> DomainMetadata

-- | The name of the domain for which to display the metadata of.
domainMetadata_domainName :: Lens' DomainMetadata Text

-- | <i>See:</i> <a>newDomainMetadataResponse</a> smart constructor.
data DomainMetadataResponse
DomainMetadataResponse' :: Maybe Integer -> Maybe Int -> Maybe Int -> Maybe Integer -> Maybe Int -> Maybe Int -> Maybe Integer -> Int -> DomainMetadataResponse

-- | The total size of all unique attribute names in the domain, in bytes.
[$sel:attributeNamesSizeBytes:DomainMetadataResponse'] :: DomainMetadataResponse -> Maybe Integer

-- | The number of all attribute name/value pairs in the domain.
[$sel:attributeValueCount:DomainMetadataResponse'] :: DomainMetadataResponse -> Maybe Int

-- | The number of unique attribute names in the domain.
[$sel:attributeNameCount:DomainMetadataResponse'] :: DomainMetadataResponse -> Maybe Int

-- | The total size of all attribute values in the domain, in bytes.
[$sel:attributeValuesSizeBytes:DomainMetadataResponse'] :: DomainMetadataResponse -> Maybe Integer

-- | The data and time when metadata was calculated, in Epoch (UNIX)
--   seconds.
[$sel:timestamp:DomainMetadataResponse'] :: DomainMetadataResponse -> Maybe Int

-- | The number of all items in the domain.
[$sel:itemCount:DomainMetadataResponse'] :: DomainMetadataResponse -> Maybe Int

-- | The total size of all item names in the domain, in bytes.
[$sel:itemNamesSizeBytes:DomainMetadataResponse'] :: DomainMetadataResponse -> Maybe Integer

-- | The response's http status code.
[$sel:httpStatus:DomainMetadataResponse'] :: DomainMetadataResponse -> Int

-- | Create a value of <a>DomainMetadataResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeNamesSizeBytes:DomainMetadataResponse'</a>,
--   <a>domainMetadataResponse_attributeNamesSizeBytes</a> - The total size
--   of all unique attribute names in the domain, in bytes.
--   
--   <a>$sel:attributeValueCount:DomainMetadataResponse'</a>,
--   <a>domainMetadataResponse_attributeValueCount</a> - The number of all
--   attribute name/value pairs in the domain.
--   
--   <a>$sel:attributeNameCount:DomainMetadataResponse'</a>,
--   <a>domainMetadataResponse_attributeNameCount</a> - The number of
--   unique attribute names in the domain.
--   
--   <a>$sel:attributeValuesSizeBytes:DomainMetadataResponse'</a>,
--   <a>domainMetadataResponse_attributeValuesSizeBytes</a> - The total
--   size of all attribute values in the domain, in bytes.
--   
--   <a>$sel:timestamp:DomainMetadataResponse'</a>,
--   <a>domainMetadataResponse_timestamp</a> - The data and time when
--   metadata was calculated, in Epoch (UNIX) seconds.
--   
--   <a>$sel:itemCount:DomainMetadataResponse'</a>,
--   <a>domainMetadataResponse_itemCount</a> - The number of all items in
--   the domain.
--   
--   <a>$sel:itemNamesSizeBytes:DomainMetadataResponse'</a>,
--   <a>domainMetadataResponse_itemNamesSizeBytes</a> - The total size of
--   all item names in the domain, in bytes.
--   
--   <a>$sel:httpStatus:DomainMetadataResponse'</a>,
--   <a>domainMetadataResponse_httpStatus</a> - The response's http status
--   code.
newDomainMetadataResponse :: Int -> DomainMetadataResponse

-- | The total size of all unique attribute names in the domain, in bytes.
domainMetadataResponse_attributeNamesSizeBytes :: Lens' DomainMetadataResponse (Maybe Integer)

-- | The number of all attribute name/value pairs in the domain.
domainMetadataResponse_attributeValueCount :: Lens' DomainMetadataResponse (Maybe Int)

-- | The number of unique attribute names in the domain.
domainMetadataResponse_attributeNameCount :: Lens' DomainMetadataResponse (Maybe Int)

-- | The total size of all attribute values in the domain, in bytes.
domainMetadataResponse_attributeValuesSizeBytes :: Lens' DomainMetadataResponse (Maybe Integer)

-- | The data and time when metadata was calculated, in Epoch (UNIX)
--   seconds.
domainMetadataResponse_timestamp :: Lens' DomainMetadataResponse (Maybe Int)

-- | The number of all items in the domain.
domainMetadataResponse_itemCount :: Lens' DomainMetadataResponse (Maybe Int)

-- | The total size of all item names in the domain, in bytes.
domainMetadataResponse_itemNamesSizeBytes :: Lens' DomainMetadataResponse (Maybe Integer)

-- | The response's http status code.
domainMetadataResponse_httpStatus :: Lens' DomainMetadataResponse Int
instance GHC.Generics.Generic Network.AWS.SDB.DomainMetadata.DomainMetadata
instance GHC.Show.Show Network.AWS.SDB.DomainMetadata.DomainMetadata
instance GHC.Read.Read Network.AWS.SDB.DomainMetadata.DomainMetadata
instance GHC.Classes.Eq Network.AWS.SDB.DomainMetadata.DomainMetadata
instance GHC.Generics.Generic Network.AWS.SDB.DomainMetadata.DomainMetadataResponse
instance GHC.Show.Show Network.AWS.SDB.DomainMetadata.DomainMetadataResponse
instance GHC.Read.Read Network.AWS.SDB.DomainMetadata.DomainMetadataResponse
instance GHC.Classes.Eq Network.AWS.SDB.DomainMetadata.DomainMetadataResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SDB.DomainMetadata.DomainMetadata
instance Control.DeepSeq.NFData Network.AWS.SDB.DomainMetadata.DomainMetadataResponse
instance Data.Hashable.Class.Hashable Network.AWS.SDB.DomainMetadata.DomainMetadata
instance Control.DeepSeq.NFData Network.AWS.SDB.DomainMetadata.DomainMetadata
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SDB.DomainMetadata.DomainMetadata
instance Network.AWS.Data.Path.ToPath Network.AWS.SDB.DomainMetadata.DomainMetadata
instance Network.AWS.Data.Query.ToQuery Network.AWS.SDB.DomainMetadata.DomainMetadata


-- | The <tt>DeleteDomain</tt> operation deletes a domain. Any items (and
--   their attributes) in the domain are deleted as well. The
--   <tt>DeleteDomain</tt> operation might take 10 or more seconds to
--   complete.
module Network.AWS.SDB.DeleteDomain

-- | <i>See:</i> <a>newDeleteDomain</a> smart constructor.
data DeleteDomain
DeleteDomain' :: Text -> DeleteDomain

-- | The name of the domain to delete.
[$sel:domainName:DeleteDomain'] :: DeleteDomain -> Text

-- | Create a value of <a>DeleteDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:DeleteDomain'</a>, <a>deleteDomain_domainName</a> -
--   The name of the domain to delete.
newDeleteDomain :: Text -> DeleteDomain

-- | The name of the domain to delete.
deleteDomain_domainName :: Lens' DeleteDomain Text

-- | <i>See:</i> <a>newDeleteDomainResponse</a> smart constructor.
data DeleteDomainResponse
DeleteDomainResponse' :: DeleteDomainResponse

-- | Create a value of <a>DeleteDomainResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDomainResponse :: DeleteDomainResponse
instance GHC.Generics.Generic Network.AWS.SDB.DeleteDomain.DeleteDomain
instance GHC.Show.Show Network.AWS.SDB.DeleteDomain.DeleteDomain
instance GHC.Read.Read Network.AWS.SDB.DeleteDomain.DeleteDomain
instance GHC.Classes.Eq Network.AWS.SDB.DeleteDomain.DeleteDomain
instance GHC.Generics.Generic Network.AWS.SDB.DeleteDomain.DeleteDomainResponse
instance GHC.Show.Show Network.AWS.SDB.DeleteDomain.DeleteDomainResponse
instance GHC.Read.Read Network.AWS.SDB.DeleteDomain.DeleteDomainResponse
instance GHC.Classes.Eq Network.AWS.SDB.DeleteDomain.DeleteDomainResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SDB.DeleteDomain.DeleteDomain
instance Control.DeepSeq.NFData Network.AWS.SDB.DeleteDomain.DeleteDomainResponse
instance Data.Hashable.Class.Hashable Network.AWS.SDB.DeleteDomain.DeleteDomain
instance Control.DeepSeq.NFData Network.AWS.SDB.DeleteDomain.DeleteDomain
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SDB.DeleteDomain.DeleteDomain
instance Network.AWS.Data.Path.ToPath Network.AWS.SDB.DeleteDomain.DeleteDomain
instance Network.AWS.Data.Query.ToQuery Network.AWS.SDB.DeleteDomain.DeleteDomain


-- | Deletes one or more attributes associated with an item. If all
--   attributes of the item are deleted, the item is deleted.
--   
--   <tt>DeleteAttributes</tt> is an idempotent operation; running it
--   multiple times on the same item or attribute does not result in an
--   error response.
--   
--   Because Amazon SimpleDB makes multiple copies of item data and uses an
--   eventual consistency update model, performing a GetAttributes or
--   Select operation (read) immediately after a <tt>DeleteAttributes</tt>
--   or PutAttributes operation (write) might not return updated item data.
module Network.AWS.SDB.DeleteAttributes

-- | <i>See:</i> <a>newDeleteAttributes</a> smart constructor.
data DeleteAttributes
DeleteAttributes' :: Maybe UpdateCondition -> Maybe [Attribute] -> Text -> Text -> DeleteAttributes

-- | The update condition which, if specified, determines whether the
--   specified attributes will be deleted or not. The update condition must
--   be satisfied in order for this request to be processed and the
--   attributes to be deleted.
[$sel:expected:DeleteAttributes'] :: DeleteAttributes -> Maybe UpdateCondition

-- | A list of Attributes. Similar to columns on a spreadsheet, attributes
--   represent categories of data that can be assigned to items.
[$sel:attributes:DeleteAttributes'] :: DeleteAttributes -> Maybe [Attribute]

-- | The name of the domain in which to perform the operation.
[$sel:domainName:DeleteAttributes'] :: DeleteAttributes -> Text

-- | The name of the item. Similar to rows on a spreadsheet, items
--   represent individual objects that contain one or more value-attribute
--   pairs.
[$sel:itemName:DeleteAttributes'] :: DeleteAttributes -> Text

-- | Create a value of <a>DeleteAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expected:DeleteAttributes'</a>,
--   <a>deleteAttributes_expected</a> - The update condition which, if
--   specified, determines whether the specified attributes will be deleted
--   or not. The update condition must be satisfied in order for this
--   request to be processed and the attributes to be deleted.
--   
--   <a>$sel:attributes:DeleteAttributes'</a>,
--   <a>deleteAttributes_attributes</a> - A list of Attributes. Similar to
--   columns on a spreadsheet, attributes represent categories of data that
--   can be assigned to items.
--   
--   <a>$sel:domainName:DeleteAttributes'</a>,
--   <a>deleteAttributes_domainName</a> - The name of the domain in which
--   to perform the operation.
--   
--   <a>$sel:itemName:DeleteAttributes'</a>,
--   <a>deleteAttributes_itemName</a> - The name of the item. Similar to
--   rows on a spreadsheet, items represent individual objects that contain
--   one or more value-attribute pairs.
newDeleteAttributes :: Text -> Text -> DeleteAttributes

-- | The update condition which, if specified, determines whether the
--   specified attributes will be deleted or not. The update condition must
--   be satisfied in order for this request to be processed and the
--   attributes to be deleted.
deleteAttributes_expected :: Lens' DeleteAttributes (Maybe UpdateCondition)

-- | A list of Attributes. Similar to columns on a spreadsheet, attributes
--   represent categories of data that can be assigned to items.
deleteAttributes_attributes :: Lens' DeleteAttributes (Maybe [Attribute])

-- | The name of the domain in which to perform the operation.
deleteAttributes_domainName :: Lens' DeleteAttributes Text

-- | The name of the item. Similar to rows on a spreadsheet, items
--   represent individual objects that contain one or more value-attribute
--   pairs.
deleteAttributes_itemName :: Lens' DeleteAttributes Text

-- | <i>See:</i> <a>newDeleteAttributesResponse</a> smart constructor.
data DeleteAttributesResponse
DeleteAttributesResponse' :: DeleteAttributesResponse

-- | Create a value of <a>DeleteAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAttributesResponse :: DeleteAttributesResponse
instance GHC.Generics.Generic Network.AWS.SDB.DeleteAttributes.DeleteAttributes
instance GHC.Show.Show Network.AWS.SDB.DeleteAttributes.DeleteAttributes
instance GHC.Read.Read Network.AWS.SDB.DeleteAttributes.DeleteAttributes
instance GHC.Classes.Eq Network.AWS.SDB.DeleteAttributes.DeleteAttributes
instance GHC.Generics.Generic Network.AWS.SDB.DeleteAttributes.DeleteAttributesResponse
instance GHC.Show.Show Network.AWS.SDB.DeleteAttributes.DeleteAttributesResponse
instance GHC.Read.Read Network.AWS.SDB.DeleteAttributes.DeleteAttributesResponse
instance GHC.Classes.Eq Network.AWS.SDB.DeleteAttributes.DeleteAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SDB.DeleteAttributes.DeleteAttributes
instance Control.DeepSeq.NFData Network.AWS.SDB.DeleteAttributes.DeleteAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.SDB.DeleteAttributes.DeleteAttributes
instance Control.DeepSeq.NFData Network.AWS.SDB.DeleteAttributes.DeleteAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SDB.DeleteAttributes.DeleteAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.SDB.DeleteAttributes.DeleteAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.SDB.DeleteAttributes.DeleteAttributes


-- | The <tt>CreateDomain</tt> operation creates a new domain. The domain
--   name should be unique among the domains associated with the Access Key
--   ID provided in the request. The <tt>CreateDomain</tt> operation may
--   take 10 or more seconds to complete.
--   
--   The client can create up to 100 domains per account.
--   
--   If the client requires additional domains, go to
--   <a>http://aws.amazon.com/contact-us/simpledb-limit-request/</a>.
module Network.AWS.SDB.CreateDomain

-- | <i>See:</i> <a>newCreateDomain</a> smart constructor.
data CreateDomain
CreateDomain' :: Text -> CreateDomain

-- | The name of the domain to create. The name can range between 3 and 255
--   characters and can contain the following characters: a-z, A-Z, 0-9,
--   '_', '-', and '.'.
[$sel:domainName:CreateDomain'] :: CreateDomain -> Text

-- | Create a value of <a>CreateDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:CreateDomain'</a>, <a>createDomain_domainName</a> -
--   The name of the domain to create. The name can range between 3 and 255
--   characters and can contain the following characters: a-z, A-Z, 0-9,
--   '_', '-', and '.'.
newCreateDomain :: Text -> CreateDomain

-- | The name of the domain to create. The name can range between 3 and 255
--   characters and can contain the following characters: a-z, A-Z, 0-9,
--   '_', '-', and '.'.
createDomain_domainName :: Lens' CreateDomain Text

-- | <i>See:</i> <a>newCreateDomainResponse</a> smart constructor.
data CreateDomainResponse
CreateDomainResponse' :: CreateDomainResponse

-- | Create a value of <a>CreateDomainResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCreateDomainResponse :: CreateDomainResponse
instance GHC.Generics.Generic Network.AWS.SDB.CreateDomain.CreateDomain
instance GHC.Show.Show Network.AWS.SDB.CreateDomain.CreateDomain
instance GHC.Read.Read Network.AWS.SDB.CreateDomain.CreateDomain
instance GHC.Classes.Eq Network.AWS.SDB.CreateDomain.CreateDomain
instance GHC.Generics.Generic Network.AWS.SDB.CreateDomain.CreateDomainResponse
instance GHC.Show.Show Network.AWS.SDB.CreateDomain.CreateDomainResponse
instance GHC.Read.Read Network.AWS.SDB.CreateDomain.CreateDomainResponse
instance GHC.Classes.Eq Network.AWS.SDB.CreateDomain.CreateDomainResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SDB.CreateDomain.CreateDomain
instance Control.DeepSeq.NFData Network.AWS.SDB.CreateDomain.CreateDomainResponse
instance Data.Hashable.Class.Hashable Network.AWS.SDB.CreateDomain.CreateDomain
instance Control.DeepSeq.NFData Network.AWS.SDB.CreateDomain.CreateDomain
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SDB.CreateDomain.CreateDomain
instance Network.AWS.Data.Path.ToPath Network.AWS.SDB.CreateDomain.CreateDomain
instance Network.AWS.Data.Query.ToQuery Network.AWS.SDB.CreateDomain.CreateDomain


-- | The <tt>BatchPutAttributes</tt> operation creates or replaces
--   attributes within one or more items. By using this operation, the
--   client can perform multiple PutAttribute operation with a single call.
--   This helps yield savings in round trips and latencies, enabling Amazon
--   SimpleDB to optimize requests and generally produce better throughput.
--   
--   The client may specify the item name with the <tt>Item.X.ItemName</tt>
--   parameter. The client may specify new attributes using a combination
--   of the <tt>Item.X.Attribute.Y.Name</tt> and
--   <tt>Item.X.Attribute.Y.Value</tt> parameters. The client may specify
--   the first attribute for the first item using the parameters
--   <tt>Item.0.Attribute.0.Name</tt> and
--   <tt>Item.0.Attribute.0.Value</tt>, and for the second attribute for
--   the first item by the parameters <tt>Item.0.Attribute.1.Name</tt> and
--   <tt>Item.0.Attribute.1.Value</tt>, and so on.
--   
--   Attributes are uniquely identified within an item by their name/value
--   combination. For example, a single item can have the attributes <tt>{
--   "first_name", "first_value" }</tt> and <tt>{ "first_name",
--   "second_value" }</tt>. However, it cannot have two attribute instances
--   where both the <tt>Item.X.Attribute.Y.Name</tt> and
--   <tt>Item.X.Attribute.Y.Value</tt> are the same.
--   
--   Optionally, the requester can supply the <tt>Replace</tt> parameter
--   for each individual value. Setting this value to <tt>true</tt> will
--   cause the new attribute values to replace the existing attribute
--   values. For example, if an item <tt>I</tt> has the attributes <tt>{
--   'a', '1' }, { 'b', '2'}</tt> and <tt>{ 'b', '3' }</tt> and the
--   requester does a BatchPutAttributes of <tt>{'I', 'b', '4' }</tt> with
--   the Replace parameter set to true, the final attributes of the item
--   will be <tt>{ 'a', '1' }</tt> and <tt>{ 'b', '4' }</tt>, replacing the
--   previous values of the 'b' attribute with the new value.
--   
--   This operation is vulnerable to exceeding the maximum URL size when
--   making a REST request using the HTTP GET method. This operation does
--   not support conditions using <tt>Expected.X.Name</tt>,
--   <tt>Expected.X.Value</tt>, or <tt>Expected.X.Exists</tt>.
--   
--   You can execute multiple <tt>BatchPutAttributes</tt> operations and
--   other operations in parallel. However, large numbers of concurrent
--   <tt>BatchPutAttributes</tt> calls can result in Service Unavailable
--   (503) responses.
--   
--   The following limitations are enforced for this operation:
--   
--   <ul>
--   <li>256 attribute name-value pairs per item</li>
--   <li>1 MB request size</li>
--   <li>1 billion attributes per domain</li>
--   <li>10 GB of total user data storage per domain</li>
--   <li>25 item limit per <tt>BatchPutAttributes</tt> operation</li>
--   </ul>
module Network.AWS.SDB.BatchPutAttributes

-- | <i>See:</i> <a>newBatchPutAttributes</a> smart constructor.
data BatchPutAttributes
BatchPutAttributes' :: Text -> [ReplaceableItem] -> BatchPutAttributes

-- | The name of the domain in which the attributes are being stored.
[$sel:domainName:BatchPutAttributes'] :: BatchPutAttributes -> Text

-- | A list of items on which to perform the operation.
[$sel:items:BatchPutAttributes'] :: BatchPutAttributes -> [ReplaceableItem]

-- | Create a value of <a>BatchPutAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:BatchPutAttributes'</a>,
--   <a>batchPutAttributes_domainName</a> - The name of the domain in which
--   the attributes are being stored.
--   
--   <a>$sel:items:BatchPutAttributes'</a>, <a>batchPutAttributes_items</a>
--   - A list of items on which to perform the operation.
newBatchPutAttributes :: Text -> BatchPutAttributes

-- | The name of the domain in which the attributes are being stored.
batchPutAttributes_domainName :: Lens' BatchPutAttributes Text

-- | A list of items on which to perform the operation.
batchPutAttributes_items :: Lens' BatchPutAttributes [ReplaceableItem]

-- | <i>See:</i> <a>newBatchPutAttributesResponse</a> smart constructor.
data BatchPutAttributesResponse
BatchPutAttributesResponse' :: BatchPutAttributesResponse

-- | Create a value of <a>BatchPutAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchPutAttributesResponse :: BatchPutAttributesResponse
instance GHC.Generics.Generic Network.AWS.SDB.BatchPutAttributes.BatchPutAttributes
instance GHC.Show.Show Network.AWS.SDB.BatchPutAttributes.BatchPutAttributes
instance GHC.Read.Read Network.AWS.SDB.BatchPutAttributes.BatchPutAttributes
instance GHC.Classes.Eq Network.AWS.SDB.BatchPutAttributes.BatchPutAttributes
instance GHC.Generics.Generic Network.AWS.SDB.BatchPutAttributes.BatchPutAttributesResponse
instance GHC.Show.Show Network.AWS.SDB.BatchPutAttributes.BatchPutAttributesResponse
instance GHC.Read.Read Network.AWS.SDB.BatchPutAttributes.BatchPutAttributesResponse
instance GHC.Classes.Eq Network.AWS.SDB.BatchPutAttributes.BatchPutAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SDB.BatchPutAttributes.BatchPutAttributes
instance Control.DeepSeq.NFData Network.AWS.SDB.BatchPutAttributes.BatchPutAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.SDB.BatchPutAttributes.BatchPutAttributes
instance Control.DeepSeq.NFData Network.AWS.SDB.BatchPutAttributes.BatchPutAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SDB.BatchPutAttributes.BatchPutAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.SDB.BatchPutAttributes.BatchPutAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.SDB.BatchPutAttributes.BatchPutAttributes


-- | Performs multiple DeleteAttributes operations in a single call, which
--   reduces round trips and latencies. This enables Amazon SimpleDB to
--   optimize requests, which generally yields better throughput.
--   
--   The following limitations are enforced for this operation:
--   
--   <ul>
--   <li>1 MB request size</li>
--   <li>25 item limit per BatchDeleteAttributes operation</li>
--   </ul>
module Network.AWS.SDB.BatchDeleteAttributes

-- | <i>See:</i> <a>newBatchDeleteAttributes</a> smart constructor.
data BatchDeleteAttributes
BatchDeleteAttributes' :: Text -> [DeletableItem] -> BatchDeleteAttributes

-- | The name of the domain in which the attributes are being deleted.
[$sel:domainName:BatchDeleteAttributes'] :: BatchDeleteAttributes -> Text

-- | A list of items on which to perform the operation.
[$sel:items:BatchDeleteAttributes'] :: BatchDeleteAttributes -> [DeletableItem]

-- | Create a value of <a>BatchDeleteAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:BatchDeleteAttributes'</a>,
--   <a>batchDeleteAttributes_domainName</a> - The name of the domain in
--   which the attributes are being deleted.
--   
--   <a>$sel:items:BatchDeleteAttributes'</a>,
--   <a>batchDeleteAttributes_items</a> - A list of items on which to
--   perform the operation.
newBatchDeleteAttributes :: Text -> BatchDeleteAttributes

-- | The name of the domain in which the attributes are being deleted.
batchDeleteAttributes_domainName :: Lens' BatchDeleteAttributes Text

-- | A list of items on which to perform the operation.
batchDeleteAttributes_items :: Lens' BatchDeleteAttributes [DeletableItem]

-- | <i>See:</i> <a>newBatchDeleteAttributesResponse</a> smart constructor.
data BatchDeleteAttributesResponse
BatchDeleteAttributesResponse' :: BatchDeleteAttributesResponse

-- | Create a value of <a>BatchDeleteAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchDeleteAttributesResponse :: BatchDeleteAttributesResponse
instance GHC.Generics.Generic Network.AWS.SDB.BatchDeleteAttributes.BatchDeleteAttributes
instance GHC.Show.Show Network.AWS.SDB.BatchDeleteAttributes.BatchDeleteAttributes
instance GHC.Read.Read Network.AWS.SDB.BatchDeleteAttributes.BatchDeleteAttributes
instance GHC.Classes.Eq Network.AWS.SDB.BatchDeleteAttributes.BatchDeleteAttributes
instance GHC.Generics.Generic Network.AWS.SDB.BatchDeleteAttributes.BatchDeleteAttributesResponse
instance GHC.Show.Show Network.AWS.SDB.BatchDeleteAttributes.BatchDeleteAttributesResponse
instance GHC.Read.Read Network.AWS.SDB.BatchDeleteAttributes.BatchDeleteAttributesResponse
instance GHC.Classes.Eq Network.AWS.SDB.BatchDeleteAttributes.BatchDeleteAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SDB.BatchDeleteAttributes.BatchDeleteAttributes
instance Control.DeepSeq.NFData Network.AWS.SDB.BatchDeleteAttributes.BatchDeleteAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.SDB.BatchDeleteAttributes.BatchDeleteAttributes
instance Control.DeepSeq.NFData Network.AWS.SDB.BatchDeleteAttributes.BatchDeleteAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SDB.BatchDeleteAttributes.BatchDeleteAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.SDB.BatchDeleteAttributes.BatchDeleteAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.SDB.BatchDeleteAttributes.BatchDeleteAttributes


module Network.AWS.SDB.Lens

-- | A string informing Amazon SimpleDB where to start the next list of
--   domain names.
listDomains_nextToken :: Lens' ListDomains (Maybe Text)

-- | The maximum number of domain names you want returned. The range is 1
--   to 100. The default setting is 100.
listDomains_maxNumberOfDomains :: Lens' ListDomains (Maybe Int)

-- | A list of domain names that match the expression.
listDomainsResponse_domainNames :: Lens' ListDomainsResponse (Maybe [Text])

-- | An opaque token indicating that there are more domains than the
--   specified <tt>MaxNumberOfDomains</tt> still available.
listDomainsResponse_nextToken :: Lens' ListDomainsResponse (Maybe Text)

-- | The response's http status code.
listDomainsResponse_httpStatus :: Lens' ListDomainsResponse Int

-- | The update condition which, if specified, determines whether the
--   specified attributes will be deleted or not. The update condition must
--   be satisfied in order for this request to be processed and the
--   attributes to be deleted.
deleteAttributes_expected :: Lens' DeleteAttributes (Maybe UpdateCondition)

-- | A list of Attributes. Similar to columns on a spreadsheet, attributes
--   represent categories of data that can be assigned to items.
deleteAttributes_attributes :: Lens' DeleteAttributes (Maybe [Attribute])

-- | The name of the domain in which to perform the operation.
deleteAttributes_domainName :: Lens' DeleteAttributes Text

-- | The name of the item. Similar to rows on a spreadsheet, items
--   represent individual objects that contain one or more value-attribute
--   pairs.
deleteAttributes_itemName :: Lens' DeleteAttributes Text

-- | The name of the domain for which to display the metadata of.
domainMetadata_domainName :: Lens' DomainMetadata Text

-- | The total size of all unique attribute names in the domain, in bytes.
domainMetadataResponse_attributeNamesSizeBytes :: Lens' DomainMetadataResponse (Maybe Integer)

-- | The number of all attribute name/value pairs in the domain.
domainMetadataResponse_attributeValueCount :: Lens' DomainMetadataResponse (Maybe Int)

-- | The number of unique attribute names in the domain.
domainMetadataResponse_attributeNameCount :: Lens' DomainMetadataResponse (Maybe Int)

-- | The total size of all attribute values in the domain, in bytes.
domainMetadataResponse_attributeValuesSizeBytes :: Lens' DomainMetadataResponse (Maybe Integer)

-- | The data and time when metadata was calculated, in Epoch (UNIX)
--   seconds.
domainMetadataResponse_timestamp :: Lens' DomainMetadataResponse (Maybe Int)

-- | The number of all items in the domain.
domainMetadataResponse_itemCount :: Lens' DomainMetadataResponse (Maybe Int)

-- | The total size of all item names in the domain, in bytes.
domainMetadataResponse_itemNamesSizeBytes :: Lens' DomainMetadataResponse (Maybe Integer)

-- | The response's http status code.
domainMetadataResponse_httpStatus :: Lens' DomainMetadataResponse Int

-- | The name of the domain in which the attributes are being stored.
batchPutAttributes_domainName :: Lens' BatchPutAttributes Text

-- | A list of items on which to perform the operation.
batchPutAttributes_items :: Lens' BatchPutAttributes [ReplaceableItem]

-- | The name of the domain to create. The name can range between 3 and 255
--   characters and can contain the following characters: a-z, A-Z, 0-9,
--   '_', '-', and '.'.
createDomain_domainName :: Lens' CreateDomain Text

-- | The name of the domain to delete.
deleteDomain_domainName :: Lens' DeleteDomain Text

-- | Determines whether or not strong consistency should be enforced when
--   data is read from SimpleDB. If <tt>true</tt>, any data previously
--   written to SimpleDB will be returned. Otherwise, results will be
--   consistent eventually, and the client may not see data that was
--   written immediately before your read.
getAttributes_consistentRead :: Lens' GetAttributes (Maybe Bool)

-- | The names of the attributes.
getAttributes_attributeNames :: Lens' GetAttributes (Maybe [Text])

-- | The name of the domain in which to perform the operation.
getAttributes_domainName :: Lens' GetAttributes Text

-- | The name of the item.
getAttributes_itemName :: Lens' GetAttributes Text

-- | The list of attributes returned by the operation.
getAttributesResponse_attributes :: Lens' GetAttributesResponse (Maybe [Attribute])

-- | The response's http status code.
getAttributesResponse_httpStatus :: Lens' GetAttributesResponse Int

-- | The update condition which, if specified, determines whether the
--   specified attributes will be updated or not. The update condition must
--   be satisfied in order for this request to be processed and the
--   attributes to be updated.
putAttributes_expected :: Lens' PutAttributes (Maybe UpdateCondition)

-- | The name of the domain in which to perform the operation.
putAttributes_domainName :: Lens' PutAttributes Text

-- | The name of the item.
putAttributes_itemName :: Lens' PutAttributes Text

-- | The list of attributes.
putAttributes_attributes :: Lens' PutAttributes [ReplaceableAttribute]

-- | A string informing Amazon SimpleDB where to start the next list of
--   <tt>ItemNames</tt>.
select_nextToken :: Lens' Select (Maybe Text)

-- | Determines whether or not strong consistency should be enforced when
--   data is read from SimpleDB. If <tt>true</tt>, any data previously
--   written to SimpleDB will be returned. Otherwise, results will be
--   consistent eventually, and the client may not see data that was
--   written immediately before your read.
select_consistentRead :: Lens' Select (Maybe Bool)

-- | The expression used to query the domain.
select_selectExpression :: Lens' Select Text

-- | An opaque token indicating that more items than
--   <tt>MaxNumberOfItems</tt> were matched, the response size exceeded 1
--   megabyte, or the execution time exceeded 5 seconds.
selectResponse_nextToken :: Lens' SelectResponse (Maybe Text)

-- | A list of items that match the select expression.
selectResponse_items :: Lens' SelectResponse (Maybe [Item])

-- | The response's http status code.
selectResponse_httpStatus :: Lens' SelectResponse Int

-- | The name of the domain in which the attributes are being deleted.
batchDeleteAttributes_domainName :: Lens' BatchDeleteAttributes Text

-- | A list of items on which to perform the operation.
batchDeleteAttributes_items :: Lens' BatchDeleteAttributes [DeletableItem]

attribute_alternateNameEncoding :: Lens' Attribute (Maybe Text)

attribute_alternateValueEncoding :: Lens' Attribute (Maybe Text)

-- | The name of the attribute.
attribute_name :: Lens' Attribute Text

-- | The value of the attribute.
attribute_value :: Lens' Attribute Text

-- | Undocumented member.
deletableItem_attributes :: Lens' DeletableItem (Maybe [Attribute])

-- | Undocumented member.
deletableItem_name :: Lens' DeletableItem Text

item_alternateNameEncoding :: Lens' Item (Maybe Text)

-- | The name of the item.
item_name :: Lens' Item Text

-- | A list of attributes.
item_attributes :: Lens' Item [Attribute]

-- | A flag specifying whether or not to replace the attribute/value pair
--   or to add a new attribute/value pair. The default setting is
--   <tt>false</tt>.
replaceableAttribute_replace :: Lens' ReplaceableAttribute (Maybe Bool)

-- | The name of the replaceable attribute.
replaceableAttribute_name :: Lens' ReplaceableAttribute Text

-- | The value of the replaceable attribute.
replaceableAttribute_value :: Lens' ReplaceableAttribute Text

-- | The name of the replaceable item.
replaceableItem_name :: Lens' ReplaceableItem Text

-- | The list of attributes for a replaceable item.
replaceableItem_attributes :: Lens' ReplaceableItem [ReplaceableAttribute]

-- | A value specifying whether or not the specified attribute must exist
--   with the specified value in order for the update condition to be
--   satisfied. Specify <tt>true</tt> if the attribute must exist for the
--   update condition to be satisfied. Specify <tt>false</tt> if the
--   attribute should not exist in order for the update condition to be
--   satisfied.
updateCondition_exists :: Lens' UpdateCondition (Maybe Bool)

-- | The name of the attribute involved in the condition.
updateCondition_name :: Lens' UpdateCondition (Maybe Text)

-- | The value of an attribute. This value can only be specified when the
--   <tt>Exists</tt> parameter is equal to <tt>true</tt>.
updateCondition_value :: Lens' UpdateCondition (Maybe Text)


module Network.AWS.SDB.Waiters


-- | Derived from API version <tt>2009-04-15</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon SimpleDB is a web service providing the core database functions
--   of data indexing and querying in the cloud. By offloading the time and
--   effort associated with building and operating a web-scale database,
--   SimpleDB provides developers the freedom to focus on application
--   development.
--   
--   A traditional, clustered relational database requires a sizable
--   upfront capital outlay, is complex to design, and often requires
--   extensive and repetitive database administration. Amazon SimpleDB is
--   dramatically simpler, requiring no schema, automatically indexing your
--   data and providing a simple API for storage and access. This approach
--   eliminates the administrative burden of data modeling, index
--   maintenance, and performance tuning. Developers gain access to this
--   functionality within Amazon's proven computing environment, are able
--   to scale instantly, and pay only for what they use.
--   
--   Visit <a>http://aws.amazon.com/simpledb/</a> for more information.
module Network.AWS.SDB

-- | API version <tt>2009-04-15</tt> of the Amazon SimpleDB SDK
--   configuration.
defaultService :: Service

-- | Too many attributes in this domain.
_NumberDomainAttributesExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | Too many items exist in a single call.
_NumberSubmittedItemsExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified domain does not exist.
_NoSuchDomain :: AsError a => Getting (First ServiceError) a ServiceError

-- | Too many bytes in this domain.
_NumberDomainBytesExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | Too many domains exist per this account.
_NumberDomainsExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | Too many predicates exist in the query expression.
_InvalidNumberPredicates :: AsError a => Getting (First ServiceError) a ServiceError

-- | The item name was specified more than once.
_DuplicateItemName :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified attribute does not exist.
_AttributeDoesNotExist :: AsError a => Getting (First ServiceError) a ServiceError

-- | Too many predicates exist in the query expression.
_InvalidNumberValueTests :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified query expression syntax is not valid.
_InvalidQueryExpression :: AsError a => Getting (First ServiceError) a ServiceError

-- | Too many attributes exist in a single call.
_NumberSubmittedAttributesExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value for a parameter is invalid.
_InvalidParameterValue :: AsError a => Getting (First ServiceError) a ServiceError

-- | Too many attributes requested.
_TooManyRequestedAttributes :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified NextToken is not valid.
_InvalidNextToken :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request must contain the specified missing parameter.
_MissingParameter :: AsError a => Getting (First ServiceError) a ServiceError

-- | Too many attributes in this item.
_NumberItemAttributesExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | A timeout occurred when attempting to query the specified domain with
--   specified query expression.
_RequestTimeout :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newListDomains</a> smart constructor.
data ListDomains
ListDomains' :: Maybe Text -> Maybe Int -> ListDomains

-- | Create a value of <a>ListDomains</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDomains'</a>, <a>listDomains_nextToken</a> - A
--   string informing Amazon SimpleDB where to start the next list of
--   domain names.
--   
--   <a>$sel:maxNumberOfDomains:ListDomains'</a>,
--   <a>listDomains_maxNumberOfDomains</a> - The maximum number of domain
--   names you want returned. The range is 1 to 100. The default setting is
--   100.
newListDomains :: ListDomains

-- | <i>See:</i> <a>newListDomainsResponse</a> smart constructor.
data ListDomainsResponse
ListDomainsResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListDomainsResponse

-- | Create a value of <a>ListDomainsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainNames:ListDomainsResponse'</a>,
--   <a>listDomainsResponse_domainNames</a> - A list of domain names that
--   match the expression.
--   
--   <a>$sel:nextToken:ListDomains'</a>,
--   <a>listDomainsResponse_nextToken</a> - An opaque token indicating that
--   there are more domains than the specified <tt>MaxNumberOfDomains</tt>
--   still available.
--   
--   <a>$sel:httpStatus:ListDomainsResponse'</a>,
--   <a>listDomainsResponse_httpStatus</a> - The response's http status
--   code.
newListDomainsResponse :: Int -> ListDomainsResponse

-- | <i>See:</i> <a>newDeleteAttributes</a> smart constructor.
data DeleteAttributes
DeleteAttributes' :: Maybe UpdateCondition -> Maybe [Attribute] -> Text -> Text -> DeleteAttributes

-- | Create a value of <a>DeleteAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expected:DeleteAttributes'</a>,
--   <a>deleteAttributes_expected</a> - The update condition which, if
--   specified, determines whether the specified attributes will be deleted
--   or not. The update condition must be satisfied in order for this
--   request to be processed and the attributes to be deleted.
--   
--   <a>$sel:attributes:DeleteAttributes'</a>,
--   <a>deleteAttributes_attributes</a> - A list of Attributes. Similar to
--   columns on a spreadsheet, attributes represent categories of data that
--   can be assigned to items.
--   
--   <a>$sel:domainName:DeleteAttributes'</a>,
--   <a>deleteAttributes_domainName</a> - The name of the domain in which
--   to perform the operation.
--   
--   <a>$sel:itemName:DeleteAttributes'</a>,
--   <a>deleteAttributes_itemName</a> - The name of the item. Similar to
--   rows on a spreadsheet, items represent individual objects that contain
--   one or more value-attribute pairs.
newDeleteAttributes :: Text -> Text -> DeleteAttributes

-- | <i>See:</i> <a>newDeleteAttributesResponse</a> smart constructor.
data DeleteAttributesResponse
DeleteAttributesResponse' :: DeleteAttributesResponse

-- | Create a value of <a>DeleteAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAttributesResponse :: DeleteAttributesResponse

-- | <i>See:</i> <a>newDomainMetadata</a> smart constructor.
data DomainMetadata
DomainMetadata' :: Text -> DomainMetadata

-- | Create a value of <a>DomainMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:DomainMetadata'</a>,
--   <a>domainMetadata_domainName</a> - The name of the domain for which to
--   display the metadata of.
newDomainMetadata :: Text -> DomainMetadata

-- | <i>See:</i> <a>newDomainMetadataResponse</a> smart constructor.
data DomainMetadataResponse
DomainMetadataResponse' :: Maybe Integer -> Maybe Int -> Maybe Int -> Maybe Integer -> Maybe Int -> Maybe Int -> Maybe Integer -> Int -> DomainMetadataResponse

-- | Create a value of <a>DomainMetadataResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeNamesSizeBytes:DomainMetadataResponse'</a>,
--   <a>domainMetadataResponse_attributeNamesSizeBytes</a> - The total size
--   of all unique attribute names in the domain, in bytes.
--   
--   <a>$sel:attributeValueCount:DomainMetadataResponse'</a>,
--   <a>domainMetadataResponse_attributeValueCount</a> - The number of all
--   attribute name/value pairs in the domain.
--   
--   <a>$sel:attributeNameCount:DomainMetadataResponse'</a>,
--   <a>domainMetadataResponse_attributeNameCount</a> - The number of
--   unique attribute names in the domain.
--   
--   <a>$sel:attributeValuesSizeBytes:DomainMetadataResponse'</a>,
--   <a>domainMetadataResponse_attributeValuesSizeBytes</a> - The total
--   size of all attribute values in the domain, in bytes.
--   
--   <a>$sel:timestamp:DomainMetadataResponse'</a>,
--   <a>domainMetadataResponse_timestamp</a> - The data and time when
--   metadata was calculated, in Epoch (UNIX) seconds.
--   
--   <a>$sel:itemCount:DomainMetadataResponse'</a>,
--   <a>domainMetadataResponse_itemCount</a> - The number of all items in
--   the domain.
--   
--   <a>$sel:itemNamesSizeBytes:DomainMetadataResponse'</a>,
--   <a>domainMetadataResponse_itemNamesSizeBytes</a> - The total size of
--   all item names in the domain, in bytes.
--   
--   <a>$sel:httpStatus:DomainMetadataResponse'</a>,
--   <a>domainMetadataResponse_httpStatus</a> - The response's http status
--   code.
newDomainMetadataResponse :: Int -> DomainMetadataResponse

-- | <i>See:</i> <a>newBatchPutAttributes</a> smart constructor.
data BatchPutAttributes
BatchPutAttributes' :: Text -> [ReplaceableItem] -> BatchPutAttributes

-- | Create a value of <a>BatchPutAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:BatchPutAttributes'</a>,
--   <a>batchPutAttributes_domainName</a> - The name of the domain in which
--   the attributes are being stored.
--   
--   <a>$sel:items:BatchPutAttributes'</a>, <a>batchPutAttributes_items</a>
--   - A list of items on which to perform the operation.
newBatchPutAttributes :: Text -> BatchPutAttributes

-- | <i>See:</i> <a>newBatchPutAttributesResponse</a> smart constructor.
data BatchPutAttributesResponse
BatchPutAttributesResponse' :: BatchPutAttributesResponse

-- | Create a value of <a>BatchPutAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchPutAttributesResponse :: BatchPutAttributesResponse

-- | <i>See:</i> <a>newCreateDomain</a> smart constructor.
data CreateDomain
CreateDomain' :: Text -> CreateDomain

-- | Create a value of <a>CreateDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:CreateDomain'</a>, <a>createDomain_domainName</a> -
--   The name of the domain to create. The name can range between 3 and 255
--   characters and can contain the following characters: a-z, A-Z, 0-9,
--   '_', '-', and '.'.
newCreateDomain :: Text -> CreateDomain

-- | <i>See:</i> <a>newCreateDomainResponse</a> smart constructor.
data CreateDomainResponse
CreateDomainResponse' :: CreateDomainResponse

-- | Create a value of <a>CreateDomainResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCreateDomainResponse :: CreateDomainResponse

-- | <i>See:</i> <a>newDeleteDomain</a> smart constructor.
data DeleteDomain
DeleteDomain' :: Text -> DeleteDomain

-- | Create a value of <a>DeleteDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:DeleteDomain'</a>, <a>deleteDomain_domainName</a> -
--   The name of the domain to delete.
newDeleteDomain :: Text -> DeleteDomain

-- | <i>See:</i> <a>newDeleteDomainResponse</a> smart constructor.
data DeleteDomainResponse
DeleteDomainResponse' :: DeleteDomainResponse

-- | Create a value of <a>DeleteDomainResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDomainResponse :: DeleteDomainResponse

-- | <i>See:</i> <a>newGetAttributes</a> smart constructor.
data GetAttributes
GetAttributes' :: Maybe Bool -> Maybe [Text] -> Text -> Text -> GetAttributes

-- | Create a value of <a>GetAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:consistentRead:GetAttributes'</a>,
--   <a>getAttributes_consistentRead</a> - Determines whether or not strong
--   consistency should be enforced when data is read from SimpleDB. If
--   <tt>true</tt>, any data previously written to SimpleDB will be
--   returned. Otherwise, results will be consistent eventually, and the
--   client may not see data that was written immediately before your read.
--   
--   <a>$sel:attributeNames:GetAttributes'</a>,
--   <a>getAttributes_attributeNames</a> - The names of the attributes.
--   
--   <a>$sel:domainName:GetAttributes'</a>, <a>getAttributes_domainName</a>
--   - The name of the domain in which to perform the operation.
--   
--   <a>$sel:itemName:GetAttributes'</a>, <a>getAttributes_itemName</a> -
--   The name of the item.
newGetAttributes :: Text -> Text -> GetAttributes

-- | <i>See:</i> <a>newGetAttributesResponse</a> smart constructor.
data GetAttributesResponse
GetAttributesResponse' :: Maybe [Attribute] -> Int -> GetAttributesResponse

-- | Create a value of <a>GetAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:GetAttributesResponse'</a>,
--   <a>getAttributesResponse_attributes</a> - The list of attributes
--   returned by the operation.
--   
--   <a>$sel:httpStatus:GetAttributesResponse'</a>,
--   <a>getAttributesResponse_httpStatus</a> - The response's http status
--   code.
newGetAttributesResponse :: Int -> GetAttributesResponse

-- | <i>See:</i> <a>newPutAttributes</a> smart constructor.
data PutAttributes
PutAttributes' :: Maybe UpdateCondition -> Text -> Text -> [ReplaceableAttribute] -> PutAttributes

-- | Create a value of <a>PutAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expected:PutAttributes'</a>, <a>putAttributes_expected</a> -
--   The update condition which, if specified, determines whether the
--   specified attributes will be updated or not. The update condition must
--   be satisfied in order for this request to be processed and the
--   attributes to be updated.
--   
--   <a>$sel:domainName:PutAttributes'</a>, <a>putAttributes_domainName</a>
--   - The name of the domain in which to perform the operation.
--   
--   <a>$sel:itemName:PutAttributes'</a>, <a>putAttributes_itemName</a> -
--   The name of the item.
--   
--   <a>$sel:attributes:PutAttributes'</a>, <a>putAttributes_attributes</a>
--   - The list of attributes.
newPutAttributes :: Text -> Text -> PutAttributes

-- | <i>See:</i> <a>newPutAttributesResponse</a> smart constructor.
data PutAttributesResponse
PutAttributesResponse' :: PutAttributesResponse

-- | Create a value of <a>PutAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutAttributesResponse :: PutAttributesResponse

-- | <i>See:</i> <a>newSelect</a> smart constructor.
data Select
Select' :: Maybe Text -> Maybe Bool -> Text -> Select

-- | Create a value of <a>Select</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:Select'</a>, <a>select_nextToken</a> - A string
--   informing Amazon SimpleDB where to start the next list of
--   <tt>ItemNames</tt>.
--   
--   <a>$sel:consistentRead:Select'</a>, <a>select_consistentRead</a> -
--   Determines whether or not strong consistency should be enforced when
--   data is read from SimpleDB. If <tt>true</tt>, any data previously
--   written to SimpleDB will be returned. Otherwise, results will be
--   consistent eventually, and the client may not see data that was
--   written immediately before your read.
--   
--   <a>$sel:selectExpression:Select'</a>, <a>select_selectExpression</a> -
--   The expression used to query the domain.
newSelect :: Text -> Select

-- | <i>See:</i> <a>newSelectResponse</a> smart constructor.
data SelectResponse
SelectResponse' :: Maybe Text -> Maybe [Item] -> Int -> SelectResponse

-- | Create a value of <a>SelectResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:Select'</a>, <a>selectResponse_nextToken</a> - An
--   opaque token indicating that more items than <tt>MaxNumberOfItems</tt>
--   were matched, the response size exceeded 1 megabyte, or the execution
--   time exceeded 5 seconds.
--   
--   <a>$sel:items:SelectResponse'</a>, <a>selectResponse_items</a> - A
--   list of items that match the select expression.
--   
--   <a>$sel:httpStatus:SelectResponse'</a>,
--   <a>selectResponse_httpStatus</a> - The response's http status code.
newSelectResponse :: Int -> SelectResponse

-- | <i>See:</i> <a>newBatchDeleteAttributes</a> smart constructor.
data BatchDeleteAttributes
BatchDeleteAttributes' :: Text -> [DeletableItem] -> BatchDeleteAttributes

-- | Create a value of <a>BatchDeleteAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:BatchDeleteAttributes'</a>,
--   <a>batchDeleteAttributes_domainName</a> - The name of the domain in
--   which the attributes are being deleted.
--   
--   <a>$sel:items:BatchDeleteAttributes'</a>,
--   <a>batchDeleteAttributes_items</a> - A list of items on which to
--   perform the operation.
newBatchDeleteAttributes :: Text -> BatchDeleteAttributes

-- | <i>See:</i> <a>newBatchDeleteAttributesResponse</a> smart constructor.
data BatchDeleteAttributesResponse
BatchDeleteAttributesResponse' :: BatchDeleteAttributesResponse

-- | Create a value of <a>BatchDeleteAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newBatchDeleteAttributesResponse :: BatchDeleteAttributesResponse

-- | <i>See:</i> <a>newAttribute</a> smart constructor.
data Attribute
Attribute' :: Maybe Text -> Maybe Text -> Text -> Text -> Attribute

-- | Create a value of <a>Attribute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alternateNameEncoding:Attribute'</a>,
--   <a>attribute_alternateNameEncoding</a> -
--   
--   <a>$sel:alternateValueEncoding:Attribute'</a>,
--   <a>attribute_alternateValueEncoding</a> -
--   
--   <a>$sel:name:Attribute'</a>, <a>attribute_name</a> - The name of the
--   attribute.
--   
--   <a>$sel:value:Attribute'</a>, <a>attribute_value</a> - The value of
--   the attribute.
newAttribute :: Text -> Text -> Attribute

-- | <i>See:</i> <a>newDeletableItem</a> smart constructor.
data DeletableItem
DeletableItem' :: Maybe [Attribute] -> Text -> DeletableItem

-- | Create a value of <a>DeletableItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:DeletableItem'</a>, <a>deletableItem_attributes</a>
--   - Undocumented member.
--   
--   <a>$sel:name:DeletableItem'</a>, <a>deletableItem_name</a> -
--   Undocumented member.
newDeletableItem :: Text -> DeletableItem

-- | <i>See:</i> <a>newItem</a> smart constructor.
data Item
Item' :: Maybe Text -> Text -> [Attribute] -> Item

-- | Create a value of <a>Item</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alternateNameEncoding:Item'</a>,
--   <a>item_alternateNameEncoding</a> -
--   
--   <a>$sel:name:Item'</a>, <a>item_name</a> - The name of the item.
--   
--   <a>$sel:attributes:Item'</a>, <a>item_attributes</a> - A list of
--   attributes.
newItem :: Text -> Item

-- | <i>See:</i> <a>newReplaceableAttribute</a> smart constructor.
data ReplaceableAttribute
ReplaceableAttribute' :: Maybe Bool -> Text -> Text -> ReplaceableAttribute

-- | Create a value of <a>ReplaceableAttribute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replace:ReplaceableAttribute'</a>,
--   <a>replaceableAttribute_replace</a> - A flag specifying whether or not
--   to replace the attribute/value pair or to add a new attribute/value
--   pair. The default setting is <tt>false</tt>.
--   
--   <a>$sel:name:ReplaceableAttribute'</a>,
--   <a>replaceableAttribute_name</a> - The name of the replaceable
--   attribute.
--   
--   <a>$sel:value:ReplaceableAttribute'</a>,
--   <a>replaceableAttribute_value</a> - The value of the replaceable
--   attribute.
newReplaceableAttribute :: Text -> Text -> ReplaceableAttribute

-- | <i>See:</i> <a>newReplaceableItem</a> smart constructor.
data ReplaceableItem
ReplaceableItem' :: Text -> [ReplaceableAttribute] -> ReplaceableItem

-- | Create a value of <a>ReplaceableItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ReplaceableItem'</a>, <a>replaceableItem_name</a> - The
--   name of the replaceable item.
--   
--   <a>$sel:attributes:ReplaceableItem'</a>,
--   <a>replaceableItem_attributes</a> - The list of attributes for a
--   replaceable item.
newReplaceableItem :: Text -> ReplaceableItem

-- | Specifies the conditions under which data should be updated. If an
--   update condition is specified for a request, the data will only be
--   updated if the condition is satisfied. For example, if an attribute
--   with a specific name and value exists, or if a specific attribute
--   doesn't exist.
--   
--   <i>See:</i> <a>newUpdateCondition</a> smart constructor.
data UpdateCondition
UpdateCondition' :: Maybe Bool -> Maybe Text -> Maybe Text -> UpdateCondition

-- | Create a value of <a>UpdateCondition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exists:UpdateCondition'</a>, <a>updateCondition_exists</a> - A
--   value specifying whether or not the specified attribute must exist
--   with the specified value in order for the update condition to be
--   satisfied. Specify <tt>true</tt> if the attribute must exist for the
--   update condition to be satisfied. Specify <tt>false</tt> if the
--   attribute should not exist in order for the update condition to be
--   satisfied.
--   
--   <a>$sel:name:UpdateCondition'</a>, <a>updateCondition_name</a> - The
--   name of the attribute involved in the condition.
--   
--   <a>$sel:value:UpdateCondition'</a>, <a>updateCondition_value</a> - The
--   value of an attribute. This value can only be specified when the
--   <tt>Exists</tt> parameter is equal to <tt>true</tt>.
newUpdateCondition :: UpdateCondition
