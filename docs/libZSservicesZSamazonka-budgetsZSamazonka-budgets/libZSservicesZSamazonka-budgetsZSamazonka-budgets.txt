-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-budgetsZSamazonka-budgets
@version 1.6.1


module Network.AWS.Budgets.Types.ActionStatus
newtype ActionStatus
ActionStatus' :: Text -> ActionStatus
[fromActionStatus] :: ActionStatus -> Text
pattern ActionStatus_EXECUTION_FAILURE :: ActionStatus
pattern ActionStatus_EXECUTION_IN_PROGRESS :: ActionStatus
pattern ActionStatus_EXECUTION_SUCCESS :: ActionStatus
pattern ActionStatus_PENDING :: ActionStatus
pattern ActionStatus_RESET_FAILURE :: ActionStatus
pattern ActionStatus_RESET_IN_PROGRESS :: ActionStatus
pattern ActionStatus_REVERSE_FAILURE :: ActionStatus
pattern ActionStatus_REVERSE_IN_PROGRESS :: ActionStatus
pattern ActionStatus_REVERSE_SUCCESS :: ActionStatus
pattern ActionStatus_STANDBY :: ActionStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Budgets.Types.ActionStatus.ActionStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Budgets.Types.ActionStatus.ActionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Budgets.Types.ActionStatus.ActionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.ActionStatus.ActionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Budgets.Types.ActionStatus.ActionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.ActionStatus.ActionStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.Types.ActionStatus.ActionStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Budgets.Types.ActionStatus.ActionStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Budgets.Types.ActionStatus.ActionStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Budgets.Types.ActionStatus.ActionStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Budgets.Types.ActionStatus.ActionStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Budgets.Types.ActionStatus.ActionStatus
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.ActionStatus.ActionStatus
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.ActionStatus.ActionStatus
instance GHC.Generics.Generic Network.AWS.Budgets.Types.ActionStatus.ActionStatus
instance GHC.Classes.Ord Network.AWS.Budgets.Types.ActionStatus.ActionStatus
instance GHC.Classes.Eq Network.AWS.Budgets.Types.ActionStatus.ActionStatus
instance GHC.Read.Read Network.AWS.Budgets.Types.ActionStatus.ActionStatus
instance GHC.Show.Show Network.AWS.Budgets.Types.ActionStatus.ActionStatus


module Network.AWS.Budgets.Types.ActionSubType
newtype ActionSubType
ActionSubType' :: Text -> ActionSubType
[fromActionSubType] :: ActionSubType -> Text
pattern ActionSubType_STOP_EC2_INSTANCES :: ActionSubType
pattern ActionSubType_STOP_RDS_INSTANCES :: ActionSubType
instance Network.AWS.Data.XML.ToXML Network.AWS.Budgets.Types.ActionSubType.ActionSubType
instance Network.AWS.Data.XML.FromXML Network.AWS.Budgets.Types.ActionSubType.ActionSubType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Budgets.Types.ActionSubType.ActionSubType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.ActionSubType.ActionSubType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Budgets.Types.ActionSubType.ActionSubType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.ActionSubType.ActionSubType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.Types.ActionSubType.ActionSubType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Budgets.Types.ActionSubType.ActionSubType
instance Network.AWS.Data.Log.ToLog Network.AWS.Budgets.Types.ActionSubType.ActionSubType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Budgets.Types.ActionSubType.ActionSubType
instance Network.AWS.Data.Text.ToText Network.AWS.Budgets.Types.ActionSubType.ActionSubType
instance Network.AWS.Data.Text.FromText Network.AWS.Budgets.Types.ActionSubType.ActionSubType
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.ActionSubType.ActionSubType
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.ActionSubType.ActionSubType
instance GHC.Generics.Generic Network.AWS.Budgets.Types.ActionSubType.ActionSubType
instance GHC.Classes.Ord Network.AWS.Budgets.Types.ActionSubType.ActionSubType
instance GHC.Classes.Eq Network.AWS.Budgets.Types.ActionSubType.ActionSubType
instance GHC.Read.Read Network.AWS.Budgets.Types.ActionSubType.ActionSubType
instance GHC.Show.Show Network.AWS.Budgets.Types.ActionSubType.ActionSubType


module Network.AWS.Budgets.Types.ActionType
newtype ActionType
ActionType' :: Text -> ActionType
[fromActionType] :: ActionType -> Text
pattern ActionType_APPLY_IAM_POLICY :: ActionType
pattern ActionType_APPLY_SCP_POLICY :: ActionType
pattern ActionType_RUN_SSM_DOCUMENTS :: ActionType
instance Network.AWS.Data.XML.ToXML Network.AWS.Budgets.Types.ActionType.ActionType
instance Network.AWS.Data.XML.FromXML Network.AWS.Budgets.Types.ActionType.ActionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Budgets.Types.ActionType.ActionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.ActionType.ActionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Budgets.Types.ActionType.ActionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.ActionType.ActionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.Types.ActionType.ActionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Budgets.Types.ActionType.ActionType
instance Network.AWS.Data.Log.ToLog Network.AWS.Budgets.Types.ActionType.ActionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Budgets.Types.ActionType.ActionType
instance Network.AWS.Data.Text.ToText Network.AWS.Budgets.Types.ActionType.ActionType
instance Network.AWS.Data.Text.FromText Network.AWS.Budgets.Types.ActionType.ActionType
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.ActionType.ActionType
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.ActionType.ActionType
instance GHC.Generics.Generic Network.AWS.Budgets.Types.ActionType.ActionType
instance GHC.Classes.Ord Network.AWS.Budgets.Types.ActionType.ActionType
instance GHC.Classes.Eq Network.AWS.Budgets.Types.ActionType.ActionType
instance GHC.Read.Read Network.AWS.Budgets.Types.ActionType.ActionType
instance GHC.Show.Show Network.AWS.Budgets.Types.ActionType.ActionType


module Network.AWS.Budgets.Types.ApprovalModel
newtype ApprovalModel
ApprovalModel' :: Text -> ApprovalModel
[fromApprovalModel] :: ApprovalModel -> Text
pattern ApprovalModel_AUTOMATIC :: ApprovalModel
pattern ApprovalModel_MANUAL :: ApprovalModel
instance Network.AWS.Data.XML.ToXML Network.AWS.Budgets.Types.ApprovalModel.ApprovalModel
instance Network.AWS.Data.XML.FromXML Network.AWS.Budgets.Types.ApprovalModel.ApprovalModel
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Budgets.Types.ApprovalModel.ApprovalModel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.ApprovalModel.ApprovalModel
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Budgets.Types.ApprovalModel.ApprovalModel
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.ApprovalModel.ApprovalModel
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.Types.ApprovalModel.ApprovalModel
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Budgets.Types.ApprovalModel.ApprovalModel
instance Network.AWS.Data.Log.ToLog Network.AWS.Budgets.Types.ApprovalModel.ApprovalModel
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Budgets.Types.ApprovalModel.ApprovalModel
instance Network.AWS.Data.Text.ToText Network.AWS.Budgets.Types.ApprovalModel.ApprovalModel
instance Network.AWS.Data.Text.FromText Network.AWS.Budgets.Types.ApprovalModel.ApprovalModel
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.ApprovalModel.ApprovalModel
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.ApprovalModel.ApprovalModel
instance GHC.Generics.Generic Network.AWS.Budgets.Types.ApprovalModel.ApprovalModel
instance GHC.Classes.Ord Network.AWS.Budgets.Types.ApprovalModel.ApprovalModel
instance GHC.Classes.Eq Network.AWS.Budgets.Types.ApprovalModel.ApprovalModel
instance GHC.Read.Read Network.AWS.Budgets.Types.ApprovalModel.ApprovalModel
instance GHC.Show.Show Network.AWS.Budgets.Types.ApprovalModel.ApprovalModel


module Network.AWS.Budgets.Types.BudgetType

-- | The type of a budget. It must be one of the following types:
--   
--   <tt>COST</tt>, <tt>USAGE</tt>, <tt>RI_UTILIZATION</tt>,
--   <tt>RI_COVERAGE</tt>, <tt>SAVINGS_PLANS_UTILIZATION</tt>, or
--   <tt>SAVINGS_PLANS_COVERAGE</tt>.
newtype BudgetType
BudgetType' :: Text -> BudgetType
[fromBudgetType] :: BudgetType -> Text
pattern BudgetType_COST :: BudgetType
pattern BudgetType_RI_COVERAGE :: BudgetType
pattern BudgetType_RI_UTILIZATION :: BudgetType
pattern BudgetType_SAVINGS_PLANS_COVERAGE :: BudgetType
pattern BudgetType_SAVINGS_PLANS_UTILIZATION :: BudgetType
pattern BudgetType_USAGE :: BudgetType
instance Network.AWS.Data.XML.ToXML Network.AWS.Budgets.Types.BudgetType.BudgetType
instance Network.AWS.Data.XML.FromXML Network.AWS.Budgets.Types.BudgetType.BudgetType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Budgets.Types.BudgetType.BudgetType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.BudgetType.BudgetType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Budgets.Types.BudgetType.BudgetType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.BudgetType.BudgetType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.Types.BudgetType.BudgetType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Budgets.Types.BudgetType.BudgetType
instance Network.AWS.Data.Log.ToLog Network.AWS.Budgets.Types.BudgetType.BudgetType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Budgets.Types.BudgetType.BudgetType
instance Network.AWS.Data.Text.ToText Network.AWS.Budgets.Types.BudgetType.BudgetType
instance Network.AWS.Data.Text.FromText Network.AWS.Budgets.Types.BudgetType.BudgetType
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.BudgetType.BudgetType
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.BudgetType.BudgetType
instance GHC.Generics.Generic Network.AWS.Budgets.Types.BudgetType.BudgetType
instance GHC.Classes.Ord Network.AWS.Budgets.Types.BudgetType.BudgetType
instance GHC.Classes.Eq Network.AWS.Budgets.Types.BudgetType.BudgetType
instance GHC.Read.Read Network.AWS.Budgets.Types.BudgetType.BudgetType
instance GHC.Show.Show Network.AWS.Budgets.Types.BudgetType.BudgetType


module Network.AWS.Budgets.Types.ComparisonOperator

-- | The comparison operator of a notification. Currently the service
--   supports the following operators:
--   
--   <tt>GREATER_THAN</tt>, <tt>LESS_THAN</tt>, <tt>EQUAL_TO</tt>
newtype ComparisonOperator
ComparisonOperator' :: Text -> ComparisonOperator
[fromComparisonOperator] :: ComparisonOperator -> Text
pattern ComparisonOperator_EQUAL_TO :: ComparisonOperator
pattern ComparisonOperator_GREATER_THAN :: ComparisonOperator
pattern ComparisonOperator_LESS_THAN :: ComparisonOperator
instance Network.AWS.Data.XML.ToXML Network.AWS.Budgets.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.XML.FromXML Network.AWS.Budgets.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Budgets.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Budgets.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Budgets.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.Log.ToLog Network.AWS.Budgets.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Budgets.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.Text.ToText Network.AWS.Budgets.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.Text.FromText Network.AWS.Budgets.Types.ComparisonOperator.ComparisonOperator
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.ComparisonOperator.ComparisonOperator
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.ComparisonOperator.ComparisonOperator
instance GHC.Generics.Generic Network.AWS.Budgets.Types.ComparisonOperator.ComparisonOperator
instance GHC.Classes.Ord Network.AWS.Budgets.Types.ComparisonOperator.ComparisonOperator
instance GHC.Classes.Eq Network.AWS.Budgets.Types.ComparisonOperator.ComparisonOperator
instance GHC.Read.Read Network.AWS.Budgets.Types.ComparisonOperator.ComparisonOperator
instance GHC.Show.Show Network.AWS.Budgets.Types.ComparisonOperator.ComparisonOperator


module Network.AWS.Budgets.Types.CostTypes

-- | The types of cost that are included in a <tt>COST</tt> budget, such as
--   tax and subscriptions.
--   
--   <tt>USAGE</tt>, <tt>RI_UTILIZATION</tt>, <tt>RI_COVERAGE</tt>,
--   <tt>SAVINGS_PLANS_UTILIZATION</tt>, and
--   <tt>SAVINGS_PLANS_COVERAGE</tt> budgets do not have
--   <tt>CostTypes</tt>.
--   
--   <i>See:</i> <a>newCostTypes</a> smart constructor.
data CostTypes
CostTypes' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> CostTypes

-- | Specifies whether a budget includes subscriptions.
--   
--   The default value is <tt>true</tt>.
[$sel:includeSubscription:CostTypes'] :: CostTypes -> Maybe Bool

-- | Specifies whether a budget uses the amortized rate.
--   
--   The default value is <tt>false</tt>.
[$sel:useAmortized:CostTypes'] :: CostTypes -> Maybe Bool

-- | Specifies whether a budget includes credits.
--   
--   The default value is <tt>true</tt>.
[$sel:includeCredit:CostTypes'] :: CostTypes -> Maybe Bool

-- | Specifies whether a budget uses a blended rate.
--   
--   The default value is <tt>false</tt>.
[$sel:useBlended:CostTypes'] :: CostTypes -> Maybe Bool

-- | Specifies whether a budget includes support subscription fees.
--   
--   The default value is <tt>true</tt>.
[$sel:includeSupport:CostTypes'] :: CostTypes -> Maybe Bool

-- | Specifies whether a budget includes refunds.
--   
--   The default value is <tt>true</tt>.
[$sel:includeRefund:CostTypes'] :: CostTypes -> Maybe Bool

-- | Specifies whether a budget includes taxes.
--   
--   The default value is <tt>true</tt>.
[$sel:includeTax:CostTypes'] :: CostTypes -> Maybe Bool

-- | Specifies whether a budget includes discounts.
--   
--   The default value is <tt>true</tt>.
[$sel:includeDiscount:CostTypes'] :: CostTypes -> Maybe Bool

-- | Specifies whether a budget includes non-RI subscription costs.
--   
--   The default value is <tt>true</tt>.
[$sel:includeOtherSubscription:CostTypes'] :: CostTypes -> Maybe Bool

-- | Specifies whether a budget includes upfront RI costs.
--   
--   The default value is <tt>true</tt>.
[$sel:includeUpfront:CostTypes'] :: CostTypes -> Maybe Bool

-- | Specifies whether a budget includes recurring fees such as monthly RI
--   fees.
--   
--   The default value is <tt>true</tt>.
[$sel:includeRecurring:CostTypes'] :: CostTypes -> Maybe Bool

-- | Create a value of <a>CostTypes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeSubscription:CostTypes'</a>,
--   <a>costTypes_includeSubscription</a> - Specifies whether a budget
--   includes subscriptions.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:useAmortized:CostTypes'</a>, <a>costTypes_useAmortized</a> -
--   Specifies whether a budget uses the amortized rate.
--   
--   The default value is <tt>false</tt>.
--   
--   <a>$sel:includeCredit:CostTypes'</a>, <a>costTypes_includeCredit</a> -
--   Specifies whether a budget includes credits.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:useBlended:CostTypes'</a>, <a>costTypes_useBlended</a> -
--   Specifies whether a budget uses a blended rate.
--   
--   The default value is <tt>false</tt>.
--   
--   <a>$sel:includeSupport:CostTypes'</a>, <a>costTypes_includeSupport</a>
--   - Specifies whether a budget includes support subscription fees.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:includeRefund:CostTypes'</a>, <a>costTypes_includeRefund</a> -
--   Specifies whether a budget includes refunds.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:includeTax:CostTypes'</a>, <a>costTypes_includeTax</a> -
--   Specifies whether a budget includes taxes.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:includeDiscount:CostTypes'</a>,
--   <a>costTypes_includeDiscount</a> - Specifies whether a budget includes
--   discounts.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:includeOtherSubscription:CostTypes'</a>,
--   <a>costTypes_includeOtherSubscription</a> - Specifies whether a budget
--   includes non-RI subscription costs.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:includeUpfront:CostTypes'</a>, <a>costTypes_includeUpfront</a>
--   - Specifies whether a budget includes upfront RI costs.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:includeRecurring:CostTypes'</a>,
--   <a>costTypes_includeRecurring</a> - Specifies whether a budget
--   includes recurring fees such as monthly RI fees.
--   
--   The default value is <tt>true</tt>.
newCostTypes :: CostTypes

-- | Specifies whether a budget includes subscriptions.
--   
--   The default value is <tt>true</tt>.
costTypes_includeSubscription :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget uses the amortized rate.
--   
--   The default value is <tt>false</tt>.
costTypes_useAmortized :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes credits.
--   
--   The default value is <tt>true</tt>.
costTypes_includeCredit :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget uses a blended rate.
--   
--   The default value is <tt>false</tt>.
costTypes_useBlended :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes support subscription fees.
--   
--   The default value is <tt>true</tt>.
costTypes_includeSupport :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes refunds.
--   
--   The default value is <tt>true</tt>.
costTypes_includeRefund :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes taxes.
--   
--   The default value is <tt>true</tt>.
costTypes_includeTax :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes discounts.
--   
--   The default value is <tt>true</tt>.
costTypes_includeDiscount :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes non-RI subscription costs.
--   
--   The default value is <tt>true</tt>.
costTypes_includeOtherSubscription :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes upfront RI costs.
--   
--   The default value is <tt>true</tt>.
costTypes_includeUpfront :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes recurring fees such as monthly RI
--   fees.
--   
--   The default value is <tt>true</tt>.
costTypes_includeRecurring :: Lens' CostTypes (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.Budgets.Types.CostTypes.CostTypes
instance GHC.Show.Show Network.AWS.Budgets.Types.CostTypes.CostTypes
instance GHC.Read.Read Network.AWS.Budgets.Types.CostTypes.CostTypes
instance GHC.Classes.Eq Network.AWS.Budgets.Types.CostTypes.CostTypes
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.CostTypes.CostTypes
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.CostTypes.CostTypes
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.CostTypes.CostTypes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.CostTypes.CostTypes


module Network.AWS.Budgets.Types.EventType
newtype EventType
EventType' :: Text -> EventType
[fromEventType] :: EventType -> Text
pattern EventType_CREATE_ACTION :: EventType
pattern EventType_DELETE_ACTION :: EventType
pattern EventType_EXECUTE_ACTION :: EventType
pattern EventType_SYSTEM :: EventType
pattern EventType_UPDATE_ACTION :: EventType
instance Network.AWS.Data.XML.ToXML Network.AWS.Budgets.Types.EventType.EventType
instance Network.AWS.Data.XML.FromXML Network.AWS.Budgets.Types.EventType.EventType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Budgets.Types.EventType.EventType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.EventType.EventType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Budgets.Types.EventType.EventType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.EventType.EventType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.Types.EventType.EventType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Budgets.Types.EventType.EventType
instance Network.AWS.Data.Log.ToLog Network.AWS.Budgets.Types.EventType.EventType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Budgets.Types.EventType.EventType
instance Network.AWS.Data.Text.ToText Network.AWS.Budgets.Types.EventType.EventType
instance Network.AWS.Data.Text.FromText Network.AWS.Budgets.Types.EventType.EventType
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.EventType.EventType
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.EventType.EventType
instance GHC.Generics.Generic Network.AWS.Budgets.Types.EventType.EventType
instance GHC.Classes.Ord Network.AWS.Budgets.Types.EventType.EventType
instance GHC.Classes.Eq Network.AWS.Budgets.Types.EventType.EventType
instance GHC.Read.Read Network.AWS.Budgets.Types.EventType.EventType
instance GHC.Show.Show Network.AWS.Budgets.Types.EventType.EventType


module Network.AWS.Budgets.Types.ExecutionType
newtype ExecutionType
ExecutionType' :: Text -> ExecutionType
[fromExecutionType] :: ExecutionType -> Text
pattern ExecutionType_APPROVE_BUDGET_ACTION :: ExecutionType
pattern ExecutionType_RESET_BUDGET_ACTION :: ExecutionType
pattern ExecutionType_RETRY_BUDGET_ACTION :: ExecutionType
pattern ExecutionType_REVERSE_BUDGET_ACTION :: ExecutionType
instance Network.AWS.Data.XML.ToXML Network.AWS.Budgets.Types.ExecutionType.ExecutionType
instance Network.AWS.Data.XML.FromXML Network.AWS.Budgets.Types.ExecutionType.ExecutionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Budgets.Types.ExecutionType.ExecutionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.ExecutionType.ExecutionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Budgets.Types.ExecutionType.ExecutionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.ExecutionType.ExecutionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.Types.ExecutionType.ExecutionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Budgets.Types.ExecutionType.ExecutionType
instance Network.AWS.Data.Log.ToLog Network.AWS.Budgets.Types.ExecutionType.ExecutionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Budgets.Types.ExecutionType.ExecutionType
instance Network.AWS.Data.Text.ToText Network.AWS.Budgets.Types.ExecutionType.ExecutionType
instance Network.AWS.Data.Text.FromText Network.AWS.Budgets.Types.ExecutionType.ExecutionType
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.ExecutionType.ExecutionType
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.ExecutionType.ExecutionType
instance GHC.Generics.Generic Network.AWS.Budgets.Types.ExecutionType.ExecutionType
instance GHC.Classes.Ord Network.AWS.Budgets.Types.ExecutionType.ExecutionType
instance GHC.Classes.Eq Network.AWS.Budgets.Types.ExecutionType.ExecutionType
instance GHC.Read.Read Network.AWS.Budgets.Types.ExecutionType.ExecutionType
instance GHC.Show.Show Network.AWS.Budgets.Types.ExecutionType.ExecutionType


module Network.AWS.Budgets.Types.IamActionDefinition

-- | The AWS Identity and Access Management (IAM) action definition
--   details.
--   
--   <i>See:</i> <a>newIamActionDefinition</a> smart constructor.
data IamActionDefinition
IamActionDefinition' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Text -> IamActionDefinition

-- | A list of groups to be attached. There must be at least one group.
[$sel:groups:IamActionDefinition'] :: IamActionDefinition -> Maybe (NonEmpty Text)

-- | A list of roles to be attached. There must be at least one role.
[$sel:roles:IamActionDefinition'] :: IamActionDefinition -> Maybe (NonEmpty Text)

-- | A list of users to be attached. There must be at least one user.
[$sel:users:IamActionDefinition'] :: IamActionDefinition -> Maybe (NonEmpty Text)

-- | The Amazon Resource Name (ARN) of the policy to be attached.
[$sel:policyArn:IamActionDefinition'] :: IamActionDefinition -> Text

-- | Create a value of <a>IamActionDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groups:IamActionDefinition'</a>,
--   <a>iamActionDefinition_groups</a> - A list of groups to be attached.
--   There must be at least one group.
--   
--   <a>$sel:roles:IamActionDefinition'</a>,
--   <a>iamActionDefinition_roles</a> - A list of roles to be attached.
--   There must be at least one role.
--   
--   <a>$sel:users:IamActionDefinition'</a>,
--   <a>iamActionDefinition_users</a> - A list of users to be attached.
--   There must be at least one user.
--   
--   <a>$sel:policyArn:IamActionDefinition'</a>,
--   <a>iamActionDefinition_policyArn</a> - The Amazon Resource Name (ARN)
--   of the policy to be attached.
newIamActionDefinition :: Text -> IamActionDefinition

-- | A list of groups to be attached. There must be at least one group.
iamActionDefinition_groups :: Lens' IamActionDefinition (Maybe (NonEmpty Text))

-- | A list of roles to be attached. There must be at least one role.
iamActionDefinition_roles :: Lens' IamActionDefinition (Maybe (NonEmpty Text))

-- | A list of users to be attached. There must be at least one user.
iamActionDefinition_users :: Lens' IamActionDefinition (Maybe (NonEmpty Text))

-- | The Amazon Resource Name (ARN) of the policy to be attached.
iamActionDefinition_policyArn :: Lens' IamActionDefinition Text
instance GHC.Generics.Generic Network.AWS.Budgets.Types.IamActionDefinition.IamActionDefinition
instance GHC.Show.Show Network.AWS.Budgets.Types.IamActionDefinition.IamActionDefinition
instance GHC.Read.Read Network.AWS.Budgets.Types.IamActionDefinition.IamActionDefinition
instance GHC.Classes.Eq Network.AWS.Budgets.Types.IamActionDefinition.IamActionDefinition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.IamActionDefinition.IamActionDefinition
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.IamActionDefinition.IamActionDefinition
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.IamActionDefinition.IamActionDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.IamActionDefinition.IamActionDefinition


module Network.AWS.Budgets.Types.NotificationState
newtype NotificationState
NotificationState' :: Text -> NotificationState
[fromNotificationState] :: NotificationState -> Text
pattern NotificationState_ALARM :: NotificationState
pattern NotificationState_OK :: NotificationState
instance Network.AWS.Data.XML.ToXML Network.AWS.Budgets.Types.NotificationState.NotificationState
instance Network.AWS.Data.XML.FromXML Network.AWS.Budgets.Types.NotificationState.NotificationState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Budgets.Types.NotificationState.NotificationState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.NotificationState.NotificationState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Budgets.Types.NotificationState.NotificationState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.NotificationState.NotificationState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.Types.NotificationState.NotificationState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Budgets.Types.NotificationState.NotificationState
instance Network.AWS.Data.Log.ToLog Network.AWS.Budgets.Types.NotificationState.NotificationState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Budgets.Types.NotificationState.NotificationState
instance Network.AWS.Data.Text.ToText Network.AWS.Budgets.Types.NotificationState.NotificationState
instance Network.AWS.Data.Text.FromText Network.AWS.Budgets.Types.NotificationState.NotificationState
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.NotificationState.NotificationState
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.NotificationState.NotificationState
instance GHC.Generics.Generic Network.AWS.Budgets.Types.NotificationState.NotificationState
instance GHC.Classes.Ord Network.AWS.Budgets.Types.NotificationState.NotificationState
instance GHC.Classes.Eq Network.AWS.Budgets.Types.NotificationState.NotificationState
instance GHC.Read.Read Network.AWS.Budgets.Types.NotificationState.NotificationState
instance GHC.Show.Show Network.AWS.Budgets.Types.NotificationState.NotificationState


module Network.AWS.Budgets.Types.NotificationType

-- | The type of a notification. It must be ACTUAL or FORECASTED.
newtype NotificationType
NotificationType' :: Text -> NotificationType
[fromNotificationType] :: NotificationType -> Text
pattern NotificationType_ACTUAL :: NotificationType
pattern NotificationType_FORECASTED :: NotificationType
instance Network.AWS.Data.XML.ToXML Network.AWS.Budgets.Types.NotificationType.NotificationType
instance Network.AWS.Data.XML.FromXML Network.AWS.Budgets.Types.NotificationType.NotificationType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Budgets.Types.NotificationType.NotificationType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.NotificationType.NotificationType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Budgets.Types.NotificationType.NotificationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.NotificationType.NotificationType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.Types.NotificationType.NotificationType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Budgets.Types.NotificationType.NotificationType
instance Network.AWS.Data.Log.ToLog Network.AWS.Budgets.Types.NotificationType.NotificationType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Budgets.Types.NotificationType.NotificationType
instance Network.AWS.Data.Text.ToText Network.AWS.Budgets.Types.NotificationType.NotificationType
instance Network.AWS.Data.Text.FromText Network.AWS.Budgets.Types.NotificationType.NotificationType
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.NotificationType.NotificationType
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.NotificationType.NotificationType
instance GHC.Generics.Generic Network.AWS.Budgets.Types.NotificationType.NotificationType
instance GHC.Classes.Ord Network.AWS.Budgets.Types.NotificationType.NotificationType
instance GHC.Classes.Eq Network.AWS.Budgets.Types.NotificationType.NotificationType
instance GHC.Read.Read Network.AWS.Budgets.Types.NotificationType.NotificationType
instance GHC.Show.Show Network.AWS.Budgets.Types.NotificationType.NotificationType


module Network.AWS.Budgets.Types.ScpActionDefinition

-- | The service control policies (SCP) action definition details.
--   
--   <i>See:</i> <a>newScpActionDefinition</a> smart constructor.
data ScpActionDefinition
ScpActionDefinition' :: Text -> NonEmpty Text -> ScpActionDefinition

-- | The policy ID attached.
[$sel:policyId:ScpActionDefinition'] :: ScpActionDefinition -> Text

-- | A list of target IDs.
[$sel:targetIds:ScpActionDefinition'] :: ScpActionDefinition -> NonEmpty Text

-- | Create a value of <a>ScpActionDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyId:ScpActionDefinition'</a>,
--   <a>scpActionDefinition_policyId</a> - The policy ID attached.
--   
--   <a>$sel:targetIds:ScpActionDefinition'</a>,
--   <a>scpActionDefinition_targetIds</a> - A list of target IDs.
newScpActionDefinition :: Text -> NonEmpty Text -> ScpActionDefinition

-- | The policy ID attached.
scpActionDefinition_policyId :: Lens' ScpActionDefinition Text

-- | A list of target IDs.
scpActionDefinition_targetIds :: Lens' ScpActionDefinition (NonEmpty Text)
instance GHC.Generics.Generic Network.AWS.Budgets.Types.ScpActionDefinition.ScpActionDefinition
instance GHC.Show.Show Network.AWS.Budgets.Types.ScpActionDefinition.ScpActionDefinition
instance GHC.Read.Read Network.AWS.Budgets.Types.ScpActionDefinition.ScpActionDefinition
instance GHC.Classes.Eq Network.AWS.Budgets.Types.ScpActionDefinition.ScpActionDefinition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.ScpActionDefinition.ScpActionDefinition
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.ScpActionDefinition.ScpActionDefinition
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.ScpActionDefinition.ScpActionDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.ScpActionDefinition.ScpActionDefinition


module Network.AWS.Budgets.Types.Spend

-- | The amount of cost or usage that is measured for a budget.
--   
--   For example, a <tt>Spend</tt> for <tt>3 GB</tt> of S3 usage would have
--   the following parameters:
--   
--   <ul>
--   <li>An <tt>Amount</tt> of <tt>3</tt></li>
--   <li>A <tt>unit</tt> of <tt>GB</tt></li>
--   </ul>
--   
--   <i>See:</i> <a>newSpend</a> smart constructor.
data Spend
Spend' :: Text -> Text -> Spend

-- | The cost or usage amount that is associated with a budget forecast,
--   actual spend, or budget threshold.
[$sel:amount:Spend'] :: Spend -> Text

-- | The unit of measurement that is used for the budget forecast, actual
--   spend, or budget threshold, such as dollars or GB.
[$sel:unit:Spend'] :: Spend -> Text

-- | Create a value of <a>Spend</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:amount:Spend'</a>, <a>spend_amount</a> - The cost or usage
--   amount that is associated with a budget forecast, actual spend, or
--   budget threshold.
--   
--   <a>$sel:unit:Spend'</a>, <a>spend_unit</a> - The unit of measurement
--   that is used for the budget forecast, actual spend, or budget
--   threshold, such as dollars or GB.
newSpend :: Text -> Text -> Spend

-- | The cost or usage amount that is associated with a budget forecast,
--   actual spend, or budget threshold.
spend_amount :: Lens' Spend Text

-- | The unit of measurement that is used for the budget forecast, actual
--   spend, or budget threshold, such as dollars or GB.
spend_unit :: Lens' Spend Text
instance GHC.Generics.Generic Network.AWS.Budgets.Types.Spend.Spend
instance GHC.Show.Show Network.AWS.Budgets.Types.Spend.Spend
instance GHC.Read.Read Network.AWS.Budgets.Types.Spend.Spend
instance GHC.Classes.Eq Network.AWS.Budgets.Types.Spend.Spend
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.Spend.Spend
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.Spend.Spend
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.Spend.Spend
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.Spend.Spend


module Network.AWS.Budgets.Types.CalculatedSpend

-- | The spend objects that are associated with this budget. The
--   <tt>actualSpend</tt> tracks how much you've used, cost, usage, RI
--   units, or Savings Plans units and the <tt>forecastedSpend</tt> tracks
--   how much you are predicted to spend based on your historical usage
--   profile.
--   
--   For example, if it is the 20th of the month and you have spent
--   <tt>50</tt> dollars on Amazon EC2, your <tt>actualSpend</tt> is <tt>50
--   USD</tt>, and your <tt>forecastedSpend</tt> is <tt>75 USD</tt>.
--   
--   <i>See:</i> <a>newCalculatedSpend</a> smart constructor.
data CalculatedSpend
CalculatedSpend' :: Maybe Spend -> Spend -> CalculatedSpend

-- | The amount of cost, usage, RI units, or Savings Plans units that you
--   are forecasted to use.
[$sel:forecastedSpend:CalculatedSpend'] :: CalculatedSpend -> Maybe Spend

-- | The amount of cost, usage, RI units, or Savings Plans units that you
--   have used.
[$sel:actualSpend:CalculatedSpend'] :: CalculatedSpend -> Spend

-- | Create a value of <a>CalculatedSpend</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:forecastedSpend:CalculatedSpend'</a>,
--   <a>calculatedSpend_forecastedSpend</a> - The amount of cost, usage, RI
--   units, or Savings Plans units that you are forecasted to use.
--   
--   <a>$sel:actualSpend:CalculatedSpend'</a>,
--   <a>calculatedSpend_actualSpend</a> - The amount of cost, usage, RI
--   units, or Savings Plans units that you have used.
newCalculatedSpend :: Spend -> CalculatedSpend

-- | The amount of cost, usage, RI units, or Savings Plans units that you
--   are forecasted to use.
calculatedSpend_forecastedSpend :: Lens' CalculatedSpend (Maybe Spend)

-- | The amount of cost, usage, RI units, or Savings Plans units that you
--   have used.
calculatedSpend_actualSpend :: Lens' CalculatedSpend Spend
instance GHC.Generics.Generic Network.AWS.Budgets.Types.CalculatedSpend.CalculatedSpend
instance GHC.Show.Show Network.AWS.Budgets.Types.CalculatedSpend.CalculatedSpend
instance GHC.Read.Read Network.AWS.Budgets.Types.CalculatedSpend.CalculatedSpend
instance GHC.Classes.Eq Network.AWS.Budgets.Types.CalculatedSpend.CalculatedSpend
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.CalculatedSpend.CalculatedSpend
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.CalculatedSpend.CalculatedSpend
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.CalculatedSpend.CalculatedSpend
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.CalculatedSpend.CalculatedSpend


module Network.AWS.Budgets.Types.SsmActionDefinition

-- | The AWS Systems Manager (SSM) action definition details.
--   
--   <i>See:</i> <a>newSsmActionDefinition</a> smart constructor.
data SsmActionDefinition
SsmActionDefinition' :: ActionSubType -> Text -> NonEmpty Text -> SsmActionDefinition

-- | The action subType.
[$sel:actionSubType:SsmActionDefinition'] :: SsmActionDefinition -> ActionSubType

-- | The Region to run the SSM document.
[$sel:region:SsmActionDefinition'] :: SsmActionDefinition -> Text

-- | The EC2 and RDS instance IDs.
[$sel:instanceIds:SsmActionDefinition'] :: SsmActionDefinition -> NonEmpty Text

-- | Create a value of <a>SsmActionDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionSubType:SsmActionDefinition'</a>,
--   <a>ssmActionDefinition_actionSubType</a> - The action subType.
--   
--   <a>$sel:region:SsmActionDefinition'</a>,
--   <a>ssmActionDefinition_region</a> - The Region to run the SSM
--   document.
--   
--   <a>$sel:instanceIds:SsmActionDefinition'</a>,
--   <a>ssmActionDefinition_instanceIds</a> - The EC2 and RDS instance IDs.
newSsmActionDefinition :: ActionSubType -> Text -> NonEmpty Text -> SsmActionDefinition

-- | The action subType.
ssmActionDefinition_actionSubType :: Lens' SsmActionDefinition ActionSubType

-- | The Region to run the SSM document.
ssmActionDefinition_region :: Lens' SsmActionDefinition Text

-- | The EC2 and RDS instance IDs.
ssmActionDefinition_instanceIds :: Lens' SsmActionDefinition (NonEmpty Text)
instance GHC.Generics.Generic Network.AWS.Budgets.Types.SsmActionDefinition.SsmActionDefinition
instance GHC.Show.Show Network.AWS.Budgets.Types.SsmActionDefinition.SsmActionDefinition
instance GHC.Read.Read Network.AWS.Budgets.Types.SsmActionDefinition.SsmActionDefinition
instance GHC.Classes.Eq Network.AWS.Budgets.Types.SsmActionDefinition.SsmActionDefinition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.SsmActionDefinition.SsmActionDefinition
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.SsmActionDefinition.SsmActionDefinition
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.SsmActionDefinition.SsmActionDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.SsmActionDefinition.SsmActionDefinition


module Network.AWS.Budgets.Types.Definition

-- | Specifies all of the type-specific parameters.
--   
--   <i>See:</i> <a>newDefinition</a> smart constructor.
data Definition
Definition' :: Maybe IamActionDefinition -> Maybe SsmActionDefinition -> Maybe ScpActionDefinition -> Definition

-- | The AWS Identity and Access Management (IAM) action definition
--   details.
[$sel:iamActionDefinition:Definition'] :: Definition -> Maybe IamActionDefinition

-- | The AWS Systems Manager (SSM) action definition details.
[$sel:ssmActionDefinition:Definition'] :: Definition -> Maybe SsmActionDefinition

-- | The service control policies (SCPs) action definition details.
[$sel:scpActionDefinition:Definition'] :: Definition -> Maybe ScpActionDefinition

-- | Create a value of <a>Definition</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iamActionDefinition:Definition'</a>,
--   <a>definition_iamActionDefinition</a> - The AWS Identity and Access
--   Management (IAM) action definition details.
--   
--   <a>$sel:ssmActionDefinition:Definition'</a>,
--   <a>definition_ssmActionDefinition</a> - The AWS Systems Manager (SSM)
--   action definition details.
--   
--   <a>$sel:scpActionDefinition:Definition'</a>,
--   <a>definition_scpActionDefinition</a> - The service control policies
--   (SCPs) action definition details.
newDefinition :: Definition

-- | The AWS Identity and Access Management (IAM) action definition
--   details.
definition_iamActionDefinition :: Lens' Definition (Maybe IamActionDefinition)

-- | The AWS Systems Manager (SSM) action definition details.
definition_ssmActionDefinition :: Lens' Definition (Maybe SsmActionDefinition)

-- | The service control policies (SCPs) action definition details.
definition_scpActionDefinition :: Lens' Definition (Maybe ScpActionDefinition)
instance GHC.Generics.Generic Network.AWS.Budgets.Types.Definition.Definition
instance GHC.Show.Show Network.AWS.Budgets.Types.Definition.Definition
instance GHC.Read.Read Network.AWS.Budgets.Types.Definition.Definition
instance GHC.Classes.Eq Network.AWS.Budgets.Types.Definition.Definition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.Definition.Definition
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.Definition.Definition
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.Definition.Definition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.Definition.Definition


module Network.AWS.Budgets.Types.SubscriptionType

-- | The subscription type of the subscriber. It can be SMS or EMAIL.
newtype SubscriptionType
SubscriptionType' :: Text -> SubscriptionType
[fromSubscriptionType] :: SubscriptionType -> Text
pattern SubscriptionType_EMAIL :: SubscriptionType
pattern SubscriptionType_SNS :: SubscriptionType
instance Network.AWS.Data.XML.ToXML Network.AWS.Budgets.Types.SubscriptionType.SubscriptionType
instance Network.AWS.Data.XML.FromXML Network.AWS.Budgets.Types.SubscriptionType.SubscriptionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Budgets.Types.SubscriptionType.SubscriptionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.SubscriptionType.SubscriptionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Budgets.Types.SubscriptionType.SubscriptionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.SubscriptionType.SubscriptionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.Types.SubscriptionType.SubscriptionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Budgets.Types.SubscriptionType.SubscriptionType
instance Network.AWS.Data.Log.ToLog Network.AWS.Budgets.Types.SubscriptionType.SubscriptionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Budgets.Types.SubscriptionType.SubscriptionType
instance Network.AWS.Data.Text.ToText Network.AWS.Budgets.Types.SubscriptionType.SubscriptionType
instance Network.AWS.Data.Text.FromText Network.AWS.Budgets.Types.SubscriptionType.SubscriptionType
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.SubscriptionType.SubscriptionType
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.SubscriptionType.SubscriptionType
instance GHC.Generics.Generic Network.AWS.Budgets.Types.SubscriptionType.SubscriptionType
instance GHC.Classes.Ord Network.AWS.Budgets.Types.SubscriptionType.SubscriptionType
instance GHC.Classes.Eq Network.AWS.Budgets.Types.SubscriptionType.SubscriptionType
instance GHC.Read.Read Network.AWS.Budgets.Types.SubscriptionType.SubscriptionType
instance GHC.Show.Show Network.AWS.Budgets.Types.SubscriptionType.SubscriptionType


module Network.AWS.Budgets.Types.Subscriber

-- | The subscriber to a budget notification. The subscriber consists of a
--   subscription type and either an Amazon SNS topic or an email address.
--   
--   For example, an email subscriber would have the following parameters:
--   
--   <ul>
--   <li>A <tt>subscriptionType</tt> of <tt>EMAIL</tt></li>
--   <li>An <tt>address</tt> of <tt>example@example.com</tt></li>
--   </ul>
--   
--   <i>See:</i> <a>newSubscriber</a> smart constructor.
data Subscriber
Subscriber' :: SubscriptionType -> Sensitive Text -> Subscriber

-- | The type of notification that AWS sends to a subscriber.
[$sel:subscriptionType:Subscriber'] :: Subscriber -> SubscriptionType

-- | The address that AWS sends budget notifications to, either an SNS
--   topic or an email.
--   
--   When you create a subscriber, the value of <tt>Address</tt> can't
--   contain line breaks.
[$sel:address:Subscriber'] :: Subscriber -> Sensitive Text

-- | Create a value of <a>Subscriber</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionType:Subscriber'</a>,
--   <a>subscriber_subscriptionType</a> - The type of notification that AWS
--   sends to a subscriber.
--   
--   <a>$sel:address:Subscriber'</a>, <a>subscriber_address</a> - The
--   address that AWS sends budget notifications to, either an SNS topic or
--   an email.
--   
--   When you create a subscriber, the value of <tt>Address</tt> can't
--   contain line breaks.
newSubscriber :: SubscriptionType -> Text -> Subscriber

-- | The type of notification that AWS sends to a subscriber.
subscriber_subscriptionType :: Lens' Subscriber SubscriptionType

-- | The address that AWS sends budget notifications to, either an SNS
--   topic or an email.
--   
--   When you create a subscriber, the value of <tt>Address</tt> can't
--   contain line breaks.
subscriber_address :: Lens' Subscriber Text
instance GHC.Generics.Generic Network.AWS.Budgets.Types.Subscriber.Subscriber
instance GHC.Show.Show Network.AWS.Budgets.Types.Subscriber.Subscriber
instance GHC.Classes.Eq Network.AWS.Budgets.Types.Subscriber.Subscriber
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.Subscriber.Subscriber
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.Subscriber.Subscriber
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.Subscriber.Subscriber
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.Subscriber.Subscriber


module Network.AWS.Budgets.Types.ThresholdType

-- | The type of threshold for a notification.
newtype ThresholdType
ThresholdType' :: Text -> ThresholdType
[fromThresholdType] :: ThresholdType -> Text
pattern ThresholdType_ABSOLUTE_VALUE :: ThresholdType
pattern ThresholdType_PERCENTAGE :: ThresholdType
instance Network.AWS.Data.XML.ToXML Network.AWS.Budgets.Types.ThresholdType.ThresholdType
instance Network.AWS.Data.XML.FromXML Network.AWS.Budgets.Types.ThresholdType.ThresholdType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Budgets.Types.ThresholdType.ThresholdType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.ThresholdType.ThresholdType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Budgets.Types.ThresholdType.ThresholdType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.ThresholdType.ThresholdType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.Types.ThresholdType.ThresholdType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Budgets.Types.ThresholdType.ThresholdType
instance Network.AWS.Data.Log.ToLog Network.AWS.Budgets.Types.ThresholdType.ThresholdType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Budgets.Types.ThresholdType.ThresholdType
instance Network.AWS.Data.Text.ToText Network.AWS.Budgets.Types.ThresholdType.ThresholdType
instance Network.AWS.Data.Text.FromText Network.AWS.Budgets.Types.ThresholdType.ThresholdType
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.ThresholdType.ThresholdType
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.ThresholdType.ThresholdType
instance GHC.Generics.Generic Network.AWS.Budgets.Types.ThresholdType.ThresholdType
instance GHC.Classes.Ord Network.AWS.Budgets.Types.ThresholdType.ThresholdType
instance GHC.Classes.Eq Network.AWS.Budgets.Types.ThresholdType.ThresholdType
instance GHC.Read.Read Network.AWS.Budgets.Types.ThresholdType.ThresholdType
instance GHC.Show.Show Network.AWS.Budgets.Types.ThresholdType.ThresholdType


module Network.AWS.Budgets.Types.Notification

-- | A notification that is associated with a budget. A budget can have up
--   to ten notifications.
--   
--   Each notification must have at least one subscriber. A notification
--   can have one SNS subscriber and up to 10 email subscribers, for a
--   total of 11 subscribers.
--   
--   For example, if you have a budget for 200 dollars and you want to be
--   notified when you go over 160 dollars, create a notification with the
--   following parameters:
--   
--   <ul>
--   <li>A notificationType of <tt>ACTUAL</tt></li>
--   <li>A <tt>thresholdType</tt> of <tt>PERCENTAGE</tt></li>
--   <li>A <tt>comparisonOperator</tt> of <tt>GREATER_THAN</tt></li>
--   <li>A notification <tt>threshold</tt> of <tt>80</tt></li>
--   </ul>
--   
--   <i>See:</i> <a>newNotification</a> smart constructor.
data Notification
Notification' :: Maybe NotificationState -> Maybe ThresholdType -> NotificationType -> ComparisonOperator -> Double -> Notification

-- | Whether this notification is in alarm. If a budget notification is in
--   the <tt>ALARM</tt> state, you have passed the set threshold for the
--   budget.
[$sel:notificationState:Notification'] :: Notification -> Maybe NotificationState

-- | The type of threshold for a notification. For <tt>ABSOLUTE_VALUE</tt>
--   thresholds, AWS notifies you when you go over or are forecasted to go
--   over your total cost threshold. For <tt>PERCENTAGE</tt> thresholds,
--   AWS notifies you when you go over or are forecasted to go over a
--   certain percentage of your forecasted spend. For example, if you have
--   a budget for 200 dollars and you have a <tt>PERCENTAGE</tt> threshold
--   of 80%, AWS notifies you when you go over 160 dollars.
[$sel:thresholdType:Notification'] :: Notification -> Maybe ThresholdType

-- | Whether the notification is for how much you have spent
--   (<tt>ACTUAL</tt>) or for how much you're forecasted to spend
--   (<tt>FORECASTED</tt>).
[$sel:notificationType:Notification'] :: Notification -> NotificationType

-- | The comparison that is used for this notification.
[$sel:comparisonOperator:Notification'] :: Notification -> ComparisonOperator

-- | The threshold that is associated with a notification. Thresholds are
--   always a percentage, and many customers find value being alerted
--   between 50% - 200% of the budgeted amount. The maximum limit for your
--   threshold is 1,000,000% above the budgeted amount.
[$sel:threshold:Notification'] :: Notification -> Double

-- | Create a value of <a>Notification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationState:Notification'</a>,
--   <a>notification_notificationState</a> - Whether this notification is
--   in alarm. If a budget notification is in the <tt>ALARM</tt> state, you
--   have passed the set threshold for the budget.
--   
--   <a>$sel:thresholdType:Notification'</a>,
--   <a>notification_thresholdType</a> - The type of threshold for a
--   notification. For <tt>ABSOLUTE_VALUE</tt> thresholds, AWS notifies you
--   when you go over or are forecasted to go over your total cost
--   threshold. For <tt>PERCENTAGE</tt> thresholds, AWS notifies you when
--   you go over or are forecasted to go over a certain percentage of your
--   forecasted spend. For example, if you have a budget for 200 dollars
--   and you have a <tt>PERCENTAGE</tt> threshold of 80%, AWS notifies you
--   when you go over 160 dollars.
--   
--   <a>$sel:notificationType:Notification'</a>,
--   <a>notification_notificationType</a> - Whether the notification is for
--   how much you have spent (<tt>ACTUAL</tt>) or for how much you're
--   forecasted to spend (<tt>FORECASTED</tt>).
--   
--   <a>$sel:comparisonOperator:Notification'</a>,
--   <a>notification_comparisonOperator</a> - The comparison that is used
--   for this notification.
--   
--   <a>$sel:threshold:Notification'</a>, <a>notification_threshold</a> -
--   The threshold that is associated with a notification. Thresholds are
--   always a percentage, and many customers find value being alerted
--   between 50% - 200% of the budgeted amount. The maximum limit for your
--   threshold is 1,000,000% above the budgeted amount.
newNotification :: NotificationType -> ComparisonOperator -> Double -> Notification

-- | Whether this notification is in alarm. If a budget notification is in
--   the <tt>ALARM</tt> state, you have passed the set threshold for the
--   budget.
notification_notificationState :: Lens' Notification (Maybe NotificationState)

-- | The type of threshold for a notification. For <tt>ABSOLUTE_VALUE</tt>
--   thresholds, AWS notifies you when you go over or are forecasted to go
--   over your total cost threshold. For <tt>PERCENTAGE</tt> thresholds,
--   AWS notifies you when you go over or are forecasted to go over a
--   certain percentage of your forecasted spend. For example, if you have
--   a budget for 200 dollars and you have a <tt>PERCENTAGE</tt> threshold
--   of 80%, AWS notifies you when you go over 160 dollars.
notification_thresholdType :: Lens' Notification (Maybe ThresholdType)

-- | Whether the notification is for how much you have spent
--   (<tt>ACTUAL</tt>) or for how much you're forecasted to spend
--   (<tt>FORECASTED</tt>).
notification_notificationType :: Lens' Notification NotificationType

-- | The comparison that is used for this notification.
notification_comparisonOperator :: Lens' Notification ComparisonOperator

-- | The threshold that is associated with a notification. Thresholds are
--   always a percentage, and many customers find value being alerted
--   between 50% - 200% of the budgeted amount. The maximum limit for your
--   threshold is 1,000,000% above the budgeted amount.
notification_threshold :: Lens' Notification Double
instance GHC.Generics.Generic Network.AWS.Budgets.Types.Notification.Notification
instance GHC.Show.Show Network.AWS.Budgets.Types.Notification.Notification
instance GHC.Read.Read Network.AWS.Budgets.Types.Notification.Notification
instance GHC.Classes.Eq Network.AWS.Budgets.Types.Notification.Notification
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.Notification.Notification
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.Notification.Notification
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.Notification.Notification
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.Notification.Notification


module Network.AWS.Budgets.Types.NotificationWithSubscribers

-- | A notification with subscribers. A notification can have one SNS
--   subscriber and up to 10 email subscribers, for a total of 11
--   subscribers.
--   
--   <i>See:</i> <a>newNotificationWithSubscribers</a> smart constructor.
data NotificationWithSubscribers
NotificationWithSubscribers' :: Notification -> NonEmpty Subscriber -> NotificationWithSubscribers

-- | The notification that is associated with a budget.
[$sel:notification:NotificationWithSubscribers'] :: NotificationWithSubscribers -> Notification

-- | A list of subscribers who are subscribed to this notification.
[$sel:subscribers:NotificationWithSubscribers'] :: NotificationWithSubscribers -> NonEmpty Subscriber

-- | Create a value of <a>NotificationWithSubscribers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notification:NotificationWithSubscribers'</a>,
--   <a>notificationWithSubscribers_notification</a> - The notification
--   that is associated with a budget.
--   
--   <a>$sel:subscribers:NotificationWithSubscribers'</a>,
--   <a>notificationWithSubscribers_subscribers</a> - A list of subscribers
--   who are subscribed to this notification.
newNotificationWithSubscribers :: Notification -> NonEmpty Subscriber -> NotificationWithSubscribers

-- | The notification that is associated with a budget.
notificationWithSubscribers_notification :: Lens' NotificationWithSubscribers Notification

-- | A list of subscribers who are subscribed to this notification.
notificationWithSubscribers_subscribers :: Lens' NotificationWithSubscribers (NonEmpty Subscriber)
instance GHC.Generics.Generic Network.AWS.Budgets.Types.NotificationWithSubscribers.NotificationWithSubscribers
instance GHC.Show.Show Network.AWS.Budgets.Types.NotificationWithSubscribers.NotificationWithSubscribers
instance GHC.Classes.Eq Network.AWS.Budgets.Types.NotificationWithSubscribers.NotificationWithSubscribers
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.NotificationWithSubscribers.NotificationWithSubscribers
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.NotificationWithSubscribers.NotificationWithSubscribers
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.NotificationWithSubscribers.NotificationWithSubscribers


module Network.AWS.Budgets.Types.ActionThreshold

-- | The trigger threshold of the action.
--   
--   <i>See:</i> <a>newActionThreshold</a> smart constructor.
data ActionThreshold
ActionThreshold' :: Double -> ThresholdType -> ActionThreshold
[$sel:actionThresholdValue:ActionThreshold'] :: ActionThreshold -> Double
[$sel:actionThresholdType:ActionThreshold'] :: ActionThreshold -> ThresholdType

-- | Create a value of <a>ActionThreshold</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionThresholdValue:ActionThreshold'</a>,
--   <a>actionThreshold_actionThresholdValue</a> - Undocumented member.
--   
--   <a>$sel:actionThresholdType:ActionThreshold'</a>,
--   <a>actionThreshold_actionThresholdType</a> - Undocumented member.
newActionThreshold :: Double -> ThresholdType -> ActionThreshold

-- | Undocumented member.
actionThreshold_actionThresholdValue :: Lens' ActionThreshold Double

-- | Undocumented member.
actionThreshold_actionThresholdType :: Lens' ActionThreshold ThresholdType
instance GHC.Generics.Generic Network.AWS.Budgets.Types.ActionThreshold.ActionThreshold
instance GHC.Show.Show Network.AWS.Budgets.Types.ActionThreshold.ActionThreshold
instance GHC.Read.Read Network.AWS.Budgets.Types.ActionThreshold.ActionThreshold
instance GHC.Classes.Eq Network.AWS.Budgets.Types.ActionThreshold.ActionThreshold
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.ActionThreshold.ActionThreshold
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.ActionThreshold.ActionThreshold
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.ActionThreshold.ActionThreshold
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.ActionThreshold.ActionThreshold


module Network.AWS.Budgets.Types.Action

-- | A budget action resource.
--   
--   <i>See:</i> <a>newAction</a> smart constructor.
data Action
Action' :: Text -> Text -> NotificationType -> ActionType -> ActionThreshold -> Definition -> Text -> ApprovalModel -> ActionStatus -> NonEmpty Subscriber -> Action

-- | A system-generated universally unique identifier (UUID) for the
--   action.
[$sel:actionId:Action'] :: Action -> Text
[$sel:budgetName:Action'] :: Action -> Text
[$sel:notificationType:Action'] :: Action -> NotificationType

-- | The type of action. This defines the type of tasks that can be carried
--   out by this action. This field also determines the format for
--   definition.
[$sel:actionType:Action'] :: Action -> ActionType

-- | The trigger threshold of the action.
[$sel:actionThreshold:Action'] :: Action -> ActionThreshold

-- | Where you specify all of the type-specific parameters.
[$sel:definition:Action'] :: Action -> Definition

-- | The role passed for action execution and reversion. Roles and actions
--   must be in the same account.
[$sel:executionRoleArn:Action'] :: Action -> Text

-- | This specifies if the action needs manual or automatic approval.
[$sel:approvalModel:Action'] :: Action -> ApprovalModel

-- | The status of action.
[$sel:status:Action'] :: Action -> ActionStatus
[$sel:subscribers:Action'] :: Action -> NonEmpty Subscriber

-- | Create a value of <a>Action</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionId:Action'</a>, <a>action_actionId</a> - A
--   system-generated universally unique identifier (UUID) for the action.
--   
--   <a>$sel:budgetName:Action'</a>, <a>action_budgetName</a> -
--   Undocumented member.
--   
--   <a>$sel:notificationType:Action'</a>, <a>action_notificationType</a> -
--   Undocumented member.
--   
--   <a>$sel:actionType:Action'</a>, <a>action_actionType</a> - The type of
--   action. This defines the type of tasks that can be carried out by this
--   action. This field also determines the format for definition.
--   
--   <a>$sel:actionThreshold:Action'</a>, <a>action_actionThreshold</a> -
--   The trigger threshold of the action.
--   
--   <a>$sel:definition:Action'</a>, <a>action_definition</a> - Where you
--   specify all of the type-specific parameters.
--   
--   <a>$sel:executionRoleArn:Action'</a>, <a>action_executionRoleArn</a> -
--   The role passed for action execution and reversion. Roles and actions
--   must be in the same account.
--   
--   <a>$sel:approvalModel:Action'</a>, <a>action_approvalModel</a> - This
--   specifies if the action needs manual or automatic approval.
--   
--   <a>$sel:status:Action'</a>, <a>action_status</a> - The status of
--   action.
--   
--   <a>$sel:subscribers:Action'</a>, <a>action_subscribers</a> -
--   Undocumented member.
newAction :: Text -> Text -> NotificationType -> ActionType -> ActionThreshold -> Definition -> Text -> ApprovalModel -> ActionStatus -> NonEmpty Subscriber -> Action

-- | A system-generated universally unique identifier (UUID) for the
--   action.
action_actionId :: Lens' Action Text

-- | Undocumented member.
action_budgetName :: Lens' Action Text

-- | Undocumented member.
action_notificationType :: Lens' Action NotificationType

-- | The type of action. This defines the type of tasks that can be carried
--   out by this action. This field also determines the format for
--   definition.
action_actionType :: Lens' Action ActionType

-- | The trigger threshold of the action.
action_actionThreshold :: Lens' Action ActionThreshold

-- | Where you specify all of the type-specific parameters.
action_definition :: Lens' Action Definition

-- | The role passed for action execution and reversion. Roles and actions
--   must be in the same account.
action_executionRoleArn :: Lens' Action Text

-- | This specifies if the action needs manual or automatic approval.
action_approvalModel :: Lens' Action ApprovalModel

-- | The status of action.
action_status :: Lens' Action ActionStatus

-- | Undocumented member.
action_subscribers :: Lens' Action (NonEmpty Subscriber)
instance GHC.Generics.Generic Network.AWS.Budgets.Types.Action.Action
instance GHC.Show.Show Network.AWS.Budgets.Types.Action.Action
instance GHC.Classes.Eq Network.AWS.Budgets.Types.Action.Action
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.Action.Action
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.Action.Action
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.Action.Action


module Network.AWS.Budgets.Types.ActionHistoryDetails

-- | The description of details of the event.
--   
--   <i>See:</i> <a>newActionHistoryDetails</a> smart constructor.
data ActionHistoryDetails
ActionHistoryDetails' :: Text -> Action -> ActionHistoryDetails
[$sel:message:ActionHistoryDetails'] :: ActionHistoryDetails -> Text

-- | The budget action resource.
[$sel:action:ActionHistoryDetails'] :: ActionHistoryDetails -> Action

-- | Create a value of <a>ActionHistoryDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:ActionHistoryDetails'</a>,
--   <a>actionHistoryDetails_message</a> - Undocumented member.
--   
--   <a>$sel:action:ActionHistoryDetails'</a>,
--   <a>actionHistoryDetails_action</a> - The budget action resource.
newActionHistoryDetails :: Text -> Action -> ActionHistoryDetails

-- | Undocumented member.
actionHistoryDetails_message :: Lens' ActionHistoryDetails Text

-- | The budget action resource.
actionHistoryDetails_action :: Lens' ActionHistoryDetails Action
instance GHC.Generics.Generic Network.AWS.Budgets.Types.ActionHistoryDetails.ActionHistoryDetails
instance GHC.Show.Show Network.AWS.Budgets.Types.ActionHistoryDetails.ActionHistoryDetails
instance GHC.Classes.Eq Network.AWS.Budgets.Types.ActionHistoryDetails.ActionHistoryDetails
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.ActionHistoryDetails.ActionHistoryDetails
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.ActionHistoryDetails.ActionHistoryDetails
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.ActionHistoryDetails.ActionHistoryDetails


module Network.AWS.Budgets.Types.ActionHistory

-- | The historical records for a budget action.
--   
--   <i>See:</i> <a>newActionHistory</a> smart constructor.
data ActionHistory
ActionHistory' :: POSIX -> ActionStatus -> EventType -> ActionHistoryDetails -> ActionHistory
[$sel:timestamp:ActionHistory'] :: ActionHistory -> POSIX

-- | The status of action at the time of the event.
[$sel:status:ActionHistory'] :: ActionHistory -> ActionStatus

-- | This distinguishes between whether the events are triggered by the
--   user or generated by the system.
[$sel:eventType:ActionHistory'] :: ActionHistory -> EventType

-- | The description of details of the event.
[$sel:actionHistoryDetails:ActionHistory'] :: ActionHistory -> ActionHistoryDetails

-- | Create a value of <a>ActionHistory</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamp:ActionHistory'</a>, <a>actionHistory_timestamp</a> -
--   Undocumented member.
--   
--   <a>$sel:status:ActionHistory'</a>, <a>actionHistory_status</a> - The
--   status of action at the time of the event.
--   
--   <a>$sel:eventType:ActionHistory'</a>, <a>actionHistory_eventType</a> -
--   This distinguishes between whether the events are triggered by the
--   user or generated by the system.
--   
--   <a>$sel:actionHistoryDetails:ActionHistory'</a>,
--   <a>actionHistory_actionHistoryDetails</a> - The description of details
--   of the event.
newActionHistory :: UTCTime -> ActionStatus -> EventType -> ActionHistoryDetails -> ActionHistory

-- | Undocumented member.
actionHistory_timestamp :: Lens' ActionHistory UTCTime

-- | The status of action at the time of the event.
actionHistory_status :: Lens' ActionHistory ActionStatus

-- | This distinguishes between whether the events are triggered by the
--   user or generated by the system.
actionHistory_eventType :: Lens' ActionHistory EventType

-- | The description of details of the event.
actionHistory_actionHistoryDetails :: Lens' ActionHistory ActionHistoryDetails
instance GHC.Generics.Generic Network.AWS.Budgets.Types.ActionHistory.ActionHistory
instance GHC.Show.Show Network.AWS.Budgets.Types.ActionHistory.ActionHistory
instance GHC.Classes.Eq Network.AWS.Budgets.Types.ActionHistory.ActionHistory
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.ActionHistory.ActionHistory
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.ActionHistory.ActionHistory
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.ActionHistory.ActionHistory


module Network.AWS.Budgets.Types.TimePeriod

-- | The period of time that is covered by a budget. The period has a start
--   date and an end date. The start date must come before the end date.
--   There are no restrictions on the end date.
--   
--   <i>See:</i> <a>newTimePeriod</a> smart constructor.
data TimePeriod
TimePeriod' :: Maybe POSIX -> Maybe POSIX -> TimePeriod

-- | The end date for a budget. If you didn't specify an end date, AWS set
--   your end date to <tt>06/15/87 00:00 UTC</tt>. The defaults are the
--   same for the AWS Billing and Cost Management console and the API.
--   
--   After the end date, AWS deletes the budget and all associated
--   notifications and subscribers. You can change your end date with the
--   <tt>UpdateBudget</tt> operation.
[$sel:end:TimePeriod'] :: TimePeriod -> Maybe POSIX

-- | The start date for a budget. If you created your budget and didn't
--   specify a start date, AWS defaults to the start of your chosen time
--   period (DAILY, MONTHLY, QUARTERLY, or ANNUALLY). For example, if you
--   created your budget on January 24, 2018, chose <tt>DAILY</tt>, and
--   didn't set a start date, AWS set your start date to <tt>01/24/18 00:00
--   UTC</tt>. If you chose <tt>MONTHLY</tt>, AWS set your start date to
--   <tt>01/01/18 00:00 UTC</tt>. The defaults are the same for the AWS
--   Billing and Cost Management console and the API.
--   
--   You can change your start date with the <tt>UpdateBudget</tt>
--   operation.
[$sel:start:TimePeriod'] :: TimePeriod -> Maybe POSIX

-- | Create a value of <a>TimePeriod</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:end:TimePeriod'</a>, <a>timePeriod_end</a> - The end date for
--   a budget. If you didn't specify an end date, AWS set your end date to
--   <tt>06/15/87 00:00 UTC</tt>. The defaults are the same for the AWS
--   Billing and Cost Management console and the API.
--   
--   After the end date, AWS deletes the budget and all associated
--   notifications and subscribers. You can change your end date with the
--   <tt>UpdateBudget</tt> operation.
--   
--   <a>$sel:start:TimePeriod'</a>, <a>timePeriod_start</a> - The start
--   date for a budget. If you created your budget and didn't specify a
--   start date, AWS defaults to the start of your chosen time period
--   (DAILY, MONTHLY, QUARTERLY, or ANNUALLY). For example, if you created
--   your budget on January 24, 2018, chose <tt>DAILY</tt>, and didn't set
--   a start date, AWS set your start date to <tt>01/24/18 00:00 UTC</tt>.
--   If you chose <tt>MONTHLY</tt>, AWS set your start date to <tt>01/01/18
--   00:00 UTC</tt>. The defaults are the same for the AWS Billing and Cost
--   Management console and the API.
--   
--   You can change your start date with the <tt>UpdateBudget</tt>
--   operation.
newTimePeriod :: TimePeriod

-- | The end date for a budget. If you didn't specify an end date, AWS set
--   your end date to <tt>06/15/87 00:00 UTC</tt>. The defaults are the
--   same for the AWS Billing and Cost Management console and the API.
--   
--   After the end date, AWS deletes the budget and all associated
--   notifications and subscribers. You can change your end date with the
--   <tt>UpdateBudget</tt> operation.
timePeriod_end :: Lens' TimePeriod (Maybe UTCTime)

-- | The start date for a budget. If you created your budget and didn't
--   specify a start date, AWS defaults to the start of your chosen time
--   period (DAILY, MONTHLY, QUARTERLY, or ANNUALLY). For example, if you
--   created your budget on January 24, 2018, chose <tt>DAILY</tt>, and
--   didn't set a start date, AWS set your start date to <tt>01/24/18 00:00
--   UTC</tt>. If you chose <tt>MONTHLY</tt>, AWS set your start date to
--   <tt>01/01/18 00:00 UTC</tt>. The defaults are the same for the AWS
--   Billing and Cost Management console and the API.
--   
--   You can change your start date with the <tt>UpdateBudget</tt>
--   operation.
timePeriod_start :: Lens' TimePeriod (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.Budgets.Types.TimePeriod.TimePeriod
instance GHC.Show.Show Network.AWS.Budgets.Types.TimePeriod.TimePeriod
instance GHC.Read.Read Network.AWS.Budgets.Types.TimePeriod.TimePeriod
instance GHC.Classes.Eq Network.AWS.Budgets.Types.TimePeriod.TimePeriod
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.TimePeriod.TimePeriod
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.TimePeriod.TimePeriod
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.TimePeriod.TimePeriod
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.TimePeriod.TimePeriod


module Network.AWS.Budgets.Types.BudgetedAndActualAmounts

-- | The amount of cost or usage that you created the budget for, compared
--   to your actual costs or usage.
--   
--   <i>See:</i> <a>newBudgetedAndActualAmounts</a> smart constructor.
data BudgetedAndActualAmounts
BudgetedAndActualAmounts' :: Maybe TimePeriod -> Maybe Spend -> Maybe Spend -> BudgetedAndActualAmounts

-- | The time period covered by this budget comparison.
[$sel:timePeriod:BudgetedAndActualAmounts'] :: BudgetedAndActualAmounts -> Maybe TimePeriod

-- | The amount of cost or usage that you created the budget for.
[$sel:budgetedAmount:BudgetedAndActualAmounts'] :: BudgetedAndActualAmounts -> Maybe Spend

-- | Your actual costs or usage for a budget period.
[$sel:actualAmount:BudgetedAndActualAmounts'] :: BudgetedAndActualAmounts -> Maybe Spend

-- | Create a value of <a>BudgetedAndActualAmounts</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timePeriod:BudgetedAndActualAmounts'</a>,
--   <a>budgetedAndActualAmounts_timePeriod</a> - The time period covered
--   by this budget comparison.
--   
--   <a>$sel:budgetedAmount:BudgetedAndActualAmounts'</a>,
--   <a>budgetedAndActualAmounts_budgetedAmount</a> - The amount of cost or
--   usage that you created the budget for.
--   
--   <a>$sel:actualAmount:BudgetedAndActualAmounts'</a>,
--   <a>budgetedAndActualAmounts_actualAmount</a> - Your actual costs or
--   usage for a budget period.
newBudgetedAndActualAmounts :: BudgetedAndActualAmounts

-- | The time period covered by this budget comparison.
budgetedAndActualAmounts_timePeriod :: Lens' BudgetedAndActualAmounts (Maybe TimePeriod)

-- | The amount of cost or usage that you created the budget for.
budgetedAndActualAmounts_budgetedAmount :: Lens' BudgetedAndActualAmounts (Maybe Spend)

-- | Your actual costs or usage for a budget period.
budgetedAndActualAmounts_actualAmount :: Lens' BudgetedAndActualAmounts (Maybe Spend)
instance GHC.Generics.Generic Network.AWS.Budgets.Types.BudgetedAndActualAmounts.BudgetedAndActualAmounts
instance GHC.Show.Show Network.AWS.Budgets.Types.BudgetedAndActualAmounts.BudgetedAndActualAmounts
instance GHC.Read.Read Network.AWS.Budgets.Types.BudgetedAndActualAmounts.BudgetedAndActualAmounts
instance GHC.Classes.Eq Network.AWS.Budgets.Types.BudgetedAndActualAmounts.BudgetedAndActualAmounts
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.BudgetedAndActualAmounts.BudgetedAndActualAmounts
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.BudgetedAndActualAmounts.BudgetedAndActualAmounts
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.BudgetedAndActualAmounts.BudgetedAndActualAmounts


module Network.AWS.Budgets.Types.TimeUnit

-- | The time unit of the budget, such as MONTHLY or QUARTERLY.
newtype TimeUnit
TimeUnit' :: Text -> TimeUnit
[fromTimeUnit] :: TimeUnit -> Text
pattern TimeUnit_ANNUALLY :: TimeUnit
pattern TimeUnit_DAILY :: TimeUnit
pattern TimeUnit_MONTHLY :: TimeUnit
pattern TimeUnit_QUARTERLY :: TimeUnit
instance Network.AWS.Data.XML.ToXML Network.AWS.Budgets.Types.TimeUnit.TimeUnit
instance Network.AWS.Data.XML.FromXML Network.AWS.Budgets.Types.TimeUnit.TimeUnit
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Budgets.Types.TimeUnit.TimeUnit
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.TimeUnit.TimeUnit
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Budgets.Types.TimeUnit.TimeUnit
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.TimeUnit.TimeUnit
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.Types.TimeUnit.TimeUnit
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Budgets.Types.TimeUnit.TimeUnit
instance Network.AWS.Data.Log.ToLog Network.AWS.Budgets.Types.TimeUnit.TimeUnit
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Budgets.Types.TimeUnit.TimeUnit
instance Network.AWS.Data.Text.ToText Network.AWS.Budgets.Types.TimeUnit.TimeUnit
instance Network.AWS.Data.Text.FromText Network.AWS.Budgets.Types.TimeUnit.TimeUnit
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.TimeUnit.TimeUnit
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.TimeUnit.TimeUnit
instance GHC.Generics.Generic Network.AWS.Budgets.Types.TimeUnit.TimeUnit
instance GHC.Classes.Ord Network.AWS.Budgets.Types.TimeUnit.TimeUnit
instance GHC.Classes.Eq Network.AWS.Budgets.Types.TimeUnit.TimeUnit
instance GHC.Read.Read Network.AWS.Budgets.Types.TimeUnit.TimeUnit
instance GHC.Show.Show Network.AWS.Budgets.Types.TimeUnit.TimeUnit


module Network.AWS.Budgets.Types.BudgetPerformanceHistory

-- | A history of the state of a budget at the end of the budget's
--   specified time period.
--   
--   <i>See:</i> <a>newBudgetPerformanceHistory</a> smart constructor.
data BudgetPerformanceHistory
BudgetPerformanceHistory' :: Maybe [BudgetedAndActualAmounts] -> Maybe TimeUnit -> Maybe (HashMap Text [Text]) -> Maybe CostTypes -> Maybe BudgetType -> Maybe Text -> BudgetPerformanceHistory

-- | A list of amounts of cost or usage that you created budgets for,
--   compared to your actual costs or usage.
[$sel:budgetedAndActualAmountsList:BudgetPerformanceHistory'] :: BudgetPerformanceHistory -> Maybe [BudgetedAndActualAmounts]
[$sel:timeUnit:BudgetPerformanceHistory'] :: BudgetPerformanceHistory -> Maybe TimeUnit

-- | The history of the cost filters for a budget during the specified time
--   period.
[$sel:costFilters:BudgetPerformanceHistory'] :: BudgetPerformanceHistory -> Maybe (HashMap Text [Text])

-- | The history of the cost types for a budget during the specified time
--   period.
[$sel:costTypes:BudgetPerformanceHistory'] :: BudgetPerformanceHistory -> Maybe CostTypes
[$sel:budgetType:BudgetPerformanceHistory'] :: BudgetPerformanceHistory -> Maybe BudgetType
[$sel:budgetName:BudgetPerformanceHistory'] :: BudgetPerformanceHistory -> Maybe Text

-- | Create a value of <a>BudgetPerformanceHistory</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:budgetedAndActualAmountsList:BudgetPerformanceHistory'</a>,
--   <a>budgetPerformanceHistory_budgetedAndActualAmountsList</a> - A list
--   of amounts of cost or usage that you created budgets for, compared to
--   your actual costs or usage.
--   
--   <a>$sel:timeUnit:BudgetPerformanceHistory'</a>,
--   <a>budgetPerformanceHistory_timeUnit</a> - Undocumented member.
--   
--   <a>$sel:costFilters:BudgetPerformanceHistory'</a>,
--   <a>budgetPerformanceHistory_costFilters</a> - The history of the cost
--   filters for a budget during the specified time period.
--   
--   <a>$sel:costTypes:BudgetPerformanceHistory'</a>,
--   <a>budgetPerformanceHistory_costTypes</a> - The history of the cost
--   types for a budget during the specified time period.
--   
--   <a>$sel:budgetType:BudgetPerformanceHistory'</a>,
--   <a>budgetPerformanceHistory_budgetType</a> - Undocumented member.
--   
--   <a>$sel:budgetName:BudgetPerformanceHistory'</a>,
--   <a>budgetPerformanceHistory_budgetName</a> - Undocumented member.
newBudgetPerformanceHistory :: BudgetPerformanceHistory

-- | A list of amounts of cost or usage that you created budgets for,
--   compared to your actual costs or usage.
budgetPerformanceHistory_budgetedAndActualAmountsList :: Lens' BudgetPerformanceHistory (Maybe [BudgetedAndActualAmounts])

-- | Undocumented member.
budgetPerformanceHistory_timeUnit :: Lens' BudgetPerformanceHistory (Maybe TimeUnit)

-- | The history of the cost filters for a budget during the specified time
--   period.
budgetPerformanceHistory_costFilters :: Lens' BudgetPerformanceHistory (Maybe (HashMap Text [Text]))

-- | The history of the cost types for a budget during the specified time
--   period.
budgetPerformanceHistory_costTypes :: Lens' BudgetPerformanceHistory (Maybe CostTypes)

-- | Undocumented member.
budgetPerformanceHistory_budgetType :: Lens' BudgetPerformanceHistory (Maybe BudgetType)

-- | Undocumented member.
budgetPerformanceHistory_budgetName :: Lens' BudgetPerformanceHistory (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Budgets.Types.BudgetPerformanceHistory.BudgetPerformanceHistory
instance GHC.Show.Show Network.AWS.Budgets.Types.BudgetPerformanceHistory.BudgetPerformanceHistory
instance GHC.Read.Read Network.AWS.Budgets.Types.BudgetPerformanceHistory.BudgetPerformanceHistory
instance GHC.Classes.Eq Network.AWS.Budgets.Types.BudgetPerformanceHistory.BudgetPerformanceHistory
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.BudgetPerformanceHistory.BudgetPerformanceHistory
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.BudgetPerformanceHistory.BudgetPerformanceHistory
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.BudgetPerformanceHistory.BudgetPerformanceHistory


module Network.AWS.Budgets.Types.Budget

-- | Represents the output of the <tt>CreateBudget</tt> operation. The
--   content consists of the detailed metadata and data file information,
--   and the current status of the <tt>budget</tt> object.
--   
--   This is the ARN pattern for a budget:
--   
--   <pre>
--   arn:aws:budgets::AccountId:budget/budgetName
--   </pre>
--   
--   <i>See:</i> <a>newBudget</a> smart constructor.
data Budget
Budget' :: Maybe TimePeriod -> Maybe (HashMap Text [Text]) -> Maybe CostTypes -> Maybe (HashMap Text Spend) -> Maybe CalculatedSpend -> Maybe Spend -> Maybe POSIX -> Text -> TimeUnit -> BudgetType -> Budget

-- | The period of time that is covered by a budget. The period has a start
--   date and an end date. The start date must come before the end date.
--   The end date must come before <tt>06/15/87 00:00 UTC</tt>.
--   
--   If you create your budget and don't specify a start date, AWS defaults
--   to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or
--   ANNUALLY). For example, if you created your budget on January 24,
--   2018, chose <tt>DAILY</tt>, and didn't set a start date, AWS set your
--   start date to <tt>01/24/18 00:00 UTC</tt>. If you chose
--   <tt>MONTHLY</tt>, AWS set your start date to <tt>01/01/18 00:00
--   UTC</tt>. If you didn't specify an end date, AWS set your end date to
--   <tt>06/15/87 00:00 UTC</tt>. The defaults are the same for the AWS
--   Billing and Cost Management console and the API.
--   
--   You can change either date with the <tt>UpdateBudget</tt> operation.
--   
--   After the end date, AWS deletes the budget and all associated
--   notifications and subscribers.
[$sel:timePeriod:Budget'] :: Budget -> Maybe TimePeriod

-- | The cost filters, such as service or tag, that are applied to a
--   budget.
--   
--   AWS Budgets supports the following services as a filter for RI
--   budgets:
--   
--   <ul>
--   <li>Amazon Elastic Compute Cloud - Compute</li>
--   <li>Amazon Redshift</li>
--   <li>Amazon Relational Database Service</li>
--   <li>Amazon ElastiCache</li>
--   <li>Amazon Elasticsearch Service</li>
--   </ul>
[$sel:costFilters:Budget'] :: Budget -> Maybe (HashMap Text [Text])

-- | The types of costs that are included in this <tt>COST</tt> budget.
--   
--   <tt>USAGE</tt>, <tt>RI_UTILIZATION</tt>, <tt>RI_COVERAGE</tt>,
--   <tt>SAVINGS_PLANS_UTILIZATION</tt>, and
--   <tt>SAVINGS_PLANS_COVERAGE</tt> budgets do not have
--   <tt>CostTypes</tt>.
[$sel:costTypes:Budget'] :: Budget -> Maybe CostTypes

-- | A map containing multiple <tt>BudgetLimit</tt>, including current or
--   future limits.
--   
--   <tt>PlannedBudgetLimits</tt> is available for cost or usage budget and
--   supports monthly and quarterly <tt>TimeUnit</tt>.
--   
--   For monthly budgets, provide 12 months of <tt>PlannedBudgetLimits</tt>
--   values. This must start from the current month and include the next 11
--   months. The <tt>key</tt> is the start of the month, <tt>UTC</tt> in
--   epoch seconds.
--   
--   For quarterly budgets, provide 4 quarters of
--   <tt>PlannedBudgetLimits</tt> value entries in standard calendar
--   quarter increments. This must start from the current quarter and
--   include the next 3 quarters. The <tt>key</tt> is the start of the
--   quarter, <tt>UTC</tt> in epoch seconds.
--   
--   If the planned budget expires before 12 months for monthly or 4
--   quarters for quarterly, provide the <tt>PlannedBudgetLimits</tt>
--   values only for the remaining periods.
--   
--   If the budget begins at a date in the future, provide
--   <tt>PlannedBudgetLimits</tt> values from the start date of the budget.
--   
--   After all of the <tt>BudgetLimit</tt> values in
--   <tt>PlannedBudgetLimits</tt> are used, the budget continues to use the
--   last limit as the <tt>BudgetLimit</tt>. At that point, the planned
--   budget provides the same experience as a fixed budget.
--   
--   <tt>DescribeBudget</tt> and <tt>DescribeBudgets</tt> response along
--   with <tt>PlannedBudgetLimits</tt> will also contain
--   <tt>BudgetLimit</tt> representing the current month or quarter limit
--   present in <tt>PlannedBudgetLimits</tt>. This only applies to budgets
--   created with <tt>PlannedBudgetLimits</tt>. Budgets created without
--   <tt>PlannedBudgetLimits</tt> will only contain <tt>BudgetLimit</tt>,
--   and no <tt>PlannedBudgetLimits</tt>.
[$sel:plannedBudgetLimits:Budget'] :: Budget -> Maybe (HashMap Text Spend)

-- | The actual and forecasted cost or usage that the budget tracks.
[$sel:calculatedSpend:Budget'] :: Budget -> Maybe CalculatedSpend

-- | The total amount of cost, usage, RI utilization, RI coverage, Savings
--   Plans utilization, or Savings Plans coverage that you want to track
--   with your budget.
--   
--   <tt>BudgetLimit</tt> is required for cost or usage budgets, but
--   optional for RI or Savings Plans utilization or coverage budgets. RI
--   and Savings Plans utilization or coverage budgets default to
--   <tt>100</tt>, which is the only valid value for RI or Savings Plans
--   utilization or coverage budgets. You can't use <tt>BudgetLimit</tt>
--   with <tt>PlannedBudgetLimits</tt> for <tt>CreateBudget</tt> and
--   <tt>UpdateBudget</tt> actions.
[$sel:budgetLimit:Budget'] :: Budget -> Maybe Spend

-- | The last time that you updated this budget.
[$sel:lastUpdatedTime:Budget'] :: Budget -> Maybe POSIX

-- | The name of a budget. The name must be unique within an account. The
--   <tt>:</tt> and <tt>\</tt> characters aren't allowed in
--   <tt>BudgetName</tt>.
[$sel:budgetName:Budget'] :: Budget -> Text

-- | The length of time until a budget resets the actual and forecasted
--   spend.
[$sel:timeUnit:Budget'] :: Budget -> TimeUnit

-- | Whether this budget tracks costs, usage, RI utilization, RI coverage,
--   Savings Plans utilization, or Savings Plans coverage.
[$sel:budgetType:Budget'] :: Budget -> BudgetType

-- | Create a value of <a>Budget</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timePeriod:Budget'</a>, <a>budget_timePeriod</a> - The period
--   of time that is covered by a budget. The period has a start date and
--   an end date. The start date must come before the end date. The end
--   date must come before <tt>06/15/87 00:00 UTC</tt>.
--   
--   If you create your budget and don't specify a start date, AWS defaults
--   to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or
--   ANNUALLY). For example, if you created your budget on January 24,
--   2018, chose <tt>DAILY</tt>, and didn't set a start date, AWS set your
--   start date to <tt>01/24/18 00:00 UTC</tt>. If you chose
--   <tt>MONTHLY</tt>, AWS set your start date to <tt>01/01/18 00:00
--   UTC</tt>. If you didn't specify an end date, AWS set your end date to
--   <tt>06/15/87 00:00 UTC</tt>. The defaults are the same for the AWS
--   Billing and Cost Management console and the API.
--   
--   You can change either date with the <tt>UpdateBudget</tt> operation.
--   
--   After the end date, AWS deletes the budget and all associated
--   notifications and subscribers.
--   
--   <a>$sel:costFilters:Budget'</a>, <a>budget_costFilters</a> - The cost
--   filters, such as service or tag, that are applied to a budget.
--   
--   AWS Budgets supports the following services as a filter for RI
--   budgets:
--   
--   <ul>
--   <li>Amazon Elastic Compute Cloud - Compute</li>
--   <li>Amazon Redshift</li>
--   <li>Amazon Relational Database Service</li>
--   <li>Amazon ElastiCache</li>
--   <li>Amazon Elasticsearch Service</li>
--   </ul>
--   
--   <a>$sel:costTypes:Budget'</a>, <a>budget_costTypes</a> - The types of
--   costs that are included in this <tt>COST</tt> budget.
--   
--   <tt>USAGE</tt>, <tt>RI_UTILIZATION</tt>, <tt>RI_COVERAGE</tt>,
--   <tt>SAVINGS_PLANS_UTILIZATION</tt>, and
--   <tt>SAVINGS_PLANS_COVERAGE</tt> budgets do not have
--   <tt>CostTypes</tt>.
--   
--   <a>$sel:plannedBudgetLimits:Budget'</a>,
--   <a>budget_plannedBudgetLimits</a> - A map containing multiple
--   <tt>BudgetLimit</tt>, including current or future limits.
--   
--   <tt>PlannedBudgetLimits</tt> is available for cost or usage budget and
--   supports monthly and quarterly <tt>TimeUnit</tt>.
--   
--   For monthly budgets, provide 12 months of <tt>PlannedBudgetLimits</tt>
--   values. This must start from the current month and include the next 11
--   months. The <tt>key</tt> is the start of the month, <tt>UTC</tt> in
--   epoch seconds.
--   
--   For quarterly budgets, provide 4 quarters of
--   <tt>PlannedBudgetLimits</tt> value entries in standard calendar
--   quarter increments. This must start from the current quarter and
--   include the next 3 quarters. The <tt>key</tt> is the start of the
--   quarter, <tt>UTC</tt> in epoch seconds.
--   
--   If the planned budget expires before 12 months for monthly or 4
--   quarters for quarterly, provide the <tt>PlannedBudgetLimits</tt>
--   values only for the remaining periods.
--   
--   If the budget begins at a date in the future, provide
--   <tt>PlannedBudgetLimits</tt> values from the start date of the budget.
--   
--   After all of the <tt>BudgetLimit</tt> values in
--   <tt>PlannedBudgetLimits</tt> are used, the budget continues to use the
--   last limit as the <tt>BudgetLimit</tt>. At that point, the planned
--   budget provides the same experience as a fixed budget.
--   
--   <tt>DescribeBudget</tt> and <tt>DescribeBudgets</tt> response along
--   with <tt>PlannedBudgetLimits</tt> will also contain
--   <tt>BudgetLimit</tt> representing the current month or quarter limit
--   present in <tt>PlannedBudgetLimits</tt>. This only applies to budgets
--   created with <tt>PlannedBudgetLimits</tt>. Budgets created without
--   <tt>PlannedBudgetLimits</tt> will only contain <tt>BudgetLimit</tt>,
--   and no <tt>PlannedBudgetLimits</tt>.
--   
--   <a>$sel:calculatedSpend:Budget'</a>, <a>budget_calculatedSpend</a> -
--   The actual and forecasted cost or usage that the budget tracks.
--   
--   <a>$sel:budgetLimit:Budget'</a>, <a>budget_budgetLimit</a> - The total
--   amount of cost, usage, RI utilization, RI coverage, Savings Plans
--   utilization, or Savings Plans coverage that you want to track with
--   your budget.
--   
--   <tt>BudgetLimit</tt> is required for cost or usage budgets, but
--   optional for RI or Savings Plans utilization or coverage budgets. RI
--   and Savings Plans utilization or coverage budgets default to
--   <tt>100</tt>, which is the only valid value for RI or Savings Plans
--   utilization or coverage budgets. You can't use <tt>BudgetLimit</tt>
--   with <tt>PlannedBudgetLimits</tt> for <tt>CreateBudget</tt> and
--   <tt>UpdateBudget</tt> actions.
--   
--   <a>$sel:lastUpdatedTime:Budget'</a>, <a>budget_lastUpdatedTime</a> -
--   The last time that you updated this budget.
--   
--   <a>$sel:budgetName:Budget'</a>, <a>budget_budgetName</a> - The name of
--   a budget. The name must be unique within an account. The <tt>:</tt>
--   and <tt>\</tt> characters aren't allowed in <tt>BudgetName</tt>.
--   
--   <a>$sel:timeUnit:Budget'</a>, <a>budget_timeUnit</a> - The length of
--   time until a budget resets the actual and forecasted spend.
--   
--   <a>$sel:budgetType:Budget'</a>, <a>budget_budgetType</a> - Whether
--   this budget tracks costs, usage, RI utilization, RI coverage, Savings
--   Plans utilization, or Savings Plans coverage.
newBudget :: Text -> TimeUnit -> BudgetType -> Budget

-- | The period of time that is covered by a budget. The period has a start
--   date and an end date. The start date must come before the end date.
--   The end date must come before <tt>06/15/87 00:00 UTC</tt>.
--   
--   If you create your budget and don't specify a start date, AWS defaults
--   to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or
--   ANNUALLY). For example, if you created your budget on January 24,
--   2018, chose <tt>DAILY</tt>, and didn't set a start date, AWS set your
--   start date to <tt>01/24/18 00:00 UTC</tt>. If you chose
--   <tt>MONTHLY</tt>, AWS set your start date to <tt>01/01/18 00:00
--   UTC</tt>. If you didn't specify an end date, AWS set your end date to
--   <tt>06/15/87 00:00 UTC</tt>. The defaults are the same for the AWS
--   Billing and Cost Management console and the API.
--   
--   You can change either date with the <tt>UpdateBudget</tt> operation.
--   
--   After the end date, AWS deletes the budget and all associated
--   notifications and subscribers.
budget_timePeriod :: Lens' Budget (Maybe TimePeriod)

-- | The cost filters, such as service or tag, that are applied to a
--   budget.
--   
--   AWS Budgets supports the following services as a filter for RI
--   budgets:
--   
--   <ul>
--   <li>Amazon Elastic Compute Cloud - Compute</li>
--   <li>Amazon Redshift</li>
--   <li>Amazon Relational Database Service</li>
--   <li>Amazon ElastiCache</li>
--   <li>Amazon Elasticsearch Service</li>
--   </ul>
budget_costFilters :: Lens' Budget (Maybe (HashMap Text [Text]))

-- | The types of costs that are included in this <tt>COST</tt> budget.
--   
--   <tt>USAGE</tt>, <tt>RI_UTILIZATION</tt>, <tt>RI_COVERAGE</tt>,
--   <tt>SAVINGS_PLANS_UTILIZATION</tt>, and
--   <tt>SAVINGS_PLANS_COVERAGE</tt> budgets do not have
--   <tt>CostTypes</tt>.
budget_costTypes :: Lens' Budget (Maybe CostTypes)

-- | A map containing multiple <tt>BudgetLimit</tt>, including current or
--   future limits.
--   
--   <tt>PlannedBudgetLimits</tt> is available for cost or usage budget and
--   supports monthly and quarterly <tt>TimeUnit</tt>.
--   
--   For monthly budgets, provide 12 months of <tt>PlannedBudgetLimits</tt>
--   values. This must start from the current month and include the next 11
--   months. The <tt>key</tt> is the start of the month, <tt>UTC</tt> in
--   epoch seconds.
--   
--   For quarterly budgets, provide 4 quarters of
--   <tt>PlannedBudgetLimits</tt> value entries in standard calendar
--   quarter increments. This must start from the current quarter and
--   include the next 3 quarters. The <tt>key</tt> is the start of the
--   quarter, <tt>UTC</tt> in epoch seconds.
--   
--   If the planned budget expires before 12 months for monthly or 4
--   quarters for quarterly, provide the <tt>PlannedBudgetLimits</tt>
--   values only for the remaining periods.
--   
--   If the budget begins at a date in the future, provide
--   <tt>PlannedBudgetLimits</tt> values from the start date of the budget.
--   
--   After all of the <tt>BudgetLimit</tt> values in
--   <tt>PlannedBudgetLimits</tt> are used, the budget continues to use the
--   last limit as the <tt>BudgetLimit</tt>. At that point, the planned
--   budget provides the same experience as a fixed budget.
--   
--   <tt>DescribeBudget</tt> and <tt>DescribeBudgets</tt> response along
--   with <tt>PlannedBudgetLimits</tt> will also contain
--   <tt>BudgetLimit</tt> representing the current month or quarter limit
--   present in <tt>PlannedBudgetLimits</tt>. This only applies to budgets
--   created with <tt>PlannedBudgetLimits</tt>. Budgets created without
--   <tt>PlannedBudgetLimits</tt> will only contain <tt>BudgetLimit</tt>,
--   and no <tt>PlannedBudgetLimits</tt>.
budget_plannedBudgetLimits :: Lens' Budget (Maybe (HashMap Text Spend))

-- | The actual and forecasted cost or usage that the budget tracks.
budget_calculatedSpend :: Lens' Budget (Maybe CalculatedSpend)

-- | The total amount of cost, usage, RI utilization, RI coverage, Savings
--   Plans utilization, or Savings Plans coverage that you want to track
--   with your budget.
--   
--   <tt>BudgetLimit</tt> is required for cost or usage budgets, but
--   optional for RI or Savings Plans utilization or coverage budgets. RI
--   and Savings Plans utilization or coverage budgets default to
--   <tt>100</tt>, which is the only valid value for RI or Savings Plans
--   utilization or coverage budgets. You can't use <tt>BudgetLimit</tt>
--   with <tt>PlannedBudgetLimits</tt> for <tt>CreateBudget</tt> and
--   <tt>UpdateBudget</tt> actions.
budget_budgetLimit :: Lens' Budget (Maybe Spend)

-- | The last time that you updated this budget.
budget_lastUpdatedTime :: Lens' Budget (Maybe UTCTime)

-- | The name of a budget. The name must be unique within an account. The
--   <tt>:</tt> and <tt>\</tt> characters aren't allowed in
--   <tt>BudgetName</tt>.
budget_budgetName :: Lens' Budget Text

-- | The length of time until a budget resets the actual and forecasted
--   spend.
budget_timeUnit :: Lens' Budget TimeUnit

-- | Whether this budget tracks costs, usage, RI utilization, RI coverage,
--   Savings Plans utilization, or Savings Plans coverage.
budget_budgetType :: Lens' Budget BudgetType
instance GHC.Generics.Generic Network.AWS.Budgets.Types.Budget.Budget
instance GHC.Show.Show Network.AWS.Budgets.Types.Budget.Budget
instance GHC.Read.Read Network.AWS.Budgets.Types.Budget.Budget
instance GHC.Classes.Eq Network.AWS.Budgets.Types.Budget.Budget
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Budgets.Types.Budget.Budget
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.Types.Budget.Budget
instance Control.DeepSeq.NFData Network.AWS.Budgets.Types.Budget.Budget
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.Types.Budget.Budget


module Network.AWS.Budgets.Types

-- | API version <tt>2016-10-20</tt> of the Amazon Budgets SDK
--   configuration.
defaultService :: Service

-- | The request was received and recognized by the server, but the server
--   rejected that particular method for the requested resource.
_ResourceLockedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pagination token expired.
_ExpiredNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | We can’t locate the resource that you specified.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An error on the server occurred during the processing of your request.
--   Try again later.
_InternalErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The budget name already exists. Budget names must be unique within an
--   account.
_DuplicateRecordException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pagination token is invalid.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An error on the client occurred. Typically, the cause is an invalid
--   input value.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You are not authorized to use this operation with the given
--   parameters.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've exceeded the notification or subscriber limit.
_CreationLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ActionStatus
ActionStatus' :: Text -> ActionStatus
[fromActionStatus] :: ActionStatus -> Text
pattern ActionStatus_EXECUTION_FAILURE :: ActionStatus
pattern ActionStatus_EXECUTION_IN_PROGRESS :: ActionStatus
pattern ActionStatus_EXECUTION_SUCCESS :: ActionStatus
pattern ActionStatus_PENDING :: ActionStatus
pattern ActionStatus_RESET_FAILURE :: ActionStatus
pattern ActionStatus_RESET_IN_PROGRESS :: ActionStatus
pattern ActionStatus_REVERSE_FAILURE :: ActionStatus
pattern ActionStatus_REVERSE_IN_PROGRESS :: ActionStatus
pattern ActionStatus_REVERSE_SUCCESS :: ActionStatus
pattern ActionStatus_STANDBY :: ActionStatus
newtype ActionSubType
ActionSubType' :: Text -> ActionSubType
[fromActionSubType] :: ActionSubType -> Text
pattern ActionSubType_STOP_EC2_INSTANCES :: ActionSubType
pattern ActionSubType_STOP_RDS_INSTANCES :: ActionSubType
newtype ActionType
ActionType' :: Text -> ActionType
[fromActionType] :: ActionType -> Text
pattern ActionType_APPLY_IAM_POLICY :: ActionType
pattern ActionType_APPLY_SCP_POLICY :: ActionType
pattern ActionType_RUN_SSM_DOCUMENTS :: ActionType
newtype ApprovalModel
ApprovalModel' :: Text -> ApprovalModel
[fromApprovalModel] :: ApprovalModel -> Text
pattern ApprovalModel_AUTOMATIC :: ApprovalModel
pattern ApprovalModel_MANUAL :: ApprovalModel

-- | The type of a budget. It must be one of the following types:
--   
--   <tt>COST</tt>, <tt>USAGE</tt>, <tt>RI_UTILIZATION</tt>,
--   <tt>RI_COVERAGE</tt>, <tt>SAVINGS_PLANS_UTILIZATION</tt>, or
--   <tt>SAVINGS_PLANS_COVERAGE</tt>.
newtype BudgetType
BudgetType' :: Text -> BudgetType
[fromBudgetType] :: BudgetType -> Text
pattern BudgetType_COST :: BudgetType
pattern BudgetType_RI_COVERAGE :: BudgetType
pattern BudgetType_RI_UTILIZATION :: BudgetType
pattern BudgetType_SAVINGS_PLANS_COVERAGE :: BudgetType
pattern BudgetType_SAVINGS_PLANS_UTILIZATION :: BudgetType
pattern BudgetType_USAGE :: BudgetType

-- | The comparison operator of a notification. Currently the service
--   supports the following operators:
--   
--   <tt>GREATER_THAN</tt>, <tt>LESS_THAN</tt>, <tt>EQUAL_TO</tt>
newtype ComparisonOperator
ComparisonOperator' :: Text -> ComparisonOperator
[fromComparisonOperator] :: ComparisonOperator -> Text
pattern ComparisonOperator_EQUAL_TO :: ComparisonOperator
pattern ComparisonOperator_GREATER_THAN :: ComparisonOperator
pattern ComparisonOperator_LESS_THAN :: ComparisonOperator
newtype EventType
EventType' :: Text -> EventType
[fromEventType] :: EventType -> Text
pattern EventType_CREATE_ACTION :: EventType
pattern EventType_DELETE_ACTION :: EventType
pattern EventType_EXECUTE_ACTION :: EventType
pattern EventType_SYSTEM :: EventType
pattern EventType_UPDATE_ACTION :: EventType
newtype ExecutionType
ExecutionType' :: Text -> ExecutionType
[fromExecutionType] :: ExecutionType -> Text
pattern ExecutionType_APPROVE_BUDGET_ACTION :: ExecutionType
pattern ExecutionType_RESET_BUDGET_ACTION :: ExecutionType
pattern ExecutionType_RETRY_BUDGET_ACTION :: ExecutionType
pattern ExecutionType_REVERSE_BUDGET_ACTION :: ExecutionType
newtype NotificationState
NotificationState' :: Text -> NotificationState
[fromNotificationState] :: NotificationState -> Text
pattern NotificationState_ALARM :: NotificationState
pattern NotificationState_OK :: NotificationState

-- | The type of a notification. It must be ACTUAL or FORECASTED.
newtype NotificationType
NotificationType' :: Text -> NotificationType
[fromNotificationType] :: NotificationType -> Text
pattern NotificationType_ACTUAL :: NotificationType
pattern NotificationType_FORECASTED :: NotificationType

-- | The subscription type of the subscriber. It can be SMS or EMAIL.
newtype SubscriptionType
SubscriptionType' :: Text -> SubscriptionType
[fromSubscriptionType] :: SubscriptionType -> Text
pattern SubscriptionType_EMAIL :: SubscriptionType
pattern SubscriptionType_SNS :: SubscriptionType

-- | The type of threshold for a notification.
newtype ThresholdType
ThresholdType' :: Text -> ThresholdType
[fromThresholdType] :: ThresholdType -> Text
pattern ThresholdType_ABSOLUTE_VALUE :: ThresholdType
pattern ThresholdType_PERCENTAGE :: ThresholdType

-- | The time unit of the budget, such as MONTHLY or QUARTERLY.
newtype TimeUnit
TimeUnit' :: Text -> TimeUnit
[fromTimeUnit] :: TimeUnit -> Text
pattern TimeUnit_ANNUALLY :: TimeUnit
pattern TimeUnit_DAILY :: TimeUnit
pattern TimeUnit_MONTHLY :: TimeUnit
pattern TimeUnit_QUARTERLY :: TimeUnit

-- | A budget action resource.
--   
--   <i>See:</i> <a>newAction</a> smart constructor.
data Action
Action' :: Text -> Text -> NotificationType -> ActionType -> ActionThreshold -> Definition -> Text -> ApprovalModel -> ActionStatus -> NonEmpty Subscriber -> Action

-- | A system-generated universally unique identifier (UUID) for the
--   action.
[$sel:actionId:Action'] :: Action -> Text
[$sel:budgetName:Action'] :: Action -> Text
[$sel:notificationType:Action'] :: Action -> NotificationType

-- | The type of action. This defines the type of tasks that can be carried
--   out by this action. This field also determines the format for
--   definition.
[$sel:actionType:Action'] :: Action -> ActionType

-- | The trigger threshold of the action.
[$sel:actionThreshold:Action'] :: Action -> ActionThreshold

-- | Where you specify all of the type-specific parameters.
[$sel:definition:Action'] :: Action -> Definition

-- | The role passed for action execution and reversion. Roles and actions
--   must be in the same account.
[$sel:executionRoleArn:Action'] :: Action -> Text

-- | This specifies if the action needs manual or automatic approval.
[$sel:approvalModel:Action'] :: Action -> ApprovalModel

-- | The status of action.
[$sel:status:Action'] :: Action -> ActionStatus
[$sel:subscribers:Action'] :: Action -> NonEmpty Subscriber

-- | Create a value of <a>Action</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionId:Action'</a>, <a>action_actionId</a> - A
--   system-generated universally unique identifier (UUID) for the action.
--   
--   <a>$sel:budgetName:Action'</a>, <a>action_budgetName</a> -
--   Undocumented member.
--   
--   <a>$sel:notificationType:Action'</a>, <a>action_notificationType</a> -
--   Undocumented member.
--   
--   <a>$sel:actionType:Action'</a>, <a>action_actionType</a> - The type of
--   action. This defines the type of tasks that can be carried out by this
--   action. This field also determines the format for definition.
--   
--   <a>$sel:actionThreshold:Action'</a>, <a>action_actionThreshold</a> -
--   The trigger threshold of the action.
--   
--   <a>$sel:definition:Action'</a>, <a>action_definition</a> - Where you
--   specify all of the type-specific parameters.
--   
--   <a>$sel:executionRoleArn:Action'</a>, <a>action_executionRoleArn</a> -
--   The role passed for action execution and reversion. Roles and actions
--   must be in the same account.
--   
--   <a>$sel:approvalModel:Action'</a>, <a>action_approvalModel</a> - This
--   specifies if the action needs manual or automatic approval.
--   
--   <a>$sel:status:Action'</a>, <a>action_status</a> - The status of
--   action.
--   
--   <a>$sel:subscribers:Action'</a>, <a>action_subscribers</a> -
--   Undocumented member.
newAction :: Text -> Text -> NotificationType -> ActionType -> ActionThreshold -> Definition -> Text -> ApprovalModel -> ActionStatus -> NonEmpty Subscriber -> Action

-- | A system-generated universally unique identifier (UUID) for the
--   action.
action_actionId :: Lens' Action Text

-- | Undocumented member.
action_budgetName :: Lens' Action Text

-- | Undocumented member.
action_notificationType :: Lens' Action NotificationType

-- | The type of action. This defines the type of tasks that can be carried
--   out by this action. This field also determines the format for
--   definition.
action_actionType :: Lens' Action ActionType

-- | The trigger threshold of the action.
action_actionThreshold :: Lens' Action ActionThreshold

-- | Where you specify all of the type-specific parameters.
action_definition :: Lens' Action Definition

-- | The role passed for action execution and reversion. Roles and actions
--   must be in the same account.
action_executionRoleArn :: Lens' Action Text

-- | This specifies if the action needs manual or automatic approval.
action_approvalModel :: Lens' Action ApprovalModel

-- | The status of action.
action_status :: Lens' Action ActionStatus

-- | Undocumented member.
action_subscribers :: Lens' Action (NonEmpty Subscriber)

-- | The historical records for a budget action.
--   
--   <i>See:</i> <a>newActionHistory</a> smart constructor.
data ActionHistory
ActionHistory' :: POSIX -> ActionStatus -> EventType -> ActionHistoryDetails -> ActionHistory
[$sel:timestamp:ActionHistory'] :: ActionHistory -> POSIX

-- | The status of action at the time of the event.
[$sel:status:ActionHistory'] :: ActionHistory -> ActionStatus

-- | This distinguishes between whether the events are triggered by the
--   user or generated by the system.
[$sel:eventType:ActionHistory'] :: ActionHistory -> EventType

-- | The description of details of the event.
[$sel:actionHistoryDetails:ActionHistory'] :: ActionHistory -> ActionHistoryDetails

-- | Create a value of <a>ActionHistory</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamp:ActionHistory'</a>, <a>actionHistory_timestamp</a> -
--   Undocumented member.
--   
--   <a>$sel:status:ActionHistory'</a>, <a>actionHistory_status</a> - The
--   status of action at the time of the event.
--   
--   <a>$sel:eventType:ActionHistory'</a>, <a>actionHistory_eventType</a> -
--   This distinguishes between whether the events are triggered by the
--   user or generated by the system.
--   
--   <a>$sel:actionHistoryDetails:ActionHistory'</a>,
--   <a>actionHistory_actionHistoryDetails</a> - The description of details
--   of the event.
newActionHistory :: UTCTime -> ActionStatus -> EventType -> ActionHistoryDetails -> ActionHistory

-- | Undocumented member.
actionHistory_timestamp :: Lens' ActionHistory UTCTime

-- | The status of action at the time of the event.
actionHistory_status :: Lens' ActionHistory ActionStatus

-- | This distinguishes between whether the events are triggered by the
--   user or generated by the system.
actionHistory_eventType :: Lens' ActionHistory EventType

-- | The description of details of the event.
actionHistory_actionHistoryDetails :: Lens' ActionHistory ActionHistoryDetails

-- | The description of details of the event.
--   
--   <i>See:</i> <a>newActionHistoryDetails</a> smart constructor.
data ActionHistoryDetails
ActionHistoryDetails' :: Text -> Action -> ActionHistoryDetails
[$sel:message:ActionHistoryDetails'] :: ActionHistoryDetails -> Text

-- | The budget action resource.
[$sel:action:ActionHistoryDetails'] :: ActionHistoryDetails -> Action

-- | Create a value of <a>ActionHistoryDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:ActionHistoryDetails'</a>,
--   <a>actionHistoryDetails_message</a> - Undocumented member.
--   
--   <a>$sel:action:ActionHistoryDetails'</a>,
--   <a>actionHistoryDetails_action</a> - The budget action resource.
newActionHistoryDetails :: Text -> Action -> ActionHistoryDetails

-- | Undocumented member.
actionHistoryDetails_message :: Lens' ActionHistoryDetails Text

-- | The budget action resource.
actionHistoryDetails_action :: Lens' ActionHistoryDetails Action

-- | The trigger threshold of the action.
--   
--   <i>See:</i> <a>newActionThreshold</a> smart constructor.
data ActionThreshold
ActionThreshold' :: Double -> ThresholdType -> ActionThreshold
[$sel:actionThresholdValue:ActionThreshold'] :: ActionThreshold -> Double
[$sel:actionThresholdType:ActionThreshold'] :: ActionThreshold -> ThresholdType

-- | Create a value of <a>ActionThreshold</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionThresholdValue:ActionThreshold'</a>,
--   <a>actionThreshold_actionThresholdValue</a> - Undocumented member.
--   
--   <a>$sel:actionThresholdType:ActionThreshold'</a>,
--   <a>actionThreshold_actionThresholdType</a> - Undocumented member.
newActionThreshold :: Double -> ThresholdType -> ActionThreshold

-- | Undocumented member.
actionThreshold_actionThresholdValue :: Lens' ActionThreshold Double

-- | Undocumented member.
actionThreshold_actionThresholdType :: Lens' ActionThreshold ThresholdType

-- | Represents the output of the <tt>CreateBudget</tt> operation. The
--   content consists of the detailed metadata and data file information,
--   and the current status of the <tt>budget</tt> object.
--   
--   This is the ARN pattern for a budget:
--   
--   <pre>
--   arn:aws:budgets::AccountId:budget/budgetName
--   </pre>
--   
--   <i>See:</i> <a>newBudget</a> smart constructor.
data Budget
Budget' :: Maybe TimePeriod -> Maybe (HashMap Text [Text]) -> Maybe CostTypes -> Maybe (HashMap Text Spend) -> Maybe CalculatedSpend -> Maybe Spend -> Maybe POSIX -> Text -> TimeUnit -> BudgetType -> Budget

-- | The period of time that is covered by a budget. The period has a start
--   date and an end date. The start date must come before the end date.
--   The end date must come before <tt>06/15/87 00:00 UTC</tt>.
--   
--   If you create your budget and don't specify a start date, AWS defaults
--   to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or
--   ANNUALLY). For example, if you created your budget on January 24,
--   2018, chose <tt>DAILY</tt>, and didn't set a start date, AWS set your
--   start date to <tt>01/24/18 00:00 UTC</tt>. If you chose
--   <tt>MONTHLY</tt>, AWS set your start date to <tt>01/01/18 00:00
--   UTC</tt>. If you didn't specify an end date, AWS set your end date to
--   <tt>06/15/87 00:00 UTC</tt>. The defaults are the same for the AWS
--   Billing and Cost Management console and the API.
--   
--   You can change either date with the <tt>UpdateBudget</tt> operation.
--   
--   After the end date, AWS deletes the budget and all associated
--   notifications and subscribers.
[$sel:timePeriod:Budget'] :: Budget -> Maybe TimePeriod

-- | The cost filters, such as service or tag, that are applied to a
--   budget.
--   
--   AWS Budgets supports the following services as a filter for RI
--   budgets:
--   
--   <ul>
--   <li>Amazon Elastic Compute Cloud - Compute</li>
--   <li>Amazon Redshift</li>
--   <li>Amazon Relational Database Service</li>
--   <li>Amazon ElastiCache</li>
--   <li>Amazon Elasticsearch Service</li>
--   </ul>
[$sel:costFilters:Budget'] :: Budget -> Maybe (HashMap Text [Text])

-- | The types of costs that are included in this <tt>COST</tt> budget.
--   
--   <tt>USAGE</tt>, <tt>RI_UTILIZATION</tt>, <tt>RI_COVERAGE</tt>,
--   <tt>SAVINGS_PLANS_UTILIZATION</tt>, and
--   <tt>SAVINGS_PLANS_COVERAGE</tt> budgets do not have
--   <tt>CostTypes</tt>.
[$sel:costTypes:Budget'] :: Budget -> Maybe CostTypes

-- | A map containing multiple <tt>BudgetLimit</tt>, including current or
--   future limits.
--   
--   <tt>PlannedBudgetLimits</tt> is available for cost or usage budget and
--   supports monthly and quarterly <tt>TimeUnit</tt>.
--   
--   For monthly budgets, provide 12 months of <tt>PlannedBudgetLimits</tt>
--   values. This must start from the current month and include the next 11
--   months. The <tt>key</tt> is the start of the month, <tt>UTC</tt> in
--   epoch seconds.
--   
--   For quarterly budgets, provide 4 quarters of
--   <tt>PlannedBudgetLimits</tt> value entries in standard calendar
--   quarter increments. This must start from the current quarter and
--   include the next 3 quarters. The <tt>key</tt> is the start of the
--   quarter, <tt>UTC</tt> in epoch seconds.
--   
--   If the planned budget expires before 12 months for monthly or 4
--   quarters for quarterly, provide the <tt>PlannedBudgetLimits</tt>
--   values only for the remaining periods.
--   
--   If the budget begins at a date in the future, provide
--   <tt>PlannedBudgetLimits</tt> values from the start date of the budget.
--   
--   After all of the <tt>BudgetLimit</tt> values in
--   <tt>PlannedBudgetLimits</tt> are used, the budget continues to use the
--   last limit as the <tt>BudgetLimit</tt>. At that point, the planned
--   budget provides the same experience as a fixed budget.
--   
--   <tt>DescribeBudget</tt> and <tt>DescribeBudgets</tt> response along
--   with <tt>PlannedBudgetLimits</tt> will also contain
--   <tt>BudgetLimit</tt> representing the current month or quarter limit
--   present in <tt>PlannedBudgetLimits</tt>. This only applies to budgets
--   created with <tt>PlannedBudgetLimits</tt>. Budgets created without
--   <tt>PlannedBudgetLimits</tt> will only contain <tt>BudgetLimit</tt>,
--   and no <tt>PlannedBudgetLimits</tt>.
[$sel:plannedBudgetLimits:Budget'] :: Budget -> Maybe (HashMap Text Spend)

-- | The actual and forecasted cost or usage that the budget tracks.
[$sel:calculatedSpend:Budget'] :: Budget -> Maybe CalculatedSpend

-- | The total amount of cost, usage, RI utilization, RI coverage, Savings
--   Plans utilization, or Savings Plans coverage that you want to track
--   with your budget.
--   
--   <tt>BudgetLimit</tt> is required for cost or usage budgets, but
--   optional for RI or Savings Plans utilization or coverage budgets. RI
--   and Savings Plans utilization or coverage budgets default to
--   <tt>100</tt>, which is the only valid value for RI or Savings Plans
--   utilization or coverage budgets. You can't use <tt>BudgetLimit</tt>
--   with <tt>PlannedBudgetLimits</tt> for <tt>CreateBudget</tt> and
--   <tt>UpdateBudget</tt> actions.
[$sel:budgetLimit:Budget'] :: Budget -> Maybe Spend

-- | The last time that you updated this budget.
[$sel:lastUpdatedTime:Budget'] :: Budget -> Maybe POSIX

-- | The name of a budget. The name must be unique within an account. The
--   <tt>:</tt> and <tt>\</tt> characters aren't allowed in
--   <tt>BudgetName</tt>.
[$sel:budgetName:Budget'] :: Budget -> Text

-- | The length of time until a budget resets the actual and forecasted
--   spend.
[$sel:timeUnit:Budget'] :: Budget -> TimeUnit

-- | Whether this budget tracks costs, usage, RI utilization, RI coverage,
--   Savings Plans utilization, or Savings Plans coverage.
[$sel:budgetType:Budget'] :: Budget -> BudgetType

-- | Create a value of <a>Budget</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timePeriod:Budget'</a>, <a>budget_timePeriod</a> - The period
--   of time that is covered by a budget. The period has a start date and
--   an end date. The start date must come before the end date. The end
--   date must come before <tt>06/15/87 00:00 UTC</tt>.
--   
--   If you create your budget and don't specify a start date, AWS defaults
--   to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or
--   ANNUALLY). For example, if you created your budget on January 24,
--   2018, chose <tt>DAILY</tt>, and didn't set a start date, AWS set your
--   start date to <tt>01/24/18 00:00 UTC</tt>. If you chose
--   <tt>MONTHLY</tt>, AWS set your start date to <tt>01/01/18 00:00
--   UTC</tt>. If you didn't specify an end date, AWS set your end date to
--   <tt>06/15/87 00:00 UTC</tt>. The defaults are the same for the AWS
--   Billing and Cost Management console and the API.
--   
--   You can change either date with the <tt>UpdateBudget</tt> operation.
--   
--   After the end date, AWS deletes the budget and all associated
--   notifications and subscribers.
--   
--   <a>$sel:costFilters:Budget'</a>, <a>budget_costFilters</a> - The cost
--   filters, such as service or tag, that are applied to a budget.
--   
--   AWS Budgets supports the following services as a filter for RI
--   budgets:
--   
--   <ul>
--   <li>Amazon Elastic Compute Cloud - Compute</li>
--   <li>Amazon Redshift</li>
--   <li>Amazon Relational Database Service</li>
--   <li>Amazon ElastiCache</li>
--   <li>Amazon Elasticsearch Service</li>
--   </ul>
--   
--   <a>$sel:costTypes:Budget'</a>, <a>budget_costTypes</a> - The types of
--   costs that are included in this <tt>COST</tt> budget.
--   
--   <tt>USAGE</tt>, <tt>RI_UTILIZATION</tt>, <tt>RI_COVERAGE</tt>,
--   <tt>SAVINGS_PLANS_UTILIZATION</tt>, and
--   <tt>SAVINGS_PLANS_COVERAGE</tt> budgets do not have
--   <tt>CostTypes</tt>.
--   
--   <a>$sel:plannedBudgetLimits:Budget'</a>,
--   <a>budget_plannedBudgetLimits</a> - A map containing multiple
--   <tt>BudgetLimit</tt>, including current or future limits.
--   
--   <tt>PlannedBudgetLimits</tt> is available for cost or usage budget and
--   supports monthly and quarterly <tt>TimeUnit</tt>.
--   
--   For monthly budgets, provide 12 months of <tt>PlannedBudgetLimits</tt>
--   values. This must start from the current month and include the next 11
--   months. The <tt>key</tt> is the start of the month, <tt>UTC</tt> in
--   epoch seconds.
--   
--   For quarterly budgets, provide 4 quarters of
--   <tt>PlannedBudgetLimits</tt> value entries in standard calendar
--   quarter increments. This must start from the current quarter and
--   include the next 3 quarters. The <tt>key</tt> is the start of the
--   quarter, <tt>UTC</tt> in epoch seconds.
--   
--   If the planned budget expires before 12 months for monthly or 4
--   quarters for quarterly, provide the <tt>PlannedBudgetLimits</tt>
--   values only for the remaining periods.
--   
--   If the budget begins at a date in the future, provide
--   <tt>PlannedBudgetLimits</tt> values from the start date of the budget.
--   
--   After all of the <tt>BudgetLimit</tt> values in
--   <tt>PlannedBudgetLimits</tt> are used, the budget continues to use the
--   last limit as the <tt>BudgetLimit</tt>. At that point, the planned
--   budget provides the same experience as a fixed budget.
--   
--   <tt>DescribeBudget</tt> and <tt>DescribeBudgets</tt> response along
--   with <tt>PlannedBudgetLimits</tt> will also contain
--   <tt>BudgetLimit</tt> representing the current month or quarter limit
--   present in <tt>PlannedBudgetLimits</tt>. This only applies to budgets
--   created with <tt>PlannedBudgetLimits</tt>. Budgets created without
--   <tt>PlannedBudgetLimits</tt> will only contain <tt>BudgetLimit</tt>,
--   and no <tt>PlannedBudgetLimits</tt>.
--   
--   <a>$sel:calculatedSpend:Budget'</a>, <a>budget_calculatedSpend</a> -
--   The actual and forecasted cost or usage that the budget tracks.
--   
--   <a>$sel:budgetLimit:Budget'</a>, <a>budget_budgetLimit</a> - The total
--   amount of cost, usage, RI utilization, RI coverage, Savings Plans
--   utilization, or Savings Plans coverage that you want to track with
--   your budget.
--   
--   <tt>BudgetLimit</tt> is required for cost or usage budgets, but
--   optional for RI or Savings Plans utilization or coverage budgets. RI
--   and Savings Plans utilization or coverage budgets default to
--   <tt>100</tt>, which is the only valid value for RI or Savings Plans
--   utilization or coverage budgets. You can't use <tt>BudgetLimit</tt>
--   with <tt>PlannedBudgetLimits</tt> for <tt>CreateBudget</tt> and
--   <tt>UpdateBudget</tt> actions.
--   
--   <a>$sel:lastUpdatedTime:Budget'</a>, <a>budget_lastUpdatedTime</a> -
--   The last time that you updated this budget.
--   
--   <a>$sel:budgetName:Budget'</a>, <a>budget_budgetName</a> - The name of
--   a budget. The name must be unique within an account. The <tt>:</tt>
--   and <tt>\</tt> characters aren't allowed in <tt>BudgetName</tt>.
--   
--   <a>$sel:timeUnit:Budget'</a>, <a>budget_timeUnit</a> - The length of
--   time until a budget resets the actual and forecasted spend.
--   
--   <a>$sel:budgetType:Budget'</a>, <a>budget_budgetType</a> - Whether
--   this budget tracks costs, usage, RI utilization, RI coverage, Savings
--   Plans utilization, or Savings Plans coverage.
newBudget :: Text -> TimeUnit -> BudgetType -> Budget

-- | The period of time that is covered by a budget. The period has a start
--   date and an end date. The start date must come before the end date.
--   The end date must come before <tt>06/15/87 00:00 UTC</tt>.
--   
--   If you create your budget and don't specify a start date, AWS defaults
--   to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or
--   ANNUALLY). For example, if you created your budget on January 24,
--   2018, chose <tt>DAILY</tt>, and didn't set a start date, AWS set your
--   start date to <tt>01/24/18 00:00 UTC</tt>. If you chose
--   <tt>MONTHLY</tt>, AWS set your start date to <tt>01/01/18 00:00
--   UTC</tt>. If you didn't specify an end date, AWS set your end date to
--   <tt>06/15/87 00:00 UTC</tt>. The defaults are the same for the AWS
--   Billing and Cost Management console and the API.
--   
--   You can change either date with the <tt>UpdateBudget</tt> operation.
--   
--   After the end date, AWS deletes the budget and all associated
--   notifications and subscribers.
budget_timePeriod :: Lens' Budget (Maybe TimePeriod)

-- | The cost filters, such as service or tag, that are applied to a
--   budget.
--   
--   AWS Budgets supports the following services as a filter for RI
--   budgets:
--   
--   <ul>
--   <li>Amazon Elastic Compute Cloud - Compute</li>
--   <li>Amazon Redshift</li>
--   <li>Amazon Relational Database Service</li>
--   <li>Amazon ElastiCache</li>
--   <li>Amazon Elasticsearch Service</li>
--   </ul>
budget_costFilters :: Lens' Budget (Maybe (HashMap Text [Text]))

-- | The types of costs that are included in this <tt>COST</tt> budget.
--   
--   <tt>USAGE</tt>, <tt>RI_UTILIZATION</tt>, <tt>RI_COVERAGE</tt>,
--   <tt>SAVINGS_PLANS_UTILIZATION</tt>, and
--   <tt>SAVINGS_PLANS_COVERAGE</tt> budgets do not have
--   <tt>CostTypes</tt>.
budget_costTypes :: Lens' Budget (Maybe CostTypes)

-- | A map containing multiple <tt>BudgetLimit</tt>, including current or
--   future limits.
--   
--   <tt>PlannedBudgetLimits</tt> is available for cost or usage budget and
--   supports monthly and quarterly <tt>TimeUnit</tt>.
--   
--   For monthly budgets, provide 12 months of <tt>PlannedBudgetLimits</tt>
--   values. This must start from the current month and include the next 11
--   months. The <tt>key</tt> is the start of the month, <tt>UTC</tt> in
--   epoch seconds.
--   
--   For quarterly budgets, provide 4 quarters of
--   <tt>PlannedBudgetLimits</tt> value entries in standard calendar
--   quarter increments. This must start from the current quarter and
--   include the next 3 quarters. The <tt>key</tt> is the start of the
--   quarter, <tt>UTC</tt> in epoch seconds.
--   
--   If the planned budget expires before 12 months for monthly or 4
--   quarters for quarterly, provide the <tt>PlannedBudgetLimits</tt>
--   values only for the remaining periods.
--   
--   If the budget begins at a date in the future, provide
--   <tt>PlannedBudgetLimits</tt> values from the start date of the budget.
--   
--   After all of the <tt>BudgetLimit</tt> values in
--   <tt>PlannedBudgetLimits</tt> are used, the budget continues to use the
--   last limit as the <tt>BudgetLimit</tt>. At that point, the planned
--   budget provides the same experience as a fixed budget.
--   
--   <tt>DescribeBudget</tt> and <tt>DescribeBudgets</tt> response along
--   with <tt>PlannedBudgetLimits</tt> will also contain
--   <tt>BudgetLimit</tt> representing the current month or quarter limit
--   present in <tt>PlannedBudgetLimits</tt>. This only applies to budgets
--   created with <tt>PlannedBudgetLimits</tt>. Budgets created without
--   <tt>PlannedBudgetLimits</tt> will only contain <tt>BudgetLimit</tt>,
--   and no <tt>PlannedBudgetLimits</tt>.
budget_plannedBudgetLimits :: Lens' Budget (Maybe (HashMap Text Spend))

-- | The actual and forecasted cost or usage that the budget tracks.
budget_calculatedSpend :: Lens' Budget (Maybe CalculatedSpend)

-- | The total amount of cost, usage, RI utilization, RI coverage, Savings
--   Plans utilization, or Savings Plans coverage that you want to track
--   with your budget.
--   
--   <tt>BudgetLimit</tt> is required for cost or usage budgets, but
--   optional for RI or Savings Plans utilization or coverage budgets. RI
--   and Savings Plans utilization or coverage budgets default to
--   <tt>100</tt>, which is the only valid value for RI or Savings Plans
--   utilization or coverage budgets. You can't use <tt>BudgetLimit</tt>
--   with <tt>PlannedBudgetLimits</tt> for <tt>CreateBudget</tt> and
--   <tt>UpdateBudget</tt> actions.
budget_budgetLimit :: Lens' Budget (Maybe Spend)

-- | The last time that you updated this budget.
budget_lastUpdatedTime :: Lens' Budget (Maybe UTCTime)

-- | The name of a budget. The name must be unique within an account. The
--   <tt>:</tt> and <tt>\</tt> characters aren't allowed in
--   <tt>BudgetName</tt>.
budget_budgetName :: Lens' Budget Text

-- | The length of time until a budget resets the actual and forecasted
--   spend.
budget_timeUnit :: Lens' Budget TimeUnit

-- | Whether this budget tracks costs, usage, RI utilization, RI coverage,
--   Savings Plans utilization, or Savings Plans coverage.
budget_budgetType :: Lens' Budget BudgetType

-- | A history of the state of a budget at the end of the budget's
--   specified time period.
--   
--   <i>See:</i> <a>newBudgetPerformanceHistory</a> smart constructor.
data BudgetPerformanceHistory
BudgetPerformanceHistory' :: Maybe [BudgetedAndActualAmounts] -> Maybe TimeUnit -> Maybe (HashMap Text [Text]) -> Maybe CostTypes -> Maybe BudgetType -> Maybe Text -> BudgetPerformanceHistory

-- | A list of amounts of cost or usage that you created budgets for,
--   compared to your actual costs or usage.
[$sel:budgetedAndActualAmountsList:BudgetPerformanceHistory'] :: BudgetPerformanceHistory -> Maybe [BudgetedAndActualAmounts]
[$sel:timeUnit:BudgetPerformanceHistory'] :: BudgetPerformanceHistory -> Maybe TimeUnit

-- | The history of the cost filters for a budget during the specified time
--   period.
[$sel:costFilters:BudgetPerformanceHistory'] :: BudgetPerformanceHistory -> Maybe (HashMap Text [Text])

-- | The history of the cost types for a budget during the specified time
--   period.
[$sel:costTypes:BudgetPerformanceHistory'] :: BudgetPerformanceHistory -> Maybe CostTypes
[$sel:budgetType:BudgetPerformanceHistory'] :: BudgetPerformanceHistory -> Maybe BudgetType
[$sel:budgetName:BudgetPerformanceHistory'] :: BudgetPerformanceHistory -> Maybe Text

-- | Create a value of <a>BudgetPerformanceHistory</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:budgetedAndActualAmountsList:BudgetPerformanceHistory'</a>,
--   <a>budgetPerformanceHistory_budgetedAndActualAmountsList</a> - A list
--   of amounts of cost or usage that you created budgets for, compared to
--   your actual costs or usage.
--   
--   <a>$sel:timeUnit:BudgetPerformanceHistory'</a>,
--   <a>budgetPerformanceHistory_timeUnit</a> - Undocumented member.
--   
--   <a>$sel:costFilters:BudgetPerformanceHistory'</a>,
--   <a>budgetPerformanceHistory_costFilters</a> - The history of the cost
--   filters for a budget during the specified time period.
--   
--   <a>$sel:costTypes:BudgetPerformanceHistory'</a>,
--   <a>budgetPerformanceHistory_costTypes</a> - The history of the cost
--   types for a budget during the specified time period.
--   
--   <a>$sel:budgetType:BudgetPerformanceHistory'</a>,
--   <a>budgetPerformanceHistory_budgetType</a> - Undocumented member.
--   
--   <a>$sel:budgetName:BudgetPerformanceHistory'</a>,
--   <a>budgetPerformanceHistory_budgetName</a> - Undocumented member.
newBudgetPerformanceHistory :: BudgetPerformanceHistory

-- | A list of amounts of cost or usage that you created budgets for,
--   compared to your actual costs or usage.
budgetPerformanceHistory_budgetedAndActualAmountsList :: Lens' BudgetPerformanceHistory (Maybe [BudgetedAndActualAmounts])

-- | Undocumented member.
budgetPerformanceHistory_timeUnit :: Lens' BudgetPerformanceHistory (Maybe TimeUnit)

-- | The history of the cost filters for a budget during the specified time
--   period.
budgetPerformanceHistory_costFilters :: Lens' BudgetPerformanceHistory (Maybe (HashMap Text [Text]))

-- | The history of the cost types for a budget during the specified time
--   period.
budgetPerformanceHistory_costTypes :: Lens' BudgetPerformanceHistory (Maybe CostTypes)

-- | Undocumented member.
budgetPerformanceHistory_budgetType :: Lens' BudgetPerformanceHistory (Maybe BudgetType)

-- | Undocumented member.
budgetPerformanceHistory_budgetName :: Lens' BudgetPerformanceHistory (Maybe Text)

-- | The amount of cost or usage that you created the budget for, compared
--   to your actual costs or usage.
--   
--   <i>See:</i> <a>newBudgetedAndActualAmounts</a> smart constructor.
data BudgetedAndActualAmounts
BudgetedAndActualAmounts' :: Maybe TimePeriod -> Maybe Spend -> Maybe Spend -> BudgetedAndActualAmounts

-- | The time period covered by this budget comparison.
[$sel:timePeriod:BudgetedAndActualAmounts'] :: BudgetedAndActualAmounts -> Maybe TimePeriod

-- | The amount of cost or usage that you created the budget for.
[$sel:budgetedAmount:BudgetedAndActualAmounts'] :: BudgetedAndActualAmounts -> Maybe Spend

-- | Your actual costs or usage for a budget period.
[$sel:actualAmount:BudgetedAndActualAmounts'] :: BudgetedAndActualAmounts -> Maybe Spend

-- | Create a value of <a>BudgetedAndActualAmounts</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timePeriod:BudgetedAndActualAmounts'</a>,
--   <a>budgetedAndActualAmounts_timePeriod</a> - The time period covered
--   by this budget comparison.
--   
--   <a>$sel:budgetedAmount:BudgetedAndActualAmounts'</a>,
--   <a>budgetedAndActualAmounts_budgetedAmount</a> - The amount of cost or
--   usage that you created the budget for.
--   
--   <a>$sel:actualAmount:BudgetedAndActualAmounts'</a>,
--   <a>budgetedAndActualAmounts_actualAmount</a> - Your actual costs or
--   usage for a budget period.
newBudgetedAndActualAmounts :: BudgetedAndActualAmounts

-- | The time period covered by this budget comparison.
budgetedAndActualAmounts_timePeriod :: Lens' BudgetedAndActualAmounts (Maybe TimePeriod)

-- | The amount of cost or usage that you created the budget for.
budgetedAndActualAmounts_budgetedAmount :: Lens' BudgetedAndActualAmounts (Maybe Spend)

-- | Your actual costs or usage for a budget period.
budgetedAndActualAmounts_actualAmount :: Lens' BudgetedAndActualAmounts (Maybe Spend)

-- | The spend objects that are associated with this budget. The
--   <tt>actualSpend</tt> tracks how much you've used, cost, usage, RI
--   units, or Savings Plans units and the <tt>forecastedSpend</tt> tracks
--   how much you are predicted to spend based on your historical usage
--   profile.
--   
--   For example, if it is the 20th of the month and you have spent
--   <tt>50</tt> dollars on Amazon EC2, your <tt>actualSpend</tt> is <tt>50
--   USD</tt>, and your <tt>forecastedSpend</tt> is <tt>75 USD</tt>.
--   
--   <i>See:</i> <a>newCalculatedSpend</a> smart constructor.
data CalculatedSpend
CalculatedSpend' :: Maybe Spend -> Spend -> CalculatedSpend

-- | The amount of cost, usage, RI units, or Savings Plans units that you
--   are forecasted to use.
[$sel:forecastedSpend:CalculatedSpend'] :: CalculatedSpend -> Maybe Spend

-- | The amount of cost, usage, RI units, or Savings Plans units that you
--   have used.
[$sel:actualSpend:CalculatedSpend'] :: CalculatedSpend -> Spend

-- | Create a value of <a>CalculatedSpend</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:forecastedSpend:CalculatedSpend'</a>,
--   <a>calculatedSpend_forecastedSpend</a> - The amount of cost, usage, RI
--   units, or Savings Plans units that you are forecasted to use.
--   
--   <a>$sel:actualSpend:CalculatedSpend'</a>,
--   <a>calculatedSpend_actualSpend</a> - The amount of cost, usage, RI
--   units, or Savings Plans units that you have used.
newCalculatedSpend :: Spend -> CalculatedSpend

-- | The amount of cost, usage, RI units, or Savings Plans units that you
--   are forecasted to use.
calculatedSpend_forecastedSpend :: Lens' CalculatedSpend (Maybe Spend)

-- | The amount of cost, usage, RI units, or Savings Plans units that you
--   have used.
calculatedSpend_actualSpend :: Lens' CalculatedSpend Spend

-- | The types of cost that are included in a <tt>COST</tt> budget, such as
--   tax and subscriptions.
--   
--   <tt>USAGE</tt>, <tt>RI_UTILIZATION</tt>, <tt>RI_COVERAGE</tt>,
--   <tt>SAVINGS_PLANS_UTILIZATION</tt>, and
--   <tt>SAVINGS_PLANS_COVERAGE</tt> budgets do not have
--   <tt>CostTypes</tt>.
--   
--   <i>See:</i> <a>newCostTypes</a> smart constructor.
data CostTypes
CostTypes' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> CostTypes

-- | Specifies whether a budget includes subscriptions.
--   
--   The default value is <tt>true</tt>.
[$sel:includeSubscription:CostTypes'] :: CostTypes -> Maybe Bool

-- | Specifies whether a budget uses the amortized rate.
--   
--   The default value is <tt>false</tt>.
[$sel:useAmortized:CostTypes'] :: CostTypes -> Maybe Bool

-- | Specifies whether a budget includes credits.
--   
--   The default value is <tt>true</tt>.
[$sel:includeCredit:CostTypes'] :: CostTypes -> Maybe Bool

-- | Specifies whether a budget uses a blended rate.
--   
--   The default value is <tt>false</tt>.
[$sel:useBlended:CostTypes'] :: CostTypes -> Maybe Bool

-- | Specifies whether a budget includes support subscription fees.
--   
--   The default value is <tt>true</tt>.
[$sel:includeSupport:CostTypes'] :: CostTypes -> Maybe Bool

-- | Specifies whether a budget includes refunds.
--   
--   The default value is <tt>true</tt>.
[$sel:includeRefund:CostTypes'] :: CostTypes -> Maybe Bool

-- | Specifies whether a budget includes taxes.
--   
--   The default value is <tt>true</tt>.
[$sel:includeTax:CostTypes'] :: CostTypes -> Maybe Bool

-- | Specifies whether a budget includes discounts.
--   
--   The default value is <tt>true</tt>.
[$sel:includeDiscount:CostTypes'] :: CostTypes -> Maybe Bool

-- | Specifies whether a budget includes non-RI subscription costs.
--   
--   The default value is <tt>true</tt>.
[$sel:includeOtherSubscription:CostTypes'] :: CostTypes -> Maybe Bool

-- | Specifies whether a budget includes upfront RI costs.
--   
--   The default value is <tt>true</tt>.
[$sel:includeUpfront:CostTypes'] :: CostTypes -> Maybe Bool

-- | Specifies whether a budget includes recurring fees such as monthly RI
--   fees.
--   
--   The default value is <tt>true</tt>.
[$sel:includeRecurring:CostTypes'] :: CostTypes -> Maybe Bool

-- | Create a value of <a>CostTypes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeSubscription:CostTypes'</a>,
--   <a>costTypes_includeSubscription</a> - Specifies whether a budget
--   includes subscriptions.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:useAmortized:CostTypes'</a>, <a>costTypes_useAmortized</a> -
--   Specifies whether a budget uses the amortized rate.
--   
--   The default value is <tt>false</tt>.
--   
--   <a>$sel:includeCredit:CostTypes'</a>, <a>costTypes_includeCredit</a> -
--   Specifies whether a budget includes credits.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:useBlended:CostTypes'</a>, <a>costTypes_useBlended</a> -
--   Specifies whether a budget uses a blended rate.
--   
--   The default value is <tt>false</tt>.
--   
--   <a>$sel:includeSupport:CostTypes'</a>, <a>costTypes_includeSupport</a>
--   - Specifies whether a budget includes support subscription fees.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:includeRefund:CostTypes'</a>, <a>costTypes_includeRefund</a> -
--   Specifies whether a budget includes refunds.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:includeTax:CostTypes'</a>, <a>costTypes_includeTax</a> -
--   Specifies whether a budget includes taxes.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:includeDiscount:CostTypes'</a>,
--   <a>costTypes_includeDiscount</a> - Specifies whether a budget includes
--   discounts.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:includeOtherSubscription:CostTypes'</a>,
--   <a>costTypes_includeOtherSubscription</a> - Specifies whether a budget
--   includes non-RI subscription costs.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:includeUpfront:CostTypes'</a>, <a>costTypes_includeUpfront</a>
--   - Specifies whether a budget includes upfront RI costs.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:includeRecurring:CostTypes'</a>,
--   <a>costTypes_includeRecurring</a> - Specifies whether a budget
--   includes recurring fees such as monthly RI fees.
--   
--   The default value is <tt>true</tt>.
newCostTypes :: CostTypes

-- | Specifies whether a budget includes subscriptions.
--   
--   The default value is <tt>true</tt>.
costTypes_includeSubscription :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget uses the amortized rate.
--   
--   The default value is <tt>false</tt>.
costTypes_useAmortized :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes credits.
--   
--   The default value is <tt>true</tt>.
costTypes_includeCredit :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget uses a blended rate.
--   
--   The default value is <tt>false</tt>.
costTypes_useBlended :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes support subscription fees.
--   
--   The default value is <tt>true</tt>.
costTypes_includeSupport :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes refunds.
--   
--   The default value is <tt>true</tt>.
costTypes_includeRefund :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes taxes.
--   
--   The default value is <tt>true</tt>.
costTypes_includeTax :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes discounts.
--   
--   The default value is <tt>true</tt>.
costTypes_includeDiscount :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes non-RI subscription costs.
--   
--   The default value is <tt>true</tt>.
costTypes_includeOtherSubscription :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes upfront RI costs.
--   
--   The default value is <tt>true</tt>.
costTypes_includeUpfront :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes recurring fees such as monthly RI
--   fees.
--   
--   The default value is <tt>true</tt>.
costTypes_includeRecurring :: Lens' CostTypes (Maybe Bool)

-- | Specifies all of the type-specific parameters.
--   
--   <i>See:</i> <a>newDefinition</a> smart constructor.
data Definition
Definition' :: Maybe IamActionDefinition -> Maybe SsmActionDefinition -> Maybe ScpActionDefinition -> Definition

-- | The AWS Identity and Access Management (IAM) action definition
--   details.
[$sel:iamActionDefinition:Definition'] :: Definition -> Maybe IamActionDefinition

-- | The AWS Systems Manager (SSM) action definition details.
[$sel:ssmActionDefinition:Definition'] :: Definition -> Maybe SsmActionDefinition

-- | The service control policies (SCPs) action definition details.
[$sel:scpActionDefinition:Definition'] :: Definition -> Maybe ScpActionDefinition

-- | Create a value of <a>Definition</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iamActionDefinition:Definition'</a>,
--   <a>definition_iamActionDefinition</a> - The AWS Identity and Access
--   Management (IAM) action definition details.
--   
--   <a>$sel:ssmActionDefinition:Definition'</a>,
--   <a>definition_ssmActionDefinition</a> - The AWS Systems Manager (SSM)
--   action definition details.
--   
--   <a>$sel:scpActionDefinition:Definition'</a>,
--   <a>definition_scpActionDefinition</a> - The service control policies
--   (SCPs) action definition details.
newDefinition :: Definition

-- | The AWS Identity and Access Management (IAM) action definition
--   details.
definition_iamActionDefinition :: Lens' Definition (Maybe IamActionDefinition)

-- | The AWS Systems Manager (SSM) action definition details.
definition_ssmActionDefinition :: Lens' Definition (Maybe SsmActionDefinition)

-- | The service control policies (SCPs) action definition details.
definition_scpActionDefinition :: Lens' Definition (Maybe ScpActionDefinition)

-- | The AWS Identity and Access Management (IAM) action definition
--   details.
--   
--   <i>See:</i> <a>newIamActionDefinition</a> smart constructor.
data IamActionDefinition
IamActionDefinition' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Text -> IamActionDefinition

-- | A list of groups to be attached. There must be at least one group.
[$sel:groups:IamActionDefinition'] :: IamActionDefinition -> Maybe (NonEmpty Text)

-- | A list of roles to be attached. There must be at least one role.
[$sel:roles:IamActionDefinition'] :: IamActionDefinition -> Maybe (NonEmpty Text)

-- | A list of users to be attached. There must be at least one user.
[$sel:users:IamActionDefinition'] :: IamActionDefinition -> Maybe (NonEmpty Text)

-- | The Amazon Resource Name (ARN) of the policy to be attached.
[$sel:policyArn:IamActionDefinition'] :: IamActionDefinition -> Text

-- | Create a value of <a>IamActionDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groups:IamActionDefinition'</a>,
--   <a>iamActionDefinition_groups</a> - A list of groups to be attached.
--   There must be at least one group.
--   
--   <a>$sel:roles:IamActionDefinition'</a>,
--   <a>iamActionDefinition_roles</a> - A list of roles to be attached.
--   There must be at least one role.
--   
--   <a>$sel:users:IamActionDefinition'</a>,
--   <a>iamActionDefinition_users</a> - A list of users to be attached.
--   There must be at least one user.
--   
--   <a>$sel:policyArn:IamActionDefinition'</a>,
--   <a>iamActionDefinition_policyArn</a> - The Amazon Resource Name (ARN)
--   of the policy to be attached.
newIamActionDefinition :: Text -> IamActionDefinition

-- | A list of groups to be attached. There must be at least one group.
iamActionDefinition_groups :: Lens' IamActionDefinition (Maybe (NonEmpty Text))

-- | A list of roles to be attached. There must be at least one role.
iamActionDefinition_roles :: Lens' IamActionDefinition (Maybe (NonEmpty Text))

-- | A list of users to be attached. There must be at least one user.
iamActionDefinition_users :: Lens' IamActionDefinition (Maybe (NonEmpty Text))

-- | The Amazon Resource Name (ARN) of the policy to be attached.
iamActionDefinition_policyArn :: Lens' IamActionDefinition Text

-- | A notification that is associated with a budget. A budget can have up
--   to ten notifications.
--   
--   Each notification must have at least one subscriber. A notification
--   can have one SNS subscriber and up to 10 email subscribers, for a
--   total of 11 subscribers.
--   
--   For example, if you have a budget for 200 dollars and you want to be
--   notified when you go over 160 dollars, create a notification with the
--   following parameters:
--   
--   <ul>
--   <li>A notificationType of <tt>ACTUAL</tt></li>
--   <li>A <tt>thresholdType</tt> of <tt>PERCENTAGE</tt></li>
--   <li>A <tt>comparisonOperator</tt> of <tt>GREATER_THAN</tt></li>
--   <li>A notification <tt>threshold</tt> of <tt>80</tt></li>
--   </ul>
--   
--   <i>See:</i> <a>newNotification</a> smart constructor.
data Notification
Notification' :: Maybe NotificationState -> Maybe ThresholdType -> NotificationType -> ComparisonOperator -> Double -> Notification

-- | Whether this notification is in alarm. If a budget notification is in
--   the <tt>ALARM</tt> state, you have passed the set threshold for the
--   budget.
[$sel:notificationState:Notification'] :: Notification -> Maybe NotificationState

-- | The type of threshold for a notification. For <tt>ABSOLUTE_VALUE</tt>
--   thresholds, AWS notifies you when you go over or are forecasted to go
--   over your total cost threshold. For <tt>PERCENTAGE</tt> thresholds,
--   AWS notifies you when you go over or are forecasted to go over a
--   certain percentage of your forecasted spend. For example, if you have
--   a budget for 200 dollars and you have a <tt>PERCENTAGE</tt> threshold
--   of 80%, AWS notifies you when you go over 160 dollars.
[$sel:thresholdType:Notification'] :: Notification -> Maybe ThresholdType

-- | Whether the notification is for how much you have spent
--   (<tt>ACTUAL</tt>) or for how much you're forecasted to spend
--   (<tt>FORECASTED</tt>).
[$sel:notificationType:Notification'] :: Notification -> NotificationType

-- | The comparison that is used for this notification.
[$sel:comparisonOperator:Notification'] :: Notification -> ComparisonOperator

-- | The threshold that is associated with a notification. Thresholds are
--   always a percentage, and many customers find value being alerted
--   between 50% - 200% of the budgeted amount. The maximum limit for your
--   threshold is 1,000,000% above the budgeted amount.
[$sel:threshold:Notification'] :: Notification -> Double

-- | Create a value of <a>Notification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationState:Notification'</a>,
--   <a>notification_notificationState</a> - Whether this notification is
--   in alarm. If a budget notification is in the <tt>ALARM</tt> state, you
--   have passed the set threshold for the budget.
--   
--   <a>$sel:thresholdType:Notification'</a>,
--   <a>notification_thresholdType</a> - The type of threshold for a
--   notification. For <tt>ABSOLUTE_VALUE</tt> thresholds, AWS notifies you
--   when you go over or are forecasted to go over your total cost
--   threshold. For <tt>PERCENTAGE</tt> thresholds, AWS notifies you when
--   you go over or are forecasted to go over a certain percentage of your
--   forecasted spend. For example, if you have a budget for 200 dollars
--   and you have a <tt>PERCENTAGE</tt> threshold of 80%, AWS notifies you
--   when you go over 160 dollars.
--   
--   <a>$sel:notificationType:Notification'</a>,
--   <a>notification_notificationType</a> - Whether the notification is for
--   how much you have spent (<tt>ACTUAL</tt>) or for how much you're
--   forecasted to spend (<tt>FORECASTED</tt>).
--   
--   <a>$sel:comparisonOperator:Notification'</a>,
--   <a>notification_comparisonOperator</a> - The comparison that is used
--   for this notification.
--   
--   <a>$sel:threshold:Notification'</a>, <a>notification_threshold</a> -
--   The threshold that is associated with a notification. Thresholds are
--   always a percentage, and many customers find value being alerted
--   between 50% - 200% of the budgeted amount. The maximum limit for your
--   threshold is 1,000,000% above the budgeted amount.
newNotification :: NotificationType -> ComparisonOperator -> Double -> Notification

-- | Whether this notification is in alarm. If a budget notification is in
--   the <tt>ALARM</tt> state, you have passed the set threshold for the
--   budget.
notification_notificationState :: Lens' Notification (Maybe NotificationState)

-- | The type of threshold for a notification. For <tt>ABSOLUTE_VALUE</tt>
--   thresholds, AWS notifies you when you go over or are forecasted to go
--   over your total cost threshold. For <tt>PERCENTAGE</tt> thresholds,
--   AWS notifies you when you go over or are forecasted to go over a
--   certain percentage of your forecasted spend. For example, if you have
--   a budget for 200 dollars and you have a <tt>PERCENTAGE</tt> threshold
--   of 80%, AWS notifies you when you go over 160 dollars.
notification_thresholdType :: Lens' Notification (Maybe ThresholdType)

-- | Whether the notification is for how much you have spent
--   (<tt>ACTUAL</tt>) or for how much you're forecasted to spend
--   (<tt>FORECASTED</tt>).
notification_notificationType :: Lens' Notification NotificationType

-- | The comparison that is used for this notification.
notification_comparisonOperator :: Lens' Notification ComparisonOperator

-- | The threshold that is associated with a notification. Thresholds are
--   always a percentage, and many customers find value being alerted
--   between 50% - 200% of the budgeted amount. The maximum limit for your
--   threshold is 1,000,000% above the budgeted amount.
notification_threshold :: Lens' Notification Double

-- | A notification with subscribers. A notification can have one SNS
--   subscriber and up to 10 email subscribers, for a total of 11
--   subscribers.
--   
--   <i>See:</i> <a>newNotificationWithSubscribers</a> smart constructor.
data NotificationWithSubscribers
NotificationWithSubscribers' :: Notification -> NonEmpty Subscriber -> NotificationWithSubscribers

-- | The notification that is associated with a budget.
[$sel:notification:NotificationWithSubscribers'] :: NotificationWithSubscribers -> Notification

-- | A list of subscribers who are subscribed to this notification.
[$sel:subscribers:NotificationWithSubscribers'] :: NotificationWithSubscribers -> NonEmpty Subscriber

-- | Create a value of <a>NotificationWithSubscribers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notification:NotificationWithSubscribers'</a>,
--   <a>notificationWithSubscribers_notification</a> - The notification
--   that is associated with a budget.
--   
--   <a>$sel:subscribers:NotificationWithSubscribers'</a>,
--   <a>notificationWithSubscribers_subscribers</a> - A list of subscribers
--   who are subscribed to this notification.
newNotificationWithSubscribers :: Notification -> NonEmpty Subscriber -> NotificationWithSubscribers

-- | The notification that is associated with a budget.
notificationWithSubscribers_notification :: Lens' NotificationWithSubscribers Notification

-- | A list of subscribers who are subscribed to this notification.
notificationWithSubscribers_subscribers :: Lens' NotificationWithSubscribers (NonEmpty Subscriber)

-- | The service control policies (SCP) action definition details.
--   
--   <i>See:</i> <a>newScpActionDefinition</a> smart constructor.
data ScpActionDefinition
ScpActionDefinition' :: Text -> NonEmpty Text -> ScpActionDefinition

-- | The policy ID attached.
[$sel:policyId:ScpActionDefinition'] :: ScpActionDefinition -> Text

-- | A list of target IDs.
[$sel:targetIds:ScpActionDefinition'] :: ScpActionDefinition -> NonEmpty Text

-- | Create a value of <a>ScpActionDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyId:ScpActionDefinition'</a>,
--   <a>scpActionDefinition_policyId</a> - The policy ID attached.
--   
--   <a>$sel:targetIds:ScpActionDefinition'</a>,
--   <a>scpActionDefinition_targetIds</a> - A list of target IDs.
newScpActionDefinition :: Text -> NonEmpty Text -> ScpActionDefinition

-- | The policy ID attached.
scpActionDefinition_policyId :: Lens' ScpActionDefinition Text

-- | A list of target IDs.
scpActionDefinition_targetIds :: Lens' ScpActionDefinition (NonEmpty Text)

-- | The amount of cost or usage that is measured for a budget.
--   
--   For example, a <tt>Spend</tt> for <tt>3 GB</tt> of S3 usage would have
--   the following parameters:
--   
--   <ul>
--   <li>An <tt>Amount</tt> of <tt>3</tt></li>
--   <li>A <tt>unit</tt> of <tt>GB</tt></li>
--   </ul>
--   
--   <i>See:</i> <a>newSpend</a> smart constructor.
data Spend
Spend' :: Text -> Text -> Spend

-- | The cost or usage amount that is associated with a budget forecast,
--   actual spend, or budget threshold.
[$sel:amount:Spend'] :: Spend -> Text

-- | The unit of measurement that is used for the budget forecast, actual
--   spend, or budget threshold, such as dollars or GB.
[$sel:unit:Spend'] :: Spend -> Text

-- | Create a value of <a>Spend</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:amount:Spend'</a>, <a>spend_amount</a> - The cost or usage
--   amount that is associated with a budget forecast, actual spend, or
--   budget threshold.
--   
--   <a>$sel:unit:Spend'</a>, <a>spend_unit</a> - The unit of measurement
--   that is used for the budget forecast, actual spend, or budget
--   threshold, such as dollars or GB.
newSpend :: Text -> Text -> Spend

-- | The cost or usage amount that is associated with a budget forecast,
--   actual spend, or budget threshold.
spend_amount :: Lens' Spend Text

-- | The unit of measurement that is used for the budget forecast, actual
--   spend, or budget threshold, such as dollars or GB.
spend_unit :: Lens' Spend Text

-- | The AWS Systems Manager (SSM) action definition details.
--   
--   <i>See:</i> <a>newSsmActionDefinition</a> smart constructor.
data SsmActionDefinition
SsmActionDefinition' :: ActionSubType -> Text -> NonEmpty Text -> SsmActionDefinition

-- | The action subType.
[$sel:actionSubType:SsmActionDefinition'] :: SsmActionDefinition -> ActionSubType

-- | The Region to run the SSM document.
[$sel:region:SsmActionDefinition'] :: SsmActionDefinition -> Text

-- | The EC2 and RDS instance IDs.
[$sel:instanceIds:SsmActionDefinition'] :: SsmActionDefinition -> NonEmpty Text

-- | Create a value of <a>SsmActionDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionSubType:SsmActionDefinition'</a>,
--   <a>ssmActionDefinition_actionSubType</a> - The action subType.
--   
--   <a>$sel:region:SsmActionDefinition'</a>,
--   <a>ssmActionDefinition_region</a> - The Region to run the SSM
--   document.
--   
--   <a>$sel:instanceIds:SsmActionDefinition'</a>,
--   <a>ssmActionDefinition_instanceIds</a> - The EC2 and RDS instance IDs.
newSsmActionDefinition :: ActionSubType -> Text -> NonEmpty Text -> SsmActionDefinition

-- | The action subType.
ssmActionDefinition_actionSubType :: Lens' SsmActionDefinition ActionSubType

-- | The Region to run the SSM document.
ssmActionDefinition_region :: Lens' SsmActionDefinition Text

-- | The EC2 and RDS instance IDs.
ssmActionDefinition_instanceIds :: Lens' SsmActionDefinition (NonEmpty Text)

-- | The subscriber to a budget notification. The subscriber consists of a
--   subscription type and either an Amazon SNS topic or an email address.
--   
--   For example, an email subscriber would have the following parameters:
--   
--   <ul>
--   <li>A <tt>subscriptionType</tt> of <tt>EMAIL</tt></li>
--   <li>An <tt>address</tt> of <tt>example@example.com</tt></li>
--   </ul>
--   
--   <i>See:</i> <a>newSubscriber</a> smart constructor.
data Subscriber
Subscriber' :: SubscriptionType -> Sensitive Text -> Subscriber

-- | The type of notification that AWS sends to a subscriber.
[$sel:subscriptionType:Subscriber'] :: Subscriber -> SubscriptionType

-- | The address that AWS sends budget notifications to, either an SNS
--   topic or an email.
--   
--   When you create a subscriber, the value of <tt>Address</tt> can't
--   contain line breaks.
[$sel:address:Subscriber'] :: Subscriber -> Sensitive Text

-- | Create a value of <a>Subscriber</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionType:Subscriber'</a>,
--   <a>subscriber_subscriptionType</a> - The type of notification that AWS
--   sends to a subscriber.
--   
--   <a>$sel:address:Subscriber'</a>, <a>subscriber_address</a> - The
--   address that AWS sends budget notifications to, either an SNS topic or
--   an email.
--   
--   When you create a subscriber, the value of <tt>Address</tt> can't
--   contain line breaks.
newSubscriber :: SubscriptionType -> Text -> Subscriber

-- | The type of notification that AWS sends to a subscriber.
subscriber_subscriptionType :: Lens' Subscriber SubscriptionType

-- | The address that AWS sends budget notifications to, either an SNS
--   topic or an email.
--   
--   When you create a subscriber, the value of <tt>Address</tt> can't
--   contain line breaks.
subscriber_address :: Lens' Subscriber Text

-- | The period of time that is covered by a budget. The period has a start
--   date and an end date. The start date must come before the end date.
--   There are no restrictions on the end date.
--   
--   <i>See:</i> <a>newTimePeriod</a> smart constructor.
data TimePeriod
TimePeriod' :: Maybe POSIX -> Maybe POSIX -> TimePeriod

-- | The end date for a budget. If you didn't specify an end date, AWS set
--   your end date to <tt>06/15/87 00:00 UTC</tt>. The defaults are the
--   same for the AWS Billing and Cost Management console and the API.
--   
--   After the end date, AWS deletes the budget and all associated
--   notifications and subscribers. You can change your end date with the
--   <tt>UpdateBudget</tt> operation.
[$sel:end:TimePeriod'] :: TimePeriod -> Maybe POSIX

-- | The start date for a budget. If you created your budget and didn't
--   specify a start date, AWS defaults to the start of your chosen time
--   period (DAILY, MONTHLY, QUARTERLY, or ANNUALLY). For example, if you
--   created your budget on January 24, 2018, chose <tt>DAILY</tt>, and
--   didn't set a start date, AWS set your start date to <tt>01/24/18 00:00
--   UTC</tt>. If you chose <tt>MONTHLY</tt>, AWS set your start date to
--   <tt>01/01/18 00:00 UTC</tt>. The defaults are the same for the AWS
--   Billing and Cost Management console and the API.
--   
--   You can change your start date with the <tt>UpdateBudget</tt>
--   operation.
[$sel:start:TimePeriod'] :: TimePeriod -> Maybe POSIX

-- | Create a value of <a>TimePeriod</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:end:TimePeriod'</a>, <a>timePeriod_end</a> - The end date for
--   a budget. If you didn't specify an end date, AWS set your end date to
--   <tt>06/15/87 00:00 UTC</tt>. The defaults are the same for the AWS
--   Billing and Cost Management console and the API.
--   
--   After the end date, AWS deletes the budget and all associated
--   notifications and subscribers. You can change your end date with the
--   <tt>UpdateBudget</tt> operation.
--   
--   <a>$sel:start:TimePeriod'</a>, <a>timePeriod_start</a> - The start
--   date for a budget. If you created your budget and didn't specify a
--   start date, AWS defaults to the start of your chosen time period
--   (DAILY, MONTHLY, QUARTERLY, or ANNUALLY). For example, if you created
--   your budget on January 24, 2018, chose <tt>DAILY</tt>, and didn't set
--   a start date, AWS set your start date to <tt>01/24/18 00:00 UTC</tt>.
--   If you chose <tt>MONTHLY</tt>, AWS set your start date to <tt>01/01/18
--   00:00 UTC</tt>. The defaults are the same for the AWS Billing and Cost
--   Management console and the API.
--   
--   You can change your start date with the <tt>UpdateBudget</tt>
--   operation.
newTimePeriod :: TimePeriod

-- | The end date for a budget. If you didn't specify an end date, AWS set
--   your end date to <tt>06/15/87 00:00 UTC</tt>. The defaults are the
--   same for the AWS Billing and Cost Management console and the API.
--   
--   After the end date, AWS deletes the budget and all associated
--   notifications and subscribers. You can change your end date with the
--   <tt>UpdateBudget</tt> operation.
timePeriod_end :: Lens' TimePeriod (Maybe UTCTime)

-- | The start date for a budget. If you created your budget and didn't
--   specify a start date, AWS defaults to the start of your chosen time
--   period (DAILY, MONTHLY, QUARTERLY, or ANNUALLY). For example, if you
--   created your budget on January 24, 2018, chose <tt>DAILY</tt>, and
--   didn't set a start date, AWS set your start date to <tt>01/24/18 00:00
--   UTC</tt>. If you chose <tt>MONTHLY</tt>, AWS set your start date to
--   <tt>01/01/18 00:00 UTC</tt>. The defaults are the same for the AWS
--   Billing and Cost Management console and the API.
--   
--   You can change your start date with the <tt>UpdateBudget</tt>
--   operation.
timePeriod_start :: Lens' TimePeriod (Maybe UTCTime)


-- | Executes a budget action.
module Network.AWS.Budgets.ExecuteBudgetAction

-- | <i>See:</i> <a>newExecuteBudgetAction</a> smart constructor.
data ExecuteBudgetAction
ExecuteBudgetAction' :: Text -> Text -> Text -> ExecutionType -> ExecuteBudgetAction
[$sel:accountId:ExecuteBudgetAction'] :: ExecuteBudgetAction -> Text
[$sel:budgetName:ExecuteBudgetAction'] :: ExecuteBudgetAction -> Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
[$sel:actionId:ExecuteBudgetAction'] :: ExecuteBudgetAction -> Text

-- | The type of execution.
[$sel:executionType:ExecuteBudgetAction'] :: ExecuteBudgetAction -> ExecutionType

-- | Create a value of <a>ExecuteBudgetAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:ExecuteBudgetAction'</a>,
--   <a>executeBudgetAction_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:ExecuteBudgetAction'</a>,
--   <a>executeBudgetAction_budgetName</a> - Undocumented member.
--   
--   <a>$sel:actionId:ExecuteBudgetAction'</a>,
--   <a>executeBudgetAction_actionId</a> - A system-generated universally
--   unique identifier (UUID) for the action.
--   
--   <a>$sel:executionType:ExecuteBudgetAction'</a>,
--   <a>executeBudgetAction_executionType</a> - The type of execution.
newExecuteBudgetAction :: Text -> Text -> Text -> ExecutionType -> ExecuteBudgetAction

-- | Undocumented member.
executeBudgetAction_accountId :: Lens' ExecuteBudgetAction Text

-- | Undocumented member.
executeBudgetAction_budgetName :: Lens' ExecuteBudgetAction Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
executeBudgetAction_actionId :: Lens' ExecuteBudgetAction Text

-- | The type of execution.
executeBudgetAction_executionType :: Lens' ExecuteBudgetAction ExecutionType

-- | <i>See:</i> <a>newExecuteBudgetActionResponse</a> smart constructor.
data ExecuteBudgetActionResponse
ExecuteBudgetActionResponse' :: Int -> Text -> Text -> Text -> ExecutionType -> ExecuteBudgetActionResponse

-- | The response's http status code.
[$sel:httpStatus:ExecuteBudgetActionResponse'] :: ExecuteBudgetActionResponse -> Int
[$sel:accountId:ExecuteBudgetActionResponse'] :: ExecuteBudgetActionResponse -> Text
[$sel:budgetName:ExecuteBudgetActionResponse'] :: ExecuteBudgetActionResponse -> Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
[$sel:actionId:ExecuteBudgetActionResponse'] :: ExecuteBudgetActionResponse -> Text

-- | The type of execution.
[$sel:executionType:ExecuteBudgetActionResponse'] :: ExecuteBudgetActionResponse -> ExecutionType

-- | Create a value of <a>ExecuteBudgetActionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ExecuteBudgetActionResponse'</a>,
--   <a>executeBudgetActionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:accountId:ExecuteBudgetAction'</a>,
--   <a>executeBudgetActionResponse_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:ExecuteBudgetAction'</a>,
--   <a>executeBudgetActionResponse_budgetName</a> - Undocumented member.
--   
--   <a>$sel:actionId:ExecuteBudgetAction'</a>,
--   <a>executeBudgetActionResponse_actionId</a> - A system-generated
--   universally unique identifier (UUID) for the action.
--   
--   <a>$sel:executionType:ExecuteBudgetAction'</a>,
--   <a>executeBudgetActionResponse_executionType</a> - The type of
--   execution.
newExecuteBudgetActionResponse :: Int -> Text -> Text -> Text -> ExecutionType -> ExecuteBudgetActionResponse

-- | The response's http status code.
executeBudgetActionResponse_httpStatus :: Lens' ExecuteBudgetActionResponse Int

-- | Undocumented member.
executeBudgetActionResponse_accountId :: Lens' ExecuteBudgetActionResponse Text

-- | Undocumented member.
executeBudgetActionResponse_budgetName :: Lens' ExecuteBudgetActionResponse Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
executeBudgetActionResponse_actionId :: Lens' ExecuteBudgetActionResponse Text

-- | The type of execution.
executeBudgetActionResponse_executionType :: Lens' ExecuteBudgetActionResponse ExecutionType
instance GHC.Generics.Generic Network.AWS.Budgets.ExecuteBudgetAction.ExecuteBudgetAction
instance GHC.Show.Show Network.AWS.Budgets.ExecuteBudgetAction.ExecuteBudgetAction
instance GHC.Read.Read Network.AWS.Budgets.ExecuteBudgetAction.ExecuteBudgetAction
instance GHC.Classes.Eq Network.AWS.Budgets.ExecuteBudgetAction.ExecuteBudgetAction
instance GHC.Generics.Generic Network.AWS.Budgets.ExecuteBudgetAction.ExecuteBudgetActionResponse
instance GHC.Show.Show Network.AWS.Budgets.ExecuteBudgetAction.ExecuteBudgetActionResponse
instance GHC.Read.Read Network.AWS.Budgets.ExecuteBudgetAction.ExecuteBudgetActionResponse
instance GHC.Classes.Eq Network.AWS.Budgets.ExecuteBudgetAction.ExecuteBudgetActionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.ExecuteBudgetAction.ExecuteBudgetAction
instance Control.DeepSeq.NFData Network.AWS.Budgets.ExecuteBudgetAction.ExecuteBudgetActionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.ExecuteBudgetAction.ExecuteBudgetAction
instance Control.DeepSeq.NFData Network.AWS.Budgets.ExecuteBudgetAction.ExecuteBudgetAction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.ExecuteBudgetAction.ExecuteBudgetAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.ExecuteBudgetAction.ExecuteBudgetAction
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.ExecuteBudgetAction.ExecuteBudgetAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.ExecuteBudgetAction.ExecuteBudgetAction


-- | Lists the subscribers that are associated with a notification.
--   
--   This operation returns paginated results.
module Network.AWS.Budgets.DescribeSubscribersForNotification

-- | Request of DescribeSubscribersForNotification
--   
--   <i>See:</i> <a>newDescribeSubscribersForNotification</a> smart
--   constructor.
data DescribeSubscribersForNotification
DescribeSubscribersForNotification' :: Maybe Text -> Maybe Natural -> Text -> Text -> Notification -> DescribeSubscribersForNotification

-- | The pagination token that you include in your request to indicate the
--   next set of results that you want to retrieve.
[$sel:nextToken:DescribeSubscribersForNotification'] :: DescribeSubscribersForNotification -> Maybe Text

-- | An optional integer that represents how many entries a paginated
--   response contains. The maximum is 100.
[$sel:maxResults:DescribeSubscribersForNotification'] :: DescribeSubscribersForNotification -> Maybe Natural

-- | The <tt>accountId</tt> that is associated with the budget whose
--   subscribers you want descriptions of.
[$sel:accountId:DescribeSubscribersForNotification'] :: DescribeSubscribersForNotification -> Text

-- | The name of the budget whose subscribers you want descriptions of.
[$sel:budgetName:DescribeSubscribersForNotification'] :: DescribeSubscribersForNotification -> Text

-- | The notification whose subscribers you want to list.
[$sel:notification:DescribeSubscribersForNotification'] :: DescribeSubscribersForNotification -> Notification

-- | Create a value of <a>DescribeSubscribersForNotification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeSubscribersForNotification'</a>,
--   <a>describeSubscribersForNotification_nextToken</a> - The pagination
--   token that you include in your request to indicate the next set of
--   results that you want to retrieve.
--   
--   <a>$sel:maxResults:DescribeSubscribersForNotification'</a>,
--   <a>describeSubscribersForNotification_maxResults</a> - An optional
--   integer that represents how many entries a paginated response
--   contains. The maximum is 100.
--   
--   <a>$sel:accountId:DescribeSubscribersForNotification'</a>,
--   <a>describeSubscribersForNotification_accountId</a> - The
--   <tt>accountId</tt> that is associated with the budget whose
--   subscribers you want descriptions of.
--   
--   <a>$sel:budgetName:DescribeSubscribersForNotification'</a>,
--   <a>describeSubscribersForNotification_budgetName</a> - The name of the
--   budget whose subscribers you want descriptions of.
--   
--   <a>$sel:notification:DescribeSubscribersForNotification'</a>,
--   <a>describeSubscribersForNotification_notification</a> - The
--   notification whose subscribers you want to list.
newDescribeSubscribersForNotification :: Text -> Text -> Notification -> DescribeSubscribersForNotification

-- | The pagination token that you include in your request to indicate the
--   next set of results that you want to retrieve.
describeSubscribersForNotification_nextToken :: Lens' DescribeSubscribersForNotification (Maybe Text)

-- | An optional integer that represents how many entries a paginated
--   response contains. The maximum is 100.
describeSubscribersForNotification_maxResults :: Lens' DescribeSubscribersForNotification (Maybe Natural)

-- | The <tt>accountId</tt> that is associated with the budget whose
--   subscribers you want descriptions of.
describeSubscribersForNotification_accountId :: Lens' DescribeSubscribersForNotification Text

-- | The name of the budget whose subscribers you want descriptions of.
describeSubscribersForNotification_budgetName :: Lens' DescribeSubscribersForNotification Text

-- | The notification whose subscribers you want to list.
describeSubscribersForNotification_notification :: Lens' DescribeSubscribersForNotification Notification

-- | Response of DescribeSubscribersForNotification
--   
--   <i>See:</i> <a>newDescribeSubscribersForNotificationResponse</a> smart
--   constructor.
data DescribeSubscribersForNotificationResponse
DescribeSubscribersForNotificationResponse' :: Maybe Text -> Maybe (NonEmpty Subscriber) -> Int -> DescribeSubscribersForNotificationResponse

-- | The pagination token in the service response that indicates the next
--   set of results that you can retrieve.
[$sel:nextToken:DescribeSubscribersForNotificationResponse'] :: DescribeSubscribersForNotificationResponse -> Maybe Text

-- | A list of subscribers that are associated with a notification.
[$sel:subscribers:DescribeSubscribersForNotificationResponse'] :: DescribeSubscribersForNotificationResponse -> Maybe (NonEmpty Subscriber)

-- | The response's http status code.
[$sel:httpStatus:DescribeSubscribersForNotificationResponse'] :: DescribeSubscribersForNotificationResponse -> Int

-- | Create a value of <a>DescribeSubscribersForNotificationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeSubscribersForNotification'</a>,
--   <a>describeSubscribersForNotificationResponse_nextToken</a> - The
--   pagination token in the service response that indicates the next set
--   of results that you can retrieve.
--   
--   <a>$sel:subscribers:DescribeSubscribersForNotificationResponse'</a>,
--   <a>describeSubscribersForNotificationResponse_subscribers</a> - A list
--   of subscribers that are associated with a notification.
--   
--   <a>$sel:httpStatus:DescribeSubscribersForNotificationResponse'</a>,
--   <a>describeSubscribersForNotificationResponse_httpStatus</a> - The
--   response's http status code.
newDescribeSubscribersForNotificationResponse :: Int -> DescribeSubscribersForNotificationResponse

-- | The pagination token in the service response that indicates the next
--   set of results that you can retrieve.
describeSubscribersForNotificationResponse_nextToken :: Lens' DescribeSubscribersForNotificationResponse (Maybe Text)

-- | A list of subscribers that are associated with a notification.
describeSubscribersForNotificationResponse_subscribers :: Lens' DescribeSubscribersForNotificationResponse (Maybe (NonEmpty Subscriber))

-- | The response's http status code.
describeSubscribersForNotificationResponse_httpStatus :: Lens' DescribeSubscribersForNotificationResponse Int
instance GHC.Generics.Generic Network.AWS.Budgets.DescribeSubscribersForNotification.DescribeSubscribersForNotification
instance GHC.Show.Show Network.AWS.Budgets.DescribeSubscribersForNotification.DescribeSubscribersForNotification
instance GHC.Read.Read Network.AWS.Budgets.DescribeSubscribersForNotification.DescribeSubscribersForNotification
instance GHC.Classes.Eq Network.AWS.Budgets.DescribeSubscribersForNotification.DescribeSubscribersForNotification
instance GHC.Generics.Generic Network.AWS.Budgets.DescribeSubscribersForNotification.DescribeSubscribersForNotificationResponse
instance GHC.Show.Show Network.AWS.Budgets.DescribeSubscribersForNotification.DescribeSubscribersForNotificationResponse
instance GHC.Classes.Eq Network.AWS.Budgets.DescribeSubscribersForNotification.DescribeSubscribersForNotificationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.DescribeSubscribersForNotification.DescribeSubscribersForNotification
instance Control.DeepSeq.NFData Network.AWS.Budgets.DescribeSubscribersForNotification.DescribeSubscribersForNotificationResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Budgets.DescribeSubscribersForNotification.DescribeSubscribersForNotification
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.DescribeSubscribersForNotification.DescribeSubscribersForNotification
instance Control.DeepSeq.NFData Network.AWS.Budgets.DescribeSubscribersForNotification.DescribeSubscribersForNotification
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.DescribeSubscribersForNotification.DescribeSubscribersForNotification
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.DescribeSubscribersForNotification.DescribeSubscribersForNotification
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.DescribeSubscribersForNotification.DescribeSubscribersForNotification
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.DescribeSubscribersForNotification.DescribeSubscribersForNotification


-- | Lists the notifications that are associated with a budget.
--   
--   This operation returns paginated results.
module Network.AWS.Budgets.DescribeNotificationsForBudget

-- | Request of DescribeNotificationsForBudget
--   
--   <i>See:</i> <a>newDescribeNotificationsForBudget</a> smart
--   constructor.
data DescribeNotificationsForBudget
DescribeNotificationsForBudget' :: Maybe Text -> Maybe Natural -> Text -> Text -> DescribeNotificationsForBudget

-- | The pagination token that you include in your request to indicate the
--   next set of results that you want to retrieve.
[$sel:nextToken:DescribeNotificationsForBudget'] :: DescribeNotificationsForBudget -> Maybe Text

-- | An optional integer that represents how many entries a paginated
--   response contains. The maximum is 100.
[$sel:maxResults:DescribeNotificationsForBudget'] :: DescribeNotificationsForBudget -> Maybe Natural

-- | The <tt>accountId</tt> that is associated with the budget whose
--   notifications you want descriptions of.
[$sel:accountId:DescribeNotificationsForBudget'] :: DescribeNotificationsForBudget -> Text

-- | The name of the budget whose notifications you want descriptions of.
[$sel:budgetName:DescribeNotificationsForBudget'] :: DescribeNotificationsForBudget -> Text

-- | Create a value of <a>DescribeNotificationsForBudget</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeNotificationsForBudget'</a>,
--   <a>describeNotificationsForBudget_nextToken</a> - The pagination token
--   that you include in your request to indicate the next set of results
--   that you want to retrieve.
--   
--   <a>$sel:maxResults:DescribeNotificationsForBudget'</a>,
--   <a>describeNotificationsForBudget_maxResults</a> - An optional integer
--   that represents how many entries a paginated response contains. The
--   maximum is 100.
--   
--   <a>$sel:accountId:DescribeNotificationsForBudget'</a>,
--   <a>describeNotificationsForBudget_accountId</a> - The
--   <tt>accountId</tt> that is associated with the budget whose
--   notifications you want descriptions of.
--   
--   <a>$sel:budgetName:DescribeNotificationsForBudget'</a>,
--   <a>describeNotificationsForBudget_budgetName</a> - The name of the
--   budget whose notifications you want descriptions of.
newDescribeNotificationsForBudget :: Text -> Text -> DescribeNotificationsForBudget

-- | The pagination token that you include in your request to indicate the
--   next set of results that you want to retrieve.
describeNotificationsForBudget_nextToken :: Lens' DescribeNotificationsForBudget (Maybe Text)

-- | An optional integer that represents how many entries a paginated
--   response contains. The maximum is 100.
describeNotificationsForBudget_maxResults :: Lens' DescribeNotificationsForBudget (Maybe Natural)

-- | The <tt>accountId</tt> that is associated with the budget whose
--   notifications you want descriptions of.
describeNotificationsForBudget_accountId :: Lens' DescribeNotificationsForBudget Text

-- | The name of the budget whose notifications you want descriptions of.
describeNotificationsForBudget_budgetName :: Lens' DescribeNotificationsForBudget Text

-- | Response of GetNotificationsForBudget
--   
--   <i>See:</i> <a>newDescribeNotificationsForBudgetResponse</a> smart
--   constructor.
data DescribeNotificationsForBudgetResponse
DescribeNotificationsForBudgetResponse' :: Maybe Text -> Maybe [Notification] -> Int -> DescribeNotificationsForBudgetResponse

-- | The pagination token in the service response that indicates the next
--   set of results that you can retrieve.
[$sel:nextToken:DescribeNotificationsForBudgetResponse'] :: DescribeNotificationsForBudgetResponse -> Maybe Text

-- | A list of notifications that are associated with a budget.
[$sel:notifications:DescribeNotificationsForBudgetResponse'] :: DescribeNotificationsForBudgetResponse -> Maybe [Notification]

-- | The response's http status code.
[$sel:httpStatus:DescribeNotificationsForBudgetResponse'] :: DescribeNotificationsForBudgetResponse -> Int

-- | Create a value of <a>DescribeNotificationsForBudgetResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeNotificationsForBudget'</a>,
--   <a>describeNotificationsForBudgetResponse_nextToken</a> - The
--   pagination token in the service response that indicates the next set
--   of results that you can retrieve.
--   
--   <a>$sel:notifications:DescribeNotificationsForBudgetResponse'</a>,
--   <a>describeNotificationsForBudgetResponse_notifications</a> - A list
--   of notifications that are associated with a budget.
--   
--   <a>$sel:httpStatus:DescribeNotificationsForBudgetResponse'</a>,
--   <a>describeNotificationsForBudgetResponse_httpStatus</a> - The
--   response's http status code.
newDescribeNotificationsForBudgetResponse :: Int -> DescribeNotificationsForBudgetResponse

-- | The pagination token in the service response that indicates the next
--   set of results that you can retrieve.
describeNotificationsForBudgetResponse_nextToken :: Lens' DescribeNotificationsForBudgetResponse (Maybe Text)

-- | A list of notifications that are associated with a budget.
describeNotificationsForBudgetResponse_notifications :: Lens' DescribeNotificationsForBudgetResponse (Maybe [Notification])

-- | The response's http status code.
describeNotificationsForBudgetResponse_httpStatus :: Lens' DescribeNotificationsForBudgetResponse Int
instance GHC.Generics.Generic Network.AWS.Budgets.DescribeNotificationsForBudget.DescribeNotificationsForBudget
instance GHC.Show.Show Network.AWS.Budgets.DescribeNotificationsForBudget.DescribeNotificationsForBudget
instance GHC.Read.Read Network.AWS.Budgets.DescribeNotificationsForBudget.DescribeNotificationsForBudget
instance GHC.Classes.Eq Network.AWS.Budgets.DescribeNotificationsForBudget.DescribeNotificationsForBudget
instance GHC.Generics.Generic Network.AWS.Budgets.DescribeNotificationsForBudget.DescribeNotificationsForBudgetResponse
instance GHC.Show.Show Network.AWS.Budgets.DescribeNotificationsForBudget.DescribeNotificationsForBudgetResponse
instance GHC.Read.Read Network.AWS.Budgets.DescribeNotificationsForBudget.DescribeNotificationsForBudgetResponse
instance GHC.Classes.Eq Network.AWS.Budgets.DescribeNotificationsForBudget.DescribeNotificationsForBudgetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.DescribeNotificationsForBudget.DescribeNotificationsForBudget
instance Control.DeepSeq.NFData Network.AWS.Budgets.DescribeNotificationsForBudget.DescribeNotificationsForBudgetResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Budgets.DescribeNotificationsForBudget.DescribeNotificationsForBudget
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.DescribeNotificationsForBudget.DescribeNotificationsForBudget
instance Control.DeepSeq.NFData Network.AWS.Budgets.DescribeNotificationsForBudget.DescribeNotificationsForBudget
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.DescribeNotificationsForBudget.DescribeNotificationsForBudget
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.DescribeNotificationsForBudget.DescribeNotificationsForBudget
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.DescribeNotificationsForBudget.DescribeNotificationsForBudget
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.DescribeNotificationsForBudget.DescribeNotificationsForBudget


-- | Lists the budgets that are associated with an account.
--   
--   The Request Syntax section shows the <tt>BudgetLimit</tt> syntax. For
--   <tt>PlannedBudgetLimits</tt>, see the <a>Examples</a> section.
--   
--   This operation returns paginated results.
module Network.AWS.Budgets.DescribeBudgets

-- | Request of DescribeBudgets
--   
--   <i>See:</i> <a>newDescribeBudgets</a> smart constructor.
data DescribeBudgets
DescribeBudgets' :: Maybe Text -> Maybe Natural -> Text -> DescribeBudgets

-- | The pagination token that you include in your request to indicate the
--   next set of results that you want to retrieve.
[$sel:nextToken:DescribeBudgets'] :: DescribeBudgets -> Maybe Text

-- | An optional integer that represents how many entries a paginated
--   response contains. The maximum is 100.
[$sel:maxResults:DescribeBudgets'] :: DescribeBudgets -> Maybe Natural

-- | The <tt>accountId</tt> that is associated with the budgets that you
--   want descriptions of.
[$sel:accountId:DescribeBudgets'] :: DescribeBudgets -> Text

-- | Create a value of <a>DescribeBudgets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeBudgets'</a>,
--   <a>describeBudgets_nextToken</a> - The pagination token that you
--   include in your request to indicate the next set of results that you
--   want to retrieve.
--   
--   <a>$sel:maxResults:DescribeBudgets'</a>,
--   <a>describeBudgets_maxResults</a> - An optional integer that
--   represents how many entries a paginated response contains. The maximum
--   is 100.
--   
--   <a>$sel:accountId:DescribeBudgets'</a>,
--   <a>describeBudgets_accountId</a> - The <tt>accountId</tt> that is
--   associated with the budgets that you want descriptions of.
newDescribeBudgets :: Text -> DescribeBudgets

-- | The pagination token that you include in your request to indicate the
--   next set of results that you want to retrieve.
describeBudgets_nextToken :: Lens' DescribeBudgets (Maybe Text)

-- | An optional integer that represents how many entries a paginated
--   response contains. The maximum is 100.
describeBudgets_maxResults :: Lens' DescribeBudgets (Maybe Natural)

-- | The <tt>accountId</tt> that is associated with the budgets that you
--   want descriptions of.
describeBudgets_accountId :: Lens' DescribeBudgets Text

-- | Response of DescribeBudgets
--   
--   <i>See:</i> <a>newDescribeBudgetsResponse</a> smart constructor.
data DescribeBudgetsResponse
DescribeBudgetsResponse' :: Maybe Text -> Maybe [Budget] -> Int -> DescribeBudgetsResponse

-- | The pagination token in the service response that indicates the next
--   set of results that you can retrieve.
[$sel:nextToken:DescribeBudgetsResponse'] :: DescribeBudgetsResponse -> Maybe Text

-- | A list of budgets.
[$sel:budgets:DescribeBudgetsResponse'] :: DescribeBudgetsResponse -> Maybe [Budget]

-- | The response's http status code.
[$sel:httpStatus:DescribeBudgetsResponse'] :: DescribeBudgetsResponse -> Int

-- | Create a value of <a>DescribeBudgetsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeBudgets'</a>,
--   <a>describeBudgetsResponse_nextToken</a> - The pagination token in the
--   service response that indicates the next set of results that you can
--   retrieve.
--   
--   <a>$sel:budgets:DescribeBudgetsResponse'</a>,
--   <a>describeBudgetsResponse_budgets</a> - A list of budgets.
--   
--   <a>$sel:httpStatus:DescribeBudgetsResponse'</a>,
--   <a>describeBudgetsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeBudgetsResponse :: Int -> DescribeBudgetsResponse

-- | The pagination token in the service response that indicates the next
--   set of results that you can retrieve.
describeBudgetsResponse_nextToken :: Lens' DescribeBudgetsResponse (Maybe Text)

-- | A list of budgets.
describeBudgetsResponse_budgets :: Lens' DescribeBudgetsResponse (Maybe [Budget])

-- | The response's http status code.
describeBudgetsResponse_httpStatus :: Lens' DescribeBudgetsResponse Int
instance GHC.Generics.Generic Network.AWS.Budgets.DescribeBudgets.DescribeBudgets
instance GHC.Show.Show Network.AWS.Budgets.DescribeBudgets.DescribeBudgets
instance GHC.Read.Read Network.AWS.Budgets.DescribeBudgets.DescribeBudgets
instance GHC.Classes.Eq Network.AWS.Budgets.DescribeBudgets.DescribeBudgets
instance GHC.Generics.Generic Network.AWS.Budgets.DescribeBudgets.DescribeBudgetsResponse
instance GHC.Show.Show Network.AWS.Budgets.DescribeBudgets.DescribeBudgetsResponse
instance GHC.Read.Read Network.AWS.Budgets.DescribeBudgets.DescribeBudgetsResponse
instance GHC.Classes.Eq Network.AWS.Budgets.DescribeBudgets.DescribeBudgetsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.DescribeBudgets.DescribeBudgets
instance Control.DeepSeq.NFData Network.AWS.Budgets.DescribeBudgets.DescribeBudgetsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Budgets.DescribeBudgets.DescribeBudgets
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.DescribeBudgets.DescribeBudgets
instance Control.DeepSeq.NFData Network.AWS.Budgets.DescribeBudgets.DescribeBudgets
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.DescribeBudgets.DescribeBudgets
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.DescribeBudgets.DescribeBudgets
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.DescribeBudgets.DescribeBudgets
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.DescribeBudgets.DescribeBudgets


-- | Describes the history for <tt>DAILY</tt>, <tt>MONTHLY</tt>, and
--   <tt>QUARTERLY</tt> budgets. Budget history isn't available for
--   <tt>ANNUAL</tt> budgets.
--   
--   This operation returns paginated results.
module Network.AWS.Budgets.DescribeBudgetPerformanceHistory

-- | <i>See:</i> <a>newDescribeBudgetPerformanceHistory</a> smart
--   constructor.
data DescribeBudgetPerformanceHistory
DescribeBudgetPerformanceHistory' :: Maybe Text -> Maybe Natural -> Maybe TimePeriod -> Text -> Text -> DescribeBudgetPerformanceHistory
[$sel:nextToken:DescribeBudgetPerformanceHistory'] :: DescribeBudgetPerformanceHistory -> Maybe Text
[$sel:maxResults:DescribeBudgetPerformanceHistory'] :: DescribeBudgetPerformanceHistory -> Maybe Natural

-- | Retrieves how often the budget went into an <tt>ALARM</tt> state for
--   the specified time period.
[$sel:timePeriod:DescribeBudgetPerformanceHistory'] :: DescribeBudgetPerformanceHistory -> Maybe TimePeriod
[$sel:accountId:DescribeBudgetPerformanceHistory'] :: DescribeBudgetPerformanceHistory -> Text
[$sel:budgetName:DescribeBudgetPerformanceHistory'] :: DescribeBudgetPerformanceHistory -> Text

-- | Create a value of <a>DescribeBudgetPerformanceHistory</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeBudgetPerformanceHistory'</a>,
--   <a>describeBudgetPerformanceHistory_nextToken</a> - Undocumented
--   member.
--   
--   <a>$sel:maxResults:DescribeBudgetPerformanceHistory'</a>,
--   <a>describeBudgetPerformanceHistory_maxResults</a> - Undocumented
--   member.
--   
--   <a>$sel:timePeriod:DescribeBudgetPerformanceHistory'</a>,
--   <a>describeBudgetPerformanceHistory_timePeriod</a> - Retrieves how
--   often the budget went into an <tt>ALARM</tt> state for the specified
--   time period.
--   
--   <a>$sel:accountId:DescribeBudgetPerformanceHistory'</a>,
--   <a>describeBudgetPerformanceHistory_accountId</a> - Undocumented
--   member.
--   
--   <a>$sel:budgetName:DescribeBudgetPerformanceHistory'</a>,
--   <a>describeBudgetPerformanceHistory_budgetName</a> - Undocumented
--   member.
newDescribeBudgetPerformanceHistory :: Text -> Text -> DescribeBudgetPerformanceHistory

-- | Undocumented member.
describeBudgetPerformanceHistory_nextToken :: Lens' DescribeBudgetPerformanceHistory (Maybe Text)

-- | Undocumented member.
describeBudgetPerformanceHistory_maxResults :: Lens' DescribeBudgetPerformanceHistory (Maybe Natural)

-- | Retrieves how often the budget went into an <tt>ALARM</tt> state for
--   the specified time period.
describeBudgetPerformanceHistory_timePeriod :: Lens' DescribeBudgetPerformanceHistory (Maybe TimePeriod)

-- | Undocumented member.
describeBudgetPerformanceHistory_accountId :: Lens' DescribeBudgetPerformanceHistory Text

-- | Undocumented member.
describeBudgetPerformanceHistory_budgetName :: Lens' DescribeBudgetPerformanceHistory Text

-- | <i>See:</i> <a>newDescribeBudgetPerformanceHistoryResponse</a> smart
--   constructor.
data DescribeBudgetPerformanceHistoryResponse
DescribeBudgetPerformanceHistoryResponse' :: Maybe BudgetPerformanceHistory -> Maybe Text -> Int -> DescribeBudgetPerformanceHistoryResponse

-- | The history of how often the budget has gone into an <tt>ALARM</tt>
--   state.
--   
--   For <tt>DAILY</tt> budgets, the history saves the state of the budget
--   for the last 60 days. For <tt>MONTHLY</tt> budgets, the history saves
--   the state of the budget for the current month plus the last 12 months.
--   For <tt>QUARTERLY</tt> budgets, the history saves the state of the
--   budget for the last four quarters.
[$sel:budgetPerformanceHistory:DescribeBudgetPerformanceHistoryResponse'] :: DescribeBudgetPerformanceHistoryResponse -> Maybe BudgetPerformanceHistory
[$sel:nextToken:DescribeBudgetPerformanceHistoryResponse'] :: DescribeBudgetPerformanceHistoryResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeBudgetPerformanceHistoryResponse'] :: DescribeBudgetPerformanceHistoryResponse -> Int

-- | Create a value of <a>DescribeBudgetPerformanceHistoryResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:budgetPerformanceHistory:DescribeBudgetPerformanceHistoryResponse'</a>,
--   <a>describeBudgetPerformanceHistoryResponse_budgetPerformanceHistory</a>
--   - The history of how often the budget has gone into an <tt>ALARM</tt>
--   state.
--   
--   For <tt>DAILY</tt> budgets, the history saves the state of the budget
--   for the last 60 days. For <tt>MONTHLY</tt> budgets, the history saves
--   the state of the budget for the current month plus the last 12 months.
--   For <tt>QUARTERLY</tt> budgets, the history saves the state of the
--   budget for the last four quarters.
--   
--   <a>$sel:nextToken:DescribeBudgetPerformanceHistory'</a>,
--   <a>describeBudgetPerformanceHistoryResponse_nextToken</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:DescribeBudgetPerformanceHistoryResponse'</a>,
--   <a>describeBudgetPerformanceHistoryResponse_httpStatus</a> - The
--   response's http status code.
newDescribeBudgetPerformanceHistoryResponse :: Int -> DescribeBudgetPerformanceHistoryResponse

-- | The history of how often the budget has gone into an <tt>ALARM</tt>
--   state.
--   
--   For <tt>DAILY</tt> budgets, the history saves the state of the budget
--   for the last 60 days. For <tt>MONTHLY</tt> budgets, the history saves
--   the state of the budget for the current month plus the last 12 months.
--   For <tt>QUARTERLY</tt> budgets, the history saves the state of the
--   budget for the last four quarters.
describeBudgetPerformanceHistoryResponse_budgetPerformanceHistory :: Lens' DescribeBudgetPerformanceHistoryResponse (Maybe BudgetPerformanceHistory)

-- | Undocumented member.
describeBudgetPerformanceHistoryResponse_nextToken :: Lens' DescribeBudgetPerformanceHistoryResponse (Maybe Text)

-- | The response's http status code.
describeBudgetPerformanceHistoryResponse_httpStatus :: Lens' DescribeBudgetPerformanceHistoryResponse Int
instance GHC.Generics.Generic Network.AWS.Budgets.DescribeBudgetPerformanceHistory.DescribeBudgetPerformanceHistory
instance GHC.Show.Show Network.AWS.Budgets.DescribeBudgetPerformanceHistory.DescribeBudgetPerformanceHistory
instance GHC.Read.Read Network.AWS.Budgets.DescribeBudgetPerformanceHistory.DescribeBudgetPerformanceHistory
instance GHC.Classes.Eq Network.AWS.Budgets.DescribeBudgetPerformanceHistory.DescribeBudgetPerformanceHistory
instance GHC.Generics.Generic Network.AWS.Budgets.DescribeBudgetPerformanceHistory.DescribeBudgetPerformanceHistoryResponse
instance GHC.Show.Show Network.AWS.Budgets.DescribeBudgetPerformanceHistory.DescribeBudgetPerformanceHistoryResponse
instance GHC.Read.Read Network.AWS.Budgets.DescribeBudgetPerformanceHistory.DescribeBudgetPerformanceHistoryResponse
instance GHC.Classes.Eq Network.AWS.Budgets.DescribeBudgetPerformanceHistory.DescribeBudgetPerformanceHistoryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.DescribeBudgetPerformanceHistory.DescribeBudgetPerformanceHistory
instance Control.DeepSeq.NFData Network.AWS.Budgets.DescribeBudgetPerformanceHistory.DescribeBudgetPerformanceHistoryResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Budgets.DescribeBudgetPerformanceHistory.DescribeBudgetPerformanceHistory
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.DescribeBudgetPerformanceHistory.DescribeBudgetPerformanceHistory
instance Control.DeepSeq.NFData Network.AWS.Budgets.DescribeBudgetPerformanceHistory.DescribeBudgetPerformanceHistory
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.DescribeBudgetPerformanceHistory.DescribeBudgetPerformanceHistory
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.DescribeBudgetPerformanceHistory.DescribeBudgetPerformanceHistory
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.DescribeBudgetPerformanceHistory.DescribeBudgetPerformanceHistory
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.DescribeBudgetPerformanceHistory.DescribeBudgetPerformanceHistory


-- | Describes all of the budget actions for a budget.
--   
--   This operation returns paginated results.
module Network.AWS.Budgets.DescribeBudgetActionsForBudget

-- | <i>See:</i> <a>newDescribeBudgetActionsForBudget</a> smart
--   constructor.
data DescribeBudgetActionsForBudget
DescribeBudgetActionsForBudget' :: Maybe Text -> Maybe Natural -> Text -> Text -> DescribeBudgetActionsForBudget
[$sel:nextToken:DescribeBudgetActionsForBudget'] :: DescribeBudgetActionsForBudget -> Maybe Text
[$sel:maxResults:DescribeBudgetActionsForBudget'] :: DescribeBudgetActionsForBudget -> Maybe Natural
[$sel:accountId:DescribeBudgetActionsForBudget'] :: DescribeBudgetActionsForBudget -> Text
[$sel:budgetName:DescribeBudgetActionsForBudget'] :: DescribeBudgetActionsForBudget -> Text

-- | Create a value of <a>DescribeBudgetActionsForBudget</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeBudgetActionsForBudget'</a>,
--   <a>describeBudgetActionsForBudget_nextToken</a> - Undocumented member.
--   
--   <a>$sel:maxResults:DescribeBudgetActionsForBudget'</a>,
--   <a>describeBudgetActionsForBudget_maxResults</a> - Undocumented
--   member.
--   
--   <a>$sel:accountId:DescribeBudgetActionsForBudget'</a>,
--   <a>describeBudgetActionsForBudget_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:DescribeBudgetActionsForBudget'</a>,
--   <a>describeBudgetActionsForBudget_budgetName</a> - Undocumented
--   member.
newDescribeBudgetActionsForBudget :: Text -> Text -> DescribeBudgetActionsForBudget

-- | Undocumented member.
describeBudgetActionsForBudget_nextToken :: Lens' DescribeBudgetActionsForBudget (Maybe Text)

-- | Undocumented member.
describeBudgetActionsForBudget_maxResults :: Lens' DescribeBudgetActionsForBudget (Maybe Natural)

-- | Undocumented member.
describeBudgetActionsForBudget_accountId :: Lens' DescribeBudgetActionsForBudget Text

-- | Undocumented member.
describeBudgetActionsForBudget_budgetName :: Lens' DescribeBudgetActionsForBudget Text

-- | <i>See:</i> <a>newDescribeBudgetActionsForBudgetResponse</a> smart
--   constructor.
data DescribeBudgetActionsForBudgetResponse
DescribeBudgetActionsForBudgetResponse' :: Maybe Text -> Int -> [Action] -> DescribeBudgetActionsForBudgetResponse
[$sel:nextToken:DescribeBudgetActionsForBudgetResponse'] :: DescribeBudgetActionsForBudgetResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeBudgetActionsForBudgetResponse'] :: DescribeBudgetActionsForBudgetResponse -> Int

-- | A list of the budget action resources information.
[$sel:actions:DescribeBudgetActionsForBudgetResponse'] :: DescribeBudgetActionsForBudgetResponse -> [Action]

-- | Create a value of <a>DescribeBudgetActionsForBudgetResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeBudgetActionsForBudget'</a>,
--   <a>describeBudgetActionsForBudgetResponse_nextToken</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:DescribeBudgetActionsForBudgetResponse'</a>,
--   <a>describeBudgetActionsForBudgetResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:actions:DescribeBudgetActionsForBudgetResponse'</a>,
--   <a>describeBudgetActionsForBudgetResponse_actions</a> - A list of the
--   budget action resources information.
newDescribeBudgetActionsForBudgetResponse :: Int -> DescribeBudgetActionsForBudgetResponse

-- | Undocumented member.
describeBudgetActionsForBudgetResponse_nextToken :: Lens' DescribeBudgetActionsForBudgetResponse (Maybe Text)

-- | The response's http status code.
describeBudgetActionsForBudgetResponse_httpStatus :: Lens' DescribeBudgetActionsForBudgetResponse Int

-- | A list of the budget action resources information.
describeBudgetActionsForBudgetResponse_actions :: Lens' DescribeBudgetActionsForBudgetResponse [Action]
instance GHC.Generics.Generic Network.AWS.Budgets.DescribeBudgetActionsForBudget.DescribeBudgetActionsForBudget
instance GHC.Show.Show Network.AWS.Budgets.DescribeBudgetActionsForBudget.DescribeBudgetActionsForBudget
instance GHC.Read.Read Network.AWS.Budgets.DescribeBudgetActionsForBudget.DescribeBudgetActionsForBudget
instance GHC.Classes.Eq Network.AWS.Budgets.DescribeBudgetActionsForBudget.DescribeBudgetActionsForBudget
instance GHC.Generics.Generic Network.AWS.Budgets.DescribeBudgetActionsForBudget.DescribeBudgetActionsForBudgetResponse
instance GHC.Show.Show Network.AWS.Budgets.DescribeBudgetActionsForBudget.DescribeBudgetActionsForBudgetResponse
instance GHC.Classes.Eq Network.AWS.Budgets.DescribeBudgetActionsForBudget.DescribeBudgetActionsForBudgetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.DescribeBudgetActionsForBudget.DescribeBudgetActionsForBudget
instance Control.DeepSeq.NFData Network.AWS.Budgets.DescribeBudgetActionsForBudget.DescribeBudgetActionsForBudgetResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Budgets.DescribeBudgetActionsForBudget.DescribeBudgetActionsForBudget
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.DescribeBudgetActionsForBudget.DescribeBudgetActionsForBudget
instance Control.DeepSeq.NFData Network.AWS.Budgets.DescribeBudgetActionsForBudget.DescribeBudgetActionsForBudget
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.DescribeBudgetActionsForBudget.DescribeBudgetActionsForBudget
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.DescribeBudgetActionsForBudget.DescribeBudgetActionsForBudget
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.DescribeBudgetActionsForBudget.DescribeBudgetActionsForBudget
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.DescribeBudgetActionsForBudget.DescribeBudgetActionsForBudget


-- | Describes all of the budget actions for an account.
--   
--   This operation returns paginated results.
module Network.AWS.Budgets.DescribeBudgetActionsForAccount

-- | <i>See:</i> <a>newDescribeBudgetActionsForAccount</a> smart
--   constructor.
data DescribeBudgetActionsForAccount
DescribeBudgetActionsForAccount' :: Maybe Text -> Maybe Natural -> Text -> DescribeBudgetActionsForAccount
[$sel:nextToken:DescribeBudgetActionsForAccount'] :: DescribeBudgetActionsForAccount -> Maybe Text
[$sel:maxResults:DescribeBudgetActionsForAccount'] :: DescribeBudgetActionsForAccount -> Maybe Natural
[$sel:accountId:DescribeBudgetActionsForAccount'] :: DescribeBudgetActionsForAccount -> Text

-- | Create a value of <a>DescribeBudgetActionsForAccount</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeBudgetActionsForAccount'</a>,
--   <a>describeBudgetActionsForAccount_nextToken</a> - Undocumented
--   member.
--   
--   <a>$sel:maxResults:DescribeBudgetActionsForAccount'</a>,
--   <a>describeBudgetActionsForAccount_maxResults</a> - Undocumented
--   member.
--   
--   <a>$sel:accountId:DescribeBudgetActionsForAccount'</a>,
--   <a>describeBudgetActionsForAccount_accountId</a> - Undocumented
--   member.
newDescribeBudgetActionsForAccount :: Text -> DescribeBudgetActionsForAccount

-- | Undocumented member.
describeBudgetActionsForAccount_nextToken :: Lens' DescribeBudgetActionsForAccount (Maybe Text)

-- | Undocumented member.
describeBudgetActionsForAccount_maxResults :: Lens' DescribeBudgetActionsForAccount (Maybe Natural)

-- | Undocumented member.
describeBudgetActionsForAccount_accountId :: Lens' DescribeBudgetActionsForAccount Text

-- | <i>See:</i> <a>newDescribeBudgetActionsForAccountResponse</a> smart
--   constructor.
data DescribeBudgetActionsForAccountResponse
DescribeBudgetActionsForAccountResponse' :: Maybe Text -> Int -> [Action] -> DescribeBudgetActionsForAccountResponse
[$sel:nextToken:DescribeBudgetActionsForAccountResponse'] :: DescribeBudgetActionsForAccountResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeBudgetActionsForAccountResponse'] :: DescribeBudgetActionsForAccountResponse -> Int

-- | A list of the budget action resources information.
[$sel:actions:DescribeBudgetActionsForAccountResponse'] :: DescribeBudgetActionsForAccountResponse -> [Action]

-- | Create a value of <a>DescribeBudgetActionsForAccountResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeBudgetActionsForAccount'</a>,
--   <a>describeBudgetActionsForAccountResponse_nextToken</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:DescribeBudgetActionsForAccountResponse'</a>,
--   <a>describeBudgetActionsForAccountResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:actions:DescribeBudgetActionsForAccountResponse'</a>,
--   <a>describeBudgetActionsForAccountResponse_actions</a> - A list of the
--   budget action resources information.
newDescribeBudgetActionsForAccountResponse :: Int -> DescribeBudgetActionsForAccountResponse

-- | Undocumented member.
describeBudgetActionsForAccountResponse_nextToken :: Lens' DescribeBudgetActionsForAccountResponse (Maybe Text)

-- | The response's http status code.
describeBudgetActionsForAccountResponse_httpStatus :: Lens' DescribeBudgetActionsForAccountResponse Int

-- | A list of the budget action resources information.
describeBudgetActionsForAccountResponse_actions :: Lens' DescribeBudgetActionsForAccountResponse [Action]
instance GHC.Generics.Generic Network.AWS.Budgets.DescribeBudgetActionsForAccount.DescribeBudgetActionsForAccount
instance GHC.Show.Show Network.AWS.Budgets.DescribeBudgetActionsForAccount.DescribeBudgetActionsForAccount
instance GHC.Read.Read Network.AWS.Budgets.DescribeBudgetActionsForAccount.DescribeBudgetActionsForAccount
instance GHC.Classes.Eq Network.AWS.Budgets.DescribeBudgetActionsForAccount.DescribeBudgetActionsForAccount
instance GHC.Generics.Generic Network.AWS.Budgets.DescribeBudgetActionsForAccount.DescribeBudgetActionsForAccountResponse
instance GHC.Show.Show Network.AWS.Budgets.DescribeBudgetActionsForAccount.DescribeBudgetActionsForAccountResponse
instance GHC.Classes.Eq Network.AWS.Budgets.DescribeBudgetActionsForAccount.DescribeBudgetActionsForAccountResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.DescribeBudgetActionsForAccount.DescribeBudgetActionsForAccount
instance Control.DeepSeq.NFData Network.AWS.Budgets.DescribeBudgetActionsForAccount.DescribeBudgetActionsForAccountResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Budgets.DescribeBudgetActionsForAccount.DescribeBudgetActionsForAccount
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.DescribeBudgetActionsForAccount.DescribeBudgetActionsForAccount
instance Control.DeepSeq.NFData Network.AWS.Budgets.DescribeBudgetActionsForAccount.DescribeBudgetActionsForAccount
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.DescribeBudgetActionsForAccount.DescribeBudgetActionsForAccount
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.DescribeBudgetActionsForAccount.DescribeBudgetActionsForAccount
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.DescribeBudgetActionsForAccount.DescribeBudgetActionsForAccount
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.DescribeBudgetActionsForAccount.DescribeBudgetActionsForAccount


-- | Describes a budget action history detail.
--   
--   This operation returns paginated results.
module Network.AWS.Budgets.DescribeBudgetActionHistories

-- | <i>See:</i> <a>newDescribeBudgetActionHistories</a> smart constructor.
data DescribeBudgetActionHistories
DescribeBudgetActionHistories' :: Maybe Text -> Maybe Natural -> Maybe TimePeriod -> Text -> Text -> Text -> DescribeBudgetActionHistories
[$sel:nextToken:DescribeBudgetActionHistories'] :: DescribeBudgetActionHistories -> Maybe Text
[$sel:maxResults:DescribeBudgetActionHistories'] :: DescribeBudgetActionHistories -> Maybe Natural
[$sel:timePeriod:DescribeBudgetActionHistories'] :: DescribeBudgetActionHistories -> Maybe TimePeriod
[$sel:accountId:DescribeBudgetActionHistories'] :: DescribeBudgetActionHistories -> Text
[$sel:budgetName:DescribeBudgetActionHistories'] :: DescribeBudgetActionHistories -> Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
[$sel:actionId:DescribeBudgetActionHistories'] :: DescribeBudgetActionHistories -> Text

-- | Create a value of <a>DescribeBudgetActionHistories</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeBudgetActionHistories'</a>,
--   <a>describeBudgetActionHistories_nextToken</a> - Undocumented member.
--   
--   <a>$sel:maxResults:DescribeBudgetActionHistories'</a>,
--   <a>describeBudgetActionHistories_maxResults</a> - Undocumented member.
--   
--   <a>$sel:timePeriod:DescribeBudgetActionHistories'</a>,
--   <a>describeBudgetActionHistories_timePeriod</a> - Undocumented member.
--   
--   <a>$sel:accountId:DescribeBudgetActionHistories'</a>,
--   <a>describeBudgetActionHistories_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:DescribeBudgetActionHistories'</a>,
--   <a>describeBudgetActionHistories_budgetName</a> - Undocumented member.
--   
--   <a>$sel:actionId:DescribeBudgetActionHistories'</a>,
--   <a>describeBudgetActionHistories_actionId</a> - A system-generated
--   universally unique identifier (UUID) for the action.
newDescribeBudgetActionHistories :: Text -> Text -> Text -> DescribeBudgetActionHistories

-- | Undocumented member.
describeBudgetActionHistories_nextToken :: Lens' DescribeBudgetActionHistories (Maybe Text)

-- | Undocumented member.
describeBudgetActionHistories_maxResults :: Lens' DescribeBudgetActionHistories (Maybe Natural)

-- | Undocumented member.
describeBudgetActionHistories_timePeriod :: Lens' DescribeBudgetActionHistories (Maybe TimePeriod)

-- | Undocumented member.
describeBudgetActionHistories_accountId :: Lens' DescribeBudgetActionHistories Text

-- | Undocumented member.
describeBudgetActionHistories_budgetName :: Lens' DescribeBudgetActionHistories Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
describeBudgetActionHistories_actionId :: Lens' DescribeBudgetActionHistories Text

-- | <i>See:</i> <a>newDescribeBudgetActionHistoriesResponse</a> smart
--   constructor.
data DescribeBudgetActionHistoriesResponse
DescribeBudgetActionHistoriesResponse' :: Maybe Text -> Int -> [ActionHistory] -> DescribeBudgetActionHistoriesResponse
[$sel:nextToken:DescribeBudgetActionHistoriesResponse'] :: DescribeBudgetActionHistoriesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeBudgetActionHistoriesResponse'] :: DescribeBudgetActionHistoriesResponse -> Int

-- | The historical record of the budget action resource.
[$sel:actionHistories:DescribeBudgetActionHistoriesResponse'] :: DescribeBudgetActionHistoriesResponse -> [ActionHistory]

-- | Create a value of <a>DescribeBudgetActionHistoriesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeBudgetActionHistories'</a>,
--   <a>describeBudgetActionHistoriesResponse_nextToken</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:DescribeBudgetActionHistoriesResponse'</a>,
--   <a>describeBudgetActionHistoriesResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:actionHistories:DescribeBudgetActionHistoriesResponse'</a>,
--   <a>describeBudgetActionHistoriesResponse_actionHistories</a> - The
--   historical record of the budget action resource.
newDescribeBudgetActionHistoriesResponse :: Int -> DescribeBudgetActionHistoriesResponse

-- | Undocumented member.
describeBudgetActionHistoriesResponse_nextToken :: Lens' DescribeBudgetActionHistoriesResponse (Maybe Text)

-- | The response's http status code.
describeBudgetActionHistoriesResponse_httpStatus :: Lens' DescribeBudgetActionHistoriesResponse Int

-- | The historical record of the budget action resource.
describeBudgetActionHistoriesResponse_actionHistories :: Lens' DescribeBudgetActionHistoriesResponse [ActionHistory]
instance GHC.Generics.Generic Network.AWS.Budgets.DescribeBudgetActionHistories.DescribeBudgetActionHistories
instance GHC.Show.Show Network.AWS.Budgets.DescribeBudgetActionHistories.DescribeBudgetActionHistories
instance GHC.Read.Read Network.AWS.Budgets.DescribeBudgetActionHistories.DescribeBudgetActionHistories
instance GHC.Classes.Eq Network.AWS.Budgets.DescribeBudgetActionHistories.DescribeBudgetActionHistories
instance GHC.Generics.Generic Network.AWS.Budgets.DescribeBudgetActionHistories.DescribeBudgetActionHistoriesResponse
instance GHC.Show.Show Network.AWS.Budgets.DescribeBudgetActionHistories.DescribeBudgetActionHistoriesResponse
instance GHC.Classes.Eq Network.AWS.Budgets.DescribeBudgetActionHistories.DescribeBudgetActionHistoriesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.DescribeBudgetActionHistories.DescribeBudgetActionHistories
instance Control.DeepSeq.NFData Network.AWS.Budgets.DescribeBudgetActionHistories.DescribeBudgetActionHistoriesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Budgets.DescribeBudgetActionHistories.DescribeBudgetActionHistories
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.DescribeBudgetActionHistories.DescribeBudgetActionHistories
instance Control.DeepSeq.NFData Network.AWS.Budgets.DescribeBudgetActionHistories.DescribeBudgetActionHistories
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.DescribeBudgetActionHistories.DescribeBudgetActionHistories
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.DescribeBudgetActionHistories.DescribeBudgetActionHistories
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.DescribeBudgetActionHistories.DescribeBudgetActionHistories
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.DescribeBudgetActionHistories.DescribeBudgetActionHistories


-- | Describes a budget action detail.
module Network.AWS.Budgets.DescribeBudgetAction

-- | <i>See:</i> <a>newDescribeBudgetAction</a> smart constructor.
data DescribeBudgetAction
DescribeBudgetAction' :: Text -> Text -> Text -> DescribeBudgetAction
[$sel:accountId:DescribeBudgetAction'] :: DescribeBudgetAction -> Text
[$sel:budgetName:DescribeBudgetAction'] :: DescribeBudgetAction -> Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
[$sel:actionId:DescribeBudgetAction'] :: DescribeBudgetAction -> Text

-- | Create a value of <a>DescribeBudgetAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:DescribeBudgetAction'</a>,
--   <a>describeBudgetAction_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:DescribeBudgetAction'</a>,
--   <a>describeBudgetAction_budgetName</a> - Undocumented member.
--   
--   <a>$sel:actionId:DescribeBudgetAction'</a>,
--   <a>describeBudgetAction_actionId</a> - A system-generated universally
--   unique identifier (UUID) for the action.
newDescribeBudgetAction :: Text -> Text -> Text -> DescribeBudgetAction

-- | Undocumented member.
describeBudgetAction_accountId :: Lens' DescribeBudgetAction Text

-- | Undocumented member.
describeBudgetAction_budgetName :: Lens' DescribeBudgetAction Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
describeBudgetAction_actionId :: Lens' DescribeBudgetAction Text

-- | <i>See:</i> <a>newDescribeBudgetActionResponse</a> smart constructor.
data DescribeBudgetActionResponse
DescribeBudgetActionResponse' :: Int -> Text -> Text -> Action -> DescribeBudgetActionResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeBudgetActionResponse'] :: DescribeBudgetActionResponse -> Int
[$sel:accountId:DescribeBudgetActionResponse'] :: DescribeBudgetActionResponse -> Text
[$sel:budgetName:DescribeBudgetActionResponse'] :: DescribeBudgetActionResponse -> Text

-- | A budget action resource.
[$sel:action:DescribeBudgetActionResponse'] :: DescribeBudgetActionResponse -> Action

-- | Create a value of <a>DescribeBudgetActionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeBudgetActionResponse'</a>,
--   <a>describeBudgetActionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:accountId:DescribeBudgetAction'</a>,
--   <a>describeBudgetActionResponse_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:DescribeBudgetAction'</a>,
--   <a>describeBudgetActionResponse_budgetName</a> - Undocumented member.
--   
--   <a>$sel:action:DescribeBudgetActionResponse'</a>,
--   <a>describeBudgetActionResponse_action</a> - A budget action resource.
newDescribeBudgetActionResponse :: Int -> Text -> Text -> Action -> DescribeBudgetActionResponse

-- | The response's http status code.
describeBudgetActionResponse_httpStatus :: Lens' DescribeBudgetActionResponse Int

-- | Undocumented member.
describeBudgetActionResponse_accountId :: Lens' DescribeBudgetActionResponse Text

-- | Undocumented member.
describeBudgetActionResponse_budgetName :: Lens' DescribeBudgetActionResponse Text

-- | A budget action resource.
describeBudgetActionResponse_action :: Lens' DescribeBudgetActionResponse Action
instance GHC.Generics.Generic Network.AWS.Budgets.DescribeBudgetAction.DescribeBudgetAction
instance GHC.Show.Show Network.AWS.Budgets.DescribeBudgetAction.DescribeBudgetAction
instance GHC.Read.Read Network.AWS.Budgets.DescribeBudgetAction.DescribeBudgetAction
instance GHC.Classes.Eq Network.AWS.Budgets.DescribeBudgetAction.DescribeBudgetAction
instance GHC.Generics.Generic Network.AWS.Budgets.DescribeBudgetAction.DescribeBudgetActionResponse
instance GHC.Show.Show Network.AWS.Budgets.DescribeBudgetAction.DescribeBudgetActionResponse
instance GHC.Classes.Eq Network.AWS.Budgets.DescribeBudgetAction.DescribeBudgetActionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.DescribeBudgetAction.DescribeBudgetAction
instance Control.DeepSeq.NFData Network.AWS.Budgets.DescribeBudgetAction.DescribeBudgetActionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.DescribeBudgetAction.DescribeBudgetAction
instance Control.DeepSeq.NFData Network.AWS.Budgets.DescribeBudgetAction.DescribeBudgetAction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.DescribeBudgetAction.DescribeBudgetAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.DescribeBudgetAction.DescribeBudgetAction
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.DescribeBudgetAction.DescribeBudgetAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.DescribeBudgetAction.DescribeBudgetAction


-- | Describes a budget.
--   
--   The Request Syntax section shows the <tt>BudgetLimit</tt> syntax. For
--   <tt>PlannedBudgetLimits</tt>, see the <a>Examples</a> section.
module Network.AWS.Budgets.DescribeBudget

-- | Request of DescribeBudget
--   
--   <i>See:</i> <a>newDescribeBudget</a> smart constructor.
data DescribeBudget
DescribeBudget' :: Text -> Text -> DescribeBudget

-- | The <tt>accountId</tt> that is associated with the budget that you
--   want a description of.
[$sel:accountId:DescribeBudget'] :: DescribeBudget -> Text

-- | The name of the budget that you want a description of.
[$sel:budgetName:DescribeBudget'] :: DescribeBudget -> Text

-- | Create a value of <a>DescribeBudget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:DescribeBudget'</a>, <a>describeBudget_accountId</a>
--   - The <tt>accountId</tt> that is associated with the budget that you
--   want a description of.
--   
--   <a>$sel:budgetName:DescribeBudget'</a>,
--   <a>describeBudget_budgetName</a> - The name of the budget that you
--   want a description of.
newDescribeBudget :: Text -> Text -> DescribeBudget

-- | The <tt>accountId</tt> that is associated with the budget that you
--   want a description of.
describeBudget_accountId :: Lens' DescribeBudget Text

-- | The name of the budget that you want a description of.
describeBudget_budgetName :: Lens' DescribeBudget Text

-- | Response of DescribeBudget
--   
--   <i>See:</i> <a>newDescribeBudgetResponse</a> smart constructor.
data DescribeBudgetResponse
DescribeBudgetResponse' :: Maybe Budget -> Int -> DescribeBudgetResponse

-- | The description of the budget.
[$sel:budget:DescribeBudgetResponse'] :: DescribeBudgetResponse -> Maybe Budget

-- | The response's http status code.
[$sel:httpStatus:DescribeBudgetResponse'] :: DescribeBudgetResponse -> Int

-- | Create a value of <a>DescribeBudgetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:budget:DescribeBudgetResponse'</a>,
--   <a>describeBudgetResponse_budget</a> - The description of the budget.
--   
--   <a>$sel:httpStatus:DescribeBudgetResponse'</a>,
--   <a>describeBudgetResponse_httpStatus</a> - The response's http status
--   code.
newDescribeBudgetResponse :: Int -> DescribeBudgetResponse

-- | The description of the budget.
describeBudgetResponse_budget :: Lens' DescribeBudgetResponse (Maybe Budget)

-- | The response's http status code.
describeBudgetResponse_httpStatus :: Lens' DescribeBudgetResponse Int
instance GHC.Generics.Generic Network.AWS.Budgets.DescribeBudget.DescribeBudget
instance GHC.Show.Show Network.AWS.Budgets.DescribeBudget.DescribeBudget
instance GHC.Read.Read Network.AWS.Budgets.DescribeBudget.DescribeBudget
instance GHC.Classes.Eq Network.AWS.Budgets.DescribeBudget.DescribeBudget
instance GHC.Generics.Generic Network.AWS.Budgets.DescribeBudget.DescribeBudgetResponse
instance GHC.Show.Show Network.AWS.Budgets.DescribeBudget.DescribeBudgetResponse
instance GHC.Read.Read Network.AWS.Budgets.DescribeBudget.DescribeBudgetResponse
instance GHC.Classes.Eq Network.AWS.Budgets.DescribeBudget.DescribeBudgetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.DescribeBudget.DescribeBudget
instance Control.DeepSeq.NFData Network.AWS.Budgets.DescribeBudget.DescribeBudgetResponse
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.DescribeBudget.DescribeBudget
instance Control.DeepSeq.NFData Network.AWS.Budgets.DescribeBudget.DescribeBudget
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.DescribeBudget.DescribeBudget
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.DescribeBudget.DescribeBudget
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.DescribeBudget.DescribeBudget
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.DescribeBudget.DescribeBudget


-- | Deletes a subscriber.
--   
--   Deleting the last subscriber to a notification also deletes the
--   notification.
module Network.AWS.Budgets.DeleteSubscriber

-- | Request of DeleteSubscriber
--   
--   <i>See:</i> <a>newDeleteSubscriber</a> smart constructor.
data DeleteSubscriber
DeleteSubscriber' :: Text -> Text -> Notification -> Subscriber -> DeleteSubscriber

-- | The <tt>accountId</tt> that is associated with the budget whose
--   subscriber you want to delete.
[$sel:accountId:DeleteSubscriber'] :: DeleteSubscriber -> Text

-- | The name of the budget whose subscriber you want to delete.
[$sel:budgetName:DeleteSubscriber'] :: DeleteSubscriber -> Text

-- | The notification whose subscriber you want to delete.
[$sel:notification:DeleteSubscriber'] :: DeleteSubscriber -> Notification

-- | The subscriber that you want to delete.
[$sel:subscriber:DeleteSubscriber'] :: DeleteSubscriber -> Subscriber

-- | Create a value of <a>DeleteSubscriber</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:DeleteSubscriber'</a>,
--   <a>deleteSubscriber_accountId</a> - The <tt>accountId</tt> that is
--   associated with the budget whose subscriber you want to delete.
--   
--   <a>$sel:budgetName:DeleteSubscriber'</a>,
--   <a>deleteSubscriber_budgetName</a> - The name of the budget whose
--   subscriber you want to delete.
--   
--   <a>$sel:notification:DeleteSubscriber'</a>,
--   <a>deleteSubscriber_notification</a> - The notification whose
--   subscriber you want to delete.
--   
--   <a>$sel:subscriber:DeleteSubscriber'</a>,
--   <a>deleteSubscriber_subscriber</a> - The subscriber that you want to
--   delete.
newDeleteSubscriber :: Text -> Text -> Notification -> Subscriber -> DeleteSubscriber

-- | The <tt>accountId</tt> that is associated with the budget whose
--   subscriber you want to delete.
deleteSubscriber_accountId :: Lens' DeleteSubscriber Text

-- | The name of the budget whose subscriber you want to delete.
deleteSubscriber_budgetName :: Lens' DeleteSubscriber Text

-- | The notification whose subscriber you want to delete.
deleteSubscriber_notification :: Lens' DeleteSubscriber Notification

-- | The subscriber that you want to delete.
deleteSubscriber_subscriber :: Lens' DeleteSubscriber Subscriber

-- | Response of DeleteSubscriber
--   
--   <i>See:</i> <a>newDeleteSubscriberResponse</a> smart constructor.
data DeleteSubscriberResponse
DeleteSubscriberResponse' :: Int -> DeleteSubscriberResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteSubscriberResponse'] :: DeleteSubscriberResponse -> Int

-- | Create a value of <a>DeleteSubscriberResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteSubscriberResponse'</a>,
--   <a>deleteSubscriberResponse_httpStatus</a> - The response's http
--   status code.
newDeleteSubscriberResponse :: Int -> DeleteSubscriberResponse

-- | The response's http status code.
deleteSubscriberResponse_httpStatus :: Lens' DeleteSubscriberResponse Int
instance GHC.Generics.Generic Network.AWS.Budgets.DeleteSubscriber.DeleteSubscriber
instance GHC.Show.Show Network.AWS.Budgets.DeleteSubscriber.DeleteSubscriber
instance GHC.Classes.Eq Network.AWS.Budgets.DeleteSubscriber.DeleteSubscriber
instance GHC.Generics.Generic Network.AWS.Budgets.DeleteSubscriber.DeleteSubscriberResponse
instance GHC.Show.Show Network.AWS.Budgets.DeleteSubscriber.DeleteSubscriberResponse
instance GHC.Read.Read Network.AWS.Budgets.DeleteSubscriber.DeleteSubscriberResponse
instance GHC.Classes.Eq Network.AWS.Budgets.DeleteSubscriber.DeleteSubscriberResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.DeleteSubscriber.DeleteSubscriber
instance Control.DeepSeq.NFData Network.AWS.Budgets.DeleteSubscriber.DeleteSubscriberResponse
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.DeleteSubscriber.DeleteSubscriber
instance Control.DeepSeq.NFData Network.AWS.Budgets.DeleteSubscriber.DeleteSubscriber
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.DeleteSubscriber.DeleteSubscriber
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.DeleteSubscriber.DeleteSubscriber
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.DeleteSubscriber.DeleteSubscriber
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.DeleteSubscriber.DeleteSubscriber


-- | Deletes a notification.
--   
--   Deleting a notification also deletes the subscribers that are
--   associated with the notification.
module Network.AWS.Budgets.DeleteNotification

-- | Request of DeleteNotification
--   
--   <i>See:</i> <a>newDeleteNotification</a> smart constructor.
data DeleteNotification
DeleteNotification' :: Text -> Text -> Notification -> DeleteNotification

-- | The <tt>accountId</tt> that is associated with the budget whose
--   notification you want to delete.
[$sel:accountId:DeleteNotification'] :: DeleteNotification -> Text

-- | The name of the budget whose notification you want to delete.
[$sel:budgetName:DeleteNotification'] :: DeleteNotification -> Text

-- | The notification that you want to delete.
[$sel:notification:DeleteNotification'] :: DeleteNotification -> Notification

-- | Create a value of <a>DeleteNotification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:DeleteNotification'</a>,
--   <a>deleteNotification_accountId</a> - The <tt>accountId</tt> that is
--   associated with the budget whose notification you want to delete.
--   
--   <a>$sel:budgetName:DeleteNotification'</a>,
--   <a>deleteNotification_budgetName</a> - The name of the budget whose
--   notification you want to delete.
--   
--   <a>$sel:notification:DeleteNotification'</a>,
--   <a>deleteNotification_notification</a> - The notification that you
--   want to delete.
newDeleteNotification :: Text -> Text -> Notification -> DeleteNotification

-- | The <tt>accountId</tt> that is associated with the budget whose
--   notification you want to delete.
deleteNotification_accountId :: Lens' DeleteNotification Text

-- | The name of the budget whose notification you want to delete.
deleteNotification_budgetName :: Lens' DeleteNotification Text

-- | The notification that you want to delete.
deleteNotification_notification :: Lens' DeleteNotification Notification

-- | Response of DeleteNotification
--   
--   <i>See:</i> <a>newDeleteNotificationResponse</a> smart constructor.
data DeleteNotificationResponse
DeleteNotificationResponse' :: Int -> DeleteNotificationResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteNotificationResponse'] :: DeleteNotificationResponse -> Int

-- | Create a value of <a>DeleteNotificationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteNotificationResponse'</a>,
--   <a>deleteNotificationResponse_httpStatus</a> - The response's http
--   status code.
newDeleteNotificationResponse :: Int -> DeleteNotificationResponse

-- | The response's http status code.
deleteNotificationResponse_httpStatus :: Lens' DeleteNotificationResponse Int
instance GHC.Generics.Generic Network.AWS.Budgets.DeleteNotification.DeleteNotification
instance GHC.Show.Show Network.AWS.Budgets.DeleteNotification.DeleteNotification
instance GHC.Read.Read Network.AWS.Budgets.DeleteNotification.DeleteNotification
instance GHC.Classes.Eq Network.AWS.Budgets.DeleteNotification.DeleteNotification
instance GHC.Generics.Generic Network.AWS.Budgets.DeleteNotification.DeleteNotificationResponse
instance GHC.Show.Show Network.AWS.Budgets.DeleteNotification.DeleteNotificationResponse
instance GHC.Read.Read Network.AWS.Budgets.DeleteNotification.DeleteNotificationResponse
instance GHC.Classes.Eq Network.AWS.Budgets.DeleteNotification.DeleteNotificationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.DeleteNotification.DeleteNotification
instance Control.DeepSeq.NFData Network.AWS.Budgets.DeleteNotification.DeleteNotificationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.DeleteNotification.DeleteNotification
instance Control.DeepSeq.NFData Network.AWS.Budgets.DeleteNotification.DeleteNotification
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.DeleteNotification.DeleteNotification
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.DeleteNotification.DeleteNotification
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.DeleteNotification.DeleteNotification
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.DeleteNotification.DeleteNotification


-- | Deletes a budget action.
module Network.AWS.Budgets.DeleteBudgetAction

-- | <i>See:</i> <a>newDeleteBudgetAction</a> smart constructor.
data DeleteBudgetAction
DeleteBudgetAction' :: Text -> Text -> Text -> DeleteBudgetAction
[$sel:accountId:DeleteBudgetAction'] :: DeleteBudgetAction -> Text
[$sel:budgetName:DeleteBudgetAction'] :: DeleteBudgetAction -> Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
[$sel:actionId:DeleteBudgetAction'] :: DeleteBudgetAction -> Text

-- | Create a value of <a>DeleteBudgetAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:DeleteBudgetAction'</a>,
--   <a>deleteBudgetAction_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:DeleteBudgetAction'</a>,
--   <a>deleteBudgetAction_budgetName</a> - Undocumented member.
--   
--   <a>$sel:actionId:DeleteBudgetAction'</a>,
--   <a>deleteBudgetAction_actionId</a> - A system-generated universally
--   unique identifier (UUID) for the action.
newDeleteBudgetAction :: Text -> Text -> Text -> DeleteBudgetAction

-- | Undocumented member.
deleteBudgetAction_accountId :: Lens' DeleteBudgetAction Text

-- | Undocumented member.
deleteBudgetAction_budgetName :: Lens' DeleteBudgetAction Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
deleteBudgetAction_actionId :: Lens' DeleteBudgetAction Text

-- | <i>See:</i> <a>newDeleteBudgetActionResponse</a> smart constructor.
data DeleteBudgetActionResponse
DeleteBudgetActionResponse' :: Int -> Text -> Text -> Action -> DeleteBudgetActionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteBudgetActionResponse'] :: DeleteBudgetActionResponse -> Int
[$sel:accountId:DeleteBudgetActionResponse'] :: DeleteBudgetActionResponse -> Text
[$sel:budgetName:DeleteBudgetActionResponse'] :: DeleteBudgetActionResponse -> Text
[$sel:action:DeleteBudgetActionResponse'] :: DeleteBudgetActionResponse -> Action

-- | Create a value of <a>DeleteBudgetActionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteBudgetActionResponse'</a>,
--   <a>deleteBudgetActionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:accountId:DeleteBudgetAction'</a>,
--   <a>deleteBudgetActionResponse_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:DeleteBudgetAction'</a>,
--   <a>deleteBudgetActionResponse_budgetName</a> - Undocumented member.
--   
--   <a>$sel:action:DeleteBudgetActionResponse'</a>,
--   <a>deleteBudgetActionResponse_action</a> - Undocumented member.
newDeleteBudgetActionResponse :: Int -> Text -> Text -> Action -> DeleteBudgetActionResponse

-- | The response's http status code.
deleteBudgetActionResponse_httpStatus :: Lens' DeleteBudgetActionResponse Int

-- | Undocumented member.
deleteBudgetActionResponse_accountId :: Lens' DeleteBudgetActionResponse Text

-- | Undocumented member.
deleteBudgetActionResponse_budgetName :: Lens' DeleteBudgetActionResponse Text

-- | Undocumented member.
deleteBudgetActionResponse_action :: Lens' DeleteBudgetActionResponse Action
instance GHC.Generics.Generic Network.AWS.Budgets.DeleteBudgetAction.DeleteBudgetAction
instance GHC.Show.Show Network.AWS.Budgets.DeleteBudgetAction.DeleteBudgetAction
instance GHC.Read.Read Network.AWS.Budgets.DeleteBudgetAction.DeleteBudgetAction
instance GHC.Classes.Eq Network.AWS.Budgets.DeleteBudgetAction.DeleteBudgetAction
instance GHC.Generics.Generic Network.AWS.Budgets.DeleteBudgetAction.DeleteBudgetActionResponse
instance GHC.Show.Show Network.AWS.Budgets.DeleteBudgetAction.DeleteBudgetActionResponse
instance GHC.Classes.Eq Network.AWS.Budgets.DeleteBudgetAction.DeleteBudgetActionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.DeleteBudgetAction.DeleteBudgetAction
instance Control.DeepSeq.NFData Network.AWS.Budgets.DeleteBudgetAction.DeleteBudgetActionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.DeleteBudgetAction.DeleteBudgetAction
instance Control.DeepSeq.NFData Network.AWS.Budgets.DeleteBudgetAction.DeleteBudgetAction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.DeleteBudgetAction.DeleteBudgetAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.DeleteBudgetAction.DeleteBudgetAction
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.DeleteBudgetAction.DeleteBudgetAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.DeleteBudgetAction.DeleteBudgetAction


-- | Deletes a budget. You can delete your budget at any time.
--   
--   Deleting a budget also deletes the notifications and subscribers that
--   are associated with that budget.
module Network.AWS.Budgets.DeleteBudget

-- | Request of DeleteBudget
--   
--   <i>See:</i> <a>newDeleteBudget</a> smart constructor.
data DeleteBudget
DeleteBudget' :: Text -> Text -> DeleteBudget

-- | The <tt>accountId</tt> that is associated with the budget that you
--   want to delete.
[$sel:accountId:DeleteBudget'] :: DeleteBudget -> Text

-- | The name of the budget that you want to delete.
[$sel:budgetName:DeleteBudget'] :: DeleteBudget -> Text

-- | Create a value of <a>DeleteBudget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:DeleteBudget'</a>, <a>deleteBudget_accountId</a> -
--   The <tt>accountId</tt> that is associated with the budget that you
--   want to delete.
--   
--   <a>$sel:budgetName:DeleteBudget'</a>, <a>deleteBudget_budgetName</a> -
--   The name of the budget that you want to delete.
newDeleteBudget :: Text -> Text -> DeleteBudget

-- | The <tt>accountId</tt> that is associated with the budget that you
--   want to delete.
deleteBudget_accountId :: Lens' DeleteBudget Text

-- | The name of the budget that you want to delete.
deleteBudget_budgetName :: Lens' DeleteBudget Text

-- | Response of DeleteBudget
--   
--   <i>See:</i> <a>newDeleteBudgetResponse</a> smart constructor.
data DeleteBudgetResponse
DeleteBudgetResponse' :: Int -> DeleteBudgetResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteBudgetResponse'] :: DeleteBudgetResponse -> Int

-- | Create a value of <a>DeleteBudgetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteBudgetResponse'</a>,
--   <a>deleteBudgetResponse_httpStatus</a> - The response's http status
--   code.
newDeleteBudgetResponse :: Int -> DeleteBudgetResponse

-- | The response's http status code.
deleteBudgetResponse_httpStatus :: Lens' DeleteBudgetResponse Int
instance GHC.Generics.Generic Network.AWS.Budgets.DeleteBudget.DeleteBudget
instance GHC.Show.Show Network.AWS.Budgets.DeleteBudget.DeleteBudget
instance GHC.Read.Read Network.AWS.Budgets.DeleteBudget.DeleteBudget
instance GHC.Classes.Eq Network.AWS.Budgets.DeleteBudget.DeleteBudget
instance GHC.Generics.Generic Network.AWS.Budgets.DeleteBudget.DeleteBudgetResponse
instance GHC.Show.Show Network.AWS.Budgets.DeleteBudget.DeleteBudgetResponse
instance GHC.Read.Read Network.AWS.Budgets.DeleteBudget.DeleteBudgetResponse
instance GHC.Classes.Eq Network.AWS.Budgets.DeleteBudget.DeleteBudgetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.DeleteBudget.DeleteBudget
instance Control.DeepSeq.NFData Network.AWS.Budgets.DeleteBudget.DeleteBudgetResponse
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.DeleteBudget.DeleteBudget
instance Control.DeepSeq.NFData Network.AWS.Budgets.DeleteBudget.DeleteBudget
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.DeleteBudget.DeleteBudget
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.DeleteBudget.DeleteBudget
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.DeleteBudget.DeleteBudget
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.DeleteBudget.DeleteBudget


-- | Creates a subscriber. You must create the associated budget and
--   notification before you create the subscriber.
module Network.AWS.Budgets.CreateSubscriber

-- | Request of CreateSubscriber
--   
--   <i>See:</i> <a>newCreateSubscriber</a> smart constructor.
data CreateSubscriber
CreateSubscriber' :: Text -> Text -> Notification -> Subscriber -> CreateSubscriber

-- | The <tt>accountId</tt> that is associated with the budget that you
--   want to create a subscriber for.
[$sel:accountId:CreateSubscriber'] :: CreateSubscriber -> Text

-- | The name of the budget that you want to subscribe to. Budget names
--   must be unique within an account.
[$sel:budgetName:CreateSubscriber'] :: CreateSubscriber -> Text

-- | The notification that you want to create a subscriber for.
[$sel:notification:CreateSubscriber'] :: CreateSubscriber -> Notification

-- | The subscriber that you want to associate with a budget notification.
[$sel:subscriber:CreateSubscriber'] :: CreateSubscriber -> Subscriber

-- | Create a value of <a>CreateSubscriber</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:CreateSubscriber'</a>,
--   <a>createSubscriber_accountId</a> - The <tt>accountId</tt> that is
--   associated with the budget that you want to create a subscriber for.
--   
--   <a>$sel:budgetName:CreateSubscriber'</a>,
--   <a>createSubscriber_budgetName</a> - The name of the budget that you
--   want to subscribe to. Budget names must be unique within an account.
--   
--   <a>$sel:notification:CreateSubscriber'</a>,
--   <a>createSubscriber_notification</a> - The notification that you want
--   to create a subscriber for.
--   
--   <a>$sel:subscriber:CreateSubscriber'</a>,
--   <a>createSubscriber_subscriber</a> - The subscriber that you want to
--   associate with a budget notification.
newCreateSubscriber :: Text -> Text -> Notification -> Subscriber -> CreateSubscriber

-- | The <tt>accountId</tt> that is associated with the budget that you
--   want to create a subscriber for.
createSubscriber_accountId :: Lens' CreateSubscriber Text

-- | The name of the budget that you want to subscribe to. Budget names
--   must be unique within an account.
createSubscriber_budgetName :: Lens' CreateSubscriber Text

-- | The notification that you want to create a subscriber for.
createSubscriber_notification :: Lens' CreateSubscriber Notification

-- | The subscriber that you want to associate with a budget notification.
createSubscriber_subscriber :: Lens' CreateSubscriber Subscriber

-- | Response of CreateSubscriber
--   
--   <i>See:</i> <a>newCreateSubscriberResponse</a> smart constructor.
data CreateSubscriberResponse
CreateSubscriberResponse' :: Int -> CreateSubscriberResponse

-- | The response's http status code.
[$sel:httpStatus:CreateSubscriberResponse'] :: CreateSubscriberResponse -> Int

-- | Create a value of <a>CreateSubscriberResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateSubscriberResponse'</a>,
--   <a>createSubscriberResponse_httpStatus</a> - The response's http
--   status code.
newCreateSubscriberResponse :: Int -> CreateSubscriberResponse

-- | The response's http status code.
createSubscriberResponse_httpStatus :: Lens' CreateSubscriberResponse Int
instance GHC.Generics.Generic Network.AWS.Budgets.CreateSubscriber.CreateSubscriber
instance GHC.Show.Show Network.AWS.Budgets.CreateSubscriber.CreateSubscriber
instance GHC.Classes.Eq Network.AWS.Budgets.CreateSubscriber.CreateSubscriber
instance GHC.Generics.Generic Network.AWS.Budgets.CreateSubscriber.CreateSubscriberResponse
instance GHC.Show.Show Network.AWS.Budgets.CreateSubscriber.CreateSubscriberResponse
instance GHC.Read.Read Network.AWS.Budgets.CreateSubscriber.CreateSubscriberResponse
instance GHC.Classes.Eq Network.AWS.Budgets.CreateSubscriber.CreateSubscriberResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.CreateSubscriber.CreateSubscriber
instance Control.DeepSeq.NFData Network.AWS.Budgets.CreateSubscriber.CreateSubscriberResponse
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.CreateSubscriber.CreateSubscriber
instance Control.DeepSeq.NFData Network.AWS.Budgets.CreateSubscriber.CreateSubscriber
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.CreateSubscriber.CreateSubscriber
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.CreateSubscriber.CreateSubscriber
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.CreateSubscriber.CreateSubscriber
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.CreateSubscriber.CreateSubscriber


-- | Creates a notification. You must create the budget before you create
--   the associated notification.
module Network.AWS.Budgets.CreateNotification

-- | Request of CreateNotification
--   
--   <i>See:</i> <a>newCreateNotification</a> smart constructor.
data CreateNotification
CreateNotification' :: Text -> Text -> Notification -> NonEmpty Subscriber -> CreateNotification

-- | The <tt>accountId</tt> that is associated with the budget that you
--   want to create a notification for.
[$sel:accountId:CreateNotification'] :: CreateNotification -> Text

-- | The name of the budget that you want AWS to notify you about. Budget
--   names must be unique within an account.
[$sel:budgetName:CreateNotification'] :: CreateNotification -> Text

-- | The notification that you want to create.
[$sel:notification:CreateNotification'] :: CreateNotification -> Notification

-- | A list of subscribers that you want to associate with the
--   notification. Each notification can have one SNS subscriber and up to
--   10 email subscribers.
[$sel:subscribers:CreateNotification'] :: CreateNotification -> NonEmpty Subscriber

-- | Create a value of <a>CreateNotification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:CreateNotification'</a>,
--   <a>createNotification_accountId</a> - The <tt>accountId</tt> that is
--   associated with the budget that you want to create a notification for.
--   
--   <a>$sel:budgetName:CreateNotification'</a>,
--   <a>createNotification_budgetName</a> - The name of the budget that you
--   want AWS to notify you about. Budget names must be unique within an
--   account.
--   
--   <a>$sel:notification:CreateNotification'</a>,
--   <a>createNotification_notification</a> - The notification that you
--   want to create.
--   
--   <a>$sel:subscribers:CreateNotification'</a>,
--   <a>createNotification_subscribers</a> - A list of subscribers that you
--   want to associate with the notification. Each notification can have
--   one SNS subscriber and up to 10 email subscribers.
newCreateNotification :: Text -> Text -> Notification -> NonEmpty Subscriber -> CreateNotification

-- | The <tt>accountId</tt> that is associated with the budget that you
--   want to create a notification for.
createNotification_accountId :: Lens' CreateNotification Text

-- | The name of the budget that you want AWS to notify you about. Budget
--   names must be unique within an account.
createNotification_budgetName :: Lens' CreateNotification Text

-- | The notification that you want to create.
createNotification_notification :: Lens' CreateNotification Notification

-- | A list of subscribers that you want to associate with the
--   notification. Each notification can have one SNS subscriber and up to
--   10 email subscribers.
createNotification_subscribers :: Lens' CreateNotification (NonEmpty Subscriber)

-- | Response of CreateNotification
--   
--   <i>See:</i> <a>newCreateNotificationResponse</a> smart constructor.
data CreateNotificationResponse
CreateNotificationResponse' :: Int -> CreateNotificationResponse

-- | The response's http status code.
[$sel:httpStatus:CreateNotificationResponse'] :: CreateNotificationResponse -> Int

-- | Create a value of <a>CreateNotificationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateNotificationResponse'</a>,
--   <a>createNotificationResponse_httpStatus</a> - The response's http
--   status code.
newCreateNotificationResponse :: Int -> CreateNotificationResponse

-- | The response's http status code.
createNotificationResponse_httpStatus :: Lens' CreateNotificationResponse Int
instance GHC.Generics.Generic Network.AWS.Budgets.CreateNotification.CreateNotification
instance GHC.Show.Show Network.AWS.Budgets.CreateNotification.CreateNotification
instance GHC.Classes.Eq Network.AWS.Budgets.CreateNotification.CreateNotification
instance GHC.Generics.Generic Network.AWS.Budgets.CreateNotification.CreateNotificationResponse
instance GHC.Show.Show Network.AWS.Budgets.CreateNotification.CreateNotificationResponse
instance GHC.Read.Read Network.AWS.Budgets.CreateNotification.CreateNotificationResponse
instance GHC.Classes.Eq Network.AWS.Budgets.CreateNotification.CreateNotificationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.CreateNotification.CreateNotification
instance Control.DeepSeq.NFData Network.AWS.Budgets.CreateNotification.CreateNotificationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.CreateNotification.CreateNotification
instance Control.DeepSeq.NFData Network.AWS.Budgets.CreateNotification.CreateNotification
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.CreateNotification.CreateNotification
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.CreateNotification.CreateNotification
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.CreateNotification.CreateNotification
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.CreateNotification.CreateNotification


-- | Creates a budget action.
module Network.AWS.Budgets.CreateBudgetAction

-- | <i>See:</i> <a>newCreateBudgetAction</a> smart constructor.
data CreateBudgetAction
CreateBudgetAction' :: Text -> Text -> NotificationType -> ActionType -> ActionThreshold -> Definition -> Text -> ApprovalModel -> NonEmpty Subscriber -> CreateBudgetAction
[$sel:accountId:CreateBudgetAction'] :: CreateBudgetAction -> Text
[$sel:budgetName:CreateBudgetAction'] :: CreateBudgetAction -> Text
[$sel:notificationType:CreateBudgetAction'] :: CreateBudgetAction -> NotificationType

-- | The type of action. This defines the type of tasks that can be carried
--   out by this action. This field also determines the format for
--   definition.
[$sel:actionType:CreateBudgetAction'] :: CreateBudgetAction -> ActionType
[$sel:actionThreshold:CreateBudgetAction'] :: CreateBudgetAction -> ActionThreshold
[$sel:definition:CreateBudgetAction'] :: CreateBudgetAction -> Definition

-- | The role passed for action execution and reversion. Roles and actions
--   must be in the same account.
[$sel:executionRoleArn:CreateBudgetAction'] :: CreateBudgetAction -> Text

-- | This specifies if the action needs manual or automatic approval.
[$sel:approvalModel:CreateBudgetAction'] :: CreateBudgetAction -> ApprovalModel
[$sel:subscribers:CreateBudgetAction'] :: CreateBudgetAction -> NonEmpty Subscriber

-- | Create a value of <a>CreateBudgetAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:CreateBudgetAction'</a>,
--   <a>createBudgetAction_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:CreateBudgetAction'</a>,
--   <a>createBudgetAction_budgetName</a> - Undocumented member.
--   
--   <a>$sel:notificationType:CreateBudgetAction'</a>,
--   <a>createBudgetAction_notificationType</a> - Undocumented member.
--   
--   <a>$sel:actionType:CreateBudgetAction'</a>,
--   <a>createBudgetAction_actionType</a> - The type of action. This
--   defines the type of tasks that can be carried out by this action. This
--   field also determines the format for definition.
--   
--   <a>$sel:actionThreshold:CreateBudgetAction'</a>,
--   <a>createBudgetAction_actionThreshold</a> - Undocumented member.
--   
--   <a>$sel:definition:CreateBudgetAction'</a>,
--   <a>createBudgetAction_definition</a> - Undocumented member.
--   
--   <a>$sel:executionRoleArn:CreateBudgetAction'</a>,
--   <a>createBudgetAction_executionRoleArn</a> - The role passed for
--   action execution and reversion. Roles and actions must be in the same
--   account.
--   
--   <a>$sel:approvalModel:CreateBudgetAction'</a>,
--   <a>createBudgetAction_approvalModel</a> - This specifies if the action
--   needs manual or automatic approval.
--   
--   <a>$sel:subscribers:CreateBudgetAction'</a>,
--   <a>createBudgetAction_subscribers</a> - Undocumented member.
newCreateBudgetAction :: Text -> Text -> NotificationType -> ActionType -> ActionThreshold -> Definition -> Text -> ApprovalModel -> NonEmpty Subscriber -> CreateBudgetAction

-- | Undocumented member.
createBudgetAction_accountId :: Lens' CreateBudgetAction Text

-- | Undocumented member.
createBudgetAction_budgetName :: Lens' CreateBudgetAction Text

-- | Undocumented member.
createBudgetAction_notificationType :: Lens' CreateBudgetAction NotificationType

-- | The type of action. This defines the type of tasks that can be carried
--   out by this action. This field also determines the format for
--   definition.
createBudgetAction_actionType :: Lens' CreateBudgetAction ActionType

-- | Undocumented member.
createBudgetAction_actionThreshold :: Lens' CreateBudgetAction ActionThreshold

-- | Undocumented member.
createBudgetAction_definition :: Lens' CreateBudgetAction Definition

-- | The role passed for action execution and reversion. Roles and actions
--   must be in the same account.
createBudgetAction_executionRoleArn :: Lens' CreateBudgetAction Text

-- | This specifies if the action needs manual or automatic approval.
createBudgetAction_approvalModel :: Lens' CreateBudgetAction ApprovalModel

-- | Undocumented member.
createBudgetAction_subscribers :: Lens' CreateBudgetAction (NonEmpty Subscriber)

-- | <i>See:</i> <a>newCreateBudgetActionResponse</a> smart constructor.
data CreateBudgetActionResponse
CreateBudgetActionResponse' :: Int -> Text -> Text -> Text -> CreateBudgetActionResponse

-- | The response's http status code.
[$sel:httpStatus:CreateBudgetActionResponse'] :: CreateBudgetActionResponse -> Int
[$sel:accountId:CreateBudgetActionResponse'] :: CreateBudgetActionResponse -> Text
[$sel:budgetName:CreateBudgetActionResponse'] :: CreateBudgetActionResponse -> Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
[$sel:actionId:CreateBudgetActionResponse'] :: CreateBudgetActionResponse -> Text

-- | Create a value of <a>CreateBudgetActionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateBudgetActionResponse'</a>,
--   <a>createBudgetActionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:accountId:CreateBudgetAction'</a>,
--   <a>createBudgetActionResponse_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:CreateBudgetAction'</a>,
--   <a>createBudgetActionResponse_budgetName</a> - Undocumented member.
--   
--   <a>$sel:actionId:CreateBudgetActionResponse'</a>,
--   <a>createBudgetActionResponse_actionId</a> - A system-generated
--   universally unique identifier (UUID) for the action.
newCreateBudgetActionResponse :: Int -> Text -> Text -> Text -> CreateBudgetActionResponse

-- | The response's http status code.
createBudgetActionResponse_httpStatus :: Lens' CreateBudgetActionResponse Int

-- | Undocumented member.
createBudgetActionResponse_accountId :: Lens' CreateBudgetActionResponse Text

-- | Undocumented member.
createBudgetActionResponse_budgetName :: Lens' CreateBudgetActionResponse Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
createBudgetActionResponse_actionId :: Lens' CreateBudgetActionResponse Text
instance GHC.Generics.Generic Network.AWS.Budgets.CreateBudgetAction.CreateBudgetAction
instance GHC.Show.Show Network.AWS.Budgets.CreateBudgetAction.CreateBudgetAction
instance GHC.Classes.Eq Network.AWS.Budgets.CreateBudgetAction.CreateBudgetAction
instance GHC.Generics.Generic Network.AWS.Budgets.CreateBudgetAction.CreateBudgetActionResponse
instance GHC.Show.Show Network.AWS.Budgets.CreateBudgetAction.CreateBudgetActionResponse
instance GHC.Read.Read Network.AWS.Budgets.CreateBudgetAction.CreateBudgetActionResponse
instance GHC.Classes.Eq Network.AWS.Budgets.CreateBudgetAction.CreateBudgetActionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.CreateBudgetAction.CreateBudgetAction
instance Control.DeepSeq.NFData Network.AWS.Budgets.CreateBudgetAction.CreateBudgetActionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.CreateBudgetAction.CreateBudgetAction
instance Control.DeepSeq.NFData Network.AWS.Budgets.CreateBudgetAction.CreateBudgetAction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.CreateBudgetAction.CreateBudgetAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.CreateBudgetAction.CreateBudgetAction
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.CreateBudgetAction.CreateBudgetAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.CreateBudgetAction.CreateBudgetAction


-- | Creates a budget and, if included, notifications and subscribers.
--   
--   Only one of <tt>BudgetLimit</tt> or <tt>PlannedBudgetLimits</tt> can
--   be present in the syntax at one time. Use the syntax that matches your
--   case. The Request Syntax section shows the <tt>BudgetLimit</tt>
--   syntax. For <tt>PlannedBudgetLimits</tt>, see the <a>Examples</a>
--   section.
module Network.AWS.Budgets.CreateBudget

-- | Request of CreateBudget
--   
--   <i>See:</i> <a>newCreateBudget</a> smart constructor.
data CreateBudget
CreateBudget' :: Maybe [NotificationWithSubscribers] -> Text -> Budget -> CreateBudget

-- | A notification that you want to associate with a budget. A budget can
--   have up to five notifications, and each notification can have one SNS
--   subscriber and up to 10 email subscribers. If you include
--   notifications and subscribers in your <tt>CreateBudget</tt> call, AWS
--   creates the notifications and subscribers for you.
[$sel:notificationsWithSubscribers:CreateBudget'] :: CreateBudget -> Maybe [NotificationWithSubscribers]

-- | The <tt>accountId</tt> that is associated with the budget.
[$sel:accountId:CreateBudget'] :: CreateBudget -> Text

-- | The budget object that you want to create.
[$sel:budget:CreateBudget'] :: CreateBudget -> Budget

-- | Create a value of <a>CreateBudget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationsWithSubscribers:CreateBudget'</a>,
--   <a>createBudget_notificationsWithSubscribers</a> - A notification that
--   you want to associate with a budget. A budget can have up to five
--   notifications, and each notification can have one SNS subscriber and
--   up to 10 email subscribers. If you include notifications and
--   subscribers in your <tt>CreateBudget</tt> call, AWS creates the
--   notifications and subscribers for you.
--   
--   <a>$sel:accountId:CreateBudget'</a>, <a>createBudget_accountId</a> -
--   The <tt>accountId</tt> that is associated with the budget.
--   
--   <a>$sel:budget:CreateBudget'</a>, <a>createBudget_budget</a> - The
--   budget object that you want to create.
newCreateBudget :: Text -> Budget -> CreateBudget

-- | A notification that you want to associate with a budget. A budget can
--   have up to five notifications, and each notification can have one SNS
--   subscriber and up to 10 email subscribers. If you include
--   notifications and subscribers in your <tt>CreateBudget</tt> call, AWS
--   creates the notifications and subscribers for you.
createBudget_notificationsWithSubscribers :: Lens' CreateBudget (Maybe [NotificationWithSubscribers])

-- | The <tt>accountId</tt> that is associated with the budget.
createBudget_accountId :: Lens' CreateBudget Text

-- | The budget object that you want to create.
createBudget_budget :: Lens' CreateBudget Budget

-- | Response of CreateBudget
--   
--   <i>See:</i> <a>newCreateBudgetResponse</a> smart constructor.
data CreateBudgetResponse
CreateBudgetResponse' :: Int -> CreateBudgetResponse

-- | The response's http status code.
[$sel:httpStatus:CreateBudgetResponse'] :: CreateBudgetResponse -> Int

-- | Create a value of <a>CreateBudgetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateBudgetResponse'</a>,
--   <a>createBudgetResponse_httpStatus</a> - The response's http status
--   code.
newCreateBudgetResponse :: Int -> CreateBudgetResponse

-- | The response's http status code.
createBudgetResponse_httpStatus :: Lens' CreateBudgetResponse Int
instance GHC.Generics.Generic Network.AWS.Budgets.CreateBudget.CreateBudget
instance GHC.Show.Show Network.AWS.Budgets.CreateBudget.CreateBudget
instance GHC.Classes.Eq Network.AWS.Budgets.CreateBudget.CreateBudget
instance GHC.Generics.Generic Network.AWS.Budgets.CreateBudget.CreateBudgetResponse
instance GHC.Show.Show Network.AWS.Budgets.CreateBudget.CreateBudgetResponse
instance GHC.Read.Read Network.AWS.Budgets.CreateBudget.CreateBudgetResponse
instance GHC.Classes.Eq Network.AWS.Budgets.CreateBudget.CreateBudgetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.CreateBudget.CreateBudget
instance Control.DeepSeq.NFData Network.AWS.Budgets.CreateBudget.CreateBudgetResponse
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.CreateBudget.CreateBudget
instance Control.DeepSeq.NFData Network.AWS.Budgets.CreateBudget.CreateBudget
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.CreateBudget.CreateBudget
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.CreateBudget.CreateBudget
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.CreateBudget.CreateBudget
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.CreateBudget.CreateBudget


-- | Updates a budget. You can change every part of a budget except for the
--   <tt>budgetName</tt> and the <tt>calculatedSpend</tt>. When you modify
--   a budget, the <tt>calculatedSpend</tt> drops to zero until AWS has new
--   usage data to use for forecasting.
--   
--   Only one of <tt>BudgetLimit</tt> or <tt>PlannedBudgetLimits</tt> can
--   be present in the syntax at one time. Use the syntax that matches your
--   case. The Request Syntax section shows the <tt>BudgetLimit</tt>
--   syntax. For <tt>PlannedBudgetLimits</tt>, see the <a>Examples</a>
--   section.
module Network.AWS.Budgets.UpdateBudget

-- | Request of UpdateBudget
--   
--   <i>See:</i> <a>newUpdateBudget</a> smart constructor.
data UpdateBudget
UpdateBudget' :: Text -> Budget -> UpdateBudget

-- | The <tt>accountId</tt> that is associated with the budget that you
--   want to update.
[$sel:accountId:UpdateBudget'] :: UpdateBudget -> Text

-- | The budget that you want to update your budget to.
[$sel:newBudget':UpdateBudget'] :: UpdateBudget -> Budget

-- | Create a value of <a>UpdateBudget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:UpdateBudget'</a>, <a>updateBudget_accountId</a> -
--   The <tt>accountId</tt> that is associated with the budget that you
--   want to update.
--   
--   <a>$sel:newBudget':UpdateBudget'</a>, <a>updateBudget_newBudget</a> -
--   The budget that you want to update your budget to.
newUpdateBudget :: Text -> Budget -> UpdateBudget

-- | The <tt>accountId</tt> that is associated with the budget that you
--   want to update.
updateBudget_accountId :: Lens' UpdateBudget Text

-- | The budget that you want to update your budget to.
updateBudget_newBudget :: Lens' UpdateBudget Budget

-- | Response of UpdateBudget
--   
--   <i>See:</i> <a>newUpdateBudgetResponse</a> smart constructor.
data UpdateBudgetResponse
UpdateBudgetResponse' :: Int -> UpdateBudgetResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateBudgetResponse'] :: UpdateBudgetResponse -> Int

-- | Create a value of <a>UpdateBudgetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateBudgetResponse'</a>,
--   <a>updateBudgetResponse_httpStatus</a> - The response's http status
--   code.
newUpdateBudgetResponse :: Int -> UpdateBudgetResponse

-- | The response's http status code.
updateBudgetResponse_httpStatus :: Lens' UpdateBudgetResponse Int
instance GHC.Generics.Generic Network.AWS.Budgets.UpdateBudget.UpdateBudget
instance GHC.Show.Show Network.AWS.Budgets.UpdateBudget.UpdateBudget
instance GHC.Read.Read Network.AWS.Budgets.UpdateBudget.UpdateBudget
instance GHC.Classes.Eq Network.AWS.Budgets.UpdateBudget.UpdateBudget
instance GHC.Generics.Generic Network.AWS.Budgets.UpdateBudget.UpdateBudgetResponse
instance GHC.Show.Show Network.AWS.Budgets.UpdateBudget.UpdateBudgetResponse
instance GHC.Read.Read Network.AWS.Budgets.UpdateBudget.UpdateBudgetResponse
instance GHC.Classes.Eq Network.AWS.Budgets.UpdateBudget.UpdateBudgetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.UpdateBudget.UpdateBudget
instance Control.DeepSeq.NFData Network.AWS.Budgets.UpdateBudget.UpdateBudgetResponse
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.UpdateBudget.UpdateBudget
instance Control.DeepSeq.NFData Network.AWS.Budgets.UpdateBudget.UpdateBudget
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.UpdateBudget.UpdateBudget
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.UpdateBudget.UpdateBudget
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.UpdateBudget.UpdateBudget
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.UpdateBudget.UpdateBudget


-- | Updates a budget action.
module Network.AWS.Budgets.UpdateBudgetAction

-- | <i>See:</i> <a>newUpdateBudgetAction</a> smart constructor.
data UpdateBudgetAction
UpdateBudgetAction' :: Maybe (NonEmpty Subscriber) -> Maybe Text -> Maybe ApprovalModel -> Maybe NotificationType -> Maybe ActionThreshold -> Maybe Definition -> Text -> Text -> Text -> UpdateBudgetAction
[$sel:subscribers:UpdateBudgetAction'] :: UpdateBudgetAction -> Maybe (NonEmpty Subscriber)

-- | The role passed for action execution and reversion. Roles and actions
--   must be in the same account.
[$sel:executionRoleArn:UpdateBudgetAction'] :: UpdateBudgetAction -> Maybe Text

-- | This specifies if the action needs manual or automatic approval.
[$sel:approvalModel:UpdateBudgetAction'] :: UpdateBudgetAction -> Maybe ApprovalModel
[$sel:notificationType:UpdateBudgetAction'] :: UpdateBudgetAction -> Maybe NotificationType
[$sel:actionThreshold:UpdateBudgetAction'] :: UpdateBudgetAction -> Maybe ActionThreshold
[$sel:definition:UpdateBudgetAction'] :: UpdateBudgetAction -> Maybe Definition
[$sel:accountId:UpdateBudgetAction'] :: UpdateBudgetAction -> Text
[$sel:budgetName:UpdateBudgetAction'] :: UpdateBudgetAction -> Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
[$sel:actionId:UpdateBudgetAction'] :: UpdateBudgetAction -> Text

-- | Create a value of <a>UpdateBudgetAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscribers:UpdateBudgetAction'</a>,
--   <a>updateBudgetAction_subscribers</a> - Undocumented member.
--   
--   <a>$sel:executionRoleArn:UpdateBudgetAction'</a>,
--   <a>updateBudgetAction_executionRoleArn</a> - The role passed for
--   action execution and reversion. Roles and actions must be in the same
--   account.
--   
--   <a>$sel:approvalModel:UpdateBudgetAction'</a>,
--   <a>updateBudgetAction_approvalModel</a> - This specifies if the action
--   needs manual or automatic approval.
--   
--   <a>$sel:notificationType:UpdateBudgetAction'</a>,
--   <a>updateBudgetAction_notificationType</a> - Undocumented member.
--   
--   <a>$sel:actionThreshold:UpdateBudgetAction'</a>,
--   <a>updateBudgetAction_actionThreshold</a> - Undocumented member.
--   
--   <a>$sel:definition:UpdateBudgetAction'</a>,
--   <a>updateBudgetAction_definition</a> - Undocumented member.
--   
--   <a>$sel:accountId:UpdateBudgetAction'</a>,
--   <a>updateBudgetAction_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:UpdateBudgetAction'</a>,
--   <a>updateBudgetAction_budgetName</a> - Undocumented member.
--   
--   <a>$sel:actionId:UpdateBudgetAction'</a>,
--   <a>updateBudgetAction_actionId</a> - A system-generated universally
--   unique identifier (UUID) for the action.
newUpdateBudgetAction :: Text -> Text -> Text -> UpdateBudgetAction

-- | Undocumented member.
updateBudgetAction_subscribers :: Lens' UpdateBudgetAction (Maybe (NonEmpty Subscriber))

-- | The role passed for action execution and reversion. Roles and actions
--   must be in the same account.
updateBudgetAction_executionRoleArn :: Lens' UpdateBudgetAction (Maybe Text)

-- | This specifies if the action needs manual or automatic approval.
updateBudgetAction_approvalModel :: Lens' UpdateBudgetAction (Maybe ApprovalModel)

-- | Undocumented member.
updateBudgetAction_notificationType :: Lens' UpdateBudgetAction (Maybe NotificationType)

-- | Undocumented member.
updateBudgetAction_actionThreshold :: Lens' UpdateBudgetAction (Maybe ActionThreshold)

-- | Undocumented member.
updateBudgetAction_definition :: Lens' UpdateBudgetAction (Maybe Definition)

-- | Undocumented member.
updateBudgetAction_accountId :: Lens' UpdateBudgetAction Text

-- | Undocumented member.
updateBudgetAction_budgetName :: Lens' UpdateBudgetAction Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
updateBudgetAction_actionId :: Lens' UpdateBudgetAction Text

-- | <i>See:</i> <a>newUpdateBudgetActionResponse</a> smart constructor.
data UpdateBudgetActionResponse
UpdateBudgetActionResponse' :: Int -> Text -> Text -> Action -> Action -> UpdateBudgetActionResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateBudgetActionResponse'] :: UpdateBudgetActionResponse -> Int
[$sel:accountId:UpdateBudgetActionResponse'] :: UpdateBudgetActionResponse -> Text
[$sel:budgetName:UpdateBudgetActionResponse'] :: UpdateBudgetActionResponse -> Text

-- | The previous action resource information.
[$sel:oldAction:UpdateBudgetActionResponse'] :: UpdateBudgetActionResponse -> Action

-- | The updated action resource information.
[$sel:newAction':UpdateBudgetActionResponse'] :: UpdateBudgetActionResponse -> Action

-- | Create a value of <a>UpdateBudgetActionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateBudgetActionResponse'</a>,
--   <a>updateBudgetActionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:accountId:UpdateBudgetAction'</a>,
--   <a>updateBudgetActionResponse_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:UpdateBudgetAction'</a>,
--   <a>updateBudgetActionResponse_budgetName</a> - Undocumented member.
--   
--   <a>$sel:oldAction:UpdateBudgetActionResponse'</a>,
--   <a>updateBudgetActionResponse_oldAction</a> - The previous action
--   resource information.
--   
--   <a>$sel:newAction':UpdateBudgetActionResponse'</a>,
--   <a>updateBudgetActionResponse_newAction</a> - The updated action
--   resource information.
newUpdateBudgetActionResponse :: Int -> Text -> Text -> Action -> Action -> UpdateBudgetActionResponse

-- | The response's http status code.
updateBudgetActionResponse_httpStatus :: Lens' UpdateBudgetActionResponse Int

-- | Undocumented member.
updateBudgetActionResponse_accountId :: Lens' UpdateBudgetActionResponse Text

-- | Undocumented member.
updateBudgetActionResponse_budgetName :: Lens' UpdateBudgetActionResponse Text

-- | The previous action resource information.
updateBudgetActionResponse_oldAction :: Lens' UpdateBudgetActionResponse Action

-- | The updated action resource information.
updateBudgetActionResponse_newAction :: Lens' UpdateBudgetActionResponse Action
instance GHC.Generics.Generic Network.AWS.Budgets.UpdateBudgetAction.UpdateBudgetAction
instance GHC.Show.Show Network.AWS.Budgets.UpdateBudgetAction.UpdateBudgetAction
instance GHC.Classes.Eq Network.AWS.Budgets.UpdateBudgetAction.UpdateBudgetAction
instance GHC.Generics.Generic Network.AWS.Budgets.UpdateBudgetAction.UpdateBudgetActionResponse
instance GHC.Show.Show Network.AWS.Budgets.UpdateBudgetAction.UpdateBudgetActionResponse
instance GHC.Classes.Eq Network.AWS.Budgets.UpdateBudgetAction.UpdateBudgetActionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.UpdateBudgetAction.UpdateBudgetAction
instance Control.DeepSeq.NFData Network.AWS.Budgets.UpdateBudgetAction.UpdateBudgetActionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.UpdateBudgetAction.UpdateBudgetAction
instance Control.DeepSeq.NFData Network.AWS.Budgets.UpdateBudgetAction.UpdateBudgetAction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.UpdateBudgetAction.UpdateBudgetAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.UpdateBudgetAction.UpdateBudgetAction
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.UpdateBudgetAction.UpdateBudgetAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.UpdateBudgetAction.UpdateBudgetAction


-- | Updates a notification.
module Network.AWS.Budgets.UpdateNotification

-- | Request of UpdateNotification
--   
--   <i>See:</i> <a>newUpdateNotification</a> smart constructor.
data UpdateNotification
UpdateNotification' :: Text -> Text -> Notification -> Notification -> UpdateNotification

-- | The <tt>accountId</tt> that is associated with the budget whose
--   notification you want to update.
[$sel:accountId:UpdateNotification'] :: UpdateNotification -> Text

-- | The name of the budget whose notification you want to update.
[$sel:budgetName:UpdateNotification'] :: UpdateNotification -> Text

-- | The previous notification that is associated with a budget.
[$sel:oldNotification:UpdateNotification'] :: UpdateNotification -> Notification

-- | The updated notification to be associated with a budget.
[$sel:newNotification':UpdateNotification'] :: UpdateNotification -> Notification

-- | Create a value of <a>UpdateNotification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:UpdateNotification'</a>,
--   <a>updateNotification_accountId</a> - The <tt>accountId</tt> that is
--   associated with the budget whose notification you want to update.
--   
--   <a>$sel:budgetName:UpdateNotification'</a>,
--   <a>updateNotification_budgetName</a> - The name of the budget whose
--   notification you want to update.
--   
--   <a>$sel:oldNotification:UpdateNotification'</a>,
--   <a>updateNotification_oldNotification</a> - The previous notification
--   that is associated with a budget.
--   
--   <a>$sel:newNotification':UpdateNotification'</a>,
--   <a>updateNotification_newNotification</a> - The updated notification
--   to be associated with a budget.
newUpdateNotification :: Text -> Text -> Notification -> Notification -> UpdateNotification

-- | The <tt>accountId</tt> that is associated with the budget whose
--   notification you want to update.
updateNotification_accountId :: Lens' UpdateNotification Text

-- | The name of the budget whose notification you want to update.
updateNotification_budgetName :: Lens' UpdateNotification Text

-- | The previous notification that is associated with a budget.
updateNotification_oldNotification :: Lens' UpdateNotification Notification

-- | The updated notification to be associated with a budget.
updateNotification_newNotification :: Lens' UpdateNotification Notification

-- | Response of UpdateNotification
--   
--   <i>See:</i> <a>newUpdateNotificationResponse</a> smart constructor.
data UpdateNotificationResponse
UpdateNotificationResponse' :: Int -> UpdateNotificationResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateNotificationResponse'] :: UpdateNotificationResponse -> Int

-- | Create a value of <a>UpdateNotificationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateNotificationResponse'</a>,
--   <a>updateNotificationResponse_httpStatus</a> - The response's http
--   status code.
newUpdateNotificationResponse :: Int -> UpdateNotificationResponse

-- | The response's http status code.
updateNotificationResponse_httpStatus :: Lens' UpdateNotificationResponse Int
instance GHC.Generics.Generic Network.AWS.Budgets.UpdateNotification.UpdateNotification
instance GHC.Show.Show Network.AWS.Budgets.UpdateNotification.UpdateNotification
instance GHC.Read.Read Network.AWS.Budgets.UpdateNotification.UpdateNotification
instance GHC.Classes.Eq Network.AWS.Budgets.UpdateNotification.UpdateNotification
instance GHC.Generics.Generic Network.AWS.Budgets.UpdateNotification.UpdateNotificationResponse
instance GHC.Show.Show Network.AWS.Budgets.UpdateNotification.UpdateNotificationResponse
instance GHC.Read.Read Network.AWS.Budgets.UpdateNotification.UpdateNotificationResponse
instance GHC.Classes.Eq Network.AWS.Budgets.UpdateNotification.UpdateNotificationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.UpdateNotification.UpdateNotification
instance Control.DeepSeq.NFData Network.AWS.Budgets.UpdateNotification.UpdateNotificationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.UpdateNotification.UpdateNotification
instance Control.DeepSeq.NFData Network.AWS.Budgets.UpdateNotification.UpdateNotification
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.UpdateNotification.UpdateNotification
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.UpdateNotification.UpdateNotification
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.UpdateNotification.UpdateNotification
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.UpdateNotification.UpdateNotification


-- | Updates a subscriber.
module Network.AWS.Budgets.UpdateSubscriber

-- | Request of UpdateSubscriber
--   
--   <i>See:</i> <a>newUpdateSubscriber</a> smart constructor.
data UpdateSubscriber
UpdateSubscriber' :: Text -> Text -> Notification -> Subscriber -> Subscriber -> UpdateSubscriber

-- | The <tt>accountId</tt> that is associated with the budget whose
--   subscriber you want to update.
[$sel:accountId:UpdateSubscriber'] :: UpdateSubscriber -> Text

-- | The name of the budget whose subscriber you want to update.
[$sel:budgetName:UpdateSubscriber'] :: UpdateSubscriber -> Text

-- | The notification whose subscriber you want to update.
[$sel:notification:UpdateSubscriber'] :: UpdateSubscriber -> Notification

-- | The previous subscriber that is associated with a budget notification.
[$sel:oldSubscriber:UpdateSubscriber'] :: UpdateSubscriber -> Subscriber

-- | The updated subscriber that is associated with a budget notification.
[$sel:newSubscriber':UpdateSubscriber'] :: UpdateSubscriber -> Subscriber

-- | Create a value of <a>UpdateSubscriber</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:UpdateSubscriber'</a>,
--   <a>updateSubscriber_accountId</a> - The <tt>accountId</tt> that is
--   associated with the budget whose subscriber you want to update.
--   
--   <a>$sel:budgetName:UpdateSubscriber'</a>,
--   <a>updateSubscriber_budgetName</a> - The name of the budget whose
--   subscriber you want to update.
--   
--   <a>$sel:notification:UpdateSubscriber'</a>,
--   <a>updateSubscriber_notification</a> - The notification whose
--   subscriber you want to update.
--   
--   <a>$sel:oldSubscriber:UpdateSubscriber'</a>,
--   <a>updateSubscriber_oldSubscriber</a> - The previous subscriber that
--   is associated with a budget notification.
--   
--   <a>$sel:newSubscriber':UpdateSubscriber'</a>,
--   <a>updateSubscriber_newSubscriber</a> - The updated subscriber that is
--   associated with a budget notification.
newUpdateSubscriber :: Text -> Text -> Notification -> Subscriber -> Subscriber -> UpdateSubscriber

-- | The <tt>accountId</tt> that is associated with the budget whose
--   subscriber you want to update.
updateSubscriber_accountId :: Lens' UpdateSubscriber Text

-- | The name of the budget whose subscriber you want to update.
updateSubscriber_budgetName :: Lens' UpdateSubscriber Text

-- | The notification whose subscriber you want to update.
updateSubscriber_notification :: Lens' UpdateSubscriber Notification

-- | The previous subscriber that is associated with a budget notification.
updateSubscriber_oldSubscriber :: Lens' UpdateSubscriber Subscriber

-- | The updated subscriber that is associated with a budget notification.
updateSubscriber_newSubscriber :: Lens' UpdateSubscriber Subscriber

-- | Response of UpdateSubscriber
--   
--   <i>See:</i> <a>newUpdateSubscriberResponse</a> smart constructor.
data UpdateSubscriberResponse
UpdateSubscriberResponse' :: Int -> UpdateSubscriberResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateSubscriberResponse'] :: UpdateSubscriberResponse -> Int

-- | Create a value of <a>UpdateSubscriberResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateSubscriberResponse'</a>,
--   <a>updateSubscriberResponse_httpStatus</a> - The response's http
--   status code.
newUpdateSubscriberResponse :: Int -> UpdateSubscriberResponse

-- | The response's http status code.
updateSubscriberResponse_httpStatus :: Lens' UpdateSubscriberResponse Int
instance GHC.Generics.Generic Network.AWS.Budgets.UpdateSubscriber.UpdateSubscriber
instance GHC.Show.Show Network.AWS.Budgets.UpdateSubscriber.UpdateSubscriber
instance GHC.Classes.Eq Network.AWS.Budgets.UpdateSubscriber.UpdateSubscriber
instance GHC.Generics.Generic Network.AWS.Budgets.UpdateSubscriber.UpdateSubscriberResponse
instance GHC.Show.Show Network.AWS.Budgets.UpdateSubscriber.UpdateSubscriberResponse
instance GHC.Read.Read Network.AWS.Budgets.UpdateSubscriber.UpdateSubscriberResponse
instance GHC.Classes.Eq Network.AWS.Budgets.UpdateSubscriber.UpdateSubscriberResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Budgets.UpdateSubscriber.UpdateSubscriber
instance Control.DeepSeq.NFData Network.AWS.Budgets.UpdateSubscriber.UpdateSubscriberResponse
instance Data.Hashable.Class.Hashable Network.AWS.Budgets.UpdateSubscriber.UpdateSubscriber
instance Control.DeepSeq.NFData Network.AWS.Budgets.UpdateSubscriber.UpdateSubscriber
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Budgets.UpdateSubscriber.UpdateSubscriber
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Budgets.UpdateSubscriber.UpdateSubscriber
instance Network.AWS.Data.Path.ToPath Network.AWS.Budgets.UpdateSubscriber.UpdateSubscriber
instance Network.AWS.Data.Query.ToQuery Network.AWS.Budgets.UpdateSubscriber.UpdateSubscriber


module Network.AWS.Budgets.Lens

-- | Undocumented member.
describeBudgetActionsForAccount_nextToken :: Lens' DescribeBudgetActionsForAccount (Maybe Text)

-- | Undocumented member.
describeBudgetActionsForAccount_maxResults :: Lens' DescribeBudgetActionsForAccount (Maybe Natural)

-- | Undocumented member.
describeBudgetActionsForAccount_accountId :: Lens' DescribeBudgetActionsForAccount Text

-- | Undocumented member.
describeBudgetActionsForAccountResponse_nextToken :: Lens' DescribeBudgetActionsForAccountResponse (Maybe Text)

-- | The response's http status code.
describeBudgetActionsForAccountResponse_httpStatus :: Lens' DescribeBudgetActionsForAccountResponse Int

-- | A list of the budget action resources information.
describeBudgetActionsForAccountResponse_actions :: Lens' DescribeBudgetActionsForAccountResponse [Action]

-- | Undocumented member.
createBudgetAction_accountId :: Lens' CreateBudgetAction Text

-- | Undocumented member.
createBudgetAction_budgetName :: Lens' CreateBudgetAction Text

-- | Undocumented member.
createBudgetAction_notificationType :: Lens' CreateBudgetAction NotificationType

-- | The type of action. This defines the type of tasks that can be carried
--   out by this action. This field also determines the format for
--   definition.
createBudgetAction_actionType :: Lens' CreateBudgetAction ActionType

-- | Undocumented member.
createBudgetAction_actionThreshold :: Lens' CreateBudgetAction ActionThreshold

-- | Undocumented member.
createBudgetAction_definition :: Lens' CreateBudgetAction Definition

-- | The role passed for action execution and reversion. Roles and actions
--   must be in the same account.
createBudgetAction_executionRoleArn :: Lens' CreateBudgetAction Text

-- | This specifies if the action needs manual or automatic approval.
createBudgetAction_approvalModel :: Lens' CreateBudgetAction ApprovalModel

-- | Undocumented member.
createBudgetAction_subscribers :: Lens' CreateBudgetAction (NonEmpty Subscriber)

-- | The response's http status code.
createBudgetActionResponse_httpStatus :: Lens' CreateBudgetActionResponse Int

-- | Undocumented member.
createBudgetActionResponse_accountId :: Lens' CreateBudgetActionResponse Text

-- | Undocumented member.
createBudgetActionResponse_budgetName :: Lens' CreateBudgetActionResponse Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
createBudgetActionResponse_actionId :: Lens' CreateBudgetActionResponse Text

-- | Undocumented member.
executeBudgetAction_accountId :: Lens' ExecuteBudgetAction Text

-- | Undocumented member.
executeBudgetAction_budgetName :: Lens' ExecuteBudgetAction Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
executeBudgetAction_actionId :: Lens' ExecuteBudgetAction Text

-- | The type of execution.
executeBudgetAction_executionType :: Lens' ExecuteBudgetAction ExecutionType

-- | The response's http status code.
executeBudgetActionResponse_httpStatus :: Lens' ExecuteBudgetActionResponse Int

-- | Undocumented member.
executeBudgetActionResponse_accountId :: Lens' ExecuteBudgetActionResponse Text

-- | Undocumented member.
executeBudgetActionResponse_budgetName :: Lens' ExecuteBudgetActionResponse Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
executeBudgetActionResponse_actionId :: Lens' ExecuteBudgetActionResponse Text

-- | The type of execution.
executeBudgetActionResponse_executionType :: Lens' ExecuteBudgetActionResponse ExecutionType

-- | Undocumented member.
describeBudgetAction_accountId :: Lens' DescribeBudgetAction Text

-- | Undocumented member.
describeBudgetAction_budgetName :: Lens' DescribeBudgetAction Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
describeBudgetAction_actionId :: Lens' DescribeBudgetAction Text

-- | The response's http status code.
describeBudgetActionResponse_httpStatus :: Lens' DescribeBudgetActionResponse Int

-- | Undocumented member.
describeBudgetActionResponse_accountId :: Lens' DescribeBudgetActionResponse Text

-- | Undocumented member.
describeBudgetActionResponse_budgetName :: Lens' DescribeBudgetActionResponse Text

-- | A budget action resource.
describeBudgetActionResponse_action :: Lens' DescribeBudgetActionResponse Action

-- | Undocumented member.
updateBudgetAction_subscribers :: Lens' UpdateBudgetAction (Maybe (NonEmpty Subscriber))

-- | The role passed for action execution and reversion. Roles and actions
--   must be in the same account.
updateBudgetAction_executionRoleArn :: Lens' UpdateBudgetAction (Maybe Text)

-- | This specifies if the action needs manual or automatic approval.
updateBudgetAction_approvalModel :: Lens' UpdateBudgetAction (Maybe ApprovalModel)

-- | Undocumented member.
updateBudgetAction_notificationType :: Lens' UpdateBudgetAction (Maybe NotificationType)

-- | Undocumented member.
updateBudgetAction_actionThreshold :: Lens' UpdateBudgetAction (Maybe ActionThreshold)

-- | Undocumented member.
updateBudgetAction_definition :: Lens' UpdateBudgetAction (Maybe Definition)

-- | Undocumented member.
updateBudgetAction_accountId :: Lens' UpdateBudgetAction Text

-- | Undocumented member.
updateBudgetAction_budgetName :: Lens' UpdateBudgetAction Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
updateBudgetAction_actionId :: Lens' UpdateBudgetAction Text

-- | The response's http status code.
updateBudgetActionResponse_httpStatus :: Lens' UpdateBudgetActionResponse Int

-- | Undocumented member.
updateBudgetActionResponse_accountId :: Lens' UpdateBudgetActionResponse Text

-- | Undocumented member.
updateBudgetActionResponse_budgetName :: Lens' UpdateBudgetActionResponse Text

-- | The previous action resource information.
updateBudgetActionResponse_oldAction :: Lens' UpdateBudgetActionResponse Action

-- | The updated action resource information.
updateBudgetActionResponse_newAction :: Lens' UpdateBudgetActionResponse Action

-- | Undocumented member.
deleteBudgetAction_accountId :: Lens' DeleteBudgetAction Text

-- | Undocumented member.
deleteBudgetAction_budgetName :: Lens' DeleteBudgetAction Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
deleteBudgetAction_actionId :: Lens' DeleteBudgetAction Text

-- | The response's http status code.
deleteBudgetActionResponse_httpStatus :: Lens' DeleteBudgetActionResponse Int

-- | Undocumented member.
deleteBudgetActionResponse_accountId :: Lens' DeleteBudgetActionResponse Text

-- | Undocumented member.
deleteBudgetActionResponse_budgetName :: Lens' DeleteBudgetActionResponse Text

-- | Undocumented member.
deleteBudgetActionResponse_action :: Lens' DeleteBudgetActionResponse Action

-- | Undocumented member.
describeBudgetActionHistories_nextToken :: Lens' DescribeBudgetActionHistories (Maybe Text)

-- | Undocumented member.
describeBudgetActionHistories_maxResults :: Lens' DescribeBudgetActionHistories (Maybe Natural)

-- | Undocumented member.
describeBudgetActionHistories_timePeriod :: Lens' DescribeBudgetActionHistories (Maybe TimePeriod)

-- | Undocumented member.
describeBudgetActionHistories_accountId :: Lens' DescribeBudgetActionHistories Text

-- | Undocumented member.
describeBudgetActionHistories_budgetName :: Lens' DescribeBudgetActionHistories Text

-- | A system-generated universally unique identifier (UUID) for the
--   action.
describeBudgetActionHistories_actionId :: Lens' DescribeBudgetActionHistories Text

-- | Undocumented member.
describeBudgetActionHistoriesResponse_nextToken :: Lens' DescribeBudgetActionHistoriesResponse (Maybe Text)

-- | The response's http status code.
describeBudgetActionHistoriesResponse_httpStatus :: Lens' DescribeBudgetActionHistoriesResponse Int

-- | The historical record of the budget action resource.
describeBudgetActionHistoriesResponse_actionHistories :: Lens' DescribeBudgetActionHistoriesResponse [ActionHistory]

-- | The pagination token that you include in your request to indicate the
--   next set of results that you want to retrieve.
describeSubscribersForNotification_nextToken :: Lens' DescribeSubscribersForNotification (Maybe Text)

-- | An optional integer that represents how many entries a paginated
--   response contains. The maximum is 100.
describeSubscribersForNotification_maxResults :: Lens' DescribeSubscribersForNotification (Maybe Natural)

-- | The <tt>accountId</tt> that is associated with the budget whose
--   subscribers you want descriptions of.
describeSubscribersForNotification_accountId :: Lens' DescribeSubscribersForNotification Text

-- | The name of the budget whose subscribers you want descriptions of.
describeSubscribersForNotification_budgetName :: Lens' DescribeSubscribersForNotification Text

-- | The notification whose subscribers you want to list.
describeSubscribersForNotification_notification :: Lens' DescribeSubscribersForNotification Notification

-- | The pagination token in the service response that indicates the next
--   set of results that you can retrieve.
describeSubscribersForNotificationResponse_nextToken :: Lens' DescribeSubscribersForNotificationResponse (Maybe Text)

-- | A list of subscribers that are associated with a notification.
describeSubscribersForNotificationResponse_subscribers :: Lens' DescribeSubscribersForNotificationResponse (Maybe (NonEmpty Subscriber))

-- | The response's http status code.
describeSubscribersForNotificationResponse_httpStatus :: Lens' DescribeSubscribersForNotificationResponse Int

-- | The <tt>accountId</tt> that is associated with the budget that you
--   want to update.
updateBudget_accountId :: Lens' UpdateBudget Text

-- | The budget that you want to update your budget to.
updateBudget_newBudget :: Lens' UpdateBudget Budget

-- | The response's http status code.
updateBudgetResponse_httpStatus :: Lens' UpdateBudgetResponse Int

-- | The <tt>accountId</tt> that is associated with the budget whose
--   notification you want to delete.
deleteNotification_accountId :: Lens' DeleteNotification Text

-- | The name of the budget whose notification you want to delete.
deleteNotification_budgetName :: Lens' DeleteNotification Text

-- | The notification that you want to delete.
deleteNotification_notification :: Lens' DeleteNotification Notification

-- | The response's http status code.
deleteNotificationResponse_httpStatus :: Lens' DeleteNotificationResponse Int

-- | The <tt>accountId</tt> that is associated with the budget that you
--   want to delete.
deleteBudget_accountId :: Lens' DeleteBudget Text

-- | The name of the budget that you want to delete.
deleteBudget_budgetName :: Lens' DeleteBudget Text

-- | The response's http status code.
deleteBudgetResponse_httpStatus :: Lens' DeleteBudgetResponse Int

-- | The <tt>accountId</tt> that is associated with the budget whose
--   notification you want to update.
updateNotification_accountId :: Lens' UpdateNotification Text

-- | The name of the budget whose notification you want to update.
updateNotification_budgetName :: Lens' UpdateNotification Text

-- | The previous notification that is associated with a budget.
updateNotification_oldNotification :: Lens' UpdateNotification Notification

-- | The updated notification to be associated with a budget.
updateNotification_newNotification :: Lens' UpdateNotification Notification

-- | The response's http status code.
updateNotificationResponse_httpStatus :: Lens' UpdateNotificationResponse Int

-- | A notification that you want to associate with a budget. A budget can
--   have up to five notifications, and each notification can have one SNS
--   subscriber and up to 10 email subscribers. If you include
--   notifications and subscribers in your <tt>CreateBudget</tt> call, AWS
--   creates the notifications and subscribers for you.
createBudget_notificationsWithSubscribers :: Lens' CreateBudget (Maybe [NotificationWithSubscribers])

-- | The <tt>accountId</tt> that is associated with the budget.
createBudget_accountId :: Lens' CreateBudget Text

-- | The budget object that you want to create.
createBudget_budget :: Lens' CreateBudget Budget

-- | The response's http status code.
createBudgetResponse_httpStatus :: Lens' CreateBudgetResponse Int

-- | The <tt>accountId</tt> that is associated with the budget that you
--   want to create a notification for.
createNotification_accountId :: Lens' CreateNotification Text

-- | The name of the budget that you want AWS to notify you about. Budget
--   names must be unique within an account.
createNotification_budgetName :: Lens' CreateNotification Text

-- | The notification that you want to create.
createNotification_notification :: Lens' CreateNotification Notification

-- | A list of subscribers that you want to associate with the
--   notification. Each notification can have one SNS subscriber and up to
--   10 email subscribers.
createNotification_subscribers :: Lens' CreateNotification (NonEmpty Subscriber)

-- | The response's http status code.
createNotificationResponse_httpStatus :: Lens' CreateNotificationResponse Int

-- | The <tt>accountId</tt> that is associated with the budget that you
--   want to create a subscriber for.
createSubscriber_accountId :: Lens' CreateSubscriber Text

-- | The name of the budget that you want to subscribe to. Budget names
--   must be unique within an account.
createSubscriber_budgetName :: Lens' CreateSubscriber Text

-- | The notification that you want to create a subscriber for.
createSubscriber_notification :: Lens' CreateSubscriber Notification

-- | The subscriber that you want to associate with a budget notification.
createSubscriber_subscriber :: Lens' CreateSubscriber Subscriber

-- | The response's http status code.
createSubscriberResponse_httpStatus :: Lens' CreateSubscriberResponse Int

-- | The pagination token that you include in your request to indicate the
--   next set of results that you want to retrieve.
describeBudgets_nextToken :: Lens' DescribeBudgets (Maybe Text)

-- | An optional integer that represents how many entries a paginated
--   response contains. The maximum is 100.
describeBudgets_maxResults :: Lens' DescribeBudgets (Maybe Natural)

-- | The <tt>accountId</tt> that is associated with the budgets that you
--   want descriptions of.
describeBudgets_accountId :: Lens' DescribeBudgets Text

-- | The pagination token in the service response that indicates the next
--   set of results that you can retrieve.
describeBudgetsResponse_nextToken :: Lens' DescribeBudgetsResponse (Maybe Text)

-- | A list of budgets.
describeBudgetsResponse_budgets :: Lens' DescribeBudgetsResponse (Maybe [Budget])

-- | The response's http status code.
describeBudgetsResponse_httpStatus :: Lens' DescribeBudgetsResponse Int

-- | The <tt>accountId</tt> that is associated with the budget whose
--   subscriber you want to delete.
deleteSubscriber_accountId :: Lens' DeleteSubscriber Text

-- | The name of the budget whose subscriber you want to delete.
deleteSubscriber_budgetName :: Lens' DeleteSubscriber Text

-- | The notification whose subscriber you want to delete.
deleteSubscriber_notification :: Lens' DeleteSubscriber Notification

-- | The subscriber that you want to delete.
deleteSubscriber_subscriber :: Lens' DeleteSubscriber Subscriber

-- | The response's http status code.
deleteSubscriberResponse_httpStatus :: Lens' DeleteSubscriberResponse Int

-- | The <tt>accountId</tt> that is associated with the budget whose
--   subscriber you want to update.
updateSubscriber_accountId :: Lens' UpdateSubscriber Text

-- | The name of the budget whose subscriber you want to update.
updateSubscriber_budgetName :: Lens' UpdateSubscriber Text

-- | The notification whose subscriber you want to update.
updateSubscriber_notification :: Lens' UpdateSubscriber Notification

-- | The previous subscriber that is associated with a budget notification.
updateSubscriber_oldSubscriber :: Lens' UpdateSubscriber Subscriber

-- | The updated subscriber that is associated with a budget notification.
updateSubscriber_newSubscriber :: Lens' UpdateSubscriber Subscriber

-- | The response's http status code.
updateSubscriberResponse_httpStatus :: Lens' UpdateSubscriberResponse Int

-- | Undocumented member.
describeBudgetActionsForBudget_nextToken :: Lens' DescribeBudgetActionsForBudget (Maybe Text)

-- | Undocumented member.
describeBudgetActionsForBudget_maxResults :: Lens' DescribeBudgetActionsForBudget (Maybe Natural)

-- | Undocumented member.
describeBudgetActionsForBudget_accountId :: Lens' DescribeBudgetActionsForBudget Text

-- | Undocumented member.
describeBudgetActionsForBudget_budgetName :: Lens' DescribeBudgetActionsForBudget Text

-- | Undocumented member.
describeBudgetActionsForBudgetResponse_nextToken :: Lens' DescribeBudgetActionsForBudgetResponse (Maybe Text)

-- | The response's http status code.
describeBudgetActionsForBudgetResponse_httpStatus :: Lens' DescribeBudgetActionsForBudgetResponse Int

-- | A list of the budget action resources information.
describeBudgetActionsForBudgetResponse_actions :: Lens' DescribeBudgetActionsForBudgetResponse [Action]

-- | The <tt>accountId</tt> that is associated with the budget that you
--   want a description of.
describeBudget_accountId :: Lens' DescribeBudget Text

-- | The name of the budget that you want a description of.
describeBudget_budgetName :: Lens' DescribeBudget Text

-- | The description of the budget.
describeBudgetResponse_budget :: Lens' DescribeBudgetResponse (Maybe Budget)

-- | The response's http status code.
describeBudgetResponse_httpStatus :: Lens' DescribeBudgetResponse Int

-- | The pagination token that you include in your request to indicate the
--   next set of results that you want to retrieve.
describeNotificationsForBudget_nextToken :: Lens' DescribeNotificationsForBudget (Maybe Text)

-- | An optional integer that represents how many entries a paginated
--   response contains. The maximum is 100.
describeNotificationsForBudget_maxResults :: Lens' DescribeNotificationsForBudget (Maybe Natural)

-- | The <tt>accountId</tt> that is associated with the budget whose
--   notifications you want descriptions of.
describeNotificationsForBudget_accountId :: Lens' DescribeNotificationsForBudget Text

-- | The name of the budget whose notifications you want descriptions of.
describeNotificationsForBudget_budgetName :: Lens' DescribeNotificationsForBudget Text

-- | The pagination token in the service response that indicates the next
--   set of results that you can retrieve.
describeNotificationsForBudgetResponse_nextToken :: Lens' DescribeNotificationsForBudgetResponse (Maybe Text)

-- | A list of notifications that are associated with a budget.
describeNotificationsForBudgetResponse_notifications :: Lens' DescribeNotificationsForBudgetResponse (Maybe [Notification])

-- | The response's http status code.
describeNotificationsForBudgetResponse_httpStatus :: Lens' DescribeNotificationsForBudgetResponse Int

-- | Undocumented member.
describeBudgetPerformanceHistory_nextToken :: Lens' DescribeBudgetPerformanceHistory (Maybe Text)

-- | Undocumented member.
describeBudgetPerformanceHistory_maxResults :: Lens' DescribeBudgetPerformanceHistory (Maybe Natural)

-- | Retrieves how often the budget went into an <tt>ALARM</tt> state for
--   the specified time period.
describeBudgetPerformanceHistory_timePeriod :: Lens' DescribeBudgetPerformanceHistory (Maybe TimePeriod)

-- | Undocumented member.
describeBudgetPerformanceHistory_accountId :: Lens' DescribeBudgetPerformanceHistory Text

-- | Undocumented member.
describeBudgetPerformanceHistory_budgetName :: Lens' DescribeBudgetPerformanceHistory Text

-- | The history of how often the budget has gone into an <tt>ALARM</tt>
--   state.
--   
--   For <tt>DAILY</tt> budgets, the history saves the state of the budget
--   for the last 60 days. For <tt>MONTHLY</tt> budgets, the history saves
--   the state of the budget for the current month plus the last 12 months.
--   For <tt>QUARTERLY</tt> budgets, the history saves the state of the
--   budget for the last four quarters.
describeBudgetPerformanceHistoryResponse_budgetPerformanceHistory :: Lens' DescribeBudgetPerformanceHistoryResponse (Maybe BudgetPerformanceHistory)

-- | Undocumented member.
describeBudgetPerformanceHistoryResponse_nextToken :: Lens' DescribeBudgetPerformanceHistoryResponse (Maybe Text)

-- | The response's http status code.
describeBudgetPerformanceHistoryResponse_httpStatus :: Lens' DescribeBudgetPerformanceHistoryResponse Int

-- | A system-generated universally unique identifier (UUID) for the
--   action.
action_actionId :: Lens' Action Text

-- | Undocumented member.
action_budgetName :: Lens' Action Text

-- | Undocumented member.
action_notificationType :: Lens' Action NotificationType

-- | The type of action. This defines the type of tasks that can be carried
--   out by this action. This field also determines the format for
--   definition.
action_actionType :: Lens' Action ActionType

-- | The trigger threshold of the action.
action_actionThreshold :: Lens' Action ActionThreshold

-- | Where you specify all of the type-specific parameters.
action_definition :: Lens' Action Definition

-- | The role passed for action execution and reversion. Roles and actions
--   must be in the same account.
action_executionRoleArn :: Lens' Action Text

-- | This specifies if the action needs manual or automatic approval.
action_approvalModel :: Lens' Action ApprovalModel

-- | The status of action.
action_status :: Lens' Action ActionStatus

-- | Undocumented member.
action_subscribers :: Lens' Action (NonEmpty Subscriber)

-- | Undocumented member.
actionHistory_timestamp :: Lens' ActionHistory UTCTime

-- | The status of action at the time of the event.
actionHistory_status :: Lens' ActionHistory ActionStatus

-- | This distinguishes between whether the events are triggered by the
--   user or generated by the system.
actionHistory_eventType :: Lens' ActionHistory EventType

-- | The description of details of the event.
actionHistory_actionHistoryDetails :: Lens' ActionHistory ActionHistoryDetails

-- | Undocumented member.
actionHistoryDetails_message :: Lens' ActionHistoryDetails Text

-- | The budget action resource.
actionHistoryDetails_action :: Lens' ActionHistoryDetails Action

-- | Undocumented member.
actionThreshold_actionThresholdValue :: Lens' ActionThreshold Double

-- | Undocumented member.
actionThreshold_actionThresholdType :: Lens' ActionThreshold ThresholdType

-- | The period of time that is covered by a budget. The period has a start
--   date and an end date. The start date must come before the end date.
--   The end date must come before <tt>06/15/87 00:00 UTC</tt>.
--   
--   If you create your budget and don't specify a start date, AWS defaults
--   to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or
--   ANNUALLY). For example, if you created your budget on January 24,
--   2018, chose <tt>DAILY</tt>, and didn't set a start date, AWS set your
--   start date to <tt>01/24/18 00:00 UTC</tt>. If you chose
--   <tt>MONTHLY</tt>, AWS set your start date to <tt>01/01/18 00:00
--   UTC</tt>. If you didn't specify an end date, AWS set your end date to
--   <tt>06/15/87 00:00 UTC</tt>. The defaults are the same for the AWS
--   Billing and Cost Management console and the API.
--   
--   You can change either date with the <tt>UpdateBudget</tt> operation.
--   
--   After the end date, AWS deletes the budget and all associated
--   notifications and subscribers.
budget_timePeriod :: Lens' Budget (Maybe TimePeriod)

-- | The cost filters, such as service or tag, that are applied to a
--   budget.
--   
--   AWS Budgets supports the following services as a filter for RI
--   budgets:
--   
--   <ul>
--   <li>Amazon Elastic Compute Cloud - Compute</li>
--   <li>Amazon Redshift</li>
--   <li>Amazon Relational Database Service</li>
--   <li>Amazon ElastiCache</li>
--   <li>Amazon Elasticsearch Service</li>
--   </ul>
budget_costFilters :: Lens' Budget (Maybe (HashMap Text [Text]))

-- | The types of costs that are included in this <tt>COST</tt> budget.
--   
--   <tt>USAGE</tt>, <tt>RI_UTILIZATION</tt>, <tt>RI_COVERAGE</tt>,
--   <tt>SAVINGS_PLANS_UTILIZATION</tt>, and
--   <tt>SAVINGS_PLANS_COVERAGE</tt> budgets do not have
--   <tt>CostTypes</tt>.
budget_costTypes :: Lens' Budget (Maybe CostTypes)

-- | A map containing multiple <tt>BudgetLimit</tt>, including current or
--   future limits.
--   
--   <tt>PlannedBudgetLimits</tt> is available for cost or usage budget and
--   supports monthly and quarterly <tt>TimeUnit</tt>.
--   
--   For monthly budgets, provide 12 months of <tt>PlannedBudgetLimits</tt>
--   values. This must start from the current month and include the next 11
--   months. The <tt>key</tt> is the start of the month, <tt>UTC</tt> in
--   epoch seconds.
--   
--   For quarterly budgets, provide 4 quarters of
--   <tt>PlannedBudgetLimits</tt> value entries in standard calendar
--   quarter increments. This must start from the current quarter and
--   include the next 3 quarters. The <tt>key</tt> is the start of the
--   quarter, <tt>UTC</tt> in epoch seconds.
--   
--   If the planned budget expires before 12 months for monthly or 4
--   quarters for quarterly, provide the <tt>PlannedBudgetLimits</tt>
--   values only for the remaining periods.
--   
--   If the budget begins at a date in the future, provide
--   <tt>PlannedBudgetLimits</tt> values from the start date of the budget.
--   
--   After all of the <tt>BudgetLimit</tt> values in
--   <tt>PlannedBudgetLimits</tt> are used, the budget continues to use the
--   last limit as the <tt>BudgetLimit</tt>. At that point, the planned
--   budget provides the same experience as a fixed budget.
--   
--   <tt>DescribeBudget</tt> and <tt>DescribeBudgets</tt> response along
--   with <tt>PlannedBudgetLimits</tt> will also contain
--   <tt>BudgetLimit</tt> representing the current month or quarter limit
--   present in <tt>PlannedBudgetLimits</tt>. This only applies to budgets
--   created with <tt>PlannedBudgetLimits</tt>. Budgets created without
--   <tt>PlannedBudgetLimits</tt> will only contain <tt>BudgetLimit</tt>,
--   and no <tt>PlannedBudgetLimits</tt>.
budget_plannedBudgetLimits :: Lens' Budget (Maybe (HashMap Text Spend))

-- | The actual and forecasted cost or usage that the budget tracks.
budget_calculatedSpend :: Lens' Budget (Maybe CalculatedSpend)

-- | The total amount of cost, usage, RI utilization, RI coverage, Savings
--   Plans utilization, or Savings Plans coverage that you want to track
--   with your budget.
--   
--   <tt>BudgetLimit</tt> is required for cost or usage budgets, but
--   optional for RI or Savings Plans utilization or coverage budgets. RI
--   and Savings Plans utilization or coverage budgets default to
--   <tt>100</tt>, which is the only valid value for RI or Savings Plans
--   utilization or coverage budgets. You can't use <tt>BudgetLimit</tt>
--   with <tt>PlannedBudgetLimits</tt> for <tt>CreateBudget</tt> and
--   <tt>UpdateBudget</tt> actions.
budget_budgetLimit :: Lens' Budget (Maybe Spend)

-- | The last time that you updated this budget.
budget_lastUpdatedTime :: Lens' Budget (Maybe UTCTime)

-- | The name of a budget. The name must be unique within an account. The
--   <tt>:</tt> and <tt>\</tt> characters aren't allowed in
--   <tt>BudgetName</tt>.
budget_budgetName :: Lens' Budget Text

-- | The length of time until a budget resets the actual and forecasted
--   spend.
budget_timeUnit :: Lens' Budget TimeUnit

-- | Whether this budget tracks costs, usage, RI utilization, RI coverage,
--   Savings Plans utilization, or Savings Plans coverage.
budget_budgetType :: Lens' Budget BudgetType

-- | A list of amounts of cost or usage that you created budgets for,
--   compared to your actual costs or usage.
budgetPerformanceHistory_budgetedAndActualAmountsList :: Lens' BudgetPerformanceHistory (Maybe [BudgetedAndActualAmounts])

-- | Undocumented member.
budgetPerformanceHistory_timeUnit :: Lens' BudgetPerformanceHistory (Maybe TimeUnit)

-- | The history of the cost filters for a budget during the specified time
--   period.
budgetPerformanceHistory_costFilters :: Lens' BudgetPerformanceHistory (Maybe (HashMap Text [Text]))

-- | The history of the cost types for a budget during the specified time
--   period.
budgetPerformanceHistory_costTypes :: Lens' BudgetPerformanceHistory (Maybe CostTypes)

-- | Undocumented member.
budgetPerformanceHistory_budgetType :: Lens' BudgetPerformanceHistory (Maybe BudgetType)

-- | Undocumented member.
budgetPerformanceHistory_budgetName :: Lens' BudgetPerformanceHistory (Maybe Text)

-- | The time period covered by this budget comparison.
budgetedAndActualAmounts_timePeriod :: Lens' BudgetedAndActualAmounts (Maybe TimePeriod)

-- | The amount of cost or usage that you created the budget for.
budgetedAndActualAmounts_budgetedAmount :: Lens' BudgetedAndActualAmounts (Maybe Spend)

-- | Your actual costs or usage for a budget period.
budgetedAndActualAmounts_actualAmount :: Lens' BudgetedAndActualAmounts (Maybe Spend)

-- | The amount of cost, usage, RI units, or Savings Plans units that you
--   are forecasted to use.
calculatedSpend_forecastedSpend :: Lens' CalculatedSpend (Maybe Spend)

-- | The amount of cost, usage, RI units, or Savings Plans units that you
--   have used.
calculatedSpend_actualSpend :: Lens' CalculatedSpend Spend

-- | Specifies whether a budget includes subscriptions.
--   
--   The default value is <tt>true</tt>.
costTypes_includeSubscription :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget uses the amortized rate.
--   
--   The default value is <tt>false</tt>.
costTypes_useAmortized :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes credits.
--   
--   The default value is <tt>true</tt>.
costTypes_includeCredit :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget uses a blended rate.
--   
--   The default value is <tt>false</tt>.
costTypes_useBlended :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes support subscription fees.
--   
--   The default value is <tt>true</tt>.
costTypes_includeSupport :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes refunds.
--   
--   The default value is <tt>true</tt>.
costTypes_includeRefund :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes taxes.
--   
--   The default value is <tt>true</tt>.
costTypes_includeTax :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes discounts.
--   
--   The default value is <tt>true</tt>.
costTypes_includeDiscount :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes non-RI subscription costs.
--   
--   The default value is <tt>true</tt>.
costTypes_includeOtherSubscription :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes upfront RI costs.
--   
--   The default value is <tt>true</tt>.
costTypes_includeUpfront :: Lens' CostTypes (Maybe Bool)

-- | Specifies whether a budget includes recurring fees such as monthly RI
--   fees.
--   
--   The default value is <tt>true</tt>.
costTypes_includeRecurring :: Lens' CostTypes (Maybe Bool)

-- | The AWS Identity and Access Management (IAM) action definition
--   details.
definition_iamActionDefinition :: Lens' Definition (Maybe IamActionDefinition)

-- | The AWS Systems Manager (SSM) action definition details.
definition_ssmActionDefinition :: Lens' Definition (Maybe SsmActionDefinition)

-- | The service control policies (SCPs) action definition details.
definition_scpActionDefinition :: Lens' Definition (Maybe ScpActionDefinition)

-- | A list of groups to be attached. There must be at least one group.
iamActionDefinition_groups :: Lens' IamActionDefinition (Maybe (NonEmpty Text))

-- | A list of roles to be attached. There must be at least one role.
iamActionDefinition_roles :: Lens' IamActionDefinition (Maybe (NonEmpty Text))

-- | A list of users to be attached. There must be at least one user.
iamActionDefinition_users :: Lens' IamActionDefinition (Maybe (NonEmpty Text))

-- | The Amazon Resource Name (ARN) of the policy to be attached.
iamActionDefinition_policyArn :: Lens' IamActionDefinition Text

-- | Whether this notification is in alarm. If a budget notification is in
--   the <tt>ALARM</tt> state, you have passed the set threshold for the
--   budget.
notification_notificationState :: Lens' Notification (Maybe NotificationState)

-- | The type of threshold for a notification. For <tt>ABSOLUTE_VALUE</tt>
--   thresholds, AWS notifies you when you go over or are forecasted to go
--   over your total cost threshold. For <tt>PERCENTAGE</tt> thresholds,
--   AWS notifies you when you go over or are forecasted to go over a
--   certain percentage of your forecasted spend. For example, if you have
--   a budget for 200 dollars and you have a <tt>PERCENTAGE</tt> threshold
--   of 80%, AWS notifies you when you go over 160 dollars.
notification_thresholdType :: Lens' Notification (Maybe ThresholdType)

-- | Whether the notification is for how much you have spent
--   (<tt>ACTUAL</tt>) or for how much you're forecasted to spend
--   (<tt>FORECASTED</tt>).
notification_notificationType :: Lens' Notification NotificationType

-- | The comparison that is used for this notification.
notification_comparisonOperator :: Lens' Notification ComparisonOperator

-- | The threshold that is associated with a notification. Thresholds are
--   always a percentage, and many customers find value being alerted
--   between 50% - 200% of the budgeted amount. The maximum limit for your
--   threshold is 1,000,000% above the budgeted amount.
notification_threshold :: Lens' Notification Double

-- | The notification that is associated with a budget.
notificationWithSubscribers_notification :: Lens' NotificationWithSubscribers Notification

-- | A list of subscribers who are subscribed to this notification.
notificationWithSubscribers_subscribers :: Lens' NotificationWithSubscribers (NonEmpty Subscriber)

-- | The policy ID attached.
scpActionDefinition_policyId :: Lens' ScpActionDefinition Text

-- | A list of target IDs.
scpActionDefinition_targetIds :: Lens' ScpActionDefinition (NonEmpty Text)

-- | The cost or usage amount that is associated with a budget forecast,
--   actual spend, or budget threshold.
spend_amount :: Lens' Spend Text

-- | The unit of measurement that is used for the budget forecast, actual
--   spend, or budget threshold, such as dollars or GB.
spend_unit :: Lens' Spend Text

-- | The action subType.
ssmActionDefinition_actionSubType :: Lens' SsmActionDefinition ActionSubType

-- | The Region to run the SSM document.
ssmActionDefinition_region :: Lens' SsmActionDefinition Text

-- | The EC2 and RDS instance IDs.
ssmActionDefinition_instanceIds :: Lens' SsmActionDefinition (NonEmpty Text)

-- | The type of notification that AWS sends to a subscriber.
subscriber_subscriptionType :: Lens' Subscriber SubscriptionType

-- | The address that AWS sends budget notifications to, either an SNS
--   topic or an email.
--   
--   When you create a subscriber, the value of <tt>Address</tt> can't
--   contain line breaks.
subscriber_address :: Lens' Subscriber Text

-- | The end date for a budget. If you didn't specify an end date, AWS set
--   your end date to <tt>06/15/87 00:00 UTC</tt>. The defaults are the
--   same for the AWS Billing and Cost Management console and the API.
--   
--   After the end date, AWS deletes the budget and all associated
--   notifications and subscribers. You can change your end date with the
--   <tt>UpdateBudget</tt> operation.
timePeriod_end :: Lens' TimePeriod (Maybe UTCTime)

-- | The start date for a budget. If you created your budget and didn't
--   specify a start date, AWS defaults to the start of your chosen time
--   period (DAILY, MONTHLY, QUARTERLY, or ANNUALLY). For example, if you
--   created your budget on January 24, 2018, chose <tt>DAILY</tt>, and
--   didn't set a start date, AWS set your start date to <tt>01/24/18 00:00
--   UTC</tt>. If you chose <tt>MONTHLY</tt>, AWS set your start date to
--   <tt>01/01/18 00:00 UTC</tt>. The defaults are the same for the AWS
--   Billing and Cost Management console and the API.
--   
--   You can change your start date with the <tt>UpdateBudget</tt>
--   operation.
timePeriod_start :: Lens' TimePeriod (Maybe UTCTime)


module Network.AWS.Budgets.Waiters


-- | Derived from API version <tt>2016-10-20</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   The AWS Budgets API enables you to use AWS Budgets to plan your
--   service usage, service costs, and instance reservations. The API
--   reference provides descriptions, syntax, and usage examples for each
--   of the actions and data types for AWS Budgets.
--   
--   Budgets provide you with a way to see the following information:
--   
--   <ul>
--   <li>How close your plan is to your budgeted amount or to the free tier
--   limits</li>
--   <li>Your usage-to-date, including how much you've used of your
--   Reserved Instances (RIs)</li>
--   <li>Your current estimated charges from AWS, and how much your
--   predicted usage will accrue in charges by the end of the month</li>
--   <li>How much of your budget has been used</li>
--   </ul>
--   
--   AWS updates your budget status several times a day. Budgets track your
--   unblended costs, subscriptions, refunds, and RIs. You can create the
--   following types of budgets:
--   
--   <ul>
--   <li><b>Cost budgets</b> - Plan how much you want to spend on a
--   service.</li>
--   <li><b>Usage budgets</b> - Plan how much you want to use one or more
--   services.</li>
--   <li><b>RI utilization budgets</b> - Define a utilization threshold,
--   and receive alerts when your RI usage falls below that threshold. This
--   lets you see if your RIs are unused or under-utilized.</li>
--   <li><b>RI coverage budgets</b> - Define a coverage threshold, and
--   receive alerts when the number of your instance hours that are covered
--   by RIs fall below that threshold. This lets you see how much of your
--   instance usage is covered by a reservation.</li>
--   </ul>
--   
--   Service Endpoint
--   
--   The AWS Budgets API provides the following endpoint:
--   
--   <ul>
--   <li>https://budgets.amazonaws.com</li>
--   </ul>
--   
--   For information about costs that are associated with the AWS Budgets
--   API, see <a>AWS Cost Management Pricing</a>.
module Network.AWS.Budgets

-- | API version <tt>2016-10-20</tt> of the Amazon Budgets SDK
--   configuration.
defaultService :: Service

-- | The request was received and recognized by the server, but the server
--   rejected that particular method for the requested resource.
_ResourceLockedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pagination token expired.
_ExpiredNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | We can’t locate the resource that you specified.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An error on the server occurred during the processing of your request.
--   Try again later.
_InternalErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The budget name already exists. Budget names must be unique within an
--   account.
_DuplicateRecordException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pagination token is invalid.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An error on the client occurred. Typically, the cause is an invalid
--   input value.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You are not authorized to use this operation with the given
--   parameters.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've exceeded the notification or subscriber limit.
_CreationLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newDescribeBudgetActionsForAccount</a> smart
--   constructor.
data DescribeBudgetActionsForAccount
DescribeBudgetActionsForAccount' :: Maybe Text -> Maybe Natural -> Text -> DescribeBudgetActionsForAccount

-- | Create a value of <a>DescribeBudgetActionsForAccount</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeBudgetActionsForAccount'</a>,
--   <a>describeBudgetActionsForAccount_nextToken</a> - Undocumented
--   member.
--   
--   <a>$sel:maxResults:DescribeBudgetActionsForAccount'</a>,
--   <a>describeBudgetActionsForAccount_maxResults</a> - Undocumented
--   member.
--   
--   <a>$sel:accountId:DescribeBudgetActionsForAccount'</a>,
--   <a>describeBudgetActionsForAccount_accountId</a> - Undocumented
--   member.
newDescribeBudgetActionsForAccount :: Text -> DescribeBudgetActionsForAccount

-- | <i>See:</i> <a>newDescribeBudgetActionsForAccountResponse</a> smart
--   constructor.
data DescribeBudgetActionsForAccountResponse
DescribeBudgetActionsForAccountResponse' :: Maybe Text -> Int -> [Action] -> DescribeBudgetActionsForAccountResponse

-- | Create a value of <a>DescribeBudgetActionsForAccountResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeBudgetActionsForAccount'</a>,
--   <a>describeBudgetActionsForAccountResponse_nextToken</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:DescribeBudgetActionsForAccountResponse'</a>,
--   <a>describeBudgetActionsForAccountResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:actions:DescribeBudgetActionsForAccountResponse'</a>,
--   <a>describeBudgetActionsForAccountResponse_actions</a> - A list of the
--   budget action resources information.
newDescribeBudgetActionsForAccountResponse :: Int -> DescribeBudgetActionsForAccountResponse

-- | <i>See:</i> <a>newCreateBudgetAction</a> smart constructor.
data CreateBudgetAction
CreateBudgetAction' :: Text -> Text -> NotificationType -> ActionType -> ActionThreshold -> Definition -> Text -> ApprovalModel -> NonEmpty Subscriber -> CreateBudgetAction

-- | Create a value of <a>CreateBudgetAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:CreateBudgetAction'</a>,
--   <a>createBudgetAction_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:CreateBudgetAction'</a>,
--   <a>createBudgetAction_budgetName</a> - Undocumented member.
--   
--   <a>$sel:notificationType:CreateBudgetAction'</a>,
--   <a>createBudgetAction_notificationType</a> - Undocumented member.
--   
--   <a>$sel:actionType:CreateBudgetAction'</a>,
--   <a>createBudgetAction_actionType</a> - The type of action. This
--   defines the type of tasks that can be carried out by this action. This
--   field also determines the format for definition.
--   
--   <a>$sel:actionThreshold:CreateBudgetAction'</a>,
--   <a>createBudgetAction_actionThreshold</a> - Undocumented member.
--   
--   <a>$sel:definition:CreateBudgetAction'</a>,
--   <a>createBudgetAction_definition</a> - Undocumented member.
--   
--   <a>$sel:executionRoleArn:CreateBudgetAction'</a>,
--   <a>createBudgetAction_executionRoleArn</a> - The role passed for
--   action execution and reversion. Roles and actions must be in the same
--   account.
--   
--   <a>$sel:approvalModel:CreateBudgetAction'</a>,
--   <a>createBudgetAction_approvalModel</a> - This specifies if the action
--   needs manual or automatic approval.
--   
--   <a>$sel:subscribers:CreateBudgetAction'</a>,
--   <a>createBudgetAction_subscribers</a> - Undocumented member.
newCreateBudgetAction :: Text -> Text -> NotificationType -> ActionType -> ActionThreshold -> Definition -> Text -> ApprovalModel -> NonEmpty Subscriber -> CreateBudgetAction

-- | <i>See:</i> <a>newCreateBudgetActionResponse</a> smart constructor.
data CreateBudgetActionResponse
CreateBudgetActionResponse' :: Int -> Text -> Text -> Text -> CreateBudgetActionResponse

-- | Create a value of <a>CreateBudgetActionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateBudgetActionResponse'</a>,
--   <a>createBudgetActionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:accountId:CreateBudgetAction'</a>,
--   <a>createBudgetActionResponse_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:CreateBudgetAction'</a>,
--   <a>createBudgetActionResponse_budgetName</a> - Undocumented member.
--   
--   <a>$sel:actionId:CreateBudgetActionResponse'</a>,
--   <a>createBudgetActionResponse_actionId</a> - A system-generated
--   universally unique identifier (UUID) for the action.
newCreateBudgetActionResponse :: Int -> Text -> Text -> Text -> CreateBudgetActionResponse

-- | <i>See:</i> <a>newExecuteBudgetAction</a> smart constructor.
data ExecuteBudgetAction
ExecuteBudgetAction' :: Text -> Text -> Text -> ExecutionType -> ExecuteBudgetAction

-- | Create a value of <a>ExecuteBudgetAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:ExecuteBudgetAction'</a>,
--   <a>executeBudgetAction_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:ExecuteBudgetAction'</a>,
--   <a>executeBudgetAction_budgetName</a> - Undocumented member.
--   
--   <a>$sel:actionId:ExecuteBudgetAction'</a>,
--   <a>executeBudgetAction_actionId</a> - A system-generated universally
--   unique identifier (UUID) for the action.
--   
--   <a>$sel:executionType:ExecuteBudgetAction'</a>,
--   <a>executeBudgetAction_executionType</a> - The type of execution.
newExecuteBudgetAction :: Text -> Text -> Text -> ExecutionType -> ExecuteBudgetAction

-- | <i>See:</i> <a>newExecuteBudgetActionResponse</a> smart constructor.
data ExecuteBudgetActionResponse
ExecuteBudgetActionResponse' :: Int -> Text -> Text -> Text -> ExecutionType -> ExecuteBudgetActionResponse

-- | Create a value of <a>ExecuteBudgetActionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ExecuteBudgetActionResponse'</a>,
--   <a>executeBudgetActionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:accountId:ExecuteBudgetAction'</a>,
--   <a>executeBudgetActionResponse_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:ExecuteBudgetAction'</a>,
--   <a>executeBudgetActionResponse_budgetName</a> - Undocumented member.
--   
--   <a>$sel:actionId:ExecuteBudgetAction'</a>,
--   <a>executeBudgetActionResponse_actionId</a> - A system-generated
--   universally unique identifier (UUID) for the action.
--   
--   <a>$sel:executionType:ExecuteBudgetAction'</a>,
--   <a>executeBudgetActionResponse_executionType</a> - The type of
--   execution.
newExecuteBudgetActionResponse :: Int -> Text -> Text -> Text -> ExecutionType -> ExecuteBudgetActionResponse

-- | <i>See:</i> <a>newDescribeBudgetAction</a> smart constructor.
data DescribeBudgetAction
DescribeBudgetAction' :: Text -> Text -> Text -> DescribeBudgetAction

-- | Create a value of <a>DescribeBudgetAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:DescribeBudgetAction'</a>,
--   <a>describeBudgetAction_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:DescribeBudgetAction'</a>,
--   <a>describeBudgetAction_budgetName</a> - Undocumented member.
--   
--   <a>$sel:actionId:DescribeBudgetAction'</a>,
--   <a>describeBudgetAction_actionId</a> - A system-generated universally
--   unique identifier (UUID) for the action.
newDescribeBudgetAction :: Text -> Text -> Text -> DescribeBudgetAction

-- | <i>See:</i> <a>newDescribeBudgetActionResponse</a> smart constructor.
data DescribeBudgetActionResponse
DescribeBudgetActionResponse' :: Int -> Text -> Text -> Action -> DescribeBudgetActionResponse

-- | Create a value of <a>DescribeBudgetActionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeBudgetActionResponse'</a>,
--   <a>describeBudgetActionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:accountId:DescribeBudgetAction'</a>,
--   <a>describeBudgetActionResponse_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:DescribeBudgetAction'</a>,
--   <a>describeBudgetActionResponse_budgetName</a> - Undocumented member.
--   
--   <a>$sel:action:DescribeBudgetActionResponse'</a>,
--   <a>describeBudgetActionResponse_action</a> - A budget action resource.
newDescribeBudgetActionResponse :: Int -> Text -> Text -> Action -> DescribeBudgetActionResponse

-- | <i>See:</i> <a>newUpdateBudgetAction</a> smart constructor.
data UpdateBudgetAction
UpdateBudgetAction' :: Maybe (NonEmpty Subscriber) -> Maybe Text -> Maybe ApprovalModel -> Maybe NotificationType -> Maybe ActionThreshold -> Maybe Definition -> Text -> Text -> Text -> UpdateBudgetAction

-- | Create a value of <a>UpdateBudgetAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscribers:UpdateBudgetAction'</a>,
--   <a>updateBudgetAction_subscribers</a> - Undocumented member.
--   
--   <a>$sel:executionRoleArn:UpdateBudgetAction'</a>,
--   <a>updateBudgetAction_executionRoleArn</a> - The role passed for
--   action execution and reversion. Roles and actions must be in the same
--   account.
--   
--   <a>$sel:approvalModel:UpdateBudgetAction'</a>,
--   <a>updateBudgetAction_approvalModel</a> - This specifies if the action
--   needs manual or automatic approval.
--   
--   <a>$sel:notificationType:UpdateBudgetAction'</a>,
--   <a>updateBudgetAction_notificationType</a> - Undocumented member.
--   
--   <a>$sel:actionThreshold:UpdateBudgetAction'</a>,
--   <a>updateBudgetAction_actionThreshold</a> - Undocumented member.
--   
--   <a>$sel:definition:UpdateBudgetAction'</a>,
--   <a>updateBudgetAction_definition</a> - Undocumented member.
--   
--   <a>$sel:accountId:UpdateBudgetAction'</a>,
--   <a>updateBudgetAction_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:UpdateBudgetAction'</a>,
--   <a>updateBudgetAction_budgetName</a> - Undocumented member.
--   
--   <a>$sel:actionId:UpdateBudgetAction'</a>,
--   <a>updateBudgetAction_actionId</a> - A system-generated universally
--   unique identifier (UUID) for the action.
newUpdateBudgetAction :: Text -> Text -> Text -> UpdateBudgetAction

-- | <i>See:</i> <a>newUpdateBudgetActionResponse</a> smart constructor.
data UpdateBudgetActionResponse
UpdateBudgetActionResponse' :: Int -> Text -> Text -> Action -> Action -> UpdateBudgetActionResponse

-- | Create a value of <a>UpdateBudgetActionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateBudgetActionResponse'</a>,
--   <a>updateBudgetActionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:accountId:UpdateBudgetAction'</a>,
--   <a>updateBudgetActionResponse_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:UpdateBudgetAction'</a>,
--   <a>updateBudgetActionResponse_budgetName</a> - Undocumented member.
--   
--   <a>$sel:oldAction:UpdateBudgetActionResponse'</a>,
--   <a>updateBudgetActionResponse_oldAction</a> - The previous action
--   resource information.
--   
--   <a>$sel:newAction':UpdateBudgetActionResponse'</a>,
--   <a>updateBudgetActionResponse_newAction</a> - The updated action
--   resource information.
newUpdateBudgetActionResponse :: Int -> Text -> Text -> Action -> Action -> UpdateBudgetActionResponse

-- | <i>See:</i> <a>newDeleteBudgetAction</a> smart constructor.
data DeleteBudgetAction
DeleteBudgetAction' :: Text -> Text -> Text -> DeleteBudgetAction

-- | Create a value of <a>DeleteBudgetAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:DeleteBudgetAction'</a>,
--   <a>deleteBudgetAction_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:DeleteBudgetAction'</a>,
--   <a>deleteBudgetAction_budgetName</a> - Undocumented member.
--   
--   <a>$sel:actionId:DeleteBudgetAction'</a>,
--   <a>deleteBudgetAction_actionId</a> - A system-generated universally
--   unique identifier (UUID) for the action.
newDeleteBudgetAction :: Text -> Text -> Text -> DeleteBudgetAction

-- | <i>See:</i> <a>newDeleteBudgetActionResponse</a> smart constructor.
data DeleteBudgetActionResponse
DeleteBudgetActionResponse' :: Int -> Text -> Text -> Action -> DeleteBudgetActionResponse

-- | Create a value of <a>DeleteBudgetActionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteBudgetActionResponse'</a>,
--   <a>deleteBudgetActionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:accountId:DeleteBudgetAction'</a>,
--   <a>deleteBudgetActionResponse_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:DeleteBudgetAction'</a>,
--   <a>deleteBudgetActionResponse_budgetName</a> - Undocumented member.
--   
--   <a>$sel:action:DeleteBudgetActionResponse'</a>,
--   <a>deleteBudgetActionResponse_action</a> - Undocumented member.
newDeleteBudgetActionResponse :: Int -> Text -> Text -> Action -> DeleteBudgetActionResponse

-- | <i>See:</i> <a>newDescribeBudgetActionHistories</a> smart constructor.
data DescribeBudgetActionHistories
DescribeBudgetActionHistories' :: Maybe Text -> Maybe Natural -> Maybe TimePeriod -> Text -> Text -> Text -> DescribeBudgetActionHistories

-- | Create a value of <a>DescribeBudgetActionHistories</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeBudgetActionHistories'</a>,
--   <a>describeBudgetActionHistories_nextToken</a> - Undocumented member.
--   
--   <a>$sel:maxResults:DescribeBudgetActionHistories'</a>,
--   <a>describeBudgetActionHistories_maxResults</a> - Undocumented member.
--   
--   <a>$sel:timePeriod:DescribeBudgetActionHistories'</a>,
--   <a>describeBudgetActionHistories_timePeriod</a> - Undocumented member.
--   
--   <a>$sel:accountId:DescribeBudgetActionHistories'</a>,
--   <a>describeBudgetActionHistories_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:DescribeBudgetActionHistories'</a>,
--   <a>describeBudgetActionHistories_budgetName</a> - Undocumented member.
--   
--   <a>$sel:actionId:DescribeBudgetActionHistories'</a>,
--   <a>describeBudgetActionHistories_actionId</a> - A system-generated
--   universally unique identifier (UUID) for the action.
newDescribeBudgetActionHistories :: Text -> Text -> Text -> DescribeBudgetActionHistories

-- | <i>See:</i> <a>newDescribeBudgetActionHistoriesResponse</a> smart
--   constructor.
data DescribeBudgetActionHistoriesResponse
DescribeBudgetActionHistoriesResponse' :: Maybe Text -> Int -> [ActionHistory] -> DescribeBudgetActionHistoriesResponse

-- | Create a value of <a>DescribeBudgetActionHistoriesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeBudgetActionHistories'</a>,
--   <a>describeBudgetActionHistoriesResponse_nextToken</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:DescribeBudgetActionHistoriesResponse'</a>,
--   <a>describeBudgetActionHistoriesResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:actionHistories:DescribeBudgetActionHistoriesResponse'</a>,
--   <a>describeBudgetActionHistoriesResponse_actionHistories</a> - The
--   historical record of the budget action resource.
newDescribeBudgetActionHistoriesResponse :: Int -> DescribeBudgetActionHistoriesResponse

-- | Request of DescribeSubscribersForNotification
--   
--   <i>See:</i> <a>newDescribeSubscribersForNotification</a> smart
--   constructor.
data DescribeSubscribersForNotification
DescribeSubscribersForNotification' :: Maybe Text -> Maybe Natural -> Text -> Text -> Notification -> DescribeSubscribersForNotification

-- | Create a value of <a>DescribeSubscribersForNotification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeSubscribersForNotification'</a>,
--   <a>describeSubscribersForNotification_nextToken</a> - The pagination
--   token that you include in your request to indicate the next set of
--   results that you want to retrieve.
--   
--   <a>$sel:maxResults:DescribeSubscribersForNotification'</a>,
--   <a>describeSubscribersForNotification_maxResults</a> - An optional
--   integer that represents how many entries a paginated response
--   contains. The maximum is 100.
--   
--   <a>$sel:accountId:DescribeSubscribersForNotification'</a>,
--   <a>describeSubscribersForNotification_accountId</a> - The
--   <tt>accountId</tt> that is associated with the budget whose
--   subscribers you want descriptions of.
--   
--   <a>$sel:budgetName:DescribeSubscribersForNotification'</a>,
--   <a>describeSubscribersForNotification_budgetName</a> - The name of the
--   budget whose subscribers you want descriptions of.
--   
--   <a>$sel:notification:DescribeSubscribersForNotification'</a>,
--   <a>describeSubscribersForNotification_notification</a> - The
--   notification whose subscribers you want to list.
newDescribeSubscribersForNotification :: Text -> Text -> Notification -> DescribeSubscribersForNotification

-- | Response of DescribeSubscribersForNotification
--   
--   <i>See:</i> <a>newDescribeSubscribersForNotificationResponse</a> smart
--   constructor.
data DescribeSubscribersForNotificationResponse
DescribeSubscribersForNotificationResponse' :: Maybe Text -> Maybe (NonEmpty Subscriber) -> Int -> DescribeSubscribersForNotificationResponse

-- | Create a value of <a>DescribeSubscribersForNotificationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeSubscribersForNotification'</a>,
--   <a>describeSubscribersForNotificationResponse_nextToken</a> - The
--   pagination token in the service response that indicates the next set
--   of results that you can retrieve.
--   
--   <a>$sel:subscribers:DescribeSubscribersForNotificationResponse'</a>,
--   <a>describeSubscribersForNotificationResponse_subscribers</a> - A list
--   of subscribers that are associated with a notification.
--   
--   <a>$sel:httpStatus:DescribeSubscribersForNotificationResponse'</a>,
--   <a>describeSubscribersForNotificationResponse_httpStatus</a> - The
--   response's http status code.
newDescribeSubscribersForNotificationResponse :: Int -> DescribeSubscribersForNotificationResponse

-- | Request of UpdateBudget
--   
--   <i>See:</i> <a>newUpdateBudget</a> smart constructor.
data UpdateBudget
UpdateBudget' :: Text -> Budget -> UpdateBudget

-- | Create a value of <a>UpdateBudget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:UpdateBudget'</a>, <a>updateBudget_accountId</a> -
--   The <tt>accountId</tt> that is associated with the budget that you
--   want to update.
--   
--   <a>$sel:newBudget':UpdateBudget'</a>, <a>updateBudget_newBudget</a> -
--   The budget that you want to update your budget to.
newUpdateBudget :: Text -> Budget -> UpdateBudget

-- | Response of UpdateBudget
--   
--   <i>See:</i> <a>newUpdateBudgetResponse</a> smart constructor.
data UpdateBudgetResponse
UpdateBudgetResponse' :: Int -> UpdateBudgetResponse

-- | Create a value of <a>UpdateBudgetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateBudgetResponse'</a>,
--   <a>updateBudgetResponse_httpStatus</a> - The response's http status
--   code.
newUpdateBudgetResponse :: Int -> UpdateBudgetResponse

-- | Request of DeleteNotification
--   
--   <i>See:</i> <a>newDeleteNotification</a> smart constructor.
data DeleteNotification
DeleteNotification' :: Text -> Text -> Notification -> DeleteNotification

-- | Create a value of <a>DeleteNotification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:DeleteNotification'</a>,
--   <a>deleteNotification_accountId</a> - The <tt>accountId</tt> that is
--   associated with the budget whose notification you want to delete.
--   
--   <a>$sel:budgetName:DeleteNotification'</a>,
--   <a>deleteNotification_budgetName</a> - The name of the budget whose
--   notification you want to delete.
--   
--   <a>$sel:notification:DeleteNotification'</a>,
--   <a>deleteNotification_notification</a> - The notification that you
--   want to delete.
newDeleteNotification :: Text -> Text -> Notification -> DeleteNotification

-- | Response of DeleteNotification
--   
--   <i>See:</i> <a>newDeleteNotificationResponse</a> smart constructor.
data DeleteNotificationResponse
DeleteNotificationResponse' :: Int -> DeleteNotificationResponse

-- | Create a value of <a>DeleteNotificationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteNotificationResponse'</a>,
--   <a>deleteNotificationResponse_httpStatus</a> - The response's http
--   status code.
newDeleteNotificationResponse :: Int -> DeleteNotificationResponse

-- | Request of DeleteBudget
--   
--   <i>See:</i> <a>newDeleteBudget</a> smart constructor.
data DeleteBudget
DeleteBudget' :: Text -> Text -> DeleteBudget

-- | Create a value of <a>DeleteBudget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:DeleteBudget'</a>, <a>deleteBudget_accountId</a> -
--   The <tt>accountId</tt> that is associated with the budget that you
--   want to delete.
--   
--   <a>$sel:budgetName:DeleteBudget'</a>, <a>deleteBudget_budgetName</a> -
--   The name of the budget that you want to delete.
newDeleteBudget :: Text -> Text -> DeleteBudget

-- | Response of DeleteBudget
--   
--   <i>See:</i> <a>newDeleteBudgetResponse</a> smart constructor.
data DeleteBudgetResponse
DeleteBudgetResponse' :: Int -> DeleteBudgetResponse

-- | Create a value of <a>DeleteBudgetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteBudgetResponse'</a>,
--   <a>deleteBudgetResponse_httpStatus</a> - The response's http status
--   code.
newDeleteBudgetResponse :: Int -> DeleteBudgetResponse

-- | Request of UpdateNotification
--   
--   <i>See:</i> <a>newUpdateNotification</a> smart constructor.
data UpdateNotification
UpdateNotification' :: Text -> Text -> Notification -> Notification -> UpdateNotification

-- | Create a value of <a>UpdateNotification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:UpdateNotification'</a>,
--   <a>updateNotification_accountId</a> - The <tt>accountId</tt> that is
--   associated with the budget whose notification you want to update.
--   
--   <a>$sel:budgetName:UpdateNotification'</a>,
--   <a>updateNotification_budgetName</a> - The name of the budget whose
--   notification you want to update.
--   
--   <a>$sel:oldNotification:UpdateNotification'</a>,
--   <a>updateNotification_oldNotification</a> - The previous notification
--   that is associated with a budget.
--   
--   <a>$sel:newNotification':UpdateNotification'</a>,
--   <a>updateNotification_newNotification</a> - The updated notification
--   to be associated with a budget.
newUpdateNotification :: Text -> Text -> Notification -> Notification -> UpdateNotification

-- | Response of UpdateNotification
--   
--   <i>See:</i> <a>newUpdateNotificationResponse</a> smart constructor.
data UpdateNotificationResponse
UpdateNotificationResponse' :: Int -> UpdateNotificationResponse

-- | Create a value of <a>UpdateNotificationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateNotificationResponse'</a>,
--   <a>updateNotificationResponse_httpStatus</a> - The response's http
--   status code.
newUpdateNotificationResponse :: Int -> UpdateNotificationResponse

-- | Request of CreateBudget
--   
--   <i>See:</i> <a>newCreateBudget</a> smart constructor.
data CreateBudget
CreateBudget' :: Maybe [NotificationWithSubscribers] -> Text -> Budget -> CreateBudget

-- | Create a value of <a>CreateBudget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationsWithSubscribers:CreateBudget'</a>,
--   <a>createBudget_notificationsWithSubscribers</a> - A notification that
--   you want to associate with a budget. A budget can have up to five
--   notifications, and each notification can have one SNS subscriber and
--   up to 10 email subscribers. If you include notifications and
--   subscribers in your <tt>CreateBudget</tt> call, AWS creates the
--   notifications and subscribers for you.
--   
--   <a>$sel:accountId:CreateBudget'</a>, <a>createBudget_accountId</a> -
--   The <tt>accountId</tt> that is associated with the budget.
--   
--   <a>$sel:budget:CreateBudget'</a>, <a>createBudget_budget</a> - The
--   budget object that you want to create.
newCreateBudget :: Text -> Budget -> CreateBudget

-- | Response of CreateBudget
--   
--   <i>See:</i> <a>newCreateBudgetResponse</a> smart constructor.
data CreateBudgetResponse
CreateBudgetResponse' :: Int -> CreateBudgetResponse

-- | Create a value of <a>CreateBudgetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateBudgetResponse'</a>,
--   <a>createBudgetResponse_httpStatus</a> - The response's http status
--   code.
newCreateBudgetResponse :: Int -> CreateBudgetResponse

-- | Request of CreateNotification
--   
--   <i>See:</i> <a>newCreateNotification</a> smart constructor.
data CreateNotification
CreateNotification' :: Text -> Text -> Notification -> NonEmpty Subscriber -> CreateNotification

-- | Create a value of <a>CreateNotification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:CreateNotification'</a>,
--   <a>createNotification_accountId</a> - The <tt>accountId</tt> that is
--   associated with the budget that you want to create a notification for.
--   
--   <a>$sel:budgetName:CreateNotification'</a>,
--   <a>createNotification_budgetName</a> - The name of the budget that you
--   want AWS to notify you about. Budget names must be unique within an
--   account.
--   
--   <a>$sel:notification:CreateNotification'</a>,
--   <a>createNotification_notification</a> - The notification that you
--   want to create.
--   
--   <a>$sel:subscribers:CreateNotification'</a>,
--   <a>createNotification_subscribers</a> - A list of subscribers that you
--   want to associate with the notification. Each notification can have
--   one SNS subscriber and up to 10 email subscribers.
newCreateNotification :: Text -> Text -> Notification -> NonEmpty Subscriber -> CreateNotification

-- | Response of CreateNotification
--   
--   <i>See:</i> <a>newCreateNotificationResponse</a> smart constructor.
data CreateNotificationResponse
CreateNotificationResponse' :: Int -> CreateNotificationResponse

-- | Create a value of <a>CreateNotificationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateNotificationResponse'</a>,
--   <a>createNotificationResponse_httpStatus</a> - The response's http
--   status code.
newCreateNotificationResponse :: Int -> CreateNotificationResponse

-- | Request of CreateSubscriber
--   
--   <i>See:</i> <a>newCreateSubscriber</a> smart constructor.
data CreateSubscriber
CreateSubscriber' :: Text -> Text -> Notification -> Subscriber -> CreateSubscriber

-- | Create a value of <a>CreateSubscriber</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:CreateSubscriber'</a>,
--   <a>createSubscriber_accountId</a> - The <tt>accountId</tt> that is
--   associated with the budget that you want to create a subscriber for.
--   
--   <a>$sel:budgetName:CreateSubscriber'</a>,
--   <a>createSubscriber_budgetName</a> - The name of the budget that you
--   want to subscribe to. Budget names must be unique within an account.
--   
--   <a>$sel:notification:CreateSubscriber'</a>,
--   <a>createSubscriber_notification</a> - The notification that you want
--   to create a subscriber for.
--   
--   <a>$sel:subscriber:CreateSubscriber'</a>,
--   <a>createSubscriber_subscriber</a> - The subscriber that you want to
--   associate with a budget notification.
newCreateSubscriber :: Text -> Text -> Notification -> Subscriber -> CreateSubscriber

-- | Response of CreateSubscriber
--   
--   <i>See:</i> <a>newCreateSubscriberResponse</a> smart constructor.
data CreateSubscriberResponse
CreateSubscriberResponse' :: Int -> CreateSubscriberResponse

-- | Create a value of <a>CreateSubscriberResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateSubscriberResponse'</a>,
--   <a>createSubscriberResponse_httpStatus</a> - The response's http
--   status code.
newCreateSubscriberResponse :: Int -> CreateSubscriberResponse

-- | Request of DescribeBudgets
--   
--   <i>See:</i> <a>newDescribeBudgets</a> smart constructor.
data DescribeBudgets
DescribeBudgets' :: Maybe Text -> Maybe Natural -> Text -> DescribeBudgets

-- | Create a value of <a>DescribeBudgets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeBudgets'</a>,
--   <a>describeBudgets_nextToken</a> - The pagination token that you
--   include in your request to indicate the next set of results that you
--   want to retrieve.
--   
--   <a>$sel:maxResults:DescribeBudgets'</a>,
--   <a>describeBudgets_maxResults</a> - An optional integer that
--   represents how many entries a paginated response contains. The maximum
--   is 100.
--   
--   <a>$sel:accountId:DescribeBudgets'</a>,
--   <a>describeBudgets_accountId</a> - The <tt>accountId</tt> that is
--   associated with the budgets that you want descriptions of.
newDescribeBudgets :: Text -> DescribeBudgets

-- | Response of DescribeBudgets
--   
--   <i>See:</i> <a>newDescribeBudgetsResponse</a> smart constructor.
data DescribeBudgetsResponse
DescribeBudgetsResponse' :: Maybe Text -> Maybe [Budget] -> Int -> DescribeBudgetsResponse

-- | Create a value of <a>DescribeBudgetsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeBudgets'</a>,
--   <a>describeBudgetsResponse_nextToken</a> - The pagination token in the
--   service response that indicates the next set of results that you can
--   retrieve.
--   
--   <a>$sel:budgets:DescribeBudgetsResponse'</a>,
--   <a>describeBudgetsResponse_budgets</a> - A list of budgets.
--   
--   <a>$sel:httpStatus:DescribeBudgetsResponse'</a>,
--   <a>describeBudgetsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeBudgetsResponse :: Int -> DescribeBudgetsResponse

-- | Request of DeleteSubscriber
--   
--   <i>See:</i> <a>newDeleteSubscriber</a> smart constructor.
data DeleteSubscriber
DeleteSubscriber' :: Text -> Text -> Notification -> Subscriber -> DeleteSubscriber

-- | Create a value of <a>DeleteSubscriber</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:DeleteSubscriber'</a>,
--   <a>deleteSubscriber_accountId</a> - The <tt>accountId</tt> that is
--   associated with the budget whose subscriber you want to delete.
--   
--   <a>$sel:budgetName:DeleteSubscriber'</a>,
--   <a>deleteSubscriber_budgetName</a> - The name of the budget whose
--   subscriber you want to delete.
--   
--   <a>$sel:notification:DeleteSubscriber'</a>,
--   <a>deleteSubscriber_notification</a> - The notification whose
--   subscriber you want to delete.
--   
--   <a>$sel:subscriber:DeleteSubscriber'</a>,
--   <a>deleteSubscriber_subscriber</a> - The subscriber that you want to
--   delete.
newDeleteSubscriber :: Text -> Text -> Notification -> Subscriber -> DeleteSubscriber

-- | Response of DeleteSubscriber
--   
--   <i>See:</i> <a>newDeleteSubscriberResponse</a> smart constructor.
data DeleteSubscriberResponse
DeleteSubscriberResponse' :: Int -> DeleteSubscriberResponse

-- | Create a value of <a>DeleteSubscriberResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteSubscriberResponse'</a>,
--   <a>deleteSubscriberResponse_httpStatus</a> - The response's http
--   status code.
newDeleteSubscriberResponse :: Int -> DeleteSubscriberResponse

-- | Request of UpdateSubscriber
--   
--   <i>See:</i> <a>newUpdateSubscriber</a> smart constructor.
data UpdateSubscriber
UpdateSubscriber' :: Text -> Text -> Notification -> Subscriber -> Subscriber -> UpdateSubscriber

-- | Create a value of <a>UpdateSubscriber</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:UpdateSubscriber'</a>,
--   <a>updateSubscriber_accountId</a> - The <tt>accountId</tt> that is
--   associated with the budget whose subscriber you want to update.
--   
--   <a>$sel:budgetName:UpdateSubscriber'</a>,
--   <a>updateSubscriber_budgetName</a> - The name of the budget whose
--   subscriber you want to update.
--   
--   <a>$sel:notification:UpdateSubscriber'</a>,
--   <a>updateSubscriber_notification</a> - The notification whose
--   subscriber you want to update.
--   
--   <a>$sel:oldSubscriber:UpdateSubscriber'</a>,
--   <a>updateSubscriber_oldSubscriber</a> - The previous subscriber that
--   is associated with a budget notification.
--   
--   <a>$sel:newSubscriber':UpdateSubscriber'</a>,
--   <a>updateSubscriber_newSubscriber</a> - The updated subscriber that is
--   associated with a budget notification.
newUpdateSubscriber :: Text -> Text -> Notification -> Subscriber -> Subscriber -> UpdateSubscriber

-- | Response of UpdateSubscriber
--   
--   <i>See:</i> <a>newUpdateSubscriberResponse</a> smart constructor.
data UpdateSubscriberResponse
UpdateSubscriberResponse' :: Int -> UpdateSubscriberResponse

-- | Create a value of <a>UpdateSubscriberResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateSubscriberResponse'</a>,
--   <a>updateSubscriberResponse_httpStatus</a> - The response's http
--   status code.
newUpdateSubscriberResponse :: Int -> UpdateSubscriberResponse

-- | <i>See:</i> <a>newDescribeBudgetActionsForBudget</a> smart
--   constructor.
data DescribeBudgetActionsForBudget
DescribeBudgetActionsForBudget' :: Maybe Text -> Maybe Natural -> Text -> Text -> DescribeBudgetActionsForBudget

-- | Create a value of <a>DescribeBudgetActionsForBudget</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeBudgetActionsForBudget'</a>,
--   <a>describeBudgetActionsForBudget_nextToken</a> - Undocumented member.
--   
--   <a>$sel:maxResults:DescribeBudgetActionsForBudget'</a>,
--   <a>describeBudgetActionsForBudget_maxResults</a> - Undocumented
--   member.
--   
--   <a>$sel:accountId:DescribeBudgetActionsForBudget'</a>,
--   <a>describeBudgetActionsForBudget_accountId</a> - Undocumented member.
--   
--   <a>$sel:budgetName:DescribeBudgetActionsForBudget'</a>,
--   <a>describeBudgetActionsForBudget_budgetName</a> - Undocumented
--   member.
newDescribeBudgetActionsForBudget :: Text -> Text -> DescribeBudgetActionsForBudget

-- | <i>See:</i> <a>newDescribeBudgetActionsForBudgetResponse</a> smart
--   constructor.
data DescribeBudgetActionsForBudgetResponse
DescribeBudgetActionsForBudgetResponse' :: Maybe Text -> Int -> [Action] -> DescribeBudgetActionsForBudgetResponse

-- | Create a value of <a>DescribeBudgetActionsForBudgetResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeBudgetActionsForBudget'</a>,
--   <a>describeBudgetActionsForBudgetResponse_nextToken</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:DescribeBudgetActionsForBudgetResponse'</a>,
--   <a>describeBudgetActionsForBudgetResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:actions:DescribeBudgetActionsForBudgetResponse'</a>,
--   <a>describeBudgetActionsForBudgetResponse_actions</a> - A list of the
--   budget action resources information.
newDescribeBudgetActionsForBudgetResponse :: Int -> DescribeBudgetActionsForBudgetResponse

-- | Request of DescribeBudget
--   
--   <i>See:</i> <a>newDescribeBudget</a> smart constructor.
data DescribeBudget
DescribeBudget' :: Text -> Text -> DescribeBudget

-- | Create a value of <a>DescribeBudget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:DescribeBudget'</a>, <a>describeBudget_accountId</a>
--   - The <tt>accountId</tt> that is associated with the budget that you
--   want a description of.
--   
--   <a>$sel:budgetName:DescribeBudget'</a>,
--   <a>describeBudget_budgetName</a> - The name of the budget that you
--   want a description of.
newDescribeBudget :: Text -> Text -> DescribeBudget

-- | Response of DescribeBudget
--   
--   <i>See:</i> <a>newDescribeBudgetResponse</a> smart constructor.
data DescribeBudgetResponse
DescribeBudgetResponse' :: Maybe Budget -> Int -> DescribeBudgetResponse

-- | Create a value of <a>DescribeBudgetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:budget:DescribeBudgetResponse'</a>,
--   <a>describeBudgetResponse_budget</a> - The description of the budget.
--   
--   <a>$sel:httpStatus:DescribeBudgetResponse'</a>,
--   <a>describeBudgetResponse_httpStatus</a> - The response's http status
--   code.
newDescribeBudgetResponse :: Int -> DescribeBudgetResponse

-- | Request of DescribeNotificationsForBudget
--   
--   <i>See:</i> <a>newDescribeNotificationsForBudget</a> smart
--   constructor.
data DescribeNotificationsForBudget
DescribeNotificationsForBudget' :: Maybe Text -> Maybe Natural -> Text -> Text -> DescribeNotificationsForBudget

-- | Create a value of <a>DescribeNotificationsForBudget</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeNotificationsForBudget'</a>,
--   <a>describeNotificationsForBudget_nextToken</a> - The pagination token
--   that you include in your request to indicate the next set of results
--   that you want to retrieve.
--   
--   <a>$sel:maxResults:DescribeNotificationsForBudget'</a>,
--   <a>describeNotificationsForBudget_maxResults</a> - An optional integer
--   that represents how many entries a paginated response contains. The
--   maximum is 100.
--   
--   <a>$sel:accountId:DescribeNotificationsForBudget'</a>,
--   <a>describeNotificationsForBudget_accountId</a> - The
--   <tt>accountId</tt> that is associated with the budget whose
--   notifications you want descriptions of.
--   
--   <a>$sel:budgetName:DescribeNotificationsForBudget'</a>,
--   <a>describeNotificationsForBudget_budgetName</a> - The name of the
--   budget whose notifications you want descriptions of.
newDescribeNotificationsForBudget :: Text -> Text -> DescribeNotificationsForBudget

-- | Response of GetNotificationsForBudget
--   
--   <i>See:</i> <a>newDescribeNotificationsForBudgetResponse</a> smart
--   constructor.
data DescribeNotificationsForBudgetResponse
DescribeNotificationsForBudgetResponse' :: Maybe Text -> Maybe [Notification] -> Int -> DescribeNotificationsForBudgetResponse

-- | Create a value of <a>DescribeNotificationsForBudgetResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeNotificationsForBudget'</a>,
--   <a>describeNotificationsForBudgetResponse_nextToken</a> - The
--   pagination token in the service response that indicates the next set
--   of results that you can retrieve.
--   
--   <a>$sel:notifications:DescribeNotificationsForBudgetResponse'</a>,
--   <a>describeNotificationsForBudgetResponse_notifications</a> - A list
--   of notifications that are associated with a budget.
--   
--   <a>$sel:httpStatus:DescribeNotificationsForBudgetResponse'</a>,
--   <a>describeNotificationsForBudgetResponse_httpStatus</a> - The
--   response's http status code.
newDescribeNotificationsForBudgetResponse :: Int -> DescribeNotificationsForBudgetResponse

-- | <i>See:</i> <a>newDescribeBudgetPerformanceHistory</a> smart
--   constructor.
data DescribeBudgetPerformanceHistory
DescribeBudgetPerformanceHistory' :: Maybe Text -> Maybe Natural -> Maybe TimePeriod -> Text -> Text -> DescribeBudgetPerformanceHistory

-- | Create a value of <a>DescribeBudgetPerformanceHistory</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeBudgetPerformanceHistory'</a>,
--   <a>describeBudgetPerformanceHistory_nextToken</a> - Undocumented
--   member.
--   
--   <a>$sel:maxResults:DescribeBudgetPerformanceHistory'</a>,
--   <a>describeBudgetPerformanceHistory_maxResults</a> - Undocumented
--   member.
--   
--   <a>$sel:timePeriod:DescribeBudgetPerformanceHistory'</a>,
--   <a>describeBudgetPerformanceHistory_timePeriod</a> - Retrieves how
--   often the budget went into an <tt>ALARM</tt> state for the specified
--   time period.
--   
--   <a>$sel:accountId:DescribeBudgetPerformanceHistory'</a>,
--   <a>describeBudgetPerformanceHistory_accountId</a> - Undocumented
--   member.
--   
--   <a>$sel:budgetName:DescribeBudgetPerformanceHistory'</a>,
--   <a>describeBudgetPerformanceHistory_budgetName</a> - Undocumented
--   member.
newDescribeBudgetPerformanceHistory :: Text -> Text -> DescribeBudgetPerformanceHistory

-- | <i>See:</i> <a>newDescribeBudgetPerformanceHistoryResponse</a> smart
--   constructor.
data DescribeBudgetPerformanceHistoryResponse
DescribeBudgetPerformanceHistoryResponse' :: Maybe BudgetPerformanceHistory -> Maybe Text -> Int -> DescribeBudgetPerformanceHistoryResponse

-- | Create a value of <a>DescribeBudgetPerformanceHistoryResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:budgetPerformanceHistory:DescribeBudgetPerformanceHistoryResponse'</a>,
--   <a>describeBudgetPerformanceHistoryResponse_budgetPerformanceHistory</a>
--   - The history of how often the budget has gone into an <tt>ALARM</tt>
--   state.
--   
--   For <tt>DAILY</tt> budgets, the history saves the state of the budget
--   for the last 60 days. For <tt>MONTHLY</tt> budgets, the history saves
--   the state of the budget for the current month plus the last 12 months.
--   For <tt>QUARTERLY</tt> budgets, the history saves the state of the
--   budget for the last four quarters.
--   
--   <a>$sel:nextToken:DescribeBudgetPerformanceHistory'</a>,
--   <a>describeBudgetPerformanceHistoryResponse_nextToken</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:DescribeBudgetPerformanceHistoryResponse'</a>,
--   <a>describeBudgetPerformanceHistoryResponse_httpStatus</a> - The
--   response's http status code.
newDescribeBudgetPerformanceHistoryResponse :: Int -> DescribeBudgetPerformanceHistoryResponse
newtype ActionStatus
ActionStatus' :: Text -> ActionStatus
[fromActionStatus] :: ActionStatus -> Text
pattern ActionStatus_EXECUTION_FAILURE :: ActionStatus
pattern ActionStatus_EXECUTION_IN_PROGRESS :: ActionStatus
pattern ActionStatus_EXECUTION_SUCCESS :: ActionStatus
pattern ActionStatus_PENDING :: ActionStatus
pattern ActionStatus_RESET_FAILURE :: ActionStatus
pattern ActionStatus_RESET_IN_PROGRESS :: ActionStatus
pattern ActionStatus_REVERSE_FAILURE :: ActionStatus
pattern ActionStatus_REVERSE_IN_PROGRESS :: ActionStatus
pattern ActionStatus_REVERSE_SUCCESS :: ActionStatus
pattern ActionStatus_STANDBY :: ActionStatus
newtype ActionSubType
ActionSubType' :: Text -> ActionSubType
[fromActionSubType] :: ActionSubType -> Text
pattern ActionSubType_STOP_EC2_INSTANCES :: ActionSubType
pattern ActionSubType_STOP_RDS_INSTANCES :: ActionSubType
newtype ActionType
ActionType' :: Text -> ActionType
[fromActionType] :: ActionType -> Text
pattern ActionType_APPLY_IAM_POLICY :: ActionType
pattern ActionType_APPLY_SCP_POLICY :: ActionType
pattern ActionType_RUN_SSM_DOCUMENTS :: ActionType
newtype ApprovalModel
ApprovalModel' :: Text -> ApprovalModel
[fromApprovalModel] :: ApprovalModel -> Text
pattern ApprovalModel_AUTOMATIC :: ApprovalModel
pattern ApprovalModel_MANUAL :: ApprovalModel

-- | The type of a budget. It must be one of the following types:
--   
--   <tt>COST</tt>, <tt>USAGE</tt>, <tt>RI_UTILIZATION</tt>,
--   <tt>RI_COVERAGE</tt>, <tt>SAVINGS_PLANS_UTILIZATION</tt>, or
--   <tt>SAVINGS_PLANS_COVERAGE</tt>.
newtype BudgetType
BudgetType' :: Text -> BudgetType
[fromBudgetType] :: BudgetType -> Text
pattern BudgetType_COST :: BudgetType
pattern BudgetType_RI_COVERAGE :: BudgetType
pattern BudgetType_RI_UTILIZATION :: BudgetType
pattern BudgetType_SAVINGS_PLANS_COVERAGE :: BudgetType
pattern BudgetType_SAVINGS_PLANS_UTILIZATION :: BudgetType
pattern BudgetType_USAGE :: BudgetType

-- | The comparison operator of a notification. Currently the service
--   supports the following operators:
--   
--   <tt>GREATER_THAN</tt>, <tt>LESS_THAN</tt>, <tt>EQUAL_TO</tt>
newtype ComparisonOperator
ComparisonOperator' :: Text -> ComparisonOperator
[fromComparisonOperator] :: ComparisonOperator -> Text
pattern ComparisonOperator_EQUAL_TO :: ComparisonOperator
pattern ComparisonOperator_GREATER_THAN :: ComparisonOperator
pattern ComparisonOperator_LESS_THAN :: ComparisonOperator
newtype EventType
EventType' :: Text -> EventType
[fromEventType] :: EventType -> Text
pattern EventType_CREATE_ACTION :: EventType
pattern EventType_DELETE_ACTION :: EventType
pattern EventType_EXECUTE_ACTION :: EventType
pattern EventType_SYSTEM :: EventType
pattern EventType_UPDATE_ACTION :: EventType
newtype ExecutionType
ExecutionType' :: Text -> ExecutionType
[fromExecutionType] :: ExecutionType -> Text
pattern ExecutionType_APPROVE_BUDGET_ACTION :: ExecutionType
pattern ExecutionType_RESET_BUDGET_ACTION :: ExecutionType
pattern ExecutionType_RETRY_BUDGET_ACTION :: ExecutionType
pattern ExecutionType_REVERSE_BUDGET_ACTION :: ExecutionType
newtype NotificationState
NotificationState' :: Text -> NotificationState
[fromNotificationState] :: NotificationState -> Text
pattern NotificationState_ALARM :: NotificationState
pattern NotificationState_OK :: NotificationState

-- | The type of a notification. It must be ACTUAL or FORECASTED.
newtype NotificationType
NotificationType' :: Text -> NotificationType
[fromNotificationType] :: NotificationType -> Text
pattern NotificationType_ACTUAL :: NotificationType
pattern NotificationType_FORECASTED :: NotificationType

-- | The subscription type of the subscriber. It can be SMS or EMAIL.
newtype SubscriptionType
SubscriptionType' :: Text -> SubscriptionType
[fromSubscriptionType] :: SubscriptionType -> Text
pattern SubscriptionType_EMAIL :: SubscriptionType
pattern SubscriptionType_SNS :: SubscriptionType

-- | The type of threshold for a notification.
newtype ThresholdType
ThresholdType' :: Text -> ThresholdType
[fromThresholdType] :: ThresholdType -> Text
pattern ThresholdType_ABSOLUTE_VALUE :: ThresholdType
pattern ThresholdType_PERCENTAGE :: ThresholdType

-- | The time unit of the budget, such as MONTHLY or QUARTERLY.
newtype TimeUnit
TimeUnit' :: Text -> TimeUnit
[fromTimeUnit] :: TimeUnit -> Text
pattern TimeUnit_ANNUALLY :: TimeUnit
pattern TimeUnit_DAILY :: TimeUnit
pattern TimeUnit_MONTHLY :: TimeUnit
pattern TimeUnit_QUARTERLY :: TimeUnit

-- | A budget action resource.
--   
--   <i>See:</i> <a>newAction</a> smart constructor.
data Action
Action' :: Text -> Text -> NotificationType -> ActionType -> ActionThreshold -> Definition -> Text -> ApprovalModel -> ActionStatus -> NonEmpty Subscriber -> Action

-- | Create a value of <a>Action</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionId:Action'</a>, <a>action_actionId</a> - A
--   system-generated universally unique identifier (UUID) for the action.
--   
--   <a>$sel:budgetName:Action'</a>, <a>action_budgetName</a> -
--   Undocumented member.
--   
--   <a>$sel:notificationType:Action'</a>, <a>action_notificationType</a> -
--   Undocumented member.
--   
--   <a>$sel:actionType:Action'</a>, <a>action_actionType</a> - The type of
--   action. This defines the type of tasks that can be carried out by this
--   action. This field also determines the format for definition.
--   
--   <a>$sel:actionThreshold:Action'</a>, <a>action_actionThreshold</a> -
--   The trigger threshold of the action.
--   
--   <a>$sel:definition:Action'</a>, <a>action_definition</a> - Where you
--   specify all of the type-specific parameters.
--   
--   <a>$sel:executionRoleArn:Action'</a>, <a>action_executionRoleArn</a> -
--   The role passed for action execution and reversion. Roles and actions
--   must be in the same account.
--   
--   <a>$sel:approvalModel:Action'</a>, <a>action_approvalModel</a> - This
--   specifies if the action needs manual or automatic approval.
--   
--   <a>$sel:status:Action'</a>, <a>action_status</a> - The status of
--   action.
--   
--   <a>$sel:subscribers:Action'</a>, <a>action_subscribers</a> -
--   Undocumented member.
newAction :: Text -> Text -> NotificationType -> ActionType -> ActionThreshold -> Definition -> Text -> ApprovalModel -> ActionStatus -> NonEmpty Subscriber -> Action

-- | The historical records for a budget action.
--   
--   <i>See:</i> <a>newActionHistory</a> smart constructor.
data ActionHistory
ActionHistory' :: POSIX -> ActionStatus -> EventType -> ActionHistoryDetails -> ActionHistory

-- | Create a value of <a>ActionHistory</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamp:ActionHistory'</a>, <a>actionHistory_timestamp</a> -
--   Undocumented member.
--   
--   <a>$sel:status:ActionHistory'</a>, <a>actionHistory_status</a> - The
--   status of action at the time of the event.
--   
--   <a>$sel:eventType:ActionHistory'</a>, <a>actionHistory_eventType</a> -
--   This distinguishes between whether the events are triggered by the
--   user or generated by the system.
--   
--   <a>$sel:actionHistoryDetails:ActionHistory'</a>,
--   <a>actionHistory_actionHistoryDetails</a> - The description of details
--   of the event.
newActionHistory :: UTCTime -> ActionStatus -> EventType -> ActionHistoryDetails -> ActionHistory

-- | The description of details of the event.
--   
--   <i>See:</i> <a>newActionHistoryDetails</a> smart constructor.
data ActionHistoryDetails
ActionHistoryDetails' :: Text -> Action -> ActionHistoryDetails

-- | Create a value of <a>ActionHistoryDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:ActionHistoryDetails'</a>,
--   <a>actionHistoryDetails_message</a> - Undocumented member.
--   
--   <a>$sel:action:ActionHistoryDetails'</a>,
--   <a>actionHistoryDetails_action</a> - The budget action resource.
newActionHistoryDetails :: Text -> Action -> ActionHistoryDetails

-- | The trigger threshold of the action.
--   
--   <i>See:</i> <a>newActionThreshold</a> smart constructor.
data ActionThreshold
ActionThreshold' :: Double -> ThresholdType -> ActionThreshold

-- | Create a value of <a>ActionThreshold</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionThresholdValue:ActionThreshold'</a>,
--   <a>actionThreshold_actionThresholdValue</a> - Undocumented member.
--   
--   <a>$sel:actionThresholdType:ActionThreshold'</a>,
--   <a>actionThreshold_actionThresholdType</a> - Undocumented member.
newActionThreshold :: Double -> ThresholdType -> ActionThreshold

-- | Represents the output of the <tt>CreateBudget</tt> operation. The
--   content consists of the detailed metadata and data file information,
--   and the current status of the <tt>budget</tt> object.
--   
--   This is the ARN pattern for a budget:
--   
--   <pre>
--   arn:aws:budgets::AccountId:budget/budgetName
--   </pre>
--   
--   <i>See:</i> <a>newBudget</a> smart constructor.
data Budget
Budget' :: Maybe TimePeriod -> Maybe (HashMap Text [Text]) -> Maybe CostTypes -> Maybe (HashMap Text Spend) -> Maybe CalculatedSpend -> Maybe Spend -> Maybe POSIX -> Text -> TimeUnit -> BudgetType -> Budget

-- | Create a value of <a>Budget</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timePeriod:Budget'</a>, <a>budget_timePeriod</a> - The period
--   of time that is covered by a budget. The period has a start date and
--   an end date. The start date must come before the end date. The end
--   date must come before <tt>06/15/87 00:00 UTC</tt>.
--   
--   If you create your budget and don't specify a start date, AWS defaults
--   to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or
--   ANNUALLY). For example, if you created your budget on January 24,
--   2018, chose <tt>DAILY</tt>, and didn't set a start date, AWS set your
--   start date to <tt>01/24/18 00:00 UTC</tt>. If you chose
--   <tt>MONTHLY</tt>, AWS set your start date to <tt>01/01/18 00:00
--   UTC</tt>. If you didn't specify an end date, AWS set your end date to
--   <tt>06/15/87 00:00 UTC</tt>. The defaults are the same for the AWS
--   Billing and Cost Management console and the API.
--   
--   You can change either date with the <tt>UpdateBudget</tt> operation.
--   
--   After the end date, AWS deletes the budget and all associated
--   notifications and subscribers.
--   
--   <a>$sel:costFilters:Budget'</a>, <a>budget_costFilters</a> - The cost
--   filters, such as service or tag, that are applied to a budget.
--   
--   AWS Budgets supports the following services as a filter for RI
--   budgets:
--   
--   <ul>
--   <li>Amazon Elastic Compute Cloud - Compute</li>
--   <li>Amazon Redshift</li>
--   <li>Amazon Relational Database Service</li>
--   <li>Amazon ElastiCache</li>
--   <li>Amazon Elasticsearch Service</li>
--   </ul>
--   
--   <a>$sel:costTypes:Budget'</a>, <a>budget_costTypes</a> - The types of
--   costs that are included in this <tt>COST</tt> budget.
--   
--   <tt>USAGE</tt>, <tt>RI_UTILIZATION</tt>, <tt>RI_COVERAGE</tt>,
--   <tt>SAVINGS_PLANS_UTILIZATION</tt>, and
--   <tt>SAVINGS_PLANS_COVERAGE</tt> budgets do not have
--   <tt>CostTypes</tt>.
--   
--   <a>$sel:plannedBudgetLimits:Budget'</a>,
--   <a>budget_plannedBudgetLimits</a> - A map containing multiple
--   <tt>BudgetLimit</tt>, including current or future limits.
--   
--   <tt>PlannedBudgetLimits</tt> is available for cost or usage budget and
--   supports monthly and quarterly <tt>TimeUnit</tt>.
--   
--   For monthly budgets, provide 12 months of <tt>PlannedBudgetLimits</tt>
--   values. This must start from the current month and include the next 11
--   months. The <tt>key</tt> is the start of the month, <tt>UTC</tt> in
--   epoch seconds.
--   
--   For quarterly budgets, provide 4 quarters of
--   <tt>PlannedBudgetLimits</tt> value entries in standard calendar
--   quarter increments. This must start from the current quarter and
--   include the next 3 quarters. The <tt>key</tt> is the start of the
--   quarter, <tt>UTC</tt> in epoch seconds.
--   
--   If the planned budget expires before 12 months for monthly or 4
--   quarters for quarterly, provide the <tt>PlannedBudgetLimits</tt>
--   values only for the remaining periods.
--   
--   If the budget begins at a date in the future, provide
--   <tt>PlannedBudgetLimits</tt> values from the start date of the budget.
--   
--   After all of the <tt>BudgetLimit</tt> values in
--   <tt>PlannedBudgetLimits</tt> are used, the budget continues to use the
--   last limit as the <tt>BudgetLimit</tt>. At that point, the planned
--   budget provides the same experience as a fixed budget.
--   
--   <tt>DescribeBudget</tt> and <tt>DescribeBudgets</tt> response along
--   with <tt>PlannedBudgetLimits</tt> will also contain
--   <tt>BudgetLimit</tt> representing the current month or quarter limit
--   present in <tt>PlannedBudgetLimits</tt>. This only applies to budgets
--   created with <tt>PlannedBudgetLimits</tt>. Budgets created without
--   <tt>PlannedBudgetLimits</tt> will only contain <tt>BudgetLimit</tt>,
--   and no <tt>PlannedBudgetLimits</tt>.
--   
--   <a>$sel:calculatedSpend:Budget'</a>, <a>budget_calculatedSpend</a> -
--   The actual and forecasted cost or usage that the budget tracks.
--   
--   <a>$sel:budgetLimit:Budget'</a>, <a>budget_budgetLimit</a> - The total
--   amount of cost, usage, RI utilization, RI coverage, Savings Plans
--   utilization, or Savings Plans coverage that you want to track with
--   your budget.
--   
--   <tt>BudgetLimit</tt> is required for cost or usage budgets, but
--   optional for RI or Savings Plans utilization or coverage budgets. RI
--   and Savings Plans utilization or coverage budgets default to
--   <tt>100</tt>, which is the only valid value for RI or Savings Plans
--   utilization or coverage budgets. You can't use <tt>BudgetLimit</tt>
--   with <tt>PlannedBudgetLimits</tt> for <tt>CreateBudget</tt> and
--   <tt>UpdateBudget</tt> actions.
--   
--   <a>$sel:lastUpdatedTime:Budget'</a>, <a>budget_lastUpdatedTime</a> -
--   The last time that you updated this budget.
--   
--   <a>$sel:budgetName:Budget'</a>, <a>budget_budgetName</a> - The name of
--   a budget. The name must be unique within an account. The <tt>:</tt>
--   and <tt>\</tt> characters aren't allowed in <tt>BudgetName</tt>.
--   
--   <a>$sel:timeUnit:Budget'</a>, <a>budget_timeUnit</a> - The length of
--   time until a budget resets the actual and forecasted spend.
--   
--   <a>$sel:budgetType:Budget'</a>, <a>budget_budgetType</a> - Whether
--   this budget tracks costs, usage, RI utilization, RI coverage, Savings
--   Plans utilization, or Savings Plans coverage.
newBudget :: Text -> TimeUnit -> BudgetType -> Budget

-- | A history of the state of a budget at the end of the budget's
--   specified time period.
--   
--   <i>See:</i> <a>newBudgetPerformanceHistory</a> smart constructor.
data BudgetPerformanceHistory
BudgetPerformanceHistory' :: Maybe [BudgetedAndActualAmounts] -> Maybe TimeUnit -> Maybe (HashMap Text [Text]) -> Maybe CostTypes -> Maybe BudgetType -> Maybe Text -> BudgetPerformanceHistory

-- | Create a value of <a>BudgetPerformanceHistory</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:budgetedAndActualAmountsList:BudgetPerformanceHistory'</a>,
--   <a>budgetPerformanceHistory_budgetedAndActualAmountsList</a> - A list
--   of amounts of cost or usage that you created budgets for, compared to
--   your actual costs or usage.
--   
--   <a>$sel:timeUnit:BudgetPerformanceHistory'</a>,
--   <a>budgetPerformanceHistory_timeUnit</a> - Undocumented member.
--   
--   <a>$sel:costFilters:BudgetPerformanceHistory'</a>,
--   <a>budgetPerformanceHistory_costFilters</a> - The history of the cost
--   filters for a budget during the specified time period.
--   
--   <a>$sel:costTypes:BudgetPerformanceHistory'</a>,
--   <a>budgetPerformanceHistory_costTypes</a> - The history of the cost
--   types for a budget during the specified time period.
--   
--   <a>$sel:budgetType:BudgetPerformanceHistory'</a>,
--   <a>budgetPerformanceHistory_budgetType</a> - Undocumented member.
--   
--   <a>$sel:budgetName:BudgetPerformanceHistory'</a>,
--   <a>budgetPerformanceHistory_budgetName</a> - Undocumented member.
newBudgetPerformanceHistory :: BudgetPerformanceHistory

-- | The amount of cost or usage that you created the budget for, compared
--   to your actual costs or usage.
--   
--   <i>See:</i> <a>newBudgetedAndActualAmounts</a> smart constructor.
data BudgetedAndActualAmounts
BudgetedAndActualAmounts' :: Maybe TimePeriod -> Maybe Spend -> Maybe Spend -> BudgetedAndActualAmounts

-- | Create a value of <a>BudgetedAndActualAmounts</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timePeriod:BudgetedAndActualAmounts'</a>,
--   <a>budgetedAndActualAmounts_timePeriod</a> - The time period covered
--   by this budget comparison.
--   
--   <a>$sel:budgetedAmount:BudgetedAndActualAmounts'</a>,
--   <a>budgetedAndActualAmounts_budgetedAmount</a> - The amount of cost or
--   usage that you created the budget for.
--   
--   <a>$sel:actualAmount:BudgetedAndActualAmounts'</a>,
--   <a>budgetedAndActualAmounts_actualAmount</a> - Your actual costs or
--   usage for a budget period.
newBudgetedAndActualAmounts :: BudgetedAndActualAmounts

-- | The spend objects that are associated with this budget. The
--   <tt>actualSpend</tt> tracks how much you've used, cost, usage, RI
--   units, or Savings Plans units and the <tt>forecastedSpend</tt> tracks
--   how much you are predicted to spend based on your historical usage
--   profile.
--   
--   For example, if it is the 20th of the month and you have spent
--   <tt>50</tt> dollars on Amazon EC2, your <tt>actualSpend</tt> is <tt>50
--   USD</tt>, and your <tt>forecastedSpend</tt> is <tt>75 USD</tt>.
--   
--   <i>See:</i> <a>newCalculatedSpend</a> smart constructor.
data CalculatedSpend
CalculatedSpend' :: Maybe Spend -> Spend -> CalculatedSpend

-- | Create a value of <a>CalculatedSpend</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:forecastedSpend:CalculatedSpend'</a>,
--   <a>calculatedSpend_forecastedSpend</a> - The amount of cost, usage, RI
--   units, or Savings Plans units that you are forecasted to use.
--   
--   <a>$sel:actualSpend:CalculatedSpend'</a>,
--   <a>calculatedSpend_actualSpend</a> - The amount of cost, usage, RI
--   units, or Savings Plans units that you have used.
newCalculatedSpend :: Spend -> CalculatedSpend

-- | The types of cost that are included in a <tt>COST</tt> budget, such as
--   tax and subscriptions.
--   
--   <tt>USAGE</tt>, <tt>RI_UTILIZATION</tt>, <tt>RI_COVERAGE</tt>,
--   <tt>SAVINGS_PLANS_UTILIZATION</tt>, and
--   <tt>SAVINGS_PLANS_COVERAGE</tt> budgets do not have
--   <tt>CostTypes</tt>.
--   
--   <i>See:</i> <a>newCostTypes</a> smart constructor.
data CostTypes
CostTypes' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> CostTypes

-- | Create a value of <a>CostTypes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeSubscription:CostTypes'</a>,
--   <a>costTypes_includeSubscription</a> - Specifies whether a budget
--   includes subscriptions.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:useAmortized:CostTypes'</a>, <a>costTypes_useAmortized</a> -
--   Specifies whether a budget uses the amortized rate.
--   
--   The default value is <tt>false</tt>.
--   
--   <a>$sel:includeCredit:CostTypes'</a>, <a>costTypes_includeCredit</a> -
--   Specifies whether a budget includes credits.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:useBlended:CostTypes'</a>, <a>costTypes_useBlended</a> -
--   Specifies whether a budget uses a blended rate.
--   
--   The default value is <tt>false</tt>.
--   
--   <a>$sel:includeSupport:CostTypes'</a>, <a>costTypes_includeSupport</a>
--   - Specifies whether a budget includes support subscription fees.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:includeRefund:CostTypes'</a>, <a>costTypes_includeRefund</a> -
--   Specifies whether a budget includes refunds.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:includeTax:CostTypes'</a>, <a>costTypes_includeTax</a> -
--   Specifies whether a budget includes taxes.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:includeDiscount:CostTypes'</a>,
--   <a>costTypes_includeDiscount</a> - Specifies whether a budget includes
--   discounts.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:includeOtherSubscription:CostTypes'</a>,
--   <a>costTypes_includeOtherSubscription</a> - Specifies whether a budget
--   includes non-RI subscription costs.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:includeUpfront:CostTypes'</a>, <a>costTypes_includeUpfront</a>
--   - Specifies whether a budget includes upfront RI costs.
--   
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:includeRecurring:CostTypes'</a>,
--   <a>costTypes_includeRecurring</a> - Specifies whether a budget
--   includes recurring fees such as monthly RI fees.
--   
--   The default value is <tt>true</tt>.
newCostTypes :: CostTypes

-- | Specifies all of the type-specific parameters.
--   
--   <i>See:</i> <a>newDefinition</a> smart constructor.
data Definition
Definition' :: Maybe IamActionDefinition -> Maybe SsmActionDefinition -> Maybe ScpActionDefinition -> Definition

-- | Create a value of <a>Definition</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iamActionDefinition:Definition'</a>,
--   <a>definition_iamActionDefinition</a> - The AWS Identity and Access
--   Management (IAM) action definition details.
--   
--   <a>$sel:ssmActionDefinition:Definition'</a>,
--   <a>definition_ssmActionDefinition</a> - The AWS Systems Manager (SSM)
--   action definition details.
--   
--   <a>$sel:scpActionDefinition:Definition'</a>,
--   <a>definition_scpActionDefinition</a> - The service control policies
--   (SCPs) action definition details.
newDefinition :: Definition

-- | The AWS Identity and Access Management (IAM) action definition
--   details.
--   
--   <i>See:</i> <a>newIamActionDefinition</a> smart constructor.
data IamActionDefinition
IamActionDefinition' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Text -> IamActionDefinition

-- | Create a value of <a>IamActionDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groups:IamActionDefinition'</a>,
--   <a>iamActionDefinition_groups</a> - A list of groups to be attached.
--   There must be at least one group.
--   
--   <a>$sel:roles:IamActionDefinition'</a>,
--   <a>iamActionDefinition_roles</a> - A list of roles to be attached.
--   There must be at least one role.
--   
--   <a>$sel:users:IamActionDefinition'</a>,
--   <a>iamActionDefinition_users</a> - A list of users to be attached.
--   There must be at least one user.
--   
--   <a>$sel:policyArn:IamActionDefinition'</a>,
--   <a>iamActionDefinition_policyArn</a> - The Amazon Resource Name (ARN)
--   of the policy to be attached.
newIamActionDefinition :: Text -> IamActionDefinition

-- | A notification that is associated with a budget. A budget can have up
--   to ten notifications.
--   
--   Each notification must have at least one subscriber. A notification
--   can have one SNS subscriber and up to 10 email subscribers, for a
--   total of 11 subscribers.
--   
--   For example, if you have a budget for 200 dollars and you want to be
--   notified when you go over 160 dollars, create a notification with the
--   following parameters:
--   
--   <ul>
--   <li>A notificationType of <tt>ACTUAL</tt></li>
--   <li>A <tt>thresholdType</tt> of <tt>PERCENTAGE</tt></li>
--   <li>A <tt>comparisonOperator</tt> of <tt>GREATER_THAN</tt></li>
--   <li>A notification <tt>threshold</tt> of <tt>80</tt></li>
--   </ul>
--   
--   <i>See:</i> <a>newNotification</a> smart constructor.
data Notification
Notification' :: Maybe NotificationState -> Maybe ThresholdType -> NotificationType -> ComparisonOperator -> Double -> Notification

-- | Create a value of <a>Notification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationState:Notification'</a>,
--   <a>notification_notificationState</a> - Whether this notification is
--   in alarm. If a budget notification is in the <tt>ALARM</tt> state, you
--   have passed the set threshold for the budget.
--   
--   <a>$sel:thresholdType:Notification'</a>,
--   <a>notification_thresholdType</a> - The type of threshold for a
--   notification. For <tt>ABSOLUTE_VALUE</tt> thresholds, AWS notifies you
--   when you go over or are forecasted to go over your total cost
--   threshold. For <tt>PERCENTAGE</tt> thresholds, AWS notifies you when
--   you go over or are forecasted to go over a certain percentage of your
--   forecasted spend. For example, if you have a budget for 200 dollars
--   and you have a <tt>PERCENTAGE</tt> threshold of 80%, AWS notifies you
--   when you go over 160 dollars.
--   
--   <a>$sel:notificationType:Notification'</a>,
--   <a>notification_notificationType</a> - Whether the notification is for
--   how much you have spent (<tt>ACTUAL</tt>) or for how much you're
--   forecasted to spend (<tt>FORECASTED</tt>).
--   
--   <a>$sel:comparisonOperator:Notification'</a>,
--   <a>notification_comparisonOperator</a> - The comparison that is used
--   for this notification.
--   
--   <a>$sel:threshold:Notification'</a>, <a>notification_threshold</a> -
--   The threshold that is associated with a notification. Thresholds are
--   always a percentage, and many customers find value being alerted
--   between 50% - 200% of the budgeted amount. The maximum limit for your
--   threshold is 1,000,000% above the budgeted amount.
newNotification :: NotificationType -> ComparisonOperator -> Double -> Notification

-- | A notification with subscribers. A notification can have one SNS
--   subscriber and up to 10 email subscribers, for a total of 11
--   subscribers.
--   
--   <i>See:</i> <a>newNotificationWithSubscribers</a> smart constructor.
data NotificationWithSubscribers
NotificationWithSubscribers' :: Notification -> NonEmpty Subscriber -> NotificationWithSubscribers

-- | Create a value of <a>NotificationWithSubscribers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notification:NotificationWithSubscribers'</a>,
--   <a>notificationWithSubscribers_notification</a> - The notification
--   that is associated with a budget.
--   
--   <a>$sel:subscribers:NotificationWithSubscribers'</a>,
--   <a>notificationWithSubscribers_subscribers</a> - A list of subscribers
--   who are subscribed to this notification.
newNotificationWithSubscribers :: Notification -> NonEmpty Subscriber -> NotificationWithSubscribers

-- | The service control policies (SCP) action definition details.
--   
--   <i>See:</i> <a>newScpActionDefinition</a> smart constructor.
data ScpActionDefinition
ScpActionDefinition' :: Text -> NonEmpty Text -> ScpActionDefinition

-- | Create a value of <a>ScpActionDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyId:ScpActionDefinition'</a>,
--   <a>scpActionDefinition_policyId</a> - The policy ID attached.
--   
--   <a>$sel:targetIds:ScpActionDefinition'</a>,
--   <a>scpActionDefinition_targetIds</a> - A list of target IDs.
newScpActionDefinition :: Text -> NonEmpty Text -> ScpActionDefinition

-- | The amount of cost or usage that is measured for a budget.
--   
--   For example, a <tt>Spend</tt> for <tt>3 GB</tt> of S3 usage would have
--   the following parameters:
--   
--   <ul>
--   <li>An <tt>Amount</tt> of <tt>3</tt></li>
--   <li>A <tt>unit</tt> of <tt>GB</tt></li>
--   </ul>
--   
--   <i>See:</i> <a>newSpend</a> smart constructor.
data Spend
Spend' :: Text -> Text -> Spend

-- | Create a value of <a>Spend</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:amount:Spend'</a>, <a>spend_amount</a> - The cost or usage
--   amount that is associated with a budget forecast, actual spend, or
--   budget threshold.
--   
--   <a>$sel:unit:Spend'</a>, <a>spend_unit</a> - The unit of measurement
--   that is used for the budget forecast, actual spend, or budget
--   threshold, such as dollars or GB.
newSpend :: Text -> Text -> Spend

-- | The AWS Systems Manager (SSM) action definition details.
--   
--   <i>See:</i> <a>newSsmActionDefinition</a> smart constructor.
data SsmActionDefinition
SsmActionDefinition' :: ActionSubType -> Text -> NonEmpty Text -> SsmActionDefinition

-- | Create a value of <a>SsmActionDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionSubType:SsmActionDefinition'</a>,
--   <a>ssmActionDefinition_actionSubType</a> - The action subType.
--   
--   <a>$sel:region:SsmActionDefinition'</a>,
--   <a>ssmActionDefinition_region</a> - The Region to run the SSM
--   document.
--   
--   <a>$sel:instanceIds:SsmActionDefinition'</a>,
--   <a>ssmActionDefinition_instanceIds</a> - The EC2 and RDS instance IDs.
newSsmActionDefinition :: ActionSubType -> Text -> NonEmpty Text -> SsmActionDefinition

-- | The subscriber to a budget notification. The subscriber consists of a
--   subscription type and either an Amazon SNS topic or an email address.
--   
--   For example, an email subscriber would have the following parameters:
--   
--   <ul>
--   <li>A <tt>subscriptionType</tt> of <tt>EMAIL</tt></li>
--   <li>An <tt>address</tt> of <tt>example@example.com</tt></li>
--   </ul>
--   
--   <i>See:</i> <a>newSubscriber</a> smart constructor.
data Subscriber
Subscriber' :: SubscriptionType -> Sensitive Text -> Subscriber

-- | Create a value of <a>Subscriber</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionType:Subscriber'</a>,
--   <a>subscriber_subscriptionType</a> - The type of notification that AWS
--   sends to a subscriber.
--   
--   <a>$sel:address:Subscriber'</a>, <a>subscriber_address</a> - The
--   address that AWS sends budget notifications to, either an SNS topic or
--   an email.
--   
--   When you create a subscriber, the value of <tt>Address</tt> can't
--   contain line breaks.
newSubscriber :: SubscriptionType -> Text -> Subscriber

-- | The period of time that is covered by a budget. The period has a start
--   date and an end date. The start date must come before the end date.
--   There are no restrictions on the end date.
--   
--   <i>See:</i> <a>newTimePeriod</a> smart constructor.
data TimePeriod
TimePeriod' :: Maybe POSIX -> Maybe POSIX -> TimePeriod

-- | Create a value of <a>TimePeriod</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:end:TimePeriod'</a>, <a>timePeriod_end</a> - The end date for
--   a budget. If you didn't specify an end date, AWS set your end date to
--   <tt>06/15/87 00:00 UTC</tt>. The defaults are the same for the AWS
--   Billing and Cost Management console and the API.
--   
--   After the end date, AWS deletes the budget and all associated
--   notifications and subscribers. You can change your end date with the
--   <tt>UpdateBudget</tt> operation.
--   
--   <a>$sel:start:TimePeriod'</a>, <a>timePeriod_start</a> - The start
--   date for a budget. If you created your budget and didn't specify a
--   start date, AWS defaults to the start of your chosen time period
--   (DAILY, MONTHLY, QUARTERLY, or ANNUALLY). For example, if you created
--   your budget on January 24, 2018, chose <tt>DAILY</tt>, and didn't set
--   a start date, AWS set your start date to <tt>01/24/18 00:00 UTC</tt>.
--   If you chose <tt>MONTHLY</tt>, AWS set your start date to <tt>01/01/18
--   00:00 UTC</tt>. The defaults are the same for the AWS Billing and Cost
--   Management console and the API.
--   
--   You can change your start date with the <tt>UpdateBudget</tt>
--   operation.
newTimePeriod :: TimePeriod
