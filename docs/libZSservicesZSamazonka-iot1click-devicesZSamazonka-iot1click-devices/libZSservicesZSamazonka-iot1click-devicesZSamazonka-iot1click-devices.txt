-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-iot1click-devicesZSamazonka-iot1click-devices
@version 2.0


module Network.AWS.IoT1ClickDevices.Types.Attributes

-- | <i>See:</i> <a>newAttributes</a> smart constructor.
data Attributes
Attributes' :: Attributes

-- | Create a value of <a>Attributes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAttributes :: Attributes
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.Types.Attributes.Attributes
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.Types.Attributes.Attributes
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.Types.Attributes.Attributes
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.Types.Attributes.Attributes
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IoT1ClickDevices.Types.Attributes.Attributes
instance Data.Hashable.Class.Hashable Network.AWS.IoT1ClickDevices.Types.Attributes.Attributes
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.Types.Attributes.Attributes


module Network.AWS.IoT1ClickDevices.Types.Device

-- | <i>See:</i> <a>newDevice</a> smart constructor.
data Device
Device' :: Maybe Attributes -> Maybe Text -> Maybe Text -> Device

-- | The user specified attributes associated with the device for an event.
[$sel:attributes:Device'] :: Device -> Maybe Attributes

-- | The unique identifier of the device.
[$sel:deviceId:Device'] :: Device -> Maybe Text

-- | The device type, such as "button".
[$sel:type':Device'] :: Device -> Maybe Text

-- | Create a value of <a>Device</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:Device'</a>, <a>device_attributes</a> - The user
--   specified attributes associated with the device for an event.
--   
--   <a>$sel:deviceId:Device'</a>, <a>device_deviceId</a> - The unique
--   identifier of the device.
--   
--   <a>$sel:type':Device'</a>, <a>device_type</a> - The device type, such
--   as "button".
newDevice :: Device

-- | The user specified attributes associated with the device for an event.
device_attributes :: Lens' Device (Maybe Attributes)

-- | The unique identifier of the device.
device_deviceId :: Lens' Device (Maybe Text)

-- | The device type, such as "button".
device_type :: Lens' Device (Maybe Text)
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.Types.Device.Device
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.Types.Device.Device
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.Types.Device.Device
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.Types.Device.Device
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IoT1ClickDevices.Types.Device.Device
instance Data.Hashable.Class.Hashable Network.AWS.IoT1ClickDevices.Types.Device.Device
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.Types.Device.Device


module Network.AWS.IoT1ClickDevices.Types.DeviceDescription

-- | <i>See:</i> <a>newDeviceDescription</a> smart constructor.
data DeviceDescription
DeviceDescription' :: Maybe Double -> Maybe Bool -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> DeviceDescription

-- | A value between 0 and 1 inclusive, representing the fraction of life
--   remaining for the device.
[$sel:remainingLife:DeviceDescription'] :: DeviceDescription -> Maybe Double

-- | A Boolean value indicating whether or not the device is enabled.
[$sel:enabled:DeviceDescription'] :: DeviceDescription -> Maybe Bool

-- | The ARN of the device.
[$sel:arn:DeviceDescription'] :: DeviceDescription -> Maybe Text

-- | An array of zero or more elements of DeviceAttribute objects providing
--   user specified device attributes.
[$sel:attributes:DeviceDescription'] :: DeviceDescription -> Maybe (HashMap Text Text)

-- | The unique identifier of the device.
[$sel:deviceId:DeviceDescription'] :: DeviceDescription -> Maybe Text

-- | The type of the device, such as "button".
[$sel:type':DeviceDescription'] :: DeviceDescription -> Maybe Text

-- | The tags currently associated with the AWS IoT 1-Click device.
[$sel:tags:DeviceDescription'] :: DeviceDescription -> Maybe (HashMap Text Text)

-- | Create a value of <a>DeviceDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:remainingLife:DeviceDescription'</a>,
--   <a>deviceDescription_remainingLife</a> - A value between 0 and 1
--   inclusive, representing the fraction of life remaining for the device.
--   
--   <a>$sel:enabled:DeviceDescription'</a>,
--   <a>deviceDescription_enabled</a> - A Boolean value indicating whether
--   or not the device is enabled.
--   
--   <a>$sel:arn:DeviceDescription'</a>, <a>deviceDescription_arn</a> - The
--   ARN of the device.
--   
--   <a>$sel:attributes:DeviceDescription'</a>,
--   <a>deviceDescription_attributes</a> - An array of zero or more
--   elements of DeviceAttribute objects providing user specified device
--   attributes.
--   
--   <a>$sel:deviceId:DeviceDescription'</a>,
--   <a>deviceDescription_deviceId</a> - The unique identifier of the
--   device.
--   
--   <a>$sel:type':DeviceDescription'</a>, <a>deviceDescription_type</a> -
--   The type of the device, such as "button".
--   
--   <a>$sel:tags:DeviceDescription'</a>, <a>deviceDescription_tags</a> -
--   The tags currently associated with the AWS IoT 1-Click device.
newDeviceDescription :: DeviceDescription

-- | A value between 0 and 1 inclusive, representing the fraction of life
--   remaining for the device.
deviceDescription_remainingLife :: Lens' DeviceDescription (Maybe Double)

-- | A Boolean value indicating whether or not the device is enabled.
deviceDescription_enabled :: Lens' DeviceDescription (Maybe Bool)

-- | The ARN of the device.
deviceDescription_arn :: Lens' DeviceDescription (Maybe Text)

-- | An array of zero or more elements of DeviceAttribute objects providing
--   user specified device attributes.
deviceDescription_attributes :: Lens' DeviceDescription (Maybe (HashMap Text Text))

-- | The unique identifier of the device.
deviceDescription_deviceId :: Lens' DeviceDescription (Maybe Text)

-- | The type of the device, such as "button".
deviceDescription_type :: Lens' DeviceDescription (Maybe Text)

-- | The tags currently associated with the AWS IoT 1-Click device.
deviceDescription_tags :: Lens' DeviceDescription (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.Types.DeviceDescription.DeviceDescription
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.Types.DeviceDescription.DeviceDescription
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.Types.DeviceDescription.DeviceDescription
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.Types.DeviceDescription.DeviceDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IoT1ClickDevices.Types.DeviceDescription.DeviceDescription
instance Data.Hashable.Class.Hashable Network.AWS.IoT1ClickDevices.Types.DeviceDescription.DeviceDescription
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.Types.DeviceDescription.DeviceDescription


module Network.AWS.IoT1ClickDevices.Types.DeviceEvent

-- | <i>See:</i> <a>newDeviceEvent</a> smart constructor.
data DeviceEvent
DeviceEvent' :: Maybe Text -> Maybe Device -> DeviceEvent

-- | A serialized JSON object representing the device-type specific event.
[$sel:stdEvent:DeviceEvent'] :: DeviceEvent -> Maybe Text

-- | An object representing the device associated with the event.
[$sel:device:DeviceEvent'] :: DeviceEvent -> Maybe Device

-- | Create a value of <a>DeviceEvent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stdEvent:DeviceEvent'</a>, <a>deviceEvent_stdEvent</a> - A
--   serialized JSON object representing the device-type specific event.
--   
--   <a>$sel:device:DeviceEvent'</a>, <a>deviceEvent_device</a> - An object
--   representing the device associated with the event.
newDeviceEvent :: DeviceEvent

-- | A serialized JSON object representing the device-type specific event.
deviceEvent_stdEvent :: Lens' DeviceEvent (Maybe Text)

-- | An object representing the device associated with the event.
deviceEvent_device :: Lens' DeviceEvent (Maybe Device)
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.Types.DeviceEvent.DeviceEvent
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.Types.DeviceEvent.DeviceEvent
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.Types.DeviceEvent.DeviceEvent
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.Types.DeviceEvent.DeviceEvent
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IoT1ClickDevices.Types.DeviceEvent.DeviceEvent
instance Data.Hashable.Class.Hashable Network.AWS.IoT1ClickDevices.Types.DeviceEvent.DeviceEvent
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.Types.DeviceEvent.DeviceEvent


module Network.AWS.IoT1ClickDevices.Types.DeviceMethod

-- | <i>See:</i> <a>newDeviceMethod</a> smart constructor.
data DeviceMethod
DeviceMethod' :: Maybe Text -> Maybe Text -> DeviceMethod

-- | The name of the method applicable to the deviceType.
[$sel:methodName:DeviceMethod'] :: DeviceMethod -> Maybe Text

-- | The type of the device, such as "button".
[$sel:deviceType:DeviceMethod'] :: DeviceMethod -> Maybe Text

-- | Create a value of <a>DeviceMethod</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:methodName:DeviceMethod'</a>, <a>deviceMethod_methodName</a> -
--   The name of the method applicable to the deviceType.
--   
--   <a>$sel:deviceType:DeviceMethod'</a>, <a>deviceMethod_deviceType</a> -
--   The type of the device, such as "button".
newDeviceMethod :: DeviceMethod

-- | The name of the method applicable to the deviceType.
deviceMethod_methodName :: Lens' DeviceMethod (Maybe Text)

-- | The type of the device, such as "button".
deviceMethod_deviceType :: Lens' DeviceMethod (Maybe Text)
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.Types.DeviceMethod.DeviceMethod
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.Types.DeviceMethod.DeviceMethod
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.Types.DeviceMethod.DeviceMethod
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.Types.DeviceMethod.DeviceMethod
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IoT1ClickDevices.Types.DeviceMethod.DeviceMethod
instance Data.Hashable.Class.Hashable Network.AWS.IoT1ClickDevices.Types.DeviceMethod.DeviceMethod
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.Types.DeviceMethod.DeviceMethod
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IoT1ClickDevices.Types.DeviceMethod.DeviceMethod


module Network.AWS.IoT1ClickDevices.Types

-- | API version <tt>2018-05-14</tt> of the Amazon IoT 1-Click Devices
--   Service SDK configuration.
defaultService :: Service

-- | Prism for InvalidRequestException' errors.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Prism for PreconditionFailedException' errors.
_PreconditionFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Prism for ForbiddenException' errors.
_ForbiddenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Prism for RangeNotSatisfiableException' errors.
_RangeNotSatisfiableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Prism for InternalFailureException' errors.
_InternalFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Prism for ResourceConflictException' errors.
_ResourceConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Prism for ResourceNotFoundException' errors.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newAttributes</a> smart constructor.
data Attributes
Attributes' :: Attributes

-- | Create a value of <a>Attributes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAttributes :: Attributes

-- | <i>See:</i> <a>newDevice</a> smart constructor.
data Device
Device' :: Maybe Attributes -> Maybe Text -> Maybe Text -> Device

-- | The user specified attributes associated with the device for an event.
[$sel:attributes:Device'] :: Device -> Maybe Attributes

-- | The unique identifier of the device.
[$sel:deviceId:Device'] :: Device -> Maybe Text

-- | The device type, such as "button".
[$sel:type':Device'] :: Device -> Maybe Text

-- | Create a value of <a>Device</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:Device'</a>, <a>device_attributes</a> - The user
--   specified attributes associated with the device for an event.
--   
--   <a>$sel:deviceId:Device'</a>, <a>device_deviceId</a> - The unique
--   identifier of the device.
--   
--   <a>$sel:type':Device'</a>, <a>device_type</a> - The device type, such
--   as "button".
newDevice :: Device

-- | The user specified attributes associated with the device for an event.
device_attributes :: Lens' Device (Maybe Attributes)

-- | The unique identifier of the device.
device_deviceId :: Lens' Device (Maybe Text)

-- | The device type, such as "button".
device_type :: Lens' Device (Maybe Text)

-- | <i>See:</i> <a>newDeviceDescription</a> smart constructor.
data DeviceDescription
DeviceDescription' :: Maybe Double -> Maybe Bool -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> DeviceDescription

-- | A value between 0 and 1 inclusive, representing the fraction of life
--   remaining for the device.
[$sel:remainingLife:DeviceDescription'] :: DeviceDescription -> Maybe Double

-- | A Boolean value indicating whether or not the device is enabled.
[$sel:enabled:DeviceDescription'] :: DeviceDescription -> Maybe Bool

-- | The ARN of the device.
[$sel:arn:DeviceDescription'] :: DeviceDescription -> Maybe Text

-- | An array of zero or more elements of DeviceAttribute objects providing
--   user specified device attributes.
[$sel:attributes:DeviceDescription'] :: DeviceDescription -> Maybe (HashMap Text Text)

-- | The unique identifier of the device.
[$sel:deviceId:DeviceDescription'] :: DeviceDescription -> Maybe Text

-- | The type of the device, such as "button".
[$sel:type':DeviceDescription'] :: DeviceDescription -> Maybe Text

-- | The tags currently associated with the AWS IoT 1-Click device.
[$sel:tags:DeviceDescription'] :: DeviceDescription -> Maybe (HashMap Text Text)

-- | Create a value of <a>DeviceDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:remainingLife:DeviceDescription'</a>,
--   <a>deviceDescription_remainingLife</a> - A value between 0 and 1
--   inclusive, representing the fraction of life remaining for the device.
--   
--   <a>$sel:enabled:DeviceDescription'</a>,
--   <a>deviceDescription_enabled</a> - A Boolean value indicating whether
--   or not the device is enabled.
--   
--   <a>$sel:arn:DeviceDescription'</a>, <a>deviceDescription_arn</a> - The
--   ARN of the device.
--   
--   <a>$sel:attributes:DeviceDescription'</a>,
--   <a>deviceDescription_attributes</a> - An array of zero or more
--   elements of DeviceAttribute objects providing user specified device
--   attributes.
--   
--   <a>$sel:deviceId:DeviceDescription'</a>,
--   <a>deviceDescription_deviceId</a> - The unique identifier of the
--   device.
--   
--   <a>$sel:type':DeviceDescription'</a>, <a>deviceDescription_type</a> -
--   The type of the device, such as "button".
--   
--   <a>$sel:tags:DeviceDescription'</a>, <a>deviceDescription_tags</a> -
--   The tags currently associated with the AWS IoT 1-Click device.
newDeviceDescription :: DeviceDescription

-- | A value between 0 and 1 inclusive, representing the fraction of life
--   remaining for the device.
deviceDescription_remainingLife :: Lens' DeviceDescription (Maybe Double)

-- | A Boolean value indicating whether or not the device is enabled.
deviceDescription_enabled :: Lens' DeviceDescription (Maybe Bool)

-- | The ARN of the device.
deviceDescription_arn :: Lens' DeviceDescription (Maybe Text)

-- | An array of zero or more elements of DeviceAttribute objects providing
--   user specified device attributes.
deviceDescription_attributes :: Lens' DeviceDescription (Maybe (HashMap Text Text))

-- | The unique identifier of the device.
deviceDescription_deviceId :: Lens' DeviceDescription (Maybe Text)

-- | The type of the device, such as "button".
deviceDescription_type :: Lens' DeviceDescription (Maybe Text)

-- | The tags currently associated with the AWS IoT 1-Click device.
deviceDescription_tags :: Lens' DeviceDescription (Maybe (HashMap Text Text))

-- | <i>See:</i> <a>newDeviceEvent</a> smart constructor.
data DeviceEvent
DeviceEvent' :: Maybe Text -> Maybe Device -> DeviceEvent

-- | A serialized JSON object representing the device-type specific event.
[$sel:stdEvent:DeviceEvent'] :: DeviceEvent -> Maybe Text

-- | An object representing the device associated with the event.
[$sel:device:DeviceEvent'] :: DeviceEvent -> Maybe Device

-- | Create a value of <a>DeviceEvent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stdEvent:DeviceEvent'</a>, <a>deviceEvent_stdEvent</a> - A
--   serialized JSON object representing the device-type specific event.
--   
--   <a>$sel:device:DeviceEvent'</a>, <a>deviceEvent_device</a> - An object
--   representing the device associated with the event.
newDeviceEvent :: DeviceEvent

-- | A serialized JSON object representing the device-type specific event.
deviceEvent_stdEvent :: Lens' DeviceEvent (Maybe Text)

-- | An object representing the device associated with the event.
deviceEvent_device :: Lens' DeviceEvent (Maybe Device)

-- | <i>See:</i> <a>newDeviceMethod</a> smart constructor.
data DeviceMethod
DeviceMethod' :: Maybe Text -> Maybe Text -> DeviceMethod

-- | The name of the method applicable to the deviceType.
[$sel:methodName:DeviceMethod'] :: DeviceMethod -> Maybe Text

-- | The type of the device, such as "button".
[$sel:deviceType:DeviceMethod'] :: DeviceMethod -> Maybe Text

-- | Create a value of <a>DeviceMethod</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:methodName:DeviceMethod'</a>, <a>deviceMethod_methodName</a> -
--   The name of the method applicable to the deviceType.
--   
--   <a>$sel:deviceType:DeviceMethod'</a>, <a>deviceMethod_deviceType</a> -
--   The type of the device, such as "button".
newDeviceMethod :: DeviceMethod

-- | The name of the method applicable to the deviceType.
deviceMethod_methodName :: Lens' DeviceMethod (Maybe Text)

-- | The type of the device, such as "button".
deviceMethod_deviceType :: Lens' DeviceMethod (Maybe Text)


-- | Adds or updates the tags associated with the resource ARN. See <a>AWS
--   IoT 1-Click Service Limits</a> for the maximum number of tags allowed
--   per resource.
module Network.AWS.IoT1ClickDevices.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The ARN of the resource.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | A collection of key/value pairs defining the resource tags. For
--   example, { "tags": {"key1": "value1", "key2": "value2"} }. For more
--   information, see <a>AWS Tagging Strategies</a>.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of the resource.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A collection
--   of key/value pairs defining the resource tags. For example, { "tags":
--   {"key1": "value1", "key2": "value2"} }. For more information, see
--   <a>AWS Tagging Strategies</a>.
newTagResource :: Text -> TagResource

-- | The ARN of the resource.
tagResource_resourceArn :: Lens' TagResource Text

-- | A collection of key/value pairs defining the resource tags. For
--   example, { "tags": {"key1": "value1", "key2": "value2"} }. For more
--   information, see <a>AWS Tagging Strategies</a>.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.TagResource.TagResource
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.TagResource.TagResource
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IoT1ClickDevices.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.IoT1ClickDevices.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IoT1ClickDevices.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IoT1ClickDevices.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.IoT1ClickDevices.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.IoT1ClickDevices.TagResource.TagResource


-- | Lists the tags associated with the specified resource ARN.
module Network.AWS.IoT1ClickDevices.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The ARN of the resource.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of the resource.
newListTagsForResource :: Text -> ListTagsForResource

-- | The ARN of the resource.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | A collection of key/value pairs defining the resource tags. For
--   example, { "tags": {"key1": "value1", "key2": "value2"} }. For more
--   information, see <a>AWS Tagging Strategies</a>.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A collection of key/value
--   pairs defining the resource tags. For example, { "tags": {"key1":
--   "value1", "key2": "value2"} }. For more information, see <a>AWS
--   Tagging Strategies</a>.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | A collection of key/value pairs defining the resource tags. For
--   example, { "tags": {"key1": "value1", "key2": "value2"} }. For more
--   information, see <a>AWS Tagging Strategies</a>.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IoT1ClickDevices.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.IoT1ClickDevices.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IoT1ClickDevices.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.IoT1ClickDevices.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.IoT1ClickDevices.ListTagsForResource.ListTagsForResource


-- | Lists the 1-Click compatible devices associated with your AWS account.
--   
--   This operation returns paginated results.
module Network.AWS.IoT1ClickDevices.ListDevices

-- | <i>See:</i> <a>newListDevices</a> smart constructor.
data ListDevices
ListDevices' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListDevices

-- | The token to retrieve the next set of results.
[$sel:nextToken:ListDevices'] :: ListDevices -> Maybe Text

-- | The type of the device, such as "button".
[$sel:deviceType:ListDevices'] :: ListDevices -> Maybe Text

-- | The maximum number of results to return per request. If not set, a
--   default value of 100 is used.
[$sel:maxResults:ListDevices'] :: ListDevices -> Maybe Natural

-- | Create a value of <a>ListDevices</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevices'</a>, <a>listDevices_nextToken</a> - The
--   token to retrieve the next set of results.
--   
--   <a>$sel:deviceType:ListDevices'</a>, <a>listDevices_deviceType</a> -
--   The type of the device, such as "button".
--   
--   <a>$sel:maxResults:ListDevices'</a>, <a>listDevices_maxResults</a> -
--   The maximum number of results to return per request. If not set, a
--   default value of 100 is used.
newListDevices :: ListDevices

-- | The token to retrieve the next set of results.
listDevices_nextToken :: Lens' ListDevices (Maybe Text)

-- | The type of the device, such as "button".
listDevices_deviceType :: Lens' ListDevices (Maybe Text)

-- | The maximum number of results to return per request. If not set, a
--   default value of 100 is used.
listDevices_maxResults :: Lens' ListDevices (Maybe Natural)

-- | <i>See:</i> <a>newListDevicesResponse</a> smart constructor.
data ListDevicesResponse
ListDevicesResponse' :: Maybe Text -> Maybe [DeviceDescription] -> Int -> ListDevicesResponse

-- | The token to retrieve the next set of results.
[$sel:nextToken:ListDevicesResponse'] :: ListDevicesResponse -> Maybe Text

-- | A list of devices.
[$sel:devices:ListDevicesResponse'] :: ListDevicesResponse -> Maybe [DeviceDescription]

-- | The response's http status code.
[$sel:httpStatus:ListDevicesResponse'] :: ListDevicesResponse -> Int

-- | Create a value of <a>ListDevicesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevices'</a>,
--   <a>listDevicesResponse_nextToken</a> - The token to retrieve the next
--   set of results.
--   
--   <a>$sel:devices:ListDevicesResponse'</a>,
--   <a>listDevicesResponse_devices</a> - A list of devices.
--   
--   <a>$sel:httpStatus:ListDevicesResponse'</a>,
--   <a>listDevicesResponse_httpStatus</a> - The response's http status
--   code.
newListDevicesResponse :: Int -> ListDevicesResponse

-- | The token to retrieve the next set of results.
listDevicesResponse_nextToken :: Lens' ListDevicesResponse (Maybe Text)

-- | A list of devices.
listDevicesResponse_devices :: Lens' ListDevicesResponse (Maybe [DeviceDescription])

-- | The response's http status code.
listDevicesResponse_httpStatus :: Lens' ListDevicesResponse Int
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.ListDevices.ListDevices
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.ListDevices.ListDevices
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.ListDevices.ListDevices
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.ListDevices.ListDevices
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.ListDevices.ListDevicesResponse
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.ListDevices.ListDevicesResponse
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.ListDevices.ListDevicesResponse
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.ListDevices.ListDevicesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IoT1ClickDevices.ListDevices.ListDevices
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.ListDevices.ListDevicesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.IoT1ClickDevices.ListDevices.ListDevices
instance Data.Hashable.Class.Hashable Network.AWS.IoT1ClickDevices.ListDevices.ListDevices
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.ListDevices.ListDevices
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IoT1ClickDevices.ListDevices.ListDevices
instance Network.AWS.Data.Path.ToPath Network.AWS.IoT1ClickDevices.ListDevices.ListDevices
instance Network.AWS.Data.Query.ToQuery Network.AWS.IoT1ClickDevices.ListDevices.ListDevices


-- | Using a device ID, returns a DeviceEventsResponse object containing an
--   array of events for the device.
--   
--   This operation returns paginated results.
module Network.AWS.IoT1ClickDevices.ListDeviceEvents

-- | <i>See:</i> <a>newListDeviceEvents</a> smart constructor.
data ListDeviceEvents
ListDeviceEvents' :: Maybe Text -> Maybe Natural -> Text -> POSIX -> POSIX -> ListDeviceEvents

-- | The token to retrieve the next set of results.
[$sel:nextToken:ListDeviceEvents'] :: ListDeviceEvents -> Maybe Text

-- | The maximum number of results to return per request. If not set, a
--   default value of 100 is used.
[$sel:maxResults:ListDeviceEvents'] :: ListDeviceEvents -> Maybe Natural

-- | The unique identifier of the device.
[$sel:deviceId:ListDeviceEvents'] :: ListDeviceEvents -> Text

-- | The start date for the device event query, in ISO8061 format. For
--   example, 2018-03-28T15:45:12.880Z
[$sel:fromTimeStamp:ListDeviceEvents'] :: ListDeviceEvents -> POSIX

-- | The end date for the device event query, in ISO8061 format. For
--   example, 2018-03-28T15:45:12.880Z
[$sel:toTimeStamp:ListDeviceEvents'] :: ListDeviceEvents -> POSIX

-- | Create a value of <a>ListDeviceEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeviceEvents'</a>,
--   <a>listDeviceEvents_nextToken</a> - The token to retrieve the next set
--   of results.
--   
--   <a>$sel:maxResults:ListDeviceEvents'</a>,
--   <a>listDeviceEvents_maxResults</a> - The maximum number of results to
--   return per request. If not set, a default value of 100 is used.
--   
--   <a>$sel:deviceId:ListDeviceEvents'</a>,
--   <a>listDeviceEvents_deviceId</a> - The unique identifier of the
--   device.
--   
--   <a>$sel:fromTimeStamp:ListDeviceEvents'</a>,
--   <a>listDeviceEvents_fromTimeStamp</a> - The start date for the device
--   event query, in ISO8061 format. For example, 2018-03-28T15:45:12.880Z
--   
--   <a>$sel:toTimeStamp:ListDeviceEvents'</a>,
--   <a>listDeviceEvents_toTimeStamp</a> - The end date for the device
--   event query, in ISO8061 format. For example, 2018-03-28T15:45:12.880Z
newListDeviceEvents :: Text -> UTCTime -> UTCTime -> ListDeviceEvents

-- | The token to retrieve the next set of results.
listDeviceEvents_nextToken :: Lens' ListDeviceEvents (Maybe Text)

-- | The maximum number of results to return per request. If not set, a
--   default value of 100 is used.
listDeviceEvents_maxResults :: Lens' ListDeviceEvents (Maybe Natural)

-- | The unique identifier of the device.
listDeviceEvents_deviceId :: Lens' ListDeviceEvents Text

-- | The start date for the device event query, in ISO8061 format. For
--   example, 2018-03-28T15:45:12.880Z
listDeviceEvents_fromTimeStamp :: Lens' ListDeviceEvents UTCTime

-- | The end date for the device event query, in ISO8061 format. For
--   example, 2018-03-28T15:45:12.880Z
listDeviceEvents_toTimeStamp :: Lens' ListDeviceEvents UTCTime

-- | <i>See:</i> <a>newListDeviceEventsResponse</a> smart constructor.
data ListDeviceEventsResponse
ListDeviceEventsResponse' :: Maybe Text -> Maybe [DeviceEvent] -> Int -> ListDeviceEventsResponse

-- | The token to retrieve the next set of results.
[$sel:nextToken:ListDeviceEventsResponse'] :: ListDeviceEventsResponse -> Maybe Text

-- | An array of zero or more elements describing the event(s) associated
--   with the device.
[$sel:events:ListDeviceEventsResponse'] :: ListDeviceEventsResponse -> Maybe [DeviceEvent]

-- | The response's http status code.
[$sel:httpStatus:ListDeviceEventsResponse'] :: ListDeviceEventsResponse -> Int

-- | Create a value of <a>ListDeviceEventsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeviceEvents'</a>,
--   <a>listDeviceEventsResponse_nextToken</a> - The token to retrieve the
--   next set of results.
--   
--   <a>$sel:events:ListDeviceEventsResponse'</a>,
--   <a>listDeviceEventsResponse_events</a> - An array of zero or more
--   elements describing the event(s) associated with the device.
--   
--   <a>$sel:httpStatus:ListDeviceEventsResponse'</a>,
--   <a>listDeviceEventsResponse_httpStatus</a> - The response's http
--   status code.
newListDeviceEventsResponse :: Int -> ListDeviceEventsResponse

-- | The token to retrieve the next set of results.
listDeviceEventsResponse_nextToken :: Lens' ListDeviceEventsResponse (Maybe Text)

-- | An array of zero or more elements describing the event(s) associated
--   with the device.
listDeviceEventsResponse_events :: Lens' ListDeviceEventsResponse (Maybe [DeviceEvent])

-- | The response's http status code.
listDeviceEventsResponse_httpStatus :: Lens' ListDeviceEventsResponse Int
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.ListDeviceEvents.ListDeviceEvents
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.ListDeviceEvents.ListDeviceEvents
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.ListDeviceEvents.ListDeviceEvents
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.ListDeviceEvents.ListDeviceEvents
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.ListDeviceEvents.ListDeviceEventsResponse
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.ListDeviceEvents.ListDeviceEventsResponse
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.ListDeviceEvents.ListDeviceEventsResponse
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.ListDeviceEvents.ListDeviceEventsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IoT1ClickDevices.ListDeviceEvents.ListDeviceEvents
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.ListDeviceEvents.ListDeviceEventsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.IoT1ClickDevices.ListDeviceEvents.ListDeviceEvents
instance Data.Hashable.Class.Hashable Network.AWS.IoT1ClickDevices.ListDeviceEvents.ListDeviceEvents
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.ListDeviceEvents.ListDeviceEvents
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IoT1ClickDevices.ListDeviceEvents.ListDeviceEvents
instance Network.AWS.Data.Path.ToPath Network.AWS.IoT1ClickDevices.ListDeviceEvents.ListDeviceEvents
instance Network.AWS.Data.Query.ToQuery Network.AWS.IoT1ClickDevices.ListDeviceEvents.ListDeviceEvents


-- | Given a device ID, issues a request to invoke a named device method
--   (with possible parameters). See the "Example POST" code snippet below.
module Network.AWS.IoT1ClickDevices.InvokeDeviceMethod

-- | <i>See:</i> <a>newInvokeDeviceMethod</a> smart constructor.
data InvokeDeviceMethod
InvokeDeviceMethod' :: Maybe Text -> Maybe DeviceMethod -> Text -> InvokeDeviceMethod

-- | A JSON encoded string containing the device method request parameters.
[$sel:deviceMethodParameters:InvokeDeviceMethod'] :: InvokeDeviceMethod -> Maybe Text

-- | The device method to invoke.
[$sel:deviceMethod:InvokeDeviceMethod'] :: InvokeDeviceMethod -> Maybe DeviceMethod

-- | The unique identifier of the device.
[$sel:deviceId:InvokeDeviceMethod'] :: InvokeDeviceMethod -> Text

-- | Create a value of <a>InvokeDeviceMethod</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceMethodParameters:InvokeDeviceMethod'</a>,
--   <a>invokeDeviceMethod_deviceMethodParameters</a> - A JSON encoded
--   string containing the device method request parameters.
--   
--   <a>$sel:deviceMethod:InvokeDeviceMethod'</a>,
--   <a>invokeDeviceMethod_deviceMethod</a> - The device method to invoke.
--   
--   <a>$sel:deviceId:InvokeDeviceMethod'</a>,
--   <a>invokeDeviceMethod_deviceId</a> - The unique identifier of the
--   device.
newInvokeDeviceMethod :: Text -> InvokeDeviceMethod

-- | A JSON encoded string containing the device method request parameters.
invokeDeviceMethod_deviceMethodParameters :: Lens' InvokeDeviceMethod (Maybe Text)

-- | The device method to invoke.
invokeDeviceMethod_deviceMethod :: Lens' InvokeDeviceMethod (Maybe DeviceMethod)

-- | The unique identifier of the device.
invokeDeviceMethod_deviceId :: Lens' InvokeDeviceMethod Text

-- | <i>See:</i> <a>newInvokeDeviceMethodResponse</a> smart constructor.
data InvokeDeviceMethodResponse
InvokeDeviceMethodResponse' :: Maybe Text -> Int -> InvokeDeviceMethodResponse

-- | A JSON encoded string containing the device method response.
[$sel:deviceMethodResponse:InvokeDeviceMethodResponse'] :: InvokeDeviceMethodResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:InvokeDeviceMethodResponse'] :: InvokeDeviceMethodResponse -> Int

-- | Create a value of <a>InvokeDeviceMethodResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceMethodResponse:InvokeDeviceMethodResponse'</a>,
--   <a>invokeDeviceMethodResponse_deviceMethodResponse</a> - A JSON
--   encoded string containing the device method response.
--   
--   <a>$sel:httpStatus:InvokeDeviceMethodResponse'</a>,
--   <a>invokeDeviceMethodResponse_httpStatus</a> - The response's http
--   status code.
newInvokeDeviceMethodResponse :: Int -> InvokeDeviceMethodResponse

-- | A JSON encoded string containing the device method response.
invokeDeviceMethodResponse_deviceMethodResponse :: Lens' InvokeDeviceMethodResponse (Maybe Text)

-- | The response's http status code.
invokeDeviceMethodResponse_httpStatus :: Lens' InvokeDeviceMethodResponse Int
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.InvokeDeviceMethod.InvokeDeviceMethod
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.InvokeDeviceMethod.InvokeDeviceMethod
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.InvokeDeviceMethod.InvokeDeviceMethod
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.InvokeDeviceMethod.InvokeDeviceMethod
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.InvokeDeviceMethod.InvokeDeviceMethodResponse
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.InvokeDeviceMethod.InvokeDeviceMethodResponse
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.InvokeDeviceMethod.InvokeDeviceMethodResponse
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.InvokeDeviceMethod.InvokeDeviceMethodResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IoT1ClickDevices.InvokeDeviceMethod.InvokeDeviceMethod
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.InvokeDeviceMethod.InvokeDeviceMethodResponse
instance Data.Hashable.Class.Hashable Network.AWS.IoT1ClickDevices.InvokeDeviceMethod.InvokeDeviceMethod
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.InvokeDeviceMethod.InvokeDeviceMethod
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IoT1ClickDevices.InvokeDeviceMethod.InvokeDeviceMethod
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IoT1ClickDevices.InvokeDeviceMethod.InvokeDeviceMethod
instance Network.AWS.Data.Path.ToPath Network.AWS.IoT1ClickDevices.InvokeDeviceMethod.InvokeDeviceMethod
instance Network.AWS.Data.Query.ToQuery Network.AWS.IoT1ClickDevices.InvokeDeviceMethod.InvokeDeviceMethod


-- | Given a device ID, initiates a claim request for the associated
--   device.
--   
--   Claiming a device consists of initiating a claim, then publishing a
--   device event, and finalizing the claim. For a device of type button, a
--   device event can be published by simply clicking the device.
module Network.AWS.IoT1ClickDevices.InitiateDeviceClaim

-- | <i>See:</i> <a>newInitiateDeviceClaim</a> smart constructor.
data InitiateDeviceClaim
InitiateDeviceClaim' :: Text -> InitiateDeviceClaim

-- | The unique identifier of the device.
[$sel:deviceId:InitiateDeviceClaim'] :: InitiateDeviceClaim -> Text

-- | Create a value of <a>InitiateDeviceClaim</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:InitiateDeviceClaim'</a>,
--   <a>initiateDeviceClaim_deviceId</a> - The unique identifier of the
--   device.
newInitiateDeviceClaim :: Text -> InitiateDeviceClaim

-- | The unique identifier of the device.
initiateDeviceClaim_deviceId :: Lens' InitiateDeviceClaim Text

-- | <i>See:</i> <a>newInitiateDeviceClaimResponse</a> smart constructor.
data InitiateDeviceClaimResponse
InitiateDeviceClaimResponse' :: Maybe Text -> Int -> InitiateDeviceClaimResponse

-- | The device's final claim state.
[$sel:state:InitiateDeviceClaimResponse'] :: InitiateDeviceClaimResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:InitiateDeviceClaimResponse'] :: InitiateDeviceClaimResponse -> Int

-- | Create a value of <a>InitiateDeviceClaimResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:InitiateDeviceClaimResponse'</a>,
--   <a>initiateDeviceClaimResponse_state</a> - The device's final claim
--   state.
--   
--   <a>$sel:httpStatus:InitiateDeviceClaimResponse'</a>,
--   <a>initiateDeviceClaimResponse_httpStatus</a> - The response's http
--   status code.
newInitiateDeviceClaimResponse :: Int -> InitiateDeviceClaimResponse

-- | The device's final claim state.
initiateDeviceClaimResponse_state :: Lens' InitiateDeviceClaimResponse (Maybe Text)

-- | The response's http status code.
initiateDeviceClaimResponse_httpStatus :: Lens' InitiateDeviceClaimResponse Int
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.InitiateDeviceClaim.InitiateDeviceClaim
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.InitiateDeviceClaim.InitiateDeviceClaim
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.InitiateDeviceClaim.InitiateDeviceClaim
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.InitiateDeviceClaim.InitiateDeviceClaim
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.InitiateDeviceClaim.InitiateDeviceClaimResponse
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.InitiateDeviceClaim.InitiateDeviceClaimResponse
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.InitiateDeviceClaim.InitiateDeviceClaimResponse
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.InitiateDeviceClaim.InitiateDeviceClaimResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IoT1ClickDevices.InitiateDeviceClaim.InitiateDeviceClaim
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.InitiateDeviceClaim.InitiateDeviceClaimResponse
instance Data.Hashable.Class.Hashable Network.AWS.IoT1ClickDevices.InitiateDeviceClaim.InitiateDeviceClaim
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.InitiateDeviceClaim.InitiateDeviceClaim
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IoT1ClickDevices.InitiateDeviceClaim.InitiateDeviceClaim
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IoT1ClickDevices.InitiateDeviceClaim.InitiateDeviceClaim
instance Network.AWS.Data.Path.ToPath Network.AWS.IoT1ClickDevices.InitiateDeviceClaim.InitiateDeviceClaim
instance Network.AWS.Data.Query.ToQuery Network.AWS.IoT1ClickDevices.InitiateDeviceClaim.InitiateDeviceClaim


-- | Given a device ID, returns the invokable methods associated with the
--   device.
module Network.AWS.IoT1ClickDevices.GetDeviceMethods

-- | <i>See:</i> <a>newGetDeviceMethods</a> smart constructor.
data GetDeviceMethods
GetDeviceMethods' :: Text -> GetDeviceMethods

-- | The unique identifier of the device.
[$sel:deviceId:GetDeviceMethods'] :: GetDeviceMethods -> Text

-- | Create a value of <a>GetDeviceMethods</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:GetDeviceMethods'</a>,
--   <a>getDeviceMethods_deviceId</a> - The unique identifier of the
--   device.
newGetDeviceMethods :: Text -> GetDeviceMethods

-- | The unique identifier of the device.
getDeviceMethods_deviceId :: Lens' GetDeviceMethods Text

-- | <i>See:</i> <a>newGetDeviceMethodsResponse</a> smart constructor.
data GetDeviceMethodsResponse
GetDeviceMethodsResponse' :: Maybe [DeviceMethod] -> Int -> GetDeviceMethodsResponse

-- | List of available device APIs.
[$sel:deviceMethods:GetDeviceMethodsResponse'] :: GetDeviceMethodsResponse -> Maybe [DeviceMethod]

-- | The response's http status code.
[$sel:httpStatus:GetDeviceMethodsResponse'] :: GetDeviceMethodsResponse -> Int

-- | Create a value of <a>GetDeviceMethodsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceMethods:GetDeviceMethodsResponse'</a>,
--   <a>getDeviceMethodsResponse_deviceMethods</a> - List of available
--   device APIs.
--   
--   <a>$sel:httpStatus:GetDeviceMethodsResponse'</a>,
--   <a>getDeviceMethodsResponse_httpStatus</a> - The response's http
--   status code.
newGetDeviceMethodsResponse :: Int -> GetDeviceMethodsResponse

-- | List of available device APIs.
getDeviceMethodsResponse_deviceMethods :: Lens' GetDeviceMethodsResponse (Maybe [DeviceMethod])

-- | The response's http status code.
getDeviceMethodsResponse_httpStatus :: Lens' GetDeviceMethodsResponse Int
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.GetDeviceMethods.GetDeviceMethods
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.GetDeviceMethods.GetDeviceMethods
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.GetDeviceMethods.GetDeviceMethods
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.GetDeviceMethods.GetDeviceMethods
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.GetDeviceMethods.GetDeviceMethodsResponse
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.GetDeviceMethods.GetDeviceMethodsResponse
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.GetDeviceMethods.GetDeviceMethodsResponse
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.GetDeviceMethods.GetDeviceMethodsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IoT1ClickDevices.GetDeviceMethods.GetDeviceMethods
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.GetDeviceMethods.GetDeviceMethodsResponse
instance Data.Hashable.Class.Hashable Network.AWS.IoT1ClickDevices.GetDeviceMethods.GetDeviceMethods
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.GetDeviceMethods.GetDeviceMethods
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IoT1ClickDevices.GetDeviceMethods.GetDeviceMethods
instance Network.AWS.Data.Path.ToPath Network.AWS.IoT1ClickDevices.GetDeviceMethods.GetDeviceMethods
instance Network.AWS.Data.Query.ToQuery Network.AWS.IoT1ClickDevices.GetDeviceMethods.GetDeviceMethods


-- | Given a device ID, finalizes the claim request for the associated
--   device.
--   
--   Claiming a device consists of initiating a claim, then publishing a
--   device event, and finalizing the claim. For a device of type button, a
--   device event can be published by simply clicking the device.
module Network.AWS.IoT1ClickDevices.FinalizeDeviceClaim

-- | <i>See:</i> <a>newFinalizeDeviceClaim</a> smart constructor.
data FinalizeDeviceClaim
FinalizeDeviceClaim' :: Maybe (HashMap Text Text) -> Text -> FinalizeDeviceClaim

-- | A collection of key/value pairs defining the resource tags. For
--   example, { "tags": {"key1": "value1", "key2": "value2"} }. For more
--   information, see <a>AWS Tagging Strategies</a>.
[$sel:tags:FinalizeDeviceClaim'] :: FinalizeDeviceClaim -> Maybe (HashMap Text Text)

-- | The unique identifier of the device.
[$sel:deviceId:FinalizeDeviceClaim'] :: FinalizeDeviceClaim -> Text

-- | Create a value of <a>FinalizeDeviceClaim</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:FinalizeDeviceClaim'</a>, <a>finalizeDeviceClaim_tags</a>
--   - A collection of key/value pairs defining the resource tags. For
--   example, { "tags": {"key1": "value1", "key2": "value2"} }. For more
--   information, see <a>AWS Tagging Strategies</a>.
--   
--   <a>$sel:deviceId:FinalizeDeviceClaim'</a>,
--   <a>finalizeDeviceClaim_deviceId</a> - The unique identifier of the
--   device.
newFinalizeDeviceClaim :: Text -> FinalizeDeviceClaim

-- | A collection of key/value pairs defining the resource tags. For
--   example, { "tags": {"key1": "value1", "key2": "value2"} }. For more
--   information, see <a>AWS Tagging Strategies</a>.
finalizeDeviceClaim_tags :: Lens' FinalizeDeviceClaim (Maybe (HashMap Text Text))

-- | The unique identifier of the device.
finalizeDeviceClaim_deviceId :: Lens' FinalizeDeviceClaim Text

-- | <i>See:</i> <a>newFinalizeDeviceClaimResponse</a> smart constructor.
data FinalizeDeviceClaimResponse
FinalizeDeviceClaimResponse' :: Maybe Text -> Int -> FinalizeDeviceClaimResponse

-- | The device's final claim state.
[$sel:state:FinalizeDeviceClaimResponse'] :: FinalizeDeviceClaimResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:FinalizeDeviceClaimResponse'] :: FinalizeDeviceClaimResponse -> Int

-- | Create a value of <a>FinalizeDeviceClaimResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:FinalizeDeviceClaimResponse'</a>,
--   <a>finalizeDeviceClaimResponse_state</a> - The device's final claim
--   state.
--   
--   <a>$sel:httpStatus:FinalizeDeviceClaimResponse'</a>,
--   <a>finalizeDeviceClaimResponse_httpStatus</a> - The response's http
--   status code.
newFinalizeDeviceClaimResponse :: Int -> FinalizeDeviceClaimResponse

-- | The device's final claim state.
finalizeDeviceClaimResponse_state :: Lens' FinalizeDeviceClaimResponse (Maybe Text)

-- | The response's http status code.
finalizeDeviceClaimResponse_httpStatus :: Lens' FinalizeDeviceClaimResponse Int
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.FinalizeDeviceClaim.FinalizeDeviceClaim
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.FinalizeDeviceClaim.FinalizeDeviceClaim
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.FinalizeDeviceClaim.FinalizeDeviceClaim
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.FinalizeDeviceClaim.FinalizeDeviceClaim
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.FinalizeDeviceClaim.FinalizeDeviceClaimResponse
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.FinalizeDeviceClaim.FinalizeDeviceClaimResponse
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.FinalizeDeviceClaim.FinalizeDeviceClaimResponse
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.FinalizeDeviceClaim.FinalizeDeviceClaimResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IoT1ClickDevices.FinalizeDeviceClaim.FinalizeDeviceClaim
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.FinalizeDeviceClaim.FinalizeDeviceClaimResponse
instance Data.Hashable.Class.Hashable Network.AWS.IoT1ClickDevices.FinalizeDeviceClaim.FinalizeDeviceClaim
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.FinalizeDeviceClaim.FinalizeDeviceClaim
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IoT1ClickDevices.FinalizeDeviceClaim.FinalizeDeviceClaim
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IoT1ClickDevices.FinalizeDeviceClaim.FinalizeDeviceClaim
instance Network.AWS.Data.Path.ToPath Network.AWS.IoT1ClickDevices.FinalizeDeviceClaim.FinalizeDeviceClaim
instance Network.AWS.Data.Query.ToQuery Network.AWS.IoT1ClickDevices.FinalizeDeviceClaim.FinalizeDeviceClaim


-- | Given a device ID, returns a DescribeDeviceResponse object describing
--   the details of the device.
module Network.AWS.IoT1ClickDevices.DescribeDevice

-- | <i>See:</i> <a>newDescribeDevice</a> smart constructor.
data DescribeDevice
DescribeDevice' :: Text -> DescribeDevice

-- | The unique identifier of the device.
[$sel:deviceId:DescribeDevice'] :: DescribeDevice -> Text

-- | Create a value of <a>DescribeDevice</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:DescribeDevice'</a>, <a>describeDevice_deviceId</a> -
--   The unique identifier of the device.
newDescribeDevice :: Text -> DescribeDevice

-- | The unique identifier of the device.
describeDevice_deviceId :: Lens' DescribeDevice Text

-- | <i>See:</i> <a>newDescribeDeviceResponse</a> smart constructor.
data DescribeDeviceResponse
DescribeDeviceResponse' :: Maybe DeviceDescription -> Int -> DescribeDeviceResponse

-- | Device details.
[$sel:deviceDescription:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Maybe DeviceDescription

-- | The response's http status code.
[$sel:httpStatus:DescribeDeviceResponse'] :: DescribeDeviceResponse -> Int

-- | Create a value of <a>DescribeDeviceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceDescription:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_deviceDescription</a> - Device details.
--   
--   <a>$sel:httpStatus:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_httpStatus</a> - The response's http status
--   code.
newDescribeDeviceResponse :: Int -> DescribeDeviceResponse

-- | Device details.
describeDeviceResponse_deviceDescription :: Lens' DescribeDeviceResponse (Maybe DeviceDescription)

-- | The response's http status code.
describeDeviceResponse_httpStatus :: Lens' DescribeDeviceResponse Int
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.DescribeDevice.DescribeDevice
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.DescribeDevice.DescribeDevice
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.DescribeDevice.DescribeDevice
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.DescribeDevice.DescribeDevice
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.DescribeDevice.DescribeDeviceResponse
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.DescribeDevice.DescribeDeviceResponse
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.DescribeDevice.DescribeDeviceResponse
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.DescribeDevice.DescribeDeviceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IoT1ClickDevices.DescribeDevice.DescribeDevice
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.DescribeDevice.DescribeDeviceResponse
instance Data.Hashable.Class.Hashable Network.AWS.IoT1ClickDevices.DescribeDevice.DescribeDevice
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.DescribeDevice.DescribeDevice
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IoT1ClickDevices.DescribeDevice.DescribeDevice
instance Network.AWS.Data.Path.ToPath Network.AWS.IoT1ClickDevices.DescribeDevice.DescribeDevice
instance Network.AWS.Data.Query.ToQuery Network.AWS.IoT1ClickDevices.DescribeDevice.DescribeDevice


-- | Adds device(s) to your account (i.e., claim one or more devices) if
--   and only if you received a claim code with the device(s).
module Network.AWS.IoT1ClickDevices.ClaimDevicesByClaimCode

-- | <i>See:</i> <a>newClaimDevicesByClaimCode</a> smart constructor.
data ClaimDevicesByClaimCode
ClaimDevicesByClaimCode' :: Text -> ClaimDevicesByClaimCode

-- | The claim code, starting with "C-", as provided by the device
--   manufacturer.
[$sel:claimCode:ClaimDevicesByClaimCode'] :: ClaimDevicesByClaimCode -> Text

-- | Create a value of <a>ClaimDevicesByClaimCode</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:claimCode:ClaimDevicesByClaimCode'</a>,
--   <a>claimDevicesByClaimCode_claimCode</a> - The claim code, starting
--   with "C-", as provided by the device manufacturer.
newClaimDevicesByClaimCode :: Text -> ClaimDevicesByClaimCode

-- | The claim code, starting with "C-", as provided by the device
--   manufacturer.
claimDevicesByClaimCode_claimCode :: Lens' ClaimDevicesByClaimCode Text

-- | <i>See:</i> <a>newClaimDevicesByClaimCodeResponse</a> smart
--   constructor.
data ClaimDevicesByClaimCodeResponse
ClaimDevicesByClaimCodeResponse' :: Maybe Text -> Maybe Int -> Int -> ClaimDevicesByClaimCodeResponse

-- | The claim code provided by the device manufacturer.
[$sel:claimCode:ClaimDevicesByClaimCodeResponse'] :: ClaimDevicesByClaimCodeResponse -> Maybe Text

-- | The total number of devices associated with the claim code that has
--   been processed in the claim request.
[$sel:total:ClaimDevicesByClaimCodeResponse'] :: ClaimDevicesByClaimCodeResponse -> Maybe Int

-- | The response's http status code.
[$sel:httpStatus:ClaimDevicesByClaimCodeResponse'] :: ClaimDevicesByClaimCodeResponse -> Int

-- | Create a value of <a>ClaimDevicesByClaimCodeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:claimCode:ClaimDevicesByClaimCode'</a>,
--   <a>claimDevicesByClaimCodeResponse_claimCode</a> - The claim code
--   provided by the device manufacturer.
--   
--   <a>$sel:total:ClaimDevicesByClaimCodeResponse'</a>,
--   <a>claimDevicesByClaimCodeResponse_total</a> - The total number of
--   devices associated with the claim code that has been processed in the
--   claim request.
--   
--   <a>$sel:httpStatus:ClaimDevicesByClaimCodeResponse'</a>,
--   <a>claimDevicesByClaimCodeResponse_httpStatus</a> - The response's
--   http status code.
newClaimDevicesByClaimCodeResponse :: Int -> ClaimDevicesByClaimCodeResponse

-- | The claim code provided by the device manufacturer.
claimDevicesByClaimCodeResponse_claimCode :: Lens' ClaimDevicesByClaimCodeResponse (Maybe Text)

-- | The total number of devices associated with the claim code that has
--   been processed in the claim request.
claimDevicesByClaimCodeResponse_total :: Lens' ClaimDevicesByClaimCodeResponse (Maybe Int)

-- | The response's http status code.
claimDevicesByClaimCodeResponse_httpStatus :: Lens' ClaimDevicesByClaimCodeResponse Int
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.ClaimDevicesByClaimCode.ClaimDevicesByClaimCode
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.ClaimDevicesByClaimCode.ClaimDevicesByClaimCode
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.ClaimDevicesByClaimCode.ClaimDevicesByClaimCode
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.ClaimDevicesByClaimCode.ClaimDevicesByClaimCode
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.ClaimDevicesByClaimCode.ClaimDevicesByClaimCodeResponse
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.ClaimDevicesByClaimCode.ClaimDevicesByClaimCodeResponse
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.ClaimDevicesByClaimCode.ClaimDevicesByClaimCodeResponse
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.ClaimDevicesByClaimCode.ClaimDevicesByClaimCodeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IoT1ClickDevices.ClaimDevicesByClaimCode.ClaimDevicesByClaimCode
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.ClaimDevicesByClaimCode.ClaimDevicesByClaimCodeResponse
instance Data.Hashable.Class.Hashable Network.AWS.IoT1ClickDevices.ClaimDevicesByClaimCode.ClaimDevicesByClaimCode
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.ClaimDevicesByClaimCode.ClaimDevicesByClaimCode
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IoT1ClickDevices.ClaimDevicesByClaimCode.ClaimDevicesByClaimCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IoT1ClickDevices.ClaimDevicesByClaimCode.ClaimDevicesByClaimCode
instance Network.AWS.Data.Path.ToPath Network.AWS.IoT1ClickDevices.ClaimDevicesByClaimCode.ClaimDevicesByClaimCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.IoT1ClickDevices.ClaimDevicesByClaimCode.ClaimDevicesByClaimCode


-- | Disassociates a device from your AWS account using its device ID.
module Network.AWS.IoT1ClickDevices.UnclaimDevice

-- | <i>See:</i> <a>newUnclaimDevice</a> smart constructor.
data UnclaimDevice
UnclaimDevice' :: Text -> UnclaimDevice

-- | The unique identifier of the device.
[$sel:deviceId:UnclaimDevice'] :: UnclaimDevice -> Text

-- | Create a value of <a>UnclaimDevice</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:UnclaimDevice'</a>, <a>unclaimDevice_deviceId</a> -
--   The unique identifier of the device.
newUnclaimDevice :: Text -> UnclaimDevice

-- | The unique identifier of the device.
unclaimDevice_deviceId :: Lens' UnclaimDevice Text

-- | <i>See:</i> <a>newUnclaimDeviceResponse</a> smart constructor.
data UnclaimDeviceResponse
UnclaimDeviceResponse' :: Maybe Text -> Int -> UnclaimDeviceResponse

-- | The device's final claim state.
[$sel:state:UnclaimDeviceResponse'] :: UnclaimDeviceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UnclaimDeviceResponse'] :: UnclaimDeviceResponse -> Int

-- | Create a value of <a>UnclaimDeviceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:UnclaimDeviceResponse'</a>,
--   <a>unclaimDeviceResponse_state</a> - The device's final claim state.
--   
--   <a>$sel:httpStatus:UnclaimDeviceResponse'</a>,
--   <a>unclaimDeviceResponse_httpStatus</a> - The response's http status
--   code.
newUnclaimDeviceResponse :: Int -> UnclaimDeviceResponse

-- | The device's final claim state.
unclaimDeviceResponse_state :: Lens' UnclaimDeviceResponse (Maybe Text)

-- | The response's http status code.
unclaimDeviceResponse_httpStatus :: Lens' UnclaimDeviceResponse Int
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.UnclaimDevice.UnclaimDevice
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.UnclaimDevice.UnclaimDevice
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.UnclaimDevice.UnclaimDevice
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.UnclaimDevice.UnclaimDevice
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.UnclaimDevice.UnclaimDeviceResponse
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.UnclaimDevice.UnclaimDeviceResponse
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.UnclaimDevice.UnclaimDeviceResponse
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.UnclaimDevice.UnclaimDeviceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IoT1ClickDevices.UnclaimDevice.UnclaimDevice
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.UnclaimDevice.UnclaimDeviceResponse
instance Data.Hashable.Class.Hashable Network.AWS.IoT1ClickDevices.UnclaimDevice.UnclaimDevice
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.UnclaimDevice.UnclaimDevice
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IoT1ClickDevices.UnclaimDevice.UnclaimDevice
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IoT1ClickDevices.UnclaimDevice.UnclaimDevice
instance Network.AWS.Data.Path.ToPath Network.AWS.IoT1ClickDevices.UnclaimDevice.UnclaimDevice
instance Network.AWS.Data.Query.ToQuery Network.AWS.IoT1ClickDevices.UnclaimDevice.UnclaimDevice


-- | Using tag keys, deletes the tags (key/value pairs) associated with the
--   specified resource ARN.
module Network.AWS.IoT1ClickDevices.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: [Text] -> Text -> UntagResource

-- | A collections of tag keys. For example, {"key1","key2"}
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | The ARN of the resource.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   collections of tag keys. For example, {"key1","key2"}
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The ARN of the resource.
newUntagResource :: Text -> UntagResource

-- | A collections of tag keys. For example, {"key1","key2"}
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The ARN of the resource.
untagResource_resourceArn :: Lens' UntagResource Text

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IoT1ClickDevices.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.IoT1ClickDevices.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IoT1ClickDevices.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.IoT1ClickDevices.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.IoT1ClickDevices.UntagResource.UntagResource


-- | Using a Boolean value (true or false), this operation enables or
--   disables the device given a device ID.
module Network.AWS.IoT1ClickDevices.UpdateDeviceState

-- | <i>See:</i> <a>newUpdateDeviceState</a> smart constructor.
data UpdateDeviceState
UpdateDeviceState' :: Maybe Bool -> Text -> UpdateDeviceState

-- | If true, the device is enabled. If false, the device is disabled.
[$sel:enabled:UpdateDeviceState'] :: UpdateDeviceState -> Maybe Bool

-- | The unique identifier of the device.
[$sel:deviceId:UpdateDeviceState'] :: UpdateDeviceState -> Text

-- | Create a value of <a>UpdateDeviceState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:UpdateDeviceState'</a>,
--   <a>updateDeviceState_enabled</a> - If true, the device is enabled. If
--   false, the device is disabled.
--   
--   <a>$sel:deviceId:UpdateDeviceState'</a>,
--   <a>updateDeviceState_deviceId</a> - The unique identifier of the
--   device.
newUpdateDeviceState :: Text -> UpdateDeviceState

-- | If true, the device is enabled. If false, the device is disabled.
updateDeviceState_enabled :: Lens' UpdateDeviceState (Maybe Bool)

-- | The unique identifier of the device.
updateDeviceState_deviceId :: Lens' UpdateDeviceState Text

-- | <i>See:</i> <a>newUpdateDeviceStateResponse</a> smart constructor.
data UpdateDeviceStateResponse
UpdateDeviceStateResponse' :: Int -> UpdateDeviceStateResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateDeviceStateResponse'] :: UpdateDeviceStateResponse -> Int

-- | Create a value of <a>UpdateDeviceStateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateDeviceStateResponse'</a>,
--   <a>updateDeviceStateResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDeviceStateResponse :: Int -> UpdateDeviceStateResponse

-- | The response's http status code.
updateDeviceStateResponse_httpStatus :: Lens' UpdateDeviceStateResponse Int
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.UpdateDeviceState.UpdateDeviceState
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.UpdateDeviceState.UpdateDeviceState
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.UpdateDeviceState.UpdateDeviceState
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.UpdateDeviceState.UpdateDeviceState
instance GHC.Generics.Generic Network.AWS.IoT1ClickDevices.UpdateDeviceState.UpdateDeviceStateResponse
instance GHC.Show.Show Network.AWS.IoT1ClickDevices.UpdateDeviceState.UpdateDeviceStateResponse
instance GHC.Read.Read Network.AWS.IoT1ClickDevices.UpdateDeviceState.UpdateDeviceStateResponse
instance GHC.Classes.Eq Network.AWS.IoT1ClickDevices.UpdateDeviceState.UpdateDeviceStateResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IoT1ClickDevices.UpdateDeviceState.UpdateDeviceState
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.UpdateDeviceState.UpdateDeviceStateResponse
instance Data.Hashable.Class.Hashable Network.AWS.IoT1ClickDevices.UpdateDeviceState.UpdateDeviceState
instance Control.DeepSeq.NFData Network.AWS.IoT1ClickDevices.UpdateDeviceState.UpdateDeviceState
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IoT1ClickDevices.UpdateDeviceState.UpdateDeviceState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IoT1ClickDevices.UpdateDeviceState.UpdateDeviceState
instance Network.AWS.Data.Path.ToPath Network.AWS.IoT1ClickDevices.UpdateDeviceState.UpdateDeviceState
instance Network.AWS.Data.Query.ToQuery Network.AWS.IoT1ClickDevices.UpdateDeviceState.UpdateDeviceState


module Network.AWS.IoT1ClickDevices.Lens

-- | The unique identifier of the device.
getDeviceMethods_deviceId :: Lens' GetDeviceMethods Text

-- | List of available device APIs.
getDeviceMethodsResponse_deviceMethods :: Lens' GetDeviceMethodsResponse (Maybe [DeviceMethod])

-- | The response's http status code.
getDeviceMethodsResponse_httpStatus :: Lens' GetDeviceMethodsResponse Int

-- | The ARN of the resource.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | A collection of key/value pairs defining the resource tags. For
--   example, { "tags": {"key1": "value1", "key2": "value2"} }. For more
--   information, see <a>AWS Tagging Strategies</a>.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The claim code, starting with "C-", as provided by the device
--   manufacturer.
claimDevicesByClaimCode_claimCode :: Lens' ClaimDevicesByClaimCode Text

-- | The claim code provided by the device manufacturer.
claimDevicesByClaimCodeResponse_claimCode :: Lens' ClaimDevicesByClaimCodeResponse (Maybe Text)

-- | The total number of devices associated with the claim code that has
--   been processed in the claim request.
claimDevicesByClaimCodeResponse_total :: Lens' ClaimDevicesByClaimCodeResponse (Maybe Int)

-- | The response's http status code.
claimDevicesByClaimCodeResponse_httpStatus :: Lens' ClaimDevicesByClaimCodeResponse Int

-- | The unique identifier of the device.
initiateDeviceClaim_deviceId :: Lens' InitiateDeviceClaim Text

-- | The device's final claim state.
initiateDeviceClaimResponse_state :: Lens' InitiateDeviceClaimResponse (Maybe Text)

-- | The response's http status code.
initiateDeviceClaimResponse_httpStatus :: Lens' InitiateDeviceClaimResponse Int

-- | A JSON encoded string containing the device method request parameters.
invokeDeviceMethod_deviceMethodParameters :: Lens' InvokeDeviceMethod (Maybe Text)

-- | The device method to invoke.
invokeDeviceMethod_deviceMethod :: Lens' InvokeDeviceMethod (Maybe DeviceMethod)

-- | The unique identifier of the device.
invokeDeviceMethod_deviceId :: Lens' InvokeDeviceMethod Text

-- | A JSON encoded string containing the device method response.
invokeDeviceMethodResponse_deviceMethodResponse :: Lens' InvokeDeviceMethodResponse (Maybe Text)

-- | The response's http status code.
invokeDeviceMethodResponse_httpStatus :: Lens' InvokeDeviceMethodResponse Int

-- | The unique identifier of the device.
describeDevice_deviceId :: Lens' DescribeDevice Text

-- | Device details.
describeDeviceResponse_deviceDescription :: Lens' DescribeDeviceResponse (Maybe DeviceDescription)

-- | The response's http status code.
describeDeviceResponse_httpStatus :: Lens' DescribeDeviceResponse Int

-- | The token to retrieve the next set of results.
listDeviceEvents_nextToken :: Lens' ListDeviceEvents (Maybe Text)

-- | The maximum number of results to return per request. If not set, a
--   default value of 100 is used.
listDeviceEvents_maxResults :: Lens' ListDeviceEvents (Maybe Natural)

-- | The unique identifier of the device.
listDeviceEvents_deviceId :: Lens' ListDeviceEvents Text

-- | The start date for the device event query, in ISO8061 format. For
--   example, 2018-03-28T15:45:12.880Z
listDeviceEvents_fromTimeStamp :: Lens' ListDeviceEvents UTCTime

-- | The end date for the device event query, in ISO8061 format. For
--   example, 2018-03-28T15:45:12.880Z
listDeviceEvents_toTimeStamp :: Lens' ListDeviceEvents UTCTime

-- | The token to retrieve the next set of results.
listDeviceEventsResponse_nextToken :: Lens' ListDeviceEventsResponse (Maybe Text)

-- | An array of zero or more elements describing the event(s) associated
--   with the device.
listDeviceEventsResponse_events :: Lens' ListDeviceEventsResponse (Maybe [DeviceEvent])

-- | The response's http status code.
listDeviceEventsResponse_httpStatus :: Lens' ListDeviceEventsResponse Int

-- | A collection of key/value pairs defining the resource tags. For
--   example, { "tags": {"key1": "value1", "key2": "value2"} }. For more
--   information, see <a>AWS Tagging Strategies</a>.
finalizeDeviceClaim_tags :: Lens' FinalizeDeviceClaim (Maybe (HashMap Text Text))

-- | The unique identifier of the device.
finalizeDeviceClaim_deviceId :: Lens' FinalizeDeviceClaim Text

-- | The device's final claim state.
finalizeDeviceClaimResponse_state :: Lens' FinalizeDeviceClaimResponse (Maybe Text)

-- | The response's http status code.
finalizeDeviceClaimResponse_httpStatus :: Lens' FinalizeDeviceClaimResponse Int

-- | The ARN of the resource.
tagResource_resourceArn :: Lens' TagResource Text

-- | A collection of key/value pairs defining the resource tags. For
--   example, { "tags": {"key1": "value1", "key2": "value2"} }. For more
--   information, see <a>AWS Tagging Strategies</a>.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | A collections of tag keys. For example, {"key1","key2"}
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The ARN of the resource.
untagResource_resourceArn :: Lens' UntagResource Text

-- | If true, the device is enabled. If false, the device is disabled.
updateDeviceState_enabled :: Lens' UpdateDeviceState (Maybe Bool)

-- | The unique identifier of the device.
updateDeviceState_deviceId :: Lens' UpdateDeviceState Text

-- | The response's http status code.
updateDeviceStateResponse_httpStatus :: Lens' UpdateDeviceStateResponse Int

-- | The unique identifier of the device.
unclaimDevice_deviceId :: Lens' UnclaimDevice Text

-- | The device's final claim state.
unclaimDeviceResponse_state :: Lens' UnclaimDeviceResponse (Maybe Text)

-- | The response's http status code.
unclaimDeviceResponse_httpStatus :: Lens' UnclaimDeviceResponse Int

-- | The token to retrieve the next set of results.
listDevices_nextToken :: Lens' ListDevices (Maybe Text)

-- | The type of the device, such as "button".
listDevices_deviceType :: Lens' ListDevices (Maybe Text)

-- | The maximum number of results to return per request. If not set, a
--   default value of 100 is used.
listDevices_maxResults :: Lens' ListDevices (Maybe Natural)

-- | The token to retrieve the next set of results.
listDevicesResponse_nextToken :: Lens' ListDevicesResponse (Maybe Text)

-- | A list of devices.
listDevicesResponse_devices :: Lens' ListDevicesResponse (Maybe [DeviceDescription])

-- | The response's http status code.
listDevicesResponse_httpStatus :: Lens' ListDevicesResponse Int

-- | The user specified attributes associated with the device for an event.
device_attributes :: Lens' Device (Maybe Attributes)

-- | The unique identifier of the device.
device_deviceId :: Lens' Device (Maybe Text)

-- | The device type, such as "button".
device_type :: Lens' Device (Maybe Text)

-- | A value between 0 and 1 inclusive, representing the fraction of life
--   remaining for the device.
deviceDescription_remainingLife :: Lens' DeviceDescription (Maybe Double)

-- | A Boolean value indicating whether or not the device is enabled.
deviceDescription_enabled :: Lens' DeviceDescription (Maybe Bool)

-- | The ARN of the device.
deviceDescription_arn :: Lens' DeviceDescription (Maybe Text)

-- | An array of zero or more elements of DeviceAttribute objects providing
--   user specified device attributes.
deviceDescription_attributes :: Lens' DeviceDescription (Maybe (HashMap Text Text))

-- | The unique identifier of the device.
deviceDescription_deviceId :: Lens' DeviceDescription (Maybe Text)

-- | The type of the device, such as "button".
deviceDescription_type :: Lens' DeviceDescription (Maybe Text)

-- | The tags currently associated with the AWS IoT 1-Click device.
deviceDescription_tags :: Lens' DeviceDescription (Maybe (HashMap Text Text))

-- | A serialized JSON object representing the device-type specific event.
deviceEvent_stdEvent :: Lens' DeviceEvent (Maybe Text)

-- | An object representing the device associated with the event.
deviceEvent_device :: Lens' DeviceEvent (Maybe Device)

-- | The name of the method applicable to the deviceType.
deviceMethod_methodName :: Lens' DeviceMethod (Maybe Text)

-- | The type of the device, such as "button".
deviceMethod_deviceType :: Lens' DeviceMethod (Maybe Text)


module Network.AWS.IoT1ClickDevices.Waiters


-- | Derived from API version <tt>2018-05-14</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Describes all of the AWS IoT 1-Click device-related API operations for
--   the service. Also provides sample requests, responses, and errors for
--   the supported web services protocols.
module Network.AWS.IoT1ClickDevices

-- | API version <tt>2018-05-14</tt> of the Amazon IoT 1-Click Devices
--   Service SDK configuration.
defaultService :: Service

-- | Prism for InvalidRequestException' errors.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Prism for PreconditionFailedException' errors.
_PreconditionFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Prism for ForbiddenException' errors.
_ForbiddenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Prism for RangeNotSatisfiableException' errors.
_RangeNotSatisfiableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Prism for InternalFailureException' errors.
_InternalFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Prism for ResourceConflictException' errors.
_ResourceConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Prism for ResourceNotFoundException' errors.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newGetDeviceMethods</a> smart constructor.
data GetDeviceMethods
GetDeviceMethods' :: Text -> GetDeviceMethods

-- | Create a value of <a>GetDeviceMethods</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:GetDeviceMethods'</a>,
--   <a>getDeviceMethods_deviceId</a> - The unique identifier of the
--   device.
newGetDeviceMethods :: Text -> GetDeviceMethods

-- | <i>See:</i> <a>newGetDeviceMethodsResponse</a> smart constructor.
data GetDeviceMethodsResponse
GetDeviceMethodsResponse' :: Maybe [DeviceMethod] -> Int -> GetDeviceMethodsResponse

-- | Create a value of <a>GetDeviceMethodsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceMethods:GetDeviceMethodsResponse'</a>,
--   <a>getDeviceMethodsResponse_deviceMethods</a> - List of available
--   device APIs.
--   
--   <a>$sel:httpStatus:GetDeviceMethodsResponse'</a>,
--   <a>getDeviceMethodsResponse_httpStatus</a> - The response's http
--   status code.
newGetDeviceMethodsResponse :: Int -> GetDeviceMethodsResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of the resource.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A collection of key/value
--   pairs defining the resource tags. For example, { "tags": {"key1":
--   "value1", "key2": "value2"} }. For more information, see <a>AWS
--   Tagging Strategies</a>.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newClaimDevicesByClaimCode</a> smart constructor.
data ClaimDevicesByClaimCode
ClaimDevicesByClaimCode' :: Text -> ClaimDevicesByClaimCode

-- | Create a value of <a>ClaimDevicesByClaimCode</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:claimCode:ClaimDevicesByClaimCode'</a>,
--   <a>claimDevicesByClaimCode_claimCode</a> - The claim code, starting
--   with "C-", as provided by the device manufacturer.
newClaimDevicesByClaimCode :: Text -> ClaimDevicesByClaimCode

-- | <i>See:</i> <a>newClaimDevicesByClaimCodeResponse</a> smart
--   constructor.
data ClaimDevicesByClaimCodeResponse
ClaimDevicesByClaimCodeResponse' :: Maybe Text -> Maybe Int -> Int -> ClaimDevicesByClaimCodeResponse

-- | Create a value of <a>ClaimDevicesByClaimCodeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:claimCode:ClaimDevicesByClaimCode'</a>,
--   <a>claimDevicesByClaimCodeResponse_claimCode</a> - The claim code
--   provided by the device manufacturer.
--   
--   <a>$sel:total:ClaimDevicesByClaimCodeResponse'</a>,
--   <a>claimDevicesByClaimCodeResponse_total</a> - The total number of
--   devices associated with the claim code that has been processed in the
--   claim request.
--   
--   <a>$sel:httpStatus:ClaimDevicesByClaimCodeResponse'</a>,
--   <a>claimDevicesByClaimCodeResponse_httpStatus</a> - The response's
--   http status code.
newClaimDevicesByClaimCodeResponse :: Int -> ClaimDevicesByClaimCodeResponse

-- | <i>See:</i> <a>newInitiateDeviceClaim</a> smart constructor.
data InitiateDeviceClaim
InitiateDeviceClaim' :: Text -> InitiateDeviceClaim

-- | Create a value of <a>InitiateDeviceClaim</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:InitiateDeviceClaim'</a>,
--   <a>initiateDeviceClaim_deviceId</a> - The unique identifier of the
--   device.
newInitiateDeviceClaim :: Text -> InitiateDeviceClaim

-- | <i>See:</i> <a>newInitiateDeviceClaimResponse</a> smart constructor.
data InitiateDeviceClaimResponse
InitiateDeviceClaimResponse' :: Maybe Text -> Int -> InitiateDeviceClaimResponse

-- | Create a value of <a>InitiateDeviceClaimResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:InitiateDeviceClaimResponse'</a>,
--   <a>initiateDeviceClaimResponse_state</a> - The device's final claim
--   state.
--   
--   <a>$sel:httpStatus:InitiateDeviceClaimResponse'</a>,
--   <a>initiateDeviceClaimResponse_httpStatus</a> - The response's http
--   status code.
newInitiateDeviceClaimResponse :: Int -> InitiateDeviceClaimResponse

-- | <i>See:</i> <a>newInvokeDeviceMethod</a> smart constructor.
data InvokeDeviceMethod
InvokeDeviceMethod' :: Maybe Text -> Maybe DeviceMethod -> Text -> InvokeDeviceMethod

-- | Create a value of <a>InvokeDeviceMethod</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceMethodParameters:InvokeDeviceMethod'</a>,
--   <a>invokeDeviceMethod_deviceMethodParameters</a> - A JSON encoded
--   string containing the device method request parameters.
--   
--   <a>$sel:deviceMethod:InvokeDeviceMethod'</a>,
--   <a>invokeDeviceMethod_deviceMethod</a> - The device method to invoke.
--   
--   <a>$sel:deviceId:InvokeDeviceMethod'</a>,
--   <a>invokeDeviceMethod_deviceId</a> - The unique identifier of the
--   device.
newInvokeDeviceMethod :: Text -> InvokeDeviceMethod

-- | <i>See:</i> <a>newInvokeDeviceMethodResponse</a> smart constructor.
data InvokeDeviceMethodResponse
InvokeDeviceMethodResponse' :: Maybe Text -> Int -> InvokeDeviceMethodResponse

-- | Create a value of <a>InvokeDeviceMethodResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceMethodResponse:InvokeDeviceMethodResponse'</a>,
--   <a>invokeDeviceMethodResponse_deviceMethodResponse</a> - A JSON
--   encoded string containing the device method response.
--   
--   <a>$sel:httpStatus:InvokeDeviceMethodResponse'</a>,
--   <a>invokeDeviceMethodResponse_httpStatus</a> - The response's http
--   status code.
newInvokeDeviceMethodResponse :: Int -> InvokeDeviceMethodResponse

-- | <i>See:</i> <a>newDescribeDevice</a> smart constructor.
data DescribeDevice
DescribeDevice' :: Text -> DescribeDevice

-- | Create a value of <a>DescribeDevice</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:DescribeDevice'</a>, <a>describeDevice_deviceId</a> -
--   The unique identifier of the device.
newDescribeDevice :: Text -> DescribeDevice

-- | <i>See:</i> <a>newDescribeDeviceResponse</a> smart constructor.
data DescribeDeviceResponse
DescribeDeviceResponse' :: Maybe DeviceDescription -> Int -> DescribeDeviceResponse

-- | Create a value of <a>DescribeDeviceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceDescription:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_deviceDescription</a> - Device details.
--   
--   <a>$sel:httpStatus:DescribeDeviceResponse'</a>,
--   <a>describeDeviceResponse_httpStatus</a> - The response's http status
--   code.
newDescribeDeviceResponse :: Int -> DescribeDeviceResponse

-- | <i>See:</i> <a>newListDeviceEvents</a> smart constructor.
data ListDeviceEvents
ListDeviceEvents' :: Maybe Text -> Maybe Natural -> Text -> POSIX -> POSIX -> ListDeviceEvents

-- | Create a value of <a>ListDeviceEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeviceEvents'</a>,
--   <a>listDeviceEvents_nextToken</a> - The token to retrieve the next set
--   of results.
--   
--   <a>$sel:maxResults:ListDeviceEvents'</a>,
--   <a>listDeviceEvents_maxResults</a> - The maximum number of results to
--   return per request. If not set, a default value of 100 is used.
--   
--   <a>$sel:deviceId:ListDeviceEvents'</a>,
--   <a>listDeviceEvents_deviceId</a> - The unique identifier of the
--   device.
--   
--   <a>$sel:fromTimeStamp:ListDeviceEvents'</a>,
--   <a>listDeviceEvents_fromTimeStamp</a> - The start date for the device
--   event query, in ISO8061 format. For example, 2018-03-28T15:45:12.880Z
--   
--   <a>$sel:toTimeStamp:ListDeviceEvents'</a>,
--   <a>listDeviceEvents_toTimeStamp</a> - The end date for the device
--   event query, in ISO8061 format. For example, 2018-03-28T15:45:12.880Z
newListDeviceEvents :: Text -> UTCTime -> UTCTime -> ListDeviceEvents

-- | <i>See:</i> <a>newListDeviceEventsResponse</a> smart constructor.
data ListDeviceEventsResponse
ListDeviceEventsResponse' :: Maybe Text -> Maybe [DeviceEvent] -> Int -> ListDeviceEventsResponse

-- | Create a value of <a>ListDeviceEventsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeviceEvents'</a>,
--   <a>listDeviceEventsResponse_nextToken</a> - The token to retrieve the
--   next set of results.
--   
--   <a>$sel:events:ListDeviceEventsResponse'</a>,
--   <a>listDeviceEventsResponse_events</a> - An array of zero or more
--   elements describing the event(s) associated with the device.
--   
--   <a>$sel:httpStatus:ListDeviceEventsResponse'</a>,
--   <a>listDeviceEventsResponse_httpStatus</a> - The response's http
--   status code.
newListDeviceEventsResponse :: Int -> ListDeviceEventsResponse

-- | <i>See:</i> <a>newFinalizeDeviceClaim</a> smart constructor.
data FinalizeDeviceClaim
FinalizeDeviceClaim' :: Maybe (HashMap Text Text) -> Text -> FinalizeDeviceClaim

-- | Create a value of <a>FinalizeDeviceClaim</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:FinalizeDeviceClaim'</a>, <a>finalizeDeviceClaim_tags</a>
--   - A collection of key/value pairs defining the resource tags. For
--   example, { "tags": {"key1": "value1", "key2": "value2"} }. For more
--   information, see <a>AWS Tagging Strategies</a>.
--   
--   <a>$sel:deviceId:FinalizeDeviceClaim'</a>,
--   <a>finalizeDeviceClaim_deviceId</a> - The unique identifier of the
--   device.
newFinalizeDeviceClaim :: Text -> FinalizeDeviceClaim

-- | <i>See:</i> <a>newFinalizeDeviceClaimResponse</a> smart constructor.
data FinalizeDeviceClaimResponse
FinalizeDeviceClaimResponse' :: Maybe Text -> Int -> FinalizeDeviceClaimResponse

-- | Create a value of <a>FinalizeDeviceClaimResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:FinalizeDeviceClaimResponse'</a>,
--   <a>finalizeDeviceClaimResponse_state</a> - The device's final claim
--   state.
--   
--   <a>$sel:httpStatus:FinalizeDeviceClaimResponse'</a>,
--   <a>finalizeDeviceClaimResponse_httpStatus</a> - The response's http
--   status code.
newFinalizeDeviceClaimResponse :: Int -> FinalizeDeviceClaimResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of the resource.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A collection
--   of key/value pairs defining the resource tags. For example, { "tags":
--   {"key1": "value1", "key2": "value2"} }. For more information, see
--   <a>AWS Tagging Strategies</a>.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: [Text] -> Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   collections of tag keys. For example, {"key1","key2"}
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The ARN of the resource.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse

-- | <i>See:</i> <a>newUpdateDeviceState</a> smart constructor.
data UpdateDeviceState
UpdateDeviceState' :: Maybe Bool -> Text -> UpdateDeviceState

-- | Create a value of <a>UpdateDeviceState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:UpdateDeviceState'</a>,
--   <a>updateDeviceState_enabled</a> - If true, the device is enabled. If
--   false, the device is disabled.
--   
--   <a>$sel:deviceId:UpdateDeviceState'</a>,
--   <a>updateDeviceState_deviceId</a> - The unique identifier of the
--   device.
newUpdateDeviceState :: Text -> UpdateDeviceState

-- | <i>See:</i> <a>newUpdateDeviceStateResponse</a> smart constructor.
data UpdateDeviceStateResponse
UpdateDeviceStateResponse' :: Int -> UpdateDeviceStateResponse

-- | Create a value of <a>UpdateDeviceStateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateDeviceStateResponse'</a>,
--   <a>updateDeviceStateResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDeviceStateResponse :: Int -> UpdateDeviceStateResponse

-- | <i>See:</i> <a>newUnclaimDevice</a> smart constructor.
data UnclaimDevice
UnclaimDevice' :: Text -> UnclaimDevice

-- | Create a value of <a>UnclaimDevice</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceId:UnclaimDevice'</a>, <a>unclaimDevice_deviceId</a> -
--   The unique identifier of the device.
newUnclaimDevice :: Text -> UnclaimDevice

-- | <i>See:</i> <a>newUnclaimDeviceResponse</a> smart constructor.
data UnclaimDeviceResponse
UnclaimDeviceResponse' :: Maybe Text -> Int -> UnclaimDeviceResponse

-- | Create a value of <a>UnclaimDeviceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:UnclaimDeviceResponse'</a>,
--   <a>unclaimDeviceResponse_state</a> - The device's final claim state.
--   
--   <a>$sel:httpStatus:UnclaimDeviceResponse'</a>,
--   <a>unclaimDeviceResponse_httpStatus</a> - The response's http status
--   code.
newUnclaimDeviceResponse :: Int -> UnclaimDeviceResponse

-- | <i>See:</i> <a>newListDevices</a> smart constructor.
data ListDevices
ListDevices' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListDevices

-- | Create a value of <a>ListDevices</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevices'</a>, <a>listDevices_nextToken</a> - The
--   token to retrieve the next set of results.
--   
--   <a>$sel:deviceType:ListDevices'</a>, <a>listDevices_deviceType</a> -
--   The type of the device, such as "button".
--   
--   <a>$sel:maxResults:ListDevices'</a>, <a>listDevices_maxResults</a> -
--   The maximum number of results to return per request. If not set, a
--   default value of 100 is used.
newListDevices :: ListDevices

-- | <i>See:</i> <a>newListDevicesResponse</a> smart constructor.
data ListDevicesResponse
ListDevicesResponse' :: Maybe Text -> Maybe [DeviceDescription] -> Int -> ListDevicesResponse

-- | Create a value of <a>ListDevicesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevices'</a>,
--   <a>listDevicesResponse_nextToken</a> - The token to retrieve the next
--   set of results.
--   
--   <a>$sel:devices:ListDevicesResponse'</a>,
--   <a>listDevicesResponse_devices</a> - A list of devices.
--   
--   <a>$sel:httpStatus:ListDevicesResponse'</a>,
--   <a>listDevicesResponse_httpStatus</a> - The response's http status
--   code.
newListDevicesResponse :: Int -> ListDevicesResponse

-- | <i>See:</i> <a>newAttributes</a> smart constructor.
data Attributes
Attributes' :: Attributes

-- | Create a value of <a>Attributes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAttributes :: Attributes

-- | <i>See:</i> <a>newDevice</a> smart constructor.
data Device
Device' :: Maybe Attributes -> Maybe Text -> Maybe Text -> Device

-- | Create a value of <a>Device</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:Device'</a>, <a>device_attributes</a> - The user
--   specified attributes associated with the device for an event.
--   
--   <a>$sel:deviceId:Device'</a>, <a>device_deviceId</a> - The unique
--   identifier of the device.
--   
--   <a>$sel:type':Device'</a>, <a>device_type</a> - The device type, such
--   as "button".
newDevice :: Device

-- | <i>See:</i> <a>newDeviceDescription</a> smart constructor.
data DeviceDescription
DeviceDescription' :: Maybe Double -> Maybe Bool -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> DeviceDescription

-- | Create a value of <a>DeviceDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:remainingLife:DeviceDescription'</a>,
--   <a>deviceDescription_remainingLife</a> - A value between 0 and 1
--   inclusive, representing the fraction of life remaining for the device.
--   
--   <a>$sel:enabled:DeviceDescription'</a>,
--   <a>deviceDescription_enabled</a> - A Boolean value indicating whether
--   or not the device is enabled.
--   
--   <a>$sel:arn:DeviceDescription'</a>, <a>deviceDescription_arn</a> - The
--   ARN of the device.
--   
--   <a>$sel:attributes:DeviceDescription'</a>,
--   <a>deviceDescription_attributes</a> - An array of zero or more
--   elements of DeviceAttribute objects providing user specified device
--   attributes.
--   
--   <a>$sel:deviceId:DeviceDescription'</a>,
--   <a>deviceDescription_deviceId</a> - The unique identifier of the
--   device.
--   
--   <a>$sel:type':DeviceDescription'</a>, <a>deviceDescription_type</a> -
--   The type of the device, such as "button".
--   
--   <a>$sel:tags:DeviceDescription'</a>, <a>deviceDescription_tags</a> -
--   The tags currently associated with the AWS IoT 1-Click device.
newDeviceDescription :: DeviceDescription

-- | <i>See:</i> <a>newDeviceEvent</a> smart constructor.
data DeviceEvent
DeviceEvent' :: Maybe Text -> Maybe Device -> DeviceEvent

-- | Create a value of <a>DeviceEvent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stdEvent:DeviceEvent'</a>, <a>deviceEvent_stdEvent</a> - A
--   serialized JSON object representing the device-type specific event.
--   
--   <a>$sel:device:DeviceEvent'</a>, <a>deviceEvent_device</a> - An object
--   representing the device associated with the event.
newDeviceEvent :: DeviceEvent

-- | <i>See:</i> <a>newDeviceMethod</a> smart constructor.
data DeviceMethod
DeviceMethod' :: Maybe Text -> Maybe Text -> DeviceMethod

-- | Create a value of <a>DeviceMethod</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:methodName:DeviceMethod'</a>, <a>deviceMethod_methodName</a> -
--   The name of the method applicable to the deviceType.
--   
--   <a>$sel:deviceType:DeviceMethod'</a>, <a>deviceMethod_deviceType</a> -
--   The type of the device, such as "button".
newDeviceMethod :: DeviceMethod
