-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-route53-autonamingZSamazonka-route53-autonaming
@version 2.0


module Network.AWS.Route53AutoNaming.Types.CustomHealthStatus
newtype CustomHealthStatus
CustomHealthStatus' :: Text -> CustomHealthStatus
[fromCustomHealthStatus] :: CustomHealthStatus -> Text
pattern CustomHealthStatus_HEALTHY :: CustomHealthStatus
pattern CustomHealthStatus_UNHEALTHY :: CustomHealthStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53AutoNaming.Types.CustomHealthStatus.CustomHealthStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53AutoNaming.Types.CustomHealthStatus.CustomHealthStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53AutoNaming.Types.CustomHealthStatus.CustomHealthStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.CustomHealthStatus.CustomHealthStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53AutoNaming.Types.CustomHealthStatus.CustomHealthStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.CustomHealthStatus.CustomHealthStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.Types.CustomHealthStatus.CustomHealthStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53AutoNaming.Types.CustomHealthStatus.CustomHealthStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53AutoNaming.Types.CustomHealthStatus.CustomHealthStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53AutoNaming.Types.CustomHealthStatus.CustomHealthStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Route53AutoNaming.Types.CustomHealthStatus.CustomHealthStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Route53AutoNaming.Types.CustomHealthStatus.CustomHealthStatus
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.CustomHealthStatus.CustomHealthStatus
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.CustomHealthStatus.CustomHealthStatus
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.CustomHealthStatus.CustomHealthStatus
instance GHC.Classes.Ord Network.AWS.Route53AutoNaming.Types.CustomHealthStatus.CustomHealthStatus
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.CustomHealthStatus.CustomHealthStatus
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.CustomHealthStatus.CustomHealthStatus
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.CustomHealthStatus.CustomHealthStatus


module Network.AWS.Route53AutoNaming.Types.FilterCondition
newtype FilterCondition
FilterCondition' :: Text -> FilterCondition
[fromFilterCondition] :: FilterCondition -> Text
pattern FilterCondition_BETWEEN :: FilterCondition
pattern FilterCondition_EQ :: FilterCondition
pattern FilterCondition_IN :: FilterCondition
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53AutoNaming.Types.FilterCondition.FilterCondition
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53AutoNaming.Types.FilterCondition.FilterCondition
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53AutoNaming.Types.FilterCondition.FilterCondition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.FilterCondition.FilterCondition
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53AutoNaming.Types.FilterCondition.FilterCondition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.FilterCondition.FilterCondition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.Types.FilterCondition.FilterCondition
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53AutoNaming.Types.FilterCondition.FilterCondition
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53AutoNaming.Types.FilterCondition.FilterCondition
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53AutoNaming.Types.FilterCondition.FilterCondition
instance Network.AWS.Data.Text.ToText Network.AWS.Route53AutoNaming.Types.FilterCondition.FilterCondition
instance Network.AWS.Data.Text.FromText Network.AWS.Route53AutoNaming.Types.FilterCondition.FilterCondition
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.FilterCondition.FilterCondition
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.FilterCondition.FilterCondition
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.FilterCondition.FilterCondition
instance GHC.Classes.Ord Network.AWS.Route53AutoNaming.Types.FilterCondition.FilterCondition
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.FilterCondition.FilterCondition
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.FilterCondition.FilterCondition
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.FilterCondition.FilterCondition


module Network.AWS.Route53AutoNaming.Types.HealthCheckCustomConfig

-- | A complex type that contains information about an optional custom
--   health check. A custom health check, which requires that you use a
--   third-party health checker to evaluate the health of your resources,
--   is useful in the following circumstances:
--   
--   <ul>
--   <li>You can't use a health check that's defined by
--   <tt>HealthCheckConfig</tt> because the resource isn't available over
--   the internet. For example, you can use a custom health check when the
--   instance is in an Amazon VPC. (To check the health of resources in a
--   VPC, the health checker must also be in the VPC.)</li>
--   <li>You want to use a third-party health checker regardless of where
--   your resources are located.</li>
--   </ul>
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   To change the status of a custom health check, submit an
--   <tt>UpdateInstanceCustomHealthStatus</tt> request. Cloud Map doesn't
--   monitor the status of the resource, it just keeps a record of the
--   status specified in the most recent
--   <tt>UpdateInstanceCustomHealthStatus</tt> request.
--   
--   Here's how custom health checks work:
--   
--   <ol>
--   <li>You create a service.</li>
--   <li>You register an instance.</li>
--   <li>You configure a third-party health checker to monitor the resource
--   that's associated with the new instance.Cloud Map doesn't check the
--   health of the resource directly.</li>
--   <li>The third-party health-checker determines that the resource is
--   unhealthy and notifies your application.</li>
--   <li>Your application submits an
--   <tt>UpdateInstanceCustomHealthStatus</tt> request.</li>
--   <li>Cloud Map waits for 30 seconds.</li>
--   <li>If another <tt>UpdateInstanceCustomHealthStatus</tt> request
--   doesn't arrive during that time to change the status back to healthy,
--   Cloud Map stops routing traffic to the resource.</li>
--   </ol>
--   
--   <i>See:</i> <a>newHealthCheckCustomConfig</a> smart constructor.
data HealthCheckCustomConfig
HealthCheckCustomConfig' :: Maybe Natural -> HealthCheckCustomConfig

-- | This parameter is no longer supported and is always set to 1. Cloud
--   Map waits for approximately 30 seconds after receiving an
--   <tt>UpdateInstanceCustomHealthStatus</tt> request before changing the
--   status of the service instance.
--   
--   The number of 30-second intervals that you want Cloud Map to wait
--   after receiving an <tt>UpdateInstanceCustomHealthStatus</tt> request
--   before it changes the health status of a service instance.
--   
--   Sending a second or subsequent
--   <tt>UpdateInstanceCustomHealthStatus</tt> request with the same value
--   before 30 seconds has passed doesn't accelerate the change. Cloud Map
--   still waits <tt>30</tt> seconds after the first request to make the
--   change.
[$sel:failureThreshold:HealthCheckCustomConfig'] :: HealthCheckCustomConfig -> Maybe Natural

-- | Create a value of <a>HealthCheckCustomConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureThreshold:HealthCheckCustomConfig'</a>,
--   <a>healthCheckCustomConfig_failureThreshold</a> - This parameter is no
--   longer supported and is always set to 1. Cloud Map waits for
--   approximately 30 seconds after receiving an
--   <tt>UpdateInstanceCustomHealthStatus</tt> request before changing the
--   status of the service instance.
--   
--   The number of 30-second intervals that you want Cloud Map to wait
--   after receiving an <tt>UpdateInstanceCustomHealthStatus</tt> request
--   before it changes the health status of a service instance.
--   
--   Sending a second or subsequent
--   <tt>UpdateInstanceCustomHealthStatus</tt> request with the same value
--   before 30 seconds has passed doesn't accelerate the change. Cloud Map
--   still waits <tt>30</tt> seconds after the first request to make the
--   change.
newHealthCheckCustomConfig :: HealthCheckCustomConfig

-- | This parameter is no longer supported and is always set to 1. Cloud
--   Map waits for approximately 30 seconds after receiving an
--   <tt>UpdateInstanceCustomHealthStatus</tt> request before changing the
--   status of the service instance.
--   
--   The number of 30-second intervals that you want Cloud Map to wait
--   after receiving an <tt>UpdateInstanceCustomHealthStatus</tt> request
--   before it changes the health status of a service instance.
--   
--   Sending a second or subsequent
--   <tt>UpdateInstanceCustomHealthStatus</tt> request with the same value
--   before 30 seconds has passed doesn't accelerate the change. Cloud Map
--   still waits <tt>30</tt> seconds after the first request to make the
--   change.
healthCheckCustomConfig_failureThreshold :: Lens' HealthCheckCustomConfig (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.HealthCheckCustomConfig.HealthCheckCustomConfig
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.HealthCheckCustomConfig.HealthCheckCustomConfig
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.HealthCheckCustomConfig.HealthCheckCustomConfig
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.HealthCheckCustomConfig.HealthCheckCustomConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.HealthCheckCustomConfig.HealthCheckCustomConfig
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.HealthCheckCustomConfig.HealthCheckCustomConfig
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.HealthCheckCustomConfig.HealthCheckCustomConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.HealthCheckCustomConfig.HealthCheckCustomConfig


module Network.AWS.Route53AutoNaming.Types.HealthCheckType
newtype HealthCheckType
HealthCheckType' :: Text -> HealthCheckType
[fromHealthCheckType] :: HealthCheckType -> Text
pattern HealthCheckType_HTTP :: HealthCheckType
pattern HealthCheckType_HTTPS :: HealthCheckType
pattern HealthCheckType_TCP :: HealthCheckType
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53AutoNaming.Types.HealthCheckType.HealthCheckType
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53AutoNaming.Types.HealthCheckType.HealthCheckType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53AutoNaming.Types.HealthCheckType.HealthCheckType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.HealthCheckType.HealthCheckType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53AutoNaming.Types.HealthCheckType.HealthCheckType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.HealthCheckType.HealthCheckType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.Types.HealthCheckType.HealthCheckType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53AutoNaming.Types.HealthCheckType.HealthCheckType
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53AutoNaming.Types.HealthCheckType.HealthCheckType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53AutoNaming.Types.HealthCheckType.HealthCheckType
instance Network.AWS.Data.Text.ToText Network.AWS.Route53AutoNaming.Types.HealthCheckType.HealthCheckType
instance Network.AWS.Data.Text.FromText Network.AWS.Route53AutoNaming.Types.HealthCheckType.HealthCheckType
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.HealthCheckType.HealthCheckType
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.HealthCheckType.HealthCheckType
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.HealthCheckType.HealthCheckType
instance GHC.Classes.Ord Network.AWS.Route53AutoNaming.Types.HealthCheckType.HealthCheckType
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.HealthCheckType.HealthCheckType
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.HealthCheckType.HealthCheckType
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.HealthCheckType.HealthCheckType


module Network.AWS.Route53AutoNaming.Types.HealthCheckConfig

-- | <i>Public DNS and HTTP namespaces only.</i> A complex type that
--   contains settings for an optional health check. If you specify
--   settings for a health check, Cloud Map associates the health check
--   with the records that you specify in <tt>DnsConfig</tt>.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   Health checks are basic Route 53 health checks that monitor an Amazon
--   Web Services endpoint. For information about pricing for health
--   checks, see <a>Amazon Route 53 Pricing</a>.
--   
--   Note the following about configuring health checks.
--   
--   <ul>
--   <li><i>A and AAAA records</i> If <tt>DnsConfig</tt> includes
--   configurations for both <tt>A</tt> and <tt>AAAA</tt> records, Cloud
--   Map creates a health check that uses the IPv4 address to check the
--   health of the resource. If the endpoint tthat's specified by the IPv4
--   address is unhealthy, Route 53 considers both the <tt>A</tt> and
--   <tt>AAAA</tt> records to be unhealthy.</li>
--   <li><i>CNAME records</i> You can't specify settings for
--   <tt>HealthCheckConfig</tt> when the <tt>DNSConfig</tt> includes
--   <tt>CNAME</tt> for the value of <tt>Type</tt>. If you do, the
--   <tt>CreateService</tt> request will fail with an <tt>InvalidInput</tt>
--   error.</li>
--   <li><i>Request interval</i> A Route 53 health checker in each
--   health-checking Amazon Web Services Region sends a health check
--   request to an endpoint every 30 seconds. On average, your endpoint
--   receives a health check request about every two seconds. However,
--   health checkers don't coordinate with one another. Therefore, you
--   might sometimes see several requests in one second that's followed by
--   a few seconds with no health checks at all.</li>
--   <li><i>Health checking regions</i> Health checkers perform checks from
--   all Route 53 health-checking Regions. For a list of the current
--   Regions, see <a>Regions</a>.</li>
--   <li><i>Alias records</i> When you register an instance, if you include
--   the <tt>AWS_ALIAS_DNS_NAME</tt> attribute, Cloud Map creates a Route
--   53 alias record. Note the following:<ul><li>Route 53 automatically
--   sets <tt>EvaluateTargetHealth</tt> to true for alias records. When
--   <tt>EvaluateTargetHealth</tt> is true, the alias record inherits the
--   health of the referenced Amazon Web Services resource. such as an ELB
--   load balancer. For more information, see
--   <a>EvaluateTargetHealth</a>.</li><li>If you include
--   <tt>HealthCheckConfig</tt> and then use the service to register an
--   instance that creates an alias record, Route 53 doesn't create the
--   health check.</li></ul></li>
--   <li><i>Charges for health checks</i> Health checks are basic Route 53
--   health checks that monitor an Amazon Web Services endpoint. For
--   information about pricing for health checks, see <a>Amazon Route 53
--   Pricing</a>.</li>
--   </ul>
--   
--   <i>See:</i> <a>newHealthCheckConfig</a> smart constructor.
data HealthCheckConfig
HealthCheckConfig' :: Maybe Natural -> Maybe Text -> HealthCheckType -> HealthCheckConfig

-- | The number of consecutive health checks that an endpoint must pass or
--   fail for Route 53 to change the current status of the endpoint from
--   unhealthy to healthy or the other way around. For more information,
--   see <a>How Route 53 Determines Whether an Endpoint Is Healthy</a> in
--   the <i>Route 53 Developer Guide</i>.
[$sel:failureThreshold:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Natural

-- | The path that you want Route 53 to request when performing health
--   checks. The path can be any value that your endpoint returns an HTTP
--   status code of a 2xx or 3xx format for when the endpoint is healthy.
--   An example file is <tt>/docs/route53-health-check.html</tt>. Route 53
--   automatically adds the DNS name for the service. If you don't specify
--   a value for <tt>ResourcePath</tt>, the default value is <tt>/</tt>.
--   
--   If you specify <tt>TCP</tt> for <tt>Type</tt>, you must <i>not</i>
--   specify a value for <tt>ResourcePath</tt>.
[$sel:resourcePath:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Text

-- | The type of health check that you want to create, which indicates how
--   Route 53 determines whether an endpoint is healthy.
--   
--   You can't change the value of <tt>Type</tt> after you create a health
--   check.
--   
--   You can create the following types of health checks:
--   
--   <ul>
--   <li><b>HTTP</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTP request and waits for an HTTP
--   status code of 200 or greater and less than 400.</li>
--   <li><b>HTTPS</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTPS request and waits for an HTTP
--   status code of 200 or greater and less than 400.If you specify HTTPS
--   for the value of <tt>Type</tt>, the endpoint must support TLS v1.0 or
--   later.</li>
--   <li><b>TCP</b>: Route 53 tries to establish a TCP connection.If you
--   specify <tt>TCP</tt> for <tt>Type</tt>, don't specify a value for
--   <tt>ResourcePath</tt>.</li>
--   </ul>
--   
--   For more information, see <a>How Route 53 Determines Whether an
--   Endpoint Is Healthy</a> in the <i>Route 53 Developer Guide</i>.
[$sel:type':HealthCheckConfig'] :: HealthCheckConfig -> HealthCheckType

-- | Create a value of <a>HealthCheckConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureThreshold:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_failureThreshold</a> - The number of consecutive
--   health checks that an endpoint must pass or fail for Route 53 to
--   change the current status of the endpoint from unhealthy to healthy or
--   the other way around. For more information, see <a>How Route 53
--   Determines Whether an Endpoint Is Healthy</a> in the <i>Route 53
--   Developer Guide</i>.
--   
--   <a>$sel:resourcePath:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_resourcePath</a> - The path that you want Route
--   53 to request when performing health checks. The path can be any value
--   that your endpoint returns an HTTP status code of a 2xx or 3xx format
--   for when the endpoint is healthy. An example file is
--   <tt>/docs/route53-health-check.html</tt>. Route 53 automatically adds
--   the DNS name for the service. If you don't specify a value for
--   <tt>ResourcePath</tt>, the default value is <tt>/</tt>.
--   
--   If you specify <tt>TCP</tt> for <tt>Type</tt>, you must <i>not</i>
--   specify a value for <tt>ResourcePath</tt>.
--   
--   <a>$sel:type':HealthCheckConfig'</a>, <a>healthCheckConfig_type</a> -
--   The type of health check that you want to create, which indicates how
--   Route 53 determines whether an endpoint is healthy.
--   
--   You can't change the value of <tt>Type</tt> after you create a health
--   check.
--   
--   You can create the following types of health checks:
--   
--   <ul>
--   <li><b>HTTP</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTP request and waits for an HTTP
--   status code of 200 or greater and less than 400.</li>
--   <li><b>HTTPS</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTPS request and waits for an HTTP
--   status code of 200 or greater and less than 400.If you specify HTTPS
--   for the value of <tt>Type</tt>, the endpoint must support TLS v1.0 or
--   later.</li>
--   <li><b>TCP</b>: Route 53 tries to establish a TCP connection.If you
--   specify <tt>TCP</tt> for <tt>Type</tt>, don't specify a value for
--   <tt>ResourcePath</tt>.</li>
--   </ul>
--   
--   For more information, see <a>How Route 53 Determines Whether an
--   Endpoint Is Healthy</a> in the <i>Route 53 Developer Guide</i>.
newHealthCheckConfig :: HealthCheckType -> HealthCheckConfig

-- | The number of consecutive health checks that an endpoint must pass or
--   fail for Route 53 to change the current status of the endpoint from
--   unhealthy to healthy or the other way around. For more information,
--   see <a>How Route 53 Determines Whether an Endpoint Is Healthy</a> in
--   the <i>Route 53 Developer Guide</i>.
healthCheckConfig_failureThreshold :: Lens' HealthCheckConfig (Maybe Natural)

-- | The path that you want Route 53 to request when performing health
--   checks. The path can be any value that your endpoint returns an HTTP
--   status code of a 2xx or 3xx format for when the endpoint is healthy.
--   An example file is <tt>/docs/route53-health-check.html</tt>. Route 53
--   automatically adds the DNS name for the service. If you don't specify
--   a value for <tt>ResourcePath</tt>, the default value is <tt>/</tt>.
--   
--   If you specify <tt>TCP</tt> for <tt>Type</tt>, you must <i>not</i>
--   specify a value for <tt>ResourcePath</tt>.
healthCheckConfig_resourcePath :: Lens' HealthCheckConfig (Maybe Text)

-- | The type of health check that you want to create, which indicates how
--   Route 53 determines whether an endpoint is healthy.
--   
--   You can't change the value of <tt>Type</tt> after you create a health
--   check.
--   
--   You can create the following types of health checks:
--   
--   <ul>
--   <li><b>HTTP</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTP request and waits for an HTTP
--   status code of 200 or greater and less than 400.</li>
--   <li><b>HTTPS</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTPS request and waits for an HTTP
--   status code of 200 or greater and less than 400.If you specify HTTPS
--   for the value of <tt>Type</tt>, the endpoint must support TLS v1.0 or
--   later.</li>
--   <li><b>TCP</b>: Route 53 tries to establish a TCP connection.If you
--   specify <tt>TCP</tt> for <tt>Type</tt>, don't specify a value for
--   <tt>ResourcePath</tt>.</li>
--   </ul>
--   
--   For more information, see <a>How Route 53 Determines Whether an
--   Endpoint Is Healthy</a> in the <i>Route 53 Developer Guide</i>.
healthCheckConfig_type :: Lens' HealthCheckConfig HealthCheckType
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.HealthCheckConfig.HealthCheckConfig
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.HealthCheckConfig.HealthCheckConfig
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.HealthCheckConfig.HealthCheckConfig
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.HealthCheckConfig.HealthCheckConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.HealthCheckConfig.HealthCheckConfig
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.HealthCheckConfig.HealthCheckConfig
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.HealthCheckConfig.HealthCheckConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.HealthCheckConfig.HealthCheckConfig


module Network.AWS.Route53AutoNaming.Types.HealthStatus
newtype HealthStatus
HealthStatus' :: Text -> HealthStatus
[fromHealthStatus] :: HealthStatus -> Text
pattern HealthStatus_HEALTHY :: HealthStatus
pattern HealthStatus_UNHEALTHY :: HealthStatus
pattern HealthStatus_UNKNOWN :: HealthStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53AutoNaming.Types.HealthStatus.HealthStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53AutoNaming.Types.HealthStatus.HealthStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53AutoNaming.Types.HealthStatus.HealthStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.HealthStatus.HealthStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53AutoNaming.Types.HealthStatus.HealthStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.HealthStatus.HealthStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.Types.HealthStatus.HealthStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53AutoNaming.Types.HealthStatus.HealthStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53AutoNaming.Types.HealthStatus.HealthStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53AutoNaming.Types.HealthStatus.HealthStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Route53AutoNaming.Types.HealthStatus.HealthStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Route53AutoNaming.Types.HealthStatus.HealthStatus
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.HealthStatus.HealthStatus
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.HealthStatus.HealthStatus
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.HealthStatus.HealthStatus
instance GHC.Classes.Ord Network.AWS.Route53AutoNaming.Types.HealthStatus.HealthStatus
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.HealthStatus.HealthStatus
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.HealthStatus.HealthStatus
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.HealthStatus.HealthStatus


module Network.AWS.Route53AutoNaming.Types.HealthStatusFilter
newtype HealthStatusFilter
HealthStatusFilter' :: Text -> HealthStatusFilter
[fromHealthStatusFilter] :: HealthStatusFilter -> Text
pattern HealthStatusFilter_ALL :: HealthStatusFilter
pattern HealthStatusFilter_HEALTHY :: HealthStatusFilter
pattern HealthStatusFilter_HEALTHY_OR_ELSE_ALL :: HealthStatusFilter
pattern HealthStatusFilter_UNHEALTHY :: HealthStatusFilter
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53AutoNaming.Types.HealthStatusFilter.HealthStatusFilter
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53AutoNaming.Types.HealthStatusFilter.HealthStatusFilter
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53AutoNaming.Types.HealthStatusFilter.HealthStatusFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.HealthStatusFilter.HealthStatusFilter
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53AutoNaming.Types.HealthStatusFilter.HealthStatusFilter
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.HealthStatusFilter.HealthStatusFilter
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.Types.HealthStatusFilter.HealthStatusFilter
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53AutoNaming.Types.HealthStatusFilter.HealthStatusFilter
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53AutoNaming.Types.HealthStatusFilter.HealthStatusFilter
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53AutoNaming.Types.HealthStatusFilter.HealthStatusFilter
instance Network.AWS.Data.Text.ToText Network.AWS.Route53AutoNaming.Types.HealthStatusFilter.HealthStatusFilter
instance Network.AWS.Data.Text.FromText Network.AWS.Route53AutoNaming.Types.HealthStatusFilter.HealthStatusFilter
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.HealthStatusFilter.HealthStatusFilter
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.HealthStatusFilter.HealthStatusFilter
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.HealthStatusFilter.HealthStatusFilter
instance GHC.Classes.Ord Network.AWS.Route53AutoNaming.Types.HealthStatusFilter.HealthStatusFilter
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.HealthStatusFilter.HealthStatusFilter
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.HealthStatusFilter.HealthStatusFilter
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.HealthStatusFilter.HealthStatusFilter


module Network.AWS.Route53AutoNaming.Types.HttpInstanceSummary

-- | In a response to a <a>DiscoverInstances</a> request,
--   <tt>HttpInstanceSummary</tt> contains information about one instance
--   that matches the values that you specified in the request.
--   
--   <i>See:</i> <a>newHttpInstanceSummary</a> smart constructor.
data HttpInstanceSummary
HttpInstanceSummary' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe HealthStatus -> HttpInstanceSummary

-- | The ID of an instance that matches the values that you specified in
--   the request.
[$sel:instanceId:HttpInstanceSummary'] :: HttpInstanceSummary -> Maybe Text

-- | @<tt> </tt><tt> </tt>@
--   
--   The <tt>HttpName</tt> name of the namespace. It's found in the
--   <tt>HttpProperties</tt> member of the <tt>Properties</tt> member of
--   the namespace.
[$sel:namespaceName:HttpInstanceSummary'] :: HttpInstanceSummary -> Maybe Text

-- | If you included any attributes when you registered the instance, the
--   values of those attributes.
[$sel:attributes:HttpInstanceSummary'] :: HttpInstanceSummary -> Maybe (HashMap Text Text)

-- | The name of the service that you specified when you registered the
--   instance.
[$sel:serviceName:HttpInstanceSummary'] :: HttpInstanceSummary -> Maybe Text

-- | If you configured health checking in the service, the current health
--   status of the service instance.
[$sel:healthStatus:HttpInstanceSummary'] :: HttpInstanceSummary -> Maybe HealthStatus

-- | Create a value of <a>HttpInstanceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:HttpInstanceSummary'</a>,
--   <a>httpInstanceSummary_instanceId</a> - The ID of an instance that
--   matches the values that you specified in the request.
--   
--   <a>$sel:namespaceName:HttpInstanceSummary'</a>,
--   <a>httpInstanceSummary_namespaceName</a> - @<tt> </tt><tt> </tt>@
--   
--   The <tt>HttpName</tt> name of the namespace. It's found in the
--   <tt>HttpProperties</tt> member of the <tt>Properties</tt> member of
--   the namespace.
--   
--   <a>$sel:attributes:HttpInstanceSummary'</a>,
--   <a>httpInstanceSummary_attributes</a> - If you included any attributes
--   when you registered the instance, the values of those attributes.
--   
--   <a>$sel:serviceName:HttpInstanceSummary'</a>,
--   <a>httpInstanceSummary_serviceName</a> - The name of the service that
--   you specified when you registered the instance.
--   
--   <a>$sel:healthStatus:HttpInstanceSummary'</a>,
--   <a>httpInstanceSummary_healthStatus</a> - If you configured health
--   checking in the service, the current health status of the service
--   instance.
newHttpInstanceSummary :: HttpInstanceSummary

-- | The ID of an instance that matches the values that you specified in
--   the request.
httpInstanceSummary_instanceId :: Lens' HttpInstanceSummary (Maybe Text)

-- | @<tt> </tt><tt> </tt>@
--   
--   The <tt>HttpName</tt> name of the namespace. It's found in the
--   <tt>HttpProperties</tt> member of the <tt>Properties</tt> member of
--   the namespace.
httpInstanceSummary_namespaceName :: Lens' HttpInstanceSummary (Maybe Text)

-- | If you included any attributes when you registered the instance, the
--   values of those attributes.
httpInstanceSummary_attributes :: Lens' HttpInstanceSummary (Maybe (HashMap Text Text))

-- | The name of the service that you specified when you registered the
--   instance.
httpInstanceSummary_serviceName :: Lens' HttpInstanceSummary (Maybe Text)

-- | If you configured health checking in the service, the current health
--   status of the service instance.
httpInstanceSummary_healthStatus :: Lens' HttpInstanceSummary (Maybe HealthStatus)
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.HttpInstanceSummary.HttpInstanceSummary
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.HttpInstanceSummary.HttpInstanceSummary
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.HttpInstanceSummary.HttpInstanceSummary
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.HttpInstanceSummary.HttpInstanceSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.HttpInstanceSummary.HttpInstanceSummary
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.HttpInstanceSummary.HttpInstanceSummary
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.HttpInstanceSummary.HttpInstanceSummary


module Network.AWS.Route53AutoNaming.Types.HttpNamespaceChange

-- | Updated properties for the HTTP namespace.
--   
--   <i>See:</i> <a>newHttpNamespaceChange</a> smart constructor.
data HttpNamespaceChange
HttpNamespaceChange' :: Text -> HttpNamespaceChange

-- | An updated description for the HTTP namespace.
[$sel:description:HttpNamespaceChange'] :: HttpNamespaceChange -> Text

-- | Create a value of <a>HttpNamespaceChange</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:HttpNamespaceChange'</a>,
--   <a>httpNamespaceChange_description</a> - An updated description for
--   the HTTP namespace.
newHttpNamespaceChange :: Text -> HttpNamespaceChange

-- | An updated description for the HTTP namespace.
httpNamespaceChange_description :: Lens' HttpNamespaceChange Text
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.HttpNamespaceChange.HttpNamespaceChange
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.HttpNamespaceChange.HttpNamespaceChange
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.HttpNamespaceChange.HttpNamespaceChange
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.HttpNamespaceChange.HttpNamespaceChange
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.HttpNamespaceChange.HttpNamespaceChange
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.HttpNamespaceChange.HttpNamespaceChange
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.HttpNamespaceChange.HttpNamespaceChange


module Network.AWS.Route53AutoNaming.Types.HttpProperties

-- | A complex type that contains the name of an HTTP namespace.
--   
--   <i>See:</i> <a>newHttpProperties</a> smart constructor.
data HttpProperties
HttpProperties' :: Maybe Text -> HttpProperties

-- | The name of an HTTP namespace.
[$sel:httpName:HttpProperties'] :: HttpProperties -> Maybe Text

-- | Create a value of <a>HttpProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpName:HttpProperties'</a>, <a>httpProperties_httpName</a> -
--   The name of an HTTP namespace.
newHttpProperties :: HttpProperties

-- | The name of an HTTP namespace.
httpProperties_httpName :: Lens' HttpProperties (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.HttpProperties.HttpProperties
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.HttpProperties.HttpProperties
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.HttpProperties.HttpProperties
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.HttpProperties.HttpProperties
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.HttpProperties.HttpProperties
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.HttpProperties.HttpProperties
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.HttpProperties.HttpProperties


module Network.AWS.Route53AutoNaming.Types.Instance

-- | A complex type that contains information about an instance that Cloud
--   Map creates when you submit a <tt>RegisterInstance</tt> request.
--   
--   <i>See:</i> <a>newInstance</a> smart constructor.
data Instance
Instance' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> Instance

-- | A unique string that identifies the request and that allows failed
--   <tt>RegisterInstance</tt> requests to be retried without the risk of
--   executing the operation twice. You must use a unique
--   <tt>CreatorRequestId</tt> string every time you submit a
--   <tt>RegisterInstance</tt> request if you're registering additional
--   instances for the same namespace and service.
--   <tt>CreatorRequestId</tt> can be any unique string (for example, a
--   date/time stamp).
[$sel:creatorRequestId:Instance'] :: Instance -> Maybe Text

-- | A string map that contains the following information for the service
--   that you specify in <tt>ServiceId</tt>:
--   
--   <ul>
--   <li>The attributes that apply to the records that are defined in the
--   service.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> If you want Cloud Map to create a Route
--   53 alias record that routes traffic to an Elastic Load Balancing load
--   balancer, specify the DNS name that's associated with the load
--   balancer. For information about how to get the DNS name, see
--   <a>AliasTarget-</a>DNSName&gt; in the <i>Route 53 API
--   Reference</i>.Note the following:<ul><li>The configuration for the
--   service that's specified by <tt>ServiceId</tt> must include settings
--   for an <tt>A</tt> record, an <tt>AAAA</tt> record, or both.</li><li>In
--   the service that's specified by <tt>ServiceId</tt>, the value of
--   <tt>RoutingPolicy</tt> must be <tt>WEIGHTED</tt>.</li><li>If the
--   service that's specified by <tt>ServiceId</tt> includes
--   <tt>HealthCheckConfig</tt> settings, Cloud Map creates the health
--   check, but it won't associate the health check with the alias
--   record.</li><li>Auto naming currently doesn't support creating alias
--   records that route traffic to Amazon Web Services resources other than
--   ELB load balancers.</li><li>If you specify a value for
--   <tt>AWS_ALIAS_DNS_NAME</tt>, don't specify values for any of the
--   <tt>AWS_INSTANCE</tt> attributes.</li></ul></li>
--   <li><i>AWS_EC2_INSTANCE_ID</i> <i>HTTP namespaces only.</i> The Amazon
--   EC2 instance ID for the instance. The <tt>AWS_INSTANCE_IPV4</tt>
--   attribute contains the primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> If the service configuration includes a
--   <tt>CNAME</tt> record, the domain name that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>example.com</tt>).This value is required if the service specified
--   by <tt>ServiceId</tt> includes settings for an <tt>CNAME</tt>
--   record.</li>
--   <li><i>AWS_INSTANCE_IPV4</i> If the service configuration includes an
--   <tt>A</tt> record, the IPv4 address that you want Route 53 to return
--   in response to DNS queries (for example, <tt>192.0.2.44</tt>).This
--   value is required if the service specified by <tt>ServiceId</tt>
--   includes settings for an <tt>A</tt> record. If the service includes
--   settings for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_IPV6</i> If the service configuration includes an
--   <tt>AAAA</tt> record, the IPv6 address that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).This value is
--   required if the service specified by <tt>ServiceId</tt> includes
--   settings for an <tt>AAAA</tt> record. If the service includes settings
--   for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_PORT</i> If the service includes an <tt>SRV</tt>
--   record, the value that you want Route 53 to return for the port.If the
--   service includes <tt>HealthCheckConfig</tt>, the port on the endpoint
--   that you want Route 53 to send requests to.This value is required if
--   you specified settings for an <tt>SRV</tt> record or a Route 53 health
--   check when you created the service.</li>
--   </ul>
[$sel:attributes:Instance'] :: Instance -> Maybe (HashMap Text Text)

-- | An identifier that you want to associate with the instance. Note the
--   following:
--   
--   <ul>
--   <li>If the service that's specified by <tt>ServiceId</tt> includes
--   settings for an <tt>SRV</tt> record, the value of <tt>InstanceId</tt>
--   is automatically included as part of the value for the <tt>SRV</tt>
--   record. For more information, see <a>DnsRecord</a> Type&gt;.</li>
--   <li>You can use this value to update an existing instance.</li>
--   <li>To register a new instance, you must specify a value that's unique
--   among instances that you register by using the same service.</li>
--   <li>If you specify an existing <tt>InstanceId</tt> and
--   <tt>ServiceId</tt>, Cloud Map updates the existing DNS records. If
--   there's also an existing health check, Cloud Map deletes the old
--   health check and creates a new one.The health check isn't deleted
--   immediately, so it will still appear for a while if you submit a
--   <tt>ListHealthChecks</tt> request, for example.</li>
--   </ul>
[$sel:id:Instance'] :: Instance -> Text

-- | Create a value of <a>Instance</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creatorRequestId:Instance'</a>,
--   <a>instance_creatorRequestId</a> - A unique string that identifies the
--   request and that allows failed <tt>RegisterInstance</tt> requests to
--   be retried without the risk of executing the operation twice. You must
--   use a unique <tt>CreatorRequestId</tt> string every time you submit a
--   <tt>RegisterInstance</tt> request if you're registering additional
--   instances for the same namespace and service.
--   <tt>CreatorRequestId</tt> can be any unique string (for example, a
--   date/time stamp).
--   
--   <a>$sel:attributes:Instance'</a>, <a>instance_attributes</a> - A
--   string map that contains the following information for the service
--   that you specify in <tt>ServiceId</tt>:
--   
--   <ul>
--   <li>The attributes that apply to the records that are defined in the
--   service.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> If you want Cloud Map to create a Route
--   53 alias record that routes traffic to an Elastic Load Balancing load
--   balancer, specify the DNS name that's associated with the load
--   balancer. For information about how to get the DNS name, see
--   <a>AliasTarget-</a>DNSName&gt; in the <i>Route 53 API
--   Reference</i>.Note the following:<ul><li>The configuration for the
--   service that's specified by <tt>ServiceId</tt> must include settings
--   for an <tt>A</tt> record, an <tt>AAAA</tt> record, or both.</li><li>In
--   the service that's specified by <tt>ServiceId</tt>, the value of
--   <tt>RoutingPolicy</tt> must be <tt>WEIGHTED</tt>.</li><li>If the
--   service that's specified by <tt>ServiceId</tt> includes
--   <tt>HealthCheckConfig</tt> settings, Cloud Map creates the health
--   check, but it won't associate the health check with the alias
--   record.</li><li>Auto naming currently doesn't support creating alias
--   records that route traffic to Amazon Web Services resources other than
--   ELB load balancers.</li><li>If you specify a value for
--   <tt>AWS_ALIAS_DNS_NAME</tt>, don't specify values for any of the
--   <tt>AWS_INSTANCE</tt> attributes.</li></ul></li>
--   <li><i>AWS_EC2_INSTANCE_ID</i> <i>HTTP namespaces only.</i> The Amazon
--   EC2 instance ID for the instance. The <tt>AWS_INSTANCE_IPV4</tt>
--   attribute contains the primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> If the service configuration includes a
--   <tt>CNAME</tt> record, the domain name that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>example.com</tt>).This value is required if the service specified
--   by <tt>ServiceId</tt> includes settings for an <tt>CNAME</tt>
--   record.</li>
--   <li><i>AWS_INSTANCE_IPV4</i> If the service configuration includes an
--   <tt>A</tt> record, the IPv4 address that you want Route 53 to return
--   in response to DNS queries (for example, <tt>192.0.2.44</tt>).This
--   value is required if the service specified by <tt>ServiceId</tt>
--   includes settings for an <tt>A</tt> record. If the service includes
--   settings for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_IPV6</i> If the service configuration includes an
--   <tt>AAAA</tt> record, the IPv6 address that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).This value is
--   required if the service specified by <tt>ServiceId</tt> includes
--   settings for an <tt>AAAA</tt> record. If the service includes settings
--   for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_PORT</i> If the service includes an <tt>SRV</tt>
--   record, the value that you want Route 53 to return for the port.If the
--   service includes <tt>HealthCheckConfig</tt>, the port on the endpoint
--   that you want Route 53 to send requests to.This value is required if
--   you specified settings for an <tt>SRV</tt> record or a Route 53 health
--   check when you created the service.</li>
--   </ul>
--   
--   <a>$sel:id:Instance'</a>, <a>instance_id</a> - An identifier that you
--   want to associate with the instance. Note the following:
--   
--   <ul>
--   <li>If the service that's specified by <tt>ServiceId</tt> includes
--   settings for an <tt>SRV</tt> record, the value of <tt>InstanceId</tt>
--   is automatically included as part of the value for the <tt>SRV</tt>
--   record. For more information, see <a>DnsRecord</a> Type&gt;.</li>
--   <li>You can use this value to update an existing instance.</li>
--   <li>To register a new instance, you must specify a value that's unique
--   among instances that you register by using the same service.</li>
--   <li>If you specify an existing <tt>InstanceId</tt> and
--   <tt>ServiceId</tt>, Cloud Map updates the existing DNS records. If
--   there's also an existing health check, Cloud Map deletes the old
--   health check and creates a new one.The health check isn't deleted
--   immediately, so it will still appear for a while if you submit a
--   <tt>ListHealthChecks</tt> request, for example.</li>
--   </ul>
newInstance :: Text -> Instance

-- | A unique string that identifies the request and that allows failed
--   <tt>RegisterInstance</tt> requests to be retried without the risk of
--   executing the operation twice. You must use a unique
--   <tt>CreatorRequestId</tt> string every time you submit a
--   <tt>RegisterInstance</tt> request if you're registering additional
--   instances for the same namespace and service.
--   <tt>CreatorRequestId</tt> can be any unique string (for example, a
--   date/time stamp).
instance_creatorRequestId :: Lens' Instance (Maybe Text)

-- | A string map that contains the following information for the service
--   that you specify in <tt>ServiceId</tt>:
--   
--   <ul>
--   <li>The attributes that apply to the records that are defined in the
--   service.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> If you want Cloud Map to create a Route
--   53 alias record that routes traffic to an Elastic Load Balancing load
--   balancer, specify the DNS name that's associated with the load
--   balancer. For information about how to get the DNS name, see
--   <a>AliasTarget-</a>DNSName&gt; in the <i>Route 53 API
--   Reference</i>.Note the following:<ul><li>The configuration for the
--   service that's specified by <tt>ServiceId</tt> must include settings
--   for an <tt>A</tt> record, an <tt>AAAA</tt> record, or both.</li><li>In
--   the service that's specified by <tt>ServiceId</tt>, the value of
--   <tt>RoutingPolicy</tt> must be <tt>WEIGHTED</tt>.</li><li>If the
--   service that's specified by <tt>ServiceId</tt> includes
--   <tt>HealthCheckConfig</tt> settings, Cloud Map creates the health
--   check, but it won't associate the health check with the alias
--   record.</li><li>Auto naming currently doesn't support creating alias
--   records that route traffic to Amazon Web Services resources other than
--   ELB load balancers.</li><li>If you specify a value for
--   <tt>AWS_ALIAS_DNS_NAME</tt>, don't specify values for any of the
--   <tt>AWS_INSTANCE</tt> attributes.</li></ul></li>
--   <li><i>AWS_EC2_INSTANCE_ID</i> <i>HTTP namespaces only.</i> The Amazon
--   EC2 instance ID for the instance. The <tt>AWS_INSTANCE_IPV4</tt>
--   attribute contains the primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> If the service configuration includes a
--   <tt>CNAME</tt> record, the domain name that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>example.com</tt>).This value is required if the service specified
--   by <tt>ServiceId</tt> includes settings for an <tt>CNAME</tt>
--   record.</li>
--   <li><i>AWS_INSTANCE_IPV4</i> If the service configuration includes an
--   <tt>A</tt> record, the IPv4 address that you want Route 53 to return
--   in response to DNS queries (for example, <tt>192.0.2.44</tt>).This
--   value is required if the service specified by <tt>ServiceId</tt>
--   includes settings for an <tt>A</tt> record. If the service includes
--   settings for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_IPV6</i> If the service configuration includes an
--   <tt>AAAA</tt> record, the IPv6 address that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).This value is
--   required if the service specified by <tt>ServiceId</tt> includes
--   settings for an <tt>AAAA</tt> record. If the service includes settings
--   for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_PORT</i> If the service includes an <tt>SRV</tt>
--   record, the value that you want Route 53 to return for the port.If the
--   service includes <tt>HealthCheckConfig</tt>, the port on the endpoint
--   that you want Route 53 to send requests to.This value is required if
--   you specified settings for an <tt>SRV</tt> record or a Route 53 health
--   check when you created the service.</li>
--   </ul>
instance_attributes :: Lens' Instance (Maybe (HashMap Text Text))

-- | An identifier that you want to associate with the instance. Note the
--   following:
--   
--   <ul>
--   <li>If the service that's specified by <tt>ServiceId</tt> includes
--   settings for an <tt>SRV</tt> record, the value of <tt>InstanceId</tt>
--   is automatically included as part of the value for the <tt>SRV</tt>
--   record. For more information, see <a>DnsRecord</a> Type&gt;.</li>
--   <li>You can use this value to update an existing instance.</li>
--   <li>To register a new instance, you must specify a value that's unique
--   among instances that you register by using the same service.</li>
--   <li>If you specify an existing <tt>InstanceId</tt> and
--   <tt>ServiceId</tt>, Cloud Map updates the existing DNS records. If
--   there's also an existing health check, Cloud Map deletes the old
--   health check and creates a new one.The health check isn't deleted
--   immediately, so it will still appear for a while if you submit a
--   <tt>ListHealthChecks</tt> request, for example.</li>
--   </ul>
instance_id :: Lens' Instance Text
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.Instance.Instance
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.Instance.Instance
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.Instance.Instance
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.Instance.Instance
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.Instance.Instance
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.Instance.Instance
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.Instance.Instance


module Network.AWS.Route53AutoNaming.Types.InstanceSummary

-- | A complex type that contains information about the instances that you
--   registered by using a specified service.
--   
--   <i>See:</i> <a>newInstanceSummary</a> smart constructor.
data InstanceSummary
InstanceSummary' :: Maybe (HashMap Text Text) -> Maybe Text -> InstanceSummary

-- | A string map that contains the following information:
--   
--   <ul>
--   <li>The attributes that are associated with the instance.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> For an alias record that routes traffic
--   to an Elastic Load Balancing load balancer, the DNS name that's
--   associated with the load balancer.</li>
--   <li><i>AWS_EC2_INSTANCE_ID (HTTP namespaces only)</i> The Amazon EC2
--   instance ID for the instance. When the <tt>AWS_EC2_INSTANCE_ID</tt>
--   attribute is specified, then the <tt>AWS_INSTANCE_IPV4</tt> attribute
--   contains the primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> For a <tt>CNAME</tt> record, the domain
--   name that Route 53 returns in response to DNS queries (for example,
--   <tt>example.com</tt>).</li>
--   <li><i>AWS_INSTANCE_IPV4</i> For an <tt>A</tt> record, the IPv4
--   address that Route 53 returns in response to DNS queries (for example,
--   <tt>192.0.2.44</tt>).</li>
--   <li><i>AWS_INSTANCE_IPV6</i> For an <tt>AAAA</tt> record, the IPv6
--   address that Route 53 returns in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).</li>
--   <li><i>AWS_INSTANCE_PORT</i> For an <tt>SRV</tt> record, the value
--   that Route 53 returns for the port. In addition, if the service
--   includes <tt>HealthCheckConfig</tt>, the port on the endpoint that
--   Route 53 sends requests to.</li>
--   </ul>
[$sel:attributes:InstanceSummary'] :: InstanceSummary -> Maybe (HashMap Text Text)

-- | The ID for an instance that you created by using a specified service.
[$sel:id:InstanceSummary'] :: InstanceSummary -> Maybe Text

-- | Create a value of <a>InstanceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:InstanceSummary'</a>,
--   <a>instanceSummary_attributes</a> - A string map that contains the
--   following information:
--   
--   <ul>
--   <li>The attributes that are associated with the instance.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> For an alias record that routes traffic
--   to an Elastic Load Balancing load balancer, the DNS name that's
--   associated with the load balancer.</li>
--   <li><i>AWS_EC2_INSTANCE_ID (HTTP namespaces only)</i> The Amazon EC2
--   instance ID for the instance. When the <tt>AWS_EC2_INSTANCE_ID</tt>
--   attribute is specified, then the <tt>AWS_INSTANCE_IPV4</tt> attribute
--   contains the primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> For a <tt>CNAME</tt> record, the domain
--   name that Route 53 returns in response to DNS queries (for example,
--   <tt>example.com</tt>).</li>
--   <li><i>AWS_INSTANCE_IPV4</i> For an <tt>A</tt> record, the IPv4
--   address that Route 53 returns in response to DNS queries (for example,
--   <tt>192.0.2.44</tt>).</li>
--   <li><i>AWS_INSTANCE_IPV6</i> For an <tt>AAAA</tt> record, the IPv6
--   address that Route 53 returns in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).</li>
--   <li><i>AWS_INSTANCE_PORT</i> For an <tt>SRV</tt> record, the value
--   that Route 53 returns for the port. In addition, if the service
--   includes <tt>HealthCheckConfig</tt>, the port on the endpoint that
--   Route 53 sends requests to.</li>
--   </ul>
--   
--   <a>$sel:id:InstanceSummary'</a>, <a>instanceSummary_id</a> - The ID
--   for an instance that you created by using a specified service.
newInstanceSummary :: InstanceSummary

-- | A string map that contains the following information:
--   
--   <ul>
--   <li>The attributes that are associated with the instance.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> For an alias record that routes traffic
--   to an Elastic Load Balancing load balancer, the DNS name that's
--   associated with the load balancer.</li>
--   <li><i>AWS_EC2_INSTANCE_ID (HTTP namespaces only)</i> The Amazon EC2
--   instance ID for the instance. When the <tt>AWS_EC2_INSTANCE_ID</tt>
--   attribute is specified, then the <tt>AWS_INSTANCE_IPV4</tt> attribute
--   contains the primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> For a <tt>CNAME</tt> record, the domain
--   name that Route 53 returns in response to DNS queries (for example,
--   <tt>example.com</tt>).</li>
--   <li><i>AWS_INSTANCE_IPV4</i> For an <tt>A</tt> record, the IPv4
--   address that Route 53 returns in response to DNS queries (for example,
--   <tt>192.0.2.44</tt>).</li>
--   <li><i>AWS_INSTANCE_IPV6</i> For an <tt>AAAA</tt> record, the IPv6
--   address that Route 53 returns in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).</li>
--   <li><i>AWS_INSTANCE_PORT</i> For an <tt>SRV</tt> record, the value
--   that Route 53 returns for the port. In addition, if the service
--   includes <tt>HealthCheckConfig</tt>, the port on the endpoint that
--   Route 53 sends requests to.</li>
--   </ul>
instanceSummary_attributes :: Lens' InstanceSummary (Maybe (HashMap Text Text))

-- | The ID for an instance that you created by using a specified service.
instanceSummary_id :: Lens' InstanceSummary (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.InstanceSummary.InstanceSummary
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.InstanceSummary.InstanceSummary
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.InstanceSummary.InstanceSummary
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.InstanceSummary.InstanceSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.InstanceSummary.InstanceSummary
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.InstanceSummary.InstanceSummary
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.InstanceSummary.InstanceSummary


module Network.AWS.Route53AutoNaming.Types.NamespaceFilterName
newtype NamespaceFilterName
NamespaceFilterName' :: Text -> NamespaceFilterName
[fromNamespaceFilterName] :: NamespaceFilterName -> Text
pattern NamespaceFilterName_TYPE :: NamespaceFilterName
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53AutoNaming.Types.NamespaceFilterName.NamespaceFilterName
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53AutoNaming.Types.NamespaceFilterName.NamespaceFilterName
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53AutoNaming.Types.NamespaceFilterName.NamespaceFilterName
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.NamespaceFilterName.NamespaceFilterName
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53AutoNaming.Types.NamespaceFilterName.NamespaceFilterName
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.NamespaceFilterName.NamespaceFilterName
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.Types.NamespaceFilterName.NamespaceFilterName
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53AutoNaming.Types.NamespaceFilterName.NamespaceFilterName
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53AutoNaming.Types.NamespaceFilterName.NamespaceFilterName
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53AutoNaming.Types.NamespaceFilterName.NamespaceFilterName
instance Network.AWS.Data.Text.ToText Network.AWS.Route53AutoNaming.Types.NamespaceFilterName.NamespaceFilterName
instance Network.AWS.Data.Text.FromText Network.AWS.Route53AutoNaming.Types.NamespaceFilterName.NamespaceFilterName
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.NamespaceFilterName.NamespaceFilterName
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.NamespaceFilterName.NamespaceFilterName
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.NamespaceFilterName.NamespaceFilterName
instance GHC.Classes.Ord Network.AWS.Route53AutoNaming.Types.NamespaceFilterName.NamespaceFilterName
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.NamespaceFilterName.NamespaceFilterName
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.NamespaceFilterName.NamespaceFilterName
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.NamespaceFilterName.NamespaceFilterName


module Network.AWS.Route53AutoNaming.Types.NamespaceFilter

-- | A complex type that identifies the namespaces that you want to list.
--   You can choose to list public or private namespaces.
--   
--   <i>See:</i> <a>newNamespaceFilter</a> smart constructor.
data NamespaceFilter
NamespaceFilter' :: Maybe FilterCondition -> NamespaceFilterName -> [Text] -> NamespaceFilter

-- | The operator that you want to use to determine whether
--   <tt>ListNamespaces</tt> returns a namespace. Valid values for
--   <tt>condition</tt> include:
--   
--   <ul>
--   <li><i>EQ</i> When you specify <tt>EQ</tt> for the condition, you can
--   choose to list only public namespaces or private namespaces, but not
--   both. <tt>EQ</tt> is the default condition and can be omitted.</li>
--   <li><i>IN</i> When you specify <tt>IN</tt> for the condition, you can
--   choose to list public namespaces, private namespaces, or both.</li>
--   <li><i>BETWEEN</i> Not applicable</li>
--   </ul>
[$sel:condition:NamespaceFilter'] :: NamespaceFilter -> Maybe FilterCondition

-- | Specify <tt>TYPE</tt>.
[$sel:name:NamespaceFilter'] :: NamespaceFilter -> NamespaceFilterName

-- | If you specify <tt>EQ</tt> for <tt>Condition</tt>, specify either
--   <tt>DNS_PUBLIC</tt> or <tt>DNS_PRIVATE</tt>.
--   
--   If you specify <tt>IN</tt> for <tt>Condition</tt>, you can specify
--   <tt>DNS_PUBLIC</tt>, <tt>DNS_PRIVATE</tt>, or both.
[$sel:values:NamespaceFilter'] :: NamespaceFilter -> [Text]

-- | Create a value of <a>NamespaceFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:condition:NamespaceFilter'</a>,
--   <a>namespaceFilter_condition</a> - The operator that you want to use
--   to determine whether <tt>ListNamespaces</tt> returns a namespace.
--   Valid values for <tt>condition</tt> include:
--   
--   <ul>
--   <li><i>EQ</i> When you specify <tt>EQ</tt> for the condition, you can
--   choose to list only public namespaces or private namespaces, but not
--   both. <tt>EQ</tt> is the default condition and can be omitted.</li>
--   <li><i>IN</i> When you specify <tt>IN</tt> for the condition, you can
--   choose to list public namespaces, private namespaces, or both.</li>
--   <li><i>BETWEEN</i> Not applicable</li>
--   </ul>
--   
--   <a>$sel:name:NamespaceFilter'</a>, <a>namespaceFilter_name</a> -
--   Specify <tt>TYPE</tt>.
--   
--   <a>$sel:values:NamespaceFilter'</a>, <a>namespaceFilter_values</a> -
--   If you specify <tt>EQ</tt> for <tt>Condition</tt>, specify either
--   <tt>DNS_PUBLIC</tt> or <tt>DNS_PRIVATE</tt>.
--   
--   If you specify <tt>IN</tt> for <tt>Condition</tt>, you can specify
--   <tt>DNS_PUBLIC</tt>, <tt>DNS_PRIVATE</tt>, or both.
newNamespaceFilter :: NamespaceFilterName -> NamespaceFilter

-- | The operator that you want to use to determine whether
--   <tt>ListNamespaces</tt> returns a namespace. Valid values for
--   <tt>condition</tt> include:
--   
--   <ul>
--   <li><i>EQ</i> When you specify <tt>EQ</tt> for the condition, you can
--   choose to list only public namespaces or private namespaces, but not
--   both. <tt>EQ</tt> is the default condition and can be omitted.</li>
--   <li><i>IN</i> When you specify <tt>IN</tt> for the condition, you can
--   choose to list public namespaces, private namespaces, or both.</li>
--   <li><i>BETWEEN</i> Not applicable</li>
--   </ul>
namespaceFilter_condition :: Lens' NamespaceFilter (Maybe FilterCondition)

-- | Specify <tt>TYPE</tt>.
namespaceFilter_name :: Lens' NamespaceFilter NamespaceFilterName

-- | If you specify <tt>EQ</tt> for <tt>Condition</tt>, specify either
--   <tt>DNS_PUBLIC</tt> or <tt>DNS_PRIVATE</tt>.
--   
--   If you specify <tt>IN</tt> for <tt>Condition</tt>, you can specify
--   <tt>DNS_PUBLIC</tt>, <tt>DNS_PRIVATE</tt>, or both.
namespaceFilter_values :: Lens' NamespaceFilter [Text]
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.NamespaceFilter.NamespaceFilter
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.NamespaceFilter.NamespaceFilter
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.NamespaceFilter.NamespaceFilter
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.NamespaceFilter.NamespaceFilter
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.NamespaceFilter.NamespaceFilter
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.NamespaceFilter.NamespaceFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.NamespaceFilter.NamespaceFilter


module Network.AWS.Route53AutoNaming.Types.NamespaceType
newtype NamespaceType
NamespaceType' :: Text -> NamespaceType
[fromNamespaceType] :: NamespaceType -> Text
pattern NamespaceType_DNS_PRIVATE :: NamespaceType
pattern NamespaceType_DNS_PUBLIC :: NamespaceType
pattern NamespaceType_HTTP :: NamespaceType
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53AutoNaming.Types.NamespaceType.NamespaceType
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53AutoNaming.Types.NamespaceType.NamespaceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53AutoNaming.Types.NamespaceType.NamespaceType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.NamespaceType.NamespaceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53AutoNaming.Types.NamespaceType.NamespaceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.NamespaceType.NamespaceType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.Types.NamespaceType.NamespaceType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53AutoNaming.Types.NamespaceType.NamespaceType
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53AutoNaming.Types.NamespaceType.NamespaceType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53AutoNaming.Types.NamespaceType.NamespaceType
instance Network.AWS.Data.Text.ToText Network.AWS.Route53AutoNaming.Types.NamespaceType.NamespaceType
instance Network.AWS.Data.Text.FromText Network.AWS.Route53AutoNaming.Types.NamespaceType.NamespaceType
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.NamespaceType.NamespaceType
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.NamespaceType.NamespaceType
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.NamespaceType.NamespaceType
instance GHC.Classes.Ord Network.AWS.Route53AutoNaming.Types.NamespaceType.NamespaceType
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.NamespaceType.NamespaceType
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.NamespaceType.NamespaceType
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.NamespaceType.NamespaceType


module Network.AWS.Route53AutoNaming.Types.OperationFilterName
newtype OperationFilterName
OperationFilterName' :: Text -> OperationFilterName
[fromOperationFilterName] :: OperationFilterName -> Text
pattern OperationFilterName_NAMESPACE_ID :: OperationFilterName
pattern OperationFilterName_SERVICE_ID :: OperationFilterName
pattern OperationFilterName_STATUS :: OperationFilterName
pattern OperationFilterName_TYPE :: OperationFilterName
pattern OperationFilterName_UPDATE_DATE :: OperationFilterName
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53AutoNaming.Types.OperationFilterName.OperationFilterName
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53AutoNaming.Types.OperationFilterName.OperationFilterName
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53AutoNaming.Types.OperationFilterName.OperationFilterName
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.OperationFilterName.OperationFilterName
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53AutoNaming.Types.OperationFilterName.OperationFilterName
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.OperationFilterName.OperationFilterName
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.Types.OperationFilterName.OperationFilterName
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53AutoNaming.Types.OperationFilterName.OperationFilterName
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53AutoNaming.Types.OperationFilterName.OperationFilterName
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53AutoNaming.Types.OperationFilterName.OperationFilterName
instance Network.AWS.Data.Text.ToText Network.AWS.Route53AutoNaming.Types.OperationFilterName.OperationFilterName
instance Network.AWS.Data.Text.FromText Network.AWS.Route53AutoNaming.Types.OperationFilterName.OperationFilterName
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.OperationFilterName.OperationFilterName
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.OperationFilterName.OperationFilterName
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.OperationFilterName.OperationFilterName
instance GHC.Classes.Ord Network.AWS.Route53AutoNaming.Types.OperationFilterName.OperationFilterName
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.OperationFilterName.OperationFilterName
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.OperationFilterName.OperationFilterName
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.OperationFilterName.OperationFilterName


module Network.AWS.Route53AutoNaming.Types.OperationFilter

-- | A complex type that lets you select the operations that you want to
--   list.
--   
--   <i>See:</i> <a>newOperationFilter</a> smart constructor.
data OperationFilter
OperationFilter' :: Maybe FilterCondition -> OperationFilterName -> [Text] -> OperationFilter

-- | The operator that you want to use to determine whether an operation
--   matches the specified value. Valid values for condition include:
--   
--   <ul>
--   <li><tt>EQ</tt>: When you specify <tt>EQ</tt> for the condition, you
--   can specify only one value. <tt>EQ</tt> is supported for
--   <tt>NAMESPACE_ID</tt>, <tt>SERVICE_ID</tt>, <tt>STATUS</tt>, and
--   <tt>TYPE</tt>. <tt>EQ</tt> is the default condition and can be
--   omitted.</li>
--   <li><tt>IN</tt>: When you specify <tt>IN</tt> for the condition, you
--   can specify a list of one or more values. <tt>IN</tt> is supported for
--   <tt>STATUS</tt> and <tt>TYPE</tt>. An operation must match one of the
--   specified values to be returned in the response.</li>
--   <li><tt>BETWEEN</tt>: Specify a start date and an end date in Unix
--   date/time format and Coordinated Universal Time (UTC). The start date
--   must be the first value. <tt>BETWEEN</tt> is supported for
--   <tt>UPDATE_DATE</tt>.</li>
--   </ul>
[$sel:condition:OperationFilter'] :: OperationFilter -> Maybe FilterCondition

-- | Specify the operations that you want to get:
--   
--   <ul>
--   <li><b>NAMESPACE_ID</b>: Gets operations related to specified
--   namespaces.</li>
--   <li><b>SERVICE_ID</b>: Gets operations related to specified
--   services.</li>
--   <li><b>STATUS</b>: Gets operations based on the status of the
--   operations: <tt>SUBMITTED</tt>, <tt>PENDING</tt>, <tt>SUCCEED</tt>, or
--   <tt>FAIL</tt>.</li>
--   <li><b>TYPE</b>: Gets specified types of operation.</li>
--   <li><b>UPDATE_DATE</b>: Gets operations that changed status during a
--   specified date/time range.</li>
--   </ul>
[$sel:name:OperationFilter'] :: OperationFilter -> OperationFilterName

-- | Specify values that are applicable to the value that you specify for
--   <tt>Name</tt>:
--   
--   <ul>
--   <li><b>NAMESPACE_ID</b>: Specify one namespace ID.</li>
--   <li><b>SERVICE_ID</b>: Specify one service ID.</li>
--   <li><b>STATUS</b>: Specify one or more statuses: <tt>SUBMITTED</tt>,
--   <tt>PENDING</tt>, <tt>SUCCEED</tt>, or <tt>FAIL</tt>.</li>
--   <li><b>TYPE</b>: Specify one or more of the following types:
--   <tt>CREATE_NAMESPACE</tt>, <tt>DELETE_NAMESPACE</tt>,
--   <tt>UPDATE_SERVICE</tt>, <tt>REGISTER_INSTANCE</tt>, or
--   <tt>DEREGISTER_INSTANCE</tt>.</li>
--   <li><b>UPDATE_DATE</b>: Specify a start date and an end date in Unix
--   date/time format and Coordinated Universal Time (UTC). The start date
--   must be the first value.</li>
--   </ul>
[$sel:values:OperationFilter'] :: OperationFilter -> [Text]

-- | Create a value of <a>OperationFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:condition:OperationFilter'</a>,
--   <a>operationFilter_condition</a> - The operator that you want to use
--   to determine whether an operation matches the specified value. Valid
--   values for condition include:
--   
--   <ul>
--   <li><tt>EQ</tt>: When you specify <tt>EQ</tt> for the condition, you
--   can specify only one value. <tt>EQ</tt> is supported for
--   <tt>NAMESPACE_ID</tt>, <tt>SERVICE_ID</tt>, <tt>STATUS</tt>, and
--   <tt>TYPE</tt>. <tt>EQ</tt> is the default condition and can be
--   omitted.</li>
--   <li><tt>IN</tt>: When you specify <tt>IN</tt> for the condition, you
--   can specify a list of one or more values. <tt>IN</tt> is supported for
--   <tt>STATUS</tt> and <tt>TYPE</tt>. An operation must match one of the
--   specified values to be returned in the response.</li>
--   <li><tt>BETWEEN</tt>: Specify a start date and an end date in Unix
--   date/time format and Coordinated Universal Time (UTC). The start date
--   must be the first value. <tt>BETWEEN</tt> is supported for
--   <tt>UPDATE_DATE</tt>.</li>
--   </ul>
--   
--   <a>$sel:name:OperationFilter'</a>, <a>operationFilter_name</a> -
--   Specify the operations that you want to get:
--   
--   <ul>
--   <li><b>NAMESPACE_ID</b>: Gets operations related to specified
--   namespaces.</li>
--   <li><b>SERVICE_ID</b>: Gets operations related to specified
--   services.</li>
--   <li><b>STATUS</b>: Gets operations based on the status of the
--   operations: <tt>SUBMITTED</tt>, <tt>PENDING</tt>, <tt>SUCCEED</tt>, or
--   <tt>FAIL</tt>.</li>
--   <li><b>TYPE</b>: Gets specified types of operation.</li>
--   <li><b>UPDATE_DATE</b>: Gets operations that changed status during a
--   specified date/time range.</li>
--   </ul>
--   
--   <a>$sel:values:OperationFilter'</a>, <a>operationFilter_values</a> -
--   Specify values that are applicable to the value that you specify for
--   <tt>Name</tt>:
--   
--   <ul>
--   <li><b>NAMESPACE_ID</b>: Specify one namespace ID.</li>
--   <li><b>SERVICE_ID</b>: Specify one service ID.</li>
--   <li><b>STATUS</b>: Specify one or more statuses: <tt>SUBMITTED</tt>,
--   <tt>PENDING</tt>, <tt>SUCCEED</tt>, or <tt>FAIL</tt>.</li>
--   <li><b>TYPE</b>: Specify one or more of the following types:
--   <tt>CREATE_NAMESPACE</tt>, <tt>DELETE_NAMESPACE</tt>,
--   <tt>UPDATE_SERVICE</tt>, <tt>REGISTER_INSTANCE</tt>, or
--   <tt>DEREGISTER_INSTANCE</tt>.</li>
--   <li><b>UPDATE_DATE</b>: Specify a start date and an end date in Unix
--   date/time format and Coordinated Universal Time (UTC). The start date
--   must be the first value.</li>
--   </ul>
newOperationFilter :: OperationFilterName -> OperationFilter

-- | The operator that you want to use to determine whether an operation
--   matches the specified value. Valid values for condition include:
--   
--   <ul>
--   <li><tt>EQ</tt>: When you specify <tt>EQ</tt> for the condition, you
--   can specify only one value. <tt>EQ</tt> is supported for
--   <tt>NAMESPACE_ID</tt>, <tt>SERVICE_ID</tt>, <tt>STATUS</tt>, and
--   <tt>TYPE</tt>. <tt>EQ</tt> is the default condition and can be
--   omitted.</li>
--   <li><tt>IN</tt>: When you specify <tt>IN</tt> for the condition, you
--   can specify a list of one or more values. <tt>IN</tt> is supported for
--   <tt>STATUS</tt> and <tt>TYPE</tt>. An operation must match one of the
--   specified values to be returned in the response.</li>
--   <li><tt>BETWEEN</tt>: Specify a start date and an end date in Unix
--   date/time format and Coordinated Universal Time (UTC). The start date
--   must be the first value. <tt>BETWEEN</tt> is supported for
--   <tt>UPDATE_DATE</tt>.</li>
--   </ul>
operationFilter_condition :: Lens' OperationFilter (Maybe FilterCondition)

-- | Specify the operations that you want to get:
--   
--   <ul>
--   <li><b>NAMESPACE_ID</b>: Gets operations related to specified
--   namespaces.</li>
--   <li><b>SERVICE_ID</b>: Gets operations related to specified
--   services.</li>
--   <li><b>STATUS</b>: Gets operations based on the status of the
--   operations: <tt>SUBMITTED</tt>, <tt>PENDING</tt>, <tt>SUCCEED</tt>, or
--   <tt>FAIL</tt>.</li>
--   <li><b>TYPE</b>: Gets specified types of operation.</li>
--   <li><b>UPDATE_DATE</b>: Gets operations that changed status during a
--   specified date/time range.</li>
--   </ul>
operationFilter_name :: Lens' OperationFilter OperationFilterName

-- | Specify values that are applicable to the value that you specify for
--   <tt>Name</tt>:
--   
--   <ul>
--   <li><b>NAMESPACE_ID</b>: Specify one namespace ID.</li>
--   <li><b>SERVICE_ID</b>: Specify one service ID.</li>
--   <li><b>STATUS</b>: Specify one or more statuses: <tt>SUBMITTED</tt>,
--   <tt>PENDING</tt>, <tt>SUCCEED</tt>, or <tt>FAIL</tt>.</li>
--   <li><b>TYPE</b>: Specify one or more of the following types:
--   <tt>CREATE_NAMESPACE</tt>, <tt>DELETE_NAMESPACE</tt>,
--   <tt>UPDATE_SERVICE</tt>, <tt>REGISTER_INSTANCE</tt>, or
--   <tt>DEREGISTER_INSTANCE</tt>.</li>
--   <li><b>UPDATE_DATE</b>: Specify a start date and an end date in Unix
--   date/time format and Coordinated Universal Time (UTC). The start date
--   must be the first value.</li>
--   </ul>
operationFilter_values :: Lens' OperationFilter [Text]
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.OperationFilter.OperationFilter
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.OperationFilter.OperationFilter
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.OperationFilter.OperationFilter
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.OperationFilter.OperationFilter
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.OperationFilter.OperationFilter
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.OperationFilter.OperationFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.OperationFilter.OperationFilter


module Network.AWS.Route53AutoNaming.Types.OperationStatus
newtype OperationStatus
OperationStatus' :: Text -> OperationStatus
[fromOperationStatus] :: OperationStatus -> Text
pattern OperationStatus_FAIL :: OperationStatus
pattern OperationStatus_PENDING :: OperationStatus
pattern OperationStatus_SUBMITTED :: OperationStatus
pattern OperationStatus_SUCCESS :: OperationStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53AutoNaming.Types.OperationStatus.OperationStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53AutoNaming.Types.OperationStatus.OperationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53AutoNaming.Types.OperationStatus.OperationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.OperationStatus.OperationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53AutoNaming.Types.OperationStatus.OperationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.OperationStatus.OperationStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.Types.OperationStatus.OperationStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53AutoNaming.Types.OperationStatus.OperationStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53AutoNaming.Types.OperationStatus.OperationStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53AutoNaming.Types.OperationStatus.OperationStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Route53AutoNaming.Types.OperationStatus.OperationStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Route53AutoNaming.Types.OperationStatus.OperationStatus
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.OperationStatus.OperationStatus
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.OperationStatus.OperationStatus
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.OperationStatus.OperationStatus
instance GHC.Classes.Ord Network.AWS.Route53AutoNaming.Types.OperationStatus.OperationStatus
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.OperationStatus.OperationStatus
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.OperationStatus.OperationStatus
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.OperationStatus.OperationStatus


module Network.AWS.Route53AutoNaming.Types.OperationSummary

-- | A complex type that contains information about an operation that
--   matches the criteria that you specified in a <a>ListOperations</a>
--   request.
--   
--   <i>See:</i> <a>newOperationSummary</a> smart constructor.
data OperationSummary
OperationSummary' :: Maybe OperationStatus -> Maybe Text -> OperationSummary

-- | The status of the operation. Values include the following:
--   
--   <ul>
--   <li><b>SUBMITTED</b>: This is the initial state immediately after you
--   submit a request.</li>
--   <li><b>PENDING</b>: Cloud Map is performing the operation.</li>
--   <li><b>SUCCESS</b>: The operation succeeded.</li>
--   <li><b>FAIL</b>: The operation failed. For the failure reason, see
--   <tt>ErrorMessage</tt>.</li>
--   </ul>
[$sel:status:OperationSummary'] :: OperationSummary -> Maybe OperationStatus

-- | The ID for an operation.
[$sel:id:OperationSummary'] :: OperationSummary -> Maybe Text

-- | Create a value of <a>OperationSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:OperationSummary'</a>, <a>operationSummary_status</a> -
--   The status of the operation. Values include the following:
--   
--   <ul>
--   <li><b>SUBMITTED</b>: This is the initial state immediately after you
--   submit a request.</li>
--   <li><b>PENDING</b>: Cloud Map is performing the operation.</li>
--   <li><b>SUCCESS</b>: The operation succeeded.</li>
--   <li><b>FAIL</b>: The operation failed. For the failure reason, see
--   <tt>ErrorMessage</tt>.</li>
--   </ul>
--   
--   <a>$sel:id:OperationSummary'</a>, <a>operationSummary_id</a> - The ID
--   for an operation.
newOperationSummary :: OperationSummary

-- | The status of the operation. Values include the following:
--   
--   <ul>
--   <li><b>SUBMITTED</b>: This is the initial state immediately after you
--   submit a request.</li>
--   <li><b>PENDING</b>: Cloud Map is performing the operation.</li>
--   <li><b>SUCCESS</b>: The operation succeeded.</li>
--   <li><b>FAIL</b>: The operation failed. For the failure reason, see
--   <tt>ErrorMessage</tt>.</li>
--   </ul>
operationSummary_status :: Lens' OperationSummary (Maybe OperationStatus)

-- | The ID for an operation.
operationSummary_id :: Lens' OperationSummary (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.OperationSummary.OperationSummary
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.OperationSummary.OperationSummary
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.OperationSummary.OperationSummary
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.OperationSummary.OperationSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.OperationSummary.OperationSummary
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.OperationSummary.OperationSummary
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.OperationSummary.OperationSummary


module Network.AWS.Route53AutoNaming.Types.OperationTargetType
newtype OperationTargetType
OperationTargetType' :: Text -> OperationTargetType
[fromOperationTargetType] :: OperationTargetType -> Text
pattern OperationTargetType_INSTANCE :: OperationTargetType
pattern OperationTargetType_NAMESPACE :: OperationTargetType
pattern OperationTargetType_SERVICE :: OperationTargetType
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53AutoNaming.Types.OperationTargetType.OperationTargetType
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53AutoNaming.Types.OperationTargetType.OperationTargetType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53AutoNaming.Types.OperationTargetType.OperationTargetType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.OperationTargetType.OperationTargetType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53AutoNaming.Types.OperationTargetType.OperationTargetType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.OperationTargetType.OperationTargetType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.Types.OperationTargetType.OperationTargetType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53AutoNaming.Types.OperationTargetType.OperationTargetType
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53AutoNaming.Types.OperationTargetType.OperationTargetType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53AutoNaming.Types.OperationTargetType.OperationTargetType
instance Network.AWS.Data.Text.ToText Network.AWS.Route53AutoNaming.Types.OperationTargetType.OperationTargetType
instance Network.AWS.Data.Text.FromText Network.AWS.Route53AutoNaming.Types.OperationTargetType.OperationTargetType
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.OperationTargetType.OperationTargetType
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.OperationTargetType.OperationTargetType
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.OperationTargetType.OperationTargetType
instance GHC.Classes.Ord Network.AWS.Route53AutoNaming.Types.OperationTargetType.OperationTargetType
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.OperationTargetType.OperationTargetType
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.OperationTargetType.OperationTargetType
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.OperationTargetType.OperationTargetType


module Network.AWS.Route53AutoNaming.Types.OperationType
newtype OperationType
OperationType' :: Text -> OperationType
[fromOperationType] :: OperationType -> Text
pattern OperationType_CREATE_NAMESPACE :: OperationType
pattern OperationType_DELETE_NAMESPACE :: OperationType
pattern OperationType_DEREGISTER_INSTANCE :: OperationType
pattern OperationType_REGISTER_INSTANCE :: OperationType
pattern OperationType_UPDATE_NAMESPACE :: OperationType
pattern OperationType_UPDATE_SERVICE :: OperationType
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53AutoNaming.Types.OperationType.OperationType
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53AutoNaming.Types.OperationType.OperationType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53AutoNaming.Types.OperationType.OperationType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.OperationType.OperationType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53AutoNaming.Types.OperationType.OperationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.OperationType.OperationType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.Types.OperationType.OperationType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53AutoNaming.Types.OperationType.OperationType
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53AutoNaming.Types.OperationType.OperationType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53AutoNaming.Types.OperationType.OperationType
instance Network.AWS.Data.Text.ToText Network.AWS.Route53AutoNaming.Types.OperationType.OperationType
instance Network.AWS.Data.Text.FromText Network.AWS.Route53AutoNaming.Types.OperationType.OperationType
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.OperationType.OperationType
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.OperationType.OperationType
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.OperationType.OperationType
instance GHC.Classes.Ord Network.AWS.Route53AutoNaming.Types.OperationType.OperationType
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.OperationType.OperationType
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.OperationType.OperationType
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.OperationType.OperationType


module Network.AWS.Route53AutoNaming.Types.Operation

-- | A complex type that contains information about a specified operation.
--   
--   <i>See:</i> <a>newOperation</a> smart constructor.
data Operation
Operation' :: Maybe OperationStatus -> Maybe POSIX -> Maybe POSIX -> Maybe (HashMap OperationTargetType Text) -> Maybe Text -> Maybe Text -> Maybe OperationType -> Maybe Text -> Operation

-- | The status of the operation. Values include the following:
--   
--   <ul>
--   <li><i>SUBMITTED</i> This is the initial state that occurs immediately
--   after you submit a request.</li>
--   <li><i>PENDING</i> Cloud Map is performing the operation.</li>
--   <li><i>SUCCESS</i> The operation succeeded.</li>
--   <li><i>FAIL</i> The operation failed. For the failure reason, see
--   <tt>ErrorMessage</tt>.</li>
--   </ul>
[$sel:status:Operation'] :: Operation -> Maybe OperationStatus

-- | The date and time that the value of <tt>Status</tt> changed to the
--   current value, in Unix date/time format and Coordinated Universal Time
--   (UTC). The value of <tt>UpdateDate</tt> is accurate to milliseconds.
--   For example, the value <tt>1516925490.087</tt> represents Friday,
--   January 26, 2018 12:11:30.087 AM.
[$sel:updateDate:Operation'] :: Operation -> Maybe POSIX

-- | The date and time that the request was submitted, in Unix date/time
--   format and Coordinated Universal Time (UTC). The value of
--   <tt>CreateDate</tt> is accurate to milliseconds. For example, the
--   value <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
[$sel:createDate:Operation'] :: Operation -> Maybe POSIX

-- | The name of the target entity that's associated with the operation:
--   
--   <ul>
--   <li><i>NAMESPACE</i> The namespace ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   <li><i>SERVICE</i> The service ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   <li><i>INSTANCE</i> The instance ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   </ul>
[$sel:targets:Operation'] :: Operation -> Maybe (HashMap OperationTargetType Text)

-- | The code associated with <tt>ErrorMessage</tt>. Values for
--   <tt>ErrorCode</tt> include the following:
--   
--   <ul>
--   <li><pre>ACCESS_DENIED</pre></li>
--   <li><pre>CANNOT_CREATE_HOSTED_ZONE</pre></li>
--   <li><pre>EXPIRED_TOKEN</pre></li>
--   <li><pre>HOSTED_ZONE_NOT_FOUND</pre></li>
--   <li><pre>INTERNAL_FAILURE</pre></li>
--   <li><pre>INVALID_CHANGE_BATCH</pre></li>
--   <li><pre>THROTTLED_REQUEST</pre></li>
--   </ul>
[$sel:errorCode:Operation'] :: Operation -> Maybe Text

-- | The ID of the operation that you want to get information about.
[$sel:id:Operation'] :: Operation -> Maybe Text

-- | The name of the operation that's associated with the specified ID.
[$sel:type':Operation'] :: Operation -> Maybe OperationType

-- | If the value of <tt>Status</tt> is <tt>FAIL</tt>, the reason that the
--   operation failed.
[$sel:errorMessage:Operation'] :: Operation -> Maybe Text

-- | Create a value of <a>Operation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Operation'</a>, <a>operation_status</a> - The status of
--   the operation. Values include the following:
--   
--   <ul>
--   <li><i>SUBMITTED</i> This is the initial state that occurs immediately
--   after you submit a request.</li>
--   <li><i>PENDING</i> Cloud Map is performing the operation.</li>
--   <li><i>SUCCESS</i> The operation succeeded.</li>
--   <li><i>FAIL</i> The operation failed. For the failure reason, see
--   <tt>ErrorMessage</tt>.</li>
--   </ul>
--   
--   <a>$sel:updateDate:Operation'</a>, <a>operation_updateDate</a> - The
--   date and time that the value of <tt>Status</tt> changed to the current
--   value, in Unix date/time format and Coordinated Universal Time (UTC).
--   The value of <tt>UpdateDate</tt> is accurate to milliseconds. For
--   example, the value <tt>1516925490.087</tt> represents Friday, January
--   26, 2018 12:11:30.087 AM.
--   
--   <a>$sel:createDate:Operation'</a>, <a>operation_createDate</a> - The
--   date and time that the request was submitted, in Unix date/time format
--   and Coordinated Universal Time (UTC). The value of <tt>CreateDate</tt>
--   is accurate to milliseconds. For example, the value
--   <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
--   
--   <a>$sel:targets:Operation'</a>, <a>operation_targets</a> - The name of
--   the target entity that's associated with the operation:
--   
--   <ul>
--   <li><i>NAMESPACE</i> The namespace ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   <li><i>SERVICE</i> The service ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   <li><i>INSTANCE</i> The instance ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   </ul>
--   
--   <a>$sel:errorCode:Operation'</a>, <a>operation_errorCode</a> - The
--   code associated with <tt>ErrorMessage</tt>. Values for
--   <tt>ErrorCode</tt> include the following:
--   
--   <ul>
--   <li><pre>ACCESS_DENIED</pre></li>
--   <li><pre>CANNOT_CREATE_HOSTED_ZONE</pre></li>
--   <li><pre>EXPIRED_TOKEN</pre></li>
--   <li><pre>HOSTED_ZONE_NOT_FOUND</pre></li>
--   <li><pre>INTERNAL_FAILURE</pre></li>
--   <li><pre>INVALID_CHANGE_BATCH</pre></li>
--   <li><pre>THROTTLED_REQUEST</pre></li>
--   </ul>
--   
--   <a>$sel:id:Operation'</a>, <a>operation_id</a> - The ID of the
--   operation that you want to get information about.
--   
--   <a>$sel:type':Operation'</a>, <a>operation_type</a> - The name of the
--   operation that's associated with the specified ID.
--   
--   <a>$sel:errorMessage:Operation'</a>, <a>operation_errorMessage</a> -
--   If the value of <tt>Status</tt> is <tt>FAIL</tt>, the reason that the
--   operation failed.
newOperation :: Operation

-- | The status of the operation. Values include the following:
--   
--   <ul>
--   <li><i>SUBMITTED</i> This is the initial state that occurs immediately
--   after you submit a request.</li>
--   <li><i>PENDING</i> Cloud Map is performing the operation.</li>
--   <li><i>SUCCESS</i> The operation succeeded.</li>
--   <li><i>FAIL</i> The operation failed. For the failure reason, see
--   <tt>ErrorMessage</tt>.</li>
--   </ul>
operation_status :: Lens' Operation (Maybe OperationStatus)

-- | The date and time that the value of <tt>Status</tt> changed to the
--   current value, in Unix date/time format and Coordinated Universal Time
--   (UTC). The value of <tt>UpdateDate</tt> is accurate to milliseconds.
--   For example, the value <tt>1516925490.087</tt> represents Friday,
--   January 26, 2018 12:11:30.087 AM.
operation_updateDate :: Lens' Operation (Maybe UTCTime)

-- | The date and time that the request was submitted, in Unix date/time
--   format and Coordinated Universal Time (UTC). The value of
--   <tt>CreateDate</tt> is accurate to milliseconds. For example, the
--   value <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
operation_createDate :: Lens' Operation (Maybe UTCTime)

-- | The name of the target entity that's associated with the operation:
--   
--   <ul>
--   <li><i>NAMESPACE</i> The namespace ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   <li><i>SERVICE</i> The service ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   <li><i>INSTANCE</i> The instance ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   </ul>
operation_targets :: Lens' Operation (Maybe (HashMap OperationTargetType Text))

-- | The code associated with <tt>ErrorMessage</tt>. Values for
--   <tt>ErrorCode</tt> include the following:
--   
--   <ul>
--   <li><pre>ACCESS_DENIED</pre></li>
--   <li><pre>CANNOT_CREATE_HOSTED_ZONE</pre></li>
--   <li><pre>EXPIRED_TOKEN</pre></li>
--   <li><pre>HOSTED_ZONE_NOT_FOUND</pre></li>
--   <li><pre>INTERNAL_FAILURE</pre></li>
--   <li><pre>INVALID_CHANGE_BATCH</pre></li>
--   <li><pre>THROTTLED_REQUEST</pre></li>
--   </ul>
operation_errorCode :: Lens' Operation (Maybe Text)

-- | The ID of the operation that you want to get information about.
operation_id :: Lens' Operation (Maybe Text)

-- | The name of the operation that's associated with the specified ID.
operation_type :: Lens' Operation (Maybe OperationType)

-- | If the value of <tt>Status</tt> is <tt>FAIL</tt>, the reason that the
--   operation failed.
operation_errorMessage :: Lens' Operation (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.Operation.Operation
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.Operation.Operation
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.Operation.Operation
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.Operation.Operation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.Operation.Operation
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.Operation.Operation
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.Operation.Operation


module Network.AWS.Route53AutoNaming.Types.RecordType
newtype RecordType
RecordType' :: Text -> RecordType
[fromRecordType] :: RecordType -> Text
pattern RecordType_A :: RecordType
pattern RecordType_AAAA :: RecordType
pattern RecordType_CNAME :: RecordType
pattern RecordType_SRV :: RecordType
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53AutoNaming.Types.RecordType.RecordType
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53AutoNaming.Types.RecordType.RecordType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53AutoNaming.Types.RecordType.RecordType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.RecordType.RecordType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53AutoNaming.Types.RecordType.RecordType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.RecordType.RecordType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.Types.RecordType.RecordType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53AutoNaming.Types.RecordType.RecordType
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53AutoNaming.Types.RecordType.RecordType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53AutoNaming.Types.RecordType.RecordType
instance Network.AWS.Data.Text.ToText Network.AWS.Route53AutoNaming.Types.RecordType.RecordType
instance Network.AWS.Data.Text.FromText Network.AWS.Route53AutoNaming.Types.RecordType.RecordType
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.RecordType.RecordType
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.RecordType.RecordType
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.RecordType.RecordType
instance GHC.Classes.Ord Network.AWS.Route53AutoNaming.Types.RecordType.RecordType
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.RecordType.RecordType
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.RecordType.RecordType
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.RecordType.RecordType


module Network.AWS.Route53AutoNaming.Types.DnsRecord

-- | A complex type that contains information about the Route 53 DNS
--   records that you want Cloud Map to create when you register an
--   instance.
--   
--   <i>See:</i> <a>newDnsRecord</a> smart constructor.
data DnsRecord
DnsRecord' :: RecordType -> Natural -> DnsRecord

-- | The type of the resource, which indicates the type of value that Route
--   53 returns in response to DNS queries. You can specify values for
--   <tt>Type</tt> in the following combinations:
--   
--   <ul>
--   <li><b><tt>A</tt></b></li>
--   <li><b><tt>AAAA</tt></b></li>
--   <li><b><tt>A</tt></b> and <b><tt>AAAA</tt></b></li>
--   <li><b><tt>SRV</tt></b></li>
--   <li><b><tt>CNAME</tt></b></li>
--   </ul>
--   
--   If you want Cloud Map to create a Route 53 alias record when you
--   register an instance, specify <tt>A</tt> or <tt>AAAA</tt> for
--   <tt>Type</tt>.
--   
--   You specify other settings, such as the IP address for <tt>A</tt> and
--   <tt>AAAA</tt> records, when you register an instance. For more
--   information, see <a>RegisterInstance</a>.
--   
--   The following values are supported:
--   
--   <ul>
--   <li><i>A</i> Route 53 returns the IP address of the resource in IPv4
--   format, such as 192.0.2.44.</li>
--   <li><i>AAAA</i> Route 53 returns the IP address of the resource in
--   IPv6 format, such as 2001:0db8:85a3:0000:0000:abcd:0001:2345.</li>
--   <li><i>CNAME</i> Route 53 returns the domain name of the resource,
--   such as www.example.com. Note the following:<ul><li>You specify the
--   domain name that you want to route traffic to when you register an
--   instance. For more information, see <a>Attributes</a> in the topic
--   <a>RegisterInstance</a>.</li><li>You must specify <tt>WEIGHTED</tt>
--   for the value of <tt>RoutingPolicy</tt>.</li><li>You can't specify
--   both <tt>CNAME</tt> for <tt>Type</tt> and settings for
--   <tt>HealthCheckConfig</tt>. If you do, the request will fail with an
--   <tt>InvalidInput</tt> error.</li></ul></li>
--   <li><i>SRV</i> Route 53 returns the value for an <tt>SRV</tt> record.
--   The value for an <tt>SRV</tt> record uses the following
--   values:<pre>priority weight port service-hostname</pre>Note the
--   following about the values:<ul><li>The values of <tt>priority</tt> and
--   <tt>weight</tt> are both set to <tt>1</tt> and can't be
--   changed.</li><li>The value of <tt>port</tt> comes from the value that
--   you specify for the <tt>AWS_INSTANCE_PORT</tt> attribute when you
--   submit a <a>RegisterInstance</a> request.</li><li>The value of
--   <tt>service-hostname</tt> is a concatenation of the following
--   values:<ul><li>The value that you specify for <tt>InstanceId</tt> when
--   you register an instance.</li><li>The name of the service.</li><li>The
--   name of the namespace.</li></ul>For example, if the value of
--   <tt>InstanceId</tt> is <tt>test</tt>, the name of the service is
--   <tt>backend</tt>, and the name of the namespace is
--   <tt>example.com</tt>, the value of <tt>service-hostname</tt> is the
--   following:<pre>test.backend.example.com</pre></li></ul>If you specify
--   settings for an <tt>SRV</tt> record, note the following:<ul><li>If you
--   specify values for <tt>AWS_INSTANCE_IPV4</tt>,
--   <tt>AWS_INSTANCE_IPV6</tt>, or both in the <tt>RegisterInstance</tt>
--   request, Cloud Map automatically creates <tt>A</tt> and/or
--   <tt>AAAA</tt> records that have the same name as the value of
--   <tt>service-hostname</tt> in the <tt>SRV</tt> record. You can ignore
--   these records.</li><li>If you're using a system that requires a
--   specific <tt>SRV</tt> format, such as HAProxy, see the <a>Name</a>
--   element in the documentation about <tt>CreateService</tt> for
--   information about how to specify the correct name
--   format.</li></ul></li>
--   </ul>
[$sel:type':DnsRecord'] :: DnsRecord -> RecordType

-- | The amount of time, in seconds, that you want DNS resolvers to cache
--   the settings for this record.
--   
--   Alias records don't include a TTL because Route 53 uses the TTL for
--   the Amazon Web Services resource that an alias record routes traffic
--   to. If you include the <tt>AWS_ALIAS_DNS_NAME</tt> attribute when you
--   submit a <a>RegisterInstance</a> request, the <tt>TTL</tt> value is
--   ignored. Always specify a TTL for the service; you can use a service
--   to register instances that create either alias or non-alias records.
[$sel:ttl:DnsRecord'] :: DnsRecord -> Natural

-- | Create a value of <a>DnsRecord</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':DnsRecord'</a>, <a>dnsRecord_type</a> - The type of the
--   resource, which indicates the type of value that Route 53 returns in
--   response to DNS queries. You can specify values for <tt>Type</tt> in
--   the following combinations:
--   
--   <ul>
--   <li><b><tt>A</tt></b></li>
--   <li><b><tt>AAAA</tt></b></li>
--   <li><b><tt>A</tt></b> and <b><tt>AAAA</tt></b></li>
--   <li><b><tt>SRV</tt></b></li>
--   <li><b><tt>CNAME</tt></b></li>
--   </ul>
--   
--   If you want Cloud Map to create a Route 53 alias record when you
--   register an instance, specify <tt>A</tt> or <tt>AAAA</tt> for
--   <tt>Type</tt>.
--   
--   You specify other settings, such as the IP address for <tt>A</tt> and
--   <tt>AAAA</tt> records, when you register an instance. For more
--   information, see <a>RegisterInstance</a>.
--   
--   The following values are supported:
--   
--   <ul>
--   <li><i>A</i> Route 53 returns the IP address of the resource in IPv4
--   format, such as 192.0.2.44.</li>
--   <li><i>AAAA</i> Route 53 returns the IP address of the resource in
--   IPv6 format, such as 2001:0db8:85a3:0000:0000:abcd:0001:2345.</li>
--   <li><i>CNAME</i> Route 53 returns the domain name of the resource,
--   such as www.example.com. Note the following:<ul><li>You specify the
--   domain name that you want to route traffic to when you register an
--   instance. For more information, see <a>Attributes</a> in the topic
--   <a>RegisterInstance</a>.</li><li>You must specify <tt>WEIGHTED</tt>
--   for the value of <tt>RoutingPolicy</tt>.</li><li>You can't specify
--   both <tt>CNAME</tt> for <tt>Type</tt> and settings for
--   <tt>HealthCheckConfig</tt>. If you do, the request will fail with an
--   <tt>InvalidInput</tt> error.</li></ul></li>
--   <li><i>SRV</i> Route 53 returns the value for an <tt>SRV</tt> record.
--   The value for an <tt>SRV</tt> record uses the following
--   values:<pre>priority weight port service-hostname</pre>Note the
--   following about the values:<ul><li>The values of <tt>priority</tt> and
--   <tt>weight</tt> are both set to <tt>1</tt> and can't be
--   changed.</li><li>The value of <tt>port</tt> comes from the value that
--   you specify for the <tt>AWS_INSTANCE_PORT</tt> attribute when you
--   submit a <a>RegisterInstance</a> request.</li><li>The value of
--   <tt>service-hostname</tt> is a concatenation of the following
--   values:<ul><li>The value that you specify for <tt>InstanceId</tt> when
--   you register an instance.</li><li>The name of the service.</li><li>The
--   name of the namespace.</li></ul>For example, if the value of
--   <tt>InstanceId</tt> is <tt>test</tt>, the name of the service is
--   <tt>backend</tt>, and the name of the namespace is
--   <tt>example.com</tt>, the value of <tt>service-hostname</tt> is the
--   following:<pre>test.backend.example.com</pre></li></ul>If you specify
--   settings for an <tt>SRV</tt> record, note the following:<ul><li>If you
--   specify values for <tt>AWS_INSTANCE_IPV4</tt>,
--   <tt>AWS_INSTANCE_IPV6</tt>, or both in the <tt>RegisterInstance</tt>
--   request, Cloud Map automatically creates <tt>A</tt> and/or
--   <tt>AAAA</tt> records that have the same name as the value of
--   <tt>service-hostname</tt> in the <tt>SRV</tt> record. You can ignore
--   these records.</li><li>If you're using a system that requires a
--   specific <tt>SRV</tt> format, such as HAProxy, see the <a>Name</a>
--   element in the documentation about <tt>CreateService</tt> for
--   information about how to specify the correct name
--   format.</li></ul></li>
--   </ul>
--   
--   <a>$sel:ttl:DnsRecord'</a>, <a>dnsRecord_ttl</a> - The amount of time,
--   in seconds, that you want DNS resolvers to cache the settings for this
--   record.
--   
--   Alias records don't include a TTL because Route 53 uses the TTL for
--   the Amazon Web Services resource that an alias record routes traffic
--   to. If you include the <tt>AWS_ALIAS_DNS_NAME</tt> attribute when you
--   submit a <a>RegisterInstance</a> request, the <tt>TTL</tt> value is
--   ignored. Always specify a TTL for the service; you can use a service
--   to register instances that create either alias or non-alias records.
newDnsRecord :: RecordType -> Natural -> DnsRecord

-- | The type of the resource, which indicates the type of value that Route
--   53 returns in response to DNS queries. You can specify values for
--   <tt>Type</tt> in the following combinations:
--   
--   <ul>
--   <li><b><tt>A</tt></b></li>
--   <li><b><tt>AAAA</tt></b></li>
--   <li><b><tt>A</tt></b> and <b><tt>AAAA</tt></b></li>
--   <li><b><tt>SRV</tt></b></li>
--   <li><b><tt>CNAME</tt></b></li>
--   </ul>
--   
--   If you want Cloud Map to create a Route 53 alias record when you
--   register an instance, specify <tt>A</tt> or <tt>AAAA</tt> for
--   <tt>Type</tt>.
--   
--   You specify other settings, such as the IP address for <tt>A</tt> and
--   <tt>AAAA</tt> records, when you register an instance. For more
--   information, see <a>RegisterInstance</a>.
--   
--   The following values are supported:
--   
--   <ul>
--   <li><i>A</i> Route 53 returns the IP address of the resource in IPv4
--   format, such as 192.0.2.44.</li>
--   <li><i>AAAA</i> Route 53 returns the IP address of the resource in
--   IPv6 format, such as 2001:0db8:85a3:0000:0000:abcd:0001:2345.</li>
--   <li><i>CNAME</i> Route 53 returns the domain name of the resource,
--   such as www.example.com. Note the following:<ul><li>You specify the
--   domain name that you want to route traffic to when you register an
--   instance. For more information, see <a>Attributes</a> in the topic
--   <a>RegisterInstance</a>.</li><li>You must specify <tt>WEIGHTED</tt>
--   for the value of <tt>RoutingPolicy</tt>.</li><li>You can't specify
--   both <tt>CNAME</tt> for <tt>Type</tt> and settings for
--   <tt>HealthCheckConfig</tt>. If you do, the request will fail with an
--   <tt>InvalidInput</tt> error.</li></ul></li>
--   <li><i>SRV</i> Route 53 returns the value for an <tt>SRV</tt> record.
--   The value for an <tt>SRV</tt> record uses the following
--   values:<pre>priority weight port service-hostname</pre>Note the
--   following about the values:<ul><li>The values of <tt>priority</tt> and
--   <tt>weight</tt> are both set to <tt>1</tt> and can't be
--   changed.</li><li>The value of <tt>port</tt> comes from the value that
--   you specify for the <tt>AWS_INSTANCE_PORT</tt> attribute when you
--   submit a <a>RegisterInstance</a> request.</li><li>The value of
--   <tt>service-hostname</tt> is a concatenation of the following
--   values:<ul><li>The value that you specify for <tt>InstanceId</tt> when
--   you register an instance.</li><li>The name of the service.</li><li>The
--   name of the namespace.</li></ul>For example, if the value of
--   <tt>InstanceId</tt> is <tt>test</tt>, the name of the service is
--   <tt>backend</tt>, and the name of the namespace is
--   <tt>example.com</tt>, the value of <tt>service-hostname</tt> is the
--   following:<pre>test.backend.example.com</pre></li></ul>If you specify
--   settings for an <tt>SRV</tt> record, note the following:<ul><li>If you
--   specify values for <tt>AWS_INSTANCE_IPV4</tt>,
--   <tt>AWS_INSTANCE_IPV6</tt>, or both in the <tt>RegisterInstance</tt>
--   request, Cloud Map automatically creates <tt>A</tt> and/or
--   <tt>AAAA</tt> records that have the same name as the value of
--   <tt>service-hostname</tt> in the <tt>SRV</tt> record. You can ignore
--   these records.</li><li>If you're using a system that requires a
--   specific <tt>SRV</tt> format, such as HAProxy, see the <a>Name</a>
--   element in the documentation about <tt>CreateService</tt> for
--   information about how to specify the correct name
--   format.</li></ul></li>
--   </ul>
dnsRecord_type :: Lens' DnsRecord RecordType

-- | The amount of time, in seconds, that you want DNS resolvers to cache
--   the settings for this record.
--   
--   Alias records don't include a TTL because Route 53 uses the TTL for
--   the Amazon Web Services resource that an alias record routes traffic
--   to. If you include the <tt>AWS_ALIAS_DNS_NAME</tt> attribute when you
--   submit a <a>RegisterInstance</a> request, the <tt>TTL</tt> value is
--   ignored. Always specify a TTL for the service; you can use a service
--   to register instances that create either alias or non-alias records.
dnsRecord_ttl :: Lens' DnsRecord Natural
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.DnsRecord.DnsRecord
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.DnsRecord.DnsRecord
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.DnsRecord.DnsRecord
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.DnsRecord.DnsRecord
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.DnsRecord.DnsRecord
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.DnsRecord.DnsRecord
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.DnsRecord.DnsRecord
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.DnsRecord.DnsRecord


module Network.AWS.Route53AutoNaming.Types.DnsConfigChange

-- | A complex type that contains information about changes to the Route 53
--   DNS records that Cloud Map creates when you register an instance.
--   
--   <i>See:</i> <a>newDnsConfigChange</a> smart constructor.
data DnsConfigChange
DnsConfigChange' :: [DnsRecord] -> DnsConfigChange

-- | An array that contains one <tt>DnsRecord</tt> object for each Route 53
--   record that you want Cloud Map to create when you register an
--   instance.
[$sel:dnsRecords:DnsConfigChange'] :: DnsConfigChange -> [DnsRecord]

-- | Create a value of <a>DnsConfigChange</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dnsRecords:DnsConfigChange'</a>,
--   <a>dnsConfigChange_dnsRecords</a> - An array that contains one
--   <tt>DnsRecord</tt> object for each Route 53 record that you want Cloud
--   Map to create when you register an instance.
newDnsConfigChange :: DnsConfigChange

-- | An array that contains one <tt>DnsRecord</tt> object for each Route 53
--   record that you want Cloud Map to create when you register an
--   instance.
dnsConfigChange_dnsRecords :: Lens' DnsConfigChange [DnsRecord]
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.DnsConfigChange.DnsConfigChange
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.DnsConfigChange.DnsConfigChange
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.DnsConfigChange.DnsConfigChange
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.DnsConfigChange.DnsConfigChange
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.DnsConfigChange.DnsConfigChange
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.DnsConfigChange.DnsConfigChange
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.DnsConfigChange.DnsConfigChange


module Network.AWS.Route53AutoNaming.Types.RoutingPolicy
newtype RoutingPolicy
RoutingPolicy' :: Text -> RoutingPolicy
[fromRoutingPolicy] :: RoutingPolicy -> Text
pattern RoutingPolicy_MULTIVALUE :: RoutingPolicy
pattern RoutingPolicy_WEIGHTED :: RoutingPolicy
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53AutoNaming.Types.RoutingPolicy.RoutingPolicy
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53AutoNaming.Types.RoutingPolicy.RoutingPolicy
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53AutoNaming.Types.RoutingPolicy.RoutingPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.RoutingPolicy.RoutingPolicy
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53AutoNaming.Types.RoutingPolicy.RoutingPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.RoutingPolicy.RoutingPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.Types.RoutingPolicy.RoutingPolicy
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53AutoNaming.Types.RoutingPolicy.RoutingPolicy
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53AutoNaming.Types.RoutingPolicy.RoutingPolicy
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53AutoNaming.Types.RoutingPolicy.RoutingPolicy
instance Network.AWS.Data.Text.ToText Network.AWS.Route53AutoNaming.Types.RoutingPolicy.RoutingPolicy
instance Network.AWS.Data.Text.FromText Network.AWS.Route53AutoNaming.Types.RoutingPolicy.RoutingPolicy
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.RoutingPolicy.RoutingPolicy
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.RoutingPolicy.RoutingPolicy
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.RoutingPolicy.RoutingPolicy
instance GHC.Classes.Ord Network.AWS.Route53AutoNaming.Types.RoutingPolicy.RoutingPolicy
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.RoutingPolicy.RoutingPolicy
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.RoutingPolicy.RoutingPolicy
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.RoutingPolicy.RoutingPolicy


module Network.AWS.Route53AutoNaming.Types.DnsConfig

-- | A complex type that contains information about the Amazon Route 53 DNS
--   records that you want Cloud Map to create when you register an
--   instance.
--   
--   <i>See:</i> <a>newDnsConfig</a> smart constructor.
data DnsConfig
DnsConfig' :: Maybe RoutingPolicy -> Maybe Text -> [DnsRecord] -> DnsConfig

-- | The routing policy that you want to apply to all Route 53 DNS records
--   that Cloud Map creates when you register an instance and specify this
--   service.
--   
--   If you want to use this service to register instances that create
--   alias records, specify <tt>WEIGHTED</tt> for the routing policy.
--   
--   You can specify the following values:
--   
--   <ul>
--   <li><i>MULTIVALUE</i> If you define a health check for the service and
--   the health check is healthy, Route 53 returns the applicable value for
--   up to eight instances.For example, suppose that the service includes
--   configurations for one <tt>A</tt> record and a health check. You use
--   the service to register 10 instances. Route 53 responds to DNS queries
--   with IP addresses for up to eight healthy instances. If fewer than
--   eight instances are healthy, Route 53 responds to every DNS query with
--   the IP addresses for all of the healthy instances.If you don't define
--   a health check for the service, Route 53 assumes that all instances
--   are healthy and returns the values for up to eight instances.For more
--   information about the multivalue routing policy, see <a>Multivalue
--   Answer Routing</a> in the <i>Route 53 Developer Guide</i>.</li>
--   <li><i>WEIGHTED</i> Route 53 returns the applicable value from one
--   randomly selected instance from among the instances that you
--   registered using the same service. Currently, all records have the
--   same weight, so you can't route more or less traffic to any
--   instances.For example, suppose that the service includes
--   configurations for one <tt>A</tt> record and a health check. You use
--   the service to register 10 instances. Route 53 responds to DNS queries
--   with the IP address for one randomly selected instance from among the
--   healthy instances. If no instances are healthy, Route 53 responds to
--   DNS queries as if all of the instances were healthy.If you don't
--   define a health check for the service, Route 53 assumes that all
--   instances are healthy and returns the applicable value for one
--   randomly selected instance.For more information about the weighted
--   routing policy, see <a>Weighted Routing</a> in the <i>Route 53
--   Developer Guide</i>.</li>
--   </ul>
[$sel:routingPolicy:DnsConfig'] :: DnsConfig -> Maybe RoutingPolicy

-- | The ID of the namespace to use for DNS configuration.
[$sel:namespaceId:DnsConfig'] :: DnsConfig -> Maybe Text

-- | An array that contains one <tt>DnsRecord</tt> object for each Route 53
--   DNS record that you want Cloud Map to create when you register an
--   instance.
[$sel:dnsRecords:DnsConfig'] :: DnsConfig -> [DnsRecord]

-- | Create a value of <a>DnsConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingPolicy:DnsConfig'</a>, <a>dnsConfig_routingPolicy</a> -
--   The routing policy that you want to apply to all Route 53 DNS records
--   that Cloud Map creates when you register an instance and specify this
--   service.
--   
--   If you want to use this service to register instances that create
--   alias records, specify <tt>WEIGHTED</tt> for the routing policy.
--   
--   You can specify the following values:
--   
--   <ul>
--   <li><i>MULTIVALUE</i> If you define a health check for the service and
--   the health check is healthy, Route 53 returns the applicable value for
--   up to eight instances.For example, suppose that the service includes
--   configurations for one <tt>A</tt> record and a health check. You use
--   the service to register 10 instances. Route 53 responds to DNS queries
--   with IP addresses for up to eight healthy instances. If fewer than
--   eight instances are healthy, Route 53 responds to every DNS query with
--   the IP addresses for all of the healthy instances.If you don't define
--   a health check for the service, Route 53 assumes that all instances
--   are healthy and returns the values for up to eight instances.For more
--   information about the multivalue routing policy, see <a>Multivalue
--   Answer Routing</a> in the <i>Route 53 Developer Guide</i>.</li>
--   <li><i>WEIGHTED</i> Route 53 returns the applicable value from one
--   randomly selected instance from among the instances that you
--   registered using the same service. Currently, all records have the
--   same weight, so you can't route more or less traffic to any
--   instances.For example, suppose that the service includes
--   configurations for one <tt>A</tt> record and a health check. You use
--   the service to register 10 instances. Route 53 responds to DNS queries
--   with the IP address for one randomly selected instance from among the
--   healthy instances. If no instances are healthy, Route 53 responds to
--   DNS queries as if all of the instances were healthy.If you don't
--   define a health check for the service, Route 53 assumes that all
--   instances are healthy and returns the applicable value for one
--   randomly selected instance.For more information about the weighted
--   routing policy, see <a>Weighted Routing</a> in the <i>Route 53
--   Developer Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:namespaceId:DnsConfig'</a>, <a>dnsConfig_namespaceId</a> - The
--   ID of the namespace to use for DNS configuration.
--   
--   <a>$sel:dnsRecords:DnsConfig'</a>, <a>dnsConfig_dnsRecords</a> - An
--   array that contains one <tt>DnsRecord</tt> object for each Route 53
--   DNS record that you want Cloud Map to create when you register an
--   instance.
newDnsConfig :: DnsConfig

-- | The routing policy that you want to apply to all Route 53 DNS records
--   that Cloud Map creates when you register an instance and specify this
--   service.
--   
--   If you want to use this service to register instances that create
--   alias records, specify <tt>WEIGHTED</tt> for the routing policy.
--   
--   You can specify the following values:
--   
--   <ul>
--   <li><i>MULTIVALUE</i> If you define a health check for the service and
--   the health check is healthy, Route 53 returns the applicable value for
--   up to eight instances.For example, suppose that the service includes
--   configurations for one <tt>A</tt> record and a health check. You use
--   the service to register 10 instances. Route 53 responds to DNS queries
--   with IP addresses for up to eight healthy instances. If fewer than
--   eight instances are healthy, Route 53 responds to every DNS query with
--   the IP addresses for all of the healthy instances.If you don't define
--   a health check for the service, Route 53 assumes that all instances
--   are healthy and returns the values for up to eight instances.For more
--   information about the multivalue routing policy, see <a>Multivalue
--   Answer Routing</a> in the <i>Route 53 Developer Guide</i>.</li>
--   <li><i>WEIGHTED</i> Route 53 returns the applicable value from one
--   randomly selected instance from among the instances that you
--   registered using the same service. Currently, all records have the
--   same weight, so you can't route more or less traffic to any
--   instances.For example, suppose that the service includes
--   configurations for one <tt>A</tt> record and a health check. You use
--   the service to register 10 instances. Route 53 responds to DNS queries
--   with the IP address for one randomly selected instance from among the
--   healthy instances. If no instances are healthy, Route 53 responds to
--   DNS queries as if all of the instances were healthy.If you don't
--   define a health check for the service, Route 53 assumes that all
--   instances are healthy and returns the applicable value for one
--   randomly selected instance.For more information about the weighted
--   routing policy, see <a>Weighted Routing</a> in the <i>Route 53
--   Developer Guide</i>.</li>
--   </ul>
dnsConfig_routingPolicy :: Lens' DnsConfig (Maybe RoutingPolicy)

-- | The ID of the namespace to use for DNS configuration.
dnsConfig_namespaceId :: Lens' DnsConfig (Maybe Text)

-- | An array that contains one <tt>DnsRecord</tt> object for each Route 53
--   DNS record that you want Cloud Map to create when you register an
--   instance.
dnsConfig_dnsRecords :: Lens' DnsConfig [DnsRecord]
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.DnsConfig.DnsConfig
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.DnsConfig.DnsConfig
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.DnsConfig.DnsConfig
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.DnsConfig.DnsConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.DnsConfig.DnsConfig
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.DnsConfig.DnsConfig
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.DnsConfig.DnsConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.DnsConfig.DnsConfig


module Network.AWS.Route53AutoNaming.Types.SOA

-- | Start of Authority (SOA) properties for a public or private DNS
--   namespace.
--   
--   <i>See:</i> <a>newSOA</a> smart constructor.
data SOA
SOA' :: Natural -> SOA

-- | The time to live (TTL) for purposes of negative caching.
[$sel:ttl:SOA'] :: SOA -> Natural

-- | Create a value of <a>SOA</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ttl:SOA'</a>, <a>soa_ttl</a> - The time to live (TTL) for
--   purposes of negative caching.
newSOA :: Natural -> SOA

-- | The time to live (TTL) for purposes of negative caching.
soa_ttl :: Lens' SOA Natural
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.SOA.SOA
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.SOA.SOA
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.SOA.SOA
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.SOA.SOA
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.SOA.SOA
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.SOA.SOA
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.SOA.SOA
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.SOA.SOA


module Network.AWS.Route53AutoNaming.Types.PublicDnsPropertiesMutable

-- | DNS properties for the public DNS namespace.
--   
--   <i>See:</i> <a>newPublicDnsPropertiesMutable</a> smart constructor.
data PublicDnsPropertiesMutable
PublicDnsPropertiesMutable' :: SOA -> PublicDnsPropertiesMutable

-- | Start of Authority (SOA) record for the hosted zone for the public DNS
--   namespace.
[$sel:soa:PublicDnsPropertiesMutable'] :: PublicDnsPropertiesMutable -> SOA

-- | Create a value of <a>PublicDnsPropertiesMutable</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:soa:PublicDnsPropertiesMutable'</a>,
--   <a>publicDnsPropertiesMutable_soa</a> - Start of Authority (SOA)
--   record for the hosted zone for the public DNS namespace.
newPublicDnsPropertiesMutable :: SOA -> PublicDnsPropertiesMutable

-- | Start of Authority (SOA) record for the hosted zone for the public DNS
--   namespace.
publicDnsPropertiesMutable_soa :: Lens' PublicDnsPropertiesMutable SOA
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.PublicDnsPropertiesMutable.PublicDnsPropertiesMutable
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.PublicDnsPropertiesMutable.PublicDnsPropertiesMutable
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.PublicDnsPropertiesMutable.PublicDnsPropertiesMutable
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.PublicDnsPropertiesMutable.PublicDnsPropertiesMutable
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.PublicDnsPropertiesMutable.PublicDnsPropertiesMutable
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.PublicDnsPropertiesMutable.PublicDnsPropertiesMutable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.PublicDnsPropertiesMutable.PublicDnsPropertiesMutable


module Network.AWS.Route53AutoNaming.Types.PublicDnsNamespaceProperties

-- | DNS properties for the public DNS namespace.
--   
--   <i>See:</i> <a>newPublicDnsNamespaceProperties</a> smart constructor.
data PublicDnsNamespaceProperties
PublicDnsNamespaceProperties' :: PublicDnsPropertiesMutable -> PublicDnsNamespaceProperties

-- | DNS properties for the public DNS namespace.
[$sel:dnsProperties:PublicDnsNamespaceProperties'] :: PublicDnsNamespaceProperties -> PublicDnsPropertiesMutable

-- | Create a value of <a>PublicDnsNamespaceProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dnsProperties:PublicDnsNamespaceProperties'</a>,
--   <a>publicDnsNamespaceProperties_dnsProperties</a> - DNS properties for
--   the public DNS namespace.
newPublicDnsNamespaceProperties :: PublicDnsPropertiesMutable -> PublicDnsNamespaceProperties

-- | DNS properties for the public DNS namespace.
publicDnsNamespaceProperties_dnsProperties :: Lens' PublicDnsNamespaceProperties PublicDnsPropertiesMutable
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.PublicDnsNamespaceProperties.PublicDnsNamespaceProperties
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.PublicDnsNamespaceProperties.PublicDnsNamespaceProperties
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.PublicDnsNamespaceProperties.PublicDnsNamespaceProperties
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.PublicDnsNamespaceProperties.PublicDnsNamespaceProperties
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.PublicDnsNamespaceProperties.PublicDnsNamespaceProperties
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.PublicDnsNamespaceProperties.PublicDnsNamespaceProperties
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.PublicDnsNamespaceProperties.PublicDnsNamespaceProperties


module Network.AWS.Route53AutoNaming.Types.PrivateDnsPropertiesMutable

-- | DNS properties for the private DNS namespace.
--   
--   <i>See:</i> <a>newPrivateDnsPropertiesMutable</a> smart constructor.
data PrivateDnsPropertiesMutable
PrivateDnsPropertiesMutable' :: SOA -> PrivateDnsPropertiesMutable

-- | Fields for the Start of Authority (SOA) record for the hosted zone for
--   the private DNS namespace.
[$sel:soa:PrivateDnsPropertiesMutable'] :: PrivateDnsPropertiesMutable -> SOA

-- | Create a value of <a>PrivateDnsPropertiesMutable</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:soa:PrivateDnsPropertiesMutable'</a>,
--   <a>privateDnsPropertiesMutable_soa</a> - Fields for the Start of
--   Authority (SOA) record for the hosted zone for the private DNS
--   namespace.
newPrivateDnsPropertiesMutable :: SOA -> PrivateDnsPropertiesMutable

-- | Fields for the Start of Authority (SOA) record for the hosted zone for
--   the private DNS namespace.
privateDnsPropertiesMutable_soa :: Lens' PrivateDnsPropertiesMutable SOA
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.PrivateDnsPropertiesMutable.PrivateDnsPropertiesMutable
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.PrivateDnsPropertiesMutable.PrivateDnsPropertiesMutable
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.PrivateDnsPropertiesMutable.PrivateDnsPropertiesMutable
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.PrivateDnsPropertiesMutable.PrivateDnsPropertiesMutable
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.PrivateDnsPropertiesMutable.PrivateDnsPropertiesMutable
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.PrivateDnsPropertiesMutable.PrivateDnsPropertiesMutable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.PrivateDnsPropertiesMutable.PrivateDnsPropertiesMutable


module Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespaceProperties

-- | DNS properties for the private DNS namespace.
--   
--   <i>See:</i> <a>newPrivateDnsNamespaceProperties</a> smart constructor.
data PrivateDnsNamespaceProperties
PrivateDnsNamespaceProperties' :: PrivateDnsPropertiesMutable -> PrivateDnsNamespaceProperties

-- | DNS properties for the private DNS namespace.
[$sel:dnsProperties:PrivateDnsNamespaceProperties'] :: PrivateDnsNamespaceProperties -> PrivateDnsPropertiesMutable

-- | Create a value of <a>PrivateDnsNamespaceProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dnsProperties:PrivateDnsNamespaceProperties'</a>,
--   <a>privateDnsNamespaceProperties_dnsProperties</a> - DNS properties
--   for the private DNS namespace.
newPrivateDnsNamespaceProperties :: PrivateDnsPropertiesMutable -> PrivateDnsNamespaceProperties

-- | DNS properties for the private DNS namespace.
privateDnsNamespaceProperties_dnsProperties :: Lens' PrivateDnsNamespaceProperties PrivateDnsPropertiesMutable
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespaceProperties.PrivateDnsNamespaceProperties
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespaceProperties.PrivateDnsNamespaceProperties
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespaceProperties.PrivateDnsNamespaceProperties
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespaceProperties.PrivateDnsNamespaceProperties
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespaceProperties.PrivateDnsNamespaceProperties
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespaceProperties.PrivateDnsNamespaceProperties
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespaceProperties.PrivateDnsNamespaceProperties


module Network.AWS.Route53AutoNaming.Types.DnsProperties

-- | A complex type that contains the ID for the Route 53 hosted zone that
--   Cloud Map creates when you create a namespace.
--   
--   <i>See:</i> <a>newDnsProperties</a> smart constructor.
data DnsProperties
DnsProperties' :: Maybe Text -> Maybe SOA -> DnsProperties

-- | The ID for the Route 53 hosted zone that Cloud Map creates when you
--   create a namespace.
[$sel:hostedZoneId:DnsProperties'] :: DnsProperties -> Maybe Text

-- | Start of Authority (SOA) record for the hosted zone.
[$sel:soa:DnsProperties'] :: DnsProperties -> Maybe SOA

-- | Create a value of <a>DnsProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:DnsProperties'</a>,
--   <a>dnsProperties_hostedZoneId</a> - The ID for the Route 53 hosted
--   zone that Cloud Map creates when you create a namespace.
--   
--   <a>$sel:soa:DnsProperties'</a>, <a>dnsProperties_soa</a> - Start of
--   Authority (SOA) record for the hosted zone.
newDnsProperties :: DnsProperties

-- | The ID for the Route 53 hosted zone that Cloud Map creates when you
--   create a namespace.
dnsProperties_hostedZoneId :: Lens' DnsProperties (Maybe Text)

-- | Start of Authority (SOA) record for the hosted zone.
dnsProperties_soa :: Lens' DnsProperties (Maybe SOA)
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.DnsProperties.DnsProperties
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.DnsProperties.DnsProperties
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.DnsProperties.DnsProperties
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.DnsProperties.DnsProperties
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.DnsProperties.DnsProperties
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.DnsProperties.DnsProperties
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.DnsProperties.DnsProperties


module Network.AWS.Route53AutoNaming.Types.NamespaceProperties

-- | A complex type that contains information that's specific to the
--   namespace type.
--   
--   <i>See:</i> <a>newNamespaceProperties</a> smart constructor.
data NamespaceProperties
NamespaceProperties' :: Maybe DnsProperties -> Maybe HttpProperties -> NamespaceProperties

-- | A complex type that contains the ID for the Route 53 hosted zone that
--   Cloud Map creates when you create a namespace.
[$sel:dnsProperties:NamespaceProperties'] :: NamespaceProperties -> Maybe DnsProperties

-- | A complex type that contains the name of an HTTP namespace.
[$sel:httpProperties:NamespaceProperties'] :: NamespaceProperties -> Maybe HttpProperties

-- | Create a value of <a>NamespaceProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dnsProperties:NamespaceProperties'</a>,
--   <a>namespaceProperties_dnsProperties</a> - A complex type that
--   contains the ID for the Route 53 hosted zone that Cloud Map creates
--   when you create a namespace.
--   
--   <a>$sel:httpProperties:NamespaceProperties'</a>,
--   <a>namespaceProperties_httpProperties</a> - A complex type that
--   contains the name of an HTTP namespace.
newNamespaceProperties :: NamespaceProperties

-- | A complex type that contains the ID for the Route 53 hosted zone that
--   Cloud Map creates when you create a namespace.
namespaceProperties_dnsProperties :: Lens' NamespaceProperties (Maybe DnsProperties)

-- | A complex type that contains the name of an HTTP namespace.
namespaceProperties_httpProperties :: Lens' NamespaceProperties (Maybe HttpProperties)
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.NamespaceProperties.NamespaceProperties
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.NamespaceProperties.NamespaceProperties
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.NamespaceProperties.NamespaceProperties
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.NamespaceProperties.NamespaceProperties
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.NamespaceProperties.NamespaceProperties
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.NamespaceProperties.NamespaceProperties
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.NamespaceProperties.NamespaceProperties


module Network.AWS.Route53AutoNaming.Types.NamespaceSummary

-- | A complex type that contains information about a namespace.
--   
--   <i>See:</i> <a>newNamespaceSummary</a> smart constructor.
data NamespaceSummary
NamespaceSummary' :: Maybe Text -> Maybe POSIX -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe NamespaceType -> Maybe Text -> Maybe NamespaceProperties -> NamespaceSummary

-- | The Amazon Resource Name (ARN) that Cloud Map assigns to the namespace
--   when you create it.
[$sel:arn:NamespaceSummary'] :: NamespaceSummary -> Maybe Text

-- | The date and time that the namespace was created.
[$sel:createDate:NamespaceSummary'] :: NamespaceSummary -> Maybe POSIX

-- | The number of services that were created using the namespace.
[$sel:serviceCount:NamespaceSummary'] :: NamespaceSummary -> Maybe Int

-- | The name of the namespace. When you create a namespace, Cloud Map
--   automatically creates a Route 53 hosted zone that has the same name as
--   the namespace.
[$sel:name:NamespaceSummary'] :: NamespaceSummary -> Maybe Text

-- | The ID of the namespace.
[$sel:id:NamespaceSummary'] :: NamespaceSummary -> Maybe Text

-- | The type of the namespace, either public or private.
[$sel:type':NamespaceSummary'] :: NamespaceSummary -> Maybe NamespaceType

-- | A description for the namespace.
[$sel:description:NamespaceSummary'] :: NamespaceSummary -> Maybe Text

-- | The properties of the namespace.
[$sel:properties:NamespaceSummary'] :: NamespaceSummary -> Maybe NamespaceProperties

-- | Create a value of <a>NamespaceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:NamespaceSummary'</a>, <a>namespaceSummary_arn</a> - The
--   Amazon Resource Name (ARN) that Cloud Map assigns to the namespace
--   when you create it.
--   
--   <a>$sel:createDate:NamespaceSummary'</a>,
--   <a>namespaceSummary_createDate</a> - The date and time that the
--   namespace was created.
--   
--   <a>$sel:serviceCount:NamespaceSummary'</a>,
--   <a>namespaceSummary_serviceCount</a> - The number of services that
--   were created using the namespace.
--   
--   <a>$sel:name:NamespaceSummary'</a>, <a>namespaceSummary_name</a> - The
--   name of the namespace. When you create a namespace, Cloud Map
--   automatically creates a Route 53 hosted zone that has the same name as
--   the namespace.
--   
--   <a>$sel:id:NamespaceSummary'</a>, <a>namespaceSummary_id</a> - The ID
--   of the namespace.
--   
--   <a>$sel:type':NamespaceSummary'</a>, <a>namespaceSummary_type</a> -
--   The type of the namespace, either public or private.
--   
--   <a>$sel:description:NamespaceSummary'</a>,
--   <a>namespaceSummary_description</a> - A description for the namespace.
--   
--   <a>$sel:properties:NamespaceSummary'</a>,
--   <a>namespaceSummary_properties</a> - The properties of the namespace.
newNamespaceSummary :: NamespaceSummary

-- | The Amazon Resource Name (ARN) that Cloud Map assigns to the namespace
--   when you create it.
namespaceSummary_arn :: Lens' NamespaceSummary (Maybe Text)

-- | The date and time that the namespace was created.
namespaceSummary_createDate :: Lens' NamespaceSummary (Maybe UTCTime)

-- | The number of services that were created using the namespace.
namespaceSummary_serviceCount :: Lens' NamespaceSummary (Maybe Int)

-- | The name of the namespace. When you create a namespace, Cloud Map
--   automatically creates a Route 53 hosted zone that has the same name as
--   the namespace.
namespaceSummary_name :: Lens' NamespaceSummary (Maybe Text)

-- | The ID of the namespace.
namespaceSummary_id :: Lens' NamespaceSummary (Maybe Text)

-- | The type of the namespace, either public or private.
namespaceSummary_type :: Lens' NamespaceSummary (Maybe NamespaceType)

-- | A description for the namespace.
namespaceSummary_description :: Lens' NamespaceSummary (Maybe Text)

-- | The properties of the namespace.
namespaceSummary_properties :: Lens' NamespaceSummary (Maybe NamespaceProperties)
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.NamespaceSummary.NamespaceSummary
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.NamespaceSummary.NamespaceSummary
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.NamespaceSummary.NamespaceSummary
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.NamespaceSummary.NamespaceSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.NamespaceSummary.NamespaceSummary
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.NamespaceSummary.NamespaceSummary
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.NamespaceSummary.NamespaceSummary


module Network.AWS.Route53AutoNaming.Types.Namespace

-- | A complex type that contains information about a specified namespace.
--   
--   <i>See:</i> <a>newNamespace</a> smart constructor.
data Namespace
Namespace' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe NamespaceType -> Maybe Text -> Maybe NamespaceProperties -> Namespace

-- | The Amazon Resource Name (ARN) that Cloud Map assigns to the namespace
--   when you create it.
[$sel:arn:Namespace'] :: Namespace -> Maybe Text

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running an operation twice.
[$sel:creatorRequestId:Namespace'] :: Namespace -> Maybe Text

-- | The date that the namespace was created, in Unix date/time format and
--   Coordinated Universal Time (UTC). The value of <tt>CreateDate</tt> is
--   accurate to milliseconds. For example, the value
--   <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
[$sel:createDate:Namespace'] :: Namespace -> Maybe POSIX

-- | The number of services that are associated with the namespace.
[$sel:serviceCount:Namespace'] :: Namespace -> Maybe Int

-- | The name of the namespace, such as <tt>example.com</tt>.
[$sel:name:Namespace'] :: Namespace -> Maybe Text

-- | The ID of a namespace.
[$sel:id:Namespace'] :: Namespace -> Maybe Text

-- | The type of the namespace. The methods for discovering instances
--   depends on the value that you specify:
--   
--   <ul>
--   <li><i>HTTP</i> Instances can be discovered only programmatically,
--   using the Cloud Map <tt>DiscoverInstances</tt> API.</li>
--   <li><i>DNS_PUBLIC</i> Instances can be discovered using public DNS
--   queries and using the <tt>DiscoverInstances</tt> API.</li>
--   <li><i>DNS_PRIVATE</i> Instances can be discovered using DNS queries
--   in VPCs and using the <tt>DiscoverInstances</tt> API.</li>
--   </ul>
[$sel:type':Namespace'] :: Namespace -> Maybe NamespaceType

-- | The description that you specify for the namespace when you create it.
[$sel:description:Namespace'] :: Namespace -> Maybe Text

-- | A complex type that contains information that's specific to the type
--   of the namespace.
[$sel:properties:Namespace'] :: Namespace -> Maybe NamespaceProperties

-- | Create a value of <a>Namespace</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Namespace'</a>, <a>namespace_arn</a> - The Amazon Resource
--   Name (ARN) that Cloud Map assigns to the namespace when you create it.
--   
--   <a>$sel:creatorRequestId:Namespace'</a>,
--   <a>namespace_creatorRequestId</a> - A unique string that identifies
--   the request and that allows failed requests to be retried without the
--   risk of running an operation twice.
--   
--   <a>$sel:createDate:Namespace'</a>, <a>namespace_createDate</a> - The
--   date that the namespace was created, in Unix date/time format and
--   Coordinated Universal Time (UTC). The value of <tt>CreateDate</tt> is
--   accurate to milliseconds. For example, the value
--   <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
--   
--   <a>$sel:serviceCount:Namespace'</a>, <a>namespace_serviceCount</a> -
--   The number of services that are associated with the namespace.
--   
--   <a>$sel:name:Namespace'</a>, <a>namespace_name</a> - The name of the
--   namespace, such as <tt>example.com</tt>.
--   
--   <a>$sel:id:Namespace'</a>, <a>namespace_id</a> - The ID of a
--   namespace.
--   
--   <a>$sel:type':Namespace'</a>, <a>namespace_type</a> - The type of the
--   namespace. The methods for discovering instances depends on the value
--   that you specify:
--   
--   <ul>
--   <li><i>HTTP</i> Instances can be discovered only programmatically,
--   using the Cloud Map <tt>DiscoverInstances</tt> API.</li>
--   <li><i>DNS_PUBLIC</i> Instances can be discovered using public DNS
--   queries and using the <tt>DiscoverInstances</tt> API.</li>
--   <li><i>DNS_PRIVATE</i> Instances can be discovered using DNS queries
--   in VPCs and using the <tt>DiscoverInstances</tt> API.</li>
--   </ul>
--   
--   <a>$sel:description:Namespace'</a>, <a>namespace_description</a> - The
--   description that you specify for the namespace when you create it.
--   
--   <a>$sel:properties:Namespace'</a>, <a>namespace_properties</a> - A
--   complex type that contains information that's specific to the type of
--   the namespace.
newNamespace :: Namespace

-- | The Amazon Resource Name (ARN) that Cloud Map assigns to the namespace
--   when you create it.
namespace_arn :: Lens' Namespace (Maybe Text)

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running an operation twice.
namespace_creatorRequestId :: Lens' Namespace (Maybe Text)

-- | The date that the namespace was created, in Unix date/time format and
--   Coordinated Universal Time (UTC). The value of <tt>CreateDate</tt> is
--   accurate to milliseconds. For example, the value
--   <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
namespace_createDate :: Lens' Namespace (Maybe UTCTime)

-- | The number of services that are associated with the namespace.
namespace_serviceCount :: Lens' Namespace (Maybe Int)

-- | The name of the namespace, such as <tt>example.com</tt>.
namespace_name :: Lens' Namespace (Maybe Text)

-- | The ID of a namespace.
namespace_id :: Lens' Namespace (Maybe Text)

-- | The type of the namespace. The methods for discovering instances
--   depends on the value that you specify:
--   
--   <ul>
--   <li><i>HTTP</i> Instances can be discovered only programmatically,
--   using the Cloud Map <tt>DiscoverInstances</tt> API.</li>
--   <li><i>DNS_PUBLIC</i> Instances can be discovered using public DNS
--   queries and using the <tt>DiscoverInstances</tt> API.</li>
--   <li><i>DNS_PRIVATE</i> Instances can be discovered using DNS queries
--   in VPCs and using the <tt>DiscoverInstances</tt> API.</li>
--   </ul>
namespace_type :: Lens' Namespace (Maybe NamespaceType)

-- | The description that you specify for the namespace when you create it.
namespace_description :: Lens' Namespace (Maybe Text)

-- | A complex type that contains information that's specific to the type
--   of the namespace.
namespace_properties :: Lens' Namespace (Maybe NamespaceProperties)
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.Namespace.Namespace
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.Namespace.Namespace
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.Namespace.Namespace
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.Namespace.Namespace
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.Namespace.Namespace
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.Namespace.Namespace
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.Namespace.Namespace


module Network.AWS.Route53AutoNaming.Types.SOAChange

-- | Updated Start of Authority (SOA) properties for a public or private
--   DNS namespace.
--   
--   <i>See:</i> <a>newSOAChange</a> smart constructor.
data SOAChange
SOAChange' :: Natural -> SOAChange

-- | The updated time to live (TTL) for purposes of negative caching.
[$sel:ttl:SOAChange'] :: SOAChange -> Natural

-- | Create a value of <a>SOAChange</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ttl:SOAChange'</a>, <a>sOAChange_ttl</a> - The updated time to
--   live (TTL) for purposes of negative caching.
newSOAChange :: Natural -> SOAChange

-- | The updated time to live (TTL) for purposes of negative caching.
sOAChange_ttl :: Lens' SOAChange Natural
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.SOAChange.SOAChange
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.SOAChange.SOAChange
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.SOAChange.SOAChange
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.SOAChange.SOAChange
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.SOAChange.SOAChange
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.SOAChange.SOAChange
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.SOAChange.SOAChange


module Network.AWS.Route53AutoNaming.Types.PublicDnsPropertiesMutableChange

-- | Updated DNS properties for the public DNS namespace.
--   
--   <i>See:</i> <a>newPublicDnsPropertiesMutableChange</a> smart
--   constructor.
data PublicDnsPropertiesMutableChange
PublicDnsPropertiesMutableChange' :: SOAChange -> PublicDnsPropertiesMutableChange

-- | Updated fields for the Start of Authority (SOA) record for the hosted
--   zone for the public DNS namespace.
[$sel:soa:PublicDnsPropertiesMutableChange'] :: PublicDnsPropertiesMutableChange -> SOAChange

-- | Create a value of <a>PublicDnsPropertiesMutableChange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:soa:PublicDnsPropertiesMutableChange'</a>,
--   <a>publicDnsPropertiesMutableChange_soa</a> - Updated fields for the
--   Start of Authority (SOA) record for the hosted zone for the public DNS
--   namespace.
newPublicDnsPropertiesMutableChange :: SOAChange -> PublicDnsPropertiesMutableChange

-- | Updated fields for the Start of Authority (SOA) record for the hosted
--   zone for the public DNS namespace.
publicDnsPropertiesMutableChange_soa :: Lens' PublicDnsPropertiesMutableChange SOAChange
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.PublicDnsPropertiesMutableChange.PublicDnsPropertiesMutableChange
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.PublicDnsPropertiesMutableChange.PublicDnsPropertiesMutableChange
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.PublicDnsPropertiesMutableChange.PublicDnsPropertiesMutableChange
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.PublicDnsPropertiesMutableChange.PublicDnsPropertiesMutableChange
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.PublicDnsPropertiesMutableChange.PublicDnsPropertiesMutableChange
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.PublicDnsPropertiesMutableChange.PublicDnsPropertiesMutableChange
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.PublicDnsPropertiesMutableChange.PublicDnsPropertiesMutableChange


module Network.AWS.Route53AutoNaming.Types.PublicDnsNamespacePropertiesChange

-- | Updated properties for the public DNS namespace.
--   
--   <i>See:</i> <a>newPublicDnsNamespacePropertiesChange</a> smart
--   constructor.
data PublicDnsNamespacePropertiesChange
PublicDnsNamespacePropertiesChange' :: PublicDnsPropertiesMutableChange -> PublicDnsNamespacePropertiesChange

-- | Updated DNS properties for the hosted zone for the public DNS
--   namespace.
[$sel:dnsProperties:PublicDnsNamespacePropertiesChange'] :: PublicDnsNamespacePropertiesChange -> PublicDnsPropertiesMutableChange

-- | Create a value of <a>PublicDnsNamespacePropertiesChange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dnsProperties:PublicDnsNamespacePropertiesChange'</a>,
--   <a>publicDnsNamespacePropertiesChange_dnsProperties</a> - Updated DNS
--   properties for the hosted zone for the public DNS namespace.
newPublicDnsNamespacePropertiesChange :: PublicDnsPropertiesMutableChange -> PublicDnsNamespacePropertiesChange

-- | Updated DNS properties for the hosted zone for the public DNS
--   namespace.
publicDnsNamespacePropertiesChange_dnsProperties :: Lens' PublicDnsNamespacePropertiesChange PublicDnsPropertiesMutableChange
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.PublicDnsNamespacePropertiesChange.PublicDnsNamespacePropertiesChange
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.PublicDnsNamespacePropertiesChange.PublicDnsNamespacePropertiesChange
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.PublicDnsNamespacePropertiesChange.PublicDnsNamespacePropertiesChange
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.PublicDnsNamespacePropertiesChange.PublicDnsNamespacePropertiesChange
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.PublicDnsNamespacePropertiesChange.PublicDnsNamespacePropertiesChange
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.PublicDnsNamespacePropertiesChange.PublicDnsNamespacePropertiesChange
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.PublicDnsNamespacePropertiesChange.PublicDnsNamespacePropertiesChange


module Network.AWS.Route53AutoNaming.Types.PublicDnsNamespaceChange

-- | Updated properties for the public DNS namespace.
--   
--   <i>See:</i> <a>newPublicDnsNamespaceChange</a> smart constructor.
data PublicDnsNamespaceChange
PublicDnsNamespaceChange' :: Maybe Text -> Maybe PublicDnsNamespacePropertiesChange -> PublicDnsNamespaceChange

-- | An updated description for the public DNS namespace.
[$sel:description:PublicDnsNamespaceChange'] :: PublicDnsNamespaceChange -> Maybe Text

-- | Properties to be updated in the public DNS namespace.
[$sel:properties:PublicDnsNamespaceChange'] :: PublicDnsNamespaceChange -> Maybe PublicDnsNamespacePropertiesChange

-- | Create a value of <a>PublicDnsNamespaceChange</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:PublicDnsNamespaceChange'</a>,
--   <a>publicDnsNamespaceChange_description</a> - An updated description
--   for the public DNS namespace.
--   
--   <a>$sel:properties:PublicDnsNamespaceChange'</a>,
--   <a>publicDnsNamespaceChange_properties</a> - Properties to be updated
--   in the public DNS namespace.
newPublicDnsNamespaceChange :: PublicDnsNamespaceChange

-- | An updated description for the public DNS namespace.
publicDnsNamespaceChange_description :: Lens' PublicDnsNamespaceChange (Maybe Text)

-- | Properties to be updated in the public DNS namespace.
publicDnsNamespaceChange_properties :: Lens' PublicDnsNamespaceChange (Maybe PublicDnsNamespacePropertiesChange)
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.PublicDnsNamespaceChange.PublicDnsNamespaceChange
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.PublicDnsNamespaceChange.PublicDnsNamespaceChange
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.PublicDnsNamespaceChange.PublicDnsNamespaceChange
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.PublicDnsNamespaceChange.PublicDnsNamespaceChange
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.PublicDnsNamespaceChange.PublicDnsNamespaceChange
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.PublicDnsNamespaceChange.PublicDnsNamespaceChange
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.PublicDnsNamespaceChange.PublicDnsNamespaceChange


module Network.AWS.Route53AutoNaming.Types.PrivateDnsPropertiesMutableChange

-- | Updated DNS properties for the private DNS namespace.
--   
--   <i>See:</i> <a>newPrivateDnsPropertiesMutableChange</a> smart
--   constructor.
data PrivateDnsPropertiesMutableChange
PrivateDnsPropertiesMutableChange' :: SOAChange -> PrivateDnsPropertiesMutableChange

-- | Updated fields for the Start of Authority (SOA) record for the hosted
--   zone for the private DNS namespace.
[$sel:soa:PrivateDnsPropertiesMutableChange'] :: PrivateDnsPropertiesMutableChange -> SOAChange

-- | Create a value of <a>PrivateDnsPropertiesMutableChange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:soa:PrivateDnsPropertiesMutableChange'</a>,
--   <a>privateDnsPropertiesMutableChange_soa</a> - Updated fields for the
--   Start of Authority (SOA) record for the hosted zone for the private
--   DNS namespace.
newPrivateDnsPropertiesMutableChange :: SOAChange -> PrivateDnsPropertiesMutableChange

-- | Updated fields for the Start of Authority (SOA) record for the hosted
--   zone for the private DNS namespace.
privateDnsPropertiesMutableChange_soa :: Lens' PrivateDnsPropertiesMutableChange SOAChange
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.PrivateDnsPropertiesMutableChange.PrivateDnsPropertiesMutableChange
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.PrivateDnsPropertiesMutableChange.PrivateDnsPropertiesMutableChange
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.PrivateDnsPropertiesMutableChange.PrivateDnsPropertiesMutableChange
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.PrivateDnsPropertiesMutableChange.PrivateDnsPropertiesMutableChange
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.PrivateDnsPropertiesMutableChange.PrivateDnsPropertiesMutableChange
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.PrivateDnsPropertiesMutableChange.PrivateDnsPropertiesMutableChange
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.PrivateDnsPropertiesMutableChange.PrivateDnsPropertiesMutableChange


module Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespacePropertiesChange

-- | Updated properties for the private DNS namespace.
--   
--   <i>See:</i> <a>newPrivateDnsNamespacePropertiesChange</a> smart
--   constructor.
data PrivateDnsNamespacePropertiesChange
PrivateDnsNamespacePropertiesChange' :: PrivateDnsPropertiesMutableChange -> PrivateDnsNamespacePropertiesChange

-- | Updated DNS properties for the private DNS namespace.
[$sel:dnsProperties:PrivateDnsNamespacePropertiesChange'] :: PrivateDnsNamespacePropertiesChange -> PrivateDnsPropertiesMutableChange

-- | Create a value of <a>PrivateDnsNamespacePropertiesChange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dnsProperties:PrivateDnsNamespacePropertiesChange'</a>,
--   <a>privateDnsNamespacePropertiesChange_dnsProperties</a> - Updated DNS
--   properties for the private DNS namespace.
newPrivateDnsNamespacePropertiesChange :: PrivateDnsPropertiesMutableChange -> PrivateDnsNamespacePropertiesChange

-- | Updated DNS properties for the private DNS namespace.
privateDnsNamespacePropertiesChange_dnsProperties :: Lens' PrivateDnsNamespacePropertiesChange PrivateDnsPropertiesMutableChange
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespacePropertiesChange.PrivateDnsNamespacePropertiesChange
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespacePropertiesChange.PrivateDnsNamespacePropertiesChange
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespacePropertiesChange.PrivateDnsNamespacePropertiesChange
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespacePropertiesChange.PrivateDnsNamespacePropertiesChange
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespacePropertiesChange.PrivateDnsNamespacePropertiesChange
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespacePropertiesChange.PrivateDnsNamespacePropertiesChange
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespacePropertiesChange.PrivateDnsNamespacePropertiesChange


module Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespaceChange

-- | Updated properties for the private DNS namespace.
--   
--   <i>See:</i> <a>newPrivateDnsNamespaceChange</a> smart constructor.
data PrivateDnsNamespaceChange
PrivateDnsNamespaceChange' :: Maybe Text -> Maybe PrivateDnsNamespacePropertiesChange -> PrivateDnsNamespaceChange

-- | An updated description for the private DNS namespace.
[$sel:description:PrivateDnsNamespaceChange'] :: PrivateDnsNamespaceChange -> Maybe Text

-- | Properties to be updated in the private DNS namespace.
[$sel:properties:PrivateDnsNamespaceChange'] :: PrivateDnsNamespaceChange -> Maybe PrivateDnsNamespacePropertiesChange

-- | Create a value of <a>PrivateDnsNamespaceChange</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:PrivateDnsNamespaceChange'</a>,
--   <a>privateDnsNamespaceChange_description</a> - An updated description
--   for the private DNS namespace.
--   
--   <a>$sel:properties:PrivateDnsNamespaceChange'</a>,
--   <a>privateDnsNamespaceChange_properties</a> - Properties to be updated
--   in the private DNS namespace.
newPrivateDnsNamespaceChange :: PrivateDnsNamespaceChange

-- | An updated description for the private DNS namespace.
privateDnsNamespaceChange_description :: Lens' PrivateDnsNamespaceChange (Maybe Text)

-- | Properties to be updated in the private DNS namespace.
privateDnsNamespaceChange_properties :: Lens' PrivateDnsNamespaceChange (Maybe PrivateDnsNamespacePropertiesChange)
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespaceChange.PrivateDnsNamespaceChange
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespaceChange.PrivateDnsNamespaceChange
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespaceChange.PrivateDnsNamespaceChange
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespaceChange.PrivateDnsNamespaceChange
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespaceChange.PrivateDnsNamespaceChange
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespaceChange.PrivateDnsNamespaceChange
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.PrivateDnsNamespaceChange.PrivateDnsNamespaceChange


module Network.AWS.Route53AutoNaming.Types.ServiceChange

-- | A complex type that contains changes to an existing service.
--   
--   <i>See:</i> <a>newServiceChange</a> smart constructor.
data ServiceChange
ServiceChange' :: Maybe HealthCheckConfig -> Maybe DnsConfigChange -> Maybe Text -> ServiceChange

-- | <i>Public DNS and HTTP namespaces only.</i> Settings for an optional
--   health check. If you specify settings for a health check, Cloud Map
--   associates the health check with the records that you specify in
--   <tt>DnsConfig</tt>.
[$sel:healthCheckConfig:ServiceChange'] :: ServiceChange -> Maybe HealthCheckConfig

-- | Information about the Route 53 DNS records that you want Cloud Map to
--   create when you register an instance.
[$sel:dnsConfig:ServiceChange'] :: ServiceChange -> Maybe DnsConfigChange

-- | A description for the service.
[$sel:description:ServiceChange'] :: ServiceChange -> Maybe Text

-- | Create a value of <a>ServiceChange</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthCheckConfig:ServiceChange'</a>,
--   <a>serviceChange_healthCheckConfig</a> - <i>Public DNS and HTTP
--   namespaces only.</i> Settings for an optional health check. If you
--   specify settings for a health check, Cloud Map associates the health
--   check with the records that you specify in <tt>DnsConfig</tt>.
--   
--   <a>$sel:dnsConfig:ServiceChange'</a>, <a>serviceChange_dnsConfig</a> -
--   Information about the Route 53 DNS records that you want Cloud Map to
--   create when you register an instance.
--   
--   <a>$sel:description:ServiceChange'</a>,
--   <a>serviceChange_description</a> - A description for the service.
newServiceChange :: ServiceChange

-- | <i>Public DNS and HTTP namespaces only.</i> Settings for an optional
--   health check. If you specify settings for a health check, Cloud Map
--   associates the health check with the records that you specify in
--   <tt>DnsConfig</tt>.
serviceChange_healthCheckConfig :: Lens' ServiceChange (Maybe HealthCheckConfig)

-- | Information about the Route 53 DNS records that you want Cloud Map to
--   create when you register an instance.
serviceChange_dnsConfig :: Lens' ServiceChange (Maybe DnsConfigChange)

-- | A description for the service.
serviceChange_description :: Lens' ServiceChange (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.ServiceChange.ServiceChange
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.ServiceChange.ServiceChange
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.ServiceChange.ServiceChange
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.ServiceChange.ServiceChange
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.ServiceChange.ServiceChange
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.ServiceChange.ServiceChange
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.ServiceChange.ServiceChange


module Network.AWS.Route53AutoNaming.Types.ServiceFilterName
newtype ServiceFilterName
ServiceFilterName' :: Text -> ServiceFilterName
[fromServiceFilterName] :: ServiceFilterName -> Text
pattern ServiceFilterName_NAMESPACE_ID :: ServiceFilterName
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53AutoNaming.Types.ServiceFilterName.ServiceFilterName
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53AutoNaming.Types.ServiceFilterName.ServiceFilterName
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53AutoNaming.Types.ServiceFilterName.ServiceFilterName
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.ServiceFilterName.ServiceFilterName
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53AutoNaming.Types.ServiceFilterName.ServiceFilterName
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.ServiceFilterName.ServiceFilterName
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.Types.ServiceFilterName.ServiceFilterName
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53AutoNaming.Types.ServiceFilterName.ServiceFilterName
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53AutoNaming.Types.ServiceFilterName.ServiceFilterName
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53AutoNaming.Types.ServiceFilterName.ServiceFilterName
instance Network.AWS.Data.Text.ToText Network.AWS.Route53AutoNaming.Types.ServiceFilterName.ServiceFilterName
instance Network.AWS.Data.Text.FromText Network.AWS.Route53AutoNaming.Types.ServiceFilterName.ServiceFilterName
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.ServiceFilterName.ServiceFilterName
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.ServiceFilterName.ServiceFilterName
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.ServiceFilterName.ServiceFilterName
instance GHC.Classes.Ord Network.AWS.Route53AutoNaming.Types.ServiceFilterName.ServiceFilterName
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.ServiceFilterName.ServiceFilterName
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.ServiceFilterName.ServiceFilterName
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.ServiceFilterName.ServiceFilterName


module Network.AWS.Route53AutoNaming.Types.ServiceFilter

-- | A complex type that lets you specify the namespaces that you want to
--   list services for.
--   
--   <i>See:</i> <a>newServiceFilter</a> smart constructor.
data ServiceFilter
ServiceFilter' :: Maybe FilterCondition -> ServiceFilterName -> [Text] -> ServiceFilter

-- | The operator that you want to use to determine whether a service is
--   returned by <tt>ListServices</tt>. Valid values for <tt>Condition</tt>
--   include the following:
--   
--   <ul>
--   <li><tt>EQ</tt>: When you specify <tt>EQ</tt>, specify one namespace
--   ID for <tt>Values</tt>. <tt>EQ</tt> is the default condition and can
--   be omitted.</li>
--   <li><tt>IN</tt>: When you specify <tt>IN</tt>, specify a list of the
--   IDs for the namespaces that you want <tt>ListServices</tt> to return a
--   list of services for.</li>
--   <li><tt>BETWEEN</tt>: Not applicable.</li>
--   </ul>
[$sel:condition:ServiceFilter'] :: ServiceFilter -> Maybe FilterCondition

-- | Specify <tt>NAMESPACE_ID</tt>.
[$sel:name:ServiceFilter'] :: ServiceFilter -> ServiceFilterName

-- | The values that are applicable to the value that you specify for
--   <tt>Condition</tt> to filter the list of services.
[$sel:values:ServiceFilter'] :: ServiceFilter -> [Text]

-- | Create a value of <a>ServiceFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:condition:ServiceFilter'</a>, <a>serviceFilter_condition</a> -
--   The operator that you want to use to determine whether a service is
--   returned by <tt>ListServices</tt>. Valid values for <tt>Condition</tt>
--   include the following:
--   
--   <ul>
--   <li><tt>EQ</tt>: When you specify <tt>EQ</tt>, specify one namespace
--   ID for <tt>Values</tt>. <tt>EQ</tt> is the default condition and can
--   be omitted.</li>
--   <li><tt>IN</tt>: When you specify <tt>IN</tt>, specify a list of the
--   IDs for the namespaces that you want <tt>ListServices</tt> to return a
--   list of services for.</li>
--   <li><tt>BETWEEN</tt>: Not applicable.</li>
--   </ul>
--   
--   <a>$sel:name:ServiceFilter'</a>, <a>serviceFilter_name</a> - Specify
--   <tt>NAMESPACE_ID</tt>.
--   
--   <a>$sel:values:ServiceFilter'</a>, <a>serviceFilter_values</a> - The
--   values that are applicable to the value that you specify for
--   <tt>Condition</tt> to filter the list of services.
newServiceFilter :: ServiceFilterName -> ServiceFilter

-- | The operator that you want to use to determine whether a service is
--   returned by <tt>ListServices</tt>. Valid values for <tt>Condition</tt>
--   include the following:
--   
--   <ul>
--   <li><tt>EQ</tt>: When you specify <tt>EQ</tt>, specify one namespace
--   ID for <tt>Values</tt>. <tt>EQ</tt> is the default condition and can
--   be omitted.</li>
--   <li><tt>IN</tt>: When you specify <tt>IN</tt>, specify a list of the
--   IDs for the namespaces that you want <tt>ListServices</tt> to return a
--   list of services for.</li>
--   <li><tt>BETWEEN</tt>: Not applicable.</li>
--   </ul>
serviceFilter_condition :: Lens' ServiceFilter (Maybe FilterCondition)

-- | Specify <tt>NAMESPACE_ID</tt>.
serviceFilter_name :: Lens' ServiceFilter ServiceFilterName

-- | The values that are applicable to the value that you specify for
--   <tt>Condition</tt> to filter the list of services.
serviceFilter_values :: Lens' ServiceFilter [Text]
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.ServiceFilter.ServiceFilter
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.ServiceFilter.ServiceFilter
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.ServiceFilter.ServiceFilter
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.ServiceFilter.ServiceFilter
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.ServiceFilter.ServiceFilter
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.ServiceFilter.ServiceFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.ServiceFilter.ServiceFilter


module Network.AWS.Route53AutoNaming.Types.ServiceType
newtype ServiceType
ServiceType' :: Text -> ServiceType
[fromServiceType] :: ServiceType -> Text
pattern ServiceType_DNS :: ServiceType
pattern ServiceType_DNS_HTTP :: ServiceType
pattern ServiceType_HTTP :: ServiceType
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53AutoNaming.Types.ServiceType.ServiceType
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53AutoNaming.Types.ServiceType.ServiceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53AutoNaming.Types.ServiceType.ServiceType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.ServiceType.ServiceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53AutoNaming.Types.ServiceType.ServiceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.ServiceType.ServiceType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.Types.ServiceType.ServiceType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53AutoNaming.Types.ServiceType.ServiceType
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53AutoNaming.Types.ServiceType.ServiceType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53AutoNaming.Types.ServiceType.ServiceType
instance Network.AWS.Data.Text.ToText Network.AWS.Route53AutoNaming.Types.ServiceType.ServiceType
instance Network.AWS.Data.Text.FromText Network.AWS.Route53AutoNaming.Types.ServiceType.ServiceType
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.ServiceType.ServiceType
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.ServiceType.ServiceType
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.ServiceType.ServiceType
instance GHC.Classes.Ord Network.AWS.Route53AutoNaming.Types.ServiceType.ServiceType
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.ServiceType.ServiceType
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.ServiceType.ServiceType
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.ServiceType.ServiceType


module Network.AWS.Route53AutoNaming.Types.ServiceSummary

-- | A complex type that contains information about a specified service.
--   
--   <i>See:</i> <a>newServiceSummary</a> smart constructor.
data ServiceSummary
ServiceSummary' :: Maybe Int -> Maybe Text -> Maybe HealthCheckConfig -> Maybe POSIX -> Maybe HealthCheckCustomConfig -> Maybe Text -> Maybe Text -> Maybe ServiceType -> Maybe DnsConfig -> Maybe Text -> ServiceSummary

-- | The number of instances that are currently associated with the
--   service. Instances that were previously associated with the service
--   but that are deleted aren't included in the count. The count might not
--   reflect pending registrations and deregistrations.
[$sel:instanceCount:ServiceSummary'] :: ServiceSummary -> Maybe Int

-- | The Amazon Resource Name (ARN) that Cloud Map assigns to the service
--   when you create it.
[$sel:arn:ServiceSummary'] :: ServiceSummary -> Maybe Text

-- | <i>Public DNS and HTTP namespaces only.</i> Settings for an optional
--   health check. If you specify settings for a health check, Cloud Map
--   associates the health check with the records that you specify in
--   <tt>DnsConfig</tt>.
[$sel:healthCheckConfig:ServiceSummary'] :: ServiceSummary -> Maybe HealthCheckConfig

-- | The date and time that the service was created.
[$sel:createDate:ServiceSummary'] :: ServiceSummary -> Maybe POSIX

-- | Information about an optional custom health check. A custom health
--   check, which requires that you use a third-party health checker to
--   evaluate the health of your resources, is useful in the following
--   circumstances:
--   
--   <ul>
--   <li>You can't use a health check that's defined by
--   <tt>HealthCheckConfig</tt> because the resource isn't available over
--   the internet. For example, you can use a custom health check when the
--   instance is in an Amazon VPC. (To check the health of resources in a
--   VPC, the health checker must also be in the VPC.)</li>
--   <li>You want to use a third-party health checker regardless of where
--   your resources are located.</li>
--   </ul>
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
[$sel:healthCheckCustomConfig:ServiceSummary'] :: ServiceSummary -> Maybe HealthCheckCustomConfig

-- | The name of the service.
[$sel:name:ServiceSummary'] :: ServiceSummary -> Maybe Text

-- | The ID that Cloud Map assigned to the service when you created it.
[$sel:id:ServiceSummary'] :: ServiceSummary -> Maybe Text

-- | Describes the systems that can be used to discover the service
--   instances.
--   
--   <ul>
--   <li><i>DNS_HTTP</i> The service instances can be discovered using
--   either DNS queries or the <tt>DiscoverInstances</tt> API
--   operation.</li>
--   <li><i>HTTP</i> The service instances can only be discovered using the
--   <tt>DiscoverInstances</tt> API operation.</li>
--   <li><i>DNS</i> Reserved.</li>
--   </ul>
[$sel:type':ServiceSummary'] :: ServiceSummary -> Maybe ServiceType

-- | Information about the Route 53 DNS records that you want Cloud Map to
--   create when you register an instance.
[$sel:dnsConfig:ServiceSummary'] :: ServiceSummary -> Maybe DnsConfig

-- | The description that you specify when you create the service.
[$sel:description:ServiceSummary'] :: ServiceSummary -> Maybe Text

-- | Create a value of <a>ServiceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceCount:ServiceSummary'</a>,
--   <a>serviceSummary_instanceCount</a> - The number of instances that are
--   currently associated with the service. Instances that were previously
--   associated with the service but that are deleted aren't included in
--   the count. The count might not reflect pending registrations and
--   deregistrations.
--   
--   <a>$sel:arn:ServiceSummary'</a>, <a>serviceSummary_arn</a> - The
--   Amazon Resource Name (ARN) that Cloud Map assigns to the service when
--   you create it.
--   
--   <a>$sel:healthCheckConfig:ServiceSummary'</a>,
--   <a>serviceSummary_healthCheckConfig</a> - <i>Public DNS and HTTP
--   namespaces only.</i> Settings for an optional health check. If you
--   specify settings for a health check, Cloud Map associates the health
--   check with the records that you specify in <tt>DnsConfig</tt>.
--   
--   <a>$sel:createDate:ServiceSummary'</a>,
--   <a>serviceSummary_createDate</a> - The date and time that the service
--   was created.
--   
--   <a>$sel:healthCheckCustomConfig:ServiceSummary'</a>,
--   <a>serviceSummary_healthCheckCustomConfig</a> - Information about an
--   optional custom health check. A custom health check, which requires
--   that you use a third-party health checker to evaluate the health of
--   your resources, is useful in the following circumstances:
--   
--   <ul>
--   <li>You can't use a health check that's defined by
--   <tt>HealthCheckConfig</tt> because the resource isn't available over
--   the internet. For example, you can use a custom health check when the
--   instance is in an Amazon VPC. (To check the health of resources in a
--   VPC, the health checker must also be in the VPC.)</li>
--   <li>You want to use a third-party health checker regardless of where
--   your resources are located.</li>
--   </ul>
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   <a>$sel:name:ServiceSummary'</a>, <a>serviceSummary_name</a> - The
--   name of the service.
--   
--   <a>$sel:id:ServiceSummary'</a>, <a>serviceSummary_id</a> - The ID that
--   Cloud Map assigned to the service when you created it.
--   
--   <a>$sel:type':ServiceSummary'</a>, <a>serviceSummary_type</a> -
--   Describes the systems that can be used to discover the service
--   instances.
--   
--   <ul>
--   <li><i>DNS_HTTP</i> The service instances can be discovered using
--   either DNS queries or the <tt>DiscoverInstances</tt> API
--   operation.</li>
--   <li><i>HTTP</i> The service instances can only be discovered using the
--   <tt>DiscoverInstances</tt> API operation.</li>
--   <li><i>DNS</i> Reserved.</li>
--   </ul>
--   
--   <a>$sel:dnsConfig:ServiceSummary'</a>, <a>serviceSummary_dnsConfig</a>
--   - Information about the Route 53 DNS records that you want Cloud Map
--   to create when you register an instance.
--   
--   <a>$sel:description:ServiceSummary'</a>,
--   <a>serviceSummary_description</a> - The description that you specify
--   when you create the service.
newServiceSummary :: ServiceSummary

-- | The number of instances that are currently associated with the
--   service. Instances that were previously associated with the service
--   but that are deleted aren't included in the count. The count might not
--   reflect pending registrations and deregistrations.
serviceSummary_instanceCount :: Lens' ServiceSummary (Maybe Int)

-- | The Amazon Resource Name (ARN) that Cloud Map assigns to the service
--   when you create it.
serviceSummary_arn :: Lens' ServiceSummary (Maybe Text)

-- | <i>Public DNS and HTTP namespaces only.</i> Settings for an optional
--   health check. If you specify settings for a health check, Cloud Map
--   associates the health check with the records that you specify in
--   <tt>DnsConfig</tt>.
serviceSummary_healthCheckConfig :: Lens' ServiceSummary (Maybe HealthCheckConfig)

-- | The date and time that the service was created.
serviceSummary_createDate :: Lens' ServiceSummary (Maybe UTCTime)

-- | Information about an optional custom health check. A custom health
--   check, which requires that you use a third-party health checker to
--   evaluate the health of your resources, is useful in the following
--   circumstances:
--   
--   <ul>
--   <li>You can't use a health check that's defined by
--   <tt>HealthCheckConfig</tt> because the resource isn't available over
--   the internet. For example, you can use a custom health check when the
--   instance is in an Amazon VPC. (To check the health of resources in a
--   VPC, the health checker must also be in the VPC.)</li>
--   <li>You want to use a third-party health checker regardless of where
--   your resources are located.</li>
--   </ul>
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
serviceSummary_healthCheckCustomConfig :: Lens' ServiceSummary (Maybe HealthCheckCustomConfig)

-- | The name of the service.
serviceSummary_name :: Lens' ServiceSummary (Maybe Text)

-- | The ID that Cloud Map assigned to the service when you created it.
serviceSummary_id :: Lens' ServiceSummary (Maybe Text)

-- | Describes the systems that can be used to discover the service
--   instances.
--   
--   <ul>
--   <li><i>DNS_HTTP</i> The service instances can be discovered using
--   either DNS queries or the <tt>DiscoverInstances</tt> API
--   operation.</li>
--   <li><i>HTTP</i> The service instances can only be discovered using the
--   <tt>DiscoverInstances</tt> API operation.</li>
--   <li><i>DNS</i> Reserved.</li>
--   </ul>
serviceSummary_type :: Lens' ServiceSummary (Maybe ServiceType)

-- | Information about the Route 53 DNS records that you want Cloud Map to
--   create when you register an instance.
serviceSummary_dnsConfig :: Lens' ServiceSummary (Maybe DnsConfig)

-- | The description that you specify when you create the service.
serviceSummary_description :: Lens' ServiceSummary (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.ServiceSummary.ServiceSummary
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.ServiceSummary.ServiceSummary
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.ServiceSummary.ServiceSummary
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.ServiceSummary.ServiceSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.ServiceSummary.ServiceSummary
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.ServiceSummary.ServiceSummary
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.ServiceSummary.ServiceSummary


module Network.AWS.Route53AutoNaming.Types.ServiceInfo

-- | A complex type that contains information about the specified service.
--   
--   <i>See:</i> <a>newServiceInfo</a> smart constructor.
data ServiceInfo
ServiceInfo' :: Maybe Int -> Maybe Text -> Maybe HealthCheckConfig -> Maybe Text -> Maybe POSIX -> Maybe HealthCheckCustomConfig -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ServiceType -> Maybe DnsConfig -> Maybe Text -> ServiceInfo

-- | The number of instances that are currently associated with the
--   service. Instances that were previously associated with the service
--   but that are deleted aren't included in the count. The count might not
--   reflect pending registrations and deregistrations.
[$sel:instanceCount:ServiceInfo'] :: ServiceInfo -> Maybe Int

-- | The Amazon Resource Name (ARN) that Cloud Map assigns to the service
--   when you create it.
[$sel:arn:ServiceInfo'] :: ServiceInfo -> Maybe Text

-- | <i>Public DNS and HTTP namespaces only.</i> A complex type that
--   contains settings for an optional health check. If you specify
--   settings for a health check, Cloud Map associates the health check
--   with the records that you specify in <tt>DnsConfig</tt>.
--   
--   For information about the charges for health checks, see <a>Amazon
--   Route 53 Pricing</a>.
[$sel:healthCheckConfig:ServiceInfo'] :: ServiceInfo -> Maybe HealthCheckConfig

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running the operation
--   twice. <tt>CreatorRequestId</tt> can be any unique string (for
--   example, a date/timestamp).
[$sel:creatorRequestId:ServiceInfo'] :: ServiceInfo -> Maybe Text

-- | The date and time that the service was created, in Unix format and
--   Coordinated Universal Time (UTC). The value of <tt>CreateDate</tt> is
--   accurate to milliseconds. For example, the value
--   <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
[$sel:createDate:ServiceInfo'] :: ServiceInfo -> Maybe POSIX

-- | A complex type that contains information about an optional custom
--   health check.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
[$sel:healthCheckCustomConfig:ServiceInfo'] :: ServiceInfo -> Maybe HealthCheckCustomConfig

-- | The ID of the namespace that was used to create the service.
[$sel:namespaceId:ServiceInfo'] :: ServiceInfo -> Maybe Text

-- | The name of the service.
[$sel:name:ServiceInfo'] :: ServiceInfo -> Maybe Text

-- | The ID that Cloud Map assigned to the service when you created it.
[$sel:id:ServiceInfo'] :: ServiceInfo -> Maybe Text

-- | Describes the systems that can be used to discover the service
--   instances.
--   
--   <ul>
--   <li><i>DNS_HTTP</i> The service instances can be discovered using
--   either DNS queries or the <tt>DiscoverInstances</tt> API
--   operation.</li>
--   <li><i>HTTP</i> The service instances can only be discovered using the
--   <tt>DiscoverInstances</tt> API operation.</li>
--   <li><i>DNS</i> Reserved.</li>
--   </ul>
[$sel:type':ServiceInfo'] :: ServiceInfo -> Maybe ServiceType

-- | A complex type that contains information about the Route 53 DNS
--   records that you want Cloud Map to create when you register an
--   instance.
[$sel:dnsConfig:ServiceInfo'] :: ServiceInfo -> Maybe DnsConfig

-- | The description of the service.
[$sel:description:ServiceInfo'] :: ServiceInfo -> Maybe Text

-- | Create a value of <a>ServiceInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceCount:ServiceInfo'</a>,
--   <a>serviceInfo_instanceCount</a> - The number of instances that are
--   currently associated with the service. Instances that were previously
--   associated with the service but that are deleted aren't included in
--   the count. The count might not reflect pending registrations and
--   deregistrations.
--   
--   <a>$sel:arn:ServiceInfo'</a>, <a>serviceInfo_arn</a> - The Amazon
--   Resource Name (ARN) that Cloud Map assigns to the service when you
--   create it.
--   
--   <a>$sel:healthCheckConfig:ServiceInfo'</a>,
--   <a>serviceInfo_healthCheckConfig</a> - <i>Public DNS and HTTP
--   namespaces only.</i> A complex type that contains settings for an
--   optional health check. If you specify settings for a health check,
--   Cloud Map associates the health check with the records that you
--   specify in <tt>DnsConfig</tt>.
--   
--   For information about the charges for health checks, see <a>Amazon
--   Route 53 Pricing</a>.
--   
--   <a>$sel:creatorRequestId:ServiceInfo'</a>,
--   <a>serviceInfo_creatorRequestId</a> - A unique string that identifies
--   the request and that allows failed requests to be retried without the
--   risk of running the operation twice. <tt>CreatorRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
--   
--   <a>$sel:createDate:ServiceInfo'</a>, <a>serviceInfo_createDate</a> -
--   The date and time that the service was created, in Unix format and
--   Coordinated Universal Time (UTC). The value of <tt>CreateDate</tt> is
--   accurate to milliseconds. For example, the value
--   <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
--   
--   <a>$sel:healthCheckCustomConfig:ServiceInfo'</a>,
--   <a>serviceInfo_healthCheckCustomConfig</a> - A complex type that
--   contains information about an optional custom health check.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   <a>$sel:namespaceId:ServiceInfo'</a>, <a>serviceInfo_namespaceId</a> -
--   The ID of the namespace that was used to create the service.
--   
--   <a>$sel:name:ServiceInfo'</a>, <a>serviceInfo_name</a> - The name of
--   the service.
--   
--   <a>$sel:id:ServiceInfo'</a>, <a>serviceInfo_id</a> - The ID that Cloud
--   Map assigned to the service when you created it.
--   
--   <a>$sel:type':ServiceInfo'</a>, <a>serviceInfo_type</a> - Describes
--   the systems that can be used to discover the service instances.
--   
--   <ul>
--   <li><i>DNS_HTTP</i> The service instances can be discovered using
--   either DNS queries or the <tt>DiscoverInstances</tt> API
--   operation.</li>
--   <li><i>HTTP</i> The service instances can only be discovered using the
--   <tt>DiscoverInstances</tt> API operation.</li>
--   <li><i>DNS</i> Reserved.</li>
--   </ul>
--   
--   <a>$sel:dnsConfig:ServiceInfo'</a>, <a>serviceInfo_dnsConfig</a> - A
--   complex type that contains information about the Route 53 DNS records
--   that you want Cloud Map to create when you register an instance.
--   
--   <a>$sel:description:ServiceInfo'</a>, <a>serviceInfo_description</a> -
--   The description of the service.
newServiceInfo :: ServiceInfo

-- | The number of instances that are currently associated with the
--   service. Instances that were previously associated with the service
--   but that are deleted aren't included in the count. The count might not
--   reflect pending registrations and deregistrations.
serviceInfo_instanceCount :: Lens' ServiceInfo (Maybe Int)

-- | The Amazon Resource Name (ARN) that Cloud Map assigns to the service
--   when you create it.
serviceInfo_arn :: Lens' ServiceInfo (Maybe Text)

-- | <i>Public DNS and HTTP namespaces only.</i> A complex type that
--   contains settings for an optional health check. If you specify
--   settings for a health check, Cloud Map associates the health check
--   with the records that you specify in <tt>DnsConfig</tt>.
--   
--   For information about the charges for health checks, see <a>Amazon
--   Route 53 Pricing</a>.
serviceInfo_healthCheckConfig :: Lens' ServiceInfo (Maybe HealthCheckConfig)

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running the operation
--   twice. <tt>CreatorRequestId</tt> can be any unique string (for
--   example, a date/timestamp).
serviceInfo_creatorRequestId :: Lens' ServiceInfo (Maybe Text)

-- | The date and time that the service was created, in Unix format and
--   Coordinated Universal Time (UTC). The value of <tt>CreateDate</tt> is
--   accurate to milliseconds. For example, the value
--   <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
serviceInfo_createDate :: Lens' ServiceInfo (Maybe UTCTime)

-- | A complex type that contains information about an optional custom
--   health check.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
serviceInfo_healthCheckCustomConfig :: Lens' ServiceInfo (Maybe HealthCheckCustomConfig)

-- | The ID of the namespace that was used to create the service.
serviceInfo_namespaceId :: Lens' ServiceInfo (Maybe Text)

-- | The name of the service.
serviceInfo_name :: Lens' ServiceInfo (Maybe Text)

-- | The ID that Cloud Map assigned to the service when you created it.
serviceInfo_id :: Lens' ServiceInfo (Maybe Text)

-- | Describes the systems that can be used to discover the service
--   instances.
--   
--   <ul>
--   <li><i>DNS_HTTP</i> The service instances can be discovered using
--   either DNS queries or the <tt>DiscoverInstances</tt> API
--   operation.</li>
--   <li><i>HTTP</i> The service instances can only be discovered using the
--   <tt>DiscoverInstances</tt> API operation.</li>
--   <li><i>DNS</i> Reserved.</li>
--   </ul>
serviceInfo_type :: Lens' ServiceInfo (Maybe ServiceType)

-- | A complex type that contains information about the Route 53 DNS
--   records that you want Cloud Map to create when you register an
--   instance.
serviceInfo_dnsConfig :: Lens' ServiceInfo (Maybe DnsConfig)

-- | The description of the service.
serviceInfo_description :: Lens' ServiceInfo (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.ServiceInfo.ServiceInfo
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.ServiceInfo.ServiceInfo
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.ServiceInfo.ServiceInfo
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.ServiceInfo.ServiceInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.ServiceInfo.ServiceInfo
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.ServiceInfo.ServiceInfo
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.ServiceInfo.ServiceInfo


module Network.AWS.Route53AutoNaming.Types.ServiceTypeOption
newtype ServiceTypeOption
ServiceTypeOption' :: Text -> ServiceTypeOption
[fromServiceTypeOption] :: ServiceTypeOption -> Text
pattern ServiceTypeOption_HTTP :: ServiceTypeOption
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53AutoNaming.Types.ServiceTypeOption.ServiceTypeOption
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53AutoNaming.Types.ServiceTypeOption.ServiceTypeOption
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53AutoNaming.Types.ServiceTypeOption.ServiceTypeOption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.ServiceTypeOption.ServiceTypeOption
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53AutoNaming.Types.ServiceTypeOption.ServiceTypeOption
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.ServiceTypeOption.ServiceTypeOption
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.Types.ServiceTypeOption.ServiceTypeOption
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53AutoNaming.Types.ServiceTypeOption.ServiceTypeOption
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53AutoNaming.Types.ServiceTypeOption.ServiceTypeOption
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53AutoNaming.Types.ServiceTypeOption.ServiceTypeOption
instance Network.AWS.Data.Text.ToText Network.AWS.Route53AutoNaming.Types.ServiceTypeOption.ServiceTypeOption
instance Network.AWS.Data.Text.FromText Network.AWS.Route53AutoNaming.Types.ServiceTypeOption.ServiceTypeOption
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.ServiceTypeOption.ServiceTypeOption
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.ServiceTypeOption.ServiceTypeOption
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.ServiceTypeOption.ServiceTypeOption
instance GHC.Classes.Ord Network.AWS.Route53AutoNaming.Types.ServiceTypeOption.ServiceTypeOption
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.ServiceTypeOption.ServiceTypeOption
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.ServiceTypeOption.ServiceTypeOption
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.ServiceTypeOption.ServiceTypeOption


module Network.AWS.Route53AutoNaming.Types.Tag

-- | A custom key-value pair that's associated with a resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The key identifier, or name, of the tag.
[$sel:key:Tag'] :: Tag -> Text

-- | The string value that's associated with the key of the tag. You can
--   set the value of a tag to an empty string, but you can't set the value
--   of a tag to null.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key identifier, or name, of
--   the tag.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The string value that's
--   associated with the key of the tag. You can set the value of a tag to
--   an empty string, but you can't set the value of a tag to null.
newTag :: Text -> Text -> Tag

-- | The key identifier, or name, of the tag.
tag_key :: Lens' Tag Text

-- | The string value that's associated with the key of the tag. You can
--   set the value of a tag to an empty string, but you can't set the value
--   of a tag to null.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.Route53AutoNaming.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.Route53AutoNaming.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53AutoNaming.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.Types.Tag.Tag


module Network.AWS.Route53AutoNaming.Types

-- | API version <tt>2017-03-14</tt> of the Amazon Cloud Map SDK
--   configuration.
defaultService :: Service

-- | The resource can't be created because you've reached the quota on the
--   number of resources.
_ResourceLimitExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more specified values aren't valid. For example, a required
--   value might be missing, a numeric value might be outside the allowed
--   range, or a string value might exceed length constraints.
_InvalidInput :: AsError a => Getting (First ServiceError) a ServiceError

-- | The namespace that you're trying to create already exists.
_NamespaceAlreadyExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | No namespace exists with the specified ID.
_NamespaceNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service can't be created because a service with the same name
--   already exists.
_ServiceAlreadyExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource can't be deleted because it contains other
--   resources. For example, you can't delete a service that contains any
--   instances.
_ResourceInUse :: AsError a => Getting (First ServiceError) a ServiceError

-- | The list of tags on the resource is over the quota. The maximum number
--   of tags that can be applied to a resource is 50.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The health check for the instance that's specified by
--   <tt>ServiceId</tt> and <tt>InstanceId</tt> isn't a custom health
--   check.
_CustomHealthNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation can't be completed because you've reached the quota for
--   the number of requests. For more information, see <a>Cloud Map API
--   request throttling quota</a> in the <i>Cloud Map Developer Guide</i>.
_RequestLimitExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | No instance exists with the specified ID, or the instance was recently
--   registered, and information about the instance hasn't propagated yet.
_InstanceNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation is already in progress.
_DuplicateRequest :: AsError a => Getting (First ServiceError) a ServiceError

-- | No service exists with the specified ID.
_ServiceNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | No operation exists with the specified ID.
_OperationNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation can't be completed because the resource was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype CustomHealthStatus
CustomHealthStatus' :: Text -> CustomHealthStatus
[fromCustomHealthStatus] :: CustomHealthStatus -> Text
pattern CustomHealthStatus_HEALTHY :: CustomHealthStatus
pattern CustomHealthStatus_UNHEALTHY :: CustomHealthStatus
newtype FilterCondition
FilterCondition' :: Text -> FilterCondition
[fromFilterCondition] :: FilterCondition -> Text
pattern FilterCondition_BETWEEN :: FilterCondition
pattern FilterCondition_EQ :: FilterCondition
pattern FilterCondition_IN :: FilterCondition
newtype HealthCheckType
HealthCheckType' :: Text -> HealthCheckType
[fromHealthCheckType] :: HealthCheckType -> Text
pattern HealthCheckType_HTTP :: HealthCheckType
pattern HealthCheckType_HTTPS :: HealthCheckType
pattern HealthCheckType_TCP :: HealthCheckType
newtype HealthStatus
HealthStatus' :: Text -> HealthStatus
[fromHealthStatus] :: HealthStatus -> Text
pattern HealthStatus_HEALTHY :: HealthStatus
pattern HealthStatus_UNHEALTHY :: HealthStatus
pattern HealthStatus_UNKNOWN :: HealthStatus
newtype HealthStatusFilter
HealthStatusFilter' :: Text -> HealthStatusFilter
[fromHealthStatusFilter] :: HealthStatusFilter -> Text
pattern HealthStatusFilter_ALL :: HealthStatusFilter
pattern HealthStatusFilter_HEALTHY :: HealthStatusFilter
pattern HealthStatusFilter_HEALTHY_OR_ELSE_ALL :: HealthStatusFilter
pattern HealthStatusFilter_UNHEALTHY :: HealthStatusFilter
newtype NamespaceFilterName
NamespaceFilterName' :: Text -> NamespaceFilterName
[fromNamespaceFilterName] :: NamespaceFilterName -> Text
pattern NamespaceFilterName_TYPE :: NamespaceFilterName
newtype NamespaceType
NamespaceType' :: Text -> NamespaceType
[fromNamespaceType] :: NamespaceType -> Text
pattern NamespaceType_DNS_PRIVATE :: NamespaceType
pattern NamespaceType_DNS_PUBLIC :: NamespaceType
pattern NamespaceType_HTTP :: NamespaceType
newtype OperationFilterName
OperationFilterName' :: Text -> OperationFilterName
[fromOperationFilterName] :: OperationFilterName -> Text
pattern OperationFilterName_NAMESPACE_ID :: OperationFilterName
pattern OperationFilterName_SERVICE_ID :: OperationFilterName
pattern OperationFilterName_STATUS :: OperationFilterName
pattern OperationFilterName_TYPE :: OperationFilterName
pattern OperationFilterName_UPDATE_DATE :: OperationFilterName
newtype OperationStatus
OperationStatus' :: Text -> OperationStatus
[fromOperationStatus] :: OperationStatus -> Text
pattern OperationStatus_FAIL :: OperationStatus
pattern OperationStatus_PENDING :: OperationStatus
pattern OperationStatus_SUBMITTED :: OperationStatus
pattern OperationStatus_SUCCESS :: OperationStatus
newtype OperationTargetType
OperationTargetType' :: Text -> OperationTargetType
[fromOperationTargetType] :: OperationTargetType -> Text
pattern OperationTargetType_INSTANCE :: OperationTargetType
pattern OperationTargetType_NAMESPACE :: OperationTargetType
pattern OperationTargetType_SERVICE :: OperationTargetType
newtype OperationType
OperationType' :: Text -> OperationType
[fromOperationType] :: OperationType -> Text
pattern OperationType_CREATE_NAMESPACE :: OperationType
pattern OperationType_DELETE_NAMESPACE :: OperationType
pattern OperationType_DEREGISTER_INSTANCE :: OperationType
pattern OperationType_REGISTER_INSTANCE :: OperationType
pattern OperationType_UPDATE_NAMESPACE :: OperationType
pattern OperationType_UPDATE_SERVICE :: OperationType
newtype RecordType
RecordType' :: Text -> RecordType
[fromRecordType] :: RecordType -> Text
pattern RecordType_A :: RecordType
pattern RecordType_AAAA :: RecordType
pattern RecordType_CNAME :: RecordType
pattern RecordType_SRV :: RecordType
newtype RoutingPolicy
RoutingPolicy' :: Text -> RoutingPolicy
[fromRoutingPolicy] :: RoutingPolicy -> Text
pattern RoutingPolicy_MULTIVALUE :: RoutingPolicy
pattern RoutingPolicy_WEIGHTED :: RoutingPolicy
newtype ServiceFilterName
ServiceFilterName' :: Text -> ServiceFilterName
[fromServiceFilterName] :: ServiceFilterName -> Text
pattern ServiceFilterName_NAMESPACE_ID :: ServiceFilterName
newtype ServiceType
ServiceType' :: Text -> ServiceType
[fromServiceType] :: ServiceType -> Text
pattern ServiceType_DNS :: ServiceType
pattern ServiceType_DNS_HTTP :: ServiceType
pattern ServiceType_HTTP :: ServiceType
newtype ServiceTypeOption
ServiceTypeOption' :: Text -> ServiceTypeOption
[fromServiceTypeOption] :: ServiceTypeOption -> Text
pattern ServiceTypeOption_HTTP :: ServiceTypeOption

-- | A complex type that contains information about the Amazon Route 53 DNS
--   records that you want Cloud Map to create when you register an
--   instance.
--   
--   <i>See:</i> <a>newDnsConfig</a> smart constructor.
data DnsConfig
DnsConfig' :: Maybe RoutingPolicy -> Maybe Text -> [DnsRecord] -> DnsConfig

-- | The routing policy that you want to apply to all Route 53 DNS records
--   that Cloud Map creates when you register an instance and specify this
--   service.
--   
--   If you want to use this service to register instances that create
--   alias records, specify <tt>WEIGHTED</tt> for the routing policy.
--   
--   You can specify the following values:
--   
--   <ul>
--   <li><i>MULTIVALUE</i> If you define a health check for the service and
--   the health check is healthy, Route 53 returns the applicable value for
--   up to eight instances.For example, suppose that the service includes
--   configurations for one <tt>A</tt> record and a health check. You use
--   the service to register 10 instances. Route 53 responds to DNS queries
--   with IP addresses for up to eight healthy instances. If fewer than
--   eight instances are healthy, Route 53 responds to every DNS query with
--   the IP addresses for all of the healthy instances.If you don't define
--   a health check for the service, Route 53 assumes that all instances
--   are healthy and returns the values for up to eight instances.For more
--   information about the multivalue routing policy, see <a>Multivalue
--   Answer Routing</a> in the <i>Route 53 Developer Guide</i>.</li>
--   <li><i>WEIGHTED</i> Route 53 returns the applicable value from one
--   randomly selected instance from among the instances that you
--   registered using the same service. Currently, all records have the
--   same weight, so you can't route more or less traffic to any
--   instances.For example, suppose that the service includes
--   configurations for one <tt>A</tt> record and a health check. You use
--   the service to register 10 instances. Route 53 responds to DNS queries
--   with the IP address for one randomly selected instance from among the
--   healthy instances. If no instances are healthy, Route 53 responds to
--   DNS queries as if all of the instances were healthy.If you don't
--   define a health check for the service, Route 53 assumes that all
--   instances are healthy and returns the applicable value for one
--   randomly selected instance.For more information about the weighted
--   routing policy, see <a>Weighted Routing</a> in the <i>Route 53
--   Developer Guide</i>.</li>
--   </ul>
[$sel:routingPolicy:DnsConfig'] :: DnsConfig -> Maybe RoutingPolicy

-- | The ID of the namespace to use for DNS configuration.
[$sel:namespaceId:DnsConfig'] :: DnsConfig -> Maybe Text

-- | An array that contains one <tt>DnsRecord</tt> object for each Route 53
--   DNS record that you want Cloud Map to create when you register an
--   instance.
[$sel:dnsRecords:DnsConfig'] :: DnsConfig -> [DnsRecord]

-- | Create a value of <a>DnsConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingPolicy:DnsConfig'</a>, <a>dnsConfig_routingPolicy</a> -
--   The routing policy that you want to apply to all Route 53 DNS records
--   that Cloud Map creates when you register an instance and specify this
--   service.
--   
--   If you want to use this service to register instances that create
--   alias records, specify <tt>WEIGHTED</tt> for the routing policy.
--   
--   You can specify the following values:
--   
--   <ul>
--   <li><i>MULTIVALUE</i> If you define a health check for the service and
--   the health check is healthy, Route 53 returns the applicable value for
--   up to eight instances.For example, suppose that the service includes
--   configurations for one <tt>A</tt> record and a health check. You use
--   the service to register 10 instances. Route 53 responds to DNS queries
--   with IP addresses for up to eight healthy instances. If fewer than
--   eight instances are healthy, Route 53 responds to every DNS query with
--   the IP addresses for all of the healthy instances.If you don't define
--   a health check for the service, Route 53 assumes that all instances
--   are healthy and returns the values for up to eight instances.For more
--   information about the multivalue routing policy, see <a>Multivalue
--   Answer Routing</a> in the <i>Route 53 Developer Guide</i>.</li>
--   <li><i>WEIGHTED</i> Route 53 returns the applicable value from one
--   randomly selected instance from among the instances that you
--   registered using the same service. Currently, all records have the
--   same weight, so you can't route more or less traffic to any
--   instances.For example, suppose that the service includes
--   configurations for one <tt>A</tt> record and a health check. You use
--   the service to register 10 instances. Route 53 responds to DNS queries
--   with the IP address for one randomly selected instance from among the
--   healthy instances. If no instances are healthy, Route 53 responds to
--   DNS queries as if all of the instances were healthy.If you don't
--   define a health check for the service, Route 53 assumes that all
--   instances are healthy and returns the applicable value for one
--   randomly selected instance.For more information about the weighted
--   routing policy, see <a>Weighted Routing</a> in the <i>Route 53
--   Developer Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:namespaceId:DnsConfig'</a>, <a>dnsConfig_namespaceId</a> - The
--   ID of the namespace to use for DNS configuration.
--   
--   <a>$sel:dnsRecords:DnsConfig'</a>, <a>dnsConfig_dnsRecords</a> - An
--   array that contains one <tt>DnsRecord</tt> object for each Route 53
--   DNS record that you want Cloud Map to create when you register an
--   instance.
newDnsConfig :: DnsConfig

-- | The routing policy that you want to apply to all Route 53 DNS records
--   that Cloud Map creates when you register an instance and specify this
--   service.
--   
--   If you want to use this service to register instances that create
--   alias records, specify <tt>WEIGHTED</tt> for the routing policy.
--   
--   You can specify the following values:
--   
--   <ul>
--   <li><i>MULTIVALUE</i> If you define a health check for the service and
--   the health check is healthy, Route 53 returns the applicable value for
--   up to eight instances.For example, suppose that the service includes
--   configurations for one <tt>A</tt> record and a health check. You use
--   the service to register 10 instances. Route 53 responds to DNS queries
--   with IP addresses for up to eight healthy instances. If fewer than
--   eight instances are healthy, Route 53 responds to every DNS query with
--   the IP addresses for all of the healthy instances.If you don't define
--   a health check for the service, Route 53 assumes that all instances
--   are healthy and returns the values for up to eight instances.For more
--   information about the multivalue routing policy, see <a>Multivalue
--   Answer Routing</a> in the <i>Route 53 Developer Guide</i>.</li>
--   <li><i>WEIGHTED</i> Route 53 returns the applicable value from one
--   randomly selected instance from among the instances that you
--   registered using the same service. Currently, all records have the
--   same weight, so you can't route more or less traffic to any
--   instances.For example, suppose that the service includes
--   configurations for one <tt>A</tt> record and a health check. You use
--   the service to register 10 instances. Route 53 responds to DNS queries
--   with the IP address for one randomly selected instance from among the
--   healthy instances. If no instances are healthy, Route 53 responds to
--   DNS queries as if all of the instances were healthy.If you don't
--   define a health check for the service, Route 53 assumes that all
--   instances are healthy and returns the applicable value for one
--   randomly selected instance.For more information about the weighted
--   routing policy, see <a>Weighted Routing</a> in the <i>Route 53
--   Developer Guide</i>.</li>
--   </ul>
dnsConfig_routingPolicy :: Lens' DnsConfig (Maybe RoutingPolicy)

-- | The ID of the namespace to use for DNS configuration.
dnsConfig_namespaceId :: Lens' DnsConfig (Maybe Text)

-- | An array that contains one <tt>DnsRecord</tt> object for each Route 53
--   DNS record that you want Cloud Map to create when you register an
--   instance.
dnsConfig_dnsRecords :: Lens' DnsConfig [DnsRecord]

-- | A complex type that contains information about changes to the Route 53
--   DNS records that Cloud Map creates when you register an instance.
--   
--   <i>See:</i> <a>newDnsConfigChange</a> smart constructor.
data DnsConfigChange
DnsConfigChange' :: [DnsRecord] -> DnsConfigChange

-- | An array that contains one <tt>DnsRecord</tt> object for each Route 53
--   record that you want Cloud Map to create when you register an
--   instance.
[$sel:dnsRecords:DnsConfigChange'] :: DnsConfigChange -> [DnsRecord]

-- | Create a value of <a>DnsConfigChange</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dnsRecords:DnsConfigChange'</a>,
--   <a>dnsConfigChange_dnsRecords</a> - An array that contains one
--   <tt>DnsRecord</tt> object for each Route 53 record that you want Cloud
--   Map to create when you register an instance.
newDnsConfigChange :: DnsConfigChange

-- | An array that contains one <tt>DnsRecord</tt> object for each Route 53
--   record that you want Cloud Map to create when you register an
--   instance.
dnsConfigChange_dnsRecords :: Lens' DnsConfigChange [DnsRecord]

-- | A complex type that contains the ID for the Route 53 hosted zone that
--   Cloud Map creates when you create a namespace.
--   
--   <i>See:</i> <a>newDnsProperties</a> smart constructor.
data DnsProperties
DnsProperties' :: Maybe Text -> Maybe SOA -> DnsProperties

-- | The ID for the Route 53 hosted zone that Cloud Map creates when you
--   create a namespace.
[$sel:hostedZoneId:DnsProperties'] :: DnsProperties -> Maybe Text

-- | Start of Authority (SOA) record for the hosted zone.
[$sel:soa:DnsProperties'] :: DnsProperties -> Maybe SOA

-- | Create a value of <a>DnsProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:DnsProperties'</a>,
--   <a>dnsProperties_hostedZoneId</a> - The ID for the Route 53 hosted
--   zone that Cloud Map creates when you create a namespace.
--   
--   <a>$sel:soa:DnsProperties'</a>, <a>dnsProperties_soa</a> - Start of
--   Authority (SOA) record for the hosted zone.
newDnsProperties :: DnsProperties

-- | The ID for the Route 53 hosted zone that Cloud Map creates when you
--   create a namespace.
dnsProperties_hostedZoneId :: Lens' DnsProperties (Maybe Text)

-- | Start of Authority (SOA) record for the hosted zone.
dnsProperties_soa :: Lens' DnsProperties (Maybe SOA)

-- | A complex type that contains information about the Route 53 DNS
--   records that you want Cloud Map to create when you register an
--   instance.
--   
--   <i>See:</i> <a>newDnsRecord</a> smart constructor.
data DnsRecord
DnsRecord' :: RecordType -> Natural -> DnsRecord

-- | The type of the resource, which indicates the type of value that Route
--   53 returns in response to DNS queries. You can specify values for
--   <tt>Type</tt> in the following combinations:
--   
--   <ul>
--   <li><b><tt>A</tt></b></li>
--   <li><b><tt>AAAA</tt></b></li>
--   <li><b><tt>A</tt></b> and <b><tt>AAAA</tt></b></li>
--   <li><b><tt>SRV</tt></b></li>
--   <li><b><tt>CNAME</tt></b></li>
--   </ul>
--   
--   If you want Cloud Map to create a Route 53 alias record when you
--   register an instance, specify <tt>A</tt> or <tt>AAAA</tt> for
--   <tt>Type</tt>.
--   
--   You specify other settings, such as the IP address for <tt>A</tt> and
--   <tt>AAAA</tt> records, when you register an instance. For more
--   information, see <a>RegisterInstance</a>.
--   
--   The following values are supported:
--   
--   <ul>
--   <li><i>A</i> Route 53 returns the IP address of the resource in IPv4
--   format, such as 192.0.2.44.</li>
--   <li><i>AAAA</i> Route 53 returns the IP address of the resource in
--   IPv6 format, such as 2001:0db8:85a3:0000:0000:abcd:0001:2345.</li>
--   <li><i>CNAME</i> Route 53 returns the domain name of the resource,
--   such as www.example.com. Note the following:<ul><li>You specify the
--   domain name that you want to route traffic to when you register an
--   instance. For more information, see <a>Attributes</a> in the topic
--   <a>RegisterInstance</a>.</li><li>You must specify <tt>WEIGHTED</tt>
--   for the value of <tt>RoutingPolicy</tt>.</li><li>You can't specify
--   both <tt>CNAME</tt> for <tt>Type</tt> and settings for
--   <tt>HealthCheckConfig</tt>. If you do, the request will fail with an
--   <tt>InvalidInput</tt> error.</li></ul></li>
--   <li><i>SRV</i> Route 53 returns the value for an <tt>SRV</tt> record.
--   The value for an <tt>SRV</tt> record uses the following
--   values:<pre>priority weight port service-hostname</pre>Note the
--   following about the values:<ul><li>The values of <tt>priority</tt> and
--   <tt>weight</tt> are both set to <tt>1</tt> and can't be
--   changed.</li><li>The value of <tt>port</tt> comes from the value that
--   you specify for the <tt>AWS_INSTANCE_PORT</tt> attribute when you
--   submit a <a>RegisterInstance</a> request.</li><li>The value of
--   <tt>service-hostname</tt> is a concatenation of the following
--   values:<ul><li>The value that you specify for <tt>InstanceId</tt> when
--   you register an instance.</li><li>The name of the service.</li><li>The
--   name of the namespace.</li></ul>For example, if the value of
--   <tt>InstanceId</tt> is <tt>test</tt>, the name of the service is
--   <tt>backend</tt>, and the name of the namespace is
--   <tt>example.com</tt>, the value of <tt>service-hostname</tt> is the
--   following:<pre>test.backend.example.com</pre></li></ul>If you specify
--   settings for an <tt>SRV</tt> record, note the following:<ul><li>If you
--   specify values for <tt>AWS_INSTANCE_IPV4</tt>,
--   <tt>AWS_INSTANCE_IPV6</tt>, or both in the <tt>RegisterInstance</tt>
--   request, Cloud Map automatically creates <tt>A</tt> and/or
--   <tt>AAAA</tt> records that have the same name as the value of
--   <tt>service-hostname</tt> in the <tt>SRV</tt> record. You can ignore
--   these records.</li><li>If you're using a system that requires a
--   specific <tt>SRV</tt> format, such as HAProxy, see the <a>Name</a>
--   element in the documentation about <tt>CreateService</tt> for
--   information about how to specify the correct name
--   format.</li></ul></li>
--   </ul>
[$sel:type':DnsRecord'] :: DnsRecord -> RecordType

-- | The amount of time, in seconds, that you want DNS resolvers to cache
--   the settings for this record.
--   
--   Alias records don't include a TTL because Route 53 uses the TTL for
--   the Amazon Web Services resource that an alias record routes traffic
--   to. If you include the <tt>AWS_ALIAS_DNS_NAME</tt> attribute when you
--   submit a <a>RegisterInstance</a> request, the <tt>TTL</tt> value is
--   ignored. Always specify a TTL for the service; you can use a service
--   to register instances that create either alias or non-alias records.
[$sel:ttl:DnsRecord'] :: DnsRecord -> Natural

-- | Create a value of <a>DnsRecord</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':DnsRecord'</a>, <a>dnsRecord_type</a> - The type of the
--   resource, which indicates the type of value that Route 53 returns in
--   response to DNS queries. You can specify values for <tt>Type</tt> in
--   the following combinations:
--   
--   <ul>
--   <li><b><tt>A</tt></b></li>
--   <li><b><tt>AAAA</tt></b></li>
--   <li><b><tt>A</tt></b> and <b><tt>AAAA</tt></b></li>
--   <li><b><tt>SRV</tt></b></li>
--   <li><b><tt>CNAME</tt></b></li>
--   </ul>
--   
--   If you want Cloud Map to create a Route 53 alias record when you
--   register an instance, specify <tt>A</tt> or <tt>AAAA</tt> for
--   <tt>Type</tt>.
--   
--   You specify other settings, such as the IP address for <tt>A</tt> and
--   <tt>AAAA</tt> records, when you register an instance. For more
--   information, see <a>RegisterInstance</a>.
--   
--   The following values are supported:
--   
--   <ul>
--   <li><i>A</i> Route 53 returns the IP address of the resource in IPv4
--   format, such as 192.0.2.44.</li>
--   <li><i>AAAA</i> Route 53 returns the IP address of the resource in
--   IPv6 format, such as 2001:0db8:85a3:0000:0000:abcd:0001:2345.</li>
--   <li><i>CNAME</i> Route 53 returns the domain name of the resource,
--   such as www.example.com. Note the following:<ul><li>You specify the
--   domain name that you want to route traffic to when you register an
--   instance. For more information, see <a>Attributes</a> in the topic
--   <a>RegisterInstance</a>.</li><li>You must specify <tt>WEIGHTED</tt>
--   for the value of <tt>RoutingPolicy</tt>.</li><li>You can't specify
--   both <tt>CNAME</tt> for <tt>Type</tt> and settings for
--   <tt>HealthCheckConfig</tt>. If you do, the request will fail with an
--   <tt>InvalidInput</tt> error.</li></ul></li>
--   <li><i>SRV</i> Route 53 returns the value for an <tt>SRV</tt> record.
--   The value for an <tt>SRV</tt> record uses the following
--   values:<pre>priority weight port service-hostname</pre>Note the
--   following about the values:<ul><li>The values of <tt>priority</tt> and
--   <tt>weight</tt> are both set to <tt>1</tt> and can't be
--   changed.</li><li>The value of <tt>port</tt> comes from the value that
--   you specify for the <tt>AWS_INSTANCE_PORT</tt> attribute when you
--   submit a <a>RegisterInstance</a> request.</li><li>The value of
--   <tt>service-hostname</tt> is a concatenation of the following
--   values:<ul><li>The value that you specify for <tt>InstanceId</tt> when
--   you register an instance.</li><li>The name of the service.</li><li>The
--   name of the namespace.</li></ul>For example, if the value of
--   <tt>InstanceId</tt> is <tt>test</tt>, the name of the service is
--   <tt>backend</tt>, and the name of the namespace is
--   <tt>example.com</tt>, the value of <tt>service-hostname</tt> is the
--   following:<pre>test.backend.example.com</pre></li></ul>If you specify
--   settings for an <tt>SRV</tt> record, note the following:<ul><li>If you
--   specify values for <tt>AWS_INSTANCE_IPV4</tt>,
--   <tt>AWS_INSTANCE_IPV6</tt>, or both in the <tt>RegisterInstance</tt>
--   request, Cloud Map automatically creates <tt>A</tt> and/or
--   <tt>AAAA</tt> records that have the same name as the value of
--   <tt>service-hostname</tt> in the <tt>SRV</tt> record. You can ignore
--   these records.</li><li>If you're using a system that requires a
--   specific <tt>SRV</tt> format, such as HAProxy, see the <a>Name</a>
--   element in the documentation about <tt>CreateService</tt> for
--   information about how to specify the correct name
--   format.</li></ul></li>
--   </ul>
--   
--   <a>$sel:ttl:DnsRecord'</a>, <a>dnsRecord_ttl</a> - The amount of time,
--   in seconds, that you want DNS resolvers to cache the settings for this
--   record.
--   
--   Alias records don't include a TTL because Route 53 uses the TTL for
--   the Amazon Web Services resource that an alias record routes traffic
--   to. If you include the <tt>AWS_ALIAS_DNS_NAME</tt> attribute when you
--   submit a <a>RegisterInstance</a> request, the <tt>TTL</tt> value is
--   ignored. Always specify a TTL for the service; you can use a service
--   to register instances that create either alias or non-alias records.
newDnsRecord :: RecordType -> Natural -> DnsRecord

-- | The type of the resource, which indicates the type of value that Route
--   53 returns in response to DNS queries. You can specify values for
--   <tt>Type</tt> in the following combinations:
--   
--   <ul>
--   <li><b><tt>A</tt></b></li>
--   <li><b><tt>AAAA</tt></b></li>
--   <li><b><tt>A</tt></b> and <b><tt>AAAA</tt></b></li>
--   <li><b><tt>SRV</tt></b></li>
--   <li><b><tt>CNAME</tt></b></li>
--   </ul>
--   
--   If you want Cloud Map to create a Route 53 alias record when you
--   register an instance, specify <tt>A</tt> or <tt>AAAA</tt> for
--   <tt>Type</tt>.
--   
--   You specify other settings, such as the IP address for <tt>A</tt> and
--   <tt>AAAA</tt> records, when you register an instance. For more
--   information, see <a>RegisterInstance</a>.
--   
--   The following values are supported:
--   
--   <ul>
--   <li><i>A</i> Route 53 returns the IP address of the resource in IPv4
--   format, such as 192.0.2.44.</li>
--   <li><i>AAAA</i> Route 53 returns the IP address of the resource in
--   IPv6 format, such as 2001:0db8:85a3:0000:0000:abcd:0001:2345.</li>
--   <li><i>CNAME</i> Route 53 returns the domain name of the resource,
--   such as www.example.com. Note the following:<ul><li>You specify the
--   domain name that you want to route traffic to when you register an
--   instance. For more information, see <a>Attributes</a> in the topic
--   <a>RegisterInstance</a>.</li><li>You must specify <tt>WEIGHTED</tt>
--   for the value of <tt>RoutingPolicy</tt>.</li><li>You can't specify
--   both <tt>CNAME</tt> for <tt>Type</tt> and settings for
--   <tt>HealthCheckConfig</tt>. If you do, the request will fail with an
--   <tt>InvalidInput</tt> error.</li></ul></li>
--   <li><i>SRV</i> Route 53 returns the value for an <tt>SRV</tt> record.
--   The value for an <tt>SRV</tt> record uses the following
--   values:<pre>priority weight port service-hostname</pre>Note the
--   following about the values:<ul><li>The values of <tt>priority</tt> and
--   <tt>weight</tt> are both set to <tt>1</tt> and can't be
--   changed.</li><li>The value of <tt>port</tt> comes from the value that
--   you specify for the <tt>AWS_INSTANCE_PORT</tt> attribute when you
--   submit a <a>RegisterInstance</a> request.</li><li>The value of
--   <tt>service-hostname</tt> is a concatenation of the following
--   values:<ul><li>The value that you specify for <tt>InstanceId</tt> when
--   you register an instance.</li><li>The name of the service.</li><li>The
--   name of the namespace.</li></ul>For example, if the value of
--   <tt>InstanceId</tt> is <tt>test</tt>, the name of the service is
--   <tt>backend</tt>, and the name of the namespace is
--   <tt>example.com</tt>, the value of <tt>service-hostname</tt> is the
--   following:<pre>test.backend.example.com</pre></li></ul>If you specify
--   settings for an <tt>SRV</tt> record, note the following:<ul><li>If you
--   specify values for <tt>AWS_INSTANCE_IPV4</tt>,
--   <tt>AWS_INSTANCE_IPV6</tt>, or both in the <tt>RegisterInstance</tt>
--   request, Cloud Map automatically creates <tt>A</tt> and/or
--   <tt>AAAA</tt> records that have the same name as the value of
--   <tt>service-hostname</tt> in the <tt>SRV</tt> record. You can ignore
--   these records.</li><li>If you're using a system that requires a
--   specific <tt>SRV</tt> format, such as HAProxy, see the <a>Name</a>
--   element in the documentation about <tt>CreateService</tt> for
--   information about how to specify the correct name
--   format.</li></ul></li>
--   </ul>
dnsRecord_type :: Lens' DnsRecord RecordType

-- | The amount of time, in seconds, that you want DNS resolvers to cache
--   the settings for this record.
--   
--   Alias records don't include a TTL because Route 53 uses the TTL for
--   the Amazon Web Services resource that an alias record routes traffic
--   to. If you include the <tt>AWS_ALIAS_DNS_NAME</tt> attribute when you
--   submit a <a>RegisterInstance</a> request, the <tt>TTL</tt> value is
--   ignored. Always specify a TTL for the service; you can use a service
--   to register instances that create either alias or non-alias records.
dnsRecord_ttl :: Lens' DnsRecord Natural

-- | <i>Public DNS and HTTP namespaces only.</i> A complex type that
--   contains settings for an optional health check. If you specify
--   settings for a health check, Cloud Map associates the health check
--   with the records that you specify in <tt>DnsConfig</tt>.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   Health checks are basic Route 53 health checks that monitor an Amazon
--   Web Services endpoint. For information about pricing for health
--   checks, see <a>Amazon Route 53 Pricing</a>.
--   
--   Note the following about configuring health checks.
--   
--   <ul>
--   <li><i>A and AAAA records</i> If <tt>DnsConfig</tt> includes
--   configurations for both <tt>A</tt> and <tt>AAAA</tt> records, Cloud
--   Map creates a health check that uses the IPv4 address to check the
--   health of the resource. If the endpoint tthat's specified by the IPv4
--   address is unhealthy, Route 53 considers both the <tt>A</tt> and
--   <tt>AAAA</tt> records to be unhealthy.</li>
--   <li><i>CNAME records</i> You can't specify settings for
--   <tt>HealthCheckConfig</tt> when the <tt>DNSConfig</tt> includes
--   <tt>CNAME</tt> for the value of <tt>Type</tt>. If you do, the
--   <tt>CreateService</tt> request will fail with an <tt>InvalidInput</tt>
--   error.</li>
--   <li><i>Request interval</i> A Route 53 health checker in each
--   health-checking Amazon Web Services Region sends a health check
--   request to an endpoint every 30 seconds. On average, your endpoint
--   receives a health check request about every two seconds. However,
--   health checkers don't coordinate with one another. Therefore, you
--   might sometimes see several requests in one second that's followed by
--   a few seconds with no health checks at all.</li>
--   <li><i>Health checking regions</i> Health checkers perform checks from
--   all Route 53 health-checking Regions. For a list of the current
--   Regions, see <a>Regions</a>.</li>
--   <li><i>Alias records</i> When you register an instance, if you include
--   the <tt>AWS_ALIAS_DNS_NAME</tt> attribute, Cloud Map creates a Route
--   53 alias record. Note the following:<ul><li>Route 53 automatically
--   sets <tt>EvaluateTargetHealth</tt> to true for alias records. When
--   <tt>EvaluateTargetHealth</tt> is true, the alias record inherits the
--   health of the referenced Amazon Web Services resource. such as an ELB
--   load balancer. For more information, see
--   <a>EvaluateTargetHealth</a>.</li><li>If you include
--   <tt>HealthCheckConfig</tt> and then use the service to register an
--   instance that creates an alias record, Route 53 doesn't create the
--   health check.</li></ul></li>
--   <li><i>Charges for health checks</i> Health checks are basic Route 53
--   health checks that monitor an Amazon Web Services endpoint. For
--   information about pricing for health checks, see <a>Amazon Route 53
--   Pricing</a>.</li>
--   </ul>
--   
--   <i>See:</i> <a>newHealthCheckConfig</a> smart constructor.
data HealthCheckConfig
HealthCheckConfig' :: Maybe Natural -> Maybe Text -> HealthCheckType -> HealthCheckConfig

-- | The number of consecutive health checks that an endpoint must pass or
--   fail for Route 53 to change the current status of the endpoint from
--   unhealthy to healthy or the other way around. For more information,
--   see <a>How Route 53 Determines Whether an Endpoint Is Healthy</a> in
--   the <i>Route 53 Developer Guide</i>.
[$sel:failureThreshold:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Natural

-- | The path that you want Route 53 to request when performing health
--   checks. The path can be any value that your endpoint returns an HTTP
--   status code of a 2xx or 3xx format for when the endpoint is healthy.
--   An example file is <tt>/docs/route53-health-check.html</tt>. Route 53
--   automatically adds the DNS name for the service. If you don't specify
--   a value for <tt>ResourcePath</tt>, the default value is <tt>/</tt>.
--   
--   If you specify <tt>TCP</tt> for <tt>Type</tt>, you must <i>not</i>
--   specify a value for <tt>ResourcePath</tt>.
[$sel:resourcePath:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Text

-- | The type of health check that you want to create, which indicates how
--   Route 53 determines whether an endpoint is healthy.
--   
--   You can't change the value of <tt>Type</tt> after you create a health
--   check.
--   
--   You can create the following types of health checks:
--   
--   <ul>
--   <li><b>HTTP</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTP request and waits for an HTTP
--   status code of 200 or greater and less than 400.</li>
--   <li><b>HTTPS</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTPS request and waits for an HTTP
--   status code of 200 or greater and less than 400.If you specify HTTPS
--   for the value of <tt>Type</tt>, the endpoint must support TLS v1.0 or
--   later.</li>
--   <li><b>TCP</b>: Route 53 tries to establish a TCP connection.If you
--   specify <tt>TCP</tt> for <tt>Type</tt>, don't specify a value for
--   <tt>ResourcePath</tt>.</li>
--   </ul>
--   
--   For more information, see <a>How Route 53 Determines Whether an
--   Endpoint Is Healthy</a> in the <i>Route 53 Developer Guide</i>.
[$sel:type':HealthCheckConfig'] :: HealthCheckConfig -> HealthCheckType

-- | Create a value of <a>HealthCheckConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureThreshold:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_failureThreshold</a> - The number of consecutive
--   health checks that an endpoint must pass or fail for Route 53 to
--   change the current status of the endpoint from unhealthy to healthy or
--   the other way around. For more information, see <a>How Route 53
--   Determines Whether an Endpoint Is Healthy</a> in the <i>Route 53
--   Developer Guide</i>.
--   
--   <a>$sel:resourcePath:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_resourcePath</a> - The path that you want Route
--   53 to request when performing health checks. The path can be any value
--   that your endpoint returns an HTTP status code of a 2xx or 3xx format
--   for when the endpoint is healthy. An example file is
--   <tt>/docs/route53-health-check.html</tt>. Route 53 automatically adds
--   the DNS name for the service. If you don't specify a value for
--   <tt>ResourcePath</tt>, the default value is <tt>/</tt>.
--   
--   If you specify <tt>TCP</tt> for <tt>Type</tt>, you must <i>not</i>
--   specify a value for <tt>ResourcePath</tt>.
--   
--   <a>$sel:type':HealthCheckConfig'</a>, <a>healthCheckConfig_type</a> -
--   The type of health check that you want to create, which indicates how
--   Route 53 determines whether an endpoint is healthy.
--   
--   You can't change the value of <tt>Type</tt> after you create a health
--   check.
--   
--   You can create the following types of health checks:
--   
--   <ul>
--   <li><b>HTTP</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTP request and waits for an HTTP
--   status code of 200 or greater and less than 400.</li>
--   <li><b>HTTPS</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTPS request and waits for an HTTP
--   status code of 200 or greater and less than 400.If you specify HTTPS
--   for the value of <tt>Type</tt>, the endpoint must support TLS v1.0 or
--   later.</li>
--   <li><b>TCP</b>: Route 53 tries to establish a TCP connection.If you
--   specify <tt>TCP</tt> for <tt>Type</tt>, don't specify a value for
--   <tt>ResourcePath</tt>.</li>
--   </ul>
--   
--   For more information, see <a>How Route 53 Determines Whether an
--   Endpoint Is Healthy</a> in the <i>Route 53 Developer Guide</i>.
newHealthCheckConfig :: HealthCheckType -> HealthCheckConfig

-- | The number of consecutive health checks that an endpoint must pass or
--   fail for Route 53 to change the current status of the endpoint from
--   unhealthy to healthy or the other way around. For more information,
--   see <a>How Route 53 Determines Whether an Endpoint Is Healthy</a> in
--   the <i>Route 53 Developer Guide</i>.
healthCheckConfig_failureThreshold :: Lens' HealthCheckConfig (Maybe Natural)

-- | The path that you want Route 53 to request when performing health
--   checks. The path can be any value that your endpoint returns an HTTP
--   status code of a 2xx or 3xx format for when the endpoint is healthy.
--   An example file is <tt>/docs/route53-health-check.html</tt>. Route 53
--   automatically adds the DNS name for the service. If you don't specify
--   a value for <tt>ResourcePath</tt>, the default value is <tt>/</tt>.
--   
--   If you specify <tt>TCP</tt> for <tt>Type</tt>, you must <i>not</i>
--   specify a value for <tt>ResourcePath</tt>.
healthCheckConfig_resourcePath :: Lens' HealthCheckConfig (Maybe Text)

-- | The type of health check that you want to create, which indicates how
--   Route 53 determines whether an endpoint is healthy.
--   
--   You can't change the value of <tt>Type</tt> after you create a health
--   check.
--   
--   You can create the following types of health checks:
--   
--   <ul>
--   <li><b>HTTP</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTP request and waits for an HTTP
--   status code of 200 or greater and less than 400.</li>
--   <li><b>HTTPS</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTPS request and waits for an HTTP
--   status code of 200 or greater and less than 400.If you specify HTTPS
--   for the value of <tt>Type</tt>, the endpoint must support TLS v1.0 or
--   later.</li>
--   <li><b>TCP</b>: Route 53 tries to establish a TCP connection.If you
--   specify <tt>TCP</tt> for <tt>Type</tt>, don't specify a value for
--   <tt>ResourcePath</tt>.</li>
--   </ul>
--   
--   For more information, see <a>How Route 53 Determines Whether an
--   Endpoint Is Healthy</a> in the <i>Route 53 Developer Guide</i>.
healthCheckConfig_type :: Lens' HealthCheckConfig HealthCheckType

-- | A complex type that contains information about an optional custom
--   health check. A custom health check, which requires that you use a
--   third-party health checker to evaluate the health of your resources,
--   is useful in the following circumstances:
--   
--   <ul>
--   <li>You can't use a health check that's defined by
--   <tt>HealthCheckConfig</tt> because the resource isn't available over
--   the internet. For example, you can use a custom health check when the
--   instance is in an Amazon VPC. (To check the health of resources in a
--   VPC, the health checker must also be in the VPC.)</li>
--   <li>You want to use a third-party health checker regardless of where
--   your resources are located.</li>
--   </ul>
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   To change the status of a custom health check, submit an
--   <tt>UpdateInstanceCustomHealthStatus</tt> request. Cloud Map doesn't
--   monitor the status of the resource, it just keeps a record of the
--   status specified in the most recent
--   <tt>UpdateInstanceCustomHealthStatus</tt> request.
--   
--   Here's how custom health checks work:
--   
--   <ol>
--   <li>You create a service.</li>
--   <li>You register an instance.</li>
--   <li>You configure a third-party health checker to monitor the resource
--   that's associated with the new instance.Cloud Map doesn't check the
--   health of the resource directly.</li>
--   <li>The third-party health-checker determines that the resource is
--   unhealthy and notifies your application.</li>
--   <li>Your application submits an
--   <tt>UpdateInstanceCustomHealthStatus</tt> request.</li>
--   <li>Cloud Map waits for 30 seconds.</li>
--   <li>If another <tt>UpdateInstanceCustomHealthStatus</tt> request
--   doesn't arrive during that time to change the status back to healthy,
--   Cloud Map stops routing traffic to the resource.</li>
--   </ol>
--   
--   <i>See:</i> <a>newHealthCheckCustomConfig</a> smart constructor.
data HealthCheckCustomConfig
HealthCheckCustomConfig' :: Maybe Natural -> HealthCheckCustomConfig

-- | This parameter is no longer supported and is always set to 1. Cloud
--   Map waits for approximately 30 seconds after receiving an
--   <tt>UpdateInstanceCustomHealthStatus</tt> request before changing the
--   status of the service instance.
--   
--   The number of 30-second intervals that you want Cloud Map to wait
--   after receiving an <tt>UpdateInstanceCustomHealthStatus</tt> request
--   before it changes the health status of a service instance.
--   
--   Sending a second or subsequent
--   <tt>UpdateInstanceCustomHealthStatus</tt> request with the same value
--   before 30 seconds has passed doesn't accelerate the change. Cloud Map
--   still waits <tt>30</tt> seconds after the first request to make the
--   change.
[$sel:failureThreshold:HealthCheckCustomConfig'] :: HealthCheckCustomConfig -> Maybe Natural

-- | Create a value of <a>HealthCheckCustomConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureThreshold:HealthCheckCustomConfig'</a>,
--   <a>healthCheckCustomConfig_failureThreshold</a> - This parameter is no
--   longer supported and is always set to 1. Cloud Map waits for
--   approximately 30 seconds after receiving an
--   <tt>UpdateInstanceCustomHealthStatus</tt> request before changing the
--   status of the service instance.
--   
--   The number of 30-second intervals that you want Cloud Map to wait
--   after receiving an <tt>UpdateInstanceCustomHealthStatus</tt> request
--   before it changes the health status of a service instance.
--   
--   Sending a second or subsequent
--   <tt>UpdateInstanceCustomHealthStatus</tt> request with the same value
--   before 30 seconds has passed doesn't accelerate the change. Cloud Map
--   still waits <tt>30</tt> seconds after the first request to make the
--   change.
newHealthCheckCustomConfig :: HealthCheckCustomConfig

-- | This parameter is no longer supported and is always set to 1. Cloud
--   Map waits for approximately 30 seconds after receiving an
--   <tt>UpdateInstanceCustomHealthStatus</tt> request before changing the
--   status of the service instance.
--   
--   The number of 30-second intervals that you want Cloud Map to wait
--   after receiving an <tt>UpdateInstanceCustomHealthStatus</tt> request
--   before it changes the health status of a service instance.
--   
--   Sending a second or subsequent
--   <tt>UpdateInstanceCustomHealthStatus</tt> request with the same value
--   before 30 seconds has passed doesn't accelerate the change. Cloud Map
--   still waits <tt>30</tt> seconds after the first request to make the
--   change.
healthCheckCustomConfig_failureThreshold :: Lens' HealthCheckCustomConfig (Maybe Natural)

-- | In a response to a <a>DiscoverInstances</a> request,
--   <tt>HttpInstanceSummary</tt> contains information about one instance
--   that matches the values that you specified in the request.
--   
--   <i>See:</i> <a>newHttpInstanceSummary</a> smart constructor.
data HttpInstanceSummary
HttpInstanceSummary' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe HealthStatus -> HttpInstanceSummary

-- | The ID of an instance that matches the values that you specified in
--   the request.
[$sel:instanceId:HttpInstanceSummary'] :: HttpInstanceSummary -> Maybe Text

-- | @<tt> </tt><tt> </tt>@
--   
--   The <tt>HttpName</tt> name of the namespace. It's found in the
--   <tt>HttpProperties</tt> member of the <tt>Properties</tt> member of
--   the namespace.
[$sel:namespaceName:HttpInstanceSummary'] :: HttpInstanceSummary -> Maybe Text

-- | If you included any attributes when you registered the instance, the
--   values of those attributes.
[$sel:attributes:HttpInstanceSummary'] :: HttpInstanceSummary -> Maybe (HashMap Text Text)

-- | The name of the service that you specified when you registered the
--   instance.
[$sel:serviceName:HttpInstanceSummary'] :: HttpInstanceSummary -> Maybe Text

-- | If you configured health checking in the service, the current health
--   status of the service instance.
[$sel:healthStatus:HttpInstanceSummary'] :: HttpInstanceSummary -> Maybe HealthStatus

-- | Create a value of <a>HttpInstanceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:HttpInstanceSummary'</a>,
--   <a>httpInstanceSummary_instanceId</a> - The ID of an instance that
--   matches the values that you specified in the request.
--   
--   <a>$sel:namespaceName:HttpInstanceSummary'</a>,
--   <a>httpInstanceSummary_namespaceName</a> - @<tt> </tt><tt> </tt>@
--   
--   The <tt>HttpName</tt> name of the namespace. It's found in the
--   <tt>HttpProperties</tt> member of the <tt>Properties</tt> member of
--   the namespace.
--   
--   <a>$sel:attributes:HttpInstanceSummary'</a>,
--   <a>httpInstanceSummary_attributes</a> - If you included any attributes
--   when you registered the instance, the values of those attributes.
--   
--   <a>$sel:serviceName:HttpInstanceSummary'</a>,
--   <a>httpInstanceSummary_serviceName</a> - The name of the service that
--   you specified when you registered the instance.
--   
--   <a>$sel:healthStatus:HttpInstanceSummary'</a>,
--   <a>httpInstanceSummary_healthStatus</a> - If you configured health
--   checking in the service, the current health status of the service
--   instance.
newHttpInstanceSummary :: HttpInstanceSummary

-- | The ID of an instance that matches the values that you specified in
--   the request.
httpInstanceSummary_instanceId :: Lens' HttpInstanceSummary (Maybe Text)

-- | @<tt> </tt><tt> </tt>@
--   
--   The <tt>HttpName</tt> name of the namespace. It's found in the
--   <tt>HttpProperties</tt> member of the <tt>Properties</tt> member of
--   the namespace.
httpInstanceSummary_namespaceName :: Lens' HttpInstanceSummary (Maybe Text)

-- | If you included any attributes when you registered the instance, the
--   values of those attributes.
httpInstanceSummary_attributes :: Lens' HttpInstanceSummary (Maybe (HashMap Text Text))

-- | The name of the service that you specified when you registered the
--   instance.
httpInstanceSummary_serviceName :: Lens' HttpInstanceSummary (Maybe Text)

-- | If you configured health checking in the service, the current health
--   status of the service instance.
httpInstanceSummary_healthStatus :: Lens' HttpInstanceSummary (Maybe HealthStatus)

-- | Updated properties for the HTTP namespace.
--   
--   <i>See:</i> <a>newHttpNamespaceChange</a> smart constructor.
data HttpNamespaceChange
HttpNamespaceChange' :: Text -> HttpNamespaceChange

-- | An updated description for the HTTP namespace.
[$sel:description:HttpNamespaceChange'] :: HttpNamespaceChange -> Text

-- | Create a value of <a>HttpNamespaceChange</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:HttpNamespaceChange'</a>,
--   <a>httpNamespaceChange_description</a> - An updated description for
--   the HTTP namespace.
newHttpNamespaceChange :: Text -> HttpNamespaceChange

-- | An updated description for the HTTP namespace.
httpNamespaceChange_description :: Lens' HttpNamespaceChange Text

-- | A complex type that contains the name of an HTTP namespace.
--   
--   <i>See:</i> <a>newHttpProperties</a> smart constructor.
data HttpProperties
HttpProperties' :: Maybe Text -> HttpProperties

-- | The name of an HTTP namespace.
[$sel:httpName:HttpProperties'] :: HttpProperties -> Maybe Text

-- | Create a value of <a>HttpProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpName:HttpProperties'</a>, <a>httpProperties_httpName</a> -
--   The name of an HTTP namespace.
newHttpProperties :: HttpProperties

-- | The name of an HTTP namespace.
httpProperties_httpName :: Lens' HttpProperties (Maybe Text)

-- | A complex type that contains information about an instance that Cloud
--   Map creates when you submit a <tt>RegisterInstance</tt> request.
--   
--   <i>See:</i> <a>newInstance</a> smart constructor.
data Instance
Instance' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> Instance

-- | A unique string that identifies the request and that allows failed
--   <tt>RegisterInstance</tt> requests to be retried without the risk of
--   executing the operation twice. You must use a unique
--   <tt>CreatorRequestId</tt> string every time you submit a
--   <tt>RegisterInstance</tt> request if you're registering additional
--   instances for the same namespace and service.
--   <tt>CreatorRequestId</tt> can be any unique string (for example, a
--   date/time stamp).
[$sel:creatorRequestId:Instance'] :: Instance -> Maybe Text

-- | A string map that contains the following information for the service
--   that you specify in <tt>ServiceId</tt>:
--   
--   <ul>
--   <li>The attributes that apply to the records that are defined in the
--   service.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> If you want Cloud Map to create a Route
--   53 alias record that routes traffic to an Elastic Load Balancing load
--   balancer, specify the DNS name that's associated with the load
--   balancer. For information about how to get the DNS name, see
--   <a>AliasTarget-</a>DNSName&gt; in the <i>Route 53 API
--   Reference</i>.Note the following:<ul><li>The configuration for the
--   service that's specified by <tt>ServiceId</tt> must include settings
--   for an <tt>A</tt> record, an <tt>AAAA</tt> record, or both.</li><li>In
--   the service that's specified by <tt>ServiceId</tt>, the value of
--   <tt>RoutingPolicy</tt> must be <tt>WEIGHTED</tt>.</li><li>If the
--   service that's specified by <tt>ServiceId</tt> includes
--   <tt>HealthCheckConfig</tt> settings, Cloud Map creates the health
--   check, but it won't associate the health check with the alias
--   record.</li><li>Auto naming currently doesn't support creating alias
--   records that route traffic to Amazon Web Services resources other than
--   ELB load balancers.</li><li>If you specify a value for
--   <tt>AWS_ALIAS_DNS_NAME</tt>, don't specify values for any of the
--   <tt>AWS_INSTANCE</tt> attributes.</li></ul></li>
--   <li><i>AWS_EC2_INSTANCE_ID</i> <i>HTTP namespaces only.</i> The Amazon
--   EC2 instance ID for the instance. The <tt>AWS_INSTANCE_IPV4</tt>
--   attribute contains the primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> If the service configuration includes a
--   <tt>CNAME</tt> record, the domain name that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>example.com</tt>).This value is required if the service specified
--   by <tt>ServiceId</tt> includes settings for an <tt>CNAME</tt>
--   record.</li>
--   <li><i>AWS_INSTANCE_IPV4</i> If the service configuration includes an
--   <tt>A</tt> record, the IPv4 address that you want Route 53 to return
--   in response to DNS queries (for example, <tt>192.0.2.44</tt>).This
--   value is required if the service specified by <tt>ServiceId</tt>
--   includes settings for an <tt>A</tt> record. If the service includes
--   settings for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_IPV6</i> If the service configuration includes an
--   <tt>AAAA</tt> record, the IPv6 address that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).This value is
--   required if the service specified by <tt>ServiceId</tt> includes
--   settings for an <tt>AAAA</tt> record. If the service includes settings
--   for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_PORT</i> If the service includes an <tt>SRV</tt>
--   record, the value that you want Route 53 to return for the port.If the
--   service includes <tt>HealthCheckConfig</tt>, the port on the endpoint
--   that you want Route 53 to send requests to.This value is required if
--   you specified settings for an <tt>SRV</tt> record or a Route 53 health
--   check when you created the service.</li>
--   </ul>
[$sel:attributes:Instance'] :: Instance -> Maybe (HashMap Text Text)

-- | An identifier that you want to associate with the instance. Note the
--   following:
--   
--   <ul>
--   <li>If the service that's specified by <tt>ServiceId</tt> includes
--   settings for an <tt>SRV</tt> record, the value of <tt>InstanceId</tt>
--   is automatically included as part of the value for the <tt>SRV</tt>
--   record. For more information, see <a>DnsRecord</a> Type&gt;.</li>
--   <li>You can use this value to update an existing instance.</li>
--   <li>To register a new instance, you must specify a value that's unique
--   among instances that you register by using the same service.</li>
--   <li>If you specify an existing <tt>InstanceId</tt> and
--   <tt>ServiceId</tt>, Cloud Map updates the existing DNS records. If
--   there's also an existing health check, Cloud Map deletes the old
--   health check and creates a new one.The health check isn't deleted
--   immediately, so it will still appear for a while if you submit a
--   <tt>ListHealthChecks</tt> request, for example.</li>
--   </ul>
[$sel:id:Instance'] :: Instance -> Text

-- | Create a value of <a>Instance</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creatorRequestId:Instance'</a>,
--   <a>instance_creatorRequestId</a> - A unique string that identifies the
--   request and that allows failed <tt>RegisterInstance</tt> requests to
--   be retried without the risk of executing the operation twice. You must
--   use a unique <tt>CreatorRequestId</tt> string every time you submit a
--   <tt>RegisterInstance</tt> request if you're registering additional
--   instances for the same namespace and service.
--   <tt>CreatorRequestId</tt> can be any unique string (for example, a
--   date/time stamp).
--   
--   <a>$sel:attributes:Instance'</a>, <a>instance_attributes</a> - A
--   string map that contains the following information for the service
--   that you specify in <tt>ServiceId</tt>:
--   
--   <ul>
--   <li>The attributes that apply to the records that are defined in the
--   service.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> If you want Cloud Map to create a Route
--   53 alias record that routes traffic to an Elastic Load Balancing load
--   balancer, specify the DNS name that's associated with the load
--   balancer. For information about how to get the DNS name, see
--   <a>AliasTarget-</a>DNSName&gt; in the <i>Route 53 API
--   Reference</i>.Note the following:<ul><li>The configuration for the
--   service that's specified by <tt>ServiceId</tt> must include settings
--   for an <tt>A</tt> record, an <tt>AAAA</tt> record, or both.</li><li>In
--   the service that's specified by <tt>ServiceId</tt>, the value of
--   <tt>RoutingPolicy</tt> must be <tt>WEIGHTED</tt>.</li><li>If the
--   service that's specified by <tt>ServiceId</tt> includes
--   <tt>HealthCheckConfig</tt> settings, Cloud Map creates the health
--   check, but it won't associate the health check with the alias
--   record.</li><li>Auto naming currently doesn't support creating alias
--   records that route traffic to Amazon Web Services resources other than
--   ELB load balancers.</li><li>If you specify a value for
--   <tt>AWS_ALIAS_DNS_NAME</tt>, don't specify values for any of the
--   <tt>AWS_INSTANCE</tt> attributes.</li></ul></li>
--   <li><i>AWS_EC2_INSTANCE_ID</i> <i>HTTP namespaces only.</i> The Amazon
--   EC2 instance ID for the instance. The <tt>AWS_INSTANCE_IPV4</tt>
--   attribute contains the primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> If the service configuration includes a
--   <tt>CNAME</tt> record, the domain name that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>example.com</tt>).This value is required if the service specified
--   by <tt>ServiceId</tt> includes settings for an <tt>CNAME</tt>
--   record.</li>
--   <li><i>AWS_INSTANCE_IPV4</i> If the service configuration includes an
--   <tt>A</tt> record, the IPv4 address that you want Route 53 to return
--   in response to DNS queries (for example, <tt>192.0.2.44</tt>).This
--   value is required if the service specified by <tt>ServiceId</tt>
--   includes settings for an <tt>A</tt> record. If the service includes
--   settings for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_IPV6</i> If the service configuration includes an
--   <tt>AAAA</tt> record, the IPv6 address that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).This value is
--   required if the service specified by <tt>ServiceId</tt> includes
--   settings for an <tt>AAAA</tt> record. If the service includes settings
--   for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_PORT</i> If the service includes an <tt>SRV</tt>
--   record, the value that you want Route 53 to return for the port.If the
--   service includes <tt>HealthCheckConfig</tt>, the port on the endpoint
--   that you want Route 53 to send requests to.This value is required if
--   you specified settings for an <tt>SRV</tt> record or a Route 53 health
--   check when you created the service.</li>
--   </ul>
--   
--   <a>$sel:id:Instance'</a>, <a>instance_id</a> - An identifier that you
--   want to associate with the instance. Note the following:
--   
--   <ul>
--   <li>If the service that's specified by <tt>ServiceId</tt> includes
--   settings for an <tt>SRV</tt> record, the value of <tt>InstanceId</tt>
--   is automatically included as part of the value for the <tt>SRV</tt>
--   record. For more information, see <a>DnsRecord</a> Type&gt;.</li>
--   <li>You can use this value to update an existing instance.</li>
--   <li>To register a new instance, you must specify a value that's unique
--   among instances that you register by using the same service.</li>
--   <li>If you specify an existing <tt>InstanceId</tt> and
--   <tt>ServiceId</tt>, Cloud Map updates the existing DNS records. If
--   there's also an existing health check, Cloud Map deletes the old
--   health check and creates a new one.The health check isn't deleted
--   immediately, so it will still appear for a while if you submit a
--   <tt>ListHealthChecks</tt> request, for example.</li>
--   </ul>
newInstance :: Text -> Instance

-- | A unique string that identifies the request and that allows failed
--   <tt>RegisterInstance</tt> requests to be retried without the risk of
--   executing the operation twice. You must use a unique
--   <tt>CreatorRequestId</tt> string every time you submit a
--   <tt>RegisterInstance</tt> request if you're registering additional
--   instances for the same namespace and service.
--   <tt>CreatorRequestId</tt> can be any unique string (for example, a
--   date/time stamp).
instance_creatorRequestId :: Lens' Instance (Maybe Text)

-- | A string map that contains the following information for the service
--   that you specify in <tt>ServiceId</tt>:
--   
--   <ul>
--   <li>The attributes that apply to the records that are defined in the
--   service.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> If you want Cloud Map to create a Route
--   53 alias record that routes traffic to an Elastic Load Balancing load
--   balancer, specify the DNS name that's associated with the load
--   balancer. For information about how to get the DNS name, see
--   <a>AliasTarget-</a>DNSName&gt; in the <i>Route 53 API
--   Reference</i>.Note the following:<ul><li>The configuration for the
--   service that's specified by <tt>ServiceId</tt> must include settings
--   for an <tt>A</tt> record, an <tt>AAAA</tt> record, or both.</li><li>In
--   the service that's specified by <tt>ServiceId</tt>, the value of
--   <tt>RoutingPolicy</tt> must be <tt>WEIGHTED</tt>.</li><li>If the
--   service that's specified by <tt>ServiceId</tt> includes
--   <tt>HealthCheckConfig</tt> settings, Cloud Map creates the health
--   check, but it won't associate the health check with the alias
--   record.</li><li>Auto naming currently doesn't support creating alias
--   records that route traffic to Amazon Web Services resources other than
--   ELB load balancers.</li><li>If you specify a value for
--   <tt>AWS_ALIAS_DNS_NAME</tt>, don't specify values for any of the
--   <tt>AWS_INSTANCE</tt> attributes.</li></ul></li>
--   <li><i>AWS_EC2_INSTANCE_ID</i> <i>HTTP namespaces only.</i> The Amazon
--   EC2 instance ID for the instance. The <tt>AWS_INSTANCE_IPV4</tt>
--   attribute contains the primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> If the service configuration includes a
--   <tt>CNAME</tt> record, the domain name that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>example.com</tt>).This value is required if the service specified
--   by <tt>ServiceId</tt> includes settings for an <tt>CNAME</tt>
--   record.</li>
--   <li><i>AWS_INSTANCE_IPV4</i> If the service configuration includes an
--   <tt>A</tt> record, the IPv4 address that you want Route 53 to return
--   in response to DNS queries (for example, <tt>192.0.2.44</tt>).This
--   value is required if the service specified by <tt>ServiceId</tt>
--   includes settings for an <tt>A</tt> record. If the service includes
--   settings for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_IPV6</i> If the service configuration includes an
--   <tt>AAAA</tt> record, the IPv6 address that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).This value is
--   required if the service specified by <tt>ServiceId</tt> includes
--   settings for an <tt>AAAA</tt> record. If the service includes settings
--   for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_PORT</i> If the service includes an <tt>SRV</tt>
--   record, the value that you want Route 53 to return for the port.If the
--   service includes <tt>HealthCheckConfig</tt>, the port on the endpoint
--   that you want Route 53 to send requests to.This value is required if
--   you specified settings for an <tt>SRV</tt> record or a Route 53 health
--   check when you created the service.</li>
--   </ul>
instance_attributes :: Lens' Instance (Maybe (HashMap Text Text))

-- | An identifier that you want to associate with the instance. Note the
--   following:
--   
--   <ul>
--   <li>If the service that's specified by <tt>ServiceId</tt> includes
--   settings for an <tt>SRV</tt> record, the value of <tt>InstanceId</tt>
--   is automatically included as part of the value for the <tt>SRV</tt>
--   record. For more information, see <a>DnsRecord</a> Type&gt;.</li>
--   <li>You can use this value to update an existing instance.</li>
--   <li>To register a new instance, you must specify a value that's unique
--   among instances that you register by using the same service.</li>
--   <li>If you specify an existing <tt>InstanceId</tt> and
--   <tt>ServiceId</tt>, Cloud Map updates the existing DNS records. If
--   there's also an existing health check, Cloud Map deletes the old
--   health check and creates a new one.The health check isn't deleted
--   immediately, so it will still appear for a while if you submit a
--   <tt>ListHealthChecks</tt> request, for example.</li>
--   </ul>
instance_id :: Lens' Instance Text

-- | A complex type that contains information about the instances that you
--   registered by using a specified service.
--   
--   <i>See:</i> <a>newInstanceSummary</a> smart constructor.
data InstanceSummary
InstanceSummary' :: Maybe (HashMap Text Text) -> Maybe Text -> InstanceSummary

-- | A string map that contains the following information:
--   
--   <ul>
--   <li>The attributes that are associated with the instance.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> For an alias record that routes traffic
--   to an Elastic Load Balancing load balancer, the DNS name that's
--   associated with the load balancer.</li>
--   <li><i>AWS_EC2_INSTANCE_ID (HTTP namespaces only)</i> The Amazon EC2
--   instance ID for the instance. When the <tt>AWS_EC2_INSTANCE_ID</tt>
--   attribute is specified, then the <tt>AWS_INSTANCE_IPV4</tt> attribute
--   contains the primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> For a <tt>CNAME</tt> record, the domain
--   name that Route 53 returns in response to DNS queries (for example,
--   <tt>example.com</tt>).</li>
--   <li><i>AWS_INSTANCE_IPV4</i> For an <tt>A</tt> record, the IPv4
--   address that Route 53 returns in response to DNS queries (for example,
--   <tt>192.0.2.44</tt>).</li>
--   <li><i>AWS_INSTANCE_IPV6</i> For an <tt>AAAA</tt> record, the IPv6
--   address that Route 53 returns in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).</li>
--   <li><i>AWS_INSTANCE_PORT</i> For an <tt>SRV</tt> record, the value
--   that Route 53 returns for the port. In addition, if the service
--   includes <tt>HealthCheckConfig</tt>, the port on the endpoint that
--   Route 53 sends requests to.</li>
--   </ul>
[$sel:attributes:InstanceSummary'] :: InstanceSummary -> Maybe (HashMap Text Text)

-- | The ID for an instance that you created by using a specified service.
[$sel:id:InstanceSummary'] :: InstanceSummary -> Maybe Text

-- | Create a value of <a>InstanceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:InstanceSummary'</a>,
--   <a>instanceSummary_attributes</a> - A string map that contains the
--   following information:
--   
--   <ul>
--   <li>The attributes that are associated with the instance.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> For an alias record that routes traffic
--   to an Elastic Load Balancing load balancer, the DNS name that's
--   associated with the load balancer.</li>
--   <li><i>AWS_EC2_INSTANCE_ID (HTTP namespaces only)</i> The Amazon EC2
--   instance ID for the instance. When the <tt>AWS_EC2_INSTANCE_ID</tt>
--   attribute is specified, then the <tt>AWS_INSTANCE_IPV4</tt> attribute
--   contains the primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> For a <tt>CNAME</tt> record, the domain
--   name that Route 53 returns in response to DNS queries (for example,
--   <tt>example.com</tt>).</li>
--   <li><i>AWS_INSTANCE_IPV4</i> For an <tt>A</tt> record, the IPv4
--   address that Route 53 returns in response to DNS queries (for example,
--   <tt>192.0.2.44</tt>).</li>
--   <li><i>AWS_INSTANCE_IPV6</i> For an <tt>AAAA</tt> record, the IPv6
--   address that Route 53 returns in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).</li>
--   <li><i>AWS_INSTANCE_PORT</i> For an <tt>SRV</tt> record, the value
--   that Route 53 returns for the port. In addition, if the service
--   includes <tt>HealthCheckConfig</tt>, the port on the endpoint that
--   Route 53 sends requests to.</li>
--   </ul>
--   
--   <a>$sel:id:InstanceSummary'</a>, <a>instanceSummary_id</a> - The ID
--   for an instance that you created by using a specified service.
newInstanceSummary :: InstanceSummary

-- | A string map that contains the following information:
--   
--   <ul>
--   <li>The attributes that are associated with the instance.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> For an alias record that routes traffic
--   to an Elastic Load Balancing load balancer, the DNS name that's
--   associated with the load balancer.</li>
--   <li><i>AWS_EC2_INSTANCE_ID (HTTP namespaces only)</i> The Amazon EC2
--   instance ID for the instance. When the <tt>AWS_EC2_INSTANCE_ID</tt>
--   attribute is specified, then the <tt>AWS_INSTANCE_IPV4</tt> attribute
--   contains the primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> For a <tt>CNAME</tt> record, the domain
--   name that Route 53 returns in response to DNS queries (for example,
--   <tt>example.com</tt>).</li>
--   <li><i>AWS_INSTANCE_IPV4</i> For an <tt>A</tt> record, the IPv4
--   address that Route 53 returns in response to DNS queries (for example,
--   <tt>192.0.2.44</tt>).</li>
--   <li><i>AWS_INSTANCE_IPV6</i> For an <tt>AAAA</tt> record, the IPv6
--   address that Route 53 returns in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).</li>
--   <li><i>AWS_INSTANCE_PORT</i> For an <tt>SRV</tt> record, the value
--   that Route 53 returns for the port. In addition, if the service
--   includes <tt>HealthCheckConfig</tt>, the port on the endpoint that
--   Route 53 sends requests to.</li>
--   </ul>
instanceSummary_attributes :: Lens' InstanceSummary (Maybe (HashMap Text Text))

-- | The ID for an instance that you created by using a specified service.
instanceSummary_id :: Lens' InstanceSummary (Maybe Text)

-- | A complex type that contains information about a specified namespace.
--   
--   <i>See:</i> <a>newNamespace</a> smart constructor.
data Namespace
Namespace' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe NamespaceType -> Maybe Text -> Maybe NamespaceProperties -> Namespace

-- | The Amazon Resource Name (ARN) that Cloud Map assigns to the namespace
--   when you create it.
[$sel:arn:Namespace'] :: Namespace -> Maybe Text

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running an operation twice.
[$sel:creatorRequestId:Namespace'] :: Namespace -> Maybe Text

-- | The date that the namespace was created, in Unix date/time format and
--   Coordinated Universal Time (UTC). The value of <tt>CreateDate</tt> is
--   accurate to milliseconds. For example, the value
--   <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
[$sel:createDate:Namespace'] :: Namespace -> Maybe POSIX

-- | The number of services that are associated with the namespace.
[$sel:serviceCount:Namespace'] :: Namespace -> Maybe Int

-- | The name of the namespace, such as <tt>example.com</tt>.
[$sel:name:Namespace'] :: Namespace -> Maybe Text

-- | The ID of a namespace.
[$sel:id:Namespace'] :: Namespace -> Maybe Text

-- | The type of the namespace. The methods for discovering instances
--   depends on the value that you specify:
--   
--   <ul>
--   <li><i>HTTP</i> Instances can be discovered only programmatically,
--   using the Cloud Map <tt>DiscoverInstances</tt> API.</li>
--   <li><i>DNS_PUBLIC</i> Instances can be discovered using public DNS
--   queries and using the <tt>DiscoverInstances</tt> API.</li>
--   <li><i>DNS_PRIVATE</i> Instances can be discovered using DNS queries
--   in VPCs and using the <tt>DiscoverInstances</tt> API.</li>
--   </ul>
[$sel:type':Namespace'] :: Namespace -> Maybe NamespaceType

-- | The description that you specify for the namespace when you create it.
[$sel:description:Namespace'] :: Namespace -> Maybe Text

-- | A complex type that contains information that's specific to the type
--   of the namespace.
[$sel:properties:Namespace'] :: Namespace -> Maybe NamespaceProperties

-- | Create a value of <a>Namespace</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Namespace'</a>, <a>namespace_arn</a> - The Amazon Resource
--   Name (ARN) that Cloud Map assigns to the namespace when you create it.
--   
--   <a>$sel:creatorRequestId:Namespace'</a>,
--   <a>namespace_creatorRequestId</a> - A unique string that identifies
--   the request and that allows failed requests to be retried without the
--   risk of running an operation twice.
--   
--   <a>$sel:createDate:Namespace'</a>, <a>namespace_createDate</a> - The
--   date that the namespace was created, in Unix date/time format and
--   Coordinated Universal Time (UTC). The value of <tt>CreateDate</tt> is
--   accurate to milliseconds. For example, the value
--   <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
--   
--   <a>$sel:serviceCount:Namespace'</a>, <a>namespace_serviceCount</a> -
--   The number of services that are associated with the namespace.
--   
--   <a>$sel:name:Namespace'</a>, <a>namespace_name</a> - The name of the
--   namespace, such as <tt>example.com</tt>.
--   
--   <a>$sel:id:Namespace'</a>, <a>namespace_id</a> - The ID of a
--   namespace.
--   
--   <a>$sel:type':Namespace'</a>, <a>namespace_type</a> - The type of the
--   namespace. The methods for discovering instances depends on the value
--   that you specify:
--   
--   <ul>
--   <li><i>HTTP</i> Instances can be discovered only programmatically,
--   using the Cloud Map <tt>DiscoverInstances</tt> API.</li>
--   <li><i>DNS_PUBLIC</i> Instances can be discovered using public DNS
--   queries and using the <tt>DiscoverInstances</tt> API.</li>
--   <li><i>DNS_PRIVATE</i> Instances can be discovered using DNS queries
--   in VPCs and using the <tt>DiscoverInstances</tt> API.</li>
--   </ul>
--   
--   <a>$sel:description:Namespace'</a>, <a>namespace_description</a> - The
--   description that you specify for the namespace when you create it.
--   
--   <a>$sel:properties:Namespace'</a>, <a>namespace_properties</a> - A
--   complex type that contains information that's specific to the type of
--   the namespace.
newNamespace :: Namespace

-- | The Amazon Resource Name (ARN) that Cloud Map assigns to the namespace
--   when you create it.
namespace_arn :: Lens' Namespace (Maybe Text)

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running an operation twice.
namespace_creatorRequestId :: Lens' Namespace (Maybe Text)

-- | The date that the namespace was created, in Unix date/time format and
--   Coordinated Universal Time (UTC). The value of <tt>CreateDate</tt> is
--   accurate to milliseconds. For example, the value
--   <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
namespace_createDate :: Lens' Namespace (Maybe UTCTime)

-- | The number of services that are associated with the namespace.
namespace_serviceCount :: Lens' Namespace (Maybe Int)

-- | The name of the namespace, such as <tt>example.com</tt>.
namespace_name :: Lens' Namespace (Maybe Text)

-- | The ID of a namespace.
namespace_id :: Lens' Namespace (Maybe Text)

-- | The type of the namespace. The methods for discovering instances
--   depends on the value that you specify:
--   
--   <ul>
--   <li><i>HTTP</i> Instances can be discovered only programmatically,
--   using the Cloud Map <tt>DiscoverInstances</tt> API.</li>
--   <li><i>DNS_PUBLIC</i> Instances can be discovered using public DNS
--   queries and using the <tt>DiscoverInstances</tt> API.</li>
--   <li><i>DNS_PRIVATE</i> Instances can be discovered using DNS queries
--   in VPCs and using the <tt>DiscoverInstances</tt> API.</li>
--   </ul>
namespace_type :: Lens' Namespace (Maybe NamespaceType)

-- | The description that you specify for the namespace when you create it.
namespace_description :: Lens' Namespace (Maybe Text)

-- | A complex type that contains information that's specific to the type
--   of the namespace.
namespace_properties :: Lens' Namespace (Maybe NamespaceProperties)

-- | A complex type that identifies the namespaces that you want to list.
--   You can choose to list public or private namespaces.
--   
--   <i>See:</i> <a>newNamespaceFilter</a> smart constructor.
data NamespaceFilter
NamespaceFilter' :: Maybe FilterCondition -> NamespaceFilterName -> [Text] -> NamespaceFilter

-- | The operator that you want to use to determine whether
--   <tt>ListNamespaces</tt> returns a namespace. Valid values for
--   <tt>condition</tt> include:
--   
--   <ul>
--   <li><i>EQ</i> When you specify <tt>EQ</tt> for the condition, you can
--   choose to list only public namespaces or private namespaces, but not
--   both. <tt>EQ</tt> is the default condition and can be omitted.</li>
--   <li><i>IN</i> When you specify <tt>IN</tt> for the condition, you can
--   choose to list public namespaces, private namespaces, or both.</li>
--   <li><i>BETWEEN</i> Not applicable</li>
--   </ul>
[$sel:condition:NamespaceFilter'] :: NamespaceFilter -> Maybe FilterCondition

-- | Specify <tt>TYPE</tt>.
[$sel:name:NamespaceFilter'] :: NamespaceFilter -> NamespaceFilterName

-- | If you specify <tt>EQ</tt> for <tt>Condition</tt>, specify either
--   <tt>DNS_PUBLIC</tt> or <tt>DNS_PRIVATE</tt>.
--   
--   If you specify <tt>IN</tt> for <tt>Condition</tt>, you can specify
--   <tt>DNS_PUBLIC</tt>, <tt>DNS_PRIVATE</tt>, or both.
[$sel:values:NamespaceFilter'] :: NamespaceFilter -> [Text]

-- | Create a value of <a>NamespaceFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:condition:NamespaceFilter'</a>,
--   <a>namespaceFilter_condition</a> - The operator that you want to use
--   to determine whether <tt>ListNamespaces</tt> returns a namespace.
--   Valid values for <tt>condition</tt> include:
--   
--   <ul>
--   <li><i>EQ</i> When you specify <tt>EQ</tt> for the condition, you can
--   choose to list only public namespaces or private namespaces, but not
--   both. <tt>EQ</tt> is the default condition and can be omitted.</li>
--   <li><i>IN</i> When you specify <tt>IN</tt> for the condition, you can
--   choose to list public namespaces, private namespaces, or both.</li>
--   <li><i>BETWEEN</i> Not applicable</li>
--   </ul>
--   
--   <a>$sel:name:NamespaceFilter'</a>, <a>namespaceFilter_name</a> -
--   Specify <tt>TYPE</tt>.
--   
--   <a>$sel:values:NamespaceFilter'</a>, <a>namespaceFilter_values</a> -
--   If you specify <tt>EQ</tt> for <tt>Condition</tt>, specify either
--   <tt>DNS_PUBLIC</tt> or <tt>DNS_PRIVATE</tt>.
--   
--   If you specify <tt>IN</tt> for <tt>Condition</tt>, you can specify
--   <tt>DNS_PUBLIC</tt>, <tt>DNS_PRIVATE</tt>, or both.
newNamespaceFilter :: NamespaceFilterName -> NamespaceFilter

-- | The operator that you want to use to determine whether
--   <tt>ListNamespaces</tt> returns a namespace. Valid values for
--   <tt>condition</tt> include:
--   
--   <ul>
--   <li><i>EQ</i> When you specify <tt>EQ</tt> for the condition, you can
--   choose to list only public namespaces or private namespaces, but not
--   both. <tt>EQ</tt> is the default condition and can be omitted.</li>
--   <li><i>IN</i> When you specify <tt>IN</tt> for the condition, you can
--   choose to list public namespaces, private namespaces, or both.</li>
--   <li><i>BETWEEN</i> Not applicable</li>
--   </ul>
namespaceFilter_condition :: Lens' NamespaceFilter (Maybe FilterCondition)

-- | Specify <tt>TYPE</tt>.
namespaceFilter_name :: Lens' NamespaceFilter NamespaceFilterName

-- | If you specify <tt>EQ</tt> for <tt>Condition</tt>, specify either
--   <tt>DNS_PUBLIC</tt> or <tt>DNS_PRIVATE</tt>.
--   
--   If you specify <tt>IN</tt> for <tt>Condition</tt>, you can specify
--   <tt>DNS_PUBLIC</tt>, <tt>DNS_PRIVATE</tt>, or both.
namespaceFilter_values :: Lens' NamespaceFilter [Text]

-- | A complex type that contains information that's specific to the
--   namespace type.
--   
--   <i>See:</i> <a>newNamespaceProperties</a> smart constructor.
data NamespaceProperties
NamespaceProperties' :: Maybe DnsProperties -> Maybe HttpProperties -> NamespaceProperties

-- | A complex type that contains the ID for the Route 53 hosted zone that
--   Cloud Map creates when you create a namespace.
[$sel:dnsProperties:NamespaceProperties'] :: NamespaceProperties -> Maybe DnsProperties

-- | A complex type that contains the name of an HTTP namespace.
[$sel:httpProperties:NamespaceProperties'] :: NamespaceProperties -> Maybe HttpProperties

-- | Create a value of <a>NamespaceProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dnsProperties:NamespaceProperties'</a>,
--   <a>namespaceProperties_dnsProperties</a> - A complex type that
--   contains the ID for the Route 53 hosted zone that Cloud Map creates
--   when you create a namespace.
--   
--   <a>$sel:httpProperties:NamespaceProperties'</a>,
--   <a>namespaceProperties_httpProperties</a> - A complex type that
--   contains the name of an HTTP namespace.
newNamespaceProperties :: NamespaceProperties

-- | A complex type that contains the ID for the Route 53 hosted zone that
--   Cloud Map creates when you create a namespace.
namespaceProperties_dnsProperties :: Lens' NamespaceProperties (Maybe DnsProperties)

-- | A complex type that contains the name of an HTTP namespace.
namespaceProperties_httpProperties :: Lens' NamespaceProperties (Maybe HttpProperties)

-- | A complex type that contains information about a namespace.
--   
--   <i>See:</i> <a>newNamespaceSummary</a> smart constructor.
data NamespaceSummary
NamespaceSummary' :: Maybe Text -> Maybe POSIX -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe NamespaceType -> Maybe Text -> Maybe NamespaceProperties -> NamespaceSummary

-- | The Amazon Resource Name (ARN) that Cloud Map assigns to the namespace
--   when you create it.
[$sel:arn:NamespaceSummary'] :: NamespaceSummary -> Maybe Text

-- | The date and time that the namespace was created.
[$sel:createDate:NamespaceSummary'] :: NamespaceSummary -> Maybe POSIX

-- | The number of services that were created using the namespace.
[$sel:serviceCount:NamespaceSummary'] :: NamespaceSummary -> Maybe Int

-- | The name of the namespace. When you create a namespace, Cloud Map
--   automatically creates a Route 53 hosted zone that has the same name as
--   the namespace.
[$sel:name:NamespaceSummary'] :: NamespaceSummary -> Maybe Text

-- | The ID of the namespace.
[$sel:id:NamespaceSummary'] :: NamespaceSummary -> Maybe Text

-- | The type of the namespace, either public or private.
[$sel:type':NamespaceSummary'] :: NamespaceSummary -> Maybe NamespaceType

-- | A description for the namespace.
[$sel:description:NamespaceSummary'] :: NamespaceSummary -> Maybe Text

-- | The properties of the namespace.
[$sel:properties:NamespaceSummary'] :: NamespaceSummary -> Maybe NamespaceProperties

-- | Create a value of <a>NamespaceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:NamespaceSummary'</a>, <a>namespaceSummary_arn</a> - The
--   Amazon Resource Name (ARN) that Cloud Map assigns to the namespace
--   when you create it.
--   
--   <a>$sel:createDate:NamespaceSummary'</a>,
--   <a>namespaceSummary_createDate</a> - The date and time that the
--   namespace was created.
--   
--   <a>$sel:serviceCount:NamespaceSummary'</a>,
--   <a>namespaceSummary_serviceCount</a> - The number of services that
--   were created using the namespace.
--   
--   <a>$sel:name:NamespaceSummary'</a>, <a>namespaceSummary_name</a> - The
--   name of the namespace. When you create a namespace, Cloud Map
--   automatically creates a Route 53 hosted zone that has the same name as
--   the namespace.
--   
--   <a>$sel:id:NamespaceSummary'</a>, <a>namespaceSummary_id</a> - The ID
--   of the namespace.
--   
--   <a>$sel:type':NamespaceSummary'</a>, <a>namespaceSummary_type</a> -
--   The type of the namespace, either public or private.
--   
--   <a>$sel:description:NamespaceSummary'</a>,
--   <a>namespaceSummary_description</a> - A description for the namespace.
--   
--   <a>$sel:properties:NamespaceSummary'</a>,
--   <a>namespaceSummary_properties</a> - The properties of the namespace.
newNamespaceSummary :: NamespaceSummary

-- | The Amazon Resource Name (ARN) that Cloud Map assigns to the namespace
--   when you create it.
namespaceSummary_arn :: Lens' NamespaceSummary (Maybe Text)

-- | The date and time that the namespace was created.
namespaceSummary_createDate :: Lens' NamespaceSummary (Maybe UTCTime)

-- | The number of services that were created using the namespace.
namespaceSummary_serviceCount :: Lens' NamespaceSummary (Maybe Int)

-- | The name of the namespace. When you create a namespace, Cloud Map
--   automatically creates a Route 53 hosted zone that has the same name as
--   the namespace.
namespaceSummary_name :: Lens' NamespaceSummary (Maybe Text)

-- | The ID of the namespace.
namespaceSummary_id :: Lens' NamespaceSummary (Maybe Text)

-- | The type of the namespace, either public or private.
namespaceSummary_type :: Lens' NamespaceSummary (Maybe NamespaceType)

-- | A description for the namespace.
namespaceSummary_description :: Lens' NamespaceSummary (Maybe Text)

-- | The properties of the namespace.
namespaceSummary_properties :: Lens' NamespaceSummary (Maybe NamespaceProperties)

-- | A complex type that contains information about a specified operation.
--   
--   <i>See:</i> <a>newOperation</a> smart constructor.
data Operation
Operation' :: Maybe OperationStatus -> Maybe POSIX -> Maybe POSIX -> Maybe (HashMap OperationTargetType Text) -> Maybe Text -> Maybe Text -> Maybe OperationType -> Maybe Text -> Operation

-- | The status of the operation. Values include the following:
--   
--   <ul>
--   <li><i>SUBMITTED</i> This is the initial state that occurs immediately
--   after you submit a request.</li>
--   <li><i>PENDING</i> Cloud Map is performing the operation.</li>
--   <li><i>SUCCESS</i> The operation succeeded.</li>
--   <li><i>FAIL</i> The operation failed. For the failure reason, see
--   <tt>ErrorMessage</tt>.</li>
--   </ul>
[$sel:status:Operation'] :: Operation -> Maybe OperationStatus

-- | The date and time that the value of <tt>Status</tt> changed to the
--   current value, in Unix date/time format and Coordinated Universal Time
--   (UTC). The value of <tt>UpdateDate</tt> is accurate to milliseconds.
--   For example, the value <tt>1516925490.087</tt> represents Friday,
--   January 26, 2018 12:11:30.087 AM.
[$sel:updateDate:Operation'] :: Operation -> Maybe POSIX

-- | The date and time that the request was submitted, in Unix date/time
--   format and Coordinated Universal Time (UTC). The value of
--   <tt>CreateDate</tt> is accurate to milliseconds. For example, the
--   value <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
[$sel:createDate:Operation'] :: Operation -> Maybe POSIX

-- | The name of the target entity that's associated with the operation:
--   
--   <ul>
--   <li><i>NAMESPACE</i> The namespace ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   <li><i>SERVICE</i> The service ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   <li><i>INSTANCE</i> The instance ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   </ul>
[$sel:targets:Operation'] :: Operation -> Maybe (HashMap OperationTargetType Text)

-- | The code associated with <tt>ErrorMessage</tt>. Values for
--   <tt>ErrorCode</tt> include the following:
--   
--   <ul>
--   <li><pre>ACCESS_DENIED</pre></li>
--   <li><pre>CANNOT_CREATE_HOSTED_ZONE</pre></li>
--   <li><pre>EXPIRED_TOKEN</pre></li>
--   <li><pre>HOSTED_ZONE_NOT_FOUND</pre></li>
--   <li><pre>INTERNAL_FAILURE</pre></li>
--   <li><pre>INVALID_CHANGE_BATCH</pre></li>
--   <li><pre>THROTTLED_REQUEST</pre></li>
--   </ul>
[$sel:errorCode:Operation'] :: Operation -> Maybe Text

-- | The ID of the operation that you want to get information about.
[$sel:id:Operation'] :: Operation -> Maybe Text

-- | The name of the operation that's associated with the specified ID.
[$sel:type':Operation'] :: Operation -> Maybe OperationType

-- | If the value of <tt>Status</tt> is <tt>FAIL</tt>, the reason that the
--   operation failed.
[$sel:errorMessage:Operation'] :: Operation -> Maybe Text

-- | Create a value of <a>Operation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Operation'</a>, <a>operation_status</a> - The status of
--   the operation. Values include the following:
--   
--   <ul>
--   <li><i>SUBMITTED</i> This is the initial state that occurs immediately
--   after you submit a request.</li>
--   <li><i>PENDING</i> Cloud Map is performing the operation.</li>
--   <li><i>SUCCESS</i> The operation succeeded.</li>
--   <li><i>FAIL</i> The operation failed. For the failure reason, see
--   <tt>ErrorMessage</tt>.</li>
--   </ul>
--   
--   <a>$sel:updateDate:Operation'</a>, <a>operation_updateDate</a> - The
--   date and time that the value of <tt>Status</tt> changed to the current
--   value, in Unix date/time format and Coordinated Universal Time (UTC).
--   The value of <tt>UpdateDate</tt> is accurate to milliseconds. For
--   example, the value <tt>1516925490.087</tt> represents Friday, January
--   26, 2018 12:11:30.087 AM.
--   
--   <a>$sel:createDate:Operation'</a>, <a>operation_createDate</a> - The
--   date and time that the request was submitted, in Unix date/time format
--   and Coordinated Universal Time (UTC). The value of <tt>CreateDate</tt>
--   is accurate to milliseconds. For example, the value
--   <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
--   
--   <a>$sel:targets:Operation'</a>, <a>operation_targets</a> - The name of
--   the target entity that's associated with the operation:
--   
--   <ul>
--   <li><i>NAMESPACE</i> The namespace ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   <li><i>SERVICE</i> The service ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   <li><i>INSTANCE</i> The instance ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   </ul>
--   
--   <a>$sel:errorCode:Operation'</a>, <a>operation_errorCode</a> - The
--   code associated with <tt>ErrorMessage</tt>. Values for
--   <tt>ErrorCode</tt> include the following:
--   
--   <ul>
--   <li><pre>ACCESS_DENIED</pre></li>
--   <li><pre>CANNOT_CREATE_HOSTED_ZONE</pre></li>
--   <li><pre>EXPIRED_TOKEN</pre></li>
--   <li><pre>HOSTED_ZONE_NOT_FOUND</pre></li>
--   <li><pre>INTERNAL_FAILURE</pre></li>
--   <li><pre>INVALID_CHANGE_BATCH</pre></li>
--   <li><pre>THROTTLED_REQUEST</pre></li>
--   </ul>
--   
--   <a>$sel:id:Operation'</a>, <a>operation_id</a> - The ID of the
--   operation that you want to get information about.
--   
--   <a>$sel:type':Operation'</a>, <a>operation_type</a> - The name of the
--   operation that's associated with the specified ID.
--   
--   <a>$sel:errorMessage:Operation'</a>, <a>operation_errorMessage</a> -
--   If the value of <tt>Status</tt> is <tt>FAIL</tt>, the reason that the
--   operation failed.
newOperation :: Operation

-- | The status of the operation. Values include the following:
--   
--   <ul>
--   <li><i>SUBMITTED</i> This is the initial state that occurs immediately
--   after you submit a request.</li>
--   <li><i>PENDING</i> Cloud Map is performing the operation.</li>
--   <li><i>SUCCESS</i> The operation succeeded.</li>
--   <li><i>FAIL</i> The operation failed. For the failure reason, see
--   <tt>ErrorMessage</tt>.</li>
--   </ul>
operation_status :: Lens' Operation (Maybe OperationStatus)

-- | The date and time that the value of <tt>Status</tt> changed to the
--   current value, in Unix date/time format and Coordinated Universal Time
--   (UTC). The value of <tt>UpdateDate</tt> is accurate to milliseconds.
--   For example, the value <tt>1516925490.087</tt> represents Friday,
--   January 26, 2018 12:11:30.087 AM.
operation_updateDate :: Lens' Operation (Maybe UTCTime)

-- | The date and time that the request was submitted, in Unix date/time
--   format and Coordinated Universal Time (UTC). The value of
--   <tt>CreateDate</tt> is accurate to milliseconds. For example, the
--   value <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
operation_createDate :: Lens' Operation (Maybe UTCTime)

-- | The name of the target entity that's associated with the operation:
--   
--   <ul>
--   <li><i>NAMESPACE</i> The namespace ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   <li><i>SERVICE</i> The service ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   <li><i>INSTANCE</i> The instance ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   </ul>
operation_targets :: Lens' Operation (Maybe (HashMap OperationTargetType Text))

-- | The code associated with <tt>ErrorMessage</tt>. Values for
--   <tt>ErrorCode</tt> include the following:
--   
--   <ul>
--   <li><pre>ACCESS_DENIED</pre></li>
--   <li><pre>CANNOT_CREATE_HOSTED_ZONE</pre></li>
--   <li><pre>EXPIRED_TOKEN</pre></li>
--   <li><pre>HOSTED_ZONE_NOT_FOUND</pre></li>
--   <li><pre>INTERNAL_FAILURE</pre></li>
--   <li><pre>INVALID_CHANGE_BATCH</pre></li>
--   <li><pre>THROTTLED_REQUEST</pre></li>
--   </ul>
operation_errorCode :: Lens' Operation (Maybe Text)

-- | The ID of the operation that you want to get information about.
operation_id :: Lens' Operation (Maybe Text)

-- | The name of the operation that's associated with the specified ID.
operation_type :: Lens' Operation (Maybe OperationType)

-- | If the value of <tt>Status</tt> is <tt>FAIL</tt>, the reason that the
--   operation failed.
operation_errorMessage :: Lens' Operation (Maybe Text)

-- | A complex type that lets you select the operations that you want to
--   list.
--   
--   <i>See:</i> <a>newOperationFilter</a> smart constructor.
data OperationFilter
OperationFilter' :: Maybe FilterCondition -> OperationFilterName -> [Text] -> OperationFilter

-- | The operator that you want to use to determine whether an operation
--   matches the specified value. Valid values for condition include:
--   
--   <ul>
--   <li><tt>EQ</tt>: When you specify <tt>EQ</tt> for the condition, you
--   can specify only one value. <tt>EQ</tt> is supported for
--   <tt>NAMESPACE_ID</tt>, <tt>SERVICE_ID</tt>, <tt>STATUS</tt>, and
--   <tt>TYPE</tt>. <tt>EQ</tt> is the default condition and can be
--   omitted.</li>
--   <li><tt>IN</tt>: When you specify <tt>IN</tt> for the condition, you
--   can specify a list of one or more values. <tt>IN</tt> is supported for
--   <tt>STATUS</tt> and <tt>TYPE</tt>. An operation must match one of the
--   specified values to be returned in the response.</li>
--   <li><tt>BETWEEN</tt>: Specify a start date and an end date in Unix
--   date/time format and Coordinated Universal Time (UTC). The start date
--   must be the first value. <tt>BETWEEN</tt> is supported for
--   <tt>UPDATE_DATE</tt>.</li>
--   </ul>
[$sel:condition:OperationFilter'] :: OperationFilter -> Maybe FilterCondition

-- | Specify the operations that you want to get:
--   
--   <ul>
--   <li><b>NAMESPACE_ID</b>: Gets operations related to specified
--   namespaces.</li>
--   <li><b>SERVICE_ID</b>: Gets operations related to specified
--   services.</li>
--   <li><b>STATUS</b>: Gets operations based on the status of the
--   operations: <tt>SUBMITTED</tt>, <tt>PENDING</tt>, <tt>SUCCEED</tt>, or
--   <tt>FAIL</tt>.</li>
--   <li><b>TYPE</b>: Gets specified types of operation.</li>
--   <li><b>UPDATE_DATE</b>: Gets operations that changed status during a
--   specified date/time range.</li>
--   </ul>
[$sel:name:OperationFilter'] :: OperationFilter -> OperationFilterName

-- | Specify values that are applicable to the value that you specify for
--   <tt>Name</tt>:
--   
--   <ul>
--   <li><b>NAMESPACE_ID</b>: Specify one namespace ID.</li>
--   <li><b>SERVICE_ID</b>: Specify one service ID.</li>
--   <li><b>STATUS</b>: Specify one or more statuses: <tt>SUBMITTED</tt>,
--   <tt>PENDING</tt>, <tt>SUCCEED</tt>, or <tt>FAIL</tt>.</li>
--   <li><b>TYPE</b>: Specify one or more of the following types:
--   <tt>CREATE_NAMESPACE</tt>, <tt>DELETE_NAMESPACE</tt>,
--   <tt>UPDATE_SERVICE</tt>, <tt>REGISTER_INSTANCE</tt>, or
--   <tt>DEREGISTER_INSTANCE</tt>.</li>
--   <li><b>UPDATE_DATE</b>: Specify a start date and an end date in Unix
--   date/time format and Coordinated Universal Time (UTC). The start date
--   must be the first value.</li>
--   </ul>
[$sel:values:OperationFilter'] :: OperationFilter -> [Text]

-- | Create a value of <a>OperationFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:condition:OperationFilter'</a>,
--   <a>operationFilter_condition</a> - The operator that you want to use
--   to determine whether an operation matches the specified value. Valid
--   values for condition include:
--   
--   <ul>
--   <li><tt>EQ</tt>: When you specify <tt>EQ</tt> for the condition, you
--   can specify only one value. <tt>EQ</tt> is supported for
--   <tt>NAMESPACE_ID</tt>, <tt>SERVICE_ID</tt>, <tt>STATUS</tt>, and
--   <tt>TYPE</tt>. <tt>EQ</tt> is the default condition and can be
--   omitted.</li>
--   <li><tt>IN</tt>: When you specify <tt>IN</tt> for the condition, you
--   can specify a list of one or more values. <tt>IN</tt> is supported for
--   <tt>STATUS</tt> and <tt>TYPE</tt>. An operation must match one of the
--   specified values to be returned in the response.</li>
--   <li><tt>BETWEEN</tt>: Specify a start date and an end date in Unix
--   date/time format and Coordinated Universal Time (UTC). The start date
--   must be the first value. <tt>BETWEEN</tt> is supported for
--   <tt>UPDATE_DATE</tt>.</li>
--   </ul>
--   
--   <a>$sel:name:OperationFilter'</a>, <a>operationFilter_name</a> -
--   Specify the operations that you want to get:
--   
--   <ul>
--   <li><b>NAMESPACE_ID</b>: Gets operations related to specified
--   namespaces.</li>
--   <li><b>SERVICE_ID</b>: Gets operations related to specified
--   services.</li>
--   <li><b>STATUS</b>: Gets operations based on the status of the
--   operations: <tt>SUBMITTED</tt>, <tt>PENDING</tt>, <tt>SUCCEED</tt>, or
--   <tt>FAIL</tt>.</li>
--   <li><b>TYPE</b>: Gets specified types of operation.</li>
--   <li><b>UPDATE_DATE</b>: Gets operations that changed status during a
--   specified date/time range.</li>
--   </ul>
--   
--   <a>$sel:values:OperationFilter'</a>, <a>operationFilter_values</a> -
--   Specify values that are applicable to the value that you specify for
--   <tt>Name</tt>:
--   
--   <ul>
--   <li><b>NAMESPACE_ID</b>: Specify one namespace ID.</li>
--   <li><b>SERVICE_ID</b>: Specify one service ID.</li>
--   <li><b>STATUS</b>: Specify one or more statuses: <tt>SUBMITTED</tt>,
--   <tt>PENDING</tt>, <tt>SUCCEED</tt>, or <tt>FAIL</tt>.</li>
--   <li><b>TYPE</b>: Specify one or more of the following types:
--   <tt>CREATE_NAMESPACE</tt>, <tt>DELETE_NAMESPACE</tt>,
--   <tt>UPDATE_SERVICE</tt>, <tt>REGISTER_INSTANCE</tt>, or
--   <tt>DEREGISTER_INSTANCE</tt>.</li>
--   <li><b>UPDATE_DATE</b>: Specify a start date and an end date in Unix
--   date/time format and Coordinated Universal Time (UTC). The start date
--   must be the first value.</li>
--   </ul>
newOperationFilter :: OperationFilterName -> OperationFilter

-- | The operator that you want to use to determine whether an operation
--   matches the specified value. Valid values for condition include:
--   
--   <ul>
--   <li><tt>EQ</tt>: When you specify <tt>EQ</tt> for the condition, you
--   can specify only one value. <tt>EQ</tt> is supported for
--   <tt>NAMESPACE_ID</tt>, <tt>SERVICE_ID</tt>, <tt>STATUS</tt>, and
--   <tt>TYPE</tt>. <tt>EQ</tt> is the default condition and can be
--   omitted.</li>
--   <li><tt>IN</tt>: When you specify <tt>IN</tt> for the condition, you
--   can specify a list of one or more values. <tt>IN</tt> is supported for
--   <tt>STATUS</tt> and <tt>TYPE</tt>. An operation must match one of the
--   specified values to be returned in the response.</li>
--   <li><tt>BETWEEN</tt>: Specify a start date and an end date in Unix
--   date/time format and Coordinated Universal Time (UTC). The start date
--   must be the first value. <tt>BETWEEN</tt> is supported for
--   <tt>UPDATE_DATE</tt>.</li>
--   </ul>
operationFilter_condition :: Lens' OperationFilter (Maybe FilterCondition)

-- | Specify the operations that you want to get:
--   
--   <ul>
--   <li><b>NAMESPACE_ID</b>: Gets operations related to specified
--   namespaces.</li>
--   <li><b>SERVICE_ID</b>: Gets operations related to specified
--   services.</li>
--   <li><b>STATUS</b>: Gets operations based on the status of the
--   operations: <tt>SUBMITTED</tt>, <tt>PENDING</tt>, <tt>SUCCEED</tt>, or
--   <tt>FAIL</tt>.</li>
--   <li><b>TYPE</b>: Gets specified types of operation.</li>
--   <li><b>UPDATE_DATE</b>: Gets operations that changed status during a
--   specified date/time range.</li>
--   </ul>
operationFilter_name :: Lens' OperationFilter OperationFilterName

-- | Specify values that are applicable to the value that you specify for
--   <tt>Name</tt>:
--   
--   <ul>
--   <li><b>NAMESPACE_ID</b>: Specify one namespace ID.</li>
--   <li><b>SERVICE_ID</b>: Specify one service ID.</li>
--   <li><b>STATUS</b>: Specify one or more statuses: <tt>SUBMITTED</tt>,
--   <tt>PENDING</tt>, <tt>SUCCEED</tt>, or <tt>FAIL</tt>.</li>
--   <li><b>TYPE</b>: Specify one or more of the following types:
--   <tt>CREATE_NAMESPACE</tt>, <tt>DELETE_NAMESPACE</tt>,
--   <tt>UPDATE_SERVICE</tt>, <tt>REGISTER_INSTANCE</tt>, or
--   <tt>DEREGISTER_INSTANCE</tt>.</li>
--   <li><b>UPDATE_DATE</b>: Specify a start date and an end date in Unix
--   date/time format and Coordinated Universal Time (UTC). The start date
--   must be the first value.</li>
--   </ul>
operationFilter_values :: Lens' OperationFilter [Text]

-- | A complex type that contains information about an operation that
--   matches the criteria that you specified in a <a>ListOperations</a>
--   request.
--   
--   <i>See:</i> <a>newOperationSummary</a> smart constructor.
data OperationSummary
OperationSummary' :: Maybe OperationStatus -> Maybe Text -> OperationSummary

-- | The status of the operation. Values include the following:
--   
--   <ul>
--   <li><b>SUBMITTED</b>: This is the initial state immediately after you
--   submit a request.</li>
--   <li><b>PENDING</b>: Cloud Map is performing the operation.</li>
--   <li><b>SUCCESS</b>: The operation succeeded.</li>
--   <li><b>FAIL</b>: The operation failed. For the failure reason, see
--   <tt>ErrorMessage</tt>.</li>
--   </ul>
[$sel:status:OperationSummary'] :: OperationSummary -> Maybe OperationStatus

-- | The ID for an operation.
[$sel:id:OperationSummary'] :: OperationSummary -> Maybe Text

-- | Create a value of <a>OperationSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:OperationSummary'</a>, <a>operationSummary_status</a> -
--   The status of the operation. Values include the following:
--   
--   <ul>
--   <li><b>SUBMITTED</b>: This is the initial state immediately after you
--   submit a request.</li>
--   <li><b>PENDING</b>: Cloud Map is performing the operation.</li>
--   <li><b>SUCCESS</b>: The operation succeeded.</li>
--   <li><b>FAIL</b>: The operation failed. For the failure reason, see
--   <tt>ErrorMessage</tt>.</li>
--   </ul>
--   
--   <a>$sel:id:OperationSummary'</a>, <a>operationSummary_id</a> - The ID
--   for an operation.
newOperationSummary :: OperationSummary

-- | The status of the operation. Values include the following:
--   
--   <ul>
--   <li><b>SUBMITTED</b>: This is the initial state immediately after you
--   submit a request.</li>
--   <li><b>PENDING</b>: Cloud Map is performing the operation.</li>
--   <li><b>SUCCESS</b>: The operation succeeded.</li>
--   <li><b>FAIL</b>: The operation failed. For the failure reason, see
--   <tt>ErrorMessage</tt>.</li>
--   </ul>
operationSummary_status :: Lens' OperationSummary (Maybe OperationStatus)

-- | The ID for an operation.
operationSummary_id :: Lens' OperationSummary (Maybe Text)

-- | Updated properties for the private DNS namespace.
--   
--   <i>See:</i> <a>newPrivateDnsNamespaceChange</a> smart constructor.
data PrivateDnsNamespaceChange
PrivateDnsNamespaceChange' :: Maybe Text -> Maybe PrivateDnsNamespacePropertiesChange -> PrivateDnsNamespaceChange

-- | An updated description for the private DNS namespace.
[$sel:description:PrivateDnsNamespaceChange'] :: PrivateDnsNamespaceChange -> Maybe Text

-- | Properties to be updated in the private DNS namespace.
[$sel:properties:PrivateDnsNamespaceChange'] :: PrivateDnsNamespaceChange -> Maybe PrivateDnsNamespacePropertiesChange

-- | Create a value of <a>PrivateDnsNamespaceChange</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:PrivateDnsNamespaceChange'</a>,
--   <a>privateDnsNamespaceChange_description</a> - An updated description
--   for the private DNS namespace.
--   
--   <a>$sel:properties:PrivateDnsNamespaceChange'</a>,
--   <a>privateDnsNamespaceChange_properties</a> - Properties to be updated
--   in the private DNS namespace.
newPrivateDnsNamespaceChange :: PrivateDnsNamespaceChange

-- | An updated description for the private DNS namespace.
privateDnsNamespaceChange_description :: Lens' PrivateDnsNamespaceChange (Maybe Text)

-- | Properties to be updated in the private DNS namespace.
privateDnsNamespaceChange_properties :: Lens' PrivateDnsNamespaceChange (Maybe PrivateDnsNamespacePropertiesChange)

-- | DNS properties for the private DNS namespace.
--   
--   <i>See:</i> <a>newPrivateDnsNamespaceProperties</a> smart constructor.
data PrivateDnsNamespaceProperties
PrivateDnsNamespaceProperties' :: PrivateDnsPropertiesMutable -> PrivateDnsNamespaceProperties

-- | DNS properties for the private DNS namespace.
[$sel:dnsProperties:PrivateDnsNamespaceProperties'] :: PrivateDnsNamespaceProperties -> PrivateDnsPropertiesMutable

-- | Create a value of <a>PrivateDnsNamespaceProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dnsProperties:PrivateDnsNamespaceProperties'</a>,
--   <a>privateDnsNamespaceProperties_dnsProperties</a> - DNS properties
--   for the private DNS namespace.
newPrivateDnsNamespaceProperties :: PrivateDnsPropertiesMutable -> PrivateDnsNamespaceProperties

-- | DNS properties for the private DNS namespace.
privateDnsNamespaceProperties_dnsProperties :: Lens' PrivateDnsNamespaceProperties PrivateDnsPropertiesMutable

-- | Updated properties for the private DNS namespace.
--   
--   <i>See:</i> <a>newPrivateDnsNamespacePropertiesChange</a> smart
--   constructor.
data PrivateDnsNamespacePropertiesChange
PrivateDnsNamespacePropertiesChange' :: PrivateDnsPropertiesMutableChange -> PrivateDnsNamespacePropertiesChange

-- | Updated DNS properties for the private DNS namespace.
[$sel:dnsProperties:PrivateDnsNamespacePropertiesChange'] :: PrivateDnsNamespacePropertiesChange -> PrivateDnsPropertiesMutableChange

-- | Create a value of <a>PrivateDnsNamespacePropertiesChange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dnsProperties:PrivateDnsNamespacePropertiesChange'</a>,
--   <a>privateDnsNamespacePropertiesChange_dnsProperties</a> - Updated DNS
--   properties for the private DNS namespace.
newPrivateDnsNamespacePropertiesChange :: PrivateDnsPropertiesMutableChange -> PrivateDnsNamespacePropertiesChange

-- | Updated DNS properties for the private DNS namespace.
privateDnsNamespacePropertiesChange_dnsProperties :: Lens' PrivateDnsNamespacePropertiesChange PrivateDnsPropertiesMutableChange

-- | DNS properties for the private DNS namespace.
--   
--   <i>See:</i> <a>newPrivateDnsPropertiesMutable</a> smart constructor.
data PrivateDnsPropertiesMutable
PrivateDnsPropertiesMutable' :: SOA -> PrivateDnsPropertiesMutable

-- | Fields for the Start of Authority (SOA) record for the hosted zone for
--   the private DNS namespace.
[$sel:soa:PrivateDnsPropertiesMutable'] :: PrivateDnsPropertiesMutable -> SOA

-- | Create a value of <a>PrivateDnsPropertiesMutable</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:soa:PrivateDnsPropertiesMutable'</a>,
--   <a>privateDnsPropertiesMutable_soa</a> - Fields for the Start of
--   Authority (SOA) record for the hosted zone for the private DNS
--   namespace.
newPrivateDnsPropertiesMutable :: SOA -> PrivateDnsPropertiesMutable

-- | Fields for the Start of Authority (SOA) record for the hosted zone for
--   the private DNS namespace.
privateDnsPropertiesMutable_soa :: Lens' PrivateDnsPropertiesMutable SOA

-- | Updated DNS properties for the private DNS namespace.
--   
--   <i>See:</i> <a>newPrivateDnsPropertiesMutableChange</a> smart
--   constructor.
data PrivateDnsPropertiesMutableChange
PrivateDnsPropertiesMutableChange' :: SOAChange -> PrivateDnsPropertiesMutableChange

-- | Updated fields for the Start of Authority (SOA) record for the hosted
--   zone for the private DNS namespace.
[$sel:soa:PrivateDnsPropertiesMutableChange'] :: PrivateDnsPropertiesMutableChange -> SOAChange

-- | Create a value of <a>PrivateDnsPropertiesMutableChange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:soa:PrivateDnsPropertiesMutableChange'</a>,
--   <a>privateDnsPropertiesMutableChange_soa</a> - Updated fields for the
--   Start of Authority (SOA) record for the hosted zone for the private
--   DNS namespace.
newPrivateDnsPropertiesMutableChange :: SOAChange -> PrivateDnsPropertiesMutableChange

-- | Updated fields for the Start of Authority (SOA) record for the hosted
--   zone for the private DNS namespace.
privateDnsPropertiesMutableChange_soa :: Lens' PrivateDnsPropertiesMutableChange SOAChange

-- | Updated properties for the public DNS namespace.
--   
--   <i>See:</i> <a>newPublicDnsNamespaceChange</a> smart constructor.
data PublicDnsNamespaceChange
PublicDnsNamespaceChange' :: Maybe Text -> Maybe PublicDnsNamespacePropertiesChange -> PublicDnsNamespaceChange

-- | An updated description for the public DNS namespace.
[$sel:description:PublicDnsNamespaceChange'] :: PublicDnsNamespaceChange -> Maybe Text

-- | Properties to be updated in the public DNS namespace.
[$sel:properties:PublicDnsNamespaceChange'] :: PublicDnsNamespaceChange -> Maybe PublicDnsNamespacePropertiesChange

-- | Create a value of <a>PublicDnsNamespaceChange</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:PublicDnsNamespaceChange'</a>,
--   <a>publicDnsNamespaceChange_description</a> - An updated description
--   for the public DNS namespace.
--   
--   <a>$sel:properties:PublicDnsNamespaceChange'</a>,
--   <a>publicDnsNamespaceChange_properties</a> - Properties to be updated
--   in the public DNS namespace.
newPublicDnsNamespaceChange :: PublicDnsNamespaceChange

-- | An updated description for the public DNS namespace.
publicDnsNamespaceChange_description :: Lens' PublicDnsNamespaceChange (Maybe Text)

-- | Properties to be updated in the public DNS namespace.
publicDnsNamespaceChange_properties :: Lens' PublicDnsNamespaceChange (Maybe PublicDnsNamespacePropertiesChange)

-- | DNS properties for the public DNS namespace.
--   
--   <i>See:</i> <a>newPublicDnsNamespaceProperties</a> smart constructor.
data PublicDnsNamespaceProperties
PublicDnsNamespaceProperties' :: PublicDnsPropertiesMutable -> PublicDnsNamespaceProperties

-- | DNS properties for the public DNS namespace.
[$sel:dnsProperties:PublicDnsNamespaceProperties'] :: PublicDnsNamespaceProperties -> PublicDnsPropertiesMutable

-- | Create a value of <a>PublicDnsNamespaceProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dnsProperties:PublicDnsNamespaceProperties'</a>,
--   <a>publicDnsNamespaceProperties_dnsProperties</a> - DNS properties for
--   the public DNS namespace.
newPublicDnsNamespaceProperties :: PublicDnsPropertiesMutable -> PublicDnsNamespaceProperties

-- | DNS properties for the public DNS namespace.
publicDnsNamespaceProperties_dnsProperties :: Lens' PublicDnsNamespaceProperties PublicDnsPropertiesMutable

-- | Updated properties for the public DNS namespace.
--   
--   <i>See:</i> <a>newPublicDnsNamespacePropertiesChange</a> smart
--   constructor.
data PublicDnsNamespacePropertiesChange
PublicDnsNamespacePropertiesChange' :: PublicDnsPropertiesMutableChange -> PublicDnsNamespacePropertiesChange

-- | Updated DNS properties for the hosted zone for the public DNS
--   namespace.
[$sel:dnsProperties:PublicDnsNamespacePropertiesChange'] :: PublicDnsNamespacePropertiesChange -> PublicDnsPropertiesMutableChange

-- | Create a value of <a>PublicDnsNamespacePropertiesChange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dnsProperties:PublicDnsNamespacePropertiesChange'</a>,
--   <a>publicDnsNamespacePropertiesChange_dnsProperties</a> - Updated DNS
--   properties for the hosted zone for the public DNS namespace.
newPublicDnsNamespacePropertiesChange :: PublicDnsPropertiesMutableChange -> PublicDnsNamespacePropertiesChange

-- | Updated DNS properties for the hosted zone for the public DNS
--   namespace.
publicDnsNamespacePropertiesChange_dnsProperties :: Lens' PublicDnsNamespacePropertiesChange PublicDnsPropertiesMutableChange

-- | DNS properties for the public DNS namespace.
--   
--   <i>See:</i> <a>newPublicDnsPropertiesMutable</a> smart constructor.
data PublicDnsPropertiesMutable
PublicDnsPropertiesMutable' :: SOA -> PublicDnsPropertiesMutable

-- | Start of Authority (SOA) record for the hosted zone for the public DNS
--   namespace.
[$sel:soa:PublicDnsPropertiesMutable'] :: PublicDnsPropertiesMutable -> SOA

-- | Create a value of <a>PublicDnsPropertiesMutable</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:soa:PublicDnsPropertiesMutable'</a>,
--   <a>publicDnsPropertiesMutable_soa</a> - Start of Authority (SOA)
--   record for the hosted zone for the public DNS namespace.
newPublicDnsPropertiesMutable :: SOA -> PublicDnsPropertiesMutable

-- | Start of Authority (SOA) record for the hosted zone for the public DNS
--   namespace.
publicDnsPropertiesMutable_soa :: Lens' PublicDnsPropertiesMutable SOA

-- | Updated DNS properties for the public DNS namespace.
--   
--   <i>See:</i> <a>newPublicDnsPropertiesMutableChange</a> smart
--   constructor.
data PublicDnsPropertiesMutableChange
PublicDnsPropertiesMutableChange' :: SOAChange -> PublicDnsPropertiesMutableChange

-- | Updated fields for the Start of Authority (SOA) record for the hosted
--   zone for the public DNS namespace.
[$sel:soa:PublicDnsPropertiesMutableChange'] :: PublicDnsPropertiesMutableChange -> SOAChange

-- | Create a value of <a>PublicDnsPropertiesMutableChange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:soa:PublicDnsPropertiesMutableChange'</a>,
--   <a>publicDnsPropertiesMutableChange_soa</a> - Updated fields for the
--   Start of Authority (SOA) record for the hosted zone for the public DNS
--   namespace.
newPublicDnsPropertiesMutableChange :: SOAChange -> PublicDnsPropertiesMutableChange

-- | Updated fields for the Start of Authority (SOA) record for the hosted
--   zone for the public DNS namespace.
publicDnsPropertiesMutableChange_soa :: Lens' PublicDnsPropertiesMutableChange SOAChange

-- | Start of Authority (SOA) properties for a public or private DNS
--   namespace.
--   
--   <i>See:</i> <a>newSOA</a> smart constructor.
data SOA
SOA' :: Natural -> SOA

-- | The time to live (TTL) for purposes of negative caching.
[$sel:ttl:SOA'] :: SOA -> Natural

-- | Create a value of <a>SOA</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ttl:SOA'</a>, <a>soa_ttl</a> - The time to live (TTL) for
--   purposes of negative caching.
newSOA :: Natural -> SOA

-- | The time to live (TTL) for purposes of negative caching.
soa_ttl :: Lens' SOA Natural

-- | Updated Start of Authority (SOA) properties for a public or private
--   DNS namespace.
--   
--   <i>See:</i> <a>newSOAChange</a> smart constructor.
data SOAChange
SOAChange' :: Natural -> SOAChange

-- | The updated time to live (TTL) for purposes of negative caching.
[$sel:ttl:SOAChange'] :: SOAChange -> Natural

-- | Create a value of <a>SOAChange</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ttl:SOAChange'</a>, <a>sOAChange_ttl</a> - The updated time to
--   live (TTL) for purposes of negative caching.
newSOAChange :: Natural -> SOAChange

-- | The updated time to live (TTL) for purposes of negative caching.
sOAChange_ttl :: Lens' SOAChange Natural

-- | A complex type that contains changes to an existing service.
--   
--   <i>See:</i> <a>newServiceChange</a> smart constructor.
data ServiceChange
ServiceChange' :: Maybe HealthCheckConfig -> Maybe DnsConfigChange -> Maybe Text -> ServiceChange

-- | <i>Public DNS and HTTP namespaces only.</i> Settings for an optional
--   health check. If you specify settings for a health check, Cloud Map
--   associates the health check with the records that you specify in
--   <tt>DnsConfig</tt>.
[$sel:healthCheckConfig:ServiceChange'] :: ServiceChange -> Maybe HealthCheckConfig

-- | Information about the Route 53 DNS records that you want Cloud Map to
--   create when you register an instance.
[$sel:dnsConfig:ServiceChange'] :: ServiceChange -> Maybe DnsConfigChange

-- | A description for the service.
[$sel:description:ServiceChange'] :: ServiceChange -> Maybe Text

-- | Create a value of <a>ServiceChange</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthCheckConfig:ServiceChange'</a>,
--   <a>serviceChange_healthCheckConfig</a> - <i>Public DNS and HTTP
--   namespaces only.</i> Settings for an optional health check. If you
--   specify settings for a health check, Cloud Map associates the health
--   check with the records that you specify in <tt>DnsConfig</tt>.
--   
--   <a>$sel:dnsConfig:ServiceChange'</a>, <a>serviceChange_dnsConfig</a> -
--   Information about the Route 53 DNS records that you want Cloud Map to
--   create when you register an instance.
--   
--   <a>$sel:description:ServiceChange'</a>,
--   <a>serviceChange_description</a> - A description for the service.
newServiceChange :: ServiceChange

-- | <i>Public DNS and HTTP namespaces only.</i> Settings for an optional
--   health check. If you specify settings for a health check, Cloud Map
--   associates the health check with the records that you specify in
--   <tt>DnsConfig</tt>.
serviceChange_healthCheckConfig :: Lens' ServiceChange (Maybe HealthCheckConfig)

-- | Information about the Route 53 DNS records that you want Cloud Map to
--   create when you register an instance.
serviceChange_dnsConfig :: Lens' ServiceChange (Maybe DnsConfigChange)

-- | A description for the service.
serviceChange_description :: Lens' ServiceChange (Maybe Text)

-- | A complex type that lets you specify the namespaces that you want to
--   list services for.
--   
--   <i>See:</i> <a>newServiceFilter</a> smart constructor.
data ServiceFilter
ServiceFilter' :: Maybe FilterCondition -> ServiceFilterName -> [Text] -> ServiceFilter

-- | The operator that you want to use to determine whether a service is
--   returned by <tt>ListServices</tt>. Valid values for <tt>Condition</tt>
--   include the following:
--   
--   <ul>
--   <li><tt>EQ</tt>: When you specify <tt>EQ</tt>, specify one namespace
--   ID for <tt>Values</tt>. <tt>EQ</tt> is the default condition and can
--   be omitted.</li>
--   <li><tt>IN</tt>: When you specify <tt>IN</tt>, specify a list of the
--   IDs for the namespaces that you want <tt>ListServices</tt> to return a
--   list of services for.</li>
--   <li><tt>BETWEEN</tt>: Not applicable.</li>
--   </ul>
[$sel:condition:ServiceFilter'] :: ServiceFilter -> Maybe FilterCondition

-- | Specify <tt>NAMESPACE_ID</tt>.
[$sel:name:ServiceFilter'] :: ServiceFilter -> ServiceFilterName

-- | The values that are applicable to the value that you specify for
--   <tt>Condition</tt> to filter the list of services.
[$sel:values:ServiceFilter'] :: ServiceFilter -> [Text]

-- | Create a value of <a>ServiceFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:condition:ServiceFilter'</a>, <a>serviceFilter_condition</a> -
--   The operator that you want to use to determine whether a service is
--   returned by <tt>ListServices</tt>. Valid values for <tt>Condition</tt>
--   include the following:
--   
--   <ul>
--   <li><tt>EQ</tt>: When you specify <tt>EQ</tt>, specify one namespace
--   ID for <tt>Values</tt>. <tt>EQ</tt> is the default condition and can
--   be omitted.</li>
--   <li><tt>IN</tt>: When you specify <tt>IN</tt>, specify a list of the
--   IDs for the namespaces that you want <tt>ListServices</tt> to return a
--   list of services for.</li>
--   <li><tt>BETWEEN</tt>: Not applicable.</li>
--   </ul>
--   
--   <a>$sel:name:ServiceFilter'</a>, <a>serviceFilter_name</a> - Specify
--   <tt>NAMESPACE_ID</tt>.
--   
--   <a>$sel:values:ServiceFilter'</a>, <a>serviceFilter_values</a> - The
--   values that are applicable to the value that you specify for
--   <tt>Condition</tt> to filter the list of services.
newServiceFilter :: ServiceFilterName -> ServiceFilter

-- | The operator that you want to use to determine whether a service is
--   returned by <tt>ListServices</tt>. Valid values for <tt>Condition</tt>
--   include the following:
--   
--   <ul>
--   <li><tt>EQ</tt>: When you specify <tt>EQ</tt>, specify one namespace
--   ID for <tt>Values</tt>. <tt>EQ</tt> is the default condition and can
--   be omitted.</li>
--   <li><tt>IN</tt>: When you specify <tt>IN</tt>, specify a list of the
--   IDs for the namespaces that you want <tt>ListServices</tt> to return a
--   list of services for.</li>
--   <li><tt>BETWEEN</tt>: Not applicable.</li>
--   </ul>
serviceFilter_condition :: Lens' ServiceFilter (Maybe FilterCondition)

-- | Specify <tt>NAMESPACE_ID</tt>.
serviceFilter_name :: Lens' ServiceFilter ServiceFilterName

-- | The values that are applicable to the value that you specify for
--   <tt>Condition</tt> to filter the list of services.
serviceFilter_values :: Lens' ServiceFilter [Text]

-- | A complex type that contains information about the specified service.
--   
--   <i>See:</i> <a>newServiceInfo</a> smart constructor.
data ServiceInfo
ServiceInfo' :: Maybe Int -> Maybe Text -> Maybe HealthCheckConfig -> Maybe Text -> Maybe POSIX -> Maybe HealthCheckCustomConfig -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ServiceType -> Maybe DnsConfig -> Maybe Text -> ServiceInfo

-- | The number of instances that are currently associated with the
--   service. Instances that were previously associated with the service
--   but that are deleted aren't included in the count. The count might not
--   reflect pending registrations and deregistrations.
[$sel:instanceCount:ServiceInfo'] :: ServiceInfo -> Maybe Int

-- | The Amazon Resource Name (ARN) that Cloud Map assigns to the service
--   when you create it.
[$sel:arn:ServiceInfo'] :: ServiceInfo -> Maybe Text

-- | <i>Public DNS and HTTP namespaces only.</i> A complex type that
--   contains settings for an optional health check. If you specify
--   settings for a health check, Cloud Map associates the health check
--   with the records that you specify in <tt>DnsConfig</tt>.
--   
--   For information about the charges for health checks, see <a>Amazon
--   Route 53 Pricing</a>.
[$sel:healthCheckConfig:ServiceInfo'] :: ServiceInfo -> Maybe HealthCheckConfig

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running the operation
--   twice. <tt>CreatorRequestId</tt> can be any unique string (for
--   example, a date/timestamp).
[$sel:creatorRequestId:ServiceInfo'] :: ServiceInfo -> Maybe Text

-- | The date and time that the service was created, in Unix format and
--   Coordinated Universal Time (UTC). The value of <tt>CreateDate</tt> is
--   accurate to milliseconds. For example, the value
--   <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
[$sel:createDate:ServiceInfo'] :: ServiceInfo -> Maybe POSIX

-- | A complex type that contains information about an optional custom
--   health check.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
[$sel:healthCheckCustomConfig:ServiceInfo'] :: ServiceInfo -> Maybe HealthCheckCustomConfig

-- | The ID of the namespace that was used to create the service.
[$sel:namespaceId:ServiceInfo'] :: ServiceInfo -> Maybe Text

-- | The name of the service.
[$sel:name:ServiceInfo'] :: ServiceInfo -> Maybe Text

-- | The ID that Cloud Map assigned to the service when you created it.
[$sel:id:ServiceInfo'] :: ServiceInfo -> Maybe Text

-- | Describes the systems that can be used to discover the service
--   instances.
--   
--   <ul>
--   <li><i>DNS_HTTP</i> The service instances can be discovered using
--   either DNS queries or the <tt>DiscoverInstances</tt> API
--   operation.</li>
--   <li><i>HTTP</i> The service instances can only be discovered using the
--   <tt>DiscoverInstances</tt> API operation.</li>
--   <li><i>DNS</i> Reserved.</li>
--   </ul>
[$sel:type':ServiceInfo'] :: ServiceInfo -> Maybe ServiceType

-- | A complex type that contains information about the Route 53 DNS
--   records that you want Cloud Map to create when you register an
--   instance.
[$sel:dnsConfig:ServiceInfo'] :: ServiceInfo -> Maybe DnsConfig

-- | The description of the service.
[$sel:description:ServiceInfo'] :: ServiceInfo -> Maybe Text

-- | Create a value of <a>ServiceInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceCount:ServiceInfo'</a>,
--   <a>serviceInfo_instanceCount</a> - The number of instances that are
--   currently associated with the service. Instances that were previously
--   associated with the service but that are deleted aren't included in
--   the count. The count might not reflect pending registrations and
--   deregistrations.
--   
--   <a>$sel:arn:ServiceInfo'</a>, <a>serviceInfo_arn</a> - The Amazon
--   Resource Name (ARN) that Cloud Map assigns to the service when you
--   create it.
--   
--   <a>$sel:healthCheckConfig:ServiceInfo'</a>,
--   <a>serviceInfo_healthCheckConfig</a> - <i>Public DNS and HTTP
--   namespaces only.</i> A complex type that contains settings for an
--   optional health check. If you specify settings for a health check,
--   Cloud Map associates the health check with the records that you
--   specify in <tt>DnsConfig</tt>.
--   
--   For information about the charges for health checks, see <a>Amazon
--   Route 53 Pricing</a>.
--   
--   <a>$sel:creatorRequestId:ServiceInfo'</a>,
--   <a>serviceInfo_creatorRequestId</a> - A unique string that identifies
--   the request and that allows failed requests to be retried without the
--   risk of running the operation twice. <tt>CreatorRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
--   
--   <a>$sel:createDate:ServiceInfo'</a>, <a>serviceInfo_createDate</a> -
--   The date and time that the service was created, in Unix format and
--   Coordinated Universal Time (UTC). The value of <tt>CreateDate</tt> is
--   accurate to milliseconds. For example, the value
--   <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
--   
--   <a>$sel:healthCheckCustomConfig:ServiceInfo'</a>,
--   <a>serviceInfo_healthCheckCustomConfig</a> - A complex type that
--   contains information about an optional custom health check.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   <a>$sel:namespaceId:ServiceInfo'</a>, <a>serviceInfo_namespaceId</a> -
--   The ID of the namespace that was used to create the service.
--   
--   <a>$sel:name:ServiceInfo'</a>, <a>serviceInfo_name</a> - The name of
--   the service.
--   
--   <a>$sel:id:ServiceInfo'</a>, <a>serviceInfo_id</a> - The ID that Cloud
--   Map assigned to the service when you created it.
--   
--   <a>$sel:type':ServiceInfo'</a>, <a>serviceInfo_type</a> - Describes
--   the systems that can be used to discover the service instances.
--   
--   <ul>
--   <li><i>DNS_HTTP</i> The service instances can be discovered using
--   either DNS queries or the <tt>DiscoverInstances</tt> API
--   operation.</li>
--   <li><i>HTTP</i> The service instances can only be discovered using the
--   <tt>DiscoverInstances</tt> API operation.</li>
--   <li><i>DNS</i> Reserved.</li>
--   </ul>
--   
--   <a>$sel:dnsConfig:ServiceInfo'</a>, <a>serviceInfo_dnsConfig</a> - A
--   complex type that contains information about the Route 53 DNS records
--   that you want Cloud Map to create when you register an instance.
--   
--   <a>$sel:description:ServiceInfo'</a>, <a>serviceInfo_description</a> -
--   The description of the service.
newServiceInfo :: ServiceInfo

-- | The number of instances that are currently associated with the
--   service. Instances that were previously associated with the service
--   but that are deleted aren't included in the count. The count might not
--   reflect pending registrations and deregistrations.
serviceInfo_instanceCount :: Lens' ServiceInfo (Maybe Int)

-- | The Amazon Resource Name (ARN) that Cloud Map assigns to the service
--   when you create it.
serviceInfo_arn :: Lens' ServiceInfo (Maybe Text)

-- | <i>Public DNS and HTTP namespaces only.</i> A complex type that
--   contains settings for an optional health check. If you specify
--   settings for a health check, Cloud Map associates the health check
--   with the records that you specify in <tt>DnsConfig</tt>.
--   
--   For information about the charges for health checks, see <a>Amazon
--   Route 53 Pricing</a>.
serviceInfo_healthCheckConfig :: Lens' ServiceInfo (Maybe HealthCheckConfig)

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running the operation
--   twice. <tt>CreatorRequestId</tt> can be any unique string (for
--   example, a date/timestamp).
serviceInfo_creatorRequestId :: Lens' ServiceInfo (Maybe Text)

-- | The date and time that the service was created, in Unix format and
--   Coordinated Universal Time (UTC). The value of <tt>CreateDate</tt> is
--   accurate to milliseconds. For example, the value
--   <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
serviceInfo_createDate :: Lens' ServiceInfo (Maybe UTCTime)

-- | A complex type that contains information about an optional custom
--   health check.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
serviceInfo_healthCheckCustomConfig :: Lens' ServiceInfo (Maybe HealthCheckCustomConfig)

-- | The ID of the namespace that was used to create the service.
serviceInfo_namespaceId :: Lens' ServiceInfo (Maybe Text)

-- | The name of the service.
serviceInfo_name :: Lens' ServiceInfo (Maybe Text)

-- | The ID that Cloud Map assigned to the service when you created it.
serviceInfo_id :: Lens' ServiceInfo (Maybe Text)

-- | Describes the systems that can be used to discover the service
--   instances.
--   
--   <ul>
--   <li><i>DNS_HTTP</i> The service instances can be discovered using
--   either DNS queries or the <tt>DiscoverInstances</tt> API
--   operation.</li>
--   <li><i>HTTP</i> The service instances can only be discovered using the
--   <tt>DiscoverInstances</tt> API operation.</li>
--   <li><i>DNS</i> Reserved.</li>
--   </ul>
serviceInfo_type :: Lens' ServiceInfo (Maybe ServiceType)

-- | A complex type that contains information about the Route 53 DNS
--   records that you want Cloud Map to create when you register an
--   instance.
serviceInfo_dnsConfig :: Lens' ServiceInfo (Maybe DnsConfig)

-- | The description of the service.
serviceInfo_description :: Lens' ServiceInfo (Maybe Text)

-- | A complex type that contains information about a specified service.
--   
--   <i>See:</i> <a>newServiceSummary</a> smart constructor.
data ServiceSummary
ServiceSummary' :: Maybe Int -> Maybe Text -> Maybe HealthCheckConfig -> Maybe POSIX -> Maybe HealthCheckCustomConfig -> Maybe Text -> Maybe Text -> Maybe ServiceType -> Maybe DnsConfig -> Maybe Text -> ServiceSummary

-- | The number of instances that are currently associated with the
--   service. Instances that were previously associated with the service
--   but that are deleted aren't included in the count. The count might not
--   reflect pending registrations and deregistrations.
[$sel:instanceCount:ServiceSummary'] :: ServiceSummary -> Maybe Int

-- | The Amazon Resource Name (ARN) that Cloud Map assigns to the service
--   when you create it.
[$sel:arn:ServiceSummary'] :: ServiceSummary -> Maybe Text

-- | <i>Public DNS and HTTP namespaces only.</i> Settings for an optional
--   health check. If you specify settings for a health check, Cloud Map
--   associates the health check with the records that you specify in
--   <tt>DnsConfig</tt>.
[$sel:healthCheckConfig:ServiceSummary'] :: ServiceSummary -> Maybe HealthCheckConfig

-- | The date and time that the service was created.
[$sel:createDate:ServiceSummary'] :: ServiceSummary -> Maybe POSIX

-- | Information about an optional custom health check. A custom health
--   check, which requires that you use a third-party health checker to
--   evaluate the health of your resources, is useful in the following
--   circumstances:
--   
--   <ul>
--   <li>You can't use a health check that's defined by
--   <tt>HealthCheckConfig</tt> because the resource isn't available over
--   the internet. For example, you can use a custom health check when the
--   instance is in an Amazon VPC. (To check the health of resources in a
--   VPC, the health checker must also be in the VPC.)</li>
--   <li>You want to use a third-party health checker regardless of where
--   your resources are located.</li>
--   </ul>
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
[$sel:healthCheckCustomConfig:ServiceSummary'] :: ServiceSummary -> Maybe HealthCheckCustomConfig

-- | The name of the service.
[$sel:name:ServiceSummary'] :: ServiceSummary -> Maybe Text

-- | The ID that Cloud Map assigned to the service when you created it.
[$sel:id:ServiceSummary'] :: ServiceSummary -> Maybe Text

-- | Describes the systems that can be used to discover the service
--   instances.
--   
--   <ul>
--   <li><i>DNS_HTTP</i> The service instances can be discovered using
--   either DNS queries or the <tt>DiscoverInstances</tt> API
--   operation.</li>
--   <li><i>HTTP</i> The service instances can only be discovered using the
--   <tt>DiscoverInstances</tt> API operation.</li>
--   <li><i>DNS</i> Reserved.</li>
--   </ul>
[$sel:type':ServiceSummary'] :: ServiceSummary -> Maybe ServiceType

-- | Information about the Route 53 DNS records that you want Cloud Map to
--   create when you register an instance.
[$sel:dnsConfig:ServiceSummary'] :: ServiceSummary -> Maybe DnsConfig

-- | The description that you specify when you create the service.
[$sel:description:ServiceSummary'] :: ServiceSummary -> Maybe Text

-- | Create a value of <a>ServiceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceCount:ServiceSummary'</a>,
--   <a>serviceSummary_instanceCount</a> - The number of instances that are
--   currently associated with the service. Instances that were previously
--   associated with the service but that are deleted aren't included in
--   the count. The count might not reflect pending registrations and
--   deregistrations.
--   
--   <a>$sel:arn:ServiceSummary'</a>, <a>serviceSummary_arn</a> - The
--   Amazon Resource Name (ARN) that Cloud Map assigns to the service when
--   you create it.
--   
--   <a>$sel:healthCheckConfig:ServiceSummary'</a>,
--   <a>serviceSummary_healthCheckConfig</a> - <i>Public DNS and HTTP
--   namespaces only.</i> Settings for an optional health check. If you
--   specify settings for a health check, Cloud Map associates the health
--   check with the records that you specify in <tt>DnsConfig</tt>.
--   
--   <a>$sel:createDate:ServiceSummary'</a>,
--   <a>serviceSummary_createDate</a> - The date and time that the service
--   was created.
--   
--   <a>$sel:healthCheckCustomConfig:ServiceSummary'</a>,
--   <a>serviceSummary_healthCheckCustomConfig</a> - Information about an
--   optional custom health check. A custom health check, which requires
--   that you use a third-party health checker to evaluate the health of
--   your resources, is useful in the following circumstances:
--   
--   <ul>
--   <li>You can't use a health check that's defined by
--   <tt>HealthCheckConfig</tt> because the resource isn't available over
--   the internet. For example, you can use a custom health check when the
--   instance is in an Amazon VPC. (To check the health of resources in a
--   VPC, the health checker must also be in the VPC.)</li>
--   <li>You want to use a third-party health checker regardless of where
--   your resources are located.</li>
--   </ul>
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   <a>$sel:name:ServiceSummary'</a>, <a>serviceSummary_name</a> - The
--   name of the service.
--   
--   <a>$sel:id:ServiceSummary'</a>, <a>serviceSummary_id</a> - The ID that
--   Cloud Map assigned to the service when you created it.
--   
--   <a>$sel:type':ServiceSummary'</a>, <a>serviceSummary_type</a> -
--   Describes the systems that can be used to discover the service
--   instances.
--   
--   <ul>
--   <li><i>DNS_HTTP</i> The service instances can be discovered using
--   either DNS queries or the <tt>DiscoverInstances</tt> API
--   operation.</li>
--   <li><i>HTTP</i> The service instances can only be discovered using the
--   <tt>DiscoverInstances</tt> API operation.</li>
--   <li><i>DNS</i> Reserved.</li>
--   </ul>
--   
--   <a>$sel:dnsConfig:ServiceSummary'</a>, <a>serviceSummary_dnsConfig</a>
--   - Information about the Route 53 DNS records that you want Cloud Map
--   to create when you register an instance.
--   
--   <a>$sel:description:ServiceSummary'</a>,
--   <a>serviceSummary_description</a> - The description that you specify
--   when you create the service.
newServiceSummary :: ServiceSummary

-- | The number of instances that are currently associated with the
--   service. Instances that were previously associated with the service
--   but that are deleted aren't included in the count. The count might not
--   reflect pending registrations and deregistrations.
serviceSummary_instanceCount :: Lens' ServiceSummary (Maybe Int)

-- | The Amazon Resource Name (ARN) that Cloud Map assigns to the service
--   when you create it.
serviceSummary_arn :: Lens' ServiceSummary (Maybe Text)

-- | <i>Public DNS and HTTP namespaces only.</i> Settings for an optional
--   health check. If you specify settings for a health check, Cloud Map
--   associates the health check with the records that you specify in
--   <tt>DnsConfig</tt>.
serviceSummary_healthCheckConfig :: Lens' ServiceSummary (Maybe HealthCheckConfig)

-- | The date and time that the service was created.
serviceSummary_createDate :: Lens' ServiceSummary (Maybe UTCTime)

-- | Information about an optional custom health check. A custom health
--   check, which requires that you use a third-party health checker to
--   evaluate the health of your resources, is useful in the following
--   circumstances:
--   
--   <ul>
--   <li>You can't use a health check that's defined by
--   <tt>HealthCheckConfig</tt> because the resource isn't available over
--   the internet. For example, you can use a custom health check when the
--   instance is in an Amazon VPC. (To check the health of resources in a
--   VPC, the health checker must also be in the VPC.)</li>
--   <li>You want to use a third-party health checker regardless of where
--   your resources are located.</li>
--   </ul>
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
serviceSummary_healthCheckCustomConfig :: Lens' ServiceSummary (Maybe HealthCheckCustomConfig)

-- | The name of the service.
serviceSummary_name :: Lens' ServiceSummary (Maybe Text)

-- | The ID that Cloud Map assigned to the service when you created it.
serviceSummary_id :: Lens' ServiceSummary (Maybe Text)

-- | Describes the systems that can be used to discover the service
--   instances.
--   
--   <ul>
--   <li><i>DNS_HTTP</i> The service instances can be discovered using
--   either DNS queries or the <tt>DiscoverInstances</tt> API
--   operation.</li>
--   <li><i>HTTP</i> The service instances can only be discovered using the
--   <tt>DiscoverInstances</tt> API operation.</li>
--   <li><i>DNS</i> Reserved.</li>
--   </ul>
serviceSummary_type :: Lens' ServiceSummary (Maybe ServiceType)

-- | Information about the Route 53 DNS records that you want Cloud Map to
--   create when you register an instance.
serviceSummary_dnsConfig :: Lens' ServiceSummary (Maybe DnsConfig)

-- | The description that you specify when you create the service.
serviceSummary_description :: Lens' ServiceSummary (Maybe Text)

-- | A custom key-value pair that's associated with a resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The key identifier, or name, of the tag.
[$sel:key:Tag'] :: Tag -> Text

-- | The string value that's associated with the key of the tag. You can
--   set the value of a tag to an empty string, but you can't set the value
--   of a tag to null.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key identifier, or name, of
--   the tag.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The string value that's
--   associated with the key of the tag. You can set the value of a tag to
--   an empty string, but you can't set the value of a tag to null.
newTag :: Text -> Text -> Tag

-- | The key identifier, or name, of the tag.
tag_key :: Lens' Tag Text

-- | The string value that's associated with the key of the tag. You can
--   set the value of a tag to an empty string, but you can't set the value
--   of a tag to null.
tag_value :: Lens' Tag Text


-- | Adds one or more tags to the specified resource.
module Network.AWS.Route53AutoNaming.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The Amazon Resource Name (ARN) of the resource that you want to
--   retrieve tags for.
[$sel:resourceARN:TagResource'] :: TagResource -> Text

-- | The tags to add to the specified resource. Specifying the tag key is
--   required. You can set the value of a tag to an empty string, but you
--   can't set the value of a tag to null.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The Amazon Resource Name (ARN) of the resource that you want to
--   retrieve tags for.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   add to the specified resource. Specifying the tag key is required. You
--   can set the value of a tag to an empty string, but you can't set the
--   value of a tag to null.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource that you want to
--   retrieve tags for.
tagResource_resourceARN :: Lens' TagResource Text

-- | The tags to add to the specified resource. Specifying the tag key is
--   required. You can set the value of a tag to an empty string, but you
--   can't set the value of a tag to null.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.TagResource.TagResource
instance GHC.Show.Show Network.AWS.Route53AutoNaming.TagResource.TagResource
instance GHC.Read.Read Network.AWS.Route53AutoNaming.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.TagResource.TagResource


-- | Creates or updates one or more records and, optionally, creates a
--   health check based on the settings in a specified service. When you
--   submit a <tt>RegisterInstance</tt> request, the following occurs:
--   
--   <ul>
--   <li>For each DNS record that you define in the service that's
--   specified by <tt>ServiceId</tt>, a record is created or updated in the
--   hosted zone that's associated with the corresponding namespace.</li>
--   <li>If the service includes <tt>HealthCheckConfig</tt>, a health check
--   is created based on the settings in the health check
--   configuration.</li>
--   <li>The health check, if any, is associated with each of the new or
--   updated records.</li>
--   </ul>
--   
--   One <tt>RegisterInstance</tt> request must complete before you can
--   submit another request and specify the same service ID and instance
--   ID.
--   
--   For more information, see <a>CreateService</a>.
--   
--   When Cloud Map receives a DNS query for the specified DNS name, it
--   returns the applicable value:
--   
--   <ul>
--   <li><b>If the health check is healthy</b>: returns all the
--   records</li>
--   <li><b>If the health check is unhealthy</b>: returns the applicable
--   value for the last healthy instance</li>
--   <li><b>If you didn't specify a health check configuration</b>: returns
--   all the records</li>
--   </ul>
--   
--   For the current quota on the number of instances that you can register
--   using the same namespace and using the same service, see <a>Cloud Map
--   quotas</a> in the <i>Cloud Map Developer Guide</i>.
module Network.AWS.Route53AutoNaming.RegisterInstance

-- | <i>See:</i> <a>newRegisterInstance</a> smart constructor.
data RegisterInstance
RegisterInstance' :: Maybe Text -> Text -> Text -> HashMap Text Text -> RegisterInstance

-- | A unique string that identifies the request and that allows failed
--   <tt>RegisterInstance</tt> requests to be retried without the risk of
--   executing the operation twice. You must use a unique
--   <tt>CreatorRequestId</tt> string every time you submit a
--   <tt>RegisterInstance</tt> request if you're registering additional
--   instances for the same namespace and service.
--   <tt>CreatorRequestId</tt> can be any unique string (for example, a
--   date/time stamp).
[$sel:creatorRequestId:RegisterInstance'] :: RegisterInstance -> Maybe Text

-- | The ID of the service that you want to use for settings for the
--   instance.
[$sel:serviceId:RegisterInstance'] :: RegisterInstance -> Text

-- | An identifier that you want to associate with the instance. Note the
--   following:
--   
--   <ul>
--   <li>If the service that's specified by <tt>ServiceId</tt> includes
--   settings for an <tt>SRV</tt> record, the value of <tt>InstanceId</tt>
--   is automatically included as part of the value for the <tt>SRV</tt>
--   record. For more information, see <a>DnsRecord</a> Type&gt;.</li>
--   <li>You can use this value to update an existing instance.</li>
--   <li>To register a new instance, you must specify a value that's unique
--   among instances that you register by using the same service.</li>
--   <li>If you specify an existing <tt>InstanceId</tt> and
--   <tt>ServiceId</tt>, Cloud Map updates the existing DNS records, if
--   any. If there's also an existing health check, Cloud Map deletes the
--   old health check and creates a new one.The health check isn't deleted
--   immediately, so it will still appear for a while if you submit a
--   <tt>ListHealthChecks</tt> request, for example.</li>
--   </ul>
[$sel:instanceId:RegisterInstance'] :: RegisterInstance -> Text

-- | A string map that contains the following information for the service
--   that you specify in <tt>ServiceId</tt>:
--   
--   <ul>
--   <li>The attributes that apply to the records that are defined in the
--   service.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> If you want Cloud Map to create an
--   Amazon Route 53 alias record that routes traffic to an Elastic Load
--   Balancing load balancer, specify the DNS name that's associated with
--   the load balancer. For information about how to get the DNS name, see
--   "DNSName" in the topic <a>AliasTarget</a> in the <i>Route 53 API
--   Reference</i>.Note the following:<ul><li>The configuration for the
--   service that's specified by <tt>ServiceId</tt> must include settings
--   for an <tt>A</tt> record, an <tt>AAAA</tt> record, or both.</li><li>In
--   the service that's specified by <tt>ServiceId</tt>, the value of
--   <tt>RoutingPolicy</tt> must be <tt>WEIGHTED</tt>.</li><li>If the
--   service that's specified by <tt>ServiceId</tt> includes
--   <tt>HealthCheckConfig</tt> settings, Cloud Map will create the Route
--   53 health check, but it doesn't associate the health check with the
--   alias record.</li><li>Auto naming currently doesn't support creating
--   alias records that route traffic to Amazon Web Services resources
--   other than Elastic Load Balancing load balancers.</li><li>If you
--   specify a value for <tt>AWS_ALIAS_DNS_NAME</tt>, don't specify values
--   for any of the <tt>AWS_INSTANCE</tt> attributes.</li></ul></li>
--   <li><i>AWS_EC2_INSTANCE_ID</i> <i>HTTP namespaces only.</i> The Amazon
--   EC2 instance ID for the instance. If the <tt>AWS_EC2_INSTANCE_ID</tt>
--   attribute is specified, then the only other attribute that can be
--   specified is <tt>AWS_INIT_HEALTH_STATUS</tt>. When the
--   <tt>AWS_EC2_INSTANCE_ID</tt> attribute is specified, then the
--   <tt>AWS_INSTANCE_IPV4</tt> attribute will be filled out with the
--   primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> If the service configuration includes a
--   <tt>CNAME</tt> record, the domain name that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>example.com</tt>).This value is required if the service specified
--   by <tt>ServiceId</tt> includes settings for an <tt>CNAME</tt>
--   record.</li>
--   <li><i>AWS_INSTANCE_IPV4</i> If the service configuration includes an
--   <tt>A</tt> record, the IPv4 address that you want Route 53 to return
--   in response to DNS queries (for example, <tt>192.0.2.44</tt>).This
--   value is required if the service specified by <tt>ServiceId</tt>
--   includes settings for an <tt>A</tt> record. If the service includes
--   settings for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_IPV6</i> If the service configuration includes an
--   <tt>AAAA</tt> record, the IPv6 address that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).This value is
--   required if the service specified by <tt>ServiceId</tt> includes
--   settings for an <tt>AAAA</tt> record. If the service includes settings
--   for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_PORT</i> If the service includes an <tt>SRV</tt>
--   record, the value that you want Route 53 to return for the port.If the
--   service includes <tt>HealthCheckConfig</tt>, the port on the endpoint
--   that you want Route 53 to send requests to.This value is required if
--   you specified settings for an <tt>SRV</tt> record or a Route 53 health
--   check when you created the service.</li>
--   <li><i>Custom attributes</i> You can add up to 30 custom attributes.
--   For each key-value pair, the maximum length of the attribute name is
--   255 characters, and the maximum length of the attribute value is 1,024
--   characters. The total size of all provided attributes (sum of all keys
--   and values) must not exceed 5,000 characters.</li>
--   </ul>
[$sel:attributes:RegisterInstance'] :: RegisterInstance -> HashMap Text Text

-- | Create a value of <a>RegisterInstance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creatorRequestId:RegisterInstance'</a>,
--   <a>registerInstance_creatorRequestId</a> - A unique string that
--   identifies the request and that allows failed
--   <tt>RegisterInstance</tt> requests to be retried without the risk of
--   executing the operation twice. You must use a unique
--   <tt>CreatorRequestId</tt> string every time you submit a
--   <tt>RegisterInstance</tt> request if you're registering additional
--   instances for the same namespace and service.
--   <tt>CreatorRequestId</tt> can be any unique string (for example, a
--   date/time stamp).
--   
--   <a>$sel:serviceId:RegisterInstance'</a>,
--   <a>registerInstance_serviceId</a> - The ID of the service that you
--   want to use for settings for the instance.
--   
--   <a>$sel:instanceId:RegisterInstance'</a>,
--   <a>registerInstance_instanceId</a> - An identifier that you want to
--   associate with the instance. Note the following:
--   
--   <ul>
--   <li>If the service that's specified by <tt>ServiceId</tt> includes
--   settings for an <tt>SRV</tt> record, the value of <tt>InstanceId</tt>
--   is automatically included as part of the value for the <tt>SRV</tt>
--   record. For more information, see <a>DnsRecord</a> Type&gt;.</li>
--   <li>You can use this value to update an existing instance.</li>
--   <li>To register a new instance, you must specify a value that's unique
--   among instances that you register by using the same service.</li>
--   <li>If you specify an existing <tt>InstanceId</tt> and
--   <tt>ServiceId</tt>, Cloud Map updates the existing DNS records, if
--   any. If there's also an existing health check, Cloud Map deletes the
--   old health check and creates a new one.The health check isn't deleted
--   immediately, so it will still appear for a while if you submit a
--   <tt>ListHealthChecks</tt> request, for example.</li>
--   </ul>
--   
--   <a>$sel:attributes:RegisterInstance'</a>,
--   <a>registerInstance_attributes</a> - A string map that contains the
--   following information for the service that you specify in
--   <tt>ServiceId</tt>:
--   
--   <ul>
--   <li>The attributes that apply to the records that are defined in the
--   service.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> If you want Cloud Map to create an
--   Amazon Route 53 alias record that routes traffic to an Elastic Load
--   Balancing load balancer, specify the DNS name that's associated with
--   the load balancer. For information about how to get the DNS name, see
--   "DNSName" in the topic <a>AliasTarget</a> in the <i>Route 53 API
--   Reference</i>.Note the following:<ul><li>The configuration for the
--   service that's specified by <tt>ServiceId</tt> must include settings
--   for an <tt>A</tt> record, an <tt>AAAA</tt> record, or both.</li><li>In
--   the service that's specified by <tt>ServiceId</tt>, the value of
--   <tt>RoutingPolicy</tt> must be <tt>WEIGHTED</tt>.</li><li>If the
--   service that's specified by <tt>ServiceId</tt> includes
--   <tt>HealthCheckConfig</tt> settings, Cloud Map will create the Route
--   53 health check, but it doesn't associate the health check with the
--   alias record.</li><li>Auto naming currently doesn't support creating
--   alias records that route traffic to Amazon Web Services resources
--   other than Elastic Load Balancing load balancers.</li><li>If you
--   specify a value for <tt>AWS_ALIAS_DNS_NAME</tt>, don't specify values
--   for any of the <tt>AWS_INSTANCE</tt> attributes.</li></ul></li>
--   <li><i>AWS_EC2_INSTANCE_ID</i> <i>HTTP namespaces only.</i> The Amazon
--   EC2 instance ID for the instance. If the <tt>AWS_EC2_INSTANCE_ID</tt>
--   attribute is specified, then the only other attribute that can be
--   specified is <tt>AWS_INIT_HEALTH_STATUS</tt>. When the
--   <tt>AWS_EC2_INSTANCE_ID</tt> attribute is specified, then the
--   <tt>AWS_INSTANCE_IPV4</tt> attribute will be filled out with the
--   primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> If the service configuration includes a
--   <tt>CNAME</tt> record, the domain name that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>example.com</tt>).This value is required if the service specified
--   by <tt>ServiceId</tt> includes settings for an <tt>CNAME</tt>
--   record.</li>
--   <li><i>AWS_INSTANCE_IPV4</i> If the service configuration includes an
--   <tt>A</tt> record, the IPv4 address that you want Route 53 to return
--   in response to DNS queries (for example, <tt>192.0.2.44</tt>).This
--   value is required if the service specified by <tt>ServiceId</tt>
--   includes settings for an <tt>A</tt> record. If the service includes
--   settings for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_IPV6</i> If the service configuration includes an
--   <tt>AAAA</tt> record, the IPv6 address that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).This value is
--   required if the service specified by <tt>ServiceId</tt> includes
--   settings for an <tt>AAAA</tt> record. If the service includes settings
--   for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_PORT</i> If the service includes an <tt>SRV</tt>
--   record, the value that you want Route 53 to return for the port.If the
--   service includes <tt>HealthCheckConfig</tt>, the port on the endpoint
--   that you want Route 53 to send requests to.This value is required if
--   you specified settings for an <tt>SRV</tt> record or a Route 53 health
--   check when you created the service.</li>
--   <li><i>Custom attributes</i> You can add up to 30 custom attributes.
--   For each key-value pair, the maximum length of the attribute name is
--   255 characters, and the maximum length of the attribute value is 1,024
--   characters. The total size of all provided attributes (sum of all keys
--   and values) must not exceed 5,000 characters.</li>
--   </ul>
newRegisterInstance :: Text -> Text -> RegisterInstance

-- | A unique string that identifies the request and that allows failed
--   <tt>RegisterInstance</tt> requests to be retried without the risk of
--   executing the operation twice. You must use a unique
--   <tt>CreatorRequestId</tt> string every time you submit a
--   <tt>RegisterInstance</tt> request if you're registering additional
--   instances for the same namespace and service.
--   <tt>CreatorRequestId</tt> can be any unique string (for example, a
--   date/time stamp).
registerInstance_creatorRequestId :: Lens' RegisterInstance (Maybe Text)

-- | The ID of the service that you want to use for settings for the
--   instance.
registerInstance_serviceId :: Lens' RegisterInstance Text

-- | An identifier that you want to associate with the instance. Note the
--   following:
--   
--   <ul>
--   <li>If the service that's specified by <tt>ServiceId</tt> includes
--   settings for an <tt>SRV</tt> record, the value of <tt>InstanceId</tt>
--   is automatically included as part of the value for the <tt>SRV</tt>
--   record. For more information, see <a>DnsRecord</a> Type&gt;.</li>
--   <li>You can use this value to update an existing instance.</li>
--   <li>To register a new instance, you must specify a value that's unique
--   among instances that you register by using the same service.</li>
--   <li>If you specify an existing <tt>InstanceId</tt> and
--   <tt>ServiceId</tt>, Cloud Map updates the existing DNS records, if
--   any. If there's also an existing health check, Cloud Map deletes the
--   old health check and creates a new one.The health check isn't deleted
--   immediately, so it will still appear for a while if you submit a
--   <tt>ListHealthChecks</tt> request, for example.</li>
--   </ul>
registerInstance_instanceId :: Lens' RegisterInstance Text

-- | A string map that contains the following information for the service
--   that you specify in <tt>ServiceId</tt>:
--   
--   <ul>
--   <li>The attributes that apply to the records that are defined in the
--   service.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> If you want Cloud Map to create an
--   Amazon Route 53 alias record that routes traffic to an Elastic Load
--   Balancing load balancer, specify the DNS name that's associated with
--   the load balancer. For information about how to get the DNS name, see
--   "DNSName" in the topic <a>AliasTarget</a> in the <i>Route 53 API
--   Reference</i>.Note the following:<ul><li>The configuration for the
--   service that's specified by <tt>ServiceId</tt> must include settings
--   for an <tt>A</tt> record, an <tt>AAAA</tt> record, or both.</li><li>In
--   the service that's specified by <tt>ServiceId</tt>, the value of
--   <tt>RoutingPolicy</tt> must be <tt>WEIGHTED</tt>.</li><li>If the
--   service that's specified by <tt>ServiceId</tt> includes
--   <tt>HealthCheckConfig</tt> settings, Cloud Map will create the Route
--   53 health check, but it doesn't associate the health check with the
--   alias record.</li><li>Auto naming currently doesn't support creating
--   alias records that route traffic to Amazon Web Services resources
--   other than Elastic Load Balancing load balancers.</li><li>If you
--   specify a value for <tt>AWS_ALIAS_DNS_NAME</tt>, don't specify values
--   for any of the <tt>AWS_INSTANCE</tt> attributes.</li></ul></li>
--   <li><i>AWS_EC2_INSTANCE_ID</i> <i>HTTP namespaces only.</i> The Amazon
--   EC2 instance ID for the instance. If the <tt>AWS_EC2_INSTANCE_ID</tt>
--   attribute is specified, then the only other attribute that can be
--   specified is <tt>AWS_INIT_HEALTH_STATUS</tt>. When the
--   <tt>AWS_EC2_INSTANCE_ID</tt> attribute is specified, then the
--   <tt>AWS_INSTANCE_IPV4</tt> attribute will be filled out with the
--   primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> If the service configuration includes a
--   <tt>CNAME</tt> record, the domain name that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>example.com</tt>).This value is required if the service specified
--   by <tt>ServiceId</tt> includes settings for an <tt>CNAME</tt>
--   record.</li>
--   <li><i>AWS_INSTANCE_IPV4</i> If the service configuration includes an
--   <tt>A</tt> record, the IPv4 address that you want Route 53 to return
--   in response to DNS queries (for example, <tt>192.0.2.44</tt>).This
--   value is required if the service specified by <tt>ServiceId</tt>
--   includes settings for an <tt>A</tt> record. If the service includes
--   settings for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_IPV6</i> If the service configuration includes an
--   <tt>AAAA</tt> record, the IPv6 address that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).This value is
--   required if the service specified by <tt>ServiceId</tt> includes
--   settings for an <tt>AAAA</tt> record. If the service includes settings
--   for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_PORT</i> If the service includes an <tt>SRV</tt>
--   record, the value that you want Route 53 to return for the port.If the
--   service includes <tt>HealthCheckConfig</tt>, the port on the endpoint
--   that you want Route 53 to send requests to.This value is required if
--   you specified settings for an <tt>SRV</tt> record or a Route 53 health
--   check when you created the service.</li>
--   <li><i>Custom attributes</i> You can add up to 30 custom attributes.
--   For each key-value pair, the maximum length of the attribute name is
--   255 characters, and the maximum length of the attribute value is 1,024
--   characters. The total size of all provided attributes (sum of all keys
--   and values) must not exceed 5,000 characters.</li>
--   </ul>
registerInstance_attributes :: Lens' RegisterInstance (HashMap Text Text)

-- | <i>See:</i> <a>newRegisterInstanceResponse</a> smart constructor.
data RegisterInstanceResponse
RegisterInstanceResponse' :: Maybe Text -> Int -> RegisterInstanceResponse

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
[$sel:operationId:RegisterInstanceResponse'] :: RegisterInstanceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:RegisterInstanceResponse'] :: RegisterInstanceResponse -> Int

-- | Create a value of <a>RegisterInstanceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:RegisterInstanceResponse'</a>,
--   <a>registerInstanceResponse_operationId</a> - A value that you can use
--   to determine whether the request completed successfully. To get the
--   status of the operation, see <a>GetOperation</a>.
--   
--   <a>$sel:httpStatus:RegisterInstanceResponse'</a>,
--   <a>registerInstanceResponse_httpStatus</a> - The response's http
--   status code.
newRegisterInstanceResponse :: Int -> RegisterInstanceResponse

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
registerInstanceResponse_operationId :: Lens' RegisterInstanceResponse (Maybe Text)

-- | The response's http status code.
registerInstanceResponse_httpStatus :: Lens' RegisterInstanceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.RegisterInstance.RegisterInstance
instance GHC.Show.Show Network.AWS.Route53AutoNaming.RegisterInstance.RegisterInstance
instance GHC.Read.Read Network.AWS.Route53AutoNaming.RegisterInstance.RegisterInstance
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.RegisterInstance.RegisterInstance
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.RegisterInstance.RegisterInstanceResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.RegisterInstance.RegisterInstanceResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.RegisterInstance.RegisterInstanceResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.RegisterInstance.RegisterInstanceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.RegisterInstance.RegisterInstance
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.RegisterInstance.RegisterInstanceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.RegisterInstance.RegisterInstance
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.RegisterInstance.RegisterInstance
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.RegisterInstance.RegisterInstance
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.RegisterInstance.RegisterInstance
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.RegisterInstance.RegisterInstance
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.RegisterInstance.RegisterInstance


-- | Lists tags for the specified resource.
module Network.AWS.Route53AutoNaming.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource that you want to
--   retrieve tags for.
[$sel:resourceARN:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The Amazon Resource Name
--   (ARN) of the resource that you want to retrieve tags for.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource that you want to
--   retrieve tags for.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | The tags that are assigned to the resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags that are assigned
--   to the resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The tags that are assigned to the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.Route53AutoNaming.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.Route53AutoNaming.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.ListTagsForResource.ListTagsForResource


-- | Lists summary information for all the services that are associated
--   with one or more specified namespaces.
--   
--   This operation returns paginated results.
module Network.AWS.Route53AutoNaming.ListServices

-- | <i>See:</i> <a>newListServices</a> smart constructor.
data ListServices
ListServices' :: Maybe [ServiceFilter] -> Maybe Text -> Maybe Natural -> ListServices

-- | A complex type that contains specifications for the namespaces that
--   you want to list services for.
--   
--   If you specify more than one filter, an operation must match all
--   filters to be returned by <tt>ListServices</tt>.
[$sel:filters:ListServices'] :: ListServices -> Maybe [ServiceFilter]

-- | For the first <tt>ListServices</tt> request, omit this value.
--   
--   If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListServices</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> services and then filters them
--   based on the specified criteria. It's possible that no services in the
--   first <tt>MaxResults</tt> services matched the specified criteria but
--   that subsequent groups of <tt>MaxResults</tt> services do contain
--   services that match the criteria.
[$sel:nextToken:ListServices'] :: ListServices -> Maybe Text

-- | The maximum number of services that you want Cloud Map to return in
--   the response to a <tt>ListServices</tt> request. If you don't specify
--   a value for <tt>MaxResults</tt>, Cloud Map returns up to 100 services.
[$sel:maxResults:ListServices'] :: ListServices -> Maybe Natural

-- | Create a value of <a>ListServices</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListServices'</a>, <a>listServices_filters</a> - A
--   complex type that contains specifications for the namespaces that you
--   want to list services for.
--   
--   If you specify more than one filter, an operation must match all
--   filters to be returned by <tt>ListServices</tt>.
--   
--   <a>$sel:nextToken:ListServices'</a>, <a>listServices_nextToken</a> -
--   For the first <tt>ListServices</tt> request, omit this value.
--   
--   If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListServices</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> services and then filters them
--   based on the specified criteria. It's possible that no services in the
--   first <tt>MaxResults</tt> services matched the specified criteria but
--   that subsequent groups of <tt>MaxResults</tt> services do contain
--   services that match the criteria.
--   
--   <a>$sel:maxResults:ListServices'</a>, <a>listServices_maxResults</a> -
--   The maximum number of services that you want Cloud Map to return in
--   the response to a <tt>ListServices</tt> request. If you don't specify
--   a value for <tt>MaxResults</tt>, Cloud Map returns up to 100 services.
newListServices :: ListServices

-- | A complex type that contains specifications for the namespaces that
--   you want to list services for.
--   
--   If you specify more than one filter, an operation must match all
--   filters to be returned by <tt>ListServices</tt>.
listServices_filters :: Lens' ListServices (Maybe [ServiceFilter])

-- | For the first <tt>ListServices</tt> request, omit this value.
--   
--   If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListServices</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> services and then filters them
--   based on the specified criteria. It's possible that no services in the
--   first <tt>MaxResults</tt> services matched the specified criteria but
--   that subsequent groups of <tt>MaxResults</tt> services do contain
--   services that match the criteria.
listServices_nextToken :: Lens' ListServices (Maybe Text)

-- | The maximum number of services that you want Cloud Map to return in
--   the response to a <tt>ListServices</tt> request. If you don't specify
--   a value for <tt>MaxResults</tt>, Cloud Map returns up to 100 services.
listServices_maxResults :: Lens' ListServices (Maybe Natural)

-- | <i>See:</i> <a>newListServicesResponse</a> smart constructor.
data ListServicesResponse
ListServicesResponse' :: Maybe Text -> Maybe [ServiceSummary] -> Int -> ListServicesResponse

-- | If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListServices</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> services and then filters them
--   based on the specified criteria. It's possible that no services in the
--   first <tt>MaxResults</tt> services matched the specified criteria but
--   that subsequent groups of <tt>MaxResults</tt> services do contain
--   services that match the criteria.
[$sel:nextToken:ListServicesResponse'] :: ListServicesResponse -> Maybe Text

-- | An array that contains one <tt>ServiceSummary</tt> object for each
--   service that matches the specified filter criteria.
[$sel:services:ListServicesResponse'] :: ListServicesResponse -> Maybe [ServiceSummary]

-- | The response's http status code.
[$sel:httpStatus:ListServicesResponse'] :: ListServicesResponse -> Int

-- | Create a value of <a>ListServicesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListServices'</a>,
--   <a>listServicesResponse_nextToken</a> - If the response contains
--   <tt>NextToken</tt>, submit another <tt>ListServices</tt> request to
--   get the next group of results. Specify the value of <tt>NextToken</tt>
--   from the previous response in the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> services and then filters them
--   based on the specified criteria. It's possible that no services in the
--   first <tt>MaxResults</tt> services matched the specified criteria but
--   that subsequent groups of <tt>MaxResults</tt> services do contain
--   services that match the criteria.
--   
--   <a>$sel:services:ListServicesResponse'</a>,
--   <a>listServicesResponse_services</a> - An array that contains one
--   <tt>ServiceSummary</tt> object for each service that matches the
--   specified filter criteria.
--   
--   <a>$sel:httpStatus:ListServicesResponse'</a>,
--   <a>listServicesResponse_httpStatus</a> - The response's http status
--   code.
newListServicesResponse :: Int -> ListServicesResponse

-- | If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListServices</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> services and then filters them
--   based on the specified criteria. It's possible that no services in the
--   first <tt>MaxResults</tt> services matched the specified criteria but
--   that subsequent groups of <tt>MaxResults</tt> services do contain
--   services that match the criteria.
listServicesResponse_nextToken :: Lens' ListServicesResponse (Maybe Text)

-- | An array that contains one <tt>ServiceSummary</tt> object for each
--   service that matches the specified filter criteria.
listServicesResponse_services :: Lens' ListServicesResponse (Maybe [ServiceSummary])

-- | The response's http status code.
listServicesResponse_httpStatus :: Lens' ListServicesResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.ListServices.ListServices
instance GHC.Show.Show Network.AWS.Route53AutoNaming.ListServices.ListServices
instance GHC.Read.Read Network.AWS.Route53AutoNaming.ListServices.ListServices
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.ListServices.ListServices
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.ListServices.ListServicesResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.ListServices.ListServicesResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.ListServices.ListServicesResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.ListServices.ListServicesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.ListServices.ListServices
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.ListServices.ListServicesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53AutoNaming.ListServices.ListServices
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.ListServices.ListServices
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.ListServices.ListServices
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.ListServices.ListServices
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.ListServices.ListServices
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.ListServices.ListServices
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.ListServices.ListServices


-- | Lists operations that match the criteria that you specify.
--   
--   This operation returns paginated results.
module Network.AWS.Route53AutoNaming.ListOperations

-- | <i>See:</i> <a>newListOperations</a> smart constructor.
data ListOperations
ListOperations' :: Maybe [OperationFilter] -> Maybe Text -> Maybe Natural -> ListOperations

-- | A complex type that contains specifications for the operations that
--   you want to list, for example, operations that you started between a
--   specified start date and end date.
--   
--   If you specify more than one filter, an operation must match all
--   filters to be returned by <tt>ListOperations</tt>.
[$sel:filters:ListOperations'] :: ListOperations -> Maybe [OperationFilter]

-- | For the first <tt>ListOperations</tt> request, omit this value.
--   
--   If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListOperations</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> operations and then filters them
--   based on the specified criteria. It's possible that no operations in
--   the first <tt>MaxResults</tt> operations matched the specified
--   criteria but that subsequent groups of <tt>MaxResults</tt> operations
--   do contain operations that match the criteria.
[$sel:nextToken:ListOperations'] :: ListOperations -> Maybe Text

-- | The maximum number of items that you want Cloud Map to return in the
--   response to a <tt>ListOperations</tt> request. If you don't specify a
--   value for <tt>MaxResults</tt>, Cloud Map returns up to 100 operations.
[$sel:maxResults:ListOperations'] :: ListOperations -> Maybe Natural

-- | Create a value of <a>ListOperations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListOperations'</a>, <a>listOperations_filters</a> - A
--   complex type that contains specifications for the operations that you
--   want to list, for example, operations that you started between a
--   specified start date and end date.
--   
--   If you specify more than one filter, an operation must match all
--   filters to be returned by <tt>ListOperations</tt>.
--   
--   <a>$sel:nextToken:ListOperations'</a>, <a>listOperations_nextToken</a>
--   - For the first <tt>ListOperations</tt> request, omit this value.
--   
--   If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListOperations</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> operations and then filters them
--   based on the specified criteria. It's possible that no operations in
--   the first <tt>MaxResults</tt> operations matched the specified
--   criteria but that subsequent groups of <tt>MaxResults</tt> operations
--   do contain operations that match the criteria.
--   
--   <a>$sel:maxResults:ListOperations'</a>,
--   <a>listOperations_maxResults</a> - The maximum number of items that
--   you want Cloud Map to return in the response to a
--   <tt>ListOperations</tt> request. If you don't specify a value for
--   <tt>MaxResults</tt>, Cloud Map returns up to 100 operations.
newListOperations :: ListOperations

-- | A complex type that contains specifications for the operations that
--   you want to list, for example, operations that you started between a
--   specified start date and end date.
--   
--   If you specify more than one filter, an operation must match all
--   filters to be returned by <tt>ListOperations</tt>.
listOperations_filters :: Lens' ListOperations (Maybe [OperationFilter])

-- | For the first <tt>ListOperations</tt> request, omit this value.
--   
--   If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListOperations</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> operations and then filters them
--   based on the specified criteria. It's possible that no operations in
--   the first <tt>MaxResults</tt> operations matched the specified
--   criteria but that subsequent groups of <tt>MaxResults</tt> operations
--   do contain operations that match the criteria.
listOperations_nextToken :: Lens' ListOperations (Maybe Text)

-- | The maximum number of items that you want Cloud Map to return in the
--   response to a <tt>ListOperations</tt> request. If you don't specify a
--   value for <tt>MaxResults</tt>, Cloud Map returns up to 100 operations.
listOperations_maxResults :: Lens' ListOperations (Maybe Natural)

-- | <i>See:</i> <a>newListOperationsResponse</a> smart constructor.
data ListOperationsResponse
ListOperationsResponse' :: Maybe Text -> Maybe [OperationSummary] -> Int -> ListOperationsResponse

-- | If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListOperations</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> operations and then filters them
--   based on the specified criteria. It's possible that no operations in
--   the first <tt>MaxResults</tt> operations matched the specified
--   criteria but that subsequent groups of <tt>MaxResults</tt> operations
--   do contain operations that match the criteria.
[$sel:nextToken:ListOperationsResponse'] :: ListOperationsResponse -> Maybe Text

-- | Summary information about the operations that match the specified
--   criteria.
[$sel:operations:ListOperationsResponse'] :: ListOperationsResponse -> Maybe [OperationSummary]

-- | The response's http status code.
[$sel:httpStatus:ListOperationsResponse'] :: ListOperationsResponse -> Int

-- | Create a value of <a>ListOperationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOperations'</a>,
--   <a>listOperationsResponse_nextToken</a> - If the response contains
--   <tt>NextToken</tt>, submit another <tt>ListOperations</tt> request to
--   get the next group of results. Specify the value of <tt>NextToken</tt>
--   from the previous response in the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> operations and then filters them
--   based on the specified criteria. It's possible that no operations in
--   the first <tt>MaxResults</tt> operations matched the specified
--   criteria but that subsequent groups of <tt>MaxResults</tt> operations
--   do contain operations that match the criteria.
--   
--   <a>$sel:operations:ListOperationsResponse'</a>,
--   <a>listOperationsResponse_operations</a> - Summary information about
--   the operations that match the specified criteria.
--   
--   <a>$sel:httpStatus:ListOperationsResponse'</a>,
--   <a>listOperationsResponse_httpStatus</a> - The response's http status
--   code.
newListOperationsResponse :: Int -> ListOperationsResponse

-- | If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListOperations</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> operations and then filters them
--   based on the specified criteria. It's possible that no operations in
--   the first <tt>MaxResults</tt> operations matched the specified
--   criteria but that subsequent groups of <tt>MaxResults</tt> operations
--   do contain operations that match the criteria.
listOperationsResponse_nextToken :: Lens' ListOperationsResponse (Maybe Text)

-- | Summary information about the operations that match the specified
--   criteria.
listOperationsResponse_operations :: Lens' ListOperationsResponse (Maybe [OperationSummary])

-- | The response's http status code.
listOperationsResponse_httpStatus :: Lens' ListOperationsResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.ListOperations.ListOperations
instance GHC.Show.Show Network.AWS.Route53AutoNaming.ListOperations.ListOperations
instance GHC.Read.Read Network.AWS.Route53AutoNaming.ListOperations.ListOperations
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.ListOperations.ListOperations
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.ListOperations.ListOperationsResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.ListOperations.ListOperationsResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.ListOperations.ListOperationsResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.ListOperations.ListOperationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.ListOperations.ListOperations
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.ListOperations.ListOperationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53AutoNaming.ListOperations.ListOperations
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.ListOperations.ListOperations
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.ListOperations.ListOperations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.ListOperations.ListOperations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.ListOperations.ListOperations
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.ListOperations.ListOperations
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.ListOperations.ListOperations


-- | Lists summary information about the namespaces that were created by
--   the current account.
--   
--   This operation returns paginated results.
module Network.AWS.Route53AutoNaming.ListNamespaces

-- | <i>See:</i> <a>newListNamespaces</a> smart constructor.
data ListNamespaces
ListNamespaces' :: Maybe [NamespaceFilter] -> Maybe Text -> Maybe Natural -> ListNamespaces

-- | A complex type that contains specifications for the namespaces that
--   you want to list.
--   
--   If you specify more than one filter, a namespace must match all
--   filters to be returned by <tt>ListNamespaces</tt>.
[$sel:filters:ListNamespaces'] :: ListNamespaces -> Maybe [NamespaceFilter]

-- | For the first <tt>ListNamespaces</tt> request, omit this value.
--   
--   If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListNamespaces</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> namespaces and then filters them
--   based on the specified criteria. It's possible that no namespaces in
--   the first <tt>MaxResults</tt> namespaces matched the specified
--   criteria but that subsequent groups of <tt>MaxResults</tt> namespaces
--   do contain namespaces that match the criteria.
[$sel:nextToken:ListNamespaces'] :: ListNamespaces -> Maybe Text

-- | The maximum number of namespaces that you want Cloud Map to return in
--   the response to a <tt>ListNamespaces</tt> request. If you don't
--   specify a value for <tt>MaxResults</tt>, Cloud Map returns up to 100
--   namespaces.
[$sel:maxResults:ListNamespaces'] :: ListNamespaces -> Maybe Natural

-- | Create a value of <a>ListNamespaces</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListNamespaces'</a>, <a>listNamespaces_filters</a> - A
--   complex type that contains specifications for the namespaces that you
--   want to list.
--   
--   If you specify more than one filter, a namespace must match all
--   filters to be returned by <tt>ListNamespaces</tt>.
--   
--   <a>$sel:nextToken:ListNamespaces'</a>, <a>listNamespaces_nextToken</a>
--   - For the first <tt>ListNamespaces</tt> request, omit this value.
--   
--   If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListNamespaces</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> namespaces and then filters them
--   based on the specified criteria. It's possible that no namespaces in
--   the first <tt>MaxResults</tt> namespaces matched the specified
--   criteria but that subsequent groups of <tt>MaxResults</tt> namespaces
--   do contain namespaces that match the criteria.
--   
--   <a>$sel:maxResults:ListNamespaces'</a>,
--   <a>listNamespaces_maxResults</a> - The maximum number of namespaces
--   that you want Cloud Map to return in the response to a
--   <tt>ListNamespaces</tt> request. If you don't specify a value for
--   <tt>MaxResults</tt>, Cloud Map returns up to 100 namespaces.
newListNamespaces :: ListNamespaces

-- | A complex type that contains specifications for the namespaces that
--   you want to list.
--   
--   If you specify more than one filter, a namespace must match all
--   filters to be returned by <tt>ListNamespaces</tt>.
listNamespaces_filters :: Lens' ListNamespaces (Maybe [NamespaceFilter])

-- | For the first <tt>ListNamespaces</tt> request, omit this value.
--   
--   If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListNamespaces</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> namespaces and then filters them
--   based on the specified criteria. It's possible that no namespaces in
--   the first <tt>MaxResults</tt> namespaces matched the specified
--   criteria but that subsequent groups of <tt>MaxResults</tt> namespaces
--   do contain namespaces that match the criteria.
listNamespaces_nextToken :: Lens' ListNamespaces (Maybe Text)

-- | The maximum number of namespaces that you want Cloud Map to return in
--   the response to a <tt>ListNamespaces</tt> request. If you don't
--   specify a value for <tt>MaxResults</tt>, Cloud Map returns up to 100
--   namespaces.
listNamespaces_maxResults :: Lens' ListNamespaces (Maybe Natural)

-- | <i>See:</i> <a>newListNamespacesResponse</a> smart constructor.
data ListNamespacesResponse
ListNamespacesResponse' :: Maybe [NamespaceSummary] -> Maybe Text -> Int -> ListNamespacesResponse

-- | An array that contains one <tt>NamespaceSummary</tt> object for each
--   namespace that matches the specified filter criteria.
[$sel:namespaces:ListNamespacesResponse'] :: ListNamespacesResponse -> Maybe [NamespaceSummary]

-- | If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListNamespaces</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> namespaces and then filters them
--   based on the specified criteria. It's possible that no namespaces in
--   the first <tt>MaxResults</tt> namespaces matched the specified
--   criteria but that subsequent groups of <tt>MaxResults</tt> namespaces
--   do contain namespaces that match the criteria.
[$sel:nextToken:ListNamespacesResponse'] :: ListNamespacesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListNamespacesResponse'] :: ListNamespacesResponse -> Int

-- | Create a value of <a>ListNamespacesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespaces:ListNamespacesResponse'</a>,
--   <a>listNamespacesResponse_namespaces</a> - An array that contains one
--   <tt>NamespaceSummary</tt> object for each namespace that matches the
--   specified filter criteria.
--   
--   <a>$sel:nextToken:ListNamespaces'</a>,
--   <a>listNamespacesResponse_nextToken</a> - If the response contains
--   <tt>NextToken</tt>, submit another <tt>ListNamespaces</tt> request to
--   get the next group of results. Specify the value of <tt>NextToken</tt>
--   from the previous response in the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> namespaces and then filters them
--   based on the specified criteria. It's possible that no namespaces in
--   the first <tt>MaxResults</tt> namespaces matched the specified
--   criteria but that subsequent groups of <tt>MaxResults</tt> namespaces
--   do contain namespaces that match the criteria.
--   
--   <a>$sel:httpStatus:ListNamespacesResponse'</a>,
--   <a>listNamespacesResponse_httpStatus</a> - The response's http status
--   code.
newListNamespacesResponse :: Int -> ListNamespacesResponse

-- | An array that contains one <tt>NamespaceSummary</tt> object for each
--   namespace that matches the specified filter criteria.
listNamespacesResponse_namespaces :: Lens' ListNamespacesResponse (Maybe [NamespaceSummary])

-- | If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListNamespaces</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> namespaces and then filters them
--   based on the specified criteria. It's possible that no namespaces in
--   the first <tt>MaxResults</tt> namespaces matched the specified
--   criteria but that subsequent groups of <tt>MaxResults</tt> namespaces
--   do contain namespaces that match the criteria.
listNamespacesResponse_nextToken :: Lens' ListNamespacesResponse (Maybe Text)

-- | The response's http status code.
listNamespacesResponse_httpStatus :: Lens' ListNamespacesResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.ListNamespaces.ListNamespaces
instance GHC.Show.Show Network.AWS.Route53AutoNaming.ListNamespaces.ListNamespaces
instance GHC.Read.Read Network.AWS.Route53AutoNaming.ListNamespaces.ListNamespaces
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.ListNamespaces.ListNamespaces
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.ListNamespaces.ListNamespacesResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.ListNamespaces.ListNamespacesResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.ListNamespaces.ListNamespacesResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.ListNamespaces.ListNamespacesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.ListNamespaces.ListNamespaces
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.ListNamespaces.ListNamespacesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53AutoNaming.ListNamespaces.ListNamespaces
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.ListNamespaces.ListNamespaces
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.ListNamespaces.ListNamespaces
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.ListNamespaces.ListNamespaces
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.ListNamespaces.ListNamespaces
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.ListNamespaces.ListNamespaces
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.ListNamespaces.ListNamespaces


-- | Lists summary information about the instances that you registered by
--   using a specified service.
--   
--   This operation returns paginated results.
module Network.AWS.Route53AutoNaming.ListInstances

-- | <i>See:</i> <a>newListInstances</a> smart constructor.
data ListInstances
ListInstances' :: Maybe Text -> Maybe Natural -> Text -> ListInstances

-- | For the first <tt>ListInstances</tt> request, omit this value.
--   
--   If more than <tt>MaxResults</tt> instances match the specified
--   criteria, you can submit another <tt>ListInstances</tt> request to get
--   the next group of results. Specify the value of <tt>NextToken</tt>
--   from the previous response in the next request.
[$sel:nextToken:ListInstances'] :: ListInstances -> Maybe Text

-- | The maximum number of instances that you want Cloud Map to return in
--   the response to a <tt>ListInstances</tt> request. If you don't specify
--   a value for <tt>MaxResults</tt>, Cloud Map returns up to 100
--   instances.
[$sel:maxResults:ListInstances'] :: ListInstances -> Maybe Natural

-- | The ID of the service that you want to list instances for.
[$sel:serviceId:ListInstances'] :: ListInstances -> Text

-- | Create a value of <a>ListInstances</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListInstances'</a>, <a>listInstances_nextToken</a> -
--   For the first <tt>ListInstances</tt> request, omit this value.
--   
--   If more than <tt>MaxResults</tt> instances match the specified
--   criteria, you can submit another <tt>ListInstances</tt> request to get
--   the next group of results. Specify the value of <tt>NextToken</tt>
--   from the previous response in the next request.
--   
--   <a>$sel:maxResults:ListInstances'</a>, <a>listInstances_maxResults</a>
--   - The maximum number of instances that you want Cloud Map to return in
--   the response to a <tt>ListInstances</tt> request. If you don't specify
--   a value for <tt>MaxResults</tt>, Cloud Map returns up to 100
--   instances.
--   
--   <a>$sel:serviceId:ListInstances'</a>, <a>listInstances_serviceId</a> -
--   The ID of the service that you want to list instances for.
newListInstances :: Text -> ListInstances

-- | For the first <tt>ListInstances</tt> request, omit this value.
--   
--   If more than <tt>MaxResults</tt> instances match the specified
--   criteria, you can submit another <tt>ListInstances</tt> request to get
--   the next group of results. Specify the value of <tt>NextToken</tt>
--   from the previous response in the next request.
listInstances_nextToken :: Lens' ListInstances (Maybe Text)

-- | The maximum number of instances that you want Cloud Map to return in
--   the response to a <tt>ListInstances</tt> request. If you don't specify
--   a value for <tt>MaxResults</tt>, Cloud Map returns up to 100
--   instances.
listInstances_maxResults :: Lens' ListInstances (Maybe Natural)

-- | The ID of the service that you want to list instances for.
listInstances_serviceId :: Lens' ListInstances Text

-- | <i>See:</i> <a>newListInstancesResponse</a> smart constructor.
data ListInstancesResponse
ListInstancesResponse' :: Maybe Text -> Maybe [InstanceSummary] -> Int -> ListInstancesResponse

-- | If more than <tt>MaxResults</tt> instances match the specified
--   criteria, you can submit another <tt>ListInstances</tt> request to get
--   the next group of results. Specify the value of <tt>NextToken</tt>
--   from the previous response in the next request.
[$sel:nextToken:ListInstancesResponse'] :: ListInstancesResponse -> Maybe Text

-- | Summary information about the instances that are associated with the
--   specified service.
[$sel:instances:ListInstancesResponse'] :: ListInstancesResponse -> Maybe [InstanceSummary]

-- | The response's http status code.
[$sel:httpStatus:ListInstancesResponse'] :: ListInstancesResponse -> Int

-- | Create a value of <a>ListInstancesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListInstances'</a>,
--   <a>listInstancesResponse_nextToken</a> - If more than
--   <tt>MaxResults</tt> instances match the specified criteria, you can
--   submit another <tt>ListInstances</tt> request to get the next group of
--   results. Specify the value of <tt>NextToken</tt> from the previous
--   response in the next request.
--   
--   <a>$sel:instances:ListInstancesResponse'</a>,
--   <a>listInstancesResponse_instances</a> - Summary information about the
--   instances that are associated with the specified service.
--   
--   <a>$sel:httpStatus:ListInstancesResponse'</a>,
--   <a>listInstancesResponse_httpStatus</a> - The response's http status
--   code.
newListInstancesResponse :: Int -> ListInstancesResponse

-- | If more than <tt>MaxResults</tt> instances match the specified
--   criteria, you can submit another <tt>ListInstances</tt> request to get
--   the next group of results. Specify the value of <tt>NextToken</tt>
--   from the previous response in the next request.
listInstancesResponse_nextToken :: Lens' ListInstancesResponse (Maybe Text)

-- | Summary information about the instances that are associated with the
--   specified service.
listInstancesResponse_instances :: Lens' ListInstancesResponse (Maybe [InstanceSummary])

-- | The response's http status code.
listInstancesResponse_httpStatus :: Lens' ListInstancesResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.ListInstances.ListInstances
instance GHC.Show.Show Network.AWS.Route53AutoNaming.ListInstances.ListInstances
instance GHC.Read.Read Network.AWS.Route53AutoNaming.ListInstances.ListInstances
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.ListInstances.ListInstances
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.ListInstances.ListInstancesResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.ListInstances.ListInstancesResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.ListInstances.ListInstancesResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.ListInstances.ListInstancesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.ListInstances.ListInstances
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.ListInstances.ListInstancesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53AutoNaming.ListInstances.ListInstances
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.ListInstances.ListInstances
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.ListInstances.ListInstances
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.ListInstances.ListInstances
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.ListInstances.ListInstances
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.ListInstances.ListInstances
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.ListInstances.ListInstances


-- | Gets the settings for a specified service.
module Network.AWS.Route53AutoNaming.GetService

-- | <i>See:</i> <a>newGetService</a> smart constructor.
data GetService
GetService' :: Text -> GetService

-- | The ID of the service that you want to get settings for.
[$sel:id:GetService'] :: GetService -> Text

-- | Create a value of <a>GetService</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:GetService'</a>, <a>getService_id</a> - The ID of the
--   service that you want to get settings for.
newGetService :: Text -> GetService

-- | The ID of the service that you want to get settings for.
getService_id :: Lens' GetService Text

-- | <i>See:</i> <a>newGetServiceResponse</a> smart constructor.
data GetServiceResponse
GetServiceResponse' :: Maybe ServiceInfo -> Int -> GetServiceResponse

-- | A complex type that contains information about the service.
[$sel:service:GetServiceResponse'] :: GetServiceResponse -> Maybe ServiceInfo

-- | The response's http status code.
[$sel:httpStatus:GetServiceResponse'] :: GetServiceResponse -> Int

-- | Create a value of <a>GetServiceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:service:GetServiceResponse'</a>,
--   <a>getServiceResponse_service</a> - A complex type that contains
--   information about the service.
--   
--   <a>$sel:httpStatus:GetServiceResponse'</a>,
--   <a>getServiceResponse_httpStatus</a> - The response's http status
--   code.
newGetServiceResponse :: Int -> GetServiceResponse

-- | A complex type that contains information about the service.
getServiceResponse_service :: Lens' GetServiceResponse (Maybe ServiceInfo)

-- | The response's http status code.
getServiceResponse_httpStatus :: Lens' GetServiceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.GetService.GetService
instance GHC.Show.Show Network.AWS.Route53AutoNaming.GetService.GetService
instance GHC.Read.Read Network.AWS.Route53AutoNaming.GetService.GetService
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.GetService.GetService
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.GetService.GetServiceResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.GetService.GetServiceResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.GetService.GetServiceResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.GetService.GetServiceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.GetService.GetService
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.GetService.GetServiceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.GetService.GetService
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.GetService.GetService
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.GetService.GetService
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.GetService.GetService
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.GetService.GetService
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.GetService.GetService


-- | Gets information about any operation that returns an operation ID in
--   the response, such as a <tt>CreateService</tt> request.
--   
--   To get a list of operations that match specified criteria, see
--   <a>ListOperations</a>.
module Network.AWS.Route53AutoNaming.GetOperation

-- | <i>See:</i> <a>newGetOperation</a> smart constructor.
data GetOperation
GetOperation' :: Text -> GetOperation

-- | The ID of the operation that you want to get more information about.
[$sel:operationId:GetOperation'] :: GetOperation -> Text

-- | Create a value of <a>GetOperation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:GetOperation'</a>, <a>getOperation_operationId</a>
--   - The ID of the operation that you want to get more information about.
newGetOperation :: Text -> GetOperation

-- | The ID of the operation that you want to get more information about.
getOperation_operationId :: Lens' GetOperation Text

-- | <i>See:</i> <a>newGetOperationResponse</a> smart constructor.
data GetOperationResponse
GetOperationResponse' :: Maybe Operation -> Int -> GetOperationResponse

-- | A complex type that contains information about the operation.
[$sel:operation:GetOperationResponse'] :: GetOperationResponse -> Maybe Operation

-- | The response's http status code.
[$sel:httpStatus:GetOperationResponse'] :: GetOperationResponse -> Int

-- | Create a value of <a>GetOperationResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operation:GetOperationResponse'</a>,
--   <a>getOperationResponse_operation</a> - A complex type that contains
--   information about the operation.
--   
--   <a>$sel:httpStatus:GetOperationResponse'</a>,
--   <a>getOperationResponse_httpStatus</a> - The response's http status
--   code.
newGetOperationResponse :: Int -> GetOperationResponse

-- | A complex type that contains information about the operation.
getOperationResponse_operation :: Lens' GetOperationResponse (Maybe Operation)

-- | The response's http status code.
getOperationResponse_httpStatus :: Lens' GetOperationResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.GetOperation.GetOperation
instance GHC.Show.Show Network.AWS.Route53AutoNaming.GetOperation.GetOperation
instance GHC.Read.Read Network.AWS.Route53AutoNaming.GetOperation.GetOperation
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.GetOperation.GetOperation
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.GetOperation.GetOperationResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.GetOperation.GetOperationResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.GetOperation.GetOperationResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.GetOperation.GetOperationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.GetOperation.GetOperation
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.GetOperation.GetOperationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.GetOperation.GetOperation
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.GetOperation.GetOperation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.GetOperation.GetOperation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.GetOperation.GetOperation
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.GetOperation.GetOperation
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.GetOperation.GetOperation


-- | Gets information about a namespace.
module Network.AWS.Route53AutoNaming.GetNamespace

-- | <i>See:</i> <a>newGetNamespace</a> smart constructor.
data GetNamespace
GetNamespace' :: Text -> GetNamespace

-- | The ID of the namespace that you want to get information about.
[$sel:id:GetNamespace'] :: GetNamespace -> Text

-- | Create a value of <a>GetNamespace</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:GetNamespace'</a>, <a>getNamespace_id</a> - The ID of the
--   namespace that you want to get information about.
newGetNamespace :: Text -> GetNamespace

-- | The ID of the namespace that you want to get information about.
getNamespace_id :: Lens' GetNamespace Text

-- | <i>See:</i> <a>newGetNamespaceResponse</a> smart constructor.
data GetNamespaceResponse
GetNamespaceResponse' :: Maybe Namespace -> Int -> GetNamespaceResponse

-- | A complex type that contains information about the specified
--   namespace.
[$sel:namespace:GetNamespaceResponse'] :: GetNamespaceResponse -> Maybe Namespace

-- | The response's http status code.
[$sel:httpStatus:GetNamespaceResponse'] :: GetNamespaceResponse -> Int

-- | Create a value of <a>GetNamespaceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:GetNamespaceResponse'</a>,
--   <a>getNamespaceResponse_namespace</a> - A complex type that contains
--   information about the specified namespace.
--   
--   <a>$sel:httpStatus:GetNamespaceResponse'</a>,
--   <a>getNamespaceResponse_httpStatus</a> - The response's http status
--   code.
newGetNamespaceResponse :: Int -> GetNamespaceResponse

-- | A complex type that contains information about the specified
--   namespace.
getNamespaceResponse_namespace :: Lens' GetNamespaceResponse (Maybe Namespace)

-- | The response's http status code.
getNamespaceResponse_httpStatus :: Lens' GetNamespaceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.GetNamespace.GetNamespace
instance GHC.Show.Show Network.AWS.Route53AutoNaming.GetNamespace.GetNamespace
instance GHC.Read.Read Network.AWS.Route53AutoNaming.GetNamespace.GetNamespace
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.GetNamespace.GetNamespace
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.GetNamespace.GetNamespaceResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.GetNamespace.GetNamespaceResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.GetNamespace.GetNamespaceResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.GetNamespace.GetNamespaceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.GetNamespace.GetNamespace
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.GetNamespace.GetNamespaceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.GetNamespace.GetNamespace
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.GetNamespace.GetNamespace
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.GetNamespace.GetNamespace
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.GetNamespace.GetNamespace
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.GetNamespace.GetNamespace
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.GetNamespace.GetNamespace


-- | Gets the current health status (<tt>Healthy</tt>, <tt>Unhealthy</tt>,
--   or <tt>Unknown</tt>) of one or more instances that are associated with
--   a specified service.
--   
--   There's a brief delay between when you register an instance and when
--   the health status for the instance is available.
module Network.AWS.Route53AutoNaming.GetInstancesHealthStatus

-- | <i>See:</i> <a>newGetInstancesHealthStatus</a> smart constructor.
data GetInstancesHealthStatus
GetInstancesHealthStatus' :: Maybe Text -> Maybe (NonEmpty Text) -> Maybe Natural -> Text -> GetInstancesHealthStatus

-- | For the first <tt>GetInstancesHealthStatus</tt> request, omit this
--   value.
--   
--   If more than <tt>MaxResults</tt> instances match the specified
--   criteria, you can submit another <tt>GetInstancesHealthStatus</tt>
--   request to get the next group of results. Specify the value of
--   <tt>NextToken</tt> from the previous response in the next request.
[$sel:nextToken:GetInstancesHealthStatus'] :: GetInstancesHealthStatus -> Maybe Text

-- | An array that contains the IDs of all the instances that you want to
--   get the health status for.
--   
--   If you omit <tt>Instances</tt>, Cloud Map returns the health status
--   for all the instances that are associated with the specified service.
--   
--   To get the IDs for the instances that you've registered by using a
--   specified service, submit a <a>ListInstances</a> request.
[$sel:instances:GetInstancesHealthStatus'] :: GetInstancesHealthStatus -> Maybe (NonEmpty Text)

-- | The maximum number of instances that you want Cloud Map to return in
--   the response to a <tt>GetInstancesHealthStatus</tt> request. If you
--   don't specify a value for <tt>MaxResults</tt>, Cloud Map returns up to
--   100 instances.
[$sel:maxResults:GetInstancesHealthStatus'] :: GetInstancesHealthStatus -> Maybe Natural

-- | The ID of the service that the instance is associated with.
[$sel:serviceId:GetInstancesHealthStatus'] :: GetInstancesHealthStatus -> Text

-- | Create a value of <a>GetInstancesHealthStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetInstancesHealthStatus'</a>,
--   <a>getInstancesHealthStatus_nextToken</a> - For the first
--   <tt>GetInstancesHealthStatus</tt> request, omit this value.
--   
--   If more than <tt>MaxResults</tt> instances match the specified
--   criteria, you can submit another <tt>GetInstancesHealthStatus</tt>
--   request to get the next group of results. Specify the value of
--   <tt>NextToken</tt> from the previous response in the next request.
--   
--   <a>$sel:instances:GetInstancesHealthStatus'</a>,
--   <a>getInstancesHealthStatus_instances</a> - An array that contains the
--   IDs of all the instances that you want to get the health status for.
--   
--   If you omit <tt>Instances</tt>, Cloud Map returns the health status
--   for all the instances that are associated with the specified service.
--   
--   To get the IDs for the instances that you've registered by using a
--   specified service, submit a <a>ListInstances</a> request.
--   
--   <a>$sel:maxResults:GetInstancesHealthStatus'</a>,
--   <a>getInstancesHealthStatus_maxResults</a> - The maximum number of
--   instances that you want Cloud Map to return in the response to a
--   <tt>GetInstancesHealthStatus</tt> request. If you don't specify a
--   value for <tt>MaxResults</tt>, Cloud Map returns up to 100 instances.
--   
--   <a>$sel:serviceId:GetInstancesHealthStatus'</a>,
--   <a>getInstancesHealthStatus_serviceId</a> - The ID of the service that
--   the instance is associated with.
newGetInstancesHealthStatus :: Text -> GetInstancesHealthStatus

-- | For the first <tt>GetInstancesHealthStatus</tt> request, omit this
--   value.
--   
--   If more than <tt>MaxResults</tt> instances match the specified
--   criteria, you can submit another <tt>GetInstancesHealthStatus</tt>
--   request to get the next group of results. Specify the value of
--   <tt>NextToken</tt> from the previous response in the next request.
getInstancesHealthStatus_nextToken :: Lens' GetInstancesHealthStatus (Maybe Text)

-- | An array that contains the IDs of all the instances that you want to
--   get the health status for.
--   
--   If you omit <tt>Instances</tt>, Cloud Map returns the health status
--   for all the instances that are associated with the specified service.
--   
--   To get the IDs for the instances that you've registered by using a
--   specified service, submit a <a>ListInstances</a> request.
getInstancesHealthStatus_instances :: Lens' GetInstancesHealthStatus (Maybe (NonEmpty Text))

-- | The maximum number of instances that you want Cloud Map to return in
--   the response to a <tt>GetInstancesHealthStatus</tt> request. If you
--   don't specify a value for <tt>MaxResults</tt>, Cloud Map returns up to
--   100 instances.
getInstancesHealthStatus_maxResults :: Lens' GetInstancesHealthStatus (Maybe Natural)

-- | The ID of the service that the instance is associated with.
getInstancesHealthStatus_serviceId :: Lens' GetInstancesHealthStatus Text

-- | <i>See:</i> <a>newGetInstancesHealthStatusResponse</a> smart
--   constructor.
data GetInstancesHealthStatusResponse
GetInstancesHealthStatusResponse' :: Maybe (HashMap Text HealthStatus) -> Maybe Text -> Int -> GetInstancesHealthStatusResponse

-- | A complex type that contains the IDs and the health status of the
--   instances that you specified in the <tt>GetInstancesHealthStatus</tt>
--   request.
[$sel:status:GetInstancesHealthStatusResponse'] :: GetInstancesHealthStatusResponse -> Maybe (HashMap Text HealthStatus)

-- | If more than <tt>MaxResults</tt> instances match the specified
--   criteria, you can submit another <tt>GetInstancesHealthStatus</tt>
--   request to get the next group of results. Specify the value of
--   <tt>NextToken</tt> from the previous response in the next request.
[$sel:nextToken:GetInstancesHealthStatusResponse'] :: GetInstancesHealthStatusResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetInstancesHealthStatusResponse'] :: GetInstancesHealthStatusResponse -> Int

-- | Create a value of <a>GetInstancesHealthStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetInstancesHealthStatusResponse'</a>,
--   <a>getInstancesHealthStatusResponse_status</a> - A complex type that
--   contains the IDs and the health status of the instances that you
--   specified in the <tt>GetInstancesHealthStatus</tt> request.
--   
--   <a>$sel:nextToken:GetInstancesHealthStatus'</a>,
--   <a>getInstancesHealthStatusResponse_nextToken</a> - If more than
--   <tt>MaxResults</tt> instances match the specified criteria, you can
--   submit another <tt>GetInstancesHealthStatus</tt> request to get the
--   next group of results. Specify the value of <tt>NextToken</tt> from
--   the previous response in the next request.
--   
--   <a>$sel:httpStatus:GetInstancesHealthStatusResponse'</a>,
--   <a>getInstancesHealthStatusResponse_httpStatus</a> - The response's
--   http status code.
newGetInstancesHealthStatusResponse :: Int -> GetInstancesHealthStatusResponse

-- | A complex type that contains the IDs and the health status of the
--   instances that you specified in the <tt>GetInstancesHealthStatus</tt>
--   request.
getInstancesHealthStatusResponse_status :: Lens' GetInstancesHealthStatusResponse (Maybe (HashMap Text HealthStatus))

-- | If more than <tt>MaxResults</tt> instances match the specified
--   criteria, you can submit another <tt>GetInstancesHealthStatus</tt>
--   request to get the next group of results. Specify the value of
--   <tt>NextToken</tt> from the previous response in the next request.
getInstancesHealthStatusResponse_nextToken :: Lens' GetInstancesHealthStatusResponse (Maybe Text)

-- | The response's http status code.
getInstancesHealthStatusResponse_httpStatus :: Lens' GetInstancesHealthStatusResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.GetInstancesHealthStatus.GetInstancesHealthStatus
instance GHC.Show.Show Network.AWS.Route53AutoNaming.GetInstancesHealthStatus.GetInstancesHealthStatus
instance GHC.Read.Read Network.AWS.Route53AutoNaming.GetInstancesHealthStatus.GetInstancesHealthStatus
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.GetInstancesHealthStatus.GetInstancesHealthStatus
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.GetInstancesHealthStatus.GetInstancesHealthStatusResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.GetInstancesHealthStatus.GetInstancesHealthStatusResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.GetInstancesHealthStatus.GetInstancesHealthStatusResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.GetInstancesHealthStatus.GetInstancesHealthStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.GetInstancesHealthStatus.GetInstancesHealthStatus
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.GetInstancesHealthStatus.GetInstancesHealthStatusResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.GetInstancesHealthStatus.GetInstancesHealthStatus
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.GetInstancesHealthStatus.GetInstancesHealthStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.GetInstancesHealthStatus.GetInstancesHealthStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.GetInstancesHealthStatus.GetInstancesHealthStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.GetInstancesHealthStatus.GetInstancesHealthStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.GetInstancesHealthStatus.GetInstancesHealthStatus


-- | Gets information about a specified instance.
module Network.AWS.Route53AutoNaming.GetInstance

-- | <i>See:</i> <a>newGetInstance</a> smart constructor.
data GetInstance
GetInstance' :: Text -> Text -> GetInstance

-- | The ID of the service that the instance is associated with.
[$sel:serviceId:GetInstance'] :: GetInstance -> Text

-- | The ID of the instance that you want to get information about.
[$sel:instanceId:GetInstance'] :: GetInstance -> Text

-- | Create a value of <a>GetInstance</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceId:GetInstance'</a>, <a>getInstance_serviceId</a> - The
--   ID of the service that the instance is associated with.
--   
--   <a>$sel:instanceId:GetInstance'</a>, <a>getInstance_instanceId</a> -
--   The ID of the instance that you want to get information about.
newGetInstance :: Text -> Text -> GetInstance

-- | The ID of the service that the instance is associated with.
getInstance_serviceId :: Lens' GetInstance Text

-- | The ID of the instance that you want to get information about.
getInstance_instanceId :: Lens' GetInstance Text

-- | <i>See:</i> <a>newGetInstanceResponse</a> smart constructor.
data GetInstanceResponse
GetInstanceResponse' :: Maybe Instance -> Int -> GetInstanceResponse

-- | A complex type that contains information about a specified instance.
[$sel:instance':GetInstanceResponse'] :: GetInstanceResponse -> Maybe Instance

-- | The response's http status code.
[$sel:httpStatus:GetInstanceResponse'] :: GetInstanceResponse -> Int

-- | Create a value of <a>GetInstanceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instance':GetInstanceResponse'</a>,
--   <a>getInstanceResponse_instance</a> - A complex type that contains
--   information about a specified instance.
--   
--   <a>$sel:httpStatus:GetInstanceResponse'</a>,
--   <a>getInstanceResponse_httpStatus</a> - The response's http status
--   code.
newGetInstanceResponse :: Int -> GetInstanceResponse

-- | A complex type that contains information about a specified instance.
getInstanceResponse_instance :: Lens' GetInstanceResponse (Maybe Instance)

-- | The response's http status code.
getInstanceResponse_httpStatus :: Lens' GetInstanceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.GetInstance.GetInstance
instance GHC.Show.Show Network.AWS.Route53AutoNaming.GetInstance.GetInstance
instance GHC.Read.Read Network.AWS.Route53AutoNaming.GetInstance.GetInstance
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.GetInstance.GetInstance
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.GetInstance.GetInstanceResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.GetInstance.GetInstanceResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.GetInstance.GetInstanceResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.GetInstance.GetInstanceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.GetInstance.GetInstance
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.GetInstance.GetInstanceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.GetInstance.GetInstance
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.GetInstance.GetInstance
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.GetInstance.GetInstance
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.GetInstance.GetInstance
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.GetInstance.GetInstance
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.GetInstance.GetInstance


-- | Discovers registered instances for a specified namespace and service.
--   You can use <tt>DiscoverInstances</tt> to discover instances for any
--   type of namespace. For public and private DNS namespaces, you can also
--   use DNS queries to discover instances.
module Network.AWS.Route53AutoNaming.DiscoverInstances

-- | <i>See:</i> <a>newDiscoverInstances</a> smart constructor.
data DiscoverInstances
DiscoverInstances' :: Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Maybe HealthStatusFilter -> Maybe Natural -> Text -> Text -> DiscoverInstances

-- | Filters to scope the results based on custom attributes for the
--   instance (for example, <tt>{version=v1, az=1a}</tt>). Only instances
--   that match all the specified key-value pairs are returned.
[$sel:queryParameters:DiscoverInstances'] :: DiscoverInstances -> Maybe (HashMap Text Text)

-- | Opportunistic filters to scope the results based on custom attributes.
--   If there are instances that match both the filters specified in both
--   the <tt>QueryParameters</tt> parameter and this parameter, all of
--   these instances are returned. Otherwise, the filters are ignored, and
--   only instances that match the filters that are specified in the
--   <tt>QueryParameters</tt> parameter are returned.
[$sel:optionalParameters:DiscoverInstances'] :: DiscoverInstances -> Maybe (HashMap Text Text)

-- | The health status of the instances that you want to discover. This
--   parameter is ignored for services that don't have a health check
--   configured, and all instances are returned.
--   
--   <ul>
--   <li><i>HEALTHY</i> Returns healthy instances.</li>
--   <li><i>UNHEALTHY</i> Returns unhealthy instances.</li>
--   <li><i>ALL</i> Returns all instances.</li>
--   <li><i>HEALTHY_OR_ELSE_ALL</i> Returns healthy instances, unless none
--   are reporting a healthy state. In that case, return all instances.
--   This is also called failing open.</li>
--   </ul>
[$sel:healthStatus:DiscoverInstances'] :: DiscoverInstances -> Maybe HealthStatusFilter

-- | The maximum number of instances that you want Cloud Map to return in
--   the response to a <tt>DiscoverInstances</tt> request. If you don't
--   specify a value for <tt>MaxResults</tt>, Cloud Map returns up to 100
--   instances.
[$sel:maxResults:DiscoverInstances'] :: DiscoverInstances -> Maybe Natural

-- | The <tt>HttpName</tt> name of the namespace. It's found in the
--   <tt>HttpProperties</tt> member of the <tt>Properties</tt> member of
--   the namespace.
[$sel:namespaceName:DiscoverInstances'] :: DiscoverInstances -> Text

-- | The name of the service that you specified when you registered the
--   instance.
[$sel:serviceName:DiscoverInstances'] :: DiscoverInstances -> Text

-- | Create a value of <a>DiscoverInstances</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryParameters:DiscoverInstances'</a>,
--   <a>discoverInstances_queryParameters</a> - Filters to scope the
--   results based on custom attributes for the instance (for example,
--   <tt>{version=v1, az=1a}</tt>). Only instances that match all the
--   specified key-value pairs are returned.
--   
--   <a>$sel:optionalParameters:DiscoverInstances'</a>,
--   <a>discoverInstances_optionalParameters</a> - Opportunistic filters to
--   scope the results based on custom attributes. If there are instances
--   that match both the filters specified in both the
--   <tt>QueryParameters</tt> parameter and this parameter, all of these
--   instances are returned. Otherwise, the filters are ignored, and only
--   instances that match the filters that are specified in the
--   <tt>QueryParameters</tt> parameter are returned.
--   
--   <a>$sel:healthStatus:DiscoverInstances'</a>,
--   <a>discoverInstances_healthStatus</a> - The health status of the
--   instances that you want to discover. This parameter is ignored for
--   services that don't have a health check configured, and all instances
--   are returned.
--   
--   <ul>
--   <li><i>HEALTHY</i> Returns healthy instances.</li>
--   <li><i>UNHEALTHY</i> Returns unhealthy instances.</li>
--   <li><i>ALL</i> Returns all instances.</li>
--   <li><i>HEALTHY_OR_ELSE_ALL</i> Returns healthy instances, unless none
--   are reporting a healthy state. In that case, return all instances.
--   This is also called failing open.</li>
--   </ul>
--   
--   <a>$sel:maxResults:DiscoverInstances'</a>,
--   <a>discoverInstances_maxResults</a> - The maximum number of instances
--   that you want Cloud Map to return in the response to a
--   <tt>DiscoverInstances</tt> request. If you don't specify a value for
--   <tt>MaxResults</tt>, Cloud Map returns up to 100 instances.
--   
--   <a>$sel:namespaceName:DiscoverInstances'</a>,
--   <a>discoverInstances_namespaceName</a> - The <tt>HttpName</tt> name of
--   the namespace. It's found in the <tt>HttpProperties</tt> member of the
--   <tt>Properties</tt> member of the namespace.
--   
--   <a>$sel:serviceName:DiscoverInstances'</a>,
--   <a>discoverInstances_serviceName</a> - The name of the service that
--   you specified when you registered the instance.
newDiscoverInstances :: Text -> Text -> DiscoverInstances

-- | Filters to scope the results based on custom attributes for the
--   instance (for example, <tt>{version=v1, az=1a}</tt>). Only instances
--   that match all the specified key-value pairs are returned.
discoverInstances_queryParameters :: Lens' DiscoverInstances (Maybe (HashMap Text Text))

-- | Opportunistic filters to scope the results based on custom attributes.
--   If there are instances that match both the filters specified in both
--   the <tt>QueryParameters</tt> parameter and this parameter, all of
--   these instances are returned. Otherwise, the filters are ignored, and
--   only instances that match the filters that are specified in the
--   <tt>QueryParameters</tt> parameter are returned.
discoverInstances_optionalParameters :: Lens' DiscoverInstances (Maybe (HashMap Text Text))

-- | The health status of the instances that you want to discover. This
--   parameter is ignored for services that don't have a health check
--   configured, and all instances are returned.
--   
--   <ul>
--   <li><i>HEALTHY</i> Returns healthy instances.</li>
--   <li><i>UNHEALTHY</i> Returns unhealthy instances.</li>
--   <li><i>ALL</i> Returns all instances.</li>
--   <li><i>HEALTHY_OR_ELSE_ALL</i> Returns healthy instances, unless none
--   are reporting a healthy state. In that case, return all instances.
--   This is also called failing open.</li>
--   </ul>
discoverInstances_healthStatus :: Lens' DiscoverInstances (Maybe HealthStatusFilter)

-- | The maximum number of instances that you want Cloud Map to return in
--   the response to a <tt>DiscoverInstances</tt> request. If you don't
--   specify a value for <tt>MaxResults</tt>, Cloud Map returns up to 100
--   instances.
discoverInstances_maxResults :: Lens' DiscoverInstances (Maybe Natural)

-- | The <tt>HttpName</tt> name of the namespace. It's found in the
--   <tt>HttpProperties</tt> member of the <tt>Properties</tt> member of
--   the namespace.
discoverInstances_namespaceName :: Lens' DiscoverInstances Text

-- | The name of the service that you specified when you registered the
--   instance.
discoverInstances_serviceName :: Lens' DiscoverInstances Text

-- | <i>See:</i> <a>newDiscoverInstancesResponse</a> smart constructor.
data DiscoverInstancesResponse
DiscoverInstancesResponse' :: Maybe [HttpInstanceSummary] -> Int -> DiscoverInstancesResponse

-- | A complex type that contains one <tt>HttpInstanceSummary</tt> for each
--   registered instance.
[$sel:instances:DiscoverInstancesResponse'] :: DiscoverInstancesResponse -> Maybe [HttpInstanceSummary]

-- | The response's http status code.
[$sel:httpStatus:DiscoverInstancesResponse'] :: DiscoverInstancesResponse -> Int

-- | Create a value of <a>DiscoverInstancesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instances:DiscoverInstancesResponse'</a>,
--   <a>discoverInstancesResponse_instances</a> - A complex type that
--   contains one <tt>HttpInstanceSummary</tt> for each registered
--   instance.
--   
--   <a>$sel:httpStatus:DiscoverInstancesResponse'</a>,
--   <a>discoverInstancesResponse_httpStatus</a> - The response's http
--   status code.
newDiscoverInstancesResponse :: Int -> DiscoverInstancesResponse

-- | A complex type that contains one <tt>HttpInstanceSummary</tt> for each
--   registered instance.
discoverInstancesResponse_instances :: Lens' DiscoverInstancesResponse (Maybe [HttpInstanceSummary])

-- | The response's http status code.
discoverInstancesResponse_httpStatus :: Lens' DiscoverInstancesResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.DiscoverInstances.DiscoverInstances
instance GHC.Show.Show Network.AWS.Route53AutoNaming.DiscoverInstances.DiscoverInstances
instance GHC.Read.Read Network.AWS.Route53AutoNaming.DiscoverInstances.DiscoverInstances
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.DiscoverInstances.DiscoverInstances
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.DiscoverInstances.DiscoverInstancesResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.DiscoverInstances.DiscoverInstancesResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.DiscoverInstances.DiscoverInstancesResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.DiscoverInstances.DiscoverInstancesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.DiscoverInstances.DiscoverInstances
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.DiscoverInstances.DiscoverInstancesResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.DiscoverInstances.DiscoverInstances
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.DiscoverInstances.DiscoverInstances
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.DiscoverInstances.DiscoverInstances
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.DiscoverInstances.DiscoverInstances
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.DiscoverInstances.DiscoverInstances
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.DiscoverInstances.DiscoverInstances


-- | Deletes the Amazon Route 53 DNS records and health check, if any, that
--   Cloud Map created for the specified instance.
module Network.AWS.Route53AutoNaming.DeregisterInstance

-- | <i>See:</i> <a>newDeregisterInstance</a> smart constructor.
data DeregisterInstance
DeregisterInstance' :: Text -> Text -> DeregisterInstance

-- | The ID of the service that the instance is associated with.
[$sel:serviceId:DeregisterInstance'] :: DeregisterInstance -> Text

-- | The value that you specified for <tt>Id</tt> in the
--   <a>RegisterInstance</a> request.
[$sel:instanceId:DeregisterInstance'] :: DeregisterInstance -> Text

-- | Create a value of <a>DeregisterInstance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceId:DeregisterInstance'</a>,
--   <a>deregisterInstance_serviceId</a> - The ID of the service that the
--   instance is associated with.
--   
--   <a>$sel:instanceId:DeregisterInstance'</a>,
--   <a>deregisterInstance_instanceId</a> - The value that you specified
--   for <tt>Id</tt> in the <a>RegisterInstance</a> request.
newDeregisterInstance :: Text -> Text -> DeregisterInstance

-- | The ID of the service that the instance is associated with.
deregisterInstance_serviceId :: Lens' DeregisterInstance Text

-- | The value that you specified for <tt>Id</tt> in the
--   <a>RegisterInstance</a> request.
deregisterInstance_instanceId :: Lens' DeregisterInstance Text

-- | <i>See:</i> <a>newDeregisterInstanceResponse</a> smart constructor.
data DeregisterInstanceResponse
DeregisterInstanceResponse' :: Maybe Text -> Int -> DeregisterInstanceResponse

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
[$sel:operationId:DeregisterInstanceResponse'] :: DeregisterInstanceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeregisterInstanceResponse'] :: DeregisterInstanceResponse -> Int

-- | Create a value of <a>DeregisterInstanceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:DeregisterInstanceResponse'</a>,
--   <a>deregisterInstanceResponse_operationId</a> - A value that you can
--   use to determine whether the request completed successfully. To get
--   the status of the operation, see <a>GetOperation</a>.
--   
--   <a>$sel:httpStatus:DeregisterInstanceResponse'</a>,
--   <a>deregisterInstanceResponse_httpStatus</a> - The response's http
--   status code.
newDeregisterInstanceResponse :: Int -> DeregisterInstanceResponse

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
deregisterInstanceResponse_operationId :: Lens' DeregisterInstanceResponse (Maybe Text)

-- | The response's http status code.
deregisterInstanceResponse_httpStatus :: Lens' DeregisterInstanceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.DeregisterInstance.DeregisterInstance
instance GHC.Show.Show Network.AWS.Route53AutoNaming.DeregisterInstance.DeregisterInstance
instance GHC.Read.Read Network.AWS.Route53AutoNaming.DeregisterInstance.DeregisterInstance
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.DeregisterInstance.DeregisterInstance
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.DeregisterInstance.DeregisterInstanceResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.DeregisterInstance.DeregisterInstanceResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.DeregisterInstance.DeregisterInstanceResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.DeregisterInstance.DeregisterInstanceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.DeregisterInstance.DeregisterInstance
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.DeregisterInstance.DeregisterInstanceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.DeregisterInstance.DeregisterInstance
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.DeregisterInstance.DeregisterInstance
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.DeregisterInstance.DeregisterInstance
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.DeregisterInstance.DeregisterInstance
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.DeregisterInstance.DeregisterInstance
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.DeregisterInstance.DeregisterInstance


-- | Deletes a specified service. If the service still contains one or more
--   registered instances, the request fails.
module Network.AWS.Route53AutoNaming.DeleteService

-- | <i>See:</i> <a>newDeleteService</a> smart constructor.
data DeleteService
DeleteService' :: Text -> DeleteService

-- | The ID of the service that you want to delete.
[$sel:id:DeleteService'] :: DeleteService -> Text

-- | Create a value of <a>DeleteService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteService'</a>, <a>deleteService_id</a> - The ID of the
--   service that you want to delete.
newDeleteService :: Text -> DeleteService

-- | The ID of the service that you want to delete.
deleteService_id :: Lens' DeleteService Text

-- | <i>See:</i> <a>newDeleteServiceResponse</a> smart constructor.
data DeleteServiceResponse
DeleteServiceResponse' :: Int -> DeleteServiceResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteServiceResponse'] :: DeleteServiceResponse -> Int

-- | Create a value of <a>DeleteServiceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteServiceResponse'</a>,
--   <a>deleteServiceResponse_httpStatus</a> - The response's http status
--   code.
newDeleteServiceResponse :: Int -> DeleteServiceResponse

-- | The response's http status code.
deleteServiceResponse_httpStatus :: Lens' DeleteServiceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.DeleteService.DeleteService
instance GHC.Show.Show Network.AWS.Route53AutoNaming.DeleteService.DeleteService
instance GHC.Read.Read Network.AWS.Route53AutoNaming.DeleteService.DeleteService
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.DeleteService.DeleteService
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.DeleteService.DeleteServiceResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.DeleteService.DeleteServiceResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.DeleteService.DeleteServiceResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.DeleteService.DeleteServiceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.DeleteService.DeleteService
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.DeleteService.DeleteServiceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.DeleteService.DeleteService
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.DeleteService.DeleteService
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.DeleteService.DeleteService
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.DeleteService.DeleteService
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.DeleteService.DeleteService
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.DeleteService.DeleteService


-- | Deletes a namespace from the current account. If the namespace still
--   contains one or more services, the request fails.
module Network.AWS.Route53AutoNaming.DeleteNamespace

-- | <i>See:</i> <a>newDeleteNamespace</a> smart constructor.
data DeleteNamespace
DeleteNamespace' :: Text -> DeleteNamespace

-- | The ID of the namespace that you want to delete.
[$sel:id:DeleteNamespace'] :: DeleteNamespace -> Text

-- | Create a value of <a>DeleteNamespace</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteNamespace'</a>, <a>deleteNamespace_id</a> - The ID of
--   the namespace that you want to delete.
newDeleteNamespace :: Text -> DeleteNamespace

-- | The ID of the namespace that you want to delete.
deleteNamespace_id :: Lens' DeleteNamespace Text

-- | <i>See:</i> <a>newDeleteNamespaceResponse</a> smart constructor.
data DeleteNamespaceResponse
DeleteNamespaceResponse' :: Maybe Text -> Int -> DeleteNamespaceResponse

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
[$sel:operationId:DeleteNamespaceResponse'] :: DeleteNamespaceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteNamespaceResponse'] :: DeleteNamespaceResponse -> Int

-- | Create a value of <a>DeleteNamespaceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:DeleteNamespaceResponse'</a>,
--   <a>deleteNamespaceResponse_operationId</a> - A value that you can use
--   to determine whether the request completed successfully. To get the
--   status of the operation, see <a>GetOperation</a>.
--   
--   <a>$sel:httpStatus:DeleteNamespaceResponse'</a>,
--   <a>deleteNamespaceResponse_httpStatus</a> - The response's http status
--   code.
newDeleteNamespaceResponse :: Int -> DeleteNamespaceResponse

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
deleteNamespaceResponse_operationId :: Lens' DeleteNamespaceResponse (Maybe Text)

-- | The response's http status code.
deleteNamespaceResponse_httpStatus :: Lens' DeleteNamespaceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.DeleteNamespace.DeleteNamespace
instance GHC.Show.Show Network.AWS.Route53AutoNaming.DeleteNamespace.DeleteNamespace
instance GHC.Read.Read Network.AWS.Route53AutoNaming.DeleteNamespace.DeleteNamespace
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.DeleteNamespace.DeleteNamespace
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.DeleteNamespace.DeleteNamespaceResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.DeleteNamespace.DeleteNamespaceResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.DeleteNamespace.DeleteNamespaceResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.DeleteNamespace.DeleteNamespaceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.DeleteNamespace.DeleteNamespace
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.DeleteNamespace.DeleteNamespaceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.DeleteNamespace.DeleteNamespace
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.DeleteNamespace.DeleteNamespace
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.DeleteNamespace.DeleteNamespace
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.DeleteNamespace.DeleteNamespace
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.DeleteNamespace.DeleteNamespace
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.DeleteNamespace.DeleteNamespace


-- | Creates a service. This action defines the configuration for the
--   following entities:
--   
--   <ul>
--   <li>For public and private DNS namespaces, one of the following
--   combinations of DNS records in Amazon Route
--   53:<ul><li><pre>A</pre></li><li><pre>AAAA</pre></li><li><tt>A</tt> and
--   <tt>AAAA</tt></li><li><pre>SRV</pre></li><li><pre>CNAME</pre></li></ul></li>
--   <li>Optionally, a health check</li>
--   </ul>
--   
--   After you create the service, you can submit a <a>RegisterInstance</a>
--   request, and Cloud Map uses the values in the configuration to create
--   the specified entities.
--   
--   For the current quota on the number of instances that you can register
--   using the same namespace and using the same service, see <a>Cloud Map
--   quotas</a> in the <i>Cloud Map Developer Guide</i>.
module Network.AWS.Route53AutoNaming.CreateService

-- | <i>See:</i> <a>newCreateService</a> smart constructor.
data CreateService
CreateService' :: Maybe HealthCheckConfig -> Maybe Text -> Maybe HealthCheckCustomConfig -> Maybe Text -> Maybe ServiceTypeOption -> Maybe DnsConfig -> Maybe Text -> Maybe [Tag] -> Text -> CreateService

-- | <i>Public DNS and HTTP namespaces only.</i> A complex type that
--   contains settings for an optional Route 53 health check. If you
--   specify settings for a health check, Cloud Map associates the health
--   check with all the Route 53 DNS records that you specify in
--   <tt>DnsConfig</tt>.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   For information about the charges for health checks, see <a>Cloud Map
--   Pricing</a>.
[$sel:healthCheckConfig:CreateService'] :: CreateService -> Maybe HealthCheckConfig

-- | A unique string that identifies the request and that allows failed
--   <tt>CreateService</tt> requests to be retried without the risk of
--   running the operation twice. <tt>CreatorRequestId</tt> can be any
--   unique string (for example, a date/timestamp).
[$sel:creatorRequestId:CreateService'] :: CreateService -> Maybe Text

-- | A complex type that contains information about an optional custom
--   health check.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   You can't add, update, or delete a <tt>HealthCheckCustomConfig</tt>
--   configuration from an existing service.
[$sel:healthCheckCustomConfig:CreateService'] :: CreateService -> Maybe HealthCheckCustomConfig

-- | The ID of the namespace that you want to use to create the service.
--   The namespace ID must be specified, but it can be specified either
--   here or in the <tt>DnsConfig</tt> object.
[$sel:namespaceId:CreateService'] :: CreateService -> Maybe Text

-- | If present, specifies that the service instances are only discoverable
--   using the <tt>DiscoverInstances</tt> API operation. No DNS records is
--   registered for the service instances. The only valid value is
--   <tt>HTTP</tt>.
[$sel:type':CreateService'] :: CreateService -> Maybe ServiceTypeOption

-- | A complex type that contains information about the Amazon Route 53
--   records that you want Cloud Map to create when you register an
--   instance.
[$sel:dnsConfig:CreateService'] :: CreateService -> Maybe DnsConfig

-- | A description for the service.
[$sel:description:CreateService'] :: CreateService -> Maybe Text

-- | The tags to add to the service. Each tag consists of a key and an
--   optional value that you define. Tags keys can be up to 128 characters
--   in length, and tag values can be up to 256 characters in length.
[$sel:tags:CreateService'] :: CreateService -> Maybe [Tag]

-- | The name that you want to assign to the service.
--   
--   If you want Cloud Map to create an <tt>SRV</tt> record when you
--   register an instance and you're using a system that requires a
--   specific <tt>SRV</tt> format, such as <a>HAProxy</a>, specify the
--   following for <tt>Name</tt>:
--   
--   <ul>
--   <li>Start the name with an underscore (_), such as
--   <tt>_exampleservice</tt>.</li>
--   <li>End the name with <i>._protocol</i>, such as <tt>._tcp</tt>.</li>
--   </ul>
--   
--   When you register an instance, Cloud Map creates an <tt>SRV</tt>
--   record and assigns a name to the record by concatenating the service
--   name and the namespace name (for example,
--   
--   <tt>_exampleservice._tcp.example.com</tt>).
--   
--   For services that are accessible by DNS queries, you can't create
--   multiple services with names that differ only by case (such as EXAMPLE
--   and example). Otherwise, these services have the same DNS name and
--   can't be distinguished. However, if you use a namespace that's only
--   accessible by API calls, then you can create services that with names
--   that differ only by case.
[$sel:name:CreateService'] :: CreateService -> Text

-- | Create a value of <a>CreateService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthCheckConfig:CreateService'</a>,
--   <a>createService_healthCheckConfig</a> - <i>Public DNS and HTTP
--   namespaces only.</i> A complex type that contains settings for an
--   optional Route 53 health check. If you specify settings for a health
--   check, Cloud Map associates the health check with all the Route 53 DNS
--   records that you specify in <tt>DnsConfig</tt>.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   For information about the charges for health checks, see <a>Cloud Map
--   Pricing</a>.
--   
--   <a>$sel:creatorRequestId:CreateService'</a>,
--   <a>createService_creatorRequestId</a> - A unique string that
--   identifies the request and that allows failed <tt>CreateService</tt>
--   requests to be retried without the risk of running the operation
--   twice. <tt>CreatorRequestId</tt> can be any unique string (for
--   example, a date/timestamp).
--   
--   <a>$sel:healthCheckCustomConfig:CreateService'</a>,
--   <a>createService_healthCheckCustomConfig</a> - A complex type that
--   contains information about an optional custom health check.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   You can't add, update, or delete a <tt>HealthCheckCustomConfig</tt>
--   configuration from an existing service.
--   
--   <a>$sel:namespaceId:CreateService'</a>,
--   <a>createService_namespaceId</a> - The ID of the namespace that you
--   want to use to create the service. The namespace ID must be specified,
--   but it can be specified either here or in the <tt>DnsConfig</tt>
--   object.
--   
--   <a>$sel:type':CreateService'</a>, <a>createService_type</a> - If
--   present, specifies that the service instances are only discoverable
--   using the <tt>DiscoverInstances</tt> API operation. No DNS records is
--   registered for the service instances. The only valid value is
--   <tt>HTTP</tt>.
--   
--   <a>$sel:dnsConfig:CreateService'</a>, <a>createService_dnsConfig</a> -
--   A complex type that contains information about the Amazon Route 53
--   records that you want Cloud Map to create when you register an
--   instance.
--   
--   <a>$sel:description:CreateService'</a>,
--   <a>createService_description</a> - A description for the service.
--   
--   <a>$sel:tags:CreateService'</a>, <a>createService_tags</a> - The tags
--   to add to the service. Each tag consists of a key and an optional
--   value that you define. Tags keys can be up to 128 characters in
--   length, and tag values can be up to 256 characters in length.
--   
--   <a>$sel:name:CreateService'</a>, <a>createService_name</a> - The name
--   that you want to assign to the service.
--   
--   If you want Cloud Map to create an <tt>SRV</tt> record when you
--   register an instance and you're using a system that requires a
--   specific <tt>SRV</tt> format, such as <a>HAProxy</a>, specify the
--   following for <tt>Name</tt>:
--   
--   <ul>
--   <li>Start the name with an underscore (_), such as
--   <tt>_exampleservice</tt>.</li>
--   <li>End the name with <i>._protocol</i>, such as <tt>._tcp</tt>.</li>
--   </ul>
--   
--   When you register an instance, Cloud Map creates an <tt>SRV</tt>
--   record and assigns a name to the record by concatenating the service
--   name and the namespace name (for example,
--   
--   <tt>_exampleservice._tcp.example.com</tt>).
--   
--   For services that are accessible by DNS queries, you can't create
--   multiple services with names that differ only by case (such as EXAMPLE
--   and example). Otherwise, these services have the same DNS name and
--   can't be distinguished. However, if you use a namespace that's only
--   accessible by API calls, then you can create services that with names
--   that differ only by case.
newCreateService :: Text -> CreateService

-- | <i>Public DNS and HTTP namespaces only.</i> A complex type that
--   contains settings for an optional Route 53 health check. If you
--   specify settings for a health check, Cloud Map associates the health
--   check with all the Route 53 DNS records that you specify in
--   <tt>DnsConfig</tt>.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   For information about the charges for health checks, see <a>Cloud Map
--   Pricing</a>.
createService_healthCheckConfig :: Lens' CreateService (Maybe HealthCheckConfig)

-- | A unique string that identifies the request and that allows failed
--   <tt>CreateService</tt> requests to be retried without the risk of
--   running the operation twice. <tt>CreatorRequestId</tt> can be any
--   unique string (for example, a date/timestamp).
createService_creatorRequestId :: Lens' CreateService (Maybe Text)

-- | A complex type that contains information about an optional custom
--   health check.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   You can't add, update, or delete a <tt>HealthCheckCustomConfig</tt>
--   configuration from an existing service.
createService_healthCheckCustomConfig :: Lens' CreateService (Maybe HealthCheckCustomConfig)

-- | The ID of the namespace that you want to use to create the service.
--   The namespace ID must be specified, but it can be specified either
--   here or in the <tt>DnsConfig</tt> object.
createService_namespaceId :: Lens' CreateService (Maybe Text)

-- | If present, specifies that the service instances are only discoverable
--   using the <tt>DiscoverInstances</tt> API operation. No DNS records is
--   registered for the service instances. The only valid value is
--   <tt>HTTP</tt>.
createService_type :: Lens' CreateService (Maybe ServiceTypeOption)

-- | A complex type that contains information about the Amazon Route 53
--   records that you want Cloud Map to create when you register an
--   instance.
createService_dnsConfig :: Lens' CreateService (Maybe DnsConfig)

-- | A description for the service.
createService_description :: Lens' CreateService (Maybe Text)

-- | The tags to add to the service. Each tag consists of a key and an
--   optional value that you define. Tags keys can be up to 128 characters
--   in length, and tag values can be up to 256 characters in length.
createService_tags :: Lens' CreateService (Maybe [Tag])

-- | The name that you want to assign to the service.
--   
--   If you want Cloud Map to create an <tt>SRV</tt> record when you
--   register an instance and you're using a system that requires a
--   specific <tt>SRV</tt> format, such as <a>HAProxy</a>, specify the
--   following for <tt>Name</tt>:
--   
--   <ul>
--   <li>Start the name with an underscore (_), such as
--   <tt>_exampleservice</tt>.</li>
--   <li>End the name with <i>._protocol</i>, such as <tt>._tcp</tt>.</li>
--   </ul>
--   
--   When you register an instance, Cloud Map creates an <tt>SRV</tt>
--   record and assigns a name to the record by concatenating the service
--   name and the namespace name (for example,
--   
--   <tt>_exampleservice._tcp.example.com</tt>).
--   
--   For services that are accessible by DNS queries, you can't create
--   multiple services with names that differ only by case (such as EXAMPLE
--   and example). Otherwise, these services have the same DNS name and
--   can't be distinguished. However, if you use a namespace that's only
--   accessible by API calls, then you can create services that with names
--   that differ only by case.
createService_name :: Lens' CreateService Text

-- | <i>See:</i> <a>newCreateServiceResponse</a> smart constructor.
data CreateServiceResponse
CreateServiceResponse' :: Maybe ServiceInfo -> Int -> CreateServiceResponse

-- | A complex type that contains information about the new service.
[$sel:service:CreateServiceResponse'] :: CreateServiceResponse -> Maybe ServiceInfo

-- | The response's http status code.
[$sel:httpStatus:CreateServiceResponse'] :: CreateServiceResponse -> Int

-- | Create a value of <a>CreateServiceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:service:CreateServiceResponse'</a>,
--   <a>createServiceResponse_service</a> - A complex type that contains
--   information about the new service.
--   
--   <a>$sel:httpStatus:CreateServiceResponse'</a>,
--   <a>createServiceResponse_httpStatus</a> - The response's http status
--   code.
newCreateServiceResponse :: Int -> CreateServiceResponse

-- | A complex type that contains information about the new service.
createServiceResponse_service :: Lens' CreateServiceResponse (Maybe ServiceInfo)

-- | The response's http status code.
createServiceResponse_httpStatus :: Lens' CreateServiceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.CreateService.CreateService
instance GHC.Show.Show Network.AWS.Route53AutoNaming.CreateService.CreateService
instance GHC.Read.Read Network.AWS.Route53AutoNaming.CreateService.CreateService
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.CreateService.CreateService
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.CreateService.CreateServiceResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.CreateService.CreateServiceResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.CreateService.CreateServiceResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.CreateService.CreateServiceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.CreateService.CreateService
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.CreateService.CreateServiceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.CreateService.CreateService
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.CreateService.CreateService
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.CreateService.CreateService
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.CreateService.CreateService
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.CreateService.CreateService
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.CreateService.CreateService


-- | Creates a public namespace based on DNS, which is visible on the
--   internet. The namespace defines your service naming scheme. For
--   example, if you name your namespace <tt>example.com</tt> and name your
--   service <tt>backend</tt>, the resulting DNS name for the service is
--   <tt>backend.example.com</tt>. You can discover instances that were
--   registered with a public DNS namespace by using either a
--   <tt>DiscoverInstances</tt> request or using DNS. For the current quota
--   on the number of namespaces that you can create using the same
--   account, see <a>Cloud Map quotas</a> in the <i>Cloud Map Developer
--   Guide</i>.
module Network.AWS.Route53AutoNaming.CreatePublicDnsNamespace

-- | <i>See:</i> <a>newCreatePublicDnsNamespace</a> smart constructor.
data CreatePublicDnsNamespace
CreatePublicDnsNamespace' :: Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe PublicDnsNamespaceProperties -> Text -> CreatePublicDnsNamespace

-- | A unique string that identifies the request and that allows failed
--   <tt>CreatePublicDnsNamespace</tt> requests to be retried without the
--   risk of running the operation twice. <tt>CreatorRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
[$sel:creatorRequestId:CreatePublicDnsNamespace'] :: CreatePublicDnsNamespace -> Maybe Text

-- | A description for the namespace.
[$sel:description:CreatePublicDnsNamespace'] :: CreatePublicDnsNamespace -> Maybe Text

-- | The tags to add to the namespace. Each tag consists of a key and an
--   optional value that you define. Tags keys can be up to 128 characters
--   in length, and tag values can be up to 256 characters in length.
[$sel:tags:CreatePublicDnsNamespace'] :: CreatePublicDnsNamespace -> Maybe [Tag]

-- | Properties for the public DNS namespace.
[$sel:properties:CreatePublicDnsNamespace'] :: CreatePublicDnsNamespace -> Maybe PublicDnsNamespaceProperties

-- | The name that you want to assign to this namespace.
[$sel:name:CreatePublicDnsNamespace'] :: CreatePublicDnsNamespace -> Text

-- | Create a value of <a>CreatePublicDnsNamespace</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creatorRequestId:CreatePublicDnsNamespace'</a>,
--   <a>createPublicDnsNamespace_creatorRequestId</a> - A unique string
--   that identifies the request and that allows failed
--   <tt>CreatePublicDnsNamespace</tt> requests to be retried without the
--   risk of running the operation twice. <tt>CreatorRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
--   
--   <a>$sel:description:CreatePublicDnsNamespace'</a>,
--   <a>createPublicDnsNamespace_description</a> - A description for the
--   namespace.
--   
--   <a>$sel:tags:CreatePublicDnsNamespace'</a>,
--   <a>createPublicDnsNamespace_tags</a> - The tags to add to the
--   namespace. Each tag consists of a key and an optional value that you
--   define. Tags keys can be up to 128 characters in length, and tag
--   values can be up to 256 characters in length.
--   
--   <a>$sel:properties:CreatePublicDnsNamespace'</a>,
--   <a>createPublicDnsNamespace_properties</a> - Properties for the public
--   DNS namespace.
--   
--   <a>$sel:name:CreatePublicDnsNamespace'</a>,
--   <a>createPublicDnsNamespace_name</a> - The name that you want to
--   assign to this namespace.
newCreatePublicDnsNamespace :: Text -> CreatePublicDnsNamespace

-- | A unique string that identifies the request and that allows failed
--   <tt>CreatePublicDnsNamespace</tt> requests to be retried without the
--   risk of running the operation twice. <tt>CreatorRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
createPublicDnsNamespace_creatorRequestId :: Lens' CreatePublicDnsNamespace (Maybe Text)

-- | A description for the namespace.
createPublicDnsNamespace_description :: Lens' CreatePublicDnsNamespace (Maybe Text)

-- | The tags to add to the namespace. Each tag consists of a key and an
--   optional value that you define. Tags keys can be up to 128 characters
--   in length, and tag values can be up to 256 characters in length.
createPublicDnsNamespace_tags :: Lens' CreatePublicDnsNamespace (Maybe [Tag])

-- | Properties for the public DNS namespace.
createPublicDnsNamespace_properties :: Lens' CreatePublicDnsNamespace (Maybe PublicDnsNamespaceProperties)

-- | The name that you want to assign to this namespace.
createPublicDnsNamespace_name :: Lens' CreatePublicDnsNamespace Text

-- | <i>See:</i> <a>newCreatePublicDnsNamespaceResponse</a> smart
--   constructor.
data CreatePublicDnsNamespaceResponse
CreatePublicDnsNamespaceResponse' :: Maybe Text -> Int -> CreatePublicDnsNamespaceResponse

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
[$sel:operationId:CreatePublicDnsNamespaceResponse'] :: CreatePublicDnsNamespaceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreatePublicDnsNamespaceResponse'] :: CreatePublicDnsNamespaceResponse -> Int

-- | Create a value of <a>CreatePublicDnsNamespaceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:CreatePublicDnsNamespaceResponse'</a>,
--   <a>createPublicDnsNamespaceResponse_operationId</a> - A value that you
--   can use to determine whether the request completed successfully. To
--   get the status of the operation, see <a>GetOperation</a>.
--   
--   <a>$sel:httpStatus:CreatePublicDnsNamespaceResponse'</a>,
--   <a>createPublicDnsNamespaceResponse_httpStatus</a> - The response's
--   http status code.
newCreatePublicDnsNamespaceResponse :: Int -> CreatePublicDnsNamespaceResponse

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
createPublicDnsNamespaceResponse_operationId :: Lens' CreatePublicDnsNamespaceResponse (Maybe Text)

-- | The response's http status code.
createPublicDnsNamespaceResponse_httpStatus :: Lens' CreatePublicDnsNamespaceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.CreatePublicDnsNamespace.CreatePublicDnsNamespace
instance GHC.Show.Show Network.AWS.Route53AutoNaming.CreatePublicDnsNamespace.CreatePublicDnsNamespace
instance GHC.Read.Read Network.AWS.Route53AutoNaming.CreatePublicDnsNamespace.CreatePublicDnsNamespace
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.CreatePublicDnsNamespace.CreatePublicDnsNamespace
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.CreatePublicDnsNamespace.CreatePublicDnsNamespaceResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.CreatePublicDnsNamespace.CreatePublicDnsNamespaceResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.CreatePublicDnsNamespace.CreatePublicDnsNamespaceResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.CreatePublicDnsNamespace.CreatePublicDnsNamespaceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.CreatePublicDnsNamespace.CreatePublicDnsNamespace
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.CreatePublicDnsNamespace.CreatePublicDnsNamespaceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.CreatePublicDnsNamespace.CreatePublicDnsNamespace
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.CreatePublicDnsNamespace.CreatePublicDnsNamespace
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.CreatePublicDnsNamespace.CreatePublicDnsNamespace
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.CreatePublicDnsNamespace.CreatePublicDnsNamespace
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.CreatePublicDnsNamespace.CreatePublicDnsNamespace
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.CreatePublicDnsNamespace.CreatePublicDnsNamespace


-- | Creates a private namespace based on DNS, which is visible only inside
--   a specified Amazon VPC. The namespace defines your service naming
--   scheme. For example, if you name your namespace <tt>example.com</tt>
--   and name your service <tt>backend</tt>, the resulting DNS name for the
--   service is <tt>backend.example.com</tt>. Service instances that are
--   registered using a private DNS namespace can be discovered using
--   either a <tt>DiscoverInstances</tt> request or using DNS. For the
--   current quota on the number of namespaces that you can create using
--   the same account, see <a>Cloud Map quotas</a> in the <i>Cloud Map
--   Developer Guide</i>.
module Network.AWS.Route53AutoNaming.CreatePrivateDnsNamespace

-- | <i>See:</i> <a>newCreatePrivateDnsNamespace</a> smart constructor.
data CreatePrivateDnsNamespace
CreatePrivateDnsNamespace' :: Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe PrivateDnsNamespaceProperties -> Text -> Text -> CreatePrivateDnsNamespace

-- | A unique string that identifies the request and that allows failed
--   <tt>CreatePrivateDnsNamespace</tt> requests to be retried without the
--   risk of running the operation twice. <tt>CreatorRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
[$sel:creatorRequestId:CreatePrivateDnsNamespace'] :: CreatePrivateDnsNamespace -> Maybe Text

-- | A description for the namespace.
[$sel:description:CreatePrivateDnsNamespace'] :: CreatePrivateDnsNamespace -> Maybe Text

-- | The tags to add to the namespace. Each tag consists of a key and an
--   optional value that you define. Tags keys can be up to 128 characters
--   in length, and tag values can be up to 256 characters in length.
[$sel:tags:CreatePrivateDnsNamespace'] :: CreatePrivateDnsNamespace -> Maybe [Tag]

-- | Properties for the private DNS namespace.
[$sel:properties:CreatePrivateDnsNamespace'] :: CreatePrivateDnsNamespace -> Maybe PrivateDnsNamespaceProperties

-- | The name that you want to assign to this namespace. When you create a
--   private DNS namespace, Cloud Map automatically creates an Amazon Route
--   53 private hosted zone that has the same name as the namespace.
[$sel:name:CreatePrivateDnsNamespace'] :: CreatePrivateDnsNamespace -> Text

-- | The ID of the Amazon VPC that you want to associate the namespace
--   with.
[$sel:vpc:CreatePrivateDnsNamespace'] :: CreatePrivateDnsNamespace -> Text

-- | Create a value of <a>CreatePrivateDnsNamespace</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creatorRequestId:CreatePrivateDnsNamespace'</a>,
--   <a>createPrivateDnsNamespace_creatorRequestId</a> - A unique string
--   that identifies the request and that allows failed
--   <tt>CreatePrivateDnsNamespace</tt> requests to be retried without the
--   risk of running the operation twice. <tt>CreatorRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
--   
--   <a>$sel:description:CreatePrivateDnsNamespace'</a>,
--   <a>createPrivateDnsNamespace_description</a> - A description for the
--   namespace.
--   
--   <a>$sel:tags:CreatePrivateDnsNamespace'</a>,
--   <a>createPrivateDnsNamespace_tags</a> - The tags to add to the
--   namespace. Each tag consists of a key and an optional value that you
--   define. Tags keys can be up to 128 characters in length, and tag
--   values can be up to 256 characters in length.
--   
--   <a>$sel:properties:CreatePrivateDnsNamespace'</a>,
--   <a>createPrivateDnsNamespace_properties</a> - Properties for the
--   private DNS namespace.
--   
--   <a>$sel:name:CreatePrivateDnsNamespace'</a>,
--   <a>createPrivateDnsNamespace_name</a> - The name that you want to
--   assign to this namespace. When you create a private DNS namespace,
--   Cloud Map automatically creates an Amazon Route 53 private hosted zone
--   that has the same name as the namespace.
--   
--   <a>$sel:vpc:CreatePrivateDnsNamespace'</a>,
--   <a>createPrivateDnsNamespace_vpc</a> - The ID of the Amazon VPC that
--   you want to associate the namespace with.
newCreatePrivateDnsNamespace :: Text -> Text -> CreatePrivateDnsNamespace

-- | A unique string that identifies the request and that allows failed
--   <tt>CreatePrivateDnsNamespace</tt> requests to be retried without the
--   risk of running the operation twice. <tt>CreatorRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
createPrivateDnsNamespace_creatorRequestId :: Lens' CreatePrivateDnsNamespace (Maybe Text)

-- | A description for the namespace.
createPrivateDnsNamespace_description :: Lens' CreatePrivateDnsNamespace (Maybe Text)

-- | The tags to add to the namespace. Each tag consists of a key and an
--   optional value that you define. Tags keys can be up to 128 characters
--   in length, and tag values can be up to 256 characters in length.
createPrivateDnsNamespace_tags :: Lens' CreatePrivateDnsNamespace (Maybe [Tag])

-- | Properties for the private DNS namespace.
createPrivateDnsNamespace_properties :: Lens' CreatePrivateDnsNamespace (Maybe PrivateDnsNamespaceProperties)

-- | The name that you want to assign to this namespace. When you create a
--   private DNS namespace, Cloud Map automatically creates an Amazon Route
--   53 private hosted zone that has the same name as the namespace.
createPrivateDnsNamespace_name :: Lens' CreatePrivateDnsNamespace Text

-- | The ID of the Amazon VPC that you want to associate the namespace
--   with.
createPrivateDnsNamespace_vpc :: Lens' CreatePrivateDnsNamespace Text

-- | <i>See:</i> <a>newCreatePrivateDnsNamespaceResponse</a> smart
--   constructor.
data CreatePrivateDnsNamespaceResponse
CreatePrivateDnsNamespaceResponse' :: Maybe Text -> Int -> CreatePrivateDnsNamespaceResponse

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
[$sel:operationId:CreatePrivateDnsNamespaceResponse'] :: CreatePrivateDnsNamespaceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreatePrivateDnsNamespaceResponse'] :: CreatePrivateDnsNamespaceResponse -> Int

-- | Create a value of <a>CreatePrivateDnsNamespaceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:CreatePrivateDnsNamespaceResponse'</a>,
--   <a>createPrivateDnsNamespaceResponse_operationId</a> - A value that
--   you can use to determine whether the request completed successfully.
--   To get the status of the operation, see <a>GetOperation</a>.
--   
--   <a>$sel:httpStatus:CreatePrivateDnsNamespaceResponse'</a>,
--   <a>createPrivateDnsNamespaceResponse_httpStatus</a> - The response's
--   http status code.
newCreatePrivateDnsNamespaceResponse :: Int -> CreatePrivateDnsNamespaceResponse

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
createPrivateDnsNamespaceResponse_operationId :: Lens' CreatePrivateDnsNamespaceResponse (Maybe Text)

-- | The response's http status code.
createPrivateDnsNamespaceResponse_httpStatus :: Lens' CreatePrivateDnsNamespaceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.CreatePrivateDnsNamespace.CreatePrivateDnsNamespace
instance GHC.Show.Show Network.AWS.Route53AutoNaming.CreatePrivateDnsNamespace.CreatePrivateDnsNamespace
instance GHC.Read.Read Network.AWS.Route53AutoNaming.CreatePrivateDnsNamespace.CreatePrivateDnsNamespace
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.CreatePrivateDnsNamespace.CreatePrivateDnsNamespace
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.CreatePrivateDnsNamespace.CreatePrivateDnsNamespaceResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.CreatePrivateDnsNamespace.CreatePrivateDnsNamespaceResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.CreatePrivateDnsNamespace.CreatePrivateDnsNamespaceResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.CreatePrivateDnsNamespace.CreatePrivateDnsNamespaceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.CreatePrivateDnsNamespace.CreatePrivateDnsNamespace
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.CreatePrivateDnsNamespace.CreatePrivateDnsNamespaceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.CreatePrivateDnsNamespace.CreatePrivateDnsNamespace
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.CreatePrivateDnsNamespace.CreatePrivateDnsNamespace
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.CreatePrivateDnsNamespace.CreatePrivateDnsNamespace
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.CreatePrivateDnsNamespace.CreatePrivateDnsNamespace
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.CreatePrivateDnsNamespace.CreatePrivateDnsNamespace
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.CreatePrivateDnsNamespace.CreatePrivateDnsNamespace


-- | Creates an HTTP namespace. Service instances registered using an HTTP
--   namespace can be discovered using a <tt>DiscoverInstances</tt> request
--   but can't be discovered using DNS.
--   
--   For the current quota on the number of namespaces that you can create
--   using the same account, see <a>Cloud Map quotas</a> in the <i>Cloud
--   Map Developer Guide</i>.
module Network.AWS.Route53AutoNaming.CreateHttpNamespace

-- | <i>See:</i> <a>newCreateHttpNamespace</a> smart constructor.
data CreateHttpNamespace
CreateHttpNamespace' :: Maybe Text -> Maybe Text -> Maybe [Tag] -> Text -> CreateHttpNamespace

-- | A unique string that identifies the request and that allows failed
--   <tt>CreateHttpNamespace</tt> requests to be retried without the risk
--   of running the operation twice. <tt>CreatorRequestId</tt> can be any
--   unique string (for example, a date/time stamp).
[$sel:creatorRequestId:CreateHttpNamespace'] :: CreateHttpNamespace -> Maybe Text

-- | A description for the namespace.
[$sel:description:CreateHttpNamespace'] :: CreateHttpNamespace -> Maybe Text

-- | The tags to add to the namespace. Each tag consists of a key and an
--   optional value that you define. Tags keys can be up to 128 characters
--   in length, and tag values can be up to 256 characters in length.
[$sel:tags:CreateHttpNamespace'] :: CreateHttpNamespace -> Maybe [Tag]

-- | The name that you want to assign to this namespace.
[$sel:name:CreateHttpNamespace'] :: CreateHttpNamespace -> Text

-- | Create a value of <a>CreateHttpNamespace</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creatorRequestId:CreateHttpNamespace'</a>,
--   <a>createHttpNamespace_creatorRequestId</a> - A unique string that
--   identifies the request and that allows failed
--   <tt>CreateHttpNamespace</tt> requests to be retried without the risk
--   of running the operation twice. <tt>CreatorRequestId</tt> can be any
--   unique string (for example, a date/time stamp).
--   
--   <a>$sel:description:CreateHttpNamespace'</a>,
--   <a>createHttpNamespace_description</a> - A description for the
--   namespace.
--   
--   <a>$sel:tags:CreateHttpNamespace'</a>, <a>createHttpNamespace_tags</a>
--   - The tags to add to the namespace. Each tag consists of a key and an
--   optional value that you define. Tags keys can be up to 128 characters
--   in length, and tag values can be up to 256 characters in length.
--   
--   <a>$sel:name:CreateHttpNamespace'</a>, <a>createHttpNamespace_name</a>
--   - The name that you want to assign to this namespace.
newCreateHttpNamespace :: Text -> CreateHttpNamespace

-- | A unique string that identifies the request and that allows failed
--   <tt>CreateHttpNamespace</tt> requests to be retried without the risk
--   of running the operation twice. <tt>CreatorRequestId</tt> can be any
--   unique string (for example, a date/time stamp).
createHttpNamespace_creatorRequestId :: Lens' CreateHttpNamespace (Maybe Text)

-- | A description for the namespace.
createHttpNamespace_description :: Lens' CreateHttpNamespace (Maybe Text)

-- | The tags to add to the namespace. Each tag consists of a key and an
--   optional value that you define. Tags keys can be up to 128 characters
--   in length, and tag values can be up to 256 characters in length.
createHttpNamespace_tags :: Lens' CreateHttpNamespace (Maybe [Tag])

-- | The name that you want to assign to this namespace.
createHttpNamespace_name :: Lens' CreateHttpNamespace Text

-- | <i>See:</i> <a>newCreateHttpNamespaceResponse</a> smart constructor.
data CreateHttpNamespaceResponse
CreateHttpNamespaceResponse' :: Maybe Text -> Int -> CreateHttpNamespaceResponse

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
[$sel:operationId:CreateHttpNamespaceResponse'] :: CreateHttpNamespaceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateHttpNamespaceResponse'] :: CreateHttpNamespaceResponse -> Int

-- | Create a value of <a>CreateHttpNamespaceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:CreateHttpNamespaceResponse'</a>,
--   <a>createHttpNamespaceResponse_operationId</a> - A value that you can
--   use to determine whether the request completed successfully. To get
--   the status of the operation, see <a>GetOperation</a>.
--   
--   <a>$sel:httpStatus:CreateHttpNamespaceResponse'</a>,
--   <a>createHttpNamespaceResponse_httpStatus</a> - The response's http
--   status code.
newCreateHttpNamespaceResponse :: Int -> CreateHttpNamespaceResponse

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
createHttpNamespaceResponse_operationId :: Lens' CreateHttpNamespaceResponse (Maybe Text)

-- | The response's http status code.
createHttpNamespaceResponse_httpStatus :: Lens' CreateHttpNamespaceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.CreateHttpNamespace.CreateHttpNamespace
instance GHC.Show.Show Network.AWS.Route53AutoNaming.CreateHttpNamespace.CreateHttpNamespace
instance GHC.Read.Read Network.AWS.Route53AutoNaming.CreateHttpNamespace.CreateHttpNamespace
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.CreateHttpNamespace.CreateHttpNamespace
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.CreateHttpNamespace.CreateHttpNamespaceResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.CreateHttpNamespace.CreateHttpNamespaceResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.CreateHttpNamespace.CreateHttpNamespaceResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.CreateHttpNamespace.CreateHttpNamespaceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.CreateHttpNamespace.CreateHttpNamespace
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.CreateHttpNamespace.CreateHttpNamespaceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.CreateHttpNamespace.CreateHttpNamespace
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.CreateHttpNamespace.CreateHttpNamespace
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.CreateHttpNamespace.CreateHttpNamespace
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.CreateHttpNamespace.CreateHttpNamespace
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.CreateHttpNamespace.CreateHttpNamespace
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.CreateHttpNamespace.CreateHttpNamespace


-- | Removes one or more tags from the specified resource.
module Network.AWS.Route53AutoNaming.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource that you want to
--   retrieve tags for.
[$sel:resourceARN:UntagResource'] :: UntagResource -> Text

-- | The tag keys to remove from the specified resource.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - The Amazon Resource Name (ARN) of
--   the resource that you want to retrieve tags for.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys to remove from the specified resource.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource that you want to
--   retrieve tags for.
untagResource_resourceARN :: Lens' UntagResource Text

-- | The tag keys to remove from the specified resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.Route53AutoNaming.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.Route53AutoNaming.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.UntagResource.UntagResource


-- | Updates an HTTP namespace.
module Network.AWS.Route53AutoNaming.UpdateHttpNamespace

-- | <i>See:</i> <a>newUpdateHttpNamespace</a> smart constructor.
data UpdateHttpNamespace
UpdateHttpNamespace' :: Maybe Text -> Text -> HttpNamespaceChange -> UpdateHttpNamespace

-- | A unique string that identifies the request and that allows failed
--   <tt>UpdateHttpNamespace</tt> requests to be retried without the risk
--   of running the operation twice. <tt>UpdaterRequestId</tt> can be any
--   unique string (for example, a date/timestamp).
[$sel:updaterRequestId:UpdateHttpNamespace'] :: UpdateHttpNamespace -> Maybe Text

-- | The ID of the namespace that you want to update.
[$sel:id:UpdateHttpNamespace'] :: UpdateHttpNamespace -> Text

-- | Updated properties for the the HTTP namespace.
[$sel:namespace:UpdateHttpNamespace'] :: UpdateHttpNamespace -> HttpNamespaceChange

-- | Create a value of <a>UpdateHttpNamespace</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:updaterRequestId:UpdateHttpNamespace'</a>,
--   <a>updateHttpNamespace_updaterRequestId</a> - A unique string that
--   identifies the request and that allows failed
--   <tt>UpdateHttpNamespace</tt> requests to be retried without the risk
--   of running the operation twice. <tt>UpdaterRequestId</tt> can be any
--   unique string (for example, a date/timestamp).
--   
--   <a>$sel:id:UpdateHttpNamespace'</a>, <a>updateHttpNamespace_id</a> -
--   The ID of the namespace that you want to update.
--   
--   <a>$sel:namespace:UpdateHttpNamespace'</a>,
--   <a>updateHttpNamespace_namespace</a> - Updated properties for the the
--   HTTP namespace.
newUpdateHttpNamespace :: Text -> HttpNamespaceChange -> UpdateHttpNamespace

-- | A unique string that identifies the request and that allows failed
--   <tt>UpdateHttpNamespace</tt> requests to be retried without the risk
--   of running the operation twice. <tt>UpdaterRequestId</tt> can be any
--   unique string (for example, a date/timestamp).
updateHttpNamespace_updaterRequestId :: Lens' UpdateHttpNamespace (Maybe Text)

-- | The ID of the namespace that you want to update.
updateHttpNamespace_id :: Lens' UpdateHttpNamespace Text

-- | Updated properties for the the HTTP namespace.
updateHttpNamespace_namespace :: Lens' UpdateHttpNamespace HttpNamespaceChange

-- | <i>See:</i> <a>newUpdateHttpNamespaceResponse</a> smart constructor.
data UpdateHttpNamespaceResponse
UpdateHttpNamespaceResponse' :: Maybe Text -> Int -> UpdateHttpNamespaceResponse

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
[$sel:operationId:UpdateHttpNamespaceResponse'] :: UpdateHttpNamespaceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateHttpNamespaceResponse'] :: UpdateHttpNamespaceResponse -> Int

-- | Create a value of <a>UpdateHttpNamespaceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:UpdateHttpNamespaceResponse'</a>,
--   <a>updateHttpNamespaceResponse_operationId</a> - A value that you can
--   use to determine whether the request completed successfully. To get
--   the status of the operation, see <a>GetOperation</a>.
--   
--   <a>$sel:httpStatus:UpdateHttpNamespaceResponse'</a>,
--   <a>updateHttpNamespaceResponse_httpStatus</a> - The response's http
--   status code.
newUpdateHttpNamespaceResponse :: Int -> UpdateHttpNamespaceResponse

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
updateHttpNamespaceResponse_operationId :: Lens' UpdateHttpNamespaceResponse (Maybe Text)

-- | The response's http status code.
updateHttpNamespaceResponse_httpStatus :: Lens' UpdateHttpNamespaceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.UpdateHttpNamespace.UpdateHttpNamespace
instance GHC.Show.Show Network.AWS.Route53AutoNaming.UpdateHttpNamespace.UpdateHttpNamespace
instance GHC.Read.Read Network.AWS.Route53AutoNaming.UpdateHttpNamespace.UpdateHttpNamespace
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.UpdateHttpNamespace.UpdateHttpNamespace
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.UpdateHttpNamespace.UpdateHttpNamespaceResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.UpdateHttpNamespace.UpdateHttpNamespaceResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.UpdateHttpNamespace.UpdateHttpNamespaceResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.UpdateHttpNamespace.UpdateHttpNamespaceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.UpdateHttpNamespace.UpdateHttpNamespace
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.UpdateHttpNamespace.UpdateHttpNamespaceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.UpdateHttpNamespace.UpdateHttpNamespace
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.UpdateHttpNamespace.UpdateHttpNamespace
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.UpdateHttpNamespace.UpdateHttpNamespace
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.UpdateHttpNamespace.UpdateHttpNamespace
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.UpdateHttpNamespace.UpdateHttpNamespace
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.UpdateHttpNamespace.UpdateHttpNamespace


-- | Submits a request to change the health status of a custom health check
--   to healthy or unhealthy.
--   
--   You can use <tt>UpdateInstanceCustomHealthStatus</tt> to change the
--   status only for custom health checks, which you define using
--   <tt>HealthCheckCustomConfig</tt> when you create a service. You can't
--   use it to change the status for Route 53 health checks, which you
--   define using <tt>HealthCheckConfig</tt>.
--   
--   For more information, see <a>HealthCheckCustomConfig</a>.
module Network.AWS.Route53AutoNaming.UpdateInstanceCustomHealthStatus

-- | <i>See:</i> <a>newUpdateInstanceCustomHealthStatus</a> smart
--   constructor.
data UpdateInstanceCustomHealthStatus
UpdateInstanceCustomHealthStatus' :: Text -> Text -> CustomHealthStatus -> UpdateInstanceCustomHealthStatus

-- | The ID of the service that includes the configuration for the custom
--   health check that you want to change the status for.
[$sel:serviceId:UpdateInstanceCustomHealthStatus'] :: UpdateInstanceCustomHealthStatus -> Text

-- | The ID of the instance that you want to change the health status for.
[$sel:instanceId:UpdateInstanceCustomHealthStatus'] :: UpdateInstanceCustomHealthStatus -> Text

-- | The new status of the instance, <tt>HEALTHY</tt> or
--   <tt>UNHEALTHY</tt>.
[$sel:status:UpdateInstanceCustomHealthStatus'] :: UpdateInstanceCustomHealthStatus -> CustomHealthStatus

-- | Create a value of <a>UpdateInstanceCustomHealthStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceId:UpdateInstanceCustomHealthStatus'</a>,
--   <a>updateInstanceCustomHealthStatus_serviceId</a> - The ID of the
--   service that includes the configuration for the custom health check
--   that you want to change the status for.
--   
--   <a>$sel:instanceId:UpdateInstanceCustomHealthStatus'</a>,
--   <a>updateInstanceCustomHealthStatus_instanceId</a> - The ID of the
--   instance that you want to change the health status for.
--   
--   <a>$sel:status:UpdateInstanceCustomHealthStatus'</a>,
--   <a>updateInstanceCustomHealthStatus_status</a> - The new status of the
--   instance, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>.
newUpdateInstanceCustomHealthStatus :: Text -> Text -> CustomHealthStatus -> UpdateInstanceCustomHealthStatus

-- | The ID of the service that includes the configuration for the custom
--   health check that you want to change the status for.
updateInstanceCustomHealthStatus_serviceId :: Lens' UpdateInstanceCustomHealthStatus Text

-- | The ID of the instance that you want to change the health status for.
updateInstanceCustomHealthStatus_instanceId :: Lens' UpdateInstanceCustomHealthStatus Text

-- | The new status of the instance, <tt>HEALTHY</tt> or
--   <tt>UNHEALTHY</tt>.
updateInstanceCustomHealthStatus_status :: Lens' UpdateInstanceCustomHealthStatus CustomHealthStatus

-- | <i>See:</i> <a>newUpdateInstanceCustomHealthStatusResponse</a> smart
--   constructor.
data UpdateInstanceCustomHealthStatusResponse
UpdateInstanceCustomHealthStatusResponse' :: UpdateInstanceCustomHealthStatusResponse

-- | Create a value of <a>UpdateInstanceCustomHealthStatusResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateInstanceCustomHealthStatusResponse :: UpdateInstanceCustomHealthStatusResponse
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.UpdateInstanceCustomHealthStatus.UpdateInstanceCustomHealthStatus
instance GHC.Show.Show Network.AWS.Route53AutoNaming.UpdateInstanceCustomHealthStatus.UpdateInstanceCustomHealthStatus
instance GHC.Read.Read Network.AWS.Route53AutoNaming.UpdateInstanceCustomHealthStatus.UpdateInstanceCustomHealthStatus
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.UpdateInstanceCustomHealthStatus.UpdateInstanceCustomHealthStatus
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.UpdateInstanceCustomHealthStatus.UpdateInstanceCustomHealthStatusResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.UpdateInstanceCustomHealthStatus.UpdateInstanceCustomHealthStatusResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.UpdateInstanceCustomHealthStatus.UpdateInstanceCustomHealthStatusResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.UpdateInstanceCustomHealthStatus.UpdateInstanceCustomHealthStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.UpdateInstanceCustomHealthStatus.UpdateInstanceCustomHealthStatus
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.UpdateInstanceCustomHealthStatus.UpdateInstanceCustomHealthStatusResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.UpdateInstanceCustomHealthStatus.UpdateInstanceCustomHealthStatus
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.UpdateInstanceCustomHealthStatus.UpdateInstanceCustomHealthStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.UpdateInstanceCustomHealthStatus.UpdateInstanceCustomHealthStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.UpdateInstanceCustomHealthStatus.UpdateInstanceCustomHealthStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.UpdateInstanceCustomHealthStatus.UpdateInstanceCustomHealthStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.UpdateInstanceCustomHealthStatus.UpdateInstanceCustomHealthStatus


-- | Updates a private DNS namespace.
module Network.AWS.Route53AutoNaming.UpdatePrivateDnsNamespace

-- | <i>See:</i> <a>newUpdatePrivateDnsNamespace</a> smart constructor.
data UpdatePrivateDnsNamespace
UpdatePrivateDnsNamespace' :: Maybe Text -> Text -> PrivateDnsNamespaceChange -> UpdatePrivateDnsNamespace

-- | A unique string that identifies the request and that allows failed
--   <tt>UpdatePrivateDnsNamespace</tt> requests to be retried without the
--   risk of running the operation twice. <tt>UpdaterRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
[$sel:updaterRequestId:UpdatePrivateDnsNamespace'] :: UpdatePrivateDnsNamespace -> Maybe Text

-- | The ID of the namespace that you want to update.
[$sel:id:UpdatePrivateDnsNamespace'] :: UpdatePrivateDnsNamespace -> Text

-- | Updated properties for the private DNS namespace.
[$sel:namespace:UpdatePrivateDnsNamespace'] :: UpdatePrivateDnsNamespace -> PrivateDnsNamespaceChange

-- | Create a value of <a>UpdatePrivateDnsNamespace</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:updaterRequestId:UpdatePrivateDnsNamespace'</a>,
--   <a>updatePrivateDnsNamespace_updaterRequestId</a> - A unique string
--   that identifies the request and that allows failed
--   <tt>UpdatePrivateDnsNamespace</tt> requests to be retried without the
--   risk of running the operation twice. <tt>UpdaterRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
--   
--   <a>$sel:id:UpdatePrivateDnsNamespace'</a>,
--   <a>updatePrivateDnsNamespace_id</a> - The ID of the namespace that you
--   want to update.
--   
--   <a>$sel:namespace:UpdatePrivateDnsNamespace'</a>,
--   <a>updatePrivateDnsNamespace_namespace</a> - Updated properties for
--   the private DNS namespace.
newUpdatePrivateDnsNamespace :: Text -> PrivateDnsNamespaceChange -> UpdatePrivateDnsNamespace

-- | A unique string that identifies the request and that allows failed
--   <tt>UpdatePrivateDnsNamespace</tt> requests to be retried without the
--   risk of running the operation twice. <tt>UpdaterRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
updatePrivateDnsNamespace_updaterRequestId :: Lens' UpdatePrivateDnsNamespace (Maybe Text)

-- | The ID of the namespace that you want to update.
updatePrivateDnsNamespace_id :: Lens' UpdatePrivateDnsNamespace Text

-- | Updated properties for the private DNS namespace.
updatePrivateDnsNamespace_namespace :: Lens' UpdatePrivateDnsNamespace PrivateDnsNamespaceChange

-- | <i>See:</i> <a>newUpdatePrivateDnsNamespaceResponse</a> smart
--   constructor.
data UpdatePrivateDnsNamespaceResponse
UpdatePrivateDnsNamespaceResponse' :: Maybe Text -> Int -> UpdatePrivateDnsNamespaceResponse

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
[$sel:operationId:UpdatePrivateDnsNamespaceResponse'] :: UpdatePrivateDnsNamespaceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdatePrivateDnsNamespaceResponse'] :: UpdatePrivateDnsNamespaceResponse -> Int

-- | Create a value of <a>UpdatePrivateDnsNamespaceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:UpdatePrivateDnsNamespaceResponse'</a>,
--   <a>updatePrivateDnsNamespaceResponse_operationId</a> - A value that
--   you can use to determine whether the request completed successfully.
--   To get the status of the operation, see <a>GetOperation</a>.
--   
--   <a>$sel:httpStatus:UpdatePrivateDnsNamespaceResponse'</a>,
--   <a>updatePrivateDnsNamespaceResponse_httpStatus</a> - The response's
--   http status code.
newUpdatePrivateDnsNamespaceResponse :: Int -> UpdatePrivateDnsNamespaceResponse

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
updatePrivateDnsNamespaceResponse_operationId :: Lens' UpdatePrivateDnsNamespaceResponse (Maybe Text)

-- | The response's http status code.
updatePrivateDnsNamespaceResponse_httpStatus :: Lens' UpdatePrivateDnsNamespaceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.UpdatePrivateDnsNamespace.UpdatePrivateDnsNamespace
instance GHC.Show.Show Network.AWS.Route53AutoNaming.UpdatePrivateDnsNamespace.UpdatePrivateDnsNamespace
instance GHC.Read.Read Network.AWS.Route53AutoNaming.UpdatePrivateDnsNamespace.UpdatePrivateDnsNamespace
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.UpdatePrivateDnsNamespace.UpdatePrivateDnsNamespace
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.UpdatePrivateDnsNamespace.UpdatePrivateDnsNamespaceResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.UpdatePrivateDnsNamespace.UpdatePrivateDnsNamespaceResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.UpdatePrivateDnsNamespace.UpdatePrivateDnsNamespaceResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.UpdatePrivateDnsNamespace.UpdatePrivateDnsNamespaceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.UpdatePrivateDnsNamespace.UpdatePrivateDnsNamespace
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.UpdatePrivateDnsNamespace.UpdatePrivateDnsNamespaceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.UpdatePrivateDnsNamespace.UpdatePrivateDnsNamespace
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.UpdatePrivateDnsNamespace.UpdatePrivateDnsNamespace
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.UpdatePrivateDnsNamespace.UpdatePrivateDnsNamespace
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.UpdatePrivateDnsNamespace.UpdatePrivateDnsNamespace
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.UpdatePrivateDnsNamespace.UpdatePrivateDnsNamespace
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.UpdatePrivateDnsNamespace.UpdatePrivateDnsNamespace


-- | Updates a public DNS namespace.
module Network.AWS.Route53AutoNaming.UpdatePublicDnsNamespace

-- | <i>See:</i> <a>newUpdatePublicDnsNamespace</a> smart constructor.
data UpdatePublicDnsNamespace
UpdatePublicDnsNamespace' :: Maybe Text -> Text -> PublicDnsNamespaceChange -> UpdatePublicDnsNamespace

-- | A unique string that identifies the request and that allows failed
--   <tt>UpdatePublicDnsNamespace</tt> requests to be retried without the
--   risk of running the operation twice. <tt>UpdaterRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
[$sel:updaterRequestId:UpdatePublicDnsNamespace'] :: UpdatePublicDnsNamespace -> Maybe Text

-- | The ID of the namespace being updated.
[$sel:id:UpdatePublicDnsNamespace'] :: UpdatePublicDnsNamespace -> Text

-- | Updated properties for the public DNS namespace.
[$sel:namespace:UpdatePublicDnsNamespace'] :: UpdatePublicDnsNamespace -> PublicDnsNamespaceChange

-- | Create a value of <a>UpdatePublicDnsNamespace</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:updaterRequestId:UpdatePublicDnsNamespace'</a>,
--   <a>updatePublicDnsNamespace_updaterRequestId</a> - A unique string
--   that identifies the request and that allows failed
--   <tt>UpdatePublicDnsNamespace</tt> requests to be retried without the
--   risk of running the operation twice. <tt>UpdaterRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
--   
--   <a>$sel:id:UpdatePublicDnsNamespace'</a>,
--   <a>updatePublicDnsNamespace_id</a> - The ID of the namespace being
--   updated.
--   
--   <a>$sel:namespace:UpdatePublicDnsNamespace'</a>,
--   <a>updatePublicDnsNamespace_namespace</a> - Updated properties for the
--   public DNS namespace.
newUpdatePublicDnsNamespace :: Text -> PublicDnsNamespaceChange -> UpdatePublicDnsNamespace

-- | A unique string that identifies the request and that allows failed
--   <tt>UpdatePublicDnsNamespace</tt> requests to be retried without the
--   risk of running the operation twice. <tt>UpdaterRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
updatePublicDnsNamespace_updaterRequestId :: Lens' UpdatePublicDnsNamespace (Maybe Text)

-- | The ID of the namespace being updated.
updatePublicDnsNamespace_id :: Lens' UpdatePublicDnsNamespace Text

-- | Updated properties for the public DNS namespace.
updatePublicDnsNamespace_namespace :: Lens' UpdatePublicDnsNamespace PublicDnsNamespaceChange

-- | <i>See:</i> <a>newUpdatePublicDnsNamespaceResponse</a> smart
--   constructor.
data UpdatePublicDnsNamespaceResponse
UpdatePublicDnsNamespaceResponse' :: Maybe Text -> Int -> UpdatePublicDnsNamespaceResponse

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
[$sel:operationId:UpdatePublicDnsNamespaceResponse'] :: UpdatePublicDnsNamespaceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdatePublicDnsNamespaceResponse'] :: UpdatePublicDnsNamespaceResponse -> Int

-- | Create a value of <a>UpdatePublicDnsNamespaceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:UpdatePublicDnsNamespaceResponse'</a>,
--   <a>updatePublicDnsNamespaceResponse_operationId</a> - A value that you
--   can use to determine whether the request completed successfully. To
--   get the status of the operation, see <a>GetOperation</a>.
--   
--   <a>$sel:httpStatus:UpdatePublicDnsNamespaceResponse'</a>,
--   <a>updatePublicDnsNamespaceResponse_httpStatus</a> - The response's
--   http status code.
newUpdatePublicDnsNamespaceResponse :: Int -> UpdatePublicDnsNamespaceResponse

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
updatePublicDnsNamespaceResponse_operationId :: Lens' UpdatePublicDnsNamespaceResponse (Maybe Text)

-- | The response's http status code.
updatePublicDnsNamespaceResponse_httpStatus :: Lens' UpdatePublicDnsNamespaceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.UpdatePublicDnsNamespace.UpdatePublicDnsNamespace
instance GHC.Show.Show Network.AWS.Route53AutoNaming.UpdatePublicDnsNamespace.UpdatePublicDnsNamespace
instance GHC.Read.Read Network.AWS.Route53AutoNaming.UpdatePublicDnsNamespace.UpdatePublicDnsNamespace
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.UpdatePublicDnsNamespace.UpdatePublicDnsNamespace
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.UpdatePublicDnsNamespace.UpdatePublicDnsNamespaceResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.UpdatePublicDnsNamespace.UpdatePublicDnsNamespaceResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.UpdatePublicDnsNamespace.UpdatePublicDnsNamespaceResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.UpdatePublicDnsNamespace.UpdatePublicDnsNamespaceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.UpdatePublicDnsNamespace.UpdatePublicDnsNamespace
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.UpdatePublicDnsNamespace.UpdatePublicDnsNamespaceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.UpdatePublicDnsNamespace.UpdatePublicDnsNamespace
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.UpdatePublicDnsNamespace.UpdatePublicDnsNamespace
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.UpdatePublicDnsNamespace.UpdatePublicDnsNamespace
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.UpdatePublicDnsNamespace.UpdatePublicDnsNamespace
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.UpdatePublicDnsNamespace.UpdatePublicDnsNamespace
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.UpdatePublicDnsNamespace.UpdatePublicDnsNamespace


-- | Submits a request to perform the following operations:
--   
--   <ul>
--   <li>Update the TTL setting for existing <tt>DnsRecords</tt>
--   configurations</li>
--   <li>Add, update, or delete <tt>HealthCheckConfig</tt> for a specified
--   serviceYou can't add, update, or delete a
--   <tt>HealthCheckCustomConfig</tt> configuration.</li>
--   </ul>
--   
--   For public and private DNS namespaces, note the following:
--   
--   <ul>
--   <li>If you omit any existing <tt>DnsRecords</tt> or
--   <tt>HealthCheckConfig</tt> configurations from an
--   <tt>UpdateService</tt> request, the configurations are deleted from
--   the service.</li>
--   <li>If you omit an existing <tt>HealthCheckCustomConfig</tt>
--   configuration from an <tt>UpdateService</tt> request, the
--   configuration isn't deleted from the service.</li>
--   </ul>
--   
--   When you update settings for a service, Cloud Map also updates the
--   corresponding settings in all the records and health checks that were
--   created by using the specified service.
module Network.AWS.Route53AutoNaming.UpdateService

-- | <i>See:</i> <a>newUpdateService</a> smart constructor.
data UpdateService
UpdateService' :: Text -> ServiceChange -> UpdateService

-- | The ID of the service that you want to update.
[$sel:id:UpdateService'] :: UpdateService -> Text

-- | A complex type that contains the new settings for the service.
[$sel:service:UpdateService'] :: UpdateService -> ServiceChange

-- | Create a value of <a>UpdateService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:UpdateService'</a>, <a>updateService_id</a> - The ID of the
--   service that you want to update.
--   
--   <a>$sel:service:UpdateService'</a>, <a>updateService_service</a> - A
--   complex type that contains the new settings for the service.
newUpdateService :: Text -> ServiceChange -> UpdateService

-- | The ID of the service that you want to update.
updateService_id :: Lens' UpdateService Text

-- | A complex type that contains the new settings for the service.
updateService_service :: Lens' UpdateService ServiceChange

-- | <i>See:</i> <a>newUpdateServiceResponse</a> smart constructor.
data UpdateServiceResponse
UpdateServiceResponse' :: Maybe Text -> Int -> UpdateServiceResponse

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
[$sel:operationId:UpdateServiceResponse'] :: UpdateServiceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateServiceResponse'] :: UpdateServiceResponse -> Int

-- | Create a value of <a>UpdateServiceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:UpdateServiceResponse'</a>,
--   <a>updateServiceResponse_operationId</a> - A value that you can use to
--   determine whether the request completed successfully. To get the
--   status of the operation, see <a>GetOperation</a>.
--   
--   <a>$sel:httpStatus:UpdateServiceResponse'</a>,
--   <a>updateServiceResponse_httpStatus</a> - The response's http status
--   code.
newUpdateServiceResponse :: Int -> UpdateServiceResponse

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
updateServiceResponse_operationId :: Lens' UpdateServiceResponse (Maybe Text)

-- | The response's http status code.
updateServiceResponse_httpStatus :: Lens' UpdateServiceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.UpdateService.UpdateService
instance GHC.Show.Show Network.AWS.Route53AutoNaming.UpdateService.UpdateService
instance GHC.Read.Read Network.AWS.Route53AutoNaming.UpdateService.UpdateService
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.UpdateService.UpdateService
instance GHC.Generics.Generic Network.AWS.Route53AutoNaming.UpdateService.UpdateServiceResponse
instance GHC.Show.Show Network.AWS.Route53AutoNaming.UpdateService.UpdateServiceResponse
instance GHC.Read.Read Network.AWS.Route53AutoNaming.UpdateService.UpdateServiceResponse
instance GHC.Classes.Eq Network.AWS.Route53AutoNaming.UpdateService.UpdateServiceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53AutoNaming.UpdateService.UpdateService
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.UpdateService.UpdateServiceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53AutoNaming.UpdateService.UpdateService
instance Control.DeepSeq.NFData Network.AWS.Route53AutoNaming.UpdateService.UpdateService
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53AutoNaming.UpdateService.UpdateService
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53AutoNaming.UpdateService.UpdateService
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53AutoNaming.UpdateService.UpdateService
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53AutoNaming.UpdateService.UpdateService


module Network.AWS.Route53AutoNaming.Lens

-- | A complex type that contains specifications for the namespaces that
--   you want to list services for.
--   
--   If you specify more than one filter, an operation must match all
--   filters to be returned by <tt>ListServices</tt>.
listServices_filters :: Lens' ListServices (Maybe [ServiceFilter])

-- | For the first <tt>ListServices</tt> request, omit this value.
--   
--   If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListServices</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> services and then filters them
--   based on the specified criteria. It's possible that no services in the
--   first <tt>MaxResults</tt> services matched the specified criteria but
--   that subsequent groups of <tt>MaxResults</tt> services do contain
--   services that match the criteria.
listServices_nextToken :: Lens' ListServices (Maybe Text)

-- | The maximum number of services that you want Cloud Map to return in
--   the response to a <tt>ListServices</tt> request. If you don't specify
--   a value for <tt>MaxResults</tt>, Cloud Map returns up to 100 services.
listServices_maxResults :: Lens' ListServices (Maybe Natural)

-- | If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListServices</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> services and then filters them
--   based on the specified criteria. It's possible that no services in the
--   first <tt>MaxResults</tt> services matched the specified criteria but
--   that subsequent groups of <tt>MaxResults</tt> services do contain
--   services that match the criteria.
listServicesResponse_nextToken :: Lens' ListServicesResponse (Maybe Text)

-- | An array that contains one <tt>ServiceSummary</tt> object for each
--   service that matches the specified filter criteria.
listServicesResponse_services :: Lens' ListServicesResponse (Maybe [ServiceSummary])

-- | The response's http status code.
listServicesResponse_httpStatus :: Lens' ListServicesResponse Int

-- | The ID of the service that you want to delete.
deleteService_id :: Lens' DeleteService Text

-- | The response's http status code.
deleteServiceResponse_httpStatus :: Lens' DeleteServiceResponse Int

-- | The ID of the service that you want to update.
updateService_id :: Lens' UpdateService Text

-- | A complex type that contains the new settings for the service.
updateService_service :: Lens' UpdateService ServiceChange

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
updateServiceResponse_operationId :: Lens' UpdateServiceResponse (Maybe Text)

-- | The response's http status code.
updateServiceResponse_httpStatus :: Lens' UpdateServiceResponse Int

-- | A complex type that contains specifications for the operations that
--   you want to list, for example, operations that you started between a
--   specified start date and end date.
--   
--   If you specify more than one filter, an operation must match all
--   filters to be returned by <tt>ListOperations</tt>.
listOperations_filters :: Lens' ListOperations (Maybe [OperationFilter])

-- | For the first <tt>ListOperations</tt> request, omit this value.
--   
--   If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListOperations</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> operations and then filters them
--   based on the specified criteria. It's possible that no operations in
--   the first <tt>MaxResults</tt> operations matched the specified
--   criteria but that subsequent groups of <tt>MaxResults</tt> operations
--   do contain operations that match the criteria.
listOperations_nextToken :: Lens' ListOperations (Maybe Text)

-- | The maximum number of items that you want Cloud Map to return in the
--   response to a <tt>ListOperations</tt> request. If you don't specify a
--   value for <tt>MaxResults</tt>, Cloud Map returns up to 100 operations.
listOperations_maxResults :: Lens' ListOperations (Maybe Natural)

-- | If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListOperations</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> operations and then filters them
--   based on the specified criteria. It's possible that no operations in
--   the first <tt>MaxResults</tt> operations matched the specified
--   criteria but that subsequent groups of <tt>MaxResults</tt> operations
--   do contain operations that match the criteria.
listOperationsResponse_nextToken :: Lens' ListOperationsResponse (Maybe Text)

-- | Summary information about the operations that match the specified
--   criteria.
listOperationsResponse_operations :: Lens' ListOperationsResponse (Maybe [OperationSummary])

-- | The response's http status code.
listOperationsResponse_httpStatus :: Lens' ListOperationsResponse Int

-- | A unique string that identifies the request and that allows failed
--   <tt>CreateHttpNamespace</tt> requests to be retried without the risk
--   of running the operation twice. <tt>CreatorRequestId</tt> can be any
--   unique string (for example, a date/time stamp).
createHttpNamespace_creatorRequestId :: Lens' CreateHttpNamespace (Maybe Text)

-- | A description for the namespace.
createHttpNamespace_description :: Lens' CreateHttpNamespace (Maybe Text)

-- | The tags to add to the namespace. Each tag consists of a key and an
--   optional value that you define. Tags keys can be up to 128 characters
--   in length, and tag values can be up to 256 characters in length.
createHttpNamespace_tags :: Lens' CreateHttpNamespace (Maybe [Tag])

-- | The name that you want to assign to this namespace.
createHttpNamespace_name :: Lens' CreateHttpNamespace Text

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
createHttpNamespaceResponse_operationId :: Lens' CreateHttpNamespaceResponse (Maybe Text)

-- | The response's http status code.
createHttpNamespaceResponse_httpStatus :: Lens' CreateHttpNamespaceResponse Int

-- | A unique string that identifies the request and that allows failed
--   <tt>CreatePublicDnsNamespace</tt> requests to be retried without the
--   risk of running the operation twice. <tt>CreatorRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
createPublicDnsNamespace_creatorRequestId :: Lens' CreatePublicDnsNamespace (Maybe Text)

-- | A description for the namespace.
createPublicDnsNamespace_description :: Lens' CreatePublicDnsNamespace (Maybe Text)

-- | The tags to add to the namespace. Each tag consists of a key and an
--   optional value that you define. Tags keys can be up to 128 characters
--   in length, and tag values can be up to 256 characters in length.
createPublicDnsNamespace_tags :: Lens' CreatePublicDnsNamespace (Maybe [Tag])

-- | Properties for the public DNS namespace.
createPublicDnsNamespace_properties :: Lens' CreatePublicDnsNamespace (Maybe PublicDnsNamespaceProperties)

-- | The name that you want to assign to this namespace.
createPublicDnsNamespace_name :: Lens' CreatePublicDnsNamespace Text

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
createPublicDnsNamespaceResponse_operationId :: Lens' CreatePublicDnsNamespaceResponse (Maybe Text)

-- | The response's http status code.
createPublicDnsNamespaceResponse_httpStatus :: Lens' CreatePublicDnsNamespaceResponse Int

-- | The ID of the service that the instance is associated with.
getInstance_serviceId :: Lens' GetInstance Text

-- | The ID of the instance that you want to get information about.
getInstance_instanceId :: Lens' GetInstance Text

-- | A complex type that contains information about a specified instance.
getInstanceResponse_instance :: Lens' GetInstanceResponse (Maybe Instance)

-- | The response's http status code.
getInstanceResponse_httpStatus :: Lens' GetInstanceResponse Int

-- | A complex type that contains specifications for the namespaces that
--   you want to list.
--   
--   If you specify more than one filter, a namespace must match all
--   filters to be returned by <tt>ListNamespaces</tt>.
listNamespaces_filters :: Lens' ListNamespaces (Maybe [NamespaceFilter])

-- | For the first <tt>ListNamespaces</tt> request, omit this value.
--   
--   If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListNamespaces</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> namespaces and then filters them
--   based on the specified criteria. It's possible that no namespaces in
--   the first <tt>MaxResults</tt> namespaces matched the specified
--   criteria but that subsequent groups of <tt>MaxResults</tt> namespaces
--   do contain namespaces that match the criteria.
listNamespaces_nextToken :: Lens' ListNamespaces (Maybe Text)

-- | The maximum number of namespaces that you want Cloud Map to return in
--   the response to a <tt>ListNamespaces</tt> request. If you don't
--   specify a value for <tt>MaxResults</tt>, Cloud Map returns up to 100
--   namespaces.
listNamespaces_maxResults :: Lens' ListNamespaces (Maybe Natural)

-- | An array that contains one <tt>NamespaceSummary</tt> object for each
--   namespace that matches the specified filter criteria.
listNamespacesResponse_namespaces :: Lens' ListNamespacesResponse (Maybe [NamespaceSummary])

-- | If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListNamespaces</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> namespaces and then filters them
--   based on the specified criteria. It's possible that no namespaces in
--   the first <tt>MaxResults</tt> namespaces matched the specified
--   criteria but that subsequent groups of <tt>MaxResults</tt> namespaces
--   do contain namespaces that match the criteria.
listNamespacesResponse_nextToken :: Lens' ListNamespacesResponse (Maybe Text)

-- | The response's http status code.
listNamespacesResponse_httpStatus :: Lens' ListNamespacesResponse Int

-- | The ID of the namespace that you want to delete.
deleteNamespace_id :: Lens' DeleteNamespace Text

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
deleteNamespaceResponse_operationId :: Lens' DeleteNamespaceResponse (Maybe Text)

-- | The response's http status code.
deleteNamespaceResponse_httpStatus :: Lens' DeleteNamespaceResponse Int

-- | A unique string that identifies the request and that allows failed
--   <tt>UpdatePublicDnsNamespace</tt> requests to be retried without the
--   risk of running the operation twice. <tt>UpdaterRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
updatePublicDnsNamespace_updaterRequestId :: Lens' UpdatePublicDnsNamespace (Maybe Text)

-- | The ID of the namespace being updated.
updatePublicDnsNamespace_id :: Lens' UpdatePublicDnsNamespace Text

-- | Updated properties for the public DNS namespace.
updatePublicDnsNamespace_namespace :: Lens' UpdatePublicDnsNamespace PublicDnsNamespaceChange

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
updatePublicDnsNamespaceResponse_operationId :: Lens' UpdatePublicDnsNamespaceResponse (Maybe Text)

-- | The response's http status code.
updatePublicDnsNamespaceResponse_httpStatus :: Lens' UpdatePublicDnsNamespaceResponse Int

-- | The Amazon Resource Name (ARN) of the resource that you want to
--   retrieve tags for.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | The tags that are assigned to the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | Filters to scope the results based on custom attributes for the
--   instance (for example, <tt>{version=v1, az=1a}</tt>). Only instances
--   that match all the specified key-value pairs are returned.
discoverInstances_queryParameters :: Lens' DiscoverInstances (Maybe (HashMap Text Text))

-- | Opportunistic filters to scope the results based on custom attributes.
--   If there are instances that match both the filters specified in both
--   the <tt>QueryParameters</tt> parameter and this parameter, all of
--   these instances are returned. Otherwise, the filters are ignored, and
--   only instances that match the filters that are specified in the
--   <tt>QueryParameters</tt> parameter are returned.
discoverInstances_optionalParameters :: Lens' DiscoverInstances (Maybe (HashMap Text Text))

-- | The health status of the instances that you want to discover. This
--   parameter is ignored for services that don't have a health check
--   configured, and all instances are returned.
--   
--   <ul>
--   <li><i>HEALTHY</i> Returns healthy instances.</li>
--   <li><i>UNHEALTHY</i> Returns unhealthy instances.</li>
--   <li><i>ALL</i> Returns all instances.</li>
--   <li><i>HEALTHY_OR_ELSE_ALL</i> Returns healthy instances, unless none
--   are reporting a healthy state. In that case, return all instances.
--   This is also called failing open.</li>
--   </ul>
discoverInstances_healthStatus :: Lens' DiscoverInstances (Maybe HealthStatusFilter)

-- | The maximum number of instances that you want Cloud Map to return in
--   the response to a <tt>DiscoverInstances</tt> request. If you don't
--   specify a value for <tt>MaxResults</tt>, Cloud Map returns up to 100
--   instances.
discoverInstances_maxResults :: Lens' DiscoverInstances (Maybe Natural)

-- | The <tt>HttpName</tt> name of the namespace. It's found in the
--   <tt>HttpProperties</tt> member of the <tt>Properties</tt> member of
--   the namespace.
discoverInstances_namespaceName :: Lens' DiscoverInstances Text

-- | The name of the service that you specified when you registered the
--   instance.
discoverInstances_serviceName :: Lens' DiscoverInstances Text

-- | A complex type that contains one <tt>HttpInstanceSummary</tt> for each
--   registered instance.
discoverInstancesResponse_instances :: Lens' DiscoverInstancesResponse (Maybe [HttpInstanceSummary])

-- | The response's http status code.
discoverInstancesResponse_httpStatus :: Lens' DiscoverInstancesResponse Int

-- | For the first <tt>GetInstancesHealthStatus</tt> request, omit this
--   value.
--   
--   If more than <tt>MaxResults</tt> instances match the specified
--   criteria, you can submit another <tt>GetInstancesHealthStatus</tt>
--   request to get the next group of results. Specify the value of
--   <tt>NextToken</tt> from the previous response in the next request.
getInstancesHealthStatus_nextToken :: Lens' GetInstancesHealthStatus (Maybe Text)

-- | An array that contains the IDs of all the instances that you want to
--   get the health status for.
--   
--   If you omit <tt>Instances</tt>, Cloud Map returns the health status
--   for all the instances that are associated with the specified service.
--   
--   To get the IDs for the instances that you've registered by using a
--   specified service, submit a <a>ListInstances</a> request.
getInstancesHealthStatus_instances :: Lens' GetInstancesHealthStatus (Maybe (NonEmpty Text))

-- | The maximum number of instances that you want Cloud Map to return in
--   the response to a <tt>GetInstancesHealthStatus</tt> request. If you
--   don't specify a value for <tt>MaxResults</tt>, Cloud Map returns up to
--   100 instances.
getInstancesHealthStatus_maxResults :: Lens' GetInstancesHealthStatus (Maybe Natural)

-- | The ID of the service that the instance is associated with.
getInstancesHealthStatus_serviceId :: Lens' GetInstancesHealthStatus Text

-- | A complex type that contains the IDs and the health status of the
--   instances that you specified in the <tt>GetInstancesHealthStatus</tt>
--   request.
getInstancesHealthStatusResponse_status :: Lens' GetInstancesHealthStatusResponse (Maybe (HashMap Text HealthStatus))

-- | If more than <tt>MaxResults</tt> instances match the specified
--   criteria, you can submit another <tt>GetInstancesHealthStatus</tt>
--   request to get the next group of results. Specify the value of
--   <tt>NextToken</tt> from the previous response in the next request.
getInstancesHealthStatusResponse_nextToken :: Lens' GetInstancesHealthStatusResponse (Maybe Text)

-- | The response's http status code.
getInstancesHealthStatusResponse_httpStatus :: Lens' GetInstancesHealthStatusResponse Int

-- | A unique string that identifies the request and that allows failed
--   <tt>UpdateHttpNamespace</tt> requests to be retried without the risk
--   of running the operation twice. <tt>UpdaterRequestId</tt> can be any
--   unique string (for example, a date/timestamp).
updateHttpNamespace_updaterRequestId :: Lens' UpdateHttpNamespace (Maybe Text)

-- | The ID of the namespace that you want to update.
updateHttpNamespace_id :: Lens' UpdateHttpNamespace Text

-- | Updated properties for the the HTTP namespace.
updateHttpNamespace_namespace :: Lens' UpdateHttpNamespace HttpNamespaceChange

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
updateHttpNamespaceResponse_operationId :: Lens' UpdateHttpNamespaceResponse (Maybe Text)

-- | The response's http status code.
updateHttpNamespaceResponse_httpStatus :: Lens' UpdateHttpNamespaceResponse Int

-- | The ID of the namespace that you want to get information about.
getNamespace_id :: Lens' GetNamespace Text

-- | A complex type that contains information about the specified
--   namespace.
getNamespaceResponse_namespace :: Lens' GetNamespaceResponse (Maybe Namespace)

-- | The response's http status code.
getNamespaceResponse_httpStatus :: Lens' GetNamespaceResponse Int

-- | A unique string that identifies the request and that allows failed
--   <tt>RegisterInstance</tt> requests to be retried without the risk of
--   executing the operation twice. You must use a unique
--   <tt>CreatorRequestId</tt> string every time you submit a
--   <tt>RegisterInstance</tt> request if you're registering additional
--   instances for the same namespace and service.
--   <tt>CreatorRequestId</tt> can be any unique string (for example, a
--   date/time stamp).
registerInstance_creatorRequestId :: Lens' RegisterInstance (Maybe Text)

-- | The ID of the service that you want to use for settings for the
--   instance.
registerInstance_serviceId :: Lens' RegisterInstance Text

-- | An identifier that you want to associate with the instance. Note the
--   following:
--   
--   <ul>
--   <li>If the service that's specified by <tt>ServiceId</tt> includes
--   settings for an <tt>SRV</tt> record, the value of <tt>InstanceId</tt>
--   is automatically included as part of the value for the <tt>SRV</tt>
--   record. For more information, see <a>DnsRecord</a> Type&gt;.</li>
--   <li>You can use this value to update an existing instance.</li>
--   <li>To register a new instance, you must specify a value that's unique
--   among instances that you register by using the same service.</li>
--   <li>If you specify an existing <tt>InstanceId</tt> and
--   <tt>ServiceId</tt>, Cloud Map updates the existing DNS records, if
--   any. If there's also an existing health check, Cloud Map deletes the
--   old health check and creates a new one.The health check isn't deleted
--   immediately, so it will still appear for a while if you submit a
--   <tt>ListHealthChecks</tt> request, for example.</li>
--   </ul>
registerInstance_instanceId :: Lens' RegisterInstance Text

-- | A string map that contains the following information for the service
--   that you specify in <tt>ServiceId</tt>:
--   
--   <ul>
--   <li>The attributes that apply to the records that are defined in the
--   service.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> If you want Cloud Map to create an
--   Amazon Route 53 alias record that routes traffic to an Elastic Load
--   Balancing load balancer, specify the DNS name that's associated with
--   the load balancer. For information about how to get the DNS name, see
--   "DNSName" in the topic <a>AliasTarget</a> in the <i>Route 53 API
--   Reference</i>.Note the following:<ul><li>The configuration for the
--   service that's specified by <tt>ServiceId</tt> must include settings
--   for an <tt>A</tt> record, an <tt>AAAA</tt> record, or both.</li><li>In
--   the service that's specified by <tt>ServiceId</tt>, the value of
--   <tt>RoutingPolicy</tt> must be <tt>WEIGHTED</tt>.</li><li>If the
--   service that's specified by <tt>ServiceId</tt> includes
--   <tt>HealthCheckConfig</tt> settings, Cloud Map will create the Route
--   53 health check, but it doesn't associate the health check with the
--   alias record.</li><li>Auto naming currently doesn't support creating
--   alias records that route traffic to Amazon Web Services resources
--   other than Elastic Load Balancing load balancers.</li><li>If you
--   specify a value for <tt>AWS_ALIAS_DNS_NAME</tt>, don't specify values
--   for any of the <tt>AWS_INSTANCE</tt> attributes.</li></ul></li>
--   <li><i>AWS_EC2_INSTANCE_ID</i> <i>HTTP namespaces only.</i> The Amazon
--   EC2 instance ID for the instance. If the <tt>AWS_EC2_INSTANCE_ID</tt>
--   attribute is specified, then the only other attribute that can be
--   specified is <tt>AWS_INIT_HEALTH_STATUS</tt>. When the
--   <tt>AWS_EC2_INSTANCE_ID</tt> attribute is specified, then the
--   <tt>AWS_INSTANCE_IPV4</tt> attribute will be filled out with the
--   primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> If the service configuration includes a
--   <tt>CNAME</tt> record, the domain name that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>example.com</tt>).This value is required if the service specified
--   by <tt>ServiceId</tt> includes settings for an <tt>CNAME</tt>
--   record.</li>
--   <li><i>AWS_INSTANCE_IPV4</i> If the service configuration includes an
--   <tt>A</tt> record, the IPv4 address that you want Route 53 to return
--   in response to DNS queries (for example, <tt>192.0.2.44</tt>).This
--   value is required if the service specified by <tt>ServiceId</tt>
--   includes settings for an <tt>A</tt> record. If the service includes
--   settings for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_IPV6</i> If the service configuration includes an
--   <tt>AAAA</tt> record, the IPv6 address that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).This value is
--   required if the service specified by <tt>ServiceId</tt> includes
--   settings for an <tt>AAAA</tt> record. If the service includes settings
--   for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_PORT</i> If the service includes an <tt>SRV</tt>
--   record, the value that you want Route 53 to return for the port.If the
--   service includes <tt>HealthCheckConfig</tt>, the port on the endpoint
--   that you want Route 53 to send requests to.This value is required if
--   you specified settings for an <tt>SRV</tt> record or a Route 53 health
--   check when you created the service.</li>
--   <li><i>Custom attributes</i> You can add up to 30 custom attributes.
--   For each key-value pair, the maximum length of the attribute name is
--   255 characters, and the maximum length of the attribute value is 1,024
--   characters. The total size of all provided attributes (sum of all keys
--   and values) must not exceed 5,000 characters.</li>
--   </ul>
registerInstance_attributes :: Lens' RegisterInstance (HashMap Text Text)

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
registerInstanceResponse_operationId :: Lens' RegisterInstanceResponse (Maybe Text)

-- | The response's http status code.
registerInstanceResponse_httpStatus :: Lens' RegisterInstanceResponse Int

-- | The Amazon Resource Name (ARN) of the resource that you want to
--   retrieve tags for.
tagResource_resourceARN :: Lens' TagResource Text

-- | The tags to add to the specified resource. Specifying the tag key is
--   required. You can set the value of a tag to an empty string, but you
--   can't set the value of a tag to null.
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | For the first <tt>ListInstances</tt> request, omit this value.
--   
--   If more than <tt>MaxResults</tt> instances match the specified
--   criteria, you can submit another <tt>ListInstances</tt> request to get
--   the next group of results. Specify the value of <tt>NextToken</tt>
--   from the previous response in the next request.
listInstances_nextToken :: Lens' ListInstances (Maybe Text)

-- | The maximum number of instances that you want Cloud Map to return in
--   the response to a <tt>ListInstances</tt> request. If you don't specify
--   a value for <tt>MaxResults</tt>, Cloud Map returns up to 100
--   instances.
listInstances_maxResults :: Lens' ListInstances (Maybe Natural)

-- | The ID of the service that you want to list instances for.
listInstances_serviceId :: Lens' ListInstances Text

-- | If more than <tt>MaxResults</tt> instances match the specified
--   criteria, you can submit another <tt>ListInstances</tt> request to get
--   the next group of results. Specify the value of <tt>NextToken</tt>
--   from the previous response in the next request.
listInstancesResponse_nextToken :: Lens' ListInstancesResponse (Maybe Text)

-- | Summary information about the instances that are associated with the
--   specified service.
listInstancesResponse_instances :: Lens' ListInstancesResponse (Maybe [InstanceSummary])

-- | The response's http status code.
listInstancesResponse_httpStatus :: Lens' ListInstancesResponse Int

-- | The ID of the operation that you want to get more information about.
getOperation_operationId :: Lens' GetOperation Text

-- | A complex type that contains information about the operation.
getOperationResponse_operation :: Lens' GetOperationResponse (Maybe Operation)

-- | The response's http status code.
getOperationResponse_httpStatus :: Lens' GetOperationResponse Int

-- | The ID of the service that includes the configuration for the custom
--   health check that you want to change the status for.
updateInstanceCustomHealthStatus_serviceId :: Lens' UpdateInstanceCustomHealthStatus Text

-- | The ID of the instance that you want to change the health status for.
updateInstanceCustomHealthStatus_instanceId :: Lens' UpdateInstanceCustomHealthStatus Text

-- | The new status of the instance, <tt>HEALTHY</tt> or
--   <tt>UNHEALTHY</tt>.
updateInstanceCustomHealthStatus_status :: Lens' UpdateInstanceCustomHealthStatus CustomHealthStatus

-- | The ID of the service that you want to get settings for.
getService_id :: Lens' GetService Text

-- | A complex type that contains information about the service.
getServiceResponse_service :: Lens' GetServiceResponse (Maybe ServiceInfo)

-- | The response's http status code.
getServiceResponse_httpStatus :: Lens' GetServiceResponse Int

-- | A unique string that identifies the request and that allows failed
--   <tt>CreatePrivateDnsNamespace</tt> requests to be retried without the
--   risk of running the operation twice. <tt>CreatorRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
createPrivateDnsNamespace_creatorRequestId :: Lens' CreatePrivateDnsNamespace (Maybe Text)

-- | A description for the namespace.
createPrivateDnsNamespace_description :: Lens' CreatePrivateDnsNamespace (Maybe Text)

-- | The tags to add to the namespace. Each tag consists of a key and an
--   optional value that you define. Tags keys can be up to 128 characters
--   in length, and tag values can be up to 256 characters in length.
createPrivateDnsNamespace_tags :: Lens' CreatePrivateDnsNamespace (Maybe [Tag])

-- | Properties for the private DNS namespace.
createPrivateDnsNamespace_properties :: Lens' CreatePrivateDnsNamespace (Maybe PrivateDnsNamespaceProperties)

-- | The name that you want to assign to this namespace. When you create a
--   private DNS namespace, Cloud Map automatically creates an Amazon Route
--   53 private hosted zone that has the same name as the namespace.
createPrivateDnsNamespace_name :: Lens' CreatePrivateDnsNamespace Text

-- | The ID of the Amazon VPC that you want to associate the namespace
--   with.
createPrivateDnsNamespace_vpc :: Lens' CreatePrivateDnsNamespace Text

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
createPrivateDnsNamespaceResponse_operationId :: Lens' CreatePrivateDnsNamespaceResponse (Maybe Text)

-- | The response's http status code.
createPrivateDnsNamespaceResponse_httpStatus :: Lens' CreatePrivateDnsNamespaceResponse Int

-- | The Amazon Resource Name (ARN) of the resource that you want to
--   retrieve tags for.
untagResource_resourceARN :: Lens' UntagResource Text

-- | The tag keys to remove from the specified resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | A unique string that identifies the request and that allows failed
--   <tt>UpdatePrivateDnsNamespace</tt> requests to be retried without the
--   risk of running the operation twice. <tt>UpdaterRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
updatePrivateDnsNamespace_updaterRequestId :: Lens' UpdatePrivateDnsNamespace (Maybe Text)

-- | The ID of the namespace that you want to update.
updatePrivateDnsNamespace_id :: Lens' UpdatePrivateDnsNamespace Text

-- | Updated properties for the private DNS namespace.
updatePrivateDnsNamespace_namespace :: Lens' UpdatePrivateDnsNamespace PrivateDnsNamespaceChange

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
updatePrivateDnsNamespaceResponse_operationId :: Lens' UpdatePrivateDnsNamespaceResponse (Maybe Text)

-- | The response's http status code.
updatePrivateDnsNamespaceResponse_httpStatus :: Lens' UpdatePrivateDnsNamespaceResponse Int

-- | <i>Public DNS and HTTP namespaces only.</i> A complex type that
--   contains settings for an optional Route 53 health check. If you
--   specify settings for a health check, Cloud Map associates the health
--   check with all the Route 53 DNS records that you specify in
--   <tt>DnsConfig</tt>.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   For information about the charges for health checks, see <a>Cloud Map
--   Pricing</a>.
createService_healthCheckConfig :: Lens' CreateService (Maybe HealthCheckConfig)

-- | A unique string that identifies the request and that allows failed
--   <tt>CreateService</tt> requests to be retried without the risk of
--   running the operation twice. <tt>CreatorRequestId</tt> can be any
--   unique string (for example, a date/timestamp).
createService_creatorRequestId :: Lens' CreateService (Maybe Text)

-- | A complex type that contains information about an optional custom
--   health check.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   You can't add, update, or delete a <tt>HealthCheckCustomConfig</tt>
--   configuration from an existing service.
createService_healthCheckCustomConfig :: Lens' CreateService (Maybe HealthCheckCustomConfig)

-- | The ID of the namespace that you want to use to create the service.
--   The namespace ID must be specified, but it can be specified either
--   here or in the <tt>DnsConfig</tt> object.
createService_namespaceId :: Lens' CreateService (Maybe Text)

-- | If present, specifies that the service instances are only discoverable
--   using the <tt>DiscoverInstances</tt> API operation. No DNS records is
--   registered for the service instances. The only valid value is
--   <tt>HTTP</tt>.
createService_type :: Lens' CreateService (Maybe ServiceTypeOption)

-- | A complex type that contains information about the Amazon Route 53
--   records that you want Cloud Map to create when you register an
--   instance.
createService_dnsConfig :: Lens' CreateService (Maybe DnsConfig)

-- | A description for the service.
createService_description :: Lens' CreateService (Maybe Text)

-- | The tags to add to the service. Each tag consists of a key and an
--   optional value that you define. Tags keys can be up to 128 characters
--   in length, and tag values can be up to 256 characters in length.
createService_tags :: Lens' CreateService (Maybe [Tag])

-- | The name that you want to assign to the service.
--   
--   If you want Cloud Map to create an <tt>SRV</tt> record when you
--   register an instance and you're using a system that requires a
--   specific <tt>SRV</tt> format, such as <a>HAProxy</a>, specify the
--   following for <tt>Name</tt>:
--   
--   <ul>
--   <li>Start the name with an underscore (_), such as
--   <tt>_exampleservice</tt>.</li>
--   <li>End the name with <i>._protocol</i>, such as <tt>._tcp</tt>.</li>
--   </ul>
--   
--   When you register an instance, Cloud Map creates an <tt>SRV</tt>
--   record and assigns a name to the record by concatenating the service
--   name and the namespace name (for example,
--   
--   <tt>_exampleservice._tcp.example.com</tt>).
--   
--   For services that are accessible by DNS queries, you can't create
--   multiple services with names that differ only by case (such as EXAMPLE
--   and example). Otherwise, these services have the same DNS name and
--   can't be distinguished. However, if you use a namespace that's only
--   accessible by API calls, then you can create services that with names
--   that differ only by case.
createService_name :: Lens' CreateService Text

-- | A complex type that contains information about the new service.
createServiceResponse_service :: Lens' CreateServiceResponse (Maybe ServiceInfo)

-- | The response's http status code.
createServiceResponse_httpStatus :: Lens' CreateServiceResponse Int

-- | The ID of the service that the instance is associated with.
deregisterInstance_serviceId :: Lens' DeregisterInstance Text

-- | The value that you specified for <tt>Id</tt> in the
--   <a>RegisterInstance</a> request.
deregisterInstance_instanceId :: Lens' DeregisterInstance Text

-- | A value that you can use to determine whether the request completed
--   successfully. To get the status of the operation, see
--   <a>GetOperation</a>.
deregisterInstanceResponse_operationId :: Lens' DeregisterInstanceResponse (Maybe Text)

-- | The response's http status code.
deregisterInstanceResponse_httpStatus :: Lens' DeregisterInstanceResponse Int

-- | The routing policy that you want to apply to all Route 53 DNS records
--   that Cloud Map creates when you register an instance and specify this
--   service.
--   
--   If you want to use this service to register instances that create
--   alias records, specify <tt>WEIGHTED</tt> for the routing policy.
--   
--   You can specify the following values:
--   
--   <ul>
--   <li><i>MULTIVALUE</i> If you define a health check for the service and
--   the health check is healthy, Route 53 returns the applicable value for
--   up to eight instances.For example, suppose that the service includes
--   configurations for one <tt>A</tt> record and a health check. You use
--   the service to register 10 instances. Route 53 responds to DNS queries
--   with IP addresses for up to eight healthy instances. If fewer than
--   eight instances are healthy, Route 53 responds to every DNS query with
--   the IP addresses for all of the healthy instances.If you don't define
--   a health check for the service, Route 53 assumes that all instances
--   are healthy and returns the values for up to eight instances.For more
--   information about the multivalue routing policy, see <a>Multivalue
--   Answer Routing</a> in the <i>Route 53 Developer Guide</i>.</li>
--   <li><i>WEIGHTED</i> Route 53 returns the applicable value from one
--   randomly selected instance from among the instances that you
--   registered using the same service. Currently, all records have the
--   same weight, so you can't route more or less traffic to any
--   instances.For example, suppose that the service includes
--   configurations for one <tt>A</tt> record and a health check. You use
--   the service to register 10 instances. Route 53 responds to DNS queries
--   with the IP address for one randomly selected instance from among the
--   healthy instances. If no instances are healthy, Route 53 responds to
--   DNS queries as if all of the instances were healthy.If you don't
--   define a health check for the service, Route 53 assumes that all
--   instances are healthy and returns the applicable value for one
--   randomly selected instance.For more information about the weighted
--   routing policy, see <a>Weighted Routing</a> in the <i>Route 53
--   Developer Guide</i>.</li>
--   </ul>
dnsConfig_routingPolicy :: Lens' DnsConfig (Maybe RoutingPolicy)

-- | The ID of the namespace to use for DNS configuration.
dnsConfig_namespaceId :: Lens' DnsConfig (Maybe Text)

-- | An array that contains one <tt>DnsRecord</tt> object for each Route 53
--   DNS record that you want Cloud Map to create when you register an
--   instance.
dnsConfig_dnsRecords :: Lens' DnsConfig [DnsRecord]

-- | An array that contains one <tt>DnsRecord</tt> object for each Route 53
--   record that you want Cloud Map to create when you register an
--   instance.
dnsConfigChange_dnsRecords :: Lens' DnsConfigChange [DnsRecord]

-- | The ID for the Route 53 hosted zone that Cloud Map creates when you
--   create a namespace.
dnsProperties_hostedZoneId :: Lens' DnsProperties (Maybe Text)

-- | Start of Authority (SOA) record for the hosted zone.
dnsProperties_soa :: Lens' DnsProperties (Maybe SOA)

-- | The type of the resource, which indicates the type of value that Route
--   53 returns in response to DNS queries. You can specify values for
--   <tt>Type</tt> in the following combinations:
--   
--   <ul>
--   <li><b><tt>A</tt></b></li>
--   <li><b><tt>AAAA</tt></b></li>
--   <li><b><tt>A</tt></b> and <b><tt>AAAA</tt></b></li>
--   <li><b><tt>SRV</tt></b></li>
--   <li><b><tt>CNAME</tt></b></li>
--   </ul>
--   
--   If you want Cloud Map to create a Route 53 alias record when you
--   register an instance, specify <tt>A</tt> or <tt>AAAA</tt> for
--   <tt>Type</tt>.
--   
--   You specify other settings, such as the IP address for <tt>A</tt> and
--   <tt>AAAA</tt> records, when you register an instance. For more
--   information, see <a>RegisterInstance</a>.
--   
--   The following values are supported:
--   
--   <ul>
--   <li><i>A</i> Route 53 returns the IP address of the resource in IPv4
--   format, such as 192.0.2.44.</li>
--   <li><i>AAAA</i> Route 53 returns the IP address of the resource in
--   IPv6 format, such as 2001:0db8:85a3:0000:0000:abcd:0001:2345.</li>
--   <li><i>CNAME</i> Route 53 returns the domain name of the resource,
--   such as www.example.com. Note the following:<ul><li>You specify the
--   domain name that you want to route traffic to when you register an
--   instance. For more information, see <a>Attributes</a> in the topic
--   <a>RegisterInstance</a>.</li><li>You must specify <tt>WEIGHTED</tt>
--   for the value of <tt>RoutingPolicy</tt>.</li><li>You can't specify
--   both <tt>CNAME</tt> for <tt>Type</tt> and settings for
--   <tt>HealthCheckConfig</tt>. If you do, the request will fail with an
--   <tt>InvalidInput</tt> error.</li></ul></li>
--   <li><i>SRV</i> Route 53 returns the value for an <tt>SRV</tt> record.
--   The value for an <tt>SRV</tt> record uses the following
--   values:<pre>priority weight port service-hostname</pre>Note the
--   following about the values:<ul><li>The values of <tt>priority</tt> and
--   <tt>weight</tt> are both set to <tt>1</tt> and can't be
--   changed.</li><li>The value of <tt>port</tt> comes from the value that
--   you specify for the <tt>AWS_INSTANCE_PORT</tt> attribute when you
--   submit a <a>RegisterInstance</a> request.</li><li>The value of
--   <tt>service-hostname</tt> is a concatenation of the following
--   values:<ul><li>The value that you specify for <tt>InstanceId</tt> when
--   you register an instance.</li><li>The name of the service.</li><li>The
--   name of the namespace.</li></ul>For example, if the value of
--   <tt>InstanceId</tt> is <tt>test</tt>, the name of the service is
--   <tt>backend</tt>, and the name of the namespace is
--   <tt>example.com</tt>, the value of <tt>service-hostname</tt> is the
--   following:<pre>test.backend.example.com</pre></li></ul>If you specify
--   settings for an <tt>SRV</tt> record, note the following:<ul><li>If you
--   specify values for <tt>AWS_INSTANCE_IPV4</tt>,
--   <tt>AWS_INSTANCE_IPV6</tt>, or both in the <tt>RegisterInstance</tt>
--   request, Cloud Map automatically creates <tt>A</tt> and/or
--   <tt>AAAA</tt> records that have the same name as the value of
--   <tt>service-hostname</tt> in the <tt>SRV</tt> record. You can ignore
--   these records.</li><li>If you're using a system that requires a
--   specific <tt>SRV</tt> format, such as HAProxy, see the <a>Name</a>
--   element in the documentation about <tt>CreateService</tt> for
--   information about how to specify the correct name
--   format.</li></ul></li>
--   </ul>
dnsRecord_type :: Lens' DnsRecord RecordType

-- | The amount of time, in seconds, that you want DNS resolvers to cache
--   the settings for this record.
--   
--   Alias records don't include a TTL because Route 53 uses the TTL for
--   the Amazon Web Services resource that an alias record routes traffic
--   to. If you include the <tt>AWS_ALIAS_DNS_NAME</tt> attribute when you
--   submit a <a>RegisterInstance</a> request, the <tt>TTL</tt> value is
--   ignored. Always specify a TTL for the service; you can use a service
--   to register instances that create either alias or non-alias records.
dnsRecord_ttl :: Lens' DnsRecord Natural

-- | The number of consecutive health checks that an endpoint must pass or
--   fail for Route 53 to change the current status of the endpoint from
--   unhealthy to healthy or the other way around. For more information,
--   see <a>How Route 53 Determines Whether an Endpoint Is Healthy</a> in
--   the <i>Route 53 Developer Guide</i>.
healthCheckConfig_failureThreshold :: Lens' HealthCheckConfig (Maybe Natural)

-- | The path that you want Route 53 to request when performing health
--   checks. The path can be any value that your endpoint returns an HTTP
--   status code of a 2xx or 3xx format for when the endpoint is healthy.
--   An example file is <tt>/docs/route53-health-check.html</tt>. Route 53
--   automatically adds the DNS name for the service. If you don't specify
--   a value for <tt>ResourcePath</tt>, the default value is <tt>/</tt>.
--   
--   If you specify <tt>TCP</tt> for <tt>Type</tt>, you must <i>not</i>
--   specify a value for <tt>ResourcePath</tt>.
healthCheckConfig_resourcePath :: Lens' HealthCheckConfig (Maybe Text)

-- | The type of health check that you want to create, which indicates how
--   Route 53 determines whether an endpoint is healthy.
--   
--   You can't change the value of <tt>Type</tt> after you create a health
--   check.
--   
--   You can create the following types of health checks:
--   
--   <ul>
--   <li><b>HTTP</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTP request and waits for an HTTP
--   status code of 200 or greater and less than 400.</li>
--   <li><b>HTTPS</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTPS request and waits for an HTTP
--   status code of 200 or greater and less than 400.If you specify HTTPS
--   for the value of <tt>Type</tt>, the endpoint must support TLS v1.0 or
--   later.</li>
--   <li><b>TCP</b>: Route 53 tries to establish a TCP connection.If you
--   specify <tt>TCP</tt> for <tt>Type</tt>, don't specify a value for
--   <tt>ResourcePath</tt>.</li>
--   </ul>
--   
--   For more information, see <a>How Route 53 Determines Whether an
--   Endpoint Is Healthy</a> in the <i>Route 53 Developer Guide</i>.
healthCheckConfig_type :: Lens' HealthCheckConfig HealthCheckType

-- | This parameter is no longer supported and is always set to 1. Cloud
--   Map waits for approximately 30 seconds after receiving an
--   <tt>UpdateInstanceCustomHealthStatus</tt> request before changing the
--   status of the service instance.
--   
--   The number of 30-second intervals that you want Cloud Map to wait
--   after receiving an <tt>UpdateInstanceCustomHealthStatus</tt> request
--   before it changes the health status of a service instance.
--   
--   Sending a second or subsequent
--   <tt>UpdateInstanceCustomHealthStatus</tt> request with the same value
--   before 30 seconds has passed doesn't accelerate the change. Cloud Map
--   still waits <tt>30</tt> seconds after the first request to make the
--   change.
healthCheckCustomConfig_failureThreshold :: Lens' HealthCheckCustomConfig (Maybe Natural)

-- | The ID of an instance that matches the values that you specified in
--   the request.
httpInstanceSummary_instanceId :: Lens' HttpInstanceSummary (Maybe Text)

-- | @<tt> </tt><tt> </tt>@
--   
--   The <tt>HttpName</tt> name of the namespace. It's found in the
--   <tt>HttpProperties</tt> member of the <tt>Properties</tt> member of
--   the namespace.
httpInstanceSummary_namespaceName :: Lens' HttpInstanceSummary (Maybe Text)

-- | If you included any attributes when you registered the instance, the
--   values of those attributes.
httpInstanceSummary_attributes :: Lens' HttpInstanceSummary (Maybe (HashMap Text Text))

-- | The name of the service that you specified when you registered the
--   instance.
httpInstanceSummary_serviceName :: Lens' HttpInstanceSummary (Maybe Text)

-- | If you configured health checking in the service, the current health
--   status of the service instance.
httpInstanceSummary_healthStatus :: Lens' HttpInstanceSummary (Maybe HealthStatus)

-- | An updated description for the HTTP namespace.
httpNamespaceChange_description :: Lens' HttpNamespaceChange Text

-- | The name of an HTTP namespace.
httpProperties_httpName :: Lens' HttpProperties (Maybe Text)

-- | A unique string that identifies the request and that allows failed
--   <tt>RegisterInstance</tt> requests to be retried without the risk of
--   executing the operation twice. You must use a unique
--   <tt>CreatorRequestId</tt> string every time you submit a
--   <tt>RegisterInstance</tt> request if you're registering additional
--   instances for the same namespace and service.
--   <tt>CreatorRequestId</tt> can be any unique string (for example, a
--   date/time stamp).
instance_creatorRequestId :: Lens' Instance (Maybe Text)

-- | A string map that contains the following information for the service
--   that you specify in <tt>ServiceId</tt>:
--   
--   <ul>
--   <li>The attributes that apply to the records that are defined in the
--   service.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> If you want Cloud Map to create a Route
--   53 alias record that routes traffic to an Elastic Load Balancing load
--   balancer, specify the DNS name that's associated with the load
--   balancer. For information about how to get the DNS name, see
--   <a>AliasTarget-</a>DNSName&gt; in the <i>Route 53 API
--   Reference</i>.Note the following:<ul><li>The configuration for the
--   service that's specified by <tt>ServiceId</tt> must include settings
--   for an <tt>A</tt> record, an <tt>AAAA</tt> record, or both.</li><li>In
--   the service that's specified by <tt>ServiceId</tt>, the value of
--   <tt>RoutingPolicy</tt> must be <tt>WEIGHTED</tt>.</li><li>If the
--   service that's specified by <tt>ServiceId</tt> includes
--   <tt>HealthCheckConfig</tt> settings, Cloud Map creates the health
--   check, but it won't associate the health check with the alias
--   record.</li><li>Auto naming currently doesn't support creating alias
--   records that route traffic to Amazon Web Services resources other than
--   ELB load balancers.</li><li>If you specify a value for
--   <tt>AWS_ALIAS_DNS_NAME</tt>, don't specify values for any of the
--   <tt>AWS_INSTANCE</tt> attributes.</li></ul></li>
--   <li><i>AWS_EC2_INSTANCE_ID</i> <i>HTTP namespaces only.</i> The Amazon
--   EC2 instance ID for the instance. The <tt>AWS_INSTANCE_IPV4</tt>
--   attribute contains the primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> If the service configuration includes a
--   <tt>CNAME</tt> record, the domain name that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>example.com</tt>).This value is required if the service specified
--   by <tt>ServiceId</tt> includes settings for an <tt>CNAME</tt>
--   record.</li>
--   <li><i>AWS_INSTANCE_IPV4</i> If the service configuration includes an
--   <tt>A</tt> record, the IPv4 address that you want Route 53 to return
--   in response to DNS queries (for example, <tt>192.0.2.44</tt>).This
--   value is required if the service specified by <tt>ServiceId</tt>
--   includes settings for an <tt>A</tt> record. If the service includes
--   settings for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_IPV6</i> If the service configuration includes an
--   <tt>AAAA</tt> record, the IPv6 address that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).This value is
--   required if the service specified by <tt>ServiceId</tt> includes
--   settings for an <tt>AAAA</tt> record. If the service includes settings
--   for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_PORT</i> If the service includes an <tt>SRV</tt>
--   record, the value that you want Route 53 to return for the port.If the
--   service includes <tt>HealthCheckConfig</tt>, the port on the endpoint
--   that you want Route 53 to send requests to.This value is required if
--   you specified settings for an <tt>SRV</tt> record or a Route 53 health
--   check when you created the service.</li>
--   </ul>
instance_attributes :: Lens' Instance (Maybe (HashMap Text Text))

-- | An identifier that you want to associate with the instance. Note the
--   following:
--   
--   <ul>
--   <li>If the service that's specified by <tt>ServiceId</tt> includes
--   settings for an <tt>SRV</tt> record, the value of <tt>InstanceId</tt>
--   is automatically included as part of the value for the <tt>SRV</tt>
--   record. For more information, see <a>DnsRecord</a> Type&gt;.</li>
--   <li>You can use this value to update an existing instance.</li>
--   <li>To register a new instance, you must specify a value that's unique
--   among instances that you register by using the same service.</li>
--   <li>If you specify an existing <tt>InstanceId</tt> and
--   <tt>ServiceId</tt>, Cloud Map updates the existing DNS records. If
--   there's also an existing health check, Cloud Map deletes the old
--   health check and creates a new one.The health check isn't deleted
--   immediately, so it will still appear for a while if you submit a
--   <tt>ListHealthChecks</tt> request, for example.</li>
--   </ul>
instance_id :: Lens' Instance Text

-- | A string map that contains the following information:
--   
--   <ul>
--   <li>The attributes that are associated with the instance.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> For an alias record that routes traffic
--   to an Elastic Load Balancing load balancer, the DNS name that's
--   associated with the load balancer.</li>
--   <li><i>AWS_EC2_INSTANCE_ID (HTTP namespaces only)</i> The Amazon EC2
--   instance ID for the instance. When the <tt>AWS_EC2_INSTANCE_ID</tt>
--   attribute is specified, then the <tt>AWS_INSTANCE_IPV4</tt> attribute
--   contains the primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> For a <tt>CNAME</tt> record, the domain
--   name that Route 53 returns in response to DNS queries (for example,
--   <tt>example.com</tt>).</li>
--   <li><i>AWS_INSTANCE_IPV4</i> For an <tt>A</tt> record, the IPv4
--   address that Route 53 returns in response to DNS queries (for example,
--   <tt>192.0.2.44</tt>).</li>
--   <li><i>AWS_INSTANCE_IPV6</i> For an <tt>AAAA</tt> record, the IPv6
--   address that Route 53 returns in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).</li>
--   <li><i>AWS_INSTANCE_PORT</i> For an <tt>SRV</tt> record, the value
--   that Route 53 returns for the port. In addition, if the service
--   includes <tt>HealthCheckConfig</tt>, the port on the endpoint that
--   Route 53 sends requests to.</li>
--   </ul>
instanceSummary_attributes :: Lens' InstanceSummary (Maybe (HashMap Text Text))

-- | The ID for an instance that you created by using a specified service.
instanceSummary_id :: Lens' InstanceSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) that Cloud Map assigns to the namespace
--   when you create it.
namespace_arn :: Lens' Namespace (Maybe Text)

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running an operation twice.
namespace_creatorRequestId :: Lens' Namespace (Maybe Text)

-- | The date that the namespace was created, in Unix date/time format and
--   Coordinated Universal Time (UTC). The value of <tt>CreateDate</tt> is
--   accurate to milliseconds. For example, the value
--   <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
namespace_createDate :: Lens' Namespace (Maybe UTCTime)

-- | The number of services that are associated with the namespace.
namespace_serviceCount :: Lens' Namespace (Maybe Int)

-- | The name of the namespace, such as <tt>example.com</tt>.
namespace_name :: Lens' Namespace (Maybe Text)

-- | The ID of a namespace.
namespace_id :: Lens' Namespace (Maybe Text)

-- | The type of the namespace. The methods for discovering instances
--   depends on the value that you specify:
--   
--   <ul>
--   <li><i>HTTP</i> Instances can be discovered only programmatically,
--   using the Cloud Map <tt>DiscoverInstances</tt> API.</li>
--   <li><i>DNS_PUBLIC</i> Instances can be discovered using public DNS
--   queries and using the <tt>DiscoverInstances</tt> API.</li>
--   <li><i>DNS_PRIVATE</i> Instances can be discovered using DNS queries
--   in VPCs and using the <tt>DiscoverInstances</tt> API.</li>
--   </ul>
namespace_type :: Lens' Namespace (Maybe NamespaceType)

-- | The description that you specify for the namespace when you create it.
namespace_description :: Lens' Namespace (Maybe Text)

-- | A complex type that contains information that's specific to the type
--   of the namespace.
namespace_properties :: Lens' Namespace (Maybe NamespaceProperties)

-- | The operator that you want to use to determine whether
--   <tt>ListNamespaces</tt> returns a namespace. Valid values for
--   <tt>condition</tt> include:
--   
--   <ul>
--   <li><i>EQ</i> When you specify <tt>EQ</tt> for the condition, you can
--   choose to list only public namespaces or private namespaces, but not
--   both. <tt>EQ</tt> is the default condition and can be omitted.</li>
--   <li><i>IN</i> When you specify <tt>IN</tt> for the condition, you can
--   choose to list public namespaces, private namespaces, or both.</li>
--   <li><i>BETWEEN</i> Not applicable</li>
--   </ul>
namespaceFilter_condition :: Lens' NamespaceFilter (Maybe FilterCondition)

-- | Specify <tt>TYPE</tt>.
namespaceFilter_name :: Lens' NamespaceFilter NamespaceFilterName

-- | If you specify <tt>EQ</tt> for <tt>Condition</tt>, specify either
--   <tt>DNS_PUBLIC</tt> or <tt>DNS_PRIVATE</tt>.
--   
--   If you specify <tt>IN</tt> for <tt>Condition</tt>, you can specify
--   <tt>DNS_PUBLIC</tt>, <tt>DNS_PRIVATE</tt>, or both.
namespaceFilter_values :: Lens' NamespaceFilter [Text]

-- | A complex type that contains the ID for the Route 53 hosted zone that
--   Cloud Map creates when you create a namespace.
namespaceProperties_dnsProperties :: Lens' NamespaceProperties (Maybe DnsProperties)

-- | A complex type that contains the name of an HTTP namespace.
namespaceProperties_httpProperties :: Lens' NamespaceProperties (Maybe HttpProperties)

-- | The Amazon Resource Name (ARN) that Cloud Map assigns to the namespace
--   when you create it.
namespaceSummary_arn :: Lens' NamespaceSummary (Maybe Text)

-- | The date and time that the namespace was created.
namespaceSummary_createDate :: Lens' NamespaceSummary (Maybe UTCTime)

-- | The number of services that were created using the namespace.
namespaceSummary_serviceCount :: Lens' NamespaceSummary (Maybe Int)

-- | The name of the namespace. When you create a namespace, Cloud Map
--   automatically creates a Route 53 hosted zone that has the same name as
--   the namespace.
namespaceSummary_name :: Lens' NamespaceSummary (Maybe Text)

-- | The ID of the namespace.
namespaceSummary_id :: Lens' NamespaceSummary (Maybe Text)

-- | The type of the namespace, either public or private.
namespaceSummary_type :: Lens' NamespaceSummary (Maybe NamespaceType)

-- | A description for the namespace.
namespaceSummary_description :: Lens' NamespaceSummary (Maybe Text)

-- | The properties of the namespace.
namespaceSummary_properties :: Lens' NamespaceSummary (Maybe NamespaceProperties)

-- | The status of the operation. Values include the following:
--   
--   <ul>
--   <li><i>SUBMITTED</i> This is the initial state that occurs immediately
--   after you submit a request.</li>
--   <li><i>PENDING</i> Cloud Map is performing the operation.</li>
--   <li><i>SUCCESS</i> The operation succeeded.</li>
--   <li><i>FAIL</i> The operation failed. For the failure reason, see
--   <tt>ErrorMessage</tt>.</li>
--   </ul>
operation_status :: Lens' Operation (Maybe OperationStatus)

-- | The date and time that the value of <tt>Status</tt> changed to the
--   current value, in Unix date/time format and Coordinated Universal Time
--   (UTC). The value of <tt>UpdateDate</tt> is accurate to milliseconds.
--   For example, the value <tt>1516925490.087</tt> represents Friday,
--   January 26, 2018 12:11:30.087 AM.
operation_updateDate :: Lens' Operation (Maybe UTCTime)

-- | The date and time that the request was submitted, in Unix date/time
--   format and Coordinated Universal Time (UTC). The value of
--   <tt>CreateDate</tt> is accurate to milliseconds. For example, the
--   value <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
operation_createDate :: Lens' Operation (Maybe UTCTime)

-- | The name of the target entity that's associated with the operation:
--   
--   <ul>
--   <li><i>NAMESPACE</i> The namespace ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   <li><i>SERVICE</i> The service ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   <li><i>INSTANCE</i> The instance ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   </ul>
operation_targets :: Lens' Operation (Maybe (HashMap OperationTargetType Text))

-- | The code associated with <tt>ErrorMessage</tt>. Values for
--   <tt>ErrorCode</tt> include the following:
--   
--   <ul>
--   <li><pre>ACCESS_DENIED</pre></li>
--   <li><pre>CANNOT_CREATE_HOSTED_ZONE</pre></li>
--   <li><pre>EXPIRED_TOKEN</pre></li>
--   <li><pre>HOSTED_ZONE_NOT_FOUND</pre></li>
--   <li><pre>INTERNAL_FAILURE</pre></li>
--   <li><pre>INVALID_CHANGE_BATCH</pre></li>
--   <li><pre>THROTTLED_REQUEST</pre></li>
--   </ul>
operation_errorCode :: Lens' Operation (Maybe Text)

-- | The ID of the operation that you want to get information about.
operation_id :: Lens' Operation (Maybe Text)

-- | The name of the operation that's associated with the specified ID.
operation_type :: Lens' Operation (Maybe OperationType)

-- | If the value of <tt>Status</tt> is <tt>FAIL</tt>, the reason that the
--   operation failed.
operation_errorMessage :: Lens' Operation (Maybe Text)

-- | The operator that you want to use to determine whether an operation
--   matches the specified value. Valid values for condition include:
--   
--   <ul>
--   <li><tt>EQ</tt>: When you specify <tt>EQ</tt> for the condition, you
--   can specify only one value. <tt>EQ</tt> is supported for
--   <tt>NAMESPACE_ID</tt>, <tt>SERVICE_ID</tt>, <tt>STATUS</tt>, and
--   <tt>TYPE</tt>. <tt>EQ</tt> is the default condition and can be
--   omitted.</li>
--   <li><tt>IN</tt>: When you specify <tt>IN</tt> for the condition, you
--   can specify a list of one or more values. <tt>IN</tt> is supported for
--   <tt>STATUS</tt> and <tt>TYPE</tt>. An operation must match one of the
--   specified values to be returned in the response.</li>
--   <li><tt>BETWEEN</tt>: Specify a start date and an end date in Unix
--   date/time format and Coordinated Universal Time (UTC). The start date
--   must be the first value. <tt>BETWEEN</tt> is supported for
--   <tt>UPDATE_DATE</tt>.</li>
--   </ul>
operationFilter_condition :: Lens' OperationFilter (Maybe FilterCondition)

-- | Specify the operations that you want to get:
--   
--   <ul>
--   <li><b>NAMESPACE_ID</b>: Gets operations related to specified
--   namespaces.</li>
--   <li><b>SERVICE_ID</b>: Gets operations related to specified
--   services.</li>
--   <li><b>STATUS</b>: Gets operations based on the status of the
--   operations: <tt>SUBMITTED</tt>, <tt>PENDING</tt>, <tt>SUCCEED</tt>, or
--   <tt>FAIL</tt>.</li>
--   <li><b>TYPE</b>: Gets specified types of operation.</li>
--   <li><b>UPDATE_DATE</b>: Gets operations that changed status during a
--   specified date/time range.</li>
--   </ul>
operationFilter_name :: Lens' OperationFilter OperationFilterName

-- | Specify values that are applicable to the value that you specify for
--   <tt>Name</tt>:
--   
--   <ul>
--   <li><b>NAMESPACE_ID</b>: Specify one namespace ID.</li>
--   <li><b>SERVICE_ID</b>: Specify one service ID.</li>
--   <li><b>STATUS</b>: Specify one or more statuses: <tt>SUBMITTED</tt>,
--   <tt>PENDING</tt>, <tt>SUCCEED</tt>, or <tt>FAIL</tt>.</li>
--   <li><b>TYPE</b>: Specify one or more of the following types:
--   <tt>CREATE_NAMESPACE</tt>, <tt>DELETE_NAMESPACE</tt>,
--   <tt>UPDATE_SERVICE</tt>, <tt>REGISTER_INSTANCE</tt>, or
--   <tt>DEREGISTER_INSTANCE</tt>.</li>
--   <li><b>UPDATE_DATE</b>: Specify a start date and an end date in Unix
--   date/time format and Coordinated Universal Time (UTC). The start date
--   must be the first value.</li>
--   </ul>
operationFilter_values :: Lens' OperationFilter [Text]

-- | The status of the operation. Values include the following:
--   
--   <ul>
--   <li><b>SUBMITTED</b>: This is the initial state immediately after you
--   submit a request.</li>
--   <li><b>PENDING</b>: Cloud Map is performing the operation.</li>
--   <li><b>SUCCESS</b>: The operation succeeded.</li>
--   <li><b>FAIL</b>: The operation failed. For the failure reason, see
--   <tt>ErrorMessage</tt>.</li>
--   </ul>
operationSummary_status :: Lens' OperationSummary (Maybe OperationStatus)

-- | The ID for an operation.
operationSummary_id :: Lens' OperationSummary (Maybe Text)

-- | An updated description for the private DNS namespace.
privateDnsNamespaceChange_description :: Lens' PrivateDnsNamespaceChange (Maybe Text)

-- | Properties to be updated in the private DNS namespace.
privateDnsNamespaceChange_properties :: Lens' PrivateDnsNamespaceChange (Maybe PrivateDnsNamespacePropertiesChange)

-- | DNS properties for the private DNS namespace.
privateDnsNamespaceProperties_dnsProperties :: Lens' PrivateDnsNamespaceProperties PrivateDnsPropertiesMutable

-- | Updated DNS properties for the private DNS namespace.
privateDnsNamespacePropertiesChange_dnsProperties :: Lens' PrivateDnsNamespacePropertiesChange PrivateDnsPropertiesMutableChange

-- | Fields for the Start of Authority (SOA) record for the hosted zone for
--   the private DNS namespace.
privateDnsPropertiesMutable_soa :: Lens' PrivateDnsPropertiesMutable SOA

-- | Updated fields for the Start of Authority (SOA) record for the hosted
--   zone for the private DNS namespace.
privateDnsPropertiesMutableChange_soa :: Lens' PrivateDnsPropertiesMutableChange SOAChange

-- | An updated description for the public DNS namespace.
publicDnsNamespaceChange_description :: Lens' PublicDnsNamespaceChange (Maybe Text)

-- | Properties to be updated in the public DNS namespace.
publicDnsNamespaceChange_properties :: Lens' PublicDnsNamespaceChange (Maybe PublicDnsNamespacePropertiesChange)

-- | DNS properties for the public DNS namespace.
publicDnsNamespaceProperties_dnsProperties :: Lens' PublicDnsNamespaceProperties PublicDnsPropertiesMutable

-- | Updated DNS properties for the hosted zone for the public DNS
--   namespace.
publicDnsNamespacePropertiesChange_dnsProperties :: Lens' PublicDnsNamespacePropertiesChange PublicDnsPropertiesMutableChange

-- | Start of Authority (SOA) record for the hosted zone for the public DNS
--   namespace.
publicDnsPropertiesMutable_soa :: Lens' PublicDnsPropertiesMutable SOA

-- | Updated fields for the Start of Authority (SOA) record for the hosted
--   zone for the public DNS namespace.
publicDnsPropertiesMutableChange_soa :: Lens' PublicDnsPropertiesMutableChange SOAChange

-- | The time to live (TTL) for purposes of negative caching.
soa_ttl :: Lens' SOA Natural

-- | The updated time to live (TTL) for purposes of negative caching.
sOAChange_ttl :: Lens' SOAChange Natural

-- | <i>Public DNS and HTTP namespaces only.</i> Settings for an optional
--   health check. If you specify settings for a health check, Cloud Map
--   associates the health check with the records that you specify in
--   <tt>DnsConfig</tt>.
serviceChange_healthCheckConfig :: Lens' ServiceChange (Maybe HealthCheckConfig)

-- | Information about the Route 53 DNS records that you want Cloud Map to
--   create when you register an instance.
serviceChange_dnsConfig :: Lens' ServiceChange (Maybe DnsConfigChange)

-- | A description for the service.
serviceChange_description :: Lens' ServiceChange (Maybe Text)

-- | The operator that you want to use to determine whether a service is
--   returned by <tt>ListServices</tt>. Valid values for <tt>Condition</tt>
--   include the following:
--   
--   <ul>
--   <li><tt>EQ</tt>: When you specify <tt>EQ</tt>, specify one namespace
--   ID for <tt>Values</tt>. <tt>EQ</tt> is the default condition and can
--   be omitted.</li>
--   <li><tt>IN</tt>: When you specify <tt>IN</tt>, specify a list of the
--   IDs for the namespaces that you want <tt>ListServices</tt> to return a
--   list of services for.</li>
--   <li><tt>BETWEEN</tt>: Not applicable.</li>
--   </ul>
serviceFilter_condition :: Lens' ServiceFilter (Maybe FilterCondition)

-- | Specify <tt>NAMESPACE_ID</tt>.
serviceFilter_name :: Lens' ServiceFilter ServiceFilterName

-- | The values that are applicable to the value that you specify for
--   <tt>Condition</tt> to filter the list of services.
serviceFilter_values :: Lens' ServiceFilter [Text]

-- | The number of instances that are currently associated with the
--   service. Instances that were previously associated with the service
--   but that are deleted aren't included in the count. The count might not
--   reflect pending registrations and deregistrations.
serviceInfo_instanceCount :: Lens' ServiceInfo (Maybe Int)

-- | The Amazon Resource Name (ARN) that Cloud Map assigns to the service
--   when you create it.
serviceInfo_arn :: Lens' ServiceInfo (Maybe Text)

-- | <i>Public DNS and HTTP namespaces only.</i> A complex type that
--   contains settings for an optional health check. If you specify
--   settings for a health check, Cloud Map associates the health check
--   with the records that you specify in <tt>DnsConfig</tt>.
--   
--   For information about the charges for health checks, see <a>Amazon
--   Route 53 Pricing</a>.
serviceInfo_healthCheckConfig :: Lens' ServiceInfo (Maybe HealthCheckConfig)

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running the operation
--   twice. <tt>CreatorRequestId</tt> can be any unique string (for
--   example, a date/timestamp).
serviceInfo_creatorRequestId :: Lens' ServiceInfo (Maybe Text)

-- | The date and time that the service was created, in Unix format and
--   Coordinated Universal Time (UTC). The value of <tt>CreateDate</tt> is
--   accurate to milliseconds. For example, the value
--   <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
serviceInfo_createDate :: Lens' ServiceInfo (Maybe UTCTime)

-- | A complex type that contains information about an optional custom
--   health check.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
serviceInfo_healthCheckCustomConfig :: Lens' ServiceInfo (Maybe HealthCheckCustomConfig)

-- | The ID of the namespace that was used to create the service.
serviceInfo_namespaceId :: Lens' ServiceInfo (Maybe Text)

-- | The name of the service.
serviceInfo_name :: Lens' ServiceInfo (Maybe Text)

-- | The ID that Cloud Map assigned to the service when you created it.
serviceInfo_id :: Lens' ServiceInfo (Maybe Text)

-- | Describes the systems that can be used to discover the service
--   instances.
--   
--   <ul>
--   <li><i>DNS_HTTP</i> The service instances can be discovered using
--   either DNS queries or the <tt>DiscoverInstances</tt> API
--   operation.</li>
--   <li><i>HTTP</i> The service instances can only be discovered using the
--   <tt>DiscoverInstances</tt> API operation.</li>
--   <li><i>DNS</i> Reserved.</li>
--   </ul>
serviceInfo_type :: Lens' ServiceInfo (Maybe ServiceType)

-- | A complex type that contains information about the Route 53 DNS
--   records that you want Cloud Map to create when you register an
--   instance.
serviceInfo_dnsConfig :: Lens' ServiceInfo (Maybe DnsConfig)

-- | The description of the service.
serviceInfo_description :: Lens' ServiceInfo (Maybe Text)

-- | The number of instances that are currently associated with the
--   service. Instances that were previously associated with the service
--   but that are deleted aren't included in the count. The count might not
--   reflect pending registrations and deregistrations.
serviceSummary_instanceCount :: Lens' ServiceSummary (Maybe Int)

-- | The Amazon Resource Name (ARN) that Cloud Map assigns to the service
--   when you create it.
serviceSummary_arn :: Lens' ServiceSummary (Maybe Text)

-- | <i>Public DNS and HTTP namespaces only.</i> Settings for an optional
--   health check. If you specify settings for a health check, Cloud Map
--   associates the health check with the records that you specify in
--   <tt>DnsConfig</tt>.
serviceSummary_healthCheckConfig :: Lens' ServiceSummary (Maybe HealthCheckConfig)

-- | The date and time that the service was created.
serviceSummary_createDate :: Lens' ServiceSummary (Maybe UTCTime)

-- | Information about an optional custom health check. A custom health
--   check, which requires that you use a third-party health checker to
--   evaluate the health of your resources, is useful in the following
--   circumstances:
--   
--   <ul>
--   <li>You can't use a health check that's defined by
--   <tt>HealthCheckConfig</tt> because the resource isn't available over
--   the internet. For example, you can use a custom health check when the
--   instance is in an Amazon VPC. (To check the health of resources in a
--   VPC, the health checker must also be in the VPC.)</li>
--   <li>You want to use a third-party health checker regardless of where
--   your resources are located.</li>
--   </ul>
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
serviceSummary_healthCheckCustomConfig :: Lens' ServiceSummary (Maybe HealthCheckCustomConfig)

-- | The name of the service.
serviceSummary_name :: Lens' ServiceSummary (Maybe Text)

-- | The ID that Cloud Map assigned to the service when you created it.
serviceSummary_id :: Lens' ServiceSummary (Maybe Text)

-- | Describes the systems that can be used to discover the service
--   instances.
--   
--   <ul>
--   <li><i>DNS_HTTP</i> The service instances can be discovered using
--   either DNS queries or the <tt>DiscoverInstances</tt> API
--   operation.</li>
--   <li><i>HTTP</i> The service instances can only be discovered using the
--   <tt>DiscoverInstances</tt> API operation.</li>
--   <li><i>DNS</i> Reserved.</li>
--   </ul>
serviceSummary_type :: Lens' ServiceSummary (Maybe ServiceType)

-- | Information about the Route 53 DNS records that you want Cloud Map to
--   create when you register an instance.
serviceSummary_dnsConfig :: Lens' ServiceSummary (Maybe DnsConfig)

-- | The description that you specify when you create the service.
serviceSummary_description :: Lens' ServiceSummary (Maybe Text)

-- | The key identifier, or name, of the tag.
tag_key :: Lens' Tag Text

-- | The string value that's associated with the key of the tag. You can
--   set the value of a tag to an empty string, but you can't set the value
--   of a tag to null.
tag_value :: Lens' Tag Text


module Network.AWS.Route53AutoNaming.Waiters


-- | Derived from API version <tt>2017-03-14</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Cloud Map
--   
--   With Cloud Map, you can configure public DNS, private DNS, or HTTP
--   namespaces that your microservice applications run in. When an
--   instance becomes available, you can call the Cloud Map API to register
--   the instance with Cloud Map. For public or private DNS namespaces,
--   Cloud Map automatically creates DNS records and an optional health
--   check. Clients that submit public or private DNS queries, or HTTP
--   requests, for the service receive an answer that contains up to eight
--   healthy records.
module Network.AWS.Route53AutoNaming

-- | API version <tt>2017-03-14</tt> of the Amazon Cloud Map SDK
--   configuration.
defaultService :: Service

-- | The resource can't be created because you've reached the quota on the
--   number of resources.
_ResourceLimitExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more specified values aren't valid. For example, a required
--   value might be missing, a numeric value might be outside the allowed
--   range, or a string value might exceed length constraints.
_InvalidInput :: AsError a => Getting (First ServiceError) a ServiceError

-- | The namespace that you're trying to create already exists.
_NamespaceAlreadyExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | No namespace exists with the specified ID.
_NamespaceNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service can't be created because a service with the same name
--   already exists.
_ServiceAlreadyExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource can't be deleted because it contains other
--   resources. For example, you can't delete a service that contains any
--   instances.
_ResourceInUse :: AsError a => Getting (First ServiceError) a ServiceError

-- | The list of tags on the resource is over the quota. The maximum number
--   of tags that can be applied to a resource is 50.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The health check for the instance that's specified by
--   <tt>ServiceId</tt> and <tt>InstanceId</tt> isn't a custom health
--   check.
_CustomHealthNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation can't be completed because you've reached the quota for
--   the number of requests. For more information, see <a>Cloud Map API
--   request throttling quota</a> in the <i>Cloud Map Developer Guide</i>.
_RequestLimitExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | No instance exists with the specified ID, or the instance was recently
--   registered, and information about the instance hasn't propagated yet.
_InstanceNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation is already in progress.
_DuplicateRequest :: AsError a => Getting (First ServiceError) a ServiceError

-- | No service exists with the specified ID.
_ServiceNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | No operation exists with the specified ID.
_OperationNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation can't be completed because the resource was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newListServices</a> smart constructor.
data ListServices
ListServices' :: Maybe [ServiceFilter] -> Maybe Text -> Maybe Natural -> ListServices

-- | Create a value of <a>ListServices</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListServices'</a>, <a>listServices_filters</a> - A
--   complex type that contains specifications for the namespaces that you
--   want to list services for.
--   
--   If you specify more than one filter, an operation must match all
--   filters to be returned by <tt>ListServices</tt>.
--   
--   <a>$sel:nextToken:ListServices'</a>, <a>listServices_nextToken</a> -
--   For the first <tt>ListServices</tt> request, omit this value.
--   
--   If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListServices</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> services and then filters them
--   based on the specified criteria. It's possible that no services in the
--   first <tt>MaxResults</tt> services matched the specified criteria but
--   that subsequent groups of <tt>MaxResults</tt> services do contain
--   services that match the criteria.
--   
--   <a>$sel:maxResults:ListServices'</a>, <a>listServices_maxResults</a> -
--   The maximum number of services that you want Cloud Map to return in
--   the response to a <tt>ListServices</tt> request. If you don't specify
--   a value for <tt>MaxResults</tt>, Cloud Map returns up to 100 services.
newListServices :: ListServices

-- | <i>See:</i> <a>newListServicesResponse</a> smart constructor.
data ListServicesResponse
ListServicesResponse' :: Maybe Text -> Maybe [ServiceSummary] -> Int -> ListServicesResponse

-- | Create a value of <a>ListServicesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListServices'</a>,
--   <a>listServicesResponse_nextToken</a> - If the response contains
--   <tt>NextToken</tt>, submit another <tt>ListServices</tt> request to
--   get the next group of results. Specify the value of <tt>NextToken</tt>
--   from the previous response in the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> services and then filters them
--   based on the specified criteria. It's possible that no services in the
--   first <tt>MaxResults</tt> services matched the specified criteria but
--   that subsequent groups of <tt>MaxResults</tt> services do contain
--   services that match the criteria.
--   
--   <a>$sel:services:ListServicesResponse'</a>,
--   <a>listServicesResponse_services</a> - An array that contains one
--   <tt>ServiceSummary</tt> object for each service that matches the
--   specified filter criteria.
--   
--   <a>$sel:httpStatus:ListServicesResponse'</a>,
--   <a>listServicesResponse_httpStatus</a> - The response's http status
--   code.
newListServicesResponse :: Int -> ListServicesResponse

-- | <i>See:</i> <a>newDeleteService</a> smart constructor.
data DeleteService
DeleteService' :: Text -> DeleteService

-- | Create a value of <a>DeleteService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteService'</a>, <a>deleteService_id</a> - The ID of the
--   service that you want to delete.
newDeleteService :: Text -> DeleteService

-- | <i>See:</i> <a>newDeleteServiceResponse</a> smart constructor.
data DeleteServiceResponse
DeleteServiceResponse' :: Int -> DeleteServiceResponse

-- | Create a value of <a>DeleteServiceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteServiceResponse'</a>,
--   <a>deleteServiceResponse_httpStatus</a> - The response's http status
--   code.
newDeleteServiceResponse :: Int -> DeleteServiceResponse

-- | <i>See:</i> <a>newUpdateService</a> smart constructor.
data UpdateService
UpdateService' :: Text -> ServiceChange -> UpdateService

-- | Create a value of <a>UpdateService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:UpdateService'</a>, <a>updateService_id</a> - The ID of the
--   service that you want to update.
--   
--   <a>$sel:service:UpdateService'</a>, <a>updateService_service</a> - A
--   complex type that contains the new settings for the service.
newUpdateService :: Text -> ServiceChange -> UpdateService

-- | <i>See:</i> <a>newUpdateServiceResponse</a> smart constructor.
data UpdateServiceResponse
UpdateServiceResponse' :: Maybe Text -> Int -> UpdateServiceResponse

-- | Create a value of <a>UpdateServiceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:UpdateServiceResponse'</a>,
--   <a>updateServiceResponse_operationId</a> - A value that you can use to
--   determine whether the request completed successfully. To get the
--   status of the operation, see <a>GetOperation</a>.
--   
--   <a>$sel:httpStatus:UpdateServiceResponse'</a>,
--   <a>updateServiceResponse_httpStatus</a> - The response's http status
--   code.
newUpdateServiceResponse :: Int -> UpdateServiceResponse

-- | <i>See:</i> <a>newListOperations</a> smart constructor.
data ListOperations
ListOperations' :: Maybe [OperationFilter] -> Maybe Text -> Maybe Natural -> ListOperations

-- | Create a value of <a>ListOperations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListOperations'</a>, <a>listOperations_filters</a> - A
--   complex type that contains specifications for the operations that you
--   want to list, for example, operations that you started between a
--   specified start date and end date.
--   
--   If you specify more than one filter, an operation must match all
--   filters to be returned by <tt>ListOperations</tt>.
--   
--   <a>$sel:nextToken:ListOperations'</a>, <a>listOperations_nextToken</a>
--   - For the first <tt>ListOperations</tt> request, omit this value.
--   
--   If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListOperations</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> operations and then filters them
--   based on the specified criteria. It's possible that no operations in
--   the first <tt>MaxResults</tt> operations matched the specified
--   criteria but that subsequent groups of <tt>MaxResults</tt> operations
--   do contain operations that match the criteria.
--   
--   <a>$sel:maxResults:ListOperations'</a>,
--   <a>listOperations_maxResults</a> - The maximum number of items that
--   you want Cloud Map to return in the response to a
--   <tt>ListOperations</tt> request. If you don't specify a value for
--   <tt>MaxResults</tt>, Cloud Map returns up to 100 operations.
newListOperations :: ListOperations

-- | <i>See:</i> <a>newListOperationsResponse</a> smart constructor.
data ListOperationsResponse
ListOperationsResponse' :: Maybe Text -> Maybe [OperationSummary] -> Int -> ListOperationsResponse

-- | Create a value of <a>ListOperationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOperations'</a>,
--   <a>listOperationsResponse_nextToken</a> - If the response contains
--   <tt>NextToken</tt>, submit another <tt>ListOperations</tt> request to
--   get the next group of results. Specify the value of <tt>NextToken</tt>
--   from the previous response in the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> operations and then filters them
--   based on the specified criteria. It's possible that no operations in
--   the first <tt>MaxResults</tt> operations matched the specified
--   criteria but that subsequent groups of <tt>MaxResults</tt> operations
--   do contain operations that match the criteria.
--   
--   <a>$sel:operations:ListOperationsResponse'</a>,
--   <a>listOperationsResponse_operations</a> - Summary information about
--   the operations that match the specified criteria.
--   
--   <a>$sel:httpStatus:ListOperationsResponse'</a>,
--   <a>listOperationsResponse_httpStatus</a> - The response's http status
--   code.
newListOperationsResponse :: Int -> ListOperationsResponse

-- | <i>See:</i> <a>newCreateHttpNamespace</a> smart constructor.
data CreateHttpNamespace
CreateHttpNamespace' :: Maybe Text -> Maybe Text -> Maybe [Tag] -> Text -> CreateHttpNamespace

-- | Create a value of <a>CreateHttpNamespace</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creatorRequestId:CreateHttpNamespace'</a>,
--   <a>createHttpNamespace_creatorRequestId</a> - A unique string that
--   identifies the request and that allows failed
--   <tt>CreateHttpNamespace</tt> requests to be retried without the risk
--   of running the operation twice. <tt>CreatorRequestId</tt> can be any
--   unique string (for example, a date/time stamp).
--   
--   <a>$sel:description:CreateHttpNamespace'</a>,
--   <a>createHttpNamespace_description</a> - A description for the
--   namespace.
--   
--   <a>$sel:tags:CreateHttpNamespace'</a>, <a>createHttpNamespace_tags</a>
--   - The tags to add to the namespace. Each tag consists of a key and an
--   optional value that you define. Tags keys can be up to 128 characters
--   in length, and tag values can be up to 256 characters in length.
--   
--   <a>$sel:name:CreateHttpNamespace'</a>, <a>createHttpNamespace_name</a>
--   - The name that you want to assign to this namespace.
newCreateHttpNamespace :: Text -> CreateHttpNamespace

-- | <i>See:</i> <a>newCreateHttpNamespaceResponse</a> smart constructor.
data CreateHttpNamespaceResponse
CreateHttpNamespaceResponse' :: Maybe Text -> Int -> CreateHttpNamespaceResponse

-- | Create a value of <a>CreateHttpNamespaceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:CreateHttpNamespaceResponse'</a>,
--   <a>createHttpNamespaceResponse_operationId</a> - A value that you can
--   use to determine whether the request completed successfully. To get
--   the status of the operation, see <a>GetOperation</a>.
--   
--   <a>$sel:httpStatus:CreateHttpNamespaceResponse'</a>,
--   <a>createHttpNamespaceResponse_httpStatus</a> - The response's http
--   status code.
newCreateHttpNamespaceResponse :: Int -> CreateHttpNamespaceResponse

-- | <i>See:</i> <a>newCreatePublicDnsNamespace</a> smart constructor.
data CreatePublicDnsNamespace
CreatePublicDnsNamespace' :: Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe PublicDnsNamespaceProperties -> Text -> CreatePublicDnsNamespace

-- | Create a value of <a>CreatePublicDnsNamespace</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creatorRequestId:CreatePublicDnsNamespace'</a>,
--   <a>createPublicDnsNamespace_creatorRequestId</a> - A unique string
--   that identifies the request and that allows failed
--   <tt>CreatePublicDnsNamespace</tt> requests to be retried without the
--   risk of running the operation twice. <tt>CreatorRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
--   
--   <a>$sel:description:CreatePublicDnsNamespace'</a>,
--   <a>createPublicDnsNamespace_description</a> - A description for the
--   namespace.
--   
--   <a>$sel:tags:CreatePublicDnsNamespace'</a>,
--   <a>createPublicDnsNamespace_tags</a> - The tags to add to the
--   namespace. Each tag consists of a key and an optional value that you
--   define. Tags keys can be up to 128 characters in length, and tag
--   values can be up to 256 characters in length.
--   
--   <a>$sel:properties:CreatePublicDnsNamespace'</a>,
--   <a>createPublicDnsNamespace_properties</a> - Properties for the public
--   DNS namespace.
--   
--   <a>$sel:name:CreatePublicDnsNamespace'</a>,
--   <a>createPublicDnsNamespace_name</a> - The name that you want to
--   assign to this namespace.
newCreatePublicDnsNamespace :: Text -> CreatePublicDnsNamespace

-- | <i>See:</i> <a>newCreatePublicDnsNamespaceResponse</a> smart
--   constructor.
data CreatePublicDnsNamespaceResponse
CreatePublicDnsNamespaceResponse' :: Maybe Text -> Int -> CreatePublicDnsNamespaceResponse

-- | Create a value of <a>CreatePublicDnsNamespaceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:CreatePublicDnsNamespaceResponse'</a>,
--   <a>createPublicDnsNamespaceResponse_operationId</a> - A value that you
--   can use to determine whether the request completed successfully. To
--   get the status of the operation, see <a>GetOperation</a>.
--   
--   <a>$sel:httpStatus:CreatePublicDnsNamespaceResponse'</a>,
--   <a>createPublicDnsNamespaceResponse_httpStatus</a> - The response's
--   http status code.
newCreatePublicDnsNamespaceResponse :: Int -> CreatePublicDnsNamespaceResponse

-- | <i>See:</i> <a>newGetInstance</a> smart constructor.
data GetInstance
GetInstance' :: Text -> Text -> GetInstance

-- | Create a value of <a>GetInstance</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceId:GetInstance'</a>, <a>getInstance_serviceId</a> - The
--   ID of the service that the instance is associated with.
--   
--   <a>$sel:instanceId:GetInstance'</a>, <a>getInstance_instanceId</a> -
--   The ID of the instance that you want to get information about.
newGetInstance :: Text -> Text -> GetInstance

-- | <i>See:</i> <a>newGetInstanceResponse</a> smart constructor.
data GetInstanceResponse
GetInstanceResponse' :: Maybe Instance -> Int -> GetInstanceResponse

-- | Create a value of <a>GetInstanceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instance':GetInstanceResponse'</a>,
--   <a>getInstanceResponse_instance</a> - A complex type that contains
--   information about a specified instance.
--   
--   <a>$sel:httpStatus:GetInstanceResponse'</a>,
--   <a>getInstanceResponse_httpStatus</a> - The response's http status
--   code.
newGetInstanceResponse :: Int -> GetInstanceResponse

-- | <i>See:</i> <a>newListNamespaces</a> smart constructor.
data ListNamespaces
ListNamespaces' :: Maybe [NamespaceFilter] -> Maybe Text -> Maybe Natural -> ListNamespaces

-- | Create a value of <a>ListNamespaces</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListNamespaces'</a>, <a>listNamespaces_filters</a> - A
--   complex type that contains specifications for the namespaces that you
--   want to list.
--   
--   If you specify more than one filter, a namespace must match all
--   filters to be returned by <tt>ListNamespaces</tt>.
--   
--   <a>$sel:nextToken:ListNamespaces'</a>, <a>listNamespaces_nextToken</a>
--   - For the first <tt>ListNamespaces</tt> request, omit this value.
--   
--   If the response contains <tt>NextToken</tt>, submit another
--   <tt>ListNamespaces</tt> request to get the next group of results.
--   Specify the value of <tt>NextToken</tt> from the previous response in
--   the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> namespaces and then filters them
--   based on the specified criteria. It's possible that no namespaces in
--   the first <tt>MaxResults</tt> namespaces matched the specified
--   criteria but that subsequent groups of <tt>MaxResults</tt> namespaces
--   do contain namespaces that match the criteria.
--   
--   <a>$sel:maxResults:ListNamespaces'</a>,
--   <a>listNamespaces_maxResults</a> - The maximum number of namespaces
--   that you want Cloud Map to return in the response to a
--   <tt>ListNamespaces</tt> request. If you don't specify a value for
--   <tt>MaxResults</tt>, Cloud Map returns up to 100 namespaces.
newListNamespaces :: ListNamespaces

-- | <i>See:</i> <a>newListNamespacesResponse</a> smart constructor.
data ListNamespacesResponse
ListNamespacesResponse' :: Maybe [NamespaceSummary] -> Maybe Text -> Int -> ListNamespacesResponse

-- | Create a value of <a>ListNamespacesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespaces:ListNamespacesResponse'</a>,
--   <a>listNamespacesResponse_namespaces</a> - An array that contains one
--   <tt>NamespaceSummary</tt> object for each namespace that matches the
--   specified filter criteria.
--   
--   <a>$sel:nextToken:ListNamespaces'</a>,
--   <a>listNamespacesResponse_nextToken</a> - If the response contains
--   <tt>NextToken</tt>, submit another <tt>ListNamespaces</tt> request to
--   get the next group of results. Specify the value of <tt>NextToken</tt>
--   from the previous response in the next request.
--   
--   Cloud Map gets <tt>MaxResults</tt> namespaces and then filters them
--   based on the specified criteria. It's possible that no namespaces in
--   the first <tt>MaxResults</tt> namespaces matched the specified
--   criteria but that subsequent groups of <tt>MaxResults</tt> namespaces
--   do contain namespaces that match the criteria.
--   
--   <a>$sel:httpStatus:ListNamespacesResponse'</a>,
--   <a>listNamespacesResponse_httpStatus</a> - The response's http status
--   code.
newListNamespacesResponse :: Int -> ListNamespacesResponse

-- | <i>See:</i> <a>newDeleteNamespace</a> smart constructor.
data DeleteNamespace
DeleteNamespace' :: Text -> DeleteNamespace

-- | Create a value of <a>DeleteNamespace</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteNamespace'</a>, <a>deleteNamespace_id</a> - The ID of
--   the namespace that you want to delete.
newDeleteNamespace :: Text -> DeleteNamespace

-- | <i>See:</i> <a>newDeleteNamespaceResponse</a> smart constructor.
data DeleteNamespaceResponse
DeleteNamespaceResponse' :: Maybe Text -> Int -> DeleteNamespaceResponse

-- | Create a value of <a>DeleteNamespaceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:DeleteNamespaceResponse'</a>,
--   <a>deleteNamespaceResponse_operationId</a> - A value that you can use
--   to determine whether the request completed successfully. To get the
--   status of the operation, see <a>GetOperation</a>.
--   
--   <a>$sel:httpStatus:DeleteNamespaceResponse'</a>,
--   <a>deleteNamespaceResponse_httpStatus</a> - The response's http status
--   code.
newDeleteNamespaceResponse :: Int -> DeleteNamespaceResponse

-- | <i>See:</i> <a>newUpdatePublicDnsNamespace</a> smart constructor.
data UpdatePublicDnsNamespace
UpdatePublicDnsNamespace' :: Maybe Text -> Text -> PublicDnsNamespaceChange -> UpdatePublicDnsNamespace

-- | Create a value of <a>UpdatePublicDnsNamespace</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:updaterRequestId:UpdatePublicDnsNamespace'</a>,
--   <a>updatePublicDnsNamespace_updaterRequestId</a> - A unique string
--   that identifies the request and that allows failed
--   <tt>UpdatePublicDnsNamespace</tt> requests to be retried without the
--   risk of running the operation twice. <tt>UpdaterRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
--   
--   <a>$sel:id:UpdatePublicDnsNamespace'</a>,
--   <a>updatePublicDnsNamespace_id</a> - The ID of the namespace being
--   updated.
--   
--   <a>$sel:namespace:UpdatePublicDnsNamespace'</a>,
--   <a>updatePublicDnsNamespace_namespace</a> - Updated properties for the
--   public DNS namespace.
newUpdatePublicDnsNamespace :: Text -> PublicDnsNamespaceChange -> UpdatePublicDnsNamespace

-- | <i>See:</i> <a>newUpdatePublicDnsNamespaceResponse</a> smart
--   constructor.
data UpdatePublicDnsNamespaceResponse
UpdatePublicDnsNamespaceResponse' :: Maybe Text -> Int -> UpdatePublicDnsNamespaceResponse

-- | Create a value of <a>UpdatePublicDnsNamespaceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:UpdatePublicDnsNamespaceResponse'</a>,
--   <a>updatePublicDnsNamespaceResponse_operationId</a> - A value that you
--   can use to determine whether the request completed successfully. To
--   get the status of the operation, see <a>GetOperation</a>.
--   
--   <a>$sel:httpStatus:UpdatePublicDnsNamespaceResponse'</a>,
--   <a>updatePublicDnsNamespaceResponse_httpStatus</a> - The response's
--   http status code.
newUpdatePublicDnsNamespaceResponse :: Int -> UpdatePublicDnsNamespaceResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The Amazon Resource Name
--   (ARN) of the resource that you want to retrieve tags for.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags that are assigned
--   to the resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newDiscoverInstances</a> smart constructor.
data DiscoverInstances
DiscoverInstances' :: Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Maybe HealthStatusFilter -> Maybe Natural -> Text -> Text -> DiscoverInstances

-- | Create a value of <a>DiscoverInstances</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryParameters:DiscoverInstances'</a>,
--   <a>discoverInstances_queryParameters</a> - Filters to scope the
--   results based on custom attributes for the instance (for example,
--   <tt>{version=v1, az=1a}</tt>). Only instances that match all the
--   specified key-value pairs are returned.
--   
--   <a>$sel:optionalParameters:DiscoverInstances'</a>,
--   <a>discoverInstances_optionalParameters</a> - Opportunistic filters to
--   scope the results based on custom attributes. If there are instances
--   that match both the filters specified in both the
--   <tt>QueryParameters</tt> parameter and this parameter, all of these
--   instances are returned. Otherwise, the filters are ignored, and only
--   instances that match the filters that are specified in the
--   <tt>QueryParameters</tt> parameter are returned.
--   
--   <a>$sel:healthStatus:DiscoverInstances'</a>,
--   <a>discoverInstances_healthStatus</a> - The health status of the
--   instances that you want to discover. This parameter is ignored for
--   services that don't have a health check configured, and all instances
--   are returned.
--   
--   <ul>
--   <li><i>HEALTHY</i> Returns healthy instances.</li>
--   <li><i>UNHEALTHY</i> Returns unhealthy instances.</li>
--   <li><i>ALL</i> Returns all instances.</li>
--   <li><i>HEALTHY_OR_ELSE_ALL</i> Returns healthy instances, unless none
--   are reporting a healthy state. In that case, return all instances.
--   This is also called failing open.</li>
--   </ul>
--   
--   <a>$sel:maxResults:DiscoverInstances'</a>,
--   <a>discoverInstances_maxResults</a> - The maximum number of instances
--   that you want Cloud Map to return in the response to a
--   <tt>DiscoverInstances</tt> request. If you don't specify a value for
--   <tt>MaxResults</tt>, Cloud Map returns up to 100 instances.
--   
--   <a>$sel:namespaceName:DiscoverInstances'</a>,
--   <a>discoverInstances_namespaceName</a> - The <tt>HttpName</tt> name of
--   the namespace. It's found in the <tt>HttpProperties</tt> member of the
--   <tt>Properties</tt> member of the namespace.
--   
--   <a>$sel:serviceName:DiscoverInstances'</a>,
--   <a>discoverInstances_serviceName</a> - The name of the service that
--   you specified when you registered the instance.
newDiscoverInstances :: Text -> Text -> DiscoverInstances

-- | <i>See:</i> <a>newDiscoverInstancesResponse</a> smart constructor.
data DiscoverInstancesResponse
DiscoverInstancesResponse' :: Maybe [HttpInstanceSummary] -> Int -> DiscoverInstancesResponse

-- | Create a value of <a>DiscoverInstancesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instances:DiscoverInstancesResponse'</a>,
--   <a>discoverInstancesResponse_instances</a> - A complex type that
--   contains one <tt>HttpInstanceSummary</tt> for each registered
--   instance.
--   
--   <a>$sel:httpStatus:DiscoverInstancesResponse'</a>,
--   <a>discoverInstancesResponse_httpStatus</a> - The response's http
--   status code.
newDiscoverInstancesResponse :: Int -> DiscoverInstancesResponse

-- | <i>See:</i> <a>newGetInstancesHealthStatus</a> smart constructor.
data GetInstancesHealthStatus
GetInstancesHealthStatus' :: Maybe Text -> Maybe (NonEmpty Text) -> Maybe Natural -> Text -> GetInstancesHealthStatus

-- | Create a value of <a>GetInstancesHealthStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetInstancesHealthStatus'</a>,
--   <a>getInstancesHealthStatus_nextToken</a> - For the first
--   <tt>GetInstancesHealthStatus</tt> request, omit this value.
--   
--   If more than <tt>MaxResults</tt> instances match the specified
--   criteria, you can submit another <tt>GetInstancesHealthStatus</tt>
--   request to get the next group of results. Specify the value of
--   <tt>NextToken</tt> from the previous response in the next request.
--   
--   <a>$sel:instances:GetInstancesHealthStatus'</a>,
--   <a>getInstancesHealthStatus_instances</a> - An array that contains the
--   IDs of all the instances that you want to get the health status for.
--   
--   If you omit <tt>Instances</tt>, Cloud Map returns the health status
--   for all the instances that are associated with the specified service.
--   
--   To get the IDs for the instances that you've registered by using a
--   specified service, submit a <a>ListInstances</a> request.
--   
--   <a>$sel:maxResults:GetInstancesHealthStatus'</a>,
--   <a>getInstancesHealthStatus_maxResults</a> - The maximum number of
--   instances that you want Cloud Map to return in the response to a
--   <tt>GetInstancesHealthStatus</tt> request. If you don't specify a
--   value for <tt>MaxResults</tt>, Cloud Map returns up to 100 instances.
--   
--   <a>$sel:serviceId:GetInstancesHealthStatus'</a>,
--   <a>getInstancesHealthStatus_serviceId</a> - The ID of the service that
--   the instance is associated with.
newGetInstancesHealthStatus :: Text -> GetInstancesHealthStatus

-- | <i>See:</i> <a>newGetInstancesHealthStatusResponse</a> smart
--   constructor.
data GetInstancesHealthStatusResponse
GetInstancesHealthStatusResponse' :: Maybe (HashMap Text HealthStatus) -> Maybe Text -> Int -> GetInstancesHealthStatusResponse

-- | Create a value of <a>GetInstancesHealthStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetInstancesHealthStatusResponse'</a>,
--   <a>getInstancesHealthStatusResponse_status</a> - A complex type that
--   contains the IDs and the health status of the instances that you
--   specified in the <tt>GetInstancesHealthStatus</tt> request.
--   
--   <a>$sel:nextToken:GetInstancesHealthStatus'</a>,
--   <a>getInstancesHealthStatusResponse_nextToken</a> - If more than
--   <tt>MaxResults</tt> instances match the specified criteria, you can
--   submit another <tt>GetInstancesHealthStatus</tt> request to get the
--   next group of results. Specify the value of <tt>NextToken</tt> from
--   the previous response in the next request.
--   
--   <a>$sel:httpStatus:GetInstancesHealthStatusResponse'</a>,
--   <a>getInstancesHealthStatusResponse_httpStatus</a> - The response's
--   http status code.
newGetInstancesHealthStatusResponse :: Int -> GetInstancesHealthStatusResponse

-- | <i>See:</i> <a>newUpdateHttpNamespace</a> smart constructor.
data UpdateHttpNamespace
UpdateHttpNamespace' :: Maybe Text -> Text -> HttpNamespaceChange -> UpdateHttpNamespace

-- | Create a value of <a>UpdateHttpNamespace</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:updaterRequestId:UpdateHttpNamespace'</a>,
--   <a>updateHttpNamespace_updaterRequestId</a> - A unique string that
--   identifies the request and that allows failed
--   <tt>UpdateHttpNamespace</tt> requests to be retried without the risk
--   of running the operation twice. <tt>UpdaterRequestId</tt> can be any
--   unique string (for example, a date/timestamp).
--   
--   <a>$sel:id:UpdateHttpNamespace'</a>, <a>updateHttpNamespace_id</a> -
--   The ID of the namespace that you want to update.
--   
--   <a>$sel:namespace:UpdateHttpNamespace'</a>,
--   <a>updateHttpNamespace_namespace</a> - Updated properties for the the
--   HTTP namespace.
newUpdateHttpNamespace :: Text -> HttpNamespaceChange -> UpdateHttpNamespace

-- | <i>See:</i> <a>newUpdateHttpNamespaceResponse</a> smart constructor.
data UpdateHttpNamespaceResponse
UpdateHttpNamespaceResponse' :: Maybe Text -> Int -> UpdateHttpNamespaceResponse

-- | Create a value of <a>UpdateHttpNamespaceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:UpdateHttpNamespaceResponse'</a>,
--   <a>updateHttpNamespaceResponse_operationId</a> - A value that you can
--   use to determine whether the request completed successfully. To get
--   the status of the operation, see <a>GetOperation</a>.
--   
--   <a>$sel:httpStatus:UpdateHttpNamespaceResponse'</a>,
--   <a>updateHttpNamespaceResponse_httpStatus</a> - The response's http
--   status code.
newUpdateHttpNamespaceResponse :: Int -> UpdateHttpNamespaceResponse

-- | <i>See:</i> <a>newGetNamespace</a> smart constructor.
data GetNamespace
GetNamespace' :: Text -> GetNamespace

-- | Create a value of <a>GetNamespace</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:GetNamespace'</a>, <a>getNamespace_id</a> - The ID of the
--   namespace that you want to get information about.
newGetNamespace :: Text -> GetNamespace

-- | <i>See:</i> <a>newGetNamespaceResponse</a> smart constructor.
data GetNamespaceResponse
GetNamespaceResponse' :: Maybe Namespace -> Int -> GetNamespaceResponse

-- | Create a value of <a>GetNamespaceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:GetNamespaceResponse'</a>,
--   <a>getNamespaceResponse_namespace</a> - A complex type that contains
--   information about the specified namespace.
--   
--   <a>$sel:httpStatus:GetNamespaceResponse'</a>,
--   <a>getNamespaceResponse_httpStatus</a> - The response's http status
--   code.
newGetNamespaceResponse :: Int -> GetNamespaceResponse

-- | <i>See:</i> <a>newRegisterInstance</a> smart constructor.
data RegisterInstance
RegisterInstance' :: Maybe Text -> Text -> Text -> HashMap Text Text -> RegisterInstance

-- | Create a value of <a>RegisterInstance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creatorRequestId:RegisterInstance'</a>,
--   <a>registerInstance_creatorRequestId</a> - A unique string that
--   identifies the request and that allows failed
--   <tt>RegisterInstance</tt> requests to be retried without the risk of
--   executing the operation twice. You must use a unique
--   <tt>CreatorRequestId</tt> string every time you submit a
--   <tt>RegisterInstance</tt> request if you're registering additional
--   instances for the same namespace and service.
--   <tt>CreatorRequestId</tt> can be any unique string (for example, a
--   date/time stamp).
--   
--   <a>$sel:serviceId:RegisterInstance'</a>,
--   <a>registerInstance_serviceId</a> - The ID of the service that you
--   want to use for settings for the instance.
--   
--   <a>$sel:instanceId:RegisterInstance'</a>,
--   <a>registerInstance_instanceId</a> - An identifier that you want to
--   associate with the instance. Note the following:
--   
--   <ul>
--   <li>If the service that's specified by <tt>ServiceId</tt> includes
--   settings for an <tt>SRV</tt> record, the value of <tt>InstanceId</tt>
--   is automatically included as part of the value for the <tt>SRV</tt>
--   record. For more information, see <a>DnsRecord</a> Type&gt;.</li>
--   <li>You can use this value to update an existing instance.</li>
--   <li>To register a new instance, you must specify a value that's unique
--   among instances that you register by using the same service.</li>
--   <li>If you specify an existing <tt>InstanceId</tt> and
--   <tt>ServiceId</tt>, Cloud Map updates the existing DNS records, if
--   any. If there's also an existing health check, Cloud Map deletes the
--   old health check and creates a new one.The health check isn't deleted
--   immediately, so it will still appear for a while if you submit a
--   <tt>ListHealthChecks</tt> request, for example.</li>
--   </ul>
--   
--   <a>$sel:attributes:RegisterInstance'</a>,
--   <a>registerInstance_attributes</a> - A string map that contains the
--   following information for the service that you specify in
--   <tt>ServiceId</tt>:
--   
--   <ul>
--   <li>The attributes that apply to the records that are defined in the
--   service.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> If you want Cloud Map to create an
--   Amazon Route 53 alias record that routes traffic to an Elastic Load
--   Balancing load balancer, specify the DNS name that's associated with
--   the load balancer. For information about how to get the DNS name, see
--   "DNSName" in the topic <a>AliasTarget</a> in the <i>Route 53 API
--   Reference</i>.Note the following:<ul><li>The configuration for the
--   service that's specified by <tt>ServiceId</tt> must include settings
--   for an <tt>A</tt> record, an <tt>AAAA</tt> record, or both.</li><li>In
--   the service that's specified by <tt>ServiceId</tt>, the value of
--   <tt>RoutingPolicy</tt> must be <tt>WEIGHTED</tt>.</li><li>If the
--   service that's specified by <tt>ServiceId</tt> includes
--   <tt>HealthCheckConfig</tt> settings, Cloud Map will create the Route
--   53 health check, but it doesn't associate the health check with the
--   alias record.</li><li>Auto naming currently doesn't support creating
--   alias records that route traffic to Amazon Web Services resources
--   other than Elastic Load Balancing load balancers.</li><li>If you
--   specify a value for <tt>AWS_ALIAS_DNS_NAME</tt>, don't specify values
--   for any of the <tt>AWS_INSTANCE</tt> attributes.</li></ul></li>
--   <li><i>AWS_EC2_INSTANCE_ID</i> <i>HTTP namespaces only.</i> The Amazon
--   EC2 instance ID for the instance. If the <tt>AWS_EC2_INSTANCE_ID</tt>
--   attribute is specified, then the only other attribute that can be
--   specified is <tt>AWS_INIT_HEALTH_STATUS</tt>. When the
--   <tt>AWS_EC2_INSTANCE_ID</tt> attribute is specified, then the
--   <tt>AWS_INSTANCE_IPV4</tt> attribute will be filled out with the
--   primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> If the service configuration includes a
--   <tt>CNAME</tt> record, the domain name that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>example.com</tt>).This value is required if the service specified
--   by <tt>ServiceId</tt> includes settings for an <tt>CNAME</tt>
--   record.</li>
--   <li><i>AWS_INSTANCE_IPV4</i> If the service configuration includes an
--   <tt>A</tt> record, the IPv4 address that you want Route 53 to return
--   in response to DNS queries (for example, <tt>192.0.2.44</tt>).This
--   value is required if the service specified by <tt>ServiceId</tt>
--   includes settings for an <tt>A</tt> record. If the service includes
--   settings for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_IPV6</i> If the service configuration includes an
--   <tt>AAAA</tt> record, the IPv6 address that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).This value is
--   required if the service specified by <tt>ServiceId</tt> includes
--   settings for an <tt>AAAA</tt> record. If the service includes settings
--   for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_PORT</i> If the service includes an <tt>SRV</tt>
--   record, the value that you want Route 53 to return for the port.If the
--   service includes <tt>HealthCheckConfig</tt>, the port on the endpoint
--   that you want Route 53 to send requests to.This value is required if
--   you specified settings for an <tt>SRV</tt> record or a Route 53 health
--   check when you created the service.</li>
--   <li><i>Custom attributes</i> You can add up to 30 custom attributes.
--   For each key-value pair, the maximum length of the attribute name is
--   255 characters, and the maximum length of the attribute value is 1,024
--   characters. The total size of all provided attributes (sum of all keys
--   and values) must not exceed 5,000 characters.</li>
--   </ul>
newRegisterInstance :: Text -> Text -> RegisterInstance

-- | <i>See:</i> <a>newRegisterInstanceResponse</a> smart constructor.
data RegisterInstanceResponse
RegisterInstanceResponse' :: Maybe Text -> Int -> RegisterInstanceResponse

-- | Create a value of <a>RegisterInstanceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:RegisterInstanceResponse'</a>,
--   <a>registerInstanceResponse_operationId</a> - A value that you can use
--   to determine whether the request completed successfully. To get the
--   status of the operation, see <a>GetOperation</a>.
--   
--   <a>$sel:httpStatus:RegisterInstanceResponse'</a>,
--   <a>registerInstanceResponse_httpStatus</a> - The response's http
--   status code.
newRegisterInstanceResponse :: Int -> RegisterInstanceResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The Amazon Resource Name (ARN) of the resource that you want to
--   retrieve tags for.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   add to the specified resource. Specifying the tag key is required. You
--   can set the value of a tag to an empty string, but you can't set the
--   value of a tag to null.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newListInstances</a> smart constructor.
data ListInstances
ListInstances' :: Maybe Text -> Maybe Natural -> Text -> ListInstances

-- | Create a value of <a>ListInstances</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListInstances'</a>, <a>listInstances_nextToken</a> -
--   For the first <tt>ListInstances</tt> request, omit this value.
--   
--   If more than <tt>MaxResults</tt> instances match the specified
--   criteria, you can submit another <tt>ListInstances</tt> request to get
--   the next group of results. Specify the value of <tt>NextToken</tt>
--   from the previous response in the next request.
--   
--   <a>$sel:maxResults:ListInstances'</a>, <a>listInstances_maxResults</a>
--   - The maximum number of instances that you want Cloud Map to return in
--   the response to a <tt>ListInstances</tt> request. If you don't specify
--   a value for <tt>MaxResults</tt>, Cloud Map returns up to 100
--   instances.
--   
--   <a>$sel:serviceId:ListInstances'</a>, <a>listInstances_serviceId</a> -
--   The ID of the service that you want to list instances for.
newListInstances :: Text -> ListInstances

-- | <i>See:</i> <a>newListInstancesResponse</a> smart constructor.
data ListInstancesResponse
ListInstancesResponse' :: Maybe Text -> Maybe [InstanceSummary] -> Int -> ListInstancesResponse

-- | Create a value of <a>ListInstancesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListInstances'</a>,
--   <a>listInstancesResponse_nextToken</a> - If more than
--   <tt>MaxResults</tt> instances match the specified criteria, you can
--   submit another <tt>ListInstances</tt> request to get the next group of
--   results. Specify the value of <tt>NextToken</tt> from the previous
--   response in the next request.
--   
--   <a>$sel:instances:ListInstancesResponse'</a>,
--   <a>listInstancesResponse_instances</a> - Summary information about the
--   instances that are associated with the specified service.
--   
--   <a>$sel:httpStatus:ListInstancesResponse'</a>,
--   <a>listInstancesResponse_httpStatus</a> - The response's http status
--   code.
newListInstancesResponse :: Int -> ListInstancesResponse

-- | <i>See:</i> <a>newGetOperation</a> smart constructor.
data GetOperation
GetOperation' :: Text -> GetOperation

-- | Create a value of <a>GetOperation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:GetOperation'</a>, <a>getOperation_operationId</a>
--   - The ID of the operation that you want to get more information about.
newGetOperation :: Text -> GetOperation

-- | <i>See:</i> <a>newGetOperationResponse</a> smart constructor.
data GetOperationResponse
GetOperationResponse' :: Maybe Operation -> Int -> GetOperationResponse

-- | Create a value of <a>GetOperationResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operation:GetOperationResponse'</a>,
--   <a>getOperationResponse_operation</a> - A complex type that contains
--   information about the operation.
--   
--   <a>$sel:httpStatus:GetOperationResponse'</a>,
--   <a>getOperationResponse_httpStatus</a> - The response's http status
--   code.
newGetOperationResponse :: Int -> GetOperationResponse

-- | <i>See:</i> <a>newUpdateInstanceCustomHealthStatus</a> smart
--   constructor.
data UpdateInstanceCustomHealthStatus
UpdateInstanceCustomHealthStatus' :: Text -> Text -> CustomHealthStatus -> UpdateInstanceCustomHealthStatus

-- | Create a value of <a>UpdateInstanceCustomHealthStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceId:UpdateInstanceCustomHealthStatus'</a>,
--   <a>updateInstanceCustomHealthStatus_serviceId</a> - The ID of the
--   service that includes the configuration for the custom health check
--   that you want to change the status for.
--   
--   <a>$sel:instanceId:UpdateInstanceCustomHealthStatus'</a>,
--   <a>updateInstanceCustomHealthStatus_instanceId</a> - The ID of the
--   instance that you want to change the health status for.
--   
--   <a>$sel:status:UpdateInstanceCustomHealthStatus'</a>,
--   <a>updateInstanceCustomHealthStatus_status</a> - The new status of the
--   instance, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>.
newUpdateInstanceCustomHealthStatus :: Text -> Text -> CustomHealthStatus -> UpdateInstanceCustomHealthStatus

-- | <i>See:</i> <a>newUpdateInstanceCustomHealthStatusResponse</a> smart
--   constructor.
data UpdateInstanceCustomHealthStatusResponse
UpdateInstanceCustomHealthStatusResponse' :: UpdateInstanceCustomHealthStatusResponse

-- | Create a value of <a>UpdateInstanceCustomHealthStatusResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateInstanceCustomHealthStatusResponse :: UpdateInstanceCustomHealthStatusResponse

-- | <i>See:</i> <a>newGetService</a> smart constructor.
data GetService
GetService' :: Text -> GetService

-- | Create a value of <a>GetService</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:GetService'</a>, <a>getService_id</a> - The ID of the
--   service that you want to get settings for.
newGetService :: Text -> GetService

-- | <i>See:</i> <a>newGetServiceResponse</a> smart constructor.
data GetServiceResponse
GetServiceResponse' :: Maybe ServiceInfo -> Int -> GetServiceResponse

-- | Create a value of <a>GetServiceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:service:GetServiceResponse'</a>,
--   <a>getServiceResponse_service</a> - A complex type that contains
--   information about the service.
--   
--   <a>$sel:httpStatus:GetServiceResponse'</a>,
--   <a>getServiceResponse_httpStatus</a> - The response's http status
--   code.
newGetServiceResponse :: Int -> GetServiceResponse

-- | <i>See:</i> <a>newCreatePrivateDnsNamespace</a> smart constructor.
data CreatePrivateDnsNamespace
CreatePrivateDnsNamespace' :: Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe PrivateDnsNamespaceProperties -> Text -> Text -> CreatePrivateDnsNamespace

-- | Create a value of <a>CreatePrivateDnsNamespace</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creatorRequestId:CreatePrivateDnsNamespace'</a>,
--   <a>createPrivateDnsNamespace_creatorRequestId</a> - A unique string
--   that identifies the request and that allows failed
--   <tt>CreatePrivateDnsNamespace</tt> requests to be retried without the
--   risk of running the operation twice. <tt>CreatorRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
--   
--   <a>$sel:description:CreatePrivateDnsNamespace'</a>,
--   <a>createPrivateDnsNamespace_description</a> - A description for the
--   namespace.
--   
--   <a>$sel:tags:CreatePrivateDnsNamespace'</a>,
--   <a>createPrivateDnsNamespace_tags</a> - The tags to add to the
--   namespace. Each tag consists of a key and an optional value that you
--   define. Tags keys can be up to 128 characters in length, and tag
--   values can be up to 256 characters in length.
--   
--   <a>$sel:properties:CreatePrivateDnsNamespace'</a>,
--   <a>createPrivateDnsNamespace_properties</a> - Properties for the
--   private DNS namespace.
--   
--   <a>$sel:name:CreatePrivateDnsNamespace'</a>,
--   <a>createPrivateDnsNamespace_name</a> - The name that you want to
--   assign to this namespace. When you create a private DNS namespace,
--   Cloud Map automatically creates an Amazon Route 53 private hosted zone
--   that has the same name as the namespace.
--   
--   <a>$sel:vpc:CreatePrivateDnsNamespace'</a>,
--   <a>createPrivateDnsNamespace_vpc</a> - The ID of the Amazon VPC that
--   you want to associate the namespace with.
newCreatePrivateDnsNamespace :: Text -> Text -> CreatePrivateDnsNamespace

-- | <i>See:</i> <a>newCreatePrivateDnsNamespaceResponse</a> smart
--   constructor.
data CreatePrivateDnsNamespaceResponse
CreatePrivateDnsNamespaceResponse' :: Maybe Text -> Int -> CreatePrivateDnsNamespaceResponse

-- | Create a value of <a>CreatePrivateDnsNamespaceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:CreatePrivateDnsNamespaceResponse'</a>,
--   <a>createPrivateDnsNamespaceResponse_operationId</a> - A value that
--   you can use to determine whether the request completed successfully.
--   To get the status of the operation, see <a>GetOperation</a>.
--   
--   <a>$sel:httpStatus:CreatePrivateDnsNamespaceResponse'</a>,
--   <a>createPrivateDnsNamespaceResponse_httpStatus</a> - The response's
--   http status code.
newCreatePrivateDnsNamespaceResponse :: Int -> CreatePrivateDnsNamespaceResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - The Amazon Resource Name (ARN) of
--   the resource that you want to retrieve tags for.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys to remove from the specified resource.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newUpdatePrivateDnsNamespace</a> smart constructor.
data UpdatePrivateDnsNamespace
UpdatePrivateDnsNamespace' :: Maybe Text -> Text -> PrivateDnsNamespaceChange -> UpdatePrivateDnsNamespace

-- | Create a value of <a>UpdatePrivateDnsNamespace</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:updaterRequestId:UpdatePrivateDnsNamespace'</a>,
--   <a>updatePrivateDnsNamespace_updaterRequestId</a> - A unique string
--   that identifies the request and that allows failed
--   <tt>UpdatePrivateDnsNamespace</tt> requests to be retried without the
--   risk of running the operation twice. <tt>UpdaterRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
--   
--   <a>$sel:id:UpdatePrivateDnsNamespace'</a>,
--   <a>updatePrivateDnsNamespace_id</a> - The ID of the namespace that you
--   want to update.
--   
--   <a>$sel:namespace:UpdatePrivateDnsNamespace'</a>,
--   <a>updatePrivateDnsNamespace_namespace</a> - Updated properties for
--   the private DNS namespace.
newUpdatePrivateDnsNamespace :: Text -> PrivateDnsNamespaceChange -> UpdatePrivateDnsNamespace

-- | <i>See:</i> <a>newUpdatePrivateDnsNamespaceResponse</a> smart
--   constructor.
data UpdatePrivateDnsNamespaceResponse
UpdatePrivateDnsNamespaceResponse' :: Maybe Text -> Int -> UpdatePrivateDnsNamespaceResponse

-- | Create a value of <a>UpdatePrivateDnsNamespaceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:UpdatePrivateDnsNamespaceResponse'</a>,
--   <a>updatePrivateDnsNamespaceResponse_operationId</a> - A value that
--   you can use to determine whether the request completed successfully.
--   To get the status of the operation, see <a>GetOperation</a>.
--   
--   <a>$sel:httpStatus:UpdatePrivateDnsNamespaceResponse'</a>,
--   <a>updatePrivateDnsNamespaceResponse_httpStatus</a> - The response's
--   http status code.
newUpdatePrivateDnsNamespaceResponse :: Int -> UpdatePrivateDnsNamespaceResponse

-- | <i>See:</i> <a>newCreateService</a> smart constructor.
data CreateService
CreateService' :: Maybe HealthCheckConfig -> Maybe Text -> Maybe HealthCheckCustomConfig -> Maybe Text -> Maybe ServiceTypeOption -> Maybe DnsConfig -> Maybe Text -> Maybe [Tag] -> Text -> CreateService

-- | Create a value of <a>CreateService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthCheckConfig:CreateService'</a>,
--   <a>createService_healthCheckConfig</a> - <i>Public DNS and HTTP
--   namespaces only.</i> A complex type that contains settings for an
--   optional Route 53 health check. If you specify settings for a health
--   check, Cloud Map associates the health check with all the Route 53 DNS
--   records that you specify in <tt>DnsConfig</tt>.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   For information about the charges for health checks, see <a>Cloud Map
--   Pricing</a>.
--   
--   <a>$sel:creatorRequestId:CreateService'</a>,
--   <a>createService_creatorRequestId</a> - A unique string that
--   identifies the request and that allows failed <tt>CreateService</tt>
--   requests to be retried without the risk of running the operation
--   twice. <tt>CreatorRequestId</tt> can be any unique string (for
--   example, a date/timestamp).
--   
--   <a>$sel:healthCheckCustomConfig:CreateService'</a>,
--   <a>createService_healthCheckCustomConfig</a> - A complex type that
--   contains information about an optional custom health check.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   You can't add, update, or delete a <tt>HealthCheckCustomConfig</tt>
--   configuration from an existing service.
--   
--   <a>$sel:namespaceId:CreateService'</a>,
--   <a>createService_namespaceId</a> - The ID of the namespace that you
--   want to use to create the service. The namespace ID must be specified,
--   but it can be specified either here or in the <tt>DnsConfig</tt>
--   object.
--   
--   <a>$sel:type':CreateService'</a>, <a>createService_type</a> - If
--   present, specifies that the service instances are only discoverable
--   using the <tt>DiscoverInstances</tt> API operation. No DNS records is
--   registered for the service instances. The only valid value is
--   <tt>HTTP</tt>.
--   
--   <a>$sel:dnsConfig:CreateService'</a>, <a>createService_dnsConfig</a> -
--   A complex type that contains information about the Amazon Route 53
--   records that you want Cloud Map to create when you register an
--   instance.
--   
--   <a>$sel:description:CreateService'</a>,
--   <a>createService_description</a> - A description for the service.
--   
--   <a>$sel:tags:CreateService'</a>, <a>createService_tags</a> - The tags
--   to add to the service. Each tag consists of a key and an optional
--   value that you define. Tags keys can be up to 128 characters in
--   length, and tag values can be up to 256 characters in length.
--   
--   <a>$sel:name:CreateService'</a>, <a>createService_name</a> - The name
--   that you want to assign to the service.
--   
--   If you want Cloud Map to create an <tt>SRV</tt> record when you
--   register an instance and you're using a system that requires a
--   specific <tt>SRV</tt> format, such as <a>HAProxy</a>, specify the
--   following for <tt>Name</tt>:
--   
--   <ul>
--   <li>Start the name with an underscore (_), such as
--   <tt>_exampleservice</tt>.</li>
--   <li>End the name with <i>._protocol</i>, such as <tt>._tcp</tt>.</li>
--   </ul>
--   
--   When you register an instance, Cloud Map creates an <tt>SRV</tt>
--   record and assigns a name to the record by concatenating the service
--   name and the namespace name (for example,
--   
--   <tt>_exampleservice._tcp.example.com</tt>).
--   
--   For services that are accessible by DNS queries, you can't create
--   multiple services with names that differ only by case (such as EXAMPLE
--   and example). Otherwise, these services have the same DNS name and
--   can't be distinguished. However, if you use a namespace that's only
--   accessible by API calls, then you can create services that with names
--   that differ only by case.
newCreateService :: Text -> CreateService

-- | <i>See:</i> <a>newCreateServiceResponse</a> smart constructor.
data CreateServiceResponse
CreateServiceResponse' :: Maybe ServiceInfo -> Int -> CreateServiceResponse

-- | Create a value of <a>CreateServiceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:service:CreateServiceResponse'</a>,
--   <a>createServiceResponse_service</a> - A complex type that contains
--   information about the new service.
--   
--   <a>$sel:httpStatus:CreateServiceResponse'</a>,
--   <a>createServiceResponse_httpStatus</a> - The response's http status
--   code.
newCreateServiceResponse :: Int -> CreateServiceResponse

-- | <i>See:</i> <a>newDeregisterInstance</a> smart constructor.
data DeregisterInstance
DeregisterInstance' :: Text -> Text -> DeregisterInstance

-- | Create a value of <a>DeregisterInstance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceId:DeregisterInstance'</a>,
--   <a>deregisterInstance_serviceId</a> - The ID of the service that the
--   instance is associated with.
--   
--   <a>$sel:instanceId:DeregisterInstance'</a>,
--   <a>deregisterInstance_instanceId</a> - The value that you specified
--   for <tt>Id</tt> in the <a>RegisterInstance</a> request.
newDeregisterInstance :: Text -> Text -> DeregisterInstance

-- | <i>See:</i> <a>newDeregisterInstanceResponse</a> smart constructor.
data DeregisterInstanceResponse
DeregisterInstanceResponse' :: Maybe Text -> Int -> DeregisterInstanceResponse

-- | Create a value of <a>DeregisterInstanceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationId:DeregisterInstanceResponse'</a>,
--   <a>deregisterInstanceResponse_operationId</a> - A value that you can
--   use to determine whether the request completed successfully. To get
--   the status of the operation, see <a>GetOperation</a>.
--   
--   <a>$sel:httpStatus:DeregisterInstanceResponse'</a>,
--   <a>deregisterInstanceResponse_httpStatus</a> - The response's http
--   status code.
newDeregisterInstanceResponse :: Int -> DeregisterInstanceResponse
newtype CustomHealthStatus
CustomHealthStatus' :: Text -> CustomHealthStatus
[fromCustomHealthStatus] :: CustomHealthStatus -> Text
pattern CustomHealthStatus_HEALTHY :: CustomHealthStatus
pattern CustomHealthStatus_UNHEALTHY :: CustomHealthStatus
newtype FilterCondition
FilterCondition' :: Text -> FilterCondition
[fromFilterCondition] :: FilterCondition -> Text
pattern FilterCondition_BETWEEN :: FilterCondition
pattern FilterCondition_EQ :: FilterCondition
pattern FilterCondition_IN :: FilterCondition
newtype HealthCheckType
HealthCheckType' :: Text -> HealthCheckType
[fromHealthCheckType] :: HealthCheckType -> Text
pattern HealthCheckType_HTTP :: HealthCheckType
pattern HealthCheckType_HTTPS :: HealthCheckType
pattern HealthCheckType_TCP :: HealthCheckType
newtype HealthStatus
HealthStatus' :: Text -> HealthStatus
[fromHealthStatus] :: HealthStatus -> Text
pattern HealthStatus_HEALTHY :: HealthStatus
pattern HealthStatus_UNHEALTHY :: HealthStatus
pattern HealthStatus_UNKNOWN :: HealthStatus
newtype HealthStatusFilter
HealthStatusFilter' :: Text -> HealthStatusFilter
[fromHealthStatusFilter] :: HealthStatusFilter -> Text
pattern HealthStatusFilter_ALL :: HealthStatusFilter
pattern HealthStatusFilter_HEALTHY :: HealthStatusFilter
pattern HealthStatusFilter_HEALTHY_OR_ELSE_ALL :: HealthStatusFilter
pattern HealthStatusFilter_UNHEALTHY :: HealthStatusFilter
newtype NamespaceFilterName
NamespaceFilterName' :: Text -> NamespaceFilterName
[fromNamespaceFilterName] :: NamespaceFilterName -> Text
pattern NamespaceFilterName_TYPE :: NamespaceFilterName
newtype NamespaceType
NamespaceType' :: Text -> NamespaceType
[fromNamespaceType] :: NamespaceType -> Text
pattern NamespaceType_DNS_PRIVATE :: NamespaceType
pattern NamespaceType_DNS_PUBLIC :: NamespaceType
pattern NamespaceType_HTTP :: NamespaceType
newtype OperationFilterName
OperationFilterName' :: Text -> OperationFilterName
[fromOperationFilterName] :: OperationFilterName -> Text
pattern OperationFilterName_NAMESPACE_ID :: OperationFilterName
pattern OperationFilterName_SERVICE_ID :: OperationFilterName
pattern OperationFilterName_STATUS :: OperationFilterName
pattern OperationFilterName_TYPE :: OperationFilterName
pattern OperationFilterName_UPDATE_DATE :: OperationFilterName
newtype OperationStatus
OperationStatus' :: Text -> OperationStatus
[fromOperationStatus] :: OperationStatus -> Text
pattern OperationStatus_FAIL :: OperationStatus
pattern OperationStatus_PENDING :: OperationStatus
pattern OperationStatus_SUBMITTED :: OperationStatus
pattern OperationStatus_SUCCESS :: OperationStatus
newtype OperationTargetType
OperationTargetType' :: Text -> OperationTargetType
[fromOperationTargetType] :: OperationTargetType -> Text
pattern OperationTargetType_INSTANCE :: OperationTargetType
pattern OperationTargetType_NAMESPACE :: OperationTargetType
pattern OperationTargetType_SERVICE :: OperationTargetType
newtype OperationType
OperationType' :: Text -> OperationType
[fromOperationType] :: OperationType -> Text
pattern OperationType_CREATE_NAMESPACE :: OperationType
pattern OperationType_DELETE_NAMESPACE :: OperationType
pattern OperationType_DEREGISTER_INSTANCE :: OperationType
pattern OperationType_REGISTER_INSTANCE :: OperationType
pattern OperationType_UPDATE_NAMESPACE :: OperationType
pattern OperationType_UPDATE_SERVICE :: OperationType
newtype RecordType
RecordType' :: Text -> RecordType
[fromRecordType] :: RecordType -> Text
pattern RecordType_A :: RecordType
pattern RecordType_AAAA :: RecordType
pattern RecordType_CNAME :: RecordType
pattern RecordType_SRV :: RecordType
newtype RoutingPolicy
RoutingPolicy' :: Text -> RoutingPolicy
[fromRoutingPolicy] :: RoutingPolicy -> Text
pattern RoutingPolicy_MULTIVALUE :: RoutingPolicy
pattern RoutingPolicy_WEIGHTED :: RoutingPolicy
newtype ServiceFilterName
ServiceFilterName' :: Text -> ServiceFilterName
[fromServiceFilterName] :: ServiceFilterName -> Text
pattern ServiceFilterName_NAMESPACE_ID :: ServiceFilterName
newtype ServiceType
ServiceType' :: Text -> ServiceType
[fromServiceType] :: ServiceType -> Text
pattern ServiceType_DNS :: ServiceType
pattern ServiceType_DNS_HTTP :: ServiceType
pattern ServiceType_HTTP :: ServiceType
newtype ServiceTypeOption
ServiceTypeOption' :: Text -> ServiceTypeOption
[fromServiceTypeOption] :: ServiceTypeOption -> Text
pattern ServiceTypeOption_HTTP :: ServiceTypeOption

-- | A complex type that contains information about the Amazon Route 53 DNS
--   records that you want Cloud Map to create when you register an
--   instance.
--   
--   <i>See:</i> <a>newDnsConfig</a> smart constructor.
data DnsConfig
DnsConfig' :: Maybe RoutingPolicy -> Maybe Text -> [DnsRecord] -> DnsConfig

-- | Create a value of <a>DnsConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingPolicy:DnsConfig'</a>, <a>dnsConfig_routingPolicy</a> -
--   The routing policy that you want to apply to all Route 53 DNS records
--   that Cloud Map creates when you register an instance and specify this
--   service.
--   
--   If you want to use this service to register instances that create
--   alias records, specify <tt>WEIGHTED</tt> for the routing policy.
--   
--   You can specify the following values:
--   
--   <ul>
--   <li><i>MULTIVALUE</i> If you define a health check for the service and
--   the health check is healthy, Route 53 returns the applicable value for
--   up to eight instances.For example, suppose that the service includes
--   configurations for one <tt>A</tt> record and a health check. You use
--   the service to register 10 instances. Route 53 responds to DNS queries
--   with IP addresses for up to eight healthy instances. If fewer than
--   eight instances are healthy, Route 53 responds to every DNS query with
--   the IP addresses for all of the healthy instances.If you don't define
--   a health check for the service, Route 53 assumes that all instances
--   are healthy and returns the values for up to eight instances.For more
--   information about the multivalue routing policy, see <a>Multivalue
--   Answer Routing</a> in the <i>Route 53 Developer Guide</i>.</li>
--   <li><i>WEIGHTED</i> Route 53 returns the applicable value from one
--   randomly selected instance from among the instances that you
--   registered using the same service. Currently, all records have the
--   same weight, so you can't route more or less traffic to any
--   instances.For example, suppose that the service includes
--   configurations for one <tt>A</tt> record and a health check. You use
--   the service to register 10 instances. Route 53 responds to DNS queries
--   with the IP address for one randomly selected instance from among the
--   healthy instances. If no instances are healthy, Route 53 responds to
--   DNS queries as if all of the instances were healthy.If you don't
--   define a health check for the service, Route 53 assumes that all
--   instances are healthy and returns the applicable value for one
--   randomly selected instance.For more information about the weighted
--   routing policy, see <a>Weighted Routing</a> in the <i>Route 53
--   Developer Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:namespaceId:DnsConfig'</a>, <a>dnsConfig_namespaceId</a> - The
--   ID of the namespace to use for DNS configuration.
--   
--   <a>$sel:dnsRecords:DnsConfig'</a>, <a>dnsConfig_dnsRecords</a> - An
--   array that contains one <tt>DnsRecord</tt> object for each Route 53
--   DNS record that you want Cloud Map to create when you register an
--   instance.
newDnsConfig :: DnsConfig

-- | A complex type that contains information about changes to the Route 53
--   DNS records that Cloud Map creates when you register an instance.
--   
--   <i>See:</i> <a>newDnsConfigChange</a> smart constructor.
data DnsConfigChange
DnsConfigChange' :: [DnsRecord] -> DnsConfigChange

-- | Create a value of <a>DnsConfigChange</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dnsRecords:DnsConfigChange'</a>,
--   <a>dnsConfigChange_dnsRecords</a> - An array that contains one
--   <tt>DnsRecord</tt> object for each Route 53 record that you want Cloud
--   Map to create when you register an instance.
newDnsConfigChange :: DnsConfigChange

-- | A complex type that contains the ID for the Route 53 hosted zone that
--   Cloud Map creates when you create a namespace.
--   
--   <i>See:</i> <a>newDnsProperties</a> smart constructor.
data DnsProperties
DnsProperties' :: Maybe Text -> Maybe SOA -> DnsProperties

-- | Create a value of <a>DnsProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:DnsProperties'</a>,
--   <a>dnsProperties_hostedZoneId</a> - The ID for the Route 53 hosted
--   zone that Cloud Map creates when you create a namespace.
--   
--   <a>$sel:soa:DnsProperties'</a>, <a>dnsProperties_soa</a> - Start of
--   Authority (SOA) record for the hosted zone.
newDnsProperties :: DnsProperties

-- | A complex type that contains information about the Route 53 DNS
--   records that you want Cloud Map to create when you register an
--   instance.
--   
--   <i>See:</i> <a>newDnsRecord</a> smart constructor.
data DnsRecord
DnsRecord' :: RecordType -> Natural -> DnsRecord

-- | Create a value of <a>DnsRecord</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':DnsRecord'</a>, <a>dnsRecord_type</a> - The type of the
--   resource, which indicates the type of value that Route 53 returns in
--   response to DNS queries. You can specify values for <tt>Type</tt> in
--   the following combinations:
--   
--   <ul>
--   <li><b><tt>A</tt></b></li>
--   <li><b><tt>AAAA</tt></b></li>
--   <li><b><tt>A</tt></b> and <b><tt>AAAA</tt></b></li>
--   <li><b><tt>SRV</tt></b></li>
--   <li><b><tt>CNAME</tt></b></li>
--   </ul>
--   
--   If you want Cloud Map to create a Route 53 alias record when you
--   register an instance, specify <tt>A</tt> or <tt>AAAA</tt> for
--   <tt>Type</tt>.
--   
--   You specify other settings, such as the IP address for <tt>A</tt> and
--   <tt>AAAA</tt> records, when you register an instance. For more
--   information, see <a>RegisterInstance</a>.
--   
--   The following values are supported:
--   
--   <ul>
--   <li><i>A</i> Route 53 returns the IP address of the resource in IPv4
--   format, such as 192.0.2.44.</li>
--   <li><i>AAAA</i> Route 53 returns the IP address of the resource in
--   IPv6 format, such as 2001:0db8:85a3:0000:0000:abcd:0001:2345.</li>
--   <li><i>CNAME</i> Route 53 returns the domain name of the resource,
--   such as www.example.com. Note the following:<ul><li>You specify the
--   domain name that you want to route traffic to when you register an
--   instance. For more information, see <a>Attributes</a> in the topic
--   <a>RegisterInstance</a>.</li><li>You must specify <tt>WEIGHTED</tt>
--   for the value of <tt>RoutingPolicy</tt>.</li><li>You can't specify
--   both <tt>CNAME</tt> for <tt>Type</tt> and settings for
--   <tt>HealthCheckConfig</tt>. If you do, the request will fail with an
--   <tt>InvalidInput</tt> error.</li></ul></li>
--   <li><i>SRV</i> Route 53 returns the value for an <tt>SRV</tt> record.
--   The value for an <tt>SRV</tt> record uses the following
--   values:<pre>priority weight port service-hostname</pre>Note the
--   following about the values:<ul><li>The values of <tt>priority</tt> and
--   <tt>weight</tt> are both set to <tt>1</tt> and can't be
--   changed.</li><li>The value of <tt>port</tt> comes from the value that
--   you specify for the <tt>AWS_INSTANCE_PORT</tt> attribute when you
--   submit a <a>RegisterInstance</a> request.</li><li>The value of
--   <tt>service-hostname</tt> is a concatenation of the following
--   values:<ul><li>The value that you specify for <tt>InstanceId</tt> when
--   you register an instance.</li><li>The name of the service.</li><li>The
--   name of the namespace.</li></ul>For example, if the value of
--   <tt>InstanceId</tt> is <tt>test</tt>, the name of the service is
--   <tt>backend</tt>, and the name of the namespace is
--   <tt>example.com</tt>, the value of <tt>service-hostname</tt> is the
--   following:<pre>test.backend.example.com</pre></li></ul>If you specify
--   settings for an <tt>SRV</tt> record, note the following:<ul><li>If you
--   specify values for <tt>AWS_INSTANCE_IPV4</tt>,
--   <tt>AWS_INSTANCE_IPV6</tt>, or both in the <tt>RegisterInstance</tt>
--   request, Cloud Map automatically creates <tt>A</tt> and/or
--   <tt>AAAA</tt> records that have the same name as the value of
--   <tt>service-hostname</tt> in the <tt>SRV</tt> record. You can ignore
--   these records.</li><li>If you're using a system that requires a
--   specific <tt>SRV</tt> format, such as HAProxy, see the <a>Name</a>
--   element in the documentation about <tt>CreateService</tt> for
--   information about how to specify the correct name
--   format.</li></ul></li>
--   </ul>
--   
--   <a>$sel:ttl:DnsRecord'</a>, <a>dnsRecord_ttl</a> - The amount of time,
--   in seconds, that you want DNS resolvers to cache the settings for this
--   record.
--   
--   Alias records don't include a TTL because Route 53 uses the TTL for
--   the Amazon Web Services resource that an alias record routes traffic
--   to. If you include the <tt>AWS_ALIAS_DNS_NAME</tt> attribute when you
--   submit a <a>RegisterInstance</a> request, the <tt>TTL</tt> value is
--   ignored. Always specify a TTL for the service; you can use a service
--   to register instances that create either alias or non-alias records.
newDnsRecord :: RecordType -> Natural -> DnsRecord

-- | <i>Public DNS and HTTP namespaces only.</i> A complex type that
--   contains settings for an optional health check. If you specify
--   settings for a health check, Cloud Map associates the health check
--   with the records that you specify in <tt>DnsConfig</tt>.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   Health checks are basic Route 53 health checks that monitor an Amazon
--   Web Services endpoint. For information about pricing for health
--   checks, see <a>Amazon Route 53 Pricing</a>.
--   
--   Note the following about configuring health checks.
--   
--   <ul>
--   <li><i>A and AAAA records</i> If <tt>DnsConfig</tt> includes
--   configurations for both <tt>A</tt> and <tt>AAAA</tt> records, Cloud
--   Map creates a health check that uses the IPv4 address to check the
--   health of the resource. If the endpoint tthat's specified by the IPv4
--   address is unhealthy, Route 53 considers both the <tt>A</tt> and
--   <tt>AAAA</tt> records to be unhealthy.</li>
--   <li><i>CNAME records</i> You can't specify settings for
--   <tt>HealthCheckConfig</tt> when the <tt>DNSConfig</tt> includes
--   <tt>CNAME</tt> for the value of <tt>Type</tt>. If you do, the
--   <tt>CreateService</tt> request will fail with an <tt>InvalidInput</tt>
--   error.</li>
--   <li><i>Request interval</i> A Route 53 health checker in each
--   health-checking Amazon Web Services Region sends a health check
--   request to an endpoint every 30 seconds. On average, your endpoint
--   receives a health check request about every two seconds. However,
--   health checkers don't coordinate with one another. Therefore, you
--   might sometimes see several requests in one second that's followed by
--   a few seconds with no health checks at all.</li>
--   <li><i>Health checking regions</i> Health checkers perform checks from
--   all Route 53 health-checking Regions. For a list of the current
--   Regions, see <a>Regions</a>.</li>
--   <li><i>Alias records</i> When you register an instance, if you include
--   the <tt>AWS_ALIAS_DNS_NAME</tt> attribute, Cloud Map creates a Route
--   53 alias record. Note the following:<ul><li>Route 53 automatically
--   sets <tt>EvaluateTargetHealth</tt> to true for alias records. When
--   <tt>EvaluateTargetHealth</tt> is true, the alias record inherits the
--   health of the referenced Amazon Web Services resource. such as an ELB
--   load balancer. For more information, see
--   <a>EvaluateTargetHealth</a>.</li><li>If you include
--   <tt>HealthCheckConfig</tt> and then use the service to register an
--   instance that creates an alias record, Route 53 doesn't create the
--   health check.</li></ul></li>
--   <li><i>Charges for health checks</i> Health checks are basic Route 53
--   health checks that monitor an Amazon Web Services endpoint. For
--   information about pricing for health checks, see <a>Amazon Route 53
--   Pricing</a>.</li>
--   </ul>
--   
--   <i>See:</i> <a>newHealthCheckConfig</a> smart constructor.
data HealthCheckConfig
HealthCheckConfig' :: Maybe Natural -> Maybe Text -> HealthCheckType -> HealthCheckConfig

-- | Create a value of <a>HealthCheckConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureThreshold:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_failureThreshold</a> - The number of consecutive
--   health checks that an endpoint must pass or fail for Route 53 to
--   change the current status of the endpoint from unhealthy to healthy or
--   the other way around. For more information, see <a>How Route 53
--   Determines Whether an Endpoint Is Healthy</a> in the <i>Route 53
--   Developer Guide</i>.
--   
--   <a>$sel:resourcePath:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_resourcePath</a> - The path that you want Route
--   53 to request when performing health checks. The path can be any value
--   that your endpoint returns an HTTP status code of a 2xx or 3xx format
--   for when the endpoint is healthy. An example file is
--   <tt>/docs/route53-health-check.html</tt>. Route 53 automatically adds
--   the DNS name for the service. If you don't specify a value for
--   <tt>ResourcePath</tt>, the default value is <tt>/</tt>.
--   
--   If you specify <tt>TCP</tt> for <tt>Type</tt>, you must <i>not</i>
--   specify a value for <tt>ResourcePath</tt>.
--   
--   <a>$sel:type':HealthCheckConfig'</a>, <a>healthCheckConfig_type</a> -
--   The type of health check that you want to create, which indicates how
--   Route 53 determines whether an endpoint is healthy.
--   
--   You can't change the value of <tt>Type</tt> after you create a health
--   check.
--   
--   You can create the following types of health checks:
--   
--   <ul>
--   <li><b>HTTP</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTP request and waits for an HTTP
--   status code of 200 or greater and less than 400.</li>
--   <li><b>HTTPS</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTPS request and waits for an HTTP
--   status code of 200 or greater and less than 400.If you specify HTTPS
--   for the value of <tt>Type</tt>, the endpoint must support TLS v1.0 or
--   later.</li>
--   <li><b>TCP</b>: Route 53 tries to establish a TCP connection.If you
--   specify <tt>TCP</tt> for <tt>Type</tt>, don't specify a value for
--   <tt>ResourcePath</tt>.</li>
--   </ul>
--   
--   For more information, see <a>How Route 53 Determines Whether an
--   Endpoint Is Healthy</a> in the <i>Route 53 Developer Guide</i>.
newHealthCheckConfig :: HealthCheckType -> HealthCheckConfig

-- | A complex type that contains information about an optional custom
--   health check. A custom health check, which requires that you use a
--   third-party health checker to evaluate the health of your resources,
--   is useful in the following circumstances:
--   
--   <ul>
--   <li>You can't use a health check that's defined by
--   <tt>HealthCheckConfig</tt> because the resource isn't available over
--   the internet. For example, you can use a custom health check when the
--   instance is in an Amazon VPC. (To check the health of resources in a
--   VPC, the health checker must also be in the VPC.)</li>
--   <li>You want to use a third-party health checker regardless of where
--   your resources are located.</li>
--   </ul>
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   To change the status of a custom health check, submit an
--   <tt>UpdateInstanceCustomHealthStatus</tt> request. Cloud Map doesn't
--   monitor the status of the resource, it just keeps a record of the
--   status specified in the most recent
--   <tt>UpdateInstanceCustomHealthStatus</tt> request.
--   
--   Here's how custom health checks work:
--   
--   <ol>
--   <li>You create a service.</li>
--   <li>You register an instance.</li>
--   <li>You configure a third-party health checker to monitor the resource
--   that's associated with the new instance.Cloud Map doesn't check the
--   health of the resource directly.</li>
--   <li>The third-party health-checker determines that the resource is
--   unhealthy and notifies your application.</li>
--   <li>Your application submits an
--   <tt>UpdateInstanceCustomHealthStatus</tt> request.</li>
--   <li>Cloud Map waits for 30 seconds.</li>
--   <li>If another <tt>UpdateInstanceCustomHealthStatus</tt> request
--   doesn't arrive during that time to change the status back to healthy,
--   Cloud Map stops routing traffic to the resource.</li>
--   </ol>
--   
--   <i>See:</i> <a>newHealthCheckCustomConfig</a> smart constructor.
data HealthCheckCustomConfig
HealthCheckCustomConfig' :: Maybe Natural -> HealthCheckCustomConfig

-- | Create a value of <a>HealthCheckCustomConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureThreshold:HealthCheckCustomConfig'</a>,
--   <a>healthCheckCustomConfig_failureThreshold</a> - This parameter is no
--   longer supported and is always set to 1. Cloud Map waits for
--   approximately 30 seconds after receiving an
--   <tt>UpdateInstanceCustomHealthStatus</tt> request before changing the
--   status of the service instance.
--   
--   The number of 30-second intervals that you want Cloud Map to wait
--   after receiving an <tt>UpdateInstanceCustomHealthStatus</tt> request
--   before it changes the health status of a service instance.
--   
--   Sending a second or subsequent
--   <tt>UpdateInstanceCustomHealthStatus</tt> request with the same value
--   before 30 seconds has passed doesn't accelerate the change. Cloud Map
--   still waits <tt>30</tt> seconds after the first request to make the
--   change.
newHealthCheckCustomConfig :: HealthCheckCustomConfig

-- | In a response to a <a>DiscoverInstances</a> request,
--   <tt>HttpInstanceSummary</tt> contains information about one instance
--   that matches the values that you specified in the request.
--   
--   <i>See:</i> <a>newHttpInstanceSummary</a> smart constructor.
data HttpInstanceSummary
HttpInstanceSummary' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe HealthStatus -> HttpInstanceSummary

-- | Create a value of <a>HttpInstanceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceId:HttpInstanceSummary'</a>,
--   <a>httpInstanceSummary_instanceId</a> - The ID of an instance that
--   matches the values that you specified in the request.
--   
--   <a>$sel:namespaceName:HttpInstanceSummary'</a>,
--   <a>httpInstanceSummary_namespaceName</a> - @<tt> </tt><tt> </tt>@
--   
--   The <tt>HttpName</tt> name of the namespace. It's found in the
--   <tt>HttpProperties</tt> member of the <tt>Properties</tt> member of
--   the namespace.
--   
--   <a>$sel:attributes:HttpInstanceSummary'</a>,
--   <a>httpInstanceSummary_attributes</a> - If you included any attributes
--   when you registered the instance, the values of those attributes.
--   
--   <a>$sel:serviceName:HttpInstanceSummary'</a>,
--   <a>httpInstanceSummary_serviceName</a> - The name of the service that
--   you specified when you registered the instance.
--   
--   <a>$sel:healthStatus:HttpInstanceSummary'</a>,
--   <a>httpInstanceSummary_healthStatus</a> - If you configured health
--   checking in the service, the current health status of the service
--   instance.
newHttpInstanceSummary :: HttpInstanceSummary

-- | Updated properties for the HTTP namespace.
--   
--   <i>See:</i> <a>newHttpNamespaceChange</a> smart constructor.
data HttpNamespaceChange
HttpNamespaceChange' :: Text -> HttpNamespaceChange

-- | Create a value of <a>HttpNamespaceChange</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:HttpNamespaceChange'</a>,
--   <a>httpNamespaceChange_description</a> - An updated description for
--   the HTTP namespace.
newHttpNamespaceChange :: Text -> HttpNamespaceChange

-- | A complex type that contains the name of an HTTP namespace.
--   
--   <i>See:</i> <a>newHttpProperties</a> smart constructor.
data HttpProperties
HttpProperties' :: Maybe Text -> HttpProperties

-- | Create a value of <a>HttpProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpName:HttpProperties'</a>, <a>httpProperties_httpName</a> -
--   The name of an HTTP namespace.
newHttpProperties :: HttpProperties

-- | A complex type that contains information about an instance that Cloud
--   Map creates when you submit a <tt>RegisterInstance</tt> request.
--   
--   <i>See:</i> <a>newInstance</a> smart constructor.
data Instance
Instance' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> Instance

-- | Create a value of <a>Instance</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creatorRequestId:Instance'</a>,
--   <a>instance_creatorRequestId</a> - A unique string that identifies the
--   request and that allows failed <tt>RegisterInstance</tt> requests to
--   be retried without the risk of executing the operation twice. You must
--   use a unique <tt>CreatorRequestId</tt> string every time you submit a
--   <tt>RegisterInstance</tt> request if you're registering additional
--   instances for the same namespace and service.
--   <tt>CreatorRequestId</tt> can be any unique string (for example, a
--   date/time stamp).
--   
--   <a>$sel:attributes:Instance'</a>, <a>instance_attributes</a> - A
--   string map that contains the following information for the service
--   that you specify in <tt>ServiceId</tt>:
--   
--   <ul>
--   <li>The attributes that apply to the records that are defined in the
--   service.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> If you want Cloud Map to create a Route
--   53 alias record that routes traffic to an Elastic Load Balancing load
--   balancer, specify the DNS name that's associated with the load
--   balancer. For information about how to get the DNS name, see
--   <a>AliasTarget-</a>DNSName&gt; in the <i>Route 53 API
--   Reference</i>.Note the following:<ul><li>The configuration for the
--   service that's specified by <tt>ServiceId</tt> must include settings
--   for an <tt>A</tt> record, an <tt>AAAA</tt> record, or both.</li><li>In
--   the service that's specified by <tt>ServiceId</tt>, the value of
--   <tt>RoutingPolicy</tt> must be <tt>WEIGHTED</tt>.</li><li>If the
--   service that's specified by <tt>ServiceId</tt> includes
--   <tt>HealthCheckConfig</tt> settings, Cloud Map creates the health
--   check, but it won't associate the health check with the alias
--   record.</li><li>Auto naming currently doesn't support creating alias
--   records that route traffic to Amazon Web Services resources other than
--   ELB load balancers.</li><li>If you specify a value for
--   <tt>AWS_ALIAS_DNS_NAME</tt>, don't specify values for any of the
--   <tt>AWS_INSTANCE</tt> attributes.</li></ul></li>
--   <li><i>AWS_EC2_INSTANCE_ID</i> <i>HTTP namespaces only.</i> The Amazon
--   EC2 instance ID for the instance. The <tt>AWS_INSTANCE_IPV4</tt>
--   attribute contains the primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> If the service configuration includes a
--   <tt>CNAME</tt> record, the domain name that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>example.com</tt>).This value is required if the service specified
--   by <tt>ServiceId</tt> includes settings for an <tt>CNAME</tt>
--   record.</li>
--   <li><i>AWS_INSTANCE_IPV4</i> If the service configuration includes an
--   <tt>A</tt> record, the IPv4 address that you want Route 53 to return
--   in response to DNS queries (for example, <tt>192.0.2.44</tt>).This
--   value is required if the service specified by <tt>ServiceId</tt>
--   includes settings for an <tt>A</tt> record. If the service includes
--   settings for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_IPV6</i> If the service configuration includes an
--   <tt>AAAA</tt> record, the IPv6 address that you want Route 53 to
--   return in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).This value is
--   required if the service specified by <tt>ServiceId</tt> includes
--   settings for an <tt>AAAA</tt> record. If the service includes settings
--   for an <tt>SRV</tt> record, you must specify a value for
--   <tt>AWS_INSTANCE_IPV4</tt>, <tt>AWS_INSTANCE_IPV6</tt>, or both.</li>
--   <li><i>AWS_INSTANCE_PORT</i> If the service includes an <tt>SRV</tt>
--   record, the value that you want Route 53 to return for the port.If the
--   service includes <tt>HealthCheckConfig</tt>, the port on the endpoint
--   that you want Route 53 to send requests to.This value is required if
--   you specified settings for an <tt>SRV</tt> record or a Route 53 health
--   check when you created the service.</li>
--   </ul>
--   
--   <a>$sel:id:Instance'</a>, <a>instance_id</a> - An identifier that you
--   want to associate with the instance. Note the following:
--   
--   <ul>
--   <li>If the service that's specified by <tt>ServiceId</tt> includes
--   settings for an <tt>SRV</tt> record, the value of <tt>InstanceId</tt>
--   is automatically included as part of the value for the <tt>SRV</tt>
--   record. For more information, see <a>DnsRecord</a> Type&gt;.</li>
--   <li>You can use this value to update an existing instance.</li>
--   <li>To register a new instance, you must specify a value that's unique
--   among instances that you register by using the same service.</li>
--   <li>If you specify an existing <tt>InstanceId</tt> and
--   <tt>ServiceId</tt>, Cloud Map updates the existing DNS records. If
--   there's also an existing health check, Cloud Map deletes the old
--   health check and creates a new one.The health check isn't deleted
--   immediately, so it will still appear for a while if you submit a
--   <tt>ListHealthChecks</tt> request, for example.</li>
--   </ul>
newInstance :: Text -> Instance

-- | A complex type that contains information about the instances that you
--   registered by using a specified service.
--   
--   <i>See:</i> <a>newInstanceSummary</a> smart constructor.
data InstanceSummary
InstanceSummary' :: Maybe (HashMap Text Text) -> Maybe Text -> InstanceSummary

-- | Create a value of <a>InstanceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:InstanceSummary'</a>,
--   <a>instanceSummary_attributes</a> - A string map that contains the
--   following information:
--   
--   <ul>
--   <li>The attributes that are associated with the instance.</li>
--   <li>For each attribute, the applicable value.</li>
--   </ul>
--   
--   Supported attribute keys include the following:
--   
--   <ul>
--   <li><i>AWS_ALIAS_DNS_NAME</i> For an alias record that routes traffic
--   to an Elastic Load Balancing load balancer, the DNS name that's
--   associated with the load balancer.</li>
--   <li><i>AWS_EC2_INSTANCE_ID (HTTP namespaces only)</i> The Amazon EC2
--   instance ID for the instance. When the <tt>AWS_EC2_INSTANCE_ID</tt>
--   attribute is specified, then the <tt>AWS_INSTANCE_IPV4</tt> attribute
--   contains the primary private IPv4 address.</li>
--   <li><i>AWS_INIT_HEALTH_STATUS</i> If the service configuration
--   includes <tt>HealthCheckCustomConfig</tt>, you can optionally use
--   <tt>AWS_INIT_HEALTH_STATUS</tt> to specify the initial status of the
--   custom health check, <tt>HEALTHY</tt> or <tt>UNHEALTHY</tt>. If you
--   don't specify a value for <tt>AWS_INIT_HEALTH_STATUS</tt>, the initial
--   status is <tt>HEALTHY</tt>.</li>
--   <li><i>AWS_INSTANCE_CNAME</i> For a <tt>CNAME</tt> record, the domain
--   name that Route 53 returns in response to DNS queries (for example,
--   <tt>example.com</tt>).</li>
--   <li><i>AWS_INSTANCE_IPV4</i> For an <tt>A</tt> record, the IPv4
--   address that Route 53 returns in response to DNS queries (for example,
--   <tt>192.0.2.44</tt>).</li>
--   <li><i>AWS_INSTANCE_IPV6</i> For an <tt>AAAA</tt> record, the IPv6
--   address that Route 53 returns in response to DNS queries (for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>).</li>
--   <li><i>AWS_INSTANCE_PORT</i> For an <tt>SRV</tt> record, the value
--   that Route 53 returns for the port. In addition, if the service
--   includes <tt>HealthCheckConfig</tt>, the port on the endpoint that
--   Route 53 sends requests to.</li>
--   </ul>
--   
--   <a>$sel:id:InstanceSummary'</a>, <a>instanceSummary_id</a> - The ID
--   for an instance that you created by using a specified service.
newInstanceSummary :: InstanceSummary

-- | A complex type that contains information about a specified namespace.
--   
--   <i>See:</i> <a>newNamespace</a> smart constructor.
data Namespace
Namespace' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe NamespaceType -> Maybe Text -> Maybe NamespaceProperties -> Namespace

-- | Create a value of <a>Namespace</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Namespace'</a>, <a>namespace_arn</a> - The Amazon Resource
--   Name (ARN) that Cloud Map assigns to the namespace when you create it.
--   
--   <a>$sel:creatorRequestId:Namespace'</a>,
--   <a>namespace_creatorRequestId</a> - A unique string that identifies
--   the request and that allows failed requests to be retried without the
--   risk of running an operation twice.
--   
--   <a>$sel:createDate:Namespace'</a>, <a>namespace_createDate</a> - The
--   date that the namespace was created, in Unix date/time format and
--   Coordinated Universal Time (UTC). The value of <tt>CreateDate</tt> is
--   accurate to milliseconds. For example, the value
--   <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
--   
--   <a>$sel:serviceCount:Namespace'</a>, <a>namespace_serviceCount</a> -
--   The number of services that are associated with the namespace.
--   
--   <a>$sel:name:Namespace'</a>, <a>namespace_name</a> - The name of the
--   namespace, such as <tt>example.com</tt>.
--   
--   <a>$sel:id:Namespace'</a>, <a>namespace_id</a> - The ID of a
--   namespace.
--   
--   <a>$sel:type':Namespace'</a>, <a>namespace_type</a> - The type of the
--   namespace. The methods for discovering instances depends on the value
--   that you specify:
--   
--   <ul>
--   <li><i>HTTP</i> Instances can be discovered only programmatically,
--   using the Cloud Map <tt>DiscoverInstances</tt> API.</li>
--   <li><i>DNS_PUBLIC</i> Instances can be discovered using public DNS
--   queries and using the <tt>DiscoverInstances</tt> API.</li>
--   <li><i>DNS_PRIVATE</i> Instances can be discovered using DNS queries
--   in VPCs and using the <tt>DiscoverInstances</tt> API.</li>
--   </ul>
--   
--   <a>$sel:description:Namespace'</a>, <a>namespace_description</a> - The
--   description that you specify for the namespace when you create it.
--   
--   <a>$sel:properties:Namespace'</a>, <a>namespace_properties</a> - A
--   complex type that contains information that's specific to the type of
--   the namespace.
newNamespace :: Namespace

-- | A complex type that identifies the namespaces that you want to list.
--   You can choose to list public or private namespaces.
--   
--   <i>See:</i> <a>newNamespaceFilter</a> smart constructor.
data NamespaceFilter
NamespaceFilter' :: Maybe FilterCondition -> NamespaceFilterName -> [Text] -> NamespaceFilter

-- | Create a value of <a>NamespaceFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:condition:NamespaceFilter'</a>,
--   <a>namespaceFilter_condition</a> - The operator that you want to use
--   to determine whether <tt>ListNamespaces</tt> returns a namespace.
--   Valid values for <tt>condition</tt> include:
--   
--   <ul>
--   <li><i>EQ</i> When you specify <tt>EQ</tt> for the condition, you can
--   choose to list only public namespaces or private namespaces, but not
--   both. <tt>EQ</tt> is the default condition and can be omitted.</li>
--   <li><i>IN</i> When you specify <tt>IN</tt> for the condition, you can
--   choose to list public namespaces, private namespaces, or both.</li>
--   <li><i>BETWEEN</i> Not applicable</li>
--   </ul>
--   
--   <a>$sel:name:NamespaceFilter'</a>, <a>namespaceFilter_name</a> -
--   Specify <tt>TYPE</tt>.
--   
--   <a>$sel:values:NamespaceFilter'</a>, <a>namespaceFilter_values</a> -
--   If you specify <tt>EQ</tt> for <tt>Condition</tt>, specify either
--   <tt>DNS_PUBLIC</tt> or <tt>DNS_PRIVATE</tt>.
--   
--   If you specify <tt>IN</tt> for <tt>Condition</tt>, you can specify
--   <tt>DNS_PUBLIC</tt>, <tt>DNS_PRIVATE</tt>, or both.
newNamespaceFilter :: NamespaceFilterName -> NamespaceFilter

-- | A complex type that contains information that's specific to the
--   namespace type.
--   
--   <i>See:</i> <a>newNamespaceProperties</a> smart constructor.
data NamespaceProperties
NamespaceProperties' :: Maybe DnsProperties -> Maybe HttpProperties -> NamespaceProperties

-- | Create a value of <a>NamespaceProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dnsProperties:NamespaceProperties'</a>,
--   <a>namespaceProperties_dnsProperties</a> - A complex type that
--   contains the ID for the Route 53 hosted zone that Cloud Map creates
--   when you create a namespace.
--   
--   <a>$sel:httpProperties:NamespaceProperties'</a>,
--   <a>namespaceProperties_httpProperties</a> - A complex type that
--   contains the name of an HTTP namespace.
newNamespaceProperties :: NamespaceProperties

-- | A complex type that contains information about a namespace.
--   
--   <i>See:</i> <a>newNamespaceSummary</a> smart constructor.
data NamespaceSummary
NamespaceSummary' :: Maybe Text -> Maybe POSIX -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe NamespaceType -> Maybe Text -> Maybe NamespaceProperties -> NamespaceSummary

-- | Create a value of <a>NamespaceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:NamespaceSummary'</a>, <a>namespaceSummary_arn</a> - The
--   Amazon Resource Name (ARN) that Cloud Map assigns to the namespace
--   when you create it.
--   
--   <a>$sel:createDate:NamespaceSummary'</a>,
--   <a>namespaceSummary_createDate</a> - The date and time that the
--   namespace was created.
--   
--   <a>$sel:serviceCount:NamespaceSummary'</a>,
--   <a>namespaceSummary_serviceCount</a> - The number of services that
--   were created using the namespace.
--   
--   <a>$sel:name:NamespaceSummary'</a>, <a>namespaceSummary_name</a> - The
--   name of the namespace. When you create a namespace, Cloud Map
--   automatically creates a Route 53 hosted zone that has the same name as
--   the namespace.
--   
--   <a>$sel:id:NamespaceSummary'</a>, <a>namespaceSummary_id</a> - The ID
--   of the namespace.
--   
--   <a>$sel:type':NamespaceSummary'</a>, <a>namespaceSummary_type</a> -
--   The type of the namespace, either public or private.
--   
--   <a>$sel:description:NamespaceSummary'</a>,
--   <a>namespaceSummary_description</a> - A description for the namespace.
--   
--   <a>$sel:properties:NamespaceSummary'</a>,
--   <a>namespaceSummary_properties</a> - The properties of the namespace.
newNamespaceSummary :: NamespaceSummary

-- | A complex type that contains information about a specified operation.
--   
--   <i>See:</i> <a>newOperation</a> smart constructor.
data Operation
Operation' :: Maybe OperationStatus -> Maybe POSIX -> Maybe POSIX -> Maybe (HashMap OperationTargetType Text) -> Maybe Text -> Maybe Text -> Maybe OperationType -> Maybe Text -> Operation

-- | Create a value of <a>Operation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Operation'</a>, <a>operation_status</a> - The status of
--   the operation. Values include the following:
--   
--   <ul>
--   <li><i>SUBMITTED</i> This is the initial state that occurs immediately
--   after you submit a request.</li>
--   <li><i>PENDING</i> Cloud Map is performing the operation.</li>
--   <li><i>SUCCESS</i> The operation succeeded.</li>
--   <li><i>FAIL</i> The operation failed. For the failure reason, see
--   <tt>ErrorMessage</tt>.</li>
--   </ul>
--   
--   <a>$sel:updateDate:Operation'</a>, <a>operation_updateDate</a> - The
--   date and time that the value of <tt>Status</tt> changed to the current
--   value, in Unix date/time format and Coordinated Universal Time (UTC).
--   The value of <tt>UpdateDate</tt> is accurate to milliseconds. For
--   example, the value <tt>1516925490.087</tt> represents Friday, January
--   26, 2018 12:11:30.087 AM.
--   
--   <a>$sel:createDate:Operation'</a>, <a>operation_createDate</a> - The
--   date and time that the request was submitted, in Unix date/time format
--   and Coordinated Universal Time (UTC). The value of <tt>CreateDate</tt>
--   is accurate to milliseconds. For example, the value
--   <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
--   
--   <a>$sel:targets:Operation'</a>, <a>operation_targets</a> - The name of
--   the target entity that's associated with the operation:
--   
--   <ul>
--   <li><i>NAMESPACE</i> The namespace ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   <li><i>SERVICE</i> The service ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   <li><i>INSTANCE</i> The instance ID is returned in the
--   <tt>ResourceId</tt> property.</li>
--   </ul>
--   
--   <a>$sel:errorCode:Operation'</a>, <a>operation_errorCode</a> - The
--   code associated with <tt>ErrorMessage</tt>. Values for
--   <tt>ErrorCode</tt> include the following:
--   
--   <ul>
--   <li><pre>ACCESS_DENIED</pre></li>
--   <li><pre>CANNOT_CREATE_HOSTED_ZONE</pre></li>
--   <li><pre>EXPIRED_TOKEN</pre></li>
--   <li><pre>HOSTED_ZONE_NOT_FOUND</pre></li>
--   <li><pre>INTERNAL_FAILURE</pre></li>
--   <li><pre>INVALID_CHANGE_BATCH</pre></li>
--   <li><pre>THROTTLED_REQUEST</pre></li>
--   </ul>
--   
--   <a>$sel:id:Operation'</a>, <a>operation_id</a> - The ID of the
--   operation that you want to get information about.
--   
--   <a>$sel:type':Operation'</a>, <a>operation_type</a> - The name of the
--   operation that's associated with the specified ID.
--   
--   <a>$sel:errorMessage:Operation'</a>, <a>operation_errorMessage</a> -
--   If the value of <tt>Status</tt> is <tt>FAIL</tt>, the reason that the
--   operation failed.
newOperation :: Operation

-- | A complex type that lets you select the operations that you want to
--   list.
--   
--   <i>See:</i> <a>newOperationFilter</a> smart constructor.
data OperationFilter
OperationFilter' :: Maybe FilterCondition -> OperationFilterName -> [Text] -> OperationFilter

-- | Create a value of <a>OperationFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:condition:OperationFilter'</a>,
--   <a>operationFilter_condition</a> - The operator that you want to use
--   to determine whether an operation matches the specified value. Valid
--   values for condition include:
--   
--   <ul>
--   <li><tt>EQ</tt>: When you specify <tt>EQ</tt> for the condition, you
--   can specify only one value. <tt>EQ</tt> is supported for
--   <tt>NAMESPACE_ID</tt>, <tt>SERVICE_ID</tt>, <tt>STATUS</tt>, and
--   <tt>TYPE</tt>. <tt>EQ</tt> is the default condition and can be
--   omitted.</li>
--   <li><tt>IN</tt>: When you specify <tt>IN</tt> for the condition, you
--   can specify a list of one or more values. <tt>IN</tt> is supported for
--   <tt>STATUS</tt> and <tt>TYPE</tt>. An operation must match one of the
--   specified values to be returned in the response.</li>
--   <li><tt>BETWEEN</tt>: Specify a start date and an end date in Unix
--   date/time format and Coordinated Universal Time (UTC). The start date
--   must be the first value. <tt>BETWEEN</tt> is supported for
--   <tt>UPDATE_DATE</tt>.</li>
--   </ul>
--   
--   <a>$sel:name:OperationFilter'</a>, <a>operationFilter_name</a> -
--   Specify the operations that you want to get:
--   
--   <ul>
--   <li><b>NAMESPACE_ID</b>: Gets operations related to specified
--   namespaces.</li>
--   <li><b>SERVICE_ID</b>: Gets operations related to specified
--   services.</li>
--   <li><b>STATUS</b>: Gets operations based on the status of the
--   operations: <tt>SUBMITTED</tt>, <tt>PENDING</tt>, <tt>SUCCEED</tt>, or
--   <tt>FAIL</tt>.</li>
--   <li><b>TYPE</b>: Gets specified types of operation.</li>
--   <li><b>UPDATE_DATE</b>: Gets operations that changed status during a
--   specified date/time range.</li>
--   </ul>
--   
--   <a>$sel:values:OperationFilter'</a>, <a>operationFilter_values</a> -
--   Specify values that are applicable to the value that you specify for
--   <tt>Name</tt>:
--   
--   <ul>
--   <li><b>NAMESPACE_ID</b>: Specify one namespace ID.</li>
--   <li><b>SERVICE_ID</b>: Specify one service ID.</li>
--   <li><b>STATUS</b>: Specify one or more statuses: <tt>SUBMITTED</tt>,
--   <tt>PENDING</tt>, <tt>SUCCEED</tt>, or <tt>FAIL</tt>.</li>
--   <li><b>TYPE</b>: Specify one or more of the following types:
--   <tt>CREATE_NAMESPACE</tt>, <tt>DELETE_NAMESPACE</tt>,
--   <tt>UPDATE_SERVICE</tt>, <tt>REGISTER_INSTANCE</tt>, or
--   <tt>DEREGISTER_INSTANCE</tt>.</li>
--   <li><b>UPDATE_DATE</b>: Specify a start date and an end date in Unix
--   date/time format and Coordinated Universal Time (UTC). The start date
--   must be the first value.</li>
--   </ul>
newOperationFilter :: OperationFilterName -> OperationFilter

-- | A complex type that contains information about an operation that
--   matches the criteria that you specified in a <a>ListOperations</a>
--   request.
--   
--   <i>See:</i> <a>newOperationSummary</a> smart constructor.
data OperationSummary
OperationSummary' :: Maybe OperationStatus -> Maybe Text -> OperationSummary

-- | Create a value of <a>OperationSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:OperationSummary'</a>, <a>operationSummary_status</a> -
--   The status of the operation. Values include the following:
--   
--   <ul>
--   <li><b>SUBMITTED</b>: This is the initial state immediately after you
--   submit a request.</li>
--   <li><b>PENDING</b>: Cloud Map is performing the operation.</li>
--   <li><b>SUCCESS</b>: The operation succeeded.</li>
--   <li><b>FAIL</b>: The operation failed. For the failure reason, see
--   <tt>ErrorMessage</tt>.</li>
--   </ul>
--   
--   <a>$sel:id:OperationSummary'</a>, <a>operationSummary_id</a> - The ID
--   for an operation.
newOperationSummary :: OperationSummary

-- | Updated properties for the private DNS namespace.
--   
--   <i>See:</i> <a>newPrivateDnsNamespaceChange</a> smart constructor.
data PrivateDnsNamespaceChange
PrivateDnsNamespaceChange' :: Maybe Text -> Maybe PrivateDnsNamespacePropertiesChange -> PrivateDnsNamespaceChange

-- | Create a value of <a>PrivateDnsNamespaceChange</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:PrivateDnsNamespaceChange'</a>,
--   <a>privateDnsNamespaceChange_description</a> - An updated description
--   for the private DNS namespace.
--   
--   <a>$sel:properties:PrivateDnsNamespaceChange'</a>,
--   <a>privateDnsNamespaceChange_properties</a> - Properties to be updated
--   in the private DNS namespace.
newPrivateDnsNamespaceChange :: PrivateDnsNamespaceChange

-- | DNS properties for the private DNS namespace.
--   
--   <i>See:</i> <a>newPrivateDnsNamespaceProperties</a> smart constructor.
data PrivateDnsNamespaceProperties
PrivateDnsNamespaceProperties' :: PrivateDnsPropertiesMutable -> PrivateDnsNamespaceProperties

-- | Create a value of <a>PrivateDnsNamespaceProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dnsProperties:PrivateDnsNamespaceProperties'</a>,
--   <a>privateDnsNamespaceProperties_dnsProperties</a> - DNS properties
--   for the private DNS namespace.
newPrivateDnsNamespaceProperties :: PrivateDnsPropertiesMutable -> PrivateDnsNamespaceProperties

-- | Updated properties for the private DNS namespace.
--   
--   <i>See:</i> <a>newPrivateDnsNamespacePropertiesChange</a> smart
--   constructor.
data PrivateDnsNamespacePropertiesChange
PrivateDnsNamespacePropertiesChange' :: PrivateDnsPropertiesMutableChange -> PrivateDnsNamespacePropertiesChange

-- | Create a value of <a>PrivateDnsNamespacePropertiesChange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dnsProperties:PrivateDnsNamespacePropertiesChange'</a>,
--   <a>privateDnsNamespacePropertiesChange_dnsProperties</a> - Updated DNS
--   properties for the private DNS namespace.
newPrivateDnsNamespacePropertiesChange :: PrivateDnsPropertiesMutableChange -> PrivateDnsNamespacePropertiesChange

-- | DNS properties for the private DNS namespace.
--   
--   <i>See:</i> <a>newPrivateDnsPropertiesMutable</a> smart constructor.
data PrivateDnsPropertiesMutable
PrivateDnsPropertiesMutable' :: SOA -> PrivateDnsPropertiesMutable

-- | Create a value of <a>PrivateDnsPropertiesMutable</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:soa:PrivateDnsPropertiesMutable'</a>,
--   <a>privateDnsPropertiesMutable_soa</a> - Fields for the Start of
--   Authority (SOA) record for the hosted zone for the private DNS
--   namespace.
newPrivateDnsPropertiesMutable :: SOA -> PrivateDnsPropertiesMutable

-- | Updated DNS properties for the private DNS namespace.
--   
--   <i>See:</i> <a>newPrivateDnsPropertiesMutableChange</a> smart
--   constructor.
data PrivateDnsPropertiesMutableChange
PrivateDnsPropertiesMutableChange' :: SOAChange -> PrivateDnsPropertiesMutableChange

-- | Create a value of <a>PrivateDnsPropertiesMutableChange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:soa:PrivateDnsPropertiesMutableChange'</a>,
--   <a>privateDnsPropertiesMutableChange_soa</a> - Updated fields for the
--   Start of Authority (SOA) record for the hosted zone for the private
--   DNS namespace.
newPrivateDnsPropertiesMutableChange :: SOAChange -> PrivateDnsPropertiesMutableChange

-- | Updated properties for the public DNS namespace.
--   
--   <i>See:</i> <a>newPublicDnsNamespaceChange</a> smart constructor.
data PublicDnsNamespaceChange
PublicDnsNamespaceChange' :: Maybe Text -> Maybe PublicDnsNamespacePropertiesChange -> PublicDnsNamespaceChange

-- | Create a value of <a>PublicDnsNamespaceChange</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:PublicDnsNamespaceChange'</a>,
--   <a>publicDnsNamespaceChange_description</a> - An updated description
--   for the public DNS namespace.
--   
--   <a>$sel:properties:PublicDnsNamespaceChange'</a>,
--   <a>publicDnsNamespaceChange_properties</a> - Properties to be updated
--   in the public DNS namespace.
newPublicDnsNamespaceChange :: PublicDnsNamespaceChange

-- | DNS properties for the public DNS namespace.
--   
--   <i>See:</i> <a>newPublicDnsNamespaceProperties</a> smart constructor.
data PublicDnsNamespaceProperties
PublicDnsNamespaceProperties' :: PublicDnsPropertiesMutable -> PublicDnsNamespaceProperties

-- | Create a value of <a>PublicDnsNamespaceProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dnsProperties:PublicDnsNamespaceProperties'</a>,
--   <a>publicDnsNamespaceProperties_dnsProperties</a> - DNS properties for
--   the public DNS namespace.
newPublicDnsNamespaceProperties :: PublicDnsPropertiesMutable -> PublicDnsNamespaceProperties

-- | Updated properties for the public DNS namespace.
--   
--   <i>See:</i> <a>newPublicDnsNamespacePropertiesChange</a> smart
--   constructor.
data PublicDnsNamespacePropertiesChange
PublicDnsNamespacePropertiesChange' :: PublicDnsPropertiesMutableChange -> PublicDnsNamespacePropertiesChange

-- | Create a value of <a>PublicDnsNamespacePropertiesChange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dnsProperties:PublicDnsNamespacePropertiesChange'</a>,
--   <a>publicDnsNamespacePropertiesChange_dnsProperties</a> - Updated DNS
--   properties for the hosted zone for the public DNS namespace.
newPublicDnsNamespacePropertiesChange :: PublicDnsPropertiesMutableChange -> PublicDnsNamespacePropertiesChange

-- | DNS properties for the public DNS namespace.
--   
--   <i>See:</i> <a>newPublicDnsPropertiesMutable</a> smart constructor.
data PublicDnsPropertiesMutable
PublicDnsPropertiesMutable' :: SOA -> PublicDnsPropertiesMutable

-- | Create a value of <a>PublicDnsPropertiesMutable</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:soa:PublicDnsPropertiesMutable'</a>,
--   <a>publicDnsPropertiesMutable_soa</a> - Start of Authority (SOA)
--   record for the hosted zone for the public DNS namespace.
newPublicDnsPropertiesMutable :: SOA -> PublicDnsPropertiesMutable

-- | Updated DNS properties for the public DNS namespace.
--   
--   <i>See:</i> <a>newPublicDnsPropertiesMutableChange</a> smart
--   constructor.
data PublicDnsPropertiesMutableChange
PublicDnsPropertiesMutableChange' :: SOAChange -> PublicDnsPropertiesMutableChange

-- | Create a value of <a>PublicDnsPropertiesMutableChange</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:soa:PublicDnsPropertiesMutableChange'</a>,
--   <a>publicDnsPropertiesMutableChange_soa</a> - Updated fields for the
--   Start of Authority (SOA) record for the hosted zone for the public DNS
--   namespace.
newPublicDnsPropertiesMutableChange :: SOAChange -> PublicDnsPropertiesMutableChange

-- | Start of Authority (SOA) properties for a public or private DNS
--   namespace.
--   
--   <i>See:</i> <a>newSOA</a> smart constructor.
data SOA
SOA' :: Natural -> SOA

-- | Create a value of <a>SOA</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ttl:SOA'</a>, <a>soa_ttl</a> - The time to live (TTL) for
--   purposes of negative caching.
newSOA :: Natural -> SOA

-- | Updated Start of Authority (SOA) properties for a public or private
--   DNS namespace.
--   
--   <i>See:</i> <a>newSOAChange</a> smart constructor.
data SOAChange
SOAChange' :: Natural -> SOAChange

-- | Create a value of <a>SOAChange</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ttl:SOAChange'</a>, <a>sOAChange_ttl</a> - The updated time to
--   live (TTL) for purposes of negative caching.
newSOAChange :: Natural -> SOAChange

-- | A complex type that contains changes to an existing service.
--   
--   <i>See:</i> <a>newServiceChange</a> smart constructor.
data ServiceChange
ServiceChange' :: Maybe HealthCheckConfig -> Maybe DnsConfigChange -> Maybe Text -> ServiceChange

-- | Create a value of <a>ServiceChange</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthCheckConfig:ServiceChange'</a>,
--   <a>serviceChange_healthCheckConfig</a> - <i>Public DNS and HTTP
--   namespaces only.</i> Settings for an optional health check. If you
--   specify settings for a health check, Cloud Map associates the health
--   check with the records that you specify in <tt>DnsConfig</tt>.
--   
--   <a>$sel:dnsConfig:ServiceChange'</a>, <a>serviceChange_dnsConfig</a> -
--   Information about the Route 53 DNS records that you want Cloud Map to
--   create when you register an instance.
--   
--   <a>$sel:description:ServiceChange'</a>,
--   <a>serviceChange_description</a> - A description for the service.
newServiceChange :: ServiceChange

-- | A complex type that lets you specify the namespaces that you want to
--   list services for.
--   
--   <i>See:</i> <a>newServiceFilter</a> smart constructor.
data ServiceFilter
ServiceFilter' :: Maybe FilterCondition -> ServiceFilterName -> [Text] -> ServiceFilter

-- | Create a value of <a>ServiceFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:condition:ServiceFilter'</a>, <a>serviceFilter_condition</a> -
--   The operator that you want to use to determine whether a service is
--   returned by <tt>ListServices</tt>. Valid values for <tt>Condition</tt>
--   include the following:
--   
--   <ul>
--   <li><tt>EQ</tt>: When you specify <tt>EQ</tt>, specify one namespace
--   ID for <tt>Values</tt>. <tt>EQ</tt> is the default condition and can
--   be omitted.</li>
--   <li><tt>IN</tt>: When you specify <tt>IN</tt>, specify a list of the
--   IDs for the namespaces that you want <tt>ListServices</tt> to return a
--   list of services for.</li>
--   <li><tt>BETWEEN</tt>: Not applicable.</li>
--   </ul>
--   
--   <a>$sel:name:ServiceFilter'</a>, <a>serviceFilter_name</a> - Specify
--   <tt>NAMESPACE_ID</tt>.
--   
--   <a>$sel:values:ServiceFilter'</a>, <a>serviceFilter_values</a> - The
--   values that are applicable to the value that you specify for
--   <tt>Condition</tt> to filter the list of services.
newServiceFilter :: ServiceFilterName -> ServiceFilter

-- | A complex type that contains information about the specified service.
--   
--   <i>See:</i> <a>newServiceInfo</a> smart constructor.
data ServiceInfo
ServiceInfo' :: Maybe Int -> Maybe Text -> Maybe HealthCheckConfig -> Maybe Text -> Maybe POSIX -> Maybe HealthCheckCustomConfig -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ServiceType -> Maybe DnsConfig -> Maybe Text -> ServiceInfo

-- | Create a value of <a>ServiceInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceCount:ServiceInfo'</a>,
--   <a>serviceInfo_instanceCount</a> - The number of instances that are
--   currently associated with the service. Instances that were previously
--   associated with the service but that are deleted aren't included in
--   the count. The count might not reflect pending registrations and
--   deregistrations.
--   
--   <a>$sel:arn:ServiceInfo'</a>, <a>serviceInfo_arn</a> - The Amazon
--   Resource Name (ARN) that Cloud Map assigns to the service when you
--   create it.
--   
--   <a>$sel:healthCheckConfig:ServiceInfo'</a>,
--   <a>serviceInfo_healthCheckConfig</a> - <i>Public DNS and HTTP
--   namespaces only.</i> A complex type that contains settings for an
--   optional health check. If you specify settings for a health check,
--   Cloud Map associates the health check with the records that you
--   specify in <tt>DnsConfig</tt>.
--   
--   For information about the charges for health checks, see <a>Amazon
--   Route 53 Pricing</a>.
--   
--   <a>$sel:creatorRequestId:ServiceInfo'</a>,
--   <a>serviceInfo_creatorRequestId</a> - A unique string that identifies
--   the request and that allows failed requests to be retried without the
--   risk of running the operation twice. <tt>CreatorRequestId</tt> can be
--   any unique string (for example, a date/timestamp).
--   
--   <a>$sel:createDate:ServiceInfo'</a>, <a>serviceInfo_createDate</a> -
--   The date and time that the service was created, in Unix format and
--   Coordinated Universal Time (UTC). The value of <tt>CreateDate</tt> is
--   accurate to milliseconds. For example, the value
--   <tt>1516925490.087</tt> represents Friday, January 26, 2018
--   12:11:30.087 AM.
--   
--   <a>$sel:healthCheckCustomConfig:ServiceInfo'</a>,
--   <a>serviceInfo_healthCheckCustomConfig</a> - A complex type that
--   contains information about an optional custom health check.
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   <a>$sel:namespaceId:ServiceInfo'</a>, <a>serviceInfo_namespaceId</a> -
--   The ID of the namespace that was used to create the service.
--   
--   <a>$sel:name:ServiceInfo'</a>, <a>serviceInfo_name</a> - The name of
--   the service.
--   
--   <a>$sel:id:ServiceInfo'</a>, <a>serviceInfo_id</a> - The ID that Cloud
--   Map assigned to the service when you created it.
--   
--   <a>$sel:type':ServiceInfo'</a>, <a>serviceInfo_type</a> - Describes
--   the systems that can be used to discover the service instances.
--   
--   <ul>
--   <li><i>DNS_HTTP</i> The service instances can be discovered using
--   either DNS queries or the <tt>DiscoverInstances</tt> API
--   operation.</li>
--   <li><i>HTTP</i> The service instances can only be discovered using the
--   <tt>DiscoverInstances</tt> API operation.</li>
--   <li><i>DNS</i> Reserved.</li>
--   </ul>
--   
--   <a>$sel:dnsConfig:ServiceInfo'</a>, <a>serviceInfo_dnsConfig</a> - A
--   complex type that contains information about the Route 53 DNS records
--   that you want Cloud Map to create when you register an instance.
--   
--   <a>$sel:description:ServiceInfo'</a>, <a>serviceInfo_description</a> -
--   The description of the service.
newServiceInfo :: ServiceInfo

-- | A complex type that contains information about a specified service.
--   
--   <i>See:</i> <a>newServiceSummary</a> smart constructor.
data ServiceSummary
ServiceSummary' :: Maybe Int -> Maybe Text -> Maybe HealthCheckConfig -> Maybe POSIX -> Maybe HealthCheckCustomConfig -> Maybe Text -> Maybe Text -> Maybe ServiceType -> Maybe DnsConfig -> Maybe Text -> ServiceSummary

-- | Create a value of <a>ServiceSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceCount:ServiceSummary'</a>,
--   <a>serviceSummary_instanceCount</a> - The number of instances that are
--   currently associated with the service. Instances that were previously
--   associated with the service but that are deleted aren't included in
--   the count. The count might not reflect pending registrations and
--   deregistrations.
--   
--   <a>$sel:arn:ServiceSummary'</a>, <a>serviceSummary_arn</a> - The
--   Amazon Resource Name (ARN) that Cloud Map assigns to the service when
--   you create it.
--   
--   <a>$sel:healthCheckConfig:ServiceSummary'</a>,
--   <a>serviceSummary_healthCheckConfig</a> - <i>Public DNS and HTTP
--   namespaces only.</i> Settings for an optional health check. If you
--   specify settings for a health check, Cloud Map associates the health
--   check with the records that you specify in <tt>DnsConfig</tt>.
--   
--   <a>$sel:createDate:ServiceSummary'</a>,
--   <a>serviceSummary_createDate</a> - The date and time that the service
--   was created.
--   
--   <a>$sel:healthCheckCustomConfig:ServiceSummary'</a>,
--   <a>serviceSummary_healthCheckCustomConfig</a> - Information about an
--   optional custom health check. A custom health check, which requires
--   that you use a third-party health checker to evaluate the health of
--   your resources, is useful in the following circumstances:
--   
--   <ul>
--   <li>You can't use a health check that's defined by
--   <tt>HealthCheckConfig</tt> because the resource isn't available over
--   the internet. For example, you can use a custom health check when the
--   instance is in an Amazon VPC. (To check the health of resources in a
--   VPC, the health checker must also be in the VPC.)</li>
--   <li>You want to use a third-party health checker regardless of where
--   your resources are located.</li>
--   </ul>
--   
--   If you specify a health check configuration, you can specify either
--   <tt>HealthCheckCustomConfig</tt> or <tt>HealthCheckConfig</tt> but not
--   both.
--   
--   <a>$sel:name:ServiceSummary'</a>, <a>serviceSummary_name</a> - The
--   name of the service.
--   
--   <a>$sel:id:ServiceSummary'</a>, <a>serviceSummary_id</a> - The ID that
--   Cloud Map assigned to the service when you created it.
--   
--   <a>$sel:type':ServiceSummary'</a>, <a>serviceSummary_type</a> -
--   Describes the systems that can be used to discover the service
--   instances.
--   
--   <ul>
--   <li><i>DNS_HTTP</i> The service instances can be discovered using
--   either DNS queries or the <tt>DiscoverInstances</tt> API
--   operation.</li>
--   <li><i>HTTP</i> The service instances can only be discovered using the
--   <tt>DiscoverInstances</tt> API operation.</li>
--   <li><i>DNS</i> Reserved.</li>
--   </ul>
--   
--   <a>$sel:dnsConfig:ServiceSummary'</a>, <a>serviceSummary_dnsConfig</a>
--   - Information about the Route 53 DNS records that you want Cloud Map
--   to create when you register an instance.
--   
--   <a>$sel:description:ServiceSummary'</a>,
--   <a>serviceSummary_description</a> - The description that you specify
--   when you create the service.
newServiceSummary :: ServiceSummary

-- | A custom key-value pair that's associated with a resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key identifier, or name, of
--   the tag.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The string value that's
--   associated with the key of the tag. You can set the value of a tag to
--   an empty string, but you can't set the value of a tag to null.
newTag :: Text -> Text -> Tag
