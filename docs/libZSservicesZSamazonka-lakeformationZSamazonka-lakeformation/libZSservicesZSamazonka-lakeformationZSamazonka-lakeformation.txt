-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-lakeformationZSamazonka-lakeformation
@version 2.0


module Network.AWS.LakeFormation.Types.CatalogResource

-- | A structure for the catalog object.
--   
--   <i>See:</i> <a>newCatalogResource</a> smart constructor.
data CatalogResource
CatalogResource' :: CatalogResource

-- | Create a value of <a>CatalogResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCatalogResource :: CatalogResource
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.CatalogResource.CatalogResource
instance GHC.Show.Show Network.AWS.LakeFormation.Types.CatalogResource.CatalogResource
instance GHC.Read.Read Network.AWS.LakeFormation.Types.CatalogResource.CatalogResource
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.CatalogResource.CatalogResource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.CatalogResource.CatalogResource
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.CatalogResource.CatalogResource
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.CatalogResource.CatalogResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.CatalogResource.CatalogResource


module Network.AWS.LakeFormation.Types.ColumnWildcard

-- | A wildcard object, consisting of an optional list of excluded column
--   names or indexes.
--   
--   <i>See:</i> <a>newColumnWildcard</a> smart constructor.
data ColumnWildcard
ColumnWildcard' :: Maybe [Text] -> ColumnWildcard

-- | Excludes column names. Any column with this name will be excluded.
[$sel:excludedColumnNames:ColumnWildcard'] :: ColumnWildcard -> Maybe [Text]

-- | Create a value of <a>ColumnWildcard</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:excludedColumnNames:ColumnWildcard'</a>,
--   <a>columnWildcard_excludedColumnNames</a> - Excludes column names. Any
--   column with this name will be excluded.
newColumnWildcard :: ColumnWildcard

-- | Excludes column names. Any column with this name will be excluded.
columnWildcard_excludedColumnNames :: Lens' ColumnWildcard (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.ColumnWildcard.ColumnWildcard
instance GHC.Show.Show Network.AWS.LakeFormation.Types.ColumnWildcard.ColumnWildcard
instance GHC.Read.Read Network.AWS.LakeFormation.Types.ColumnWildcard.ColumnWildcard
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.ColumnWildcard.ColumnWildcard
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.ColumnWildcard.ColumnWildcard
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.ColumnWildcard.ColumnWildcard
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.ColumnWildcard.ColumnWildcard
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.ColumnWildcard.ColumnWildcard


module Network.AWS.LakeFormation.Types.ComparisonOperator
newtype ComparisonOperator
ComparisonOperator' :: Text -> ComparisonOperator
[fromComparisonOperator] :: ComparisonOperator -> Text
pattern ComparisonOperator_BEGINS_WITH :: ComparisonOperator
pattern ComparisonOperator_BETWEEN :: ComparisonOperator
pattern ComparisonOperator_CONTAINS :: ComparisonOperator
pattern ComparisonOperator_EQ :: ComparisonOperator
pattern ComparisonOperator_GE :: ComparisonOperator
pattern ComparisonOperator_GT :: ComparisonOperator
pattern ComparisonOperator_IN :: ComparisonOperator
pattern ComparisonOperator_LE :: ComparisonOperator
pattern ComparisonOperator_LT :: ComparisonOperator
pattern ComparisonOperator_NE :: ComparisonOperator
pattern ComparisonOperator_NOT_CONTAINS :: ComparisonOperator
instance Network.AWS.Data.XML.ToXML Network.AWS.LakeFormation.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.XML.FromXML Network.AWS.LakeFormation.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LakeFormation.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LakeFormation.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LakeFormation.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.Log.ToLog Network.AWS.LakeFormation.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LakeFormation.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.Text.ToText Network.AWS.LakeFormation.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.Text.FromText Network.AWS.LakeFormation.Types.ComparisonOperator.ComparisonOperator
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.ComparisonOperator.ComparisonOperator
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.ComparisonOperator.ComparisonOperator
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.ComparisonOperator.ComparisonOperator
instance GHC.Classes.Ord Network.AWS.LakeFormation.Types.ComparisonOperator.ComparisonOperator
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.ComparisonOperator.ComparisonOperator
instance GHC.Read.Read Network.AWS.LakeFormation.Types.ComparisonOperator.ComparisonOperator
instance GHC.Show.Show Network.AWS.LakeFormation.Types.ComparisonOperator.ComparisonOperator


module Network.AWS.LakeFormation.Types.DataLakePrincipal

-- | The AWS Lake Formation principal. Supported principals are IAM users
--   or IAM roles.
--   
--   <i>See:</i> <a>newDataLakePrincipal</a> smart constructor.
data DataLakePrincipal
DataLakePrincipal' :: Maybe Text -> DataLakePrincipal

-- | An identifier for the AWS Lake Formation principal.
[$sel:dataLakePrincipalIdentifier:DataLakePrincipal'] :: DataLakePrincipal -> Maybe Text

-- | Create a value of <a>DataLakePrincipal</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLakePrincipalIdentifier:DataLakePrincipal'</a>,
--   <a>dataLakePrincipal_dataLakePrincipalIdentifier</a> - An identifier
--   for the AWS Lake Formation principal.
newDataLakePrincipal :: DataLakePrincipal

-- | An identifier for the AWS Lake Formation principal.
dataLakePrincipal_dataLakePrincipalIdentifier :: Lens' DataLakePrincipal (Maybe Text)
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.DataLakePrincipal.DataLakePrincipal
instance GHC.Show.Show Network.AWS.LakeFormation.Types.DataLakePrincipal.DataLakePrincipal
instance GHC.Read.Read Network.AWS.LakeFormation.Types.DataLakePrincipal.DataLakePrincipal
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.DataLakePrincipal.DataLakePrincipal
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.DataLakePrincipal.DataLakePrincipal
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.DataLakePrincipal.DataLakePrincipal
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.DataLakePrincipal.DataLakePrincipal
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.DataLakePrincipal.DataLakePrincipal


module Network.AWS.LakeFormation.Types.DataLakeResourceType
newtype DataLakeResourceType
DataLakeResourceType' :: Text -> DataLakeResourceType
[fromDataLakeResourceType] :: DataLakeResourceType -> Text
pattern DataLakeResourceType_CATALOG :: DataLakeResourceType
pattern DataLakeResourceType_DATABASE :: DataLakeResourceType
pattern DataLakeResourceType_DATA_LOCATION :: DataLakeResourceType
pattern DataLakeResourceType_LF_TAG :: DataLakeResourceType
pattern DataLakeResourceType_LF_TAG_POLICY :: DataLakeResourceType
pattern DataLakeResourceType_LF_TAG_POLICY_DATABASE :: DataLakeResourceType
pattern DataLakeResourceType_LF_TAG_POLICY_TABLE :: DataLakeResourceType
pattern DataLakeResourceType_TABLE :: DataLakeResourceType
instance Network.AWS.Data.XML.ToXML Network.AWS.LakeFormation.Types.DataLakeResourceType.DataLakeResourceType
instance Network.AWS.Data.XML.FromXML Network.AWS.LakeFormation.Types.DataLakeResourceType.DataLakeResourceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LakeFormation.Types.DataLakeResourceType.DataLakeResourceType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.DataLakeResourceType.DataLakeResourceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LakeFormation.Types.DataLakeResourceType.DataLakeResourceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.DataLakeResourceType.DataLakeResourceType
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.Types.DataLakeResourceType.DataLakeResourceType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LakeFormation.Types.DataLakeResourceType.DataLakeResourceType
instance Network.AWS.Data.Log.ToLog Network.AWS.LakeFormation.Types.DataLakeResourceType.DataLakeResourceType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LakeFormation.Types.DataLakeResourceType.DataLakeResourceType
instance Network.AWS.Data.Text.ToText Network.AWS.LakeFormation.Types.DataLakeResourceType.DataLakeResourceType
instance Network.AWS.Data.Text.FromText Network.AWS.LakeFormation.Types.DataLakeResourceType.DataLakeResourceType
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.DataLakeResourceType.DataLakeResourceType
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.DataLakeResourceType.DataLakeResourceType
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.DataLakeResourceType.DataLakeResourceType
instance GHC.Classes.Ord Network.AWS.LakeFormation.Types.DataLakeResourceType.DataLakeResourceType
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.DataLakeResourceType.DataLakeResourceType
instance GHC.Read.Read Network.AWS.LakeFormation.Types.DataLakeResourceType.DataLakeResourceType
instance GHC.Show.Show Network.AWS.LakeFormation.Types.DataLakeResourceType.DataLakeResourceType


module Network.AWS.LakeFormation.Types.DataLocationResource

-- | A structure for a data location object where permissions are granted
--   or revoked.
--   
--   <i>See:</i> <a>newDataLocationResource</a> smart constructor.
data DataLocationResource
DataLocationResource' :: Maybe Text -> Text -> DataLocationResource

-- | The identifier for the Data Catalog where the location is registered
--   with AWS Lake Formation. By default, it is the account ID of the
--   caller.
[$sel:catalogId:DataLocationResource'] :: DataLocationResource -> Maybe Text

-- | The Amazon Resource Name (ARN) that uniquely identifies the data
--   location resource.
[$sel:resourceArn:DataLocationResource'] :: DataLocationResource -> Text

-- | Create a value of <a>DataLocationResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DataLocationResource'</a>,
--   <a>dataLocationResource_catalogId</a> - The identifier for the Data
--   Catalog where the location is registered with AWS Lake Formation. By
--   default, it is the account ID of the caller.
--   
--   <a>$sel:resourceArn:DataLocationResource'</a>,
--   <a>dataLocationResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) that uniquely identifies the data location resource.
newDataLocationResource :: Text -> DataLocationResource

-- | The identifier for the Data Catalog where the location is registered
--   with AWS Lake Formation. By default, it is the account ID of the
--   caller.
dataLocationResource_catalogId :: Lens' DataLocationResource (Maybe Text)

-- | The Amazon Resource Name (ARN) that uniquely identifies the data
--   location resource.
dataLocationResource_resourceArn :: Lens' DataLocationResource Text
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.DataLocationResource.DataLocationResource
instance GHC.Show.Show Network.AWS.LakeFormation.Types.DataLocationResource.DataLocationResource
instance GHC.Read.Read Network.AWS.LakeFormation.Types.DataLocationResource.DataLocationResource
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.DataLocationResource.DataLocationResource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.DataLocationResource.DataLocationResource
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.DataLocationResource.DataLocationResource
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.DataLocationResource.DataLocationResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.DataLocationResource.DataLocationResource


module Network.AWS.LakeFormation.Types.DatabaseResource

-- | A structure for the database object.
--   
--   <i>See:</i> <a>newDatabaseResource</a> smart constructor.
data DatabaseResource
DatabaseResource' :: Maybe Text -> Text -> DatabaseResource

-- | The identifier for the Data Catalog. By default, it is the account ID
--   of the caller.
[$sel:catalogId:DatabaseResource'] :: DatabaseResource -> Maybe Text

-- | The name of the database resource. Unique to the Data Catalog.
[$sel:name:DatabaseResource'] :: DatabaseResource -> Text

-- | Create a value of <a>DatabaseResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DatabaseResource'</a>,
--   <a>databaseResource_catalogId</a> - The identifier for the Data
--   Catalog. By default, it is the account ID of the caller.
--   
--   <a>$sel:name:DatabaseResource'</a>, <a>databaseResource_name</a> - The
--   name of the database resource. Unique to the Data Catalog.
newDatabaseResource :: Text -> DatabaseResource

-- | The identifier for the Data Catalog. By default, it is the account ID
--   of the caller.
databaseResource_catalogId :: Lens' DatabaseResource (Maybe Text)

-- | The name of the database resource. Unique to the Data Catalog.
databaseResource_name :: Lens' DatabaseResource Text
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.DatabaseResource.DatabaseResource
instance GHC.Show.Show Network.AWS.LakeFormation.Types.DatabaseResource.DatabaseResource
instance GHC.Read.Read Network.AWS.LakeFormation.Types.DatabaseResource.DatabaseResource
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.DatabaseResource.DatabaseResource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.DatabaseResource.DatabaseResource
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.DatabaseResource.DatabaseResource
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.DatabaseResource.DatabaseResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.DatabaseResource.DatabaseResource


module Network.AWS.LakeFormation.Types.DetailsMap

-- | A structure containing the additional details to be returned in the
--   <tt>AdditionalDetails</tt> attribute of
--   <tt>PrincipalResourcePermissions</tt>.
--   
--   If a catalog resource is shared through AWS Resource Access Manager
--   (AWS RAM), then there will exist a corresponding RAM resource share
--   ARN.
--   
--   <i>See:</i> <a>newDetailsMap</a> smart constructor.
data DetailsMap
DetailsMap' :: Maybe [Text] -> DetailsMap

-- | A resource share ARN for a catalog resource shared through AWS
--   Resource Access Manager (AWS RAM).
[$sel:resourceShare:DetailsMap'] :: DetailsMap -> Maybe [Text]

-- | Create a value of <a>DetailsMap</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceShare:DetailsMap'</a>, <a>detailsMap_resourceShare</a>
--   - A resource share ARN for a catalog resource shared through AWS
--   Resource Access Manager (AWS RAM).
newDetailsMap :: DetailsMap

-- | A resource share ARN for a catalog resource shared through AWS
--   Resource Access Manager (AWS RAM).
detailsMap_resourceShare :: Lens' DetailsMap (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.DetailsMap.DetailsMap
instance GHC.Show.Show Network.AWS.LakeFormation.Types.DetailsMap.DetailsMap
instance GHC.Read.Read Network.AWS.LakeFormation.Types.DetailsMap.DetailsMap
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.DetailsMap.DetailsMap
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.DetailsMap.DetailsMap
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.DetailsMap.DetailsMap
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.DetailsMap.DetailsMap


module Network.AWS.LakeFormation.Types.ErrorDetail

-- | Contains details about an error.
--   
--   <i>See:</i> <a>newErrorDetail</a> smart constructor.
data ErrorDetail
ErrorDetail' :: Maybe Text -> Maybe Text -> ErrorDetail

-- | The code associated with this error.
[$sel:errorCode:ErrorDetail'] :: ErrorDetail -> Maybe Text

-- | A message describing the error.
[$sel:errorMessage:ErrorDetail'] :: ErrorDetail -> Maybe Text

-- | Create a value of <a>ErrorDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:ErrorDetail'</a>, <a>errorDetail_errorCode</a> - The
--   code associated with this error.
--   
--   <a>$sel:errorMessage:ErrorDetail'</a>, <a>errorDetail_errorMessage</a>
--   - A message describing the error.
newErrorDetail :: ErrorDetail

-- | The code associated with this error.
errorDetail_errorCode :: Lens' ErrorDetail (Maybe Text)

-- | A message describing the error.
errorDetail_errorMessage :: Lens' ErrorDetail (Maybe Text)
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.ErrorDetail.ErrorDetail
instance GHC.Show.Show Network.AWS.LakeFormation.Types.ErrorDetail.ErrorDetail
instance GHC.Read.Read Network.AWS.LakeFormation.Types.ErrorDetail.ErrorDetail
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.ErrorDetail.ErrorDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.ErrorDetail.ErrorDetail
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.ErrorDetail.ErrorDetail
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.ErrorDetail.ErrorDetail


module Network.AWS.LakeFormation.Types.FieldNameString
newtype FieldNameString
FieldNameString' :: Text -> FieldNameString
[fromFieldNameString] :: FieldNameString -> Text
pattern FieldNameString_LAST_MODIFIED :: FieldNameString
pattern FieldNameString_RESOURCE_ARN :: FieldNameString
pattern FieldNameString_ROLE_ARN :: FieldNameString
instance Network.AWS.Data.XML.ToXML Network.AWS.LakeFormation.Types.FieldNameString.FieldNameString
instance Network.AWS.Data.XML.FromXML Network.AWS.LakeFormation.Types.FieldNameString.FieldNameString
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LakeFormation.Types.FieldNameString.FieldNameString
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.FieldNameString.FieldNameString
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LakeFormation.Types.FieldNameString.FieldNameString
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.FieldNameString.FieldNameString
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.Types.FieldNameString.FieldNameString
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LakeFormation.Types.FieldNameString.FieldNameString
instance Network.AWS.Data.Log.ToLog Network.AWS.LakeFormation.Types.FieldNameString.FieldNameString
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LakeFormation.Types.FieldNameString.FieldNameString
instance Network.AWS.Data.Text.ToText Network.AWS.LakeFormation.Types.FieldNameString.FieldNameString
instance Network.AWS.Data.Text.FromText Network.AWS.LakeFormation.Types.FieldNameString.FieldNameString
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.FieldNameString.FieldNameString
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.FieldNameString.FieldNameString
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.FieldNameString.FieldNameString
instance GHC.Classes.Ord Network.AWS.LakeFormation.Types.FieldNameString.FieldNameString
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.FieldNameString.FieldNameString
instance GHC.Read.Read Network.AWS.LakeFormation.Types.FieldNameString.FieldNameString
instance GHC.Show.Show Network.AWS.LakeFormation.Types.FieldNameString.FieldNameString


module Network.AWS.LakeFormation.Types.FilterCondition

-- | This structure describes the filtering of columns in a table based on
--   a filter condition.
--   
--   <i>See:</i> <a>newFilterCondition</a> smart constructor.
data FilterCondition
FilterCondition' :: Maybe FieldNameString -> Maybe ComparisonOperator -> Maybe [Text] -> FilterCondition

-- | The field to filter in the filter condition.
[$sel:field:FilterCondition'] :: FilterCondition -> Maybe FieldNameString

-- | The comparison operator used in the filter condition.
[$sel:comparisonOperator:FilterCondition'] :: FilterCondition -> Maybe ComparisonOperator

-- | A string with values used in evaluating the filter condition.
[$sel:stringValueList:FilterCondition'] :: FilterCondition -> Maybe [Text]

-- | Create a value of <a>FilterCondition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:field:FilterCondition'</a>, <a>filterCondition_field</a> - The
--   field to filter in the filter condition.
--   
--   <a>$sel:comparisonOperator:FilterCondition'</a>,
--   <a>filterCondition_comparisonOperator</a> - The comparison operator
--   used in the filter condition.
--   
--   <a>$sel:stringValueList:FilterCondition'</a>,
--   <a>filterCondition_stringValueList</a> - A string with values used in
--   evaluating the filter condition.
newFilterCondition :: FilterCondition

-- | The field to filter in the filter condition.
filterCondition_field :: Lens' FilterCondition (Maybe FieldNameString)

-- | The comparison operator used in the filter condition.
filterCondition_comparisonOperator :: Lens' FilterCondition (Maybe ComparisonOperator)

-- | A string with values used in evaluating the filter condition.
filterCondition_stringValueList :: Lens' FilterCondition (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.FilterCondition.FilterCondition
instance GHC.Show.Show Network.AWS.LakeFormation.Types.FilterCondition.FilterCondition
instance GHC.Read.Read Network.AWS.LakeFormation.Types.FilterCondition.FilterCondition
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.FilterCondition.FilterCondition
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.FilterCondition.FilterCondition
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.FilterCondition.FilterCondition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.FilterCondition.FilterCondition


module Network.AWS.LakeFormation.Types.LFTag

-- | A structure that allows an admin to grant user permissions on certain
--   conditions. For example, granting a role access to all columns not
--   tagged 'PII' of tables tagged 'Prod'.
--   
--   <i>See:</i> <a>newLFTag</a> smart constructor.
data LFTag
LFTag' :: Text -> NonEmpty Text -> LFTag

-- | The key-name for the tag.
[$sel:tagKey:LFTag'] :: LFTag -> Text

-- | A list of possible values an attribute can take.
[$sel:tagValues:LFTag'] :: LFTag -> NonEmpty Text

-- | Create a value of <a>LFTag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagKey:LFTag'</a>, <a>lFTag_tagKey</a> - The key-name for the
--   tag.
--   
--   <a>$sel:tagValues:LFTag'</a>, <a>lFTag_tagValues</a> - A list of
--   possible values an attribute can take.
newLFTag :: Text -> NonEmpty Text -> LFTag

-- | The key-name for the tag.
lFTag_tagKey :: Lens' LFTag Text

-- | A list of possible values an attribute can take.
lFTag_tagValues :: Lens' LFTag (NonEmpty Text)
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.LFTag.LFTag
instance GHC.Show.Show Network.AWS.LakeFormation.Types.LFTag.LFTag
instance GHC.Read.Read Network.AWS.LakeFormation.Types.LFTag.LFTag
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.LFTag.LFTag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.LFTag.LFTag
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.LFTag.LFTag
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.LFTag.LFTag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.LFTag.LFTag


module Network.AWS.LakeFormation.Types.LFTagKeyResource

-- | A structure containing a tag key and values for a resource.
--   
--   <i>See:</i> <a>newLFTagKeyResource</a> smart constructor.
data LFTagKeyResource
LFTagKeyResource' :: Maybe Text -> Text -> NonEmpty Text -> LFTagKeyResource

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:LFTagKeyResource'] :: LFTagKeyResource -> Maybe Text

-- | The key-name for the tag.
[$sel:tagKey:LFTagKeyResource'] :: LFTagKeyResource -> Text

-- | A list of possible values an attribute can take.
[$sel:tagValues:LFTagKeyResource'] :: LFTagKeyResource -> NonEmpty Text

-- | Create a value of <a>LFTagKeyResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:LFTagKeyResource'</a>,
--   <a>lFTagKeyResource_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:tagKey:LFTagKeyResource'</a>, <a>lFTagKeyResource_tagKey</a> -
--   The key-name for the tag.
--   
--   <a>$sel:tagValues:LFTagKeyResource'</a>,
--   <a>lFTagKeyResource_tagValues</a> - A list of possible values an
--   attribute can take.
newLFTagKeyResource :: Text -> NonEmpty Text -> LFTagKeyResource

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
lFTagKeyResource_catalogId :: Lens' LFTagKeyResource (Maybe Text)

-- | The key-name for the tag.
lFTagKeyResource_tagKey :: Lens' LFTagKeyResource Text

-- | A list of possible values an attribute can take.
lFTagKeyResource_tagValues :: Lens' LFTagKeyResource (NonEmpty Text)
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.LFTagKeyResource.LFTagKeyResource
instance GHC.Show.Show Network.AWS.LakeFormation.Types.LFTagKeyResource.LFTagKeyResource
instance GHC.Read.Read Network.AWS.LakeFormation.Types.LFTagKeyResource.LFTagKeyResource
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.LFTagKeyResource.LFTagKeyResource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.LFTagKeyResource.LFTagKeyResource
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.LFTagKeyResource.LFTagKeyResource
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.LFTagKeyResource.LFTagKeyResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.LFTagKeyResource.LFTagKeyResource


module Network.AWS.LakeFormation.Types.LFTagPair

-- | A structure containing a tag key-value pair.
--   
--   <i>See:</i> <a>newLFTagPair</a> smart constructor.
data LFTagPair
LFTagPair' :: Maybe Text -> Text -> NonEmpty Text -> LFTagPair

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:LFTagPair'] :: LFTagPair -> Maybe Text

-- | The key-name for the tag.
[$sel:tagKey:LFTagPair'] :: LFTagPair -> Text

-- | A list of possible values an attribute can take.
[$sel:tagValues:LFTagPair'] :: LFTagPair -> NonEmpty Text

-- | Create a value of <a>LFTagPair</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:LFTagPair'</a>, <a>lFTagPair_catalogId</a> - The
--   identifier for the Data Catalog. By default, the account ID. The Data
--   Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
--   
--   <a>$sel:tagKey:LFTagPair'</a>, <a>lFTagPair_tagKey</a> - The key-name
--   for the tag.
--   
--   <a>$sel:tagValues:LFTagPair'</a>, <a>lFTagPair_tagValues</a> - A list
--   of possible values an attribute can take.
newLFTagPair :: Text -> NonEmpty Text -> LFTagPair

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
lFTagPair_catalogId :: Lens' LFTagPair (Maybe Text)

-- | The key-name for the tag.
lFTagPair_tagKey :: Lens' LFTagPair Text

-- | A list of possible values an attribute can take.
lFTagPair_tagValues :: Lens' LFTagPair (NonEmpty Text)
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.LFTagPair.LFTagPair
instance GHC.Show.Show Network.AWS.LakeFormation.Types.LFTagPair.LFTagPair
instance GHC.Read.Read Network.AWS.LakeFormation.Types.LFTagPair.LFTagPair
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.LFTagPair.LFTagPair
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.LFTagPair.LFTagPair
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.LFTagPair.LFTagPair
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.LFTagPair.LFTagPair
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.LFTagPair.LFTagPair


module Network.AWS.LakeFormation.Types.LFTagError

-- | A structure containing an error related to a <tt>TagResource</tt> or
--   <tt>UnTagResource</tt> operation.
--   
--   <i>See:</i> <a>newLFTagError</a> smart constructor.
data LFTagError
LFTagError' :: Maybe LFTagPair -> Maybe ErrorDetail -> LFTagError

-- | The key-name of the tag.
[$sel:lFTag:LFTagError'] :: LFTagError -> Maybe LFTagPair

-- | An error that occurred with the attachment or detachment of the tag.
[$sel:error:LFTagError'] :: LFTagError -> Maybe ErrorDetail

-- | Create a value of <a>LFTagError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lFTag:LFTagError'</a>, <a>lFTagError_lFTag</a> - The key-name
--   of the tag.
--   
--   <a>$sel:error:LFTagError'</a>, <a>lFTagError_error</a> - An error that
--   occurred with the attachment or detachment of the tag.
newLFTagError :: LFTagError

-- | The key-name of the tag.
lFTagError_lFTag :: Lens' LFTagError (Maybe LFTagPair)

-- | An error that occurred with the attachment or detachment of the tag.
lFTagError_error :: Lens' LFTagError (Maybe ErrorDetail)
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.LFTagError.LFTagError
instance GHC.Show.Show Network.AWS.LakeFormation.Types.LFTagError.LFTagError
instance GHC.Read.Read Network.AWS.LakeFormation.Types.LFTagError.LFTagError
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.LFTagError.LFTagError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.LFTagError.LFTagError
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.LFTagError.LFTagError
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.LFTagError.LFTagError


module Network.AWS.LakeFormation.Types.ColumnLFTag

-- | A structure containing the name of a column resource and the tags
--   attached to it.
--   
--   <i>See:</i> <a>newColumnLFTag</a> smart constructor.
data ColumnLFTag
ColumnLFTag' :: Maybe Text -> Maybe (NonEmpty LFTagPair) -> ColumnLFTag

-- | The name of a column resource.
[$sel:name:ColumnLFTag'] :: ColumnLFTag -> Maybe Text

-- | The tags attached to a column resource.
[$sel:lFTags:ColumnLFTag'] :: ColumnLFTag -> Maybe (NonEmpty LFTagPair)

-- | Create a value of <a>ColumnLFTag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ColumnLFTag'</a>, <a>columnLFTag_name</a> - The name of a
--   column resource.
--   
--   <a>$sel:lFTags:ColumnLFTag'</a>, <a>columnLFTag_lFTags</a> - The tags
--   attached to a column resource.
newColumnLFTag :: ColumnLFTag

-- | The name of a column resource.
columnLFTag_name :: Lens' ColumnLFTag (Maybe Text)

-- | The tags attached to a column resource.
columnLFTag_lFTags :: Lens' ColumnLFTag (Maybe (NonEmpty LFTagPair))
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.ColumnLFTag.ColumnLFTag
instance GHC.Show.Show Network.AWS.LakeFormation.Types.ColumnLFTag.ColumnLFTag
instance GHC.Read.Read Network.AWS.LakeFormation.Types.ColumnLFTag.ColumnLFTag
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.ColumnLFTag.ColumnLFTag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.ColumnLFTag.ColumnLFTag
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.ColumnLFTag.ColumnLFTag
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.ColumnLFTag.ColumnLFTag


module Network.AWS.LakeFormation.Types.Permission
newtype Permission
Permission' :: Text -> Permission
[fromPermission] :: Permission -> Text
pattern Permission_ALL :: Permission
pattern Permission_ALTER :: Permission
pattern Permission_ALTER_TAG :: Permission
pattern Permission_ASSOCIATE_TAG :: Permission
pattern Permission_CREATE_DATABASE :: Permission
pattern Permission_CREATE_TABLE :: Permission
pattern Permission_CREATE_TAG :: Permission
pattern Permission_DATA_LOCATION_ACCESS :: Permission
pattern Permission_DELETE :: Permission
pattern Permission_DELETE_TAG :: Permission
pattern Permission_DESCRIBE :: Permission
pattern Permission_DESCRIBE_TAG :: Permission
pattern Permission_DROP :: Permission
pattern Permission_INSERT :: Permission
pattern Permission_SELECT :: Permission
instance Network.AWS.Data.XML.ToXML Network.AWS.LakeFormation.Types.Permission.Permission
instance Network.AWS.Data.XML.FromXML Network.AWS.LakeFormation.Types.Permission.Permission
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LakeFormation.Types.Permission.Permission
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.Permission.Permission
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LakeFormation.Types.Permission.Permission
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.Permission.Permission
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.Types.Permission.Permission
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LakeFormation.Types.Permission.Permission
instance Network.AWS.Data.Log.ToLog Network.AWS.LakeFormation.Types.Permission.Permission
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LakeFormation.Types.Permission.Permission
instance Network.AWS.Data.Text.ToText Network.AWS.LakeFormation.Types.Permission.Permission
instance Network.AWS.Data.Text.FromText Network.AWS.LakeFormation.Types.Permission.Permission
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.Permission.Permission
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.Permission.Permission
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.Permission.Permission
instance GHC.Classes.Ord Network.AWS.LakeFormation.Types.Permission.Permission
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.Permission.Permission
instance GHC.Read.Read Network.AWS.LakeFormation.Types.Permission.Permission
instance GHC.Show.Show Network.AWS.LakeFormation.Types.Permission.Permission


module Network.AWS.LakeFormation.Types.PrincipalPermissions

-- | Permissions granted to a principal.
--   
--   <i>See:</i> <a>newPrincipalPermissions</a> smart constructor.
data PrincipalPermissions
PrincipalPermissions' :: Maybe DataLakePrincipal -> Maybe [Permission] -> PrincipalPermissions

-- | The principal who is granted permissions.
[$sel:principal:PrincipalPermissions'] :: PrincipalPermissions -> Maybe DataLakePrincipal

-- | The permissions that are granted to the principal.
[$sel:permissions:PrincipalPermissions'] :: PrincipalPermissions -> Maybe [Permission]

-- | Create a value of <a>PrincipalPermissions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:principal:PrincipalPermissions'</a>,
--   <a>principalPermissions_principal</a> - The principal who is granted
--   permissions.
--   
--   <a>$sel:permissions:PrincipalPermissions'</a>,
--   <a>principalPermissions_permissions</a> - The permissions that are
--   granted to the principal.
newPrincipalPermissions :: PrincipalPermissions

-- | The principal who is granted permissions.
principalPermissions_principal :: Lens' PrincipalPermissions (Maybe DataLakePrincipal)

-- | The permissions that are granted to the principal.
principalPermissions_permissions :: Lens' PrincipalPermissions (Maybe [Permission])
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.PrincipalPermissions.PrincipalPermissions
instance GHC.Show.Show Network.AWS.LakeFormation.Types.PrincipalPermissions.PrincipalPermissions
instance GHC.Read.Read Network.AWS.LakeFormation.Types.PrincipalPermissions.PrincipalPermissions
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.PrincipalPermissions.PrincipalPermissions
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.PrincipalPermissions.PrincipalPermissions
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.PrincipalPermissions.PrincipalPermissions
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.PrincipalPermissions.PrincipalPermissions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.PrincipalPermissions.PrincipalPermissions


module Network.AWS.LakeFormation.Types.DataLakeSettings

-- | A structure representing a list of AWS Lake Formation principals
--   designated as data lake administrators and lists of principal
--   permission entries for default create database and default create
--   table permissions.
--   
--   <i>See:</i> <a>newDataLakeSettings</a> smart constructor.
data DataLakeSettings
DataLakeSettings' :: Maybe [DataLakePrincipal] -> Maybe [Text] -> Maybe [PrincipalPermissions] -> Maybe [PrincipalPermissions] -> DataLakeSettings

-- | A list of AWS Lake Formation principals. Supported principals are IAM
--   users or IAM roles.
[$sel:dataLakeAdmins:DataLakeSettings'] :: DataLakeSettings -> Maybe [DataLakePrincipal]

-- | A list of the resource-owning account IDs that the caller's account
--   can use to share their user access details (user ARNs). The user ARNs
--   can be logged in the resource owner's AWS CloudTrail log.
--   
--   You may want to specify this property when you are in a high-trust
--   boundary, such as the same team or company.
[$sel:trustedResourceOwners:DataLakeSettings'] :: DataLakeSettings -> Maybe [Text]

-- | A structure representing a list of up to three principal permissions
--   entries for default create database permissions.
[$sel:createDatabaseDefaultPermissions:DataLakeSettings'] :: DataLakeSettings -> Maybe [PrincipalPermissions]

-- | A structure representing a list of up to three principal permissions
--   entries for default create table permissions.
[$sel:createTableDefaultPermissions:DataLakeSettings'] :: DataLakeSettings -> Maybe [PrincipalPermissions]

-- | Create a value of <a>DataLakeSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLakeAdmins:DataLakeSettings'</a>,
--   <a>dataLakeSettings_dataLakeAdmins</a> - A list of AWS Lake Formation
--   principals. Supported principals are IAM users or IAM roles.
--   
--   <a>$sel:trustedResourceOwners:DataLakeSettings'</a>,
--   <a>dataLakeSettings_trustedResourceOwners</a> - A list of the
--   resource-owning account IDs that the caller's account can use to share
--   their user access details (user ARNs). The user ARNs can be logged in
--   the resource owner's AWS CloudTrail log.
--   
--   You may want to specify this property when you are in a high-trust
--   boundary, such as the same team or company.
--   
--   <a>$sel:createDatabaseDefaultPermissions:DataLakeSettings'</a>,
--   <a>dataLakeSettings_createDatabaseDefaultPermissions</a> - A structure
--   representing a list of up to three principal permissions entries for
--   default create database permissions.
--   
--   <a>$sel:createTableDefaultPermissions:DataLakeSettings'</a>,
--   <a>dataLakeSettings_createTableDefaultPermissions</a> - A structure
--   representing a list of up to three principal permissions entries for
--   default create table permissions.
newDataLakeSettings :: DataLakeSettings

-- | A list of AWS Lake Formation principals. Supported principals are IAM
--   users or IAM roles.
dataLakeSettings_dataLakeAdmins :: Lens' DataLakeSettings (Maybe [DataLakePrincipal])

-- | A list of the resource-owning account IDs that the caller's account
--   can use to share their user access details (user ARNs). The user ARNs
--   can be logged in the resource owner's AWS CloudTrail log.
--   
--   You may want to specify this property when you are in a high-trust
--   boundary, such as the same team or company.
dataLakeSettings_trustedResourceOwners :: Lens' DataLakeSettings (Maybe [Text])

-- | A structure representing a list of up to three principal permissions
--   entries for default create database permissions.
dataLakeSettings_createDatabaseDefaultPermissions :: Lens' DataLakeSettings (Maybe [PrincipalPermissions])

-- | A structure representing a list of up to three principal permissions
--   entries for default create table permissions.
dataLakeSettings_createTableDefaultPermissions :: Lens' DataLakeSettings (Maybe [PrincipalPermissions])
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.DataLakeSettings.DataLakeSettings
instance GHC.Show.Show Network.AWS.LakeFormation.Types.DataLakeSettings.DataLakeSettings
instance GHC.Read.Read Network.AWS.LakeFormation.Types.DataLakeSettings.DataLakeSettings
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.DataLakeSettings.DataLakeSettings
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.DataLakeSettings.DataLakeSettings
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.DataLakeSettings.DataLakeSettings
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.DataLakeSettings.DataLakeSettings
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.DataLakeSettings.DataLakeSettings


module Network.AWS.LakeFormation.Types.ResourceInfo

-- | A structure containing information about an AWS Lake Formation
--   resource.
--   
--   <i>See:</i> <a>newResourceInfo</a> smart constructor.
data ResourceInfo
ResourceInfo' :: Maybe Text -> Maybe POSIX -> Maybe Text -> ResourceInfo

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArn:ResourceInfo'] :: ResourceInfo -> Maybe Text

-- | The date and time the resource was last modified.
[$sel:lastModified:ResourceInfo'] :: ResourceInfo -> Maybe POSIX

-- | The IAM role that registered a resource.
[$sel:roleArn:ResourceInfo'] :: ResourceInfo -> Maybe Text

-- | Create a value of <a>ResourceInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ResourceInfo'</a>, <a>resourceInfo_resourceArn</a>
--   - The Amazon Resource Name (ARN) of the resource.
--   
--   <a>$sel:lastModified:ResourceInfo'</a>,
--   <a>resourceInfo_lastModified</a> - The date and time the resource was
--   last modified.
--   
--   <a>$sel:roleArn:ResourceInfo'</a>, <a>resourceInfo_roleArn</a> - The
--   IAM role that registered a resource.
newResourceInfo :: ResourceInfo

-- | The Amazon Resource Name (ARN) of the resource.
resourceInfo_resourceArn :: Lens' ResourceInfo (Maybe Text)

-- | The date and time the resource was last modified.
resourceInfo_lastModified :: Lens' ResourceInfo (Maybe UTCTime)

-- | The IAM role that registered a resource.
resourceInfo_roleArn :: Lens' ResourceInfo (Maybe Text)
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.ResourceInfo.ResourceInfo
instance GHC.Show.Show Network.AWS.LakeFormation.Types.ResourceInfo.ResourceInfo
instance GHC.Read.Read Network.AWS.LakeFormation.Types.ResourceInfo.ResourceInfo
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.ResourceInfo.ResourceInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.ResourceInfo.ResourceInfo
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.ResourceInfo.ResourceInfo
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.ResourceInfo.ResourceInfo


module Network.AWS.LakeFormation.Types.ResourceShareType
newtype ResourceShareType
ResourceShareType' :: Text -> ResourceShareType
[fromResourceShareType] :: ResourceShareType -> Text
pattern ResourceShareType_ALL :: ResourceShareType
pattern ResourceShareType_FOREIGN :: ResourceShareType
instance Network.AWS.Data.XML.ToXML Network.AWS.LakeFormation.Types.ResourceShareType.ResourceShareType
instance Network.AWS.Data.XML.FromXML Network.AWS.LakeFormation.Types.ResourceShareType.ResourceShareType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LakeFormation.Types.ResourceShareType.ResourceShareType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.ResourceShareType.ResourceShareType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LakeFormation.Types.ResourceShareType.ResourceShareType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.ResourceShareType.ResourceShareType
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.Types.ResourceShareType.ResourceShareType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LakeFormation.Types.ResourceShareType.ResourceShareType
instance Network.AWS.Data.Log.ToLog Network.AWS.LakeFormation.Types.ResourceShareType.ResourceShareType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LakeFormation.Types.ResourceShareType.ResourceShareType
instance Network.AWS.Data.Text.ToText Network.AWS.LakeFormation.Types.ResourceShareType.ResourceShareType
instance Network.AWS.Data.Text.FromText Network.AWS.LakeFormation.Types.ResourceShareType.ResourceShareType
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.ResourceShareType.ResourceShareType
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.ResourceShareType.ResourceShareType
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.ResourceShareType.ResourceShareType
instance GHC.Classes.Ord Network.AWS.LakeFormation.Types.ResourceShareType.ResourceShareType
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.ResourceShareType.ResourceShareType
instance GHC.Read.Read Network.AWS.LakeFormation.Types.ResourceShareType.ResourceShareType
instance GHC.Show.Show Network.AWS.LakeFormation.Types.ResourceShareType.ResourceShareType


module Network.AWS.LakeFormation.Types.ResourceType
newtype ResourceType
ResourceType' :: Text -> ResourceType
[fromResourceType] :: ResourceType -> Text
pattern ResourceType_DATABASE :: ResourceType
pattern ResourceType_TABLE :: ResourceType
instance Network.AWS.Data.XML.ToXML Network.AWS.LakeFormation.Types.ResourceType.ResourceType
instance Network.AWS.Data.XML.FromXML Network.AWS.LakeFormation.Types.ResourceType.ResourceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LakeFormation.Types.ResourceType.ResourceType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.ResourceType.ResourceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LakeFormation.Types.ResourceType.ResourceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.ResourceType.ResourceType
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.Types.ResourceType.ResourceType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LakeFormation.Types.ResourceType.ResourceType
instance Network.AWS.Data.Log.ToLog Network.AWS.LakeFormation.Types.ResourceType.ResourceType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LakeFormation.Types.ResourceType.ResourceType
instance Network.AWS.Data.Text.ToText Network.AWS.LakeFormation.Types.ResourceType.ResourceType
instance Network.AWS.Data.Text.FromText Network.AWS.LakeFormation.Types.ResourceType.ResourceType
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.ResourceType.ResourceType
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.ResourceType.ResourceType
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.ResourceType.ResourceType
instance GHC.Classes.Ord Network.AWS.LakeFormation.Types.ResourceType.ResourceType
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.ResourceType.ResourceType
instance GHC.Read.Read Network.AWS.LakeFormation.Types.ResourceType.ResourceType
instance GHC.Show.Show Network.AWS.LakeFormation.Types.ResourceType.ResourceType


module Network.AWS.LakeFormation.Types.LFTagPolicyResource

-- | A structure containing a list of tag conditions that apply to a
--   resource's tag policy.
--   
--   <i>See:</i> <a>newLFTagPolicyResource</a> smart constructor.
data LFTagPolicyResource
LFTagPolicyResource' :: Maybe Text -> ResourceType -> NonEmpty LFTag -> LFTagPolicyResource

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:LFTagPolicyResource'] :: LFTagPolicyResource -> Maybe Text

-- | The resource type for which the tag policy applies.
[$sel:resourceType:LFTagPolicyResource'] :: LFTagPolicyResource -> ResourceType

-- | A list of tag conditions that apply to the resource's tag policy.
[$sel:expression:LFTagPolicyResource'] :: LFTagPolicyResource -> NonEmpty LFTag

-- | Create a value of <a>LFTagPolicyResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:LFTagPolicyResource'</a>,
--   <a>lFTagPolicyResource_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:resourceType:LFTagPolicyResource'</a>,
--   <a>lFTagPolicyResource_resourceType</a> - The resource type for which
--   the tag policy applies.
--   
--   <a>$sel:expression:LFTagPolicyResource'</a>,
--   <a>lFTagPolicyResource_expression</a> - A list of tag conditions that
--   apply to the resource's tag policy.
newLFTagPolicyResource :: ResourceType -> NonEmpty LFTag -> LFTagPolicyResource

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
lFTagPolicyResource_catalogId :: Lens' LFTagPolicyResource (Maybe Text)

-- | The resource type for which the tag policy applies.
lFTagPolicyResource_resourceType :: Lens' LFTagPolicyResource ResourceType

-- | A list of tag conditions that apply to the resource's tag policy.
lFTagPolicyResource_expression :: Lens' LFTagPolicyResource (NonEmpty LFTag)
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.LFTagPolicyResource.LFTagPolicyResource
instance GHC.Show.Show Network.AWS.LakeFormation.Types.LFTagPolicyResource.LFTagPolicyResource
instance GHC.Read.Read Network.AWS.LakeFormation.Types.LFTagPolicyResource.LFTagPolicyResource
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.LFTagPolicyResource.LFTagPolicyResource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.LFTagPolicyResource.LFTagPolicyResource
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.LFTagPolicyResource.LFTagPolicyResource
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.LFTagPolicyResource.LFTagPolicyResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.LFTagPolicyResource.LFTagPolicyResource


module Network.AWS.LakeFormation.Types.TableWildcard

-- | A wildcard object representing every table under a database.
--   
--   <i>See:</i> <a>newTableWildcard</a> smart constructor.
data TableWildcard
TableWildcard' :: TableWildcard

-- | Create a value of <a>TableWildcard</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTableWildcard :: TableWildcard
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.TableWildcard.TableWildcard
instance GHC.Show.Show Network.AWS.LakeFormation.Types.TableWildcard.TableWildcard
instance GHC.Read.Read Network.AWS.LakeFormation.Types.TableWildcard.TableWildcard
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.TableWildcard.TableWildcard
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.TableWildcard.TableWildcard
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.TableWildcard.TableWildcard
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.TableWildcard.TableWildcard
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.TableWildcard.TableWildcard


module Network.AWS.LakeFormation.Types.TableResource

-- | A structure for the table object. A table is a metadata definition
--   that represents your data. You can Grant and Revoke table privileges
--   to a principal.
--   
--   <i>See:</i> <a>newTableResource</a> smart constructor.
data TableResource
TableResource' :: Maybe Text -> Maybe TableWildcard -> Maybe Text -> Text -> TableResource

-- | The identifier for the Data Catalog. By default, it is the account ID
--   of the caller.
[$sel:catalogId:TableResource'] :: TableResource -> Maybe Text

-- | A wildcard object representing every table under a database.
--   
--   At least one of <tt>TableResource$Name</tt> or
--   <tt>TableResource$TableWildcard</tt> is required.
[$sel:tableWildcard:TableResource'] :: TableResource -> Maybe TableWildcard

-- | The name of the table.
[$sel:name:TableResource'] :: TableResource -> Maybe Text

-- | The name of the database for the table. Unique to a Data Catalog. A
--   database is a set of associated table definitions organized into a
--   logical group. You can Grant and Revoke database privileges to a
--   principal.
[$sel:databaseName:TableResource'] :: TableResource -> Text

-- | Create a value of <a>TableResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:TableResource'</a>, <a>tableResource_catalogId</a> -
--   The identifier for the Data Catalog. By default, it is the account ID
--   of the caller.
--   
--   <a>$sel:tableWildcard:TableResource'</a>,
--   <a>tableResource_tableWildcard</a> - A wildcard object representing
--   every table under a database.
--   
--   At least one of <tt>TableResource$Name</tt> or
--   <tt>TableResource$TableWildcard</tt> is required.
--   
--   <a>$sel:name:TableResource'</a>, <a>tableResource_name</a> - The name
--   of the table.
--   
--   <a>$sel:databaseName:TableResource'</a>,
--   <a>tableResource_databaseName</a> - The name of the database for the
--   table. Unique to a Data Catalog. A database is a set of associated
--   table definitions organized into a logical group. You can Grant and
--   Revoke database privileges to a principal.
newTableResource :: Text -> TableResource

-- | The identifier for the Data Catalog. By default, it is the account ID
--   of the caller.
tableResource_catalogId :: Lens' TableResource (Maybe Text)

-- | A wildcard object representing every table under a database.
--   
--   At least one of <tt>TableResource$Name</tt> or
--   <tt>TableResource$TableWildcard</tt> is required.
tableResource_tableWildcard :: Lens' TableResource (Maybe TableWildcard)

-- | The name of the table.
tableResource_name :: Lens' TableResource (Maybe Text)

-- | The name of the database for the table. Unique to a Data Catalog. A
--   database is a set of associated table definitions organized into a
--   logical group. You can Grant and Revoke database privileges to a
--   principal.
tableResource_databaseName :: Lens' TableResource Text
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.TableResource.TableResource
instance GHC.Show.Show Network.AWS.LakeFormation.Types.TableResource.TableResource
instance GHC.Read.Read Network.AWS.LakeFormation.Types.TableResource.TableResource
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.TableResource.TableResource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.TableResource.TableResource
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.TableResource.TableResource
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.TableResource.TableResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.TableResource.TableResource


module Network.AWS.LakeFormation.Types.TableWithColumnsResource

-- | A structure for a table with columns object. This object is only used
--   when granting a SELECT permission.
--   
--   This object must take a value for at least one of
--   <tt>ColumnsNames</tt>, <tt>ColumnsIndexes</tt>, or
--   <tt>ColumnsWildcard</tt>.
--   
--   <i>See:</i> <a>newTableWithColumnsResource</a> smart constructor.
data TableWithColumnsResource
TableWithColumnsResource' :: Maybe Text -> Maybe ColumnWildcard -> Maybe [Text] -> Text -> Text -> TableWithColumnsResource

-- | The identifier for the Data Catalog. By default, it is the account ID
--   of the caller.
[$sel:catalogId:TableWithColumnsResource'] :: TableWithColumnsResource -> Maybe Text

-- | A wildcard specified by a <tt>ColumnWildcard</tt> object. At least one
--   of <tt>ColumnNames</tt> or <tt>ColumnWildcard</tt> is required.
[$sel:columnWildcard:TableWithColumnsResource'] :: TableWithColumnsResource -> Maybe ColumnWildcard

-- | The list of column names for the table. At least one of
--   <tt>ColumnNames</tt> or <tt>ColumnWildcard</tt> is required.
[$sel:columnNames:TableWithColumnsResource'] :: TableWithColumnsResource -> Maybe [Text]

-- | The name of the database for the table with columns resource. Unique
--   to the Data Catalog. A database is a set of associated table
--   definitions organized into a logical group. You can Grant and Revoke
--   database privileges to a principal.
[$sel:databaseName:TableWithColumnsResource'] :: TableWithColumnsResource -> Text

-- | The name of the table resource. A table is a metadata definition that
--   represents your data. You can Grant and Revoke table privileges to a
--   principal.
[$sel:name:TableWithColumnsResource'] :: TableWithColumnsResource -> Text

-- | Create a value of <a>TableWithColumnsResource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:TableWithColumnsResource'</a>,
--   <a>tableWithColumnsResource_catalogId</a> - The identifier for the
--   Data Catalog. By default, it is the account ID of the caller.
--   
--   <a>$sel:columnWildcard:TableWithColumnsResource'</a>,
--   <a>tableWithColumnsResource_columnWildcard</a> - A wildcard specified
--   by a <tt>ColumnWildcard</tt> object. At least one of
--   <tt>ColumnNames</tt> or <tt>ColumnWildcard</tt> is required.
--   
--   <a>$sel:columnNames:TableWithColumnsResource'</a>,
--   <a>tableWithColumnsResource_columnNames</a> - The list of column names
--   for the table. At least one of <tt>ColumnNames</tt> or
--   <tt>ColumnWildcard</tt> is required.
--   
--   <a>$sel:databaseName:TableWithColumnsResource'</a>,
--   <a>tableWithColumnsResource_databaseName</a> - The name of the
--   database for the table with columns resource. Unique to the Data
--   Catalog. A database is a set of associated table definitions organized
--   into a logical group. You can Grant and Revoke database privileges to
--   a principal.
--   
--   <a>$sel:name:TableWithColumnsResource'</a>,
--   <a>tableWithColumnsResource_name</a> - The name of the table resource.
--   A table is a metadata definition that represents your data. You can
--   Grant and Revoke table privileges to a principal.
newTableWithColumnsResource :: Text -> Text -> TableWithColumnsResource

-- | The identifier for the Data Catalog. By default, it is the account ID
--   of the caller.
tableWithColumnsResource_catalogId :: Lens' TableWithColumnsResource (Maybe Text)

-- | A wildcard specified by a <tt>ColumnWildcard</tt> object. At least one
--   of <tt>ColumnNames</tt> or <tt>ColumnWildcard</tt> is required.
tableWithColumnsResource_columnWildcard :: Lens' TableWithColumnsResource (Maybe ColumnWildcard)

-- | The list of column names for the table. At least one of
--   <tt>ColumnNames</tt> or <tt>ColumnWildcard</tt> is required.
tableWithColumnsResource_columnNames :: Lens' TableWithColumnsResource (Maybe [Text])

-- | The name of the database for the table with columns resource. Unique
--   to the Data Catalog. A database is a set of associated table
--   definitions organized into a logical group. You can Grant and Revoke
--   database privileges to a principal.
tableWithColumnsResource_databaseName :: Lens' TableWithColumnsResource Text

-- | The name of the table resource. A table is a metadata definition that
--   represents your data. You can Grant and Revoke table privileges to a
--   principal.
tableWithColumnsResource_name :: Lens' TableWithColumnsResource Text
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.TableWithColumnsResource.TableWithColumnsResource
instance GHC.Show.Show Network.AWS.LakeFormation.Types.TableWithColumnsResource.TableWithColumnsResource
instance GHC.Read.Read Network.AWS.LakeFormation.Types.TableWithColumnsResource.TableWithColumnsResource
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.TableWithColumnsResource.TableWithColumnsResource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.TableWithColumnsResource.TableWithColumnsResource
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.TableWithColumnsResource.TableWithColumnsResource
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.TableWithColumnsResource.TableWithColumnsResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.TableWithColumnsResource.TableWithColumnsResource


module Network.AWS.LakeFormation.Types.Resource

-- | A structure for the resource.
--   
--   <i>See:</i> <a>newResource</a> smart constructor.
data Resource
Resource' :: Maybe DataLocationResource -> Maybe DatabaseResource -> Maybe LFTagKeyResource -> Maybe CatalogResource -> Maybe LFTagPolicyResource -> Maybe TableResource -> Maybe TableWithColumnsResource -> Resource

-- | The location of an Amazon S3 path where permissions are granted or
--   revoked.
[$sel:dataLocation:Resource'] :: Resource -> Maybe DataLocationResource

-- | The database for the resource. Unique to the Data Catalog. A database
--   is a set of associated table definitions organized into a logical
--   group. You can Grant and Revoke database permissions to a principal.
[$sel:database:Resource'] :: Resource -> Maybe DatabaseResource

-- | The tag key and values attached to a resource.
[$sel:lFTag:Resource'] :: Resource -> Maybe LFTagKeyResource

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalog:Resource'] :: Resource -> Maybe CatalogResource

-- | A list of tag conditions that define a resource's tag policy.
[$sel:lFTagPolicy:Resource'] :: Resource -> Maybe LFTagPolicyResource

-- | The table for the resource. A table is a metadata definition that
--   represents your data. You can Grant and Revoke table privileges to a
--   principal.
[$sel:table:Resource'] :: Resource -> Maybe TableResource

-- | The table with columns for the resource. A principal with permissions
--   to this resource can select metadata from the columns of a table in
--   the Data Catalog and the underlying data in Amazon S3.
[$sel:tableWithColumns:Resource'] :: Resource -> Maybe TableWithColumnsResource

-- | Create a value of <a>Resource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLocation:Resource'</a>, <a>resource_dataLocation</a> - The
--   location of an Amazon S3 path where permissions are granted or
--   revoked.
--   
--   <a>$sel:database:Resource'</a>, <a>resource_database</a> - The
--   database for the resource. Unique to the Data Catalog. A database is a
--   set of associated table definitions organized into a logical group.
--   You can Grant and Revoke database permissions to a principal.
--   
--   <a>$sel:lFTag:Resource'</a>, <a>resource_lFTag</a> - The tag key and
--   values attached to a resource.
--   
--   <a>$sel:catalog:Resource'</a>, <a>resource_catalog</a> - The
--   identifier for the Data Catalog. By default, the account ID. The Data
--   Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
--   
--   <a>$sel:lFTagPolicy:Resource'</a>, <a>resource_lFTagPolicy</a> - A
--   list of tag conditions that define a resource's tag policy.
--   
--   <a>$sel:table:Resource'</a>, <a>resource_table</a> - The table for the
--   resource. A table is a metadata definition that represents your data.
--   You can Grant and Revoke table privileges to a principal.
--   
--   <a>$sel:tableWithColumns:Resource'</a>,
--   <a>resource_tableWithColumns</a> - The table with columns for the
--   resource. A principal with permissions to this resource can select
--   metadata from the columns of a table in the Data Catalog and the
--   underlying data in Amazon S3.
newResource :: Resource

-- | The location of an Amazon S3 path where permissions are granted or
--   revoked.
resource_dataLocation :: Lens' Resource (Maybe DataLocationResource)

-- | The database for the resource. Unique to the Data Catalog. A database
--   is a set of associated table definitions organized into a logical
--   group. You can Grant and Revoke database permissions to a principal.
resource_database :: Lens' Resource (Maybe DatabaseResource)

-- | The tag key and values attached to a resource.
resource_lFTag :: Lens' Resource (Maybe LFTagKeyResource)

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
resource_catalog :: Lens' Resource (Maybe CatalogResource)

-- | A list of tag conditions that define a resource's tag policy.
resource_lFTagPolicy :: Lens' Resource (Maybe LFTagPolicyResource)

-- | The table for the resource. A table is a metadata definition that
--   represents your data. You can Grant and Revoke table privileges to a
--   principal.
resource_table :: Lens' Resource (Maybe TableResource)

-- | The table with columns for the resource. A principal with permissions
--   to this resource can select metadata from the columns of a table in
--   the Data Catalog and the underlying data in Amazon S3.
resource_tableWithColumns :: Lens' Resource (Maybe TableWithColumnsResource)
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.Resource.Resource
instance GHC.Show.Show Network.AWS.LakeFormation.Types.Resource.Resource
instance GHC.Read.Read Network.AWS.LakeFormation.Types.Resource.Resource
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.Resource.Resource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.Resource.Resource
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.Resource.Resource
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.Resource.Resource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.Resource.Resource


module Network.AWS.LakeFormation.Types.PrincipalResourcePermissions

-- | The permissions granted or revoked on a resource.
--   
--   <i>See:</i> <a>newPrincipalResourcePermissions</a> smart constructor.
data PrincipalResourcePermissions
PrincipalResourcePermissions' :: Maybe DetailsMap -> Maybe [Permission] -> Maybe DataLakePrincipal -> Maybe Resource -> Maybe [Permission] -> PrincipalResourcePermissions

-- | This attribute can be used to return any additional details of
--   <tt>PrincipalResourcePermissions</tt>. Currently returns only as a RAM
--   resource share ARN.
[$sel:additionalDetails:PrincipalResourcePermissions'] :: PrincipalResourcePermissions -> Maybe DetailsMap

-- | Indicates whether to grant the ability to grant permissions (as a
--   subset of permissions granted).
[$sel:permissionsWithGrantOption:PrincipalResourcePermissions'] :: PrincipalResourcePermissions -> Maybe [Permission]

-- | The Data Lake principal to be granted or revoked permissions.
[$sel:principal:PrincipalResourcePermissions'] :: PrincipalResourcePermissions -> Maybe DataLakePrincipal

-- | The resource where permissions are to be granted or revoked.
[$sel:resource:PrincipalResourcePermissions'] :: PrincipalResourcePermissions -> Maybe Resource

-- | The permissions to be granted or revoked on the resource.
[$sel:permissions:PrincipalResourcePermissions'] :: PrincipalResourcePermissions -> Maybe [Permission]

-- | Create a value of <a>PrincipalResourcePermissions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:additionalDetails:PrincipalResourcePermissions'</a>,
--   <a>principalResourcePermissions_additionalDetails</a> - This attribute
--   can be used to return any additional details of
--   <tt>PrincipalResourcePermissions</tt>. Currently returns only as a RAM
--   resource share ARN.
--   
--   <a>$sel:permissionsWithGrantOption:PrincipalResourcePermissions'</a>,
--   <a>principalResourcePermissions_permissionsWithGrantOption</a> -
--   Indicates whether to grant the ability to grant permissions (as a
--   subset of permissions granted).
--   
--   <a>$sel:principal:PrincipalResourcePermissions'</a>,
--   <a>principalResourcePermissions_principal</a> - The Data Lake
--   principal to be granted or revoked permissions.
--   
--   <a>$sel:resource:PrincipalResourcePermissions'</a>,
--   <a>principalResourcePermissions_resource</a> - The resource where
--   permissions are to be granted or revoked.
--   
--   <a>$sel:permissions:PrincipalResourcePermissions'</a>,
--   <a>principalResourcePermissions_permissions</a> - The permissions to
--   be granted or revoked on the resource.
newPrincipalResourcePermissions :: PrincipalResourcePermissions

-- | This attribute can be used to return any additional details of
--   <tt>PrincipalResourcePermissions</tt>. Currently returns only as a RAM
--   resource share ARN.
principalResourcePermissions_additionalDetails :: Lens' PrincipalResourcePermissions (Maybe DetailsMap)

-- | Indicates whether to grant the ability to grant permissions (as a
--   subset of permissions granted).
principalResourcePermissions_permissionsWithGrantOption :: Lens' PrincipalResourcePermissions (Maybe [Permission])

-- | The Data Lake principal to be granted or revoked permissions.
principalResourcePermissions_principal :: Lens' PrincipalResourcePermissions (Maybe DataLakePrincipal)

-- | The resource where permissions are to be granted or revoked.
principalResourcePermissions_resource :: Lens' PrincipalResourcePermissions (Maybe Resource)

-- | The permissions to be granted or revoked on the resource.
principalResourcePermissions_permissions :: Lens' PrincipalResourcePermissions (Maybe [Permission])
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.PrincipalResourcePermissions.PrincipalResourcePermissions
instance GHC.Show.Show Network.AWS.LakeFormation.Types.PrincipalResourcePermissions.PrincipalResourcePermissions
instance GHC.Read.Read Network.AWS.LakeFormation.Types.PrincipalResourcePermissions.PrincipalResourcePermissions
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.PrincipalResourcePermissions.PrincipalResourcePermissions
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.PrincipalResourcePermissions.PrincipalResourcePermissions
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.PrincipalResourcePermissions.PrincipalResourcePermissions
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.PrincipalResourcePermissions.PrincipalResourcePermissions


module Network.AWS.LakeFormation.Types.BatchPermissionsRequestEntry

-- | A permission to a resource granted by batch operation to the
--   principal.
--   
--   <i>See:</i> <a>newBatchPermissionsRequestEntry</a> smart constructor.
data BatchPermissionsRequestEntry
BatchPermissionsRequestEntry' :: Maybe [Permission] -> Maybe DataLakePrincipal -> Maybe Resource -> Maybe [Permission] -> Text -> BatchPermissionsRequestEntry

-- | Indicates if the option to pass permissions is granted.
[$sel:permissionsWithGrantOption:BatchPermissionsRequestEntry'] :: BatchPermissionsRequestEntry -> Maybe [Permission]

-- | The principal to be granted a permission.
[$sel:principal:BatchPermissionsRequestEntry'] :: BatchPermissionsRequestEntry -> Maybe DataLakePrincipal

-- | The resource to which the principal is to be granted a permission.
[$sel:resource:BatchPermissionsRequestEntry'] :: BatchPermissionsRequestEntry -> Maybe Resource

-- | The permissions to be granted.
[$sel:permissions:BatchPermissionsRequestEntry'] :: BatchPermissionsRequestEntry -> Maybe [Permission]

-- | A unique identifier for the batch permissions request entry.
[$sel:id:BatchPermissionsRequestEntry'] :: BatchPermissionsRequestEntry -> Text

-- | Create a value of <a>BatchPermissionsRequestEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:permissionsWithGrantOption:BatchPermissionsRequestEntry'</a>,
--   <a>batchPermissionsRequestEntry_permissionsWithGrantOption</a> -
--   Indicates if the option to pass permissions is granted.
--   
--   <a>$sel:principal:BatchPermissionsRequestEntry'</a>,
--   <a>batchPermissionsRequestEntry_principal</a> - The principal to be
--   granted a permission.
--   
--   <a>$sel:resource:BatchPermissionsRequestEntry'</a>,
--   <a>batchPermissionsRequestEntry_resource</a> - The resource to which
--   the principal is to be granted a permission.
--   
--   <a>$sel:permissions:BatchPermissionsRequestEntry'</a>,
--   <a>batchPermissionsRequestEntry_permissions</a> - The permissions to
--   be granted.
--   
--   <a>$sel:id:BatchPermissionsRequestEntry'</a>,
--   <a>batchPermissionsRequestEntry_id</a> - A unique identifier for the
--   batch permissions request entry.
newBatchPermissionsRequestEntry :: Text -> BatchPermissionsRequestEntry

-- | Indicates if the option to pass permissions is granted.
batchPermissionsRequestEntry_permissionsWithGrantOption :: Lens' BatchPermissionsRequestEntry (Maybe [Permission])

-- | The principal to be granted a permission.
batchPermissionsRequestEntry_principal :: Lens' BatchPermissionsRequestEntry (Maybe DataLakePrincipal)

-- | The resource to which the principal is to be granted a permission.
batchPermissionsRequestEntry_resource :: Lens' BatchPermissionsRequestEntry (Maybe Resource)

-- | The permissions to be granted.
batchPermissionsRequestEntry_permissions :: Lens' BatchPermissionsRequestEntry (Maybe [Permission])

-- | A unique identifier for the batch permissions request entry.
batchPermissionsRequestEntry_id :: Lens' BatchPermissionsRequestEntry Text
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.BatchPermissionsRequestEntry.BatchPermissionsRequestEntry
instance GHC.Show.Show Network.AWS.LakeFormation.Types.BatchPermissionsRequestEntry.BatchPermissionsRequestEntry
instance GHC.Read.Read Network.AWS.LakeFormation.Types.BatchPermissionsRequestEntry.BatchPermissionsRequestEntry
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.BatchPermissionsRequestEntry.BatchPermissionsRequestEntry
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.BatchPermissionsRequestEntry.BatchPermissionsRequestEntry
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.BatchPermissionsRequestEntry.BatchPermissionsRequestEntry
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.BatchPermissionsRequestEntry.BatchPermissionsRequestEntry
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.Types.BatchPermissionsRequestEntry.BatchPermissionsRequestEntry


module Network.AWS.LakeFormation.Types.BatchPermissionsFailureEntry

-- | A list of failures when performing a batch grant or batch revoke
--   operation.
--   
--   <i>See:</i> <a>newBatchPermissionsFailureEntry</a> smart constructor.
data BatchPermissionsFailureEntry
BatchPermissionsFailureEntry' :: Maybe ErrorDetail -> Maybe BatchPermissionsRequestEntry -> BatchPermissionsFailureEntry

-- | An error message that applies to the failure of the entry.
[$sel:error:BatchPermissionsFailureEntry'] :: BatchPermissionsFailureEntry -> Maybe ErrorDetail

-- | An identifier for an entry of the batch request.
[$sel:requestEntry:BatchPermissionsFailureEntry'] :: BatchPermissionsFailureEntry -> Maybe BatchPermissionsRequestEntry

-- | Create a value of <a>BatchPermissionsFailureEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:error:BatchPermissionsFailureEntry'</a>,
--   <a>batchPermissionsFailureEntry_error</a> - An error message that
--   applies to the failure of the entry.
--   
--   <a>$sel:requestEntry:BatchPermissionsFailureEntry'</a>,
--   <a>batchPermissionsFailureEntry_requestEntry</a> - An identifier for
--   an entry of the batch request.
newBatchPermissionsFailureEntry :: BatchPermissionsFailureEntry

-- | An error message that applies to the failure of the entry.
batchPermissionsFailureEntry_error :: Lens' BatchPermissionsFailureEntry (Maybe ErrorDetail)

-- | An identifier for an entry of the batch request.
batchPermissionsFailureEntry_requestEntry :: Lens' BatchPermissionsFailureEntry (Maybe BatchPermissionsRequestEntry)
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.BatchPermissionsFailureEntry.BatchPermissionsFailureEntry
instance GHC.Show.Show Network.AWS.LakeFormation.Types.BatchPermissionsFailureEntry.BatchPermissionsFailureEntry
instance GHC.Read.Read Network.AWS.LakeFormation.Types.BatchPermissionsFailureEntry.BatchPermissionsFailureEntry
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.BatchPermissionsFailureEntry.BatchPermissionsFailureEntry
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.BatchPermissionsFailureEntry.BatchPermissionsFailureEntry
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.BatchPermissionsFailureEntry.BatchPermissionsFailureEntry
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.BatchPermissionsFailureEntry.BatchPermissionsFailureEntry


module Network.AWS.LakeFormation.Types.TaggedDatabase

-- | A structure describing a database resource with tags.
--   
--   <i>See:</i> <a>newTaggedDatabase</a> smart constructor.
data TaggedDatabase
TaggedDatabase' :: Maybe DatabaseResource -> Maybe (NonEmpty LFTagPair) -> TaggedDatabase

-- | A database that has tags attached to it.
[$sel:database:TaggedDatabase'] :: TaggedDatabase -> Maybe DatabaseResource

-- | A list of tags attached to the database.
[$sel:lFTags:TaggedDatabase'] :: TaggedDatabase -> Maybe (NonEmpty LFTagPair)

-- | Create a value of <a>TaggedDatabase</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:database:TaggedDatabase'</a>, <a>taggedDatabase_database</a> -
--   A database that has tags attached to it.
--   
--   <a>$sel:lFTags:TaggedDatabase'</a>, <a>taggedDatabase_lFTags</a> - A
--   list of tags attached to the database.
newTaggedDatabase :: TaggedDatabase

-- | A database that has tags attached to it.
taggedDatabase_database :: Lens' TaggedDatabase (Maybe DatabaseResource)

-- | A list of tags attached to the database.
taggedDatabase_lFTags :: Lens' TaggedDatabase (Maybe (NonEmpty LFTagPair))
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.TaggedDatabase.TaggedDatabase
instance GHC.Show.Show Network.AWS.LakeFormation.Types.TaggedDatabase.TaggedDatabase
instance GHC.Read.Read Network.AWS.LakeFormation.Types.TaggedDatabase.TaggedDatabase
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.TaggedDatabase.TaggedDatabase
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.TaggedDatabase.TaggedDatabase
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.TaggedDatabase.TaggedDatabase
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.TaggedDatabase.TaggedDatabase


module Network.AWS.LakeFormation.Types.TaggedTable

-- | A structure describing a table resource with tags.
--   
--   <i>See:</i> <a>newTaggedTable</a> smart constructor.
data TaggedTable
TaggedTable' :: Maybe (NonEmpty LFTagPair) -> Maybe (NonEmpty LFTagPair) -> Maybe [ColumnLFTag] -> Maybe TableResource -> TaggedTable

-- | A list of tags attached to the table.
[$sel:lFTagsOnTable:TaggedTable'] :: TaggedTable -> Maybe (NonEmpty LFTagPair)

-- | A list of tags attached to the database where the table resides.
[$sel:lFTagOnDatabase:TaggedTable'] :: TaggedTable -> Maybe (NonEmpty LFTagPair)

-- | A list of tags attached to columns in the table.
[$sel:lFTagsOnColumns:TaggedTable'] :: TaggedTable -> Maybe [ColumnLFTag]

-- | A table that has tags attached to it.
[$sel:table:TaggedTable'] :: TaggedTable -> Maybe TableResource

-- | Create a value of <a>TaggedTable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lFTagsOnTable:TaggedTable'</a>,
--   <a>taggedTable_lFTagsOnTable</a> - A list of tags attached to the
--   table.
--   
--   <a>$sel:lFTagOnDatabase:TaggedTable'</a>,
--   <a>taggedTable_lFTagOnDatabase</a> - A list of tags attached to the
--   database where the table resides.
--   
--   <a>$sel:lFTagsOnColumns:TaggedTable'</a>,
--   <a>taggedTable_lFTagsOnColumns</a> - A list of tags attached to
--   columns in the table.
--   
--   <a>$sel:table:TaggedTable'</a>, <a>taggedTable_table</a> - A table
--   that has tags attached to it.
newTaggedTable :: TaggedTable

-- | A list of tags attached to the table.
taggedTable_lFTagsOnTable :: Lens' TaggedTable (Maybe (NonEmpty LFTagPair))

-- | A list of tags attached to the database where the table resides.
taggedTable_lFTagOnDatabase :: Lens' TaggedTable (Maybe (NonEmpty LFTagPair))

-- | A list of tags attached to columns in the table.
taggedTable_lFTagsOnColumns :: Lens' TaggedTable (Maybe [ColumnLFTag])

-- | A table that has tags attached to it.
taggedTable_table :: Lens' TaggedTable (Maybe TableResource)
instance GHC.Generics.Generic Network.AWS.LakeFormation.Types.TaggedTable.TaggedTable
instance GHC.Show.Show Network.AWS.LakeFormation.Types.TaggedTable.TaggedTable
instance GHC.Read.Read Network.AWS.LakeFormation.Types.TaggedTable.TaggedTable
instance GHC.Classes.Eq Network.AWS.LakeFormation.Types.TaggedTable.TaggedTable
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LakeFormation.Types.TaggedTable.TaggedTable
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.Types.TaggedTable.TaggedTable
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.Types.TaggedTable.TaggedTable


module Network.AWS.LakeFormation.Types

-- | API version <tt>2017-03-31</tt> of the Amazon Lake Formation SDK
--   configuration.
defaultService :: Service

-- | Access to a resource was denied.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation timed out.
_OperationTimeoutException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A specified entity does not exist
_EntityNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Two processes are trying to modify a resource simultaneously.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal service error occurred.
_InternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The input provided was not valid.
_InvalidInputException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource numerical limit was exceeded.
_ResourceNumberLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An encryption operation failed.
_GlueEncryptionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource to be created or added already exists.
_AlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ComparisonOperator
ComparisonOperator' :: Text -> ComparisonOperator
[fromComparisonOperator] :: ComparisonOperator -> Text
pattern ComparisonOperator_BEGINS_WITH :: ComparisonOperator
pattern ComparisonOperator_BETWEEN :: ComparisonOperator
pattern ComparisonOperator_CONTAINS :: ComparisonOperator
pattern ComparisonOperator_EQ :: ComparisonOperator
pattern ComparisonOperator_GE :: ComparisonOperator
pattern ComparisonOperator_GT :: ComparisonOperator
pattern ComparisonOperator_IN :: ComparisonOperator
pattern ComparisonOperator_LE :: ComparisonOperator
pattern ComparisonOperator_LT :: ComparisonOperator
pattern ComparisonOperator_NE :: ComparisonOperator
pattern ComparisonOperator_NOT_CONTAINS :: ComparisonOperator
newtype DataLakeResourceType
DataLakeResourceType' :: Text -> DataLakeResourceType
[fromDataLakeResourceType] :: DataLakeResourceType -> Text
pattern DataLakeResourceType_CATALOG :: DataLakeResourceType
pattern DataLakeResourceType_DATABASE :: DataLakeResourceType
pattern DataLakeResourceType_DATA_LOCATION :: DataLakeResourceType
pattern DataLakeResourceType_LF_TAG :: DataLakeResourceType
pattern DataLakeResourceType_LF_TAG_POLICY :: DataLakeResourceType
pattern DataLakeResourceType_LF_TAG_POLICY_DATABASE :: DataLakeResourceType
pattern DataLakeResourceType_LF_TAG_POLICY_TABLE :: DataLakeResourceType
pattern DataLakeResourceType_TABLE :: DataLakeResourceType
newtype FieldNameString
FieldNameString' :: Text -> FieldNameString
[fromFieldNameString] :: FieldNameString -> Text
pattern FieldNameString_LAST_MODIFIED :: FieldNameString
pattern FieldNameString_RESOURCE_ARN :: FieldNameString
pattern FieldNameString_ROLE_ARN :: FieldNameString
newtype Permission
Permission' :: Text -> Permission
[fromPermission] :: Permission -> Text
pattern Permission_ALL :: Permission
pattern Permission_ALTER :: Permission
pattern Permission_ALTER_TAG :: Permission
pattern Permission_ASSOCIATE_TAG :: Permission
pattern Permission_CREATE_DATABASE :: Permission
pattern Permission_CREATE_TABLE :: Permission
pattern Permission_CREATE_TAG :: Permission
pattern Permission_DATA_LOCATION_ACCESS :: Permission
pattern Permission_DELETE :: Permission
pattern Permission_DELETE_TAG :: Permission
pattern Permission_DESCRIBE :: Permission
pattern Permission_DESCRIBE_TAG :: Permission
pattern Permission_DROP :: Permission
pattern Permission_INSERT :: Permission
pattern Permission_SELECT :: Permission
newtype ResourceShareType
ResourceShareType' :: Text -> ResourceShareType
[fromResourceShareType] :: ResourceShareType -> Text
pattern ResourceShareType_ALL :: ResourceShareType
pattern ResourceShareType_FOREIGN :: ResourceShareType
newtype ResourceType
ResourceType' :: Text -> ResourceType
[fromResourceType] :: ResourceType -> Text
pattern ResourceType_DATABASE :: ResourceType
pattern ResourceType_TABLE :: ResourceType

-- | A list of failures when performing a batch grant or batch revoke
--   operation.
--   
--   <i>See:</i> <a>newBatchPermissionsFailureEntry</a> smart constructor.
data BatchPermissionsFailureEntry
BatchPermissionsFailureEntry' :: Maybe ErrorDetail -> Maybe BatchPermissionsRequestEntry -> BatchPermissionsFailureEntry

-- | An error message that applies to the failure of the entry.
[$sel:error:BatchPermissionsFailureEntry'] :: BatchPermissionsFailureEntry -> Maybe ErrorDetail

-- | An identifier for an entry of the batch request.
[$sel:requestEntry:BatchPermissionsFailureEntry'] :: BatchPermissionsFailureEntry -> Maybe BatchPermissionsRequestEntry

-- | Create a value of <a>BatchPermissionsFailureEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:error:BatchPermissionsFailureEntry'</a>,
--   <a>batchPermissionsFailureEntry_error</a> - An error message that
--   applies to the failure of the entry.
--   
--   <a>$sel:requestEntry:BatchPermissionsFailureEntry'</a>,
--   <a>batchPermissionsFailureEntry_requestEntry</a> - An identifier for
--   an entry of the batch request.
newBatchPermissionsFailureEntry :: BatchPermissionsFailureEntry

-- | An error message that applies to the failure of the entry.
batchPermissionsFailureEntry_error :: Lens' BatchPermissionsFailureEntry (Maybe ErrorDetail)

-- | An identifier for an entry of the batch request.
batchPermissionsFailureEntry_requestEntry :: Lens' BatchPermissionsFailureEntry (Maybe BatchPermissionsRequestEntry)

-- | A permission to a resource granted by batch operation to the
--   principal.
--   
--   <i>See:</i> <a>newBatchPermissionsRequestEntry</a> smart constructor.
data BatchPermissionsRequestEntry
BatchPermissionsRequestEntry' :: Maybe [Permission] -> Maybe DataLakePrincipal -> Maybe Resource -> Maybe [Permission] -> Text -> BatchPermissionsRequestEntry

-- | Indicates if the option to pass permissions is granted.
[$sel:permissionsWithGrantOption:BatchPermissionsRequestEntry'] :: BatchPermissionsRequestEntry -> Maybe [Permission]

-- | The principal to be granted a permission.
[$sel:principal:BatchPermissionsRequestEntry'] :: BatchPermissionsRequestEntry -> Maybe DataLakePrincipal

-- | The resource to which the principal is to be granted a permission.
[$sel:resource:BatchPermissionsRequestEntry'] :: BatchPermissionsRequestEntry -> Maybe Resource

-- | The permissions to be granted.
[$sel:permissions:BatchPermissionsRequestEntry'] :: BatchPermissionsRequestEntry -> Maybe [Permission]

-- | A unique identifier for the batch permissions request entry.
[$sel:id:BatchPermissionsRequestEntry'] :: BatchPermissionsRequestEntry -> Text

-- | Create a value of <a>BatchPermissionsRequestEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:permissionsWithGrantOption:BatchPermissionsRequestEntry'</a>,
--   <a>batchPermissionsRequestEntry_permissionsWithGrantOption</a> -
--   Indicates if the option to pass permissions is granted.
--   
--   <a>$sel:principal:BatchPermissionsRequestEntry'</a>,
--   <a>batchPermissionsRequestEntry_principal</a> - The principal to be
--   granted a permission.
--   
--   <a>$sel:resource:BatchPermissionsRequestEntry'</a>,
--   <a>batchPermissionsRequestEntry_resource</a> - The resource to which
--   the principal is to be granted a permission.
--   
--   <a>$sel:permissions:BatchPermissionsRequestEntry'</a>,
--   <a>batchPermissionsRequestEntry_permissions</a> - The permissions to
--   be granted.
--   
--   <a>$sel:id:BatchPermissionsRequestEntry'</a>,
--   <a>batchPermissionsRequestEntry_id</a> - A unique identifier for the
--   batch permissions request entry.
newBatchPermissionsRequestEntry :: Text -> BatchPermissionsRequestEntry

-- | Indicates if the option to pass permissions is granted.
batchPermissionsRequestEntry_permissionsWithGrantOption :: Lens' BatchPermissionsRequestEntry (Maybe [Permission])

-- | The principal to be granted a permission.
batchPermissionsRequestEntry_principal :: Lens' BatchPermissionsRequestEntry (Maybe DataLakePrincipal)

-- | The resource to which the principal is to be granted a permission.
batchPermissionsRequestEntry_resource :: Lens' BatchPermissionsRequestEntry (Maybe Resource)

-- | The permissions to be granted.
batchPermissionsRequestEntry_permissions :: Lens' BatchPermissionsRequestEntry (Maybe [Permission])

-- | A unique identifier for the batch permissions request entry.
batchPermissionsRequestEntry_id :: Lens' BatchPermissionsRequestEntry Text

-- | A structure for the catalog object.
--   
--   <i>See:</i> <a>newCatalogResource</a> smart constructor.
data CatalogResource
CatalogResource' :: CatalogResource

-- | Create a value of <a>CatalogResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCatalogResource :: CatalogResource

-- | A structure containing the name of a column resource and the tags
--   attached to it.
--   
--   <i>See:</i> <a>newColumnLFTag</a> smart constructor.
data ColumnLFTag
ColumnLFTag' :: Maybe Text -> Maybe (NonEmpty LFTagPair) -> ColumnLFTag

-- | The name of a column resource.
[$sel:name:ColumnLFTag'] :: ColumnLFTag -> Maybe Text

-- | The tags attached to a column resource.
[$sel:lFTags:ColumnLFTag'] :: ColumnLFTag -> Maybe (NonEmpty LFTagPair)

-- | Create a value of <a>ColumnLFTag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ColumnLFTag'</a>, <a>columnLFTag_name</a> - The name of a
--   column resource.
--   
--   <a>$sel:lFTags:ColumnLFTag'</a>, <a>columnLFTag_lFTags</a> - The tags
--   attached to a column resource.
newColumnLFTag :: ColumnLFTag

-- | The name of a column resource.
columnLFTag_name :: Lens' ColumnLFTag (Maybe Text)

-- | The tags attached to a column resource.
columnLFTag_lFTags :: Lens' ColumnLFTag (Maybe (NonEmpty LFTagPair))

-- | A wildcard object, consisting of an optional list of excluded column
--   names or indexes.
--   
--   <i>See:</i> <a>newColumnWildcard</a> smart constructor.
data ColumnWildcard
ColumnWildcard' :: Maybe [Text] -> ColumnWildcard

-- | Excludes column names. Any column with this name will be excluded.
[$sel:excludedColumnNames:ColumnWildcard'] :: ColumnWildcard -> Maybe [Text]

-- | Create a value of <a>ColumnWildcard</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:excludedColumnNames:ColumnWildcard'</a>,
--   <a>columnWildcard_excludedColumnNames</a> - Excludes column names. Any
--   column with this name will be excluded.
newColumnWildcard :: ColumnWildcard

-- | Excludes column names. Any column with this name will be excluded.
columnWildcard_excludedColumnNames :: Lens' ColumnWildcard (Maybe [Text])

-- | The AWS Lake Formation principal. Supported principals are IAM users
--   or IAM roles.
--   
--   <i>See:</i> <a>newDataLakePrincipal</a> smart constructor.
data DataLakePrincipal
DataLakePrincipal' :: Maybe Text -> DataLakePrincipal

-- | An identifier for the AWS Lake Formation principal.
[$sel:dataLakePrincipalIdentifier:DataLakePrincipal'] :: DataLakePrincipal -> Maybe Text

-- | Create a value of <a>DataLakePrincipal</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLakePrincipalIdentifier:DataLakePrincipal'</a>,
--   <a>dataLakePrincipal_dataLakePrincipalIdentifier</a> - An identifier
--   for the AWS Lake Formation principal.
newDataLakePrincipal :: DataLakePrincipal

-- | An identifier for the AWS Lake Formation principal.
dataLakePrincipal_dataLakePrincipalIdentifier :: Lens' DataLakePrincipal (Maybe Text)

-- | A structure representing a list of AWS Lake Formation principals
--   designated as data lake administrators and lists of principal
--   permission entries for default create database and default create
--   table permissions.
--   
--   <i>See:</i> <a>newDataLakeSettings</a> smart constructor.
data DataLakeSettings
DataLakeSettings' :: Maybe [DataLakePrincipal] -> Maybe [Text] -> Maybe [PrincipalPermissions] -> Maybe [PrincipalPermissions] -> DataLakeSettings

-- | A list of AWS Lake Formation principals. Supported principals are IAM
--   users or IAM roles.
[$sel:dataLakeAdmins:DataLakeSettings'] :: DataLakeSettings -> Maybe [DataLakePrincipal]

-- | A list of the resource-owning account IDs that the caller's account
--   can use to share their user access details (user ARNs). The user ARNs
--   can be logged in the resource owner's AWS CloudTrail log.
--   
--   You may want to specify this property when you are in a high-trust
--   boundary, such as the same team or company.
[$sel:trustedResourceOwners:DataLakeSettings'] :: DataLakeSettings -> Maybe [Text]

-- | A structure representing a list of up to three principal permissions
--   entries for default create database permissions.
[$sel:createDatabaseDefaultPermissions:DataLakeSettings'] :: DataLakeSettings -> Maybe [PrincipalPermissions]

-- | A structure representing a list of up to three principal permissions
--   entries for default create table permissions.
[$sel:createTableDefaultPermissions:DataLakeSettings'] :: DataLakeSettings -> Maybe [PrincipalPermissions]

-- | Create a value of <a>DataLakeSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLakeAdmins:DataLakeSettings'</a>,
--   <a>dataLakeSettings_dataLakeAdmins</a> - A list of AWS Lake Formation
--   principals. Supported principals are IAM users or IAM roles.
--   
--   <a>$sel:trustedResourceOwners:DataLakeSettings'</a>,
--   <a>dataLakeSettings_trustedResourceOwners</a> - A list of the
--   resource-owning account IDs that the caller's account can use to share
--   their user access details (user ARNs). The user ARNs can be logged in
--   the resource owner's AWS CloudTrail log.
--   
--   You may want to specify this property when you are in a high-trust
--   boundary, such as the same team or company.
--   
--   <a>$sel:createDatabaseDefaultPermissions:DataLakeSettings'</a>,
--   <a>dataLakeSettings_createDatabaseDefaultPermissions</a> - A structure
--   representing a list of up to three principal permissions entries for
--   default create database permissions.
--   
--   <a>$sel:createTableDefaultPermissions:DataLakeSettings'</a>,
--   <a>dataLakeSettings_createTableDefaultPermissions</a> - A structure
--   representing a list of up to three principal permissions entries for
--   default create table permissions.
newDataLakeSettings :: DataLakeSettings

-- | A list of AWS Lake Formation principals. Supported principals are IAM
--   users or IAM roles.
dataLakeSettings_dataLakeAdmins :: Lens' DataLakeSettings (Maybe [DataLakePrincipal])

-- | A list of the resource-owning account IDs that the caller's account
--   can use to share their user access details (user ARNs). The user ARNs
--   can be logged in the resource owner's AWS CloudTrail log.
--   
--   You may want to specify this property when you are in a high-trust
--   boundary, such as the same team or company.
dataLakeSettings_trustedResourceOwners :: Lens' DataLakeSettings (Maybe [Text])

-- | A structure representing a list of up to three principal permissions
--   entries for default create database permissions.
dataLakeSettings_createDatabaseDefaultPermissions :: Lens' DataLakeSettings (Maybe [PrincipalPermissions])

-- | A structure representing a list of up to three principal permissions
--   entries for default create table permissions.
dataLakeSettings_createTableDefaultPermissions :: Lens' DataLakeSettings (Maybe [PrincipalPermissions])

-- | A structure for a data location object where permissions are granted
--   or revoked.
--   
--   <i>See:</i> <a>newDataLocationResource</a> smart constructor.
data DataLocationResource
DataLocationResource' :: Maybe Text -> Text -> DataLocationResource

-- | The identifier for the Data Catalog where the location is registered
--   with AWS Lake Formation. By default, it is the account ID of the
--   caller.
[$sel:catalogId:DataLocationResource'] :: DataLocationResource -> Maybe Text

-- | The Amazon Resource Name (ARN) that uniquely identifies the data
--   location resource.
[$sel:resourceArn:DataLocationResource'] :: DataLocationResource -> Text

-- | Create a value of <a>DataLocationResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DataLocationResource'</a>,
--   <a>dataLocationResource_catalogId</a> - The identifier for the Data
--   Catalog where the location is registered with AWS Lake Formation. By
--   default, it is the account ID of the caller.
--   
--   <a>$sel:resourceArn:DataLocationResource'</a>,
--   <a>dataLocationResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) that uniquely identifies the data location resource.
newDataLocationResource :: Text -> DataLocationResource

-- | The identifier for the Data Catalog where the location is registered
--   with AWS Lake Formation. By default, it is the account ID of the
--   caller.
dataLocationResource_catalogId :: Lens' DataLocationResource (Maybe Text)

-- | The Amazon Resource Name (ARN) that uniquely identifies the data
--   location resource.
dataLocationResource_resourceArn :: Lens' DataLocationResource Text

-- | A structure for the database object.
--   
--   <i>See:</i> <a>newDatabaseResource</a> smart constructor.
data DatabaseResource
DatabaseResource' :: Maybe Text -> Text -> DatabaseResource

-- | The identifier for the Data Catalog. By default, it is the account ID
--   of the caller.
[$sel:catalogId:DatabaseResource'] :: DatabaseResource -> Maybe Text

-- | The name of the database resource. Unique to the Data Catalog.
[$sel:name:DatabaseResource'] :: DatabaseResource -> Text

-- | Create a value of <a>DatabaseResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DatabaseResource'</a>,
--   <a>databaseResource_catalogId</a> - The identifier for the Data
--   Catalog. By default, it is the account ID of the caller.
--   
--   <a>$sel:name:DatabaseResource'</a>, <a>databaseResource_name</a> - The
--   name of the database resource. Unique to the Data Catalog.
newDatabaseResource :: Text -> DatabaseResource

-- | The identifier for the Data Catalog. By default, it is the account ID
--   of the caller.
databaseResource_catalogId :: Lens' DatabaseResource (Maybe Text)

-- | The name of the database resource. Unique to the Data Catalog.
databaseResource_name :: Lens' DatabaseResource Text

-- | A structure containing the additional details to be returned in the
--   <tt>AdditionalDetails</tt> attribute of
--   <tt>PrincipalResourcePermissions</tt>.
--   
--   If a catalog resource is shared through AWS Resource Access Manager
--   (AWS RAM), then there will exist a corresponding RAM resource share
--   ARN.
--   
--   <i>See:</i> <a>newDetailsMap</a> smart constructor.
data DetailsMap
DetailsMap' :: Maybe [Text] -> DetailsMap

-- | A resource share ARN for a catalog resource shared through AWS
--   Resource Access Manager (AWS RAM).
[$sel:resourceShare:DetailsMap'] :: DetailsMap -> Maybe [Text]

-- | Create a value of <a>DetailsMap</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceShare:DetailsMap'</a>, <a>detailsMap_resourceShare</a>
--   - A resource share ARN for a catalog resource shared through AWS
--   Resource Access Manager (AWS RAM).
newDetailsMap :: DetailsMap

-- | A resource share ARN for a catalog resource shared through AWS
--   Resource Access Manager (AWS RAM).
detailsMap_resourceShare :: Lens' DetailsMap (Maybe [Text])

-- | Contains details about an error.
--   
--   <i>See:</i> <a>newErrorDetail</a> smart constructor.
data ErrorDetail
ErrorDetail' :: Maybe Text -> Maybe Text -> ErrorDetail

-- | The code associated with this error.
[$sel:errorCode:ErrorDetail'] :: ErrorDetail -> Maybe Text

-- | A message describing the error.
[$sel:errorMessage:ErrorDetail'] :: ErrorDetail -> Maybe Text

-- | Create a value of <a>ErrorDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:ErrorDetail'</a>, <a>errorDetail_errorCode</a> - The
--   code associated with this error.
--   
--   <a>$sel:errorMessage:ErrorDetail'</a>, <a>errorDetail_errorMessage</a>
--   - A message describing the error.
newErrorDetail :: ErrorDetail

-- | The code associated with this error.
errorDetail_errorCode :: Lens' ErrorDetail (Maybe Text)

-- | A message describing the error.
errorDetail_errorMessage :: Lens' ErrorDetail (Maybe Text)

-- | This structure describes the filtering of columns in a table based on
--   a filter condition.
--   
--   <i>See:</i> <a>newFilterCondition</a> smart constructor.
data FilterCondition
FilterCondition' :: Maybe FieldNameString -> Maybe ComparisonOperator -> Maybe [Text] -> FilterCondition

-- | The field to filter in the filter condition.
[$sel:field:FilterCondition'] :: FilterCondition -> Maybe FieldNameString

-- | The comparison operator used in the filter condition.
[$sel:comparisonOperator:FilterCondition'] :: FilterCondition -> Maybe ComparisonOperator

-- | A string with values used in evaluating the filter condition.
[$sel:stringValueList:FilterCondition'] :: FilterCondition -> Maybe [Text]

-- | Create a value of <a>FilterCondition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:field:FilterCondition'</a>, <a>filterCondition_field</a> - The
--   field to filter in the filter condition.
--   
--   <a>$sel:comparisonOperator:FilterCondition'</a>,
--   <a>filterCondition_comparisonOperator</a> - The comparison operator
--   used in the filter condition.
--   
--   <a>$sel:stringValueList:FilterCondition'</a>,
--   <a>filterCondition_stringValueList</a> - A string with values used in
--   evaluating the filter condition.
newFilterCondition :: FilterCondition

-- | The field to filter in the filter condition.
filterCondition_field :: Lens' FilterCondition (Maybe FieldNameString)

-- | The comparison operator used in the filter condition.
filterCondition_comparisonOperator :: Lens' FilterCondition (Maybe ComparisonOperator)

-- | A string with values used in evaluating the filter condition.
filterCondition_stringValueList :: Lens' FilterCondition (Maybe [Text])

-- | A structure that allows an admin to grant user permissions on certain
--   conditions. For example, granting a role access to all columns not
--   tagged 'PII' of tables tagged 'Prod'.
--   
--   <i>See:</i> <a>newLFTag</a> smart constructor.
data LFTag
LFTag' :: Text -> NonEmpty Text -> LFTag

-- | The key-name for the tag.
[$sel:tagKey:LFTag'] :: LFTag -> Text

-- | A list of possible values an attribute can take.
[$sel:tagValues:LFTag'] :: LFTag -> NonEmpty Text

-- | Create a value of <a>LFTag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagKey:LFTag'</a>, <a>lFTag_tagKey</a> - The key-name for the
--   tag.
--   
--   <a>$sel:tagValues:LFTag'</a>, <a>lFTag_tagValues</a> - A list of
--   possible values an attribute can take.
newLFTag :: Text -> NonEmpty Text -> LFTag

-- | The key-name for the tag.
lFTag_tagKey :: Lens' LFTag Text

-- | A list of possible values an attribute can take.
lFTag_tagValues :: Lens' LFTag (NonEmpty Text)

-- | A structure containing an error related to a <tt>TagResource</tt> or
--   <tt>UnTagResource</tt> operation.
--   
--   <i>See:</i> <a>newLFTagError</a> smart constructor.
data LFTagError
LFTagError' :: Maybe LFTagPair -> Maybe ErrorDetail -> LFTagError

-- | The key-name of the tag.
[$sel:lFTag:LFTagError'] :: LFTagError -> Maybe LFTagPair

-- | An error that occurred with the attachment or detachment of the tag.
[$sel:error:LFTagError'] :: LFTagError -> Maybe ErrorDetail

-- | Create a value of <a>LFTagError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lFTag:LFTagError'</a>, <a>lFTagError_lFTag</a> - The key-name
--   of the tag.
--   
--   <a>$sel:error:LFTagError'</a>, <a>lFTagError_error</a> - An error that
--   occurred with the attachment or detachment of the tag.
newLFTagError :: LFTagError

-- | The key-name of the tag.
lFTagError_lFTag :: Lens' LFTagError (Maybe LFTagPair)

-- | An error that occurred with the attachment or detachment of the tag.
lFTagError_error :: Lens' LFTagError (Maybe ErrorDetail)

-- | A structure containing a tag key and values for a resource.
--   
--   <i>See:</i> <a>newLFTagKeyResource</a> smart constructor.
data LFTagKeyResource
LFTagKeyResource' :: Maybe Text -> Text -> NonEmpty Text -> LFTagKeyResource

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:LFTagKeyResource'] :: LFTagKeyResource -> Maybe Text

-- | The key-name for the tag.
[$sel:tagKey:LFTagKeyResource'] :: LFTagKeyResource -> Text

-- | A list of possible values an attribute can take.
[$sel:tagValues:LFTagKeyResource'] :: LFTagKeyResource -> NonEmpty Text

-- | Create a value of <a>LFTagKeyResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:LFTagKeyResource'</a>,
--   <a>lFTagKeyResource_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:tagKey:LFTagKeyResource'</a>, <a>lFTagKeyResource_tagKey</a> -
--   The key-name for the tag.
--   
--   <a>$sel:tagValues:LFTagKeyResource'</a>,
--   <a>lFTagKeyResource_tagValues</a> - A list of possible values an
--   attribute can take.
newLFTagKeyResource :: Text -> NonEmpty Text -> LFTagKeyResource

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
lFTagKeyResource_catalogId :: Lens' LFTagKeyResource (Maybe Text)

-- | The key-name for the tag.
lFTagKeyResource_tagKey :: Lens' LFTagKeyResource Text

-- | A list of possible values an attribute can take.
lFTagKeyResource_tagValues :: Lens' LFTagKeyResource (NonEmpty Text)

-- | A structure containing a tag key-value pair.
--   
--   <i>See:</i> <a>newLFTagPair</a> smart constructor.
data LFTagPair
LFTagPair' :: Maybe Text -> Text -> NonEmpty Text -> LFTagPair

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:LFTagPair'] :: LFTagPair -> Maybe Text

-- | The key-name for the tag.
[$sel:tagKey:LFTagPair'] :: LFTagPair -> Text

-- | A list of possible values an attribute can take.
[$sel:tagValues:LFTagPair'] :: LFTagPair -> NonEmpty Text

-- | Create a value of <a>LFTagPair</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:LFTagPair'</a>, <a>lFTagPair_catalogId</a> - The
--   identifier for the Data Catalog. By default, the account ID. The Data
--   Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
--   
--   <a>$sel:tagKey:LFTagPair'</a>, <a>lFTagPair_tagKey</a> - The key-name
--   for the tag.
--   
--   <a>$sel:tagValues:LFTagPair'</a>, <a>lFTagPair_tagValues</a> - A list
--   of possible values an attribute can take.
newLFTagPair :: Text -> NonEmpty Text -> LFTagPair

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
lFTagPair_catalogId :: Lens' LFTagPair (Maybe Text)

-- | The key-name for the tag.
lFTagPair_tagKey :: Lens' LFTagPair Text

-- | A list of possible values an attribute can take.
lFTagPair_tagValues :: Lens' LFTagPair (NonEmpty Text)

-- | A structure containing a list of tag conditions that apply to a
--   resource's tag policy.
--   
--   <i>See:</i> <a>newLFTagPolicyResource</a> smart constructor.
data LFTagPolicyResource
LFTagPolicyResource' :: Maybe Text -> ResourceType -> NonEmpty LFTag -> LFTagPolicyResource

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:LFTagPolicyResource'] :: LFTagPolicyResource -> Maybe Text

-- | The resource type for which the tag policy applies.
[$sel:resourceType:LFTagPolicyResource'] :: LFTagPolicyResource -> ResourceType

-- | A list of tag conditions that apply to the resource's tag policy.
[$sel:expression:LFTagPolicyResource'] :: LFTagPolicyResource -> NonEmpty LFTag

-- | Create a value of <a>LFTagPolicyResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:LFTagPolicyResource'</a>,
--   <a>lFTagPolicyResource_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:resourceType:LFTagPolicyResource'</a>,
--   <a>lFTagPolicyResource_resourceType</a> - The resource type for which
--   the tag policy applies.
--   
--   <a>$sel:expression:LFTagPolicyResource'</a>,
--   <a>lFTagPolicyResource_expression</a> - A list of tag conditions that
--   apply to the resource's tag policy.
newLFTagPolicyResource :: ResourceType -> NonEmpty LFTag -> LFTagPolicyResource

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
lFTagPolicyResource_catalogId :: Lens' LFTagPolicyResource (Maybe Text)

-- | The resource type for which the tag policy applies.
lFTagPolicyResource_resourceType :: Lens' LFTagPolicyResource ResourceType

-- | A list of tag conditions that apply to the resource's tag policy.
lFTagPolicyResource_expression :: Lens' LFTagPolicyResource (NonEmpty LFTag)

-- | Permissions granted to a principal.
--   
--   <i>See:</i> <a>newPrincipalPermissions</a> smart constructor.
data PrincipalPermissions
PrincipalPermissions' :: Maybe DataLakePrincipal -> Maybe [Permission] -> PrincipalPermissions

-- | The principal who is granted permissions.
[$sel:principal:PrincipalPermissions'] :: PrincipalPermissions -> Maybe DataLakePrincipal

-- | The permissions that are granted to the principal.
[$sel:permissions:PrincipalPermissions'] :: PrincipalPermissions -> Maybe [Permission]

-- | Create a value of <a>PrincipalPermissions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:principal:PrincipalPermissions'</a>,
--   <a>principalPermissions_principal</a> - The principal who is granted
--   permissions.
--   
--   <a>$sel:permissions:PrincipalPermissions'</a>,
--   <a>principalPermissions_permissions</a> - The permissions that are
--   granted to the principal.
newPrincipalPermissions :: PrincipalPermissions

-- | The principal who is granted permissions.
principalPermissions_principal :: Lens' PrincipalPermissions (Maybe DataLakePrincipal)

-- | The permissions that are granted to the principal.
principalPermissions_permissions :: Lens' PrincipalPermissions (Maybe [Permission])

-- | The permissions granted or revoked on a resource.
--   
--   <i>See:</i> <a>newPrincipalResourcePermissions</a> smart constructor.
data PrincipalResourcePermissions
PrincipalResourcePermissions' :: Maybe DetailsMap -> Maybe [Permission] -> Maybe DataLakePrincipal -> Maybe Resource -> Maybe [Permission] -> PrincipalResourcePermissions

-- | This attribute can be used to return any additional details of
--   <tt>PrincipalResourcePermissions</tt>. Currently returns only as a RAM
--   resource share ARN.
[$sel:additionalDetails:PrincipalResourcePermissions'] :: PrincipalResourcePermissions -> Maybe DetailsMap

-- | Indicates whether to grant the ability to grant permissions (as a
--   subset of permissions granted).
[$sel:permissionsWithGrantOption:PrincipalResourcePermissions'] :: PrincipalResourcePermissions -> Maybe [Permission]

-- | The Data Lake principal to be granted or revoked permissions.
[$sel:principal:PrincipalResourcePermissions'] :: PrincipalResourcePermissions -> Maybe DataLakePrincipal

-- | The resource where permissions are to be granted or revoked.
[$sel:resource:PrincipalResourcePermissions'] :: PrincipalResourcePermissions -> Maybe Resource

-- | The permissions to be granted or revoked on the resource.
[$sel:permissions:PrincipalResourcePermissions'] :: PrincipalResourcePermissions -> Maybe [Permission]

-- | Create a value of <a>PrincipalResourcePermissions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:additionalDetails:PrincipalResourcePermissions'</a>,
--   <a>principalResourcePermissions_additionalDetails</a> - This attribute
--   can be used to return any additional details of
--   <tt>PrincipalResourcePermissions</tt>. Currently returns only as a RAM
--   resource share ARN.
--   
--   <a>$sel:permissionsWithGrantOption:PrincipalResourcePermissions'</a>,
--   <a>principalResourcePermissions_permissionsWithGrantOption</a> -
--   Indicates whether to grant the ability to grant permissions (as a
--   subset of permissions granted).
--   
--   <a>$sel:principal:PrincipalResourcePermissions'</a>,
--   <a>principalResourcePermissions_principal</a> - The Data Lake
--   principal to be granted or revoked permissions.
--   
--   <a>$sel:resource:PrincipalResourcePermissions'</a>,
--   <a>principalResourcePermissions_resource</a> - The resource where
--   permissions are to be granted or revoked.
--   
--   <a>$sel:permissions:PrincipalResourcePermissions'</a>,
--   <a>principalResourcePermissions_permissions</a> - The permissions to
--   be granted or revoked on the resource.
newPrincipalResourcePermissions :: PrincipalResourcePermissions

-- | This attribute can be used to return any additional details of
--   <tt>PrincipalResourcePermissions</tt>. Currently returns only as a RAM
--   resource share ARN.
principalResourcePermissions_additionalDetails :: Lens' PrincipalResourcePermissions (Maybe DetailsMap)

-- | Indicates whether to grant the ability to grant permissions (as a
--   subset of permissions granted).
principalResourcePermissions_permissionsWithGrantOption :: Lens' PrincipalResourcePermissions (Maybe [Permission])

-- | The Data Lake principal to be granted or revoked permissions.
principalResourcePermissions_principal :: Lens' PrincipalResourcePermissions (Maybe DataLakePrincipal)

-- | The resource where permissions are to be granted or revoked.
principalResourcePermissions_resource :: Lens' PrincipalResourcePermissions (Maybe Resource)

-- | The permissions to be granted or revoked on the resource.
principalResourcePermissions_permissions :: Lens' PrincipalResourcePermissions (Maybe [Permission])

-- | A structure for the resource.
--   
--   <i>See:</i> <a>newResource</a> smart constructor.
data Resource
Resource' :: Maybe DataLocationResource -> Maybe DatabaseResource -> Maybe LFTagKeyResource -> Maybe CatalogResource -> Maybe LFTagPolicyResource -> Maybe TableResource -> Maybe TableWithColumnsResource -> Resource

-- | The location of an Amazon S3 path where permissions are granted or
--   revoked.
[$sel:dataLocation:Resource'] :: Resource -> Maybe DataLocationResource

-- | The database for the resource. Unique to the Data Catalog. A database
--   is a set of associated table definitions organized into a logical
--   group. You can Grant and Revoke database permissions to a principal.
[$sel:database:Resource'] :: Resource -> Maybe DatabaseResource

-- | The tag key and values attached to a resource.
[$sel:lFTag:Resource'] :: Resource -> Maybe LFTagKeyResource

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalog:Resource'] :: Resource -> Maybe CatalogResource

-- | A list of tag conditions that define a resource's tag policy.
[$sel:lFTagPolicy:Resource'] :: Resource -> Maybe LFTagPolicyResource

-- | The table for the resource. A table is a metadata definition that
--   represents your data. You can Grant and Revoke table privileges to a
--   principal.
[$sel:table:Resource'] :: Resource -> Maybe TableResource

-- | The table with columns for the resource. A principal with permissions
--   to this resource can select metadata from the columns of a table in
--   the Data Catalog and the underlying data in Amazon S3.
[$sel:tableWithColumns:Resource'] :: Resource -> Maybe TableWithColumnsResource

-- | Create a value of <a>Resource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLocation:Resource'</a>, <a>resource_dataLocation</a> - The
--   location of an Amazon S3 path where permissions are granted or
--   revoked.
--   
--   <a>$sel:database:Resource'</a>, <a>resource_database</a> - The
--   database for the resource. Unique to the Data Catalog. A database is a
--   set of associated table definitions organized into a logical group.
--   You can Grant and Revoke database permissions to a principal.
--   
--   <a>$sel:lFTag:Resource'</a>, <a>resource_lFTag</a> - The tag key and
--   values attached to a resource.
--   
--   <a>$sel:catalog:Resource'</a>, <a>resource_catalog</a> - The
--   identifier for the Data Catalog. By default, the account ID. The Data
--   Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
--   
--   <a>$sel:lFTagPolicy:Resource'</a>, <a>resource_lFTagPolicy</a> - A
--   list of tag conditions that define a resource's tag policy.
--   
--   <a>$sel:table:Resource'</a>, <a>resource_table</a> - The table for the
--   resource. A table is a metadata definition that represents your data.
--   You can Grant and Revoke table privileges to a principal.
--   
--   <a>$sel:tableWithColumns:Resource'</a>,
--   <a>resource_tableWithColumns</a> - The table with columns for the
--   resource. A principal with permissions to this resource can select
--   metadata from the columns of a table in the Data Catalog and the
--   underlying data in Amazon S3.
newResource :: Resource

-- | The location of an Amazon S3 path where permissions are granted or
--   revoked.
resource_dataLocation :: Lens' Resource (Maybe DataLocationResource)

-- | The database for the resource. Unique to the Data Catalog. A database
--   is a set of associated table definitions organized into a logical
--   group. You can Grant and Revoke database permissions to a principal.
resource_database :: Lens' Resource (Maybe DatabaseResource)

-- | The tag key and values attached to a resource.
resource_lFTag :: Lens' Resource (Maybe LFTagKeyResource)

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
resource_catalog :: Lens' Resource (Maybe CatalogResource)

-- | A list of tag conditions that define a resource's tag policy.
resource_lFTagPolicy :: Lens' Resource (Maybe LFTagPolicyResource)

-- | The table for the resource. A table is a metadata definition that
--   represents your data. You can Grant and Revoke table privileges to a
--   principal.
resource_table :: Lens' Resource (Maybe TableResource)

-- | The table with columns for the resource. A principal with permissions
--   to this resource can select metadata from the columns of a table in
--   the Data Catalog and the underlying data in Amazon S3.
resource_tableWithColumns :: Lens' Resource (Maybe TableWithColumnsResource)

-- | A structure containing information about an AWS Lake Formation
--   resource.
--   
--   <i>See:</i> <a>newResourceInfo</a> smart constructor.
data ResourceInfo
ResourceInfo' :: Maybe Text -> Maybe POSIX -> Maybe Text -> ResourceInfo

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArn:ResourceInfo'] :: ResourceInfo -> Maybe Text

-- | The date and time the resource was last modified.
[$sel:lastModified:ResourceInfo'] :: ResourceInfo -> Maybe POSIX

-- | The IAM role that registered a resource.
[$sel:roleArn:ResourceInfo'] :: ResourceInfo -> Maybe Text

-- | Create a value of <a>ResourceInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ResourceInfo'</a>, <a>resourceInfo_resourceArn</a>
--   - The Amazon Resource Name (ARN) of the resource.
--   
--   <a>$sel:lastModified:ResourceInfo'</a>,
--   <a>resourceInfo_lastModified</a> - The date and time the resource was
--   last modified.
--   
--   <a>$sel:roleArn:ResourceInfo'</a>, <a>resourceInfo_roleArn</a> - The
--   IAM role that registered a resource.
newResourceInfo :: ResourceInfo

-- | The Amazon Resource Name (ARN) of the resource.
resourceInfo_resourceArn :: Lens' ResourceInfo (Maybe Text)

-- | The date and time the resource was last modified.
resourceInfo_lastModified :: Lens' ResourceInfo (Maybe UTCTime)

-- | The IAM role that registered a resource.
resourceInfo_roleArn :: Lens' ResourceInfo (Maybe Text)

-- | A structure for the table object. A table is a metadata definition
--   that represents your data. You can Grant and Revoke table privileges
--   to a principal.
--   
--   <i>See:</i> <a>newTableResource</a> smart constructor.
data TableResource
TableResource' :: Maybe Text -> Maybe TableWildcard -> Maybe Text -> Text -> TableResource

-- | The identifier for the Data Catalog. By default, it is the account ID
--   of the caller.
[$sel:catalogId:TableResource'] :: TableResource -> Maybe Text

-- | A wildcard object representing every table under a database.
--   
--   At least one of <tt>TableResource$Name</tt> or
--   <tt>TableResource$TableWildcard</tt> is required.
[$sel:tableWildcard:TableResource'] :: TableResource -> Maybe TableWildcard

-- | The name of the table.
[$sel:name:TableResource'] :: TableResource -> Maybe Text

-- | The name of the database for the table. Unique to a Data Catalog. A
--   database is a set of associated table definitions organized into a
--   logical group. You can Grant and Revoke database privileges to a
--   principal.
[$sel:databaseName:TableResource'] :: TableResource -> Text

-- | Create a value of <a>TableResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:TableResource'</a>, <a>tableResource_catalogId</a> -
--   The identifier for the Data Catalog. By default, it is the account ID
--   of the caller.
--   
--   <a>$sel:tableWildcard:TableResource'</a>,
--   <a>tableResource_tableWildcard</a> - A wildcard object representing
--   every table under a database.
--   
--   At least one of <tt>TableResource$Name</tt> or
--   <tt>TableResource$TableWildcard</tt> is required.
--   
--   <a>$sel:name:TableResource'</a>, <a>tableResource_name</a> - The name
--   of the table.
--   
--   <a>$sel:databaseName:TableResource'</a>,
--   <a>tableResource_databaseName</a> - The name of the database for the
--   table. Unique to a Data Catalog. A database is a set of associated
--   table definitions organized into a logical group. You can Grant and
--   Revoke database privileges to a principal.
newTableResource :: Text -> TableResource

-- | The identifier for the Data Catalog. By default, it is the account ID
--   of the caller.
tableResource_catalogId :: Lens' TableResource (Maybe Text)

-- | A wildcard object representing every table under a database.
--   
--   At least one of <tt>TableResource$Name</tt> or
--   <tt>TableResource$TableWildcard</tt> is required.
tableResource_tableWildcard :: Lens' TableResource (Maybe TableWildcard)

-- | The name of the table.
tableResource_name :: Lens' TableResource (Maybe Text)

-- | The name of the database for the table. Unique to a Data Catalog. A
--   database is a set of associated table definitions organized into a
--   logical group. You can Grant and Revoke database privileges to a
--   principal.
tableResource_databaseName :: Lens' TableResource Text

-- | A wildcard object representing every table under a database.
--   
--   <i>See:</i> <a>newTableWildcard</a> smart constructor.
data TableWildcard
TableWildcard' :: TableWildcard

-- | Create a value of <a>TableWildcard</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTableWildcard :: TableWildcard

-- | A structure for a table with columns object. This object is only used
--   when granting a SELECT permission.
--   
--   This object must take a value for at least one of
--   <tt>ColumnsNames</tt>, <tt>ColumnsIndexes</tt>, or
--   <tt>ColumnsWildcard</tt>.
--   
--   <i>See:</i> <a>newTableWithColumnsResource</a> smart constructor.
data TableWithColumnsResource
TableWithColumnsResource' :: Maybe Text -> Maybe ColumnWildcard -> Maybe [Text] -> Text -> Text -> TableWithColumnsResource

-- | The identifier for the Data Catalog. By default, it is the account ID
--   of the caller.
[$sel:catalogId:TableWithColumnsResource'] :: TableWithColumnsResource -> Maybe Text

-- | A wildcard specified by a <tt>ColumnWildcard</tt> object. At least one
--   of <tt>ColumnNames</tt> or <tt>ColumnWildcard</tt> is required.
[$sel:columnWildcard:TableWithColumnsResource'] :: TableWithColumnsResource -> Maybe ColumnWildcard

-- | The list of column names for the table. At least one of
--   <tt>ColumnNames</tt> or <tt>ColumnWildcard</tt> is required.
[$sel:columnNames:TableWithColumnsResource'] :: TableWithColumnsResource -> Maybe [Text]

-- | The name of the database for the table with columns resource. Unique
--   to the Data Catalog. A database is a set of associated table
--   definitions organized into a logical group. You can Grant and Revoke
--   database privileges to a principal.
[$sel:databaseName:TableWithColumnsResource'] :: TableWithColumnsResource -> Text

-- | The name of the table resource. A table is a metadata definition that
--   represents your data. You can Grant and Revoke table privileges to a
--   principal.
[$sel:name:TableWithColumnsResource'] :: TableWithColumnsResource -> Text

-- | Create a value of <a>TableWithColumnsResource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:TableWithColumnsResource'</a>,
--   <a>tableWithColumnsResource_catalogId</a> - The identifier for the
--   Data Catalog. By default, it is the account ID of the caller.
--   
--   <a>$sel:columnWildcard:TableWithColumnsResource'</a>,
--   <a>tableWithColumnsResource_columnWildcard</a> - A wildcard specified
--   by a <tt>ColumnWildcard</tt> object. At least one of
--   <tt>ColumnNames</tt> or <tt>ColumnWildcard</tt> is required.
--   
--   <a>$sel:columnNames:TableWithColumnsResource'</a>,
--   <a>tableWithColumnsResource_columnNames</a> - The list of column names
--   for the table. At least one of <tt>ColumnNames</tt> or
--   <tt>ColumnWildcard</tt> is required.
--   
--   <a>$sel:databaseName:TableWithColumnsResource'</a>,
--   <a>tableWithColumnsResource_databaseName</a> - The name of the
--   database for the table with columns resource. Unique to the Data
--   Catalog. A database is a set of associated table definitions organized
--   into a logical group. You can Grant and Revoke database privileges to
--   a principal.
--   
--   <a>$sel:name:TableWithColumnsResource'</a>,
--   <a>tableWithColumnsResource_name</a> - The name of the table resource.
--   A table is a metadata definition that represents your data. You can
--   Grant and Revoke table privileges to a principal.
newTableWithColumnsResource :: Text -> Text -> TableWithColumnsResource

-- | The identifier for the Data Catalog. By default, it is the account ID
--   of the caller.
tableWithColumnsResource_catalogId :: Lens' TableWithColumnsResource (Maybe Text)

-- | A wildcard specified by a <tt>ColumnWildcard</tt> object. At least one
--   of <tt>ColumnNames</tt> or <tt>ColumnWildcard</tt> is required.
tableWithColumnsResource_columnWildcard :: Lens' TableWithColumnsResource (Maybe ColumnWildcard)

-- | The list of column names for the table. At least one of
--   <tt>ColumnNames</tt> or <tt>ColumnWildcard</tt> is required.
tableWithColumnsResource_columnNames :: Lens' TableWithColumnsResource (Maybe [Text])

-- | The name of the database for the table with columns resource. Unique
--   to the Data Catalog. A database is a set of associated table
--   definitions organized into a logical group. You can Grant and Revoke
--   database privileges to a principal.
tableWithColumnsResource_databaseName :: Lens' TableWithColumnsResource Text

-- | The name of the table resource. A table is a metadata definition that
--   represents your data. You can Grant and Revoke table privileges to a
--   principal.
tableWithColumnsResource_name :: Lens' TableWithColumnsResource Text

-- | A structure describing a database resource with tags.
--   
--   <i>See:</i> <a>newTaggedDatabase</a> smart constructor.
data TaggedDatabase
TaggedDatabase' :: Maybe DatabaseResource -> Maybe (NonEmpty LFTagPair) -> TaggedDatabase

-- | A database that has tags attached to it.
[$sel:database:TaggedDatabase'] :: TaggedDatabase -> Maybe DatabaseResource

-- | A list of tags attached to the database.
[$sel:lFTags:TaggedDatabase'] :: TaggedDatabase -> Maybe (NonEmpty LFTagPair)

-- | Create a value of <a>TaggedDatabase</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:database:TaggedDatabase'</a>, <a>taggedDatabase_database</a> -
--   A database that has tags attached to it.
--   
--   <a>$sel:lFTags:TaggedDatabase'</a>, <a>taggedDatabase_lFTags</a> - A
--   list of tags attached to the database.
newTaggedDatabase :: TaggedDatabase

-- | A database that has tags attached to it.
taggedDatabase_database :: Lens' TaggedDatabase (Maybe DatabaseResource)

-- | A list of tags attached to the database.
taggedDatabase_lFTags :: Lens' TaggedDatabase (Maybe (NonEmpty LFTagPair))

-- | A structure describing a table resource with tags.
--   
--   <i>See:</i> <a>newTaggedTable</a> smart constructor.
data TaggedTable
TaggedTable' :: Maybe (NonEmpty LFTagPair) -> Maybe (NonEmpty LFTagPair) -> Maybe [ColumnLFTag] -> Maybe TableResource -> TaggedTable

-- | A list of tags attached to the table.
[$sel:lFTagsOnTable:TaggedTable'] :: TaggedTable -> Maybe (NonEmpty LFTagPair)

-- | A list of tags attached to the database where the table resides.
[$sel:lFTagOnDatabase:TaggedTable'] :: TaggedTable -> Maybe (NonEmpty LFTagPair)

-- | A list of tags attached to columns in the table.
[$sel:lFTagsOnColumns:TaggedTable'] :: TaggedTable -> Maybe [ColumnLFTag]

-- | A table that has tags attached to it.
[$sel:table:TaggedTable'] :: TaggedTable -> Maybe TableResource

-- | Create a value of <a>TaggedTable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lFTagsOnTable:TaggedTable'</a>,
--   <a>taggedTable_lFTagsOnTable</a> - A list of tags attached to the
--   table.
--   
--   <a>$sel:lFTagOnDatabase:TaggedTable'</a>,
--   <a>taggedTable_lFTagOnDatabase</a> - A list of tags attached to the
--   database where the table resides.
--   
--   <a>$sel:lFTagsOnColumns:TaggedTable'</a>,
--   <a>taggedTable_lFTagsOnColumns</a> - A list of tags attached to
--   columns in the table.
--   
--   <a>$sel:table:TaggedTable'</a>, <a>taggedTable_table</a> - A table
--   that has tags attached to it.
newTaggedTable :: TaggedTable

-- | A list of tags attached to the table.
taggedTable_lFTagsOnTable :: Lens' TaggedTable (Maybe (NonEmpty LFTagPair))

-- | A list of tags attached to the database where the table resides.
taggedTable_lFTagOnDatabase :: Lens' TaggedTable (Maybe (NonEmpty LFTagPair))

-- | A list of tags attached to columns in the table.
taggedTable_lFTagsOnColumns :: Lens' TaggedTable (Maybe [ColumnLFTag])

-- | A table that has tags attached to it.
taggedTable_table :: Lens' TaggedTable (Maybe TableResource)


-- | This operation allows a search on <tt>TABLE</tt> resources by
--   <tt>LFTag</tt>s. This will be used by admins who want to grant user
--   permissions on certain LFTags. Before making a grant, the admin can
--   use <tt>SearchTablesByLFTags</tt> to find all resources where the
--   given <tt>LFTag</tt>s are valid to verify whether the returned
--   resources can be shared.
module Network.AWS.LakeFormation.SearchTablesByLFTags

-- | <i>See:</i> <a>newSearchTablesByLFTags</a> smart constructor.
data SearchTablesByLFTags
SearchTablesByLFTags' :: Maybe Text -> Maybe Text -> Maybe Natural -> NonEmpty LFTag -> SearchTablesByLFTags

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:SearchTablesByLFTags'] :: SearchTablesByLFTags -> Maybe Text

-- | A continuation token, if this is not the first call to retrieve this
--   list.
[$sel:nextToken:SearchTablesByLFTags'] :: SearchTablesByLFTags -> Maybe Text

-- | The maximum number of results to return.
[$sel:maxResults:SearchTablesByLFTags'] :: SearchTablesByLFTags -> Maybe Natural

-- | A list of conditions (<tt>LFTag</tt> structures) to search for in
--   table resources.
[$sel:expression:SearchTablesByLFTags'] :: SearchTablesByLFTags -> NonEmpty LFTag

-- | Create a value of <a>SearchTablesByLFTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:SearchTablesByLFTags'</a>,
--   <a>searchTablesByLFTags_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:nextToken:SearchTablesByLFTags'</a>,
--   <a>searchTablesByLFTags_nextToken</a> - A continuation token, if this
--   is not the first call to retrieve this list.
--   
--   <a>$sel:maxResults:SearchTablesByLFTags'</a>,
--   <a>searchTablesByLFTags_maxResults</a> - The maximum number of results
--   to return.
--   
--   <a>$sel:expression:SearchTablesByLFTags'</a>,
--   <a>searchTablesByLFTags_expression</a> - A list of conditions
--   (<tt>LFTag</tt> structures) to search for in table resources.
newSearchTablesByLFTags :: NonEmpty LFTag -> SearchTablesByLFTags

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
searchTablesByLFTags_catalogId :: Lens' SearchTablesByLFTags (Maybe Text)

-- | A continuation token, if this is not the first call to retrieve this
--   list.
searchTablesByLFTags_nextToken :: Lens' SearchTablesByLFTags (Maybe Text)

-- | The maximum number of results to return.
searchTablesByLFTags_maxResults :: Lens' SearchTablesByLFTags (Maybe Natural)

-- | A list of conditions (<tt>LFTag</tt> structures) to search for in
--   table resources.
searchTablesByLFTags_expression :: Lens' SearchTablesByLFTags (NonEmpty LFTag)

-- | <i>See:</i> <a>newSearchTablesByLFTagsResponse</a> smart constructor.
data SearchTablesByLFTagsResponse
SearchTablesByLFTagsResponse' :: Maybe [TaggedTable] -> Maybe Text -> Int -> SearchTablesByLFTagsResponse

-- | A list of tables that meet the tag conditions.
[$sel:tableList:SearchTablesByLFTagsResponse'] :: SearchTablesByLFTagsResponse -> Maybe [TaggedTable]

-- | A continuation token, present if the current list segment is not the
--   last.
[$sel:nextToken:SearchTablesByLFTagsResponse'] :: SearchTablesByLFTagsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:SearchTablesByLFTagsResponse'] :: SearchTablesByLFTagsResponse -> Int

-- | Create a value of <a>SearchTablesByLFTagsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tableList:SearchTablesByLFTagsResponse'</a>,
--   <a>searchTablesByLFTagsResponse_tableList</a> - A list of tables that
--   meet the tag conditions.
--   
--   <a>$sel:nextToken:SearchTablesByLFTags'</a>,
--   <a>searchTablesByLFTagsResponse_nextToken</a> - A continuation token,
--   present if the current list segment is not the last.
--   
--   <a>$sel:httpStatus:SearchTablesByLFTagsResponse'</a>,
--   <a>searchTablesByLFTagsResponse_httpStatus</a> - The response's http
--   status code.
newSearchTablesByLFTagsResponse :: Int -> SearchTablesByLFTagsResponse

-- | A list of tables that meet the tag conditions.
searchTablesByLFTagsResponse_tableList :: Lens' SearchTablesByLFTagsResponse (Maybe [TaggedTable])

-- | A continuation token, present if the current list segment is not the
--   last.
searchTablesByLFTagsResponse_nextToken :: Lens' SearchTablesByLFTagsResponse (Maybe Text)

-- | The response's http status code.
searchTablesByLFTagsResponse_httpStatus :: Lens' SearchTablesByLFTagsResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.SearchTablesByLFTags.SearchTablesByLFTags
instance GHC.Show.Show Network.AWS.LakeFormation.SearchTablesByLFTags.SearchTablesByLFTags
instance GHC.Read.Read Network.AWS.LakeFormation.SearchTablesByLFTags.SearchTablesByLFTags
instance GHC.Classes.Eq Network.AWS.LakeFormation.SearchTablesByLFTags.SearchTablesByLFTags
instance GHC.Generics.Generic Network.AWS.LakeFormation.SearchTablesByLFTags.SearchTablesByLFTagsResponse
instance GHC.Show.Show Network.AWS.LakeFormation.SearchTablesByLFTags.SearchTablesByLFTagsResponse
instance GHC.Read.Read Network.AWS.LakeFormation.SearchTablesByLFTags.SearchTablesByLFTagsResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.SearchTablesByLFTags.SearchTablesByLFTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.SearchTablesByLFTags.SearchTablesByLFTags
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.SearchTablesByLFTags.SearchTablesByLFTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.SearchTablesByLFTags.SearchTablesByLFTags
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.SearchTablesByLFTags.SearchTablesByLFTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.SearchTablesByLFTags.SearchTablesByLFTags
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.SearchTablesByLFTags.SearchTablesByLFTags
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.SearchTablesByLFTags.SearchTablesByLFTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.SearchTablesByLFTags.SearchTablesByLFTags


-- | This operation allows a search on <tt>DATABASE</tt> resources by
--   <tt>TagCondition</tt>. This operation is used by admins who want to
--   grant user permissions on certain <tt>TagConditions</tt>. Before
--   making a grant, the admin can use <tt>SearchDatabasesByTags</tt> to
--   find all resources where the given <tt>TagConditions</tt> are valid to
--   verify whether the returned resources can be shared.
module Network.AWS.LakeFormation.SearchDatabasesByLFTags

-- | <i>See:</i> <a>newSearchDatabasesByLFTags</a> smart constructor.
data SearchDatabasesByLFTags
SearchDatabasesByLFTags' :: Maybe Text -> Maybe Text -> Maybe Natural -> NonEmpty LFTag -> SearchDatabasesByLFTags

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:SearchDatabasesByLFTags'] :: SearchDatabasesByLFTags -> Maybe Text

-- | A continuation token, if this is not the first call to retrieve this
--   list.
[$sel:nextToken:SearchDatabasesByLFTags'] :: SearchDatabasesByLFTags -> Maybe Text

-- | The maximum number of results to return.
[$sel:maxResults:SearchDatabasesByLFTags'] :: SearchDatabasesByLFTags -> Maybe Natural

-- | A list of conditions (<tt>LFTag</tt> structures) to search for in
--   database resources.
[$sel:expression:SearchDatabasesByLFTags'] :: SearchDatabasesByLFTags -> NonEmpty LFTag

-- | Create a value of <a>SearchDatabasesByLFTags</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:SearchDatabasesByLFTags'</a>,
--   <a>searchDatabasesByLFTags_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:nextToken:SearchDatabasesByLFTags'</a>,
--   <a>searchDatabasesByLFTags_nextToken</a> - A continuation token, if
--   this is not the first call to retrieve this list.
--   
--   <a>$sel:maxResults:SearchDatabasesByLFTags'</a>,
--   <a>searchDatabasesByLFTags_maxResults</a> - The maximum number of
--   results to return.
--   
--   <a>$sel:expression:SearchDatabasesByLFTags'</a>,
--   <a>searchDatabasesByLFTags_expression</a> - A list of conditions
--   (<tt>LFTag</tt> structures) to search for in database resources.
newSearchDatabasesByLFTags :: NonEmpty LFTag -> SearchDatabasesByLFTags

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
searchDatabasesByLFTags_catalogId :: Lens' SearchDatabasesByLFTags (Maybe Text)

-- | A continuation token, if this is not the first call to retrieve this
--   list.
searchDatabasesByLFTags_nextToken :: Lens' SearchDatabasesByLFTags (Maybe Text)

-- | The maximum number of results to return.
searchDatabasesByLFTags_maxResults :: Lens' SearchDatabasesByLFTags (Maybe Natural)

-- | A list of conditions (<tt>LFTag</tt> structures) to search for in
--   database resources.
searchDatabasesByLFTags_expression :: Lens' SearchDatabasesByLFTags (NonEmpty LFTag)

-- | <i>See:</i> <a>newSearchDatabasesByLFTagsResponse</a> smart
--   constructor.
data SearchDatabasesByLFTagsResponse
SearchDatabasesByLFTagsResponse' :: Maybe [TaggedDatabase] -> Maybe Text -> Int -> SearchDatabasesByLFTagsResponse

-- | A list of databases that meet the tag conditions.
[$sel:databaseList:SearchDatabasesByLFTagsResponse'] :: SearchDatabasesByLFTagsResponse -> Maybe [TaggedDatabase]

-- | A continuation token, present if the current list segment is not the
--   last.
[$sel:nextToken:SearchDatabasesByLFTagsResponse'] :: SearchDatabasesByLFTagsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:SearchDatabasesByLFTagsResponse'] :: SearchDatabasesByLFTagsResponse -> Int

-- | Create a value of <a>SearchDatabasesByLFTagsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:databaseList:SearchDatabasesByLFTagsResponse'</a>,
--   <a>searchDatabasesByLFTagsResponse_databaseList</a> - A list of
--   databases that meet the tag conditions.
--   
--   <a>$sel:nextToken:SearchDatabasesByLFTags'</a>,
--   <a>searchDatabasesByLFTagsResponse_nextToken</a> - A continuation
--   token, present if the current list segment is not the last.
--   
--   <a>$sel:httpStatus:SearchDatabasesByLFTagsResponse'</a>,
--   <a>searchDatabasesByLFTagsResponse_httpStatus</a> - The response's
--   http status code.
newSearchDatabasesByLFTagsResponse :: Int -> SearchDatabasesByLFTagsResponse

-- | A list of databases that meet the tag conditions.
searchDatabasesByLFTagsResponse_databaseList :: Lens' SearchDatabasesByLFTagsResponse (Maybe [TaggedDatabase])

-- | A continuation token, present if the current list segment is not the
--   last.
searchDatabasesByLFTagsResponse_nextToken :: Lens' SearchDatabasesByLFTagsResponse (Maybe Text)

-- | The response's http status code.
searchDatabasesByLFTagsResponse_httpStatus :: Lens' SearchDatabasesByLFTagsResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.SearchDatabasesByLFTags.SearchDatabasesByLFTags
instance GHC.Show.Show Network.AWS.LakeFormation.SearchDatabasesByLFTags.SearchDatabasesByLFTags
instance GHC.Read.Read Network.AWS.LakeFormation.SearchDatabasesByLFTags.SearchDatabasesByLFTags
instance GHC.Classes.Eq Network.AWS.LakeFormation.SearchDatabasesByLFTags.SearchDatabasesByLFTags
instance GHC.Generics.Generic Network.AWS.LakeFormation.SearchDatabasesByLFTags.SearchDatabasesByLFTagsResponse
instance GHC.Show.Show Network.AWS.LakeFormation.SearchDatabasesByLFTags.SearchDatabasesByLFTagsResponse
instance GHC.Read.Read Network.AWS.LakeFormation.SearchDatabasesByLFTags.SearchDatabasesByLFTagsResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.SearchDatabasesByLFTags.SearchDatabasesByLFTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.SearchDatabasesByLFTags.SearchDatabasesByLFTags
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.SearchDatabasesByLFTags.SearchDatabasesByLFTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.SearchDatabasesByLFTags.SearchDatabasesByLFTags
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.SearchDatabasesByLFTags.SearchDatabasesByLFTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.SearchDatabasesByLFTags.SearchDatabasesByLFTags
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.SearchDatabasesByLFTags.SearchDatabasesByLFTags
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.SearchDatabasesByLFTags.SearchDatabasesByLFTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.SearchDatabasesByLFTags.SearchDatabasesByLFTags


-- | Revokes permissions to the principal to access metadata in the Data
--   Catalog and data organized in underlying data storage such as Amazon
--   S3.
module Network.AWS.LakeFormation.RevokePermissions

-- | <i>See:</i> <a>newRevokePermissions</a> smart constructor.
data RevokePermissions
RevokePermissions' :: Maybe Text -> Maybe [Permission] -> DataLakePrincipal -> Resource -> [Permission] -> RevokePermissions

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:RevokePermissions'] :: RevokePermissions -> Maybe Text

-- | Indicates a list of permissions for which to revoke the grant option
--   allowing the principal to pass permissions to other principals.
[$sel:permissionsWithGrantOption:RevokePermissions'] :: RevokePermissions -> Maybe [Permission]

-- | The principal to be revoked permissions on the resource.
[$sel:principal:RevokePermissions'] :: RevokePermissions -> DataLakePrincipal

-- | The resource to which permissions are to be revoked.
[$sel:resource:RevokePermissions'] :: RevokePermissions -> Resource

-- | The permissions revoked to the principal on the resource. For
--   information about permissions, see <a>Security and Access Control to
--   Metadata and Data</a>.
[$sel:permissions:RevokePermissions'] :: RevokePermissions -> [Permission]

-- | Create a value of <a>RevokePermissions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:RevokePermissions'</a>,
--   <a>revokePermissions_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:permissionsWithGrantOption:RevokePermissions'</a>,
--   <a>revokePermissions_permissionsWithGrantOption</a> - Indicates a list
--   of permissions for which to revoke the grant option allowing the
--   principal to pass permissions to other principals.
--   
--   <a>$sel:principal:RevokePermissions'</a>,
--   <a>revokePermissions_principal</a> - The principal to be revoked
--   permissions on the resource.
--   
--   <a>$sel:resource:RevokePermissions'</a>,
--   <a>revokePermissions_resource</a> - The resource to which permissions
--   are to be revoked.
--   
--   <a>$sel:permissions:RevokePermissions'</a>,
--   <a>revokePermissions_permissions</a> - The permissions revoked to the
--   principal on the resource. For information about permissions, see
--   <a>Security and Access Control to Metadata and Data</a>.
newRevokePermissions :: DataLakePrincipal -> Resource -> RevokePermissions

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
revokePermissions_catalogId :: Lens' RevokePermissions (Maybe Text)

-- | Indicates a list of permissions for which to revoke the grant option
--   allowing the principal to pass permissions to other principals.
revokePermissions_permissionsWithGrantOption :: Lens' RevokePermissions (Maybe [Permission])

-- | The principal to be revoked permissions on the resource.
revokePermissions_principal :: Lens' RevokePermissions DataLakePrincipal

-- | The resource to which permissions are to be revoked.
revokePermissions_resource :: Lens' RevokePermissions Resource

-- | The permissions revoked to the principal on the resource. For
--   information about permissions, see <a>Security and Access Control to
--   Metadata and Data</a>.
revokePermissions_permissions :: Lens' RevokePermissions [Permission]

-- | <i>See:</i> <a>newRevokePermissionsResponse</a> smart constructor.
data RevokePermissionsResponse
RevokePermissionsResponse' :: Int -> RevokePermissionsResponse

-- | The response's http status code.
[$sel:httpStatus:RevokePermissionsResponse'] :: RevokePermissionsResponse -> Int

-- | Create a value of <a>RevokePermissionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RevokePermissionsResponse'</a>,
--   <a>revokePermissionsResponse_httpStatus</a> - The response's http
--   status code.
newRevokePermissionsResponse :: Int -> RevokePermissionsResponse

-- | The response's http status code.
revokePermissionsResponse_httpStatus :: Lens' RevokePermissionsResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.RevokePermissions.RevokePermissions
instance GHC.Show.Show Network.AWS.LakeFormation.RevokePermissions.RevokePermissions
instance GHC.Read.Read Network.AWS.LakeFormation.RevokePermissions.RevokePermissions
instance GHC.Classes.Eq Network.AWS.LakeFormation.RevokePermissions.RevokePermissions
instance GHC.Generics.Generic Network.AWS.LakeFormation.RevokePermissions.RevokePermissionsResponse
instance GHC.Show.Show Network.AWS.LakeFormation.RevokePermissions.RevokePermissionsResponse
instance GHC.Read.Read Network.AWS.LakeFormation.RevokePermissions.RevokePermissionsResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.RevokePermissions.RevokePermissionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.RevokePermissions.RevokePermissions
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.RevokePermissions.RevokePermissionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.RevokePermissions.RevokePermissions
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.RevokePermissions.RevokePermissions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.RevokePermissions.RevokePermissions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.RevokePermissions.RevokePermissions
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.RevokePermissions.RevokePermissions
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.RevokePermissions.RevokePermissions


-- | Removes a tag from the resource. Only database, table, or
--   tableWithColumns resource are allowed. To tag columns, use the column
--   inclusion list in <tt>tableWithColumns</tt> to specify column input.
module Network.AWS.LakeFormation.RemoveLFTagsFromResource

-- | <i>See:</i> <a>newRemoveLFTagsFromResource</a> smart constructor.
data RemoveLFTagsFromResource
RemoveLFTagsFromResource' :: Maybe Text -> Resource -> NonEmpty LFTagPair -> RemoveLFTagsFromResource

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:RemoveLFTagsFromResource'] :: RemoveLFTagsFromResource -> Maybe Text

-- | The resource where you want to remove a tag.
[$sel:resource:RemoveLFTagsFromResource'] :: RemoveLFTagsFromResource -> Resource

-- | The tags to be removed from the resource.
[$sel:lFTags:RemoveLFTagsFromResource'] :: RemoveLFTagsFromResource -> NonEmpty LFTagPair

-- | Create a value of <a>RemoveLFTagsFromResource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:RemoveLFTagsFromResource'</a>,
--   <a>removeLFTagsFromResource_catalogId</a> - The identifier for the
--   Data Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:resource:RemoveLFTagsFromResource'</a>,
--   <a>removeLFTagsFromResource_resource</a> - The resource where you want
--   to remove a tag.
--   
--   <a>$sel:lFTags:RemoveLFTagsFromResource'</a>,
--   <a>removeLFTagsFromResource_lFTags</a> - The tags to be removed from
--   the resource.
newRemoveLFTagsFromResource :: Resource -> NonEmpty LFTagPair -> RemoveLFTagsFromResource

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
removeLFTagsFromResource_catalogId :: Lens' RemoveLFTagsFromResource (Maybe Text)

-- | The resource where you want to remove a tag.
removeLFTagsFromResource_resource :: Lens' RemoveLFTagsFromResource Resource

-- | The tags to be removed from the resource.
removeLFTagsFromResource_lFTags :: Lens' RemoveLFTagsFromResource (NonEmpty LFTagPair)

-- | <i>See:</i> <a>newRemoveLFTagsFromResourceResponse</a> smart
--   constructor.
data RemoveLFTagsFromResourceResponse
RemoveLFTagsFromResourceResponse' :: Maybe [LFTagError] -> Int -> RemoveLFTagsFromResourceResponse

-- | A list of failures to untag a resource.
[$sel:failures:RemoveLFTagsFromResourceResponse'] :: RemoveLFTagsFromResourceResponse -> Maybe [LFTagError]

-- | The response's http status code.
[$sel:httpStatus:RemoveLFTagsFromResourceResponse'] :: RemoveLFTagsFromResourceResponse -> Int

-- | Create a value of <a>RemoveLFTagsFromResourceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failures:RemoveLFTagsFromResourceResponse'</a>,
--   <a>removeLFTagsFromResourceResponse_failures</a> - A list of failures
--   to untag a resource.
--   
--   <a>$sel:httpStatus:RemoveLFTagsFromResourceResponse'</a>,
--   <a>removeLFTagsFromResourceResponse_httpStatus</a> - The response's
--   http status code.
newRemoveLFTagsFromResourceResponse :: Int -> RemoveLFTagsFromResourceResponse

-- | A list of failures to untag a resource.
removeLFTagsFromResourceResponse_failures :: Lens' RemoveLFTagsFromResourceResponse (Maybe [LFTagError])

-- | The response's http status code.
removeLFTagsFromResourceResponse_httpStatus :: Lens' RemoveLFTagsFromResourceResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.RemoveLFTagsFromResource.RemoveLFTagsFromResource
instance GHC.Show.Show Network.AWS.LakeFormation.RemoveLFTagsFromResource.RemoveLFTagsFromResource
instance GHC.Read.Read Network.AWS.LakeFormation.RemoveLFTagsFromResource.RemoveLFTagsFromResource
instance GHC.Classes.Eq Network.AWS.LakeFormation.RemoveLFTagsFromResource.RemoveLFTagsFromResource
instance GHC.Generics.Generic Network.AWS.LakeFormation.RemoveLFTagsFromResource.RemoveLFTagsFromResourceResponse
instance GHC.Show.Show Network.AWS.LakeFormation.RemoveLFTagsFromResource.RemoveLFTagsFromResourceResponse
instance GHC.Read.Read Network.AWS.LakeFormation.RemoveLFTagsFromResource.RemoveLFTagsFromResourceResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.RemoveLFTagsFromResource.RemoveLFTagsFromResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.RemoveLFTagsFromResource.RemoveLFTagsFromResource
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.RemoveLFTagsFromResource.RemoveLFTagsFromResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.RemoveLFTagsFromResource.RemoveLFTagsFromResource
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.RemoveLFTagsFromResource.RemoveLFTagsFromResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.RemoveLFTagsFromResource.RemoveLFTagsFromResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.RemoveLFTagsFromResource.RemoveLFTagsFromResource
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.RemoveLFTagsFromResource.RemoveLFTagsFromResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.RemoveLFTagsFromResource.RemoveLFTagsFromResource


-- | Registers the resource as managed by the Data Catalog.
--   
--   To add or update data, Lake Formation needs read/write access to the
--   chosen Amazon S3 path. Choose a role that you know has permission to
--   do this, or choose the AWSServiceRoleForLakeFormationDataAccess
--   service-linked role. When you register the first Amazon S3 path, the
--   service-linked role and a new inline policy are created on your
--   behalf. Lake Formation adds the first path to the inline policy and
--   attaches it to the service-linked role. When you register subsequent
--   paths, Lake Formation adds the path to the existing policy.
--   
--   The following request registers a new location and gives AWS Lake
--   Formation permission to use the service-linked role to access that
--   location.
--   
--   <pre>
--   ResourceArn = arn:aws:s3:::my-bucket UseServiceLinkedRole = true
--   </pre>
--   
--   If <tt>UseServiceLinkedRole</tt> is not set to true, you must provide
--   or set the <tt>RoleArn</tt>:
--   
--   <pre>
--   arn:aws:iam::12345:role/my-data-access-role
--   </pre>
module Network.AWS.LakeFormation.RegisterResource

-- | <i>See:</i> <a>newRegisterResource</a> smart constructor.
data RegisterResource
RegisterResource' :: Maybe Bool -> Maybe Text -> Text -> RegisterResource

-- | Designates an AWS Identity and Access Management (IAM) service-linked
--   role by registering this role with the Data Catalog. A service-linked
--   role is a unique type of IAM role that is linked directly to Lake
--   Formation.
--   
--   For more information, see <a>Using Service-Linked Roles for Lake
--   Formation</a>.
[$sel:useServiceLinkedRole:RegisterResource'] :: RegisterResource -> Maybe Bool

-- | The identifier for the role that registers the resource.
[$sel:roleArn:RegisterResource'] :: RegisterResource -> Maybe Text

-- | The Amazon Resource Name (ARN) of the resource that you want to
--   register.
[$sel:resourceArn:RegisterResource'] :: RegisterResource -> Text

-- | Create a value of <a>RegisterResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:useServiceLinkedRole:RegisterResource'</a>,
--   <a>registerResource_useServiceLinkedRole</a> - Designates an AWS
--   Identity and Access Management (IAM) service-linked role by
--   registering this role with the Data Catalog. A service-linked role is
--   a unique type of IAM role that is linked directly to Lake Formation.
--   
--   For more information, see <a>Using Service-Linked Roles for Lake
--   Formation</a>.
--   
--   <a>$sel:roleArn:RegisterResource'</a>, <a>registerResource_roleArn</a>
--   - The identifier for the role that registers the resource.
--   
--   <a>$sel:resourceArn:RegisterResource'</a>,
--   <a>registerResource_resourceArn</a> - The Amazon Resource Name (ARN)
--   of the resource that you want to register.
newRegisterResource :: Text -> RegisterResource

-- | Designates an AWS Identity and Access Management (IAM) service-linked
--   role by registering this role with the Data Catalog. A service-linked
--   role is a unique type of IAM role that is linked directly to Lake
--   Formation.
--   
--   For more information, see <a>Using Service-Linked Roles for Lake
--   Formation</a>.
registerResource_useServiceLinkedRole :: Lens' RegisterResource (Maybe Bool)

-- | The identifier for the role that registers the resource.
registerResource_roleArn :: Lens' RegisterResource (Maybe Text)

-- | The Amazon Resource Name (ARN) of the resource that you want to
--   register.
registerResource_resourceArn :: Lens' RegisterResource Text

-- | <i>See:</i> <a>newRegisterResourceResponse</a> smart constructor.
data RegisterResourceResponse
RegisterResourceResponse' :: Int -> RegisterResourceResponse

-- | The response's http status code.
[$sel:httpStatus:RegisterResourceResponse'] :: RegisterResourceResponse -> Int

-- | Create a value of <a>RegisterResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RegisterResourceResponse'</a>,
--   <a>registerResourceResponse_httpStatus</a> - The response's http
--   status code.
newRegisterResourceResponse :: Int -> RegisterResourceResponse

-- | The response's http status code.
registerResourceResponse_httpStatus :: Lens' RegisterResourceResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.RegisterResource.RegisterResource
instance GHC.Show.Show Network.AWS.LakeFormation.RegisterResource.RegisterResource
instance GHC.Read.Read Network.AWS.LakeFormation.RegisterResource.RegisterResource
instance GHC.Classes.Eq Network.AWS.LakeFormation.RegisterResource.RegisterResource
instance GHC.Generics.Generic Network.AWS.LakeFormation.RegisterResource.RegisterResourceResponse
instance GHC.Show.Show Network.AWS.LakeFormation.RegisterResource.RegisterResourceResponse
instance GHC.Read.Read Network.AWS.LakeFormation.RegisterResource.RegisterResourceResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.RegisterResource.RegisterResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.RegisterResource.RegisterResource
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.RegisterResource.RegisterResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.RegisterResource.RegisterResource
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.RegisterResource.RegisterResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.RegisterResource.RegisterResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.RegisterResource.RegisterResource
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.RegisterResource.RegisterResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.RegisterResource.RegisterResource


-- | Sets the list of data lake administrators who have admin privileges on
--   all resources managed by Lake Formation. For more information on admin
--   privileges, see <a>Granting Lake Formation Permissions</a>.
--   
--   This API replaces the current list of data lake admins with the new
--   list being passed. To add an admin, fetch the current list and add the
--   new admin to that list and pass that list in this API.
module Network.AWS.LakeFormation.PutDataLakeSettings

-- | <i>See:</i> <a>newPutDataLakeSettings</a> smart constructor.
data PutDataLakeSettings
PutDataLakeSettings' :: Maybe Text -> DataLakeSettings -> PutDataLakeSettings

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:PutDataLakeSettings'] :: PutDataLakeSettings -> Maybe Text

-- | A structure representing a list of AWS Lake Formation principals
--   designated as data lake administrators.
[$sel:dataLakeSettings:PutDataLakeSettings'] :: PutDataLakeSettings -> DataLakeSettings

-- | Create a value of <a>PutDataLakeSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:PutDataLakeSettings'</a>,
--   <a>putDataLakeSettings_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:dataLakeSettings:PutDataLakeSettings'</a>,
--   <a>putDataLakeSettings_dataLakeSettings</a> - A structure representing
--   a list of AWS Lake Formation principals designated as data lake
--   administrators.
newPutDataLakeSettings :: DataLakeSettings -> PutDataLakeSettings

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
putDataLakeSettings_catalogId :: Lens' PutDataLakeSettings (Maybe Text)

-- | A structure representing a list of AWS Lake Formation principals
--   designated as data lake administrators.
putDataLakeSettings_dataLakeSettings :: Lens' PutDataLakeSettings DataLakeSettings

-- | <i>See:</i> <a>newPutDataLakeSettingsResponse</a> smart constructor.
data PutDataLakeSettingsResponse
PutDataLakeSettingsResponse' :: Int -> PutDataLakeSettingsResponse

-- | The response's http status code.
[$sel:httpStatus:PutDataLakeSettingsResponse'] :: PutDataLakeSettingsResponse -> Int

-- | Create a value of <a>PutDataLakeSettingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutDataLakeSettingsResponse'</a>,
--   <a>putDataLakeSettingsResponse_httpStatus</a> - The response's http
--   status code.
newPutDataLakeSettingsResponse :: Int -> PutDataLakeSettingsResponse

-- | The response's http status code.
putDataLakeSettingsResponse_httpStatus :: Lens' PutDataLakeSettingsResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.PutDataLakeSettings.PutDataLakeSettings
instance GHC.Show.Show Network.AWS.LakeFormation.PutDataLakeSettings.PutDataLakeSettings
instance GHC.Read.Read Network.AWS.LakeFormation.PutDataLakeSettings.PutDataLakeSettings
instance GHC.Classes.Eq Network.AWS.LakeFormation.PutDataLakeSettings.PutDataLakeSettings
instance GHC.Generics.Generic Network.AWS.LakeFormation.PutDataLakeSettings.PutDataLakeSettingsResponse
instance GHC.Show.Show Network.AWS.LakeFormation.PutDataLakeSettings.PutDataLakeSettingsResponse
instance GHC.Read.Read Network.AWS.LakeFormation.PutDataLakeSettings.PutDataLakeSettingsResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.PutDataLakeSettings.PutDataLakeSettingsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.PutDataLakeSettings.PutDataLakeSettings
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.PutDataLakeSettings.PutDataLakeSettingsResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.PutDataLakeSettings.PutDataLakeSettings
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.PutDataLakeSettings.PutDataLakeSettings
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.PutDataLakeSettings.PutDataLakeSettings
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.PutDataLakeSettings.PutDataLakeSettings
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.PutDataLakeSettings.PutDataLakeSettings
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.PutDataLakeSettings.PutDataLakeSettings


-- | Lists the resources registered to be managed by the Data Catalog.
module Network.AWS.LakeFormation.ListResources

-- | <i>See:</i> <a>newListResources</a> smart constructor.
data ListResources
ListResources' :: Maybe (NonEmpty FilterCondition) -> Maybe Text -> Maybe Natural -> ListResources

-- | Any applicable row-level and/or column-level filtering conditions for
--   the resources.
[$sel:filterConditionList:ListResources'] :: ListResources -> Maybe (NonEmpty FilterCondition)

-- | A continuation token, if this is not the first call to retrieve these
--   resources.
[$sel:nextToken:ListResources'] :: ListResources -> Maybe Text

-- | The maximum number of resource results.
[$sel:maxResults:ListResources'] :: ListResources -> Maybe Natural

-- | Create a value of <a>ListResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterConditionList:ListResources'</a>,
--   <a>listResources_filterConditionList</a> - Any applicable row-level
--   and/or column-level filtering conditions for the resources.
--   
--   <a>$sel:nextToken:ListResources'</a>, <a>listResources_nextToken</a> -
--   A continuation token, if this is not the first call to retrieve these
--   resources.
--   
--   <a>$sel:maxResults:ListResources'</a>, <a>listResources_maxResults</a>
--   - The maximum number of resource results.
newListResources :: ListResources

-- | Any applicable row-level and/or column-level filtering conditions for
--   the resources.
listResources_filterConditionList :: Lens' ListResources (Maybe (NonEmpty FilterCondition))

-- | A continuation token, if this is not the first call to retrieve these
--   resources.
listResources_nextToken :: Lens' ListResources (Maybe Text)

-- | The maximum number of resource results.
listResources_maxResults :: Lens' ListResources (Maybe Natural)

-- | <i>See:</i> <a>newListResourcesResponse</a> smart constructor.
data ListResourcesResponse
ListResourcesResponse' :: Maybe [ResourceInfo] -> Maybe Text -> Int -> ListResourcesResponse

-- | A summary of the data lake resources.
[$sel:resourceInfoList:ListResourcesResponse'] :: ListResourcesResponse -> Maybe [ResourceInfo]

-- | A continuation token, if this is not the first call to retrieve these
--   resources.
[$sel:nextToken:ListResourcesResponse'] :: ListResourcesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListResourcesResponse'] :: ListResourcesResponse -> Int

-- | Create a value of <a>ListResourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceInfoList:ListResourcesResponse'</a>,
--   <a>listResourcesResponse_resourceInfoList</a> - A summary of the data
--   lake resources.
--   
--   <a>$sel:nextToken:ListResources'</a>,
--   <a>listResourcesResponse_nextToken</a> - A continuation token, if this
--   is not the first call to retrieve these resources.
--   
--   <a>$sel:httpStatus:ListResourcesResponse'</a>,
--   <a>listResourcesResponse_httpStatus</a> - The response's http status
--   code.
newListResourcesResponse :: Int -> ListResourcesResponse

-- | A summary of the data lake resources.
listResourcesResponse_resourceInfoList :: Lens' ListResourcesResponse (Maybe [ResourceInfo])

-- | A continuation token, if this is not the first call to retrieve these
--   resources.
listResourcesResponse_nextToken :: Lens' ListResourcesResponse (Maybe Text)

-- | The response's http status code.
listResourcesResponse_httpStatus :: Lens' ListResourcesResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.ListResources.ListResources
instance GHC.Show.Show Network.AWS.LakeFormation.ListResources.ListResources
instance GHC.Read.Read Network.AWS.LakeFormation.ListResources.ListResources
instance GHC.Classes.Eq Network.AWS.LakeFormation.ListResources.ListResources
instance GHC.Generics.Generic Network.AWS.LakeFormation.ListResources.ListResourcesResponse
instance GHC.Show.Show Network.AWS.LakeFormation.ListResources.ListResourcesResponse
instance GHC.Read.Read Network.AWS.LakeFormation.ListResources.ListResourcesResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.ListResources.ListResourcesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.ListResources.ListResources
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.ListResources.ListResourcesResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.ListResources.ListResources
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.ListResources.ListResources
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.ListResources.ListResources
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.ListResources.ListResources
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.ListResources.ListResources
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.ListResources.ListResources


-- | Returns a list of the principal permissions on the resource, filtered
--   by the permissions of the caller. For example, if you are granted an
--   ALTER permission, you are able to see only the principal permissions
--   for ALTER.
--   
--   This operation returns only those permissions that have been
--   explicitly granted.
--   
--   For information about permissions, see <a>Security and Access Control
--   to Metadata and Data</a>.
module Network.AWS.LakeFormation.ListPermissions

-- | <i>See:</i> <a>newListPermissions</a> smart constructor.
data ListPermissions
ListPermissions' :: Maybe DataLakeResourceType -> Maybe Text -> Maybe Text -> Maybe DataLakePrincipal -> Maybe Resource -> Maybe Natural -> ListPermissions

-- | Specifies a resource type to filter the permissions returned.
[$sel:resourceType:ListPermissions'] :: ListPermissions -> Maybe DataLakeResourceType

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:ListPermissions'] :: ListPermissions -> Maybe Text

-- | A continuation token, if this is not the first call to retrieve this
--   list.
[$sel:nextToken:ListPermissions'] :: ListPermissions -> Maybe Text

-- | Specifies a principal to filter the permissions returned.
[$sel:principal:ListPermissions'] :: ListPermissions -> Maybe DataLakePrincipal

-- | A resource where you will get a list of the principal permissions.
--   
--   This operation does not support getting privileges on a table with
--   columns. Instead, call this operation on the table, and the operation
--   returns the table and the table w columns.
[$sel:resource:ListPermissions'] :: ListPermissions -> Maybe Resource

-- | The maximum number of results to return.
[$sel:maxResults:ListPermissions'] :: ListPermissions -> Maybe Natural

-- | Create a value of <a>ListPermissions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ListPermissions'</a>,
--   <a>listPermissions_resourceType</a> - Specifies a resource type to
--   filter the permissions returned.
--   
--   <a>$sel:catalogId:ListPermissions'</a>,
--   <a>listPermissions_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:nextToken:ListPermissions'</a>,
--   <a>listPermissions_nextToken</a> - A continuation token, if this is
--   not the first call to retrieve this list.
--   
--   <a>$sel:principal:ListPermissions'</a>,
--   <a>listPermissions_principal</a> - Specifies a principal to filter the
--   permissions returned.
--   
--   <a>$sel:resource:ListPermissions'</a>, <a>listPermissions_resource</a>
--   - A resource where you will get a list of the principal permissions.
--   
--   This operation does not support getting privileges on a table with
--   columns. Instead, call this operation on the table, and the operation
--   returns the table and the table w columns.
--   
--   <a>$sel:maxResults:ListPermissions'</a>,
--   <a>listPermissions_maxResults</a> - The maximum number of results to
--   return.
newListPermissions :: ListPermissions

-- | Specifies a resource type to filter the permissions returned.
listPermissions_resourceType :: Lens' ListPermissions (Maybe DataLakeResourceType)

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
listPermissions_catalogId :: Lens' ListPermissions (Maybe Text)

-- | A continuation token, if this is not the first call to retrieve this
--   list.
listPermissions_nextToken :: Lens' ListPermissions (Maybe Text)

-- | Specifies a principal to filter the permissions returned.
listPermissions_principal :: Lens' ListPermissions (Maybe DataLakePrincipal)

-- | A resource where you will get a list of the principal permissions.
--   
--   This operation does not support getting privileges on a table with
--   columns. Instead, call this operation on the table, and the operation
--   returns the table and the table w columns.
listPermissions_resource :: Lens' ListPermissions (Maybe Resource)

-- | The maximum number of results to return.
listPermissions_maxResults :: Lens' ListPermissions (Maybe Natural)

-- | <i>See:</i> <a>newListPermissionsResponse</a> smart constructor.
data ListPermissionsResponse
ListPermissionsResponse' :: Maybe Text -> Maybe [PrincipalResourcePermissions] -> Int -> ListPermissionsResponse

-- | A continuation token, if this is not the first call to retrieve this
--   list.
[$sel:nextToken:ListPermissionsResponse'] :: ListPermissionsResponse -> Maybe Text

-- | A list of principals and their permissions on the resource for the
--   specified principal and resource types.
[$sel:principalResourcePermissions:ListPermissionsResponse'] :: ListPermissionsResponse -> Maybe [PrincipalResourcePermissions]

-- | The response's http status code.
[$sel:httpStatus:ListPermissionsResponse'] :: ListPermissionsResponse -> Int

-- | Create a value of <a>ListPermissionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPermissions'</a>,
--   <a>listPermissionsResponse_nextToken</a> - A continuation token, if
--   this is not the first call to retrieve this list.
--   
--   <a>$sel:principalResourcePermissions:ListPermissionsResponse'</a>,
--   <a>listPermissionsResponse_principalResourcePermissions</a> - A list
--   of principals and their permissions on the resource for the specified
--   principal and resource types.
--   
--   <a>$sel:httpStatus:ListPermissionsResponse'</a>,
--   <a>listPermissionsResponse_httpStatus</a> - The response's http status
--   code.
newListPermissionsResponse :: Int -> ListPermissionsResponse

-- | A continuation token, if this is not the first call to retrieve this
--   list.
listPermissionsResponse_nextToken :: Lens' ListPermissionsResponse (Maybe Text)

-- | A list of principals and their permissions on the resource for the
--   specified principal and resource types.
listPermissionsResponse_principalResourcePermissions :: Lens' ListPermissionsResponse (Maybe [PrincipalResourcePermissions])

-- | The response's http status code.
listPermissionsResponse_httpStatus :: Lens' ListPermissionsResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.ListPermissions.ListPermissions
instance GHC.Show.Show Network.AWS.LakeFormation.ListPermissions.ListPermissions
instance GHC.Read.Read Network.AWS.LakeFormation.ListPermissions.ListPermissions
instance GHC.Classes.Eq Network.AWS.LakeFormation.ListPermissions.ListPermissions
instance GHC.Generics.Generic Network.AWS.LakeFormation.ListPermissions.ListPermissionsResponse
instance GHC.Show.Show Network.AWS.LakeFormation.ListPermissions.ListPermissionsResponse
instance GHC.Read.Read Network.AWS.LakeFormation.ListPermissions.ListPermissionsResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.ListPermissions.ListPermissionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.ListPermissions.ListPermissions
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.ListPermissions.ListPermissionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.ListPermissions.ListPermissions
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.ListPermissions.ListPermissions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.ListPermissions.ListPermissions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.ListPermissions.ListPermissions
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.ListPermissions.ListPermissions
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.ListPermissions.ListPermissions


-- | Lists tags that the requester has permission to view.
module Network.AWS.LakeFormation.ListLFTags

-- | <i>See:</i> <a>newListLFTags</a> smart constructor.
data ListLFTags
ListLFTags' :: Maybe ResourceShareType -> Maybe Text -> Maybe Text -> Maybe Natural -> ListLFTags

-- | If resource share type is <tt>ALL</tt>, returns both in-account tags
--   and shared tags that the requester has permission to view. If resource
--   share type is <tt>FOREIGN</tt>, returns all share tags that the
--   requester can view. If no resource share type is passed, lists tags in
--   the given catalog ID that the requester has permission to view.
[$sel:resourceShareType:ListLFTags'] :: ListLFTags -> Maybe ResourceShareType

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:ListLFTags'] :: ListLFTags -> Maybe Text

-- | A continuation token, if this is not the first call to retrieve this
--   list.
[$sel:nextToken:ListLFTags'] :: ListLFTags -> Maybe Text

-- | The maximum number of results to return.
[$sel:maxResults:ListLFTags'] :: ListLFTags -> Maybe Natural

-- | Create a value of <a>ListLFTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceShareType:ListLFTags'</a>,
--   <a>listLFTags_resourceShareType</a> - If resource share type is
--   <tt>ALL</tt>, returns both in-account tags and shared tags that the
--   requester has permission to view. If resource share type is
--   <tt>FOREIGN</tt>, returns all share tags that the requester can view.
--   If no resource share type is passed, lists tags in the given catalog
--   ID that the requester has permission to view.
--   
--   <a>$sel:catalogId:ListLFTags'</a>, <a>listLFTags_catalogId</a> - The
--   identifier for the Data Catalog. By default, the account ID. The Data
--   Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
--   
--   <a>$sel:nextToken:ListLFTags'</a>, <a>listLFTags_nextToken</a> - A
--   continuation token, if this is not the first call to retrieve this
--   list.
--   
--   <a>$sel:maxResults:ListLFTags'</a>, <a>listLFTags_maxResults</a> - The
--   maximum number of results to return.
newListLFTags :: ListLFTags

-- | If resource share type is <tt>ALL</tt>, returns both in-account tags
--   and shared tags that the requester has permission to view. If resource
--   share type is <tt>FOREIGN</tt>, returns all share tags that the
--   requester can view. If no resource share type is passed, lists tags in
--   the given catalog ID that the requester has permission to view.
listLFTags_resourceShareType :: Lens' ListLFTags (Maybe ResourceShareType)

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
listLFTags_catalogId :: Lens' ListLFTags (Maybe Text)

-- | A continuation token, if this is not the first call to retrieve this
--   list.
listLFTags_nextToken :: Lens' ListLFTags (Maybe Text)

-- | The maximum number of results to return.
listLFTags_maxResults :: Lens' ListLFTags (Maybe Natural)

-- | <i>See:</i> <a>newListLFTagsResponse</a> smart constructor.
data ListLFTagsResponse
ListLFTagsResponse' :: Maybe Text -> Maybe (NonEmpty LFTagPair) -> Int -> ListLFTagsResponse

-- | A continuation token, present if the current list segment is not the
--   last.
[$sel:nextToken:ListLFTagsResponse'] :: ListLFTagsResponse -> Maybe Text

-- | A list of tags that the requested has permission to view.
[$sel:lFTags:ListLFTagsResponse'] :: ListLFTagsResponse -> Maybe (NonEmpty LFTagPair)

-- | The response's http status code.
[$sel:httpStatus:ListLFTagsResponse'] :: ListLFTagsResponse -> Int

-- | Create a value of <a>ListLFTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLFTags'</a>, <a>listLFTagsResponse_nextToken</a>
--   - A continuation token, present if the current list segment is not the
--   last.
--   
--   <a>$sel:lFTags:ListLFTagsResponse'</a>,
--   <a>listLFTagsResponse_lFTags</a> - A list of tags that the requested
--   has permission to view.
--   
--   <a>$sel:httpStatus:ListLFTagsResponse'</a>,
--   <a>listLFTagsResponse_httpStatus</a> - The response's http status
--   code.
newListLFTagsResponse :: Int -> ListLFTagsResponse

-- | A continuation token, present if the current list segment is not the
--   last.
listLFTagsResponse_nextToken :: Lens' ListLFTagsResponse (Maybe Text)

-- | A list of tags that the requested has permission to view.
listLFTagsResponse_lFTags :: Lens' ListLFTagsResponse (Maybe (NonEmpty LFTagPair))

-- | The response's http status code.
listLFTagsResponse_httpStatus :: Lens' ListLFTagsResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.ListLFTags.ListLFTags
instance GHC.Show.Show Network.AWS.LakeFormation.ListLFTags.ListLFTags
instance GHC.Read.Read Network.AWS.LakeFormation.ListLFTags.ListLFTags
instance GHC.Classes.Eq Network.AWS.LakeFormation.ListLFTags.ListLFTags
instance GHC.Generics.Generic Network.AWS.LakeFormation.ListLFTags.ListLFTagsResponse
instance GHC.Show.Show Network.AWS.LakeFormation.ListLFTags.ListLFTagsResponse
instance GHC.Read.Read Network.AWS.LakeFormation.ListLFTags.ListLFTagsResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.ListLFTags.ListLFTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.ListLFTags.ListLFTags
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.ListLFTags.ListLFTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.ListLFTags.ListLFTags
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.ListLFTags.ListLFTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.ListLFTags.ListLFTags
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.ListLFTags.ListLFTags
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.ListLFTags.ListLFTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.ListLFTags.ListLFTags


-- | Grants permissions to the principal to access metadata in the Data
--   Catalog and data organized in underlying data storage such as Amazon
--   S3.
--   
--   For information about permissions, see <a>Security and Access Control
--   to Metadata and Data</a>.
module Network.AWS.LakeFormation.GrantPermissions

-- | <i>See:</i> <a>newGrantPermissions</a> smart constructor.
data GrantPermissions
GrantPermissions' :: Maybe Text -> Maybe [Permission] -> DataLakePrincipal -> Resource -> [Permission] -> GrantPermissions

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:GrantPermissions'] :: GrantPermissions -> Maybe Text

-- | Indicates a list of the granted permissions that the principal may
--   pass to other users. These permissions may only be a subset of the
--   permissions granted in the <tt>Privileges</tt>.
[$sel:permissionsWithGrantOption:GrantPermissions'] :: GrantPermissions -> Maybe [Permission]

-- | The principal to be granted the permissions on the resource. Supported
--   principals are IAM users or IAM roles, and they are defined by their
--   principal type and their ARN.
--   
--   Note that if you define a resource with a particular ARN, then later
--   delete, and recreate a resource with that same ARN, the resource
--   maintains the permissions already granted.
[$sel:principal:GrantPermissions'] :: GrantPermissions -> DataLakePrincipal

-- | The resource to which permissions are to be granted. Resources in AWS
--   Lake Formation are the Data Catalog, databases, and tables.
[$sel:resource:GrantPermissions'] :: GrantPermissions -> Resource

-- | The permissions granted to the principal on the resource. AWS Lake
--   Formation defines privileges to grant and revoke access to metadata in
--   the Data Catalog and data organized in underlying data storage such as
--   Amazon S3. AWS Lake Formation requires that each principal be
--   authorized to perform a specific task on AWS Lake Formation resources.
[$sel:permissions:GrantPermissions'] :: GrantPermissions -> [Permission]

-- | Create a value of <a>GrantPermissions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GrantPermissions'</a>,
--   <a>grantPermissions_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:permissionsWithGrantOption:GrantPermissions'</a>,
--   <a>grantPermissions_permissionsWithGrantOption</a> - Indicates a list
--   of the granted permissions that the principal may pass to other users.
--   These permissions may only be a subset of the permissions granted in
--   the <tt>Privileges</tt>.
--   
--   <a>$sel:principal:GrantPermissions'</a>,
--   <a>grantPermissions_principal</a> - The principal to be granted the
--   permissions on the resource. Supported principals are IAM users or IAM
--   roles, and they are defined by their principal type and their ARN.
--   
--   Note that if you define a resource with a particular ARN, then later
--   delete, and recreate a resource with that same ARN, the resource
--   maintains the permissions already granted.
--   
--   <a>$sel:resource:GrantPermissions'</a>,
--   <a>grantPermissions_resource</a> - The resource to which permissions
--   are to be granted. Resources in AWS Lake Formation are the Data
--   Catalog, databases, and tables.
--   
--   <a>$sel:permissions:GrantPermissions'</a>,
--   <a>grantPermissions_permissions</a> - The permissions granted to the
--   principal on the resource. AWS Lake Formation defines privileges to
--   grant and revoke access to metadata in the Data Catalog and data
--   organized in underlying data storage such as Amazon S3. AWS Lake
--   Formation requires that each principal be authorized to perform a
--   specific task on AWS Lake Formation resources.
newGrantPermissions :: DataLakePrincipal -> Resource -> GrantPermissions

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
grantPermissions_catalogId :: Lens' GrantPermissions (Maybe Text)

-- | Indicates a list of the granted permissions that the principal may
--   pass to other users. These permissions may only be a subset of the
--   permissions granted in the <tt>Privileges</tt>.
grantPermissions_permissionsWithGrantOption :: Lens' GrantPermissions (Maybe [Permission])

-- | The principal to be granted the permissions on the resource. Supported
--   principals are IAM users or IAM roles, and they are defined by their
--   principal type and their ARN.
--   
--   Note that if you define a resource with a particular ARN, then later
--   delete, and recreate a resource with that same ARN, the resource
--   maintains the permissions already granted.
grantPermissions_principal :: Lens' GrantPermissions DataLakePrincipal

-- | The resource to which permissions are to be granted. Resources in AWS
--   Lake Formation are the Data Catalog, databases, and tables.
grantPermissions_resource :: Lens' GrantPermissions Resource

-- | The permissions granted to the principal on the resource. AWS Lake
--   Formation defines privileges to grant and revoke access to metadata in
--   the Data Catalog and data organized in underlying data storage such as
--   Amazon S3. AWS Lake Formation requires that each principal be
--   authorized to perform a specific task on AWS Lake Formation resources.
grantPermissions_permissions :: Lens' GrantPermissions [Permission]

-- | <i>See:</i> <a>newGrantPermissionsResponse</a> smart constructor.
data GrantPermissionsResponse
GrantPermissionsResponse' :: Int -> GrantPermissionsResponse

-- | The response's http status code.
[$sel:httpStatus:GrantPermissionsResponse'] :: GrantPermissionsResponse -> Int

-- | Create a value of <a>GrantPermissionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GrantPermissionsResponse'</a>,
--   <a>grantPermissionsResponse_httpStatus</a> - The response's http
--   status code.
newGrantPermissionsResponse :: Int -> GrantPermissionsResponse

-- | The response's http status code.
grantPermissionsResponse_httpStatus :: Lens' GrantPermissionsResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.GrantPermissions.GrantPermissions
instance GHC.Show.Show Network.AWS.LakeFormation.GrantPermissions.GrantPermissions
instance GHC.Read.Read Network.AWS.LakeFormation.GrantPermissions.GrantPermissions
instance GHC.Classes.Eq Network.AWS.LakeFormation.GrantPermissions.GrantPermissions
instance GHC.Generics.Generic Network.AWS.LakeFormation.GrantPermissions.GrantPermissionsResponse
instance GHC.Show.Show Network.AWS.LakeFormation.GrantPermissions.GrantPermissionsResponse
instance GHC.Read.Read Network.AWS.LakeFormation.GrantPermissions.GrantPermissionsResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.GrantPermissions.GrantPermissionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.GrantPermissions.GrantPermissions
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.GrantPermissions.GrantPermissionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.GrantPermissions.GrantPermissions
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.GrantPermissions.GrantPermissions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.GrantPermissions.GrantPermissions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.GrantPermissions.GrantPermissions
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.GrantPermissions.GrantPermissions
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.GrantPermissions.GrantPermissions


-- | Returns the tags applied to a resource.
module Network.AWS.LakeFormation.GetResourceLFTags

-- | <i>See:</i> <a>newGetResourceLFTags</a> smart constructor.
data GetResourceLFTags
GetResourceLFTags' :: Maybe Bool -> Maybe Text -> Resource -> GetResourceLFTags

-- | Indicates whether to show the assigned tags.
[$sel:showAssignedLFTags:GetResourceLFTags'] :: GetResourceLFTags -> Maybe Bool

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:GetResourceLFTags'] :: GetResourceLFTags -> Maybe Text

-- | The resource for which you want to return tags.
[$sel:resource:GetResourceLFTags'] :: GetResourceLFTags -> Resource

-- | Create a value of <a>GetResourceLFTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:showAssignedLFTags:GetResourceLFTags'</a>,
--   <a>getResourceLFTags_showAssignedLFTags</a> - Indicates whether to
--   show the assigned tags.
--   
--   <a>$sel:catalogId:GetResourceLFTags'</a>,
--   <a>getResourceLFTags_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:resource:GetResourceLFTags'</a>,
--   <a>getResourceLFTags_resource</a> - The resource for which you want to
--   return tags.
newGetResourceLFTags :: Resource -> GetResourceLFTags

-- | Indicates whether to show the assigned tags.
getResourceLFTags_showAssignedLFTags :: Lens' GetResourceLFTags (Maybe Bool)

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
getResourceLFTags_catalogId :: Lens' GetResourceLFTags (Maybe Text)

-- | The resource for which you want to return tags.
getResourceLFTags_resource :: Lens' GetResourceLFTags Resource

-- | <i>See:</i> <a>newGetResourceLFTagsResponse</a> smart constructor.
data GetResourceLFTagsResponse
GetResourceLFTagsResponse' :: Maybe (NonEmpty LFTagPair) -> Maybe (NonEmpty LFTagPair) -> Maybe [ColumnLFTag] -> Int -> GetResourceLFTagsResponse

-- | A list of tags applied to a table resource.
[$sel:lFTagsOnTable:GetResourceLFTagsResponse'] :: GetResourceLFTagsResponse -> Maybe (NonEmpty LFTagPair)

-- | A list of tags applied to a database resource.
[$sel:lFTagOnDatabase:GetResourceLFTagsResponse'] :: GetResourceLFTagsResponse -> Maybe (NonEmpty LFTagPair)

-- | A list of tags applied to a column resource.
[$sel:lFTagsOnColumns:GetResourceLFTagsResponse'] :: GetResourceLFTagsResponse -> Maybe [ColumnLFTag]

-- | The response's http status code.
[$sel:httpStatus:GetResourceLFTagsResponse'] :: GetResourceLFTagsResponse -> Int

-- | Create a value of <a>GetResourceLFTagsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lFTagsOnTable:GetResourceLFTagsResponse'</a>,
--   <a>getResourceLFTagsResponse_lFTagsOnTable</a> - A list of tags
--   applied to a table resource.
--   
--   <a>$sel:lFTagOnDatabase:GetResourceLFTagsResponse'</a>,
--   <a>getResourceLFTagsResponse_lFTagOnDatabase</a> - A list of tags
--   applied to a database resource.
--   
--   <a>$sel:lFTagsOnColumns:GetResourceLFTagsResponse'</a>,
--   <a>getResourceLFTagsResponse_lFTagsOnColumns</a> - A list of tags
--   applied to a column resource.
--   
--   <a>$sel:httpStatus:GetResourceLFTagsResponse'</a>,
--   <a>getResourceLFTagsResponse_httpStatus</a> - The response's http
--   status code.
newGetResourceLFTagsResponse :: Int -> GetResourceLFTagsResponse

-- | A list of tags applied to a table resource.
getResourceLFTagsResponse_lFTagsOnTable :: Lens' GetResourceLFTagsResponse (Maybe (NonEmpty LFTagPair))

-- | A list of tags applied to a database resource.
getResourceLFTagsResponse_lFTagOnDatabase :: Lens' GetResourceLFTagsResponse (Maybe (NonEmpty LFTagPair))

-- | A list of tags applied to a column resource.
getResourceLFTagsResponse_lFTagsOnColumns :: Lens' GetResourceLFTagsResponse (Maybe [ColumnLFTag])

-- | The response's http status code.
getResourceLFTagsResponse_httpStatus :: Lens' GetResourceLFTagsResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.GetResourceLFTags.GetResourceLFTags
instance GHC.Show.Show Network.AWS.LakeFormation.GetResourceLFTags.GetResourceLFTags
instance GHC.Read.Read Network.AWS.LakeFormation.GetResourceLFTags.GetResourceLFTags
instance GHC.Classes.Eq Network.AWS.LakeFormation.GetResourceLFTags.GetResourceLFTags
instance GHC.Generics.Generic Network.AWS.LakeFormation.GetResourceLFTags.GetResourceLFTagsResponse
instance GHC.Show.Show Network.AWS.LakeFormation.GetResourceLFTags.GetResourceLFTagsResponse
instance GHC.Read.Read Network.AWS.LakeFormation.GetResourceLFTags.GetResourceLFTagsResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.GetResourceLFTags.GetResourceLFTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.GetResourceLFTags.GetResourceLFTags
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.GetResourceLFTags.GetResourceLFTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.GetResourceLFTags.GetResourceLFTags
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.GetResourceLFTags.GetResourceLFTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.GetResourceLFTags.GetResourceLFTags
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.GetResourceLFTags.GetResourceLFTags
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.GetResourceLFTags.GetResourceLFTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.GetResourceLFTags.GetResourceLFTags


-- | Returns a tag definition.
module Network.AWS.LakeFormation.GetLFTag

-- | <i>See:</i> <a>newGetLFTag</a> smart constructor.
data GetLFTag
GetLFTag' :: Maybe Text -> Text -> GetLFTag

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:GetLFTag'] :: GetLFTag -> Maybe Text

-- | The key-name for the tag.
[$sel:tagKey:GetLFTag'] :: GetLFTag -> Text

-- | Create a value of <a>GetLFTag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetLFTag'</a>, <a>getLFTag_catalogId</a> - The
--   identifier for the Data Catalog. By default, the account ID. The Data
--   Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
--   
--   <a>$sel:tagKey:GetLFTag'</a>, <a>getLFTag_tagKey</a> - The key-name
--   for the tag.
newGetLFTag :: Text -> GetLFTag

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
getLFTag_catalogId :: Lens' GetLFTag (Maybe Text)

-- | The key-name for the tag.
getLFTag_tagKey :: Lens' GetLFTag Text

-- | <i>See:</i> <a>newGetLFTagResponse</a> smart constructor.
data GetLFTagResponse
GetLFTagResponse' :: Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Int -> GetLFTagResponse

-- | A list of possible values an attribute can take.
[$sel:tagValues:GetLFTagResponse'] :: GetLFTagResponse -> Maybe (NonEmpty Text)

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:GetLFTagResponse'] :: GetLFTagResponse -> Maybe Text

-- | The key-name for the tag.
[$sel:tagKey:GetLFTagResponse'] :: GetLFTagResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetLFTagResponse'] :: GetLFTagResponse -> Int

-- | Create a value of <a>GetLFTagResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagValues:GetLFTagResponse'</a>,
--   <a>getLFTagResponse_tagValues</a> - A list of possible values an
--   attribute can take.
--   
--   <a>$sel:catalogId:GetLFTag'</a>, <a>getLFTagResponse_catalogId</a> -
--   The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
--   
--   <a>$sel:tagKey:GetLFTag'</a>, <a>getLFTagResponse_tagKey</a> - The
--   key-name for the tag.
--   
--   <a>$sel:httpStatus:GetLFTagResponse'</a>,
--   <a>getLFTagResponse_httpStatus</a> - The response's http status code.
newGetLFTagResponse :: Int -> GetLFTagResponse

-- | A list of possible values an attribute can take.
getLFTagResponse_tagValues :: Lens' GetLFTagResponse (Maybe (NonEmpty Text))

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
getLFTagResponse_catalogId :: Lens' GetLFTagResponse (Maybe Text)

-- | The key-name for the tag.
getLFTagResponse_tagKey :: Lens' GetLFTagResponse (Maybe Text)

-- | The response's http status code.
getLFTagResponse_httpStatus :: Lens' GetLFTagResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.GetLFTag.GetLFTag
instance GHC.Show.Show Network.AWS.LakeFormation.GetLFTag.GetLFTag
instance GHC.Read.Read Network.AWS.LakeFormation.GetLFTag.GetLFTag
instance GHC.Classes.Eq Network.AWS.LakeFormation.GetLFTag.GetLFTag
instance GHC.Generics.Generic Network.AWS.LakeFormation.GetLFTag.GetLFTagResponse
instance GHC.Show.Show Network.AWS.LakeFormation.GetLFTag.GetLFTagResponse
instance GHC.Read.Read Network.AWS.LakeFormation.GetLFTag.GetLFTagResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.GetLFTag.GetLFTagResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.GetLFTag.GetLFTag
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.GetLFTag.GetLFTagResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.GetLFTag.GetLFTag
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.GetLFTag.GetLFTag
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.GetLFTag.GetLFTag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.GetLFTag.GetLFTag
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.GetLFTag.GetLFTag
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.GetLFTag.GetLFTag


-- | Returns the Lake Formation permissions for a specified table or
--   database resource located at a path in Amazon S3.
--   <tt>GetEffectivePermissionsForPath</tt> will not return databases and
--   tables if the catalog is encrypted.
module Network.AWS.LakeFormation.GetEffectivePermissionsForPath

-- | <i>See:</i> <a>newGetEffectivePermissionsForPath</a> smart
--   constructor.
data GetEffectivePermissionsForPath
GetEffectivePermissionsForPath' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> GetEffectivePermissionsForPath

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:GetEffectivePermissionsForPath'] :: GetEffectivePermissionsForPath -> Maybe Text

-- | A continuation token, if this is not the first call to retrieve this
--   list.
[$sel:nextToken:GetEffectivePermissionsForPath'] :: GetEffectivePermissionsForPath -> Maybe Text

-- | The maximum number of results to return.
[$sel:maxResults:GetEffectivePermissionsForPath'] :: GetEffectivePermissionsForPath -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the resource for which you want to
--   get permissions.
[$sel:resourceArn:GetEffectivePermissionsForPath'] :: GetEffectivePermissionsForPath -> Text

-- | Create a value of <a>GetEffectivePermissionsForPath</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetEffectivePermissionsForPath'</a>,
--   <a>getEffectivePermissionsForPath_catalogId</a> - The identifier for
--   the Data Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:nextToken:GetEffectivePermissionsForPath'</a>,
--   <a>getEffectivePermissionsForPath_nextToken</a> - A continuation
--   token, if this is not the first call to retrieve this list.
--   
--   <a>$sel:maxResults:GetEffectivePermissionsForPath'</a>,
--   <a>getEffectivePermissionsForPath_maxResults</a> - The maximum number
--   of results to return.
--   
--   <a>$sel:resourceArn:GetEffectivePermissionsForPath'</a>,
--   <a>getEffectivePermissionsForPath_resourceArn</a> - The Amazon
--   Resource Name (ARN) of the resource for which you want to get
--   permissions.
newGetEffectivePermissionsForPath :: Text -> GetEffectivePermissionsForPath

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
getEffectivePermissionsForPath_catalogId :: Lens' GetEffectivePermissionsForPath (Maybe Text)

-- | A continuation token, if this is not the first call to retrieve this
--   list.
getEffectivePermissionsForPath_nextToken :: Lens' GetEffectivePermissionsForPath (Maybe Text)

-- | The maximum number of results to return.
getEffectivePermissionsForPath_maxResults :: Lens' GetEffectivePermissionsForPath (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the resource for which you want to
--   get permissions.
getEffectivePermissionsForPath_resourceArn :: Lens' GetEffectivePermissionsForPath Text

-- | <i>See:</i> <a>newGetEffectivePermissionsForPathResponse</a> smart
--   constructor.
data GetEffectivePermissionsForPathResponse
GetEffectivePermissionsForPathResponse' :: Maybe Text -> Maybe [PrincipalResourcePermissions] -> Int -> GetEffectivePermissionsForPathResponse

-- | A continuation token, if this is not the first call to retrieve this
--   list.
[$sel:nextToken:GetEffectivePermissionsForPathResponse'] :: GetEffectivePermissionsForPathResponse -> Maybe Text

-- | A list of the permissions for the specified table or database resource
--   located at the path in Amazon S3.
[$sel:permissions:GetEffectivePermissionsForPathResponse'] :: GetEffectivePermissionsForPathResponse -> Maybe [PrincipalResourcePermissions]

-- | The response's http status code.
[$sel:httpStatus:GetEffectivePermissionsForPathResponse'] :: GetEffectivePermissionsForPathResponse -> Int

-- | Create a value of <a>GetEffectivePermissionsForPathResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetEffectivePermissionsForPath'</a>,
--   <a>getEffectivePermissionsForPathResponse_nextToken</a> - A
--   continuation token, if this is not the first call to retrieve this
--   list.
--   
--   <a>$sel:permissions:GetEffectivePermissionsForPathResponse'</a>,
--   <a>getEffectivePermissionsForPathResponse_permissions</a> - A list of
--   the permissions for the specified table or database resource located
--   at the path in Amazon S3.
--   
--   <a>$sel:httpStatus:GetEffectivePermissionsForPathResponse'</a>,
--   <a>getEffectivePermissionsForPathResponse_httpStatus</a> - The
--   response's http status code.
newGetEffectivePermissionsForPathResponse :: Int -> GetEffectivePermissionsForPathResponse

-- | A continuation token, if this is not the first call to retrieve this
--   list.
getEffectivePermissionsForPathResponse_nextToken :: Lens' GetEffectivePermissionsForPathResponse (Maybe Text)

-- | A list of the permissions for the specified table or database resource
--   located at the path in Amazon S3.
getEffectivePermissionsForPathResponse_permissions :: Lens' GetEffectivePermissionsForPathResponse (Maybe [PrincipalResourcePermissions])

-- | The response's http status code.
getEffectivePermissionsForPathResponse_httpStatus :: Lens' GetEffectivePermissionsForPathResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.GetEffectivePermissionsForPath.GetEffectivePermissionsForPath
instance GHC.Show.Show Network.AWS.LakeFormation.GetEffectivePermissionsForPath.GetEffectivePermissionsForPath
instance GHC.Read.Read Network.AWS.LakeFormation.GetEffectivePermissionsForPath.GetEffectivePermissionsForPath
instance GHC.Classes.Eq Network.AWS.LakeFormation.GetEffectivePermissionsForPath.GetEffectivePermissionsForPath
instance GHC.Generics.Generic Network.AWS.LakeFormation.GetEffectivePermissionsForPath.GetEffectivePermissionsForPathResponse
instance GHC.Show.Show Network.AWS.LakeFormation.GetEffectivePermissionsForPath.GetEffectivePermissionsForPathResponse
instance GHC.Read.Read Network.AWS.LakeFormation.GetEffectivePermissionsForPath.GetEffectivePermissionsForPathResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.GetEffectivePermissionsForPath.GetEffectivePermissionsForPathResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.GetEffectivePermissionsForPath.GetEffectivePermissionsForPath
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.GetEffectivePermissionsForPath.GetEffectivePermissionsForPathResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.GetEffectivePermissionsForPath.GetEffectivePermissionsForPath
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.GetEffectivePermissionsForPath.GetEffectivePermissionsForPath
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.GetEffectivePermissionsForPath.GetEffectivePermissionsForPath
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.GetEffectivePermissionsForPath.GetEffectivePermissionsForPath
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.GetEffectivePermissionsForPath.GetEffectivePermissionsForPath
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.GetEffectivePermissionsForPath.GetEffectivePermissionsForPath


-- | Retrieves the list of the data lake administrators of a Lake
--   Formation-managed data lake.
module Network.AWS.LakeFormation.GetDataLakeSettings

-- | <i>See:</i> <a>newGetDataLakeSettings</a> smart constructor.
data GetDataLakeSettings
GetDataLakeSettings' :: Maybe Text -> GetDataLakeSettings

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:GetDataLakeSettings'] :: GetDataLakeSettings -> Maybe Text

-- | Create a value of <a>GetDataLakeSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetDataLakeSettings'</a>,
--   <a>getDataLakeSettings_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
newGetDataLakeSettings :: GetDataLakeSettings

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
getDataLakeSettings_catalogId :: Lens' GetDataLakeSettings (Maybe Text)

-- | <i>See:</i> <a>newGetDataLakeSettingsResponse</a> smart constructor.
data GetDataLakeSettingsResponse
GetDataLakeSettingsResponse' :: Maybe DataLakeSettings -> Int -> GetDataLakeSettingsResponse

-- | A structure representing a list of AWS Lake Formation principals
--   designated as data lake administrators.
[$sel:dataLakeSettings:GetDataLakeSettingsResponse'] :: GetDataLakeSettingsResponse -> Maybe DataLakeSettings

-- | The response's http status code.
[$sel:httpStatus:GetDataLakeSettingsResponse'] :: GetDataLakeSettingsResponse -> Int

-- | Create a value of <a>GetDataLakeSettingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLakeSettings:GetDataLakeSettingsResponse'</a>,
--   <a>getDataLakeSettingsResponse_dataLakeSettings</a> - A structure
--   representing a list of AWS Lake Formation principals designated as
--   data lake administrators.
--   
--   <a>$sel:httpStatus:GetDataLakeSettingsResponse'</a>,
--   <a>getDataLakeSettingsResponse_httpStatus</a> - The response's http
--   status code.
newGetDataLakeSettingsResponse :: Int -> GetDataLakeSettingsResponse

-- | A structure representing a list of AWS Lake Formation principals
--   designated as data lake administrators.
getDataLakeSettingsResponse_dataLakeSettings :: Lens' GetDataLakeSettingsResponse (Maybe DataLakeSettings)

-- | The response's http status code.
getDataLakeSettingsResponse_httpStatus :: Lens' GetDataLakeSettingsResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.GetDataLakeSettings.GetDataLakeSettings
instance GHC.Show.Show Network.AWS.LakeFormation.GetDataLakeSettings.GetDataLakeSettings
instance GHC.Read.Read Network.AWS.LakeFormation.GetDataLakeSettings.GetDataLakeSettings
instance GHC.Classes.Eq Network.AWS.LakeFormation.GetDataLakeSettings.GetDataLakeSettings
instance GHC.Generics.Generic Network.AWS.LakeFormation.GetDataLakeSettings.GetDataLakeSettingsResponse
instance GHC.Show.Show Network.AWS.LakeFormation.GetDataLakeSettings.GetDataLakeSettingsResponse
instance GHC.Read.Read Network.AWS.LakeFormation.GetDataLakeSettings.GetDataLakeSettingsResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.GetDataLakeSettings.GetDataLakeSettingsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.GetDataLakeSettings.GetDataLakeSettings
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.GetDataLakeSettings.GetDataLakeSettingsResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.GetDataLakeSettings.GetDataLakeSettings
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.GetDataLakeSettings.GetDataLakeSettings
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.GetDataLakeSettings.GetDataLakeSettings
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.GetDataLakeSettings.GetDataLakeSettings
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.GetDataLakeSettings.GetDataLakeSettings
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.GetDataLakeSettings.GetDataLakeSettings


-- | Retrieves the current data access role for the given resource
--   registered in AWS Lake Formation.
module Network.AWS.LakeFormation.DescribeResource

-- | <i>See:</i> <a>newDescribeResource</a> smart constructor.
data DescribeResource
DescribeResource' :: Text -> DescribeResource

-- | The resource ARN.
[$sel:resourceArn:DescribeResource'] :: DescribeResource -> Text

-- | Create a value of <a>DescribeResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:DescribeResource'</a>,
--   <a>describeResource_resourceArn</a> - The resource ARN.
newDescribeResource :: Text -> DescribeResource

-- | The resource ARN.
describeResource_resourceArn :: Lens' DescribeResource Text

-- | <i>See:</i> <a>newDescribeResourceResponse</a> smart constructor.
data DescribeResourceResponse
DescribeResourceResponse' :: Maybe ResourceInfo -> Int -> DescribeResourceResponse

-- | A structure containing information about an AWS Lake Formation
--   resource.
[$sel:resourceInfo:DescribeResourceResponse'] :: DescribeResourceResponse -> Maybe ResourceInfo

-- | The response's http status code.
[$sel:httpStatus:DescribeResourceResponse'] :: DescribeResourceResponse -> Int

-- | Create a value of <a>DescribeResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceInfo:DescribeResourceResponse'</a>,
--   <a>describeResourceResponse_resourceInfo</a> - A structure containing
--   information about an AWS Lake Formation resource.
--   
--   <a>$sel:httpStatus:DescribeResourceResponse'</a>,
--   <a>describeResourceResponse_httpStatus</a> - The response's http
--   status code.
newDescribeResourceResponse :: Int -> DescribeResourceResponse

-- | A structure containing information about an AWS Lake Formation
--   resource.
describeResourceResponse_resourceInfo :: Lens' DescribeResourceResponse (Maybe ResourceInfo)

-- | The response's http status code.
describeResourceResponse_httpStatus :: Lens' DescribeResourceResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.DescribeResource.DescribeResource
instance GHC.Show.Show Network.AWS.LakeFormation.DescribeResource.DescribeResource
instance GHC.Read.Read Network.AWS.LakeFormation.DescribeResource.DescribeResource
instance GHC.Classes.Eq Network.AWS.LakeFormation.DescribeResource.DescribeResource
instance GHC.Generics.Generic Network.AWS.LakeFormation.DescribeResource.DescribeResourceResponse
instance GHC.Show.Show Network.AWS.LakeFormation.DescribeResource.DescribeResourceResponse
instance GHC.Read.Read Network.AWS.LakeFormation.DescribeResource.DescribeResourceResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.DescribeResource.DescribeResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.DescribeResource.DescribeResource
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.DescribeResource.DescribeResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.DescribeResource.DescribeResource
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.DescribeResource.DescribeResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.DescribeResource.DescribeResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.DescribeResource.DescribeResource
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.DescribeResource.DescribeResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.DescribeResource.DescribeResource


-- | Deregisters the resource as managed by the Data Catalog.
--   
--   When you deregister a path, Lake Formation removes the path from the
--   inline policy attached to your service-linked role.
module Network.AWS.LakeFormation.DeregisterResource

-- | <i>See:</i> <a>newDeregisterResource</a> smart constructor.
data DeregisterResource
DeregisterResource' :: Text -> DeregisterResource

-- | The Amazon Resource Name (ARN) of the resource that you want to
--   deregister.
[$sel:resourceArn:DeregisterResource'] :: DeregisterResource -> Text

-- | Create a value of <a>DeregisterResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:DeregisterResource'</a>,
--   <a>deregisterResource_resourceArn</a> - The Amazon Resource Name (ARN)
--   of the resource that you want to deregister.
newDeregisterResource :: Text -> DeregisterResource

-- | The Amazon Resource Name (ARN) of the resource that you want to
--   deregister.
deregisterResource_resourceArn :: Lens' DeregisterResource Text

-- | <i>See:</i> <a>newDeregisterResourceResponse</a> smart constructor.
data DeregisterResourceResponse
DeregisterResourceResponse' :: Int -> DeregisterResourceResponse

-- | The response's http status code.
[$sel:httpStatus:DeregisterResourceResponse'] :: DeregisterResourceResponse -> Int

-- | Create a value of <a>DeregisterResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeregisterResourceResponse'</a>,
--   <a>deregisterResourceResponse_httpStatus</a> - The response's http
--   status code.
newDeregisterResourceResponse :: Int -> DeregisterResourceResponse

-- | The response's http status code.
deregisterResourceResponse_httpStatus :: Lens' DeregisterResourceResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.DeregisterResource.DeregisterResource
instance GHC.Show.Show Network.AWS.LakeFormation.DeregisterResource.DeregisterResource
instance GHC.Read.Read Network.AWS.LakeFormation.DeregisterResource.DeregisterResource
instance GHC.Classes.Eq Network.AWS.LakeFormation.DeregisterResource.DeregisterResource
instance GHC.Generics.Generic Network.AWS.LakeFormation.DeregisterResource.DeregisterResourceResponse
instance GHC.Show.Show Network.AWS.LakeFormation.DeregisterResource.DeregisterResourceResponse
instance GHC.Read.Read Network.AWS.LakeFormation.DeregisterResource.DeregisterResourceResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.DeregisterResource.DeregisterResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.DeregisterResource.DeregisterResource
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.DeregisterResource.DeregisterResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.DeregisterResource.DeregisterResource
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.DeregisterResource.DeregisterResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.DeregisterResource.DeregisterResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.DeregisterResource.DeregisterResource
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.DeregisterResource.DeregisterResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.DeregisterResource.DeregisterResource


-- | Deletes the specified tag key name. If the attribute key does not
--   exist or the tag does not exist, then the operation will not do
--   anything. If the attribute key exists, then the operation checks if
--   any resources are tagged with this attribute key, if yes, the API
--   throws a 400 Exception with the message "Delete not allowed" as the
--   tag key is still attached with resources. You can consider untagging
--   resources with this tag key.
module Network.AWS.LakeFormation.DeleteLFTag

-- | <i>See:</i> <a>newDeleteLFTag</a> smart constructor.
data DeleteLFTag
DeleteLFTag' :: Maybe Text -> Text -> DeleteLFTag

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:DeleteLFTag'] :: DeleteLFTag -> Maybe Text

-- | The key-name for the tag to delete.
[$sel:tagKey:DeleteLFTag'] :: DeleteLFTag -> Text

-- | Create a value of <a>DeleteLFTag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DeleteLFTag'</a>, <a>deleteLFTag_catalogId</a> - The
--   identifier for the Data Catalog. By default, the account ID. The Data
--   Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
--   
--   <a>$sel:tagKey:DeleteLFTag'</a>, <a>deleteLFTag_tagKey</a> - The
--   key-name for the tag to delete.
newDeleteLFTag :: Text -> DeleteLFTag

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
deleteLFTag_catalogId :: Lens' DeleteLFTag (Maybe Text)

-- | The key-name for the tag to delete.
deleteLFTag_tagKey :: Lens' DeleteLFTag Text

-- | <i>See:</i> <a>newDeleteLFTagResponse</a> smart constructor.
data DeleteLFTagResponse
DeleteLFTagResponse' :: Int -> DeleteLFTagResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteLFTagResponse'] :: DeleteLFTagResponse -> Int

-- | Create a value of <a>DeleteLFTagResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteLFTagResponse'</a>,
--   <a>deleteLFTagResponse_httpStatus</a> - The response's http status
--   code.
newDeleteLFTagResponse :: Int -> DeleteLFTagResponse

-- | The response's http status code.
deleteLFTagResponse_httpStatus :: Lens' DeleteLFTagResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.DeleteLFTag.DeleteLFTag
instance GHC.Show.Show Network.AWS.LakeFormation.DeleteLFTag.DeleteLFTag
instance GHC.Read.Read Network.AWS.LakeFormation.DeleteLFTag.DeleteLFTag
instance GHC.Classes.Eq Network.AWS.LakeFormation.DeleteLFTag.DeleteLFTag
instance GHC.Generics.Generic Network.AWS.LakeFormation.DeleteLFTag.DeleteLFTagResponse
instance GHC.Show.Show Network.AWS.LakeFormation.DeleteLFTag.DeleteLFTagResponse
instance GHC.Read.Read Network.AWS.LakeFormation.DeleteLFTag.DeleteLFTagResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.DeleteLFTag.DeleteLFTagResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.DeleteLFTag.DeleteLFTag
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.DeleteLFTag.DeleteLFTagResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.DeleteLFTag.DeleteLFTag
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.DeleteLFTag.DeleteLFTag
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.DeleteLFTag.DeleteLFTag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.DeleteLFTag.DeleteLFTag
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.DeleteLFTag.DeleteLFTag
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.DeleteLFTag.DeleteLFTag


-- | Creates a tag with the specified name and values.
module Network.AWS.LakeFormation.CreateLFTag

-- | <i>See:</i> <a>newCreateLFTag</a> smart constructor.
data CreateLFTag
CreateLFTag' :: Maybe Text -> Text -> NonEmpty Text -> CreateLFTag

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:CreateLFTag'] :: CreateLFTag -> Maybe Text

-- | The key-name for the tag.
[$sel:tagKey:CreateLFTag'] :: CreateLFTag -> Text

-- | A list of possible values an attribute can take.
[$sel:tagValues:CreateLFTag'] :: CreateLFTag -> NonEmpty Text

-- | Create a value of <a>CreateLFTag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:CreateLFTag'</a>, <a>createLFTag_catalogId</a> - The
--   identifier for the Data Catalog. By default, the account ID. The Data
--   Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
--   
--   <a>$sel:tagKey:CreateLFTag'</a>, <a>createLFTag_tagKey</a> - The
--   key-name for the tag.
--   
--   <a>$sel:tagValues:CreateLFTag'</a>, <a>createLFTag_tagValues</a> - A
--   list of possible values an attribute can take.
newCreateLFTag :: Text -> NonEmpty Text -> CreateLFTag

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
createLFTag_catalogId :: Lens' CreateLFTag (Maybe Text)

-- | The key-name for the tag.
createLFTag_tagKey :: Lens' CreateLFTag Text

-- | A list of possible values an attribute can take.
createLFTag_tagValues :: Lens' CreateLFTag (NonEmpty Text)

-- | <i>See:</i> <a>newCreateLFTagResponse</a> smart constructor.
data CreateLFTagResponse
CreateLFTagResponse' :: Int -> CreateLFTagResponse

-- | The response's http status code.
[$sel:httpStatus:CreateLFTagResponse'] :: CreateLFTagResponse -> Int

-- | Create a value of <a>CreateLFTagResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateLFTagResponse'</a>,
--   <a>createLFTagResponse_httpStatus</a> - The response's http status
--   code.
newCreateLFTagResponse :: Int -> CreateLFTagResponse

-- | The response's http status code.
createLFTagResponse_httpStatus :: Lens' CreateLFTagResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.CreateLFTag.CreateLFTag
instance GHC.Show.Show Network.AWS.LakeFormation.CreateLFTag.CreateLFTag
instance GHC.Read.Read Network.AWS.LakeFormation.CreateLFTag.CreateLFTag
instance GHC.Classes.Eq Network.AWS.LakeFormation.CreateLFTag.CreateLFTag
instance GHC.Generics.Generic Network.AWS.LakeFormation.CreateLFTag.CreateLFTagResponse
instance GHC.Show.Show Network.AWS.LakeFormation.CreateLFTag.CreateLFTagResponse
instance GHC.Read.Read Network.AWS.LakeFormation.CreateLFTag.CreateLFTagResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.CreateLFTag.CreateLFTagResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.CreateLFTag.CreateLFTag
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.CreateLFTag.CreateLFTagResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.CreateLFTag.CreateLFTag
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.CreateLFTag.CreateLFTag
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.CreateLFTag.CreateLFTag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.CreateLFTag.CreateLFTag
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.CreateLFTag.CreateLFTag
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.CreateLFTag.CreateLFTag


-- | Batch operation to revoke permissions from the principal.
module Network.AWS.LakeFormation.BatchRevokePermissions

-- | <i>See:</i> <a>newBatchRevokePermissions</a> smart constructor.
data BatchRevokePermissions
BatchRevokePermissions' :: Maybe Text -> [BatchPermissionsRequestEntry] -> BatchRevokePermissions

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:BatchRevokePermissions'] :: BatchRevokePermissions -> Maybe Text

-- | A list of up to 20 entries for resource permissions to be revoked by
--   batch operation to the principal.
[$sel:entries:BatchRevokePermissions'] :: BatchRevokePermissions -> [BatchPermissionsRequestEntry]

-- | Create a value of <a>BatchRevokePermissions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:BatchRevokePermissions'</a>,
--   <a>batchRevokePermissions_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:entries:BatchRevokePermissions'</a>,
--   <a>batchRevokePermissions_entries</a> - A list of up to 20 entries for
--   resource permissions to be revoked by batch operation to the
--   principal.
newBatchRevokePermissions :: BatchRevokePermissions

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
batchRevokePermissions_catalogId :: Lens' BatchRevokePermissions (Maybe Text)

-- | A list of up to 20 entries for resource permissions to be revoked by
--   batch operation to the principal.
batchRevokePermissions_entries :: Lens' BatchRevokePermissions [BatchPermissionsRequestEntry]

-- | <i>See:</i> <a>newBatchRevokePermissionsResponse</a> smart
--   constructor.
data BatchRevokePermissionsResponse
BatchRevokePermissionsResponse' :: Maybe [BatchPermissionsFailureEntry] -> Int -> BatchRevokePermissionsResponse

-- | A list of failures to revoke permissions to the resources.
[$sel:failures:BatchRevokePermissionsResponse'] :: BatchRevokePermissionsResponse -> Maybe [BatchPermissionsFailureEntry]

-- | The response's http status code.
[$sel:httpStatus:BatchRevokePermissionsResponse'] :: BatchRevokePermissionsResponse -> Int

-- | Create a value of <a>BatchRevokePermissionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failures:BatchRevokePermissionsResponse'</a>,
--   <a>batchRevokePermissionsResponse_failures</a> - A list of failures to
--   revoke permissions to the resources.
--   
--   <a>$sel:httpStatus:BatchRevokePermissionsResponse'</a>,
--   <a>batchRevokePermissionsResponse_httpStatus</a> - The response's http
--   status code.
newBatchRevokePermissionsResponse :: Int -> BatchRevokePermissionsResponse

-- | A list of failures to revoke permissions to the resources.
batchRevokePermissionsResponse_failures :: Lens' BatchRevokePermissionsResponse (Maybe [BatchPermissionsFailureEntry])

-- | The response's http status code.
batchRevokePermissionsResponse_httpStatus :: Lens' BatchRevokePermissionsResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.BatchRevokePermissions.BatchRevokePermissions
instance GHC.Show.Show Network.AWS.LakeFormation.BatchRevokePermissions.BatchRevokePermissions
instance GHC.Read.Read Network.AWS.LakeFormation.BatchRevokePermissions.BatchRevokePermissions
instance GHC.Classes.Eq Network.AWS.LakeFormation.BatchRevokePermissions.BatchRevokePermissions
instance GHC.Generics.Generic Network.AWS.LakeFormation.BatchRevokePermissions.BatchRevokePermissionsResponse
instance GHC.Show.Show Network.AWS.LakeFormation.BatchRevokePermissions.BatchRevokePermissionsResponse
instance GHC.Read.Read Network.AWS.LakeFormation.BatchRevokePermissions.BatchRevokePermissionsResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.BatchRevokePermissions.BatchRevokePermissionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.BatchRevokePermissions.BatchRevokePermissions
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.BatchRevokePermissions.BatchRevokePermissionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.BatchRevokePermissions.BatchRevokePermissions
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.BatchRevokePermissions.BatchRevokePermissions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.BatchRevokePermissions.BatchRevokePermissions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.BatchRevokePermissions.BatchRevokePermissions
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.BatchRevokePermissions.BatchRevokePermissions
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.BatchRevokePermissions.BatchRevokePermissions


-- | Batch operation to grant permissions to the principal.
module Network.AWS.LakeFormation.BatchGrantPermissions

-- | <i>See:</i> <a>newBatchGrantPermissions</a> smart constructor.
data BatchGrantPermissions
BatchGrantPermissions' :: Maybe Text -> [BatchPermissionsRequestEntry] -> BatchGrantPermissions

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:BatchGrantPermissions'] :: BatchGrantPermissions -> Maybe Text

-- | A list of up to 20 entries for resource permissions to be granted by
--   batch operation to the principal.
[$sel:entries:BatchGrantPermissions'] :: BatchGrantPermissions -> [BatchPermissionsRequestEntry]

-- | Create a value of <a>BatchGrantPermissions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:BatchGrantPermissions'</a>,
--   <a>batchGrantPermissions_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:entries:BatchGrantPermissions'</a>,
--   <a>batchGrantPermissions_entries</a> - A list of up to 20 entries for
--   resource permissions to be granted by batch operation to the
--   principal.
newBatchGrantPermissions :: BatchGrantPermissions

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
batchGrantPermissions_catalogId :: Lens' BatchGrantPermissions (Maybe Text)

-- | A list of up to 20 entries for resource permissions to be granted by
--   batch operation to the principal.
batchGrantPermissions_entries :: Lens' BatchGrantPermissions [BatchPermissionsRequestEntry]

-- | <i>See:</i> <a>newBatchGrantPermissionsResponse</a> smart constructor.
data BatchGrantPermissionsResponse
BatchGrantPermissionsResponse' :: Maybe [BatchPermissionsFailureEntry] -> Int -> BatchGrantPermissionsResponse

-- | A list of failures to grant permissions to the resources.
[$sel:failures:BatchGrantPermissionsResponse'] :: BatchGrantPermissionsResponse -> Maybe [BatchPermissionsFailureEntry]

-- | The response's http status code.
[$sel:httpStatus:BatchGrantPermissionsResponse'] :: BatchGrantPermissionsResponse -> Int

-- | Create a value of <a>BatchGrantPermissionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failures:BatchGrantPermissionsResponse'</a>,
--   <a>batchGrantPermissionsResponse_failures</a> - A list of failures to
--   grant permissions to the resources.
--   
--   <a>$sel:httpStatus:BatchGrantPermissionsResponse'</a>,
--   <a>batchGrantPermissionsResponse_httpStatus</a> - The response's http
--   status code.
newBatchGrantPermissionsResponse :: Int -> BatchGrantPermissionsResponse

-- | A list of failures to grant permissions to the resources.
batchGrantPermissionsResponse_failures :: Lens' BatchGrantPermissionsResponse (Maybe [BatchPermissionsFailureEntry])

-- | The response's http status code.
batchGrantPermissionsResponse_httpStatus :: Lens' BatchGrantPermissionsResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.BatchGrantPermissions.BatchGrantPermissions
instance GHC.Show.Show Network.AWS.LakeFormation.BatchGrantPermissions.BatchGrantPermissions
instance GHC.Read.Read Network.AWS.LakeFormation.BatchGrantPermissions.BatchGrantPermissions
instance GHC.Classes.Eq Network.AWS.LakeFormation.BatchGrantPermissions.BatchGrantPermissions
instance GHC.Generics.Generic Network.AWS.LakeFormation.BatchGrantPermissions.BatchGrantPermissionsResponse
instance GHC.Show.Show Network.AWS.LakeFormation.BatchGrantPermissions.BatchGrantPermissionsResponse
instance GHC.Read.Read Network.AWS.LakeFormation.BatchGrantPermissions.BatchGrantPermissionsResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.BatchGrantPermissions.BatchGrantPermissionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.BatchGrantPermissions.BatchGrantPermissions
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.BatchGrantPermissions.BatchGrantPermissionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.BatchGrantPermissions.BatchGrantPermissions
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.BatchGrantPermissions.BatchGrantPermissions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.BatchGrantPermissions.BatchGrantPermissions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.BatchGrantPermissions.BatchGrantPermissions
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.BatchGrantPermissions.BatchGrantPermissions
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.BatchGrantPermissions.BatchGrantPermissions


-- | Attaches one or more tags to an existing resource.
module Network.AWS.LakeFormation.AddLFTagsToResource

-- | <i>See:</i> <a>newAddLFTagsToResource</a> smart constructor.
data AddLFTagsToResource
AddLFTagsToResource' :: Maybe Text -> Resource -> NonEmpty LFTagPair -> AddLFTagsToResource

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:AddLFTagsToResource'] :: AddLFTagsToResource -> Maybe Text

-- | The resource to which to attach a tag.
[$sel:resource:AddLFTagsToResource'] :: AddLFTagsToResource -> Resource

-- | The tags to attach to the resource.
[$sel:lFTags:AddLFTagsToResource'] :: AddLFTagsToResource -> NonEmpty LFTagPair

-- | Create a value of <a>AddLFTagsToResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:AddLFTagsToResource'</a>,
--   <a>addLFTagsToResource_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:resource:AddLFTagsToResource'</a>,
--   <a>addLFTagsToResource_resource</a> - The resource to which to attach
--   a tag.
--   
--   <a>$sel:lFTags:AddLFTagsToResource'</a>,
--   <a>addLFTagsToResource_lFTags</a> - The tags to attach to the
--   resource.
newAddLFTagsToResource :: Resource -> NonEmpty LFTagPair -> AddLFTagsToResource

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
addLFTagsToResource_catalogId :: Lens' AddLFTagsToResource (Maybe Text)

-- | The resource to which to attach a tag.
addLFTagsToResource_resource :: Lens' AddLFTagsToResource Resource

-- | The tags to attach to the resource.
addLFTagsToResource_lFTags :: Lens' AddLFTagsToResource (NonEmpty LFTagPair)

-- | <i>See:</i> <a>newAddLFTagsToResourceResponse</a> smart constructor.
data AddLFTagsToResourceResponse
AddLFTagsToResourceResponse' :: Maybe [LFTagError] -> Int -> AddLFTagsToResourceResponse

-- | A list of failures to tag the resource.
[$sel:failures:AddLFTagsToResourceResponse'] :: AddLFTagsToResourceResponse -> Maybe [LFTagError]

-- | The response's http status code.
[$sel:httpStatus:AddLFTagsToResourceResponse'] :: AddLFTagsToResourceResponse -> Int

-- | Create a value of <a>AddLFTagsToResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failures:AddLFTagsToResourceResponse'</a>,
--   <a>addLFTagsToResourceResponse_failures</a> - A list of failures to
--   tag the resource.
--   
--   <a>$sel:httpStatus:AddLFTagsToResourceResponse'</a>,
--   <a>addLFTagsToResourceResponse_httpStatus</a> - The response's http
--   status code.
newAddLFTagsToResourceResponse :: Int -> AddLFTagsToResourceResponse

-- | A list of failures to tag the resource.
addLFTagsToResourceResponse_failures :: Lens' AddLFTagsToResourceResponse (Maybe [LFTagError])

-- | The response's http status code.
addLFTagsToResourceResponse_httpStatus :: Lens' AddLFTagsToResourceResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.AddLFTagsToResource.AddLFTagsToResource
instance GHC.Show.Show Network.AWS.LakeFormation.AddLFTagsToResource.AddLFTagsToResource
instance GHC.Read.Read Network.AWS.LakeFormation.AddLFTagsToResource.AddLFTagsToResource
instance GHC.Classes.Eq Network.AWS.LakeFormation.AddLFTagsToResource.AddLFTagsToResource
instance GHC.Generics.Generic Network.AWS.LakeFormation.AddLFTagsToResource.AddLFTagsToResourceResponse
instance GHC.Show.Show Network.AWS.LakeFormation.AddLFTagsToResource.AddLFTagsToResourceResponse
instance GHC.Read.Read Network.AWS.LakeFormation.AddLFTagsToResource.AddLFTagsToResourceResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.AddLFTagsToResource.AddLFTagsToResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.AddLFTagsToResource.AddLFTagsToResource
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.AddLFTagsToResource.AddLFTagsToResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.AddLFTagsToResource.AddLFTagsToResource
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.AddLFTagsToResource.AddLFTagsToResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.AddLFTagsToResource.AddLFTagsToResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.AddLFTagsToResource.AddLFTagsToResource
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.AddLFTagsToResource.AddLFTagsToResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.AddLFTagsToResource.AddLFTagsToResource


-- | Updates the list of possible values for the specified tag key. If the
--   tag does not exist, the operation throws an EntityNotFoundException.
--   The values in the delete key values will be deleted from list of
--   possible values. If any value in the delete key values is attached to
--   a resource, then API errors out with a 400 Exception - "Update not
--   allowed". Untag the attribute before deleting the tag key's value.
module Network.AWS.LakeFormation.UpdateLFTag

-- | <i>See:</i> <a>newUpdateLFTag</a> smart constructor.
data UpdateLFTag
UpdateLFTag' :: Maybe Text -> Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Text -> UpdateLFTag

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
[$sel:catalogId:UpdateLFTag'] :: UpdateLFTag -> Maybe Text

-- | A list of tag values to add from the tag.
[$sel:tagValuesToAdd:UpdateLFTag'] :: UpdateLFTag -> Maybe (NonEmpty Text)

-- | A list of tag values to delete from the tag.
[$sel:tagValuesToDelete:UpdateLFTag'] :: UpdateLFTag -> Maybe (NonEmpty Text)

-- | The key-name for the tag for which to add or delete values.
[$sel:tagKey:UpdateLFTag'] :: UpdateLFTag -> Text

-- | Create a value of <a>UpdateLFTag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:UpdateLFTag'</a>, <a>updateLFTag_catalogId</a> - The
--   identifier for the Data Catalog. By default, the account ID. The Data
--   Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
--   
--   <a>$sel:tagValuesToAdd:UpdateLFTag'</a>,
--   <a>updateLFTag_tagValuesToAdd</a> - A list of tag values to add from
--   the tag.
--   
--   <a>$sel:tagValuesToDelete:UpdateLFTag'</a>,
--   <a>updateLFTag_tagValuesToDelete</a> - A list of tag values to delete
--   from the tag.
--   
--   <a>$sel:tagKey:UpdateLFTag'</a>, <a>updateLFTag_tagKey</a> - The
--   key-name for the tag for which to add or delete values.
newUpdateLFTag :: Text -> UpdateLFTag

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
updateLFTag_catalogId :: Lens' UpdateLFTag (Maybe Text)

-- | A list of tag values to add from the tag.
updateLFTag_tagValuesToAdd :: Lens' UpdateLFTag (Maybe (NonEmpty Text))

-- | A list of tag values to delete from the tag.
updateLFTag_tagValuesToDelete :: Lens' UpdateLFTag (Maybe (NonEmpty Text))

-- | The key-name for the tag for which to add or delete values.
updateLFTag_tagKey :: Lens' UpdateLFTag Text

-- | <i>See:</i> <a>newUpdateLFTagResponse</a> smart constructor.
data UpdateLFTagResponse
UpdateLFTagResponse' :: Int -> UpdateLFTagResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateLFTagResponse'] :: UpdateLFTagResponse -> Int

-- | Create a value of <a>UpdateLFTagResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateLFTagResponse'</a>,
--   <a>updateLFTagResponse_httpStatus</a> - The response's http status
--   code.
newUpdateLFTagResponse :: Int -> UpdateLFTagResponse

-- | The response's http status code.
updateLFTagResponse_httpStatus :: Lens' UpdateLFTagResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.UpdateLFTag.UpdateLFTag
instance GHC.Show.Show Network.AWS.LakeFormation.UpdateLFTag.UpdateLFTag
instance GHC.Read.Read Network.AWS.LakeFormation.UpdateLFTag.UpdateLFTag
instance GHC.Classes.Eq Network.AWS.LakeFormation.UpdateLFTag.UpdateLFTag
instance GHC.Generics.Generic Network.AWS.LakeFormation.UpdateLFTag.UpdateLFTagResponse
instance GHC.Show.Show Network.AWS.LakeFormation.UpdateLFTag.UpdateLFTagResponse
instance GHC.Read.Read Network.AWS.LakeFormation.UpdateLFTag.UpdateLFTagResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.UpdateLFTag.UpdateLFTagResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.UpdateLFTag.UpdateLFTag
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.UpdateLFTag.UpdateLFTagResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.UpdateLFTag.UpdateLFTag
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.UpdateLFTag.UpdateLFTag
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.UpdateLFTag.UpdateLFTag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.UpdateLFTag.UpdateLFTag
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.UpdateLFTag.UpdateLFTag
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.UpdateLFTag.UpdateLFTag


-- | Updates the data access role used for vending access to the given
--   (registered) resource in AWS Lake Formation.
module Network.AWS.LakeFormation.UpdateResource

-- | <i>See:</i> <a>newUpdateResource</a> smart constructor.
data UpdateResource
UpdateResource' :: Text -> Text -> UpdateResource

-- | The new role to use for the given resource registered in AWS Lake
--   Formation.
[$sel:roleArn:UpdateResource'] :: UpdateResource -> Text

-- | The resource ARN.
[$sel:resourceArn:UpdateResource'] :: UpdateResource -> Text

-- | Create a value of <a>UpdateResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleArn:UpdateResource'</a>, <a>updateResource_roleArn</a> -
--   The new role to use for the given resource registered in AWS Lake
--   Formation.
--   
--   <a>$sel:resourceArn:UpdateResource'</a>,
--   <a>updateResource_resourceArn</a> - The resource ARN.
newUpdateResource :: Text -> Text -> UpdateResource

-- | The new role to use for the given resource registered in AWS Lake
--   Formation.
updateResource_roleArn :: Lens' UpdateResource Text

-- | The resource ARN.
updateResource_resourceArn :: Lens' UpdateResource Text

-- | <i>See:</i> <a>newUpdateResourceResponse</a> smart constructor.
data UpdateResourceResponse
UpdateResourceResponse' :: Int -> UpdateResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateResourceResponse'] :: UpdateResourceResponse -> Int

-- | Create a value of <a>UpdateResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateResourceResponse'</a>,
--   <a>updateResourceResponse_httpStatus</a> - The response's http status
--   code.
newUpdateResourceResponse :: Int -> UpdateResourceResponse

-- | The response's http status code.
updateResourceResponse_httpStatus :: Lens' UpdateResourceResponse Int
instance GHC.Generics.Generic Network.AWS.LakeFormation.UpdateResource.UpdateResource
instance GHC.Show.Show Network.AWS.LakeFormation.UpdateResource.UpdateResource
instance GHC.Read.Read Network.AWS.LakeFormation.UpdateResource.UpdateResource
instance GHC.Classes.Eq Network.AWS.LakeFormation.UpdateResource.UpdateResource
instance GHC.Generics.Generic Network.AWS.LakeFormation.UpdateResource.UpdateResourceResponse
instance GHC.Show.Show Network.AWS.LakeFormation.UpdateResource.UpdateResourceResponse
instance GHC.Read.Read Network.AWS.LakeFormation.UpdateResource.UpdateResourceResponse
instance GHC.Classes.Eq Network.AWS.LakeFormation.UpdateResource.UpdateResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LakeFormation.UpdateResource.UpdateResource
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.UpdateResource.UpdateResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.LakeFormation.UpdateResource.UpdateResource
instance Control.DeepSeq.NFData Network.AWS.LakeFormation.UpdateResource.UpdateResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LakeFormation.UpdateResource.UpdateResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LakeFormation.UpdateResource.UpdateResource
instance Network.AWS.Data.Path.ToPath Network.AWS.LakeFormation.UpdateResource.UpdateResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.LakeFormation.UpdateResource.UpdateResource


module Network.AWS.LakeFormation.Lens

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
batchRevokePermissions_catalogId :: Lens' BatchRevokePermissions (Maybe Text)

-- | A list of up to 20 entries for resource permissions to be revoked by
--   batch operation to the principal.
batchRevokePermissions_entries :: Lens' BatchRevokePermissions [BatchPermissionsRequestEntry]

-- | A list of failures to revoke permissions to the resources.
batchRevokePermissionsResponse_failures :: Lens' BatchRevokePermissionsResponse (Maybe [BatchPermissionsFailureEntry])

-- | The response's http status code.
batchRevokePermissionsResponse_httpStatus :: Lens' BatchRevokePermissionsResponse Int

-- | The resource ARN.
describeResource_resourceArn :: Lens' DescribeResource Text

-- | A structure containing information about an AWS Lake Formation
--   resource.
describeResourceResponse_resourceInfo :: Lens' DescribeResourceResponse (Maybe ResourceInfo)

-- | The response's http status code.
describeResourceResponse_httpStatus :: Lens' DescribeResourceResponse Int

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
batchGrantPermissions_catalogId :: Lens' BatchGrantPermissions (Maybe Text)

-- | A list of up to 20 entries for resource permissions to be granted by
--   batch operation to the principal.
batchGrantPermissions_entries :: Lens' BatchGrantPermissions [BatchPermissionsRequestEntry]

-- | A list of failures to grant permissions to the resources.
batchGrantPermissionsResponse_failures :: Lens' BatchGrantPermissionsResponse (Maybe [BatchPermissionsFailureEntry])

-- | The response's http status code.
batchGrantPermissionsResponse_httpStatus :: Lens' BatchGrantPermissionsResponse Int

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
getEffectivePermissionsForPath_catalogId :: Lens' GetEffectivePermissionsForPath (Maybe Text)

-- | A continuation token, if this is not the first call to retrieve this
--   list.
getEffectivePermissionsForPath_nextToken :: Lens' GetEffectivePermissionsForPath (Maybe Text)

-- | The maximum number of results to return.
getEffectivePermissionsForPath_maxResults :: Lens' GetEffectivePermissionsForPath (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the resource for which you want to
--   get permissions.
getEffectivePermissionsForPath_resourceArn :: Lens' GetEffectivePermissionsForPath Text

-- | A continuation token, if this is not the first call to retrieve this
--   list.
getEffectivePermissionsForPathResponse_nextToken :: Lens' GetEffectivePermissionsForPathResponse (Maybe Text)

-- | A list of the permissions for the specified table or database resource
--   located at the path in Amazon S3.
getEffectivePermissionsForPathResponse_permissions :: Lens' GetEffectivePermissionsForPathResponse (Maybe [PrincipalResourcePermissions])

-- | The response's http status code.
getEffectivePermissionsForPathResponse_httpStatus :: Lens' GetEffectivePermissionsForPathResponse Int

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
revokePermissions_catalogId :: Lens' RevokePermissions (Maybe Text)

-- | Indicates a list of permissions for which to revoke the grant option
--   allowing the principal to pass permissions to other principals.
revokePermissions_permissionsWithGrantOption :: Lens' RevokePermissions (Maybe [Permission])

-- | The principal to be revoked permissions on the resource.
revokePermissions_principal :: Lens' RevokePermissions DataLakePrincipal

-- | The resource to which permissions are to be revoked.
revokePermissions_resource :: Lens' RevokePermissions Resource

-- | The permissions revoked to the principal on the resource. For
--   information about permissions, see <a>Security and Access Control to
--   Metadata and Data</a>.
revokePermissions_permissions :: Lens' RevokePermissions [Permission]

-- | The response's http status code.
revokePermissionsResponse_httpStatus :: Lens' RevokePermissionsResponse Int

-- | The new role to use for the given resource registered in AWS Lake
--   Formation.
updateResource_roleArn :: Lens' UpdateResource Text

-- | The resource ARN.
updateResource_resourceArn :: Lens' UpdateResource Text

-- | The response's http status code.
updateResourceResponse_httpStatus :: Lens' UpdateResourceResponse Int

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
addLFTagsToResource_catalogId :: Lens' AddLFTagsToResource (Maybe Text)

-- | The resource to which to attach a tag.
addLFTagsToResource_resource :: Lens' AddLFTagsToResource Resource

-- | The tags to attach to the resource.
addLFTagsToResource_lFTags :: Lens' AddLFTagsToResource (NonEmpty LFTagPair)

-- | A list of failures to tag the resource.
addLFTagsToResourceResponse_failures :: Lens' AddLFTagsToResourceResponse (Maybe [LFTagError])

-- | The response's http status code.
addLFTagsToResourceResponse_httpStatus :: Lens' AddLFTagsToResourceResponse Int

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
searchTablesByLFTags_catalogId :: Lens' SearchTablesByLFTags (Maybe Text)

-- | A continuation token, if this is not the first call to retrieve this
--   list.
searchTablesByLFTags_nextToken :: Lens' SearchTablesByLFTags (Maybe Text)

-- | The maximum number of results to return.
searchTablesByLFTags_maxResults :: Lens' SearchTablesByLFTags (Maybe Natural)

-- | A list of conditions (<tt>LFTag</tt> structures) to search for in
--   table resources.
searchTablesByLFTags_expression :: Lens' SearchTablesByLFTags (NonEmpty LFTag)

-- | A list of tables that meet the tag conditions.
searchTablesByLFTagsResponse_tableList :: Lens' SearchTablesByLFTagsResponse (Maybe [TaggedTable])

-- | A continuation token, present if the current list segment is not the
--   last.
searchTablesByLFTagsResponse_nextToken :: Lens' SearchTablesByLFTagsResponse (Maybe Text)

-- | The response's http status code.
searchTablesByLFTagsResponse_httpStatus :: Lens' SearchTablesByLFTagsResponse Int

-- | Any applicable row-level and/or column-level filtering conditions for
--   the resources.
listResources_filterConditionList :: Lens' ListResources (Maybe (NonEmpty FilterCondition))

-- | A continuation token, if this is not the first call to retrieve these
--   resources.
listResources_nextToken :: Lens' ListResources (Maybe Text)

-- | The maximum number of resource results.
listResources_maxResults :: Lens' ListResources (Maybe Natural)

-- | A summary of the data lake resources.
listResourcesResponse_resourceInfoList :: Lens' ListResourcesResponse (Maybe [ResourceInfo])

-- | A continuation token, if this is not the first call to retrieve these
--   resources.
listResourcesResponse_nextToken :: Lens' ListResourcesResponse (Maybe Text)

-- | The response's http status code.
listResourcesResponse_httpStatus :: Lens' ListResourcesResponse Int

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
getLFTag_catalogId :: Lens' GetLFTag (Maybe Text)

-- | The key-name for the tag.
getLFTag_tagKey :: Lens' GetLFTag Text

-- | A list of possible values an attribute can take.
getLFTagResponse_tagValues :: Lens' GetLFTagResponse (Maybe (NonEmpty Text))

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
getLFTagResponse_catalogId :: Lens' GetLFTagResponse (Maybe Text)

-- | The key-name for the tag.
getLFTagResponse_tagKey :: Lens' GetLFTagResponse (Maybe Text)

-- | The response's http status code.
getLFTagResponse_httpStatus :: Lens' GetLFTagResponse Int

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
removeLFTagsFromResource_catalogId :: Lens' RemoveLFTagsFromResource (Maybe Text)

-- | The resource where you want to remove a tag.
removeLFTagsFromResource_resource :: Lens' RemoveLFTagsFromResource Resource

-- | The tags to be removed from the resource.
removeLFTagsFromResource_lFTags :: Lens' RemoveLFTagsFromResource (NonEmpty LFTagPair)

-- | A list of failures to untag a resource.
removeLFTagsFromResourceResponse_failures :: Lens' RemoveLFTagsFromResourceResponse (Maybe [LFTagError])

-- | The response's http status code.
removeLFTagsFromResourceResponse_httpStatus :: Lens' RemoveLFTagsFromResourceResponse Int

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
updateLFTag_catalogId :: Lens' UpdateLFTag (Maybe Text)

-- | A list of tag values to add from the tag.
updateLFTag_tagValuesToAdd :: Lens' UpdateLFTag (Maybe (NonEmpty Text))

-- | A list of tag values to delete from the tag.
updateLFTag_tagValuesToDelete :: Lens' UpdateLFTag (Maybe (NonEmpty Text))

-- | The key-name for the tag for which to add or delete values.
updateLFTag_tagKey :: Lens' UpdateLFTag Text

-- | The response's http status code.
updateLFTagResponse_httpStatus :: Lens' UpdateLFTagResponse Int

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
deleteLFTag_catalogId :: Lens' DeleteLFTag (Maybe Text)

-- | The key-name for the tag to delete.
deleteLFTag_tagKey :: Lens' DeleteLFTag Text

-- | The response's http status code.
deleteLFTagResponse_httpStatus :: Lens' DeleteLFTagResponse Int

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
createLFTag_catalogId :: Lens' CreateLFTag (Maybe Text)

-- | The key-name for the tag.
createLFTag_tagKey :: Lens' CreateLFTag Text

-- | A list of possible values an attribute can take.
createLFTag_tagValues :: Lens' CreateLFTag (NonEmpty Text)

-- | The response's http status code.
createLFTagResponse_httpStatus :: Lens' CreateLFTagResponse Int

-- | Indicates whether to show the assigned tags.
getResourceLFTags_showAssignedLFTags :: Lens' GetResourceLFTags (Maybe Bool)

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
getResourceLFTags_catalogId :: Lens' GetResourceLFTags (Maybe Text)

-- | The resource for which you want to return tags.
getResourceLFTags_resource :: Lens' GetResourceLFTags Resource

-- | A list of tags applied to a table resource.
getResourceLFTagsResponse_lFTagsOnTable :: Lens' GetResourceLFTagsResponse (Maybe (NonEmpty LFTagPair))

-- | A list of tags applied to a database resource.
getResourceLFTagsResponse_lFTagOnDatabase :: Lens' GetResourceLFTagsResponse (Maybe (NonEmpty LFTagPair))

-- | A list of tags applied to a column resource.
getResourceLFTagsResponse_lFTagsOnColumns :: Lens' GetResourceLFTagsResponse (Maybe [ColumnLFTag])

-- | The response's http status code.
getResourceLFTagsResponse_httpStatus :: Lens' GetResourceLFTagsResponse Int

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
putDataLakeSettings_catalogId :: Lens' PutDataLakeSettings (Maybe Text)

-- | A structure representing a list of AWS Lake Formation principals
--   designated as data lake administrators.
putDataLakeSettings_dataLakeSettings :: Lens' PutDataLakeSettings DataLakeSettings

-- | The response's http status code.
putDataLakeSettingsResponse_httpStatus :: Lens' PutDataLakeSettingsResponse Int

-- | Specifies a resource type to filter the permissions returned.
listPermissions_resourceType :: Lens' ListPermissions (Maybe DataLakeResourceType)

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
listPermissions_catalogId :: Lens' ListPermissions (Maybe Text)

-- | A continuation token, if this is not the first call to retrieve this
--   list.
listPermissions_nextToken :: Lens' ListPermissions (Maybe Text)

-- | Specifies a principal to filter the permissions returned.
listPermissions_principal :: Lens' ListPermissions (Maybe DataLakePrincipal)

-- | A resource where you will get a list of the principal permissions.
--   
--   This operation does not support getting privileges on a table with
--   columns. Instead, call this operation on the table, and the operation
--   returns the table and the table w columns.
listPermissions_resource :: Lens' ListPermissions (Maybe Resource)

-- | The maximum number of results to return.
listPermissions_maxResults :: Lens' ListPermissions (Maybe Natural)

-- | A continuation token, if this is not the first call to retrieve this
--   list.
listPermissionsResponse_nextToken :: Lens' ListPermissionsResponse (Maybe Text)

-- | A list of principals and their permissions on the resource for the
--   specified principal and resource types.
listPermissionsResponse_principalResourcePermissions :: Lens' ListPermissionsResponse (Maybe [PrincipalResourcePermissions])

-- | The response's http status code.
listPermissionsResponse_httpStatus :: Lens' ListPermissionsResponse Int

-- | The Amazon Resource Name (ARN) of the resource that you want to
--   deregister.
deregisterResource_resourceArn :: Lens' DeregisterResource Text

-- | The response's http status code.
deregisterResourceResponse_httpStatus :: Lens' DeregisterResourceResponse Int

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
getDataLakeSettings_catalogId :: Lens' GetDataLakeSettings (Maybe Text)

-- | A structure representing a list of AWS Lake Formation principals
--   designated as data lake administrators.
getDataLakeSettingsResponse_dataLakeSettings :: Lens' GetDataLakeSettingsResponse (Maybe DataLakeSettings)

-- | The response's http status code.
getDataLakeSettingsResponse_httpStatus :: Lens' GetDataLakeSettingsResponse Int

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
searchDatabasesByLFTags_catalogId :: Lens' SearchDatabasesByLFTags (Maybe Text)

-- | A continuation token, if this is not the first call to retrieve this
--   list.
searchDatabasesByLFTags_nextToken :: Lens' SearchDatabasesByLFTags (Maybe Text)

-- | The maximum number of results to return.
searchDatabasesByLFTags_maxResults :: Lens' SearchDatabasesByLFTags (Maybe Natural)

-- | A list of conditions (<tt>LFTag</tt> structures) to search for in
--   database resources.
searchDatabasesByLFTags_expression :: Lens' SearchDatabasesByLFTags (NonEmpty LFTag)

-- | A list of databases that meet the tag conditions.
searchDatabasesByLFTagsResponse_databaseList :: Lens' SearchDatabasesByLFTagsResponse (Maybe [TaggedDatabase])

-- | A continuation token, present if the current list segment is not the
--   last.
searchDatabasesByLFTagsResponse_nextToken :: Lens' SearchDatabasesByLFTagsResponse (Maybe Text)

-- | The response's http status code.
searchDatabasesByLFTagsResponse_httpStatus :: Lens' SearchDatabasesByLFTagsResponse Int

-- | Designates an AWS Identity and Access Management (IAM) service-linked
--   role by registering this role with the Data Catalog. A service-linked
--   role is a unique type of IAM role that is linked directly to Lake
--   Formation.
--   
--   For more information, see <a>Using Service-Linked Roles for Lake
--   Formation</a>.
registerResource_useServiceLinkedRole :: Lens' RegisterResource (Maybe Bool)

-- | The identifier for the role that registers the resource.
registerResource_roleArn :: Lens' RegisterResource (Maybe Text)

-- | The Amazon Resource Name (ARN) of the resource that you want to
--   register.
registerResource_resourceArn :: Lens' RegisterResource Text

-- | The response's http status code.
registerResourceResponse_httpStatus :: Lens' RegisterResourceResponse Int

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
grantPermissions_catalogId :: Lens' GrantPermissions (Maybe Text)

-- | Indicates a list of the granted permissions that the principal may
--   pass to other users. These permissions may only be a subset of the
--   permissions granted in the <tt>Privileges</tt>.
grantPermissions_permissionsWithGrantOption :: Lens' GrantPermissions (Maybe [Permission])

-- | The principal to be granted the permissions on the resource. Supported
--   principals are IAM users or IAM roles, and they are defined by their
--   principal type and their ARN.
--   
--   Note that if you define a resource with a particular ARN, then later
--   delete, and recreate a resource with that same ARN, the resource
--   maintains the permissions already granted.
grantPermissions_principal :: Lens' GrantPermissions DataLakePrincipal

-- | The resource to which permissions are to be granted. Resources in AWS
--   Lake Formation are the Data Catalog, databases, and tables.
grantPermissions_resource :: Lens' GrantPermissions Resource

-- | The permissions granted to the principal on the resource. AWS Lake
--   Formation defines privileges to grant and revoke access to metadata in
--   the Data Catalog and data organized in underlying data storage such as
--   Amazon S3. AWS Lake Formation requires that each principal be
--   authorized to perform a specific task on AWS Lake Formation resources.
grantPermissions_permissions :: Lens' GrantPermissions [Permission]

-- | The response's http status code.
grantPermissionsResponse_httpStatus :: Lens' GrantPermissionsResponse Int

-- | If resource share type is <tt>ALL</tt>, returns both in-account tags
--   and shared tags that the requester has permission to view. If resource
--   share type is <tt>FOREIGN</tt>, returns all share tags that the
--   requester can view. If no resource share type is passed, lists tags in
--   the given catalog ID that the requester has permission to view.
listLFTags_resourceShareType :: Lens' ListLFTags (Maybe ResourceShareType)

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
listLFTags_catalogId :: Lens' ListLFTags (Maybe Text)

-- | A continuation token, if this is not the first call to retrieve this
--   list.
listLFTags_nextToken :: Lens' ListLFTags (Maybe Text)

-- | The maximum number of results to return.
listLFTags_maxResults :: Lens' ListLFTags (Maybe Natural)

-- | A continuation token, present if the current list segment is not the
--   last.
listLFTagsResponse_nextToken :: Lens' ListLFTagsResponse (Maybe Text)

-- | A list of tags that the requested has permission to view.
listLFTagsResponse_lFTags :: Lens' ListLFTagsResponse (Maybe (NonEmpty LFTagPair))

-- | The response's http status code.
listLFTagsResponse_httpStatus :: Lens' ListLFTagsResponse Int

-- | An error message that applies to the failure of the entry.
batchPermissionsFailureEntry_error :: Lens' BatchPermissionsFailureEntry (Maybe ErrorDetail)

-- | An identifier for an entry of the batch request.
batchPermissionsFailureEntry_requestEntry :: Lens' BatchPermissionsFailureEntry (Maybe BatchPermissionsRequestEntry)

-- | Indicates if the option to pass permissions is granted.
batchPermissionsRequestEntry_permissionsWithGrantOption :: Lens' BatchPermissionsRequestEntry (Maybe [Permission])

-- | The principal to be granted a permission.
batchPermissionsRequestEntry_principal :: Lens' BatchPermissionsRequestEntry (Maybe DataLakePrincipal)

-- | The resource to which the principal is to be granted a permission.
batchPermissionsRequestEntry_resource :: Lens' BatchPermissionsRequestEntry (Maybe Resource)

-- | The permissions to be granted.
batchPermissionsRequestEntry_permissions :: Lens' BatchPermissionsRequestEntry (Maybe [Permission])

-- | A unique identifier for the batch permissions request entry.
batchPermissionsRequestEntry_id :: Lens' BatchPermissionsRequestEntry Text

-- | The name of a column resource.
columnLFTag_name :: Lens' ColumnLFTag (Maybe Text)

-- | The tags attached to a column resource.
columnLFTag_lFTags :: Lens' ColumnLFTag (Maybe (NonEmpty LFTagPair))

-- | Excludes column names. Any column with this name will be excluded.
columnWildcard_excludedColumnNames :: Lens' ColumnWildcard (Maybe [Text])

-- | An identifier for the AWS Lake Formation principal.
dataLakePrincipal_dataLakePrincipalIdentifier :: Lens' DataLakePrincipal (Maybe Text)

-- | A list of AWS Lake Formation principals. Supported principals are IAM
--   users or IAM roles.
dataLakeSettings_dataLakeAdmins :: Lens' DataLakeSettings (Maybe [DataLakePrincipal])

-- | A list of the resource-owning account IDs that the caller's account
--   can use to share their user access details (user ARNs). The user ARNs
--   can be logged in the resource owner's AWS CloudTrail log.
--   
--   You may want to specify this property when you are in a high-trust
--   boundary, such as the same team or company.
dataLakeSettings_trustedResourceOwners :: Lens' DataLakeSettings (Maybe [Text])

-- | A structure representing a list of up to three principal permissions
--   entries for default create database permissions.
dataLakeSettings_createDatabaseDefaultPermissions :: Lens' DataLakeSettings (Maybe [PrincipalPermissions])

-- | A structure representing a list of up to three principal permissions
--   entries for default create table permissions.
dataLakeSettings_createTableDefaultPermissions :: Lens' DataLakeSettings (Maybe [PrincipalPermissions])

-- | The identifier for the Data Catalog where the location is registered
--   with AWS Lake Formation. By default, it is the account ID of the
--   caller.
dataLocationResource_catalogId :: Lens' DataLocationResource (Maybe Text)

-- | The Amazon Resource Name (ARN) that uniquely identifies the data
--   location resource.
dataLocationResource_resourceArn :: Lens' DataLocationResource Text

-- | The identifier for the Data Catalog. By default, it is the account ID
--   of the caller.
databaseResource_catalogId :: Lens' DatabaseResource (Maybe Text)

-- | The name of the database resource. Unique to the Data Catalog.
databaseResource_name :: Lens' DatabaseResource Text

-- | A resource share ARN for a catalog resource shared through AWS
--   Resource Access Manager (AWS RAM).
detailsMap_resourceShare :: Lens' DetailsMap (Maybe [Text])

-- | The code associated with this error.
errorDetail_errorCode :: Lens' ErrorDetail (Maybe Text)

-- | A message describing the error.
errorDetail_errorMessage :: Lens' ErrorDetail (Maybe Text)

-- | The field to filter in the filter condition.
filterCondition_field :: Lens' FilterCondition (Maybe FieldNameString)

-- | The comparison operator used in the filter condition.
filterCondition_comparisonOperator :: Lens' FilterCondition (Maybe ComparisonOperator)

-- | A string with values used in evaluating the filter condition.
filterCondition_stringValueList :: Lens' FilterCondition (Maybe [Text])

-- | The key-name for the tag.
lFTag_tagKey :: Lens' LFTag Text

-- | A list of possible values an attribute can take.
lFTag_tagValues :: Lens' LFTag (NonEmpty Text)

-- | The key-name of the tag.
lFTagError_lFTag :: Lens' LFTagError (Maybe LFTagPair)

-- | An error that occurred with the attachment or detachment of the tag.
lFTagError_error :: Lens' LFTagError (Maybe ErrorDetail)

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
lFTagKeyResource_catalogId :: Lens' LFTagKeyResource (Maybe Text)

-- | The key-name for the tag.
lFTagKeyResource_tagKey :: Lens' LFTagKeyResource Text

-- | A list of possible values an attribute can take.
lFTagKeyResource_tagValues :: Lens' LFTagKeyResource (NonEmpty Text)

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
lFTagPair_catalogId :: Lens' LFTagPair (Maybe Text)

-- | The key-name for the tag.
lFTagPair_tagKey :: Lens' LFTagPair Text

-- | A list of possible values an attribute can take.
lFTagPair_tagValues :: Lens' LFTagPair (NonEmpty Text)

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
lFTagPolicyResource_catalogId :: Lens' LFTagPolicyResource (Maybe Text)

-- | The resource type for which the tag policy applies.
lFTagPolicyResource_resourceType :: Lens' LFTagPolicyResource ResourceType

-- | A list of tag conditions that apply to the resource's tag policy.
lFTagPolicyResource_expression :: Lens' LFTagPolicyResource (NonEmpty LFTag)

-- | The principal who is granted permissions.
principalPermissions_principal :: Lens' PrincipalPermissions (Maybe DataLakePrincipal)

-- | The permissions that are granted to the principal.
principalPermissions_permissions :: Lens' PrincipalPermissions (Maybe [Permission])

-- | This attribute can be used to return any additional details of
--   <tt>PrincipalResourcePermissions</tt>. Currently returns only as a RAM
--   resource share ARN.
principalResourcePermissions_additionalDetails :: Lens' PrincipalResourcePermissions (Maybe DetailsMap)

-- | Indicates whether to grant the ability to grant permissions (as a
--   subset of permissions granted).
principalResourcePermissions_permissionsWithGrantOption :: Lens' PrincipalResourcePermissions (Maybe [Permission])

-- | The Data Lake principal to be granted or revoked permissions.
principalResourcePermissions_principal :: Lens' PrincipalResourcePermissions (Maybe DataLakePrincipal)

-- | The resource where permissions are to be granted or revoked.
principalResourcePermissions_resource :: Lens' PrincipalResourcePermissions (Maybe Resource)

-- | The permissions to be granted or revoked on the resource.
principalResourcePermissions_permissions :: Lens' PrincipalResourcePermissions (Maybe [Permission])

-- | The location of an Amazon S3 path where permissions are granted or
--   revoked.
resource_dataLocation :: Lens' Resource (Maybe DataLocationResource)

-- | The database for the resource. Unique to the Data Catalog. A database
--   is a set of associated table definitions organized into a logical
--   group. You can Grant and Revoke database permissions to a principal.
resource_database :: Lens' Resource (Maybe DatabaseResource)

-- | The tag key and values attached to a resource.
resource_lFTag :: Lens' Resource (Maybe LFTagKeyResource)

-- | The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
resource_catalog :: Lens' Resource (Maybe CatalogResource)

-- | A list of tag conditions that define a resource's tag policy.
resource_lFTagPolicy :: Lens' Resource (Maybe LFTagPolicyResource)

-- | The table for the resource. A table is a metadata definition that
--   represents your data. You can Grant and Revoke table privileges to a
--   principal.
resource_table :: Lens' Resource (Maybe TableResource)

-- | The table with columns for the resource. A principal with permissions
--   to this resource can select metadata from the columns of a table in
--   the Data Catalog and the underlying data in Amazon S3.
resource_tableWithColumns :: Lens' Resource (Maybe TableWithColumnsResource)

-- | The Amazon Resource Name (ARN) of the resource.
resourceInfo_resourceArn :: Lens' ResourceInfo (Maybe Text)

-- | The date and time the resource was last modified.
resourceInfo_lastModified :: Lens' ResourceInfo (Maybe UTCTime)

-- | The IAM role that registered a resource.
resourceInfo_roleArn :: Lens' ResourceInfo (Maybe Text)

-- | The identifier for the Data Catalog. By default, it is the account ID
--   of the caller.
tableResource_catalogId :: Lens' TableResource (Maybe Text)

-- | A wildcard object representing every table under a database.
--   
--   At least one of <tt>TableResource$Name</tt> or
--   <tt>TableResource$TableWildcard</tt> is required.
tableResource_tableWildcard :: Lens' TableResource (Maybe TableWildcard)

-- | The name of the table.
tableResource_name :: Lens' TableResource (Maybe Text)

-- | The name of the database for the table. Unique to a Data Catalog. A
--   database is a set of associated table definitions organized into a
--   logical group. You can Grant and Revoke database privileges to a
--   principal.
tableResource_databaseName :: Lens' TableResource Text

-- | The identifier for the Data Catalog. By default, it is the account ID
--   of the caller.
tableWithColumnsResource_catalogId :: Lens' TableWithColumnsResource (Maybe Text)

-- | A wildcard specified by a <tt>ColumnWildcard</tt> object. At least one
--   of <tt>ColumnNames</tt> or <tt>ColumnWildcard</tt> is required.
tableWithColumnsResource_columnWildcard :: Lens' TableWithColumnsResource (Maybe ColumnWildcard)

-- | The list of column names for the table. At least one of
--   <tt>ColumnNames</tt> or <tt>ColumnWildcard</tt> is required.
tableWithColumnsResource_columnNames :: Lens' TableWithColumnsResource (Maybe [Text])

-- | The name of the database for the table with columns resource. Unique
--   to the Data Catalog. A database is a set of associated table
--   definitions organized into a logical group. You can Grant and Revoke
--   database privileges to a principal.
tableWithColumnsResource_databaseName :: Lens' TableWithColumnsResource Text

-- | The name of the table resource. A table is a metadata definition that
--   represents your data. You can Grant and Revoke table privileges to a
--   principal.
tableWithColumnsResource_name :: Lens' TableWithColumnsResource Text

-- | A database that has tags attached to it.
taggedDatabase_database :: Lens' TaggedDatabase (Maybe DatabaseResource)

-- | A list of tags attached to the database.
taggedDatabase_lFTags :: Lens' TaggedDatabase (Maybe (NonEmpty LFTagPair))

-- | A list of tags attached to the table.
taggedTable_lFTagsOnTable :: Lens' TaggedTable (Maybe (NonEmpty LFTagPair))

-- | A list of tags attached to the database where the table resides.
taggedTable_lFTagOnDatabase :: Lens' TaggedTable (Maybe (NonEmpty LFTagPair))

-- | A list of tags attached to columns in the table.
taggedTable_lFTagsOnColumns :: Lens' TaggedTable (Maybe [ColumnLFTag])

-- | A table that has tags attached to it.
taggedTable_table :: Lens' TaggedTable (Maybe TableResource)


module Network.AWS.LakeFormation.Waiters


-- | Derived from API version <tt>2017-03-31</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS Lake Formation
--   
--   Defines the public endpoint for the AWS Lake Formation service.
module Network.AWS.LakeFormation

-- | API version <tt>2017-03-31</tt> of the Amazon Lake Formation SDK
--   configuration.
defaultService :: Service

-- | Access to a resource was denied.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation timed out.
_OperationTimeoutException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A specified entity does not exist
_EntityNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Two processes are trying to modify a resource simultaneously.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal service error occurred.
_InternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The input provided was not valid.
_InvalidInputException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource numerical limit was exceeded.
_ResourceNumberLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An encryption operation failed.
_GlueEncryptionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource to be created or added already exists.
_AlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newBatchRevokePermissions</a> smart constructor.
data BatchRevokePermissions
BatchRevokePermissions' :: Maybe Text -> [BatchPermissionsRequestEntry] -> BatchRevokePermissions

-- | Create a value of <a>BatchRevokePermissions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:BatchRevokePermissions'</a>,
--   <a>batchRevokePermissions_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:entries:BatchRevokePermissions'</a>,
--   <a>batchRevokePermissions_entries</a> - A list of up to 20 entries for
--   resource permissions to be revoked by batch operation to the
--   principal.
newBatchRevokePermissions :: BatchRevokePermissions

-- | <i>See:</i> <a>newBatchRevokePermissionsResponse</a> smart
--   constructor.
data BatchRevokePermissionsResponse
BatchRevokePermissionsResponse' :: Maybe [BatchPermissionsFailureEntry] -> Int -> BatchRevokePermissionsResponse

-- | Create a value of <a>BatchRevokePermissionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failures:BatchRevokePermissionsResponse'</a>,
--   <a>batchRevokePermissionsResponse_failures</a> - A list of failures to
--   revoke permissions to the resources.
--   
--   <a>$sel:httpStatus:BatchRevokePermissionsResponse'</a>,
--   <a>batchRevokePermissionsResponse_httpStatus</a> - The response's http
--   status code.
newBatchRevokePermissionsResponse :: Int -> BatchRevokePermissionsResponse

-- | <i>See:</i> <a>newDescribeResource</a> smart constructor.
data DescribeResource
DescribeResource' :: Text -> DescribeResource

-- | Create a value of <a>DescribeResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:DescribeResource'</a>,
--   <a>describeResource_resourceArn</a> - The resource ARN.
newDescribeResource :: Text -> DescribeResource

-- | <i>See:</i> <a>newDescribeResourceResponse</a> smart constructor.
data DescribeResourceResponse
DescribeResourceResponse' :: Maybe ResourceInfo -> Int -> DescribeResourceResponse

-- | Create a value of <a>DescribeResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceInfo:DescribeResourceResponse'</a>,
--   <a>describeResourceResponse_resourceInfo</a> - A structure containing
--   information about an AWS Lake Formation resource.
--   
--   <a>$sel:httpStatus:DescribeResourceResponse'</a>,
--   <a>describeResourceResponse_httpStatus</a> - The response's http
--   status code.
newDescribeResourceResponse :: Int -> DescribeResourceResponse

-- | <i>See:</i> <a>newBatchGrantPermissions</a> smart constructor.
data BatchGrantPermissions
BatchGrantPermissions' :: Maybe Text -> [BatchPermissionsRequestEntry] -> BatchGrantPermissions

-- | Create a value of <a>BatchGrantPermissions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:BatchGrantPermissions'</a>,
--   <a>batchGrantPermissions_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:entries:BatchGrantPermissions'</a>,
--   <a>batchGrantPermissions_entries</a> - A list of up to 20 entries for
--   resource permissions to be granted by batch operation to the
--   principal.
newBatchGrantPermissions :: BatchGrantPermissions

-- | <i>See:</i> <a>newBatchGrantPermissionsResponse</a> smart constructor.
data BatchGrantPermissionsResponse
BatchGrantPermissionsResponse' :: Maybe [BatchPermissionsFailureEntry] -> Int -> BatchGrantPermissionsResponse

-- | Create a value of <a>BatchGrantPermissionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failures:BatchGrantPermissionsResponse'</a>,
--   <a>batchGrantPermissionsResponse_failures</a> - A list of failures to
--   grant permissions to the resources.
--   
--   <a>$sel:httpStatus:BatchGrantPermissionsResponse'</a>,
--   <a>batchGrantPermissionsResponse_httpStatus</a> - The response's http
--   status code.
newBatchGrantPermissionsResponse :: Int -> BatchGrantPermissionsResponse

-- | <i>See:</i> <a>newGetEffectivePermissionsForPath</a> smart
--   constructor.
data GetEffectivePermissionsForPath
GetEffectivePermissionsForPath' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> GetEffectivePermissionsForPath

-- | Create a value of <a>GetEffectivePermissionsForPath</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetEffectivePermissionsForPath'</a>,
--   <a>getEffectivePermissionsForPath_catalogId</a> - The identifier for
--   the Data Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:nextToken:GetEffectivePermissionsForPath'</a>,
--   <a>getEffectivePermissionsForPath_nextToken</a> - A continuation
--   token, if this is not the first call to retrieve this list.
--   
--   <a>$sel:maxResults:GetEffectivePermissionsForPath'</a>,
--   <a>getEffectivePermissionsForPath_maxResults</a> - The maximum number
--   of results to return.
--   
--   <a>$sel:resourceArn:GetEffectivePermissionsForPath'</a>,
--   <a>getEffectivePermissionsForPath_resourceArn</a> - The Amazon
--   Resource Name (ARN) of the resource for which you want to get
--   permissions.
newGetEffectivePermissionsForPath :: Text -> GetEffectivePermissionsForPath

-- | <i>See:</i> <a>newGetEffectivePermissionsForPathResponse</a> smart
--   constructor.
data GetEffectivePermissionsForPathResponse
GetEffectivePermissionsForPathResponse' :: Maybe Text -> Maybe [PrincipalResourcePermissions] -> Int -> GetEffectivePermissionsForPathResponse

-- | Create a value of <a>GetEffectivePermissionsForPathResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetEffectivePermissionsForPath'</a>,
--   <a>getEffectivePermissionsForPathResponse_nextToken</a> - A
--   continuation token, if this is not the first call to retrieve this
--   list.
--   
--   <a>$sel:permissions:GetEffectivePermissionsForPathResponse'</a>,
--   <a>getEffectivePermissionsForPathResponse_permissions</a> - A list of
--   the permissions for the specified table or database resource located
--   at the path in Amazon S3.
--   
--   <a>$sel:httpStatus:GetEffectivePermissionsForPathResponse'</a>,
--   <a>getEffectivePermissionsForPathResponse_httpStatus</a> - The
--   response's http status code.
newGetEffectivePermissionsForPathResponse :: Int -> GetEffectivePermissionsForPathResponse

-- | <i>See:</i> <a>newRevokePermissions</a> smart constructor.
data RevokePermissions
RevokePermissions' :: Maybe Text -> Maybe [Permission] -> DataLakePrincipal -> Resource -> [Permission] -> RevokePermissions

-- | Create a value of <a>RevokePermissions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:RevokePermissions'</a>,
--   <a>revokePermissions_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:permissionsWithGrantOption:RevokePermissions'</a>,
--   <a>revokePermissions_permissionsWithGrantOption</a> - Indicates a list
--   of permissions for which to revoke the grant option allowing the
--   principal to pass permissions to other principals.
--   
--   <a>$sel:principal:RevokePermissions'</a>,
--   <a>revokePermissions_principal</a> - The principal to be revoked
--   permissions on the resource.
--   
--   <a>$sel:resource:RevokePermissions'</a>,
--   <a>revokePermissions_resource</a> - The resource to which permissions
--   are to be revoked.
--   
--   <a>$sel:permissions:RevokePermissions'</a>,
--   <a>revokePermissions_permissions</a> - The permissions revoked to the
--   principal on the resource. For information about permissions, see
--   <a>Security and Access Control to Metadata and Data</a>.
newRevokePermissions :: DataLakePrincipal -> Resource -> RevokePermissions

-- | <i>See:</i> <a>newRevokePermissionsResponse</a> smart constructor.
data RevokePermissionsResponse
RevokePermissionsResponse' :: Int -> RevokePermissionsResponse

-- | Create a value of <a>RevokePermissionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RevokePermissionsResponse'</a>,
--   <a>revokePermissionsResponse_httpStatus</a> - The response's http
--   status code.
newRevokePermissionsResponse :: Int -> RevokePermissionsResponse

-- | <i>See:</i> <a>newUpdateResource</a> smart constructor.
data UpdateResource
UpdateResource' :: Text -> Text -> UpdateResource

-- | Create a value of <a>UpdateResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleArn:UpdateResource'</a>, <a>updateResource_roleArn</a> -
--   The new role to use for the given resource registered in AWS Lake
--   Formation.
--   
--   <a>$sel:resourceArn:UpdateResource'</a>,
--   <a>updateResource_resourceArn</a> - The resource ARN.
newUpdateResource :: Text -> Text -> UpdateResource

-- | <i>See:</i> <a>newUpdateResourceResponse</a> smart constructor.
data UpdateResourceResponse
UpdateResourceResponse' :: Int -> UpdateResourceResponse

-- | Create a value of <a>UpdateResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateResourceResponse'</a>,
--   <a>updateResourceResponse_httpStatus</a> - The response's http status
--   code.
newUpdateResourceResponse :: Int -> UpdateResourceResponse

-- | <i>See:</i> <a>newAddLFTagsToResource</a> smart constructor.
data AddLFTagsToResource
AddLFTagsToResource' :: Maybe Text -> Resource -> NonEmpty LFTagPair -> AddLFTagsToResource

-- | Create a value of <a>AddLFTagsToResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:AddLFTagsToResource'</a>,
--   <a>addLFTagsToResource_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:resource:AddLFTagsToResource'</a>,
--   <a>addLFTagsToResource_resource</a> - The resource to which to attach
--   a tag.
--   
--   <a>$sel:lFTags:AddLFTagsToResource'</a>,
--   <a>addLFTagsToResource_lFTags</a> - The tags to attach to the
--   resource.
newAddLFTagsToResource :: Resource -> NonEmpty LFTagPair -> AddLFTagsToResource

-- | <i>See:</i> <a>newAddLFTagsToResourceResponse</a> smart constructor.
data AddLFTagsToResourceResponse
AddLFTagsToResourceResponse' :: Maybe [LFTagError] -> Int -> AddLFTagsToResourceResponse

-- | Create a value of <a>AddLFTagsToResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failures:AddLFTagsToResourceResponse'</a>,
--   <a>addLFTagsToResourceResponse_failures</a> - A list of failures to
--   tag the resource.
--   
--   <a>$sel:httpStatus:AddLFTagsToResourceResponse'</a>,
--   <a>addLFTagsToResourceResponse_httpStatus</a> - The response's http
--   status code.
newAddLFTagsToResourceResponse :: Int -> AddLFTagsToResourceResponse

-- | <i>See:</i> <a>newSearchTablesByLFTags</a> smart constructor.
data SearchTablesByLFTags
SearchTablesByLFTags' :: Maybe Text -> Maybe Text -> Maybe Natural -> NonEmpty LFTag -> SearchTablesByLFTags

-- | Create a value of <a>SearchTablesByLFTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:SearchTablesByLFTags'</a>,
--   <a>searchTablesByLFTags_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:nextToken:SearchTablesByLFTags'</a>,
--   <a>searchTablesByLFTags_nextToken</a> - A continuation token, if this
--   is not the first call to retrieve this list.
--   
--   <a>$sel:maxResults:SearchTablesByLFTags'</a>,
--   <a>searchTablesByLFTags_maxResults</a> - The maximum number of results
--   to return.
--   
--   <a>$sel:expression:SearchTablesByLFTags'</a>,
--   <a>searchTablesByLFTags_expression</a> - A list of conditions
--   (<tt>LFTag</tt> structures) to search for in table resources.
newSearchTablesByLFTags :: NonEmpty LFTag -> SearchTablesByLFTags

-- | <i>See:</i> <a>newSearchTablesByLFTagsResponse</a> smart constructor.
data SearchTablesByLFTagsResponse
SearchTablesByLFTagsResponse' :: Maybe [TaggedTable] -> Maybe Text -> Int -> SearchTablesByLFTagsResponse

-- | Create a value of <a>SearchTablesByLFTagsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tableList:SearchTablesByLFTagsResponse'</a>,
--   <a>searchTablesByLFTagsResponse_tableList</a> - A list of tables that
--   meet the tag conditions.
--   
--   <a>$sel:nextToken:SearchTablesByLFTags'</a>,
--   <a>searchTablesByLFTagsResponse_nextToken</a> - A continuation token,
--   present if the current list segment is not the last.
--   
--   <a>$sel:httpStatus:SearchTablesByLFTagsResponse'</a>,
--   <a>searchTablesByLFTagsResponse_httpStatus</a> - The response's http
--   status code.
newSearchTablesByLFTagsResponse :: Int -> SearchTablesByLFTagsResponse

-- | <i>See:</i> <a>newListResources</a> smart constructor.
data ListResources
ListResources' :: Maybe (NonEmpty FilterCondition) -> Maybe Text -> Maybe Natural -> ListResources

-- | Create a value of <a>ListResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterConditionList:ListResources'</a>,
--   <a>listResources_filterConditionList</a> - Any applicable row-level
--   and/or column-level filtering conditions for the resources.
--   
--   <a>$sel:nextToken:ListResources'</a>, <a>listResources_nextToken</a> -
--   A continuation token, if this is not the first call to retrieve these
--   resources.
--   
--   <a>$sel:maxResults:ListResources'</a>, <a>listResources_maxResults</a>
--   - The maximum number of resource results.
newListResources :: ListResources

-- | <i>See:</i> <a>newListResourcesResponse</a> smart constructor.
data ListResourcesResponse
ListResourcesResponse' :: Maybe [ResourceInfo] -> Maybe Text -> Int -> ListResourcesResponse

-- | Create a value of <a>ListResourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceInfoList:ListResourcesResponse'</a>,
--   <a>listResourcesResponse_resourceInfoList</a> - A summary of the data
--   lake resources.
--   
--   <a>$sel:nextToken:ListResources'</a>,
--   <a>listResourcesResponse_nextToken</a> - A continuation token, if this
--   is not the first call to retrieve these resources.
--   
--   <a>$sel:httpStatus:ListResourcesResponse'</a>,
--   <a>listResourcesResponse_httpStatus</a> - The response's http status
--   code.
newListResourcesResponse :: Int -> ListResourcesResponse

-- | <i>See:</i> <a>newGetLFTag</a> smart constructor.
data GetLFTag
GetLFTag' :: Maybe Text -> Text -> GetLFTag

-- | Create a value of <a>GetLFTag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetLFTag'</a>, <a>getLFTag_catalogId</a> - The
--   identifier for the Data Catalog. By default, the account ID. The Data
--   Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
--   
--   <a>$sel:tagKey:GetLFTag'</a>, <a>getLFTag_tagKey</a> - The key-name
--   for the tag.
newGetLFTag :: Text -> GetLFTag

-- | <i>See:</i> <a>newGetLFTagResponse</a> smart constructor.
data GetLFTagResponse
GetLFTagResponse' :: Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Int -> GetLFTagResponse

-- | Create a value of <a>GetLFTagResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagValues:GetLFTagResponse'</a>,
--   <a>getLFTagResponse_tagValues</a> - A list of possible values an
--   attribute can take.
--   
--   <a>$sel:catalogId:GetLFTag'</a>, <a>getLFTagResponse_catalogId</a> -
--   The identifier for the Data Catalog. By default, the account ID. The
--   Data Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
--   
--   <a>$sel:tagKey:GetLFTag'</a>, <a>getLFTagResponse_tagKey</a> - The
--   key-name for the tag.
--   
--   <a>$sel:httpStatus:GetLFTagResponse'</a>,
--   <a>getLFTagResponse_httpStatus</a> - The response's http status code.
newGetLFTagResponse :: Int -> GetLFTagResponse

-- | <i>See:</i> <a>newRemoveLFTagsFromResource</a> smart constructor.
data RemoveLFTagsFromResource
RemoveLFTagsFromResource' :: Maybe Text -> Resource -> NonEmpty LFTagPair -> RemoveLFTagsFromResource

-- | Create a value of <a>RemoveLFTagsFromResource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:RemoveLFTagsFromResource'</a>,
--   <a>removeLFTagsFromResource_catalogId</a> - The identifier for the
--   Data Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:resource:RemoveLFTagsFromResource'</a>,
--   <a>removeLFTagsFromResource_resource</a> - The resource where you want
--   to remove a tag.
--   
--   <a>$sel:lFTags:RemoveLFTagsFromResource'</a>,
--   <a>removeLFTagsFromResource_lFTags</a> - The tags to be removed from
--   the resource.
newRemoveLFTagsFromResource :: Resource -> NonEmpty LFTagPair -> RemoveLFTagsFromResource

-- | <i>See:</i> <a>newRemoveLFTagsFromResourceResponse</a> smart
--   constructor.
data RemoveLFTagsFromResourceResponse
RemoveLFTagsFromResourceResponse' :: Maybe [LFTagError] -> Int -> RemoveLFTagsFromResourceResponse

-- | Create a value of <a>RemoveLFTagsFromResourceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failures:RemoveLFTagsFromResourceResponse'</a>,
--   <a>removeLFTagsFromResourceResponse_failures</a> - A list of failures
--   to untag a resource.
--   
--   <a>$sel:httpStatus:RemoveLFTagsFromResourceResponse'</a>,
--   <a>removeLFTagsFromResourceResponse_httpStatus</a> - The response's
--   http status code.
newRemoveLFTagsFromResourceResponse :: Int -> RemoveLFTagsFromResourceResponse

-- | <i>See:</i> <a>newUpdateLFTag</a> smart constructor.
data UpdateLFTag
UpdateLFTag' :: Maybe Text -> Maybe (NonEmpty Text) -> Maybe (NonEmpty Text) -> Text -> UpdateLFTag

-- | Create a value of <a>UpdateLFTag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:UpdateLFTag'</a>, <a>updateLFTag_catalogId</a> - The
--   identifier for the Data Catalog. By default, the account ID. The Data
--   Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
--   
--   <a>$sel:tagValuesToAdd:UpdateLFTag'</a>,
--   <a>updateLFTag_tagValuesToAdd</a> - A list of tag values to add from
--   the tag.
--   
--   <a>$sel:tagValuesToDelete:UpdateLFTag'</a>,
--   <a>updateLFTag_tagValuesToDelete</a> - A list of tag values to delete
--   from the tag.
--   
--   <a>$sel:tagKey:UpdateLFTag'</a>, <a>updateLFTag_tagKey</a> - The
--   key-name for the tag for which to add or delete values.
newUpdateLFTag :: Text -> UpdateLFTag

-- | <i>See:</i> <a>newUpdateLFTagResponse</a> smart constructor.
data UpdateLFTagResponse
UpdateLFTagResponse' :: Int -> UpdateLFTagResponse

-- | Create a value of <a>UpdateLFTagResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateLFTagResponse'</a>,
--   <a>updateLFTagResponse_httpStatus</a> - The response's http status
--   code.
newUpdateLFTagResponse :: Int -> UpdateLFTagResponse

-- | <i>See:</i> <a>newDeleteLFTag</a> smart constructor.
data DeleteLFTag
DeleteLFTag' :: Maybe Text -> Text -> DeleteLFTag

-- | Create a value of <a>DeleteLFTag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DeleteLFTag'</a>, <a>deleteLFTag_catalogId</a> - The
--   identifier for the Data Catalog. By default, the account ID. The Data
--   Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
--   
--   <a>$sel:tagKey:DeleteLFTag'</a>, <a>deleteLFTag_tagKey</a> - The
--   key-name for the tag to delete.
newDeleteLFTag :: Text -> DeleteLFTag

-- | <i>See:</i> <a>newDeleteLFTagResponse</a> smart constructor.
data DeleteLFTagResponse
DeleteLFTagResponse' :: Int -> DeleteLFTagResponse

-- | Create a value of <a>DeleteLFTagResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteLFTagResponse'</a>,
--   <a>deleteLFTagResponse_httpStatus</a> - The response's http status
--   code.
newDeleteLFTagResponse :: Int -> DeleteLFTagResponse

-- | <i>See:</i> <a>newCreateLFTag</a> smart constructor.
data CreateLFTag
CreateLFTag' :: Maybe Text -> Text -> NonEmpty Text -> CreateLFTag

-- | Create a value of <a>CreateLFTag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:CreateLFTag'</a>, <a>createLFTag_catalogId</a> - The
--   identifier for the Data Catalog. By default, the account ID. The Data
--   Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
--   
--   <a>$sel:tagKey:CreateLFTag'</a>, <a>createLFTag_tagKey</a> - The
--   key-name for the tag.
--   
--   <a>$sel:tagValues:CreateLFTag'</a>, <a>createLFTag_tagValues</a> - A
--   list of possible values an attribute can take.
newCreateLFTag :: Text -> NonEmpty Text -> CreateLFTag

-- | <i>See:</i> <a>newCreateLFTagResponse</a> smart constructor.
data CreateLFTagResponse
CreateLFTagResponse' :: Int -> CreateLFTagResponse

-- | Create a value of <a>CreateLFTagResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateLFTagResponse'</a>,
--   <a>createLFTagResponse_httpStatus</a> - The response's http status
--   code.
newCreateLFTagResponse :: Int -> CreateLFTagResponse

-- | <i>See:</i> <a>newGetResourceLFTags</a> smart constructor.
data GetResourceLFTags
GetResourceLFTags' :: Maybe Bool -> Maybe Text -> Resource -> GetResourceLFTags

-- | Create a value of <a>GetResourceLFTags</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:showAssignedLFTags:GetResourceLFTags'</a>,
--   <a>getResourceLFTags_showAssignedLFTags</a> - Indicates whether to
--   show the assigned tags.
--   
--   <a>$sel:catalogId:GetResourceLFTags'</a>,
--   <a>getResourceLFTags_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:resource:GetResourceLFTags'</a>,
--   <a>getResourceLFTags_resource</a> - The resource for which you want to
--   return tags.
newGetResourceLFTags :: Resource -> GetResourceLFTags

-- | <i>See:</i> <a>newGetResourceLFTagsResponse</a> smart constructor.
data GetResourceLFTagsResponse
GetResourceLFTagsResponse' :: Maybe (NonEmpty LFTagPair) -> Maybe (NonEmpty LFTagPair) -> Maybe [ColumnLFTag] -> Int -> GetResourceLFTagsResponse

-- | Create a value of <a>GetResourceLFTagsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lFTagsOnTable:GetResourceLFTagsResponse'</a>,
--   <a>getResourceLFTagsResponse_lFTagsOnTable</a> - A list of tags
--   applied to a table resource.
--   
--   <a>$sel:lFTagOnDatabase:GetResourceLFTagsResponse'</a>,
--   <a>getResourceLFTagsResponse_lFTagOnDatabase</a> - A list of tags
--   applied to a database resource.
--   
--   <a>$sel:lFTagsOnColumns:GetResourceLFTagsResponse'</a>,
--   <a>getResourceLFTagsResponse_lFTagsOnColumns</a> - A list of tags
--   applied to a column resource.
--   
--   <a>$sel:httpStatus:GetResourceLFTagsResponse'</a>,
--   <a>getResourceLFTagsResponse_httpStatus</a> - The response's http
--   status code.
newGetResourceLFTagsResponse :: Int -> GetResourceLFTagsResponse

-- | <i>See:</i> <a>newPutDataLakeSettings</a> smart constructor.
data PutDataLakeSettings
PutDataLakeSettings' :: Maybe Text -> DataLakeSettings -> PutDataLakeSettings

-- | Create a value of <a>PutDataLakeSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:PutDataLakeSettings'</a>,
--   <a>putDataLakeSettings_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:dataLakeSettings:PutDataLakeSettings'</a>,
--   <a>putDataLakeSettings_dataLakeSettings</a> - A structure representing
--   a list of AWS Lake Formation principals designated as data lake
--   administrators.
newPutDataLakeSettings :: DataLakeSettings -> PutDataLakeSettings

-- | <i>See:</i> <a>newPutDataLakeSettingsResponse</a> smart constructor.
data PutDataLakeSettingsResponse
PutDataLakeSettingsResponse' :: Int -> PutDataLakeSettingsResponse

-- | Create a value of <a>PutDataLakeSettingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutDataLakeSettingsResponse'</a>,
--   <a>putDataLakeSettingsResponse_httpStatus</a> - The response's http
--   status code.
newPutDataLakeSettingsResponse :: Int -> PutDataLakeSettingsResponse

-- | <i>See:</i> <a>newListPermissions</a> smart constructor.
data ListPermissions
ListPermissions' :: Maybe DataLakeResourceType -> Maybe Text -> Maybe Text -> Maybe DataLakePrincipal -> Maybe Resource -> Maybe Natural -> ListPermissions

-- | Create a value of <a>ListPermissions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ListPermissions'</a>,
--   <a>listPermissions_resourceType</a> - Specifies a resource type to
--   filter the permissions returned.
--   
--   <a>$sel:catalogId:ListPermissions'</a>,
--   <a>listPermissions_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:nextToken:ListPermissions'</a>,
--   <a>listPermissions_nextToken</a> - A continuation token, if this is
--   not the first call to retrieve this list.
--   
--   <a>$sel:principal:ListPermissions'</a>,
--   <a>listPermissions_principal</a> - Specifies a principal to filter the
--   permissions returned.
--   
--   <a>$sel:resource:ListPermissions'</a>, <a>listPermissions_resource</a>
--   - A resource where you will get a list of the principal permissions.
--   
--   This operation does not support getting privileges on a table with
--   columns. Instead, call this operation on the table, and the operation
--   returns the table and the table w columns.
--   
--   <a>$sel:maxResults:ListPermissions'</a>,
--   <a>listPermissions_maxResults</a> - The maximum number of results to
--   return.
newListPermissions :: ListPermissions

-- | <i>See:</i> <a>newListPermissionsResponse</a> smart constructor.
data ListPermissionsResponse
ListPermissionsResponse' :: Maybe Text -> Maybe [PrincipalResourcePermissions] -> Int -> ListPermissionsResponse

-- | Create a value of <a>ListPermissionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPermissions'</a>,
--   <a>listPermissionsResponse_nextToken</a> - A continuation token, if
--   this is not the first call to retrieve this list.
--   
--   <a>$sel:principalResourcePermissions:ListPermissionsResponse'</a>,
--   <a>listPermissionsResponse_principalResourcePermissions</a> - A list
--   of principals and their permissions on the resource for the specified
--   principal and resource types.
--   
--   <a>$sel:httpStatus:ListPermissionsResponse'</a>,
--   <a>listPermissionsResponse_httpStatus</a> - The response's http status
--   code.
newListPermissionsResponse :: Int -> ListPermissionsResponse

-- | <i>See:</i> <a>newDeregisterResource</a> smart constructor.
data DeregisterResource
DeregisterResource' :: Text -> DeregisterResource

-- | Create a value of <a>DeregisterResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:DeregisterResource'</a>,
--   <a>deregisterResource_resourceArn</a> - The Amazon Resource Name (ARN)
--   of the resource that you want to deregister.
newDeregisterResource :: Text -> DeregisterResource

-- | <i>See:</i> <a>newDeregisterResourceResponse</a> smart constructor.
data DeregisterResourceResponse
DeregisterResourceResponse' :: Int -> DeregisterResourceResponse

-- | Create a value of <a>DeregisterResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeregisterResourceResponse'</a>,
--   <a>deregisterResourceResponse_httpStatus</a> - The response's http
--   status code.
newDeregisterResourceResponse :: Int -> DeregisterResourceResponse

-- | <i>See:</i> <a>newGetDataLakeSettings</a> smart constructor.
data GetDataLakeSettings
GetDataLakeSettings' :: Maybe Text -> GetDataLakeSettings

-- | Create a value of <a>GetDataLakeSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetDataLakeSettings'</a>,
--   <a>getDataLakeSettings_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
newGetDataLakeSettings :: GetDataLakeSettings

-- | <i>See:</i> <a>newGetDataLakeSettingsResponse</a> smart constructor.
data GetDataLakeSettingsResponse
GetDataLakeSettingsResponse' :: Maybe DataLakeSettings -> Int -> GetDataLakeSettingsResponse

-- | Create a value of <a>GetDataLakeSettingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLakeSettings:GetDataLakeSettingsResponse'</a>,
--   <a>getDataLakeSettingsResponse_dataLakeSettings</a> - A structure
--   representing a list of AWS Lake Formation principals designated as
--   data lake administrators.
--   
--   <a>$sel:httpStatus:GetDataLakeSettingsResponse'</a>,
--   <a>getDataLakeSettingsResponse_httpStatus</a> - The response's http
--   status code.
newGetDataLakeSettingsResponse :: Int -> GetDataLakeSettingsResponse

-- | <i>See:</i> <a>newSearchDatabasesByLFTags</a> smart constructor.
data SearchDatabasesByLFTags
SearchDatabasesByLFTags' :: Maybe Text -> Maybe Text -> Maybe Natural -> NonEmpty LFTag -> SearchDatabasesByLFTags

-- | Create a value of <a>SearchDatabasesByLFTags</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:SearchDatabasesByLFTags'</a>,
--   <a>searchDatabasesByLFTags_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:nextToken:SearchDatabasesByLFTags'</a>,
--   <a>searchDatabasesByLFTags_nextToken</a> - A continuation token, if
--   this is not the first call to retrieve this list.
--   
--   <a>$sel:maxResults:SearchDatabasesByLFTags'</a>,
--   <a>searchDatabasesByLFTags_maxResults</a> - The maximum number of
--   results to return.
--   
--   <a>$sel:expression:SearchDatabasesByLFTags'</a>,
--   <a>searchDatabasesByLFTags_expression</a> - A list of conditions
--   (<tt>LFTag</tt> structures) to search for in database resources.
newSearchDatabasesByLFTags :: NonEmpty LFTag -> SearchDatabasesByLFTags

-- | <i>See:</i> <a>newSearchDatabasesByLFTagsResponse</a> smart
--   constructor.
data SearchDatabasesByLFTagsResponse
SearchDatabasesByLFTagsResponse' :: Maybe [TaggedDatabase] -> Maybe Text -> Int -> SearchDatabasesByLFTagsResponse

-- | Create a value of <a>SearchDatabasesByLFTagsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:databaseList:SearchDatabasesByLFTagsResponse'</a>,
--   <a>searchDatabasesByLFTagsResponse_databaseList</a> - A list of
--   databases that meet the tag conditions.
--   
--   <a>$sel:nextToken:SearchDatabasesByLFTags'</a>,
--   <a>searchDatabasesByLFTagsResponse_nextToken</a> - A continuation
--   token, present if the current list segment is not the last.
--   
--   <a>$sel:httpStatus:SearchDatabasesByLFTagsResponse'</a>,
--   <a>searchDatabasesByLFTagsResponse_httpStatus</a> - The response's
--   http status code.
newSearchDatabasesByLFTagsResponse :: Int -> SearchDatabasesByLFTagsResponse

-- | <i>See:</i> <a>newRegisterResource</a> smart constructor.
data RegisterResource
RegisterResource' :: Maybe Bool -> Maybe Text -> Text -> RegisterResource

-- | Create a value of <a>RegisterResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:useServiceLinkedRole:RegisterResource'</a>,
--   <a>registerResource_useServiceLinkedRole</a> - Designates an AWS
--   Identity and Access Management (IAM) service-linked role by
--   registering this role with the Data Catalog. A service-linked role is
--   a unique type of IAM role that is linked directly to Lake Formation.
--   
--   For more information, see <a>Using Service-Linked Roles for Lake
--   Formation</a>.
--   
--   <a>$sel:roleArn:RegisterResource'</a>, <a>registerResource_roleArn</a>
--   - The identifier for the role that registers the resource.
--   
--   <a>$sel:resourceArn:RegisterResource'</a>,
--   <a>registerResource_resourceArn</a> - The Amazon Resource Name (ARN)
--   of the resource that you want to register.
newRegisterResource :: Text -> RegisterResource

-- | <i>See:</i> <a>newRegisterResourceResponse</a> smart constructor.
data RegisterResourceResponse
RegisterResourceResponse' :: Int -> RegisterResourceResponse

-- | Create a value of <a>RegisterResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RegisterResourceResponse'</a>,
--   <a>registerResourceResponse_httpStatus</a> - The response's http
--   status code.
newRegisterResourceResponse :: Int -> RegisterResourceResponse

-- | <i>See:</i> <a>newGrantPermissions</a> smart constructor.
data GrantPermissions
GrantPermissions' :: Maybe Text -> Maybe [Permission] -> DataLakePrincipal -> Resource -> [Permission] -> GrantPermissions

-- | Create a value of <a>GrantPermissions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GrantPermissions'</a>,
--   <a>grantPermissions_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:permissionsWithGrantOption:GrantPermissions'</a>,
--   <a>grantPermissions_permissionsWithGrantOption</a> - Indicates a list
--   of the granted permissions that the principal may pass to other users.
--   These permissions may only be a subset of the permissions granted in
--   the <tt>Privileges</tt>.
--   
--   <a>$sel:principal:GrantPermissions'</a>,
--   <a>grantPermissions_principal</a> - The principal to be granted the
--   permissions on the resource. Supported principals are IAM users or IAM
--   roles, and they are defined by their principal type and their ARN.
--   
--   Note that if you define a resource with a particular ARN, then later
--   delete, and recreate a resource with that same ARN, the resource
--   maintains the permissions already granted.
--   
--   <a>$sel:resource:GrantPermissions'</a>,
--   <a>grantPermissions_resource</a> - The resource to which permissions
--   are to be granted. Resources in AWS Lake Formation are the Data
--   Catalog, databases, and tables.
--   
--   <a>$sel:permissions:GrantPermissions'</a>,
--   <a>grantPermissions_permissions</a> - The permissions granted to the
--   principal on the resource. AWS Lake Formation defines privileges to
--   grant and revoke access to metadata in the Data Catalog and data
--   organized in underlying data storage such as Amazon S3. AWS Lake
--   Formation requires that each principal be authorized to perform a
--   specific task on AWS Lake Formation resources.
newGrantPermissions :: DataLakePrincipal -> Resource -> GrantPermissions

-- | <i>See:</i> <a>newGrantPermissionsResponse</a> smart constructor.
data GrantPermissionsResponse
GrantPermissionsResponse' :: Int -> GrantPermissionsResponse

-- | Create a value of <a>GrantPermissionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GrantPermissionsResponse'</a>,
--   <a>grantPermissionsResponse_httpStatus</a> - The response's http
--   status code.
newGrantPermissionsResponse :: Int -> GrantPermissionsResponse

-- | <i>See:</i> <a>newListLFTags</a> smart constructor.
data ListLFTags
ListLFTags' :: Maybe ResourceShareType -> Maybe Text -> Maybe Text -> Maybe Natural -> ListLFTags

-- | Create a value of <a>ListLFTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceShareType:ListLFTags'</a>,
--   <a>listLFTags_resourceShareType</a> - If resource share type is
--   <tt>ALL</tt>, returns both in-account tags and shared tags that the
--   requester has permission to view. If resource share type is
--   <tt>FOREIGN</tt>, returns all share tags that the requester can view.
--   If no resource share type is passed, lists tags in the given catalog
--   ID that the requester has permission to view.
--   
--   <a>$sel:catalogId:ListLFTags'</a>, <a>listLFTags_catalogId</a> - The
--   identifier for the Data Catalog. By default, the account ID. The Data
--   Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
--   
--   <a>$sel:nextToken:ListLFTags'</a>, <a>listLFTags_nextToken</a> - A
--   continuation token, if this is not the first call to retrieve this
--   list.
--   
--   <a>$sel:maxResults:ListLFTags'</a>, <a>listLFTags_maxResults</a> - The
--   maximum number of results to return.
newListLFTags :: ListLFTags

-- | <i>See:</i> <a>newListLFTagsResponse</a> smart constructor.
data ListLFTagsResponse
ListLFTagsResponse' :: Maybe Text -> Maybe (NonEmpty LFTagPair) -> Int -> ListLFTagsResponse

-- | Create a value of <a>ListLFTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLFTags'</a>, <a>listLFTagsResponse_nextToken</a>
--   - A continuation token, present if the current list segment is not the
--   last.
--   
--   <a>$sel:lFTags:ListLFTagsResponse'</a>,
--   <a>listLFTagsResponse_lFTags</a> - A list of tags that the requested
--   has permission to view.
--   
--   <a>$sel:httpStatus:ListLFTagsResponse'</a>,
--   <a>listLFTagsResponse_httpStatus</a> - The response's http status
--   code.
newListLFTagsResponse :: Int -> ListLFTagsResponse
newtype ComparisonOperator
ComparisonOperator' :: Text -> ComparisonOperator
[fromComparisonOperator] :: ComparisonOperator -> Text
pattern ComparisonOperator_BEGINS_WITH :: ComparisonOperator
pattern ComparisonOperator_BETWEEN :: ComparisonOperator
pattern ComparisonOperator_CONTAINS :: ComparisonOperator
pattern ComparisonOperator_EQ :: ComparisonOperator
pattern ComparisonOperator_GE :: ComparisonOperator
pattern ComparisonOperator_GT :: ComparisonOperator
pattern ComparisonOperator_IN :: ComparisonOperator
pattern ComparisonOperator_LE :: ComparisonOperator
pattern ComparisonOperator_LT :: ComparisonOperator
pattern ComparisonOperator_NE :: ComparisonOperator
pattern ComparisonOperator_NOT_CONTAINS :: ComparisonOperator
newtype DataLakeResourceType
DataLakeResourceType' :: Text -> DataLakeResourceType
[fromDataLakeResourceType] :: DataLakeResourceType -> Text
pattern DataLakeResourceType_CATALOG :: DataLakeResourceType
pattern DataLakeResourceType_DATABASE :: DataLakeResourceType
pattern DataLakeResourceType_DATA_LOCATION :: DataLakeResourceType
pattern DataLakeResourceType_LF_TAG :: DataLakeResourceType
pattern DataLakeResourceType_LF_TAG_POLICY :: DataLakeResourceType
pattern DataLakeResourceType_LF_TAG_POLICY_DATABASE :: DataLakeResourceType
pattern DataLakeResourceType_LF_TAG_POLICY_TABLE :: DataLakeResourceType
pattern DataLakeResourceType_TABLE :: DataLakeResourceType
newtype FieldNameString
FieldNameString' :: Text -> FieldNameString
[fromFieldNameString] :: FieldNameString -> Text
pattern FieldNameString_LAST_MODIFIED :: FieldNameString
pattern FieldNameString_RESOURCE_ARN :: FieldNameString
pattern FieldNameString_ROLE_ARN :: FieldNameString
newtype Permission
Permission' :: Text -> Permission
[fromPermission] :: Permission -> Text
pattern Permission_ALL :: Permission
pattern Permission_ALTER :: Permission
pattern Permission_ALTER_TAG :: Permission
pattern Permission_ASSOCIATE_TAG :: Permission
pattern Permission_CREATE_DATABASE :: Permission
pattern Permission_CREATE_TABLE :: Permission
pattern Permission_CREATE_TAG :: Permission
pattern Permission_DATA_LOCATION_ACCESS :: Permission
pattern Permission_DELETE :: Permission
pattern Permission_DELETE_TAG :: Permission
pattern Permission_DESCRIBE :: Permission
pattern Permission_DESCRIBE_TAG :: Permission
pattern Permission_DROP :: Permission
pattern Permission_INSERT :: Permission
pattern Permission_SELECT :: Permission
newtype ResourceShareType
ResourceShareType' :: Text -> ResourceShareType
[fromResourceShareType] :: ResourceShareType -> Text
pattern ResourceShareType_ALL :: ResourceShareType
pattern ResourceShareType_FOREIGN :: ResourceShareType
newtype ResourceType
ResourceType' :: Text -> ResourceType
[fromResourceType] :: ResourceType -> Text
pattern ResourceType_DATABASE :: ResourceType
pattern ResourceType_TABLE :: ResourceType

-- | A list of failures when performing a batch grant or batch revoke
--   operation.
--   
--   <i>See:</i> <a>newBatchPermissionsFailureEntry</a> smart constructor.
data BatchPermissionsFailureEntry
BatchPermissionsFailureEntry' :: Maybe ErrorDetail -> Maybe BatchPermissionsRequestEntry -> BatchPermissionsFailureEntry

-- | Create a value of <a>BatchPermissionsFailureEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:error:BatchPermissionsFailureEntry'</a>,
--   <a>batchPermissionsFailureEntry_error</a> - An error message that
--   applies to the failure of the entry.
--   
--   <a>$sel:requestEntry:BatchPermissionsFailureEntry'</a>,
--   <a>batchPermissionsFailureEntry_requestEntry</a> - An identifier for
--   an entry of the batch request.
newBatchPermissionsFailureEntry :: BatchPermissionsFailureEntry

-- | A permission to a resource granted by batch operation to the
--   principal.
--   
--   <i>See:</i> <a>newBatchPermissionsRequestEntry</a> smart constructor.
data BatchPermissionsRequestEntry
BatchPermissionsRequestEntry' :: Maybe [Permission] -> Maybe DataLakePrincipal -> Maybe Resource -> Maybe [Permission] -> Text -> BatchPermissionsRequestEntry

-- | Create a value of <a>BatchPermissionsRequestEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:permissionsWithGrantOption:BatchPermissionsRequestEntry'</a>,
--   <a>batchPermissionsRequestEntry_permissionsWithGrantOption</a> -
--   Indicates if the option to pass permissions is granted.
--   
--   <a>$sel:principal:BatchPermissionsRequestEntry'</a>,
--   <a>batchPermissionsRequestEntry_principal</a> - The principal to be
--   granted a permission.
--   
--   <a>$sel:resource:BatchPermissionsRequestEntry'</a>,
--   <a>batchPermissionsRequestEntry_resource</a> - The resource to which
--   the principal is to be granted a permission.
--   
--   <a>$sel:permissions:BatchPermissionsRequestEntry'</a>,
--   <a>batchPermissionsRequestEntry_permissions</a> - The permissions to
--   be granted.
--   
--   <a>$sel:id:BatchPermissionsRequestEntry'</a>,
--   <a>batchPermissionsRequestEntry_id</a> - A unique identifier for the
--   batch permissions request entry.
newBatchPermissionsRequestEntry :: Text -> BatchPermissionsRequestEntry

-- | A structure for the catalog object.
--   
--   <i>See:</i> <a>newCatalogResource</a> smart constructor.
data CatalogResource
CatalogResource' :: CatalogResource

-- | Create a value of <a>CatalogResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCatalogResource :: CatalogResource

-- | A structure containing the name of a column resource and the tags
--   attached to it.
--   
--   <i>See:</i> <a>newColumnLFTag</a> smart constructor.
data ColumnLFTag
ColumnLFTag' :: Maybe Text -> Maybe (NonEmpty LFTagPair) -> ColumnLFTag

-- | Create a value of <a>ColumnLFTag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ColumnLFTag'</a>, <a>columnLFTag_name</a> - The name of a
--   column resource.
--   
--   <a>$sel:lFTags:ColumnLFTag'</a>, <a>columnLFTag_lFTags</a> - The tags
--   attached to a column resource.
newColumnLFTag :: ColumnLFTag

-- | A wildcard object, consisting of an optional list of excluded column
--   names or indexes.
--   
--   <i>See:</i> <a>newColumnWildcard</a> smart constructor.
data ColumnWildcard
ColumnWildcard' :: Maybe [Text] -> ColumnWildcard

-- | Create a value of <a>ColumnWildcard</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:excludedColumnNames:ColumnWildcard'</a>,
--   <a>columnWildcard_excludedColumnNames</a> - Excludes column names. Any
--   column with this name will be excluded.
newColumnWildcard :: ColumnWildcard

-- | The AWS Lake Formation principal. Supported principals are IAM users
--   or IAM roles.
--   
--   <i>See:</i> <a>newDataLakePrincipal</a> smart constructor.
data DataLakePrincipal
DataLakePrincipal' :: Maybe Text -> DataLakePrincipal

-- | Create a value of <a>DataLakePrincipal</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLakePrincipalIdentifier:DataLakePrincipal'</a>,
--   <a>dataLakePrincipal_dataLakePrincipalIdentifier</a> - An identifier
--   for the AWS Lake Formation principal.
newDataLakePrincipal :: DataLakePrincipal

-- | A structure representing a list of AWS Lake Formation principals
--   designated as data lake administrators and lists of principal
--   permission entries for default create database and default create
--   table permissions.
--   
--   <i>See:</i> <a>newDataLakeSettings</a> smart constructor.
data DataLakeSettings
DataLakeSettings' :: Maybe [DataLakePrincipal] -> Maybe [Text] -> Maybe [PrincipalPermissions] -> Maybe [PrincipalPermissions] -> DataLakeSettings

-- | Create a value of <a>DataLakeSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLakeAdmins:DataLakeSettings'</a>,
--   <a>dataLakeSettings_dataLakeAdmins</a> - A list of AWS Lake Formation
--   principals. Supported principals are IAM users or IAM roles.
--   
--   <a>$sel:trustedResourceOwners:DataLakeSettings'</a>,
--   <a>dataLakeSettings_trustedResourceOwners</a> - A list of the
--   resource-owning account IDs that the caller's account can use to share
--   their user access details (user ARNs). The user ARNs can be logged in
--   the resource owner's AWS CloudTrail log.
--   
--   You may want to specify this property when you are in a high-trust
--   boundary, such as the same team or company.
--   
--   <a>$sel:createDatabaseDefaultPermissions:DataLakeSettings'</a>,
--   <a>dataLakeSettings_createDatabaseDefaultPermissions</a> - A structure
--   representing a list of up to three principal permissions entries for
--   default create database permissions.
--   
--   <a>$sel:createTableDefaultPermissions:DataLakeSettings'</a>,
--   <a>dataLakeSettings_createTableDefaultPermissions</a> - A structure
--   representing a list of up to three principal permissions entries for
--   default create table permissions.
newDataLakeSettings :: DataLakeSettings

-- | A structure for a data location object where permissions are granted
--   or revoked.
--   
--   <i>See:</i> <a>newDataLocationResource</a> smart constructor.
data DataLocationResource
DataLocationResource' :: Maybe Text -> Text -> DataLocationResource

-- | Create a value of <a>DataLocationResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DataLocationResource'</a>,
--   <a>dataLocationResource_catalogId</a> - The identifier for the Data
--   Catalog where the location is registered with AWS Lake Formation. By
--   default, it is the account ID of the caller.
--   
--   <a>$sel:resourceArn:DataLocationResource'</a>,
--   <a>dataLocationResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) that uniquely identifies the data location resource.
newDataLocationResource :: Text -> DataLocationResource

-- | A structure for the database object.
--   
--   <i>See:</i> <a>newDatabaseResource</a> smart constructor.
data DatabaseResource
DatabaseResource' :: Maybe Text -> Text -> DatabaseResource

-- | Create a value of <a>DatabaseResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DatabaseResource'</a>,
--   <a>databaseResource_catalogId</a> - The identifier for the Data
--   Catalog. By default, it is the account ID of the caller.
--   
--   <a>$sel:name:DatabaseResource'</a>, <a>databaseResource_name</a> - The
--   name of the database resource. Unique to the Data Catalog.
newDatabaseResource :: Text -> DatabaseResource

-- | A structure containing the additional details to be returned in the
--   <tt>AdditionalDetails</tt> attribute of
--   <tt>PrincipalResourcePermissions</tt>.
--   
--   If a catalog resource is shared through AWS Resource Access Manager
--   (AWS RAM), then there will exist a corresponding RAM resource share
--   ARN.
--   
--   <i>See:</i> <a>newDetailsMap</a> smart constructor.
data DetailsMap
DetailsMap' :: Maybe [Text] -> DetailsMap

-- | Create a value of <a>DetailsMap</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceShare:DetailsMap'</a>, <a>detailsMap_resourceShare</a>
--   - A resource share ARN for a catalog resource shared through AWS
--   Resource Access Manager (AWS RAM).
newDetailsMap :: DetailsMap

-- | Contains details about an error.
--   
--   <i>See:</i> <a>newErrorDetail</a> smart constructor.
data ErrorDetail
ErrorDetail' :: Maybe Text -> Maybe Text -> ErrorDetail

-- | Create a value of <a>ErrorDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:ErrorDetail'</a>, <a>errorDetail_errorCode</a> - The
--   code associated with this error.
--   
--   <a>$sel:errorMessage:ErrorDetail'</a>, <a>errorDetail_errorMessage</a>
--   - A message describing the error.
newErrorDetail :: ErrorDetail

-- | This structure describes the filtering of columns in a table based on
--   a filter condition.
--   
--   <i>See:</i> <a>newFilterCondition</a> smart constructor.
data FilterCondition
FilterCondition' :: Maybe FieldNameString -> Maybe ComparisonOperator -> Maybe [Text] -> FilterCondition

-- | Create a value of <a>FilterCondition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:field:FilterCondition'</a>, <a>filterCondition_field</a> - The
--   field to filter in the filter condition.
--   
--   <a>$sel:comparisonOperator:FilterCondition'</a>,
--   <a>filterCondition_comparisonOperator</a> - The comparison operator
--   used in the filter condition.
--   
--   <a>$sel:stringValueList:FilterCondition'</a>,
--   <a>filterCondition_stringValueList</a> - A string with values used in
--   evaluating the filter condition.
newFilterCondition :: FilterCondition

-- | A structure that allows an admin to grant user permissions on certain
--   conditions. For example, granting a role access to all columns not
--   tagged 'PII' of tables tagged 'Prod'.
--   
--   <i>See:</i> <a>newLFTag</a> smart constructor.
data LFTag
LFTag' :: Text -> NonEmpty Text -> LFTag

-- | Create a value of <a>LFTag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagKey:LFTag'</a>, <a>lFTag_tagKey</a> - The key-name for the
--   tag.
--   
--   <a>$sel:tagValues:LFTag'</a>, <a>lFTag_tagValues</a> - A list of
--   possible values an attribute can take.
newLFTag :: Text -> NonEmpty Text -> LFTag

-- | A structure containing an error related to a <tt>TagResource</tt> or
--   <tt>UnTagResource</tt> operation.
--   
--   <i>See:</i> <a>newLFTagError</a> smart constructor.
data LFTagError
LFTagError' :: Maybe LFTagPair -> Maybe ErrorDetail -> LFTagError

-- | Create a value of <a>LFTagError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lFTag:LFTagError'</a>, <a>lFTagError_lFTag</a> - The key-name
--   of the tag.
--   
--   <a>$sel:error:LFTagError'</a>, <a>lFTagError_error</a> - An error that
--   occurred with the attachment or detachment of the tag.
newLFTagError :: LFTagError

-- | A structure containing a tag key and values for a resource.
--   
--   <i>See:</i> <a>newLFTagKeyResource</a> smart constructor.
data LFTagKeyResource
LFTagKeyResource' :: Maybe Text -> Text -> NonEmpty Text -> LFTagKeyResource

-- | Create a value of <a>LFTagKeyResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:LFTagKeyResource'</a>,
--   <a>lFTagKeyResource_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:tagKey:LFTagKeyResource'</a>, <a>lFTagKeyResource_tagKey</a> -
--   The key-name for the tag.
--   
--   <a>$sel:tagValues:LFTagKeyResource'</a>,
--   <a>lFTagKeyResource_tagValues</a> - A list of possible values an
--   attribute can take.
newLFTagKeyResource :: Text -> NonEmpty Text -> LFTagKeyResource

-- | A structure containing a tag key-value pair.
--   
--   <i>See:</i> <a>newLFTagPair</a> smart constructor.
data LFTagPair
LFTagPair' :: Maybe Text -> Text -> NonEmpty Text -> LFTagPair

-- | Create a value of <a>LFTagPair</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:LFTagPair'</a>, <a>lFTagPair_catalogId</a> - The
--   identifier for the Data Catalog. By default, the account ID. The Data
--   Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
--   
--   <a>$sel:tagKey:LFTagPair'</a>, <a>lFTagPair_tagKey</a> - The key-name
--   for the tag.
--   
--   <a>$sel:tagValues:LFTagPair'</a>, <a>lFTagPair_tagValues</a> - A list
--   of possible values an attribute can take.
newLFTagPair :: Text -> NonEmpty Text -> LFTagPair

-- | A structure containing a list of tag conditions that apply to a
--   resource's tag policy.
--   
--   <i>See:</i> <a>newLFTagPolicyResource</a> smart constructor.
data LFTagPolicyResource
LFTagPolicyResource' :: Maybe Text -> ResourceType -> NonEmpty LFTag -> LFTagPolicyResource

-- | Create a value of <a>LFTagPolicyResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:LFTagPolicyResource'</a>,
--   <a>lFTagPolicyResource_catalogId</a> - The identifier for the Data
--   Catalog. By default, the account ID. The Data Catalog is the
--   persistent metadata store. It contains database definitions, table
--   definitions, and other control information to manage your AWS Lake
--   Formation environment.
--   
--   <a>$sel:resourceType:LFTagPolicyResource'</a>,
--   <a>lFTagPolicyResource_resourceType</a> - The resource type for which
--   the tag policy applies.
--   
--   <a>$sel:expression:LFTagPolicyResource'</a>,
--   <a>lFTagPolicyResource_expression</a> - A list of tag conditions that
--   apply to the resource's tag policy.
newLFTagPolicyResource :: ResourceType -> NonEmpty LFTag -> LFTagPolicyResource

-- | Permissions granted to a principal.
--   
--   <i>See:</i> <a>newPrincipalPermissions</a> smart constructor.
data PrincipalPermissions
PrincipalPermissions' :: Maybe DataLakePrincipal -> Maybe [Permission] -> PrincipalPermissions

-- | Create a value of <a>PrincipalPermissions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:principal:PrincipalPermissions'</a>,
--   <a>principalPermissions_principal</a> - The principal who is granted
--   permissions.
--   
--   <a>$sel:permissions:PrincipalPermissions'</a>,
--   <a>principalPermissions_permissions</a> - The permissions that are
--   granted to the principal.
newPrincipalPermissions :: PrincipalPermissions

-- | The permissions granted or revoked on a resource.
--   
--   <i>See:</i> <a>newPrincipalResourcePermissions</a> smart constructor.
data PrincipalResourcePermissions
PrincipalResourcePermissions' :: Maybe DetailsMap -> Maybe [Permission] -> Maybe DataLakePrincipal -> Maybe Resource -> Maybe [Permission] -> PrincipalResourcePermissions

-- | Create a value of <a>PrincipalResourcePermissions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:additionalDetails:PrincipalResourcePermissions'</a>,
--   <a>principalResourcePermissions_additionalDetails</a> - This attribute
--   can be used to return any additional details of
--   <tt>PrincipalResourcePermissions</tt>. Currently returns only as a RAM
--   resource share ARN.
--   
--   <a>$sel:permissionsWithGrantOption:PrincipalResourcePermissions'</a>,
--   <a>principalResourcePermissions_permissionsWithGrantOption</a> -
--   Indicates whether to grant the ability to grant permissions (as a
--   subset of permissions granted).
--   
--   <a>$sel:principal:PrincipalResourcePermissions'</a>,
--   <a>principalResourcePermissions_principal</a> - The Data Lake
--   principal to be granted or revoked permissions.
--   
--   <a>$sel:resource:PrincipalResourcePermissions'</a>,
--   <a>principalResourcePermissions_resource</a> - The resource where
--   permissions are to be granted or revoked.
--   
--   <a>$sel:permissions:PrincipalResourcePermissions'</a>,
--   <a>principalResourcePermissions_permissions</a> - The permissions to
--   be granted or revoked on the resource.
newPrincipalResourcePermissions :: PrincipalResourcePermissions

-- | A structure for the resource.
--   
--   <i>See:</i> <a>newResource</a> smart constructor.
data Resource
Resource' :: Maybe DataLocationResource -> Maybe DatabaseResource -> Maybe LFTagKeyResource -> Maybe CatalogResource -> Maybe LFTagPolicyResource -> Maybe TableResource -> Maybe TableWithColumnsResource -> Resource

-- | Create a value of <a>Resource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLocation:Resource'</a>, <a>resource_dataLocation</a> - The
--   location of an Amazon S3 path where permissions are granted or
--   revoked.
--   
--   <a>$sel:database:Resource'</a>, <a>resource_database</a> - The
--   database for the resource. Unique to the Data Catalog. A database is a
--   set of associated table definitions organized into a logical group.
--   You can Grant and Revoke database permissions to a principal.
--   
--   <a>$sel:lFTag:Resource'</a>, <a>resource_lFTag</a> - The tag key and
--   values attached to a resource.
--   
--   <a>$sel:catalog:Resource'</a>, <a>resource_catalog</a> - The
--   identifier for the Data Catalog. By default, the account ID. The Data
--   Catalog is the persistent metadata store. It contains database
--   definitions, table definitions, and other control information to
--   manage your AWS Lake Formation environment.
--   
--   <a>$sel:lFTagPolicy:Resource'</a>, <a>resource_lFTagPolicy</a> - A
--   list of tag conditions that define a resource's tag policy.
--   
--   <a>$sel:table:Resource'</a>, <a>resource_table</a> - The table for the
--   resource. A table is a metadata definition that represents your data.
--   You can Grant and Revoke table privileges to a principal.
--   
--   <a>$sel:tableWithColumns:Resource'</a>,
--   <a>resource_tableWithColumns</a> - The table with columns for the
--   resource. A principal with permissions to this resource can select
--   metadata from the columns of a table in the Data Catalog and the
--   underlying data in Amazon S3.
newResource :: Resource

-- | A structure containing information about an AWS Lake Formation
--   resource.
--   
--   <i>See:</i> <a>newResourceInfo</a> smart constructor.
data ResourceInfo
ResourceInfo' :: Maybe Text -> Maybe POSIX -> Maybe Text -> ResourceInfo

-- | Create a value of <a>ResourceInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ResourceInfo'</a>, <a>resourceInfo_resourceArn</a>
--   - The Amazon Resource Name (ARN) of the resource.
--   
--   <a>$sel:lastModified:ResourceInfo'</a>,
--   <a>resourceInfo_lastModified</a> - The date and time the resource was
--   last modified.
--   
--   <a>$sel:roleArn:ResourceInfo'</a>, <a>resourceInfo_roleArn</a> - The
--   IAM role that registered a resource.
newResourceInfo :: ResourceInfo

-- | A structure for the table object. A table is a metadata definition
--   that represents your data. You can Grant and Revoke table privileges
--   to a principal.
--   
--   <i>See:</i> <a>newTableResource</a> smart constructor.
data TableResource
TableResource' :: Maybe Text -> Maybe TableWildcard -> Maybe Text -> Text -> TableResource

-- | Create a value of <a>TableResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:TableResource'</a>, <a>tableResource_catalogId</a> -
--   The identifier for the Data Catalog. By default, it is the account ID
--   of the caller.
--   
--   <a>$sel:tableWildcard:TableResource'</a>,
--   <a>tableResource_tableWildcard</a> - A wildcard object representing
--   every table under a database.
--   
--   At least one of <tt>TableResource$Name</tt> or
--   <tt>TableResource$TableWildcard</tt> is required.
--   
--   <a>$sel:name:TableResource'</a>, <a>tableResource_name</a> - The name
--   of the table.
--   
--   <a>$sel:databaseName:TableResource'</a>,
--   <a>tableResource_databaseName</a> - The name of the database for the
--   table. Unique to a Data Catalog. A database is a set of associated
--   table definitions organized into a logical group. You can Grant and
--   Revoke database privileges to a principal.
newTableResource :: Text -> TableResource

-- | A wildcard object representing every table under a database.
--   
--   <i>See:</i> <a>newTableWildcard</a> smart constructor.
data TableWildcard
TableWildcard' :: TableWildcard

-- | Create a value of <a>TableWildcard</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTableWildcard :: TableWildcard

-- | A structure for a table with columns object. This object is only used
--   when granting a SELECT permission.
--   
--   This object must take a value for at least one of
--   <tt>ColumnsNames</tt>, <tt>ColumnsIndexes</tt>, or
--   <tt>ColumnsWildcard</tt>.
--   
--   <i>See:</i> <a>newTableWithColumnsResource</a> smart constructor.
data TableWithColumnsResource
TableWithColumnsResource' :: Maybe Text -> Maybe ColumnWildcard -> Maybe [Text] -> Text -> Text -> TableWithColumnsResource

-- | Create a value of <a>TableWithColumnsResource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:TableWithColumnsResource'</a>,
--   <a>tableWithColumnsResource_catalogId</a> - The identifier for the
--   Data Catalog. By default, it is the account ID of the caller.
--   
--   <a>$sel:columnWildcard:TableWithColumnsResource'</a>,
--   <a>tableWithColumnsResource_columnWildcard</a> - A wildcard specified
--   by a <tt>ColumnWildcard</tt> object. At least one of
--   <tt>ColumnNames</tt> or <tt>ColumnWildcard</tt> is required.
--   
--   <a>$sel:columnNames:TableWithColumnsResource'</a>,
--   <a>tableWithColumnsResource_columnNames</a> - The list of column names
--   for the table. At least one of <tt>ColumnNames</tt> or
--   <tt>ColumnWildcard</tt> is required.
--   
--   <a>$sel:databaseName:TableWithColumnsResource'</a>,
--   <a>tableWithColumnsResource_databaseName</a> - The name of the
--   database for the table with columns resource. Unique to the Data
--   Catalog. A database is a set of associated table definitions organized
--   into a logical group. You can Grant and Revoke database privileges to
--   a principal.
--   
--   <a>$sel:name:TableWithColumnsResource'</a>,
--   <a>tableWithColumnsResource_name</a> - The name of the table resource.
--   A table is a metadata definition that represents your data. You can
--   Grant and Revoke table privileges to a principal.
newTableWithColumnsResource :: Text -> Text -> TableWithColumnsResource

-- | A structure describing a database resource with tags.
--   
--   <i>See:</i> <a>newTaggedDatabase</a> smart constructor.
data TaggedDatabase
TaggedDatabase' :: Maybe DatabaseResource -> Maybe (NonEmpty LFTagPair) -> TaggedDatabase

-- | Create a value of <a>TaggedDatabase</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:database:TaggedDatabase'</a>, <a>taggedDatabase_database</a> -
--   A database that has tags attached to it.
--   
--   <a>$sel:lFTags:TaggedDatabase'</a>, <a>taggedDatabase_lFTags</a> - A
--   list of tags attached to the database.
newTaggedDatabase :: TaggedDatabase

-- | A structure describing a table resource with tags.
--   
--   <i>See:</i> <a>newTaggedTable</a> smart constructor.
data TaggedTable
TaggedTable' :: Maybe (NonEmpty LFTagPair) -> Maybe (NonEmpty LFTagPair) -> Maybe [ColumnLFTag] -> Maybe TableResource -> TaggedTable

-- | Create a value of <a>TaggedTable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lFTagsOnTable:TaggedTable'</a>,
--   <a>taggedTable_lFTagsOnTable</a> - A list of tags attached to the
--   table.
--   
--   <a>$sel:lFTagOnDatabase:TaggedTable'</a>,
--   <a>taggedTable_lFTagOnDatabase</a> - A list of tags attached to the
--   database where the table resides.
--   
--   <a>$sel:lFTagsOnColumns:TaggedTable'</a>,
--   <a>taggedTable_lFTagsOnColumns</a> - A list of tags attached to
--   columns in the table.
--   
--   <a>$sel:table:TaggedTable'</a>, <a>taggedTable_table</a> - A table
--   that has tags attached to it.
newTaggedTable :: TaggedTable
