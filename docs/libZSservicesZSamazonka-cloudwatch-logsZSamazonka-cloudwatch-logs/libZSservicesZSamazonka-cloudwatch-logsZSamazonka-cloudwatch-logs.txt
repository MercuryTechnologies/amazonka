-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-cloudwatch-logsZSamazonka-cloudwatch-logs
@version 2.0


module Network.AWS.CloudWatchLogs.Types.Destination

-- | Represents a cross-account destination that receives subscription log
--   events.
--   
--   <i>See:</i> <a>newDestination</a> smart constructor.
data Destination
Destination' :: Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Destination

-- | The Amazon Resource Name (ARN) of the physical target where the log
--   events are delivered (for example, a Kinesis stream).
[$sel:targetArn:Destination'] :: Destination -> Maybe Text

-- | The creation time of the destination, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
[$sel:creationTime:Destination'] :: Destination -> Maybe Natural

-- | The ARN of this destination.
[$sel:arn:Destination'] :: Destination -> Maybe Text

-- | An IAM policy document that governs which Amazon Web Services accounts
--   can create subscription filters against this destination.
[$sel:accessPolicy:Destination'] :: Destination -> Maybe Text

-- | The name of the destination.
[$sel:destinationName:Destination'] :: Destination -> Maybe Text

-- | A role for impersonation, used when delivering log events to the
--   target.
[$sel:roleArn:Destination'] :: Destination -> Maybe Text

-- | Create a value of <a>Destination</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetArn:Destination'</a>, <a>destination_targetArn</a> - The
--   Amazon Resource Name (ARN) of the physical target where the log events
--   are delivered (for example, a Kinesis stream).
--   
--   <a>$sel:creationTime:Destination'</a>, <a>destination_creationTime</a>
--   - The creation time of the destination, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:arn:Destination'</a>, <a>destination_arn</a> - The ARN of this
--   destination.
--   
--   <a>$sel:accessPolicy:Destination'</a>, <a>destination_accessPolicy</a>
--   - An IAM policy document that governs which Amazon Web Services
--   accounts can create subscription filters against this destination.
--   
--   <a>$sel:destinationName:Destination'</a>,
--   <a>destination_destinationName</a> - The name of the destination.
--   
--   <a>$sel:roleArn:Destination'</a>, <a>destination_roleArn</a> - A role
--   for impersonation, used when delivering log events to the target.
newDestination :: Destination

-- | The Amazon Resource Name (ARN) of the physical target where the log
--   events are delivered (for example, a Kinesis stream).
destination_targetArn :: Lens' Destination (Maybe Text)

-- | The creation time of the destination, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
destination_creationTime :: Lens' Destination (Maybe Natural)

-- | The ARN of this destination.
destination_arn :: Lens' Destination (Maybe Text)

-- | An IAM policy document that governs which Amazon Web Services accounts
--   can create subscription filters against this destination.
destination_accessPolicy :: Lens' Destination (Maybe Text)

-- | The name of the destination.
destination_destinationName :: Lens' Destination (Maybe Text)

-- | A role for impersonation, used when delivering log events to the
--   target.
destination_roleArn :: Lens' Destination (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.Destination.Destination
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.Destination.Destination
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.Destination.Destination
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.Destination.Destination
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.Destination.Destination
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.Destination.Destination
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.Destination.Destination


module Network.AWS.CloudWatchLogs.Types.Distribution

-- | The method used to distribute log data to the destination, which can
--   be either random or grouped by log stream.
newtype Distribution
Distribution' :: Text -> Distribution
[fromDistribution] :: Distribution -> Text
pattern Distribution_ByLogStream :: Distribution
pattern Distribution_Random :: Distribution
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudWatchLogs.Types.Distribution.Distribution
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatchLogs.Types.Distribution.Distribution
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudWatchLogs.Types.Distribution.Distribution
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.Types.Distribution.Distribution
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudWatchLogs.Types.Distribution.Distribution
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.Distribution.Distribution
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.Types.Distribution.Distribution
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudWatchLogs.Types.Distribution.Distribution
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudWatchLogs.Types.Distribution.Distribution
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudWatchLogs.Types.Distribution.Distribution
instance Network.AWS.Data.Text.ToText Network.AWS.CloudWatchLogs.Types.Distribution.Distribution
instance Network.AWS.Data.Text.FromText Network.AWS.CloudWatchLogs.Types.Distribution.Distribution
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.Distribution.Distribution
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.Distribution.Distribution
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.Distribution.Distribution
instance GHC.Classes.Ord Network.AWS.CloudWatchLogs.Types.Distribution.Distribution
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.Distribution.Distribution
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.Distribution.Distribution
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.Distribution.Distribution


module Network.AWS.CloudWatchLogs.Types.ExportTaskExecutionInfo

-- | Represents the status of an export task.
--   
--   <i>See:</i> <a>newExportTaskExecutionInfo</a> smart constructor.
data ExportTaskExecutionInfo
ExportTaskExecutionInfo' :: Maybe Natural -> Maybe Natural -> ExportTaskExecutionInfo

-- | The creation time of the export task, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
[$sel:creationTime:ExportTaskExecutionInfo'] :: ExportTaskExecutionInfo -> Maybe Natural

-- | The completion time of the export task, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
[$sel:completionTime:ExportTaskExecutionInfo'] :: ExportTaskExecutionInfo -> Maybe Natural

-- | Create a value of <a>ExportTaskExecutionInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ExportTaskExecutionInfo'</a>,
--   <a>exportTaskExecutionInfo_creationTime</a> - The creation time of the
--   export task, expressed as the number of milliseconds after Jan 1, 1970
--   00:00:00 UTC.
--   
--   <a>$sel:completionTime:ExportTaskExecutionInfo'</a>,
--   <a>exportTaskExecutionInfo_completionTime</a> - The completion time of
--   the export task, expressed as the number of milliseconds after Jan 1,
--   1970 00:00:00 UTC.
newExportTaskExecutionInfo :: ExportTaskExecutionInfo

-- | The creation time of the export task, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
exportTaskExecutionInfo_creationTime :: Lens' ExportTaskExecutionInfo (Maybe Natural)

-- | The completion time of the export task, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
exportTaskExecutionInfo_completionTime :: Lens' ExportTaskExecutionInfo (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.ExportTaskExecutionInfo.ExportTaskExecutionInfo
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.ExportTaskExecutionInfo.ExportTaskExecutionInfo
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.ExportTaskExecutionInfo.ExportTaskExecutionInfo
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.ExportTaskExecutionInfo.ExportTaskExecutionInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.ExportTaskExecutionInfo.ExportTaskExecutionInfo
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.ExportTaskExecutionInfo.ExportTaskExecutionInfo
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.ExportTaskExecutionInfo.ExportTaskExecutionInfo


module Network.AWS.CloudWatchLogs.Types.ExportTaskStatusCode
newtype ExportTaskStatusCode
ExportTaskStatusCode' :: Text -> ExportTaskStatusCode
[fromExportTaskStatusCode] :: ExportTaskStatusCode -> Text
pattern ExportTaskStatusCode_CANCELLED :: ExportTaskStatusCode
pattern ExportTaskStatusCode_COMPLETED :: ExportTaskStatusCode
pattern ExportTaskStatusCode_FAILED :: ExportTaskStatusCode
pattern ExportTaskStatusCode_PENDING :: ExportTaskStatusCode
pattern ExportTaskStatusCode_PENDING_CANCEL :: ExportTaskStatusCode
pattern ExportTaskStatusCode_RUNNING :: ExportTaskStatusCode
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudWatchLogs.Types.ExportTaskStatusCode.ExportTaskStatusCode
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatchLogs.Types.ExportTaskStatusCode.ExportTaskStatusCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudWatchLogs.Types.ExportTaskStatusCode.ExportTaskStatusCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.Types.ExportTaskStatusCode.ExportTaskStatusCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudWatchLogs.Types.ExportTaskStatusCode.ExportTaskStatusCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.ExportTaskStatusCode.ExportTaskStatusCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.Types.ExportTaskStatusCode.ExportTaskStatusCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudWatchLogs.Types.ExportTaskStatusCode.ExportTaskStatusCode
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudWatchLogs.Types.ExportTaskStatusCode.ExportTaskStatusCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudWatchLogs.Types.ExportTaskStatusCode.ExportTaskStatusCode
instance Network.AWS.Data.Text.ToText Network.AWS.CloudWatchLogs.Types.ExportTaskStatusCode.ExportTaskStatusCode
instance Network.AWS.Data.Text.FromText Network.AWS.CloudWatchLogs.Types.ExportTaskStatusCode.ExportTaskStatusCode
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.ExportTaskStatusCode.ExportTaskStatusCode
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.ExportTaskStatusCode.ExportTaskStatusCode
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.ExportTaskStatusCode.ExportTaskStatusCode
instance GHC.Classes.Ord Network.AWS.CloudWatchLogs.Types.ExportTaskStatusCode.ExportTaskStatusCode
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.ExportTaskStatusCode.ExportTaskStatusCode
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.ExportTaskStatusCode.ExportTaskStatusCode
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.ExportTaskStatusCode.ExportTaskStatusCode


module Network.AWS.CloudWatchLogs.Types.ExportTaskStatus

-- | Represents the status of an export task.
--   
--   <i>See:</i> <a>newExportTaskStatus</a> smart constructor.
data ExportTaskStatus
ExportTaskStatus' :: Maybe ExportTaskStatusCode -> Maybe Text -> ExportTaskStatus

-- | The status code of the export task.
[$sel:code:ExportTaskStatus'] :: ExportTaskStatus -> Maybe ExportTaskStatusCode

-- | The status message related to the status code.
[$sel:message:ExportTaskStatus'] :: ExportTaskStatus -> Maybe Text

-- | Create a value of <a>ExportTaskStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:code:ExportTaskStatus'</a>, <a>exportTaskStatus_code</a> - The
--   status code of the export task.
--   
--   <a>$sel:message:ExportTaskStatus'</a>, <a>exportTaskStatus_message</a>
--   - The status message related to the status code.
newExportTaskStatus :: ExportTaskStatus

-- | The status code of the export task.
exportTaskStatus_code :: Lens' ExportTaskStatus (Maybe ExportTaskStatusCode)

-- | The status message related to the status code.
exportTaskStatus_message :: Lens' ExportTaskStatus (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.ExportTaskStatus.ExportTaskStatus
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.ExportTaskStatus.ExportTaskStatus
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.ExportTaskStatus.ExportTaskStatus
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.ExportTaskStatus.ExportTaskStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.ExportTaskStatus.ExportTaskStatus
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.ExportTaskStatus.ExportTaskStatus
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.ExportTaskStatus.ExportTaskStatus


module Network.AWS.CloudWatchLogs.Types.ExportTask

-- | Represents an export task.
--   
--   <i>See:</i> <a>newExportTask</a> smart constructor.
data ExportTask
ExportTask' :: Maybe Text -> Maybe Text -> Maybe ExportTaskStatus -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe ExportTaskExecutionInfo -> ExportTask

-- | The prefix that was used as the start of Amazon S3 key for every
--   object exported.
[$sel:destinationPrefix:ExportTask'] :: ExportTask -> Maybe Text

-- | The name of the S3 bucket to which the log data was exported.
[$sel:destination:ExportTask'] :: ExportTask -> Maybe Text

-- | The status of the export task.
[$sel:status:ExportTask'] :: ExportTask -> Maybe ExportTaskStatus

-- | The name of the export task.
[$sel:taskName:ExportTask'] :: ExportTask -> Maybe Text

-- | The ID of the export task.
[$sel:taskId:ExportTask'] :: ExportTask -> Maybe Text

-- | The end time, expressed as the number of milliseconds after Jan 1,
--   1970 00:00:00 UTC. Events with a timestamp later than this time are
--   not exported.
[$sel:to:ExportTask'] :: ExportTask -> Maybe Natural

-- | The start time, expressed as the number of milliseconds after Jan 1,
--   1970 00:00:00 UTC. Events with a timestamp before this time are not
--   exported.
[$sel:from:ExportTask'] :: ExportTask -> Maybe Natural

-- | The name of the log group from which logs data was exported.
[$sel:logGroupName:ExportTask'] :: ExportTask -> Maybe Text

-- | Execution information about the export task.
[$sel:executionInfo:ExportTask'] :: ExportTask -> Maybe ExportTaskExecutionInfo

-- | Create a value of <a>ExportTask</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationPrefix:ExportTask'</a>,
--   <a>exportTask_destinationPrefix</a> - The prefix that was used as the
--   start of Amazon S3 key for every object exported.
--   
--   <a>$sel:destination:ExportTask'</a>, <a>exportTask_destination</a> -
--   The name of the S3 bucket to which the log data was exported.
--   
--   <a>$sel:status:ExportTask'</a>, <a>exportTask_status</a> - The status
--   of the export task.
--   
--   <a>$sel:taskName:ExportTask'</a>, <a>exportTask_taskName</a> - The
--   name of the export task.
--   
--   <a>$sel:taskId:ExportTask'</a>, <a>exportTask_taskId</a> - The ID of
--   the export task.
--   
--   <a>$sel:to:ExportTask'</a>, <a>exportTask_to</a> - The end time,
--   expressed as the number of milliseconds after Jan 1, 1970 00:00:00
--   UTC. Events with a timestamp later than this time are not exported.
--   
--   <a>$sel:from:ExportTask'</a>, <a>exportTask_from</a> - The start time,
--   expressed as the number of milliseconds after Jan 1, 1970 00:00:00
--   UTC. Events with a timestamp before this time are not exported.
--   
--   <a>$sel:logGroupName:ExportTask'</a>, <a>exportTask_logGroupName</a> -
--   The name of the log group from which logs data was exported.
--   
--   <a>$sel:executionInfo:ExportTask'</a>, <a>exportTask_executionInfo</a>
--   - Execution information about the export task.
newExportTask :: ExportTask

-- | The prefix that was used as the start of Amazon S3 key for every
--   object exported.
exportTask_destinationPrefix :: Lens' ExportTask (Maybe Text)

-- | The name of the S3 bucket to which the log data was exported.
exportTask_destination :: Lens' ExportTask (Maybe Text)

-- | The status of the export task.
exportTask_status :: Lens' ExportTask (Maybe ExportTaskStatus)

-- | The name of the export task.
exportTask_taskName :: Lens' ExportTask (Maybe Text)

-- | The ID of the export task.
exportTask_taskId :: Lens' ExportTask (Maybe Text)

-- | The end time, expressed as the number of milliseconds after Jan 1,
--   1970 00:00:00 UTC. Events with a timestamp later than this time are
--   not exported.
exportTask_to :: Lens' ExportTask (Maybe Natural)

-- | The start time, expressed as the number of milliseconds after Jan 1,
--   1970 00:00:00 UTC. Events with a timestamp before this time are not
--   exported.
exportTask_from :: Lens' ExportTask (Maybe Natural)

-- | The name of the log group from which logs data was exported.
exportTask_logGroupName :: Lens' ExportTask (Maybe Text)

-- | Execution information about the export task.
exportTask_executionInfo :: Lens' ExportTask (Maybe ExportTaskExecutionInfo)
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.ExportTask.ExportTask
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.ExportTask.ExportTask
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.ExportTask.ExportTask
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.ExportTask.ExportTask
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.ExportTask.ExportTask
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.ExportTask.ExportTask
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.ExportTask.ExportTask


module Network.AWS.CloudWatchLogs.Types.FilteredLogEvent

-- | Represents a matched event.
--   
--   <i>See:</i> <a>newFilteredLogEvent</a> smart constructor.
data FilteredLogEvent
FilteredLogEvent' :: Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> FilteredLogEvent

-- | The time the event was ingested, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
[$sel:ingestionTime:FilteredLogEvent'] :: FilteredLogEvent -> Maybe Natural

-- | The name of the log stream to which this event belongs.
[$sel:logStreamName:FilteredLogEvent'] :: FilteredLogEvent -> Maybe Text

-- | The data contained in the log event.
[$sel:message:FilteredLogEvent'] :: FilteredLogEvent -> Maybe Text

-- | The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
[$sel:timestamp:FilteredLogEvent'] :: FilteredLogEvent -> Maybe Natural

-- | The ID of the event.
[$sel:eventId:FilteredLogEvent'] :: FilteredLogEvent -> Maybe Text

-- | Create a value of <a>FilteredLogEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ingestionTime:FilteredLogEvent'</a>,
--   <a>filteredLogEvent_ingestionTime</a> - The time the event was
--   ingested, expressed as the number of milliseconds after Jan 1, 1970
--   00:00:00 UTC.
--   
--   <a>$sel:logStreamName:FilteredLogEvent'</a>,
--   <a>filteredLogEvent_logStreamName</a> - The name of the log stream to
--   which this event belongs.
--   
--   <a>$sel:message:FilteredLogEvent'</a>, <a>filteredLogEvent_message</a>
--   - The data contained in the log event.
--   
--   <a>$sel:timestamp:FilteredLogEvent'</a>,
--   <a>filteredLogEvent_timestamp</a> - The time the event occurred,
--   expressed as the number of milliseconds after Jan 1, 1970 00:00:00
--   UTC.
--   
--   <a>$sel:eventId:FilteredLogEvent'</a>, <a>filteredLogEvent_eventId</a>
--   - The ID of the event.
newFilteredLogEvent :: FilteredLogEvent

-- | The time the event was ingested, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
filteredLogEvent_ingestionTime :: Lens' FilteredLogEvent (Maybe Natural)

-- | The name of the log stream to which this event belongs.
filteredLogEvent_logStreamName :: Lens' FilteredLogEvent (Maybe Text)

-- | The data contained in the log event.
filteredLogEvent_message :: Lens' FilteredLogEvent (Maybe Text)

-- | The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
filteredLogEvent_timestamp :: Lens' FilteredLogEvent (Maybe Natural)

-- | The ID of the event.
filteredLogEvent_eventId :: Lens' FilteredLogEvent (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.FilteredLogEvent.FilteredLogEvent
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.FilteredLogEvent.FilteredLogEvent
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.FilteredLogEvent.FilteredLogEvent
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.FilteredLogEvent.FilteredLogEvent
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.FilteredLogEvent.FilteredLogEvent
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.FilteredLogEvent.FilteredLogEvent
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.FilteredLogEvent.FilteredLogEvent


module Network.AWS.CloudWatchLogs.Types.InputLogEvent

-- | Represents a log event, which is a record of activity that was
--   recorded by the application or resource being monitored.
--   
--   <i>See:</i> <a>newInputLogEvent</a> smart constructor.
data InputLogEvent
InputLogEvent' :: Natural -> Text -> InputLogEvent

-- | The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
[$sel:timestamp:InputLogEvent'] :: InputLogEvent -> Natural

-- | The raw event message.
[$sel:message:InputLogEvent'] :: InputLogEvent -> Text

-- | Create a value of <a>InputLogEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamp:InputLogEvent'</a>, <a>inputLogEvent_timestamp</a> -
--   The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:message:InputLogEvent'</a>, <a>inputLogEvent_message</a> - The
--   raw event message.
newInputLogEvent :: Natural -> Text -> InputLogEvent

-- | The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
inputLogEvent_timestamp :: Lens' InputLogEvent Natural

-- | The raw event message.
inputLogEvent_message :: Lens' InputLogEvent Text
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.InputLogEvent.InputLogEvent
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.InputLogEvent.InputLogEvent
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.InputLogEvent.InputLogEvent
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.InputLogEvent.InputLogEvent
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.InputLogEvent.InputLogEvent
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.InputLogEvent.InputLogEvent
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.Types.InputLogEvent.InputLogEvent


module Network.AWS.CloudWatchLogs.Types.LogGroup

-- | Represents a log group.
--   
--   <i>See:</i> <a>newLogGroup</a> smart constructor.
data LogGroup
LogGroup' :: Maybe Natural -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Natural -> LogGroup

-- | The creation time of the log group, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
[$sel:creationTime:LogGroup'] :: LogGroup -> Maybe Natural

-- | The number of metric filters.
[$sel:metricFilterCount:LogGroup'] :: LogGroup -> Maybe Int

-- | The Amazon Resource Name (ARN) of the log group.
[$sel:arn:LogGroup'] :: LogGroup -> Maybe Text

-- | The name of the log group.
[$sel:logGroupName:LogGroup'] :: LogGroup -> Maybe Text
[$sel:retentionInDays:LogGroup'] :: LogGroup -> Maybe Int

-- | The Amazon Resource Name (ARN) of the CMK to use when encrypting log
--   data.
[$sel:kmsKeyId:LogGroup'] :: LogGroup -> Maybe Text

-- | The number of bytes stored.
[$sel:storedBytes:LogGroup'] :: LogGroup -> Maybe Natural

-- | Create a value of <a>LogGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:LogGroup'</a>, <a>logGroup_creationTime</a> - The
--   creation time of the log group, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:metricFilterCount:LogGroup'</a>,
--   <a>logGroup_metricFilterCount</a> - The number of metric filters.
--   
--   <a>$sel:arn:LogGroup'</a>, <a>logGroup_arn</a> - The Amazon Resource
--   Name (ARN) of the log group.
--   
--   <a>$sel:logGroupName:LogGroup'</a>, <a>logGroup_logGroupName</a> - The
--   name of the log group.
--   
--   <a>$sel:retentionInDays:LogGroup'</a>, <a>logGroup_retentionInDays</a>
--   - Undocumented member.
--   
--   <a>$sel:kmsKeyId:LogGroup'</a>, <a>logGroup_kmsKeyId</a> - The Amazon
--   Resource Name (ARN) of the CMK to use when encrypting log data.
--   
--   <a>$sel:storedBytes:LogGroup'</a>, <a>logGroup_storedBytes</a> - The
--   number of bytes stored.
newLogGroup :: LogGroup

-- | The creation time of the log group, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
logGroup_creationTime :: Lens' LogGroup (Maybe Natural)

-- | The number of metric filters.
logGroup_metricFilterCount :: Lens' LogGroup (Maybe Int)

-- | The Amazon Resource Name (ARN) of the log group.
logGroup_arn :: Lens' LogGroup (Maybe Text)

-- | The name of the log group.
logGroup_logGroupName :: Lens' LogGroup (Maybe Text)

-- | Undocumented member.
logGroup_retentionInDays :: Lens' LogGroup (Maybe Int)

-- | The Amazon Resource Name (ARN) of the CMK to use when encrypting log
--   data.
logGroup_kmsKeyId :: Lens' LogGroup (Maybe Text)

-- | The number of bytes stored.
logGroup_storedBytes :: Lens' LogGroup (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.LogGroup.LogGroup
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.LogGroup.LogGroup
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.LogGroup.LogGroup
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.LogGroup.LogGroup
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.LogGroup.LogGroup
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.LogGroup.LogGroup
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.LogGroup.LogGroup


module Network.AWS.CloudWatchLogs.Types.LogGroupField

-- | The fields contained in log events found by a
--   <tt>GetLogGroupFields</tt> operation, along with the percentage of
--   queried log events in which each field appears.
--   
--   <i>See:</i> <a>newLogGroupField</a> smart constructor.
data LogGroupField
LogGroupField' :: Maybe Natural -> Maybe Text -> LogGroupField

-- | The percentage of log events queried that contained the field.
[$sel:percent:LogGroupField'] :: LogGroupField -> Maybe Natural

-- | The name of a log field.
[$sel:name:LogGroupField'] :: LogGroupField -> Maybe Text

-- | Create a value of <a>LogGroupField</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:percent:LogGroupField'</a>, <a>logGroupField_percent</a> - The
--   percentage of log events queried that contained the field.
--   
--   <a>$sel:name:LogGroupField'</a>, <a>logGroupField_name</a> - The name
--   of a log field.
newLogGroupField :: LogGroupField

-- | The percentage of log events queried that contained the field.
logGroupField_percent :: Lens' LogGroupField (Maybe Natural)

-- | The name of a log field.
logGroupField_name :: Lens' LogGroupField (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.LogGroupField.LogGroupField
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.LogGroupField.LogGroupField
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.LogGroupField.LogGroupField
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.LogGroupField.LogGroupField
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.LogGroupField.LogGroupField
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.LogGroupField.LogGroupField
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.LogGroupField.LogGroupField


module Network.AWS.CloudWatchLogs.Types.LogStream

-- | Represents a log stream, which is a sequence of log events from a
--   single emitter of logs.
--   
--   <i>See:</i> <a>newLogStream</a> smart constructor.
data LogStream
LogStream' :: Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Natural -> LogStream

-- | The creation time of the stream, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
[$sel:creationTime:LogStream'] :: LogStream -> Maybe Natural

-- | The sequence token.
[$sel:uploadSequenceToken:LogStream'] :: LogStream -> Maybe Text

-- | The Amazon Resource Name (ARN) of the log stream.
[$sel:arn:LogStream'] :: LogStream -> Maybe Text

-- | The time of the first event, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
[$sel:firstEventTimestamp:LogStream'] :: LogStream -> Maybe Natural

-- | The name of the log stream.
[$sel:logStreamName:LogStream'] :: LogStream -> Maybe Text

-- | The number of bytes stored.
--   
--   <b>Important:</b> On June 17, 2019, this parameter was deprecated for
--   log streams, and is always reported as zero. This change applies only
--   to log streams. The <tt>storedBytes</tt> parameter for log groups is
--   not affected.
[$sel:storedBytes:LogStream'] :: LogStream -> Maybe Natural

-- | The ingestion time, expressed as the number of milliseconds after Jan
--   1, 1970 00:00:00 UTC.
[$sel:lastIngestionTime:LogStream'] :: LogStream -> Maybe Natural

-- | The time of the most recent log event in the log stream in CloudWatch
--   Logs. This number is expressed as the number of milliseconds after Jan
--   1, 1970 00:00:00 UTC. The <tt>lastEventTime</tt> value updates on an
--   eventual consistency basis. It typically updates in less than an hour
--   from ingestion, but in rare situations might take longer.
[$sel:lastEventTimestamp:LogStream'] :: LogStream -> Maybe Natural

-- | Create a value of <a>LogStream</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:LogStream'</a>, <a>logStream_creationTime</a> -
--   The creation time of the stream, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:uploadSequenceToken:LogStream'</a>,
--   <a>logStream_uploadSequenceToken</a> - The sequence token.
--   
--   <a>$sel:arn:LogStream'</a>, <a>logStream_arn</a> - The Amazon Resource
--   Name (ARN) of the log stream.
--   
--   <a>$sel:firstEventTimestamp:LogStream'</a>,
--   <a>logStream_firstEventTimestamp</a> - The time of the first event,
--   expressed as the number of milliseconds after Jan 1, 1970 00:00:00
--   UTC.
--   
--   <a>$sel:logStreamName:LogStream'</a>, <a>logStream_logStreamName</a> -
--   The name of the log stream.
--   
--   <a>$sel:storedBytes:LogStream'</a>, <a>logStream_storedBytes</a> - The
--   number of bytes stored.
--   
--   <b>Important:</b> On June 17, 2019, this parameter was deprecated for
--   log streams, and is always reported as zero. This change applies only
--   to log streams. The <tt>storedBytes</tt> parameter for log groups is
--   not affected.
--   
--   <a>$sel:lastIngestionTime:LogStream'</a>,
--   <a>logStream_lastIngestionTime</a> - The ingestion time, expressed as
--   the number of milliseconds after Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:lastEventTimestamp:LogStream'</a>,
--   <a>logStream_lastEventTimestamp</a> - The time of the most recent log
--   event in the log stream in CloudWatch Logs. This number is expressed
--   as the number of milliseconds after Jan 1, 1970 00:00:00 UTC. The
--   <tt>lastEventTime</tt> value updates on an eventual consistency basis.
--   It typically updates in less than an hour from ingestion, but in rare
--   situations might take longer.
newLogStream :: LogStream

-- | The creation time of the stream, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
logStream_creationTime :: Lens' LogStream (Maybe Natural)

-- | The sequence token.
logStream_uploadSequenceToken :: Lens' LogStream (Maybe Text)

-- | The Amazon Resource Name (ARN) of the log stream.
logStream_arn :: Lens' LogStream (Maybe Text)

-- | The time of the first event, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
logStream_firstEventTimestamp :: Lens' LogStream (Maybe Natural)

-- | The name of the log stream.
logStream_logStreamName :: Lens' LogStream (Maybe Text)

-- | The number of bytes stored.
--   
--   <b>Important:</b> On June 17, 2019, this parameter was deprecated for
--   log streams, and is always reported as zero. This change applies only
--   to log streams. The <tt>storedBytes</tt> parameter for log groups is
--   not affected.
logStream_storedBytes :: Lens' LogStream (Maybe Natural)

-- | The ingestion time, expressed as the number of milliseconds after Jan
--   1, 1970 00:00:00 UTC.
logStream_lastIngestionTime :: Lens' LogStream (Maybe Natural)

-- | The time of the most recent log event in the log stream in CloudWatch
--   Logs. This number is expressed as the number of milliseconds after Jan
--   1, 1970 00:00:00 UTC. The <tt>lastEventTime</tt> value updates on an
--   eventual consistency basis. It typically updates in less than an hour
--   from ingestion, but in rare situations might take longer.
logStream_lastEventTimestamp :: Lens' LogStream (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.LogStream.LogStream
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.LogStream.LogStream
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.LogStream.LogStream
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.LogStream.LogStream
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.LogStream.LogStream
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.LogStream.LogStream
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.LogStream.LogStream


module Network.AWS.CloudWatchLogs.Types.MetricFilterMatchRecord

-- | Represents a matched event.
--   
--   <i>See:</i> <a>newMetricFilterMatchRecord</a> smart constructor.
data MetricFilterMatchRecord
MetricFilterMatchRecord' :: Maybe (HashMap Text Text) -> Maybe Integer -> Maybe Text -> MetricFilterMatchRecord

-- | The values extracted from the event data by the filter.
[$sel:extractedValues:MetricFilterMatchRecord'] :: MetricFilterMatchRecord -> Maybe (HashMap Text Text)

-- | The event number.
[$sel:eventNumber:MetricFilterMatchRecord'] :: MetricFilterMatchRecord -> Maybe Integer

-- | The raw event data.
[$sel:eventMessage:MetricFilterMatchRecord'] :: MetricFilterMatchRecord -> Maybe Text

-- | Create a value of <a>MetricFilterMatchRecord</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:extractedValues:MetricFilterMatchRecord'</a>,
--   <a>metricFilterMatchRecord_extractedValues</a> - The values extracted
--   from the event data by the filter.
--   
--   <a>$sel:eventNumber:MetricFilterMatchRecord'</a>,
--   <a>metricFilterMatchRecord_eventNumber</a> - The event number.
--   
--   <a>$sel:eventMessage:MetricFilterMatchRecord'</a>,
--   <a>metricFilterMatchRecord_eventMessage</a> - The raw event data.
newMetricFilterMatchRecord :: MetricFilterMatchRecord

-- | The values extracted from the event data by the filter.
metricFilterMatchRecord_extractedValues :: Lens' MetricFilterMatchRecord (Maybe (HashMap Text Text))

-- | The event number.
metricFilterMatchRecord_eventNumber :: Lens' MetricFilterMatchRecord (Maybe Integer)

-- | The raw event data.
metricFilterMatchRecord_eventMessage :: Lens' MetricFilterMatchRecord (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.MetricFilterMatchRecord.MetricFilterMatchRecord
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.MetricFilterMatchRecord.MetricFilterMatchRecord
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.MetricFilterMatchRecord.MetricFilterMatchRecord
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.MetricFilterMatchRecord.MetricFilterMatchRecord
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.MetricFilterMatchRecord.MetricFilterMatchRecord
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.MetricFilterMatchRecord.MetricFilterMatchRecord
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.MetricFilterMatchRecord.MetricFilterMatchRecord


module Network.AWS.CloudWatchLogs.Types.OrderBy
newtype OrderBy
OrderBy' :: Text -> OrderBy
[fromOrderBy] :: OrderBy -> Text
pattern OrderBy_LastEventTime :: OrderBy
pattern OrderBy_LogStreamName :: OrderBy
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudWatchLogs.Types.OrderBy.OrderBy
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatchLogs.Types.OrderBy.OrderBy
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudWatchLogs.Types.OrderBy.OrderBy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.Types.OrderBy.OrderBy
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudWatchLogs.Types.OrderBy.OrderBy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.OrderBy.OrderBy
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.Types.OrderBy.OrderBy
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudWatchLogs.Types.OrderBy.OrderBy
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudWatchLogs.Types.OrderBy.OrderBy
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudWatchLogs.Types.OrderBy.OrderBy
instance Network.AWS.Data.Text.ToText Network.AWS.CloudWatchLogs.Types.OrderBy.OrderBy
instance Network.AWS.Data.Text.FromText Network.AWS.CloudWatchLogs.Types.OrderBy.OrderBy
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.OrderBy.OrderBy
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.OrderBy.OrderBy
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.OrderBy.OrderBy
instance GHC.Classes.Ord Network.AWS.CloudWatchLogs.Types.OrderBy.OrderBy
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.OrderBy.OrderBy
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.OrderBy.OrderBy
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.OrderBy.OrderBy


module Network.AWS.CloudWatchLogs.Types.OutputLogEvent

-- | Represents a log event.
--   
--   <i>See:</i> <a>newOutputLogEvent</a> smart constructor.
data OutputLogEvent
OutputLogEvent' :: Maybe Natural -> Maybe Text -> Maybe Natural -> OutputLogEvent

-- | The time the event was ingested, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
[$sel:ingestionTime:OutputLogEvent'] :: OutputLogEvent -> Maybe Natural

-- | The data contained in the log event.
[$sel:message:OutputLogEvent'] :: OutputLogEvent -> Maybe Text

-- | The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
[$sel:timestamp:OutputLogEvent'] :: OutputLogEvent -> Maybe Natural

-- | Create a value of <a>OutputLogEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ingestionTime:OutputLogEvent'</a>,
--   <a>outputLogEvent_ingestionTime</a> - The time the event was ingested,
--   expressed as the number of milliseconds after Jan 1, 1970 00:00:00
--   UTC.
--   
--   <a>$sel:message:OutputLogEvent'</a>, <a>outputLogEvent_message</a> -
--   The data contained in the log event.
--   
--   <a>$sel:timestamp:OutputLogEvent'</a>, <a>outputLogEvent_timestamp</a>
--   - The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
newOutputLogEvent :: OutputLogEvent

-- | The time the event was ingested, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
outputLogEvent_ingestionTime :: Lens' OutputLogEvent (Maybe Natural)

-- | The data contained in the log event.
outputLogEvent_message :: Lens' OutputLogEvent (Maybe Text)

-- | The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
outputLogEvent_timestamp :: Lens' OutputLogEvent (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.OutputLogEvent.OutputLogEvent
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.OutputLogEvent.OutputLogEvent
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.OutputLogEvent.OutputLogEvent
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.OutputLogEvent.OutputLogEvent
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.OutputLogEvent.OutputLogEvent
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.OutputLogEvent.OutputLogEvent
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.OutputLogEvent.OutputLogEvent


module Network.AWS.CloudWatchLogs.Types.QueryDefinition

-- | This structure contains details about a saved CloudWatch Logs Insights
--   query definition.
--   
--   <i>See:</i> <a>newQueryDefinition</a> smart constructor.
data QueryDefinition
QueryDefinition' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> QueryDefinition

-- | If this query definition contains a list of log groups that it is
--   limited to, that list appears here.
[$sel:logGroupNames:QueryDefinition'] :: QueryDefinition -> Maybe [Text]

-- | The unique ID of the query definition.
[$sel:queryDefinitionId:QueryDefinition'] :: QueryDefinition -> Maybe Text

-- | The name of the query definition.
[$sel:name:QueryDefinition'] :: QueryDefinition -> Maybe Text

-- | The query string to use for this definition. For more information, see
--   <a>CloudWatch Logs Insights Query Syntax</a>.
[$sel:queryString:QueryDefinition'] :: QueryDefinition -> Maybe Text

-- | The date that the query definition was most recently modified.
[$sel:lastModified:QueryDefinition'] :: QueryDefinition -> Maybe Natural

-- | Create a value of <a>QueryDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupNames:QueryDefinition'</a>,
--   <a>queryDefinition_logGroupNames</a> - If this query definition
--   contains a list of log groups that it is limited to, that list appears
--   here.
--   
--   <a>$sel:queryDefinitionId:QueryDefinition'</a>,
--   <a>queryDefinition_queryDefinitionId</a> - The unique ID of the query
--   definition.
--   
--   <a>$sel:name:QueryDefinition'</a>, <a>queryDefinition_name</a> - The
--   name of the query definition.
--   
--   <a>$sel:queryString:QueryDefinition'</a>,
--   <a>queryDefinition_queryString</a> - The query string to use for this
--   definition. For more information, see <a>CloudWatch Logs Insights
--   Query Syntax</a>.
--   
--   <a>$sel:lastModified:QueryDefinition'</a>,
--   <a>queryDefinition_lastModified</a> - The date that the query
--   definition was most recently modified.
newQueryDefinition :: QueryDefinition

-- | If this query definition contains a list of log groups that it is
--   limited to, that list appears here.
queryDefinition_logGroupNames :: Lens' QueryDefinition (Maybe [Text])

-- | The unique ID of the query definition.
queryDefinition_queryDefinitionId :: Lens' QueryDefinition (Maybe Text)

-- | The name of the query definition.
queryDefinition_name :: Lens' QueryDefinition (Maybe Text)

-- | The query string to use for this definition. For more information, see
--   <a>CloudWatch Logs Insights Query Syntax</a>.
queryDefinition_queryString :: Lens' QueryDefinition (Maybe Text)

-- | The date that the query definition was most recently modified.
queryDefinition_lastModified :: Lens' QueryDefinition (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.QueryDefinition.QueryDefinition
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.QueryDefinition.QueryDefinition
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.QueryDefinition.QueryDefinition
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.QueryDefinition.QueryDefinition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.QueryDefinition.QueryDefinition
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.QueryDefinition.QueryDefinition
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.QueryDefinition.QueryDefinition


module Network.AWS.CloudWatchLogs.Types.QueryStatistics

-- | Contains the number of log events scanned by the query, the number of
--   log events that matched the query criteria, and the total number of
--   bytes in the log events that were scanned.
--   
--   <i>See:</i> <a>newQueryStatistics</a> smart constructor.
data QueryStatistics
QueryStatistics' :: Maybe Double -> Maybe Double -> Maybe Double -> QueryStatistics

-- | The total number of log events scanned during the query.
[$sel:recordsScanned:QueryStatistics'] :: QueryStatistics -> Maybe Double

-- | The total number of bytes in the log events scanned during the query.
[$sel:bytesScanned:QueryStatistics'] :: QueryStatistics -> Maybe Double

-- | The number of log events that matched the query string.
[$sel:recordsMatched:QueryStatistics'] :: QueryStatistics -> Maybe Double

-- | Create a value of <a>QueryStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordsScanned:QueryStatistics'</a>,
--   <a>queryStatistics_recordsScanned</a> - The total number of log events
--   scanned during the query.
--   
--   <a>$sel:bytesScanned:QueryStatistics'</a>,
--   <a>queryStatistics_bytesScanned</a> - The total number of bytes in the
--   log events scanned during the query.
--   
--   <a>$sel:recordsMatched:QueryStatistics'</a>,
--   <a>queryStatistics_recordsMatched</a> - The number of log events that
--   matched the query string.
newQueryStatistics :: QueryStatistics

-- | The total number of log events scanned during the query.
queryStatistics_recordsScanned :: Lens' QueryStatistics (Maybe Double)

-- | The total number of bytes in the log events scanned during the query.
queryStatistics_bytesScanned :: Lens' QueryStatistics (Maybe Double)

-- | The number of log events that matched the query string.
queryStatistics_recordsMatched :: Lens' QueryStatistics (Maybe Double)
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.QueryStatistics.QueryStatistics
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.QueryStatistics.QueryStatistics
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.QueryStatistics.QueryStatistics
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.QueryStatistics.QueryStatistics
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.QueryStatistics.QueryStatistics
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.QueryStatistics.QueryStatistics
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.QueryStatistics.QueryStatistics


module Network.AWS.CloudWatchLogs.Types.QueryStatus
newtype QueryStatus
QueryStatus' :: Text -> QueryStatus
[fromQueryStatus] :: QueryStatus -> Text
pattern QueryStatus_Cancelled :: QueryStatus
pattern QueryStatus_Complete :: QueryStatus
pattern QueryStatus_Failed :: QueryStatus
pattern QueryStatus_Running :: QueryStatus
pattern QueryStatus_Scheduled :: QueryStatus
pattern QueryStatus_Timeout :: QueryStatus
pattern QueryStatus_Unknown :: QueryStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudWatchLogs.Types.QueryStatus.QueryStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatchLogs.Types.QueryStatus.QueryStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudWatchLogs.Types.QueryStatus.QueryStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.Types.QueryStatus.QueryStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudWatchLogs.Types.QueryStatus.QueryStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.QueryStatus.QueryStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.Types.QueryStatus.QueryStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudWatchLogs.Types.QueryStatus.QueryStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudWatchLogs.Types.QueryStatus.QueryStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudWatchLogs.Types.QueryStatus.QueryStatus
instance Network.AWS.Data.Text.ToText Network.AWS.CloudWatchLogs.Types.QueryStatus.QueryStatus
instance Network.AWS.Data.Text.FromText Network.AWS.CloudWatchLogs.Types.QueryStatus.QueryStatus
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.QueryStatus.QueryStatus
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.QueryStatus.QueryStatus
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.QueryStatus.QueryStatus
instance GHC.Classes.Ord Network.AWS.CloudWatchLogs.Types.QueryStatus.QueryStatus
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.QueryStatus.QueryStatus
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.QueryStatus.QueryStatus
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.QueryStatus.QueryStatus


module Network.AWS.CloudWatchLogs.Types.QueryInfo

-- | Information about one CloudWatch Logs Insights query that matches the
--   request in a <tt>DescribeQueries</tt> operation.
--   
--   <i>See:</i> <a>newQueryInfo</a> smart constructor.
data QueryInfo
QueryInfo' :: Maybe QueryStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> QueryInfo

-- | The status of this query. Possible values are <tt>Cancelled</tt>,
--   <tt>Complete</tt>, <tt>Failed</tt>, <tt>Running</tt>,
--   <tt>Scheduled</tt>, and <tt>Unknown</tt>.
[$sel:status:QueryInfo'] :: QueryInfo -> Maybe QueryStatus

-- | The unique ID number of this query.
[$sel:queryId:QueryInfo'] :: QueryInfo -> Maybe Text

-- | The name of the log group scanned by this query.
[$sel:logGroupName:QueryInfo'] :: QueryInfo -> Maybe Text

-- | The query string used in this query.
[$sel:queryString:QueryInfo'] :: QueryInfo -> Maybe Text

-- | The date and time that this query was created.
[$sel:createTime:QueryInfo'] :: QueryInfo -> Maybe Natural

-- | Create a value of <a>QueryInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:QueryInfo'</a>, <a>queryInfo_status</a> - The status of
--   this query. Possible values are <tt>Cancelled</tt>, <tt>Complete</tt>,
--   <tt>Failed</tt>, <tt>Running</tt>, <tt>Scheduled</tt>, and
--   <tt>Unknown</tt>.
--   
--   <a>$sel:queryId:QueryInfo'</a>, <a>queryInfo_queryId</a> - The unique
--   ID number of this query.
--   
--   <a>$sel:logGroupName:QueryInfo'</a>, <a>queryInfo_logGroupName</a> -
--   The name of the log group scanned by this query.
--   
--   <a>$sel:queryString:QueryInfo'</a>, <a>queryInfo_queryString</a> - The
--   query string used in this query.
--   
--   <a>$sel:createTime:QueryInfo'</a>, <a>queryInfo_createTime</a> - The
--   date and time that this query was created.
newQueryInfo :: QueryInfo

-- | The status of this query. Possible values are <tt>Cancelled</tt>,
--   <tt>Complete</tt>, <tt>Failed</tt>, <tt>Running</tt>,
--   <tt>Scheduled</tt>, and <tt>Unknown</tt>.
queryInfo_status :: Lens' QueryInfo (Maybe QueryStatus)

-- | The unique ID number of this query.
queryInfo_queryId :: Lens' QueryInfo (Maybe Text)

-- | The name of the log group scanned by this query.
queryInfo_logGroupName :: Lens' QueryInfo (Maybe Text)

-- | The query string used in this query.
queryInfo_queryString :: Lens' QueryInfo (Maybe Text)

-- | The date and time that this query was created.
queryInfo_createTime :: Lens' QueryInfo (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.QueryInfo.QueryInfo
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.QueryInfo.QueryInfo
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.QueryInfo.QueryInfo
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.QueryInfo.QueryInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.QueryInfo.QueryInfo
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.QueryInfo.QueryInfo
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.QueryInfo.QueryInfo


module Network.AWS.CloudWatchLogs.Types.RejectedLogEventsInfo

-- | Represents the rejected events.
--   
--   <i>See:</i> <a>newRejectedLogEventsInfo</a> smart constructor.
data RejectedLogEventsInfo
RejectedLogEventsInfo' :: Maybe Int -> Maybe Int -> Maybe Int -> RejectedLogEventsInfo

-- | The log events that are too old.
[$sel:tooOldLogEventEndIndex:RejectedLogEventsInfo'] :: RejectedLogEventsInfo -> Maybe Int

-- | The log events that are too new.
[$sel:tooNewLogEventStartIndex:RejectedLogEventsInfo'] :: RejectedLogEventsInfo -> Maybe Int

-- | The expired log events.
[$sel:expiredLogEventEndIndex:RejectedLogEventsInfo'] :: RejectedLogEventsInfo -> Maybe Int

-- | Create a value of <a>RejectedLogEventsInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tooOldLogEventEndIndex:RejectedLogEventsInfo'</a>,
--   <a>rejectedLogEventsInfo_tooOldLogEventEndIndex</a> - The log events
--   that are too old.
--   
--   <a>$sel:tooNewLogEventStartIndex:RejectedLogEventsInfo'</a>,
--   <a>rejectedLogEventsInfo_tooNewLogEventStartIndex</a> - The log events
--   that are too new.
--   
--   <a>$sel:expiredLogEventEndIndex:RejectedLogEventsInfo'</a>,
--   <a>rejectedLogEventsInfo_expiredLogEventEndIndex</a> - The expired log
--   events.
newRejectedLogEventsInfo :: RejectedLogEventsInfo

-- | The log events that are too old.
rejectedLogEventsInfo_tooOldLogEventEndIndex :: Lens' RejectedLogEventsInfo (Maybe Int)

-- | The log events that are too new.
rejectedLogEventsInfo_tooNewLogEventStartIndex :: Lens' RejectedLogEventsInfo (Maybe Int)

-- | The expired log events.
rejectedLogEventsInfo_expiredLogEventEndIndex :: Lens' RejectedLogEventsInfo (Maybe Int)
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.RejectedLogEventsInfo.RejectedLogEventsInfo
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.RejectedLogEventsInfo.RejectedLogEventsInfo
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.RejectedLogEventsInfo.RejectedLogEventsInfo
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.RejectedLogEventsInfo.RejectedLogEventsInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.RejectedLogEventsInfo.RejectedLogEventsInfo
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.RejectedLogEventsInfo.RejectedLogEventsInfo
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.RejectedLogEventsInfo.RejectedLogEventsInfo


module Network.AWS.CloudWatchLogs.Types.ResourcePolicy

-- | A policy enabling one or more entities to put logs to a log group in
--   this account.
--   
--   <i>See:</i> <a>newResourcePolicy</a> smart constructor.
data ResourcePolicy
ResourcePolicy' :: Maybe Text -> Maybe Text -> Maybe Natural -> ResourcePolicy

-- | The name of the resource policy.
[$sel:policyName:ResourcePolicy'] :: ResourcePolicy -> Maybe Text

-- | The details of the policy.
[$sel:policyDocument:ResourcePolicy'] :: ResourcePolicy -> Maybe Text

-- | Timestamp showing when this policy was last updated, expressed as the
--   number of milliseconds after Jan 1, 1970 00:00:00 UTC.
[$sel:lastUpdatedTime:ResourcePolicy'] :: ResourcePolicy -> Maybe Natural

-- | Create a value of <a>ResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyName:ResourcePolicy'</a>,
--   <a>resourcePolicy_policyName</a> - The name of the resource policy.
--   
--   <a>$sel:policyDocument:ResourcePolicy'</a>,
--   <a>resourcePolicy_policyDocument</a> - The details of the policy.
--   
--   <a>$sel:lastUpdatedTime:ResourcePolicy'</a>,
--   <a>resourcePolicy_lastUpdatedTime</a> - Timestamp showing when this
--   policy was last updated, expressed as the number of milliseconds after
--   Jan 1, 1970 00:00:00 UTC.
newResourcePolicy :: ResourcePolicy

-- | The name of the resource policy.
resourcePolicy_policyName :: Lens' ResourcePolicy (Maybe Text)

-- | The details of the policy.
resourcePolicy_policyDocument :: Lens' ResourcePolicy (Maybe Text)

-- | Timestamp showing when this policy was last updated, expressed as the
--   number of milliseconds after Jan 1, 1970 00:00:00 UTC.
resourcePolicy_lastUpdatedTime :: Lens' ResourcePolicy (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.ResourcePolicy.ResourcePolicy
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.ResourcePolicy.ResourcePolicy
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.ResourcePolicy.ResourcePolicy
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.ResourcePolicy.ResourcePolicy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.ResourcePolicy.ResourcePolicy
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.ResourcePolicy.ResourcePolicy
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.ResourcePolicy.ResourcePolicy


module Network.AWS.CloudWatchLogs.Types.ResultField

-- | Contains one field from one log event returned by a CloudWatch Logs
--   Insights query, along with the value of that field.
--   
--   For more information about the fields that are generated by CloudWatch
--   logs, see <a>Supported Logs and Discovered Fields</a>.
--   
--   <i>See:</i> <a>newResultField</a> smart constructor.
data ResultField
ResultField' :: Maybe Text -> Maybe Text -> ResultField

-- | The log event field.
[$sel:field:ResultField'] :: ResultField -> Maybe Text

-- | The value of this field.
[$sel:value:ResultField'] :: ResultField -> Maybe Text

-- | Create a value of <a>ResultField</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:field:ResultField'</a>, <a>resultField_field</a> - The log
--   event field.
--   
--   <a>$sel:value:ResultField'</a>, <a>resultField_value</a> - The value
--   of this field.
newResultField :: ResultField

-- | The log event field.
resultField_field :: Lens' ResultField (Maybe Text)

-- | The value of this field.
resultField_value :: Lens' ResultField (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.ResultField.ResultField
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.ResultField.ResultField
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.ResultField.ResultField
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.ResultField.ResultField
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.ResultField.ResultField
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.ResultField.ResultField
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.ResultField.ResultField


module Network.AWS.CloudWatchLogs.Types.SearchedLogStream

-- | Represents the search status of a log stream.
--   
--   <i>See:</i> <a>newSearchedLogStream</a> smart constructor.
data SearchedLogStream
SearchedLogStream' :: Maybe Text -> Maybe Bool -> SearchedLogStream

-- | The name of the log stream.
[$sel:logStreamName:SearchedLogStream'] :: SearchedLogStream -> Maybe Text

-- | Indicates whether all the events in this log stream were searched.
[$sel:searchedCompletely:SearchedLogStream'] :: SearchedLogStream -> Maybe Bool

-- | Create a value of <a>SearchedLogStream</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logStreamName:SearchedLogStream'</a>,
--   <a>searchedLogStream_logStreamName</a> - The name of the log stream.
--   
--   <a>$sel:searchedCompletely:SearchedLogStream'</a>,
--   <a>searchedLogStream_searchedCompletely</a> - Indicates whether all
--   the events in this log stream were searched.
newSearchedLogStream :: SearchedLogStream

-- | The name of the log stream.
searchedLogStream_logStreamName :: Lens' SearchedLogStream (Maybe Text)

-- | Indicates whether all the events in this log stream were searched.
searchedLogStream_searchedCompletely :: Lens' SearchedLogStream (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.SearchedLogStream.SearchedLogStream
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.SearchedLogStream.SearchedLogStream
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.SearchedLogStream.SearchedLogStream
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.SearchedLogStream.SearchedLogStream
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.SearchedLogStream.SearchedLogStream
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.SearchedLogStream.SearchedLogStream
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.SearchedLogStream.SearchedLogStream


module Network.AWS.CloudWatchLogs.Types.StandardUnit
newtype StandardUnit
StandardUnit' :: Text -> StandardUnit
[fromStandardUnit] :: StandardUnit -> Text
pattern StandardUnit_Bits :: StandardUnit
pattern StandardUnit_Bits_Second :: StandardUnit
pattern StandardUnit_Bytes :: StandardUnit
pattern StandardUnit_Bytes_Second :: StandardUnit
pattern StandardUnit_Count :: StandardUnit
pattern StandardUnit_Count_Second :: StandardUnit
pattern StandardUnit_Gigabits :: StandardUnit
pattern StandardUnit_Gigabits_Second :: StandardUnit
pattern StandardUnit_Gigabytes :: StandardUnit
pattern StandardUnit_Gigabytes_Second :: StandardUnit
pattern StandardUnit_Kilobits :: StandardUnit
pattern StandardUnit_Kilobits_Second :: StandardUnit
pattern StandardUnit_Kilobytes :: StandardUnit
pattern StandardUnit_Kilobytes_Second :: StandardUnit
pattern StandardUnit_Megabits :: StandardUnit
pattern StandardUnit_Megabits_Second :: StandardUnit
pattern StandardUnit_Megabytes :: StandardUnit
pattern StandardUnit_Megabytes_Second :: StandardUnit
pattern StandardUnit_Microseconds :: StandardUnit
pattern StandardUnit_Milliseconds :: StandardUnit
pattern StandardUnit_None :: StandardUnit
pattern StandardUnit_Percent :: StandardUnit
pattern StandardUnit_Seconds :: StandardUnit
pattern StandardUnit_Terabits :: StandardUnit
pattern StandardUnit_Terabits_Second :: StandardUnit
pattern StandardUnit_Terabytes :: StandardUnit
pattern StandardUnit_Terabytes_Second :: StandardUnit
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudWatchLogs.Types.StandardUnit.StandardUnit
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatchLogs.Types.StandardUnit.StandardUnit
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudWatchLogs.Types.StandardUnit.StandardUnit
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.Types.StandardUnit.StandardUnit
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudWatchLogs.Types.StandardUnit.StandardUnit
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.StandardUnit.StandardUnit
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.Types.StandardUnit.StandardUnit
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudWatchLogs.Types.StandardUnit.StandardUnit
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudWatchLogs.Types.StandardUnit.StandardUnit
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudWatchLogs.Types.StandardUnit.StandardUnit
instance Network.AWS.Data.Text.ToText Network.AWS.CloudWatchLogs.Types.StandardUnit.StandardUnit
instance Network.AWS.Data.Text.FromText Network.AWS.CloudWatchLogs.Types.StandardUnit.StandardUnit
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.StandardUnit.StandardUnit
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.StandardUnit.StandardUnit
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.StandardUnit.StandardUnit
instance GHC.Classes.Ord Network.AWS.CloudWatchLogs.Types.StandardUnit.StandardUnit
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.StandardUnit.StandardUnit
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.StandardUnit.StandardUnit
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.StandardUnit.StandardUnit


module Network.AWS.CloudWatchLogs.Types.MetricTransformation

-- | Indicates how to transform ingested log events to metric data in a
--   CloudWatch metric.
--   
--   <i>See:</i> <a>newMetricTransformation</a> smart constructor.
data MetricTransformation
MetricTransformation' :: Maybe Double -> Maybe (HashMap Text Text) -> Maybe StandardUnit -> Text -> Text -> Text -> MetricTransformation

-- | (Optional) The value to emit when a filter pattern does not match a
--   log event. This value can be null.
[$sel:defaultValue:MetricTransformation'] :: MetricTransformation -> Maybe Double

-- | The fields to use as dimensions for the metric. One metric filter can
--   include as many as three dimensions.
--   
--   Metrics extracted from log events are charged as custom metrics. To
--   prevent unexpected high charges, do not specify high-cardinality
--   fields such as <tt>IPAddress</tt> or <tt>requestID</tt> as dimensions.
--   Each different value found for a dimension is treated as a separate
--   metric and accrues charges as a separate custom metric.
--   
--   To help prevent accidental high charges, Amazon disables a metric
--   filter if it generates 1000 different name/value pairs for the
--   dimensions that you have specified within a certain amount of time.
--   
--   You can also set up a billing alarm to alert you if your charges are
--   higher than expected. For more information, see <a>Creating a Billing
--   Alarm to Monitor Your Estimated Amazon Web Services Charges</a>.
[$sel:dimensions:MetricTransformation'] :: MetricTransformation -> Maybe (HashMap Text Text)

-- | The unit to assign to the metric. If you omit this, the unit is set as
--   <tt>None</tt>.
[$sel:unit:MetricTransformation'] :: MetricTransformation -> Maybe StandardUnit

-- | The name of the CloudWatch metric.
[$sel:metricName:MetricTransformation'] :: MetricTransformation -> Text

-- | A custom namespace to contain your metric in CloudWatch. Use
--   namespaces to group together metrics that are similar. For more
--   information, see <a>Namespaces</a>.
[$sel:metricNamespace:MetricTransformation'] :: MetricTransformation -> Text

-- | The value to publish to the CloudWatch metric when a filter pattern
--   matches a log event.
[$sel:metricValue:MetricTransformation'] :: MetricTransformation -> Text

-- | Create a value of <a>MetricTransformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultValue:MetricTransformation'</a>,
--   <a>metricTransformation_defaultValue</a> - (Optional) The value to
--   emit when a filter pattern does not match a log event. This value can
--   be null.
--   
--   <a>$sel:dimensions:MetricTransformation'</a>,
--   <a>metricTransformation_dimensions</a> - The fields to use as
--   dimensions for the metric. One metric filter can include as many as
--   three dimensions.
--   
--   Metrics extracted from log events are charged as custom metrics. To
--   prevent unexpected high charges, do not specify high-cardinality
--   fields such as <tt>IPAddress</tt> or <tt>requestID</tt> as dimensions.
--   Each different value found for a dimension is treated as a separate
--   metric and accrues charges as a separate custom metric.
--   
--   To help prevent accidental high charges, Amazon disables a metric
--   filter if it generates 1000 different name/value pairs for the
--   dimensions that you have specified within a certain amount of time.
--   
--   You can also set up a billing alarm to alert you if your charges are
--   higher than expected. For more information, see <a>Creating a Billing
--   Alarm to Monitor Your Estimated Amazon Web Services Charges</a>.
--   
--   <a>$sel:unit:MetricTransformation'</a>,
--   <a>metricTransformation_unit</a> - The unit to assign to the metric.
--   If you omit this, the unit is set as <tt>None</tt>.
--   
--   <a>$sel:metricName:MetricTransformation'</a>,
--   <a>metricTransformation_metricName</a> - The name of the CloudWatch
--   metric.
--   
--   <a>$sel:metricNamespace:MetricTransformation'</a>,
--   <a>metricTransformation_metricNamespace</a> - A custom namespace to
--   contain your metric in CloudWatch. Use namespaces to group together
--   metrics that are similar. For more information, see <a>Namespaces</a>.
--   
--   <a>$sel:metricValue:MetricTransformation'</a>,
--   <a>metricTransformation_metricValue</a> - The value to publish to the
--   CloudWatch metric when a filter pattern matches a log event.
newMetricTransformation :: Text -> Text -> Text -> MetricTransformation

-- | (Optional) The value to emit when a filter pattern does not match a
--   log event. This value can be null.
metricTransformation_defaultValue :: Lens' MetricTransformation (Maybe Double)

-- | The fields to use as dimensions for the metric. One metric filter can
--   include as many as three dimensions.
--   
--   Metrics extracted from log events are charged as custom metrics. To
--   prevent unexpected high charges, do not specify high-cardinality
--   fields such as <tt>IPAddress</tt> or <tt>requestID</tt> as dimensions.
--   Each different value found for a dimension is treated as a separate
--   metric and accrues charges as a separate custom metric.
--   
--   To help prevent accidental high charges, Amazon disables a metric
--   filter if it generates 1000 different name/value pairs for the
--   dimensions that you have specified within a certain amount of time.
--   
--   You can also set up a billing alarm to alert you if your charges are
--   higher than expected. For more information, see <a>Creating a Billing
--   Alarm to Monitor Your Estimated Amazon Web Services Charges</a>.
metricTransformation_dimensions :: Lens' MetricTransformation (Maybe (HashMap Text Text))

-- | The unit to assign to the metric. If you omit this, the unit is set as
--   <tt>None</tt>.
metricTransformation_unit :: Lens' MetricTransformation (Maybe StandardUnit)

-- | The name of the CloudWatch metric.
metricTransformation_metricName :: Lens' MetricTransformation Text

-- | A custom namespace to contain your metric in CloudWatch. Use
--   namespaces to group together metrics that are similar. For more
--   information, see <a>Namespaces</a>.
metricTransformation_metricNamespace :: Lens' MetricTransformation Text

-- | The value to publish to the CloudWatch metric when a filter pattern
--   matches a log event.
metricTransformation_metricValue :: Lens' MetricTransformation Text
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.MetricTransformation.MetricTransformation
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.MetricTransformation.MetricTransformation
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.MetricTransformation.MetricTransformation
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.MetricTransformation.MetricTransformation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.MetricTransformation.MetricTransformation
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.MetricTransformation.MetricTransformation
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.MetricTransformation.MetricTransformation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.Types.MetricTransformation.MetricTransformation


module Network.AWS.CloudWatchLogs.Types.MetricFilter

-- | Metric filters express how CloudWatch Logs would extract metric
--   observations from ingested log events and transform them into metric
--   data in a CloudWatch metric.
--   
--   <i>See:</i> <a>newMetricFilter</a> smart constructor.
data MetricFilter
MetricFilter' :: Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty MetricTransformation) -> MetricFilter

-- | The creation time of the metric filter, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
[$sel:creationTime:MetricFilter'] :: MetricFilter -> Maybe Natural

-- | The name of the metric filter.
[$sel:filterName:MetricFilter'] :: MetricFilter -> Maybe Text

-- | The name of the log group.
[$sel:logGroupName:MetricFilter'] :: MetricFilter -> Maybe Text
[$sel:filterPattern:MetricFilter'] :: MetricFilter -> Maybe Text

-- | The metric transformations.
[$sel:metricTransformations:MetricFilter'] :: MetricFilter -> Maybe (NonEmpty MetricTransformation)

-- | Create a value of <a>MetricFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:MetricFilter'</a>,
--   <a>metricFilter_creationTime</a> - The creation time of the metric
--   filter, expressed as the number of milliseconds after Jan 1, 1970
--   00:00:00 UTC.
--   
--   <a>$sel:filterName:MetricFilter'</a>, <a>metricFilter_filterName</a> -
--   The name of the metric filter.
--   
--   <a>$sel:logGroupName:MetricFilter'</a>,
--   <a>metricFilter_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:filterPattern:MetricFilter'</a>,
--   <a>metricFilter_filterPattern</a> - Undocumented member.
--   
--   <a>$sel:metricTransformations:MetricFilter'</a>,
--   <a>metricFilter_metricTransformations</a> - The metric
--   transformations.
newMetricFilter :: MetricFilter

-- | The creation time of the metric filter, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
metricFilter_creationTime :: Lens' MetricFilter (Maybe Natural)

-- | The name of the metric filter.
metricFilter_filterName :: Lens' MetricFilter (Maybe Text)

-- | The name of the log group.
metricFilter_logGroupName :: Lens' MetricFilter (Maybe Text)

-- | Undocumented member.
metricFilter_filterPattern :: Lens' MetricFilter (Maybe Text)

-- | The metric transformations.
metricFilter_metricTransformations :: Lens' MetricFilter (Maybe (NonEmpty MetricTransformation))
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.MetricFilter.MetricFilter
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.MetricFilter.MetricFilter
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.MetricFilter.MetricFilter
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.MetricFilter.MetricFilter
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.MetricFilter.MetricFilter
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.MetricFilter.MetricFilter
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.MetricFilter.MetricFilter


module Network.AWS.CloudWatchLogs.Types.SubscriptionFilter

-- | Represents a subscription filter.
--   
--   <i>See:</i> <a>newSubscriptionFilter</a> smart constructor.
data SubscriptionFilter
SubscriptionFilter' :: Maybe Natural -> Maybe Text -> Maybe Distribution -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> SubscriptionFilter

-- | The creation time of the subscription filter, expressed as the number
--   of milliseconds after Jan 1, 1970 00:00:00 UTC.
[$sel:creationTime:SubscriptionFilter'] :: SubscriptionFilter -> Maybe Natural

-- | The name of the subscription filter.
[$sel:filterName:SubscriptionFilter'] :: SubscriptionFilter -> Maybe Text
[$sel:distribution:SubscriptionFilter'] :: SubscriptionFilter -> Maybe Distribution

-- | The Amazon Resource Name (ARN) of the destination.
[$sel:destinationArn:SubscriptionFilter'] :: SubscriptionFilter -> Maybe Text

-- | The name of the log group.
[$sel:logGroupName:SubscriptionFilter'] :: SubscriptionFilter -> Maybe Text
[$sel:filterPattern:SubscriptionFilter'] :: SubscriptionFilter -> Maybe Text
[$sel:roleArn:SubscriptionFilter'] :: SubscriptionFilter -> Maybe Text

-- | Create a value of <a>SubscriptionFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_creationTime</a> - The creation time of the
--   subscription filter, expressed as the number of milliseconds after Jan
--   1, 1970 00:00:00 UTC.
--   
--   <a>$sel:filterName:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_filterName</a> - The name of the subscription
--   filter.
--   
--   <a>$sel:distribution:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_distribution</a> - Undocumented member.
--   
--   <a>$sel:destinationArn:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_destinationArn</a> - The Amazon Resource Name
--   (ARN) of the destination.
--   
--   <a>$sel:logGroupName:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:filterPattern:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_filterPattern</a> - Undocumented member.
--   
--   <a>$sel:roleArn:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_roleArn</a> -
newSubscriptionFilter :: SubscriptionFilter

-- | The creation time of the subscription filter, expressed as the number
--   of milliseconds after Jan 1, 1970 00:00:00 UTC.
subscriptionFilter_creationTime :: Lens' SubscriptionFilter (Maybe Natural)

-- | The name of the subscription filter.
subscriptionFilter_filterName :: Lens' SubscriptionFilter (Maybe Text)

-- | Undocumented member.
subscriptionFilter_distribution :: Lens' SubscriptionFilter (Maybe Distribution)

-- | The Amazon Resource Name (ARN) of the destination.
subscriptionFilter_destinationArn :: Lens' SubscriptionFilter (Maybe Text)

-- | The name of the log group.
subscriptionFilter_logGroupName :: Lens' SubscriptionFilter (Maybe Text)

-- | Undocumented member.
subscriptionFilter_filterPattern :: Lens' SubscriptionFilter (Maybe Text)

subscriptionFilter_roleArn :: Lens' SubscriptionFilter (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.Types.SubscriptionFilter.SubscriptionFilter
instance GHC.Show.Show Network.AWS.CloudWatchLogs.Types.SubscriptionFilter.SubscriptionFilter
instance GHC.Read.Read Network.AWS.CloudWatchLogs.Types.SubscriptionFilter.SubscriptionFilter
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.Types.SubscriptionFilter.SubscriptionFilter
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatchLogs.Types.SubscriptionFilter.SubscriptionFilter
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.Types.SubscriptionFilter.SubscriptionFilter
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.Types.SubscriptionFilter.SubscriptionFilter


module Network.AWS.CloudWatchLogs.Types

-- | API version <tt>2014-03-28</tt> of the Amazon CloudWatch Logs SDK
--   configuration.
defaultService :: Service

-- | A parameter is specified incorrectly.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The sequence token is not valid. You can get the correct sequence
--   token in the <tt>expectedSequenceToken</tt> field in the
--   <tt>InvalidSequenceTokenException</tt> message.
_InvalidSequenceTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The most likely cause is an invalid Amazon Web Services access key ID
--   or secret key.
_UnrecognizedClientException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Multiple requests to update the same resource were in conflict.
_OperationAbortedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The query string is not valid. Details about this error are displayed
--   in a <tt>QueryCompileError</tt> object. For more information, see
--   <a>QueryCompileError</a>.
--   
--   For more information about valid query syntax, see <a>CloudWatch Logs
--   Insights Query Syntax</a>.
_MalformedQueryException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service cannot complete the request.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The event was already logged.
_DataAlreadyAcceptedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation is not valid on the specified resource.
_InvalidOperationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource does not exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the maximum number of resources that can be created.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The method used to distribute log data to the destination, which can
--   be either random or grouped by log stream.
newtype Distribution
Distribution' :: Text -> Distribution
[fromDistribution] :: Distribution -> Text
pattern Distribution_ByLogStream :: Distribution
pattern Distribution_Random :: Distribution
newtype ExportTaskStatusCode
ExportTaskStatusCode' :: Text -> ExportTaskStatusCode
[fromExportTaskStatusCode] :: ExportTaskStatusCode -> Text
pattern ExportTaskStatusCode_CANCELLED :: ExportTaskStatusCode
pattern ExportTaskStatusCode_COMPLETED :: ExportTaskStatusCode
pattern ExportTaskStatusCode_FAILED :: ExportTaskStatusCode
pattern ExportTaskStatusCode_PENDING :: ExportTaskStatusCode
pattern ExportTaskStatusCode_PENDING_CANCEL :: ExportTaskStatusCode
pattern ExportTaskStatusCode_RUNNING :: ExportTaskStatusCode
newtype OrderBy
OrderBy' :: Text -> OrderBy
[fromOrderBy] :: OrderBy -> Text
pattern OrderBy_LastEventTime :: OrderBy
pattern OrderBy_LogStreamName :: OrderBy
newtype QueryStatus
QueryStatus' :: Text -> QueryStatus
[fromQueryStatus] :: QueryStatus -> Text
pattern QueryStatus_Cancelled :: QueryStatus
pattern QueryStatus_Complete :: QueryStatus
pattern QueryStatus_Failed :: QueryStatus
pattern QueryStatus_Running :: QueryStatus
pattern QueryStatus_Scheduled :: QueryStatus
pattern QueryStatus_Timeout :: QueryStatus
pattern QueryStatus_Unknown :: QueryStatus
newtype StandardUnit
StandardUnit' :: Text -> StandardUnit
[fromStandardUnit] :: StandardUnit -> Text
pattern StandardUnit_Bits :: StandardUnit
pattern StandardUnit_Bits_Second :: StandardUnit
pattern StandardUnit_Bytes :: StandardUnit
pattern StandardUnit_Bytes_Second :: StandardUnit
pattern StandardUnit_Count :: StandardUnit
pattern StandardUnit_Count_Second :: StandardUnit
pattern StandardUnit_Gigabits :: StandardUnit
pattern StandardUnit_Gigabits_Second :: StandardUnit
pattern StandardUnit_Gigabytes :: StandardUnit
pattern StandardUnit_Gigabytes_Second :: StandardUnit
pattern StandardUnit_Kilobits :: StandardUnit
pattern StandardUnit_Kilobits_Second :: StandardUnit
pattern StandardUnit_Kilobytes :: StandardUnit
pattern StandardUnit_Kilobytes_Second :: StandardUnit
pattern StandardUnit_Megabits :: StandardUnit
pattern StandardUnit_Megabits_Second :: StandardUnit
pattern StandardUnit_Megabytes :: StandardUnit
pattern StandardUnit_Megabytes_Second :: StandardUnit
pattern StandardUnit_Microseconds :: StandardUnit
pattern StandardUnit_Milliseconds :: StandardUnit
pattern StandardUnit_None :: StandardUnit
pattern StandardUnit_Percent :: StandardUnit
pattern StandardUnit_Seconds :: StandardUnit
pattern StandardUnit_Terabits :: StandardUnit
pattern StandardUnit_Terabits_Second :: StandardUnit
pattern StandardUnit_Terabytes :: StandardUnit
pattern StandardUnit_Terabytes_Second :: StandardUnit

-- | Represents a cross-account destination that receives subscription log
--   events.
--   
--   <i>See:</i> <a>newDestination</a> smart constructor.
data Destination
Destination' :: Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Destination

-- | The Amazon Resource Name (ARN) of the physical target where the log
--   events are delivered (for example, a Kinesis stream).
[$sel:targetArn:Destination'] :: Destination -> Maybe Text

-- | The creation time of the destination, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
[$sel:creationTime:Destination'] :: Destination -> Maybe Natural

-- | The ARN of this destination.
[$sel:arn:Destination'] :: Destination -> Maybe Text

-- | An IAM policy document that governs which Amazon Web Services accounts
--   can create subscription filters against this destination.
[$sel:accessPolicy:Destination'] :: Destination -> Maybe Text

-- | The name of the destination.
[$sel:destinationName:Destination'] :: Destination -> Maybe Text

-- | A role for impersonation, used when delivering log events to the
--   target.
[$sel:roleArn:Destination'] :: Destination -> Maybe Text

-- | Create a value of <a>Destination</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetArn:Destination'</a>, <a>destination_targetArn</a> - The
--   Amazon Resource Name (ARN) of the physical target where the log events
--   are delivered (for example, a Kinesis stream).
--   
--   <a>$sel:creationTime:Destination'</a>, <a>destination_creationTime</a>
--   - The creation time of the destination, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:arn:Destination'</a>, <a>destination_arn</a> - The ARN of this
--   destination.
--   
--   <a>$sel:accessPolicy:Destination'</a>, <a>destination_accessPolicy</a>
--   - An IAM policy document that governs which Amazon Web Services
--   accounts can create subscription filters against this destination.
--   
--   <a>$sel:destinationName:Destination'</a>,
--   <a>destination_destinationName</a> - The name of the destination.
--   
--   <a>$sel:roleArn:Destination'</a>, <a>destination_roleArn</a> - A role
--   for impersonation, used when delivering log events to the target.
newDestination :: Destination

-- | The Amazon Resource Name (ARN) of the physical target where the log
--   events are delivered (for example, a Kinesis stream).
destination_targetArn :: Lens' Destination (Maybe Text)

-- | The creation time of the destination, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
destination_creationTime :: Lens' Destination (Maybe Natural)

-- | The ARN of this destination.
destination_arn :: Lens' Destination (Maybe Text)

-- | An IAM policy document that governs which Amazon Web Services accounts
--   can create subscription filters against this destination.
destination_accessPolicy :: Lens' Destination (Maybe Text)

-- | The name of the destination.
destination_destinationName :: Lens' Destination (Maybe Text)

-- | A role for impersonation, used when delivering log events to the
--   target.
destination_roleArn :: Lens' Destination (Maybe Text)

-- | Represents an export task.
--   
--   <i>See:</i> <a>newExportTask</a> smart constructor.
data ExportTask
ExportTask' :: Maybe Text -> Maybe Text -> Maybe ExportTaskStatus -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe ExportTaskExecutionInfo -> ExportTask

-- | The prefix that was used as the start of Amazon S3 key for every
--   object exported.
[$sel:destinationPrefix:ExportTask'] :: ExportTask -> Maybe Text

-- | The name of the S3 bucket to which the log data was exported.
[$sel:destination:ExportTask'] :: ExportTask -> Maybe Text

-- | The status of the export task.
[$sel:status:ExportTask'] :: ExportTask -> Maybe ExportTaskStatus

-- | The name of the export task.
[$sel:taskName:ExportTask'] :: ExportTask -> Maybe Text

-- | The ID of the export task.
[$sel:taskId:ExportTask'] :: ExportTask -> Maybe Text

-- | The end time, expressed as the number of milliseconds after Jan 1,
--   1970 00:00:00 UTC. Events with a timestamp later than this time are
--   not exported.
[$sel:to:ExportTask'] :: ExportTask -> Maybe Natural

-- | The start time, expressed as the number of milliseconds after Jan 1,
--   1970 00:00:00 UTC. Events with a timestamp before this time are not
--   exported.
[$sel:from:ExportTask'] :: ExportTask -> Maybe Natural

-- | The name of the log group from which logs data was exported.
[$sel:logGroupName:ExportTask'] :: ExportTask -> Maybe Text

-- | Execution information about the export task.
[$sel:executionInfo:ExportTask'] :: ExportTask -> Maybe ExportTaskExecutionInfo

-- | Create a value of <a>ExportTask</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationPrefix:ExportTask'</a>,
--   <a>exportTask_destinationPrefix</a> - The prefix that was used as the
--   start of Amazon S3 key for every object exported.
--   
--   <a>$sel:destination:ExportTask'</a>, <a>exportTask_destination</a> -
--   The name of the S3 bucket to which the log data was exported.
--   
--   <a>$sel:status:ExportTask'</a>, <a>exportTask_status</a> - The status
--   of the export task.
--   
--   <a>$sel:taskName:ExportTask'</a>, <a>exportTask_taskName</a> - The
--   name of the export task.
--   
--   <a>$sel:taskId:ExportTask'</a>, <a>exportTask_taskId</a> - The ID of
--   the export task.
--   
--   <a>$sel:to:ExportTask'</a>, <a>exportTask_to</a> - The end time,
--   expressed as the number of milliseconds after Jan 1, 1970 00:00:00
--   UTC. Events with a timestamp later than this time are not exported.
--   
--   <a>$sel:from:ExportTask'</a>, <a>exportTask_from</a> - The start time,
--   expressed as the number of milliseconds after Jan 1, 1970 00:00:00
--   UTC. Events with a timestamp before this time are not exported.
--   
--   <a>$sel:logGroupName:ExportTask'</a>, <a>exportTask_logGroupName</a> -
--   The name of the log group from which logs data was exported.
--   
--   <a>$sel:executionInfo:ExportTask'</a>, <a>exportTask_executionInfo</a>
--   - Execution information about the export task.
newExportTask :: ExportTask

-- | The prefix that was used as the start of Amazon S3 key for every
--   object exported.
exportTask_destinationPrefix :: Lens' ExportTask (Maybe Text)

-- | The name of the S3 bucket to which the log data was exported.
exportTask_destination :: Lens' ExportTask (Maybe Text)

-- | The status of the export task.
exportTask_status :: Lens' ExportTask (Maybe ExportTaskStatus)

-- | The name of the export task.
exportTask_taskName :: Lens' ExportTask (Maybe Text)

-- | The ID of the export task.
exportTask_taskId :: Lens' ExportTask (Maybe Text)

-- | The end time, expressed as the number of milliseconds after Jan 1,
--   1970 00:00:00 UTC. Events with a timestamp later than this time are
--   not exported.
exportTask_to :: Lens' ExportTask (Maybe Natural)

-- | The start time, expressed as the number of milliseconds after Jan 1,
--   1970 00:00:00 UTC. Events with a timestamp before this time are not
--   exported.
exportTask_from :: Lens' ExportTask (Maybe Natural)

-- | The name of the log group from which logs data was exported.
exportTask_logGroupName :: Lens' ExportTask (Maybe Text)

-- | Execution information about the export task.
exportTask_executionInfo :: Lens' ExportTask (Maybe ExportTaskExecutionInfo)

-- | Represents the status of an export task.
--   
--   <i>See:</i> <a>newExportTaskExecutionInfo</a> smart constructor.
data ExportTaskExecutionInfo
ExportTaskExecutionInfo' :: Maybe Natural -> Maybe Natural -> ExportTaskExecutionInfo

-- | The creation time of the export task, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
[$sel:creationTime:ExportTaskExecutionInfo'] :: ExportTaskExecutionInfo -> Maybe Natural

-- | The completion time of the export task, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
[$sel:completionTime:ExportTaskExecutionInfo'] :: ExportTaskExecutionInfo -> Maybe Natural

-- | Create a value of <a>ExportTaskExecutionInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ExportTaskExecutionInfo'</a>,
--   <a>exportTaskExecutionInfo_creationTime</a> - The creation time of the
--   export task, expressed as the number of milliseconds after Jan 1, 1970
--   00:00:00 UTC.
--   
--   <a>$sel:completionTime:ExportTaskExecutionInfo'</a>,
--   <a>exportTaskExecutionInfo_completionTime</a> - The completion time of
--   the export task, expressed as the number of milliseconds after Jan 1,
--   1970 00:00:00 UTC.
newExportTaskExecutionInfo :: ExportTaskExecutionInfo

-- | The creation time of the export task, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
exportTaskExecutionInfo_creationTime :: Lens' ExportTaskExecutionInfo (Maybe Natural)

-- | The completion time of the export task, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
exportTaskExecutionInfo_completionTime :: Lens' ExportTaskExecutionInfo (Maybe Natural)

-- | Represents the status of an export task.
--   
--   <i>See:</i> <a>newExportTaskStatus</a> smart constructor.
data ExportTaskStatus
ExportTaskStatus' :: Maybe ExportTaskStatusCode -> Maybe Text -> ExportTaskStatus

-- | The status code of the export task.
[$sel:code:ExportTaskStatus'] :: ExportTaskStatus -> Maybe ExportTaskStatusCode

-- | The status message related to the status code.
[$sel:message:ExportTaskStatus'] :: ExportTaskStatus -> Maybe Text

-- | Create a value of <a>ExportTaskStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:code:ExportTaskStatus'</a>, <a>exportTaskStatus_code</a> - The
--   status code of the export task.
--   
--   <a>$sel:message:ExportTaskStatus'</a>, <a>exportTaskStatus_message</a>
--   - The status message related to the status code.
newExportTaskStatus :: ExportTaskStatus

-- | The status code of the export task.
exportTaskStatus_code :: Lens' ExportTaskStatus (Maybe ExportTaskStatusCode)

-- | The status message related to the status code.
exportTaskStatus_message :: Lens' ExportTaskStatus (Maybe Text)

-- | Represents a matched event.
--   
--   <i>See:</i> <a>newFilteredLogEvent</a> smart constructor.
data FilteredLogEvent
FilteredLogEvent' :: Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> FilteredLogEvent

-- | The time the event was ingested, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
[$sel:ingestionTime:FilteredLogEvent'] :: FilteredLogEvent -> Maybe Natural

-- | The name of the log stream to which this event belongs.
[$sel:logStreamName:FilteredLogEvent'] :: FilteredLogEvent -> Maybe Text

-- | The data contained in the log event.
[$sel:message:FilteredLogEvent'] :: FilteredLogEvent -> Maybe Text

-- | The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
[$sel:timestamp:FilteredLogEvent'] :: FilteredLogEvent -> Maybe Natural

-- | The ID of the event.
[$sel:eventId:FilteredLogEvent'] :: FilteredLogEvent -> Maybe Text

-- | Create a value of <a>FilteredLogEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ingestionTime:FilteredLogEvent'</a>,
--   <a>filteredLogEvent_ingestionTime</a> - The time the event was
--   ingested, expressed as the number of milliseconds after Jan 1, 1970
--   00:00:00 UTC.
--   
--   <a>$sel:logStreamName:FilteredLogEvent'</a>,
--   <a>filteredLogEvent_logStreamName</a> - The name of the log stream to
--   which this event belongs.
--   
--   <a>$sel:message:FilteredLogEvent'</a>, <a>filteredLogEvent_message</a>
--   - The data contained in the log event.
--   
--   <a>$sel:timestamp:FilteredLogEvent'</a>,
--   <a>filteredLogEvent_timestamp</a> - The time the event occurred,
--   expressed as the number of milliseconds after Jan 1, 1970 00:00:00
--   UTC.
--   
--   <a>$sel:eventId:FilteredLogEvent'</a>, <a>filteredLogEvent_eventId</a>
--   - The ID of the event.
newFilteredLogEvent :: FilteredLogEvent

-- | The time the event was ingested, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
filteredLogEvent_ingestionTime :: Lens' FilteredLogEvent (Maybe Natural)

-- | The name of the log stream to which this event belongs.
filteredLogEvent_logStreamName :: Lens' FilteredLogEvent (Maybe Text)

-- | The data contained in the log event.
filteredLogEvent_message :: Lens' FilteredLogEvent (Maybe Text)

-- | The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
filteredLogEvent_timestamp :: Lens' FilteredLogEvent (Maybe Natural)

-- | The ID of the event.
filteredLogEvent_eventId :: Lens' FilteredLogEvent (Maybe Text)

-- | Represents a log event, which is a record of activity that was
--   recorded by the application or resource being monitored.
--   
--   <i>See:</i> <a>newInputLogEvent</a> smart constructor.
data InputLogEvent
InputLogEvent' :: Natural -> Text -> InputLogEvent

-- | The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
[$sel:timestamp:InputLogEvent'] :: InputLogEvent -> Natural

-- | The raw event message.
[$sel:message:InputLogEvent'] :: InputLogEvent -> Text

-- | Create a value of <a>InputLogEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamp:InputLogEvent'</a>, <a>inputLogEvent_timestamp</a> -
--   The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:message:InputLogEvent'</a>, <a>inputLogEvent_message</a> - The
--   raw event message.
newInputLogEvent :: Natural -> Text -> InputLogEvent

-- | The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
inputLogEvent_timestamp :: Lens' InputLogEvent Natural

-- | The raw event message.
inputLogEvent_message :: Lens' InputLogEvent Text

-- | Represents a log group.
--   
--   <i>See:</i> <a>newLogGroup</a> smart constructor.
data LogGroup
LogGroup' :: Maybe Natural -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Natural -> LogGroup

-- | The creation time of the log group, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
[$sel:creationTime:LogGroup'] :: LogGroup -> Maybe Natural

-- | The number of metric filters.
[$sel:metricFilterCount:LogGroup'] :: LogGroup -> Maybe Int

-- | The Amazon Resource Name (ARN) of the log group.
[$sel:arn:LogGroup'] :: LogGroup -> Maybe Text

-- | The name of the log group.
[$sel:logGroupName:LogGroup'] :: LogGroup -> Maybe Text
[$sel:retentionInDays:LogGroup'] :: LogGroup -> Maybe Int

-- | The Amazon Resource Name (ARN) of the CMK to use when encrypting log
--   data.
[$sel:kmsKeyId:LogGroup'] :: LogGroup -> Maybe Text

-- | The number of bytes stored.
[$sel:storedBytes:LogGroup'] :: LogGroup -> Maybe Natural

-- | Create a value of <a>LogGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:LogGroup'</a>, <a>logGroup_creationTime</a> - The
--   creation time of the log group, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:metricFilterCount:LogGroup'</a>,
--   <a>logGroup_metricFilterCount</a> - The number of metric filters.
--   
--   <a>$sel:arn:LogGroup'</a>, <a>logGroup_arn</a> - The Amazon Resource
--   Name (ARN) of the log group.
--   
--   <a>$sel:logGroupName:LogGroup'</a>, <a>logGroup_logGroupName</a> - The
--   name of the log group.
--   
--   <a>$sel:retentionInDays:LogGroup'</a>, <a>logGroup_retentionInDays</a>
--   - Undocumented member.
--   
--   <a>$sel:kmsKeyId:LogGroup'</a>, <a>logGroup_kmsKeyId</a> - The Amazon
--   Resource Name (ARN) of the CMK to use when encrypting log data.
--   
--   <a>$sel:storedBytes:LogGroup'</a>, <a>logGroup_storedBytes</a> - The
--   number of bytes stored.
newLogGroup :: LogGroup

-- | The creation time of the log group, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
logGroup_creationTime :: Lens' LogGroup (Maybe Natural)

-- | The number of metric filters.
logGroup_metricFilterCount :: Lens' LogGroup (Maybe Int)

-- | The Amazon Resource Name (ARN) of the log group.
logGroup_arn :: Lens' LogGroup (Maybe Text)

-- | The name of the log group.
logGroup_logGroupName :: Lens' LogGroup (Maybe Text)

-- | Undocumented member.
logGroup_retentionInDays :: Lens' LogGroup (Maybe Int)

-- | The Amazon Resource Name (ARN) of the CMK to use when encrypting log
--   data.
logGroup_kmsKeyId :: Lens' LogGroup (Maybe Text)

-- | The number of bytes stored.
logGroup_storedBytes :: Lens' LogGroup (Maybe Natural)

-- | The fields contained in log events found by a
--   <tt>GetLogGroupFields</tt> operation, along with the percentage of
--   queried log events in which each field appears.
--   
--   <i>See:</i> <a>newLogGroupField</a> smart constructor.
data LogGroupField
LogGroupField' :: Maybe Natural -> Maybe Text -> LogGroupField

-- | The percentage of log events queried that contained the field.
[$sel:percent:LogGroupField'] :: LogGroupField -> Maybe Natural

-- | The name of a log field.
[$sel:name:LogGroupField'] :: LogGroupField -> Maybe Text

-- | Create a value of <a>LogGroupField</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:percent:LogGroupField'</a>, <a>logGroupField_percent</a> - The
--   percentage of log events queried that contained the field.
--   
--   <a>$sel:name:LogGroupField'</a>, <a>logGroupField_name</a> - The name
--   of a log field.
newLogGroupField :: LogGroupField

-- | The percentage of log events queried that contained the field.
logGroupField_percent :: Lens' LogGroupField (Maybe Natural)

-- | The name of a log field.
logGroupField_name :: Lens' LogGroupField (Maybe Text)

-- | Represents a log stream, which is a sequence of log events from a
--   single emitter of logs.
--   
--   <i>See:</i> <a>newLogStream</a> smart constructor.
data LogStream
LogStream' :: Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Natural -> LogStream

-- | The creation time of the stream, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
[$sel:creationTime:LogStream'] :: LogStream -> Maybe Natural

-- | The sequence token.
[$sel:uploadSequenceToken:LogStream'] :: LogStream -> Maybe Text

-- | The Amazon Resource Name (ARN) of the log stream.
[$sel:arn:LogStream'] :: LogStream -> Maybe Text

-- | The time of the first event, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
[$sel:firstEventTimestamp:LogStream'] :: LogStream -> Maybe Natural

-- | The name of the log stream.
[$sel:logStreamName:LogStream'] :: LogStream -> Maybe Text

-- | The number of bytes stored.
--   
--   <b>Important:</b> On June 17, 2019, this parameter was deprecated for
--   log streams, and is always reported as zero. This change applies only
--   to log streams. The <tt>storedBytes</tt> parameter for log groups is
--   not affected.
[$sel:storedBytes:LogStream'] :: LogStream -> Maybe Natural

-- | The ingestion time, expressed as the number of milliseconds after Jan
--   1, 1970 00:00:00 UTC.
[$sel:lastIngestionTime:LogStream'] :: LogStream -> Maybe Natural

-- | The time of the most recent log event in the log stream in CloudWatch
--   Logs. This number is expressed as the number of milliseconds after Jan
--   1, 1970 00:00:00 UTC. The <tt>lastEventTime</tt> value updates on an
--   eventual consistency basis. It typically updates in less than an hour
--   from ingestion, but in rare situations might take longer.
[$sel:lastEventTimestamp:LogStream'] :: LogStream -> Maybe Natural

-- | Create a value of <a>LogStream</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:LogStream'</a>, <a>logStream_creationTime</a> -
--   The creation time of the stream, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:uploadSequenceToken:LogStream'</a>,
--   <a>logStream_uploadSequenceToken</a> - The sequence token.
--   
--   <a>$sel:arn:LogStream'</a>, <a>logStream_arn</a> - The Amazon Resource
--   Name (ARN) of the log stream.
--   
--   <a>$sel:firstEventTimestamp:LogStream'</a>,
--   <a>logStream_firstEventTimestamp</a> - The time of the first event,
--   expressed as the number of milliseconds after Jan 1, 1970 00:00:00
--   UTC.
--   
--   <a>$sel:logStreamName:LogStream'</a>, <a>logStream_logStreamName</a> -
--   The name of the log stream.
--   
--   <a>$sel:storedBytes:LogStream'</a>, <a>logStream_storedBytes</a> - The
--   number of bytes stored.
--   
--   <b>Important:</b> On June 17, 2019, this parameter was deprecated for
--   log streams, and is always reported as zero. This change applies only
--   to log streams. The <tt>storedBytes</tt> parameter for log groups is
--   not affected.
--   
--   <a>$sel:lastIngestionTime:LogStream'</a>,
--   <a>logStream_lastIngestionTime</a> - The ingestion time, expressed as
--   the number of milliseconds after Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:lastEventTimestamp:LogStream'</a>,
--   <a>logStream_lastEventTimestamp</a> - The time of the most recent log
--   event in the log stream in CloudWatch Logs. This number is expressed
--   as the number of milliseconds after Jan 1, 1970 00:00:00 UTC. The
--   <tt>lastEventTime</tt> value updates on an eventual consistency basis.
--   It typically updates in less than an hour from ingestion, but in rare
--   situations might take longer.
newLogStream :: LogStream

-- | The creation time of the stream, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
logStream_creationTime :: Lens' LogStream (Maybe Natural)

-- | The sequence token.
logStream_uploadSequenceToken :: Lens' LogStream (Maybe Text)

-- | The Amazon Resource Name (ARN) of the log stream.
logStream_arn :: Lens' LogStream (Maybe Text)

-- | The time of the first event, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
logStream_firstEventTimestamp :: Lens' LogStream (Maybe Natural)

-- | The name of the log stream.
logStream_logStreamName :: Lens' LogStream (Maybe Text)

-- | The number of bytes stored.
--   
--   <b>Important:</b> On June 17, 2019, this parameter was deprecated for
--   log streams, and is always reported as zero. This change applies only
--   to log streams. The <tt>storedBytes</tt> parameter for log groups is
--   not affected.
logStream_storedBytes :: Lens' LogStream (Maybe Natural)

-- | The ingestion time, expressed as the number of milliseconds after Jan
--   1, 1970 00:00:00 UTC.
logStream_lastIngestionTime :: Lens' LogStream (Maybe Natural)

-- | The time of the most recent log event in the log stream in CloudWatch
--   Logs. This number is expressed as the number of milliseconds after Jan
--   1, 1970 00:00:00 UTC. The <tt>lastEventTime</tt> value updates on an
--   eventual consistency basis. It typically updates in less than an hour
--   from ingestion, but in rare situations might take longer.
logStream_lastEventTimestamp :: Lens' LogStream (Maybe Natural)

-- | Metric filters express how CloudWatch Logs would extract metric
--   observations from ingested log events and transform them into metric
--   data in a CloudWatch metric.
--   
--   <i>See:</i> <a>newMetricFilter</a> smart constructor.
data MetricFilter
MetricFilter' :: Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty MetricTransformation) -> MetricFilter

-- | The creation time of the metric filter, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
[$sel:creationTime:MetricFilter'] :: MetricFilter -> Maybe Natural

-- | The name of the metric filter.
[$sel:filterName:MetricFilter'] :: MetricFilter -> Maybe Text

-- | The name of the log group.
[$sel:logGroupName:MetricFilter'] :: MetricFilter -> Maybe Text
[$sel:filterPattern:MetricFilter'] :: MetricFilter -> Maybe Text

-- | The metric transformations.
[$sel:metricTransformations:MetricFilter'] :: MetricFilter -> Maybe (NonEmpty MetricTransformation)

-- | Create a value of <a>MetricFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:MetricFilter'</a>,
--   <a>metricFilter_creationTime</a> - The creation time of the metric
--   filter, expressed as the number of milliseconds after Jan 1, 1970
--   00:00:00 UTC.
--   
--   <a>$sel:filterName:MetricFilter'</a>, <a>metricFilter_filterName</a> -
--   The name of the metric filter.
--   
--   <a>$sel:logGroupName:MetricFilter'</a>,
--   <a>metricFilter_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:filterPattern:MetricFilter'</a>,
--   <a>metricFilter_filterPattern</a> - Undocumented member.
--   
--   <a>$sel:metricTransformations:MetricFilter'</a>,
--   <a>metricFilter_metricTransformations</a> - The metric
--   transformations.
newMetricFilter :: MetricFilter

-- | The creation time of the metric filter, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
metricFilter_creationTime :: Lens' MetricFilter (Maybe Natural)

-- | The name of the metric filter.
metricFilter_filterName :: Lens' MetricFilter (Maybe Text)

-- | The name of the log group.
metricFilter_logGroupName :: Lens' MetricFilter (Maybe Text)

-- | Undocumented member.
metricFilter_filterPattern :: Lens' MetricFilter (Maybe Text)

-- | The metric transformations.
metricFilter_metricTransformations :: Lens' MetricFilter (Maybe (NonEmpty MetricTransformation))

-- | Represents a matched event.
--   
--   <i>See:</i> <a>newMetricFilterMatchRecord</a> smart constructor.
data MetricFilterMatchRecord
MetricFilterMatchRecord' :: Maybe (HashMap Text Text) -> Maybe Integer -> Maybe Text -> MetricFilterMatchRecord

-- | The values extracted from the event data by the filter.
[$sel:extractedValues:MetricFilterMatchRecord'] :: MetricFilterMatchRecord -> Maybe (HashMap Text Text)

-- | The event number.
[$sel:eventNumber:MetricFilterMatchRecord'] :: MetricFilterMatchRecord -> Maybe Integer

-- | The raw event data.
[$sel:eventMessage:MetricFilterMatchRecord'] :: MetricFilterMatchRecord -> Maybe Text

-- | Create a value of <a>MetricFilterMatchRecord</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:extractedValues:MetricFilterMatchRecord'</a>,
--   <a>metricFilterMatchRecord_extractedValues</a> - The values extracted
--   from the event data by the filter.
--   
--   <a>$sel:eventNumber:MetricFilterMatchRecord'</a>,
--   <a>metricFilterMatchRecord_eventNumber</a> - The event number.
--   
--   <a>$sel:eventMessage:MetricFilterMatchRecord'</a>,
--   <a>metricFilterMatchRecord_eventMessage</a> - The raw event data.
newMetricFilterMatchRecord :: MetricFilterMatchRecord

-- | The values extracted from the event data by the filter.
metricFilterMatchRecord_extractedValues :: Lens' MetricFilterMatchRecord (Maybe (HashMap Text Text))

-- | The event number.
metricFilterMatchRecord_eventNumber :: Lens' MetricFilterMatchRecord (Maybe Integer)

-- | The raw event data.
metricFilterMatchRecord_eventMessage :: Lens' MetricFilterMatchRecord (Maybe Text)

-- | Indicates how to transform ingested log events to metric data in a
--   CloudWatch metric.
--   
--   <i>See:</i> <a>newMetricTransformation</a> smart constructor.
data MetricTransformation
MetricTransformation' :: Maybe Double -> Maybe (HashMap Text Text) -> Maybe StandardUnit -> Text -> Text -> Text -> MetricTransformation

-- | (Optional) The value to emit when a filter pattern does not match a
--   log event. This value can be null.
[$sel:defaultValue:MetricTransformation'] :: MetricTransformation -> Maybe Double

-- | The fields to use as dimensions for the metric. One metric filter can
--   include as many as three dimensions.
--   
--   Metrics extracted from log events are charged as custom metrics. To
--   prevent unexpected high charges, do not specify high-cardinality
--   fields such as <tt>IPAddress</tt> or <tt>requestID</tt> as dimensions.
--   Each different value found for a dimension is treated as a separate
--   metric and accrues charges as a separate custom metric.
--   
--   To help prevent accidental high charges, Amazon disables a metric
--   filter if it generates 1000 different name/value pairs for the
--   dimensions that you have specified within a certain amount of time.
--   
--   You can also set up a billing alarm to alert you if your charges are
--   higher than expected. For more information, see <a>Creating a Billing
--   Alarm to Monitor Your Estimated Amazon Web Services Charges</a>.
[$sel:dimensions:MetricTransformation'] :: MetricTransformation -> Maybe (HashMap Text Text)

-- | The unit to assign to the metric. If you omit this, the unit is set as
--   <tt>None</tt>.
[$sel:unit:MetricTransformation'] :: MetricTransformation -> Maybe StandardUnit

-- | The name of the CloudWatch metric.
[$sel:metricName:MetricTransformation'] :: MetricTransformation -> Text

-- | A custom namespace to contain your metric in CloudWatch. Use
--   namespaces to group together metrics that are similar. For more
--   information, see <a>Namespaces</a>.
[$sel:metricNamespace:MetricTransformation'] :: MetricTransformation -> Text

-- | The value to publish to the CloudWatch metric when a filter pattern
--   matches a log event.
[$sel:metricValue:MetricTransformation'] :: MetricTransformation -> Text

-- | Create a value of <a>MetricTransformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultValue:MetricTransformation'</a>,
--   <a>metricTransformation_defaultValue</a> - (Optional) The value to
--   emit when a filter pattern does not match a log event. This value can
--   be null.
--   
--   <a>$sel:dimensions:MetricTransformation'</a>,
--   <a>metricTransformation_dimensions</a> - The fields to use as
--   dimensions for the metric. One metric filter can include as many as
--   three dimensions.
--   
--   Metrics extracted from log events are charged as custom metrics. To
--   prevent unexpected high charges, do not specify high-cardinality
--   fields such as <tt>IPAddress</tt> or <tt>requestID</tt> as dimensions.
--   Each different value found for a dimension is treated as a separate
--   metric and accrues charges as a separate custom metric.
--   
--   To help prevent accidental high charges, Amazon disables a metric
--   filter if it generates 1000 different name/value pairs for the
--   dimensions that you have specified within a certain amount of time.
--   
--   You can also set up a billing alarm to alert you if your charges are
--   higher than expected. For more information, see <a>Creating a Billing
--   Alarm to Monitor Your Estimated Amazon Web Services Charges</a>.
--   
--   <a>$sel:unit:MetricTransformation'</a>,
--   <a>metricTransformation_unit</a> - The unit to assign to the metric.
--   If you omit this, the unit is set as <tt>None</tt>.
--   
--   <a>$sel:metricName:MetricTransformation'</a>,
--   <a>metricTransformation_metricName</a> - The name of the CloudWatch
--   metric.
--   
--   <a>$sel:metricNamespace:MetricTransformation'</a>,
--   <a>metricTransformation_metricNamespace</a> - A custom namespace to
--   contain your metric in CloudWatch. Use namespaces to group together
--   metrics that are similar. For more information, see <a>Namespaces</a>.
--   
--   <a>$sel:metricValue:MetricTransformation'</a>,
--   <a>metricTransformation_metricValue</a> - The value to publish to the
--   CloudWatch metric when a filter pattern matches a log event.
newMetricTransformation :: Text -> Text -> Text -> MetricTransformation

-- | (Optional) The value to emit when a filter pattern does not match a
--   log event. This value can be null.
metricTransformation_defaultValue :: Lens' MetricTransformation (Maybe Double)

-- | The fields to use as dimensions for the metric. One metric filter can
--   include as many as three dimensions.
--   
--   Metrics extracted from log events are charged as custom metrics. To
--   prevent unexpected high charges, do not specify high-cardinality
--   fields such as <tt>IPAddress</tt> or <tt>requestID</tt> as dimensions.
--   Each different value found for a dimension is treated as a separate
--   metric and accrues charges as a separate custom metric.
--   
--   To help prevent accidental high charges, Amazon disables a metric
--   filter if it generates 1000 different name/value pairs for the
--   dimensions that you have specified within a certain amount of time.
--   
--   You can also set up a billing alarm to alert you if your charges are
--   higher than expected. For more information, see <a>Creating a Billing
--   Alarm to Monitor Your Estimated Amazon Web Services Charges</a>.
metricTransformation_dimensions :: Lens' MetricTransformation (Maybe (HashMap Text Text))

-- | The unit to assign to the metric. If you omit this, the unit is set as
--   <tt>None</tt>.
metricTransformation_unit :: Lens' MetricTransformation (Maybe StandardUnit)

-- | The name of the CloudWatch metric.
metricTransformation_metricName :: Lens' MetricTransformation Text

-- | A custom namespace to contain your metric in CloudWatch. Use
--   namespaces to group together metrics that are similar. For more
--   information, see <a>Namespaces</a>.
metricTransformation_metricNamespace :: Lens' MetricTransformation Text

-- | The value to publish to the CloudWatch metric when a filter pattern
--   matches a log event.
metricTransformation_metricValue :: Lens' MetricTransformation Text

-- | Represents a log event.
--   
--   <i>See:</i> <a>newOutputLogEvent</a> smart constructor.
data OutputLogEvent
OutputLogEvent' :: Maybe Natural -> Maybe Text -> Maybe Natural -> OutputLogEvent

-- | The time the event was ingested, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
[$sel:ingestionTime:OutputLogEvent'] :: OutputLogEvent -> Maybe Natural

-- | The data contained in the log event.
[$sel:message:OutputLogEvent'] :: OutputLogEvent -> Maybe Text

-- | The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
[$sel:timestamp:OutputLogEvent'] :: OutputLogEvent -> Maybe Natural

-- | Create a value of <a>OutputLogEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ingestionTime:OutputLogEvent'</a>,
--   <a>outputLogEvent_ingestionTime</a> - The time the event was ingested,
--   expressed as the number of milliseconds after Jan 1, 1970 00:00:00
--   UTC.
--   
--   <a>$sel:message:OutputLogEvent'</a>, <a>outputLogEvent_message</a> -
--   The data contained in the log event.
--   
--   <a>$sel:timestamp:OutputLogEvent'</a>, <a>outputLogEvent_timestamp</a>
--   - The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
newOutputLogEvent :: OutputLogEvent

-- | The time the event was ingested, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
outputLogEvent_ingestionTime :: Lens' OutputLogEvent (Maybe Natural)

-- | The data contained in the log event.
outputLogEvent_message :: Lens' OutputLogEvent (Maybe Text)

-- | The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
outputLogEvent_timestamp :: Lens' OutputLogEvent (Maybe Natural)

-- | This structure contains details about a saved CloudWatch Logs Insights
--   query definition.
--   
--   <i>See:</i> <a>newQueryDefinition</a> smart constructor.
data QueryDefinition
QueryDefinition' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> QueryDefinition

-- | If this query definition contains a list of log groups that it is
--   limited to, that list appears here.
[$sel:logGroupNames:QueryDefinition'] :: QueryDefinition -> Maybe [Text]

-- | The unique ID of the query definition.
[$sel:queryDefinitionId:QueryDefinition'] :: QueryDefinition -> Maybe Text

-- | The name of the query definition.
[$sel:name:QueryDefinition'] :: QueryDefinition -> Maybe Text

-- | The query string to use for this definition. For more information, see
--   <a>CloudWatch Logs Insights Query Syntax</a>.
[$sel:queryString:QueryDefinition'] :: QueryDefinition -> Maybe Text

-- | The date that the query definition was most recently modified.
[$sel:lastModified:QueryDefinition'] :: QueryDefinition -> Maybe Natural

-- | Create a value of <a>QueryDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupNames:QueryDefinition'</a>,
--   <a>queryDefinition_logGroupNames</a> - If this query definition
--   contains a list of log groups that it is limited to, that list appears
--   here.
--   
--   <a>$sel:queryDefinitionId:QueryDefinition'</a>,
--   <a>queryDefinition_queryDefinitionId</a> - The unique ID of the query
--   definition.
--   
--   <a>$sel:name:QueryDefinition'</a>, <a>queryDefinition_name</a> - The
--   name of the query definition.
--   
--   <a>$sel:queryString:QueryDefinition'</a>,
--   <a>queryDefinition_queryString</a> - The query string to use for this
--   definition. For more information, see <a>CloudWatch Logs Insights
--   Query Syntax</a>.
--   
--   <a>$sel:lastModified:QueryDefinition'</a>,
--   <a>queryDefinition_lastModified</a> - The date that the query
--   definition was most recently modified.
newQueryDefinition :: QueryDefinition

-- | If this query definition contains a list of log groups that it is
--   limited to, that list appears here.
queryDefinition_logGroupNames :: Lens' QueryDefinition (Maybe [Text])

-- | The unique ID of the query definition.
queryDefinition_queryDefinitionId :: Lens' QueryDefinition (Maybe Text)

-- | The name of the query definition.
queryDefinition_name :: Lens' QueryDefinition (Maybe Text)

-- | The query string to use for this definition. For more information, see
--   <a>CloudWatch Logs Insights Query Syntax</a>.
queryDefinition_queryString :: Lens' QueryDefinition (Maybe Text)

-- | The date that the query definition was most recently modified.
queryDefinition_lastModified :: Lens' QueryDefinition (Maybe Natural)

-- | Information about one CloudWatch Logs Insights query that matches the
--   request in a <tt>DescribeQueries</tt> operation.
--   
--   <i>See:</i> <a>newQueryInfo</a> smart constructor.
data QueryInfo
QueryInfo' :: Maybe QueryStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> QueryInfo

-- | The status of this query. Possible values are <tt>Cancelled</tt>,
--   <tt>Complete</tt>, <tt>Failed</tt>, <tt>Running</tt>,
--   <tt>Scheduled</tt>, and <tt>Unknown</tt>.
[$sel:status:QueryInfo'] :: QueryInfo -> Maybe QueryStatus

-- | The unique ID number of this query.
[$sel:queryId:QueryInfo'] :: QueryInfo -> Maybe Text

-- | The name of the log group scanned by this query.
[$sel:logGroupName:QueryInfo'] :: QueryInfo -> Maybe Text

-- | The query string used in this query.
[$sel:queryString:QueryInfo'] :: QueryInfo -> Maybe Text

-- | The date and time that this query was created.
[$sel:createTime:QueryInfo'] :: QueryInfo -> Maybe Natural

-- | Create a value of <a>QueryInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:QueryInfo'</a>, <a>queryInfo_status</a> - The status of
--   this query. Possible values are <tt>Cancelled</tt>, <tt>Complete</tt>,
--   <tt>Failed</tt>, <tt>Running</tt>, <tt>Scheduled</tt>, and
--   <tt>Unknown</tt>.
--   
--   <a>$sel:queryId:QueryInfo'</a>, <a>queryInfo_queryId</a> - The unique
--   ID number of this query.
--   
--   <a>$sel:logGroupName:QueryInfo'</a>, <a>queryInfo_logGroupName</a> -
--   The name of the log group scanned by this query.
--   
--   <a>$sel:queryString:QueryInfo'</a>, <a>queryInfo_queryString</a> - The
--   query string used in this query.
--   
--   <a>$sel:createTime:QueryInfo'</a>, <a>queryInfo_createTime</a> - The
--   date and time that this query was created.
newQueryInfo :: QueryInfo

-- | The status of this query. Possible values are <tt>Cancelled</tt>,
--   <tt>Complete</tt>, <tt>Failed</tt>, <tt>Running</tt>,
--   <tt>Scheduled</tt>, and <tt>Unknown</tt>.
queryInfo_status :: Lens' QueryInfo (Maybe QueryStatus)

-- | The unique ID number of this query.
queryInfo_queryId :: Lens' QueryInfo (Maybe Text)

-- | The name of the log group scanned by this query.
queryInfo_logGroupName :: Lens' QueryInfo (Maybe Text)

-- | The query string used in this query.
queryInfo_queryString :: Lens' QueryInfo (Maybe Text)

-- | The date and time that this query was created.
queryInfo_createTime :: Lens' QueryInfo (Maybe Natural)

-- | Contains the number of log events scanned by the query, the number of
--   log events that matched the query criteria, and the total number of
--   bytes in the log events that were scanned.
--   
--   <i>See:</i> <a>newQueryStatistics</a> smart constructor.
data QueryStatistics
QueryStatistics' :: Maybe Double -> Maybe Double -> Maybe Double -> QueryStatistics

-- | The total number of log events scanned during the query.
[$sel:recordsScanned:QueryStatistics'] :: QueryStatistics -> Maybe Double

-- | The total number of bytes in the log events scanned during the query.
[$sel:bytesScanned:QueryStatistics'] :: QueryStatistics -> Maybe Double

-- | The number of log events that matched the query string.
[$sel:recordsMatched:QueryStatistics'] :: QueryStatistics -> Maybe Double

-- | Create a value of <a>QueryStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordsScanned:QueryStatistics'</a>,
--   <a>queryStatistics_recordsScanned</a> - The total number of log events
--   scanned during the query.
--   
--   <a>$sel:bytesScanned:QueryStatistics'</a>,
--   <a>queryStatistics_bytesScanned</a> - The total number of bytes in the
--   log events scanned during the query.
--   
--   <a>$sel:recordsMatched:QueryStatistics'</a>,
--   <a>queryStatistics_recordsMatched</a> - The number of log events that
--   matched the query string.
newQueryStatistics :: QueryStatistics

-- | The total number of log events scanned during the query.
queryStatistics_recordsScanned :: Lens' QueryStatistics (Maybe Double)

-- | The total number of bytes in the log events scanned during the query.
queryStatistics_bytesScanned :: Lens' QueryStatistics (Maybe Double)

-- | The number of log events that matched the query string.
queryStatistics_recordsMatched :: Lens' QueryStatistics (Maybe Double)

-- | Represents the rejected events.
--   
--   <i>See:</i> <a>newRejectedLogEventsInfo</a> smart constructor.
data RejectedLogEventsInfo
RejectedLogEventsInfo' :: Maybe Int -> Maybe Int -> Maybe Int -> RejectedLogEventsInfo

-- | The log events that are too old.
[$sel:tooOldLogEventEndIndex:RejectedLogEventsInfo'] :: RejectedLogEventsInfo -> Maybe Int

-- | The log events that are too new.
[$sel:tooNewLogEventStartIndex:RejectedLogEventsInfo'] :: RejectedLogEventsInfo -> Maybe Int

-- | The expired log events.
[$sel:expiredLogEventEndIndex:RejectedLogEventsInfo'] :: RejectedLogEventsInfo -> Maybe Int

-- | Create a value of <a>RejectedLogEventsInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tooOldLogEventEndIndex:RejectedLogEventsInfo'</a>,
--   <a>rejectedLogEventsInfo_tooOldLogEventEndIndex</a> - The log events
--   that are too old.
--   
--   <a>$sel:tooNewLogEventStartIndex:RejectedLogEventsInfo'</a>,
--   <a>rejectedLogEventsInfo_tooNewLogEventStartIndex</a> - The log events
--   that are too new.
--   
--   <a>$sel:expiredLogEventEndIndex:RejectedLogEventsInfo'</a>,
--   <a>rejectedLogEventsInfo_expiredLogEventEndIndex</a> - The expired log
--   events.
newRejectedLogEventsInfo :: RejectedLogEventsInfo

-- | The log events that are too old.
rejectedLogEventsInfo_tooOldLogEventEndIndex :: Lens' RejectedLogEventsInfo (Maybe Int)

-- | The log events that are too new.
rejectedLogEventsInfo_tooNewLogEventStartIndex :: Lens' RejectedLogEventsInfo (Maybe Int)

-- | The expired log events.
rejectedLogEventsInfo_expiredLogEventEndIndex :: Lens' RejectedLogEventsInfo (Maybe Int)

-- | A policy enabling one or more entities to put logs to a log group in
--   this account.
--   
--   <i>See:</i> <a>newResourcePolicy</a> smart constructor.
data ResourcePolicy
ResourcePolicy' :: Maybe Text -> Maybe Text -> Maybe Natural -> ResourcePolicy

-- | The name of the resource policy.
[$sel:policyName:ResourcePolicy'] :: ResourcePolicy -> Maybe Text

-- | The details of the policy.
[$sel:policyDocument:ResourcePolicy'] :: ResourcePolicy -> Maybe Text

-- | Timestamp showing when this policy was last updated, expressed as the
--   number of milliseconds after Jan 1, 1970 00:00:00 UTC.
[$sel:lastUpdatedTime:ResourcePolicy'] :: ResourcePolicy -> Maybe Natural

-- | Create a value of <a>ResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyName:ResourcePolicy'</a>,
--   <a>resourcePolicy_policyName</a> - The name of the resource policy.
--   
--   <a>$sel:policyDocument:ResourcePolicy'</a>,
--   <a>resourcePolicy_policyDocument</a> - The details of the policy.
--   
--   <a>$sel:lastUpdatedTime:ResourcePolicy'</a>,
--   <a>resourcePolicy_lastUpdatedTime</a> - Timestamp showing when this
--   policy was last updated, expressed as the number of milliseconds after
--   Jan 1, 1970 00:00:00 UTC.
newResourcePolicy :: ResourcePolicy

-- | The name of the resource policy.
resourcePolicy_policyName :: Lens' ResourcePolicy (Maybe Text)

-- | The details of the policy.
resourcePolicy_policyDocument :: Lens' ResourcePolicy (Maybe Text)

-- | Timestamp showing when this policy was last updated, expressed as the
--   number of milliseconds after Jan 1, 1970 00:00:00 UTC.
resourcePolicy_lastUpdatedTime :: Lens' ResourcePolicy (Maybe Natural)

-- | Contains one field from one log event returned by a CloudWatch Logs
--   Insights query, along with the value of that field.
--   
--   For more information about the fields that are generated by CloudWatch
--   logs, see <a>Supported Logs and Discovered Fields</a>.
--   
--   <i>See:</i> <a>newResultField</a> smart constructor.
data ResultField
ResultField' :: Maybe Text -> Maybe Text -> ResultField

-- | The log event field.
[$sel:field:ResultField'] :: ResultField -> Maybe Text

-- | The value of this field.
[$sel:value:ResultField'] :: ResultField -> Maybe Text

-- | Create a value of <a>ResultField</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:field:ResultField'</a>, <a>resultField_field</a> - The log
--   event field.
--   
--   <a>$sel:value:ResultField'</a>, <a>resultField_value</a> - The value
--   of this field.
newResultField :: ResultField

-- | The log event field.
resultField_field :: Lens' ResultField (Maybe Text)

-- | The value of this field.
resultField_value :: Lens' ResultField (Maybe Text)

-- | Represents the search status of a log stream.
--   
--   <i>See:</i> <a>newSearchedLogStream</a> smart constructor.
data SearchedLogStream
SearchedLogStream' :: Maybe Text -> Maybe Bool -> SearchedLogStream

-- | The name of the log stream.
[$sel:logStreamName:SearchedLogStream'] :: SearchedLogStream -> Maybe Text

-- | Indicates whether all the events in this log stream were searched.
[$sel:searchedCompletely:SearchedLogStream'] :: SearchedLogStream -> Maybe Bool

-- | Create a value of <a>SearchedLogStream</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logStreamName:SearchedLogStream'</a>,
--   <a>searchedLogStream_logStreamName</a> - The name of the log stream.
--   
--   <a>$sel:searchedCompletely:SearchedLogStream'</a>,
--   <a>searchedLogStream_searchedCompletely</a> - Indicates whether all
--   the events in this log stream were searched.
newSearchedLogStream :: SearchedLogStream

-- | The name of the log stream.
searchedLogStream_logStreamName :: Lens' SearchedLogStream (Maybe Text)

-- | Indicates whether all the events in this log stream were searched.
searchedLogStream_searchedCompletely :: Lens' SearchedLogStream (Maybe Bool)

-- | Represents a subscription filter.
--   
--   <i>See:</i> <a>newSubscriptionFilter</a> smart constructor.
data SubscriptionFilter
SubscriptionFilter' :: Maybe Natural -> Maybe Text -> Maybe Distribution -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> SubscriptionFilter

-- | The creation time of the subscription filter, expressed as the number
--   of milliseconds after Jan 1, 1970 00:00:00 UTC.
[$sel:creationTime:SubscriptionFilter'] :: SubscriptionFilter -> Maybe Natural

-- | The name of the subscription filter.
[$sel:filterName:SubscriptionFilter'] :: SubscriptionFilter -> Maybe Text
[$sel:distribution:SubscriptionFilter'] :: SubscriptionFilter -> Maybe Distribution

-- | The Amazon Resource Name (ARN) of the destination.
[$sel:destinationArn:SubscriptionFilter'] :: SubscriptionFilter -> Maybe Text

-- | The name of the log group.
[$sel:logGroupName:SubscriptionFilter'] :: SubscriptionFilter -> Maybe Text
[$sel:filterPattern:SubscriptionFilter'] :: SubscriptionFilter -> Maybe Text
[$sel:roleArn:SubscriptionFilter'] :: SubscriptionFilter -> Maybe Text

-- | Create a value of <a>SubscriptionFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_creationTime</a> - The creation time of the
--   subscription filter, expressed as the number of milliseconds after Jan
--   1, 1970 00:00:00 UTC.
--   
--   <a>$sel:filterName:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_filterName</a> - The name of the subscription
--   filter.
--   
--   <a>$sel:distribution:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_distribution</a> - Undocumented member.
--   
--   <a>$sel:destinationArn:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_destinationArn</a> - The Amazon Resource Name
--   (ARN) of the destination.
--   
--   <a>$sel:logGroupName:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:filterPattern:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_filterPattern</a> - Undocumented member.
--   
--   <a>$sel:roleArn:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_roleArn</a> -
newSubscriptionFilter :: SubscriptionFilter

-- | The creation time of the subscription filter, expressed as the number
--   of milliseconds after Jan 1, 1970 00:00:00 UTC.
subscriptionFilter_creationTime :: Lens' SubscriptionFilter (Maybe Natural)

-- | The name of the subscription filter.
subscriptionFilter_filterName :: Lens' SubscriptionFilter (Maybe Text)

-- | Undocumented member.
subscriptionFilter_distribution :: Lens' SubscriptionFilter (Maybe Distribution)

-- | The Amazon Resource Name (ARN) of the destination.
subscriptionFilter_destinationArn :: Lens' SubscriptionFilter (Maybe Text)

-- | The name of the log group.
subscriptionFilter_logGroupName :: Lens' SubscriptionFilter (Maybe Text)

-- | Undocumented member.
subscriptionFilter_filterPattern :: Lens' SubscriptionFilter (Maybe Text)

subscriptionFilter_roleArn :: Lens' SubscriptionFilter (Maybe Text)


-- | Tests the filter pattern of a metric filter against a sample of log
--   event messages. You can use this operation to validate the correctness
--   of a metric filter pattern.
module Network.AWS.CloudWatchLogs.TestMetricFilter

-- | <i>See:</i> <a>newTestMetricFilter</a> smart constructor.
data TestMetricFilter
TestMetricFilter' :: Text -> NonEmpty Text -> TestMetricFilter
[$sel:filterPattern:TestMetricFilter'] :: TestMetricFilter -> Text

-- | The log event messages to test.
[$sel:logEventMessages:TestMetricFilter'] :: TestMetricFilter -> NonEmpty Text

-- | Create a value of <a>TestMetricFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterPattern:TestMetricFilter'</a>,
--   <a>testMetricFilter_filterPattern</a> - Undocumented member.
--   
--   <a>$sel:logEventMessages:TestMetricFilter'</a>,
--   <a>testMetricFilter_logEventMessages</a> - The log event messages to
--   test.
newTestMetricFilter :: Text -> NonEmpty Text -> TestMetricFilter

-- | Undocumented member.
testMetricFilter_filterPattern :: Lens' TestMetricFilter Text

-- | The log event messages to test.
testMetricFilter_logEventMessages :: Lens' TestMetricFilter (NonEmpty Text)

-- | <i>See:</i> <a>newTestMetricFilterResponse</a> smart constructor.
data TestMetricFilterResponse
TestMetricFilterResponse' :: Maybe [MetricFilterMatchRecord] -> Int -> TestMetricFilterResponse

-- | The matched events.
[$sel:matches:TestMetricFilterResponse'] :: TestMetricFilterResponse -> Maybe [MetricFilterMatchRecord]

-- | The response's http status code.
[$sel:httpStatus:TestMetricFilterResponse'] :: TestMetricFilterResponse -> Int

-- | Create a value of <a>TestMetricFilterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:matches:TestMetricFilterResponse'</a>,
--   <a>testMetricFilterResponse_matches</a> - The matched events.
--   
--   <a>$sel:httpStatus:TestMetricFilterResponse'</a>,
--   <a>testMetricFilterResponse_httpStatus</a> - The response's http
--   status code.
newTestMetricFilterResponse :: Int -> TestMetricFilterResponse

-- | The matched events.
testMetricFilterResponse_matches :: Lens' TestMetricFilterResponse (Maybe [MetricFilterMatchRecord])

-- | The response's http status code.
testMetricFilterResponse_httpStatus :: Lens' TestMetricFilterResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.TestMetricFilter.TestMetricFilter
instance GHC.Show.Show Network.AWS.CloudWatchLogs.TestMetricFilter.TestMetricFilter
instance GHC.Read.Read Network.AWS.CloudWatchLogs.TestMetricFilter.TestMetricFilter
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.TestMetricFilter.TestMetricFilter
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.TestMetricFilter.TestMetricFilterResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.TestMetricFilter.TestMetricFilterResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.TestMetricFilter.TestMetricFilterResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.TestMetricFilter.TestMetricFilterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.TestMetricFilter.TestMetricFilter
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.TestMetricFilter.TestMetricFilterResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.TestMetricFilter.TestMetricFilter
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.TestMetricFilter.TestMetricFilter
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.TestMetricFilter.TestMetricFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.TestMetricFilter.TestMetricFilter
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.TestMetricFilter.TestMetricFilter
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.TestMetricFilter.TestMetricFilter


-- | Adds or updates the specified tags for the specified log group.
--   
--   To list the tags for a log group, use <a>ListTagsLogGroup</a>. To
--   remove tags, use <a>UntagLogGroup</a>.
--   
--   For more information about tags, see <a>Tag Log Groups in Amazon
--   CloudWatch Logs</a> in the <i>Amazon CloudWatch Logs User Guide</i>.
--   
--   CloudWatch Logs doesn’t support IAM policies that prevent users from
--   assigning specified tags to log groups using the
--   <tt>aws:Resource/key-name </tt> or <tt>aws:TagKeys</tt> condition
--   keys. For more information about using tags to control access, see
--   <a>Controlling access to Amazon Web Services resources using tags</a>.
module Network.AWS.CloudWatchLogs.TagLogGroup

-- | <i>See:</i> <a>newTagLogGroup</a> smart constructor.
data TagLogGroup
TagLogGroup' :: Text -> HashMap Text Text -> TagLogGroup

-- | The name of the log group.
[$sel:logGroupName:TagLogGroup'] :: TagLogGroup -> Text

-- | The key-value pairs to use for the tags.
[$sel:tags:TagLogGroup'] :: TagLogGroup -> HashMap Text Text

-- | Create a value of <a>TagLogGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:TagLogGroup'</a>, <a>tagLogGroup_logGroupName</a>
--   - The name of the log group.
--   
--   <a>$sel:tags:TagLogGroup'</a>, <a>tagLogGroup_tags</a> - The key-value
--   pairs to use for the tags.
newTagLogGroup :: Text -> TagLogGroup

-- | The name of the log group.
tagLogGroup_logGroupName :: Lens' TagLogGroup Text

-- | The key-value pairs to use for the tags.
tagLogGroup_tags :: Lens' TagLogGroup (HashMap Text Text)

-- | <i>See:</i> <a>newTagLogGroupResponse</a> smart constructor.
data TagLogGroupResponse
TagLogGroupResponse' :: TagLogGroupResponse

-- | Create a value of <a>TagLogGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagLogGroupResponse :: TagLogGroupResponse
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.TagLogGroup.TagLogGroup
instance GHC.Show.Show Network.AWS.CloudWatchLogs.TagLogGroup.TagLogGroup
instance GHC.Read.Read Network.AWS.CloudWatchLogs.TagLogGroup.TagLogGroup
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.TagLogGroup.TagLogGroup
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.TagLogGroup.TagLogGroupResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.TagLogGroup.TagLogGroupResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.TagLogGroup.TagLogGroupResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.TagLogGroup.TagLogGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.TagLogGroup.TagLogGroup
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.TagLogGroup.TagLogGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.TagLogGroup.TagLogGroup
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.TagLogGroup.TagLogGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.TagLogGroup.TagLogGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.TagLogGroup.TagLogGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.TagLogGroup.TagLogGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.TagLogGroup.TagLogGroup


-- | Stops a CloudWatch Logs Insights query that is in progress. If the
--   query has already ended, the operation returns an error indicating
--   that the specified query is not running.
module Network.AWS.CloudWatchLogs.StopQuery

-- | <i>See:</i> <a>newStopQuery</a> smart constructor.
data StopQuery
StopQuery' :: Text -> StopQuery

-- | The ID number of the query to stop. To find this ID number, use
--   <tt>DescribeQueries</tt>.
[$sel:queryId:StopQuery'] :: StopQuery -> Text

-- | Create a value of <a>StopQuery</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryId:StopQuery'</a>, <a>stopQuery_queryId</a> - The ID
--   number of the query to stop. To find this ID number, use
--   <tt>DescribeQueries</tt>.
newStopQuery :: Text -> StopQuery

-- | The ID number of the query to stop. To find this ID number, use
--   <tt>DescribeQueries</tt>.
stopQuery_queryId :: Lens' StopQuery Text

-- | <i>See:</i> <a>newStopQueryResponse</a> smart constructor.
data StopQueryResponse
StopQueryResponse' :: Maybe Bool -> Int -> StopQueryResponse

-- | This is true if the query was stopped by the <tt>StopQuery</tt>
--   operation.
[$sel:success:StopQueryResponse'] :: StopQueryResponse -> Maybe Bool

-- | The response's http status code.
[$sel:httpStatus:StopQueryResponse'] :: StopQueryResponse -> Int

-- | Create a value of <a>StopQueryResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:success:StopQueryResponse'</a>,
--   <a>stopQueryResponse_success</a> - This is true if the query was
--   stopped by the <tt>StopQuery</tt> operation.
--   
--   <a>$sel:httpStatus:StopQueryResponse'</a>,
--   <a>stopQueryResponse_httpStatus</a> - The response's http status code.
newStopQueryResponse :: Int -> StopQueryResponse

-- | This is true if the query was stopped by the <tt>StopQuery</tt>
--   operation.
stopQueryResponse_success :: Lens' StopQueryResponse (Maybe Bool)

-- | The response's http status code.
stopQueryResponse_httpStatus :: Lens' StopQueryResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.StopQuery.StopQuery
instance GHC.Show.Show Network.AWS.CloudWatchLogs.StopQuery.StopQuery
instance GHC.Read.Read Network.AWS.CloudWatchLogs.StopQuery.StopQuery
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.StopQuery.StopQuery
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.StopQuery.StopQueryResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.StopQuery.StopQueryResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.StopQuery.StopQueryResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.StopQuery.StopQueryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.StopQuery.StopQuery
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.StopQuery.StopQueryResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.StopQuery.StopQuery
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.StopQuery.StopQuery
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.StopQuery.StopQuery
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.StopQuery.StopQuery
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.StopQuery.StopQuery
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.StopQuery.StopQuery


-- | Schedules a query of a log group using CloudWatch Logs Insights. You
--   specify the log group and time range to query and the query string to
--   use.
--   
--   For more information, see <a>CloudWatch Logs Insights Query
--   Syntax</a>.
--   
--   Queries time out after 15 minutes of execution. If your queries are
--   timing out, reduce the time range being searched or partition your
--   query into a number of queries.
module Network.AWS.CloudWatchLogs.StartQuery

-- | <i>See:</i> <a>newStartQuery</a> smart constructor.
data StartQuery
StartQuery' :: Maybe [Text] -> Maybe Text -> Maybe Natural -> Natural -> Natural -> Text -> StartQuery

-- | The list of log groups to be queried. You can include up to 20 log
--   groups.
--   
--   A <tt>StartQuery</tt> operation must include a <tt>logGroupNames</tt>
--   or a <tt>logGroupName</tt> parameter, but not both.
[$sel:logGroupNames:StartQuery'] :: StartQuery -> Maybe [Text]

-- | The log group on which to perform the query.
--   
--   A <tt>StartQuery</tt> operation must include a <tt>logGroupNames</tt>
--   or a <tt>logGroupName</tt> parameter, but not both.
[$sel:logGroupName:StartQuery'] :: StartQuery -> Maybe Text

-- | The maximum number of log events to return in the query. If the query
--   string uses the <tt>fields</tt> command, only the specified fields and
--   their values are returned. The default is 1000.
[$sel:limit:StartQuery'] :: StartQuery -> Maybe Natural

-- | The beginning of the time range to query. The range is inclusive, so
--   the specified start time is included in the query. Specified as epoch
--   time, the number of seconds since January 1, 1970, 00:00:00 UTC.
[$sel:startTime:StartQuery'] :: StartQuery -> Natural

-- | The end of the time range to query. The range is inclusive, so the
--   specified end time is included in the query. Specified as epoch time,
--   the number of seconds since January 1, 1970, 00:00:00 UTC.
[$sel:endTime:StartQuery'] :: StartQuery -> Natural

-- | The query string to use. For more information, see <a>CloudWatch Logs
--   Insights Query Syntax</a>.
[$sel:queryString:StartQuery'] :: StartQuery -> Text

-- | Create a value of <a>StartQuery</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupNames:StartQuery'</a>, <a>startQuery_logGroupNames</a>
--   - The list of log groups to be queried. You can include up to 20 log
--   groups.
--   
--   A <tt>StartQuery</tt> operation must include a <tt>logGroupNames</tt>
--   or a <tt>logGroupName</tt> parameter, but not both.
--   
--   <a>$sel:logGroupName:StartQuery'</a>, <a>startQuery_logGroupName</a> -
--   The log group on which to perform the query.
--   
--   A <tt>StartQuery</tt> operation must include a <tt>logGroupNames</tt>
--   or a <tt>logGroupName</tt> parameter, but not both.
--   
--   <a>$sel:limit:StartQuery'</a>, <a>startQuery_limit</a> - The maximum
--   number of log events to return in the query. If the query string uses
--   the <tt>fields</tt> command, only the specified fields and their
--   values are returned. The default is 1000.
--   
--   <a>$sel:startTime:StartQuery'</a>, <a>startQuery_startTime</a> - The
--   beginning of the time range to query. The range is inclusive, so the
--   specified start time is included in the query. Specified as epoch
--   time, the number of seconds since January 1, 1970, 00:00:00 UTC.
--   
--   <a>$sel:endTime:StartQuery'</a>, <a>startQuery_endTime</a> - The end
--   of the time range to query. The range is inclusive, so the specified
--   end time is included in the query. Specified as epoch time, the number
--   of seconds since January 1, 1970, 00:00:00 UTC.
--   
--   <a>$sel:queryString:StartQuery'</a>, <a>startQuery_queryString</a> -
--   The query string to use. For more information, see <a>CloudWatch Logs
--   Insights Query Syntax</a>.
newStartQuery :: Natural -> Natural -> Text -> StartQuery

-- | The list of log groups to be queried. You can include up to 20 log
--   groups.
--   
--   A <tt>StartQuery</tt> operation must include a <tt>logGroupNames</tt>
--   or a <tt>logGroupName</tt> parameter, but not both.
startQuery_logGroupNames :: Lens' StartQuery (Maybe [Text])

-- | The log group on which to perform the query.
--   
--   A <tt>StartQuery</tt> operation must include a <tt>logGroupNames</tt>
--   or a <tt>logGroupName</tt> parameter, but not both.
startQuery_logGroupName :: Lens' StartQuery (Maybe Text)

-- | The maximum number of log events to return in the query. If the query
--   string uses the <tt>fields</tt> command, only the specified fields and
--   their values are returned. The default is 1000.
startQuery_limit :: Lens' StartQuery (Maybe Natural)

-- | The beginning of the time range to query. The range is inclusive, so
--   the specified start time is included in the query. Specified as epoch
--   time, the number of seconds since January 1, 1970, 00:00:00 UTC.
startQuery_startTime :: Lens' StartQuery Natural

-- | The end of the time range to query. The range is inclusive, so the
--   specified end time is included in the query. Specified as epoch time,
--   the number of seconds since January 1, 1970, 00:00:00 UTC.
startQuery_endTime :: Lens' StartQuery Natural

-- | The query string to use. For more information, see <a>CloudWatch Logs
--   Insights Query Syntax</a>.
startQuery_queryString :: Lens' StartQuery Text

-- | <i>See:</i> <a>newStartQueryResponse</a> smart constructor.
data StartQueryResponse
StartQueryResponse' :: Maybe Text -> Int -> StartQueryResponse

-- | The unique ID of the query.
[$sel:queryId:StartQueryResponse'] :: StartQueryResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartQueryResponse'] :: StartQueryResponse -> Int

-- | Create a value of <a>StartQueryResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryId:StartQueryResponse'</a>,
--   <a>startQueryResponse_queryId</a> - The unique ID of the query.
--   
--   <a>$sel:httpStatus:StartQueryResponse'</a>,
--   <a>startQueryResponse_httpStatus</a> - The response's http status
--   code.
newStartQueryResponse :: Int -> StartQueryResponse

-- | The unique ID of the query.
startQueryResponse_queryId :: Lens' StartQueryResponse (Maybe Text)

-- | The response's http status code.
startQueryResponse_httpStatus :: Lens' StartQueryResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.StartQuery.StartQuery
instance GHC.Show.Show Network.AWS.CloudWatchLogs.StartQuery.StartQuery
instance GHC.Read.Read Network.AWS.CloudWatchLogs.StartQuery.StartQuery
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.StartQuery.StartQuery
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.StartQuery.StartQueryResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.StartQuery.StartQueryResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.StartQuery.StartQueryResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.StartQuery.StartQueryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.StartQuery.StartQuery
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.StartQuery.StartQueryResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.StartQuery.StartQuery
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.StartQuery.StartQuery
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.StartQuery.StartQuery
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.StartQuery.StartQuery
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.StartQuery.StartQuery
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.StartQuery.StartQuery


-- | Creates or updates a subscription filter and associates it with the
--   specified log group. Subscription filters allow you to subscribe to a
--   real-time stream of log events ingested through <a>PutLogEvents</a>
--   and have them delivered to a specific destination. When log events are
--   sent to the receiving service, they are Base64 encoded and compressed
--   with the gzip format.
--   
--   The following destinations are supported for subscription filters:
--   
--   <ul>
--   <li>An Amazon Kinesis stream belonging to the same account as the
--   subscription filter, for same-account delivery.</li>
--   <li>A logical destination that belongs to a different account, for
--   cross-account delivery.</li>
--   <li>An Amazon Kinesis Firehose delivery stream that belongs to the
--   same account as the subscription filter, for same-account
--   delivery.</li>
--   <li>An Lambda function that belongs to the same account as the
--   subscription filter, for same-account delivery.</li>
--   </ul>
--   
--   Each log group can have up to two subscription filters associated with
--   it. If you are updating an existing filter, you must specify the
--   correct name in <tt>filterName</tt>.
--   
--   To perform a <tt>PutSubscriptionFilter</tt> operation, you must also
--   have the <tt>iam:PassRole</tt> permission.
module Network.AWS.CloudWatchLogs.PutSubscriptionFilter

-- | <i>See:</i> <a>newPutSubscriptionFilter</a> smart constructor.
data PutSubscriptionFilter
PutSubscriptionFilter' :: Maybe Distribution -> Maybe Text -> Text -> Text -> Text -> Text -> PutSubscriptionFilter

-- | The method used to distribute log data to the destination. By default,
--   log data is grouped by log stream, but the grouping can be set to
--   random for a more even distribution. This property is only applicable
--   when the destination is an Amazon Kinesis stream.
[$sel:distribution:PutSubscriptionFilter'] :: PutSubscriptionFilter -> Maybe Distribution

-- | The ARN of an IAM role that grants CloudWatch Logs permissions to
--   deliver ingested log events to the destination stream. You don't need
--   to provide the ARN when you are working with a logical destination for
--   cross-account delivery.
[$sel:roleArn:PutSubscriptionFilter'] :: PutSubscriptionFilter -> Maybe Text

-- | The name of the log group.
[$sel:logGroupName:PutSubscriptionFilter'] :: PutSubscriptionFilter -> Text

-- | A name for the subscription filter. If you are updating an existing
--   filter, you must specify the correct name in <tt>filterName</tt>. To
--   find the name of the filter currently associated with a log group, use
--   <a>DescribeSubscriptionFilters</a>.
[$sel:filterName:PutSubscriptionFilter'] :: PutSubscriptionFilter -> Text

-- | A filter pattern for subscribing to a filtered stream of log events.
[$sel:filterPattern:PutSubscriptionFilter'] :: PutSubscriptionFilter -> Text

-- | The ARN of the destination to deliver matching log events to.
--   Currently, the supported destinations are:
--   
--   <ul>
--   <li>An Amazon Kinesis stream belonging to the same account as the
--   subscription filter, for same-account delivery.</li>
--   <li>A logical destination (specified using an ARN) belonging to a
--   different account, for cross-account delivery.If you are setting up a
--   cross-account subscription, the destination must have an IAM policy
--   associated with it that allows the sender to send logs to the
--   destination. For more information, see
--   <a>PutDestinationPolicy</a>.</li>
--   <li>An Amazon Kinesis Firehose delivery stream belonging to the same
--   account as the subscription filter, for same-account delivery.</li>
--   <li>A Lambda function belonging to the same account as the
--   subscription filter, for same-account delivery.</li>
--   </ul>
[$sel:destinationArn:PutSubscriptionFilter'] :: PutSubscriptionFilter -> Text

-- | Create a value of <a>PutSubscriptionFilter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:distribution:PutSubscriptionFilter'</a>,
--   <a>putSubscriptionFilter_distribution</a> - The method used to
--   distribute log data to the destination. By default, log data is
--   grouped by log stream, but the grouping can be set to random for a
--   more even distribution. This property is only applicable when the
--   destination is an Amazon Kinesis stream.
--   
--   <a>$sel:roleArn:PutSubscriptionFilter'</a>,
--   <a>putSubscriptionFilter_roleArn</a> - The ARN of an IAM role that
--   grants CloudWatch Logs permissions to deliver ingested log events to
--   the destination stream. You don't need to provide the ARN when you are
--   working with a logical destination for cross-account delivery.
--   
--   <a>$sel:logGroupName:PutSubscriptionFilter'</a>,
--   <a>putSubscriptionFilter_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:filterName:PutSubscriptionFilter'</a>,
--   <a>putSubscriptionFilter_filterName</a> - A name for the subscription
--   filter. If you are updating an existing filter, you must specify the
--   correct name in <tt>filterName</tt>. To find the name of the filter
--   currently associated with a log group, use
--   <a>DescribeSubscriptionFilters</a>.
--   
--   <a>$sel:filterPattern:PutSubscriptionFilter'</a>,
--   <a>putSubscriptionFilter_filterPattern</a> - A filter pattern for
--   subscribing to a filtered stream of log events.
--   
--   <a>$sel:destinationArn:PutSubscriptionFilter'</a>,
--   <a>putSubscriptionFilter_destinationArn</a> - The ARN of the
--   destination to deliver matching log events to. Currently, the
--   supported destinations are:
--   
--   <ul>
--   <li>An Amazon Kinesis stream belonging to the same account as the
--   subscription filter, for same-account delivery.</li>
--   <li>A logical destination (specified using an ARN) belonging to a
--   different account, for cross-account delivery.If you are setting up a
--   cross-account subscription, the destination must have an IAM policy
--   associated with it that allows the sender to send logs to the
--   destination. For more information, see
--   <a>PutDestinationPolicy</a>.</li>
--   <li>An Amazon Kinesis Firehose delivery stream belonging to the same
--   account as the subscription filter, for same-account delivery.</li>
--   <li>A Lambda function belonging to the same account as the
--   subscription filter, for same-account delivery.</li>
--   </ul>
newPutSubscriptionFilter :: Text -> Text -> Text -> Text -> PutSubscriptionFilter

-- | The method used to distribute log data to the destination. By default,
--   log data is grouped by log stream, but the grouping can be set to
--   random for a more even distribution. This property is only applicable
--   when the destination is an Amazon Kinesis stream.
putSubscriptionFilter_distribution :: Lens' PutSubscriptionFilter (Maybe Distribution)

-- | The ARN of an IAM role that grants CloudWatch Logs permissions to
--   deliver ingested log events to the destination stream. You don't need
--   to provide the ARN when you are working with a logical destination for
--   cross-account delivery.
putSubscriptionFilter_roleArn :: Lens' PutSubscriptionFilter (Maybe Text)

-- | The name of the log group.
putSubscriptionFilter_logGroupName :: Lens' PutSubscriptionFilter Text

-- | A name for the subscription filter. If you are updating an existing
--   filter, you must specify the correct name in <tt>filterName</tt>. To
--   find the name of the filter currently associated with a log group, use
--   <a>DescribeSubscriptionFilters</a>.
putSubscriptionFilter_filterName :: Lens' PutSubscriptionFilter Text

-- | A filter pattern for subscribing to a filtered stream of log events.
putSubscriptionFilter_filterPattern :: Lens' PutSubscriptionFilter Text

-- | The ARN of the destination to deliver matching log events to.
--   Currently, the supported destinations are:
--   
--   <ul>
--   <li>An Amazon Kinesis stream belonging to the same account as the
--   subscription filter, for same-account delivery.</li>
--   <li>A logical destination (specified using an ARN) belonging to a
--   different account, for cross-account delivery.If you are setting up a
--   cross-account subscription, the destination must have an IAM policy
--   associated with it that allows the sender to send logs to the
--   destination. For more information, see
--   <a>PutDestinationPolicy</a>.</li>
--   <li>An Amazon Kinesis Firehose delivery stream belonging to the same
--   account as the subscription filter, for same-account delivery.</li>
--   <li>A Lambda function belonging to the same account as the
--   subscription filter, for same-account delivery.</li>
--   </ul>
putSubscriptionFilter_destinationArn :: Lens' PutSubscriptionFilter Text

-- | <i>See:</i> <a>newPutSubscriptionFilterResponse</a> smart constructor.
data PutSubscriptionFilterResponse
PutSubscriptionFilterResponse' :: PutSubscriptionFilterResponse

-- | Create a value of <a>PutSubscriptionFilterResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutSubscriptionFilterResponse :: PutSubscriptionFilterResponse
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.PutSubscriptionFilter.PutSubscriptionFilter
instance GHC.Show.Show Network.AWS.CloudWatchLogs.PutSubscriptionFilter.PutSubscriptionFilter
instance GHC.Read.Read Network.AWS.CloudWatchLogs.PutSubscriptionFilter.PutSubscriptionFilter
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.PutSubscriptionFilter.PutSubscriptionFilter
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.PutSubscriptionFilter.PutSubscriptionFilterResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.PutSubscriptionFilter.PutSubscriptionFilterResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.PutSubscriptionFilter.PutSubscriptionFilterResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.PutSubscriptionFilter.PutSubscriptionFilterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.PutSubscriptionFilter.PutSubscriptionFilter
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.PutSubscriptionFilter.PutSubscriptionFilterResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.PutSubscriptionFilter.PutSubscriptionFilter
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.PutSubscriptionFilter.PutSubscriptionFilter
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.PutSubscriptionFilter.PutSubscriptionFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.PutSubscriptionFilter.PutSubscriptionFilter
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.PutSubscriptionFilter.PutSubscriptionFilter
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.PutSubscriptionFilter.PutSubscriptionFilter


-- | Sets the retention of the specified log group. A retention policy
--   allows you to configure the number of days for which to retain log
--   events in the specified log group.
module Network.AWS.CloudWatchLogs.PutRetentionPolicy

-- | <i>See:</i> <a>newPutRetentionPolicy</a> smart constructor.
data PutRetentionPolicy
PutRetentionPolicy' :: Text -> Int -> PutRetentionPolicy

-- | The name of the log group.
[$sel:logGroupName:PutRetentionPolicy'] :: PutRetentionPolicy -> Text
[$sel:retentionInDays:PutRetentionPolicy'] :: PutRetentionPolicy -> Int

-- | Create a value of <a>PutRetentionPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:PutRetentionPolicy'</a>,
--   <a>putRetentionPolicy_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:retentionInDays:PutRetentionPolicy'</a>,
--   <a>putRetentionPolicy_retentionInDays</a> - Undocumented member.
newPutRetentionPolicy :: Text -> Int -> PutRetentionPolicy

-- | The name of the log group.
putRetentionPolicy_logGroupName :: Lens' PutRetentionPolicy Text

-- | Undocumented member.
putRetentionPolicy_retentionInDays :: Lens' PutRetentionPolicy Int

-- | <i>See:</i> <a>newPutRetentionPolicyResponse</a> smart constructor.
data PutRetentionPolicyResponse
PutRetentionPolicyResponse' :: PutRetentionPolicyResponse

-- | Create a value of <a>PutRetentionPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutRetentionPolicyResponse :: PutRetentionPolicyResponse
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.PutRetentionPolicy.PutRetentionPolicy
instance GHC.Show.Show Network.AWS.CloudWatchLogs.PutRetentionPolicy.PutRetentionPolicy
instance GHC.Read.Read Network.AWS.CloudWatchLogs.PutRetentionPolicy.PutRetentionPolicy
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.PutRetentionPolicy.PutRetentionPolicy
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.PutRetentionPolicy.PutRetentionPolicyResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.PutRetentionPolicy.PutRetentionPolicyResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.PutRetentionPolicy.PutRetentionPolicyResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.PutRetentionPolicy.PutRetentionPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.PutRetentionPolicy.PutRetentionPolicy
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.PutRetentionPolicy.PutRetentionPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.PutRetentionPolicy.PutRetentionPolicy
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.PutRetentionPolicy.PutRetentionPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.PutRetentionPolicy.PutRetentionPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.PutRetentionPolicy.PutRetentionPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.PutRetentionPolicy.PutRetentionPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.PutRetentionPolicy.PutRetentionPolicy


-- | Creates or updates a resource policy allowing other Amazon Web
--   Services services to put log events to this account, such as Amazon
--   Route 53. An account can have up to 10 resource policies per Amazon
--   Web Services Region.
module Network.AWS.CloudWatchLogs.PutResourcePolicy

-- | <i>See:</i> <a>newPutResourcePolicy</a> smart constructor.
data PutResourcePolicy
PutResourcePolicy' :: Maybe Text -> Maybe Text -> PutResourcePolicy

-- | Name of the new policy. This parameter is required.
[$sel:policyName:PutResourcePolicy'] :: PutResourcePolicy -> Maybe Text

-- | Details of the new policy, including the identity of the principal
--   that is enabled to put logs to this account. This is formatted as a
--   JSON string. This parameter is required.
--   
--   The following example creates a resource policy enabling the Route 53
--   service to put DNS query logs in to the specified log group. Replace
--   <tt>"logArn"</tt> with the ARN of your CloudWatch Logs resource, such
--   as a log group or log stream.
--   
--   CloudWatch Logs also supports <a>aws:SourceArn</a> and
--   <a>aws:SourceAccount</a> condition context keys.
--   
--   In the example resource policy, you would replace the value of
--   <tt>SourceArn</tt> with the resource making the call from Route 53 to
--   CloudWatch Logs and replace the value of <tt>SourceAccount</tt> with
--   the Amazon Web Services account ID making that call.
--   
--   <pre>
--   { "Version": "2012-10-17", "Statement": [ { "Sid": "Route53LogsToCloudWatchLogs", "Effect": "Allow", "Principal": { "Service": [ "route53.amazonaws.com" ] }, "Action": "logs:PutLogEvents", "Resource": "logArn", "Condition": { "ArnLike": { "aws:SourceArn": "myRoute53ResourceArn" }, "StringEquals": { "aws:SourceAccount": "myAwsAccountId" } } } ] }
--   </pre>
[$sel:policyDocument:PutResourcePolicy'] :: PutResourcePolicy -> Maybe Text

-- | Create a value of <a>PutResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyName:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_policyName</a> - Name of the new policy. This
--   parameter is required.
--   
--   <a>$sel:policyDocument:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_policyDocument</a> - Details of the new policy,
--   including the identity of the principal that is enabled to put logs to
--   this account. This is formatted as a JSON string. This parameter is
--   required.
--   
--   The following example creates a resource policy enabling the Route 53
--   service to put DNS query logs in to the specified log group. Replace
--   <tt>"logArn"</tt> with the ARN of your CloudWatch Logs resource, such
--   as a log group or log stream.
--   
--   CloudWatch Logs also supports <a>aws:SourceArn</a> and
--   <a>aws:SourceAccount</a> condition context keys.
--   
--   In the example resource policy, you would replace the value of
--   <tt>SourceArn</tt> with the resource making the call from Route 53 to
--   CloudWatch Logs and replace the value of <tt>SourceAccount</tt> with
--   the Amazon Web Services account ID making that call.
--   
--   <pre>
--   { "Version": "2012-10-17", "Statement": [ { "Sid": "Route53LogsToCloudWatchLogs", "Effect": "Allow", "Principal": { "Service": [ "route53.amazonaws.com" ] }, "Action": "logs:PutLogEvents", "Resource": "logArn", "Condition": { "ArnLike": { "aws:SourceArn": "myRoute53ResourceArn" }, "StringEquals": { "aws:SourceAccount": "myAwsAccountId" } } } ] }
--   </pre>
newPutResourcePolicy :: PutResourcePolicy

-- | Name of the new policy. This parameter is required.
putResourcePolicy_policyName :: Lens' PutResourcePolicy (Maybe Text)

-- | Details of the new policy, including the identity of the principal
--   that is enabled to put logs to this account. This is formatted as a
--   JSON string. This parameter is required.
--   
--   The following example creates a resource policy enabling the Route 53
--   service to put DNS query logs in to the specified log group. Replace
--   <tt>"logArn"</tt> with the ARN of your CloudWatch Logs resource, such
--   as a log group or log stream.
--   
--   CloudWatch Logs also supports <a>aws:SourceArn</a> and
--   <a>aws:SourceAccount</a> condition context keys.
--   
--   In the example resource policy, you would replace the value of
--   <tt>SourceArn</tt> with the resource making the call from Route 53 to
--   CloudWatch Logs and replace the value of <tt>SourceAccount</tt> with
--   the Amazon Web Services account ID making that call.
--   
--   <pre>
--   { "Version": "2012-10-17", "Statement": [ { "Sid": "Route53LogsToCloudWatchLogs", "Effect": "Allow", "Principal": { "Service": [ "route53.amazonaws.com" ] }, "Action": "logs:PutLogEvents", "Resource": "logArn", "Condition": { "ArnLike": { "aws:SourceArn": "myRoute53ResourceArn" }, "StringEquals": { "aws:SourceAccount": "myAwsAccountId" } } } ] }
--   </pre>
putResourcePolicy_policyDocument :: Lens' PutResourcePolicy (Maybe Text)

-- | <i>See:</i> <a>newPutResourcePolicyResponse</a> smart constructor.
data PutResourcePolicyResponse
PutResourcePolicyResponse' :: Maybe ResourcePolicy -> Int -> PutResourcePolicyResponse

-- | The new policy.
[$sel:resourcePolicy:PutResourcePolicyResponse'] :: PutResourcePolicyResponse -> Maybe ResourcePolicy

-- | The response's http status code.
[$sel:httpStatus:PutResourcePolicyResponse'] :: PutResourcePolicyResponse -> Int

-- | Create a value of <a>PutResourcePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourcePolicy:PutResourcePolicyResponse'</a>,
--   <a>putResourcePolicyResponse_resourcePolicy</a> - The new policy.
--   
--   <a>$sel:httpStatus:PutResourcePolicyResponse'</a>,
--   <a>putResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newPutResourcePolicyResponse :: Int -> PutResourcePolicyResponse

-- | The new policy.
putResourcePolicyResponse_resourcePolicy :: Lens' PutResourcePolicyResponse (Maybe ResourcePolicy)

-- | The response's http status code.
putResourcePolicyResponse_httpStatus :: Lens' PutResourcePolicyResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.PutResourcePolicy.PutResourcePolicy
instance GHC.Show.Show Network.AWS.CloudWatchLogs.PutResourcePolicy.PutResourcePolicy
instance GHC.Read.Read Network.AWS.CloudWatchLogs.PutResourcePolicy.PutResourcePolicy
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.PutResourcePolicy.PutResourcePolicy
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.PutResourcePolicy.PutResourcePolicyResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.PutResourcePolicy.PutResourcePolicyResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.PutResourcePolicy.PutResourcePolicyResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.PutResourcePolicy.PutResourcePolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.PutResourcePolicy.PutResourcePolicy
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.PutResourcePolicy.PutResourcePolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.PutResourcePolicy.PutResourcePolicy
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.PutResourcePolicy.PutResourcePolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.PutResourcePolicy.PutResourcePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.PutResourcePolicy.PutResourcePolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.PutResourcePolicy.PutResourcePolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.PutResourcePolicy.PutResourcePolicy


-- | Creates or updates a query definition for CloudWatch Logs Insights.
--   For more information, see <a>Analyzing Log Data with CloudWatch Logs
--   Insights</a>.
--   
--   To update a query definition, specify its <tt>queryDefinitionId</tt>
--   in your request. The values of <tt>name</tt>, <tt>queryString</tt>,
--   and <tt>logGroupNames</tt> are changed to the values that you specify
--   in your update operation. No current values are retained from the
--   current query definition. For example, if you update a current query
--   definition that includes log groups, and you don't specify the
--   <tt>logGroupNames</tt> parameter in your update operation, the query
--   definition changes to contain no log groups.
--   
--   You must have the <tt>logs:PutQueryDefinition</tt> permission to be
--   able to perform this operation.
module Network.AWS.CloudWatchLogs.PutQueryDefinition

-- | <i>See:</i> <a>newPutQueryDefinition</a> smart constructor.
data PutQueryDefinition
PutQueryDefinition' :: Maybe [Text] -> Maybe Text -> Text -> Text -> PutQueryDefinition

-- | Use this parameter to include specific log groups as part of your
--   query definition.
--   
--   If you are updating a query definition and you omit this parameter,
--   then the updated definition will contain no log groups.
[$sel:logGroupNames:PutQueryDefinition'] :: PutQueryDefinition -> Maybe [Text]

-- | If you are updating a query definition, use this parameter to specify
--   the ID of the query definition that you want to update. You can use
--   <a>DescribeQueryDefinitions</a> to retrieve the IDs of your saved
--   query definitions.
--   
--   If you are creating a query definition, do not specify this parameter.
--   CloudWatch generates a unique ID for the new query definition and
--   include it in the response to this operation.
[$sel:queryDefinitionId:PutQueryDefinition'] :: PutQueryDefinition -> Maybe Text

-- | A name for the query definition. If you are saving a lot of query
--   definitions, we recommend that you name them so that you can easily
--   find the ones you want by using the first part of the name as a filter
--   in the <tt>queryDefinitionNamePrefix</tt> parameter of
--   <a>DescribeQueryDefinitions</a>.
[$sel:name:PutQueryDefinition'] :: PutQueryDefinition -> Text

-- | The query string to use for this definition. For more information, see
--   <a>CloudWatch Logs Insights Query Syntax</a>.
[$sel:queryString:PutQueryDefinition'] :: PutQueryDefinition -> Text

-- | Create a value of <a>PutQueryDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupNames:PutQueryDefinition'</a>,
--   <a>putQueryDefinition_logGroupNames</a> - Use this parameter to
--   include specific log groups as part of your query definition.
--   
--   If you are updating a query definition and you omit this parameter,
--   then the updated definition will contain no log groups.
--   
--   <a>$sel:queryDefinitionId:PutQueryDefinition'</a>,
--   <a>putQueryDefinition_queryDefinitionId</a> - If you are updating a
--   query definition, use this parameter to specify the ID of the query
--   definition that you want to update. You can use
--   <a>DescribeQueryDefinitions</a> to retrieve the IDs of your saved
--   query definitions.
--   
--   If you are creating a query definition, do not specify this parameter.
--   CloudWatch generates a unique ID for the new query definition and
--   include it in the response to this operation.
--   
--   <a>$sel:name:PutQueryDefinition'</a>, <a>putQueryDefinition_name</a> -
--   A name for the query definition. If you are saving a lot of query
--   definitions, we recommend that you name them so that you can easily
--   find the ones you want by using the first part of the name as a filter
--   in the <tt>queryDefinitionNamePrefix</tt> parameter of
--   <a>DescribeQueryDefinitions</a>.
--   
--   <a>$sel:queryString:PutQueryDefinition'</a>,
--   <a>putQueryDefinition_queryString</a> - The query string to use for
--   this definition. For more information, see <a>CloudWatch Logs Insights
--   Query Syntax</a>.
newPutQueryDefinition :: Text -> Text -> PutQueryDefinition

-- | Use this parameter to include specific log groups as part of your
--   query definition.
--   
--   If you are updating a query definition and you omit this parameter,
--   then the updated definition will contain no log groups.
putQueryDefinition_logGroupNames :: Lens' PutQueryDefinition (Maybe [Text])

-- | If you are updating a query definition, use this parameter to specify
--   the ID of the query definition that you want to update. You can use
--   <a>DescribeQueryDefinitions</a> to retrieve the IDs of your saved
--   query definitions.
--   
--   If you are creating a query definition, do not specify this parameter.
--   CloudWatch generates a unique ID for the new query definition and
--   include it in the response to this operation.
putQueryDefinition_queryDefinitionId :: Lens' PutQueryDefinition (Maybe Text)

-- | A name for the query definition. If you are saving a lot of query
--   definitions, we recommend that you name them so that you can easily
--   find the ones you want by using the first part of the name as a filter
--   in the <tt>queryDefinitionNamePrefix</tt> parameter of
--   <a>DescribeQueryDefinitions</a>.
putQueryDefinition_name :: Lens' PutQueryDefinition Text

-- | The query string to use for this definition. For more information, see
--   <a>CloudWatch Logs Insights Query Syntax</a>.
putQueryDefinition_queryString :: Lens' PutQueryDefinition Text

-- | <i>See:</i> <a>newPutQueryDefinitionResponse</a> smart constructor.
data PutQueryDefinitionResponse
PutQueryDefinitionResponse' :: Maybe Text -> Int -> PutQueryDefinitionResponse

-- | The ID of the query definition.
[$sel:queryDefinitionId:PutQueryDefinitionResponse'] :: PutQueryDefinitionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutQueryDefinitionResponse'] :: PutQueryDefinitionResponse -> Int

-- | Create a value of <a>PutQueryDefinitionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryDefinitionId:PutQueryDefinition'</a>,
--   <a>putQueryDefinitionResponse_queryDefinitionId</a> - The ID of the
--   query definition.
--   
--   <a>$sel:httpStatus:PutQueryDefinitionResponse'</a>,
--   <a>putQueryDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newPutQueryDefinitionResponse :: Int -> PutQueryDefinitionResponse

-- | The ID of the query definition.
putQueryDefinitionResponse_queryDefinitionId :: Lens' PutQueryDefinitionResponse (Maybe Text)

-- | The response's http status code.
putQueryDefinitionResponse_httpStatus :: Lens' PutQueryDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.PutQueryDefinition.PutQueryDefinition
instance GHC.Show.Show Network.AWS.CloudWatchLogs.PutQueryDefinition.PutQueryDefinition
instance GHC.Read.Read Network.AWS.CloudWatchLogs.PutQueryDefinition.PutQueryDefinition
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.PutQueryDefinition.PutQueryDefinition
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.PutQueryDefinition.PutQueryDefinitionResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.PutQueryDefinition.PutQueryDefinitionResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.PutQueryDefinition.PutQueryDefinitionResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.PutQueryDefinition.PutQueryDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.PutQueryDefinition.PutQueryDefinition
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.PutQueryDefinition.PutQueryDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.PutQueryDefinition.PutQueryDefinition
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.PutQueryDefinition.PutQueryDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.PutQueryDefinition.PutQueryDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.PutQueryDefinition.PutQueryDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.PutQueryDefinition.PutQueryDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.PutQueryDefinition.PutQueryDefinition


-- | Creates or updates a metric filter and associates it with the
--   specified log group. Metric filters allow you to configure rules to
--   extract metric data from log events ingested through
--   <a>PutLogEvents</a>.
--   
--   The maximum number of metric filters that can be associated with a log
--   group is 100.
--   
--   When you create a metric filter, you can also optionally assign a unit
--   and dimensions to the metric that is created.
--   
--   Metrics extracted from log events are charged as custom metrics. To
--   prevent unexpected high charges, do not specify high-cardinality
--   fields such as <tt>IPAddress</tt> or <tt>requestID</tt> as dimensions.
--   Each different value found for a dimension is treated as a separate
--   metric and accrues charges as a separate custom metric.
--   
--   To help prevent accidental high charges, Amazon disables a metric
--   filter if it generates 1000 different name/value pairs for the
--   dimensions that you have specified within a certain amount of time.
--   
--   You can also set up a billing alarm to alert you if your charges are
--   higher than expected. For more information, see <a>Creating a Billing
--   Alarm to Monitor Your Estimated Amazon Web Services Charges</a>.
module Network.AWS.CloudWatchLogs.PutMetricFilter

-- | <i>See:</i> <a>newPutMetricFilter</a> smart constructor.
data PutMetricFilter
PutMetricFilter' :: Text -> Text -> Text -> NonEmpty MetricTransformation -> PutMetricFilter

-- | The name of the log group.
[$sel:logGroupName:PutMetricFilter'] :: PutMetricFilter -> Text

-- | A name for the metric filter.
[$sel:filterName:PutMetricFilter'] :: PutMetricFilter -> Text

-- | A filter pattern for extracting metric data out of ingested log
--   events.
[$sel:filterPattern:PutMetricFilter'] :: PutMetricFilter -> Text

-- | A collection of information that defines how metric data gets emitted.
[$sel:metricTransformations:PutMetricFilter'] :: PutMetricFilter -> NonEmpty MetricTransformation

-- | Create a value of <a>PutMetricFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:PutMetricFilter'</a>,
--   <a>putMetricFilter_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:filterName:PutMetricFilter'</a>,
--   <a>putMetricFilter_filterName</a> - A name for the metric filter.
--   
--   <a>$sel:filterPattern:PutMetricFilter'</a>,
--   <a>putMetricFilter_filterPattern</a> - A filter pattern for extracting
--   metric data out of ingested log events.
--   
--   <a>$sel:metricTransformations:PutMetricFilter'</a>,
--   <a>putMetricFilter_metricTransformations</a> - A collection of
--   information that defines how metric data gets emitted.
newPutMetricFilter :: Text -> Text -> Text -> NonEmpty MetricTransformation -> PutMetricFilter

-- | The name of the log group.
putMetricFilter_logGroupName :: Lens' PutMetricFilter Text

-- | A name for the metric filter.
putMetricFilter_filterName :: Lens' PutMetricFilter Text

-- | A filter pattern for extracting metric data out of ingested log
--   events.
putMetricFilter_filterPattern :: Lens' PutMetricFilter Text

-- | A collection of information that defines how metric data gets emitted.
putMetricFilter_metricTransformations :: Lens' PutMetricFilter (NonEmpty MetricTransformation)

-- | <i>See:</i> <a>newPutMetricFilterResponse</a> smart constructor.
data PutMetricFilterResponse
PutMetricFilterResponse' :: PutMetricFilterResponse

-- | Create a value of <a>PutMetricFilterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutMetricFilterResponse :: PutMetricFilterResponse
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.PutMetricFilter.PutMetricFilter
instance GHC.Show.Show Network.AWS.CloudWatchLogs.PutMetricFilter.PutMetricFilter
instance GHC.Read.Read Network.AWS.CloudWatchLogs.PutMetricFilter.PutMetricFilter
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.PutMetricFilter.PutMetricFilter
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.PutMetricFilter.PutMetricFilterResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.PutMetricFilter.PutMetricFilterResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.PutMetricFilter.PutMetricFilterResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.PutMetricFilter.PutMetricFilterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.PutMetricFilter.PutMetricFilter
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.PutMetricFilter.PutMetricFilterResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.PutMetricFilter.PutMetricFilter
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.PutMetricFilter.PutMetricFilter
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.PutMetricFilter.PutMetricFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.PutMetricFilter.PutMetricFilter
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.PutMetricFilter.PutMetricFilter
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.PutMetricFilter.PutMetricFilter


-- | Uploads a batch of log events to the specified log stream.
--   
--   You must include the sequence token obtained from the response of the
--   previous call. An upload in a newly created log stream does not
--   require a sequence token. You can also get the sequence token in the
--   <tt>expectedSequenceToken</tt> field from
--   <tt>InvalidSequenceTokenException</tt>. If you call
--   <tt>PutLogEvents</tt> twice within a narrow time period using the same
--   value for <tt>sequenceToken</tt>, both calls might be successful or
--   one might be rejected.
--   
--   The batch of events must satisfy the following constraints:
--   
--   <ul>
--   <li>The maximum batch size is 1,048,576 bytes. This size is calculated
--   as the sum of all event messages in UTF-8, plus 26 bytes for each log
--   event.</li>
--   <li>None of the log events in the batch can be more than 2 hours in
--   the future.</li>
--   <li>None of the log events in the batch can be older than 14 days or
--   older than the retention period of the log group.</li>
--   <li>The log events in the batch must be in chronological order by
--   their timestamp. The timestamp is the time the event occurred,
--   expressed as the number of milliseconds after Jan 1, 1970 00:00:00
--   UTC. (In Amazon Web Services Tools for PowerShell and the Amazon Web
--   Services SDK for .NET, the timestamp is specified in .NET format:
--   yyyy-mm-ddThh:mm:ss. For example, 2017-09-15T13:45:30.)</li>
--   <li>A batch of log events in a single request cannot span more than 24
--   hours. Otherwise, the operation fails.</li>
--   <li>The maximum number of log events in a batch is 10,000.</li>
--   <li>There is a quota of 5 requests per second per log stream.
--   Additional requests are throttled. This quota can't be changed.</li>
--   </ul>
--   
--   If a call to <tt>PutLogEvents</tt> returns
--   "UnrecognizedClientException" the most likely cause is an invalid
--   Amazon Web Services access key ID or secret key.
module Network.AWS.CloudWatchLogs.PutLogEvents

-- | <i>See:</i> <a>newPutLogEvents</a> smart constructor.
data PutLogEvents
PutLogEvents' :: Maybe Text -> Text -> Text -> NonEmpty InputLogEvent -> PutLogEvents

-- | The sequence token obtained from the response of the previous
--   <tt>PutLogEvents</tt> call. An upload in a newly created log stream
--   does not require a sequence token. You can also get the sequence token
--   using <a>DescribeLogStreams</a>. If you call <tt>PutLogEvents</tt>
--   twice within a narrow time period using the same value for
--   <tt>sequenceToken</tt>, both calls might be successful or one might be
--   rejected.
[$sel:sequenceToken:PutLogEvents'] :: PutLogEvents -> Maybe Text

-- | The name of the log group.
[$sel:logGroupName:PutLogEvents'] :: PutLogEvents -> Text

-- | The name of the log stream.
[$sel:logStreamName:PutLogEvents'] :: PutLogEvents -> Text

-- | The log events.
[$sel:logEvents:PutLogEvents'] :: PutLogEvents -> NonEmpty InputLogEvent

-- | Create a value of <a>PutLogEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sequenceToken:PutLogEvents'</a>,
--   <a>putLogEvents_sequenceToken</a> - The sequence token obtained from
--   the response of the previous <tt>PutLogEvents</tt> call. An upload in
--   a newly created log stream does not require a sequence token. You can
--   also get the sequence token using <a>DescribeLogStreams</a>. If you
--   call <tt>PutLogEvents</tt> twice within a narrow time period using the
--   same value for <tt>sequenceToken</tt>, both calls might be successful
--   or one might be rejected.
--   
--   <a>$sel:logGroupName:PutLogEvents'</a>,
--   <a>putLogEvents_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:logStreamName:PutLogEvents'</a>,
--   <a>putLogEvents_logStreamName</a> - The name of the log stream.
--   
--   <a>$sel:logEvents:PutLogEvents'</a>, <a>putLogEvents_logEvents</a> -
--   The log events.
newPutLogEvents :: Text -> Text -> NonEmpty InputLogEvent -> PutLogEvents

-- | The sequence token obtained from the response of the previous
--   <tt>PutLogEvents</tt> call. An upload in a newly created log stream
--   does not require a sequence token. You can also get the sequence token
--   using <a>DescribeLogStreams</a>. If you call <tt>PutLogEvents</tt>
--   twice within a narrow time period using the same value for
--   <tt>sequenceToken</tt>, both calls might be successful or one might be
--   rejected.
putLogEvents_sequenceToken :: Lens' PutLogEvents (Maybe Text)

-- | The name of the log group.
putLogEvents_logGroupName :: Lens' PutLogEvents Text

-- | The name of the log stream.
putLogEvents_logStreamName :: Lens' PutLogEvents Text

-- | The log events.
putLogEvents_logEvents :: Lens' PutLogEvents (NonEmpty InputLogEvent)

-- | <i>See:</i> <a>newPutLogEventsResponse</a> smart constructor.
data PutLogEventsResponse
PutLogEventsResponse' :: Maybe RejectedLogEventsInfo -> Maybe Text -> Int -> PutLogEventsResponse

-- | The rejected events.
[$sel:rejectedLogEventsInfo:PutLogEventsResponse'] :: PutLogEventsResponse -> Maybe RejectedLogEventsInfo

-- | The next sequence token.
[$sel:nextSequenceToken:PutLogEventsResponse'] :: PutLogEventsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutLogEventsResponse'] :: PutLogEventsResponse -> Int

-- | Create a value of <a>PutLogEventsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rejectedLogEventsInfo:PutLogEventsResponse'</a>,
--   <a>putLogEventsResponse_rejectedLogEventsInfo</a> - The rejected
--   events.
--   
--   <a>$sel:nextSequenceToken:PutLogEventsResponse'</a>,
--   <a>putLogEventsResponse_nextSequenceToken</a> - The next sequence
--   token.
--   
--   <a>$sel:httpStatus:PutLogEventsResponse'</a>,
--   <a>putLogEventsResponse_httpStatus</a> - The response's http status
--   code.
newPutLogEventsResponse :: Int -> PutLogEventsResponse

-- | The rejected events.
putLogEventsResponse_rejectedLogEventsInfo :: Lens' PutLogEventsResponse (Maybe RejectedLogEventsInfo)

-- | The next sequence token.
putLogEventsResponse_nextSequenceToken :: Lens' PutLogEventsResponse (Maybe Text)

-- | The response's http status code.
putLogEventsResponse_httpStatus :: Lens' PutLogEventsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.PutLogEvents.PutLogEvents
instance GHC.Show.Show Network.AWS.CloudWatchLogs.PutLogEvents.PutLogEvents
instance GHC.Read.Read Network.AWS.CloudWatchLogs.PutLogEvents.PutLogEvents
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.PutLogEvents.PutLogEvents
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.PutLogEvents.PutLogEventsResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.PutLogEvents.PutLogEventsResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.PutLogEvents.PutLogEventsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.PutLogEvents.PutLogEventsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.PutLogEvents.PutLogEvents
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.PutLogEvents.PutLogEventsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.PutLogEvents.PutLogEvents
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.PutLogEvents.PutLogEvents
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.PutLogEvents.PutLogEvents
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.PutLogEvents.PutLogEvents
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.PutLogEvents.PutLogEvents
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.PutLogEvents.PutLogEvents


-- | Creates or updates an access policy associated with an existing
--   destination. An access policy is an <a>IAM policy document</a> that is
--   used to authorize claims to register a subscription filter against a
--   given destination.
--   
--   If multiple Amazon Web Services accounts are sending logs to this
--   destination, each sender account must be listed separately in the
--   policy. The policy does not support specifying <tt>*</tt> as the
--   Principal or the use of the <tt>aws:PrincipalOrgId</tt> global key.
module Network.AWS.CloudWatchLogs.PutDestinationPolicy

-- | <i>See:</i> <a>newPutDestinationPolicy</a> smart constructor.
data PutDestinationPolicy
PutDestinationPolicy' :: Text -> Text -> PutDestinationPolicy

-- | A name for an existing destination.
[$sel:destinationName:PutDestinationPolicy'] :: PutDestinationPolicy -> Text

-- | An IAM policy document that authorizes cross-account users to deliver
--   their log events to the associated destination. This can be up to 5120
--   bytes.
[$sel:accessPolicy:PutDestinationPolicy'] :: PutDestinationPolicy -> Text

-- | Create a value of <a>PutDestinationPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationName:PutDestinationPolicy'</a>,
--   <a>putDestinationPolicy_destinationName</a> - A name for an existing
--   destination.
--   
--   <a>$sel:accessPolicy:PutDestinationPolicy'</a>,
--   <a>putDestinationPolicy_accessPolicy</a> - An IAM policy document that
--   authorizes cross-account users to deliver their log events to the
--   associated destination. This can be up to 5120 bytes.
newPutDestinationPolicy :: Text -> Text -> PutDestinationPolicy

-- | A name for an existing destination.
putDestinationPolicy_destinationName :: Lens' PutDestinationPolicy Text

-- | An IAM policy document that authorizes cross-account users to deliver
--   their log events to the associated destination. This can be up to 5120
--   bytes.
putDestinationPolicy_accessPolicy :: Lens' PutDestinationPolicy Text

-- | <i>See:</i> <a>newPutDestinationPolicyResponse</a> smart constructor.
data PutDestinationPolicyResponse
PutDestinationPolicyResponse' :: PutDestinationPolicyResponse

-- | Create a value of <a>PutDestinationPolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutDestinationPolicyResponse :: PutDestinationPolicyResponse
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.PutDestinationPolicy.PutDestinationPolicy
instance GHC.Show.Show Network.AWS.CloudWatchLogs.PutDestinationPolicy.PutDestinationPolicy
instance GHC.Read.Read Network.AWS.CloudWatchLogs.PutDestinationPolicy.PutDestinationPolicy
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.PutDestinationPolicy.PutDestinationPolicy
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.PutDestinationPolicy.PutDestinationPolicyResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.PutDestinationPolicy.PutDestinationPolicyResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.PutDestinationPolicy.PutDestinationPolicyResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.PutDestinationPolicy.PutDestinationPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.PutDestinationPolicy.PutDestinationPolicy
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.PutDestinationPolicy.PutDestinationPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.PutDestinationPolicy.PutDestinationPolicy
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.PutDestinationPolicy.PutDestinationPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.PutDestinationPolicy.PutDestinationPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.PutDestinationPolicy.PutDestinationPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.PutDestinationPolicy.PutDestinationPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.PutDestinationPolicy.PutDestinationPolicy


-- | Creates or updates a destination. This operation is used only to
--   create destinations for cross-account subscriptions.
--   
--   A destination encapsulates a physical resource (such as an Amazon
--   Kinesis stream) and enables you to subscribe to a real-time stream of
--   log events for a different account, ingested using
--   <a>PutLogEvents</a>.
--   
--   Through an access policy, a destination controls what is written to
--   it. By default, <tt>PutDestination</tt> does not set any access policy
--   with the destination, which means a cross-account user cannot call
--   <a>PutSubscriptionFilter</a> against this destination. To enable this,
--   the destination owner must call <a>PutDestinationPolicy</a> after
--   <tt>PutDestination</tt>.
--   
--   To perform a <tt>PutDestination</tt> operation, you must also have the
--   <tt>iam:PassRole</tt> permission.
module Network.AWS.CloudWatchLogs.PutDestination

-- | <i>See:</i> <a>newPutDestination</a> smart constructor.
data PutDestination
PutDestination' :: Text -> Text -> Text -> PutDestination

-- | A name for the destination.
[$sel:destinationName:PutDestination'] :: PutDestination -> Text

-- | The ARN of an Amazon Kinesis stream to which to deliver matching log
--   events.
[$sel:targetArn:PutDestination'] :: PutDestination -> Text

-- | The ARN of an IAM role that grants CloudWatch Logs permissions to call
--   the Amazon Kinesis <tt>PutRecord</tt> operation on the destination
--   stream.
[$sel:roleArn:PutDestination'] :: PutDestination -> Text

-- | Create a value of <a>PutDestination</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationName:PutDestination'</a>,
--   <a>putDestination_destinationName</a> - A name for the destination.
--   
--   <a>$sel:targetArn:PutDestination'</a>, <a>putDestination_targetArn</a>
--   - The ARN of an Amazon Kinesis stream to which to deliver matching log
--   events.
--   
--   <a>$sel:roleArn:PutDestination'</a>, <a>putDestination_roleArn</a> -
--   The ARN of an IAM role that grants CloudWatch Logs permissions to call
--   the Amazon Kinesis <tt>PutRecord</tt> operation on the destination
--   stream.
newPutDestination :: Text -> Text -> Text -> PutDestination

-- | A name for the destination.
putDestination_destinationName :: Lens' PutDestination Text

-- | The ARN of an Amazon Kinesis stream to which to deliver matching log
--   events.
putDestination_targetArn :: Lens' PutDestination Text

-- | The ARN of an IAM role that grants CloudWatch Logs permissions to call
--   the Amazon Kinesis <tt>PutRecord</tt> operation on the destination
--   stream.
putDestination_roleArn :: Lens' PutDestination Text

-- | <i>See:</i> <a>newPutDestinationResponse</a> smart constructor.
data PutDestinationResponse
PutDestinationResponse' :: Maybe Destination -> Int -> PutDestinationResponse

-- | The destination.
[$sel:destination:PutDestinationResponse'] :: PutDestinationResponse -> Maybe Destination

-- | The response's http status code.
[$sel:httpStatus:PutDestinationResponse'] :: PutDestinationResponse -> Int

-- | Create a value of <a>PutDestinationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:PutDestinationResponse'</a>,
--   <a>putDestinationResponse_destination</a> - The destination.
--   
--   <a>$sel:httpStatus:PutDestinationResponse'</a>,
--   <a>putDestinationResponse_httpStatus</a> - The response's http status
--   code.
newPutDestinationResponse :: Int -> PutDestinationResponse

-- | The destination.
putDestinationResponse_destination :: Lens' PutDestinationResponse (Maybe Destination)

-- | The response's http status code.
putDestinationResponse_httpStatus :: Lens' PutDestinationResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.PutDestination.PutDestination
instance GHC.Show.Show Network.AWS.CloudWatchLogs.PutDestination.PutDestination
instance GHC.Read.Read Network.AWS.CloudWatchLogs.PutDestination.PutDestination
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.PutDestination.PutDestination
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.PutDestination.PutDestinationResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.PutDestination.PutDestinationResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.PutDestination.PutDestinationResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.PutDestination.PutDestinationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.PutDestination.PutDestination
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.PutDestination.PutDestinationResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.PutDestination.PutDestination
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.PutDestination.PutDestination
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.PutDestination.PutDestination
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.PutDestination.PutDestination
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.PutDestination.PutDestination
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.PutDestination.PutDestination


-- | Lists the tags for the specified log group.
module Network.AWS.CloudWatchLogs.ListTagsLogGroup

-- | <i>See:</i> <a>newListTagsLogGroup</a> smart constructor.
data ListTagsLogGroup
ListTagsLogGroup' :: Text -> ListTagsLogGroup

-- | The name of the log group.
[$sel:logGroupName:ListTagsLogGroup'] :: ListTagsLogGroup -> Text

-- | Create a value of <a>ListTagsLogGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:ListTagsLogGroup'</a>,
--   <a>listTagsLogGroup_logGroupName</a> - The name of the log group.
newListTagsLogGroup :: Text -> ListTagsLogGroup

-- | The name of the log group.
listTagsLogGroup_logGroupName :: Lens' ListTagsLogGroup Text

-- | <i>See:</i> <a>newListTagsLogGroupResponse</a> smart constructor.
data ListTagsLogGroupResponse
ListTagsLogGroupResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsLogGroupResponse

-- | The tags for the log group.
[$sel:tags:ListTagsLogGroupResponse'] :: ListTagsLogGroupResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsLogGroupResponse'] :: ListTagsLogGroupResponse -> Int

-- | Create a value of <a>ListTagsLogGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsLogGroupResponse'</a>,
--   <a>listTagsLogGroupResponse_tags</a> - The tags for the log group.
--   
--   <a>$sel:httpStatus:ListTagsLogGroupResponse'</a>,
--   <a>listTagsLogGroupResponse_httpStatus</a> - The response's http
--   status code.
newListTagsLogGroupResponse :: Int -> ListTagsLogGroupResponse

-- | The tags for the log group.
listTagsLogGroupResponse_tags :: Lens' ListTagsLogGroupResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsLogGroupResponse_httpStatus :: Lens' ListTagsLogGroupResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.ListTagsLogGroup.ListTagsLogGroup
instance GHC.Show.Show Network.AWS.CloudWatchLogs.ListTagsLogGroup.ListTagsLogGroup
instance GHC.Read.Read Network.AWS.CloudWatchLogs.ListTagsLogGroup.ListTagsLogGroup
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.ListTagsLogGroup.ListTagsLogGroup
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.ListTagsLogGroup.ListTagsLogGroupResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.ListTagsLogGroup.ListTagsLogGroupResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.ListTagsLogGroup.ListTagsLogGroupResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.ListTagsLogGroup.ListTagsLogGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.ListTagsLogGroup.ListTagsLogGroup
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.ListTagsLogGroup.ListTagsLogGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.ListTagsLogGroup.ListTagsLogGroup
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.ListTagsLogGroup.ListTagsLogGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.ListTagsLogGroup.ListTagsLogGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.ListTagsLogGroup.ListTagsLogGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.ListTagsLogGroup.ListTagsLogGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.ListTagsLogGroup.ListTagsLogGroup


-- | Returns the results from the specified query.
--   
--   Only the fields requested in the query are returned, along with a
--   <tt>@ptr</tt> field, which is the identifier for the log record. You
--   can use the value of <tt>@ptr</tt> in a <a>GetLogRecord</a> operation
--   to get the full log record.
--   
--   <tt>GetQueryResults</tt> does not start a query execution. To run a
--   query, use <a>StartQuery</a>.
--   
--   If the value of the <tt>Status</tt> field in the output is
--   <tt>Running</tt>, this operation returns only partial results. If you
--   see a value of <tt>Scheduled</tt> or <tt>Running</tt> for the status,
--   you can retry the operation later to see the final results.
module Network.AWS.CloudWatchLogs.GetQueryResults

-- | <i>See:</i> <a>newGetQueryResults</a> smart constructor.
data GetQueryResults
GetQueryResults' :: Text -> GetQueryResults

-- | The ID number of the query.
[$sel:queryId:GetQueryResults'] :: GetQueryResults -> Text

-- | Create a value of <a>GetQueryResults</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryId:GetQueryResults'</a>, <a>getQueryResults_queryId</a> -
--   The ID number of the query.
newGetQueryResults :: Text -> GetQueryResults

-- | The ID number of the query.
getQueryResults_queryId :: Lens' GetQueryResults Text

-- | <i>See:</i> <a>newGetQueryResultsResponse</a> smart constructor.
data GetQueryResultsResponse
GetQueryResultsResponse' :: Maybe QueryStatus -> Maybe [[ResultField]] -> Maybe QueryStatistics -> Int -> GetQueryResultsResponse

-- | The status of the most recent running of the query. Possible values
--   are <tt>Cancelled</tt>, <tt>Complete</tt>, <tt>Failed</tt>,
--   <tt>Running</tt>, <tt>Scheduled</tt>, <tt>Timeout</tt>, and
--   <tt>Unknown</tt>.
--   
--   Queries time out after 15 minutes of execution. To avoid having your
--   queries time out, reduce the time range being searched or partition
--   your query into a number of queries.
[$sel:status:GetQueryResultsResponse'] :: GetQueryResultsResponse -> Maybe QueryStatus

-- | The log events that matched the query criteria during the most recent
--   time it ran.
--   
--   The <tt>results</tt> value is an array of arrays. Each log event is
--   one object in the top-level array. Each of these log event objects is
--   an array of <tt>field</tt>/<tt>value</tt> pairs.
[$sel:results:GetQueryResultsResponse'] :: GetQueryResultsResponse -> Maybe [[ResultField]]

-- | Includes the number of log events scanned by the query, the number of
--   log events that matched the query criteria, and the total number of
--   bytes in the log events that were scanned. These values reflect the
--   full raw results of the query.
[$sel:statistics:GetQueryResultsResponse'] :: GetQueryResultsResponse -> Maybe QueryStatistics

-- | The response's http status code.
[$sel:httpStatus:GetQueryResultsResponse'] :: GetQueryResultsResponse -> Int

-- | Create a value of <a>GetQueryResultsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetQueryResultsResponse'</a>,
--   <a>getQueryResultsResponse_status</a> - The status of the most recent
--   running of the query. Possible values are <tt>Cancelled</tt>,
--   <tt>Complete</tt>, <tt>Failed</tt>, <tt>Running</tt>,
--   <tt>Scheduled</tt>, <tt>Timeout</tt>, and <tt>Unknown</tt>.
--   
--   Queries time out after 15 minutes of execution. To avoid having your
--   queries time out, reduce the time range being searched or partition
--   your query into a number of queries.
--   
--   <a>$sel:results:GetQueryResultsResponse'</a>,
--   <a>getQueryResultsResponse_results</a> - The log events that matched
--   the query criteria during the most recent time it ran.
--   
--   The <tt>results</tt> value is an array of arrays. Each log event is
--   one object in the top-level array. Each of these log event objects is
--   an array of <tt>field</tt>/<tt>value</tt> pairs.
--   
--   <a>$sel:statistics:GetQueryResultsResponse'</a>,
--   <a>getQueryResultsResponse_statistics</a> - Includes the number of log
--   events scanned by the query, the number of log events that matched the
--   query criteria, and the total number of bytes in the log events that
--   were scanned. These values reflect the full raw results of the query.
--   
--   <a>$sel:httpStatus:GetQueryResultsResponse'</a>,
--   <a>getQueryResultsResponse_httpStatus</a> - The response's http status
--   code.
newGetQueryResultsResponse :: Int -> GetQueryResultsResponse

-- | The status of the most recent running of the query. Possible values
--   are <tt>Cancelled</tt>, <tt>Complete</tt>, <tt>Failed</tt>,
--   <tt>Running</tt>, <tt>Scheduled</tt>, <tt>Timeout</tt>, and
--   <tt>Unknown</tt>.
--   
--   Queries time out after 15 minutes of execution. To avoid having your
--   queries time out, reduce the time range being searched or partition
--   your query into a number of queries.
getQueryResultsResponse_status :: Lens' GetQueryResultsResponse (Maybe QueryStatus)

-- | The log events that matched the query criteria during the most recent
--   time it ran.
--   
--   The <tt>results</tt> value is an array of arrays. Each log event is
--   one object in the top-level array. Each of these log event objects is
--   an array of <tt>field</tt>/<tt>value</tt> pairs.
getQueryResultsResponse_results :: Lens' GetQueryResultsResponse (Maybe [[ResultField]])

-- | Includes the number of log events scanned by the query, the number of
--   log events that matched the query criteria, and the total number of
--   bytes in the log events that were scanned. These values reflect the
--   full raw results of the query.
getQueryResultsResponse_statistics :: Lens' GetQueryResultsResponse (Maybe QueryStatistics)

-- | The response's http status code.
getQueryResultsResponse_httpStatus :: Lens' GetQueryResultsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.GetQueryResults.GetQueryResults
instance GHC.Show.Show Network.AWS.CloudWatchLogs.GetQueryResults.GetQueryResults
instance GHC.Read.Read Network.AWS.CloudWatchLogs.GetQueryResults.GetQueryResults
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.GetQueryResults.GetQueryResults
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.GetQueryResults.GetQueryResultsResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.GetQueryResults.GetQueryResultsResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.GetQueryResults.GetQueryResultsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.GetQueryResults.GetQueryResultsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.GetQueryResults.GetQueryResults
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.GetQueryResults.GetQueryResultsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.GetQueryResults.GetQueryResults
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.GetQueryResults.GetQueryResults
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.GetQueryResults.GetQueryResults
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.GetQueryResults.GetQueryResults
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.GetQueryResults.GetQueryResults
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.GetQueryResults.GetQueryResults


-- | Retrieves all of the fields and values of a single log event. All
--   fields are retrieved, even if the original query that produced the
--   <tt>logRecordPointer</tt> retrieved only a subset of fields. Fields
--   are returned as field name/field value pairs.
--   
--   The full unparsed log event is returned within <tt>@message</tt>.
module Network.AWS.CloudWatchLogs.GetLogRecord

-- | <i>See:</i> <a>newGetLogRecord</a> smart constructor.
data GetLogRecord
GetLogRecord' :: Text -> GetLogRecord

-- | The pointer corresponding to the log event record you want to
--   retrieve. You get this from the response of a <tt>GetQueryResults</tt>
--   operation. In that response, the value of the <tt>@ptr</tt> field for
--   a log event is the value to use as <tt>logRecordPointer</tt> to
--   retrieve that complete log event record.
[$sel:logRecordPointer:GetLogRecord'] :: GetLogRecord -> Text

-- | Create a value of <a>GetLogRecord</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logRecordPointer:GetLogRecord'</a>,
--   <a>getLogRecord_logRecordPointer</a> - The pointer corresponding to
--   the log event record you want to retrieve. You get this from the
--   response of a <tt>GetQueryResults</tt> operation. In that response,
--   the value of the <tt>@ptr</tt> field for a log event is the value to
--   use as <tt>logRecordPointer</tt> to retrieve that complete log event
--   record.
newGetLogRecord :: Text -> GetLogRecord

-- | The pointer corresponding to the log event record you want to
--   retrieve. You get this from the response of a <tt>GetQueryResults</tt>
--   operation. In that response, the value of the <tt>@ptr</tt> field for
--   a log event is the value to use as <tt>logRecordPointer</tt> to
--   retrieve that complete log event record.
getLogRecord_logRecordPointer :: Lens' GetLogRecord Text

-- | <i>See:</i> <a>newGetLogRecordResponse</a> smart constructor.
data GetLogRecordResponse
GetLogRecordResponse' :: Maybe (HashMap Text Text) -> Int -> GetLogRecordResponse

-- | The requested log event, as a JSON string.
[$sel:logRecord:GetLogRecordResponse'] :: GetLogRecordResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetLogRecordResponse'] :: GetLogRecordResponse -> Int

-- | Create a value of <a>GetLogRecordResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logRecord:GetLogRecordResponse'</a>,
--   <a>getLogRecordResponse_logRecord</a> - The requested log event, as a
--   JSON string.
--   
--   <a>$sel:httpStatus:GetLogRecordResponse'</a>,
--   <a>getLogRecordResponse_httpStatus</a> - The response's http status
--   code.
newGetLogRecordResponse :: Int -> GetLogRecordResponse

-- | The requested log event, as a JSON string.
getLogRecordResponse_logRecord :: Lens' GetLogRecordResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getLogRecordResponse_httpStatus :: Lens' GetLogRecordResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.GetLogRecord.GetLogRecord
instance GHC.Show.Show Network.AWS.CloudWatchLogs.GetLogRecord.GetLogRecord
instance GHC.Read.Read Network.AWS.CloudWatchLogs.GetLogRecord.GetLogRecord
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.GetLogRecord.GetLogRecord
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.GetLogRecord.GetLogRecordResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.GetLogRecord.GetLogRecordResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.GetLogRecord.GetLogRecordResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.GetLogRecord.GetLogRecordResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.GetLogRecord.GetLogRecord
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.GetLogRecord.GetLogRecordResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.GetLogRecord.GetLogRecord
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.GetLogRecord.GetLogRecord
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.GetLogRecord.GetLogRecord
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.GetLogRecord.GetLogRecord
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.GetLogRecord.GetLogRecord
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.GetLogRecord.GetLogRecord


-- | Returns a list of the fields that are included in log events in the
--   specified log group, along with the percentage of log events that
--   contain each field. The search is limited to a time period that you
--   specify.
--   
--   In the results, fields that start with @ are fields generated by
--   CloudWatch Logs. For example, <tt>@timestamp</tt> is the timestamp of
--   each log event. For more information about the fields that are
--   generated by CloudWatch logs, see <a>Supported Logs and Discovered
--   Fields</a>.
--   
--   The response results are sorted by the frequency percentage, starting
--   with the highest percentage.
module Network.AWS.CloudWatchLogs.GetLogGroupFields

-- | <i>See:</i> <a>newGetLogGroupFields</a> smart constructor.
data GetLogGroupFields
GetLogGroupFields' :: Maybe Natural -> Text -> GetLogGroupFields

-- | The time to set as the center of the query. If you specify
--   <tt>time</tt>, the 15 minutes before this time are queries. If you
--   omit <tt>time</tt> the 8 minutes before and 8 minutes after this time
--   are searched.
--   
--   The <tt>time</tt> value is specified as epoch time, the number of
--   seconds since January 1, 1970, 00:00:00 UTC.
[$sel:time:GetLogGroupFields'] :: GetLogGroupFields -> Maybe Natural

-- | The name of the log group to search.
[$sel:logGroupName:GetLogGroupFields'] :: GetLogGroupFields -> Text

-- | Create a value of <a>GetLogGroupFields</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:time:GetLogGroupFields'</a>, <a>getLogGroupFields_time</a> -
--   The time to set as the center of the query. If you specify
--   <tt>time</tt>, the 15 minutes before this time are queries. If you
--   omit <tt>time</tt> the 8 minutes before and 8 minutes after this time
--   are searched.
--   
--   The <tt>time</tt> value is specified as epoch time, the number of
--   seconds since January 1, 1970, 00:00:00 UTC.
--   
--   <a>$sel:logGroupName:GetLogGroupFields'</a>,
--   <a>getLogGroupFields_logGroupName</a> - The name of the log group to
--   search.
newGetLogGroupFields :: Text -> GetLogGroupFields

-- | The time to set as the center of the query. If you specify
--   <tt>time</tt>, the 15 minutes before this time are queries. If you
--   omit <tt>time</tt> the 8 minutes before and 8 minutes after this time
--   are searched.
--   
--   The <tt>time</tt> value is specified as epoch time, the number of
--   seconds since January 1, 1970, 00:00:00 UTC.
getLogGroupFields_time :: Lens' GetLogGroupFields (Maybe Natural)

-- | The name of the log group to search.
getLogGroupFields_logGroupName :: Lens' GetLogGroupFields Text

-- | <i>See:</i> <a>newGetLogGroupFieldsResponse</a> smart constructor.
data GetLogGroupFieldsResponse
GetLogGroupFieldsResponse' :: Maybe [LogGroupField] -> Int -> GetLogGroupFieldsResponse

-- | The array of fields found in the query. Each object in the array
--   contains the name of the field, along with the percentage of time it
--   appeared in the log events that were queried.
[$sel:logGroupFields:GetLogGroupFieldsResponse'] :: GetLogGroupFieldsResponse -> Maybe [LogGroupField]

-- | The response's http status code.
[$sel:httpStatus:GetLogGroupFieldsResponse'] :: GetLogGroupFieldsResponse -> Int

-- | Create a value of <a>GetLogGroupFieldsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupFields:GetLogGroupFieldsResponse'</a>,
--   <a>getLogGroupFieldsResponse_logGroupFields</a> - The array of fields
--   found in the query. Each object in the array contains the name of the
--   field, along with the percentage of time it appeared in the log events
--   that were queried.
--   
--   <a>$sel:httpStatus:GetLogGroupFieldsResponse'</a>,
--   <a>getLogGroupFieldsResponse_httpStatus</a> - The response's http
--   status code.
newGetLogGroupFieldsResponse :: Int -> GetLogGroupFieldsResponse

-- | The array of fields found in the query. Each object in the array
--   contains the name of the field, along with the percentage of time it
--   appeared in the log events that were queried.
getLogGroupFieldsResponse_logGroupFields :: Lens' GetLogGroupFieldsResponse (Maybe [LogGroupField])

-- | The response's http status code.
getLogGroupFieldsResponse_httpStatus :: Lens' GetLogGroupFieldsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.GetLogGroupFields.GetLogGroupFields
instance GHC.Show.Show Network.AWS.CloudWatchLogs.GetLogGroupFields.GetLogGroupFields
instance GHC.Read.Read Network.AWS.CloudWatchLogs.GetLogGroupFields.GetLogGroupFields
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.GetLogGroupFields.GetLogGroupFields
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.GetLogGroupFields.GetLogGroupFieldsResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.GetLogGroupFields.GetLogGroupFieldsResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.GetLogGroupFields.GetLogGroupFieldsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.GetLogGroupFields.GetLogGroupFieldsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.GetLogGroupFields.GetLogGroupFields
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.GetLogGroupFields.GetLogGroupFieldsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.GetLogGroupFields.GetLogGroupFields
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.GetLogGroupFields.GetLogGroupFields
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.GetLogGroupFields.GetLogGroupFields
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.GetLogGroupFields.GetLogGroupFields
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.GetLogGroupFields.GetLogGroupFields
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.GetLogGroupFields.GetLogGroupFields


-- | Lists log events from the specified log stream. You can list all of
--   the log events or filter using a time range.
--   
--   By default, this operation returns as many log events as can fit in a
--   response size of 1MB (up to 10,000 log events). You can get additional
--   log events by specifying one of the tokens in a subsequent call. This
--   operation can return empty results while there are more log events
--   available through the token.
module Network.AWS.CloudWatchLogs.GetLogEvents

-- | <i>See:</i> <a>newGetLogEvents</a> smart constructor.
data GetLogEvents
GetLogEvents' :: Maybe Natural -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Natural -> Text -> Text -> GetLogEvents

-- | The start of the time range, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC. Events with a timestamp equal to this
--   time or later than this time are included. Events with a timestamp
--   earlier than this time are not included.
[$sel:startTime:GetLogEvents'] :: GetLogEvents -> Maybe Natural

-- | If the value is true, the earliest log events are returned first. If
--   the value is false, the latest log events are returned first. The
--   default value is false.
--   
--   If you are using a previous <tt>nextForwardToken</tt> value as the
--   <tt>nextToken</tt> in this operation, you must specify <tt>true</tt>
--   for <tt>startFromHead</tt>.
[$sel:startFromHead:GetLogEvents'] :: GetLogEvents -> Maybe Bool

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
[$sel:nextToken:GetLogEvents'] :: GetLogEvents -> Maybe Text

-- | The end of the time range, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC. Events with a timestamp equal to or
--   later than this time are not included.
[$sel:endTime:GetLogEvents'] :: GetLogEvents -> Maybe Natural

-- | The maximum number of log events returned. If you don't specify a
--   value, the maximum is as many log events as can fit in a response size
--   of 1 MB, up to 10,000 log events.
[$sel:limit:GetLogEvents'] :: GetLogEvents -> Maybe Natural

-- | The name of the log group.
[$sel:logGroupName:GetLogEvents'] :: GetLogEvents -> Text

-- | The name of the log stream.
[$sel:logStreamName:GetLogEvents'] :: GetLogEvents -> Text

-- | Create a value of <a>GetLogEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:GetLogEvents'</a>, <a>getLogEvents_startTime</a> -
--   The start of the time range, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC. Events with a timestamp equal to this
--   time or later than this time are included. Events with a timestamp
--   earlier than this time are not included.
--   
--   <a>$sel:startFromHead:GetLogEvents'</a>,
--   <a>getLogEvents_startFromHead</a> - If the value is true, the earliest
--   log events are returned first. If the value is false, the latest log
--   events are returned first. The default value is false.
--   
--   If you are using a previous <tt>nextForwardToken</tt> value as the
--   <tt>nextToken</tt> in this operation, you must specify <tt>true</tt>
--   for <tt>startFromHead</tt>.
--   
--   <a>$sel:nextToken:GetLogEvents'</a>, <a>getLogEvents_nextToken</a> -
--   The token for the next set of items to return. (You received this
--   token from a previous call.)
--   
--   <a>$sel:endTime:GetLogEvents'</a>, <a>getLogEvents_endTime</a> - The
--   end of the time range, expressed as the number of milliseconds after
--   Jan 1, 1970 00:00:00 UTC. Events with a timestamp equal to or later
--   than this time are not included.
--   
--   <a>$sel:limit:GetLogEvents'</a>, <a>getLogEvents_limit</a> - The
--   maximum number of log events returned. If you don't specify a value,
--   the maximum is as many log events as can fit in a response size of 1
--   MB, up to 10,000 log events.
--   
--   <a>$sel:logGroupName:GetLogEvents'</a>,
--   <a>getLogEvents_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:logStreamName:GetLogEvents'</a>,
--   <a>getLogEvents_logStreamName</a> - The name of the log stream.
newGetLogEvents :: Text -> Text -> GetLogEvents

-- | The start of the time range, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC. Events with a timestamp equal to this
--   time or later than this time are included. Events with a timestamp
--   earlier than this time are not included.
getLogEvents_startTime :: Lens' GetLogEvents (Maybe Natural)

-- | If the value is true, the earliest log events are returned first. If
--   the value is false, the latest log events are returned first. The
--   default value is false.
--   
--   If you are using a previous <tt>nextForwardToken</tt> value as the
--   <tt>nextToken</tt> in this operation, you must specify <tt>true</tt>
--   for <tt>startFromHead</tt>.
getLogEvents_startFromHead :: Lens' GetLogEvents (Maybe Bool)

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
getLogEvents_nextToken :: Lens' GetLogEvents (Maybe Text)

-- | The end of the time range, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC. Events with a timestamp equal to or
--   later than this time are not included.
getLogEvents_endTime :: Lens' GetLogEvents (Maybe Natural)

-- | The maximum number of log events returned. If you don't specify a
--   value, the maximum is as many log events as can fit in a response size
--   of 1 MB, up to 10,000 log events.
getLogEvents_limit :: Lens' GetLogEvents (Maybe Natural)

-- | The name of the log group.
getLogEvents_logGroupName :: Lens' GetLogEvents Text

-- | The name of the log stream.
getLogEvents_logStreamName :: Lens' GetLogEvents Text

-- | <i>See:</i> <a>newGetLogEventsResponse</a> smart constructor.
data GetLogEventsResponse
GetLogEventsResponse' :: Maybe Text -> Maybe Text -> Maybe [OutputLogEvent] -> Int -> GetLogEventsResponse

-- | The token for the next set of items in the backward direction. The
--   token expires after 24 hours. This token is never null. If you have
--   reached the end of the stream, it returns the same token you passed
--   in.
[$sel:nextBackwardToken:GetLogEventsResponse'] :: GetLogEventsResponse -> Maybe Text

-- | The token for the next set of items in the forward direction. The
--   token expires after 24 hours. If you have reached the end of the
--   stream, it returns the same token you passed in.
[$sel:nextForwardToken:GetLogEventsResponse'] :: GetLogEventsResponse -> Maybe Text

-- | The events.
[$sel:events:GetLogEventsResponse'] :: GetLogEventsResponse -> Maybe [OutputLogEvent]

-- | The response's http status code.
[$sel:httpStatus:GetLogEventsResponse'] :: GetLogEventsResponse -> Int

-- | Create a value of <a>GetLogEventsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextBackwardToken:GetLogEventsResponse'</a>,
--   <a>getLogEventsResponse_nextBackwardToken</a> - The token for the next
--   set of items in the backward direction. The token expires after 24
--   hours. This token is never null. If you have reached the end of the
--   stream, it returns the same token you passed in.
--   
--   <a>$sel:nextForwardToken:GetLogEventsResponse'</a>,
--   <a>getLogEventsResponse_nextForwardToken</a> - The token for the next
--   set of items in the forward direction. The token expires after 24
--   hours. If you have reached the end of the stream, it returns the same
--   token you passed in.
--   
--   <a>$sel:events:GetLogEventsResponse'</a>,
--   <a>getLogEventsResponse_events</a> - The events.
--   
--   <a>$sel:httpStatus:GetLogEventsResponse'</a>,
--   <a>getLogEventsResponse_httpStatus</a> - The response's http status
--   code.
newGetLogEventsResponse :: Int -> GetLogEventsResponse

-- | The token for the next set of items in the backward direction. The
--   token expires after 24 hours. This token is never null. If you have
--   reached the end of the stream, it returns the same token you passed
--   in.
getLogEventsResponse_nextBackwardToken :: Lens' GetLogEventsResponse (Maybe Text)

-- | The token for the next set of items in the forward direction. The
--   token expires after 24 hours. If you have reached the end of the
--   stream, it returns the same token you passed in.
getLogEventsResponse_nextForwardToken :: Lens' GetLogEventsResponse (Maybe Text)

-- | The events.
getLogEventsResponse_events :: Lens' GetLogEventsResponse (Maybe [OutputLogEvent])

-- | The response's http status code.
getLogEventsResponse_httpStatus :: Lens' GetLogEventsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.GetLogEvents.GetLogEvents
instance GHC.Show.Show Network.AWS.CloudWatchLogs.GetLogEvents.GetLogEvents
instance GHC.Read.Read Network.AWS.CloudWatchLogs.GetLogEvents.GetLogEvents
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.GetLogEvents.GetLogEvents
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.GetLogEvents.GetLogEventsResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.GetLogEvents.GetLogEventsResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.GetLogEvents.GetLogEventsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.GetLogEvents.GetLogEventsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.GetLogEvents.GetLogEvents
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.GetLogEvents.GetLogEventsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.GetLogEvents.GetLogEvents
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.GetLogEvents.GetLogEvents
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.GetLogEvents.GetLogEvents
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.GetLogEvents.GetLogEvents
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.GetLogEvents.GetLogEvents
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.GetLogEvents.GetLogEvents


-- | Lists log events from the specified log group. You can list all the
--   log events or filter the results using a filter pattern, a time range,
--   and the name of the log stream.
--   
--   By default, this operation returns as many log events as can fit in 1
--   MB (up to 10,000 log events) or all the events found within the time
--   range that you specify. If the results include a token, then there are
--   more log events available, and you can get additional results by
--   specifying the token in a subsequent call. This operation can return
--   empty results while there are more log events available through the
--   token.
--   
--   The returned log events are sorted by event timestamp, the timestamp
--   when the event was ingested by CloudWatch Logs, and the ID of the
--   <tt>PutLogEvents</tt> request.
--   
--   This operation returns paginated results.
module Network.AWS.CloudWatchLogs.FilterLogEvents

-- | <i>See:</i> <a>newFilterLogEvents</a> smart constructor.
data FilterLogEvents
FilterLogEvents' :: Maybe Natural -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Bool -> Text -> FilterLogEvents

-- | The start of the time range, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC. Events with a timestamp before this
--   time are not returned.
[$sel:startTime:FilterLogEvents'] :: FilterLogEvents -> Maybe Natural

-- | The token for the next set of events to return. (You received this
--   token from a previous call.)
[$sel:nextToken:FilterLogEvents'] :: FilterLogEvents -> Maybe Text

-- | Filters the results to only logs from the log streams in this list.
--   
--   If you specify a value for both <tt>logStreamNamePrefix</tt> and
--   <tt>logStreamNames</tt>, the action returns an
--   <tt>InvalidParameterException</tt> error.
[$sel:logStreamNames:FilterLogEvents'] :: FilterLogEvents -> Maybe (NonEmpty Text)

-- | Filters the results to include only events from log streams that have
--   names starting with this prefix.
--   
--   If you specify a value for both <tt>logStreamNamePrefix</tt> and
--   <tt>logStreamNames</tt>, but the value for
--   <tt>logStreamNamePrefix</tt> does not match any log stream names
--   specified in <tt>logStreamNames</tt>, the action returns an
--   <tt>InvalidParameterException</tt> error.
[$sel:logStreamNamePrefix:FilterLogEvents'] :: FilterLogEvents -> Maybe Text

-- | The end of the time range, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC. Events with a timestamp later than
--   this time are not returned.
[$sel:endTime:FilterLogEvents'] :: FilterLogEvents -> Maybe Natural

-- | The maximum number of events to return. The default is 10,000 events.
[$sel:limit:FilterLogEvents'] :: FilterLogEvents -> Maybe Natural

-- | The filter pattern to use. For more information, see <a>Filter and
--   Pattern Syntax</a>.
--   
--   If not provided, all the events are matched.
[$sel:filterPattern:FilterLogEvents'] :: FilterLogEvents -> Maybe Text

-- | If the value is true, the operation makes a best effort to provide
--   responses that contain events from multiple log streams within the log
--   group, interleaved in a single response. If the value is false, all
--   the matched log events in the first log stream are searched first,
--   then those in the next log stream, and so on. The default is false.
--   
--   <b>Important:</b> Starting on June 17, 2019, this parameter is ignored
--   and the value is assumed to be true. The response from this operation
--   always interleaves events from multiple log streams within a log
--   group.
[$sel:interleaved:FilterLogEvents'] :: FilterLogEvents -> Maybe Bool

-- | The name of the log group to search.
[$sel:logGroupName:FilterLogEvents'] :: FilterLogEvents -> Text

-- | Create a value of <a>FilterLogEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:FilterLogEvents'</a>,
--   <a>filterLogEvents_startTime</a> - The start of the time range,
--   expressed as the number of milliseconds after Jan 1, 1970 00:00:00
--   UTC. Events with a timestamp before this time are not returned.
--   
--   <a>$sel:nextToken:FilterLogEvents'</a>,
--   <a>filterLogEvents_nextToken</a> - The token for the next set of
--   events to return. (You received this token from a previous call.)
--   
--   <a>$sel:logStreamNames:FilterLogEvents'</a>,
--   <a>filterLogEvents_logStreamNames</a> - Filters the results to only
--   logs from the log streams in this list.
--   
--   If you specify a value for both <tt>logStreamNamePrefix</tt> and
--   <tt>logStreamNames</tt>, the action returns an
--   <tt>InvalidParameterException</tt> error.
--   
--   <a>$sel:logStreamNamePrefix:FilterLogEvents'</a>,
--   <a>filterLogEvents_logStreamNamePrefix</a> - Filters the results to
--   include only events from log streams that have names starting with
--   this prefix.
--   
--   If you specify a value for both <tt>logStreamNamePrefix</tt> and
--   <tt>logStreamNames</tt>, but the value for
--   <tt>logStreamNamePrefix</tt> does not match any log stream names
--   specified in <tt>logStreamNames</tt>, the action returns an
--   <tt>InvalidParameterException</tt> error.
--   
--   <a>$sel:endTime:FilterLogEvents'</a>, <a>filterLogEvents_endTime</a> -
--   The end of the time range, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC. Events with a timestamp later than
--   this time are not returned.
--   
--   <a>$sel:limit:FilterLogEvents'</a>, <a>filterLogEvents_limit</a> - The
--   maximum number of events to return. The default is 10,000 events.
--   
--   <a>$sel:filterPattern:FilterLogEvents'</a>,
--   <a>filterLogEvents_filterPattern</a> - The filter pattern to use. For
--   more information, see <a>Filter and Pattern Syntax</a>.
--   
--   If not provided, all the events are matched.
--   
--   <a>$sel:interleaved:FilterLogEvents'</a>,
--   <a>filterLogEvents_interleaved</a> - If the value is true, the
--   operation makes a best effort to provide responses that contain events
--   from multiple log streams within the log group, interleaved in a
--   single response. If the value is false, all the matched log events in
--   the first log stream are searched first, then those in the next log
--   stream, and so on. The default is false.
--   
--   <b>Important:</b> Starting on June 17, 2019, this parameter is ignored
--   and the value is assumed to be true. The response from this operation
--   always interleaves events from multiple log streams within a log
--   group.
--   
--   <a>$sel:logGroupName:FilterLogEvents'</a>,
--   <a>filterLogEvents_logGroupName</a> - The name of the log group to
--   search.
newFilterLogEvents :: Text -> FilterLogEvents

-- | The start of the time range, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC. Events with a timestamp before this
--   time are not returned.
filterLogEvents_startTime :: Lens' FilterLogEvents (Maybe Natural)

-- | The token for the next set of events to return. (You received this
--   token from a previous call.)
filterLogEvents_nextToken :: Lens' FilterLogEvents (Maybe Text)

-- | Filters the results to only logs from the log streams in this list.
--   
--   If you specify a value for both <tt>logStreamNamePrefix</tt> and
--   <tt>logStreamNames</tt>, the action returns an
--   <tt>InvalidParameterException</tt> error.
filterLogEvents_logStreamNames :: Lens' FilterLogEvents (Maybe (NonEmpty Text))

-- | Filters the results to include only events from log streams that have
--   names starting with this prefix.
--   
--   If you specify a value for both <tt>logStreamNamePrefix</tt> and
--   <tt>logStreamNames</tt>, but the value for
--   <tt>logStreamNamePrefix</tt> does not match any log stream names
--   specified in <tt>logStreamNames</tt>, the action returns an
--   <tt>InvalidParameterException</tt> error.
filterLogEvents_logStreamNamePrefix :: Lens' FilterLogEvents (Maybe Text)

-- | The end of the time range, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC. Events with a timestamp later than
--   this time are not returned.
filterLogEvents_endTime :: Lens' FilterLogEvents (Maybe Natural)

-- | The maximum number of events to return. The default is 10,000 events.
filterLogEvents_limit :: Lens' FilterLogEvents (Maybe Natural)

-- | The filter pattern to use. For more information, see <a>Filter and
--   Pattern Syntax</a>.
--   
--   If not provided, all the events are matched.
filterLogEvents_filterPattern :: Lens' FilterLogEvents (Maybe Text)

-- | If the value is true, the operation makes a best effort to provide
--   responses that contain events from multiple log streams within the log
--   group, interleaved in a single response. If the value is false, all
--   the matched log events in the first log stream are searched first,
--   then those in the next log stream, and so on. The default is false.
--   
--   <b>Important:</b> Starting on June 17, 2019, this parameter is ignored
--   and the value is assumed to be true. The response from this operation
--   always interleaves events from multiple log streams within a log
--   group.
filterLogEvents_interleaved :: Lens' FilterLogEvents (Maybe Bool)

-- | The name of the log group to search.
filterLogEvents_logGroupName :: Lens' FilterLogEvents Text

-- | <i>See:</i> <a>newFilterLogEventsResponse</a> smart constructor.
data FilterLogEventsResponse
FilterLogEventsResponse' :: Maybe [SearchedLogStream] -> Maybe Text -> Maybe [FilteredLogEvent] -> Int -> FilterLogEventsResponse

-- | <b>IMPORTANT</b> Starting on May 15, 2020, this parameter will be
--   deprecated. This parameter will be an empty list after the deprecation
--   occurs.
--   
--   Indicates which log streams have been searched and whether each has
--   been searched completely.
[$sel:searchedLogStreams:FilterLogEventsResponse'] :: FilterLogEventsResponse -> Maybe [SearchedLogStream]

-- | The token to use when requesting the next set of items. The token
--   expires after 24 hours.
[$sel:nextToken:FilterLogEventsResponse'] :: FilterLogEventsResponse -> Maybe Text

-- | The matched events.
[$sel:events:FilterLogEventsResponse'] :: FilterLogEventsResponse -> Maybe [FilteredLogEvent]

-- | The response's http status code.
[$sel:httpStatus:FilterLogEventsResponse'] :: FilterLogEventsResponse -> Int

-- | Create a value of <a>FilterLogEventsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:searchedLogStreams:FilterLogEventsResponse'</a>,
--   <a>filterLogEventsResponse_searchedLogStreams</a> - <b>IMPORTANT</b>
--   Starting on May 15, 2020, this parameter will be deprecated. This
--   parameter will be an empty list after the deprecation occurs.
--   
--   Indicates which log streams have been searched and whether each has
--   been searched completely.
--   
--   <a>$sel:nextToken:FilterLogEvents'</a>,
--   <a>filterLogEventsResponse_nextToken</a> - The token to use when
--   requesting the next set of items. The token expires after 24 hours.
--   
--   <a>$sel:events:FilterLogEventsResponse'</a>,
--   <a>filterLogEventsResponse_events</a> - The matched events.
--   
--   <a>$sel:httpStatus:FilterLogEventsResponse'</a>,
--   <a>filterLogEventsResponse_httpStatus</a> - The response's http status
--   code.
newFilterLogEventsResponse :: Int -> FilterLogEventsResponse

-- | <b>IMPORTANT</b> Starting on May 15, 2020, this parameter will be
--   deprecated. This parameter will be an empty list after the deprecation
--   occurs.
--   
--   Indicates which log streams have been searched and whether each has
--   been searched completely.
filterLogEventsResponse_searchedLogStreams :: Lens' FilterLogEventsResponse (Maybe [SearchedLogStream])

-- | The token to use when requesting the next set of items. The token
--   expires after 24 hours.
filterLogEventsResponse_nextToken :: Lens' FilterLogEventsResponse (Maybe Text)

-- | The matched events.
filterLogEventsResponse_events :: Lens' FilterLogEventsResponse (Maybe [FilteredLogEvent])

-- | The response's http status code.
filterLogEventsResponse_httpStatus :: Lens' FilterLogEventsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.FilterLogEvents.FilterLogEvents
instance GHC.Show.Show Network.AWS.CloudWatchLogs.FilterLogEvents.FilterLogEvents
instance GHC.Read.Read Network.AWS.CloudWatchLogs.FilterLogEvents.FilterLogEvents
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.FilterLogEvents.FilterLogEvents
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.FilterLogEvents.FilterLogEventsResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.FilterLogEvents.FilterLogEventsResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.FilterLogEvents.FilterLogEventsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.FilterLogEvents.FilterLogEventsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.FilterLogEvents.FilterLogEvents
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.FilterLogEvents.FilterLogEventsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudWatchLogs.FilterLogEvents.FilterLogEvents
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.FilterLogEvents.FilterLogEvents
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.FilterLogEvents.FilterLogEvents
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.FilterLogEvents.FilterLogEvents
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.FilterLogEvents.FilterLogEvents
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.FilterLogEvents.FilterLogEvents
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.FilterLogEvents.FilterLogEvents


-- | Disassociates the associated Key Management Service customer master
--   key (CMK) from the specified log group.
--   
--   After the KMS CMK is disassociated from the log group, CloudWatch Logs
--   stops encrypting newly ingested data for the log group. All previously
--   ingested data remains encrypted, and CloudWatch Logs requires
--   permissions for the CMK whenever the encrypted data is requested.
--   
--   Note that it can take up to 5 minutes for this operation to take
--   effect.
module Network.AWS.CloudWatchLogs.DisassociateKmsKey

-- | <i>See:</i> <a>newDisassociateKmsKey</a> smart constructor.
data DisassociateKmsKey
DisassociateKmsKey' :: Text -> DisassociateKmsKey

-- | The name of the log group.
[$sel:logGroupName:DisassociateKmsKey'] :: DisassociateKmsKey -> Text

-- | Create a value of <a>DisassociateKmsKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:DisassociateKmsKey'</a>,
--   <a>disassociateKmsKey_logGroupName</a> - The name of the log group.
newDisassociateKmsKey :: Text -> DisassociateKmsKey

-- | The name of the log group.
disassociateKmsKey_logGroupName :: Lens' DisassociateKmsKey Text

-- | <i>See:</i> <a>newDisassociateKmsKeyResponse</a> smart constructor.
data DisassociateKmsKeyResponse
DisassociateKmsKeyResponse' :: DisassociateKmsKeyResponse

-- | Create a value of <a>DisassociateKmsKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDisassociateKmsKeyResponse :: DisassociateKmsKeyResponse
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DisassociateKmsKey.DisassociateKmsKey
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DisassociateKmsKey.DisassociateKmsKey
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DisassociateKmsKey.DisassociateKmsKey
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DisassociateKmsKey.DisassociateKmsKey
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DisassociateKmsKey.DisassociateKmsKeyResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DisassociateKmsKey.DisassociateKmsKeyResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DisassociateKmsKey.DisassociateKmsKeyResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DisassociateKmsKey.DisassociateKmsKeyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.DisassociateKmsKey.DisassociateKmsKey
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DisassociateKmsKey.DisassociateKmsKeyResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.DisassociateKmsKey.DisassociateKmsKey
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DisassociateKmsKey.DisassociateKmsKey
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.DisassociateKmsKey.DisassociateKmsKey
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.DisassociateKmsKey.DisassociateKmsKey
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.DisassociateKmsKey.DisassociateKmsKey
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.DisassociateKmsKey.DisassociateKmsKey


-- | Lists the subscription filters for the specified log group. You can
--   list all the subscription filters or filter the results by prefix. The
--   results are ASCII-sorted by filter name.
--   
--   This operation returns paginated results.
module Network.AWS.CloudWatchLogs.DescribeSubscriptionFilters

-- | <i>See:</i> <a>newDescribeSubscriptionFilters</a> smart constructor.
data DescribeSubscriptionFilters
DescribeSubscriptionFilters' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> DescribeSubscriptionFilters

-- | The prefix to match. If you don't specify a value, no prefix filter is
--   applied.
[$sel:filterNamePrefix:DescribeSubscriptionFilters'] :: DescribeSubscriptionFilters -> Maybe Text

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
[$sel:nextToken:DescribeSubscriptionFilters'] :: DescribeSubscriptionFilters -> Maybe Text

-- | The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
[$sel:limit:DescribeSubscriptionFilters'] :: DescribeSubscriptionFilters -> Maybe Natural

-- | The name of the log group.
[$sel:logGroupName:DescribeSubscriptionFilters'] :: DescribeSubscriptionFilters -> Text

-- | Create a value of <a>DescribeSubscriptionFilters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterNamePrefix:DescribeSubscriptionFilters'</a>,
--   <a>describeSubscriptionFilters_filterNamePrefix</a> - The prefix to
--   match. If you don't specify a value, no prefix filter is applied.
--   
--   <a>$sel:nextToken:DescribeSubscriptionFilters'</a>,
--   <a>describeSubscriptionFilters_nextToken</a> - The token for the next
--   set of items to return. (You received this token from a previous
--   call.)
--   
--   <a>$sel:limit:DescribeSubscriptionFilters'</a>,
--   <a>describeSubscriptionFilters_limit</a> - The maximum number of items
--   returned. If you don't specify a value, the default is up to 50 items.
--   
--   <a>$sel:logGroupName:DescribeSubscriptionFilters'</a>,
--   <a>describeSubscriptionFilters_logGroupName</a> - The name of the log
--   group.
newDescribeSubscriptionFilters :: Text -> DescribeSubscriptionFilters

-- | The prefix to match. If you don't specify a value, no prefix filter is
--   applied.
describeSubscriptionFilters_filterNamePrefix :: Lens' DescribeSubscriptionFilters (Maybe Text)

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeSubscriptionFilters_nextToken :: Lens' DescribeSubscriptionFilters (Maybe Text)

-- | The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
describeSubscriptionFilters_limit :: Lens' DescribeSubscriptionFilters (Maybe Natural)

-- | The name of the log group.
describeSubscriptionFilters_logGroupName :: Lens' DescribeSubscriptionFilters Text

-- | <i>See:</i> <a>newDescribeSubscriptionFiltersResponse</a> smart
--   constructor.
data DescribeSubscriptionFiltersResponse
DescribeSubscriptionFiltersResponse' :: Maybe [SubscriptionFilter] -> Maybe Text -> Int -> DescribeSubscriptionFiltersResponse

-- | The subscription filters.
[$sel:subscriptionFilters:DescribeSubscriptionFiltersResponse'] :: DescribeSubscriptionFiltersResponse -> Maybe [SubscriptionFilter]
[$sel:nextToken:DescribeSubscriptionFiltersResponse'] :: DescribeSubscriptionFiltersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeSubscriptionFiltersResponse'] :: DescribeSubscriptionFiltersResponse -> Int

-- | Create a value of <a>DescribeSubscriptionFiltersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionFilters:DescribeSubscriptionFiltersResponse'</a>,
--   <a>describeSubscriptionFiltersResponse_subscriptionFilters</a> - The
--   subscription filters.
--   
--   <a>$sel:nextToken:DescribeSubscriptionFilters'</a>,
--   <a>describeSubscriptionFiltersResponse_nextToken</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:DescribeSubscriptionFiltersResponse'</a>,
--   <a>describeSubscriptionFiltersResponse_httpStatus</a> - The response's
--   http status code.
newDescribeSubscriptionFiltersResponse :: Int -> DescribeSubscriptionFiltersResponse

-- | The subscription filters.
describeSubscriptionFiltersResponse_subscriptionFilters :: Lens' DescribeSubscriptionFiltersResponse (Maybe [SubscriptionFilter])

-- | Undocumented member.
describeSubscriptionFiltersResponse_nextToken :: Lens' DescribeSubscriptionFiltersResponse (Maybe Text)

-- | The response's http status code.
describeSubscriptionFiltersResponse_httpStatus :: Lens' DescribeSubscriptionFiltersResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DescribeSubscriptionFilters.DescribeSubscriptionFilters
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DescribeSubscriptionFilters.DescribeSubscriptionFilters
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DescribeSubscriptionFilters.DescribeSubscriptionFilters
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DescribeSubscriptionFilters.DescribeSubscriptionFilters
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DescribeSubscriptionFilters.DescribeSubscriptionFiltersResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DescribeSubscriptionFilters.DescribeSubscriptionFiltersResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DescribeSubscriptionFilters.DescribeSubscriptionFiltersResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DescribeSubscriptionFilters.DescribeSubscriptionFiltersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.DescribeSubscriptionFilters.DescribeSubscriptionFilters
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DescribeSubscriptionFilters.DescribeSubscriptionFiltersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudWatchLogs.DescribeSubscriptionFilters.DescribeSubscriptionFilters
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.DescribeSubscriptionFilters.DescribeSubscriptionFilters
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DescribeSubscriptionFilters.DescribeSubscriptionFilters
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.DescribeSubscriptionFilters.DescribeSubscriptionFilters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.DescribeSubscriptionFilters.DescribeSubscriptionFilters
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.DescribeSubscriptionFilters.DescribeSubscriptionFilters
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.DescribeSubscriptionFilters.DescribeSubscriptionFilters


-- | Lists the resource policies in this account.
--   
--   This operation returns paginated results.
module Network.AWS.CloudWatchLogs.DescribeResourcePolicies

-- | <i>See:</i> <a>newDescribeResourcePolicies</a> smart constructor.
data DescribeResourcePolicies
DescribeResourcePolicies' :: Maybe Text -> Maybe Natural -> DescribeResourcePolicies
[$sel:nextToken:DescribeResourcePolicies'] :: DescribeResourcePolicies -> Maybe Text

-- | The maximum number of resource policies to be displayed with one call
--   of this API.
[$sel:limit:DescribeResourcePolicies'] :: DescribeResourcePolicies -> Maybe Natural

-- | Create a value of <a>DescribeResourcePolicies</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeResourcePolicies'</a>,
--   <a>describeResourcePolicies_nextToken</a> - Undocumented member.
--   
--   <a>$sel:limit:DescribeResourcePolicies'</a>,
--   <a>describeResourcePolicies_limit</a> - The maximum number of resource
--   policies to be displayed with one call of this API.
newDescribeResourcePolicies :: DescribeResourcePolicies

-- | Undocumented member.
describeResourcePolicies_nextToken :: Lens' DescribeResourcePolicies (Maybe Text)

-- | The maximum number of resource policies to be displayed with one call
--   of this API.
describeResourcePolicies_limit :: Lens' DescribeResourcePolicies (Maybe Natural)

-- | <i>See:</i> <a>newDescribeResourcePoliciesResponse</a> smart
--   constructor.
data DescribeResourcePoliciesResponse
DescribeResourcePoliciesResponse' :: Maybe [ResourcePolicy] -> Maybe Text -> Int -> DescribeResourcePoliciesResponse

-- | The resource policies that exist in this account.
[$sel:resourcePolicies:DescribeResourcePoliciesResponse'] :: DescribeResourcePoliciesResponse -> Maybe [ResourcePolicy]
[$sel:nextToken:DescribeResourcePoliciesResponse'] :: DescribeResourcePoliciesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeResourcePoliciesResponse'] :: DescribeResourcePoliciesResponse -> Int

-- | Create a value of <a>DescribeResourcePoliciesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourcePolicies:DescribeResourcePoliciesResponse'</a>,
--   <a>describeResourcePoliciesResponse_resourcePolicies</a> - The
--   resource policies that exist in this account.
--   
--   <a>$sel:nextToken:DescribeResourcePolicies'</a>,
--   <a>describeResourcePoliciesResponse_nextToken</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:DescribeResourcePoliciesResponse'</a>,
--   <a>describeResourcePoliciesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeResourcePoliciesResponse :: Int -> DescribeResourcePoliciesResponse

-- | The resource policies that exist in this account.
describeResourcePoliciesResponse_resourcePolicies :: Lens' DescribeResourcePoliciesResponse (Maybe [ResourcePolicy])

-- | Undocumented member.
describeResourcePoliciesResponse_nextToken :: Lens' DescribeResourcePoliciesResponse (Maybe Text)

-- | The response's http status code.
describeResourcePoliciesResponse_httpStatus :: Lens' DescribeResourcePoliciesResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DescribeResourcePolicies.DescribeResourcePolicies
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DescribeResourcePolicies.DescribeResourcePolicies
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DescribeResourcePolicies.DescribeResourcePolicies
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DescribeResourcePolicies.DescribeResourcePolicies
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DescribeResourcePolicies.DescribeResourcePoliciesResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DescribeResourcePolicies.DescribeResourcePoliciesResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DescribeResourcePolicies.DescribeResourcePoliciesResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DescribeResourcePolicies.DescribeResourcePoliciesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.DescribeResourcePolicies.DescribeResourcePolicies
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DescribeResourcePolicies.DescribeResourcePoliciesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudWatchLogs.DescribeResourcePolicies.DescribeResourcePolicies
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.DescribeResourcePolicies.DescribeResourcePolicies
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DescribeResourcePolicies.DescribeResourcePolicies
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.DescribeResourcePolicies.DescribeResourcePolicies
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.DescribeResourcePolicies.DescribeResourcePolicies
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.DescribeResourcePolicies.DescribeResourcePolicies
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.DescribeResourcePolicies.DescribeResourcePolicies


-- | This operation returns a paginated list of your saved CloudWatch Logs
--   Insights query definitions.
--   
--   You can use the <tt>queryDefinitionNamePrefix</tt> parameter to limit
--   the results to only the query definitions that have names that start
--   with a certain string.
module Network.AWS.CloudWatchLogs.DescribeQueryDefinitions

-- | <i>See:</i> <a>newDescribeQueryDefinitions</a> smart constructor.
data DescribeQueryDefinitions
DescribeQueryDefinitions' :: Maybe Text -> Maybe Text -> Maybe Natural -> DescribeQueryDefinitions

-- | Use this parameter to filter your results to only the query
--   definitions that have names that start with the prefix you specify.
[$sel:queryDefinitionNamePrefix:DescribeQueryDefinitions'] :: DescribeQueryDefinitions -> Maybe Text
[$sel:nextToken:DescribeQueryDefinitions'] :: DescribeQueryDefinitions -> Maybe Text

-- | Limits the number of returned query definitions to the specified
--   number.
[$sel:maxResults:DescribeQueryDefinitions'] :: DescribeQueryDefinitions -> Maybe Natural

-- | Create a value of <a>DescribeQueryDefinitions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryDefinitionNamePrefix:DescribeQueryDefinitions'</a>,
--   <a>describeQueryDefinitions_queryDefinitionNamePrefix</a> - Use this
--   parameter to filter your results to only the query definitions that
--   have names that start with the prefix you specify.
--   
--   <a>$sel:nextToken:DescribeQueryDefinitions'</a>,
--   <a>describeQueryDefinitions_nextToken</a> - Undocumented member.
--   
--   <a>$sel:maxResults:DescribeQueryDefinitions'</a>,
--   <a>describeQueryDefinitions_maxResults</a> - Limits the number of
--   returned query definitions to the specified number.
newDescribeQueryDefinitions :: DescribeQueryDefinitions

-- | Use this parameter to filter your results to only the query
--   definitions that have names that start with the prefix you specify.
describeQueryDefinitions_queryDefinitionNamePrefix :: Lens' DescribeQueryDefinitions (Maybe Text)

-- | Undocumented member.
describeQueryDefinitions_nextToken :: Lens' DescribeQueryDefinitions (Maybe Text)

-- | Limits the number of returned query definitions to the specified
--   number.
describeQueryDefinitions_maxResults :: Lens' DescribeQueryDefinitions (Maybe Natural)

-- | <i>See:</i> <a>newDescribeQueryDefinitionsResponse</a> smart
--   constructor.
data DescribeQueryDefinitionsResponse
DescribeQueryDefinitionsResponse' :: Maybe [QueryDefinition] -> Maybe Text -> Int -> DescribeQueryDefinitionsResponse

-- | The list of query definitions that match your request.
[$sel:queryDefinitions:DescribeQueryDefinitionsResponse'] :: DescribeQueryDefinitionsResponse -> Maybe [QueryDefinition]
[$sel:nextToken:DescribeQueryDefinitionsResponse'] :: DescribeQueryDefinitionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeQueryDefinitionsResponse'] :: DescribeQueryDefinitionsResponse -> Int

-- | Create a value of <a>DescribeQueryDefinitionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryDefinitions:DescribeQueryDefinitionsResponse'</a>,
--   <a>describeQueryDefinitionsResponse_queryDefinitions</a> - The list of
--   query definitions that match your request.
--   
--   <a>$sel:nextToken:DescribeQueryDefinitions'</a>,
--   <a>describeQueryDefinitionsResponse_nextToken</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:DescribeQueryDefinitionsResponse'</a>,
--   <a>describeQueryDefinitionsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeQueryDefinitionsResponse :: Int -> DescribeQueryDefinitionsResponse

-- | The list of query definitions that match your request.
describeQueryDefinitionsResponse_queryDefinitions :: Lens' DescribeQueryDefinitionsResponse (Maybe [QueryDefinition])

-- | Undocumented member.
describeQueryDefinitionsResponse_nextToken :: Lens' DescribeQueryDefinitionsResponse (Maybe Text)

-- | The response's http status code.
describeQueryDefinitionsResponse_httpStatus :: Lens' DescribeQueryDefinitionsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DescribeQueryDefinitions.DescribeQueryDefinitions
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DescribeQueryDefinitions.DescribeQueryDefinitions
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DescribeQueryDefinitions.DescribeQueryDefinitions
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DescribeQueryDefinitions.DescribeQueryDefinitions
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DescribeQueryDefinitions.DescribeQueryDefinitionsResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DescribeQueryDefinitions.DescribeQueryDefinitionsResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DescribeQueryDefinitions.DescribeQueryDefinitionsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DescribeQueryDefinitions.DescribeQueryDefinitionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.DescribeQueryDefinitions.DescribeQueryDefinitions
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DescribeQueryDefinitions.DescribeQueryDefinitionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.DescribeQueryDefinitions.DescribeQueryDefinitions
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DescribeQueryDefinitions.DescribeQueryDefinitions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.DescribeQueryDefinitions.DescribeQueryDefinitions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.DescribeQueryDefinitions.DescribeQueryDefinitions
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.DescribeQueryDefinitions.DescribeQueryDefinitions
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.DescribeQueryDefinitions.DescribeQueryDefinitions


-- | Returns a list of CloudWatch Logs Insights queries that are scheduled,
--   executing, or have been executed recently in this account. You can
--   request all queries or limit it to queries of a specific log group or
--   queries with a certain status.
--   
--   This operation returns paginated results.
module Network.AWS.CloudWatchLogs.DescribeQueries

-- | <i>See:</i> <a>newDescribeQueries</a> smart constructor.
data DescribeQueries
DescribeQueries' :: Maybe QueryStatus -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeQueries

-- | Limits the returned queries to only those that have the specified
--   status. Valid values are <tt>Cancelled</tt>, <tt>Complete</tt>,
--   <tt>Failed</tt>, <tt>Running</tt>, and <tt>Scheduled</tt>.
[$sel:status:DescribeQueries'] :: DescribeQueries -> Maybe QueryStatus

-- | Limits the returned queries to only those for the specified log group.
[$sel:logGroupName:DescribeQueries'] :: DescribeQueries -> Maybe Text
[$sel:nextToken:DescribeQueries'] :: DescribeQueries -> Maybe Text

-- | Limits the number of returned queries to the specified number.
[$sel:maxResults:DescribeQueries'] :: DescribeQueries -> Maybe Natural

-- | Create a value of <a>DescribeQueries</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeQueries'</a>, <a>describeQueries_status</a> -
--   Limits the returned queries to only those that have the specified
--   status. Valid values are <tt>Cancelled</tt>, <tt>Complete</tt>,
--   <tt>Failed</tt>, <tt>Running</tt>, and <tt>Scheduled</tt>.
--   
--   <a>$sel:logGroupName:DescribeQueries'</a>,
--   <a>describeQueries_logGroupName</a> - Limits the returned queries to
--   only those for the specified log group.
--   
--   <a>$sel:nextToken:DescribeQueries'</a>,
--   <a>describeQueries_nextToken</a> - Undocumented member.
--   
--   <a>$sel:maxResults:DescribeQueries'</a>,
--   <a>describeQueries_maxResults</a> - Limits the number of returned
--   queries to the specified number.
newDescribeQueries :: DescribeQueries

-- | Limits the returned queries to only those that have the specified
--   status. Valid values are <tt>Cancelled</tt>, <tt>Complete</tt>,
--   <tt>Failed</tt>, <tt>Running</tt>, and <tt>Scheduled</tt>.
describeQueries_status :: Lens' DescribeQueries (Maybe QueryStatus)

-- | Limits the returned queries to only those for the specified log group.
describeQueries_logGroupName :: Lens' DescribeQueries (Maybe Text)

-- | Undocumented member.
describeQueries_nextToken :: Lens' DescribeQueries (Maybe Text)

-- | Limits the number of returned queries to the specified number.
describeQueries_maxResults :: Lens' DescribeQueries (Maybe Natural)

-- | <i>See:</i> <a>newDescribeQueriesResponse</a> smart constructor.
data DescribeQueriesResponse
DescribeQueriesResponse' :: Maybe [QueryInfo] -> Maybe Text -> Int -> DescribeQueriesResponse

-- | The list of queries that match the request.
[$sel:queries:DescribeQueriesResponse'] :: DescribeQueriesResponse -> Maybe [QueryInfo]
[$sel:nextToken:DescribeQueriesResponse'] :: DescribeQueriesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeQueriesResponse'] :: DescribeQueriesResponse -> Int

-- | Create a value of <a>DescribeQueriesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queries:DescribeQueriesResponse'</a>,
--   <a>describeQueriesResponse_queries</a> - The list of queries that
--   match the request.
--   
--   <a>$sel:nextToken:DescribeQueries'</a>,
--   <a>describeQueriesResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DescribeQueriesResponse'</a>,
--   <a>describeQueriesResponse_httpStatus</a> - The response's http status
--   code.
newDescribeQueriesResponse :: Int -> DescribeQueriesResponse

-- | The list of queries that match the request.
describeQueriesResponse_queries :: Lens' DescribeQueriesResponse (Maybe [QueryInfo])

-- | Undocumented member.
describeQueriesResponse_nextToken :: Lens' DescribeQueriesResponse (Maybe Text)

-- | The response's http status code.
describeQueriesResponse_httpStatus :: Lens' DescribeQueriesResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DescribeQueries.DescribeQueries
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DescribeQueries.DescribeQueries
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DescribeQueries.DescribeQueries
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DescribeQueries.DescribeQueries
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DescribeQueries.DescribeQueriesResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DescribeQueries.DescribeQueriesResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DescribeQueries.DescribeQueriesResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DescribeQueries.DescribeQueriesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.DescribeQueries.DescribeQueries
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DescribeQueries.DescribeQueriesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudWatchLogs.DescribeQueries.DescribeQueries
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.DescribeQueries.DescribeQueries
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DescribeQueries.DescribeQueries
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.DescribeQueries.DescribeQueries
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.DescribeQueries.DescribeQueries
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.DescribeQueries.DescribeQueries
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.DescribeQueries.DescribeQueries


-- | Lists the specified metric filters. You can list all of the metric
--   filters or filter the results by log name, prefix, metric name, or
--   metric namespace. The results are ASCII-sorted by filter name.
--   
--   This operation returns paginated results.
module Network.AWS.CloudWatchLogs.DescribeMetricFilters

-- | <i>See:</i> <a>newDescribeMetricFilters</a> smart constructor.
data DescribeMetricFilters
DescribeMetricFilters' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeMetricFilters

-- | The prefix to match. CloudWatch Logs uses the value you set here only
--   if you also include the <tt>logGroupName</tt> parameter in your
--   request.
[$sel:filterNamePrefix:DescribeMetricFilters'] :: DescribeMetricFilters -> Maybe Text

-- | Filters results to include only those with the specified metric name.
--   If you include this parameter in your request, you must also include
--   the <tt>metricNamespace</tt> parameter.
[$sel:metricName:DescribeMetricFilters'] :: DescribeMetricFilters -> Maybe Text

-- | The name of the log group.
[$sel:logGroupName:DescribeMetricFilters'] :: DescribeMetricFilters -> Maybe Text

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
[$sel:nextToken:DescribeMetricFilters'] :: DescribeMetricFilters -> Maybe Text

-- | Filters results to include only those in the specified namespace. If
--   you include this parameter in your request, you must also include the
--   <tt>metricName</tt> parameter.
[$sel:metricNamespace:DescribeMetricFilters'] :: DescribeMetricFilters -> Maybe Text

-- | The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
[$sel:limit:DescribeMetricFilters'] :: DescribeMetricFilters -> Maybe Natural

-- | Create a value of <a>DescribeMetricFilters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterNamePrefix:DescribeMetricFilters'</a>,
--   <a>describeMetricFilters_filterNamePrefix</a> - The prefix to match.
--   CloudWatch Logs uses the value you set here only if you also include
--   the <tt>logGroupName</tt> parameter in your request.
--   
--   <a>$sel:metricName:DescribeMetricFilters'</a>,
--   <a>describeMetricFilters_metricName</a> - Filters results to include
--   only those with the specified metric name. If you include this
--   parameter in your request, you must also include the
--   <tt>metricNamespace</tt> parameter.
--   
--   <a>$sel:logGroupName:DescribeMetricFilters'</a>,
--   <a>describeMetricFilters_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:nextToken:DescribeMetricFilters'</a>,
--   <a>describeMetricFilters_nextToken</a> - The token for the next set of
--   items to return. (You received this token from a previous call.)
--   
--   <a>$sel:metricNamespace:DescribeMetricFilters'</a>,
--   <a>describeMetricFilters_metricNamespace</a> - Filters results to
--   include only those in the specified namespace. If you include this
--   parameter in your request, you must also include the
--   <tt>metricName</tt> parameter.
--   
--   <a>$sel:limit:DescribeMetricFilters'</a>,
--   <a>describeMetricFilters_limit</a> - The maximum number of items
--   returned. If you don't specify a value, the default is up to 50 items.
newDescribeMetricFilters :: DescribeMetricFilters

-- | The prefix to match. CloudWatch Logs uses the value you set here only
--   if you also include the <tt>logGroupName</tt> parameter in your
--   request.
describeMetricFilters_filterNamePrefix :: Lens' DescribeMetricFilters (Maybe Text)

-- | Filters results to include only those with the specified metric name.
--   If you include this parameter in your request, you must also include
--   the <tt>metricNamespace</tt> parameter.
describeMetricFilters_metricName :: Lens' DescribeMetricFilters (Maybe Text)

-- | The name of the log group.
describeMetricFilters_logGroupName :: Lens' DescribeMetricFilters (Maybe Text)

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeMetricFilters_nextToken :: Lens' DescribeMetricFilters (Maybe Text)

-- | Filters results to include only those in the specified namespace. If
--   you include this parameter in your request, you must also include the
--   <tt>metricName</tt> parameter.
describeMetricFilters_metricNamespace :: Lens' DescribeMetricFilters (Maybe Text)

-- | The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
describeMetricFilters_limit :: Lens' DescribeMetricFilters (Maybe Natural)

-- | <i>See:</i> <a>newDescribeMetricFiltersResponse</a> smart constructor.
data DescribeMetricFiltersResponse
DescribeMetricFiltersResponse' :: Maybe Text -> Maybe [MetricFilter] -> Int -> DescribeMetricFiltersResponse
[$sel:nextToken:DescribeMetricFiltersResponse'] :: DescribeMetricFiltersResponse -> Maybe Text

-- | The metric filters.
[$sel:metricFilters:DescribeMetricFiltersResponse'] :: DescribeMetricFiltersResponse -> Maybe [MetricFilter]

-- | The response's http status code.
[$sel:httpStatus:DescribeMetricFiltersResponse'] :: DescribeMetricFiltersResponse -> Int

-- | Create a value of <a>DescribeMetricFiltersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeMetricFilters'</a>,
--   <a>describeMetricFiltersResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:metricFilters:DescribeMetricFiltersResponse'</a>,
--   <a>describeMetricFiltersResponse_metricFilters</a> - The metric
--   filters.
--   
--   <a>$sel:httpStatus:DescribeMetricFiltersResponse'</a>,
--   <a>describeMetricFiltersResponse_httpStatus</a> - The response's http
--   status code.
newDescribeMetricFiltersResponse :: Int -> DescribeMetricFiltersResponse

-- | Undocumented member.
describeMetricFiltersResponse_nextToken :: Lens' DescribeMetricFiltersResponse (Maybe Text)

-- | The metric filters.
describeMetricFiltersResponse_metricFilters :: Lens' DescribeMetricFiltersResponse (Maybe [MetricFilter])

-- | The response's http status code.
describeMetricFiltersResponse_httpStatus :: Lens' DescribeMetricFiltersResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DescribeMetricFilters.DescribeMetricFilters
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DescribeMetricFilters.DescribeMetricFilters
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DescribeMetricFilters.DescribeMetricFilters
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DescribeMetricFilters.DescribeMetricFilters
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DescribeMetricFilters.DescribeMetricFiltersResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DescribeMetricFilters.DescribeMetricFiltersResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DescribeMetricFilters.DescribeMetricFiltersResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DescribeMetricFilters.DescribeMetricFiltersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.DescribeMetricFilters.DescribeMetricFilters
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DescribeMetricFilters.DescribeMetricFiltersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudWatchLogs.DescribeMetricFilters.DescribeMetricFilters
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.DescribeMetricFilters.DescribeMetricFilters
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DescribeMetricFilters.DescribeMetricFilters
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.DescribeMetricFilters.DescribeMetricFilters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.DescribeMetricFilters.DescribeMetricFilters
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.DescribeMetricFilters.DescribeMetricFilters
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.DescribeMetricFilters.DescribeMetricFilters


-- | Lists the log streams for the specified log group. You can list all
--   the log streams or filter the results by prefix. You can also control
--   how the results are ordered.
--   
--   This operation has a limit of five transactions per second, after
--   which transactions are throttled.
--   
--   This operation returns paginated results.
module Network.AWS.CloudWatchLogs.DescribeLogStreams

-- | <i>See:</i> <a>newDescribeLogStreams</a> smart constructor.
data DescribeLogStreams
DescribeLogStreams' :: Maybe OrderBy -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> DescribeLogStreams

-- | If the value is <tt>LogStreamName</tt>, the results are ordered by log
--   stream name. If the value is <tt>LastEventTime</tt>, the results are
--   ordered by the event time. The default value is
--   <tt>LogStreamName</tt>.
--   
--   If you order the results by event time, you cannot specify the
--   <tt>logStreamNamePrefix</tt> parameter.
--   
--   <tt>lastEventTimestamp</tt> represents the time of the most recent log
--   event in the log stream in CloudWatch Logs. This number is expressed
--   as the number of milliseconds after Jan 1, 1970 00:00:00 UTC.
--   <tt>lastEventTimestamp</tt> updates on an eventual consistency basis.
--   It typically updates in less than an hour from ingestion, but in rare
--   situations might take longer.
[$sel:orderBy:DescribeLogStreams'] :: DescribeLogStreams -> Maybe OrderBy

-- | If the value is true, results are returned in descending order. If the
--   value is to false, results are returned in ascending order. The
--   default value is false.
[$sel:descending:DescribeLogStreams'] :: DescribeLogStreams -> Maybe Bool

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
[$sel:nextToken:DescribeLogStreams'] :: DescribeLogStreams -> Maybe Text

-- | The prefix to match.
--   
--   If <tt>orderBy</tt> is <tt>LastEventTime</tt>, you cannot specify this
--   parameter.
[$sel:logStreamNamePrefix:DescribeLogStreams'] :: DescribeLogStreams -> Maybe Text

-- | The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
[$sel:limit:DescribeLogStreams'] :: DescribeLogStreams -> Maybe Natural

-- | The name of the log group.
[$sel:logGroupName:DescribeLogStreams'] :: DescribeLogStreams -> Text

-- | Create a value of <a>DescribeLogStreams</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:orderBy:DescribeLogStreams'</a>,
--   <a>describeLogStreams_orderBy</a> - If the value is
--   <tt>LogStreamName</tt>, the results are ordered by log stream name. If
--   the value is <tt>LastEventTime</tt>, the results are ordered by the
--   event time. The default value is <tt>LogStreamName</tt>.
--   
--   If you order the results by event time, you cannot specify the
--   <tt>logStreamNamePrefix</tt> parameter.
--   
--   <tt>lastEventTimestamp</tt> represents the time of the most recent log
--   event in the log stream in CloudWatch Logs. This number is expressed
--   as the number of milliseconds after Jan 1, 1970 00:00:00 UTC.
--   <tt>lastEventTimestamp</tt> updates on an eventual consistency basis.
--   It typically updates in less than an hour from ingestion, but in rare
--   situations might take longer.
--   
--   <a>$sel:descending:DescribeLogStreams'</a>,
--   <a>describeLogStreams_descending</a> - If the value is true, results
--   are returned in descending order. If the value is to false, results
--   are returned in ascending order. The default value is false.
--   
--   <a>$sel:nextToken:DescribeLogStreams'</a>,
--   <a>describeLogStreams_nextToken</a> - The token for the next set of
--   items to return. (You received this token from a previous call.)
--   
--   <a>$sel:logStreamNamePrefix:DescribeLogStreams'</a>,
--   <a>describeLogStreams_logStreamNamePrefix</a> - The prefix to match.
--   
--   If <tt>orderBy</tt> is <tt>LastEventTime</tt>, you cannot specify this
--   parameter.
--   
--   <a>$sel:limit:DescribeLogStreams'</a>, <a>describeLogStreams_limit</a>
--   - The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
--   
--   <a>$sel:logGroupName:DescribeLogStreams'</a>,
--   <a>describeLogStreams_logGroupName</a> - The name of the log group.
newDescribeLogStreams :: Text -> DescribeLogStreams

-- | If the value is <tt>LogStreamName</tt>, the results are ordered by log
--   stream name. If the value is <tt>LastEventTime</tt>, the results are
--   ordered by the event time. The default value is
--   <tt>LogStreamName</tt>.
--   
--   If you order the results by event time, you cannot specify the
--   <tt>logStreamNamePrefix</tt> parameter.
--   
--   <tt>lastEventTimestamp</tt> represents the time of the most recent log
--   event in the log stream in CloudWatch Logs. This number is expressed
--   as the number of milliseconds after Jan 1, 1970 00:00:00 UTC.
--   <tt>lastEventTimestamp</tt> updates on an eventual consistency basis.
--   It typically updates in less than an hour from ingestion, but in rare
--   situations might take longer.
describeLogStreams_orderBy :: Lens' DescribeLogStreams (Maybe OrderBy)

-- | If the value is true, results are returned in descending order. If the
--   value is to false, results are returned in ascending order. The
--   default value is false.
describeLogStreams_descending :: Lens' DescribeLogStreams (Maybe Bool)

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeLogStreams_nextToken :: Lens' DescribeLogStreams (Maybe Text)

-- | The prefix to match.
--   
--   If <tt>orderBy</tt> is <tt>LastEventTime</tt>, you cannot specify this
--   parameter.
describeLogStreams_logStreamNamePrefix :: Lens' DescribeLogStreams (Maybe Text)

-- | The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
describeLogStreams_limit :: Lens' DescribeLogStreams (Maybe Natural)

-- | The name of the log group.
describeLogStreams_logGroupName :: Lens' DescribeLogStreams Text

-- | <i>See:</i> <a>newDescribeLogStreamsResponse</a> smart constructor.
data DescribeLogStreamsResponse
DescribeLogStreamsResponse' :: Maybe Text -> Maybe [LogStream] -> Int -> DescribeLogStreamsResponse
[$sel:nextToken:DescribeLogStreamsResponse'] :: DescribeLogStreamsResponse -> Maybe Text

-- | The log streams.
[$sel:logStreams:DescribeLogStreamsResponse'] :: DescribeLogStreamsResponse -> Maybe [LogStream]

-- | The response's http status code.
[$sel:httpStatus:DescribeLogStreamsResponse'] :: DescribeLogStreamsResponse -> Int

-- | Create a value of <a>DescribeLogStreamsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeLogStreams'</a>,
--   <a>describeLogStreamsResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:logStreams:DescribeLogStreamsResponse'</a>,
--   <a>describeLogStreamsResponse_logStreams</a> - The log streams.
--   
--   <a>$sel:httpStatus:DescribeLogStreamsResponse'</a>,
--   <a>describeLogStreamsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeLogStreamsResponse :: Int -> DescribeLogStreamsResponse

-- | Undocumented member.
describeLogStreamsResponse_nextToken :: Lens' DescribeLogStreamsResponse (Maybe Text)

-- | The log streams.
describeLogStreamsResponse_logStreams :: Lens' DescribeLogStreamsResponse (Maybe [LogStream])

-- | The response's http status code.
describeLogStreamsResponse_httpStatus :: Lens' DescribeLogStreamsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DescribeLogStreams.DescribeLogStreams
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DescribeLogStreams.DescribeLogStreams
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DescribeLogStreams.DescribeLogStreams
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DescribeLogStreams.DescribeLogStreams
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DescribeLogStreams.DescribeLogStreamsResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DescribeLogStreams.DescribeLogStreamsResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DescribeLogStreams.DescribeLogStreamsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DescribeLogStreams.DescribeLogStreamsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.DescribeLogStreams.DescribeLogStreams
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DescribeLogStreams.DescribeLogStreamsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudWatchLogs.DescribeLogStreams.DescribeLogStreams
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.DescribeLogStreams.DescribeLogStreams
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DescribeLogStreams.DescribeLogStreams
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.DescribeLogStreams.DescribeLogStreams
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.DescribeLogStreams.DescribeLogStreams
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.DescribeLogStreams.DescribeLogStreams
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.DescribeLogStreams.DescribeLogStreams


-- | Lists the specified log groups. You can list all your log groups or
--   filter the results by prefix. The results are ASCII-sorted by log
--   group name.
--   
--   CloudWatch Logs doesn’t support IAM policies that control access to
--   the <tt>DescribeLogGroups</tt> action by using the
--   <tt>aws:ResourceTag/key-name </tt> condition key. Other CloudWatch
--   Logs actions do support the use of the <tt>aws:ResourceTag/key-name
--   </tt> condition key to control access. For more information about
--   using tags to control access, see <a>Controlling access to Amazon Web
--   Services resources using tags</a>.
--   
--   This operation returns paginated results.
module Network.AWS.CloudWatchLogs.DescribeLogGroups

-- | <i>See:</i> <a>newDescribeLogGroups</a> smart constructor.
data DescribeLogGroups
DescribeLogGroups' :: Maybe Text -> Maybe Text -> Maybe Natural -> DescribeLogGroups

-- | The prefix to match.
[$sel:logGroupNamePrefix:DescribeLogGroups'] :: DescribeLogGroups -> Maybe Text

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
[$sel:nextToken:DescribeLogGroups'] :: DescribeLogGroups -> Maybe Text

-- | The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
[$sel:limit:DescribeLogGroups'] :: DescribeLogGroups -> Maybe Natural

-- | Create a value of <a>DescribeLogGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupNamePrefix:DescribeLogGroups'</a>,
--   <a>describeLogGroups_logGroupNamePrefix</a> - The prefix to match.
--   
--   <a>$sel:nextToken:DescribeLogGroups'</a>,
--   <a>describeLogGroups_nextToken</a> - The token for the next set of
--   items to return. (You received this token from a previous call.)
--   
--   <a>$sel:limit:DescribeLogGroups'</a>, <a>describeLogGroups_limit</a> -
--   The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
newDescribeLogGroups :: DescribeLogGroups

-- | The prefix to match.
describeLogGroups_logGroupNamePrefix :: Lens' DescribeLogGroups (Maybe Text)

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeLogGroups_nextToken :: Lens' DescribeLogGroups (Maybe Text)

-- | The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
describeLogGroups_limit :: Lens' DescribeLogGroups (Maybe Natural)

-- | <i>See:</i> <a>newDescribeLogGroupsResponse</a> smart constructor.
data DescribeLogGroupsResponse
DescribeLogGroupsResponse' :: Maybe [LogGroup] -> Maybe Text -> Int -> DescribeLogGroupsResponse

-- | The log groups.
--   
--   If the <tt>retentionInDays</tt> value if not included for a log group,
--   then that log group is set to have its events never expire.
[$sel:logGroups:DescribeLogGroupsResponse'] :: DescribeLogGroupsResponse -> Maybe [LogGroup]
[$sel:nextToken:DescribeLogGroupsResponse'] :: DescribeLogGroupsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeLogGroupsResponse'] :: DescribeLogGroupsResponse -> Int

-- | Create a value of <a>DescribeLogGroupsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroups:DescribeLogGroupsResponse'</a>,
--   <a>describeLogGroupsResponse_logGroups</a> - The log groups.
--   
--   If the <tt>retentionInDays</tt> value if not included for a log group,
--   then that log group is set to have its events never expire.
--   
--   <a>$sel:nextToken:DescribeLogGroups'</a>,
--   <a>describeLogGroupsResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DescribeLogGroupsResponse'</a>,
--   <a>describeLogGroupsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeLogGroupsResponse :: Int -> DescribeLogGroupsResponse

-- | The log groups.
--   
--   If the <tt>retentionInDays</tt> value if not included for a log group,
--   then that log group is set to have its events never expire.
describeLogGroupsResponse_logGroups :: Lens' DescribeLogGroupsResponse (Maybe [LogGroup])

-- | Undocumented member.
describeLogGroupsResponse_nextToken :: Lens' DescribeLogGroupsResponse (Maybe Text)

-- | The response's http status code.
describeLogGroupsResponse_httpStatus :: Lens' DescribeLogGroupsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DescribeLogGroups.DescribeLogGroups
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DescribeLogGroups.DescribeLogGroups
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DescribeLogGroups.DescribeLogGroups
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DescribeLogGroups.DescribeLogGroups
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DescribeLogGroups.DescribeLogGroupsResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DescribeLogGroups.DescribeLogGroupsResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DescribeLogGroups.DescribeLogGroupsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DescribeLogGroups.DescribeLogGroupsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.DescribeLogGroups.DescribeLogGroups
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DescribeLogGroups.DescribeLogGroupsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudWatchLogs.DescribeLogGroups.DescribeLogGroups
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.DescribeLogGroups.DescribeLogGroups
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DescribeLogGroups.DescribeLogGroups
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.DescribeLogGroups.DescribeLogGroups
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.DescribeLogGroups.DescribeLogGroups
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.DescribeLogGroups.DescribeLogGroups
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.DescribeLogGroups.DescribeLogGroups


-- | Lists the specified export tasks. You can list all your export tasks
--   or filter the results based on task ID or task status.
--   
--   This operation returns paginated results.
module Network.AWS.CloudWatchLogs.DescribeExportTasks

-- | <i>See:</i> <a>newDescribeExportTasks</a> smart constructor.
data DescribeExportTasks
DescribeExportTasks' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe ExportTaskStatusCode -> DescribeExportTasks

-- | The ID of the export task. Specifying a task ID filters the results to
--   zero or one export tasks.
[$sel:taskId:DescribeExportTasks'] :: DescribeExportTasks -> Maybe Text

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
[$sel:nextToken:DescribeExportTasks'] :: DescribeExportTasks -> Maybe Text

-- | The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
[$sel:limit:DescribeExportTasks'] :: DescribeExportTasks -> Maybe Natural

-- | The status code of the export task. Specifying a status code filters
--   the results to zero or more export tasks.
[$sel:statusCode:DescribeExportTasks'] :: DescribeExportTasks -> Maybe ExportTaskStatusCode

-- | Create a value of <a>DescribeExportTasks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskId:DescribeExportTasks'</a>,
--   <a>describeExportTasks_taskId</a> - The ID of the export task.
--   Specifying a task ID filters the results to zero or one export tasks.
--   
--   <a>$sel:nextToken:DescribeExportTasks'</a>,
--   <a>describeExportTasks_nextToken</a> - The token for the next set of
--   items to return. (You received this token from a previous call.)
--   
--   <a>$sel:limit:DescribeExportTasks'</a>,
--   <a>describeExportTasks_limit</a> - The maximum number of items
--   returned. If you don't specify a value, the default is up to 50 items.
--   
--   <a>$sel:statusCode:DescribeExportTasks'</a>,
--   <a>describeExportTasks_statusCode</a> - The status code of the export
--   task. Specifying a status code filters the results to zero or more
--   export tasks.
newDescribeExportTasks :: DescribeExportTasks

-- | The ID of the export task. Specifying a task ID filters the results to
--   zero or one export tasks.
describeExportTasks_taskId :: Lens' DescribeExportTasks (Maybe Text)

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeExportTasks_nextToken :: Lens' DescribeExportTasks (Maybe Text)

-- | The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
describeExportTasks_limit :: Lens' DescribeExportTasks (Maybe Natural)

-- | The status code of the export task. Specifying a status code filters
--   the results to zero or more export tasks.
describeExportTasks_statusCode :: Lens' DescribeExportTasks (Maybe ExportTaskStatusCode)

-- | <i>See:</i> <a>newDescribeExportTasksResponse</a> smart constructor.
data DescribeExportTasksResponse
DescribeExportTasksResponse' :: Maybe Text -> Maybe [ExportTask] -> Int -> DescribeExportTasksResponse
[$sel:nextToken:DescribeExportTasksResponse'] :: DescribeExportTasksResponse -> Maybe Text

-- | The export tasks.
[$sel:exportTasks:DescribeExportTasksResponse'] :: DescribeExportTasksResponse -> Maybe [ExportTask]

-- | The response's http status code.
[$sel:httpStatus:DescribeExportTasksResponse'] :: DescribeExportTasksResponse -> Int

-- | Create a value of <a>DescribeExportTasksResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeExportTasks'</a>,
--   <a>describeExportTasksResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:exportTasks:DescribeExportTasksResponse'</a>,
--   <a>describeExportTasksResponse_exportTasks</a> - The export tasks.
--   
--   <a>$sel:httpStatus:DescribeExportTasksResponse'</a>,
--   <a>describeExportTasksResponse_httpStatus</a> - The response's http
--   status code.
newDescribeExportTasksResponse :: Int -> DescribeExportTasksResponse

-- | Undocumented member.
describeExportTasksResponse_nextToken :: Lens' DescribeExportTasksResponse (Maybe Text)

-- | The export tasks.
describeExportTasksResponse_exportTasks :: Lens' DescribeExportTasksResponse (Maybe [ExportTask])

-- | The response's http status code.
describeExportTasksResponse_httpStatus :: Lens' DescribeExportTasksResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DescribeExportTasks.DescribeExportTasks
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DescribeExportTasks.DescribeExportTasks
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DescribeExportTasks.DescribeExportTasks
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DescribeExportTasks.DescribeExportTasks
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DescribeExportTasks.DescribeExportTasksResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DescribeExportTasks.DescribeExportTasksResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DescribeExportTasks.DescribeExportTasksResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DescribeExportTasks.DescribeExportTasksResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.DescribeExportTasks.DescribeExportTasks
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DescribeExportTasks.DescribeExportTasksResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudWatchLogs.DescribeExportTasks.DescribeExportTasks
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.DescribeExportTasks.DescribeExportTasks
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DescribeExportTasks.DescribeExportTasks
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.DescribeExportTasks.DescribeExportTasks
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.DescribeExportTasks.DescribeExportTasks
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.DescribeExportTasks.DescribeExportTasks
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.DescribeExportTasks.DescribeExportTasks


-- | Lists all your destinations. The results are ASCII-sorted by
--   destination name.
--   
--   This operation returns paginated results.
module Network.AWS.CloudWatchLogs.DescribeDestinations

-- | <i>See:</i> <a>newDescribeDestinations</a> smart constructor.
data DescribeDestinations
DescribeDestinations' :: Maybe Text -> Maybe Natural -> Maybe Text -> DescribeDestinations

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
[$sel:nextToken:DescribeDestinations'] :: DescribeDestinations -> Maybe Text

-- | The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
[$sel:limit:DescribeDestinations'] :: DescribeDestinations -> Maybe Natural

-- | The prefix to match. If you don't specify a value, no prefix filter is
--   applied.
[$sel:destinationNamePrefix:DescribeDestinations'] :: DescribeDestinations -> Maybe Text

-- | Create a value of <a>DescribeDestinations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDestinations'</a>,
--   <a>describeDestinations_nextToken</a> - The token for the next set of
--   items to return. (You received this token from a previous call.)
--   
--   <a>$sel:limit:DescribeDestinations'</a>,
--   <a>describeDestinations_limit</a> - The maximum number of items
--   returned. If you don't specify a value, the default is up to 50 items.
--   
--   <a>$sel:destinationNamePrefix:DescribeDestinations'</a>,
--   <a>describeDestinations_destinationNamePrefix</a> - The prefix to
--   match. If you don't specify a value, no prefix filter is applied.
newDescribeDestinations :: DescribeDestinations

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeDestinations_nextToken :: Lens' DescribeDestinations (Maybe Text)

-- | The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
describeDestinations_limit :: Lens' DescribeDestinations (Maybe Natural)

-- | The prefix to match. If you don't specify a value, no prefix filter is
--   applied.
describeDestinations_destinationNamePrefix :: Lens' DescribeDestinations (Maybe Text)

-- | <i>See:</i> <a>newDescribeDestinationsResponse</a> smart constructor.
data DescribeDestinationsResponse
DescribeDestinationsResponse' :: Maybe Text -> Maybe [Destination] -> Int -> DescribeDestinationsResponse
[$sel:nextToken:DescribeDestinationsResponse'] :: DescribeDestinationsResponse -> Maybe Text

-- | The destinations.
[$sel:destinations:DescribeDestinationsResponse'] :: DescribeDestinationsResponse -> Maybe [Destination]

-- | The response's http status code.
[$sel:httpStatus:DescribeDestinationsResponse'] :: DescribeDestinationsResponse -> Int

-- | Create a value of <a>DescribeDestinationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDestinations'</a>,
--   <a>describeDestinationsResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:destinations:DescribeDestinationsResponse'</a>,
--   <a>describeDestinationsResponse_destinations</a> - The destinations.
--   
--   <a>$sel:httpStatus:DescribeDestinationsResponse'</a>,
--   <a>describeDestinationsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeDestinationsResponse :: Int -> DescribeDestinationsResponse

-- | Undocumented member.
describeDestinationsResponse_nextToken :: Lens' DescribeDestinationsResponse (Maybe Text)

-- | The destinations.
describeDestinationsResponse_destinations :: Lens' DescribeDestinationsResponse (Maybe [Destination])

-- | The response's http status code.
describeDestinationsResponse_httpStatus :: Lens' DescribeDestinationsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DescribeDestinations.DescribeDestinations
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DescribeDestinations.DescribeDestinations
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DescribeDestinations.DescribeDestinations
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DescribeDestinations.DescribeDestinations
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DescribeDestinations.DescribeDestinationsResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DescribeDestinations.DescribeDestinationsResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DescribeDestinations.DescribeDestinationsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DescribeDestinations.DescribeDestinationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.DescribeDestinations.DescribeDestinations
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DescribeDestinations.DescribeDestinationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudWatchLogs.DescribeDestinations.DescribeDestinations
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.DescribeDestinations.DescribeDestinations
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DescribeDestinations.DescribeDestinations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.DescribeDestinations.DescribeDestinations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.DescribeDestinations.DescribeDestinations
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.DescribeDestinations.DescribeDestinations
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.DescribeDestinations.DescribeDestinations


-- | Deletes the specified subscription filter.
module Network.AWS.CloudWatchLogs.DeleteSubscriptionFilter

-- | <i>See:</i> <a>newDeleteSubscriptionFilter</a> smart constructor.
data DeleteSubscriptionFilter
DeleteSubscriptionFilter' :: Text -> Text -> DeleteSubscriptionFilter

-- | The name of the log group.
[$sel:logGroupName:DeleteSubscriptionFilter'] :: DeleteSubscriptionFilter -> Text

-- | The name of the subscription filter.
[$sel:filterName:DeleteSubscriptionFilter'] :: DeleteSubscriptionFilter -> Text

-- | Create a value of <a>DeleteSubscriptionFilter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:DeleteSubscriptionFilter'</a>,
--   <a>deleteSubscriptionFilter_logGroupName</a> - The name of the log
--   group.
--   
--   <a>$sel:filterName:DeleteSubscriptionFilter'</a>,
--   <a>deleteSubscriptionFilter_filterName</a> - The name of the
--   subscription filter.
newDeleteSubscriptionFilter :: Text -> Text -> DeleteSubscriptionFilter

-- | The name of the log group.
deleteSubscriptionFilter_logGroupName :: Lens' DeleteSubscriptionFilter Text

-- | The name of the subscription filter.
deleteSubscriptionFilter_filterName :: Lens' DeleteSubscriptionFilter Text

-- | <i>See:</i> <a>newDeleteSubscriptionFilterResponse</a> smart
--   constructor.
data DeleteSubscriptionFilterResponse
DeleteSubscriptionFilterResponse' :: DeleteSubscriptionFilterResponse

-- | Create a value of <a>DeleteSubscriptionFilterResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteSubscriptionFilterResponse :: DeleteSubscriptionFilterResponse
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DeleteSubscriptionFilter.DeleteSubscriptionFilter
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DeleteSubscriptionFilter.DeleteSubscriptionFilter
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DeleteSubscriptionFilter.DeleteSubscriptionFilter
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DeleteSubscriptionFilter.DeleteSubscriptionFilter
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DeleteSubscriptionFilter.DeleteSubscriptionFilterResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DeleteSubscriptionFilter.DeleteSubscriptionFilterResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DeleteSubscriptionFilter.DeleteSubscriptionFilterResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DeleteSubscriptionFilter.DeleteSubscriptionFilterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.DeleteSubscriptionFilter.DeleteSubscriptionFilter
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DeleteSubscriptionFilter.DeleteSubscriptionFilterResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.DeleteSubscriptionFilter.DeleteSubscriptionFilter
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DeleteSubscriptionFilter.DeleteSubscriptionFilter
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.DeleteSubscriptionFilter.DeleteSubscriptionFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.DeleteSubscriptionFilter.DeleteSubscriptionFilter
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.DeleteSubscriptionFilter.DeleteSubscriptionFilter
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.DeleteSubscriptionFilter.DeleteSubscriptionFilter


-- | Deletes the specified retention policy.
--   
--   Log events do not expire if they belong to log groups without a
--   retention policy.
module Network.AWS.CloudWatchLogs.DeleteRetentionPolicy

-- | <i>See:</i> <a>newDeleteRetentionPolicy</a> smart constructor.
data DeleteRetentionPolicy
DeleteRetentionPolicy' :: Text -> DeleteRetentionPolicy

-- | The name of the log group.
[$sel:logGroupName:DeleteRetentionPolicy'] :: DeleteRetentionPolicy -> Text

-- | Create a value of <a>DeleteRetentionPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:DeleteRetentionPolicy'</a>,
--   <a>deleteRetentionPolicy_logGroupName</a> - The name of the log group.
newDeleteRetentionPolicy :: Text -> DeleteRetentionPolicy

-- | The name of the log group.
deleteRetentionPolicy_logGroupName :: Lens' DeleteRetentionPolicy Text

-- | <i>See:</i> <a>newDeleteRetentionPolicyResponse</a> smart constructor.
data DeleteRetentionPolicyResponse
DeleteRetentionPolicyResponse' :: DeleteRetentionPolicyResponse

-- | Create a value of <a>DeleteRetentionPolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRetentionPolicyResponse :: DeleteRetentionPolicyResponse
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DeleteRetentionPolicy.DeleteRetentionPolicy
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DeleteRetentionPolicy.DeleteRetentionPolicy
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DeleteRetentionPolicy.DeleteRetentionPolicy
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DeleteRetentionPolicy.DeleteRetentionPolicy
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DeleteRetentionPolicy.DeleteRetentionPolicyResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DeleteRetentionPolicy.DeleteRetentionPolicyResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DeleteRetentionPolicy.DeleteRetentionPolicyResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DeleteRetentionPolicy.DeleteRetentionPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.DeleteRetentionPolicy.DeleteRetentionPolicy
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DeleteRetentionPolicy.DeleteRetentionPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.DeleteRetentionPolicy.DeleteRetentionPolicy
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DeleteRetentionPolicy.DeleteRetentionPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.DeleteRetentionPolicy.DeleteRetentionPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.DeleteRetentionPolicy.DeleteRetentionPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.DeleteRetentionPolicy.DeleteRetentionPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.DeleteRetentionPolicy.DeleteRetentionPolicy


-- | Deletes a resource policy from this account. This revokes the access
--   of the identities in that policy to put log events to this account.
module Network.AWS.CloudWatchLogs.DeleteResourcePolicy

-- | <i>See:</i> <a>newDeleteResourcePolicy</a> smart constructor.
data DeleteResourcePolicy
DeleteResourcePolicy' :: Maybe Text -> DeleteResourcePolicy

-- | The name of the policy to be revoked. This parameter is required.
[$sel:policyName:DeleteResourcePolicy'] :: DeleteResourcePolicy -> Maybe Text

-- | Create a value of <a>DeleteResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyName:DeleteResourcePolicy'</a>,
--   <a>deleteResourcePolicy_policyName</a> - The name of the policy to be
--   revoked. This parameter is required.
newDeleteResourcePolicy :: DeleteResourcePolicy

-- | The name of the policy to be revoked. This parameter is required.
deleteResourcePolicy_policyName :: Lens' DeleteResourcePolicy (Maybe Text)

-- | <i>See:</i> <a>newDeleteResourcePolicyResponse</a> smart constructor.
data DeleteResourcePolicyResponse
DeleteResourcePolicyResponse' :: DeleteResourcePolicyResponse

-- | Create a value of <a>DeleteResourcePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteResourcePolicyResponse :: DeleteResourcePolicyResponse
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DeleteResourcePolicy.DeleteResourcePolicy
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DeleteResourcePolicy.DeleteResourcePolicy
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DeleteResourcePolicy.DeleteResourcePolicy
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DeleteResourcePolicy.DeleteResourcePolicy
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DeleteResourcePolicy.DeleteResourcePolicyResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DeleteResourcePolicy.DeleteResourcePolicyResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DeleteResourcePolicy.DeleteResourcePolicyResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DeleteResourcePolicy.DeleteResourcePolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.DeleteResourcePolicy.DeleteResourcePolicy
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DeleteResourcePolicy.DeleteResourcePolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.DeleteResourcePolicy.DeleteResourcePolicy
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DeleteResourcePolicy.DeleteResourcePolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.DeleteResourcePolicy.DeleteResourcePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.DeleteResourcePolicy.DeleteResourcePolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.DeleteResourcePolicy.DeleteResourcePolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.DeleteResourcePolicy.DeleteResourcePolicy


-- | Deletes a saved CloudWatch Logs Insights query definition. A query
--   definition contains details about a saved CloudWatch Logs Insights
--   query.
--   
--   Each <tt>DeleteQueryDefinition</tt> operation can delete one query
--   definition.
--   
--   You must have the <tt>logs:DeleteQueryDefinition</tt> permission to be
--   able to perform this operation.
module Network.AWS.CloudWatchLogs.DeleteQueryDefinition

-- | <i>See:</i> <a>newDeleteQueryDefinition</a> smart constructor.
data DeleteQueryDefinition
DeleteQueryDefinition' :: Text -> DeleteQueryDefinition

-- | The ID of the query definition that you want to delete. You can use
--   <a>DescribeQueryDefinitions</a> to retrieve the IDs of your saved
--   query definitions.
[$sel:queryDefinitionId:DeleteQueryDefinition'] :: DeleteQueryDefinition -> Text

-- | Create a value of <a>DeleteQueryDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryDefinitionId:DeleteQueryDefinition'</a>,
--   <a>deleteQueryDefinition_queryDefinitionId</a> - The ID of the query
--   definition that you want to delete. You can use
--   <a>DescribeQueryDefinitions</a> to retrieve the IDs of your saved
--   query definitions.
newDeleteQueryDefinition :: Text -> DeleteQueryDefinition

-- | The ID of the query definition that you want to delete. You can use
--   <a>DescribeQueryDefinitions</a> to retrieve the IDs of your saved
--   query definitions.
deleteQueryDefinition_queryDefinitionId :: Lens' DeleteQueryDefinition Text

-- | <i>See:</i> <a>newDeleteQueryDefinitionResponse</a> smart constructor.
data DeleteQueryDefinitionResponse
DeleteQueryDefinitionResponse' :: Maybe Bool -> Int -> DeleteQueryDefinitionResponse

-- | A value of TRUE indicates that the operation succeeded. FALSE
--   indicates that the operation failed.
[$sel:success:DeleteQueryDefinitionResponse'] :: DeleteQueryDefinitionResponse -> Maybe Bool

-- | The response's http status code.
[$sel:httpStatus:DeleteQueryDefinitionResponse'] :: DeleteQueryDefinitionResponse -> Int

-- | Create a value of <a>DeleteQueryDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:success:DeleteQueryDefinitionResponse'</a>,
--   <a>deleteQueryDefinitionResponse_success</a> - A value of TRUE
--   indicates that the operation succeeded. FALSE indicates that the
--   operation failed.
--   
--   <a>$sel:httpStatus:DeleteQueryDefinitionResponse'</a>,
--   <a>deleteQueryDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteQueryDefinitionResponse :: Int -> DeleteQueryDefinitionResponse

-- | A value of TRUE indicates that the operation succeeded. FALSE
--   indicates that the operation failed.
deleteQueryDefinitionResponse_success :: Lens' DeleteQueryDefinitionResponse (Maybe Bool)

-- | The response's http status code.
deleteQueryDefinitionResponse_httpStatus :: Lens' DeleteQueryDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DeleteQueryDefinition.DeleteQueryDefinition
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DeleteQueryDefinition.DeleteQueryDefinition
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DeleteQueryDefinition.DeleteQueryDefinition
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DeleteQueryDefinition.DeleteQueryDefinition
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DeleteQueryDefinition.DeleteQueryDefinitionResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DeleteQueryDefinition.DeleteQueryDefinitionResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DeleteQueryDefinition.DeleteQueryDefinitionResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DeleteQueryDefinition.DeleteQueryDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.DeleteQueryDefinition.DeleteQueryDefinition
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DeleteQueryDefinition.DeleteQueryDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.DeleteQueryDefinition.DeleteQueryDefinition
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DeleteQueryDefinition.DeleteQueryDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.DeleteQueryDefinition.DeleteQueryDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.DeleteQueryDefinition.DeleteQueryDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.DeleteQueryDefinition.DeleteQueryDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.DeleteQueryDefinition.DeleteQueryDefinition


-- | Deletes the specified metric filter.
module Network.AWS.CloudWatchLogs.DeleteMetricFilter

-- | <i>See:</i> <a>newDeleteMetricFilter</a> smart constructor.
data DeleteMetricFilter
DeleteMetricFilter' :: Text -> Text -> DeleteMetricFilter

-- | The name of the log group.
[$sel:logGroupName:DeleteMetricFilter'] :: DeleteMetricFilter -> Text

-- | The name of the metric filter.
[$sel:filterName:DeleteMetricFilter'] :: DeleteMetricFilter -> Text

-- | Create a value of <a>DeleteMetricFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:DeleteMetricFilter'</a>,
--   <a>deleteMetricFilter_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:filterName:DeleteMetricFilter'</a>,
--   <a>deleteMetricFilter_filterName</a> - The name of the metric filter.
newDeleteMetricFilter :: Text -> Text -> DeleteMetricFilter

-- | The name of the log group.
deleteMetricFilter_logGroupName :: Lens' DeleteMetricFilter Text

-- | The name of the metric filter.
deleteMetricFilter_filterName :: Lens' DeleteMetricFilter Text

-- | <i>See:</i> <a>newDeleteMetricFilterResponse</a> smart constructor.
data DeleteMetricFilterResponse
DeleteMetricFilterResponse' :: DeleteMetricFilterResponse

-- | Create a value of <a>DeleteMetricFilterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteMetricFilterResponse :: DeleteMetricFilterResponse
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DeleteMetricFilter.DeleteMetricFilter
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DeleteMetricFilter.DeleteMetricFilter
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DeleteMetricFilter.DeleteMetricFilter
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DeleteMetricFilter.DeleteMetricFilter
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DeleteMetricFilter.DeleteMetricFilterResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DeleteMetricFilter.DeleteMetricFilterResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DeleteMetricFilter.DeleteMetricFilterResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DeleteMetricFilter.DeleteMetricFilterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.DeleteMetricFilter.DeleteMetricFilter
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DeleteMetricFilter.DeleteMetricFilterResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.DeleteMetricFilter.DeleteMetricFilter
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DeleteMetricFilter.DeleteMetricFilter
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.DeleteMetricFilter.DeleteMetricFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.DeleteMetricFilter.DeleteMetricFilter
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.DeleteMetricFilter.DeleteMetricFilter
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.DeleteMetricFilter.DeleteMetricFilter


-- | Deletes the specified log stream and permanently deletes all the
--   archived log events associated with the log stream.
module Network.AWS.CloudWatchLogs.DeleteLogStream

-- | <i>See:</i> <a>newDeleteLogStream</a> smart constructor.
data DeleteLogStream
DeleteLogStream' :: Text -> Text -> DeleteLogStream

-- | The name of the log group.
[$sel:logGroupName:DeleteLogStream'] :: DeleteLogStream -> Text

-- | The name of the log stream.
[$sel:logStreamName:DeleteLogStream'] :: DeleteLogStream -> Text

-- | Create a value of <a>DeleteLogStream</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:DeleteLogStream'</a>,
--   <a>deleteLogStream_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:logStreamName:DeleteLogStream'</a>,
--   <a>deleteLogStream_logStreamName</a> - The name of the log stream.
newDeleteLogStream :: Text -> Text -> DeleteLogStream

-- | The name of the log group.
deleteLogStream_logGroupName :: Lens' DeleteLogStream Text

-- | The name of the log stream.
deleteLogStream_logStreamName :: Lens' DeleteLogStream Text

-- | <i>See:</i> <a>newDeleteLogStreamResponse</a> smart constructor.
data DeleteLogStreamResponse
DeleteLogStreamResponse' :: DeleteLogStreamResponse

-- | Create a value of <a>DeleteLogStreamResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteLogStreamResponse :: DeleteLogStreamResponse
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DeleteLogStream.DeleteLogStream
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DeleteLogStream.DeleteLogStream
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DeleteLogStream.DeleteLogStream
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DeleteLogStream.DeleteLogStream
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DeleteLogStream.DeleteLogStreamResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DeleteLogStream.DeleteLogStreamResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DeleteLogStream.DeleteLogStreamResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DeleteLogStream.DeleteLogStreamResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.DeleteLogStream.DeleteLogStream
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DeleteLogStream.DeleteLogStreamResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.DeleteLogStream.DeleteLogStream
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DeleteLogStream.DeleteLogStream
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.DeleteLogStream.DeleteLogStream
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.DeleteLogStream.DeleteLogStream
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.DeleteLogStream.DeleteLogStream
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.DeleteLogStream.DeleteLogStream


-- | Deletes the specified log group and permanently deletes all the
--   archived log events associated with the log group.
module Network.AWS.CloudWatchLogs.DeleteLogGroup

-- | <i>See:</i> <a>newDeleteLogGroup</a> smart constructor.
data DeleteLogGroup
DeleteLogGroup' :: Text -> DeleteLogGroup

-- | The name of the log group.
[$sel:logGroupName:DeleteLogGroup'] :: DeleteLogGroup -> Text

-- | Create a value of <a>DeleteLogGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:DeleteLogGroup'</a>,
--   <a>deleteLogGroup_logGroupName</a> - The name of the log group.
newDeleteLogGroup :: Text -> DeleteLogGroup

-- | The name of the log group.
deleteLogGroup_logGroupName :: Lens' DeleteLogGroup Text

-- | <i>See:</i> <a>newDeleteLogGroupResponse</a> smart constructor.
data DeleteLogGroupResponse
DeleteLogGroupResponse' :: DeleteLogGroupResponse

-- | Create a value of <a>DeleteLogGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteLogGroupResponse :: DeleteLogGroupResponse
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DeleteLogGroup.DeleteLogGroup
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DeleteLogGroup.DeleteLogGroup
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DeleteLogGroup.DeleteLogGroup
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DeleteLogGroup.DeleteLogGroup
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DeleteLogGroup.DeleteLogGroupResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DeleteLogGroup.DeleteLogGroupResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DeleteLogGroup.DeleteLogGroupResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DeleteLogGroup.DeleteLogGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.DeleteLogGroup.DeleteLogGroup
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DeleteLogGroup.DeleteLogGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.DeleteLogGroup.DeleteLogGroup
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DeleteLogGroup.DeleteLogGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.DeleteLogGroup.DeleteLogGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.DeleteLogGroup.DeleteLogGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.DeleteLogGroup.DeleteLogGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.DeleteLogGroup.DeleteLogGroup


-- | Deletes the specified destination, and eventually disables all the
--   subscription filters that publish to it. This operation does not
--   delete the physical resource encapsulated by the destination.
module Network.AWS.CloudWatchLogs.DeleteDestination

-- | <i>See:</i> <a>newDeleteDestination</a> smart constructor.
data DeleteDestination
DeleteDestination' :: Text -> DeleteDestination

-- | The name of the destination.
[$sel:destinationName:DeleteDestination'] :: DeleteDestination -> Text

-- | Create a value of <a>DeleteDestination</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationName:DeleteDestination'</a>,
--   <a>deleteDestination_destinationName</a> - The name of the
--   destination.
newDeleteDestination :: Text -> DeleteDestination

-- | The name of the destination.
deleteDestination_destinationName :: Lens' DeleteDestination Text

-- | <i>See:</i> <a>newDeleteDestinationResponse</a> smart constructor.
data DeleteDestinationResponse
DeleteDestinationResponse' :: DeleteDestinationResponse

-- | Create a value of <a>DeleteDestinationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDestinationResponse :: DeleteDestinationResponse
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DeleteDestination.DeleteDestination
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DeleteDestination.DeleteDestination
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DeleteDestination.DeleteDestination
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DeleteDestination.DeleteDestination
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.DeleteDestination.DeleteDestinationResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.DeleteDestination.DeleteDestinationResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.DeleteDestination.DeleteDestinationResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.DeleteDestination.DeleteDestinationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.DeleteDestination.DeleteDestination
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DeleteDestination.DeleteDestinationResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.DeleteDestination.DeleteDestination
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.DeleteDestination.DeleteDestination
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.DeleteDestination.DeleteDestination
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.DeleteDestination.DeleteDestination
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.DeleteDestination.DeleteDestination
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.DeleteDestination.DeleteDestination


-- | Creates a log stream for the specified log group. A log stream is a
--   sequence of log events that originate from a single source, such as an
--   application instance or a resource that is being monitored.
--   
--   There is no limit on the number of log streams that you can create for
--   a log group. There is a limit of 50 TPS on <tt>CreateLogStream</tt>
--   operations, after which transactions are throttled.
--   
--   You must use the following guidelines when naming a log stream:
--   
--   <ul>
--   <li>Log stream names must be unique within the log group.</li>
--   <li>Log stream names can be between 1 and 512 characters long.</li>
--   <li>The ':' (colon) and '*' (asterisk) characters are not
--   allowed.</li>
--   </ul>
module Network.AWS.CloudWatchLogs.CreateLogStream

-- | <i>See:</i> <a>newCreateLogStream</a> smart constructor.
data CreateLogStream
CreateLogStream' :: Text -> Text -> CreateLogStream

-- | The name of the log group.
[$sel:logGroupName:CreateLogStream'] :: CreateLogStream -> Text

-- | The name of the log stream.
[$sel:logStreamName:CreateLogStream'] :: CreateLogStream -> Text

-- | Create a value of <a>CreateLogStream</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:CreateLogStream'</a>,
--   <a>createLogStream_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:logStreamName:CreateLogStream'</a>,
--   <a>createLogStream_logStreamName</a> - The name of the log stream.
newCreateLogStream :: Text -> Text -> CreateLogStream

-- | The name of the log group.
createLogStream_logGroupName :: Lens' CreateLogStream Text

-- | The name of the log stream.
createLogStream_logStreamName :: Lens' CreateLogStream Text

-- | <i>See:</i> <a>newCreateLogStreamResponse</a> smart constructor.
data CreateLogStreamResponse
CreateLogStreamResponse' :: CreateLogStreamResponse

-- | Create a value of <a>CreateLogStreamResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCreateLogStreamResponse :: CreateLogStreamResponse
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.CreateLogStream.CreateLogStream
instance GHC.Show.Show Network.AWS.CloudWatchLogs.CreateLogStream.CreateLogStream
instance GHC.Read.Read Network.AWS.CloudWatchLogs.CreateLogStream.CreateLogStream
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.CreateLogStream.CreateLogStream
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.CreateLogStream.CreateLogStreamResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.CreateLogStream.CreateLogStreamResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.CreateLogStream.CreateLogStreamResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.CreateLogStream.CreateLogStreamResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.CreateLogStream.CreateLogStream
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.CreateLogStream.CreateLogStreamResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.CreateLogStream.CreateLogStream
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.CreateLogStream.CreateLogStream
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.CreateLogStream.CreateLogStream
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.CreateLogStream.CreateLogStream
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.CreateLogStream.CreateLogStream
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.CreateLogStream.CreateLogStream


-- | Creates a log group with the specified name. You can create up to
--   20,000 log groups per account.
--   
--   You must use the following guidelines when naming a log group:
--   
--   <ul>
--   <li>Log group names must be unique within a region for an Amazon Web
--   Services account.</li>
--   <li>Log group names can be between 1 and 512 characters long.</li>
--   <li>Log group names consist of the following characters: a-z, A-Z,
--   0-9, '_' (underscore), '-' (hyphen), '/' (forward slash), '.'
--   (period), and '#' (number sign)</li>
--   </ul>
--   
--   When you create a log group, by default the log events in the log
--   group never expire. To set a retention policy so that events expire
--   and are deleted after a specified time, use <a>PutRetentionPolicy</a>.
--   
--   If you associate a Key Management Service customer master key (CMK)
--   with the log group, ingested data is encrypted using the CMK. This
--   association is stored as long as the data encrypted with the CMK is
--   still within CloudWatch Logs. This enables CloudWatch Logs to decrypt
--   this data whenever it is requested.
--   
--   If you attempt to associate a CMK with the log group but the CMK does
--   not exist or the CMK is disabled, you receive an
--   <tt>InvalidParameterException</tt> error.
--   
--   CloudWatch Logs supports only symmetric CMKs. Do not associate an
--   asymmetric CMK with your log group. For more information, see <a>Using
--   Symmetric and Asymmetric Keys</a>.
module Network.AWS.CloudWatchLogs.CreateLogGroup

-- | <i>See:</i> <a>newCreateLogGroup</a> smart constructor.
data CreateLogGroup
CreateLogGroup' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> CreateLogGroup

-- | The Amazon Resource Name (ARN) of the CMK to use when encrypting log
--   data. For more information, see <a>Amazon Resource Names - Key
--   Management Service</a>.
[$sel:kmsKeyId:CreateLogGroup'] :: CreateLogGroup -> Maybe Text

-- | The key-value pairs to use for the tags.
--   
--   CloudWatch Logs doesn’t support IAM policies that prevent users from
--   assigning specified tags to log groups using the
--   <tt>aws:Resource/key-name </tt> or <tt>aws:TagKeys</tt> condition
--   keys. For more information about using tags to control access, see
--   <a>Controlling access to Amazon Web Services resources using tags</a>.
[$sel:tags:CreateLogGroup'] :: CreateLogGroup -> Maybe (HashMap Text Text)

-- | The name of the log group.
[$sel:logGroupName:CreateLogGroup'] :: CreateLogGroup -> Text

-- | Create a value of <a>CreateLogGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:CreateLogGroup'</a>, <a>createLogGroup_kmsKeyId</a> -
--   The Amazon Resource Name (ARN) of the CMK to use when encrypting log
--   data. For more information, see <a>Amazon Resource Names - Key
--   Management Service</a>.
--   
--   <a>$sel:tags:CreateLogGroup'</a>, <a>createLogGroup_tags</a> - The
--   key-value pairs to use for the tags.
--   
--   CloudWatch Logs doesn’t support IAM policies that prevent users from
--   assigning specified tags to log groups using the
--   <tt>aws:Resource/key-name </tt> or <tt>aws:TagKeys</tt> condition
--   keys. For more information about using tags to control access, see
--   <a>Controlling access to Amazon Web Services resources using tags</a>.
--   
--   <a>$sel:logGroupName:CreateLogGroup'</a>,
--   <a>createLogGroup_logGroupName</a> - The name of the log group.
newCreateLogGroup :: Text -> CreateLogGroup

-- | The Amazon Resource Name (ARN) of the CMK to use when encrypting log
--   data. For more information, see <a>Amazon Resource Names - Key
--   Management Service</a>.
createLogGroup_kmsKeyId :: Lens' CreateLogGroup (Maybe Text)

-- | The key-value pairs to use for the tags.
--   
--   CloudWatch Logs doesn’t support IAM policies that prevent users from
--   assigning specified tags to log groups using the
--   <tt>aws:Resource/key-name </tt> or <tt>aws:TagKeys</tt> condition
--   keys. For more information about using tags to control access, see
--   <a>Controlling access to Amazon Web Services resources using tags</a>.
createLogGroup_tags :: Lens' CreateLogGroup (Maybe (HashMap Text Text))

-- | The name of the log group.
createLogGroup_logGroupName :: Lens' CreateLogGroup Text

-- | <i>See:</i> <a>newCreateLogGroupResponse</a> smart constructor.
data CreateLogGroupResponse
CreateLogGroupResponse' :: CreateLogGroupResponse

-- | Create a value of <a>CreateLogGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCreateLogGroupResponse :: CreateLogGroupResponse
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.CreateLogGroup.CreateLogGroup
instance GHC.Show.Show Network.AWS.CloudWatchLogs.CreateLogGroup.CreateLogGroup
instance GHC.Read.Read Network.AWS.CloudWatchLogs.CreateLogGroup.CreateLogGroup
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.CreateLogGroup.CreateLogGroup
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.CreateLogGroup.CreateLogGroupResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.CreateLogGroup.CreateLogGroupResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.CreateLogGroup.CreateLogGroupResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.CreateLogGroup.CreateLogGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.CreateLogGroup.CreateLogGroup
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.CreateLogGroup.CreateLogGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.CreateLogGroup.CreateLogGroup
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.CreateLogGroup.CreateLogGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.CreateLogGroup.CreateLogGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.CreateLogGroup.CreateLogGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.CreateLogGroup.CreateLogGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.CreateLogGroup.CreateLogGroup


-- | Creates an export task, which allows you to efficiently export data
--   from a log group to an Amazon S3 bucket. When you perform a
--   <tt>CreateExportTask</tt> operation, you must use credentials that
--   have permission to write to the S3 bucket that you specify as the
--   destination.
--   
--   This is an asynchronous call. If all the required information is
--   provided, this operation initiates an export task and responds with
--   the ID of the task. After the task has started, you can use
--   <a>DescribeExportTasks</a> to get the status of the export task. Each
--   account can only have one active (<tt>RUNNING</tt> or
--   <tt>PENDING</tt>) export task at a time. To cancel an export task, use
--   <a>CancelExportTask</a>.
--   
--   You can export logs from multiple log groups or multiple time ranges
--   to the same S3 bucket. To separate out log data for each export task,
--   you can specify a prefix to be used as the Amazon S3 key prefix for
--   all exported objects.
--   
--   Exporting to S3 buckets that are encrypted with AES-256 is supported.
--   Exporting to S3 buckets encrypted with SSE-KMS is not supported.
module Network.AWS.CloudWatchLogs.CreateExportTask

-- | <i>See:</i> <a>newCreateExportTask</a> smart constructor.
data CreateExportTask
CreateExportTask' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> Natural -> Natural -> Text -> CreateExportTask

-- | The prefix used as the start of the key for every object exported. If
--   you don't specify a value, the default is <tt>exportedlogs</tt>.
[$sel:destinationPrefix:CreateExportTask'] :: CreateExportTask -> Maybe Text

-- | The name of the export task.
[$sel:taskName:CreateExportTask'] :: CreateExportTask -> Maybe Text

-- | Export only log streams that match the provided prefix. If you don't
--   specify a value, no prefix filter is applied.
[$sel:logStreamNamePrefix:CreateExportTask'] :: CreateExportTask -> Maybe Text

-- | The name of the log group.
[$sel:logGroupName:CreateExportTask'] :: CreateExportTask -> Text

-- | The start time of the range for the request, expressed as the number
--   of milliseconds after Jan 1, 1970 00:00:00 UTC. Events with a
--   timestamp earlier than this time are not exported.
[$sel:from:CreateExportTask'] :: CreateExportTask -> Natural

-- | The end time of the range for the request, expreswatchlogsdocused as
--   the number of milliseconds after Jan 1, 1970 00:00:00 UTC. Events with
--   a timestamp later than this time are not exported.
[$sel:to:CreateExportTask'] :: CreateExportTask -> Natural

-- | The name of S3 bucket for the exported log data. The bucket must be in
--   the same Amazon Web Services region.
[$sel:destination:CreateExportTask'] :: CreateExportTask -> Text

-- | Create a value of <a>CreateExportTask</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationPrefix:CreateExportTask'</a>,
--   <a>createExportTask_destinationPrefix</a> - The prefix used as the
--   start of the key for every object exported. If you don't specify a
--   value, the default is <tt>exportedlogs</tt>.
--   
--   <a>$sel:taskName:CreateExportTask'</a>,
--   <a>createExportTask_taskName</a> - The name of the export task.
--   
--   <a>$sel:logStreamNamePrefix:CreateExportTask'</a>,
--   <a>createExportTask_logStreamNamePrefix</a> - Export only log streams
--   that match the provided prefix. If you don't specify a value, no
--   prefix filter is applied.
--   
--   <a>$sel:logGroupName:CreateExportTask'</a>,
--   <a>createExportTask_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:from:CreateExportTask'</a>, <a>createExportTask_from</a> - The
--   start time of the range for the request, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC. Events with a timestamp
--   earlier than this time are not exported.
--   
--   <a>$sel:to:CreateExportTask'</a>, <a>createExportTask_to</a> - The end
--   time of the range for the request, expreswatchlogsdocused as the
--   number of milliseconds after Jan 1, 1970 00:00:00 UTC. Events with a
--   timestamp later than this time are not exported.
--   
--   <a>$sel:destination:CreateExportTask'</a>,
--   <a>createExportTask_destination</a> - The name of S3 bucket for the
--   exported log data. The bucket must be in the same Amazon Web Services
--   region.
newCreateExportTask :: Text -> Natural -> Natural -> Text -> CreateExportTask

-- | The prefix used as the start of the key for every object exported. If
--   you don't specify a value, the default is <tt>exportedlogs</tt>.
createExportTask_destinationPrefix :: Lens' CreateExportTask (Maybe Text)

-- | The name of the export task.
createExportTask_taskName :: Lens' CreateExportTask (Maybe Text)

-- | Export only log streams that match the provided prefix. If you don't
--   specify a value, no prefix filter is applied.
createExportTask_logStreamNamePrefix :: Lens' CreateExportTask (Maybe Text)

-- | The name of the log group.
createExportTask_logGroupName :: Lens' CreateExportTask Text

-- | The start time of the range for the request, expressed as the number
--   of milliseconds after Jan 1, 1970 00:00:00 UTC. Events with a
--   timestamp earlier than this time are not exported.
createExportTask_from :: Lens' CreateExportTask Natural

-- | The end time of the range for the request, expreswatchlogsdocused as
--   the number of milliseconds after Jan 1, 1970 00:00:00 UTC. Events with
--   a timestamp later than this time are not exported.
createExportTask_to :: Lens' CreateExportTask Natural

-- | The name of S3 bucket for the exported log data. The bucket must be in
--   the same Amazon Web Services region.
createExportTask_destination :: Lens' CreateExportTask Text

-- | <i>See:</i> <a>newCreateExportTaskResponse</a> smart constructor.
data CreateExportTaskResponse
CreateExportTaskResponse' :: Maybe Text -> Int -> CreateExportTaskResponse

-- | The ID of the export task.
[$sel:taskId:CreateExportTaskResponse'] :: CreateExportTaskResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateExportTaskResponse'] :: CreateExportTaskResponse -> Int

-- | Create a value of <a>CreateExportTaskResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskId:CreateExportTaskResponse'</a>,
--   <a>createExportTaskResponse_taskId</a> - The ID of the export task.
--   
--   <a>$sel:httpStatus:CreateExportTaskResponse'</a>,
--   <a>createExportTaskResponse_httpStatus</a> - The response's http
--   status code.
newCreateExportTaskResponse :: Int -> CreateExportTaskResponse

-- | The ID of the export task.
createExportTaskResponse_taskId :: Lens' CreateExportTaskResponse (Maybe Text)

-- | The response's http status code.
createExportTaskResponse_httpStatus :: Lens' CreateExportTaskResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.CreateExportTask.CreateExportTask
instance GHC.Show.Show Network.AWS.CloudWatchLogs.CreateExportTask.CreateExportTask
instance GHC.Read.Read Network.AWS.CloudWatchLogs.CreateExportTask.CreateExportTask
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.CreateExportTask.CreateExportTask
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.CreateExportTask.CreateExportTaskResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.CreateExportTask.CreateExportTaskResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.CreateExportTask.CreateExportTaskResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.CreateExportTask.CreateExportTaskResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.CreateExportTask.CreateExportTask
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.CreateExportTask.CreateExportTaskResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.CreateExportTask.CreateExportTask
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.CreateExportTask.CreateExportTask
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.CreateExportTask.CreateExportTask
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.CreateExportTask.CreateExportTask
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.CreateExportTask.CreateExportTask
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.CreateExportTask.CreateExportTask


-- | Cancels the specified export task.
--   
--   The task must be in the <tt>PENDING</tt> or <tt>RUNNING</tt> state.
module Network.AWS.CloudWatchLogs.CancelExportTask

-- | <i>See:</i> <a>newCancelExportTask</a> smart constructor.
data CancelExportTask
CancelExportTask' :: Text -> CancelExportTask

-- | The ID of the export task.
[$sel:taskId:CancelExportTask'] :: CancelExportTask -> Text

-- | Create a value of <a>CancelExportTask</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskId:CancelExportTask'</a>, <a>cancelExportTask_taskId</a> -
--   The ID of the export task.
newCancelExportTask :: Text -> CancelExportTask

-- | The ID of the export task.
cancelExportTask_taskId :: Lens' CancelExportTask Text

-- | <i>See:</i> <a>newCancelExportTaskResponse</a> smart constructor.
data CancelExportTaskResponse
CancelExportTaskResponse' :: CancelExportTaskResponse

-- | Create a value of <a>CancelExportTaskResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCancelExportTaskResponse :: CancelExportTaskResponse
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.CancelExportTask.CancelExportTask
instance GHC.Show.Show Network.AWS.CloudWatchLogs.CancelExportTask.CancelExportTask
instance GHC.Read.Read Network.AWS.CloudWatchLogs.CancelExportTask.CancelExportTask
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.CancelExportTask.CancelExportTask
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.CancelExportTask.CancelExportTaskResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.CancelExportTask.CancelExportTaskResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.CancelExportTask.CancelExportTaskResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.CancelExportTask.CancelExportTaskResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.CancelExportTask.CancelExportTask
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.CancelExportTask.CancelExportTaskResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.CancelExportTask.CancelExportTask
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.CancelExportTask.CancelExportTask
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.CancelExportTask.CancelExportTask
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.CancelExportTask.CancelExportTask
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.CancelExportTask.CancelExportTask
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.CancelExportTask.CancelExportTask


-- | Associates the specified Key Management Service customer master key
--   (CMK) with the specified log group.
--   
--   Associating an KMS CMK with a log group overrides any existing
--   associations between the log group and a CMK. After a CMK is
--   associated with a log group, all newly ingested data for the log group
--   is encrypted using the CMK. This association is stored as long as the
--   data encrypted with the CMK is still within CloudWatch Logs. This
--   enables CloudWatch Logs to decrypt this data whenever it is requested.
--   
--   CloudWatch Logs supports only symmetric CMKs. Do not use an associate
--   an asymmetric CMK with your log group. For more information, see
--   <a>Using Symmetric and Asymmetric Keys</a>.
--   
--   It can take up to 5 minutes for this operation to take effect.
--   
--   If you attempt to associate a CMK with a log group but the CMK does
--   not exist or the CMK is disabled, you receive an
--   <tt>InvalidParameterException</tt> error.
module Network.AWS.CloudWatchLogs.AssociateKmsKey

-- | <i>See:</i> <a>newAssociateKmsKey</a> smart constructor.
data AssociateKmsKey
AssociateKmsKey' :: Text -> Text -> AssociateKmsKey

-- | The name of the log group.
[$sel:logGroupName:AssociateKmsKey'] :: AssociateKmsKey -> Text

-- | The Amazon Resource Name (ARN) of the CMK to use when encrypting log
--   data. This must be a symmetric CMK. For more information, see
--   <a>Amazon Resource Names - Key Management Service</a> and <a>Using
--   Symmetric and Asymmetric Keys</a>.
[$sel:kmsKeyId:AssociateKmsKey'] :: AssociateKmsKey -> Text

-- | Create a value of <a>AssociateKmsKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:AssociateKmsKey'</a>,
--   <a>associateKmsKey_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:kmsKeyId:AssociateKmsKey'</a>, <a>associateKmsKey_kmsKeyId</a>
--   - The Amazon Resource Name (ARN) of the CMK to use when encrypting log
--   data. This must be a symmetric CMK. For more information, see
--   <a>Amazon Resource Names - Key Management Service</a> and <a>Using
--   Symmetric and Asymmetric Keys</a>.
newAssociateKmsKey :: Text -> Text -> AssociateKmsKey

-- | The name of the log group.
associateKmsKey_logGroupName :: Lens' AssociateKmsKey Text

-- | The Amazon Resource Name (ARN) of the CMK to use when encrypting log
--   data. This must be a symmetric CMK. For more information, see
--   <a>Amazon Resource Names - Key Management Service</a> and <a>Using
--   Symmetric and Asymmetric Keys</a>.
associateKmsKey_kmsKeyId :: Lens' AssociateKmsKey Text

-- | <i>See:</i> <a>newAssociateKmsKeyResponse</a> smart constructor.
data AssociateKmsKeyResponse
AssociateKmsKeyResponse' :: AssociateKmsKeyResponse

-- | Create a value of <a>AssociateKmsKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAssociateKmsKeyResponse :: AssociateKmsKeyResponse
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.AssociateKmsKey.AssociateKmsKey
instance GHC.Show.Show Network.AWS.CloudWatchLogs.AssociateKmsKey.AssociateKmsKey
instance GHC.Read.Read Network.AWS.CloudWatchLogs.AssociateKmsKey.AssociateKmsKey
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.AssociateKmsKey.AssociateKmsKey
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.AssociateKmsKey.AssociateKmsKeyResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.AssociateKmsKey.AssociateKmsKeyResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.AssociateKmsKey.AssociateKmsKeyResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.AssociateKmsKey.AssociateKmsKeyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.AssociateKmsKey.AssociateKmsKey
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.AssociateKmsKey.AssociateKmsKeyResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.AssociateKmsKey.AssociateKmsKey
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.AssociateKmsKey.AssociateKmsKey
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.AssociateKmsKey.AssociateKmsKey
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.AssociateKmsKey.AssociateKmsKey
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.AssociateKmsKey.AssociateKmsKey
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.AssociateKmsKey.AssociateKmsKey


-- | Removes the specified tags from the specified log group.
--   
--   To list the tags for a log group, use <a>ListTagsLogGroup</a>. To add
--   tags, use <a>TagLogGroup</a>.
--   
--   CloudWatch Logs doesn’t support IAM policies that prevent users from
--   assigning specified tags to log groups using the
--   <tt>aws:Resource/key-name </tt> or <tt>aws:TagKeys</tt> condition
--   keys.
module Network.AWS.CloudWatchLogs.UntagLogGroup

-- | <i>See:</i> <a>newUntagLogGroup</a> smart constructor.
data UntagLogGroup
UntagLogGroup' :: Text -> NonEmpty Text -> UntagLogGroup

-- | The name of the log group.
[$sel:logGroupName:UntagLogGroup'] :: UntagLogGroup -> Text

-- | The tag keys. The corresponding tags are removed from the log group.
[$sel:tags:UntagLogGroup'] :: UntagLogGroup -> NonEmpty Text

-- | Create a value of <a>UntagLogGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:UntagLogGroup'</a>,
--   <a>untagLogGroup_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:tags:UntagLogGroup'</a>, <a>untagLogGroup_tags</a> - The tag
--   keys. The corresponding tags are removed from the log group.
newUntagLogGroup :: Text -> NonEmpty Text -> UntagLogGroup

-- | The name of the log group.
untagLogGroup_logGroupName :: Lens' UntagLogGroup Text

-- | The tag keys. The corresponding tags are removed from the log group.
untagLogGroup_tags :: Lens' UntagLogGroup (NonEmpty Text)

-- | <i>See:</i> <a>newUntagLogGroupResponse</a> smart constructor.
data UntagLogGroupResponse
UntagLogGroupResponse' :: UntagLogGroupResponse

-- | Create a value of <a>UntagLogGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagLogGroupResponse :: UntagLogGroupResponse
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.UntagLogGroup.UntagLogGroup
instance GHC.Show.Show Network.AWS.CloudWatchLogs.UntagLogGroup.UntagLogGroup
instance GHC.Read.Read Network.AWS.CloudWatchLogs.UntagLogGroup.UntagLogGroup
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.UntagLogGroup.UntagLogGroup
instance GHC.Generics.Generic Network.AWS.CloudWatchLogs.UntagLogGroup.UntagLogGroupResponse
instance GHC.Show.Show Network.AWS.CloudWatchLogs.UntagLogGroup.UntagLogGroupResponse
instance GHC.Read.Read Network.AWS.CloudWatchLogs.UntagLogGroup.UntagLogGroupResponse
instance GHC.Classes.Eq Network.AWS.CloudWatchLogs.UntagLogGroup.UntagLogGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatchLogs.UntagLogGroup.UntagLogGroup
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.UntagLogGroup.UntagLogGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatchLogs.UntagLogGroup.UntagLogGroup
instance Control.DeepSeq.NFData Network.AWS.CloudWatchLogs.UntagLogGroup.UntagLogGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatchLogs.UntagLogGroup.UntagLogGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatchLogs.UntagLogGroup.UntagLogGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatchLogs.UntagLogGroup.UntagLogGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatchLogs.UntagLogGroup.UntagLogGroup


module Network.AWS.CloudWatchLogs.Lens

-- | The time to set as the center of the query. If you specify
--   <tt>time</tt>, the 15 minutes before this time are queries. If you
--   omit <tt>time</tt> the 8 minutes before and 8 minutes after this time
--   are searched.
--   
--   The <tt>time</tt> value is specified as epoch time, the number of
--   seconds since January 1, 1970, 00:00:00 UTC.
getLogGroupFields_time :: Lens' GetLogGroupFields (Maybe Natural)

-- | The name of the log group to search.
getLogGroupFields_logGroupName :: Lens' GetLogGroupFields Text

-- | The array of fields found in the query. Each object in the array
--   contains the name of the field, along with the percentage of time it
--   appeared in the log events that were queried.
getLogGroupFieldsResponse_logGroupFields :: Lens' GetLogGroupFieldsResponse (Maybe [LogGroupField])

-- | The response's http status code.
getLogGroupFieldsResponse_httpStatus :: Lens' GetLogGroupFieldsResponse Int

-- | The pointer corresponding to the log event record you want to
--   retrieve. You get this from the response of a <tt>GetQueryResults</tt>
--   operation. In that response, the value of the <tt>@ptr</tt> field for
--   a log event is the value to use as <tt>logRecordPointer</tt> to
--   retrieve that complete log event record.
getLogRecord_logRecordPointer :: Lens' GetLogRecord Text

-- | The requested log event, as a JSON string.
getLogRecordResponse_logRecord :: Lens' GetLogRecordResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getLogRecordResponse_httpStatus :: Lens' GetLogRecordResponse Int

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeDestinations_nextToken :: Lens' DescribeDestinations (Maybe Text)

-- | The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
describeDestinations_limit :: Lens' DescribeDestinations (Maybe Natural)

-- | The prefix to match. If you don't specify a value, no prefix filter is
--   applied.
describeDestinations_destinationNamePrefix :: Lens' DescribeDestinations (Maybe Text)

-- | Undocumented member.
describeDestinationsResponse_nextToken :: Lens' DescribeDestinationsResponse (Maybe Text)

-- | The destinations.
describeDestinationsResponse_destinations :: Lens' DescribeDestinationsResponse (Maybe [Destination])

-- | The response's http status code.
describeDestinationsResponse_httpStatus :: Lens' DescribeDestinationsResponse Int

-- | The name of the log group.
untagLogGroup_logGroupName :: Lens' UntagLogGroup Text

-- | The tag keys. The corresponding tags are removed from the log group.
untagLogGroup_tags :: Lens' UntagLogGroup (NonEmpty Text)

-- | The ID number of the query to stop. To find this ID number, use
--   <tt>DescribeQueries</tt>.
stopQuery_queryId :: Lens' StopQuery Text

-- | This is true if the query was stopped by the <tt>StopQuery</tt>
--   operation.
stopQueryResponse_success :: Lens' StopQueryResponse (Maybe Bool)

-- | The response's http status code.
stopQueryResponse_httpStatus :: Lens' StopQueryResponse Int

-- | The prefix used as the start of the key for every object exported. If
--   you don't specify a value, the default is <tt>exportedlogs</tt>.
createExportTask_destinationPrefix :: Lens' CreateExportTask (Maybe Text)

-- | The name of the export task.
createExportTask_taskName :: Lens' CreateExportTask (Maybe Text)

-- | Export only log streams that match the provided prefix. If you don't
--   specify a value, no prefix filter is applied.
createExportTask_logStreamNamePrefix :: Lens' CreateExportTask (Maybe Text)

-- | The name of the log group.
createExportTask_logGroupName :: Lens' CreateExportTask Text

-- | The start time of the range for the request, expressed as the number
--   of milliseconds after Jan 1, 1970 00:00:00 UTC. Events with a
--   timestamp earlier than this time are not exported.
createExportTask_from :: Lens' CreateExportTask Natural

-- | The end time of the range for the request, expreswatchlogsdocused as
--   the number of milliseconds after Jan 1, 1970 00:00:00 UTC. Events with
--   a timestamp later than this time are not exported.
createExportTask_to :: Lens' CreateExportTask Natural

-- | The name of S3 bucket for the exported log data. The bucket must be in
--   the same Amazon Web Services region.
createExportTask_destination :: Lens' CreateExportTask Text

-- | The ID of the export task.
createExportTaskResponse_taskId :: Lens' CreateExportTaskResponse (Maybe Text)

-- | The response's http status code.
createExportTaskResponse_httpStatus :: Lens' CreateExportTaskResponse Int

-- | A name for the destination.
putDestination_destinationName :: Lens' PutDestination Text

-- | The ARN of an Amazon Kinesis stream to which to deliver matching log
--   events.
putDestination_targetArn :: Lens' PutDestination Text

-- | The ARN of an IAM role that grants CloudWatch Logs permissions to call
--   the Amazon Kinesis <tt>PutRecord</tt> operation on the destination
--   stream.
putDestination_roleArn :: Lens' PutDestination Text

-- | The destination.
putDestinationResponse_destination :: Lens' PutDestinationResponse (Maybe Destination)

-- | The response's http status code.
putDestinationResponse_httpStatus :: Lens' PutDestinationResponse Int

-- | The prefix to match. If you don't specify a value, no prefix filter is
--   applied.
describeSubscriptionFilters_filterNamePrefix :: Lens' DescribeSubscriptionFilters (Maybe Text)

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeSubscriptionFilters_nextToken :: Lens' DescribeSubscriptionFilters (Maybe Text)

-- | The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
describeSubscriptionFilters_limit :: Lens' DescribeSubscriptionFilters (Maybe Natural)

-- | The name of the log group.
describeSubscriptionFilters_logGroupName :: Lens' DescribeSubscriptionFilters Text

-- | The subscription filters.
describeSubscriptionFiltersResponse_subscriptionFilters :: Lens' DescribeSubscriptionFiltersResponse (Maybe [SubscriptionFilter])

-- | Undocumented member.
describeSubscriptionFiltersResponse_nextToken :: Lens' DescribeSubscriptionFiltersResponse (Maybe Text)

-- | The response's http status code.
describeSubscriptionFiltersResponse_httpStatus :: Lens' DescribeSubscriptionFiltersResponse Int

-- | The start of the time range, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC. Events with a timestamp equal to this
--   time or later than this time are included. Events with a timestamp
--   earlier than this time are not included.
getLogEvents_startTime :: Lens' GetLogEvents (Maybe Natural)

-- | If the value is true, the earliest log events are returned first. If
--   the value is false, the latest log events are returned first. The
--   default value is false.
--   
--   If you are using a previous <tt>nextForwardToken</tt> value as the
--   <tt>nextToken</tt> in this operation, you must specify <tt>true</tt>
--   for <tt>startFromHead</tt>.
getLogEvents_startFromHead :: Lens' GetLogEvents (Maybe Bool)

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
getLogEvents_nextToken :: Lens' GetLogEvents (Maybe Text)

-- | The end of the time range, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC. Events with a timestamp equal to or
--   later than this time are not included.
getLogEvents_endTime :: Lens' GetLogEvents (Maybe Natural)

-- | The maximum number of log events returned. If you don't specify a
--   value, the maximum is as many log events as can fit in a response size
--   of 1 MB, up to 10,000 log events.
getLogEvents_limit :: Lens' GetLogEvents (Maybe Natural)

-- | The name of the log group.
getLogEvents_logGroupName :: Lens' GetLogEvents Text

-- | The name of the log stream.
getLogEvents_logStreamName :: Lens' GetLogEvents Text

-- | The token for the next set of items in the backward direction. The
--   token expires after 24 hours. This token is never null. If you have
--   reached the end of the stream, it returns the same token you passed
--   in.
getLogEventsResponse_nextBackwardToken :: Lens' GetLogEventsResponse (Maybe Text)

-- | The token for the next set of items in the forward direction. The
--   token expires after 24 hours. If you have reached the end of the
--   stream, it returns the same token you passed in.
getLogEventsResponse_nextForwardToken :: Lens' GetLogEventsResponse (Maybe Text)

-- | The events.
getLogEventsResponse_events :: Lens' GetLogEventsResponse (Maybe [OutputLogEvent])

-- | The response's http status code.
getLogEventsResponse_httpStatus :: Lens' GetLogEventsResponse Int

-- | The prefix to match.
describeLogGroups_logGroupNamePrefix :: Lens' DescribeLogGroups (Maybe Text)

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeLogGroups_nextToken :: Lens' DescribeLogGroups (Maybe Text)

-- | The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
describeLogGroups_limit :: Lens' DescribeLogGroups (Maybe Natural)

-- | The log groups.
--   
--   If the <tt>retentionInDays</tt> value if not included for a log group,
--   then that log group is set to have its events never expire.
describeLogGroupsResponse_logGroups :: Lens' DescribeLogGroupsResponse (Maybe [LogGroup])

-- | Undocumented member.
describeLogGroupsResponse_nextToken :: Lens' DescribeLogGroupsResponse (Maybe Text)

-- | The response's http status code.
describeLogGroupsResponse_httpStatus :: Lens' DescribeLogGroupsResponse Int

-- | The name of the destination.
deleteDestination_destinationName :: Lens' DeleteDestination Text

-- | The name of the log group.
disassociateKmsKey_logGroupName :: Lens' DisassociateKmsKey Text

-- | The start of the time range, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC. Events with a timestamp before this
--   time are not returned.
filterLogEvents_startTime :: Lens' FilterLogEvents (Maybe Natural)

-- | The token for the next set of events to return. (You received this
--   token from a previous call.)
filterLogEvents_nextToken :: Lens' FilterLogEvents (Maybe Text)

-- | Filters the results to only logs from the log streams in this list.
--   
--   If you specify a value for both <tt>logStreamNamePrefix</tt> and
--   <tt>logStreamNames</tt>, the action returns an
--   <tt>InvalidParameterException</tt> error.
filterLogEvents_logStreamNames :: Lens' FilterLogEvents (Maybe (NonEmpty Text))

-- | Filters the results to include only events from log streams that have
--   names starting with this prefix.
--   
--   If you specify a value for both <tt>logStreamNamePrefix</tt> and
--   <tt>logStreamNames</tt>, but the value for
--   <tt>logStreamNamePrefix</tt> does not match any log stream names
--   specified in <tt>logStreamNames</tt>, the action returns an
--   <tt>InvalidParameterException</tt> error.
filterLogEvents_logStreamNamePrefix :: Lens' FilterLogEvents (Maybe Text)

-- | The end of the time range, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC. Events with a timestamp later than
--   this time are not returned.
filterLogEvents_endTime :: Lens' FilterLogEvents (Maybe Natural)

-- | The maximum number of events to return. The default is 10,000 events.
filterLogEvents_limit :: Lens' FilterLogEvents (Maybe Natural)

-- | The filter pattern to use. For more information, see <a>Filter and
--   Pattern Syntax</a>.
--   
--   If not provided, all the events are matched.
filterLogEvents_filterPattern :: Lens' FilterLogEvents (Maybe Text)

-- | If the value is true, the operation makes a best effort to provide
--   responses that contain events from multiple log streams within the log
--   group, interleaved in a single response. If the value is false, all
--   the matched log events in the first log stream are searched first,
--   then those in the next log stream, and so on. The default is false.
--   
--   <b>Important:</b> Starting on June 17, 2019, this parameter is ignored
--   and the value is assumed to be true. The response from this operation
--   always interleaves events from multiple log streams within a log
--   group.
filterLogEvents_interleaved :: Lens' FilterLogEvents (Maybe Bool)

-- | The name of the log group to search.
filterLogEvents_logGroupName :: Lens' FilterLogEvents Text

-- | <b>IMPORTANT</b> Starting on May 15, 2020, this parameter will be
--   deprecated. This parameter will be an empty list after the deprecation
--   occurs.
--   
--   Indicates which log streams have been searched and whether each has
--   been searched completely.
filterLogEventsResponse_searchedLogStreams :: Lens' FilterLogEventsResponse (Maybe [SearchedLogStream])

-- | The token to use when requesting the next set of items. The token
--   expires after 24 hours.
filterLogEventsResponse_nextToken :: Lens' FilterLogEventsResponse (Maybe Text)

-- | The matched events.
filterLogEventsResponse_events :: Lens' FilterLogEventsResponse (Maybe [FilteredLogEvent])

-- | The response's http status code.
filterLogEventsResponse_httpStatus :: Lens' FilterLogEventsResponse Int

-- | The ID of the query definition that you want to delete. You can use
--   <a>DescribeQueryDefinitions</a> to retrieve the IDs of your saved
--   query definitions.
deleteQueryDefinition_queryDefinitionId :: Lens' DeleteQueryDefinition Text

-- | A value of TRUE indicates that the operation succeeded. FALSE
--   indicates that the operation failed.
deleteQueryDefinitionResponse_success :: Lens' DeleteQueryDefinitionResponse (Maybe Bool)

-- | The response's http status code.
deleteQueryDefinitionResponse_httpStatus :: Lens' DeleteQueryDefinitionResponse Int

-- | Use this parameter to include specific log groups as part of your
--   query definition.
--   
--   If you are updating a query definition and you omit this parameter,
--   then the updated definition will contain no log groups.
putQueryDefinition_logGroupNames :: Lens' PutQueryDefinition (Maybe [Text])

-- | If you are updating a query definition, use this parameter to specify
--   the ID of the query definition that you want to update. You can use
--   <a>DescribeQueryDefinitions</a> to retrieve the IDs of your saved
--   query definitions.
--   
--   If you are creating a query definition, do not specify this parameter.
--   CloudWatch generates a unique ID for the new query definition and
--   include it in the response to this operation.
putQueryDefinition_queryDefinitionId :: Lens' PutQueryDefinition (Maybe Text)

-- | A name for the query definition. If you are saving a lot of query
--   definitions, we recommend that you name them so that you can easily
--   find the ones you want by using the first part of the name as a filter
--   in the <tt>queryDefinitionNamePrefix</tt> parameter of
--   <a>DescribeQueryDefinitions</a>.
putQueryDefinition_name :: Lens' PutQueryDefinition Text

-- | The query string to use for this definition. For more information, see
--   <a>CloudWatch Logs Insights Query Syntax</a>.
putQueryDefinition_queryString :: Lens' PutQueryDefinition Text

-- | The ID of the query definition.
putQueryDefinitionResponse_queryDefinitionId :: Lens' PutQueryDefinitionResponse (Maybe Text)

-- | The response's http status code.
putQueryDefinitionResponse_httpStatus :: Lens' PutQueryDefinitionResponse Int

-- | The name of the log group.
tagLogGroup_logGroupName :: Lens' TagLogGroup Text

-- | The key-value pairs to use for the tags.
tagLogGroup_tags :: Lens' TagLogGroup (HashMap Text Text)

-- | Undocumented member.
describeResourcePolicies_nextToken :: Lens' DescribeResourcePolicies (Maybe Text)

-- | The maximum number of resource policies to be displayed with one call
--   of this API.
describeResourcePolicies_limit :: Lens' DescribeResourcePolicies (Maybe Natural)

-- | The resource policies that exist in this account.
describeResourcePoliciesResponse_resourcePolicies :: Lens' DescribeResourcePoliciesResponse (Maybe [ResourcePolicy])

-- | Undocumented member.
describeResourcePoliciesResponse_nextToken :: Lens' DescribeResourcePoliciesResponse (Maybe Text)

-- | The response's http status code.
describeResourcePoliciesResponse_httpStatus :: Lens' DescribeResourcePoliciesResponse Int

-- | Use this parameter to filter your results to only the query
--   definitions that have names that start with the prefix you specify.
describeQueryDefinitions_queryDefinitionNamePrefix :: Lens' DescribeQueryDefinitions (Maybe Text)

-- | Undocumented member.
describeQueryDefinitions_nextToken :: Lens' DescribeQueryDefinitions (Maybe Text)

-- | Limits the number of returned query definitions to the specified
--   number.
describeQueryDefinitions_maxResults :: Lens' DescribeQueryDefinitions (Maybe Natural)

-- | The list of query definitions that match your request.
describeQueryDefinitionsResponse_queryDefinitions :: Lens' DescribeQueryDefinitionsResponse (Maybe [QueryDefinition])

-- | Undocumented member.
describeQueryDefinitionsResponse_nextToken :: Lens' DescribeQueryDefinitionsResponse (Maybe Text)

-- | The response's http status code.
describeQueryDefinitionsResponse_httpStatus :: Lens' DescribeQueryDefinitionsResponse Int

-- | The name of the log group.
deleteLogStream_logGroupName :: Lens' DeleteLogStream Text

-- | The name of the log stream.
deleteLogStream_logStreamName :: Lens' DeleteLogStream Text

-- | Limits the returned queries to only those that have the specified
--   status. Valid values are <tt>Cancelled</tt>, <tt>Complete</tt>,
--   <tt>Failed</tt>, <tt>Running</tt>, and <tt>Scheduled</tt>.
describeQueries_status :: Lens' DescribeQueries (Maybe QueryStatus)

-- | Limits the returned queries to only those for the specified log group.
describeQueries_logGroupName :: Lens' DescribeQueries (Maybe Text)

-- | Undocumented member.
describeQueries_nextToken :: Lens' DescribeQueries (Maybe Text)

-- | Limits the number of returned queries to the specified number.
describeQueries_maxResults :: Lens' DescribeQueries (Maybe Natural)

-- | The list of queries that match the request.
describeQueriesResponse_queries :: Lens' DescribeQueriesResponse (Maybe [QueryInfo])

-- | Undocumented member.
describeQueriesResponse_nextToken :: Lens' DescribeQueriesResponse (Maybe Text)

-- | The response's http status code.
describeQueriesResponse_httpStatus :: Lens' DescribeQueriesResponse Int

-- | The name of the log group.
createLogStream_logGroupName :: Lens' CreateLogStream Text

-- | The name of the log stream.
createLogStream_logStreamName :: Lens' CreateLogStream Text

-- | The Amazon Resource Name (ARN) of the CMK to use when encrypting log
--   data. For more information, see <a>Amazon Resource Names - Key
--   Management Service</a>.
createLogGroup_kmsKeyId :: Lens' CreateLogGroup (Maybe Text)

-- | The key-value pairs to use for the tags.
--   
--   CloudWatch Logs doesn’t support IAM policies that prevent users from
--   assigning specified tags to log groups using the
--   <tt>aws:Resource/key-name </tt> or <tt>aws:TagKeys</tt> condition
--   keys. For more information about using tags to control access, see
--   <a>Controlling access to Amazon Web Services resources using tags</a>.
createLogGroup_tags :: Lens' CreateLogGroup (Maybe (HashMap Text Text))

-- | The name of the log group.
createLogGroup_logGroupName :: Lens' CreateLogGroup Text

-- | The ID of the export task. Specifying a task ID filters the results to
--   zero or one export tasks.
describeExportTasks_taskId :: Lens' DescribeExportTasks (Maybe Text)

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeExportTasks_nextToken :: Lens' DescribeExportTasks (Maybe Text)

-- | The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
describeExportTasks_limit :: Lens' DescribeExportTasks (Maybe Natural)

-- | The status code of the export task. Specifying a status code filters
--   the results to zero or more export tasks.
describeExportTasks_statusCode :: Lens' DescribeExportTasks (Maybe ExportTaskStatusCode)

-- | Undocumented member.
describeExportTasksResponse_nextToken :: Lens' DescribeExportTasksResponse (Maybe Text)

-- | The export tasks.
describeExportTasksResponse_exportTasks :: Lens' DescribeExportTasksResponse (Maybe [ExportTask])

-- | The response's http status code.
describeExportTasksResponse_httpStatus :: Lens' DescribeExportTasksResponse Int

-- | The ID of the export task.
cancelExportTask_taskId :: Lens' CancelExportTask Text

-- | The method used to distribute log data to the destination. By default,
--   log data is grouped by log stream, but the grouping can be set to
--   random for a more even distribution. This property is only applicable
--   when the destination is an Amazon Kinesis stream.
putSubscriptionFilter_distribution :: Lens' PutSubscriptionFilter (Maybe Distribution)

-- | The ARN of an IAM role that grants CloudWatch Logs permissions to
--   deliver ingested log events to the destination stream. You don't need
--   to provide the ARN when you are working with a logical destination for
--   cross-account delivery.
putSubscriptionFilter_roleArn :: Lens' PutSubscriptionFilter (Maybe Text)

-- | The name of the log group.
putSubscriptionFilter_logGroupName :: Lens' PutSubscriptionFilter Text

-- | A name for the subscription filter. If you are updating an existing
--   filter, you must specify the correct name in <tt>filterName</tt>. To
--   find the name of the filter currently associated with a log group, use
--   <a>DescribeSubscriptionFilters</a>.
putSubscriptionFilter_filterName :: Lens' PutSubscriptionFilter Text

-- | A filter pattern for subscribing to a filtered stream of log events.
putSubscriptionFilter_filterPattern :: Lens' PutSubscriptionFilter Text

-- | The ARN of the destination to deliver matching log events to.
--   Currently, the supported destinations are:
--   
--   <ul>
--   <li>An Amazon Kinesis stream belonging to the same account as the
--   subscription filter, for same-account delivery.</li>
--   <li>A logical destination (specified using an ARN) belonging to a
--   different account, for cross-account delivery.If you are setting up a
--   cross-account subscription, the destination must have an IAM policy
--   associated with it that allows the sender to send logs to the
--   destination. For more information, see
--   <a>PutDestinationPolicy</a>.</li>
--   <li>An Amazon Kinesis Firehose delivery stream belonging to the same
--   account as the subscription filter, for same-account delivery.</li>
--   <li>A Lambda function belonging to the same account as the
--   subscription filter, for same-account delivery.</li>
--   </ul>
putSubscriptionFilter_destinationArn :: Lens' PutSubscriptionFilter Text

-- | The list of log groups to be queried. You can include up to 20 log
--   groups.
--   
--   A <tt>StartQuery</tt> operation must include a <tt>logGroupNames</tt>
--   or a <tt>logGroupName</tt> parameter, but not both.
startQuery_logGroupNames :: Lens' StartQuery (Maybe [Text])

-- | The log group on which to perform the query.
--   
--   A <tt>StartQuery</tt> operation must include a <tt>logGroupNames</tt>
--   or a <tt>logGroupName</tt> parameter, but not both.
startQuery_logGroupName :: Lens' StartQuery (Maybe Text)

-- | The maximum number of log events to return in the query. If the query
--   string uses the <tt>fields</tt> command, only the specified fields and
--   their values are returned. The default is 1000.
startQuery_limit :: Lens' StartQuery (Maybe Natural)

-- | The beginning of the time range to query. The range is inclusive, so
--   the specified start time is included in the query. Specified as epoch
--   time, the number of seconds since January 1, 1970, 00:00:00 UTC.
startQuery_startTime :: Lens' StartQuery Natural

-- | The end of the time range to query. The range is inclusive, so the
--   specified end time is included in the query. Specified as epoch time,
--   the number of seconds since January 1, 1970, 00:00:00 UTC.
startQuery_endTime :: Lens' StartQuery Natural

-- | The query string to use. For more information, see <a>CloudWatch Logs
--   Insights Query Syntax</a>.
startQuery_queryString :: Lens' StartQuery Text

-- | The unique ID of the query.
startQueryResponse_queryId :: Lens' StartQueryResponse (Maybe Text)

-- | The response's http status code.
startQueryResponse_httpStatus :: Lens' StartQueryResponse Int

-- | The name of the log group.
deleteLogGroup_logGroupName :: Lens' DeleteLogGroup Text

-- | The name of the log group.
deleteSubscriptionFilter_logGroupName :: Lens' DeleteSubscriptionFilter Text

-- | The name of the subscription filter.
deleteSubscriptionFilter_filterName :: Lens' DeleteSubscriptionFilter Text

-- | The sequence token obtained from the response of the previous
--   <tt>PutLogEvents</tt> call. An upload in a newly created log stream
--   does not require a sequence token. You can also get the sequence token
--   using <a>DescribeLogStreams</a>. If you call <tt>PutLogEvents</tt>
--   twice within a narrow time period using the same value for
--   <tt>sequenceToken</tt>, both calls might be successful or one might be
--   rejected.
putLogEvents_sequenceToken :: Lens' PutLogEvents (Maybe Text)

-- | The name of the log group.
putLogEvents_logGroupName :: Lens' PutLogEvents Text

-- | The name of the log stream.
putLogEvents_logStreamName :: Lens' PutLogEvents Text

-- | The log events.
putLogEvents_logEvents :: Lens' PutLogEvents (NonEmpty InputLogEvent)

-- | The rejected events.
putLogEventsResponse_rejectedLogEventsInfo :: Lens' PutLogEventsResponse (Maybe RejectedLogEventsInfo)

-- | The next sequence token.
putLogEventsResponse_nextSequenceToken :: Lens' PutLogEventsResponse (Maybe Text)

-- | The response's http status code.
putLogEventsResponse_httpStatus :: Lens' PutLogEventsResponse Int

-- | The prefix to match. CloudWatch Logs uses the value you set here only
--   if you also include the <tt>logGroupName</tt> parameter in your
--   request.
describeMetricFilters_filterNamePrefix :: Lens' DescribeMetricFilters (Maybe Text)

-- | Filters results to include only those with the specified metric name.
--   If you include this parameter in your request, you must also include
--   the <tt>metricNamespace</tt> parameter.
describeMetricFilters_metricName :: Lens' DescribeMetricFilters (Maybe Text)

-- | The name of the log group.
describeMetricFilters_logGroupName :: Lens' DescribeMetricFilters (Maybe Text)

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeMetricFilters_nextToken :: Lens' DescribeMetricFilters (Maybe Text)

-- | Filters results to include only those in the specified namespace. If
--   you include this parameter in your request, you must also include the
--   <tt>metricName</tt> parameter.
describeMetricFilters_metricNamespace :: Lens' DescribeMetricFilters (Maybe Text)

-- | The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
describeMetricFilters_limit :: Lens' DescribeMetricFilters (Maybe Natural)

-- | Undocumented member.
describeMetricFiltersResponse_nextToken :: Lens' DescribeMetricFiltersResponse (Maybe Text)

-- | The metric filters.
describeMetricFiltersResponse_metricFilters :: Lens' DescribeMetricFiltersResponse (Maybe [MetricFilter])

-- | The response's http status code.
describeMetricFiltersResponse_httpStatus :: Lens' DescribeMetricFiltersResponse Int

-- | Undocumented member.
testMetricFilter_filterPattern :: Lens' TestMetricFilter Text

-- | The log event messages to test.
testMetricFilter_logEventMessages :: Lens' TestMetricFilter (NonEmpty Text)

-- | The matched events.
testMetricFilterResponse_matches :: Lens' TestMetricFilterResponse (Maybe [MetricFilterMatchRecord])

-- | The response's http status code.
testMetricFilterResponse_httpStatus :: Lens' TestMetricFilterResponse Int

-- | A name for an existing destination.
putDestinationPolicy_destinationName :: Lens' PutDestinationPolicy Text

-- | An IAM policy document that authorizes cross-account users to deliver
--   their log events to the associated destination. This can be up to 5120
--   bytes.
putDestinationPolicy_accessPolicy :: Lens' PutDestinationPolicy Text

-- | The name of the log group.
putMetricFilter_logGroupName :: Lens' PutMetricFilter Text

-- | A name for the metric filter.
putMetricFilter_filterName :: Lens' PutMetricFilter Text

-- | A filter pattern for extracting metric data out of ingested log
--   events.
putMetricFilter_filterPattern :: Lens' PutMetricFilter Text

-- | A collection of information that defines how metric data gets emitted.
putMetricFilter_metricTransformations :: Lens' PutMetricFilter (NonEmpty MetricTransformation)

-- | The name of the log group.
deleteRetentionPolicy_logGroupName :: Lens' DeleteRetentionPolicy Text

-- | The name of the log group.
deleteMetricFilter_logGroupName :: Lens' DeleteMetricFilter Text

-- | The name of the metric filter.
deleteMetricFilter_filterName :: Lens' DeleteMetricFilter Text

-- | The name of the log group.
putRetentionPolicy_logGroupName :: Lens' PutRetentionPolicy Text

-- | Undocumented member.
putRetentionPolicy_retentionInDays :: Lens' PutRetentionPolicy Int

-- | The name of the log group.
listTagsLogGroup_logGroupName :: Lens' ListTagsLogGroup Text

-- | The tags for the log group.
listTagsLogGroupResponse_tags :: Lens' ListTagsLogGroupResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsLogGroupResponse_httpStatus :: Lens' ListTagsLogGroupResponse Int

-- | Name of the new policy. This parameter is required.
putResourcePolicy_policyName :: Lens' PutResourcePolicy (Maybe Text)

-- | Details of the new policy, including the identity of the principal
--   that is enabled to put logs to this account. This is formatted as a
--   JSON string. This parameter is required.
--   
--   The following example creates a resource policy enabling the Route 53
--   service to put DNS query logs in to the specified log group. Replace
--   <tt>"logArn"</tt> with the ARN of your CloudWatch Logs resource, such
--   as a log group or log stream.
--   
--   CloudWatch Logs also supports <a>aws:SourceArn</a> and
--   <a>aws:SourceAccount</a> condition context keys.
--   
--   In the example resource policy, you would replace the value of
--   <tt>SourceArn</tt> with the resource making the call from Route 53 to
--   CloudWatch Logs and replace the value of <tt>SourceAccount</tt> with
--   the Amazon Web Services account ID making that call.
--   
--   <pre>
--   { "Version": "2012-10-17", "Statement": [ { "Sid": "Route53LogsToCloudWatchLogs", "Effect": "Allow", "Principal": { "Service": [ "route53.amazonaws.com" ] }, "Action": "logs:PutLogEvents", "Resource": "logArn", "Condition": { "ArnLike": { "aws:SourceArn": "myRoute53ResourceArn" }, "StringEquals": { "aws:SourceAccount": "myAwsAccountId" } } } ] }
--   </pre>
putResourcePolicy_policyDocument :: Lens' PutResourcePolicy (Maybe Text)

-- | The new policy.
putResourcePolicyResponse_resourcePolicy :: Lens' PutResourcePolicyResponse (Maybe ResourcePolicy)

-- | The response's http status code.
putResourcePolicyResponse_httpStatus :: Lens' PutResourcePolicyResponse Int

-- | The name of the policy to be revoked. This parameter is required.
deleteResourcePolicy_policyName :: Lens' DeleteResourcePolicy (Maybe Text)

-- | The name of the log group.
associateKmsKey_logGroupName :: Lens' AssociateKmsKey Text

-- | The Amazon Resource Name (ARN) of the CMK to use when encrypting log
--   data. This must be a symmetric CMK. For more information, see
--   <a>Amazon Resource Names - Key Management Service</a> and <a>Using
--   Symmetric and Asymmetric Keys</a>.
associateKmsKey_kmsKeyId :: Lens' AssociateKmsKey Text

-- | The ID number of the query.
getQueryResults_queryId :: Lens' GetQueryResults Text

-- | The status of the most recent running of the query. Possible values
--   are <tt>Cancelled</tt>, <tt>Complete</tt>, <tt>Failed</tt>,
--   <tt>Running</tt>, <tt>Scheduled</tt>, <tt>Timeout</tt>, and
--   <tt>Unknown</tt>.
--   
--   Queries time out after 15 minutes of execution. To avoid having your
--   queries time out, reduce the time range being searched or partition
--   your query into a number of queries.
getQueryResultsResponse_status :: Lens' GetQueryResultsResponse (Maybe QueryStatus)

-- | The log events that matched the query criteria during the most recent
--   time it ran.
--   
--   The <tt>results</tt> value is an array of arrays. Each log event is
--   one object in the top-level array. Each of these log event objects is
--   an array of <tt>field</tt>/<tt>value</tt> pairs.
getQueryResultsResponse_results :: Lens' GetQueryResultsResponse (Maybe [[ResultField]])

-- | Includes the number of log events scanned by the query, the number of
--   log events that matched the query criteria, and the total number of
--   bytes in the log events that were scanned. These values reflect the
--   full raw results of the query.
getQueryResultsResponse_statistics :: Lens' GetQueryResultsResponse (Maybe QueryStatistics)

-- | The response's http status code.
getQueryResultsResponse_httpStatus :: Lens' GetQueryResultsResponse Int

-- | If the value is <tt>LogStreamName</tt>, the results are ordered by log
--   stream name. If the value is <tt>LastEventTime</tt>, the results are
--   ordered by the event time. The default value is
--   <tt>LogStreamName</tt>.
--   
--   If you order the results by event time, you cannot specify the
--   <tt>logStreamNamePrefix</tt> parameter.
--   
--   <tt>lastEventTimestamp</tt> represents the time of the most recent log
--   event in the log stream in CloudWatch Logs. This number is expressed
--   as the number of milliseconds after Jan 1, 1970 00:00:00 UTC.
--   <tt>lastEventTimestamp</tt> updates on an eventual consistency basis.
--   It typically updates in less than an hour from ingestion, but in rare
--   situations might take longer.
describeLogStreams_orderBy :: Lens' DescribeLogStreams (Maybe OrderBy)

-- | If the value is true, results are returned in descending order. If the
--   value is to false, results are returned in ascending order. The
--   default value is false.
describeLogStreams_descending :: Lens' DescribeLogStreams (Maybe Bool)

-- | The token for the next set of items to return. (You received this
--   token from a previous call.)
describeLogStreams_nextToken :: Lens' DescribeLogStreams (Maybe Text)

-- | The prefix to match.
--   
--   If <tt>orderBy</tt> is <tt>LastEventTime</tt>, you cannot specify this
--   parameter.
describeLogStreams_logStreamNamePrefix :: Lens' DescribeLogStreams (Maybe Text)

-- | The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
describeLogStreams_limit :: Lens' DescribeLogStreams (Maybe Natural)

-- | The name of the log group.
describeLogStreams_logGroupName :: Lens' DescribeLogStreams Text

-- | Undocumented member.
describeLogStreamsResponse_nextToken :: Lens' DescribeLogStreamsResponse (Maybe Text)

-- | The log streams.
describeLogStreamsResponse_logStreams :: Lens' DescribeLogStreamsResponse (Maybe [LogStream])

-- | The response's http status code.
describeLogStreamsResponse_httpStatus :: Lens' DescribeLogStreamsResponse Int

-- | The Amazon Resource Name (ARN) of the physical target where the log
--   events are delivered (for example, a Kinesis stream).
destination_targetArn :: Lens' Destination (Maybe Text)

-- | The creation time of the destination, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
destination_creationTime :: Lens' Destination (Maybe Natural)

-- | The ARN of this destination.
destination_arn :: Lens' Destination (Maybe Text)

-- | An IAM policy document that governs which Amazon Web Services accounts
--   can create subscription filters against this destination.
destination_accessPolicy :: Lens' Destination (Maybe Text)

-- | The name of the destination.
destination_destinationName :: Lens' Destination (Maybe Text)

-- | A role for impersonation, used when delivering log events to the
--   target.
destination_roleArn :: Lens' Destination (Maybe Text)

-- | The prefix that was used as the start of Amazon S3 key for every
--   object exported.
exportTask_destinationPrefix :: Lens' ExportTask (Maybe Text)

-- | The name of the S3 bucket to which the log data was exported.
exportTask_destination :: Lens' ExportTask (Maybe Text)

-- | The status of the export task.
exportTask_status :: Lens' ExportTask (Maybe ExportTaskStatus)

-- | The name of the export task.
exportTask_taskName :: Lens' ExportTask (Maybe Text)

-- | The ID of the export task.
exportTask_taskId :: Lens' ExportTask (Maybe Text)

-- | The end time, expressed as the number of milliseconds after Jan 1,
--   1970 00:00:00 UTC. Events with a timestamp later than this time are
--   not exported.
exportTask_to :: Lens' ExportTask (Maybe Natural)

-- | The start time, expressed as the number of milliseconds after Jan 1,
--   1970 00:00:00 UTC. Events with a timestamp before this time are not
--   exported.
exportTask_from :: Lens' ExportTask (Maybe Natural)

-- | The name of the log group from which logs data was exported.
exportTask_logGroupName :: Lens' ExportTask (Maybe Text)

-- | Execution information about the export task.
exportTask_executionInfo :: Lens' ExportTask (Maybe ExportTaskExecutionInfo)

-- | The creation time of the export task, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
exportTaskExecutionInfo_creationTime :: Lens' ExportTaskExecutionInfo (Maybe Natural)

-- | The completion time of the export task, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
exportTaskExecutionInfo_completionTime :: Lens' ExportTaskExecutionInfo (Maybe Natural)

-- | The status code of the export task.
exportTaskStatus_code :: Lens' ExportTaskStatus (Maybe ExportTaskStatusCode)

-- | The status message related to the status code.
exportTaskStatus_message :: Lens' ExportTaskStatus (Maybe Text)

-- | The time the event was ingested, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
filteredLogEvent_ingestionTime :: Lens' FilteredLogEvent (Maybe Natural)

-- | The name of the log stream to which this event belongs.
filteredLogEvent_logStreamName :: Lens' FilteredLogEvent (Maybe Text)

-- | The data contained in the log event.
filteredLogEvent_message :: Lens' FilteredLogEvent (Maybe Text)

-- | The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
filteredLogEvent_timestamp :: Lens' FilteredLogEvent (Maybe Natural)

-- | The ID of the event.
filteredLogEvent_eventId :: Lens' FilteredLogEvent (Maybe Text)

-- | The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
inputLogEvent_timestamp :: Lens' InputLogEvent Natural

-- | The raw event message.
inputLogEvent_message :: Lens' InputLogEvent Text

-- | The creation time of the log group, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
logGroup_creationTime :: Lens' LogGroup (Maybe Natural)

-- | The number of metric filters.
logGroup_metricFilterCount :: Lens' LogGroup (Maybe Int)

-- | The Amazon Resource Name (ARN) of the log group.
logGroup_arn :: Lens' LogGroup (Maybe Text)

-- | The name of the log group.
logGroup_logGroupName :: Lens' LogGroup (Maybe Text)

-- | Undocumented member.
logGroup_retentionInDays :: Lens' LogGroup (Maybe Int)

-- | The Amazon Resource Name (ARN) of the CMK to use when encrypting log
--   data.
logGroup_kmsKeyId :: Lens' LogGroup (Maybe Text)

-- | The number of bytes stored.
logGroup_storedBytes :: Lens' LogGroup (Maybe Natural)

-- | The percentage of log events queried that contained the field.
logGroupField_percent :: Lens' LogGroupField (Maybe Natural)

-- | The name of a log field.
logGroupField_name :: Lens' LogGroupField (Maybe Text)

-- | The creation time of the stream, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
logStream_creationTime :: Lens' LogStream (Maybe Natural)

-- | The sequence token.
logStream_uploadSequenceToken :: Lens' LogStream (Maybe Text)

-- | The Amazon Resource Name (ARN) of the log stream.
logStream_arn :: Lens' LogStream (Maybe Text)

-- | The time of the first event, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
logStream_firstEventTimestamp :: Lens' LogStream (Maybe Natural)

-- | The name of the log stream.
logStream_logStreamName :: Lens' LogStream (Maybe Text)

-- | The number of bytes stored.
--   
--   <b>Important:</b> On June 17, 2019, this parameter was deprecated for
--   log streams, and is always reported as zero. This change applies only
--   to log streams. The <tt>storedBytes</tt> parameter for log groups is
--   not affected.
logStream_storedBytes :: Lens' LogStream (Maybe Natural)

-- | The ingestion time, expressed as the number of milliseconds after Jan
--   1, 1970 00:00:00 UTC.
logStream_lastIngestionTime :: Lens' LogStream (Maybe Natural)

-- | The time of the most recent log event in the log stream in CloudWatch
--   Logs. This number is expressed as the number of milliseconds after Jan
--   1, 1970 00:00:00 UTC. The <tt>lastEventTime</tt> value updates on an
--   eventual consistency basis. It typically updates in less than an hour
--   from ingestion, but in rare situations might take longer.
logStream_lastEventTimestamp :: Lens' LogStream (Maybe Natural)

-- | The creation time of the metric filter, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
metricFilter_creationTime :: Lens' MetricFilter (Maybe Natural)

-- | The name of the metric filter.
metricFilter_filterName :: Lens' MetricFilter (Maybe Text)

-- | The name of the log group.
metricFilter_logGroupName :: Lens' MetricFilter (Maybe Text)

-- | Undocumented member.
metricFilter_filterPattern :: Lens' MetricFilter (Maybe Text)

-- | The metric transformations.
metricFilter_metricTransformations :: Lens' MetricFilter (Maybe (NonEmpty MetricTransformation))

-- | The values extracted from the event data by the filter.
metricFilterMatchRecord_extractedValues :: Lens' MetricFilterMatchRecord (Maybe (HashMap Text Text))

-- | The event number.
metricFilterMatchRecord_eventNumber :: Lens' MetricFilterMatchRecord (Maybe Integer)

-- | The raw event data.
metricFilterMatchRecord_eventMessage :: Lens' MetricFilterMatchRecord (Maybe Text)

-- | (Optional) The value to emit when a filter pattern does not match a
--   log event. This value can be null.
metricTransformation_defaultValue :: Lens' MetricTransformation (Maybe Double)

-- | The fields to use as dimensions for the metric. One metric filter can
--   include as many as three dimensions.
--   
--   Metrics extracted from log events are charged as custom metrics. To
--   prevent unexpected high charges, do not specify high-cardinality
--   fields such as <tt>IPAddress</tt> or <tt>requestID</tt> as dimensions.
--   Each different value found for a dimension is treated as a separate
--   metric and accrues charges as a separate custom metric.
--   
--   To help prevent accidental high charges, Amazon disables a metric
--   filter if it generates 1000 different name/value pairs for the
--   dimensions that you have specified within a certain amount of time.
--   
--   You can also set up a billing alarm to alert you if your charges are
--   higher than expected. For more information, see <a>Creating a Billing
--   Alarm to Monitor Your Estimated Amazon Web Services Charges</a>.
metricTransformation_dimensions :: Lens' MetricTransformation (Maybe (HashMap Text Text))

-- | The unit to assign to the metric. If you omit this, the unit is set as
--   <tt>None</tt>.
metricTransformation_unit :: Lens' MetricTransformation (Maybe StandardUnit)

-- | The name of the CloudWatch metric.
metricTransformation_metricName :: Lens' MetricTransformation Text

-- | A custom namespace to contain your metric in CloudWatch. Use
--   namespaces to group together metrics that are similar. For more
--   information, see <a>Namespaces</a>.
metricTransformation_metricNamespace :: Lens' MetricTransformation Text

-- | The value to publish to the CloudWatch metric when a filter pattern
--   matches a log event.
metricTransformation_metricValue :: Lens' MetricTransformation Text

-- | The time the event was ingested, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
outputLogEvent_ingestionTime :: Lens' OutputLogEvent (Maybe Natural)

-- | The data contained in the log event.
outputLogEvent_message :: Lens' OutputLogEvent (Maybe Text)

-- | The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
outputLogEvent_timestamp :: Lens' OutputLogEvent (Maybe Natural)

-- | If this query definition contains a list of log groups that it is
--   limited to, that list appears here.
queryDefinition_logGroupNames :: Lens' QueryDefinition (Maybe [Text])

-- | The unique ID of the query definition.
queryDefinition_queryDefinitionId :: Lens' QueryDefinition (Maybe Text)

-- | The name of the query definition.
queryDefinition_name :: Lens' QueryDefinition (Maybe Text)

-- | The query string to use for this definition. For more information, see
--   <a>CloudWatch Logs Insights Query Syntax</a>.
queryDefinition_queryString :: Lens' QueryDefinition (Maybe Text)

-- | The date that the query definition was most recently modified.
queryDefinition_lastModified :: Lens' QueryDefinition (Maybe Natural)

-- | The status of this query. Possible values are <tt>Cancelled</tt>,
--   <tt>Complete</tt>, <tt>Failed</tt>, <tt>Running</tt>,
--   <tt>Scheduled</tt>, and <tt>Unknown</tt>.
queryInfo_status :: Lens' QueryInfo (Maybe QueryStatus)

-- | The unique ID number of this query.
queryInfo_queryId :: Lens' QueryInfo (Maybe Text)

-- | The name of the log group scanned by this query.
queryInfo_logGroupName :: Lens' QueryInfo (Maybe Text)

-- | The query string used in this query.
queryInfo_queryString :: Lens' QueryInfo (Maybe Text)

-- | The date and time that this query was created.
queryInfo_createTime :: Lens' QueryInfo (Maybe Natural)

-- | The total number of log events scanned during the query.
queryStatistics_recordsScanned :: Lens' QueryStatistics (Maybe Double)

-- | The total number of bytes in the log events scanned during the query.
queryStatistics_bytesScanned :: Lens' QueryStatistics (Maybe Double)

-- | The number of log events that matched the query string.
queryStatistics_recordsMatched :: Lens' QueryStatistics (Maybe Double)

-- | The log events that are too old.
rejectedLogEventsInfo_tooOldLogEventEndIndex :: Lens' RejectedLogEventsInfo (Maybe Int)

-- | The log events that are too new.
rejectedLogEventsInfo_tooNewLogEventStartIndex :: Lens' RejectedLogEventsInfo (Maybe Int)

-- | The expired log events.
rejectedLogEventsInfo_expiredLogEventEndIndex :: Lens' RejectedLogEventsInfo (Maybe Int)

-- | The name of the resource policy.
resourcePolicy_policyName :: Lens' ResourcePolicy (Maybe Text)

-- | The details of the policy.
resourcePolicy_policyDocument :: Lens' ResourcePolicy (Maybe Text)

-- | Timestamp showing when this policy was last updated, expressed as the
--   number of milliseconds after Jan 1, 1970 00:00:00 UTC.
resourcePolicy_lastUpdatedTime :: Lens' ResourcePolicy (Maybe Natural)

-- | The log event field.
resultField_field :: Lens' ResultField (Maybe Text)

-- | The value of this field.
resultField_value :: Lens' ResultField (Maybe Text)

-- | The name of the log stream.
searchedLogStream_logStreamName :: Lens' SearchedLogStream (Maybe Text)

-- | Indicates whether all the events in this log stream were searched.
searchedLogStream_searchedCompletely :: Lens' SearchedLogStream (Maybe Bool)

-- | The creation time of the subscription filter, expressed as the number
--   of milliseconds after Jan 1, 1970 00:00:00 UTC.
subscriptionFilter_creationTime :: Lens' SubscriptionFilter (Maybe Natural)

-- | The name of the subscription filter.
subscriptionFilter_filterName :: Lens' SubscriptionFilter (Maybe Text)

-- | Undocumented member.
subscriptionFilter_distribution :: Lens' SubscriptionFilter (Maybe Distribution)

-- | The Amazon Resource Name (ARN) of the destination.
subscriptionFilter_destinationArn :: Lens' SubscriptionFilter (Maybe Text)

-- | The name of the log group.
subscriptionFilter_logGroupName :: Lens' SubscriptionFilter (Maybe Text)

-- | Undocumented member.
subscriptionFilter_filterPattern :: Lens' SubscriptionFilter (Maybe Text)

subscriptionFilter_roleArn :: Lens' SubscriptionFilter (Maybe Text)


module Network.AWS.CloudWatchLogs.Waiters


-- | Derived from API version <tt>2014-03-28</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   You can use Amazon CloudWatch Logs to monitor, store, and access your
--   log files from EC2 instances, CloudTrail, and other sources. You can
--   then retrieve the associated log data from CloudWatch Logs using the
--   CloudWatch console, CloudWatch Logs commands in the Amazon Web
--   Services CLI, CloudWatch Logs API, or CloudWatch Logs SDK.
--   
--   You can use CloudWatch Logs to:
--   
--   <ul>
--   <li><b>Monitor logs from EC2 instances in real-time</b>: You can use
--   CloudWatch Logs to monitor applications and systems using log data.
--   For example, CloudWatch Logs can track the number of errors that occur
--   in your application logs and send you a notification whenever the rate
--   of errors exceeds a threshold that you specify. CloudWatch Logs uses
--   your log data for monitoring so no code changes are required. For
--   example, you can monitor application logs for specific literal terms
--   (such as "NullReferenceException") or count the number of occurrences
--   of a literal term at a particular position in log data (such as "404"
--   status codes in an Apache access log). When the term you are searching
--   for is found, CloudWatch Logs reports the data to a CloudWatch metric
--   that you specify.</li>
--   <li><b>Monitor CloudTrail logged events</b>: You can create alarms in
--   CloudWatch and receive notifications of particular API activity as
--   captured by CloudTrail. You can use the notification to perform
--   troubleshooting.</li>
--   <li><b>Archive log data</b>: You can use CloudWatch Logs to store your
--   log data in highly durable storage. You can change the log retention
--   setting so that any log events older than this setting are
--   automatically deleted. The CloudWatch Logs agent makes it easy to
--   quickly send both rotated and non-rotated log data off of a host and
--   into the log service. You can then access the raw log data when you
--   need it.</li>
--   </ul>
module Network.AWS.CloudWatchLogs

-- | API version <tt>2014-03-28</tt> of the Amazon CloudWatch Logs SDK
--   configuration.
defaultService :: Service

-- | A parameter is specified incorrectly.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The sequence token is not valid. You can get the correct sequence
--   token in the <tt>expectedSequenceToken</tt> field in the
--   <tt>InvalidSequenceTokenException</tt> message.
_InvalidSequenceTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The most likely cause is an invalid Amazon Web Services access key ID
--   or secret key.
_UnrecognizedClientException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Multiple requests to update the same resource were in conflict.
_OperationAbortedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The query string is not valid. Details about this error are displayed
--   in a <tt>QueryCompileError</tt> object. For more information, see
--   <a>QueryCompileError</a>.
--   
--   For more information about valid query syntax, see <a>CloudWatch Logs
--   Insights Query Syntax</a>.
_MalformedQueryException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service cannot complete the request.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The event was already logged.
_DataAlreadyAcceptedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation is not valid on the specified resource.
_InvalidOperationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource does not exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the maximum number of resources that can be created.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newGetLogGroupFields</a> smart constructor.
data GetLogGroupFields
GetLogGroupFields' :: Maybe Natural -> Text -> GetLogGroupFields

-- | Create a value of <a>GetLogGroupFields</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:time:GetLogGroupFields'</a>, <a>getLogGroupFields_time</a> -
--   The time to set as the center of the query. If you specify
--   <tt>time</tt>, the 15 minutes before this time are queries. If you
--   omit <tt>time</tt> the 8 minutes before and 8 minutes after this time
--   are searched.
--   
--   The <tt>time</tt> value is specified as epoch time, the number of
--   seconds since January 1, 1970, 00:00:00 UTC.
--   
--   <a>$sel:logGroupName:GetLogGroupFields'</a>,
--   <a>getLogGroupFields_logGroupName</a> - The name of the log group to
--   search.
newGetLogGroupFields :: Text -> GetLogGroupFields

-- | <i>See:</i> <a>newGetLogGroupFieldsResponse</a> smart constructor.
data GetLogGroupFieldsResponse
GetLogGroupFieldsResponse' :: Maybe [LogGroupField] -> Int -> GetLogGroupFieldsResponse

-- | Create a value of <a>GetLogGroupFieldsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupFields:GetLogGroupFieldsResponse'</a>,
--   <a>getLogGroupFieldsResponse_logGroupFields</a> - The array of fields
--   found in the query. Each object in the array contains the name of the
--   field, along with the percentage of time it appeared in the log events
--   that were queried.
--   
--   <a>$sel:httpStatus:GetLogGroupFieldsResponse'</a>,
--   <a>getLogGroupFieldsResponse_httpStatus</a> - The response's http
--   status code.
newGetLogGroupFieldsResponse :: Int -> GetLogGroupFieldsResponse

-- | <i>See:</i> <a>newGetLogRecord</a> smart constructor.
data GetLogRecord
GetLogRecord' :: Text -> GetLogRecord

-- | Create a value of <a>GetLogRecord</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logRecordPointer:GetLogRecord'</a>,
--   <a>getLogRecord_logRecordPointer</a> - The pointer corresponding to
--   the log event record you want to retrieve. You get this from the
--   response of a <tt>GetQueryResults</tt> operation. In that response,
--   the value of the <tt>@ptr</tt> field for a log event is the value to
--   use as <tt>logRecordPointer</tt> to retrieve that complete log event
--   record.
newGetLogRecord :: Text -> GetLogRecord

-- | <i>See:</i> <a>newGetLogRecordResponse</a> smart constructor.
data GetLogRecordResponse
GetLogRecordResponse' :: Maybe (HashMap Text Text) -> Int -> GetLogRecordResponse

-- | Create a value of <a>GetLogRecordResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logRecord:GetLogRecordResponse'</a>,
--   <a>getLogRecordResponse_logRecord</a> - The requested log event, as a
--   JSON string.
--   
--   <a>$sel:httpStatus:GetLogRecordResponse'</a>,
--   <a>getLogRecordResponse_httpStatus</a> - The response's http status
--   code.
newGetLogRecordResponse :: Int -> GetLogRecordResponse

-- | <i>See:</i> <a>newDescribeDestinations</a> smart constructor.
data DescribeDestinations
DescribeDestinations' :: Maybe Text -> Maybe Natural -> Maybe Text -> DescribeDestinations

-- | Create a value of <a>DescribeDestinations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDestinations'</a>,
--   <a>describeDestinations_nextToken</a> - The token for the next set of
--   items to return. (You received this token from a previous call.)
--   
--   <a>$sel:limit:DescribeDestinations'</a>,
--   <a>describeDestinations_limit</a> - The maximum number of items
--   returned. If you don't specify a value, the default is up to 50 items.
--   
--   <a>$sel:destinationNamePrefix:DescribeDestinations'</a>,
--   <a>describeDestinations_destinationNamePrefix</a> - The prefix to
--   match. If you don't specify a value, no prefix filter is applied.
newDescribeDestinations :: DescribeDestinations

-- | <i>See:</i> <a>newDescribeDestinationsResponse</a> smart constructor.
data DescribeDestinationsResponse
DescribeDestinationsResponse' :: Maybe Text -> Maybe [Destination] -> Int -> DescribeDestinationsResponse

-- | Create a value of <a>DescribeDestinationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDestinations'</a>,
--   <a>describeDestinationsResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:destinations:DescribeDestinationsResponse'</a>,
--   <a>describeDestinationsResponse_destinations</a> - The destinations.
--   
--   <a>$sel:httpStatus:DescribeDestinationsResponse'</a>,
--   <a>describeDestinationsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeDestinationsResponse :: Int -> DescribeDestinationsResponse

-- | <i>See:</i> <a>newUntagLogGroup</a> smart constructor.
data UntagLogGroup
UntagLogGroup' :: Text -> NonEmpty Text -> UntagLogGroup

-- | Create a value of <a>UntagLogGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:UntagLogGroup'</a>,
--   <a>untagLogGroup_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:tags:UntagLogGroup'</a>, <a>untagLogGroup_tags</a> - The tag
--   keys. The corresponding tags are removed from the log group.
newUntagLogGroup :: Text -> NonEmpty Text -> UntagLogGroup

-- | <i>See:</i> <a>newUntagLogGroupResponse</a> smart constructor.
data UntagLogGroupResponse
UntagLogGroupResponse' :: UntagLogGroupResponse

-- | Create a value of <a>UntagLogGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagLogGroupResponse :: UntagLogGroupResponse

-- | <i>See:</i> <a>newStopQuery</a> smart constructor.
data StopQuery
StopQuery' :: Text -> StopQuery

-- | Create a value of <a>StopQuery</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryId:StopQuery'</a>, <a>stopQuery_queryId</a> - The ID
--   number of the query to stop. To find this ID number, use
--   <tt>DescribeQueries</tt>.
newStopQuery :: Text -> StopQuery

-- | <i>See:</i> <a>newStopQueryResponse</a> smart constructor.
data StopQueryResponse
StopQueryResponse' :: Maybe Bool -> Int -> StopQueryResponse

-- | Create a value of <a>StopQueryResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:success:StopQueryResponse'</a>,
--   <a>stopQueryResponse_success</a> - This is true if the query was
--   stopped by the <tt>StopQuery</tt> operation.
--   
--   <a>$sel:httpStatus:StopQueryResponse'</a>,
--   <a>stopQueryResponse_httpStatus</a> - The response's http status code.
newStopQueryResponse :: Int -> StopQueryResponse

-- | <i>See:</i> <a>newCreateExportTask</a> smart constructor.
data CreateExportTask
CreateExportTask' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> Natural -> Natural -> Text -> CreateExportTask

-- | Create a value of <a>CreateExportTask</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationPrefix:CreateExportTask'</a>,
--   <a>createExportTask_destinationPrefix</a> - The prefix used as the
--   start of the key for every object exported. If you don't specify a
--   value, the default is <tt>exportedlogs</tt>.
--   
--   <a>$sel:taskName:CreateExportTask'</a>,
--   <a>createExportTask_taskName</a> - The name of the export task.
--   
--   <a>$sel:logStreamNamePrefix:CreateExportTask'</a>,
--   <a>createExportTask_logStreamNamePrefix</a> - Export only log streams
--   that match the provided prefix. If you don't specify a value, no
--   prefix filter is applied.
--   
--   <a>$sel:logGroupName:CreateExportTask'</a>,
--   <a>createExportTask_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:from:CreateExportTask'</a>, <a>createExportTask_from</a> - The
--   start time of the range for the request, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC. Events with a timestamp
--   earlier than this time are not exported.
--   
--   <a>$sel:to:CreateExportTask'</a>, <a>createExportTask_to</a> - The end
--   time of the range for the request, expreswatchlogsdocused as the
--   number of milliseconds after Jan 1, 1970 00:00:00 UTC. Events with a
--   timestamp later than this time are not exported.
--   
--   <a>$sel:destination:CreateExportTask'</a>,
--   <a>createExportTask_destination</a> - The name of S3 bucket for the
--   exported log data. The bucket must be in the same Amazon Web Services
--   region.
newCreateExportTask :: Text -> Natural -> Natural -> Text -> CreateExportTask

-- | <i>See:</i> <a>newCreateExportTaskResponse</a> smart constructor.
data CreateExportTaskResponse
CreateExportTaskResponse' :: Maybe Text -> Int -> CreateExportTaskResponse

-- | Create a value of <a>CreateExportTaskResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskId:CreateExportTaskResponse'</a>,
--   <a>createExportTaskResponse_taskId</a> - The ID of the export task.
--   
--   <a>$sel:httpStatus:CreateExportTaskResponse'</a>,
--   <a>createExportTaskResponse_httpStatus</a> - The response's http
--   status code.
newCreateExportTaskResponse :: Int -> CreateExportTaskResponse

-- | <i>See:</i> <a>newPutDestination</a> smart constructor.
data PutDestination
PutDestination' :: Text -> Text -> Text -> PutDestination

-- | Create a value of <a>PutDestination</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationName:PutDestination'</a>,
--   <a>putDestination_destinationName</a> - A name for the destination.
--   
--   <a>$sel:targetArn:PutDestination'</a>, <a>putDestination_targetArn</a>
--   - The ARN of an Amazon Kinesis stream to which to deliver matching log
--   events.
--   
--   <a>$sel:roleArn:PutDestination'</a>, <a>putDestination_roleArn</a> -
--   The ARN of an IAM role that grants CloudWatch Logs permissions to call
--   the Amazon Kinesis <tt>PutRecord</tt> operation on the destination
--   stream.
newPutDestination :: Text -> Text -> Text -> PutDestination

-- | <i>See:</i> <a>newPutDestinationResponse</a> smart constructor.
data PutDestinationResponse
PutDestinationResponse' :: Maybe Destination -> Int -> PutDestinationResponse

-- | Create a value of <a>PutDestinationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:PutDestinationResponse'</a>,
--   <a>putDestinationResponse_destination</a> - The destination.
--   
--   <a>$sel:httpStatus:PutDestinationResponse'</a>,
--   <a>putDestinationResponse_httpStatus</a> - The response's http status
--   code.
newPutDestinationResponse :: Int -> PutDestinationResponse

-- | <i>See:</i> <a>newDescribeSubscriptionFilters</a> smart constructor.
data DescribeSubscriptionFilters
DescribeSubscriptionFilters' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> DescribeSubscriptionFilters

-- | Create a value of <a>DescribeSubscriptionFilters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterNamePrefix:DescribeSubscriptionFilters'</a>,
--   <a>describeSubscriptionFilters_filterNamePrefix</a> - The prefix to
--   match. If you don't specify a value, no prefix filter is applied.
--   
--   <a>$sel:nextToken:DescribeSubscriptionFilters'</a>,
--   <a>describeSubscriptionFilters_nextToken</a> - The token for the next
--   set of items to return. (You received this token from a previous
--   call.)
--   
--   <a>$sel:limit:DescribeSubscriptionFilters'</a>,
--   <a>describeSubscriptionFilters_limit</a> - The maximum number of items
--   returned. If you don't specify a value, the default is up to 50 items.
--   
--   <a>$sel:logGroupName:DescribeSubscriptionFilters'</a>,
--   <a>describeSubscriptionFilters_logGroupName</a> - The name of the log
--   group.
newDescribeSubscriptionFilters :: Text -> DescribeSubscriptionFilters

-- | <i>See:</i> <a>newDescribeSubscriptionFiltersResponse</a> smart
--   constructor.
data DescribeSubscriptionFiltersResponse
DescribeSubscriptionFiltersResponse' :: Maybe [SubscriptionFilter] -> Maybe Text -> Int -> DescribeSubscriptionFiltersResponse

-- | Create a value of <a>DescribeSubscriptionFiltersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionFilters:DescribeSubscriptionFiltersResponse'</a>,
--   <a>describeSubscriptionFiltersResponse_subscriptionFilters</a> - The
--   subscription filters.
--   
--   <a>$sel:nextToken:DescribeSubscriptionFilters'</a>,
--   <a>describeSubscriptionFiltersResponse_nextToken</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:DescribeSubscriptionFiltersResponse'</a>,
--   <a>describeSubscriptionFiltersResponse_httpStatus</a> - The response's
--   http status code.
newDescribeSubscriptionFiltersResponse :: Int -> DescribeSubscriptionFiltersResponse

-- | <i>See:</i> <a>newGetLogEvents</a> smart constructor.
data GetLogEvents
GetLogEvents' :: Maybe Natural -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Natural -> Text -> Text -> GetLogEvents

-- | Create a value of <a>GetLogEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:GetLogEvents'</a>, <a>getLogEvents_startTime</a> -
--   The start of the time range, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC. Events with a timestamp equal to this
--   time or later than this time are included. Events with a timestamp
--   earlier than this time are not included.
--   
--   <a>$sel:startFromHead:GetLogEvents'</a>,
--   <a>getLogEvents_startFromHead</a> - If the value is true, the earliest
--   log events are returned first. If the value is false, the latest log
--   events are returned first. The default value is false.
--   
--   If you are using a previous <tt>nextForwardToken</tt> value as the
--   <tt>nextToken</tt> in this operation, you must specify <tt>true</tt>
--   for <tt>startFromHead</tt>.
--   
--   <a>$sel:nextToken:GetLogEvents'</a>, <a>getLogEvents_nextToken</a> -
--   The token for the next set of items to return. (You received this
--   token from a previous call.)
--   
--   <a>$sel:endTime:GetLogEvents'</a>, <a>getLogEvents_endTime</a> - The
--   end of the time range, expressed as the number of milliseconds after
--   Jan 1, 1970 00:00:00 UTC. Events with a timestamp equal to or later
--   than this time are not included.
--   
--   <a>$sel:limit:GetLogEvents'</a>, <a>getLogEvents_limit</a> - The
--   maximum number of log events returned. If you don't specify a value,
--   the maximum is as many log events as can fit in a response size of 1
--   MB, up to 10,000 log events.
--   
--   <a>$sel:logGroupName:GetLogEvents'</a>,
--   <a>getLogEvents_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:logStreamName:GetLogEvents'</a>,
--   <a>getLogEvents_logStreamName</a> - The name of the log stream.
newGetLogEvents :: Text -> Text -> GetLogEvents

-- | <i>See:</i> <a>newGetLogEventsResponse</a> smart constructor.
data GetLogEventsResponse
GetLogEventsResponse' :: Maybe Text -> Maybe Text -> Maybe [OutputLogEvent] -> Int -> GetLogEventsResponse

-- | Create a value of <a>GetLogEventsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextBackwardToken:GetLogEventsResponse'</a>,
--   <a>getLogEventsResponse_nextBackwardToken</a> - The token for the next
--   set of items in the backward direction. The token expires after 24
--   hours. This token is never null. If you have reached the end of the
--   stream, it returns the same token you passed in.
--   
--   <a>$sel:nextForwardToken:GetLogEventsResponse'</a>,
--   <a>getLogEventsResponse_nextForwardToken</a> - The token for the next
--   set of items in the forward direction. The token expires after 24
--   hours. If you have reached the end of the stream, it returns the same
--   token you passed in.
--   
--   <a>$sel:events:GetLogEventsResponse'</a>,
--   <a>getLogEventsResponse_events</a> - The events.
--   
--   <a>$sel:httpStatus:GetLogEventsResponse'</a>,
--   <a>getLogEventsResponse_httpStatus</a> - The response's http status
--   code.
newGetLogEventsResponse :: Int -> GetLogEventsResponse

-- | <i>See:</i> <a>newDescribeLogGroups</a> smart constructor.
data DescribeLogGroups
DescribeLogGroups' :: Maybe Text -> Maybe Text -> Maybe Natural -> DescribeLogGroups

-- | Create a value of <a>DescribeLogGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupNamePrefix:DescribeLogGroups'</a>,
--   <a>describeLogGroups_logGroupNamePrefix</a> - The prefix to match.
--   
--   <a>$sel:nextToken:DescribeLogGroups'</a>,
--   <a>describeLogGroups_nextToken</a> - The token for the next set of
--   items to return. (You received this token from a previous call.)
--   
--   <a>$sel:limit:DescribeLogGroups'</a>, <a>describeLogGroups_limit</a> -
--   The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
newDescribeLogGroups :: DescribeLogGroups

-- | <i>See:</i> <a>newDescribeLogGroupsResponse</a> smart constructor.
data DescribeLogGroupsResponse
DescribeLogGroupsResponse' :: Maybe [LogGroup] -> Maybe Text -> Int -> DescribeLogGroupsResponse

-- | Create a value of <a>DescribeLogGroupsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroups:DescribeLogGroupsResponse'</a>,
--   <a>describeLogGroupsResponse_logGroups</a> - The log groups.
--   
--   If the <tt>retentionInDays</tt> value if not included for a log group,
--   then that log group is set to have its events never expire.
--   
--   <a>$sel:nextToken:DescribeLogGroups'</a>,
--   <a>describeLogGroupsResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DescribeLogGroupsResponse'</a>,
--   <a>describeLogGroupsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeLogGroupsResponse :: Int -> DescribeLogGroupsResponse

-- | <i>See:</i> <a>newDeleteDestination</a> smart constructor.
data DeleteDestination
DeleteDestination' :: Text -> DeleteDestination

-- | Create a value of <a>DeleteDestination</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationName:DeleteDestination'</a>,
--   <a>deleteDestination_destinationName</a> - The name of the
--   destination.
newDeleteDestination :: Text -> DeleteDestination

-- | <i>See:</i> <a>newDeleteDestinationResponse</a> smart constructor.
data DeleteDestinationResponse
DeleteDestinationResponse' :: DeleteDestinationResponse

-- | Create a value of <a>DeleteDestinationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDestinationResponse :: DeleteDestinationResponse

-- | <i>See:</i> <a>newDisassociateKmsKey</a> smart constructor.
data DisassociateKmsKey
DisassociateKmsKey' :: Text -> DisassociateKmsKey

-- | Create a value of <a>DisassociateKmsKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:DisassociateKmsKey'</a>,
--   <a>disassociateKmsKey_logGroupName</a> - The name of the log group.
newDisassociateKmsKey :: Text -> DisassociateKmsKey

-- | <i>See:</i> <a>newDisassociateKmsKeyResponse</a> smart constructor.
data DisassociateKmsKeyResponse
DisassociateKmsKeyResponse' :: DisassociateKmsKeyResponse

-- | Create a value of <a>DisassociateKmsKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDisassociateKmsKeyResponse :: DisassociateKmsKeyResponse

-- | <i>See:</i> <a>newFilterLogEvents</a> smart constructor.
data FilterLogEvents
FilterLogEvents' :: Maybe Natural -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Bool -> Text -> FilterLogEvents

-- | Create a value of <a>FilterLogEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:FilterLogEvents'</a>,
--   <a>filterLogEvents_startTime</a> - The start of the time range,
--   expressed as the number of milliseconds after Jan 1, 1970 00:00:00
--   UTC. Events with a timestamp before this time are not returned.
--   
--   <a>$sel:nextToken:FilterLogEvents'</a>,
--   <a>filterLogEvents_nextToken</a> - The token for the next set of
--   events to return. (You received this token from a previous call.)
--   
--   <a>$sel:logStreamNames:FilterLogEvents'</a>,
--   <a>filterLogEvents_logStreamNames</a> - Filters the results to only
--   logs from the log streams in this list.
--   
--   If you specify a value for both <tt>logStreamNamePrefix</tt> and
--   <tt>logStreamNames</tt>, the action returns an
--   <tt>InvalidParameterException</tt> error.
--   
--   <a>$sel:logStreamNamePrefix:FilterLogEvents'</a>,
--   <a>filterLogEvents_logStreamNamePrefix</a> - Filters the results to
--   include only events from log streams that have names starting with
--   this prefix.
--   
--   If you specify a value for both <tt>logStreamNamePrefix</tt> and
--   <tt>logStreamNames</tt>, but the value for
--   <tt>logStreamNamePrefix</tt> does not match any log stream names
--   specified in <tt>logStreamNames</tt>, the action returns an
--   <tt>InvalidParameterException</tt> error.
--   
--   <a>$sel:endTime:FilterLogEvents'</a>, <a>filterLogEvents_endTime</a> -
--   The end of the time range, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC. Events with a timestamp later than
--   this time are not returned.
--   
--   <a>$sel:limit:FilterLogEvents'</a>, <a>filterLogEvents_limit</a> - The
--   maximum number of events to return. The default is 10,000 events.
--   
--   <a>$sel:filterPattern:FilterLogEvents'</a>,
--   <a>filterLogEvents_filterPattern</a> - The filter pattern to use. For
--   more information, see <a>Filter and Pattern Syntax</a>.
--   
--   If not provided, all the events are matched.
--   
--   <a>$sel:interleaved:FilterLogEvents'</a>,
--   <a>filterLogEvents_interleaved</a> - If the value is true, the
--   operation makes a best effort to provide responses that contain events
--   from multiple log streams within the log group, interleaved in a
--   single response. If the value is false, all the matched log events in
--   the first log stream are searched first, then those in the next log
--   stream, and so on. The default is false.
--   
--   <b>Important:</b> Starting on June 17, 2019, this parameter is ignored
--   and the value is assumed to be true. The response from this operation
--   always interleaves events from multiple log streams within a log
--   group.
--   
--   <a>$sel:logGroupName:FilterLogEvents'</a>,
--   <a>filterLogEvents_logGroupName</a> - The name of the log group to
--   search.
newFilterLogEvents :: Text -> FilterLogEvents

-- | <i>See:</i> <a>newFilterLogEventsResponse</a> smart constructor.
data FilterLogEventsResponse
FilterLogEventsResponse' :: Maybe [SearchedLogStream] -> Maybe Text -> Maybe [FilteredLogEvent] -> Int -> FilterLogEventsResponse

-- | Create a value of <a>FilterLogEventsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:searchedLogStreams:FilterLogEventsResponse'</a>,
--   <a>filterLogEventsResponse_searchedLogStreams</a> - <b>IMPORTANT</b>
--   Starting on May 15, 2020, this parameter will be deprecated. This
--   parameter will be an empty list after the deprecation occurs.
--   
--   Indicates which log streams have been searched and whether each has
--   been searched completely.
--   
--   <a>$sel:nextToken:FilterLogEvents'</a>,
--   <a>filterLogEventsResponse_nextToken</a> - The token to use when
--   requesting the next set of items. The token expires after 24 hours.
--   
--   <a>$sel:events:FilterLogEventsResponse'</a>,
--   <a>filterLogEventsResponse_events</a> - The matched events.
--   
--   <a>$sel:httpStatus:FilterLogEventsResponse'</a>,
--   <a>filterLogEventsResponse_httpStatus</a> - The response's http status
--   code.
newFilterLogEventsResponse :: Int -> FilterLogEventsResponse

-- | <i>See:</i> <a>newDeleteQueryDefinition</a> smart constructor.
data DeleteQueryDefinition
DeleteQueryDefinition' :: Text -> DeleteQueryDefinition

-- | Create a value of <a>DeleteQueryDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryDefinitionId:DeleteQueryDefinition'</a>,
--   <a>deleteQueryDefinition_queryDefinitionId</a> - The ID of the query
--   definition that you want to delete. You can use
--   <a>DescribeQueryDefinitions</a> to retrieve the IDs of your saved
--   query definitions.
newDeleteQueryDefinition :: Text -> DeleteQueryDefinition

-- | <i>See:</i> <a>newDeleteQueryDefinitionResponse</a> smart constructor.
data DeleteQueryDefinitionResponse
DeleteQueryDefinitionResponse' :: Maybe Bool -> Int -> DeleteQueryDefinitionResponse

-- | Create a value of <a>DeleteQueryDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:success:DeleteQueryDefinitionResponse'</a>,
--   <a>deleteQueryDefinitionResponse_success</a> - A value of TRUE
--   indicates that the operation succeeded. FALSE indicates that the
--   operation failed.
--   
--   <a>$sel:httpStatus:DeleteQueryDefinitionResponse'</a>,
--   <a>deleteQueryDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteQueryDefinitionResponse :: Int -> DeleteQueryDefinitionResponse

-- | <i>See:</i> <a>newPutQueryDefinition</a> smart constructor.
data PutQueryDefinition
PutQueryDefinition' :: Maybe [Text] -> Maybe Text -> Text -> Text -> PutQueryDefinition

-- | Create a value of <a>PutQueryDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupNames:PutQueryDefinition'</a>,
--   <a>putQueryDefinition_logGroupNames</a> - Use this parameter to
--   include specific log groups as part of your query definition.
--   
--   If you are updating a query definition and you omit this parameter,
--   then the updated definition will contain no log groups.
--   
--   <a>$sel:queryDefinitionId:PutQueryDefinition'</a>,
--   <a>putQueryDefinition_queryDefinitionId</a> - If you are updating a
--   query definition, use this parameter to specify the ID of the query
--   definition that you want to update. You can use
--   <a>DescribeQueryDefinitions</a> to retrieve the IDs of your saved
--   query definitions.
--   
--   If you are creating a query definition, do not specify this parameter.
--   CloudWatch generates a unique ID for the new query definition and
--   include it in the response to this operation.
--   
--   <a>$sel:name:PutQueryDefinition'</a>, <a>putQueryDefinition_name</a> -
--   A name for the query definition. If you are saving a lot of query
--   definitions, we recommend that you name them so that you can easily
--   find the ones you want by using the first part of the name as a filter
--   in the <tt>queryDefinitionNamePrefix</tt> parameter of
--   <a>DescribeQueryDefinitions</a>.
--   
--   <a>$sel:queryString:PutQueryDefinition'</a>,
--   <a>putQueryDefinition_queryString</a> - The query string to use for
--   this definition. For more information, see <a>CloudWatch Logs Insights
--   Query Syntax</a>.
newPutQueryDefinition :: Text -> Text -> PutQueryDefinition

-- | <i>See:</i> <a>newPutQueryDefinitionResponse</a> smart constructor.
data PutQueryDefinitionResponse
PutQueryDefinitionResponse' :: Maybe Text -> Int -> PutQueryDefinitionResponse

-- | Create a value of <a>PutQueryDefinitionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryDefinitionId:PutQueryDefinition'</a>,
--   <a>putQueryDefinitionResponse_queryDefinitionId</a> - The ID of the
--   query definition.
--   
--   <a>$sel:httpStatus:PutQueryDefinitionResponse'</a>,
--   <a>putQueryDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newPutQueryDefinitionResponse :: Int -> PutQueryDefinitionResponse

-- | <i>See:</i> <a>newTagLogGroup</a> smart constructor.
data TagLogGroup
TagLogGroup' :: Text -> HashMap Text Text -> TagLogGroup

-- | Create a value of <a>TagLogGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:TagLogGroup'</a>, <a>tagLogGroup_logGroupName</a>
--   - The name of the log group.
--   
--   <a>$sel:tags:TagLogGroup'</a>, <a>tagLogGroup_tags</a> - The key-value
--   pairs to use for the tags.
newTagLogGroup :: Text -> TagLogGroup

-- | <i>See:</i> <a>newTagLogGroupResponse</a> smart constructor.
data TagLogGroupResponse
TagLogGroupResponse' :: TagLogGroupResponse

-- | Create a value of <a>TagLogGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagLogGroupResponse :: TagLogGroupResponse

-- | <i>See:</i> <a>newDescribeResourcePolicies</a> smart constructor.
data DescribeResourcePolicies
DescribeResourcePolicies' :: Maybe Text -> Maybe Natural -> DescribeResourcePolicies

-- | Create a value of <a>DescribeResourcePolicies</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeResourcePolicies'</a>,
--   <a>describeResourcePolicies_nextToken</a> - Undocumented member.
--   
--   <a>$sel:limit:DescribeResourcePolicies'</a>,
--   <a>describeResourcePolicies_limit</a> - The maximum number of resource
--   policies to be displayed with one call of this API.
newDescribeResourcePolicies :: DescribeResourcePolicies

-- | <i>See:</i> <a>newDescribeResourcePoliciesResponse</a> smart
--   constructor.
data DescribeResourcePoliciesResponse
DescribeResourcePoliciesResponse' :: Maybe [ResourcePolicy] -> Maybe Text -> Int -> DescribeResourcePoliciesResponse

-- | Create a value of <a>DescribeResourcePoliciesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourcePolicies:DescribeResourcePoliciesResponse'</a>,
--   <a>describeResourcePoliciesResponse_resourcePolicies</a> - The
--   resource policies that exist in this account.
--   
--   <a>$sel:nextToken:DescribeResourcePolicies'</a>,
--   <a>describeResourcePoliciesResponse_nextToken</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:DescribeResourcePoliciesResponse'</a>,
--   <a>describeResourcePoliciesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeResourcePoliciesResponse :: Int -> DescribeResourcePoliciesResponse

-- | <i>See:</i> <a>newDescribeQueryDefinitions</a> smart constructor.
data DescribeQueryDefinitions
DescribeQueryDefinitions' :: Maybe Text -> Maybe Text -> Maybe Natural -> DescribeQueryDefinitions

-- | Create a value of <a>DescribeQueryDefinitions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryDefinitionNamePrefix:DescribeQueryDefinitions'</a>,
--   <a>describeQueryDefinitions_queryDefinitionNamePrefix</a> - Use this
--   parameter to filter your results to only the query definitions that
--   have names that start with the prefix you specify.
--   
--   <a>$sel:nextToken:DescribeQueryDefinitions'</a>,
--   <a>describeQueryDefinitions_nextToken</a> - Undocumented member.
--   
--   <a>$sel:maxResults:DescribeQueryDefinitions'</a>,
--   <a>describeQueryDefinitions_maxResults</a> - Limits the number of
--   returned query definitions to the specified number.
newDescribeQueryDefinitions :: DescribeQueryDefinitions

-- | <i>See:</i> <a>newDescribeQueryDefinitionsResponse</a> smart
--   constructor.
data DescribeQueryDefinitionsResponse
DescribeQueryDefinitionsResponse' :: Maybe [QueryDefinition] -> Maybe Text -> Int -> DescribeQueryDefinitionsResponse

-- | Create a value of <a>DescribeQueryDefinitionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryDefinitions:DescribeQueryDefinitionsResponse'</a>,
--   <a>describeQueryDefinitionsResponse_queryDefinitions</a> - The list of
--   query definitions that match your request.
--   
--   <a>$sel:nextToken:DescribeQueryDefinitions'</a>,
--   <a>describeQueryDefinitionsResponse_nextToken</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:DescribeQueryDefinitionsResponse'</a>,
--   <a>describeQueryDefinitionsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeQueryDefinitionsResponse :: Int -> DescribeQueryDefinitionsResponse

-- | <i>See:</i> <a>newDeleteLogStream</a> smart constructor.
data DeleteLogStream
DeleteLogStream' :: Text -> Text -> DeleteLogStream

-- | Create a value of <a>DeleteLogStream</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:DeleteLogStream'</a>,
--   <a>deleteLogStream_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:logStreamName:DeleteLogStream'</a>,
--   <a>deleteLogStream_logStreamName</a> - The name of the log stream.
newDeleteLogStream :: Text -> Text -> DeleteLogStream

-- | <i>See:</i> <a>newDeleteLogStreamResponse</a> smart constructor.
data DeleteLogStreamResponse
DeleteLogStreamResponse' :: DeleteLogStreamResponse

-- | Create a value of <a>DeleteLogStreamResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteLogStreamResponse :: DeleteLogStreamResponse

-- | <i>See:</i> <a>newDescribeQueries</a> smart constructor.
data DescribeQueries
DescribeQueries' :: Maybe QueryStatus -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeQueries

-- | Create a value of <a>DescribeQueries</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeQueries'</a>, <a>describeQueries_status</a> -
--   Limits the returned queries to only those that have the specified
--   status. Valid values are <tt>Cancelled</tt>, <tt>Complete</tt>,
--   <tt>Failed</tt>, <tt>Running</tt>, and <tt>Scheduled</tt>.
--   
--   <a>$sel:logGroupName:DescribeQueries'</a>,
--   <a>describeQueries_logGroupName</a> - Limits the returned queries to
--   only those for the specified log group.
--   
--   <a>$sel:nextToken:DescribeQueries'</a>,
--   <a>describeQueries_nextToken</a> - Undocumented member.
--   
--   <a>$sel:maxResults:DescribeQueries'</a>,
--   <a>describeQueries_maxResults</a> - Limits the number of returned
--   queries to the specified number.
newDescribeQueries :: DescribeQueries

-- | <i>See:</i> <a>newDescribeQueriesResponse</a> smart constructor.
data DescribeQueriesResponse
DescribeQueriesResponse' :: Maybe [QueryInfo] -> Maybe Text -> Int -> DescribeQueriesResponse

-- | Create a value of <a>DescribeQueriesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queries:DescribeQueriesResponse'</a>,
--   <a>describeQueriesResponse_queries</a> - The list of queries that
--   match the request.
--   
--   <a>$sel:nextToken:DescribeQueries'</a>,
--   <a>describeQueriesResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DescribeQueriesResponse'</a>,
--   <a>describeQueriesResponse_httpStatus</a> - The response's http status
--   code.
newDescribeQueriesResponse :: Int -> DescribeQueriesResponse

-- | <i>See:</i> <a>newCreateLogStream</a> smart constructor.
data CreateLogStream
CreateLogStream' :: Text -> Text -> CreateLogStream

-- | Create a value of <a>CreateLogStream</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:CreateLogStream'</a>,
--   <a>createLogStream_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:logStreamName:CreateLogStream'</a>,
--   <a>createLogStream_logStreamName</a> - The name of the log stream.
newCreateLogStream :: Text -> Text -> CreateLogStream

-- | <i>See:</i> <a>newCreateLogStreamResponse</a> smart constructor.
data CreateLogStreamResponse
CreateLogStreamResponse' :: CreateLogStreamResponse

-- | Create a value of <a>CreateLogStreamResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCreateLogStreamResponse :: CreateLogStreamResponse

-- | <i>See:</i> <a>newCreateLogGroup</a> smart constructor.
data CreateLogGroup
CreateLogGroup' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> CreateLogGroup

-- | Create a value of <a>CreateLogGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:CreateLogGroup'</a>, <a>createLogGroup_kmsKeyId</a> -
--   The Amazon Resource Name (ARN) of the CMK to use when encrypting log
--   data. For more information, see <a>Amazon Resource Names - Key
--   Management Service</a>.
--   
--   <a>$sel:tags:CreateLogGroup'</a>, <a>createLogGroup_tags</a> - The
--   key-value pairs to use for the tags.
--   
--   CloudWatch Logs doesn’t support IAM policies that prevent users from
--   assigning specified tags to log groups using the
--   <tt>aws:Resource/key-name </tt> or <tt>aws:TagKeys</tt> condition
--   keys. For more information about using tags to control access, see
--   <a>Controlling access to Amazon Web Services resources using tags</a>.
--   
--   <a>$sel:logGroupName:CreateLogGroup'</a>,
--   <a>createLogGroup_logGroupName</a> - The name of the log group.
newCreateLogGroup :: Text -> CreateLogGroup

-- | <i>See:</i> <a>newCreateLogGroupResponse</a> smart constructor.
data CreateLogGroupResponse
CreateLogGroupResponse' :: CreateLogGroupResponse

-- | Create a value of <a>CreateLogGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCreateLogGroupResponse :: CreateLogGroupResponse

-- | <i>See:</i> <a>newDescribeExportTasks</a> smart constructor.
data DescribeExportTasks
DescribeExportTasks' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe ExportTaskStatusCode -> DescribeExportTasks

-- | Create a value of <a>DescribeExportTasks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskId:DescribeExportTasks'</a>,
--   <a>describeExportTasks_taskId</a> - The ID of the export task.
--   Specifying a task ID filters the results to zero or one export tasks.
--   
--   <a>$sel:nextToken:DescribeExportTasks'</a>,
--   <a>describeExportTasks_nextToken</a> - The token for the next set of
--   items to return. (You received this token from a previous call.)
--   
--   <a>$sel:limit:DescribeExportTasks'</a>,
--   <a>describeExportTasks_limit</a> - The maximum number of items
--   returned. If you don't specify a value, the default is up to 50 items.
--   
--   <a>$sel:statusCode:DescribeExportTasks'</a>,
--   <a>describeExportTasks_statusCode</a> - The status code of the export
--   task. Specifying a status code filters the results to zero or more
--   export tasks.
newDescribeExportTasks :: DescribeExportTasks

-- | <i>See:</i> <a>newDescribeExportTasksResponse</a> smart constructor.
data DescribeExportTasksResponse
DescribeExportTasksResponse' :: Maybe Text -> Maybe [ExportTask] -> Int -> DescribeExportTasksResponse

-- | Create a value of <a>DescribeExportTasksResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeExportTasks'</a>,
--   <a>describeExportTasksResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:exportTasks:DescribeExportTasksResponse'</a>,
--   <a>describeExportTasksResponse_exportTasks</a> - The export tasks.
--   
--   <a>$sel:httpStatus:DescribeExportTasksResponse'</a>,
--   <a>describeExportTasksResponse_httpStatus</a> - The response's http
--   status code.
newDescribeExportTasksResponse :: Int -> DescribeExportTasksResponse

-- | <i>See:</i> <a>newCancelExportTask</a> smart constructor.
data CancelExportTask
CancelExportTask' :: Text -> CancelExportTask

-- | Create a value of <a>CancelExportTask</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskId:CancelExportTask'</a>, <a>cancelExportTask_taskId</a> -
--   The ID of the export task.
newCancelExportTask :: Text -> CancelExportTask

-- | <i>See:</i> <a>newCancelExportTaskResponse</a> smart constructor.
data CancelExportTaskResponse
CancelExportTaskResponse' :: CancelExportTaskResponse

-- | Create a value of <a>CancelExportTaskResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCancelExportTaskResponse :: CancelExportTaskResponse

-- | <i>See:</i> <a>newPutSubscriptionFilter</a> smart constructor.
data PutSubscriptionFilter
PutSubscriptionFilter' :: Maybe Distribution -> Maybe Text -> Text -> Text -> Text -> Text -> PutSubscriptionFilter

-- | Create a value of <a>PutSubscriptionFilter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:distribution:PutSubscriptionFilter'</a>,
--   <a>putSubscriptionFilter_distribution</a> - The method used to
--   distribute log data to the destination. By default, log data is
--   grouped by log stream, but the grouping can be set to random for a
--   more even distribution. This property is only applicable when the
--   destination is an Amazon Kinesis stream.
--   
--   <a>$sel:roleArn:PutSubscriptionFilter'</a>,
--   <a>putSubscriptionFilter_roleArn</a> - The ARN of an IAM role that
--   grants CloudWatch Logs permissions to deliver ingested log events to
--   the destination stream. You don't need to provide the ARN when you are
--   working with a logical destination for cross-account delivery.
--   
--   <a>$sel:logGroupName:PutSubscriptionFilter'</a>,
--   <a>putSubscriptionFilter_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:filterName:PutSubscriptionFilter'</a>,
--   <a>putSubscriptionFilter_filterName</a> - A name for the subscription
--   filter. If you are updating an existing filter, you must specify the
--   correct name in <tt>filterName</tt>. To find the name of the filter
--   currently associated with a log group, use
--   <a>DescribeSubscriptionFilters</a>.
--   
--   <a>$sel:filterPattern:PutSubscriptionFilter'</a>,
--   <a>putSubscriptionFilter_filterPattern</a> - A filter pattern for
--   subscribing to a filtered stream of log events.
--   
--   <a>$sel:destinationArn:PutSubscriptionFilter'</a>,
--   <a>putSubscriptionFilter_destinationArn</a> - The ARN of the
--   destination to deliver matching log events to. Currently, the
--   supported destinations are:
--   
--   <ul>
--   <li>An Amazon Kinesis stream belonging to the same account as the
--   subscription filter, for same-account delivery.</li>
--   <li>A logical destination (specified using an ARN) belonging to a
--   different account, for cross-account delivery.If you are setting up a
--   cross-account subscription, the destination must have an IAM policy
--   associated with it that allows the sender to send logs to the
--   destination. For more information, see
--   <a>PutDestinationPolicy</a>.</li>
--   <li>An Amazon Kinesis Firehose delivery stream belonging to the same
--   account as the subscription filter, for same-account delivery.</li>
--   <li>A Lambda function belonging to the same account as the
--   subscription filter, for same-account delivery.</li>
--   </ul>
newPutSubscriptionFilter :: Text -> Text -> Text -> Text -> PutSubscriptionFilter

-- | <i>See:</i> <a>newPutSubscriptionFilterResponse</a> smart constructor.
data PutSubscriptionFilterResponse
PutSubscriptionFilterResponse' :: PutSubscriptionFilterResponse

-- | Create a value of <a>PutSubscriptionFilterResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutSubscriptionFilterResponse :: PutSubscriptionFilterResponse

-- | <i>See:</i> <a>newStartQuery</a> smart constructor.
data StartQuery
StartQuery' :: Maybe [Text] -> Maybe Text -> Maybe Natural -> Natural -> Natural -> Text -> StartQuery

-- | Create a value of <a>StartQuery</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupNames:StartQuery'</a>, <a>startQuery_logGroupNames</a>
--   - The list of log groups to be queried. You can include up to 20 log
--   groups.
--   
--   A <tt>StartQuery</tt> operation must include a <tt>logGroupNames</tt>
--   or a <tt>logGroupName</tt> parameter, but not both.
--   
--   <a>$sel:logGroupName:StartQuery'</a>, <a>startQuery_logGroupName</a> -
--   The log group on which to perform the query.
--   
--   A <tt>StartQuery</tt> operation must include a <tt>logGroupNames</tt>
--   or a <tt>logGroupName</tt> parameter, but not both.
--   
--   <a>$sel:limit:StartQuery'</a>, <a>startQuery_limit</a> - The maximum
--   number of log events to return in the query. If the query string uses
--   the <tt>fields</tt> command, only the specified fields and their
--   values are returned. The default is 1000.
--   
--   <a>$sel:startTime:StartQuery'</a>, <a>startQuery_startTime</a> - The
--   beginning of the time range to query. The range is inclusive, so the
--   specified start time is included in the query. Specified as epoch
--   time, the number of seconds since January 1, 1970, 00:00:00 UTC.
--   
--   <a>$sel:endTime:StartQuery'</a>, <a>startQuery_endTime</a> - The end
--   of the time range to query. The range is inclusive, so the specified
--   end time is included in the query. Specified as epoch time, the number
--   of seconds since January 1, 1970, 00:00:00 UTC.
--   
--   <a>$sel:queryString:StartQuery'</a>, <a>startQuery_queryString</a> -
--   The query string to use. For more information, see <a>CloudWatch Logs
--   Insights Query Syntax</a>.
newStartQuery :: Natural -> Natural -> Text -> StartQuery

-- | <i>See:</i> <a>newStartQueryResponse</a> smart constructor.
data StartQueryResponse
StartQueryResponse' :: Maybe Text -> Int -> StartQueryResponse

-- | Create a value of <a>StartQueryResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryId:StartQueryResponse'</a>,
--   <a>startQueryResponse_queryId</a> - The unique ID of the query.
--   
--   <a>$sel:httpStatus:StartQueryResponse'</a>,
--   <a>startQueryResponse_httpStatus</a> - The response's http status
--   code.
newStartQueryResponse :: Int -> StartQueryResponse

-- | <i>See:</i> <a>newDeleteLogGroup</a> smart constructor.
data DeleteLogGroup
DeleteLogGroup' :: Text -> DeleteLogGroup

-- | Create a value of <a>DeleteLogGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:DeleteLogGroup'</a>,
--   <a>deleteLogGroup_logGroupName</a> - The name of the log group.
newDeleteLogGroup :: Text -> DeleteLogGroup

-- | <i>See:</i> <a>newDeleteLogGroupResponse</a> smart constructor.
data DeleteLogGroupResponse
DeleteLogGroupResponse' :: DeleteLogGroupResponse

-- | Create a value of <a>DeleteLogGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteLogGroupResponse :: DeleteLogGroupResponse

-- | <i>See:</i> <a>newDeleteSubscriptionFilter</a> smart constructor.
data DeleteSubscriptionFilter
DeleteSubscriptionFilter' :: Text -> Text -> DeleteSubscriptionFilter

-- | Create a value of <a>DeleteSubscriptionFilter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:DeleteSubscriptionFilter'</a>,
--   <a>deleteSubscriptionFilter_logGroupName</a> - The name of the log
--   group.
--   
--   <a>$sel:filterName:DeleteSubscriptionFilter'</a>,
--   <a>deleteSubscriptionFilter_filterName</a> - The name of the
--   subscription filter.
newDeleteSubscriptionFilter :: Text -> Text -> DeleteSubscriptionFilter

-- | <i>See:</i> <a>newDeleteSubscriptionFilterResponse</a> smart
--   constructor.
data DeleteSubscriptionFilterResponse
DeleteSubscriptionFilterResponse' :: DeleteSubscriptionFilterResponse

-- | Create a value of <a>DeleteSubscriptionFilterResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteSubscriptionFilterResponse :: DeleteSubscriptionFilterResponse

-- | <i>See:</i> <a>newPutLogEvents</a> smart constructor.
data PutLogEvents
PutLogEvents' :: Maybe Text -> Text -> Text -> NonEmpty InputLogEvent -> PutLogEvents

-- | Create a value of <a>PutLogEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sequenceToken:PutLogEvents'</a>,
--   <a>putLogEvents_sequenceToken</a> - The sequence token obtained from
--   the response of the previous <tt>PutLogEvents</tt> call. An upload in
--   a newly created log stream does not require a sequence token. You can
--   also get the sequence token using <a>DescribeLogStreams</a>. If you
--   call <tt>PutLogEvents</tt> twice within a narrow time period using the
--   same value for <tt>sequenceToken</tt>, both calls might be successful
--   or one might be rejected.
--   
--   <a>$sel:logGroupName:PutLogEvents'</a>,
--   <a>putLogEvents_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:logStreamName:PutLogEvents'</a>,
--   <a>putLogEvents_logStreamName</a> - The name of the log stream.
--   
--   <a>$sel:logEvents:PutLogEvents'</a>, <a>putLogEvents_logEvents</a> -
--   The log events.
newPutLogEvents :: Text -> Text -> NonEmpty InputLogEvent -> PutLogEvents

-- | <i>See:</i> <a>newPutLogEventsResponse</a> smart constructor.
data PutLogEventsResponse
PutLogEventsResponse' :: Maybe RejectedLogEventsInfo -> Maybe Text -> Int -> PutLogEventsResponse

-- | Create a value of <a>PutLogEventsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rejectedLogEventsInfo:PutLogEventsResponse'</a>,
--   <a>putLogEventsResponse_rejectedLogEventsInfo</a> - The rejected
--   events.
--   
--   <a>$sel:nextSequenceToken:PutLogEventsResponse'</a>,
--   <a>putLogEventsResponse_nextSequenceToken</a> - The next sequence
--   token.
--   
--   <a>$sel:httpStatus:PutLogEventsResponse'</a>,
--   <a>putLogEventsResponse_httpStatus</a> - The response's http status
--   code.
newPutLogEventsResponse :: Int -> PutLogEventsResponse

-- | <i>See:</i> <a>newDescribeMetricFilters</a> smart constructor.
data DescribeMetricFilters
DescribeMetricFilters' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeMetricFilters

-- | Create a value of <a>DescribeMetricFilters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterNamePrefix:DescribeMetricFilters'</a>,
--   <a>describeMetricFilters_filterNamePrefix</a> - The prefix to match.
--   CloudWatch Logs uses the value you set here only if you also include
--   the <tt>logGroupName</tt> parameter in your request.
--   
--   <a>$sel:metricName:DescribeMetricFilters'</a>,
--   <a>describeMetricFilters_metricName</a> - Filters results to include
--   only those with the specified metric name. If you include this
--   parameter in your request, you must also include the
--   <tt>metricNamespace</tt> parameter.
--   
--   <a>$sel:logGroupName:DescribeMetricFilters'</a>,
--   <a>describeMetricFilters_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:nextToken:DescribeMetricFilters'</a>,
--   <a>describeMetricFilters_nextToken</a> - The token for the next set of
--   items to return. (You received this token from a previous call.)
--   
--   <a>$sel:metricNamespace:DescribeMetricFilters'</a>,
--   <a>describeMetricFilters_metricNamespace</a> - Filters results to
--   include only those in the specified namespace. If you include this
--   parameter in your request, you must also include the
--   <tt>metricName</tt> parameter.
--   
--   <a>$sel:limit:DescribeMetricFilters'</a>,
--   <a>describeMetricFilters_limit</a> - The maximum number of items
--   returned. If you don't specify a value, the default is up to 50 items.
newDescribeMetricFilters :: DescribeMetricFilters

-- | <i>See:</i> <a>newDescribeMetricFiltersResponse</a> smart constructor.
data DescribeMetricFiltersResponse
DescribeMetricFiltersResponse' :: Maybe Text -> Maybe [MetricFilter] -> Int -> DescribeMetricFiltersResponse

-- | Create a value of <a>DescribeMetricFiltersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeMetricFilters'</a>,
--   <a>describeMetricFiltersResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:metricFilters:DescribeMetricFiltersResponse'</a>,
--   <a>describeMetricFiltersResponse_metricFilters</a> - The metric
--   filters.
--   
--   <a>$sel:httpStatus:DescribeMetricFiltersResponse'</a>,
--   <a>describeMetricFiltersResponse_httpStatus</a> - The response's http
--   status code.
newDescribeMetricFiltersResponse :: Int -> DescribeMetricFiltersResponse

-- | <i>See:</i> <a>newTestMetricFilter</a> smart constructor.
data TestMetricFilter
TestMetricFilter' :: Text -> NonEmpty Text -> TestMetricFilter

-- | Create a value of <a>TestMetricFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterPattern:TestMetricFilter'</a>,
--   <a>testMetricFilter_filterPattern</a> - Undocumented member.
--   
--   <a>$sel:logEventMessages:TestMetricFilter'</a>,
--   <a>testMetricFilter_logEventMessages</a> - The log event messages to
--   test.
newTestMetricFilter :: Text -> NonEmpty Text -> TestMetricFilter

-- | <i>See:</i> <a>newTestMetricFilterResponse</a> smart constructor.
data TestMetricFilterResponse
TestMetricFilterResponse' :: Maybe [MetricFilterMatchRecord] -> Int -> TestMetricFilterResponse

-- | Create a value of <a>TestMetricFilterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:matches:TestMetricFilterResponse'</a>,
--   <a>testMetricFilterResponse_matches</a> - The matched events.
--   
--   <a>$sel:httpStatus:TestMetricFilterResponse'</a>,
--   <a>testMetricFilterResponse_httpStatus</a> - The response's http
--   status code.
newTestMetricFilterResponse :: Int -> TestMetricFilterResponse

-- | <i>See:</i> <a>newPutDestinationPolicy</a> smart constructor.
data PutDestinationPolicy
PutDestinationPolicy' :: Text -> Text -> PutDestinationPolicy

-- | Create a value of <a>PutDestinationPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationName:PutDestinationPolicy'</a>,
--   <a>putDestinationPolicy_destinationName</a> - A name for an existing
--   destination.
--   
--   <a>$sel:accessPolicy:PutDestinationPolicy'</a>,
--   <a>putDestinationPolicy_accessPolicy</a> - An IAM policy document that
--   authorizes cross-account users to deliver their log events to the
--   associated destination. This can be up to 5120 bytes.
newPutDestinationPolicy :: Text -> Text -> PutDestinationPolicy

-- | <i>See:</i> <a>newPutDestinationPolicyResponse</a> smart constructor.
data PutDestinationPolicyResponse
PutDestinationPolicyResponse' :: PutDestinationPolicyResponse

-- | Create a value of <a>PutDestinationPolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutDestinationPolicyResponse :: PutDestinationPolicyResponse

-- | <i>See:</i> <a>newPutMetricFilter</a> smart constructor.
data PutMetricFilter
PutMetricFilter' :: Text -> Text -> Text -> NonEmpty MetricTransformation -> PutMetricFilter

-- | Create a value of <a>PutMetricFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:PutMetricFilter'</a>,
--   <a>putMetricFilter_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:filterName:PutMetricFilter'</a>,
--   <a>putMetricFilter_filterName</a> - A name for the metric filter.
--   
--   <a>$sel:filterPattern:PutMetricFilter'</a>,
--   <a>putMetricFilter_filterPattern</a> - A filter pattern for extracting
--   metric data out of ingested log events.
--   
--   <a>$sel:metricTransformations:PutMetricFilter'</a>,
--   <a>putMetricFilter_metricTransformations</a> - A collection of
--   information that defines how metric data gets emitted.
newPutMetricFilter :: Text -> Text -> Text -> NonEmpty MetricTransformation -> PutMetricFilter

-- | <i>See:</i> <a>newPutMetricFilterResponse</a> smart constructor.
data PutMetricFilterResponse
PutMetricFilterResponse' :: PutMetricFilterResponse

-- | Create a value of <a>PutMetricFilterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutMetricFilterResponse :: PutMetricFilterResponse

-- | <i>See:</i> <a>newDeleteRetentionPolicy</a> smart constructor.
data DeleteRetentionPolicy
DeleteRetentionPolicy' :: Text -> DeleteRetentionPolicy

-- | Create a value of <a>DeleteRetentionPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:DeleteRetentionPolicy'</a>,
--   <a>deleteRetentionPolicy_logGroupName</a> - The name of the log group.
newDeleteRetentionPolicy :: Text -> DeleteRetentionPolicy

-- | <i>See:</i> <a>newDeleteRetentionPolicyResponse</a> smart constructor.
data DeleteRetentionPolicyResponse
DeleteRetentionPolicyResponse' :: DeleteRetentionPolicyResponse

-- | Create a value of <a>DeleteRetentionPolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRetentionPolicyResponse :: DeleteRetentionPolicyResponse

-- | <i>See:</i> <a>newDeleteMetricFilter</a> smart constructor.
data DeleteMetricFilter
DeleteMetricFilter' :: Text -> Text -> DeleteMetricFilter

-- | Create a value of <a>DeleteMetricFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:DeleteMetricFilter'</a>,
--   <a>deleteMetricFilter_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:filterName:DeleteMetricFilter'</a>,
--   <a>deleteMetricFilter_filterName</a> - The name of the metric filter.
newDeleteMetricFilter :: Text -> Text -> DeleteMetricFilter

-- | <i>See:</i> <a>newDeleteMetricFilterResponse</a> smart constructor.
data DeleteMetricFilterResponse
DeleteMetricFilterResponse' :: DeleteMetricFilterResponse

-- | Create a value of <a>DeleteMetricFilterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteMetricFilterResponse :: DeleteMetricFilterResponse

-- | <i>See:</i> <a>newPutRetentionPolicy</a> smart constructor.
data PutRetentionPolicy
PutRetentionPolicy' :: Text -> Int -> PutRetentionPolicy

-- | Create a value of <a>PutRetentionPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:PutRetentionPolicy'</a>,
--   <a>putRetentionPolicy_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:retentionInDays:PutRetentionPolicy'</a>,
--   <a>putRetentionPolicy_retentionInDays</a> - Undocumented member.
newPutRetentionPolicy :: Text -> Int -> PutRetentionPolicy

-- | <i>See:</i> <a>newPutRetentionPolicyResponse</a> smart constructor.
data PutRetentionPolicyResponse
PutRetentionPolicyResponse' :: PutRetentionPolicyResponse

-- | Create a value of <a>PutRetentionPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutRetentionPolicyResponse :: PutRetentionPolicyResponse

-- | <i>See:</i> <a>newListTagsLogGroup</a> smart constructor.
data ListTagsLogGroup
ListTagsLogGroup' :: Text -> ListTagsLogGroup

-- | Create a value of <a>ListTagsLogGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:ListTagsLogGroup'</a>,
--   <a>listTagsLogGroup_logGroupName</a> - The name of the log group.
newListTagsLogGroup :: Text -> ListTagsLogGroup

-- | <i>See:</i> <a>newListTagsLogGroupResponse</a> smart constructor.
data ListTagsLogGroupResponse
ListTagsLogGroupResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsLogGroupResponse

-- | Create a value of <a>ListTagsLogGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsLogGroupResponse'</a>,
--   <a>listTagsLogGroupResponse_tags</a> - The tags for the log group.
--   
--   <a>$sel:httpStatus:ListTagsLogGroupResponse'</a>,
--   <a>listTagsLogGroupResponse_httpStatus</a> - The response's http
--   status code.
newListTagsLogGroupResponse :: Int -> ListTagsLogGroupResponse

-- | <i>See:</i> <a>newPutResourcePolicy</a> smart constructor.
data PutResourcePolicy
PutResourcePolicy' :: Maybe Text -> Maybe Text -> PutResourcePolicy

-- | Create a value of <a>PutResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyName:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_policyName</a> - Name of the new policy. This
--   parameter is required.
--   
--   <a>$sel:policyDocument:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_policyDocument</a> - Details of the new policy,
--   including the identity of the principal that is enabled to put logs to
--   this account. This is formatted as a JSON string. This parameter is
--   required.
--   
--   The following example creates a resource policy enabling the Route 53
--   service to put DNS query logs in to the specified log group. Replace
--   <tt>"logArn"</tt> with the ARN of your CloudWatch Logs resource, such
--   as a log group or log stream.
--   
--   CloudWatch Logs also supports <a>aws:SourceArn</a> and
--   <a>aws:SourceAccount</a> condition context keys.
--   
--   In the example resource policy, you would replace the value of
--   <tt>SourceArn</tt> with the resource making the call from Route 53 to
--   CloudWatch Logs and replace the value of <tt>SourceAccount</tt> with
--   the Amazon Web Services account ID making that call.
--   
--   <pre>
--   { "Version": "2012-10-17", "Statement": [ { "Sid": "Route53LogsToCloudWatchLogs", "Effect": "Allow", "Principal": { "Service": [ "route53.amazonaws.com" ] }, "Action": "logs:PutLogEvents", "Resource": "logArn", "Condition": { "ArnLike": { "aws:SourceArn": "myRoute53ResourceArn" }, "StringEquals": { "aws:SourceAccount": "myAwsAccountId" } } } ] }
--   </pre>
newPutResourcePolicy :: PutResourcePolicy

-- | <i>See:</i> <a>newPutResourcePolicyResponse</a> smart constructor.
data PutResourcePolicyResponse
PutResourcePolicyResponse' :: Maybe ResourcePolicy -> Int -> PutResourcePolicyResponse

-- | Create a value of <a>PutResourcePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourcePolicy:PutResourcePolicyResponse'</a>,
--   <a>putResourcePolicyResponse_resourcePolicy</a> - The new policy.
--   
--   <a>$sel:httpStatus:PutResourcePolicyResponse'</a>,
--   <a>putResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newPutResourcePolicyResponse :: Int -> PutResourcePolicyResponse

-- | <i>See:</i> <a>newDeleteResourcePolicy</a> smart constructor.
data DeleteResourcePolicy
DeleteResourcePolicy' :: Maybe Text -> DeleteResourcePolicy

-- | Create a value of <a>DeleteResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyName:DeleteResourcePolicy'</a>,
--   <a>deleteResourcePolicy_policyName</a> - The name of the policy to be
--   revoked. This parameter is required.
newDeleteResourcePolicy :: DeleteResourcePolicy

-- | <i>See:</i> <a>newDeleteResourcePolicyResponse</a> smart constructor.
data DeleteResourcePolicyResponse
DeleteResourcePolicyResponse' :: DeleteResourcePolicyResponse

-- | Create a value of <a>DeleteResourcePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteResourcePolicyResponse :: DeleteResourcePolicyResponse

-- | <i>See:</i> <a>newAssociateKmsKey</a> smart constructor.
data AssociateKmsKey
AssociateKmsKey' :: Text -> Text -> AssociateKmsKey

-- | Create a value of <a>AssociateKmsKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupName:AssociateKmsKey'</a>,
--   <a>associateKmsKey_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:kmsKeyId:AssociateKmsKey'</a>, <a>associateKmsKey_kmsKeyId</a>
--   - The Amazon Resource Name (ARN) of the CMK to use when encrypting log
--   data. This must be a symmetric CMK. For more information, see
--   <a>Amazon Resource Names - Key Management Service</a> and <a>Using
--   Symmetric and Asymmetric Keys</a>.
newAssociateKmsKey :: Text -> Text -> AssociateKmsKey

-- | <i>See:</i> <a>newAssociateKmsKeyResponse</a> smart constructor.
data AssociateKmsKeyResponse
AssociateKmsKeyResponse' :: AssociateKmsKeyResponse

-- | Create a value of <a>AssociateKmsKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAssociateKmsKeyResponse :: AssociateKmsKeyResponse

-- | <i>See:</i> <a>newGetQueryResults</a> smart constructor.
data GetQueryResults
GetQueryResults' :: Text -> GetQueryResults

-- | Create a value of <a>GetQueryResults</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryId:GetQueryResults'</a>, <a>getQueryResults_queryId</a> -
--   The ID number of the query.
newGetQueryResults :: Text -> GetQueryResults

-- | <i>See:</i> <a>newGetQueryResultsResponse</a> smart constructor.
data GetQueryResultsResponse
GetQueryResultsResponse' :: Maybe QueryStatus -> Maybe [[ResultField]] -> Maybe QueryStatistics -> Int -> GetQueryResultsResponse

-- | Create a value of <a>GetQueryResultsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetQueryResultsResponse'</a>,
--   <a>getQueryResultsResponse_status</a> - The status of the most recent
--   running of the query. Possible values are <tt>Cancelled</tt>,
--   <tt>Complete</tt>, <tt>Failed</tt>, <tt>Running</tt>,
--   <tt>Scheduled</tt>, <tt>Timeout</tt>, and <tt>Unknown</tt>.
--   
--   Queries time out after 15 minutes of execution. To avoid having your
--   queries time out, reduce the time range being searched or partition
--   your query into a number of queries.
--   
--   <a>$sel:results:GetQueryResultsResponse'</a>,
--   <a>getQueryResultsResponse_results</a> - The log events that matched
--   the query criteria during the most recent time it ran.
--   
--   The <tt>results</tt> value is an array of arrays. Each log event is
--   one object in the top-level array. Each of these log event objects is
--   an array of <tt>field</tt>/<tt>value</tt> pairs.
--   
--   <a>$sel:statistics:GetQueryResultsResponse'</a>,
--   <a>getQueryResultsResponse_statistics</a> - Includes the number of log
--   events scanned by the query, the number of log events that matched the
--   query criteria, and the total number of bytes in the log events that
--   were scanned. These values reflect the full raw results of the query.
--   
--   <a>$sel:httpStatus:GetQueryResultsResponse'</a>,
--   <a>getQueryResultsResponse_httpStatus</a> - The response's http status
--   code.
newGetQueryResultsResponse :: Int -> GetQueryResultsResponse

-- | <i>See:</i> <a>newDescribeLogStreams</a> smart constructor.
data DescribeLogStreams
DescribeLogStreams' :: Maybe OrderBy -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> DescribeLogStreams

-- | Create a value of <a>DescribeLogStreams</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:orderBy:DescribeLogStreams'</a>,
--   <a>describeLogStreams_orderBy</a> - If the value is
--   <tt>LogStreamName</tt>, the results are ordered by log stream name. If
--   the value is <tt>LastEventTime</tt>, the results are ordered by the
--   event time. The default value is <tt>LogStreamName</tt>.
--   
--   If you order the results by event time, you cannot specify the
--   <tt>logStreamNamePrefix</tt> parameter.
--   
--   <tt>lastEventTimestamp</tt> represents the time of the most recent log
--   event in the log stream in CloudWatch Logs. This number is expressed
--   as the number of milliseconds after Jan 1, 1970 00:00:00 UTC.
--   <tt>lastEventTimestamp</tt> updates on an eventual consistency basis.
--   It typically updates in less than an hour from ingestion, but in rare
--   situations might take longer.
--   
--   <a>$sel:descending:DescribeLogStreams'</a>,
--   <a>describeLogStreams_descending</a> - If the value is true, results
--   are returned in descending order. If the value is to false, results
--   are returned in ascending order. The default value is false.
--   
--   <a>$sel:nextToken:DescribeLogStreams'</a>,
--   <a>describeLogStreams_nextToken</a> - The token for the next set of
--   items to return. (You received this token from a previous call.)
--   
--   <a>$sel:logStreamNamePrefix:DescribeLogStreams'</a>,
--   <a>describeLogStreams_logStreamNamePrefix</a> - The prefix to match.
--   
--   If <tt>orderBy</tt> is <tt>LastEventTime</tt>, you cannot specify this
--   parameter.
--   
--   <a>$sel:limit:DescribeLogStreams'</a>, <a>describeLogStreams_limit</a>
--   - The maximum number of items returned. If you don't specify a value,
--   the default is up to 50 items.
--   
--   <a>$sel:logGroupName:DescribeLogStreams'</a>,
--   <a>describeLogStreams_logGroupName</a> - The name of the log group.
newDescribeLogStreams :: Text -> DescribeLogStreams

-- | <i>See:</i> <a>newDescribeLogStreamsResponse</a> smart constructor.
data DescribeLogStreamsResponse
DescribeLogStreamsResponse' :: Maybe Text -> Maybe [LogStream] -> Int -> DescribeLogStreamsResponse

-- | Create a value of <a>DescribeLogStreamsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeLogStreams'</a>,
--   <a>describeLogStreamsResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:logStreams:DescribeLogStreamsResponse'</a>,
--   <a>describeLogStreamsResponse_logStreams</a> - The log streams.
--   
--   <a>$sel:httpStatus:DescribeLogStreamsResponse'</a>,
--   <a>describeLogStreamsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeLogStreamsResponse :: Int -> DescribeLogStreamsResponse

-- | The method used to distribute log data to the destination, which can
--   be either random or grouped by log stream.
newtype Distribution
Distribution' :: Text -> Distribution
[fromDistribution] :: Distribution -> Text
pattern Distribution_ByLogStream :: Distribution
pattern Distribution_Random :: Distribution
newtype ExportTaskStatusCode
ExportTaskStatusCode' :: Text -> ExportTaskStatusCode
[fromExportTaskStatusCode] :: ExportTaskStatusCode -> Text
pattern ExportTaskStatusCode_CANCELLED :: ExportTaskStatusCode
pattern ExportTaskStatusCode_COMPLETED :: ExportTaskStatusCode
pattern ExportTaskStatusCode_FAILED :: ExportTaskStatusCode
pattern ExportTaskStatusCode_PENDING :: ExportTaskStatusCode
pattern ExportTaskStatusCode_PENDING_CANCEL :: ExportTaskStatusCode
pattern ExportTaskStatusCode_RUNNING :: ExportTaskStatusCode
newtype OrderBy
OrderBy' :: Text -> OrderBy
[fromOrderBy] :: OrderBy -> Text
pattern OrderBy_LastEventTime :: OrderBy
pattern OrderBy_LogStreamName :: OrderBy
newtype QueryStatus
QueryStatus' :: Text -> QueryStatus
[fromQueryStatus] :: QueryStatus -> Text
pattern QueryStatus_Cancelled :: QueryStatus
pattern QueryStatus_Complete :: QueryStatus
pattern QueryStatus_Failed :: QueryStatus
pattern QueryStatus_Running :: QueryStatus
pattern QueryStatus_Scheduled :: QueryStatus
pattern QueryStatus_Timeout :: QueryStatus
pattern QueryStatus_Unknown :: QueryStatus
newtype StandardUnit
StandardUnit' :: Text -> StandardUnit
[fromStandardUnit] :: StandardUnit -> Text
pattern StandardUnit_Bits :: StandardUnit
pattern StandardUnit_Bits_Second :: StandardUnit
pattern StandardUnit_Bytes :: StandardUnit
pattern StandardUnit_Bytes_Second :: StandardUnit
pattern StandardUnit_Count :: StandardUnit
pattern StandardUnit_Count_Second :: StandardUnit
pattern StandardUnit_Gigabits :: StandardUnit
pattern StandardUnit_Gigabits_Second :: StandardUnit
pattern StandardUnit_Gigabytes :: StandardUnit
pattern StandardUnit_Gigabytes_Second :: StandardUnit
pattern StandardUnit_Kilobits :: StandardUnit
pattern StandardUnit_Kilobits_Second :: StandardUnit
pattern StandardUnit_Kilobytes :: StandardUnit
pattern StandardUnit_Kilobytes_Second :: StandardUnit
pattern StandardUnit_Megabits :: StandardUnit
pattern StandardUnit_Megabits_Second :: StandardUnit
pattern StandardUnit_Megabytes :: StandardUnit
pattern StandardUnit_Megabytes_Second :: StandardUnit
pattern StandardUnit_Microseconds :: StandardUnit
pattern StandardUnit_Milliseconds :: StandardUnit
pattern StandardUnit_None :: StandardUnit
pattern StandardUnit_Percent :: StandardUnit
pattern StandardUnit_Seconds :: StandardUnit
pattern StandardUnit_Terabits :: StandardUnit
pattern StandardUnit_Terabits_Second :: StandardUnit
pattern StandardUnit_Terabytes :: StandardUnit
pattern StandardUnit_Terabytes_Second :: StandardUnit

-- | Represents a cross-account destination that receives subscription log
--   events.
--   
--   <i>See:</i> <a>newDestination</a> smart constructor.
data Destination
Destination' :: Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Destination

-- | Create a value of <a>Destination</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetArn:Destination'</a>, <a>destination_targetArn</a> - The
--   Amazon Resource Name (ARN) of the physical target where the log events
--   are delivered (for example, a Kinesis stream).
--   
--   <a>$sel:creationTime:Destination'</a>, <a>destination_creationTime</a>
--   - The creation time of the destination, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:arn:Destination'</a>, <a>destination_arn</a> - The ARN of this
--   destination.
--   
--   <a>$sel:accessPolicy:Destination'</a>, <a>destination_accessPolicy</a>
--   - An IAM policy document that governs which Amazon Web Services
--   accounts can create subscription filters against this destination.
--   
--   <a>$sel:destinationName:Destination'</a>,
--   <a>destination_destinationName</a> - The name of the destination.
--   
--   <a>$sel:roleArn:Destination'</a>, <a>destination_roleArn</a> - A role
--   for impersonation, used when delivering log events to the target.
newDestination :: Destination

-- | Represents an export task.
--   
--   <i>See:</i> <a>newExportTask</a> smart constructor.
data ExportTask
ExportTask' :: Maybe Text -> Maybe Text -> Maybe ExportTaskStatus -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe ExportTaskExecutionInfo -> ExportTask

-- | Create a value of <a>ExportTask</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationPrefix:ExportTask'</a>,
--   <a>exportTask_destinationPrefix</a> - The prefix that was used as the
--   start of Amazon S3 key for every object exported.
--   
--   <a>$sel:destination:ExportTask'</a>, <a>exportTask_destination</a> -
--   The name of the S3 bucket to which the log data was exported.
--   
--   <a>$sel:status:ExportTask'</a>, <a>exportTask_status</a> - The status
--   of the export task.
--   
--   <a>$sel:taskName:ExportTask'</a>, <a>exportTask_taskName</a> - The
--   name of the export task.
--   
--   <a>$sel:taskId:ExportTask'</a>, <a>exportTask_taskId</a> - The ID of
--   the export task.
--   
--   <a>$sel:to:ExportTask'</a>, <a>exportTask_to</a> - The end time,
--   expressed as the number of milliseconds after Jan 1, 1970 00:00:00
--   UTC. Events with a timestamp later than this time are not exported.
--   
--   <a>$sel:from:ExportTask'</a>, <a>exportTask_from</a> - The start time,
--   expressed as the number of milliseconds after Jan 1, 1970 00:00:00
--   UTC. Events with a timestamp before this time are not exported.
--   
--   <a>$sel:logGroupName:ExportTask'</a>, <a>exportTask_logGroupName</a> -
--   The name of the log group from which logs data was exported.
--   
--   <a>$sel:executionInfo:ExportTask'</a>, <a>exportTask_executionInfo</a>
--   - Execution information about the export task.
newExportTask :: ExportTask

-- | Represents the status of an export task.
--   
--   <i>See:</i> <a>newExportTaskExecutionInfo</a> smart constructor.
data ExportTaskExecutionInfo
ExportTaskExecutionInfo' :: Maybe Natural -> Maybe Natural -> ExportTaskExecutionInfo

-- | Create a value of <a>ExportTaskExecutionInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ExportTaskExecutionInfo'</a>,
--   <a>exportTaskExecutionInfo_creationTime</a> - The creation time of the
--   export task, expressed as the number of milliseconds after Jan 1, 1970
--   00:00:00 UTC.
--   
--   <a>$sel:completionTime:ExportTaskExecutionInfo'</a>,
--   <a>exportTaskExecutionInfo_completionTime</a> - The completion time of
--   the export task, expressed as the number of milliseconds after Jan 1,
--   1970 00:00:00 UTC.
newExportTaskExecutionInfo :: ExportTaskExecutionInfo

-- | Represents the status of an export task.
--   
--   <i>See:</i> <a>newExportTaskStatus</a> smart constructor.
data ExportTaskStatus
ExportTaskStatus' :: Maybe ExportTaskStatusCode -> Maybe Text -> ExportTaskStatus

-- | Create a value of <a>ExportTaskStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:code:ExportTaskStatus'</a>, <a>exportTaskStatus_code</a> - The
--   status code of the export task.
--   
--   <a>$sel:message:ExportTaskStatus'</a>, <a>exportTaskStatus_message</a>
--   - The status message related to the status code.
newExportTaskStatus :: ExportTaskStatus

-- | Represents a matched event.
--   
--   <i>See:</i> <a>newFilteredLogEvent</a> smart constructor.
data FilteredLogEvent
FilteredLogEvent' :: Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> FilteredLogEvent

-- | Create a value of <a>FilteredLogEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ingestionTime:FilteredLogEvent'</a>,
--   <a>filteredLogEvent_ingestionTime</a> - The time the event was
--   ingested, expressed as the number of milliseconds after Jan 1, 1970
--   00:00:00 UTC.
--   
--   <a>$sel:logStreamName:FilteredLogEvent'</a>,
--   <a>filteredLogEvent_logStreamName</a> - The name of the log stream to
--   which this event belongs.
--   
--   <a>$sel:message:FilteredLogEvent'</a>, <a>filteredLogEvent_message</a>
--   - The data contained in the log event.
--   
--   <a>$sel:timestamp:FilteredLogEvent'</a>,
--   <a>filteredLogEvent_timestamp</a> - The time the event occurred,
--   expressed as the number of milliseconds after Jan 1, 1970 00:00:00
--   UTC.
--   
--   <a>$sel:eventId:FilteredLogEvent'</a>, <a>filteredLogEvent_eventId</a>
--   - The ID of the event.
newFilteredLogEvent :: FilteredLogEvent

-- | Represents a log event, which is a record of activity that was
--   recorded by the application or resource being monitored.
--   
--   <i>See:</i> <a>newInputLogEvent</a> smart constructor.
data InputLogEvent
InputLogEvent' :: Natural -> Text -> InputLogEvent

-- | Create a value of <a>InputLogEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamp:InputLogEvent'</a>, <a>inputLogEvent_timestamp</a> -
--   The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:message:InputLogEvent'</a>, <a>inputLogEvent_message</a> - The
--   raw event message.
newInputLogEvent :: Natural -> Text -> InputLogEvent

-- | Represents a log group.
--   
--   <i>See:</i> <a>newLogGroup</a> smart constructor.
data LogGroup
LogGroup' :: Maybe Natural -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Natural -> LogGroup

-- | Create a value of <a>LogGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:LogGroup'</a>, <a>logGroup_creationTime</a> - The
--   creation time of the log group, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:metricFilterCount:LogGroup'</a>,
--   <a>logGroup_metricFilterCount</a> - The number of metric filters.
--   
--   <a>$sel:arn:LogGroup'</a>, <a>logGroup_arn</a> - The Amazon Resource
--   Name (ARN) of the log group.
--   
--   <a>$sel:logGroupName:LogGroup'</a>, <a>logGroup_logGroupName</a> - The
--   name of the log group.
--   
--   <a>$sel:retentionInDays:LogGroup'</a>, <a>logGroup_retentionInDays</a>
--   - Undocumented member.
--   
--   <a>$sel:kmsKeyId:LogGroup'</a>, <a>logGroup_kmsKeyId</a> - The Amazon
--   Resource Name (ARN) of the CMK to use when encrypting log data.
--   
--   <a>$sel:storedBytes:LogGroup'</a>, <a>logGroup_storedBytes</a> - The
--   number of bytes stored.
newLogGroup :: LogGroup

-- | The fields contained in log events found by a
--   <tt>GetLogGroupFields</tt> operation, along with the percentage of
--   queried log events in which each field appears.
--   
--   <i>See:</i> <a>newLogGroupField</a> smart constructor.
data LogGroupField
LogGroupField' :: Maybe Natural -> Maybe Text -> LogGroupField

-- | Create a value of <a>LogGroupField</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:percent:LogGroupField'</a>, <a>logGroupField_percent</a> - The
--   percentage of log events queried that contained the field.
--   
--   <a>$sel:name:LogGroupField'</a>, <a>logGroupField_name</a> - The name
--   of a log field.
newLogGroupField :: LogGroupField

-- | Represents a log stream, which is a sequence of log events from a
--   single emitter of logs.
--   
--   <i>See:</i> <a>newLogStream</a> smart constructor.
data LogStream
LogStream' :: Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe Natural -> Maybe Natural -> LogStream

-- | Create a value of <a>LogStream</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:LogStream'</a>, <a>logStream_creationTime</a> -
--   The creation time of the stream, expressed as the number of
--   milliseconds after Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:uploadSequenceToken:LogStream'</a>,
--   <a>logStream_uploadSequenceToken</a> - The sequence token.
--   
--   <a>$sel:arn:LogStream'</a>, <a>logStream_arn</a> - The Amazon Resource
--   Name (ARN) of the log stream.
--   
--   <a>$sel:firstEventTimestamp:LogStream'</a>,
--   <a>logStream_firstEventTimestamp</a> - The time of the first event,
--   expressed as the number of milliseconds after Jan 1, 1970 00:00:00
--   UTC.
--   
--   <a>$sel:logStreamName:LogStream'</a>, <a>logStream_logStreamName</a> -
--   The name of the log stream.
--   
--   <a>$sel:storedBytes:LogStream'</a>, <a>logStream_storedBytes</a> - The
--   number of bytes stored.
--   
--   <b>Important:</b> On June 17, 2019, this parameter was deprecated for
--   log streams, and is always reported as zero. This change applies only
--   to log streams. The <tt>storedBytes</tt> parameter for log groups is
--   not affected.
--   
--   <a>$sel:lastIngestionTime:LogStream'</a>,
--   <a>logStream_lastIngestionTime</a> - The ingestion time, expressed as
--   the number of milliseconds after Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:lastEventTimestamp:LogStream'</a>,
--   <a>logStream_lastEventTimestamp</a> - The time of the most recent log
--   event in the log stream in CloudWatch Logs. This number is expressed
--   as the number of milliseconds after Jan 1, 1970 00:00:00 UTC. The
--   <tt>lastEventTime</tt> value updates on an eventual consistency basis.
--   It typically updates in less than an hour from ingestion, but in rare
--   situations might take longer.
newLogStream :: LogStream

-- | Metric filters express how CloudWatch Logs would extract metric
--   observations from ingested log events and transform them into metric
--   data in a CloudWatch metric.
--   
--   <i>See:</i> <a>newMetricFilter</a> smart constructor.
data MetricFilter
MetricFilter' :: Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty MetricTransformation) -> MetricFilter

-- | Create a value of <a>MetricFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:MetricFilter'</a>,
--   <a>metricFilter_creationTime</a> - The creation time of the metric
--   filter, expressed as the number of milliseconds after Jan 1, 1970
--   00:00:00 UTC.
--   
--   <a>$sel:filterName:MetricFilter'</a>, <a>metricFilter_filterName</a> -
--   The name of the metric filter.
--   
--   <a>$sel:logGroupName:MetricFilter'</a>,
--   <a>metricFilter_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:filterPattern:MetricFilter'</a>,
--   <a>metricFilter_filterPattern</a> - Undocumented member.
--   
--   <a>$sel:metricTransformations:MetricFilter'</a>,
--   <a>metricFilter_metricTransformations</a> - The metric
--   transformations.
newMetricFilter :: MetricFilter

-- | Represents a matched event.
--   
--   <i>See:</i> <a>newMetricFilterMatchRecord</a> smart constructor.
data MetricFilterMatchRecord
MetricFilterMatchRecord' :: Maybe (HashMap Text Text) -> Maybe Integer -> Maybe Text -> MetricFilterMatchRecord

-- | Create a value of <a>MetricFilterMatchRecord</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:extractedValues:MetricFilterMatchRecord'</a>,
--   <a>metricFilterMatchRecord_extractedValues</a> - The values extracted
--   from the event data by the filter.
--   
--   <a>$sel:eventNumber:MetricFilterMatchRecord'</a>,
--   <a>metricFilterMatchRecord_eventNumber</a> - The event number.
--   
--   <a>$sel:eventMessage:MetricFilterMatchRecord'</a>,
--   <a>metricFilterMatchRecord_eventMessage</a> - The raw event data.
newMetricFilterMatchRecord :: MetricFilterMatchRecord

-- | Indicates how to transform ingested log events to metric data in a
--   CloudWatch metric.
--   
--   <i>See:</i> <a>newMetricTransformation</a> smart constructor.
data MetricTransformation
MetricTransformation' :: Maybe Double -> Maybe (HashMap Text Text) -> Maybe StandardUnit -> Text -> Text -> Text -> MetricTransformation

-- | Create a value of <a>MetricTransformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultValue:MetricTransformation'</a>,
--   <a>metricTransformation_defaultValue</a> - (Optional) The value to
--   emit when a filter pattern does not match a log event. This value can
--   be null.
--   
--   <a>$sel:dimensions:MetricTransformation'</a>,
--   <a>metricTransformation_dimensions</a> - The fields to use as
--   dimensions for the metric. One metric filter can include as many as
--   three dimensions.
--   
--   Metrics extracted from log events are charged as custom metrics. To
--   prevent unexpected high charges, do not specify high-cardinality
--   fields such as <tt>IPAddress</tt> or <tt>requestID</tt> as dimensions.
--   Each different value found for a dimension is treated as a separate
--   metric and accrues charges as a separate custom metric.
--   
--   To help prevent accidental high charges, Amazon disables a metric
--   filter if it generates 1000 different name/value pairs for the
--   dimensions that you have specified within a certain amount of time.
--   
--   You can also set up a billing alarm to alert you if your charges are
--   higher than expected. For more information, see <a>Creating a Billing
--   Alarm to Monitor Your Estimated Amazon Web Services Charges</a>.
--   
--   <a>$sel:unit:MetricTransformation'</a>,
--   <a>metricTransformation_unit</a> - The unit to assign to the metric.
--   If you omit this, the unit is set as <tt>None</tt>.
--   
--   <a>$sel:metricName:MetricTransformation'</a>,
--   <a>metricTransformation_metricName</a> - The name of the CloudWatch
--   metric.
--   
--   <a>$sel:metricNamespace:MetricTransformation'</a>,
--   <a>metricTransformation_metricNamespace</a> - A custom namespace to
--   contain your metric in CloudWatch. Use namespaces to group together
--   metrics that are similar. For more information, see <a>Namespaces</a>.
--   
--   <a>$sel:metricValue:MetricTransformation'</a>,
--   <a>metricTransformation_metricValue</a> - The value to publish to the
--   CloudWatch metric when a filter pattern matches a log event.
newMetricTransformation :: Text -> Text -> Text -> MetricTransformation

-- | Represents a log event.
--   
--   <i>See:</i> <a>newOutputLogEvent</a> smart constructor.
data OutputLogEvent
OutputLogEvent' :: Maybe Natural -> Maybe Text -> Maybe Natural -> OutputLogEvent

-- | Create a value of <a>OutputLogEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ingestionTime:OutputLogEvent'</a>,
--   <a>outputLogEvent_ingestionTime</a> - The time the event was ingested,
--   expressed as the number of milliseconds after Jan 1, 1970 00:00:00
--   UTC.
--   
--   <a>$sel:message:OutputLogEvent'</a>, <a>outputLogEvent_message</a> -
--   The data contained in the log event.
--   
--   <a>$sel:timestamp:OutputLogEvent'</a>, <a>outputLogEvent_timestamp</a>
--   - The time the event occurred, expressed as the number of milliseconds
--   after Jan 1, 1970 00:00:00 UTC.
newOutputLogEvent :: OutputLogEvent

-- | This structure contains details about a saved CloudWatch Logs Insights
--   query definition.
--   
--   <i>See:</i> <a>newQueryDefinition</a> smart constructor.
data QueryDefinition
QueryDefinition' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> QueryDefinition

-- | Create a value of <a>QueryDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroupNames:QueryDefinition'</a>,
--   <a>queryDefinition_logGroupNames</a> - If this query definition
--   contains a list of log groups that it is limited to, that list appears
--   here.
--   
--   <a>$sel:queryDefinitionId:QueryDefinition'</a>,
--   <a>queryDefinition_queryDefinitionId</a> - The unique ID of the query
--   definition.
--   
--   <a>$sel:name:QueryDefinition'</a>, <a>queryDefinition_name</a> - The
--   name of the query definition.
--   
--   <a>$sel:queryString:QueryDefinition'</a>,
--   <a>queryDefinition_queryString</a> - The query string to use for this
--   definition. For more information, see <a>CloudWatch Logs Insights
--   Query Syntax</a>.
--   
--   <a>$sel:lastModified:QueryDefinition'</a>,
--   <a>queryDefinition_lastModified</a> - The date that the query
--   definition was most recently modified.
newQueryDefinition :: QueryDefinition

-- | Information about one CloudWatch Logs Insights query that matches the
--   request in a <tt>DescribeQueries</tt> operation.
--   
--   <i>See:</i> <a>newQueryInfo</a> smart constructor.
data QueryInfo
QueryInfo' :: Maybe QueryStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> QueryInfo

-- | Create a value of <a>QueryInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:QueryInfo'</a>, <a>queryInfo_status</a> - The status of
--   this query. Possible values are <tt>Cancelled</tt>, <tt>Complete</tt>,
--   <tt>Failed</tt>, <tt>Running</tt>, <tt>Scheduled</tt>, and
--   <tt>Unknown</tt>.
--   
--   <a>$sel:queryId:QueryInfo'</a>, <a>queryInfo_queryId</a> - The unique
--   ID number of this query.
--   
--   <a>$sel:logGroupName:QueryInfo'</a>, <a>queryInfo_logGroupName</a> -
--   The name of the log group scanned by this query.
--   
--   <a>$sel:queryString:QueryInfo'</a>, <a>queryInfo_queryString</a> - The
--   query string used in this query.
--   
--   <a>$sel:createTime:QueryInfo'</a>, <a>queryInfo_createTime</a> - The
--   date and time that this query was created.
newQueryInfo :: QueryInfo

-- | Contains the number of log events scanned by the query, the number of
--   log events that matched the query criteria, and the total number of
--   bytes in the log events that were scanned.
--   
--   <i>See:</i> <a>newQueryStatistics</a> smart constructor.
data QueryStatistics
QueryStatistics' :: Maybe Double -> Maybe Double -> Maybe Double -> QueryStatistics

-- | Create a value of <a>QueryStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordsScanned:QueryStatistics'</a>,
--   <a>queryStatistics_recordsScanned</a> - The total number of log events
--   scanned during the query.
--   
--   <a>$sel:bytesScanned:QueryStatistics'</a>,
--   <a>queryStatistics_bytesScanned</a> - The total number of bytes in the
--   log events scanned during the query.
--   
--   <a>$sel:recordsMatched:QueryStatistics'</a>,
--   <a>queryStatistics_recordsMatched</a> - The number of log events that
--   matched the query string.
newQueryStatistics :: QueryStatistics

-- | Represents the rejected events.
--   
--   <i>See:</i> <a>newRejectedLogEventsInfo</a> smart constructor.
data RejectedLogEventsInfo
RejectedLogEventsInfo' :: Maybe Int -> Maybe Int -> Maybe Int -> RejectedLogEventsInfo

-- | Create a value of <a>RejectedLogEventsInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tooOldLogEventEndIndex:RejectedLogEventsInfo'</a>,
--   <a>rejectedLogEventsInfo_tooOldLogEventEndIndex</a> - The log events
--   that are too old.
--   
--   <a>$sel:tooNewLogEventStartIndex:RejectedLogEventsInfo'</a>,
--   <a>rejectedLogEventsInfo_tooNewLogEventStartIndex</a> - The log events
--   that are too new.
--   
--   <a>$sel:expiredLogEventEndIndex:RejectedLogEventsInfo'</a>,
--   <a>rejectedLogEventsInfo_expiredLogEventEndIndex</a> - The expired log
--   events.
newRejectedLogEventsInfo :: RejectedLogEventsInfo

-- | A policy enabling one or more entities to put logs to a log group in
--   this account.
--   
--   <i>See:</i> <a>newResourcePolicy</a> smart constructor.
data ResourcePolicy
ResourcePolicy' :: Maybe Text -> Maybe Text -> Maybe Natural -> ResourcePolicy

-- | Create a value of <a>ResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyName:ResourcePolicy'</a>,
--   <a>resourcePolicy_policyName</a> - The name of the resource policy.
--   
--   <a>$sel:policyDocument:ResourcePolicy'</a>,
--   <a>resourcePolicy_policyDocument</a> - The details of the policy.
--   
--   <a>$sel:lastUpdatedTime:ResourcePolicy'</a>,
--   <a>resourcePolicy_lastUpdatedTime</a> - Timestamp showing when this
--   policy was last updated, expressed as the number of milliseconds after
--   Jan 1, 1970 00:00:00 UTC.
newResourcePolicy :: ResourcePolicy

-- | Contains one field from one log event returned by a CloudWatch Logs
--   Insights query, along with the value of that field.
--   
--   For more information about the fields that are generated by CloudWatch
--   logs, see <a>Supported Logs and Discovered Fields</a>.
--   
--   <i>See:</i> <a>newResultField</a> smart constructor.
data ResultField
ResultField' :: Maybe Text -> Maybe Text -> ResultField

-- | Create a value of <a>ResultField</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:field:ResultField'</a>, <a>resultField_field</a> - The log
--   event field.
--   
--   <a>$sel:value:ResultField'</a>, <a>resultField_value</a> - The value
--   of this field.
newResultField :: ResultField

-- | Represents the search status of a log stream.
--   
--   <i>See:</i> <a>newSearchedLogStream</a> smart constructor.
data SearchedLogStream
SearchedLogStream' :: Maybe Text -> Maybe Bool -> SearchedLogStream

-- | Create a value of <a>SearchedLogStream</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logStreamName:SearchedLogStream'</a>,
--   <a>searchedLogStream_logStreamName</a> - The name of the log stream.
--   
--   <a>$sel:searchedCompletely:SearchedLogStream'</a>,
--   <a>searchedLogStream_searchedCompletely</a> - Indicates whether all
--   the events in this log stream were searched.
newSearchedLogStream :: SearchedLogStream

-- | Represents a subscription filter.
--   
--   <i>See:</i> <a>newSubscriptionFilter</a> smart constructor.
data SubscriptionFilter
SubscriptionFilter' :: Maybe Natural -> Maybe Text -> Maybe Distribution -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> SubscriptionFilter

-- | Create a value of <a>SubscriptionFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_creationTime</a> - The creation time of the
--   subscription filter, expressed as the number of milliseconds after Jan
--   1, 1970 00:00:00 UTC.
--   
--   <a>$sel:filterName:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_filterName</a> - The name of the subscription
--   filter.
--   
--   <a>$sel:distribution:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_distribution</a> - Undocumented member.
--   
--   <a>$sel:destinationArn:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_destinationArn</a> - The Amazon Resource Name
--   (ARN) of the destination.
--   
--   <a>$sel:logGroupName:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_logGroupName</a> - The name of the log group.
--   
--   <a>$sel:filterPattern:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_filterPattern</a> - Undocumented member.
--   
--   <a>$sel:roleArn:SubscriptionFilter'</a>,
--   <a>subscriptionFilter_roleArn</a> -
newSubscriptionFilter :: SubscriptionFilter
