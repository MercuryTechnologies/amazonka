-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-ivsZSamazonka-ivs
@version 2.0


module Network.AWS.IVS.Types.BatchError

-- | Error related to a specific channel, specified by its ARN.
--   
--   <i>See:</i> <a>newBatchError</a> smart constructor.
data BatchError
BatchError' :: Maybe Text -> Maybe Text -> Maybe Text -> BatchError

-- | Channel ARN.
[$sel:arn:BatchError'] :: BatchError -> Maybe Text

-- | Error code.
[$sel:code:BatchError'] :: BatchError -> Maybe Text

-- | Error message, determined by the application.
[$sel:message:BatchError'] :: BatchError -> Maybe Text

-- | Create a value of <a>BatchError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:BatchError'</a>, <a>batchError_arn</a> - Channel ARN.
--   
--   <a>$sel:code:BatchError'</a>, <a>batchError_code</a> - Error code.
--   
--   <a>$sel:message:BatchError'</a>, <a>batchError_message</a> - Error
--   message, determined by the application.
newBatchError :: BatchError

-- | Channel ARN.
batchError_arn :: Lens' BatchError (Maybe Text)

-- | Error code.
batchError_code :: Lens' BatchError (Maybe Text)

-- | Error message, determined by the application.
batchError_message :: Lens' BatchError (Maybe Text)
instance GHC.Generics.Generic Network.AWS.IVS.Types.BatchError.BatchError
instance GHC.Show.Show Network.AWS.IVS.Types.BatchError.BatchError
instance GHC.Read.Read Network.AWS.IVS.Types.BatchError.BatchError
instance GHC.Classes.Eq Network.AWS.IVS.Types.BatchError.BatchError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IVS.Types.BatchError.BatchError
instance Data.Hashable.Class.Hashable Network.AWS.IVS.Types.BatchError.BatchError
instance Control.DeepSeq.NFData Network.AWS.IVS.Types.BatchError.BatchError


module Network.AWS.IVS.Types.ChannelLatencyMode
newtype ChannelLatencyMode
ChannelLatencyMode' :: Text -> ChannelLatencyMode
[fromChannelLatencyMode] :: ChannelLatencyMode -> Text
pattern ChannelLatencyMode_LOW :: ChannelLatencyMode
pattern ChannelLatencyMode_NORMAL :: ChannelLatencyMode
instance Network.AWS.Data.XML.ToXML Network.AWS.IVS.Types.ChannelLatencyMode.ChannelLatencyMode
instance Network.AWS.Data.XML.FromXML Network.AWS.IVS.Types.ChannelLatencyMode.ChannelLatencyMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.IVS.Types.ChannelLatencyMode.ChannelLatencyMode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.Types.ChannelLatencyMode.ChannelLatencyMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.IVS.Types.ChannelLatencyMode.ChannelLatencyMode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IVS.Types.ChannelLatencyMode.ChannelLatencyMode
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.Types.ChannelLatencyMode.ChannelLatencyMode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.IVS.Types.ChannelLatencyMode.ChannelLatencyMode
instance Network.AWS.Data.Log.ToLog Network.AWS.IVS.Types.ChannelLatencyMode.ChannelLatencyMode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.IVS.Types.ChannelLatencyMode.ChannelLatencyMode
instance Network.AWS.Data.Text.ToText Network.AWS.IVS.Types.ChannelLatencyMode.ChannelLatencyMode
instance Network.AWS.Data.Text.FromText Network.AWS.IVS.Types.ChannelLatencyMode.ChannelLatencyMode
instance Control.DeepSeq.NFData Network.AWS.IVS.Types.ChannelLatencyMode.ChannelLatencyMode
instance Data.Hashable.Class.Hashable Network.AWS.IVS.Types.ChannelLatencyMode.ChannelLatencyMode
instance GHC.Generics.Generic Network.AWS.IVS.Types.ChannelLatencyMode.ChannelLatencyMode
instance GHC.Classes.Ord Network.AWS.IVS.Types.ChannelLatencyMode.ChannelLatencyMode
instance GHC.Classes.Eq Network.AWS.IVS.Types.ChannelLatencyMode.ChannelLatencyMode
instance GHC.Read.Read Network.AWS.IVS.Types.ChannelLatencyMode.ChannelLatencyMode
instance GHC.Show.Show Network.AWS.IVS.Types.ChannelLatencyMode.ChannelLatencyMode


module Network.AWS.IVS.Types.ChannelSummary

-- | Summary information about a channel.
--   
--   <i>See:</i> <a>newChannelSummary</a> smart constructor.
data ChannelSummary
ChannelSummary' :: Maybe Bool -> Maybe Text -> Maybe ChannelLatencyMode -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> ChannelSummary

-- | Whether the channel is private (enabled for playback authorization).
--   Default: <tt>false</tt>.
[$sel:authorized:ChannelSummary'] :: ChannelSummary -> Maybe Bool

-- | Channel ARN.
[$sel:arn:ChannelSummary'] :: ChannelSummary -> Maybe Text

-- | Channel latency mode. Use <tt>NORMAL</tt> to broadcast and deliver
--   live video up to Full HD. Use <tt>LOW</tt> for near-real-time
--   interaction with viewers. Default: <tt>LOW</tt>. (Note: In the Amazon
--   IVS console, <tt>LOW</tt> and <tt>NORMAL</tt> correspond to Ultra-low
--   and Standard, respectively.)
[$sel:latencyMode:ChannelSummary'] :: ChannelSummary -> Maybe ChannelLatencyMode

-- | Channel name.
[$sel:name:ChannelSummary'] :: ChannelSummary -> Maybe Text

-- | Recording-configuration ARN. A value other than an empty string
--   indicates that recording is enabled. Default: "" (empty string,
--   recording is disabled).
[$sel:recordingConfigurationArn:ChannelSummary'] :: ChannelSummary -> Maybe Text

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
[$sel:tags:ChannelSummary'] :: ChannelSummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>ChannelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorized:ChannelSummary'</a>,
--   <a>channelSummary_authorized</a> - Whether the channel is private
--   (enabled for playback authorization). Default: <tt>false</tt>.
--   
--   <a>$sel:arn:ChannelSummary'</a>, <a>channelSummary_arn</a> - Channel
--   ARN.
--   
--   <a>$sel:latencyMode:ChannelSummary'</a>,
--   <a>channelSummary_latencyMode</a> - Channel latency mode. Use
--   <tt>NORMAL</tt> to broadcast and deliver live video up to Full HD. Use
--   <tt>LOW</tt> for near-real-time interaction with viewers. Default:
--   <tt>LOW</tt>. (Note: In the Amazon IVS console, <tt>LOW</tt> and
--   <tt>NORMAL</tt> correspond to Ultra-low and Standard, respectively.)
--   
--   <a>$sel:name:ChannelSummary'</a>, <a>channelSummary_name</a> - Channel
--   name.
--   
--   <a>$sel:recordingConfigurationArn:ChannelSummary'</a>,
--   <a>channelSummary_recordingConfigurationArn</a> -
--   Recording-configuration ARN. A value other than an empty string
--   indicates that recording is enabled. Default: "" (empty string,
--   recording is disabled).
--   
--   <a>$sel:tags:ChannelSummary'</a>, <a>channelSummary_tags</a> - Array
--   of 1-50 maps, each of the form <tt>string:string (key:value)</tt>.
newChannelSummary :: ChannelSummary

-- | Whether the channel is private (enabled for playback authorization).
--   Default: <tt>false</tt>.
channelSummary_authorized :: Lens' ChannelSummary (Maybe Bool)

-- | Channel ARN.
channelSummary_arn :: Lens' ChannelSummary (Maybe Text)

-- | Channel latency mode. Use <tt>NORMAL</tt> to broadcast and deliver
--   live video up to Full HD. Use <tt>LOW</tt> for near-real-time
--   interaction with viewers. Default: <tt>LOW</tt>. (Note: In the Amazon
--   IVS console, <tt>LOW</tt> and <tt>NORMAL</tt> correspond to Ultra-low
--   and Standard, respectively.)
channelSummary_latencyMode :: Lens' ChannelSummary (Maybe ChannelLatencyMode)

-- | Channel name.
channelSummary_name :: Lens' ChannelSummary (Maybe Text)

-- | Recording-configuration ARN. A value other than an empty string
--   indicates that recording is enabled. Default: "" (empty string,
--   recording is disabled).
channelSummary_recordingConfigurationArn :: Lens' ChannelSummary (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
channelSummary_tags :: Lens' ChannelSummary (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.IVS.Types.ChannelSummary.ChannelSummary
instance GHC.Show.Show Network.AWS.IVS.Types.ChannelSummary.ChannelSummary
instance GHC.Read.Read Network.AWS.IVS.Types.ChannelSummary.ChannelSummary
instance GHC.Classes.Eq Network.AWS.IVS.Types.ChannelSummary.ChannelSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IVS.Types.ChannelSummary.ChannelSummary
instance Data.Hashable.Class.Hashable Network.AWS.IVS.Types.ChannelSummary.ChannelSummary
instance Control.DeepSeq.NFData Network.AWS.IVS.Types.ChannelSummary.ChannelSummary


module Network.AWS.IVS.Types.ChannelType
newtype ChannelType
ChannelType' :: Text -> ChannelType
[fromChannelType] :: ChannelType -> Text
pattern ChannelType_BASIC :: ChannelType
pattern ChannelType_STANDARD :: ChannelType
instance Network.AWS.Data.XML.ToXML Network.AWS.IVS.Types.ChannelType.ChannelType
instance Network.AWS.Data.XML.FromXML Network.AWS.IVS.Types.ChannelType.ChannelType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.IVS.Types.ChannelType.ChannelType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.Types.ChannelType.ChannelType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.IVS.Types.ChannelType.ChannelType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IVS.Types.ChannelType.ChannelType
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.Types.ChannelType.ChannelType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.IVS.Types.ChannelType.ChannelType
instance Network.AWS.Data.Log.ToLog Network.AWS.IVS.Types.ChannelType.ChannelType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.IVS.Types.ChannelType.ChannelType
instance Network.AWS.Data.Text.ToText Network.AWS.IVS.Types.ChannelType.ChannelType
instance Network.AWS.Data.Text.FromText Network.AWS.IVS.Types.ChannelType.ChannelType
instance Control.DeepSeq.NFData Network.AWS.IVS.Types.ChannelType.ChannelType
instance Data.Hashable.Class.Hashable Network.AWS.IVS.Types.ChannelType.ChannelType
instance GHC.Generics.Generic Network.AWS.IVS.Types.ChannelType.ChannelType
instance GHC.Classes.Ord Network.AWS.IVS.Types.ChannelType.ChannelType
instance GHC.Classes.Eq Network.AWS.IVS.Types.ChannelType.ChannelType
instance GHC.Read.Read Network.AWS.IVS.Types.ChannelType.ChannelType
instance GHC.Show.Show Network.AWS.IVS.Types.ChannelType.ChannelType


module Network.AWS.IVS.Types.Channel

-- | Object specifying a channel.
--   
--   <i>See:</i> <a>newChannel</a> smart constructor.
data Channel
Channel' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe ChannelLatencyMode -> Maybe Text -> Maybe Text -> Maybe ChannelType -> Maybe (HashMap Text Text) -> Maybe Text -> Channel

-- | Channel playback URL.
[$sel:playbackUrl:Channel'] :: Channel -> Maybe Text

-- | Whether the channel is private (enabled for playback authorization).
--   Default: <tt>false</tt>.
[$sel:authorized:Channel'] :: Channel -> Maybe Bool

-- | Channel ARN.
[$sel:arn:Channel'] :: Channel -> Maybe Text

-- | Channel latency mode. Use <tt>NORMAL</tt> to broadcast and deliver
--   live video up to Full HD. Use <tt>LOW</tt> for near-real-time
--   interaction with viewers. Default: <tt>LOW</tt>. (Note: In the Amazon
--   IVS console, <tt>LOW</tt> and <tt>NORMAL</tt> correspond to Ultra-low
--   and Standard, respectively.)
[$sel:latencyMode:Channel'] :: Channel -> Maybe ChannelLatencyMode

-- | Channel name.
[$sel:name:Channel'] :: Channel -> Maybe Text

-- | Recording-configuration ARN. A value other than an empty string
--   indicates that recording is enabled. Default: "" (empty string,
--   recording is disabled).
[$sel:recordingConfigurationArn:Channel'] :: Channel -> Maybe Text

-- | Channel type, which determines the allowable resolution and bitrate.
--   /If you exceed the allowable resolution or bitrate, the stream
--   probably will disconnect immediately./ Default: <tt>STANDARD</tt>.
--   Valid values:
--   
--   <ul>
--   <li><tt>STANDARD</tt>: Multiple qualities are generated from the
--   original input, to automatically give viewers the best experience for
--   their devices and network conditions. Resolution can be up to 1080p
--   and bitrate can be up to 8.5 Mbps. Audio is transcoded only for
--   renditions 360p and below; above that, audio is passed through.</li>
--   <li><tt>BASIC</tt>: Amazon IVS delivers the original input to viewers.
--   The viewer’s video-quality choice is limited to the original input.
--   Resolution can be up to 480p and bitrate can be up to 1.5 Mbps.</li>
--   </ul>
[$sel:type':Channel'] :: Channel -> Maybe ChannelType

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
[$sel:tags:Channel'] :: Channel -> Maybe (HashMap Text Text)

-- | Channel ingest endpoint, part of the definition of an ingest server,
--   used when you set up streaming software.
[$sel:ingestEndpoint:Channel'] :: Channel -> Maybe Text

-- | Create a value of <a>Channel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playbackUrl:Channel'</a>, <a>channel_playbackUrl</a> - Channel
--   playback URL.
--   
--   <a>$sel:authorized:Channel'</a>, <a>channel_authorized</a> - Whether
--   the channel is private (enabled for playback authorization). Default:
--   <tt>false</tt>.
--   
--   <a>$sel:arn:Channel'</a>, <a>channel_arn</a> - Channel ARN.
--   
--   <a>$sel:latencyMode:Channel'</a>, <a>channel_latencyMode</a> - Channel
--   latency mode. Use <tt>NORMAL</tt> to broadcast and deliver live video
--   up to Full HD. Use <tt>LOW</tt> for near-real-time interaction with
--   viewers. Default: <tt>LOW</tt>. (Note: In the Amazon IVS console,
--   <tt>LOW</tt> and <tt>NORMAL</tt> correspond to Ultra-low and Standard,
--   respectively.)
--   
--   <a>$sel:name:Channel'</a>, <a>channel_name</a> - Channel name.
--   
--   <a>$sel:recordingConfigurationArn:Channel'</a>,
--   <a>channel_recordingConfigurationArn</a> - Recording-configuration
--   ARN. A value other than an empty string indicates that recording is
--   enabled. Default: "" (empty string, recording is disabled).
--   
--   <a>$sel:type':Channel'</a>, <a>channel_type</a> - Channel type, which
--   determines the allowable resolution and bitrate. /If you exceed the
--   allowable resolution or bitrate, the stream probably will disconnect
--   immediately./ Default: <tt>STANDARD</tt>. Valid values:
--   
--   <ul>
--   <li><tt>STANDARD</tt>: Multiple qualities are generated from the
--   original input, to automatically give viewers the best experience for
--   their devices and network conditions. Resolution can be up to 1080p
--   and bitrate can be up to 8.5 Mbps. Audio is transcoded only for
--   renditions 360p and below; above that, audio is passed through.</li>
--   <li><tt>BASIC</tt>: Amazon IVS delivers the original input to viewers.
--   The viewer’s video-quality choice is limited to the original input.
--   Resolution can be up to 480p and bitrate can be up to 1.5 Mbps.</li>
--   </ul>
--   
--   <a>$sel:tags:Channel'</a>, <a>channel_tags</a> - Array of 1-50 maps,
--   each of the form <tt>string:string (key:value)</tt>.
--   
--   <a>$sel:ingestEndpoint:Channel'</a>, <a>channel_ingestEndpoint</a> -
--   Channel ingest endpoint, part of the definition of an ingest server,
--   used when you set up streaming software.
newChannel :: Channel

-- | Channel playback URL.
channel_playbackUrl :: Lens' Channel (Maybe Text)

-- | Whether the channel is private (enabled for playback authorization).
--   Default: <tt>false</tt>.
channel_authorized :: Lens' Channel (Maybe Bool)

-- | Channel ARN.
channel_arn :: Lens' Channel (Maybe Text)

-- | Channel latency mode. Use <tt>NORMAL</tt> to broadcast and deliver
--   live video up to Full HD. Use <tt>LOW</tt> for near-real-time
--   interaction with viewers. Default: <tt>LOW</tt>. (Note: In the Amazon
--   IVS console, <tt>LOW</tt> and <tt>NORMAL</tt> correspond to Ultra-low
--   and Standard, respectively.)
channel_latencyMode :: Lens' Channel (Maybe ChannelLatencyMode)

-- | Channel name.
channel_name :: Lens' Channel (Maybe Text)

-- | Recording-configuration ARN. A value other than an empty string
--   indicates that recording is enabled. Default: "" (empty string,
--   recording is disabled).
channel_recordingConfigurationArn :: Lens' Channel (Maybe Text)

-- | Channel type, which determines the allowable resolution and bitrate.
--   /If you exceed the allowable resolution or bitrate, the stream
--   probably will disconnect immediately./ Default: <tt>STANDARD</tt>.
--   Valid values:
--   
--   <ul>
--   <li><tt>STANDARD</tt>: Multiple qualities are generated from the
--   original input, to automatically give viewers the best experience for
--   their devices and network conditions. Resolution can be up to 1080p
--   and bitrate can be up to 8.5 Mbps. Audio is transcoded only for
--   renditions 360p and below; above that, audio is passed through.</li>
--   <li><tt>BASIC</tt>: Amazon IVS delivers the original input to viewers.
--   The viewer’s video-quality choice is limited to the original input.
--   Resolution can be up to 480p and bitrate can be up to 1.5 Mbps.</li>
--   </ul>
channel_type :: Lens' Channel (Maybe ChannelType)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
channel_tags :: Lens' Channel (Maybe (HashMap Text Text))

-- | Channel ingest endpoint, part of the definition of an ingest server,
--   used when you set up streaming software.
channel_ingestEndpoint :: Lens' Channel (Maybe Text)
instance GHC.Generics.Generic Network.AWS.IVS.Types.Channel.Channel
instance GHC.Show.Show Network.AWS.IVS.Types.Channel.Channel
instance GHC.Read.Read Network.AWS.IVS.Types.Channel.Channel
instance GHC.Classes.Eq Network.AWS.IVS.Types.Channel.Channel
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IVS.Types.Channel.Channel
instance Data.Hashable.Class.Hashable Network.AWS.IVS.Types.Channel.Channel
instance Control.DeepSeq.NFData Network.AWS.IVS.Types.Channel.Channel


module Network.AWS.IVS.Types.PlaybackKeyPair

-- | A key pair used to sign and validate a playback authorization token.
--   
--   <i>See:</i> <a>newPlaybackKeyPair</a> smart constructor.
data PlaybackKeyPair
PlaybackKeyPair' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> PlaybackKeyPair

-- | Key-pair ARN.
[$sel:arn:PlaybackKeyPair'] :: PlaybackKeyPair -> Maybe Text

-- | Key-pair identifier.
[$sel:fingerprint:PlaybackKeyPair'] :: PlaybackKeyPair -> Maybe Text

-- | Playback-key-pair name. The value does not need to be unique.
[$sel:name:PlaybackKeyPair'] :: PlaybackKeyPair -> Maybe Text

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
[$sel:tags:PlaybackKeyPair'] :: PlaybackKeyPair -> Maybe (HashMap Text Text)

-- | Create a value of <a>PlaybackKeyPair</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PlaybackKeyPair'</a>, <a>playbackKeyPair_arn</a> -
--   Key-pair ARN.
--   
--   <a>$sel:fingerprint:PlaybackKeyPair'</a>,
--   <a>playbackKeyPair_fingerprint</a> - Key-pair identifier.
--   
--   <a>$sel:name:PlaybackKeyPair'</a>, <a>playbackKeyPair_name</a> -
--   Playback-key-pair name. The value does not need to be unique.
--   
--   <a>$sel:tags:PlaybackKeyPair'</a>, <a>playbackKeyPair_tags</a> - Array
--   of 1-50 maps, each of the form <tt>string:string (key:value)</tt>.
newPlaybackKeyPair :: PlaybackKeyPair

-- | Key-pair ARN.
playbackKeyPair_arn :: Lens' PlaybackKeyPair (Maybe Text)

-- | Key-pair identifier.
playbackKeyPair_fingerprint :: Lens' PlaybackKeyPair (Maybe Text)

-- | Playback-key-pair name. The value does not need to be unique.
playbackKeyPair_name :: Lens' PlaybackKeyPair (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
playbackKeyPair_tags :: Lens' PlaybackKeyPair (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.IVS.Types.PlaybackKeyPair.PlaybackKeyPair
instance GHC.Show.Show Network.AWS.IVS.Types.PlaybackKeyPair.PlaybackKeyPair
instance GHC.Read.Read Network.AWS.IVS.Types.PlaybackKeyPair.PlaybackKeyPair
instance GHC.Classes.Eq Network.AWS.IVS.Types.PlaybackKeyPair.PlaybackKeyPair
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IVS.Types.PlaybackKeyPair.PlaybackKeyPair
instance Data.Hashable.Class.Hashable Network.AWS.IVS.Types.PlaybackKeyPair.PlaybackKeyPair
instance Control.DeepSeq.NFData Network.AWS.IVS.Types.PlaybackKeyPair.PlaybackKeyPair


module Network.AWS.IVS.Types.PlaybackKeyPairSummary

-- | Summary information about a playback key pair.
--   
--   <i>See:</i> <a>newPlaybackKeyPairSummary</a> smart constructor.
data PlaybackKeyPairSummary
PlaybackKeyPairSummary' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> PlaybackKeyPairSummary

-- | Key-pair ARN.
[$sel:arn:PlaybackKeyPairSummary'] :: PlaybackKeyPairSummary -> Maybe Text

-- | Playback-key-pair name. The value does not need to be unique.
[$sel:name:PlaybackKeyPairSummary'] :: PlaybackKeyPairSummary -> Maybe Text

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
[$sel:tags:PlaybackKeyPairSummary'] :: PlaybackKeyPairSummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>PlaybackKeyPairSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PlaybackKeyPairSummary'</a>,
--   <a>playbackKeyPairSummary_arn</a> - Key-pair ARN.
--   
--   <a>$sel:name:PlaybackKeyPairSummary'</a>,
--   <a>playbackKeyPairSummary_name</a> - Playback-key-pair name. The value
--   does not need to be unique.
--   
--   <a>$sel:tags:PlaybackKeyPairSummary'</a>,
--   <a>playbackKeyPairSummary_tags</a> - Array of 1-50 maps, each of the
--   form <tt>string:string (key:value)</tt>.
newPlaybackKeyPairSummary :: PlaybackKeyPairSummary

-- | Key-pair ARN.
playbackKeyPairSummary_arn :: Lens' PlaybackKeyPairSummary (Maybe Text)

-- | Playback-key-pair name. The value does not need to be unique.
playbackKeyPairSummary_name :: Lens' PlaybackKeyPairSummary (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
playbackKeyPairSummary_tags :: Lens' PlaybackKeyPairSummary (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.IVS.Types.PlaybackKeyPairSummary.PlaybackKeyPairSummary
instance GHC.Show.Show Network.AWS.IVS.Types.PlaybackKeyPairSummary.PlaybackKeyPairSummary
instance GHC.Read.Read Network.AWS.IVS.Types.PlaybackKeyPairSummary.PlaybackKeyPairSummary
instance GHC.Classes.Eq Network.AWS.IVS.Types.PlaybackKeyPairSummary.PlaybackKeyPairSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IVS.Types.PlaybackKeyPairSummary.PlaybackKeyPairSummary
instance Data.Hashable.Class.Hashable Network.AWS.IVS.Types.PlaybackKeyPairSummary.PlaybackKeyPairSummary
instance Control.DeepSeq.NFData Network.AWS.IVS.Types.PlaybackKeyPairSummary.PlaybackKeyPairSummary


module Network.AWS.IVS.Types.RecordingConfigurationState
newtype RecordingConfigurationState
RecordingConfigurationState' :: Text -> RecordingConfigurationState
[fromRecordingConfigurationState] :: RecordingConfigurationState -> Text
pattern RecordingConfigurationState_ACTIVE :: RecordingConfigurationState
pattern RecordingConfigurationState_CREATE_FAILED :: RecordingConfigurationState
pattern RecordingConfigurationState_CREATING :: RecordingConfigurationState
instance Network.AWS.Data.XML.ToXML Network.AWS.IVS.Types.RecordingConfigurationState.RecordingConfigurationState
instance Network.AWS.Data.XML.FromXML Network.AWS.IVS.Types.RecordingConfigurationState.RecordingConfigurationState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.IVS.Types.RecordingConfigurationState.RecordingConfigurationState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.Types.RecordingConfigurationState.RecordingConfigurationState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.IVS.Types.RecordingConfigurationState.RecordingConfigurationState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IVS.Types.RecordingConfigurationState.RecordingConfigurationState
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.Types.RecordingConfigurationState.RecordingConfigurationState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.IVS.Types.RecordingConfigurationState.RecordingConfigurationState
instance Network.AWS.Data.Log.ToLog Network.AWS.IVS.Types.RecordingConfigurationState.RecordingConfigurationState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.IVS.Types.RecordingConfigurationState.RecordingConfigurationState
instance Network.AWS.Data.Text.ToText Network.AWS.IVS.Types.RecordingConfigurationState.RecordingConfigurationState
instance Network.AWS.Data.Text.FromText Network.AWS.IVS.Types.RecordingConfigurationState.RecordingConfigurationState
instance Control.DeepSeq.NFData Network.AWS.IVS.Types.RecordingConfigurationState.RecordingConfigurationState
instance Data.Hashable.Class.Hashable Network.AWS.IVS.Types.RecordingConfigurationState.RecordingConfigurationState
instance GHC.Generics.Generic Network.AWS.IVS.Types.RecordingConfigurationState.RecordingConfigurationState
instance GHC.Classes.Ord Network.AWS.IVS.Types.RecordingConfigurationState.RecordingConfigurationState
instance GHC.Classes.Eq Network.AWS.IVS.Types.RecordingConfigurationState.RecordingConfigurationState
instance GHC.Read.Read Network.AWS.IVS.Types.RecordingConfigurationState.RecordingConfigurationState
instance GHC.Show.Show Network.AWS.IVS.Types.RecordingConfigurationState.RecordingConfigurationState


module Network.AWS.IVS.Types.S3DestinationConfiguration

-- | A complex type that describes an S3 location where recorded videos
--   will be stored.
--   
--   <i>See:</i> <a>newS3DestinationConfiguration</a> smart constructor.
data S3DestinationConfiguration
S3DestinationConfiguration' :: Text -> S3DestinationConfiguration

-- | Location (S3 bucket name) where recorded videos will be stored.
[$sel:bucketName:S3DestinationConfiguration'] :: S3DestinationConfiguration -> Text

-- | Create a value of <a>S3DestinationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucketName:S3DestinationConfiguration'</a>,
--   <a>s3DestinationConfiguration_bucketName</a> - Location (S3 bucket
--   name) where recorded videos will be stored.
newS3DestinationConfiguration :: Text -> S3DestinationConfiguration

-- | Location (S3 bucket name) where recorded videos will be stored.
s3DestinationConfiguration_bucketName :: Lens' S3DestinationConfiguration Text
instance GHC.Generics.Generic Network.AWS.IVS.Types.S3DestinationConfiguration.S3DestinationConfiguration
instance GHC.Show.Show Network.AWS.IVS.Types.S3DestinationConfiguration.S3DestinationConfiguration
instance GHC.Read.Read Network.AWS.IVS.Types.S3DestinationConfiguration.S3DestinationConfiguration
instance GHC.Classes.Eq Network.AWS.IVS.Types.S3DestinationConfiguration.S3DestinationConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IVS.Types.S3DestinationConfiguration.S3DestinationConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.IVS.Types.S3DestinationConfiguration.S3DestinationConfiguration
instance Control.DeepSeq.NFData Network.AWS.IVS.Types.S3DestinationConfiguration.S3DestinationConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.Types.S3DestinationConfiguration.S3DestinationConfiguration


module Network.AWS.IVS.Types.DestinationConfiguration

-- | A complex type that describes a location where recorded videos will be
--   stored. Each member represents a type of destination configuration.
--   For recording, you define one and only one type of destination
--   configuration.
--   
--   <i>See:</i> <a>newDestinationConfiguration</a> smart constructor.
data DestinationConfiguration
DestinationConfiguration' :: Maybe S3DestinationConfiguration -> DestinationConfiguration

-- | An S3 destination configuration where recorded videos will be stored.
[$sel:s3:DestinationConfiguration'] :: DestinationConfiguration -> Maybe S3DestinationConfiguration

-- | Create a value of <a>DestinationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3:DestinationConfiguration'</a>,
--   <a>destinationConfiguration_s3</a> - An S3 destination configuration
--   where recorded videos will be stored.
newDestinationConfiguration :: DestinationConfiguration

-- | An S3 destination configuration where recorded videos will be stored.
destinationConfiguration_s3 :: Lens' DestinationConfiguration (Maybe S3DestinationConfiguration)
instance GHC.Generics.Generic Network.AWS.IVS.Types.DestinationConfiguration.DestinationConfiguration
instance GHC.Show.Show Network.AWS.IVS.Types.DestinationConfiguration.DestinationConfiguration
instance GHC.Read.Read Network.AWS.IVS.Types.DestinationConfiguration.DestinationConfiguration
instance GHC.Classes.Eq Network.AWS.IVS.Types.DestinationConfiguration.DestinationConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IVS.Types.DestinationConfiguration.DestinationConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.IVS.Types.DestinationConfiguration.DestinationConfiguration
instance Control.DeepSeq.NFData Network.AWS.IVS.Types.DestinationConfiguration.DestinationConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.Types.DestinationConfiguration.DestinationConfiguration


module Network.AWS.IVS.Types.RecordingConfigurationSummary

-- | Summary information about a RecordingConfiguration.
--   
--   <i>See:</i> <a>newRecordingConfigurationSummary</a> smart constructor.
data RecordingConfigurationSummary
RecordingConfigurationSummary' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> DestinationConfiguration -> RecordingConfigurationState -> RecordingConfigurationSummary

-- | Recording-configuration name. The value does not need to be unique.
[$sel:name:RecordingConfigurationSummary'] :: RecordingConfigurationSummary -> Maybe Text

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
[$sel:tags:RecordingConfigurationSummary'] :: RecordingConfigurationSummary -> Maybe (HashMap Text Text)

-- | Recording-configuration ARN.
[$sel:arn:RecordingConfigurationSummary'] :: RecordingConfigurationSummary -> Text

-- | A complex type that contains information about where recorded video
--   will be stored.
[$sel:destinationConfiguration:RecordingConfigurationSummary'] :: RecordingConfigurationSummary -> DestinationConfiguration

-- | Indicates the current state of the recording configuration. When the
--   state is <tt>ACTIVE</tt>, the configuration is ready for recording a
--   channel stream.
[$sel:state:RecordingConfigurationSummary'] :: RecordingConfigurationSummary -> RecordingConfigurationState

-- | Create a value of <a>RecordingConfigurationSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:RecordingConfigurationSummary'</a>,
--   <a>recordingConfigurationSummary_name</a> - Recording-configuration
--   name. The value does not need to be unique.
--   
--   <a>$sel:tags:RecordingConfigurationSummary'</a>,
--   <a>recordingConfigurationSummary_tags</a> - Array of 1-50 maps, each
--   of the form <tt>string:string (key:value)</tt>.
--   
--   <a>$sel:arn:RecordingConfigurationSummary'</a>,
--   <a>recordingConfigurationSummary_arn</a> - Recording-configuration
--   ARN.
--   
--   <a>$sel:destinationConfiguration:RecordingConfigurationSummary'</a>,
--   <a>recordingConfigurationSummary_destinationConfiguration</a> - A
--   complex type that contains information about where recorded video will
--   be stored.
--   
--   <a>$sel:state:RecordingConfigurationSummary'</a>,
--   <a>recordingConfigurationSummary_state</a> - Indicates the current
--   state of the recording configuration. When the state is
--   <tt>ACTIVE</tt>, the configuration is ready for recording a channel
--   stream.
newRecordingConfigurationSummary :: Text -> DestinationConfiguration -> RecordingConfigurationState -> RecordingConfigurationSummary

-- | Recording-configuration name. The value does not need to be unique.
recordingConfigurationSummary_name :: Lens' RecordingConfigurationSummary (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
recordingConfigurationSummary_tags :: Lens' RecordingConfigurationSummary (Maybe (HashMap Text Text))

-- | Recording-configuration ARN.
recordingConfigurationSummary_arn :: Lens' RecordingConfigurationSummary Text

-- | A complex type that contains information about where recorded video
--   will be stored.
recordingConfigurationSummary_destinationConfiguration :: Lens' RecordingConfigurationSummary DestinationConfiguration

-- | Indicates the current state of the recording configuration. When the
--   state is <tt>ACTIVE</tt>, the configuration is ready for recording a
--   channel stream.
recordingConfigurationSummary_state :: Lens' RecordingConfigurationSummary RecordingConfigurationState
instance GHC.Generics.Generic Network.AWS.IVS.Types.RecordingConfigurationSummary.RecordingConfigurationSummary
instance GHC.Show.Show Network.AWS.IVS.Types.RecordingConfigurationSummary.RecordingConfigurationSummary
instance GHC.Read.Read Network.AWS.IVS.Types.RecordingConfigurationSummary.RecordingConfigurationSummary
instance GHC.Classes.Eq Network.AWS.IVS.Types.RecordingConfigurationSummary.RecordingConfigurationSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IVS.Types.RecordingConfigurationSummary.RecordingConfigurationSummary
instance Data.Hashable.Class.Hashable Network.AWS.IVS.Types.RecordingConfigurationSummary.RecordingConfigurationSummary
instance Control.DeepSeq.NFData Network.AWS.IVS.Types.RecordingConfigurationSummary.RecordingConfigurationSummary


module Network.AWS.IVS.Types.RecordingConfiguration

-- | An object representing a configuration to record a channel stream.
--   
--   <i>See:</i> <a>newRecordingConfiguration</a> smart constructor.
data RecordingConfiguration
RecordingConfiguration' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> DestinationConfiguration -> RecordingConfigurationState -> RecordingConfiguration

-- | Recording-configuration name. The value does not need to be unique.
[$sel:name:RecordingConfiguration'] :: RecordingConfiguration -> Maybe Text

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
[$sel:tags:RecordingConfiguration'] :: RecordingConfiguration -> Maybe (HashMap Text Text)

-- | Recording-configuration ARN.
[$sel:arn:RecordingConfiguration'] :: RecordingConfiguration -> Text

-- | A complex type that contains information about where recorded video
--   will be stored.
[$sel:destinationConfiguration:RecordingConfiguration'] :: RecordingConfiguration -> DestinationConfiguration

-- | Indicates the current state of the recording configuration. When the
--   state is <tt>ACTIVE</tt>, the configuration is ready for recording a
--   channel stream.
[$sel:state:RecordingConfiguration'] :: RecordingConfiguration -> RecordingConfigurationState

-- | Create a value of <a>RecordingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:RecordingConfiguration'</a>,
--   <a>recordingConfiguration_name</a> - Recording-configuration name. The
--   value does not need to be unique.
--   
--   <a>$sel:tags:RecordingConfiguration'</a>,
--   <a>recordingConfiguration_tags</a> - Array of 1-50 maps, each of the
--   form <tt>string:string (key:value)</tt>.
--   
--   <a>$sel:arn:RecordingConfiguration'</a>,
--   <a>recordingConfiguration_arn</a> - Recording-configuration ARN.
--   
--   <a>$sel:destinationConfiguration:RecordingConfiguration'</a>,
--   <a>recordingConfiguration_destinationConfiguration</a> - A complex
--   type that contains information about where recorded video will be
--   stored.
--   
--   <a>$sel:state:RecordingConfiguration'</a>,
--   <a>recordingConfiguration_state</a> - Indicates the current state of
--   the recording configuration. When the state is <tt>ACTIVE</tt>, the
--   configuration is ready for recording a channel stream.
newRecordingConfiguration :: Text -> DestinationConfiguration -> RecordingConfigurationState -> RecordingConfiguration

-- | Recording-configuration name. The value does not need to be unique.
recordingConfiguration_name :: Lens' RecordingConfiguration (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
recordingConfiguration_tags :: Lens' RecordingConfiguration (Maybe (HashMap Text Text))

-- | Recording-configuration ARN.
recordingConfiguration_arn :: Lens' RecordingConfiguration Text

-- | A complex type that contains information about where recorded video
--   will be stored.
recordingConfiguration_destinationConfiguration :: Lens' RecordingConfiguration DestinationConfiguration

-- | Indicates the current state of the recording configuration. When the
--   state is <tt>ACTIVE</tt>, the configuration is ready for recording a
--   channel stream.
recordingConfiguration_state :: Lens' RecordingConfiguration RecordingConfigurationState
instance GHC.Generics.Generic Network.AWS.IVS.Types.RecordingConfiguration.RecordingConfiguration
instance GHC.Show.Show Network.AWS.IVS.Types.RecordingConfiguration.RecordingConfiguration
instance GHC.Read.Read Network.AWS.IVS.Types.RecordingConfiguration.RecordingConfiguration
instance GHC.Classes.Eq Network.AWS.IVS.Types.RecordingConfiguration.RecordingConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IVS.Types.RecordingConfiguration.RecordingConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.IVS.Types.RecordingConfiguration.RecordingConfiguration
instance Control.DeepSeq.NFData Network.AWS.IVS.Types.RecordingConfiguration.RecordingConfiguration


module Network.AWS.IVS.Types.StreamHealth
newtype StreamHealth
StreamHealth' :: Text -> StreamHealth
[fromStreamHealth] :: StreamHealth -> Text
pattern StreamHealth_HEALTHY :: StreamHealth
pattern StreamHealth_STARVING :: StreamHealth
pattern StreamHealth_UNKNOWN :: StreamHealth
instance Network.AWS.Data.XML.ToXML Network.AWS.IVS.Types.StreamHealth.StreamHealth
instance Network.AWS.Data.XML.FromXML Network.AWS.IVS.Types.StreamHealth.StreamHealth
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.IVS.Types.StreamHealth.StreamHealth
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.Types.StreamHealth.StreamHealth
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.IVS.Types.StreamHealth.StreamHealth
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IVS.Types.StreamHealth.StreamHealth
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.Types.StreamHealth.StreamHealth
instance Network.AWS.Data.Headers.ToHeader Network.AWS.IVS.Types.StreamHealth.StreamHealth
instance Network.AWS.Data.Log.ToLog Network.AWS.IVS.Types.StreamHealth.StreamHealth
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.IVS.Types.StreamHealth.StreamHealth
instance Network.AWS.Data.Text.ToText Network.AWS.IVS.Types.StreamHealth.StreamHealth
instance Network.AWS.Data.Text.FromText Network.AWS.IVS.Types.StreamHealth.StreamHealth
instance Control.DeepSeq.NFData Network.AWS.IVS.Types.StreamHealth.StreamHealth
instance Data.Hashable.Class.Hashable Network.AWS.IVS.Types.StreamHealth.StreamHealth
instance GHC.Generics.Generic Network.AWS.IVS.Types.StreamHealth.StreamHealth
instance GHC.Classes.Ord Network.AWS.IVS.Types.StreamHealth.StreamHealth
instance GHC.Classes.Eq Network.AWS.IVS.Types.StreamHealth.StreamHealth
instance GHC.Read.Read Network.AWS.IVS.Types.StreamHealth.StreamHealth
instance GHC.Show.Show Network.AWS.IVS.Types.StreamHealth.StreamHealth


module Network.AWS.IVS.Types.StreamKey

-- | Object specifying a stream key.
--   
--   <i>See:</i> <a>newStreamKey</a> smart constructor.
data StreamKey
StreamKey' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe Text -> Maybe (HashMap Text Text) -> StreamKey

-- | Stream-key ARN.
[$sel:arn:StreamKey'] :: StreamKey -> Maybe Text

-- | Stream-key value.
[$sel:value:StreamKey'] :: StreamKey -> Maybe (Sensitive Text)

-- | Channel ARN for the stream.
[$sel:channelArn:StreamKey'] :: StreamKey -> Maybe Text

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
[$sel:tags:StreamKey'] :: StreamKey -> Maybe (HashMap Text Text)

-- | Create a value of <a>StreamKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:StreamKey'</a>, <a>streamKey_arn</a> - Stream-key ARN.
--   
--   <a>$sel:value:StreamKey'</a>, <a>streamKey_value</a> - Stream-key
--   value.
--   
--   <a>$sel:channelArn:StreamKey'</a>, <a>streamKey_channelArn</a> -
--   Channel ARN for the stream.
--   
--   <a>$sel:tags:StreamKey'</a>, <a>streamKey_tags</a> - Array of 1-50
--   maps, each of the form <tt>string:string (key:value)</tt>.
newStreamKey :: StreamKey

-- | Stream-key ARN.
streamKey_arn :: Lens' StreamKey (Maybe Text)

-- | Stream-key value.
streamKey_value :: Lens' StreamKey (Maybe Text)

-- | Channel ARN for the stream.
streamKey_channelArn :: Lens' StreamKey (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
streamKey_tags :: Lens' StreamKey (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.IVS.Types.StreamKey.StreamKey
instance GHC.Show.Show Network.AWS.IVS.Types.StreamKey.StreamKey
instance GHC.Classes.Eq Network.AWS.IVS.Types.StreamKey.StreamKey
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IVS.Types.StreamKey.StreamKey
instance Data.Hashable.Class.Hashable Network.AWS.IVS.Types.StreamKey.StreamKey
instance Control.DeepSeq.NFData Network.AWS.IVS.Types.StreamKey.StreamKey


module Network.AWS.IVS.Types.StreamKeySummary

-- | Summary information about a stream key.
--   
--   <i>See:</i> <a>newStreamKeySummary</a> smart constructor.
data StreamKeySummary
StreamKeySummary' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> StreamKeySummary

-- | Stream-key ARN.
[$sel:arn:StreamKeySummary'] :: StreamKeySummary -> Maybe Text

-- | Channel ARN for the stream.
[$sel:channelArn:StreamKeySummary'] :: StreamKeySummary -> Maybe Text

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
[$sel:tags:StreamKeySummary'] :: StreamKeySummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>StreamKeySummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:StreamKeySummary'</a>, <a>streamKeySummary_arn</a> -
--   Stream-key ARN.
--   
--   <a>$sel:channelArn:StreamKeySummary'</a>,
--   <a>streamKeySummary_channelArn</a> - Channel ARN for the stream.
--   
--   <a>$sel:tags:StreamKeySummary'</a>, <a>streamKeySummary_tags</a> -
--   Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
newStreamKeySummary :: StreamKeySummary

-- | Stream-key ARN.
streamKeySummary_arn :: Lens' StreamKeySummary (Maybe Text)

-- | Channel ARN for the stream.
streamKeySummary_channelArn :: Lens' StreamKeySummary (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
streamKeySummary_tags :: Lens' StreamKeySummary (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.IVS.Types.StreamKeySummary.StreamKeySummary
instance GHC.Show.Show Network.AWS.IVS.Types.StreamKeySummary.StreamKeySummary
instance GHC.Read.Read Network.AWS.IVS.Types.StreamKeySummary.StreamKeySummary
instance GHC.Classes.Eq Network.AWS.IVS.Types.StreamKeySummary.StreamKeySummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IVS.Types.StreamKeySummary.StreamKeySummary
instance Data.Hashable.Class.Hashable Network.AWS.IVS.Types.StreamKeySummary.StreamKeySummary
instance Control.DeepSeq.NFData Network.AWS.IVS.Types.StreamKeySummary.StreamKeySummary


module Network.AWS.IVS.Types.StreamState
newtype StreamState
StreamState' :: Text -> StreamState
[fromStreamState] :: StreamState -> Text
pattern StreamState_LIVE :: StreamState
pattern StreamState_OFFLINE :: StreamState
instance Network.AWS.Data.XML.ToXML Network.AWS.IVS.Types.StreamState.StreamState
instance Network.AWS.Data.XML.FromXML Network.AWS.IVS.Types.StreamState.StreamState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.IVS.Types.StreamState.StreamState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.Types.StreamState.StreamState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.IVS.Types.StreamState.StreamState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IVS.Types.StreamState.StreamState
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.Types.StreamState.StreamState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.IVS.Types.StreamState.StreamState
instance Network.AWS.Data.Log.ToLog Network.AWS.IVS.Types.StreamState.StreamState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.IVS.Types.StreamState.StreamState
instance Network.AWS.Data.Text.ToText Network.AWS.IVS.Types.StreamState.StreamState
instance Network.AWS.Data.Text.FromText Network.AWS.IVS.Types.StreamState.StreamState
instance Control.DeepSeq.NFData Network.AWS.IVS.Types.StreamState.StreamState
instance Data.Hashable.Class.Hashable Network.AWS.IVS.Types.StreamState.StreamState
instance GHC.Generics.Generic Network.AWS.IVS.Types.StreamState.StreamState
instance GHC.Classes.Ord Network.AWS.IVS.Types.StreamState.StreamState
instance GHC.Classes.Eq Network.AWS.IVS.Types.StreamState.StreamState
instance GHC.Read.Read Network.AWS.IVS.Types.StreamState.StreamState
instance GHC.Show.Show Network.AWS.IVS.Types.StreamState.StreamState


module Network.AWS.IVS.Types.Stream

-- | Specifies a live video stream that has been ingested and distributed.
--   
--   <i>See:</i> <a>newStream</a> smart constructor.
data Stream
Stream' :: Maybe Text -> Maybe StreamState -> Maybe POSIX -> Maybe Text -> Maybe Integer -> Maybe StreamHealth -> Stream

-- | URL of the master playlist, required by the video player to play the
--   HLS stream.
[$sel:playbackUrl:Stream'] :: Stream -> Maybe Text

-- | The stream’s state.
[$sel:state:Stream'] :: Stream -> Maybe StreamState

-- | Time of the stream’s start. This is an ISO 8601 timestamp returned as
--   a string.
[$sel:startTime:Stream'] :: Stream -> Maybe POSIX

-- | Channel ARN for the stream.
[$sel:channelArn:Stream'] :: Stream -> Maybe Text

-- | A count of concurrent views of the stream. Typically, a new view
--   appears in <tt>viewerCount</tt> within 15 seconds of when video
--   playback starts and a view is removed from <tt>viewerCount</tt> within
--   1 minute of when video playback ends. A value of -1 indicates that the
--   request timed out; in this case, retry.
[$sel:viewerCount:Stream'] :: Stream -> Maybe Integer

-- | The stream’s health.
[$sel:health:Stream'] :: Stream -> Maybe StreamHealth

-- | Create a value of <a>Stream</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playbackUrl:Stream'</a>, <a>stream_playbackUrl</a> - URL of
--   the master playlist, required by the video player to play the HLS
--   stream.
--   
--   <a>$sel:state:Stream'</a>, <a>stream_state</a> - The stream’s state.
--   
--   <a>$sel:startTime:Stream'</a>, <a>stream_startTime</a> - Time of the
--   stream’s start. This is an ISO 8601 timestamp returned as a string.
--   
--   <a>$sel:channelArn:Stream'</a>, <a>stream_channelArn</a> - Channel ARN
--   for the stream.
--   
--   <a>$sel:viewerCount:Stream'</a>, <a>stream_viewerCount</a> - A count
--   of concurrent views of the stream. Typically, a new view appears in
--   <tt>viewerCount</tt> within 15 seconds of when video playback starts
--   and a view is removed from <tt>viewerCount</tt> within 1 minute of
--   when video playback ends. A value of -1 indicates that the request
--   timed out; in this case, retry.
--   
--   <a>$sel:health:Stream'</a>, <a>stream_health</a> - The stream’s
--   health.
newStream :: Stream

-- | URL of the master playlist, required by the video player to play the
--   HLS stream.
stream_playbackUrl :: Lens' Stream (Maybe Text)

-- | The stream’s state.
stream_state :: Lens' Stream (Maybe StreamState)

-- | Time of the stream’s start. This is an ISO 8601 timestamp returned as
--   a string.
stream_startTime :: Lens' Stream (Maybe UTCTime)

-- | Channel ARN for the stream.
stream_channelArn :: Lens' Stream (Maybe Text)

-- | A count of concurrent views of the stream. Typically, a new view
--   appears in <tt>viewerCount</tt> within 15 seconds of when video
--   playback starts and a view is removed from <tt>viewerCount</tt> within
--   1 minute of when video playback ends. A value of -1 indicates that the
--   request timed out; in this case, retry.
stream_viewerCount :: Lens' Stream (Maybe Integer)

-- | The stream’s health.
stream_health :: Lens' Stream (Maybe StreamHealth)
instance GHC.Generics.Generic Network.AWS.IVS.Types.Stream.Stream
instance GHC.Show.Show Network.AWS.IVS.Types.Stream.Stream
instance GHC.Read.Read Network.AWS.IVS.Types.Stream.Stream
instance GHC.Classes.Eq Network.AWS.IVS.Types.Stream.Stream
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IVS.Types.Stream.Stream
instance Data.Hashable.Class.Hashable Network.AWS.IVS.Types.Stream.Stream
instance Control.DeepSeq.NFData Network.AWS.IVS.Types.Stream.Stream


module Network.AWS.IVS.Types.StreamSummary

-- | Summary information about a stream.
--   
--   <i>See:</i> <a>newStreamSummary</a> smart constructor.
data StreamSummary
StreamSummary' :: Maybe StreamState -> Maybe POSIX -> Maybe Text -> Maybe Integer -> Maybe StreamHealth -> StreamSummary

-- | The stream’s state.
[$sel:state:StreamSummary'] :: StreamSummary -> Maybe StreamState

-- | Time of the stream’s start. This is an ISO 8601 timestamp returned as
--   a string.
[$sel:startTime:StreamSummary'] :: StreamSummary -> Maybe POSIX

-- | Channel ARN for the stream.
[$sel:channelArn:StreamSummary'] :: StreamSummary -> Maybe Text

-- | A count of concurrent views of the stream. Typically, a new view
--   appears in <tt>viewerCount</tt> within 15 seconds of when video
--   playback starts and a view is removed from <tt>viewerCount</tt> within
--   1 minute of when video playback ends. A value of -1 indicates that the
--   request timed out; in this case, retry.
[$sel:viewerCount:StreamSummary'] :: StreamSummary -> Maybe Integer

-- | The stream’s health.
[$sel:health:StreamSummary'] :: StreamSummary -> Maybe StreamHealth

-- | Create a value of <a>StreamSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:StreamSummary'</a>, <a>streamSummary_state</a> - The
--   stream’s state.
--   
--   <a>$sel:startTime:StreamSummary'</a>, <a>streamSummary_startTime</a> -
--   Time of the stream’s start. This is an ISO 8601 timestamp returned as
--   a string.
--   
--   <a>$sel:channelArn:StreamSummary'</a>, <a>streamSummary_channelArn</a>
--   - Channel ARN for the stream.
--   
--   <a>$sel:viewerCount:StreamSummary'</a>,
--   <a>streamSummary_viewerCount</a> - A count of concurrent views of the
--   stream. Typically, a new view appears in <tt>viewerCount</tt> within
--   15 seconds of when video playback starts and a view is removed from
--   <tt>viewerCount</tt> within 1 minute of when video playback ends. A
--   value of -1 indicates that the request timed out; in this case, retry.
--   
--   <a>$sel:health:StreamSummary'</a>, <a>streamSummary_health</a> - The
--   stream’s health.
newStreamSummary :: StreamSummary

-- | The stream’s state.
streamSummary_state :: Lens' StreamSummary (Maybe StreamState)

-- | Time of the stream’s start. This is an ISO 8601 timestamp returned as
--   a string.
streamSummary_startTime :: Lens' StreamSummary (Maybe UTCTime)

-- | Channel ARN for the stream.
streamSummary_channelArn :: Lens' StreamSummary (Maybe Text)

-- | A count of concurrent views of the stream. Typically, a new view
--   appears in <tt>viewerCount</tt> within 15 seconds of when video
--   playback starts and a view is removed from <tt>viewerCount</tt> within
--   1 minute of when video playback ends. A value of -1 indicates that the
--   request timed out; in this case, retry.
streamSummary_viewerCount :: Lens' StreamSummary (Maybe Integer)

-- | The stream’s health.
streamSummary_health :: Lens' StreamSummary (Maybe StreamHealth)
instance GHC.Generics.Generic Network.AWS.IVS.Types.StreamSummary.StreamSummary
instance GHC.Show.Show Network.AWS.IVS.Types.StreamSummary.StreamSummary
instance GHC.Read.Read Network.AWS.IVS.Types.StreamSummary.StreamSummary
instance GHC.Classes.Eq Network.AWS.IVS.Types.StreamSummary.StreamSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IVS.Types.StreamSummary.StreamSummary
instance Data.Hashable.Class.Hashable Network.AWS.IVS.Types.StreamSummary.StreamSummary
instance Control.DeepSeq.NFData Network.AWS.IVS.Types.StreamSummary.StreamSummary


module Network.AWS.IVS.Types

-- | API version <tt>2020-07-14</tt> of the Amazon Interactive Video
--   Service SDK configuration.
defaultService :: Service

_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

_StreamUnavailable :: AsError a => Getting (First ServiceError) a ServiceError

_PendingVerification :: AsError a => Getting (First ServiceError) a ServiceError

_ChannelNotBroadcasting :: AsError a => Getting (First ServiceError) a ServiceError

_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ChannelLatencyMode
ChannelLatencyMode' :: Text -> ChannelLatencyMode
[fromChannelLatencyMode] :: ChannelLatencyMode -> Text
pattern ChannelLatencyMode_LOW :: ChannelLatencyMode
pattern ChannelLatencyMode_NORMAL :: ChannelLatencyMode
newtype ChannelType
ChannelType' :: Text -> ChannelType
[fromChannelType] :: ChannelType -> Text
pattern ChannelType_BASIC :: ChannelType
pattern ChannelType_STANDARD :: ChannelType
newtype RecordingConfigurationState
RecordingConfigurationState' :: Text -> RecordingConfigurationState
[fromRecordingConfigurationState] :: RecordingConfigurationState -> Text
pattern RecordingConfigurationState_ACTIVE :: RecordingConfigurationState
pattern RecordingConfigurationState_CREATE_FAILED :: RecordingConfigurationState
pattern RecordingConfigurationState_CREATING :: RecordingConfigurationState
newtype StreamHealth
StreamHealth' :: Text -> StreamHealth
[fromStreamHealth] :: StreamHealth -> Text
pattern StreamHealth_HEALTHY :: StreamHealth
pattern StreamHealth_STARVING :: StreamHealth
pattern StreamHealth_UNKNOWN :: StreamHealth
newtype StreamState
StreamState' :: Text -> StreamState
[fromStreamState] :: StreamState -> Text
pattern StreamState_LIVE :: StreamState
pattern StreamState_OFFLINE :: StreamState

-- | Error related to a specific channel, specified by its ARN.
--   
--   <i>See:</i> <a>newBatchError</a> smart constructor.
data BatchError
BatchError' :: Maybe Text -> Maybe Text -> Maybe Text -> BatchError

-- | Channel ARN.
[$sel:arn:BatchError'] :: BatchError -> Maybe Text

-- | Error code.
[$sel:code:BatchError'] :: BatchError -> Maybe Text

-- | Error message, determined by the application.
[$sel:message:BatchError'] :: BatchError -> Maybe Text

-- | Create a value of <a>BatchError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:BatchError'</a>, <a>batchError_arn</a> - Channel ARN.
--   
--   <a>$sel:code:BatchError'</a>, <a>batchError_code</a> - Error code.
--   
--   <a>$sel:message:BatchError'</a>, <a>batchError_message</a> - Error
--   message, determined by the application.
newBatchError :: BatchError

-- | Channel ARN.
batchError_arn :: Lens' BatchError (Maybe Text)

-- | Error code.
batchError_code :: Lens' BatchError (Maybe Text)

-- | Error message, determined by the application.
batchError_message :: Lens' BatchError (Maybe Text)

-- | Object specifying a channel.
--   
--   <i>See:</i> <a>newChannel</a> smart constructor.
data Channel
Channel' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe ChannelLatencyMode -> Maybe Text -> Maybe Text -> Maybe ChannelType -> Maybe (HashMap Text Text) -> Maybe Text -> Channel

-- | Channel playback URL.
[$sel:playbackUrl:Channel'] :: Channel -> Maybe Text

-- | Whether the channel is private (enabled for playback authorization).
--   Default: <tt>false</tt>.
[$sel:authorized:Channel'] :: Channel -> Maybe Bool

-- | Channel ARN.
[$sel:arn:Channel'] :: Channel -> Maybe Text

-- | Channel latency mode. Use <tt>NORMAL</tt> to broadcast and deliver
--   live video up to Full HD. Use <tt>LOW</tt> for near-real-time
--   interaction with viewers. Default: <tt>LOW</tt>. (Note: In the Amazon
--   IVS console, <tt>LOW</tt> and <tt>NORMAL</tt> correspond to Ultra-low
--   and Standard, respectively.)
[$sel:latencyMode:Channel'] :: Channel -> Maybe ChannelLatencyMode

-- | Channel name.
[$sel:name:Channel'] :: Channel -> Maybe Text

-- | Recording-configuration ARN. A value other than an empty string
--   indicates that recording is enabled. Default: "" (empty string,
--   recording is disabled).
[$sel:recordingConfigurationArn:Channel'] :: Channel -> Maybe Text

-- | Channel type, which determines the allowable resolution and bitrate.
--   /If you exceed the allowable resolution or bitrate, the stream
--   probably will disconnect immediately./ Default: <tt>STANDARD</tt>.
--   Valid values:
--   
--   <ul>
--   <li><tt>STANDARD</tt>: Multiple qualities are generated from the
--   original input, to automatically give viewers the best experience for
--   their devices and network conditions. Resolution can be up to 1080p
--   and bitrate can be up to 8.5 Mbps. Audio is transcoded only for
--   renditions 360p and below; above that, audio is passed through.</li>
--   <li><tt>BASIC</tt>: Amazon IVS delivers the original input to viewers.
--   The viewer’s video-quality choice is limited to the original input.
--   Resolution can be up to 480p and bitrate can be up to 1.5 Mbps.</li>
--   </ul>
[$sel:type':Channel'] :: Channel -> Maybe ChannelType

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
[$sel:tags:Channel'] :: Channel -> Maybe (HashMap Text Text)

-- | Channel ingest endpoint, part of the definition of an ingest server,
--   used when you set up streaming software.
[$sel:ingestEndpoint:Channel'] :: Channel -> Maybe Text

-- | Create a value of <a>Channel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playbackUrl:Channel'</a>, <a>channel_playbackUrl</a> - Channel
--   playback URL.
--   
--   <a>$sel:authorized:Channel'</a>, <a>channel_authorized</a> - Whether
--   the channel is private (enabled for playback authorization). Default:
--   <tt>false</tt>.
--   
--   <a>$sel:arn:Channel'</a>, <a>channel_arn</a> - Channel ARN.
--   
--   <a>$sel:latencyMode:Channel'</a>, <a>channel_latencyMode</a> - Channel
--   latency mode. Use <tt>NORMAL</tt> to broadcast and deliver live video
--   up to Full HD. Use <tt>LOW</tt> for near-real-time interaction with
--   viewers. Default: <tt>LOW</tt>. (Note: In the Amazon IVS console,
--   <tt>LOW</tt> and <tt>NORMAL</tt> correspond to Ultra-low and Standard,
--   respectively.)
--   
--   <a>$sel:name:Channel'</a>, <a>channel_name</a> - Channel name.
--   
--   <a>$sel:recordingConfigurationArn:Channel'</a>,
--   <a>channel_recordingConfigurationArn</a> - Recording-configuration
--   ARN. A value other than an empty string indicates that recording is
--   enabled. Default: "" (empty string, recording is disabled).
--   
--   <a>$sel:type':Channel'</a>, <a>channel_type</a> - Channel type, which
--   determines the allowable resolution and bitrate. /If you exceed the
--   allowable resolution or bitrate, the stream probably will disconnect
--   immediately./ Default: <tt>STANDARD</tt>. Valid values:
--   
--   <ul>
--   <li><tt>STANDARD</tt>: Multiple qualities are generated from the
--   original input, to automatically give viewers the best experience for
--   their devices and network conditions. Resolution can be up to 1080p
--   and bitrate can be up to 8.5 Mbps. Audio is transcoded only for
--   renditions 360p and below; above that, audio is passed through.</li>
--   <li><tt>BASIC</tt>: Amazon IVS delivers the original input to viewers.
--   The viewer’s video-quality choice is limited to the original input.
--   Resolution can be up to 480p and bitrate can be up to 1.5 Mbps.</li>
--   </ul>
--   
--   <a>$sel:tags:Channel'</a>, <a>channel_tags</a> - Array of 1-50 maps,
--   each of the form <tt>string:string (key:value)</tt>.
--   
--   <a>$sel:ingestEndpoint:Channel'</a>, <a>channel_ingestEndpoint</a> -
--   Channel ingest endpoint, part of the definition of an ingest server,
--   used when you set up streaming software.
newChannel :: Channel

-- | Channel playback URL.
channel_playbackUrl :: Lens' Channel (Maybe Text)

-- | Whether the channel is private (enabled for playback authorization).
--   Default: <tt>false</tt>.
channel_authorized :: Lens' Channel (Maybe Bool)

-- | Channel ARN.
channel_arn :: Lens' Channel (Maybe Text)

-- | Channel latency mode. Use <tt>NORMAL</tt> to broadcast and deliver
--   live video up to Full HD. Use <tt>LOW</tt> for near-real-time
--   interaction with viewers. Default: <tt>LOW</tt>. (Note: In the Amazon
--   IVS console, <tt>LOW</tt> and <tt>NORMAL</tt> correspond to Ultra-low
--   and Standard, respectively.)
channel_latencyMode :: Lens' Channel (Maybe ChannelLatencyMode)

-- | Channel name.
channel_name :: Lens' Channel (Maybe Text)

-- | Recording-configuration ARN. A value other than an empty string
--   indicates that recording is enabled. Default: "" (empty string,
--   recording is disabled).
channel_recordingConfigurationArn :: Lens' Channel (Maybe Text)

-- | Channel type, which determines the allowable resolution and bitrate.
--   /If you exceed the allowable resolution or bitrate, the stream
--   probably will disconnect immediately./ Default: <tt>STANDARD</tt>.
--   Valid values:
--   
--   <ul>
--   <li><tt>STANDARD</tt>: Multiple qualities are generated from the
--   original input, to automatically give viewers the best experience for
--   their devices and network conditions. Resolution can be up to 1080p
--   and bitrate can be up to 8.5 Mbps. Audio is transcoded only for
--   renditions 360p and below; above that, audio is passed through.</li>
--   <li><tt>BASIC</tt>: Amazon IVS delivers the original input to viewers.
--   The viewer’s video-quality choice is limited to the original input.
--   Resolution can be up to 480p and bitrate can be up to 1.5 Mbps.</li>
--   </ul>
channel_type :: Lens' Channel (Maybe ChannelType)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
channel_tags :: Lens' Channel (Maybe (HashMap Text Text))

-- | Channel ingest endpoint, part of the definition of an ingest server,
--   used when you set up streaming software.
channel_ingestEndpoint :: Lens' Channel (Maybe Text)

-- | Summary information about a channel.
--   
--   <i>See:</i> <a>newChannelSummary</a> smart constructor.
data ChannelSummary
ChannelSummary' :: Maybe Bool -> Maybe Text -> Maybe ChannelLatencyMode -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> ChannelSummary

-- | Whether the channel is private (enabled for playback authorization).
--   Default: <tt>false</tt>.
[$sel:authorized:ChannelSummary'] :: ChannelSummary -> Maybe Bool

-- | Channel ARN.
[$sel:arn:ChannelSummary'] :: ChannelSummary -> Maybe Text

-- | Channel latency mode. Use <tt>NORMAL</tt> to broadcast and deliver
--   live video up to Full HD. Use <tt>LOW</tt> for near-real-time
--   interaction with viewers. Default: <tt>LOW</tt>. (Note: In the Amazon
--   IVS console, <tt>LOW</tt> and <tt>NORMAL</tt> correspond to Ultra-low
--   and Standard, respectively.)
[$sel:latencyMode:ChannelSummary'] :: ChannelSummary -> Maybe ChannelLatencyMode

-- | Channel name.
[$sel:name:ChannelSummary'] :: ChannelSummary -> Maybe Text

-- | Recording-configuration ARN. A value other than an empty string
--   indicates that recording is enabled. Default: "" (empty string,
--   recording is disabled).
[$sel:recordingConfigurationArn:ChannelSummary'] :: ChannelSummary -> Maybe Text

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
[$sel:tags:ChannelSummary'] :: ChannelSummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>ChannelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorized:ChannelSummary'</a>,
--   <a>channelSummary_authorized</a> - Whether the channel is private
--   (enabled for playback authorization). Default: <tt>false</tt>.
--   
--   <a>$sel:arn:ChannelSummary'</a>, <a>channelSummary_arn</a> - Channel
--   ARN.
--   
--   <a>$sel:latencyMode:ChannelSummary'</a>,
--   <a>channelSummary_latencyMode</a> - Channel latency mode. Use
--   <tt>NORMAL</tt> to broadcast and deliver live video up to Full HD. Use
--   <tt>LOW</tt> for near-real-time interaction with viewers. Default:
--   <tt>LOW</tt>. (Note: In the Amazon IVS console, <tt>LOW</tt> and
--   <tt>NORMAL</tt> correspond to Ultra-low and Standard, respectively.)
--   
--   <a>$sel:name:ChannelSummary'</a>, <a>channelSummary_name</a> - Channel
--   name.
--   
--   <a>$sel:recordingConfigurationArn:ChannelSummary'</a>,
--   <a>channelSummary_recordingConfigurationArn</a> -
--   Recording-configuration ARN. A value other than an empty string
--   indicates that recording is enabled. Default: "" (empty string,
--   recording is disabled).
--   
--   <a>$sel:tags:ChannelSummary'</a>, <a>channelSummary_tags</a> - Array
--   of 1-50 maps, each of the form <tt>string:string (key:value)</tt>.
newChannelSummary :: ChannelSummary

-- | Whether the channel is private (enabled for playback authorization).
--   Default: <tt>false</tt>.
channelSummary_authorized :: Lens' ChannelSummary (Maybe Bool)

-- | Channel ARN.
channelSummary_arn :: Lens' ChannelSummary (Maybe Text)

-- | Channel latency mode. Use <tt>NORMAL</tt> to broadcast and deliver
--   live video up to Full HD. Use <tt>LOW</tt> for near-real-time
--   interaction with viewers. Default: <tt>LOW</tt>. (Note: In the Amazon
--   IVS console, <tt>LOW</tt> and <tt>NORMAL</tt> correspond to Ultra-low
--   and Standard, respectively.)
channelSummary_latencyMode :: Lens' ChannelSummary (Maybe ChannelLatencyMode)

-- | Channel name.
channelSummary_name :: Lens' ChannelSummary (Maybe Text)

-- | Recording-configuration ARN. A value other than an empty string
--   indicates that recording is enabled. Default: "" (empty string,
--   recording is disabled).
channelSummary_recordingConfigurationArn :: Lens' ChannelSummary (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
channelSummary_tags :: Lens' ChannelSummary (Maybe (HashMap Text Text))

-- | A complex type that describes a location where recorded videos will be
--   stored. Each member represents a type of destination configuration.
--   For recording, you define one and only one type of destination
--   configuration.
--   
--   <i>See:</i> <a>newDestinationConfiguration</a> smart constructor.
data DestinationConfiguration
DestinationConfiguration' :: Maybe S3DestinationConfiguration -> DestinationConfiguration

-- | An S3 destination configuration where recorded videos will be stored.
[$sel:s3:DestinationConfiguration'] :: DestinationConfiguration -> Maybe S3DestinationConfiguration

-- | Create a value of <a>DestinationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3:DestinationConfiguration'</a>,
--   <a>destinationConfiguration_s3</a> - An S3 destination configuration
--   where recorded videos will be stored.
newDestinationConfiguration :: DestinationConfiguration

-- | An S3 destination configuration where recorded videos will be stored.
destinationConfiguration_s3 :: Lens' DestinationConfiguration (Maybe S3DestinationConfiguration)

-- | A key pair used to sign and validate a playback authorization token.
--   
--   <i>See:</i> <a>newPlaybackKeyPair</a> smart constructor.
data PlaybackKeyPair
PlaybackKeyPair' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> PlaybackKeyPair

-- | Key-pair ARN.
[$sel:arn:PlaybackKeyPair'] :: PlaybackKeyPair -> Maybe Text

-- | Key-pair identifier.
[$sel:fingerprint:PlaybackKeyPair'] :: PlaybackKeyPair -> Maybe Text

-- | Playback-key-pair name. The value does not need to be unique.
[$sel:name:PlaybackKeyPair'] :: PlaybackKeyPair -> Maybe Text

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
[$sel:tags:PlaybackKeyPair'] :: PlaybackKeyPair -> Maybe (HashMap Text Text)

-- | Create a value of <a>PlaybackKeyPair</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PlaybackKeyPair'</a>, <a>playbackKeyPair_arn</a> -
--   Key-pair ARN.
--   
--   <a>$sel:fingerprint:PlaybackKeyPair'</a>,
--   <a>playbackKeyPair_fingerprint</a> - Key-pair identifier.
--   
--   <a>$sel:name:PlaybackKeyPair'</a>, <a>playbackKeyPair_name</a> -
--   Playback-key-pair name. The value does not need to be unique.
--   
--   <a>$sel:tags:PlaybackKeyPair'</a>, <a>playbackKeyPair_tags</a> - Array
--   of 1-50 maps, each of the form <tt>string:string (key:value)</tt>.
newPlaybackKeyPair :: PlaybackKeyPair

-- | Key-pair ARN.
playbackKeyPair_arn :: Lens' PlaybackKeyPair (Maybe Text)

-- | Key-pair identifier.
playbackKeyPair_fingerprint :: Lens' PlaybackKeyPair (Maybe Text)

-- | Playback-key-pair name. The value does not need to be unique.
playbackKeyPair_name :: Lens' PlaybackKeyPair (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
playbackKeyPair_tags :: Lens' PlaybackKeyPair (Maybe (HashMap Text Text))

-- | Summary information about a playback key pair.
--   
--   <i>See:</i> <a>newPlaybackKeyPairSummary</a> smart constructor.
data PlaybackKeyPairSummary
PlaybackKeyPairSummary' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> PlaybackKeyPairSummary

-- | Key-pair ARN.
[$sel:arn:PlaybackKeyPairSummary'] :: PlaybackKeyPairSummary -> Maybe Text

-- | Playback-key-pair name. The value does not need to be unique.
[$sel:name:PlaybackKeyPairSummary'] :: PlaybackKeyPairSummary -> Maybe Text

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
[$sel:tags:PlaybackKeyPairSummary'] :: PlaybackKeyPairSummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>PlaybackKeyPairSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PlaybackKeyPairSummary'</a>,
--   <a>playbackKeyPairSummary_arn</a> - Key-pair ARN.
--   
--   <a>$sel:name:PlaybackKeyPairSummary'</a>,
--   <a>playbackKeyPairSummary_name</a> - Playback-key-pair name. The value
--   does not need to be unique.
--   
--   <a>$sel:tags:PlaybackKeyPairSummary'</a>,
--   <a>playbackKeyPairSummary_tags</a> - Array of 1-50 maps, each of the
--   form <tt>string:string (key:value)</tt>.
newPlaybackKeyPairSummary :: PlaybackKeyPairSummary

-- | Key-pair ARN.
playbackKeyPairSummary_arn :: Lens' PlaybackKeyPairSummary (Maybe Text)

-- | Playback-key-pair name. The value does not need to be unique.
playbackKeyPairSummary_name :: Lens' PlaybackKeyPairSummary (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
playbackKeyPairSummary_tags :: Lens' PlaybackKeyPairSummary (Maybe (HashMap Text Text))

-- | An object representing a configuration to record a channel stream.
--   
--   <i>See:</i> <a>newRecordingConfiguration</a> smart constructor.
data RecordingConfiguration
RecordingConfiguration' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> DestinationConfiguration -> RecordingConfigurationState -> RecordingConfiguration

-- | Recording-configuration name. The value does not need to be unique.
[$sel:name:RecordingConfiguration'] :: RecordingConfiguration -> Maybe Text

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
[$sel:tags:RecordingConfiguration'] :: RecordingConfiguration -> Maybe (HashMap Text Text)

-- | Recording-configuration ARN.
[$sel:arn:RecordingConfiguration'] :: RecordingConfiguration -> Text

-- | A complex type that contains information about where recorded video
--   will be stored.
[$sel:destinationConfiguration:RecordingConfiguration'] :: RecordingConfiguration -> DestinationConfiguration

-- | Indicates the current state of the recording configuration. When the
--   state is <tt>ACTIVE</tt>, the configuration is ready for recording a
--   channel stream.
[$sel:state:RecordingConfiguration'] :: RecordingConfiguration -> RecordingConfigurationState

-- | Create a value of <a>RecordingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:RecordingConfiguration'</a>,
--   <a>recordingConfiguration_name</a> - Recording-configuration name. The
--   value does not need to be unique.
--   
--   <a>$sel:tags:RecordingConfiguration'</a>,
--   <a>recordingConfiguration_tags</a> - Array of 1-50 maps, each of the
--   form <tt>string:string (key:value)</tt>.
--   
--   <a>$sel:arn:RecordingConfiguration'</a>,
--   <a>recordingConfiguration_arn</a> - Recording-configuration ARN.
--   
--   <a>$sel:destinationConfiguration:RecordingConfiguration'</a>,
--   <a>recordingConfiguration_destinationConfiguration</a> - A complex
--   type that contains information about where recorded video will be
--   stored.
--   
--   <a>$sel:state:RecordingConfiguration'</a>,
--   <a>recordingConfiguration_state</a> - Indicates the current state of
--   the recording configuration. When the state is <tt>ACTIVE</tt>, the
--   configuration is ready for recording a channel stream.
newRecordingConfiguration :: Text -> DestinationConfiguration -> RecordingConfigurationState -> RecordingConfiguration

-- | Recording-configuration name. The value does not need to be unique.
recordingConfiguration_name :: Lens' RecordingConfiguration (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
recordingConfiguration_tags :: Lens' RecordingConfiguration (Maybe (HashMap Text Text))

-- | Recording-configuration ARN.
recordingConfiguration_arn :: Lens' RecordingConfiguration Text

-- | A complex type that contains information about where recorded video
--   will be stored.
recordingConfiguration_destinationConfiguration :: Lens' RecordingConfiguration DestinationConfiguration

-- | Indicates the current state of the recording configuration. When the
--   state is <tt>ACTIVE</tt>, the configuration is ready for recording a
--   channel stream.
recordingConfiguration_state :: Lens' RecordingConfiguration RecordingConfigurationState

-- | Summary information about a RecordingConfiguration.
--   
--   <i>See:</i> <a>newRecordingConfigurationSummary</a> smart constructor.
data RecordingConfigurationSummary
RecordingConfigurationSummary' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> DestinationConfiguration -> RecordingConfigurationState -> RecordingConfigurationSummary

-- | Recording-configuration name. The value does not need to be unique.
[$sel:name:RecordingConfigurationSummary'] :: RecordingConfigurationSummary -> Maybe Text

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
[$sel:tags:RecordingConfigurationSummary'] :: RecordingConfigurationSummary -> Maybe (HashMap Text Text)

-- | Recording-configuration ARN.
[$sel:arn:RecordingConfigurationSummary'] :: RecordingConfigurationSummary -> Text

-- | A complex type that contains information about where recorded video
--   will be stored.
[$sel:destinationConfiguration:RecordingConfigurationSummary'] :: RecordingConfigurationSummary -> DestinationConfiguration

-- | Indicates the current state of the recording configuration. When the
--   state is <tt>ACTIVE</tt>, the configuration is ready for recording a
--   channel stream.
[$sel:state:RecordingConfigurationSummary'] :: RecordingConfigurationSummary -> RecordingConfigurationState

-- | Create a value of <a>RecordingConfigurationSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:RecordingConfigurationSummary'</a>,
--   <a>recordingConfigurationSummary_name</a> - Recording-configuration
--   name. The value does not need to be unique.
--   
--   <a>$sel:tags:RecordingConfigurationSummary'</a>,
--   <a>recordingConfigurationSummary_tags</a> - Array of 1-50 maps, each
--   of the form <tt>string:string (key:value)</tt>.
--   
--   <a>$sel:arn:RecordingConfigurationSummary'</a>,
--   <a>recordingConfigurationSummary_arn</a> - Recording-configuration
--   ARN.
--   
--   <a>$sel:destinationConfiguration:RecordingConfigurationSummary'</a>,
--   <a>recordingConfigurationSummary_destinationConfiguration</a> - A
--   complex type that contains information about where recorded video will
--   be stored.
--   
--   <a>$sel:state:RecordingConfigurationSummary'</a>,
--   <a>recordingConfigurationSummary_state</a> - Indicates the current
--   state of the recording configuration. When the state is
--   <tt>ACTIVE</tt>, the configuration is ready for recording a channel
--   stream.
newRecordingConfigurationSummary :: Text -> DestinationConfiguration -> RecordingConfigurationState -> RecordingConfigurationSummary

-- | Recording-configuration name. The value does not need to be unique.
recordingConfigurationSummary_name :: Lens' RecordingConfigurationSummary (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
recordingConfigurationSummary_tags :: Lens' RecordingConfigurationSummary (Maybe (HashMap Text Text))

-- | Recording-configuration ARN.
recordingConfigurationSummary_arn :: Lens' RecordingConfigurationSummary Text

-- | A complex type that contains information about where recorded video
--   will be stored.
recordingConfigurationSummary_destinationConfiguration :: Lens' RecordingConfigurationSummary DestinationConfiguration

-- | Indicates the current state of the recording configuration. When the
--   state is <tt>ACTIVE</tt>, the configuration is ready for recording a
--   channel stream.
recordingConfigurationSummary_state :: Lens' RecordingConfigurationSummary RecordingConfigurationState

-- | A complex type that describes an S3 location where recorded videos
--   will be stored.
--   
--   <i>See:</i> <a>newS3DestinationConfiguration</a> smart constructor.
data S3DestinationConfiguration
S3DestinationConfiguration' :: Text -> S3DestinationConfiguration

-- | Location (S3 bucket name) where recorded videos will be stored.
[$sel:bucketName:S3DestinationConfiguration'] :: S3DestinationConfiguration -> Text

-- | Create a value of <a>S3DestinationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucketName:S3DestinationConfiguration'</a>,
--   <a>s3DestinationConfiguration_bucketName</a> - Location (S3 bucket
--   name) where recorded videos will be stored.
newS3DestinationConfiguration :: Text -> S3DestinationConfiguration

-- | Location (S3 bucket name) where recorded videos will be stored.
s3DestinationConfiguration_bucketName :: Lens' S3DestinationConfiguration Text

-- | Specifies a live video stream that has been ingested and distributed.
--   
--   <i>See:</i> <a>newStream</a> smart constructor.
data Stream
Stream' :: Maybe Text -> Maybe StreamState -> Maybe POSIX -> Maybe Text -> Maybe Integer -> Maybe StreamHealth -> Stream

-- | URL of the master playlist, required by the video player to play the
--   HLS stream.
[$sel:playbackUrl:Stream'] :: Stream -> Maybe Text

-- | The stream’s state.
[$sel:state:Stream'] :: Stream -> Maybe StreamState

-- | Time of the stream’s start. This is an ISO 8601 timestamp returned as
--   a string.
[$sel:startTime:Stream'] :: Stream -> Maybe POSIX

-- | Channel ARN for the stream.
[$sel:channelArn:Stream'] :: Stream -> Maybe Text

-- | A count of concurrent views of the stream. Typically, a new view
--   appears in <tt>viewerCount</tt> within 15 seconds of when video
--   playback starts and a view is removed from <tt>viewerCount</tt> within
--   1 minute of when video playback ends. A value of -1 indicates that the
--   request timed out; in this case, retry.
[$sel:viewerCount:Stream'] :: Stream -> Maybe Integer

-- | The stream’s health.
[$sel:health:Stream'] :: Stream -> Maybe StreamHealth

-- | Create a value of <a>Stream</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playbackUrl:Stream'</a>, <a>stream_playbackUrl</a> - URL of
--   the master playlist, required by the video player to play the HLS
--   stream.
--   
--   <a>$sel:state:Stream'</a>, <a>stream_state</a> - The stream’s state.
--   
--   <a>$sel:startTime:Stream'</a>, <a>stream_startTime</a> - Time of the
--   stream’s start. This is an ISO 8601 timestamp returned as a string.
--   
--   <a>$sel:channelArn:Stream'</a>, <a>stream_channelArn</a> - Channel ARN
--   for the stream.
--   
--   <a>$sel:viewerCount:Stream'</a>, <a>stream_viewerCount</a> - A count
--   of concurrent views of the stream. Typically, a new view appears in
--   <tt>viewerCount</tt> within 15 seconds of when video playback starts
--   and a view is removed from <tt>viewerCount</tt> within 1 minute of
--   when video playback ends. A value of -1 indicates that the request
--   timed out; in this case, retry.
--   
--   <a>$sel:health:Stream'</a>, <a>stream_health</a> - The stream’s
--   health.
newStream :: Stream

-- | URL of the master playlist, required by the video player to play the
--   HLS stream.
stream_playbackUrl :: Lens' Stream (Maybe Text)

-- | The stream’s state.
stream_state :: Lens' Stream (Maybe StreamState)

-- | Time of the stream’s start. This is an ISO 8601 timestamp returned as
--   a string.
stream_startTime :: Lens' Stream (Maybe UTCTime)

-- | Channel ARN for the stream.
stream_channelArn :: Lens' Stream (Maybe Text)

-- | A count of concurrent views of the stream. Typically, a new view
--   appears in <tt>viewerCount</tt> within 15 seconds of when video
--   playback starts and a view is removed from <tt>viewerCount</tt> within
--   1 minute of when video playback ends. A value of -1 indicates that the
--   request timed out; in this case, retry.
stream_viewerCount :: Lens' Stream (Maybe Integer)

-- | The stream’s health.
stream_health :: Lens' Stream (Maybe StreamHealth)

-- | Object specifying a stream key.
--   
--   <i>See:</i> <a>newStreamKey</a> smart constructor.
data StreamKey
StreamKey' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe Text -> Maybe (HashMap Text Text) -> StreamKey

-- | Stream-key ARN.
[$sel:arn:StreamKey'] :: StreamKey -> Maybe Text

-- | Stream-key value.
[$sel:value:StreamKey'] :: StreamKey -> Maybe (Sensitive Text)

-- | Channel ARN for the stream.
[$sel:channelArn:StreamKey'] :: StreamKey -> Maybe Text

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
[$sel:tags:StreamKey'] :: StreamKey -> Maybe (HashMap Text Text)

-- | Create a value of <a>StreamKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:StreamKey'</a>, <a>streamKey_arn</a> - Stream-key ARN.
--   
--   <a>$sel:value:StreamKey'</a>, <a>streamKey_value</a> - Stream-key
--   value.
--   
--   <a>$sel:channelArn:StreamKey'</a>, <a>streamKey_channelArn</a> -
--   Channel ARN for the stream.
--   
--   <a>$sel:tags:StreamKey'</a>, <a>streamKey_tags</a> - Array of 1-50
--   maps, each of the form <tt>string:string (key:value)</tt>.
newStreamKey :: StreamKey

-- | Stream-key ARN.
streamKey_arn :: Lens' StreamKey (Maybe Text)

-- | Stream-key value.
streamKey_value :: Lens' StreamKey (Maybe Text)

-- | Channel ARN for the stream.
streamKey_channelArn :: Lens' StreamKey (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
streamKey_tags :: Lens' StreamKey (Maybe (HashMap Text Text))

-- | Summary information about a stream key.
--   
--   <i>See:</i> <a>newStreamKeySummary</a> smart constructor.
data StreamKeySummary
StreamKeySummary' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> StreamKeySummary

-- | Stream-key ARN.
[$sel:arn:StreamKeySummary'] :: StreamKeySummary -> Maybe Text

-- | Channel ARN for the stream.
[$sel:channelArn:StreamKeySummary'] :: StreamKeySummary -> Maybe Text

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
[$sel:tags:StreamKeySummary'] :: StreamKeySummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>StreamKeySummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:StreamKeySummary'</a>, <a>streamKeySummary_arn</a> -
--   Stream-key ARN.
--   
--   <a>$sel:channelArn:StreamKeySummary'</a>,
--   <a>streamKeySummary_channelArn</a> - Channel ARN for the stream.
--   
--   <a>$sel:tags:StreamKeySummary'</a>, <a>streamKeySummary_tags</a> -
--   Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
newStreamKeySummary :: StreamKeySummary

-- | Stream-key ARN.
streamKeySummary_arn :: Lens' StreamKeySummary (Maybe Text)

-- | Channel ARN for the stream.
streamKeySummary_channelArn :: Lens' StreamKeySummary (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
streamKeySummary_tags :: Lens' StreamKeySummary (Maybe (HashMap Text Text))

-- | Summary information about a stream.
--   
--   <i>See:</i> <a>newStreamSummary</a> smart constructor.
data StreamSummary
StreamSummary' :: Maybe StreamState -> Maybe POSIX -> Maybe Text -> Maybe Integer -> Maybe StreamHealth -> StreamSummary

-- | The stream’s state.
[$sel:state:StreamSummary'] :: StreamSummary -> Maybe StreamState

-- | Time of the stream’s start. This is an ISO 8601 timestamp returned as
--   a string.
[$sel:startTime:StreamSummary'] :: StreamSummary -> Maybe POSIX

-- | Channel ARN for the stream.
[$sel:channelArn:StreamSummary'] :: StreamSummary -> Maybe Text

-- | A count of concurrent views of the stream. Typically, a new view
--   appears in <tt>viewerCount</tt> within 15 seconds of when video
--   playback starts and a view is removed from <tt>viewerCount</tt> within
--   1 minute of when video playback ends. A value of -1 indicates that the
--   request timed out; in this case, retry.
[$sel:viewerCount:StreamSummary'] :: StreamSummary -> Maybe Integer

-- | The stream’s health.
[$sel:health:StreamSummary'] :: StreamSummary -> Maybe StreamHealth

-- | Create a value of <a>StreamSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:StreamSummary'</a>, <a>streamSummary_state</a> - The
--   stream’s state.
--   
--   <a>$sel:startTime:StreamSummary'</a>, <a>streamSummary_startTime</a> -
--   Time of the stream’s start. This is an ISO 8601 timestamp returned as
--   a string.
--   
--   <a>$sel:channelArn:StreamSummary'</a>, <a>streamSummary_channelArn</a>
--   - Channel ARN for the stream.
--   
--   <a>$sel:viewerCount:StreamSummary'</a>,
--   <a>streamSummary_viewerCount</a> - A count of concurrent views of the
--   stream. Typically, a new view appears in <tt>viewerCount</tt> within
--   15 seconds of when video playback starts and a view is removed from
--   <tt>viewerCount</tt> within 1 minute of when video playback ends. A
--   value of -1 indicates that the request timed out; in this case, retry.
--   
--   <a>$sel:health:StreamSummary'</a>, <a>streamSummary_health</a> - The
--   stream’s health.
newStreamSummary :: StreamSummary

-- | The stream’s state.
streamSummary_state :: Lens' StreamSummary (Maybe StreamState)

-- | Time of the stream’s start. This is an ISO 8601 timestamp returned as
--   a string.
streamSummary_startTime :: Lens' StreamSummary (Maybe UTCTime)

-- | Channel ARN for the stream.
streamSummary_channelArn :: Lens' StreamSummary (Maybe Text)

-- | A count of concurrent views of the stream. Typically, a new view
--   appears in <tt>viewerCount</tt> within 15 seconds of when video
--   playback starts and a view is removed from <tt>viewerCount</tt> within
--   1 minute of when video playback ends. A value of -1 indicates that the
--   request timed out; in this case, retry.
streamSummary_viewerCount :: Lens' StreamSummary (Maybe Integer)

-- | The stream’s health.
streamSummary_health :: Lens' StreamSummary (Maybe StreamHealth)


-- | Adds or updates tags for the Amazon Web Services resource with the
--   specified ARN.
module Network.AWS.IVS.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | ARN of the resource for which tags are to be added or updated.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | Array of tags to be added or updated.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   ARN of the resource for which tags are to be added or updated.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - Array of tags
--   to be added or updated.
newTagResource :: Text -> TagResource

-- | ARN of the resource for which tags are to be added or updated.
tagResource_resourceArn :: Lens' TagResource Text

-- | Array of tags to be added or updated.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.IVS.TagResource.TagResource
instance GHC.Show.Show Network.AWS.IVS.TagResource.TagResource
instance GHC.Read.Read Network.AWS.IVS.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.IVS.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.IVS.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.IVS.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.IVS.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.IVS.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.IVS.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.IVS.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.TagResource.TagResource


-- | Disconnects the incoming RTMPS stream for the specified channel. Can
--   be used in conjunction with DeleteStreamKey to prevent further
--   streaming to a channel.
--   
--   Many streaming client-software libraries automatically reconnect a
--   dropped RTMPS session, so to stop the stream permanently, you may want
--   to first revoke the <tt>streamKey</tt> attached to the channel.
module Network.AWS.IVS.StopStream

-- | <i>See:</i> <a>newStopStream</a> smart constructor.
data StopStream
StopStream' :: Text -> StopStream

-- | ARN of the channel for which the stream is to be stopped.
[$sel:channelArn:StopStream'] :: StopStream -> Text

-- | Create a value of <a>StopStream</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:StopStream'</a>, <a>stopStream_channelArn</a> - ARN
--   of the channel for which the stream is to be stopped.
newStopStream :: Text -> StopStream

-- | ARN of the channel for which the stream is to be stopped.
stopStream_channelArn :: Lens' StopStream Text

-- | <i>See:</i> <a>newStopStreamResponse</a> smart constructor.
data StopStreamResponse
StopStreamResponse' :: Int -> StopStreamResponse

-- | The response's http status code.
[$sel:httpStatus:StopStreamResponse'] :: StopStreamResponse -> Int

-- | Create a value of <a>StopStreamResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopStreamResponse'</a>,
--   <a>stopStreamResponse_httpStatus</a> - The response's http status
--   code.
newStopStreamResponse :: Int -> StopStreamResponse

-- | The response's http status code.
stopStreamResponse_httpStatus :: Lens' StopStreamResponse Int
instance GHC.Generics.Generic Network.AWS.IVS.StopStream.StopStream
instance GHC.Show.Show Network.AWS.IVS.StopStream.StopStream
instance GHC.Read.Read Network.AWS.IVS.StopStream.StopStream
instance GHC.Classes.Eq Network.AWS.IVS.StopStream.StopStream
instance GHC.Generics.Generic Network.AWS.IVS.StopStream.StopStreamResponse
instance GHC.Show.Show Network.AWS.IVS.StopStream.StopStreamResponse
instance GHC.Read.Read Network.AWS.IVS.StopStream.StopStreamResponse
instance GHC.Classes.Eq Network.AWS.IVS.StopStream.StopStreamResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.StopStream.StopStream
instance Control.DeepSeq.NFData Network.AWS.IVS.StopStream.StopStreamResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.StopStream.StopStream
instance Control.DeepSeq.NFData Network.AWS.IVS.StopStream.StopStream
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.StopStream.StopStream
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.StopStream.StopStream
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.StopStream.StopStream
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.StopStream.StopStream


-- | Inserts metadata into the active stream of the specified channel. At
--   most 5 requests per second per channel are allowed, each with a
--   maximum 1 KB payload. (If 5 TPS is not sufficient for your needs, we
--   recommend batching your data into a single PutMetadata call.) At most
--   155 requests per second per account are allowed. Also see <a>Embedding
--   Metadata within a Video Stream</a> in the <i>Amazon IVS User
--   Guide</i>.
module Network.AWS.IVS.PutMetadata

-- | <i>See:</i> <a>newPutMetadata</a> smart constructor.
data PutMetadata
PutMetadata' :: Text -> Sensitive Text -> PutMetadata

-- | ARN of the channel into which metadata is inserted. This channel must
--   have an active stream.
[$sel:channelArn:PutMetadata'] :: PutMetadata -> Text

-- | Metadata to insert into the stream. Maximum: 1 KB per request.
[$sel:metadata:PutMetadata'] :: PutMetadata -> Sensitive Text

-- | Create a value of <a>PutMetadata</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:PutMetadata'</a>, <a>putMetadata_channelArn</a> -
--   ARN of the channel into which metadata is inserted. This channel must
--   have an active stream.
--   
--   <a>$sel:metadata:PutMetadata'</a>, <a>putMetadata_metadata</a> -
--   Metadata to insert into the stream. Maximum: 1 KB per request.
newPutMetadata :: Text -> Text -> PutMetadata

-- | ARN of the channel into which metadata is inserted. This channel must
--   have an active stream.
putMetadata_channelArn :: Lens' PutMetadata Text

-- | Metadata to insert into the stream. Maximum: 1 KB per request.
putMetadata_metadata :: Lens' PutMetadata Text

-- | <i>See:</i> <a>newPutMetadataResponse</a> smart constructor.
data PutMetadataResponse
PutMetadataResponse' :: PutMetadataResponse

-- | Create a value of <a>PutMetadataResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutMetadataResponse :: PutMetadataResponse
instance GHC.Generics.Generic Network.AWS.IVS.PutMetadata.PutMetadata
instance GHC.Show.Show Network.AWS.IVS.PutMetadata.PutMetadata
instance GHC.Classes.Eq Network.AWS.IVS.PutMetadata.PutMetadata
instance GHC.Generics.Generic Network.AWS.IVS.PutMetadata.PutMetadataResponse
instance GHC.Show.Show Network.AWS.IVS.PutMetadata.PutMetadataResponse
instance GHC.Read.Read Network.AWS.IVS.PutMetadata.PutMetadataResponse
instance GHC.Classes.Eq Network.AWS.IVS.PutMetadata.PutMetadataResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.PutMetadata.PutMetadata
instance Control.DeepSeq.NFData Network.AWS.IVS.PutMetadata.PutMetadataResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.PutMetadata.PutMetadata
instance Control.DeepSeq.NFData Network.AWS.IVS.PutMetadata.PutMetadata
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.PutMetadata.PutMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.PutMetadata.PutMetadata
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.PutMetadata.PutMetadata
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.PutMetadata.PutMetadata


-- | Gets information about Amazon Web Services tags for the specified ARN.
module Network.AWS.IVS.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The ARN of the resource to be retrieved.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of the resource to be
--   retrieved.
newListTagsForResource :: Text -> ListTagsForResource

-- | The ARN of the resource to be retrieved.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Int -> HashMap Text Text -> ListTagsForResourceResponse

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> HashMap Text Text

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> -
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (HashMap Text Text)
instance GHC.Generics.Generic Network.AWS.IVS.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.IVS.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.IVS.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.IVS.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.IVS.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.IVS.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.IVS.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.IVS.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.IVS.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.IVS.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.ListTagsForResource.ListTagsForResource


-- | Gets summary information about live streams in your account, in the
--   Amazon Web Services region where the API request is processed.
--   
--   This operation returns paginated results.
module Network.AWS.IVS.ListStreams

-- | <i>See:</i> <a>newListStreams</a> smart constructor.
data ListStreams
ListStreams' :: Maybe Text -> Maybe Natural -> ListStreams

-- | The first stream to retrieve. This is used for pagination; see the
--   <tt>nextToken</tt> response field.
[$sel:nextToken:ListStreams'] :: ListStreams -> Maybe Text

-- | Maximum number of streams to return. Default: 50.
[$sel:maxResults:ListStreams'] :: ListStreams -> Maybe Natural

-- | Create a value of <a>ListStreams</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListStreams'</a>, <a>listStreams_nextToken</a> - The
--   first stream to retrieve. This is used for pagination; see the
--   <tt>nextToken</tt> response field.
--   
--   <a>$sel:maxResults:ListStreams'</a>, <a>listStreams_maxResults</a> -
--   Maximum number of streams to return. Default: 50.
newListStreams :: ListStreams

-- | The first stream to retrieve. This is used for pagination; see the
--   <tt>nextToken</tt> response field.
listStreams_nextToken :: Lens' ListStreams (Maybe Text)

-- | Maximum number of streams to return. Default: 50.
listStreams_maxResults :: Lens' ListStreams (Maybe Natural)

-- | <i>See:</i> <a>newListStreamsResponse</a> smart constructor.
data ListStreamsResponse
ListStreamsResponse' :: Maybe Text -> Int -> [StreamSummary] -> ListStreamsResponse

-- | If there are more streams than <tt>maxResults</tt>, use
--   <tt>nextToken</tt> in the request to get the next set.
[$sel:nextToken:ListStreamsResponse'] :: ListStreamsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListStreamsResponse'] :: ListStreamsResponse -> Int

-- | List of streams.
[$sel:streams:ListStreamsResponse'] :: ListStreamsResponse -> [StreamSummary]

-- | Create a value of <a>ListStreamsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListStreams'</a>,
--   <a>listStreamsResponse_nextToken</a> - If there are more streams than
--   <tt>maxResults</tt>, use <tt>nextToken</tt> in the request to get the
--   next set.
--   
--   <a>$sel:httpStatus:ListStreamsResponse'</a>,
--   <a>listStreamsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:streams:ListStreamsResponse'</a>,
--   <a>listStreamsResponse_streams</a> - List of streams.
newListStreamsResponse :: Int -> ListStreamsResponse

-- | If there are more streams than <tt>maxResults</tt>, use
--   <tt>nextToken</tt> in the request to get the next set.
listStreamsResponse_nextToken :: Lens' ListStreamsResponse (Maybe Text)

-- | The response's http status code.
listStreamsResponse_httpStatus :: Lens' ListStreamsResponse Int

-- | List of streams.
listStreamsResponse_streams :: Lens' ListStreamsResponse [StreamSummary]
instance GHC.Generics.Generic Network.AWS.IVS.ListStreams.ListStreams
instance GHC.Show.Show Network.AWS.IVS.ListStreams.ListStreams
instance GHC.Read.Read Network.AWS.IVS.ListStreams.ListStreams
instance GHC.Classes.Eq Network.AWS.IVS.ListStreams.ListStreams
instance GHC.Generics.Generic Network.AWS.IVS.ListStreams.ListStreamsResponse
instance GHC.Show.Show Network.AWS.IVS.ListStreams.ListStreamsResponse
instance GHC.Read.Read Network.AWS.IVS.ListStreams.ListStreamsResponse
instance GHC.Classes.Eq Network.AWS.IVS.ListStreams.ListStreamsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.ListStreams.ListStreams
instance Control.DeepSeq.NFData Network.AWS.IVS.ListStreams.ListStreamsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.IVS.ListStreams.ListStreams
instance Data.Hashable.Class.Hashable Network.AWS.IVS.ListStreams.ListStreams
instance Control.DeepSeq.NFData Network.AWS.IVS.ListStreams.ListStreams
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.ListStreams.ListStreams
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.ListStreams.ListStreams
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.ListStreams.ListStreams
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.ListStreams.ListStreams


-- | Gets summary information about stream keys for the specified channel.
--   
--   This operation returns paginated results.
module Network.AWS.IVS.ListStreamKeys

-- | <i>See:</i> <a>newListStreamKeys</a> smart constructor.
data ListStreamKeys
ListStreamKeys' :: Maybe Text -> Maybe Natural -> Text -> ListStreamKeys

-- | The first stream key to retrieve. This is used for pagination; see the
--   <tt>nextToken</tt> response field.
[$sel:nextToken:ListStreamKeys'] :: ListStreamKeys -> Maybe Text

-- | Maximum number of streamKeys to return. Default: 50.
[$sel:maxResults:ListStreamKeys'] :: ListStreamKeys -> Maybe Natural

-- | Channel ARN used to filter the list.
[$sel:channelArn:ListStreamKeys'] :: ListStreamKeys -> Text

-- | Create a value of <a>ListStreamKeys</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListStreamKeys'</a>, <a>listStreamKeys_nextToken</a>
--   - The first stream key to retrieve. This is used for pagination; see
--   the <tt>nextToken</tt> response field.
--   
--   <a>$sel:maxResults:ListStreamKeys'</a>,
--   <a>listStreamKeys_maxResults</a> - Maximum number of streamKeys to
--   return. Default: 50.
--   
--   <a>$sel:channelArn:ListStreamKeys'</a>,
--   <a>listStreamKeys_channelArn</a> - Channel ARN used to filter the
--   list.
newListStreamKeys :: Text -> ListStreamKeys

-- | The first stream key to retrieve. This is used for pagination; see the
--   <tt>nextToken</tt> response field.
listStreamKeys_nextToken :: Lens' ListStreamKeys (Maybe Text)

-- | Maximum number of streamKeys to return. Default: 50.
listStreamKeys_maxResults :: Lens' ListStreamKeys (Maybe Natural)

-- | Channel ARN used to filter the list.
listStreamKeys_channelArn :: Lens' ListStreamKeys Text

-- | <i>See:</i> <a>newListStreamKeysResponse</a> smart constructor.
data ListStreamKeysResponse
ListStreamKeysResponse' :: Maybe Text -> Int -> [StreamKeySummary] -> ListStreamKeysResponse

-- | If there are more stream keys than <tt>maxResults</tt>, use
--   <tt>nextToken</tt> in the request to get the next set.
[$sel:nextToken:ListStreamKeysResponse'] :: ListStreamKeysResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListStreamKeysResponse'] :: ListStreamKeysResponse -> Int

-- | List of stream keys.
[$sel:streamKeys:ListStreamKeysResponse'] :: ListStreamKeysResponse -> [StreamKeySummary]

-- | Create a value of <a>ListStreamKeysResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListStreamKeys'</a>,
--   <a>listStreamKeysResponse_nextToken</a> - If there are more stream
--   keys than <tt>maxResults</tt>, use <tt>nextToken</tt> in the request
--   to get the next set.
--   
--   <a>$sel:httpStatus:ListStreamKeysResponse'</a>,
--   <a>listStreamKeysResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:streamKeys:ListStreamKeysResponse'</a>,
--   <a>listStreamKeysResponse_streamKeys</a> - List of stream keys.
newListStreamKeysResponse :: Int -> ListStreamKeysResponse

-- | If there are more stream keys than <tt>maxResults</tt>, use
--   <tt>nextToken</tt> in the request to get the next set.
listStreamKeysResponse_nextToken :: Lens' ListStreamKeysResponse (Maybe Text)

-- | The response's http status code.
listStreamKeysResponse_httpStatus :: Lens' ListStreamKeysResponse Int

-- | List of stream keys.
listStreamKeysResponse_streamKeys :: Lens' ListStreamKeysResponse [StreamKeySummary]
instance GHC.Generics.Generic Network.AWS.IVS.ListStreamKeys.ListStreamKeys
instance GHC.Show.Show Network.AWS.IVS.ListStreamKeys.ListStreamKeys
instance GHC.Read.Read Network.AWS.IVS.ListStreamKeys.ListStreamKeys
instance GHC.Classes.Eq Network.AWS.IVS.ListStreamKeys.ListStreamKeys
instance GHC.Generics.Generic Network.AWS.IVS.ListStreamKeys.ListStreamKeysResponse
instance GHC.Show.Show Network.AWS.IVS.ListStreamKeys.ListStreamKeysResponse
instance GHC.Read.Read Network.AWS.IVS.ListStreamKeys.ListStreamKeysResponse
instance GHC.Classes.Eq Network.AWS.IVS.ListStreamKeys.ListStreamKeysResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.ListStreamKeys.ListStreamKeys
instance Control.DeepSeq.NFData Network.AWS.IVS.ListStreamKeys.ListStreamKeysResponse
instance Network.AWS.Pager.AWSPager Network.AWS.IVS.ListStreamKeys.ListStreamKeys
instance Data.Hashable.Class.Hashable Network.AWS.IVS.ListStreamKeys.ListStreamKeys
instance Control.DeepSeq.NFData Network.AWS.IVS.ListStreamKeys.ListStreamKeys
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.ListStreamKeys.ListStreamKeys
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.ListStreamKeys.ListStreamKeys
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.ListStreamKeys.ListStreamKeys
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.ListStreamKeys.ListStreamKeys


-- | Gets summary information about all recording configurations in your
--   account, in the Amazon Web Services region where the API request is
--   processed.
--   
--   This operation returns paginated results.
module Network.AWS.IVS.ListRecordingConfigurations

-- | <i>See:</i> <a>newListRecordingConfigurations</a> smart constructor.
data ListRecordingConfigurations
ListRecordingConfigurations' :: Maybe Text -> Maybe Natural -> ListRecordingConfigurations

-- | The first recording configuration to retrieve. This is used for
--   pagination; see the <tt>nextToken</tt> response field.
[$sel:nextToken:ListRecordingConfigurations'] :: ListRecordingConfigurations -> Maybe Text

-- | Maximum number of recording configurations to return. Default: 50.
[$sel:maxResults:ListRecordingConfigurations'] :: ListRecordingConfigurations -> Maybe Natural

-- | Create a value of <a>ListRecordingConfigurations</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecordingConfigurations'</a>,
--   <a>listRecordingConfigurations_nextToken</a> - The first recording
--   configuration to retrieve. This is used for pagination; see the
--   <tt>nextToken</tt> response field.
--   
--   <a>$sel:maxResults:ListRecordingConfigurations'</a>,
--   <a>listRecordingConfigurations_maxResults</a> - Maximum number of
--   recording configurations to return. Default: 50.
newListRecordingConfigurations :: ListRecordingConfigurations

-- | The first recording configuration to retrieve. This is used for
--   pagination; see the <tt>nextToken</tt> response field.
listRecordingConfigurations_nextToken :: Lens' ListRecordingConfigurations (Maybe Text)

-- | Maximum number of recording configurations to return. Default: 50.
listRecordingConfigurations_maxResults :: Lens' ListRecordingConfigurations (Maybe Natural)

-- | <i>See:</i> <a>newListRecordingConfigurationsResponse</a> smart
--   constructor.
data ListRecordingConfigurationsResponse
ListRecordingConfigurationsResponse' :: Maybe Text -> Int -> [RecordingConfigurationSummary] -> ListRecordingConfigurationsResponse

-- | If there are more recording configurations than <tt>maxResults</tt>,
--   use <tt>nextToken</tt> in the request to get the next set.
[$sel:nextToken:ListRecordingConfigurationsResponse'] :: ListRecordingConfigurationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListRecordingConfigurationsResponse'] :: ListRecordingConfigurationsResponse -> Int

-- | List of the matching recording configurations.
[$sel:recordingConfigurations:ListRecordingConfigurationsResponse'] :: ListRecordingConfigurationsResponse -> [RecordingConfigurationSummary]

-- | Create a value of <a>ListRecordingConfigurationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecordingConfigurations'</a>,
--   <a>listRecordingConfigurationsResponse_nextToken</a> - If there are
--   more recording configurations than <tt>maxResults</tt>, use
--   <tt>nextToken</tt> in the request to get the next set.
--   
--   <a>$sel:httpStatus:ListRecordingConfigurationsResponse'</a>,
--   <a>listRecordingConfigurationsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   
--   <a>$sel:recordingConfigurations:ListRecordingConfigurationsResponse'</a>,
--   <a>listRecordingConfigurationsResponse_recordingConfigurations</a> -
--   List of the matching recording configurations.
newListRecordingConfigurationsResponse :: Int -> ListRecordingConfigurationsResponse

-- | If there are more recording configurations than <tt>maxResults</tt>,
--   use <tt>nextToken</tt> in the request to get the next set.
listRecordingConfigurationsResponse_nextToken :: Lens' ListRecordingConfigurationsResponse (Maybe Text)

-- | The response's http status code.
listRecordingConfigurationsResponse_httpStatus :: Lens' ListRecordingConfigurationsResponse Int

-- | List of the matching recording configurations.
listRecordingConfigurationsResponse_recordingConfigurations :: Lens' ListRecordingConfigurationsResponse [RecordingConfigurationSummary]
instance GHC.Generics.Generic Network.AWS.IVS.ListRecordingConfigurations.ListRecordingConfigurations
instance GHC.Show.Show Network.AWS.IVS.ListRecordingConfigurations.ListRecordingConfigurations
instance GHC.Read.Read Network.AWS.IVS.ListRecordingConfigurations.ListRecordingConfigurations
instance GHC.Classes.Eq Network.AWS.IVS.ListRecordingConfigurations.ListRecordingConfigurations
instance GHC.Generics.Generic Network.AWS.IVS.ListRecordingConfigurations.ListRecordingConfigurationsResponse
instance GHC.Show.Show Network.AWS.IVS.ListRecordingConfigurations.ListRecordingConfigurationsResponse
instance GHC.Read.Read Network.AWS.IVS.ListRecordingConfigurations.ListRecordingConfigurationsResponse
instance GHC.Classes.Eq Network.AWS.IVS.ListRecordingConfigurations.ListRecordingConfigurationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.ListRecordingConfigurations.ListRecordingConfigurations
instance Control.DeepSeq.NFData Network.AWS.IVS.ListRecordingConfigurations.ListRecordingConfigurationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.IVS.ListRecordingConfigurations.ListRecordingConfigurations
instance Data.Hashable.Class.Hashable Network.AWS.IVS.ListRecordingConfigurations.ListRecordingConfigurations
instance Control.DeepSeq.NFData Network.AWS.IVS.ListRecordingConfigurations.ListRecordingConfigurations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.ListRecordingConfigurations.ListRecordingConfigurations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.ListRecordingConfigurations.ListRecordingConfigurations
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.ListRecordingConfigurations.ListRecordingConfigurations
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.ListRecordingConfigurations.ListRecordingConfigurations


-- | Gets summary information about playback key pairs. For more
--   information, see <a>Setting Up Private Channels</a> in the <i>Amazon
--   IVS User Guide</i>.
--   
--   This operation returns paginated results.
module Network.AWS.IVS.ListPlaybackKeyPairs

-- | <i>See:</i> <a>newListPlaybackKeyPairs</a> smart constructor.
data ListPlaybackKeyPairs
ListPlaybackKeyPairs' :: Maybe Text -> Maybe Natural -> ListPlaybackKeyPairs

-- | Maximum number of key pairs to return.
[$sel:nextToken:ListPlaybackKeyPairs'] :: ListPlaybackKeyPairs -> Maybe Text

-- | The first key pair to retrieve. This is used for pagination; see the
--   <tt>nextToken</tt> response field. Default: 50.
[$sel:maxResults:ListPlaybackKeyPairs'] :: ListPlaybackKeyPairs -> Maybe Natural

-- | Create a value of <a>ListPlaybackKeyPairs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPlaybackKeyPairs'</a>,
--   <a>listPlaybackKeyPairs_nextToken</a> - Maximum number of key pairs to
--   return.
--   
--   <a>$sel:maxResults:ListPlaybackKeyPairs'</a>,
--   <a>listPlaybackKeyPairs_maxResults</a> - The first key pair to
--   retrieve. This is used for pagination; see the <tt>nextToken</tt>
--   response field. Default: 50.
newListPlaybackKeyPairs :: ListPlaybackKeyPairs

-- | Maximum number of key pairs to return.
listPlaybackKeyPairs_nextToken :: Lens' ListPlaybackKeyPairs (Maybe Text)

-- | The first key pair to retrieve. This is used for pagination; see the
--   <tt>nextToken</tt> response field. Default: 50.
listPlaybackKeyPairs_maxResults :: Lens' ListPlaybackKeyPairs (Maybe Natural)

-- | <i>See:</i> <a>newListPlaybackKeyPairsResponse</a> smart constructor.
data ListPlaybackKeyPairsResponse
ListPlaybackKeyPairsResponse' :: Maybe Text -> Int -> [PlaybackKeyPairSummary] -> ListPlaybackKeyPairsResponse

-- | If there are more key pairs than <tt>maxResults</tt>, use
--   <tt>nextToken</tt> in the request to get the next set.
[$sel:nextToken:ListPlaybackKeyPairsResponse'] :: ListPlaybackKeyPairsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListPlaybackKeyPairsResponse'] :: ListPlaybackKeyPairsResponse -> Int

-- | List of key pairs.
[$sel:keyPairs:ListPlaybackKeyPairsResponse'] :: ListPlaybackKeyPairsResponse -> [PlaybackKeyPairSummary]

-- | Create a value of <a>ListPlaybackKeyPairsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPlaybackKeyPairs'</a>,
--   <a>listPlaybackKeyPairsResponse_nextToken</a> - If there are more key
--   pairs than <tt>maxResults</tt>, use <tt>nextToken</tt> in the request
--   to get the next set.
--   
--   <a>$sel:httpStatus:ListPlaybackKeyPairsResponse'</a>,
--   <a>listPlaybackKeyPairsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:keyPairs:ListPlaybackKeyPairsResponse'</a>,
--   <a>listPlaybackKeyPairsResponse_keyPairs</a> - List of key pairs.
newListPlaybackKeyPairsResponse :: Int -> ListPlaybackKeyPairsResponse

-- | If there are more key pairs than <tt>maxResults</tt>, use
--   <tt>nextToken</tt> in the request to get the next set.
listPlaybackKeyPairsResponse_nextToken :: Lens' ListPlaybackKeyPairsResponse (Maybe Text)

-- | The response's http status code.
listPlaybackKeyPairsResponse_httpStatus :: Lens' ListPlaybackKeyPairsResponse Int

-- | List of key pairs.
listPlaybackKeyPairsResponse_keyPairs :: Lens' ListPlaybackKeyPairsResponse [PlaybackKeyPairSummary]
instance GHC.Generics.Generic Network.AWS.IVS.ListPlaybackKeyPairs.ListPlaybackKeyPairs
instance GHC.Show.Show Network.AWS.IVS.ListPlaybackKeyPairs.ListPlaybackKeyPairs
instance GHC.Read.Read Network.AWS.IVS.ListPlaybackKeyPairs.ListPlaybackKeyPairs
instance GHC.Classes.Eq Network.AWS.IVS.ListPlaybackKeyPairs.ListPlaybackKeyPairs
instance GHC.Generics.Generic Network.AWS.IVS.ListPlaybackKeyPairs.ListPlaybackKeyPairsResponse
instance GHC.Show.Show Network.AWS.IVS.ListPlaybackKeyPairs.ListPlaybackKeyPairsResponse
instance GHC.Read.Read Network.AWS.IVS.ListPlaybackKeyPairs.ListPlaybackKeyPairsResponse
instance GHC.Classes.Eq Network.AWS.IVS.ListPlaybackKeyPairs.ListPlaybackKeyPairsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.ListPlaybackKeyPairs.ListPlaybackKeyPairs
instance Control.DeepSeq.NFData Network.AWS.IVS.ListPlaybackKeyPairs.ListPlaybackKeyPairsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.IVS.ListPlaybackKeyPairs.ListPlaybackKeyPairs
instance Data.Hashable.Class.Hashable Network.AWS.IVS.ListPlaybackKeyPairs.ListPlaybackKeyPairs
instance Control.DeepSeq.NFData Network.AWS.IVS.ListPlaybackKeyPairs.ListPlaybackKeyPairs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.ListPlaybackKeyPairs.ListPlaybackKeyPairs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.ListPlaybackKeyPairs.ListPlaybackKeyPairs
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.ListPlaybackKeyPairs.ListPlaybackKeyPairs
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.ListPlaybackKeyPairs.ListPlaybackKeyPairs


-- | Gets summary information about all channels in your account, in the
--   Amazon Web Services region where the API request is processed. This
--   list can be filtered to match a specified name or
--   recording-configuration ARN. Filters are mutually exclusive and cannot
--   be used together. If you try to use both filters, you will get an
--   error (409 ConflictException).
--   
--   This operation returns paginated results.
module Network.AWS.IVS.ListChannels

-- | <i>See:</i> <a>newListChannels</a> smart constructor.
data ListChannels
ListChannels' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> ListChannels

-- | Filters the channel list to match the specified name.
[$sel:filterByName:ListChannels'] :: ListChannels -> Maybe Text

-- | The first channel to retrieve. This is used for pagination; see the
--   <tt>nextToken</tt> response field.
[$sel:nextToken:ListChannels'] :: ListChannels -> Maybe Text

-- | Filters the channel list to match the specified
--   recording-configuration ARN.
[$sel:filterByRecordingConfigurationArn:ListChannels'] :: ListChannels -> Maybe Text

-- | Maximum number of channels to return. Default: 50.
[$sel:maxResults:ListChannels'] :: ListChannels -> Maybe Natural

-- | Create a value of <a>ListChannels</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterByName:ListChannels'</a>,
--   <a>listChannels_filterByName</a> - Filters the channel list to match
--   the specified name.
--   
--   <a>$sel:nextToken:ListChannels'</a>, <a>listChannels_nextToken</a> -
--   The first channel to retrieve. This is used for pagination; see the
--   <tt>nextToken</tt> response field.
--   
--   <a>$sel:filterByRecordingConfigurationArn:ListChannels'</a>,
--   <a>listChannels_filterByRecordingConfigurationArn</a> - Filters the
--   channel list to match the specified recording-configuration ARN.
--   
--   <a>$sel:maxResults:ListChannels'</a>, <a>listChannels_maxResults</a> -
--   Maximum number of channels to return. Default: 50.
newListChannels :: ListChannels

-- | Filters the channel list to match the specified name.
listChannels_filterByName :: Lens' ListChannels (Maybe Text)

-- | The first channel to retrieve. This is used for pagination; see the
--   <tt>nextToken</tt> response field.
listChannels_nextToken :: Lens' ListChannels (Maybe Text)

-- | Filters the channel list to match the specified
--   recording-configuration ARN.
listChannels_filterByRecordingConfigurationArn :: Lens' ListChannels (Maybe Text)

-- | Maximum number of channels to return. Default: 50.
listChannels_maxResults :: Lens' ListChannels (Maybe Natural)

-- | <i>See:</i> <a>newListChannelsResponse</a> smart constructor.
data ListChannelsResponse
ListChannelsResponse' :: Maybe Text -> Int -> [ChannelSummary] -> ListChannelsResponse

-- | If there are more channels than <tt>maxResults</tt>, use
--   <tt>nextToken</tt> in the request to get the next set.
[$sel:nextToken:ListChannelsResponse'] :: ListChannelsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListChannelsResponse'] :: ListChannelsResponse -> Int

-- | List of the matching channels.
[$sel:channels:ListChannelsResponse'] :: ListChannelsResponse -> [ChannelSummary]

-- | Create a value of <a>ListChannelsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChannels'</a>,
--   <a>listChannelsResponse_nextToken</a> - If there are more channels
--   than <tt>maxResults</tt>, use <tt>nextToken</tt> in the request to get
--   the next set.
--   
--   <a>$sel:httpStatus:ListChannelsResponse'</a>,
--   <a>listChannelsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:channels:ListChannelsResponse'</a>,
--   <a>listChannelsResponse_channels</a> - List of the matching channels.
newListChannelsResponse :: Int -> ListChannelsResponse

-- | If there are more channels than <tt>maxResults</tt>, use
--   <tt>nextToken</tt> in the request to get the next set.
listChannelsResponse_nextToken :: Lens' ListChannelsResponse (Maybe Text)

-- | The response's http status code.
listChannelsResponse_httpStatus :: Lens' ListChannelsResponse Int

-- | List of the matching channels.
listChannelsResponse_channels :: Lens' ListChannelsResponse [ChannelSummary]
instance GHC.Generics.Generic Network.AWS.IVS.ListChannels.ListChannels
instance GHC.Show.Show Network.AWS.IVS.ListChannels.ListChannels
instance GHC.Read.Read Network.AWS.IVS.ListChannels.ListChannels
instance GHC.Classes.Eq Network.AWS.IVS.ListChannels.ListChannels
instance GHC.Generics.Generic Network.AWS.IVS.ListChannels.ListChannelsResponse
instance GHC.Show.Show Network.AWS.IVS.ListChannels.ListChannelsResponse
instance GHC.Read.Read Network.AWS.IVS.ListChannels.ListChannelsResponse
instance GHC.Classes.Eq Network.AWS.IVS.ListChannels.ListChannelsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.ListChannels.ListChannels
instance Control.DeepSeq.NFData Network.AWS.IVS.ListChannels.ListChannelsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.IVS.ListChannels.ListChannels
instance Data.Hashable.Class.Hashable Network.AWS.IVS.ListChannels.ListChannels
instance Control.DeepSeq.NFData Network.AWS.IVS.ListChannels.ListChannels
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.ListChannels.ListChannels
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.ListChannels.ListChannels
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.ListChannels.ListChannels
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.ListChannels.ListChannels


-- | Imports the public portion of a new key pair and returns its
--   <tt>arn</tt> and <tt>fingerprint</tt>. The <tt>privateKey</tt> can
--   then be used to generate viewer authorization tokens, to grant viewers
--   access to private channels. For more information, see <a>Setting Up
--   Private Channels</a> in the <i>Amazon IVS User Guide</i>.
module Network.AWS.IVS.ImportPlaybackKeyPair

-- | <i>See:</i> <a>newImportPlaybackKeyPair</a> smart constructor.
data ImportPlaybackKeyPair
ImportPlaybackKeyPair' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> ImportPlaybackKeyPair

-- | Playback-key-pair name. The value does not need to be unique.
[$sel:name:ImportPlaybackKeyPair'] :: ImportPlaybackKeyPair -> Maybe Text

-- | Any tags provided with the request are added to the playback key pair
--   tags.
[$sel:tags:ImportPlaybackKeyPair'] :: ImportPlaybackKeyPair -> Maybe (HashMap Text Text)

-- | The public portion of a customer-generated key pair.
[$sel:publicKeyMaterial:ImportPlaybackKeyPair'] :: ImportPlaybackKeyPair -> Text

-- | Create a value of <a>ImportPlaybackKeyPair</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ImportPlaybackKeyPair'</a>,
--   <a>importPlaybackKeyPair_name</a> - Playback-key-pair name. The value
--   does not need to be unique.
--   
--   <a>$sel:tags:ImportPlaybackKeyPair'</a>,
--   <a>importPlaybackKeyPair_tags</a> - Any tags provided with the request
--   are added to the playback key pair tags.
--   
--   <a>$sel:publicKeyMaterial:ImportPlaybackKeyPair'</a>,
--   <a>importPlaybackKeyPair_publicKeyMaterial</a> - The public portion of
--   a customer-generated key pair.
newImportPlaybackKeyPair :: Text -> ImportPlaybackKeyPair

-- | Playback-key-pair name. The value does not need to be unique.
importPlaybackKeyPair_name :: Lens' ImportPlaybackKeyPair (Maybe Text)

-- | Any tags provided with the request are added to the playback key pair
--   tags.
importPlaybackKeyPair_tags :: Lens' ImportPlaybackKeyPair (Maybe (HashMap Text Text))

-- | The public portion of a customer-generated key pair.
importPlaybackKeyPair_publicKeyMaterial :: Lens' ImportPlaybackKeyPair Text

-- | <i>See:</i> <a>newImportPlaybackKeyPairResponse</a> smart constructor.
data ImportPlaybackKeyPairResponse
ImportPlaybackKeyPairResponse' :: Maybe PlaybackKeyPair -> Int -> ImportPlaybackKeyPairResponse
[$sel:keyPair:ImportPlaybackKeyPairResponse'] :: ImportPlaybackKeyPairResponse -> Maybe PlaybackKeyPair

-- | The response's http status code.
[$sel:httpStatus:ImportPlaybackKeyPairResponse'] :: ImportPlaybackKeyPairResponse -> Int

-- | Create a value of <a>ImportPlaybackKeyPairResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPair:ImportPlaybackKeyPairResponse'</a>,
--   <a>importPlaybackKeyPairResponse_keyPair</a> -
--   
--   <a>$sel:httpStatus:ImportPlaybackKeyPairResponse'</a>,
--   <a>importPlaybackKeyPairResponse_httpStatus</a> - The response's http
--   status code.
newImportPlaybackKeyPairResponse :: Int -> ImportPlaybackKeyPairResponse

importPlaybackKeyPairResponse_keyPair :: Lens' ImportPlaybackKeyPairResponse (Maybe PlaybackKeyPair)

-- | The response's http status code.
importPlaybackKeyPairResponse_httpStatus :: Lens' ImportPlaybackKeyPairResponse Int
instance GHC.Generics.Generic Network.AWS.IVS.ImportPlaybackKeyPair.ImportPlaybackKeyPair
instance GHC.Show.Show Network.AWS.IVS.ImportPlaybackKeyPair.ImportPlaybackKeyPair
instance GHC.Read.Read Network.AWS.IVS.ImportPlaybackKeyPair.ImportPlaybackKeyPair
instance GHC.Classes.Eq Network.AWS.IVS.ImportPlaybackKeyPair.ImportPlaybackKeyPair
instance GHC.Generics.Generic Network.AWS.IVS.ImportPlaybackKeyPair.ImportPlaybackKeyPairResponse
instance GHC.Show.Show Network.AWS.IVS.ImportPlaybackKeyPair.ImportPlaybackKeyPairResponse
instance GHC.Read.Read Network.AWS.IVS.ImportPlaybackKeyPair.ImportPlaybackKeyPairResponse
instance GHC.Classes.Eq Network.AWS.IVS.ImportPlaybackKeyPair.ImportPlaybackKeyPairResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.ImportPlaybackKeyPair.ImportPlaybackKeyPair
instance Control.DeepSeq.NFData Network.AWS.IVS.ImportPlaybackKeyPair.ImportPlaybackKeyPairResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.ImportPlaybackKeyPair.ImportPlaybackKeyPair
instance Control.DeepSeq.NFData Network.AWS.IVS.ImportPlaybackKeyPair.ImportPlaybackKeyPair
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.ImportPlaybackKeyPair.ImportPlaybackKeyPair
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.ImportPlaybackKeyPair.ImportPlaybackKeyPair
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.ImportPlaybackKeyPair.ImportPlaybackKeyPair
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.ImportPlaybackKeyPair.ImportPlaybackKeyPair


-- | Gets stream-key information for a specified ARN.
module Network.AWS.IVS.GetStreamKey

-- | <i>See:</i> <a>newGetStreamKey</a> smart constructor.
data GetStreamKey
GetStreamKey' :: Text -> GetStreamKey

-- | ARN for the stream key to be retrieved.
[$sel:arn:GetStreamKey'] :: GetStreamKey -> Text

-- | Create a value of <a>GetStreamKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetStreamKey'</a>, <a>getStreamKey_arn</a> - ARN for the
--   stream key to be retrieved.
newGetStreamKey :: Text -> GetStreamKey

-- | ARN for the stream key to be retrieved.
getStreamKey_arn :: Lens' GetStreamKey Text

-- | <i>See:</i> <a>newGetStreamKeyResponse</a> smart constructor.
data GetStreamKeyResponse
GetStreamKeyResponse' :: Maybe StreamKey -> Int -> GetStreamKeyResponse
[$sel:streamKey:GetStreamKeyResponse'] :: GetStreamKeyResponse -> Maybe StreamKey

-- | The response's http status code.
[$sel:httpStatus:GetStreamKeyResponse'] :: GetStreamKeyResponse -> Int

-- | Create a value of <a>GetStreamKeyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamKey:GetStreamKeyResponse'</a>,
--   <a>getStreamKeyResponse_streamKey</a> -
--   
--   <a>$sel:httpStatus:GetStreamKeyResponse'</a>,
--   <a>getStreamKeyResponse_httpStatus</a> - The response's http status
--   code.
newGetStreamKeyResponse :: Int -> GetStreamKeyResponse

getStreamKeyResponse_streamKey :: Lens' GetStreamKeyResponse (Maybe StreamKey)

-- | The response's http status code.
getStreamKeyResponse_httpStatus :: Lens' GetStreamKeyResponse Int
instance GHC.Generics.Generic Network.AWS.IVS.GetStreamKey.GetStreamKey
instance GHC.Show.Show Network.AWS.IVS.GetStreamKey.GetStreamKey
instance GHC.Read.Read Network.AWS.IVS.GetStreamKey.GetStreamKey
instance GHC.Classes.Eq Network.AWS.IVS.GetStreamKey.GetStreamKey
instance GHC.Generics.Generic Network.AWS.IVS.GetStreamKey.GetStreamKeyResponse
instance GHC.Show.Show Network.AWS.IVS.GetStreamKey.GetStreamKeyResponse
instance GHC.Classes.Eq Network.AWS.IVS.GetStreamKey.GetStreamKeyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.GetStreamKey.GetStreamKey
instance Control.DeepSeq.NFData Network.AWS.IVS.GetStreamKey.GetStreamKeyResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.GetStreamKey.GetStreamKey
instance Control.DeepSeq.NFData Network.AWS.IVS.GetStreamKey.GetStreamKey
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.GetStreamKey.GetStreamKey
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.GetStreamKey.GetStreamKey
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.GetStreamKey.GetStreamKey
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.GetStreamKey.GetStreamKey


-- | Gets information about the active (live) stream on a specified
--   channel.
module Network.AWS.IVS.GetStream

-- | <i>See:</i> <a>newGetStream</a> smart constructor.
data GetStream
GetStream' :: Text -> GetStream

-- | Channel ARN for stream to be accessed.
[$sel:channelArn:GetStream'] :: GetStream -> Text

-- | Create a value of <a>GetStream</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:GetStream'</a>, <a>getStream_channelArn</a> -
--   Channel ARN for stream to be accessed.
newGetStream :: Text -> GetStream

-- | Channel ARN for stream to be accessed.
getStream_channelArn :: Lens' GetStream Text

-- | <i>See:</i> <a>newGetStreamResponse</a> smart constructor.
data GetStreamResponse
GetStreamResponse' :: Maybe Stream -> Int -> GetStreamResponse
[$sel:stream:GetStreamResponse'] :: GetStreamResponse -> Maybe Stream

-- | The response's http status code.
[$sel:httpStatus:GetStreamResponse'] :: GetStreamResponse -> Int

-- | Create a value of <a>GetStreamResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stream:GetStreamResponse'</a>, <a>getStreamResponse_stream</a>
--   -
--   
--   <a>$sel:httpStatus:GetStreamResponse'</a>,
--   <a>getStreamResponse_httpStatus</a> - The response's http status code.
newGetStreamResponse :: Int -> GetStreamResponse

getStreamResponse_stream :: Lens' GetStreamResponse (Maybe Stream)

-- | The response's http status code.
getStreamResponse_httpStatus :: Lens' GetStreamResponse Int
instance GHC.Generics.Generic Network.AWS.IVS.GetStream.GetStream
instance GHC.Show.Show Network.AWS.IVS.GetStream.GetStream
instance GHC.Read.Read Network.AWS.IVS.GetStream.GetStream
instance GHC.Classes.Eq Network.AWS.IVS.GetStream.GetStream
instance GHC.Generics.Generic Network.AWS.IVS.GetStream.GetStreamResponse
instance GHC.Show.Show Network.AWS.IVS.GetStream.GetStreamResponse
instance GHC.Read.Read Network.AWS.IVS.GetStream.GetStreamResponse
instance GHC.Classes.Eq Network.AWS.IVS.GetStream.GetStreamResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.GetStream.GetStream
instance Control.DeepSeq.NFData Network.AWS.IVS.GetStream.GetStreamResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.GetStream.GetStream
instance Control.DeepSeq.NFData Network.AWS.IVS.GetStream.GetStream
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.GetStream.GetStream
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.GetStream.GetStream
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.GetStream.GetStream
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.GetStream.GetStream


-- | Gets the recording configuration for the specified ARN.
module Network.AWS.IVS.GetRecordingConfiguration

-- | <i>See:</i> <a>newGetRecordingConfiguration</a> smart constructor.
data GetRecordingConfiguration
GetRecordingConfiguration' :: Text -> GetRecordingConfiguration

-- | ARN of the recording configuration to be retrieved.
[$sel:arn:GetRecordingConfiguration'] :: GetRecordingConfiguration -> Text

-- | Create a value of <a>GetRecordingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetRecordingConfiguration'</a>,
--   <a>getRecordingConfiguration_arn</a> - ARN of the recording
--   configuration to be retrieved.
newGetRecordingConfiguration :: Text -> GetRecordingConfiguration

-- | ARN of the recording configuration to be retrieved.
getRecordingConfiguration_arn :: Lens' GetRecordingConfiguration Text

-- | <i>See:</i> <a>newGetRecordingConfigurationResponse</a> smart
--   constructor.
data GetRecordingConfigurationResponse
GetRecordingConfigurationResponse' :: Maybe RecordingConfiguration -> Int -> GetRecordingConfigurationResponse
[$sel:recordingConfiguration:GetRecordingConfigurationResponse'] :: GetRecordingConfigurationResponse -> Maybe RecordingConfiguration

-- | The response's http status code.
[$sel:httpStatus:GetRecordingConfigurationResponse'] :: GetRecordingConfigurationResponse -> Int

-- | Create a value of <a>GetRecordingConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordingConfiguration:GetRecordingConfigurationResponse'</a>,
--   <a>getRecordingConfigurationResponse_recordingConfiguration</a> -
--   
--   <a>$sel:httpStatus:GetRecordingConfigurationResponse'</a>,
--   <a>getRecordingConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newGetRecordingConfigurationResponse :: Int -> GetRecordingConfigurationResponse

getRecordingConfigurationResponse_recordingConfiguration :: Lens' GetRecordingConfigurationResponse (Maybe RecordingConfiguration)

-- | The response's http status code.
getRecordingConfigurationResponse_httpStatus :: Lens' GetRecordingConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.IVS.GetRecordingConfiguration.GetRecordingConfiguration
instance GHC.Show.Show Network.AWS.IVS.GetRecordingConfiguration.GetRecordingConfiguration
instance GHC.Read.Read Network.AWS.IVS.GetRecordingConfiguration.GetRecordingConfiguration
instance GHC.Classes.Eq Network.AWS.IVS.GetRecordingConfiguration.GetRecordingConfiguration
instance GHC.Generics.Generic Network.AWS.IVS.GetRecordingConfiguration.GetRecordingConfigurationResponse
instance GHC.Show.Show Network.AWS.IVS.GetRecordingConfiguration.GetRecordingConfigurationResponse
instance GHC.Read.Read Network.AWS.IVS.GetRecordingConfiguration.GetRecordingConfigurationResponse
instance GHC.Classes.Eq Network.AWS.IVS.GetRecordingConfiguration.GetRecordingConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.GetRecordingConfiguration.GetRecordingConfiguration
instance Control.DeepSeq.NFData Network.AWS.IVS.GetRecordingConfiguration.GetRecordingConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.GetRecordingConfiguration.GetRecordingConfiguration
instance Control.DeepSeq.NFData Network.AWS.IVS.GetRecordingConfiguration.GetRecordingConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.GetRecordingConfiguration.GetRecordingConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.GetRecordingConfiguration.GetRecordingConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.GetRecordingConfiguration.GetRecordingConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.GetRecordingConfiguration.GetRecordingConfiguration


-- | Gets a specified playback authorization key pair and returns the
--   <tt>arn</tt> and <tt>fingerprint</tt>. The <tt>privateKey</tt> held by
--   the caller can be used to generate viewer authorization tokens, to
--   grant viewers access to private channels. For more information, see
--   <a>Setting Up Private Channels</a> in the <i>Amazon IVS User
--   Guide</i>.
module Network.AWS.IVS.GetPlaybackKeyPair

-- | <i>See:</i> <a>newGetPlaybackKeyPair</a> smart constructor.
data GetPlaybackKeyPair
GetPlaybackKeyPair' :: Text -> GetPlaybackKeyPair

-- | ARN of the key pair to be returned.
[$sel:arn:GetPlaybackKeyPair'] :: GetPlaybackKeyPair -> Text

-- | Create a value of <a>GetPlaybackKeyPair</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetPlaybackKeyPair'</a>, <a>getPlaybackKeyPair_arn</a> -
--   ARN of the key pair to be returned.
newGetPlaybackKeyPair :: Text -> GetPlaybackKeyPair

-- | ARN of the key pair to be returned.
getPlaybackKeyPair_arn :: Lens' GetPlaybackKeyPair Text

-- | <i>See:</i> <a>newGetPlaybackKeyPairResponse</a> smart constructor.
data GetPlaybackKeyPairResponse
GetPlaybackKeyPairResponse' :: Maybe PlaybackKeyPair -> Int -> GetPlaybackKeyPairResponse
[$sel:keyPair:GetPlaybackKeyPairResponse'] :: GetPlaybackKeyPairResponse -> Maybe PlaybackKeyPair

-- | The response's http status code.
[$sel:httpStatus:GetPlaybackKeyPairResponse'] :: GetPlaybackKeyPairResponse -> Int

-- | Create a value of <a>GetPlaybackKeyPairResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPair:GetPlaybackKeyPairResponse'</a>,
--   <a>getPlaybackKeyPairResponse_keyPair</a> -
--   
--   <a>$sel:httpStatus:GetPlaybackKeyPairResponse'</a>,
--   <a>getPlaybackKeyPairResponse_httpStatus</a> - The response's http
--   status code.
newGetPlaybackKeyPairResponse :: Int -> GetPlaybackKeyPairResponse

getPlaybackKeyPairResponse_keyPair :: Lens' GetPlaybackKeyPairResponse (Maybe PlaybackKeyPair)

-- | The response's http status code.
getPlaybackKeyPairResponse_httpStatus :: Lens' GetPlaybackKeyPairResponse Int
instance GHC.Generics.Generic Network.AWS.IVS.GetPlaybackKeyPair.GetPlaybackKeyPair
instance GHC.Show.Show Network.AWS.IVS.GetPlaybackKeyPair.GetPlaybackKeyPair
instance GHC.Read.Read Network.AWS.IVS.GetPlaybackKeyPair.GetPlaybackKeyPair
instance GHC.Classes.Eq Network.AWS.IVS.GetPlaybackKeyPair.GetPlaybackKeyPair
instance GHC.Generics.Generic Network.AWS.IVS.GetPlaybackKeyPair.GetPlaybackKeyPairResponse
instance GHC.Show.Show Network.AWS.IVS.GetPlaybackKeyPair.GetPlaybackKeyPairResponse
instance GHC.Read.Read Network.AWS.IVS.GetPlaybackKeyPair.GetPlaybackKeyPairResponse
instance GHC.Classes.Eq Network.AWS.IVS.GetPlaybackKeyPair.GetPlaybackKeyPairResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.GetPlaybackKeyPair.GetPlaybackKeyPair
instance Control.DeepSeq.NFData Network.AWS.IVS.GetPlaybackKeyPair.GetPlaybackKeyPairResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.GetPlaybackKeyPair.GetPlaybackKeyPair
instance Control.DeepSeq.NFData Network.AWS.IVS.GetPlaybackKeyPair.GetPlaybackKeyPair
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.GetPlaybackKeyPair.GetPlaybackKeyPair
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.GetPlaybackKeyPair.GetPlaybackKeyPair
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.GetPlaybackKeyPair.GetPlaybackKeyPair
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.GetPlaybackKeyPair.GetPlaybackKeyPair


-- | Gets the channel configuration for the specified channel ARN. See also
--   BatchGetChannel.
module Network.AWS.IVS.GetChannel

-- | <i>See:</i> <a>newGetChannel</a> smart constructor.
data GetChannel
GetChannel' :: Text -> GetChannel

-- | ARN of the channel for which the configuration is to be retrieved.
[$sel:arn:GetChannel'] :: GetChannel -> Text

-- | Create a value of <a>GetChannel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetChannel'</a>, <a>getChannel_arn</a> - ARN of the
--   channel for which the configuration is to be retrieved.
newGetChannel :: Text -> GetChannel

-- | ARN of the channel for which the configuration is to be retrieved.
getChannel_arn :: Lens' GetChannel Text

-- | <i>See:</i> <a>newGetChannelResponse</a> smart constructor.
data GetChannelResponse
GetChannelResponse' :: Maybe Channel -> Int -> GetChannelResponse
[$sel:channel:GetChannelResponse'] :: GetChannelResponse -> Maybe Channel

-- | The response's http status code.
[$sel:httpStatus:GetChannelResponse'] :: GetChannelResponse -> Int

-- | Create a value of <a>GetChannelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channel:GetChannelResponse'</a>,
--   <a>getChannelResponse_channel</a> -
--   
--   <a>$sel:httpStatus:GetChannelResponse'</a>,
--   <a>getChannelResponse_httpStatus</a> - The response's http status
--   code.
newGetChannelResponse :: Int -> GetChannelResponse

getChannelResponse_channel :: Lens' GetChannelResponse (Maybe Channel)

-- | The response's http status code.
getChannelResponse_httpStatus :: Lens' GetChannelResponse Int
instance GHC.Generics.Generic Network.AWS.IVS.GetChannel.GetChannel
instance GHC.Show.Show Network.AWS.IVS.GetChannel.GetChannel
instance GHC.Read.Read Network.AWS.IVS.GetChannel.GetChannel
instance GHC.Classes.Eq Network.AWS.IVS.GetChannel.GetChannel
instance GHC.Generics.Generic Network.AWS.IVS.GetChannel.GetChannelResponse
instance GHC.Show.Show Network.AWS.IVS.GetChannel.GetChannelResponse
instance GHC.Read.Read Network.AWS.IVS.GetChannel.GetChannelResponse
instance GHC.Classes.Eq Network.AWS.IVS.GetChannel.GetChannelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.GetChannel.GetChannel
instance Control.DeepSeq.NFData Network.AWS.IVS.GetChannel.GetChannelResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.GetChannel.GetChannel
instance Control.DeepSeq.NFData Network.AWS.IVS.GetChannel.GetChannel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.GetChannel.GetChannel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.GetChannel.GetChannel
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.GetChannel.GetChannel
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.GetChannel.GetChannel


-- | Deletes the stream key for the specified ARN, so it can no longer be
--   used to stream.
module Network.AWS.IVS.DeleteStreamKey

-- | <i>See:</i> <a>newDeleteStreamKey</a> smart constructor.
data DeleteStreamKey
DeleteStreamKey' :: Text -> DeleteStreamKey

-- | ARN of the stream key to be deleted.
[$sel:arn:DeleteStreamKey'] :: DeleteStreamKey -> Text

-- | Create a value of <a>DeleteStreamKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteStreamKey'</a>, <a>deleteStreamKey_arn</a> - ARN of
--   the stream key to be deleted.
newDeleteStreamKey :: Text -> DeleteStreamKey

-- | ARN of the stream key to be deleted.
deleteStreamKey_arn :: Lens' DeleteStreamKey Text

-- | <i>See:</i> <a>newDeleteStreamKeyResponse</a> smart constructor.
data DeleteStreamKeyResponse
DeleteStreamKeyResponse' :: DeleteStreamKeyResponse

-- | Create a value of <a>DeleteStreamKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteStreamKeyResponse :: DeleteStreamKeyResponse
instance GHC.Generics.Generic Network.AWS.IVS.DeleteStreamKey.DeleteStreamKey
instance GHC.Show.Show Network.AWS.IVS.DeleteStreamKey.DeleteStreamKey
instance GHC.Read.Read Network.AWS.IVS.DeleteStreamKey.DeleteStreamKey
instance GHC.Classes.Eq Network.AWS.IVS.DeleteStreamKey.DeleteStreamKey
instance GHC.Generics.Generic Network.AWS.IVS.DeleteStreamKey.DeleteStreamKeyResponse
instance GHC.Show.Show Network.AWS.IVS.DeleteStreamKey.DeleteStreamKeyResponse
instance GHC.Read.Read Network.AWS.IVS.DeleteStreamKey.DeleteStreamKeyResponse
instance GHC.Classes.Eq Network.AWS.IVS.DeleteStreamKey.DeleteStreamKeyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.DeleteStreamKey.DeleteStreamKey
instance Control.DeepSeq.NFData Network.AWS.IVS.DeleteStreamKey.DeleteStreamKeyResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.DeleteStreamKey.DeleteStreamKey
instance Control.DeepSeq.NFData Network.AWS.IVS.DeleteStreamKey.DeleteStreamKey
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.DeleteStreamKey.DeleteStreamKey
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.DeleteStreamKey.DeleteStreamKey
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.DeleteStreamKey.DeleteStreamKey
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.DeleteStreamKey.DeleteStreamKey


-- | Deletes the recording configuration for the specified ARN.
--   
--   If you try to delete a recording configuration that is associated with
--   a channel, you will get an error (409 ConflictException). To avoid
--   this, for all channels that reference the recording configuration,
--   first use UpdateChannel to set the <tt>recordingConfigurationArn</tt>
--   field to an empty string, then use DeleteRecordingConfiguration.
module Network.AWS.IVS.DeleteRecordingConfiguration

-- | <i>See:</i> <a>newDeleteRecordingConfiguration</a> smart constructor.
data DeleteRecordingConfiguration
DeleteRecordingConfiguration' :: Text -> DeleteRecordingConfiguration

-- | ARN of the recording configuration to be deleted.
[$sel:arn:DeleteRecordingConfiguration'] :: DeleteRecordingConfiguration -> Text

-- | Create a value of <a>DeleteRecordingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteRecordingConfiguration'</a>,
--   <a>deleteRecordingConfiguration_arn</a> - ARN of the recording
--   configuration to be deleted.
newDeleteRecordingConfiguration :: Text -> DeleteRecordingConfiguration

-- | ARN of the recording configuration to be deleted.
deleteRecordingConfiguration_arn :: Lens' DeleteRecordingConfiguration Text

-- | <i>See:</i> <a>newDeleteRecordingConfigurationResponse</a> smart
--   constructor.
data DeleteRecordingConfigurationResponse
DeleteRecordingConfigurationResponse' :: DeleteRecordingConfigurationResponse

-- | Create a value of <a>DeleteRecordingConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRecordingConfigurationResponse :: DeleteRecordingConfigurationResponse
instance GHC.Generics.Generic Network.AWS.IVS.DeleteRecordingConfiguration.DeleteRecordingConfiguration
instance GHC.Show.Show Network.AWS.IVS.DeleteRecordingConfiguration.DeleteRecordingConfiguration
instance GHC.Read.Read Network.AWS.IVS.DeleteRecordingConfiguration.DeleteRecordingConfiguration
instance GHC.Classes.Eq Network.AWS.IVS.DeleteRecordingConfiguration.DeleteRecordingConfiguration
instance GHC.Generics.Generic Network.AWS.IVS.DeleteRecordingConfiguration.DeleteRecordingConfigurationResponse
instance GHC.Show.Show Network.AWS.IVS.DeleteRecordingConfiguration.DeleteRecordingConfigurationResponse
instance GHC.Read.Read Network.AWS.IVS.DeleteRecordingConfiguration.DeleteRecordingConfigurationResponse
instance GHC.Classes.Eq Network.AWS.IVS.DeleteRecordingConfiguration.DeleteRecordingConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.DeleteRecordingConfiguration.DeleteRecordingConfiguration
instance Control.DeepSeq.NFData Network.AWS.IVS.DeleteRecordingConfiguration.DeleteRecordingConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.DeleteRecordingConfiguration.DeleteRecordingConfiguration
instance Control.DeepSeq.NFData Network.AWS.IVS.DeleteRecordingConfiguration.DeleteRecordingConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.DeleteRecordingConfiguration.DeleteRecordingConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.DeleteRecordingConfiguration.DeleteRecordingConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.DeleteRecordingConfiguration.DeleteRecordingConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.DeleteRecordingConfiguration.DeleteRecordingConfiguration


-- | Deletes a specified authorization key pair. This invalidates future
--   viewer tokens generated using the key pair’s <tt>privateKey</tt>. For
--   more information, see <a>Setting Up Private Channels</a> in the
--   <i>Amazon IVS User Guide</i>.
module Network.AWS.IVS.DeletePlaybackKeyPair

-- | <i>See:</i> <a>newDeletePlaybackKeyPair</a> smart constructor.
data DeletePlaybackKeyPair
DeletePlaybackKeyPair' :: Text -> DeletePlaybackKeyPair

-- | ARN of the key pair to be deleted.
[$sel:arn:DeletePlaybackKeyPair'] :: DeletePlaybackKeyPair -> Text

-- | Create a value of <a>DeletePlaybackKeyPair</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeletePlaybackKeyPair'</a>,
--   <a>deletePlaybackKeyPair_arn</a> - ARN of the key pair to be deleted.
newDeletePlaybackKeyPair :: Text -> DeletePlaybackKeyPair

-- | ARN of the key pair to be deleted.
deletePlaybackKeyPair_arn :: Lens' DeletePlaybackKeyPair Text

-- | <i>See:</i> <a>newDeletePlaybackKeyPairResponse</a> smart constructor.
data DeletePlaybackKeyPairResponse
DeletePlaybackKeyPairResponse' :: Int -> DeletePlaybackKeyPairResponse

-- | The response's http status code.
[$sel:httpStatus:DeletePlaybackKeyPairResponse'] :: DeletePlaybackKeyPairResponse -> Int

-- | Create a value of <a>DeletePlaybackKeyPairResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeletePlaybackKeyPairResponse'</a>,
--   <a>deletePlaybackKeyPairResponse_httpStatus</a> - The response's http
--   status code.
newDeletePlaybackKeyPairResponse :: Int -> DeletePlaybackKeyPairResponse

-- | The response's http status code.
deletePlaybackKeyPairResponse_httpStatus :: Lens' DeletePlaybackKeyPairResponse Int
instance GHC.Generics.Generic Network.AWS.IVS.DeletePlaybackKeyPair.DeletePlaybackKeyPair
instance GHC.Show.Show Network.AWS.IVS.DeletePlaybackKeyPair.DeletePlaybackKeyPair
instance GHC.Read.Read Network.AWS.IVS.DeletePlaybackKeyPair.DeletePlaybackKeyPair
instance GHC.Classes.Eq Network.AWS.IVS.DeletePlaybackKeyPair.DeletePlaybackKeyPair
instance GHC.Generics.Generic Network.AWS.IVS.DeletePlaybackKeyPair.DeletePlaybackKeyPairResponse
instance GHC.Show.Show Network.AWS.IVS.DeletePlaybackKeyPair.DeletePlaybackKeyPairResponse
instance GHC.Read.Read Network.AWS.IVS.DeletePlaybackKeyPair.DeletePlaybackKeyPairResponse
instance GHC.Classes.Eq Network.AWS.IVS.DeletePlaybackKeyPair.DeletePlaybackKeyPairResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.DeletePlaybackKeyPair.DeletePlaybackKeyPair
instance Control.DeepSeq.NFData Network.AWS.IVS.DeletePlaybackKeyPair.DeletePlaybackKeyPairResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.DeletePlaybackKeyPair.DeletePlaybackKeyPair
instance Control.DeepSeq.NFData Network.AWS.IVS.DeletePlaybackKeyPair.DeletePlaybackKeyPair
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.DeletePlaybackKeyPair.DeletePlaybackKeyPair
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.DeletePlaybackKeyPair.DeletePlaybackKeyPair
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.DeletePlaybackKeyPair.DeletePlaybackKeyPair
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.DeletePlaybackKeyPair.DeletePlaybackKeyPair


-- | Deletes the specified channel and its associated stream keys.
--   
--   If you try to delete a live channel, you will get an error (409
--   ConflictException). To delete a channel that is live, call StopStream,
--   wait for the Amazon EventBridge "Stream End" event (to verify that the
--   stream's state was changed from Live to Offline), then call
--   DeleteChannel. (See <a>Using EventBridge with Amazon IVS</a>.)
module Network.AWS.IVS.DeleteChannel

-- | <i>See:</i> <a>newDeleteChannel</a> smart constructor.
data DeleteChannel
DeleteChannel' :: Text -> DeleteChannel

-- | ARN of the channel to be deleted.
[$sel:arn:DeleteChannel'] :: DeleteChannel -> Text

-- | Create a value of <a>DeleteChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteChannel'</a>, <a>deleteChannel_arn</a> - ARN of the
--   channel to be deleted.
newDeleteChannel :: Text -> DeleteChannel

-- | ARN of the channel to be deleted.
deleteChannel_arn :: Lens' DeleteChannel Text

-- | <i>See:</i> <a>newDeleteChannelResponse</a> smart constructor.
data DeleteChannelResponse
DeleteChannelResponse' :: DeleteChannelResponse

-- | Create a value of <a>DeleteChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteChannelResponse :: DeleteChannelResponse
instance GHC.Generics.Generic Network.AWS.IVS.DeleteChannel.DeleteChannel
instance GHC.Show.Show Network.AWS.IVS.DeleteChannel.DeleteChannel
instance GHC.Read.Read Network.AWS.IVS.DeleteChannel.DeleteChannel
instance GHC.Classes.Eq Network.AWS.IVS.DeleteChannel.DeleteChannel
instance GHC.Generics.Generic Network.AWS.IVS.DeleteChannel.DeleteChannelResponse
instance GHC.Show.Show Network.AWS.IVS.DeleteChannel.DeleteChannelResponse
instance GHC.Read.Read Network.AWS.IVS.DeleteChannel.DeleteChannelResponse
instance GHC.Classes.Eq Network.AWS.IVS.DeleteChannel.DeleteChannelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.DeleteChannel.DeleteChannel
instance Control.DeepSeq.NFData Network.AWS.IVS.DeleteChannel.DeleteChannelResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.DeleteChannel.DeleteChannel
instance Control.DeepSeq.NFData Network.AWS.IVS.DeleteChannel.DeleteChannel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.DeleteChannel.DeleteChannel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.DeleteChannel.DeleteChannel
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.DeleteChannel.DeleteChannel
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.DeleteChannel.DeleteChannel


-- | Creates a stream key, used to initiate a stream, for the specified
--   channel ARN.
--   
--   Note that CreateChannel creates a stream key. If you subsequently use
--   CreateStreamKey on the same channel, it will fail because a stream key
--   already exists and there is a limit of 1 stream key per channel. To
--   reset the stream key on a channel, use DeleteStreamKey and then
--   CreateStreamKey.
module Network.AWS.IVS.CreateStreamKey

-- | <i>See:</i> <a>newCreateStreamKey</a> smart constructor.
data CreateStreamKey
CreateStreamKey' :: Maybe (HashMap Text Text) -> Text -> CreateStreamKey

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
[$sel:tags:CreateStreamKey'] :: CreateStreamKey -> Maybe (HashMap Text Text)

-- | ARN of the channel for which to create the stream key.
[$sel:channelArn:CreateStreamKey'] :: CreateStreamKey -> Text

-- | Create a value of <a>CreateStreamKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateStreamKey'</a>, <a>createStreamKey_tags</a> - Array
--   of 1-50 maps, each of the form <tt>string:string (key:value)</tt>.
--   
--   <a>$sel:channelArn:CreateStreamKey'</a>,
--   <a>createStreamKey_channelArn</a> - ARN of the channel for which to
--   create the stream key.
newCreateStreamKey :: Text -> CreateStreamKey

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
createStreamKey_tags :: Lens' CreateStreamKey (Maybe (HashMap Text Text))

-- | ARN of the channel for which to create the stream key.
createStreamKey_channelArn :: Lens' CreateStreamKey Text

-- | <i>See:</i> <a>newCreateStreamKeyResponse</a> smart constructor.
data CreateStreamKeyResponse
CreateStreamKeyResponse' :: Maybe StreamKey -> Int -> CreateStreamKeyResponse

-- | Stream key used to authenticate an RTMPS stream for ingestion.
[$sel:streamKey:CreateStreamKeyResponse'] :: CreateStreamKeyResponse -> Maybe StreamKey

-- | The response's http status code.
[$sel:httpStatus:CreateStreamKeyResponse'] :: CreateStreamKeyResponse -> Int

-- | Create a value of <a>CreateStreamKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamKey:CreateStreamKeyResponse'</a>,
--   <a>createStreamKeyResponse_streamKey</a> - Stream key used to
--   authenticate an RTMPS stream for ingestion.
--   
--   <a>$sel:httpStatus:CreateStreamKeyResponse'</a>,
--   <a>createStreamKeyResponse_httpStatus</a> - The response's http status
--   code.
newCreateStreamKeyResponse :: Int -> CreateStreamKeyResponse

-- | Stream key used to authenticate an RTMPS stream for ingestion.
createStreamKeyResponse_streamKey :: Lens' CreateStreamKeyResponse (Maybe StreamKey)

-- | The response's http status code.
createStreamKeyResponse_httpStatus :: Lens' CreateStreamKeyResponse Int
instance GHC.Generics.Generic Network.AWS.IVS.CreateStreamKey.CreateStreamKey
instance GHC.Show.Show Network.AWS.IVS.CreateStreamKey.CreateStreamKey
instance GHC.Read.Read Network.AWS.IVS.CreateStreamKey.CreateStreamKey
instance GHC.Classes.Eq Network.AWS.IVS.CreateStreamKey.CreateStreamKey
instance GHC.Generics.Generic Network.AWS.IVS.CreateStreamKey.CreateStreamKeyResponse
instance GHC.Show.Show Network.AWS.IVS.CreateStreamKey.CreateStreamKeyResponse
instance GHC.Classes.Eq Network.AWS.IVS.CreateStreamKey.CreateStreamKeyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.CreateStreamKey.CreateStreamKey
instance Control.DeepSeq.NFData Network.AWS.IVS.CreateStreamKey.CreateStreamKeyResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.CreateStreamKey.CreateStreamKey
instance Control.DeepSeq.NFData Network.AWS.IVS.CreateStreamKey.CreateStreamKey
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.CreateStreamKey.CreateStreamKey
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.CreateStreamKey.CreateStreamKey
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.CreateStreamKey.CreateStreamKey
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.CreateStreamKey.CreateStreamKey


-- | Creates a new recording configuration, used to enable recording to
--   Amazon S3.
--   
--   <b>Known issue:</b> In the us-east-1 region, if you use the Amazon Web
--   Services CLI to create a recording configuration, it returns success
--   even if the S3 bucket is in a different region. In this case, the
--   <tt>state</tt> of the recording configuration is
--   <tt>CREATE_FAILED</tt> (instead of <tt>ACTIVE</tt>). (In other
--   regions, the CLI correctly returns failure if the bucket is in a
--   different region.)
--   
--   <b>Workaround:</b> Ensure that your S3 bucket is in the same region as
--   the recording configuration. If you create a recording configuration
--   in a different region as your S3 bucket, delete that recording
--   configuration and create a new one with an S3 bucket from the correct
--   region.
module Network.AWS.IVS.CreateRecordingConfiguration

-- | <i>See:</i> <a>newCreateRecordingConfiguration</a> smart constructor.
data CreateRecordingConfiguration
CreateRecordingConfiguration' :: Maybe Text -> Maybe (HashMap Text Text) -> DestinationConfiguration -> CreateRecordingConfiguration

-- | Recording-configuration name. The value does not need to be unique.
[$sel:name:CreateRecordingConfiguration'] :: CreateRecordingConfiguration -> Maybe Text

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
[$sel:tags:CreateRecordingConfiguration'] :: CreateRecordingConfiguration -> Maybe (HashMap Text Text)

-- | A complex type that contains a destination configuration for where
--   recorded video will be stored.
[$sel:destinationConfiguration:CreateRecordingConfiguration'] :: CreateRecordingConfiguration -> DestinationConfiguration

-- | Create a value of <a>CreateRecordingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateRecordingConfiguration'</a>,
--   <a>createRecordingConfiguration_name</a> - Recording-configuration
--   name. The value does not need to be unique.
--   
--   <a>$sel:tags:CreateRecordingConfiguration'</a>,
--   <a>createRecordingConfiguration_tags</a> - Array of 1-50 maps, each of
--   the form <tt>string:string (key:value)</tt>.
--   
--   <a>$sel:destinationConfiguration:CreateRecordingConfiguration'</a>,
--   <a>createRecordingConfiguration_destinationConfiguration</a> - A
--   complex type that contains a destination configuration for where
--   recorded video will be stored.
newCreateRecordingConfiguration :: DestinationConfiguration -> CreateRecordingConfiguration

-- | Recording-configuration name. The value does not need to be unique.
createRecordingConfiguration_name :: Lens' CreateRecordingConfiguration (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
createRecordingConfiguration_tags :: Lens' CreateRecordingConfiguration (Maybe (HashMap Text Text))

-- | A complex type that contains a destination configuration for where
--   recorded video will be stored.
createRecordingConfiguration_destinationConfiguration :: Lens' CreateRecordingConfiguration DestinationConfiguration

-- | <i>See:</i> <a>newCreateRecordingConfigurationResponse</a> smart
--   constructor.
data CreateRecordingConfigurationResponse
CreateRecordingConfigurationResponse' :: Maybe RecordingConfiguration -> Int -> CreateRecordingConfigurationResponse
[$sel:recordingConfiguration:CreateRecordingConfigurationResponse'] :: CreateRecordingConfigurationResponse -> Maybe RecordingConfiguration

-- | The response's http status code.
[$sel:httpStatus:CreateRecordingConfigurationResponse'] :: CreateRecordingConfigurationResponse -> Int

-- | Create a value of <a>CreateRecordingConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:recordingConfiguration:CreateRecordingConfigurationResponse'</a>,
--   <a>createRecordingConfigurationResponse_recordingConfiguration</a> -
--   
--   <a>$sel:httpStatus:CreateRecordingConfigurationResponse'</a>,
--   <a>createRecordingConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newCreateRecordingConfigurationResponse :: Int -> CreateRecordingConfigurationResponse

createRecordingConfigurationResponse_recordingConfiguration :: Lens' CreateRecordingConfigurationResponse (Maybe RecordingConfiguration)

-- | The response's http status code.
createRecordingConfigurationResponse_httpStatus :: Lens' CreateRecordingConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.IVS.CreateRecordingConfiguration.CreateRecordingConfiguration
instance GHC.Show.Show Network.AWS.IVS.CreateRecordingConfiguration.CreateRecordingConfiguration
instance GHC.Read.Read Network.AWS.IVS.CreateRecordingConfiguration.CreateRecordingConfiguration
instance GHC.Classes.Eq Network.AWS.IVS.CreateRecordingConfiguration.CreateRecordingConfiguration
instance GHC.Generics.Generic Network.AWS.IVS.CreateRecordingConfiguration.CreateRecordingConfigurationResponse
instance GHC.Show.Show Network.AWS.IVS.CreateRecordingConfiguration.CreateRecordingConfigurationResponse
instance GHC.Read.Read Network.AWS.IVS.CreateRecordingConfiguration.CreateRecordingConfigurationResponse
instance GHC.Classes.Eq Network.AWS.IVS.CreateRecordingConfiguration.CreateRecordingConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.CreateRecordingConfiguration.CreateRecordingConfiguration
instance Control.DeepSeq.NFData Network.AWS.IVS.CreateRecordingConfiguration.CreateRecordingConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.CreateRecordingConfiguration.CreateRecordingConfiguration
instance Control.DeepSeq.NFData Network.AWS.IVS.CreateRecordingConfiguration.CreateRecordingConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.CreateRecordingConfiguration.CreateRecordingConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.CreateRecordingConfiguration.CreateRecordingConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.CreateRecordingConfiguration.CreateRecordingConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.CreateRecordingConfiguration.CreateRecordingConfiguration


-- | Creates a new channel and an associated stream key to start streaming.
module Network.AWS.IVS.CreateChannel

-- | <i>See:</i> <a>newCreateChannel</a> smart constructor.
data CreateChannel
CreateChannel' :: Maybe Bool -> Maybe ChannelLatencyMode -> Maybe Text -> Maybe Text -> Maybe ChannelType -> Maybe (HashMap Text Text) -> CreateChannel

-- | Whether the channel is private (enabled for playback authorization).
--   Default: <tt>false</tt>.
[$sel:authorized:CreateChannel'] :: CreateChannel -> Maybe Bool

-- | Channel latency mode. Use <tt>NORMAL</tt> to broadcast and deliver
--   live video up to Full HD. Use <tt>LOW</tt> for near-real-time
--   interaction with viewers. (Note: In the Amazon IVS console,
--   <tt>LOW</tt> and <tt>NORMAL</tt> correspond to Ultra-low and Standard,
--   respectively.) Default: <tt>LOW</tt>.
[$sel:latencyMode:CreateChannel'] :: CreateChannel -> Maybe ChannelLatencyMode

-- | Channel name.
[$sel:name:CreateChannel'] :: CreateChannel -> Maybe Text

-- | Recording-configuration ARN. Default: "" (empty string, recording is
--   disabled).
[$sel:recordingConfigurationArn:CreateChannel'] :: CreateChannel -> Maybe Text

-- | Channel type, which determines the allowable resolution and bitrate.
--   /If you exceed the allowable resolution or bitrate, the stream
--   probably will disconnect immediately./ Default: <tt>STANDARD</tt>.
--   Valid values:
--   
--   <ul>
--   <li><tt>STANDARD</tt>: Multiple qualities are generated from the
--   original input, to automatically give viewers the best experience for
--   their devices and network conditions. Resolution can be up to 1080p
--   and bitrate can be up to 8.5 Mbps. Audio is transcoded only for
--   renditions 360p and below; above that, audio is passed through.</li>
--   <li><tt>BASIC</tt>: Amazon IVS delivers the original input to viewers.
--   The viewer’s video-quality choice is limited to the original input.
--   Resolution can be up to 480p and bitrate can be up to 1.5 Mbps.</li>
--   </ul>
[$sel:type':CreateChannel'] :: CreateChannel -> Maybe ChannelType

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
[$sel:tags:CreateChannel'] :: CreateChannel -> Maybe (HashMap Text Text)

-- | Create a value of <a>CreateChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorized:CreateChannel'</a>, <a>createChannel_authorized</a>
--   - Whether the channel is private (enabled for playback authorization).
--   Default: <tt>false</tt>.
--   
--   <a>$sel:latencyMode:CreateChannel'</a>,
--   <a>createChannel_latencyMode</a> - Channel latency mode. Use
--   <tt>NORMAL</tt> to broadcast and deliver live video up to Full HD. Use
--   <tt>LOW</tt> for near-real-time interaction with viewers. (Note: In
--   the Amazon IVS console, <tt>LOW</tt> and <tt>NORMAL</tt> correspond to
--   Ultra-low and Standard, respectively.) Default: <tt>LOW</tt>.
--   
--   <a>$sel:name:CreateChannel'</a>, <a>createChannel_name</a> - Channel
--   name.
--   
--   <a>$sel:recordingConfigurationArn:CreateChannel'</a>,
--   <a>createChannel_recordingConfigurationArn</a> -
--   Recording-configuration ARN. Default: "" (empty string, recording is
--   disabled).
--   
--   <a>$sel:type':CreateChannel'</a>, <a>createChannel_type</a> - Channel
--   type, which determines the allowable resolution and bitrate. /If you
--   exceed the allowable resolution or bitrate, the stream probably will
--   disconnect immediately./ Default: <tt>STANDARD</tt>. Valid values:
--   
--   <ul>
--   <li><tt>STANDARD</tt>: Multiple qualities are generated from the
--   original input, to automatically give viewers the best experience for
--   their devices and network conditions. Resolution can be up to 1080p
--   and bitrate can be up to 8.5 Mbps. Audio is transcoded only for
--   renditions 360p and below; above that, audio is passed through.</li>
--   <li><tt>BASIC</tt>: Amazon IVS delivers the original input to viewers.
--   The viewer’s video-quality choice is limited to the original input.
--   Resolution can be up to 480p and bitrate can be up to 1.5 Mbps.</li>
--   </ul>
--   
--   <a>$sel:tags:CreateChannel'</a>, <a>createChannel_tags</a> - Array of
--   1-50 maps, each of the form <tt>string:string (key:value)</tt>.
newCreateChannel :: CreateChannel

-- | Whether the channel is private (enabled for playback authorization).
--   Default: <tt>false</tt>.
createChannel_authorized :: Lens' CreateChannel (Maybe Bool)

-- | Channel latency mode. Use <tt>NORMAL</tt> to broadcast and deliver
--   live video up to Full HD. Use <tt>LOW</tt> for near-real-time
--   interaction with viewers. (Note: In the Amazon IVS console,
--   <tt>LOW</tt> and <tt>NORMAL</tt> correspond to Ultra-low and Standard,
--   respectively.) Default: <tt>LOW</tt>.
createChannel_latencyMode :: Lens' CreateChannel (Maybe ChannelLatencyMode)

-- | Channel name.
createChannel_name :: Lens' CreateChannel (Maybe Text)

-- | Recording-configuration ARN. Default: "" (empty string, recording is
--   disabled).
createChannel_recordingConfigurationArn :: Lens' CreateChannel (Maybe Text)

-- | Channel type, which determines the allowable resolution and bitrate.
--   /If you exceed the allowable resolution or bitrate, the stream
--   probably will disconnect immediately./ Default: <tt>STANDARD</tt>.
--   Valid values:
--   
--   <ul>
--   <li><tt>STANDARD</tt>: Multiple qualities are generated from the
--   original input, to automatically give viewers the best experience for
--   their devices and network conditions. Resolution can be up to 1080p
--   and bitrate can be up to 8.5 Mbps. Audio is transcoded only for
--   renditions 360p and below; above that, audio is passed through.</li>
--   <li><tt>BASIC</tt>: Amazon IVS delivers the original input to viewers.
--   The viewer’s video-quality choice is limited to the original input.
--   Resolution can be up to 480p and bitrate can be up to 1.5 Mbps.</li>
--   </ul>
createChannel_type :: Lens' CreateChannel (Maybe ChannelType)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
createChannel_tags :: Lens' CreateChannel (Maybe (HashMap Text Text))

-- | <i>See:</i> <a>newCreateChannelResponse</a> smart constructor.
data CreateChannelResponse
CreateChannelResponse' :: Maybe Channel -> Maybe StreamKey -> Int -> CreateChannelResponse
[$sel:channel:CreateChannelResponse'] :: CreateChannelResponse -> Maybe Channel
[$sel:streamKey:CreateChannelResponse'] :: CreateChannelResponse -> Maybe StreamKey

-- | The response's http status code.
[$sel:httpStatus:CreateChannelResponse'] :: CreateChannelResponse -> Int

-- | Create a value of <a>CreateChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channel:CreateChannelResponse'</a>,
--   <a>createChannelResponse_channel</a> -
--   
--   <a>$sel:streamKey:CreateChannelResponse'</a>,
--   <a>createChannelResponse_streamKey</a> -
--   
--   <a>$sel:httpStatus:CreateChannelResponse'</a>,
--   <a>createChannelResponse_httpStatus</a> - The response's http status
--   code.
newCreateChannelResponse :: Int -> CreateChannelResponse

createChannelResponse_channel :: Lens' CreateChannelResponse (Maybe Channel)

createChannelResponse_streamKey :: Lens' CreateChannelResponse (Maybe StreamKey)

-- | The response's http status code.
createChannelResponse_httpStatus :: Lens' CreateChannelResponse Int
instance GHC.Generics.Generic Network.AWS.IVS.CreateChannel.CreateChannel
instance GHC.Show.Show Network.AWS.IVS.CreateChannel.CreateChannel
instance GHC.Read.Read Network.AWS.IVS.CreateChannel.CreateChannel
instance GHC.Classes.Eq Network.AWS.IVS.CreateChannel.CreateChannel
instance GHC.Generics.Generic Network.AWS.IVS.CreateChannel.CreateChannelResponse
instance GHC.Show.Show Network.AWS.IVS.CreateChannel.CreateChannelResponse
instance GHC.Classes.Eq Network.AWS.IVS.CreateChannel.CreateChannelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.CreateChannel.CreateChannel
instance Control.DeepSeq.NFData Network.AWS.IVS.CreateChannel.CreateChannelResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.CreateChannel.CreateChannel
instance Control.DeepSeq.NFData Network.AWS.IVS.CreateChannel.CreateChannel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.CreateChannel.CreateChannel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.CreateChannel.CreateChannel
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.CreateChannel.CreateChannel
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.CreateChannel.CreateChannel


-- | Performs GetStreamKey on multiple ARNs simultaneously.
module Network.AWS.IVS.BatchGetStreamKey

-- | <i>See:</i> <a>newBatchGetStreamKey</a> smart constructor.
data BatchGetStreamKey
BatchGetStreamKey' :: NonEmpty Text -> BatchGetStreamKey

-- | Array of ARNs, one per channel.
[$sel:arns:BatchGetStreamKey'] :: BatchGetStreamKey -> NonEmpty Text

-- | Create a value of <a>BatchGetStreamKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arns:BatchGetStreamKey'</a>, <a>batchGetStreamKey_arns</a> -
--   Array of ARNs, one per channel.
newBatchGetStreamKey :: NonEmpty Text -> BatchGetStreamKey

-- | Array of ARNs, one per channel.
batchGetStreamKey_arns :: Lens' BatchGetStreamKey (NonEmpty Text)

-- | <i>See:</i> <a>newBatchGetStreamKeyResponse</a> smart constructor.
data BatchGetStreamKeyResponse
BatchGetStreamKeyResponse' :: Maybe [StreamKey] -> Maybe [BatchError] -> Int -> BatchGetStreamKeyResponse
[$sel:streamKeys:BatchGetStreamKeyResponse'] :: BatchGetStreamKeyResponse -> Maybe [StreamKey]
[$sel:errors:BatchGetStreamKeyResponse'] :: BatchGetStreamKeyResponse -> Maybe [BatchError]

-- | The response's http status code.
[$sel:httpStatus:BatchGetStreamKeyResponse'] :: BatchGetStreamKeyResponse -> Int

-- | Create a value of <a>BatchGetStreamKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamKeys:BatchGetStreamKeyResponse'</a>,
--   <a>batchGetStreamKeyResponse_streamKeys</a> -
--   
--   <a>$sel:errors:BatchGetStreamKeyResponse'</a>,
--   <a>batchGetStreamKeyResponse_errors</a> -
--   
--   <a>$sel:httpStatus:BatchGetStreamKeyResponse'</a>,
--   <a>batchGetStreamKeyResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetStreamKeyResponse :: Int -> BatchGetStreamKeyResponse

batchGetStreamKeyResponse_streamKeys :: Lens' BatchGetStreamKeyResponse (Maybe [StreamKey])

batchGetStreamKeyResponse_errors :: Lens' BatchGetStreamKeyResponse (Maybe [BatchError])

-- | The response's http status code.
batchGetStreamKeyResponse_httpStatus :: Lens' BatchGetStreamKeyResponse Int
instance GHC.Generics.Generic Network.AWS.IVS.BatchGetStreamKey.BatchGetStreamKey
instance GHC.Show.Show Network.AWS.IVS.BatchGetStreamKey.BatchGetStreamKey
instance GHC.Read.Read Network.AWS.IVS.BatchGetStreamKey.BatchGetStreamKey
instance GHC.Classes.Eq Network.AWS.IVS.BatchGetStreamKey.BatchGetStreamKey
instance GHC.Generics.Generic Network.AWS.IVS.BatchGetStreamKey.BatchGetStreamKeyResponse
instance GHC.Show.Show Network.AWS.IVS.BatchGetStreamKey.BatchGetStreamKeyResponse
instance GHC.Classes.Eq Network.AWS.IVS.BatchGetStreamKey.BatchGetStreamKeyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.BatchGetStreamKey.BatchGetStreamKey
instance Control.DeepSeq.NFData Network.AWS.IVS.BatchGetStreamKey.BatchGetStreamKeyResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.BatchGetStreamKey.BatchGetStreamKey
instance Control.DeepSeq.NFData Network.AWS.IVS.BatchGetStreamKey.BatchGetStreamKey
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.BatchGetStreamKey.BatchGetStreamKey
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.BatchGetStreamKey.BatchGetStreamKey
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.BatchGetStreamKey.BatchGetStreamKey
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.BatchGetStreamKey.BatchGetStreamKey


-- | Performs GetChannel on multiple ARNs simultaneously.
module Network.AWS.IVS.BatchGetChannel

-- | <i>See:</i> <a>newBatchGetChannel</a> smart constructor.
data BatchGetChannel
BatchGetChannel' :: NonEmpty Text -> BatchGetChannel

-- | Array of ARNs, one per channel.
[$sel:arns:BatchGetChannel'] :: BatchGetChannel -> NonEmpty Text

-- | Create a value of <a>BatchGetChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arns:BatchGetChannel'</a>, <a>batchGetChannel_arns</a> - Array
--   of ARNs, one per channel.
newBatchGetChannel :: NonEmpty Text -> BatchGetChannel

-- | Array of ARNs, one per channel.
batchGetChannel_arns :: Lens' BatchGetChannel (NonEmpty Text)

-- | <i>See:</i> <a>newBatchGetChannelResponse</a> smart constructor.
data BatchGetChannelResponse
BatchGetChannelResponse' :: Maybe [Channel] -> Maybe [BatchError] -> Int -> BatchGetChannelResponse
[$sel:channels:BatchGetChannelResponse'] :: BatchGetChannelResponse -> Maybe [Channel]

-- | Each error object is related to a specific ARN in the request.
[$sel:errors:BatchGetChannelResponse'] :: BatchGetChannelResponse -> Maybe [BatchError]

-- | The response's http status code.
[$sel:httpStatus:BatchGetChannelResponse'] :: BatchGetChannelResponse -> Int

-- | Create a value of <a>BatchGetChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channels:BatchGetChannelResponse'</a>,
--   <a>batchGetChannelResponse_channels</a> -
--   
--   <a>$sel:errors:BatchGetChannelResponse'</a>,
--   <a>batchGetChannelResponse_errors</a> - Each error object is related
--   to a specific ARN in the request.
--   
--   <a>$sel:httpStatus:BatchGetChannelResponse'</a>,
--   <a>batchGetChannelResponse_httpStatus</a> - The response's http status
--   code.
newBatchGetChannelResponse :: Int -> BatchGetChannelResponse

batchGetChannelResponse_channels :: Lens' BatchGetChannelResponse (Maybe [Channel])

-- | Each error object is related to a specific ARN in the request.
batchGetChannelResponse_errors :: Lens' BatchGetChannelResponse (Maybe [BatchError])

-- | The response's http status code.
batchGetChannelResponse_httpStatus :: Lens' BatchGetChannelResponse Int
instance GHC.Generics.Generic Network.AWS.IVS.BatchGetChannel.BatchGetChannel
instance GHC.Show.Show Network.AWS.IVS.BatchGetChannel.BatchGetChannel
instance GHC.Read.Read Network.AWS.IVS.BatchGetChannel.BatchGetChannel
instance GHC.Classes.Eq Network.AWS.IVS.BatchGetChannel.BatchGetChannel
instance GHC.Generics.Generic Network.AWS.IVS.BatchGetChannel.BatchGetChannelResponse
instance GHC.Show.Show Network.AWS.IVS.BatchGetChannel.BatchGetChannelResponse
instance GHC.Read.Read Network.AWS.IVS.BatchGetChannel.BatchGetChannelResponse
instance GHC.Classes.Eq Network.AWS.IVS.BatchGetChannel.BatchGetChannelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.BatchGetChannel.BatchGetChannel
instance Control.DeepSeq.NFData Network.AWS.IVS.BatchGetChannel.BatchGetChannelResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.BatchGetChannel.BatchGetChannel
instance Control.DeepSeq.NFData Network.AWS.IVS.BatchGetChannel.BatchGetChannel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.BatchGetChannel.BatchGetChannel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.BatchGetChannel.BatchGetChannel
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.BatchGetChannel.BatchGetChannel
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.BatchGetChannel.BatchGetChannel


-- | Removes tags from the resource with the specified ARN.
module Network.AWS.IVS.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | ARN of the resource for which tags are to be removed.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | Array of tags to be removed.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - ARN of the resource for which tags
--   are to be removed.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> -
--   Array of tags to be removed.
newUntagResource :: Text -> UntagResource

-- | ARN of the resource for which tags are to be removed.
untagResource_resourceArn :: Lens' UntagResource Text

-- | Array of tags to be removed.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.IVS.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.IVS.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.IVS.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.IVS.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.IVS.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.IVS.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.IVS.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.IVS.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.IVS.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.IVS.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.UntagResource.UntagResource


-- | Updates a channel's configuration. This does not affect an ongoing
--   stream of this channel. You must stop and restart the stream for the
--   changes to take effect.
module Network.AWS.IVS.UpdateChannel

-- | <i>See:</i> <a>newUpdateChannel</a> smart constructor.
data UpdateChannel
UpdateChannel' :: Maybe Bool -> Maybe ChannelLatencyMode -> Maybe Text -> Maybe Text -> Maybe ChannelType -> Text -> UpdateChannel

-- | Whether the channel is private (enabled for playback authorization).
[$sel:authorized:UpdateChannel'] :: UpdateChannel -> Maybe Bool

-- | Channel latency mode. Use <tt>NORMAL</tt> to broadcast and deliver
--   live video up to Full HD. Use <tt>LOW</tt> for near-real-time
--   interaction with viewers. (Note: In the Amazon IVS console,
--   <tt>LOW</tt> and <tt>NORMAL</tt> correspond to Ultra-low and Standard,
--   respectively.)
[$sel:latencyMode:UpdateChannel'] :: UpdateChannel -> Maybe ChannelLatencyMode

-- | Channel name.
[$sel:name:UpdateChannel'] :: UpdateChannel -> Maybe Text

-- | Recording-configuration ARN. If this is set to an empty string,
--   recording is disabled. A value other than an empty string indicates
--   that recording is enabled
[$sel:recordingConfigurationArn:UpdateChannel'] :: UpdateChannel -> Maybe Text

-- | Channel type, which determines the allowable resolution and bitrate.
--   /If you exceed the allowable resolution or bitrate, the stream
--   probably will disconnect immediately/. Valid values:
--   
--   <ul>
--   <li><tt>STANDARD</tt>: Multiple qualities are generated from the
--   original input, to automatically give viewers the best experience for
--   their devices and network conditions. Resolution can be up to 1080p
--   and bitrate can be up to 8.5 Mbps. Audio is transcoded only for
--   renditions 360p and below; above that, audio is passed through.</li>
--   <li><tt>BASIC</tt>: Amazon IVS delivers the original input to viewers.
--   The viewer’s video-quality choice is limited to the original input.
--   Resolution can be up to 480p and bitrate can be up to 1.5 Mbps.</li>
--   </ul>
[$sel:type':UpdateChannel'] :: UpdateChannel -> Maybe ChannelType

-- | ARN of the channel to be updated.
[$sel:arn:UpdateChannel'] :: UpdateChannel -> Text

-- | Create a value of <a>UpdateChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorized:UpdateChannel'</a>, <a>updateChannel_authorized</a>
--   - Whether the channel is private (enabled for playback authorization).
--   
--   <a>$sel:latencyMode:UpdateChannel'</a>,
--   <a>updateChannel_latencyMode</a> - Channel latency mode. Use
--   <tt>NORMAL</tt> to broadcast and deliver live video up to Full HD. Use
--   <tt>LOW</tt> for near-real-time interaction with viewers. (Note: In
--   the Amazon IVS console, <tt>LOW</tt> and <tt>NORMAL</tt> correspond to
--   Ultra-low and Standard, respectively.)
--   
--   <a>$sel:name:UpdateChannel'</a>, <a>updateChannel_name</a> - Channel
--   name.
--   
--   <a>$sel:recordingConfigurationArn:UpdateChannel'</a>,
--   <a>updateChannel_recordingConfigurationArn</a> -
--   Recording-configuration ARN. If this is set to an empty string,
--   recording is disabled. A value other than an empty string indicates
--   that recording is enabled
--   
--   <a>$sel:type':UpdateChannel'</a>, <a>updateChannel_type</a> - Channel
--   type, which determines the allowable resolution and bitrate. /If you
--   exceed the allowable resolution or bitrate, the stream probably will
--   disconnect immediately/. Valid values:
--   
--   <ul>
--   <li><tt>STANDARD</tt>: Multiple qualities are generated from the
--   original input, to automatically give viewers the best experience for
--   their devices and network conditions. Resolution can be up to 1080p
--   and bitrate can be up to 8.5 Mbps. Audio is transcoded only for
--   renditions 360p and below; above that, audio is passed through.</li>
--   <li><tt>BASIC</tt>: Amazon IVS delivers the original input to viewers.
--   The viewer’s video-quality choice is limited to the original input.
--   Resolution can be up to 480p and bitrate can be up to 1.5 Mbps.</li>
--   </ul>
--   
--   <a>$sel:arn:UpdateChannel'</a>, <a>updateChannel_arn</a> - ARN of the
--   channel to be updated.
newUpdateChannel :: Text -> UpdateChannel

-- | Whether the channel is private (enabled for playback authorization).
updateChannel_authorized :: Lens' UpdateChannel (Maybe Bool)

-- | Channel latency mode. Use <tt>NORMAL</tt> to broadcast and deliver
--   live video up to Full HD. Use <tt>LOW</tt> for near-real-time
--   interaction with viewers. (Note: In the Amazon IVS console,
--   <tt>LOW</tt> and <tt>NORMAL</tt> correspond to Ultra-low and Standard,
--   respectively.)
updateChannel_latencyMode :: Lens' UpdateChannel (Maybe ChannelLatencyMode)

-- | Channel name.
updateChannel_name :: Lens' UpdateChannel (Maybe Text)

-- | Recording-configuration ARN. If this is set to an empty string,
--   recording is disabled. A value other than an empty string indicates
--   that recording is enabled
updateChannel_recordingConfigurationArn :: Lens' UpdateChannel (Maybe Text)

-- | Channel type, which determines the allowable resolution and bitrate.
--   /If you exceed the allowable resolution or bitrate, the stream
--   probably will disconnect immediately/. Valid values:
--   
--   <ul>
--   <li><tt>STANDARD</tt>: Multiple qualities are generated from the
--   original input, to automatically give viewers the best experience for
--   their devices and network conditions. Resolution can be up to 1080p
--   and bitrate can be up to 8.5 Mbps. Audio is transcoded only for
--   renditions 360p and below; above that, audio is passed through.</li>
--   <li><tt>BASIC</tt>: Amazon IVS delivers the original input to viewers.
--   The viewer’s video-quality choice is limited to the original input.
--   Resolution can be up to 480p and bitrate can be up to 1.5 Mbps.</li>
--   </ul>
updateChannel_type :: Lens' UpdateChannel (Maybe ChannelType)

-- | ARN of the channel to be updated.
updateChannel_arn :: Lens' UpdateChannel Text

-- | <i>See:</i> <a>newUpdateChannelResponse</a> smart constructor.
data UpdateChannelResponse
UpdateChannelResponse' :: Maybe Channel -> Int -> UpdateChannelResponse
[$sel:channel:UpdateChannelResponse'] :: UpdateChannelResponse -> Maybe Channel

-- | The response's http status code.
[$sel:httpStatus:UpdateChannelResponse'] :: UpdateChannelResponse -> Int

-- | Create a value of <a>UpdateChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channel:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_channel</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_httpStatus</a> - The response's http status
--   code.
newUpdateChannelResponse :: Int -> UpdateChannelResponse

-- | Undocumented member.
updateChannelResponse_channel :: Lens' UpdateChannelResponse (Maybe Channel)

-- | The response's http status code.
updateChannelResponse_httpStatus :: Lens' UpdateChannelResponse Int
instance GHC.Generics.Generic Network.AWS.IVS.UpdateChannel.UpdateChannel
instance GHC.Show.Show Network.AWS.IVS.UpdateChannel.UpdateChannel
instance GHC.Read.Read Network.AWS.IVS.UpdateChannel.UpdateChannel
instance GHC.Classes.Eq Network.AWS.IVS.UpdateChannel.UpdateChannel
instance GHC.Generics.Generic Network.AWS.IVS.UpdateChannel.UpdateChannelResponse
instance GHC.Show.Show Network.AWS.IVS.UpdateChannel.UpdateChannelResponse
instance GHC.Read.Read Network.AWS.IVS.UpdateChannel.UpdateChannelResponse
instance GHC.Classes.Eq Network.AWS.IVS.UpdateChannel.UpdateChannelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IVS.UpdateChannel.UpdateChannel
instance Control.DeepSeq.NFData Network.AWS.IVS.UpdateChannel.UpdateChannelResponse
instance Data.Hashable.Class.Hashable Network.AWS.IVS.UpdateChannel.UpdateChannel
instance Control.DeepSeq.NFData Network.AWS.IVS.UpdateChannel.UpdateChannel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IVS.UpdateChannel.UpdateChannel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IVS.UpdateChannel.UpdateChannel
instance Network.AWS.Data.Path.ToPath Network.AWS.IVS.UpdateChannel.UpdateChannel
instance Network.AWS.Data.Query.ToQuery Network.AWS.IVS.UpdateChannel.UpdateChannel


module Network.AWS.IVS.Lens

-- | ARN of the channel into which metadata is inserted. This channel must
--   have an active stream.
putMetadata_channelArn :: Lens' PutMetadata Text

-- | Metadata to insert into the stream. Maximum: 1 KB per request.
putMetadata_metadata :: Lens' PutMetadata Text

-- | The first recording configuration to retrieve. This is used for
--   pagination; see the <tt>nextToken</tt> response field.
listRecordingConfigurations_nextToken :: Lens' ListRecordingConfigurations (Maybe Text)

-- | Maximum number of recording configurations to return. Default: 50.
listRecordingConfigurations_maxResults :: Lens' ListRecordingConfigurations (Maybe Natural)

-- | If there are more recording configurations than <tt>maxResults</tt>,
--   use <tt>nextToken</tt> in the request to get the next set.
listRecordingConfigurationsResponse_nextToken :: Lens' ListRecordingConfigurationsResponse (Maybe Text)

-- | The response's http status code.
listRecordingConfigurationsResponse_httpStatus :: Lens' ListRecordingConfigurationsResponse Int

-- | List of the matching recording configurations.
listRecordingConfigurationsResponse_recordingConfigurations :: Lens' ListRecordingConfigurationsResponse [RecordingConfigurationSummary]

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
createStreamKey_tags :: Lens' CreateStreamKey (Maybe (HashMap Text Text))

-- | ARN of the channel for which to create the stream key.
createStreamKey_channelArn :: Lens' CreateStreamKey Text

-- | Stream key used to authenticate an RTMPS stream for ingestion.
createStreamKeyResponse_streamKey :: Lens' CreateStreamKeyResponse (Maybe StreamKey)

-- | The response's http status code.
createStreamKeyResponse_httpStatus :: Lens' CreateStreamKeyResponse Int

-- | Playback-key-pair name. The value does not need to be unique.
importPlaybackKeyPair_name :: Lens' ImportPlaybackKeyPair (Maybe Text)

-- | Any tags provided with the request are added to the playback key pair
--   tags.
importPlaybackKeyPair_tags :: Lens' ImportPlaybackKeyPair (Maybe (HashMap Text Text))

-- | The public portion of a customer-generated key pair.
importPlaybackKeyPair_publicKeyMaterial :: Lens' ImportPlaybackKeyPair Text

importPlaybackKeyPairResponse_keyPair :: Lens' ImportPlaybackKeyPairResponse (Maybe PlaybackKeyPair)

-- | The response's http status code.
importPlaybackKeyPairResponse_httpStatus :: Lens' ImportPlaybackKeyPairResponse Int

-- | Filters the channel list to match the specified name.
listChannels_filterByName :: Lens' ListChannels (Maybe Text)

-- | The first channel to retrieve. This is used for pagination; see the
--   <tt>nextToken</tt> response field.
listChannels_nextToken :: Lens' ListChannels (Maybe Text)

-- | Filters the channel list to match the specified
--   recording-configuration ARN.
listChannels_filterByRecordingConfigurationArn :: Lens' ListChannels (Maybe Text)

-- | Maximum number of channels to return. Default: 50.
listChannels_maxResults :: Lens' ListChannels (Maybe Natural)

-- | If there are more channels than <tt>maxResults</tt>, use
--   <tt>nextToken</tt> in the request to get the next set.
listChannelsResponse_nextToken :: Lens' ListChannelsResponse (Maybe Text)

-- | The response's http status code.
listChannelsResponse_httpStatus :: Lens' ListChannelsResponse Int

-- | List of the matching channels.
listChannelsResponse_channels :: Lens' ListChannelsResponse [ChannelSummary]

-- | The ARN of the resource to be retrieved.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (HashMap Text Text)

-- | ARN of the channel to be deleted.
deleteChannel_arn :: Lens' DeleteChannel Text

-- | Whether the channel is private (enabled for playback authorization).
updateChannel_authorized :: Lens' UpdateChannel (Maybe Bool)

-- | Channel latency mode. Use <tt>NORMAL</tt> to broadcast and deliver
--   live video up to Full HD. Use <tt>LOW</tt> for near-real-time
--   interaction with viewers. (Note: In the Amazon IVS console,
--   <tt>LOW</tt> and <tt>NORMAL</tt> correspond to Ultra-low and Standard,
--   respectively.)
updateChannel_latencyMode :: Lens' UpdateChannel (Maybe ChannelLatencyMode)

-- | Channel name.
updateChannel_name :: Lens' UpdateChannel (Maybe Text)

-- | Recording-configuration ARN. If this is set to an empty string,
--   recording is disabled. A value other than an empty string indicates
--   that recording is enabled
updateChannel_recordingConfigurationArn :: Lens' UpdateChannel (Maybe Text)

-- | Channel type, which determines the allowable resolution and bitrate.
--   /If you exceed the allowable resolution or bitrate, the stream
--   probably will disconnect immediately/. Valid values:
--   
--   <ul>
--   <li><tt>STANDARD</tt>: Multiple qualities are generated from the
--   original input, to automatically give viewers the best experience for
--   their devices and network conditions. Resolution can be up to 1080p
--   and bitrate can be up to 8.5 Mbps. Audio is transcoded only for
--   renditions 360p and below; above that, audio is passed through.</li>
--   <li><tt>BASIC</tt>: Amazon IVS delivers the original input to viewers.
--   The viewer’s video-quality choice is limited to the original input.
--   Resolution can be up to 480p and bitrate can be up to 1.5 Mbps.</li>
--   </ul>
updateChannel_type :: Lens' UpdateChannel (Maybe ChannelType)

-- | ARN of the channel to be updated.
updateChannel_arn :: Lens' UpdateChannel Text

-- | Undocumented member.
updateChannelResponse_channel :: Lens' UpdateChannelResponse (Maybe Channel)

-- | The response's http status code.
updateChannelResponse_httpStatus :: Lens' UpdateChannelResponse Int

-- | ARN for the stream key to be retrieved.
getStreamKey_arn :: Lens' GetStreamKey Text

getStreamKeyResponse_streamKey :: Lens' GetStreamKeyResponse (Maybe StreamKey)

-- | The response's http status code.
getStreamKeyResponse_httpStatus :: Lens' GetStreamKeyResponse Int

-- | ARN of the key pair to be deleted.
deletePlaybackKeyPair_arn :: Lens' DeletePlaybackKeyPair Text

-- | The response's http status code.
deletePlaybackKeyPairResponse_httpStatus :: Lens' DeletePlaybackKeyPairResponse Int

-- | Array of ARNs, one per channel.
batchGetStreamKey_arns :: Lens' BatchGetStreamKey (NonEmpty Text)

batchGetStreamKeyResponse_streamKeys :: Lens' BatchGetStreamKeyResponse (Maybe [StreamKey])

batchGetStreamKeyResponse_errors :: Lens' BatchGetStreamKeyResponse (Maybe [BatchError])

-- | The response's http status code.
batchGetStreamKeyResponse_httpStatus :: Lens' BatchGetStreamKeyResponse Int

-- | ARN of the key pair to be returned.
getPlaybackKeyPair_arn :: Lens' GetPlaybackKeyPair Text

getPlaybackKeyPairResponse_keyPair :: Lens' GetPlaybackKeyPairResponse (Maybe PlaybackKeyPair)

-- | The response's http status code.
getPlaybackKeyPairResponse_httpStatus :: Lens' GetPlaybackKeyPairResponse Int

-- | ARN of the recording configuration to be deleted.
deleteRecordingConfiguration_arn :: Lens' DeleteRecordingConfiguration Text

-- | ARN of the channel for which the stream is to be stopped.
stopStream_channelArn :: Lens' StopStream Text

-- | The response's http status code.
stopStreamResponse_httpStatus :: Lens' StopStreamResponse Int

-- | Whether the channel is private (enabled for playback authorization).
--   Default: <tt>false</tt>.
createChannel_authorized :: Lens' CreateChannel (Maybe Bool)

-- | Channel latency mode. Use <tt>NORMAL</tt> to broadcast and deliver
--   live video up to Full HD. Use <tt>LOW</tt> for near-real-time
--   interaction with viewers. (Note: In the Amazon IVS console,
--   <tt>LOW</tt> and <tt>NORMAL</tt> correspond to Ultra-low and Standard,
--   respectively.) Default: <tt>LOW</tt>.
createChannel_latencyMode :: Lens' CreateChannel (Maybe ChannelLatencyMode)

-- | Channel name.
createChannel_name :: Lens' CreateChannel (Maybe Text)

-- | Recording-configuration ARN. Default: "" (empty string, recording is
--   disabled).
createChannel_recordingConfigurationArn :: Lens' CreateChannel (Maybe Text)

-- | Channel type, which determines the allowable resolution and bitrate.
--   /If you exceed the allowable resolution or bitrate, the stream
--   probably will disconnect immediately./ Default: <tt>STANDARD</tt>.
--   Valid values:
--   
--   <ul>
--   <li><tt>STANDARD</tt>: Multiple qualities are generated from the
--   original input, to automatically give viewers the best experience for
--   their devices and network conditions. Resolution can be up to 1080p
--   and bitrate can be up to 8.5 Mbps. Audio is transcoded only for
--   renditions 360p and below; above that, audio is passed through.</li>
--   <li><tt>BASIC</tt>: Amazon IVS delivers the original input to viewers.
--   The viewer’s video-quality choice is limited to the original input.
--   Resolution can be up to 480p and bitrate can be up to 1.5 Mbps.</li>
--   </ul>
createChannel_type :: Lens' CreateChannel (Maybe ChannelType)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
createChannel_tags :: Lens' CreateChannel (Maybe (HashMap Text Text))

createChannelResponse_channel :: Lens' CreateChannelResponse (Maybe Channel)

createChannelResponse_streamKey :: Lens' CreateChannelResponse (Maybe StreamKey)

-- | The response's http status code.
createChannelResponse_httpStatus :: Lens' CreateChannelResponse Int

-- | ARN of the stream key to be deleted.
deleteStreamKey_arn :: Lens' DeleteStreamKey Text

-- | Channel ARN for stream to be accessed.
getStream_channelArn :: Lens' GetStream Text

getStreamResponse_stream :: Lens' GetStreamResponse (Maybe Stream)

-- | The response's http status code.
getStreamResponse_httpStatus :: Lens' GetStreamResponse Int

-- | The first stream key to retrieve. This is used for pagination; see the
--   <tt>nextToken</tt> response field.
listStreamKeys_nextToken :: Lens' ListStreamKeys (Maybe Text)

-- | Maximum number of streamKeys to return. Default: 50.
listStreamKeys_maxResults :: Lens' ListStreamKeys (Maybe Natural)

-- | Channel ARN used to filter the list.
listStreamKeys_channelArn :: Lens' ListStreamKeys Text

-- | If there are more stream keys than <tt>maxResults</tt>, use
--   <tt>nextToken</tt> in the request to get the next set.
listStreamKeysResponse_nextToken :: Lens' ListStreamKeysResponse (Maybe Text)

-- | The response's http status code.
listStreamKeysResponse_httpStatus :: Lens' ListStreamKeysResponse Int

-- | List of stream keys.
listStreamKeysResponse_streamKeys :: Lens' ListStreamKeysResponse [StreamKeySummary]

-- | ARN of the channel for which the configuration is to be retrieved.
getChannel_arn :: Lens' GetChannel Text

getChannelResponse_channel :: Lens' GetChannelResponse (Maybe Channel)

-- | The response's http status code.
getChannelResponse_httpStatus :: Lens' GetChannelResponse Int

-- | The first stream to retrieve. This is used for pagination; see the
--   <tt>nextToken</tt> response field.
listStreams_nextToken :: Lens' ListStreams (Maybe Text)

-- | Maximum number of streams to return. Default: 50.
listStreams_maxResults :: Lens' ListStreams (Maybe Natural)

-- | If there are more streams than <tt>maxResults</tt>, use
--   <tt>nextToken</tt> in the request to get the next set.
listStreamsResponse_nextToken :: Lens' ListStreamsResponse (Maybe Text)

-- | The response's http status code.
listStreamsResponse_httpStatus :: Lens' ListStreamsResponse Int

-- | List of streams.
listStreamsResponse_streams :: Lens' ListStreamsResponse [StreamSummary]

-- | ARN of the resource for which tags are to be added or updated.
tagResource_resourceArn :: Lens' TagResource Text

-- | Array of tags to be added or updated.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | ARN of the recording configuration to be retrieved.
getRecordingConfiguration_arn :: Lens' GetRecordingConfiguration Text

getRecordingConfigurationResponse_recordingConfiguration :: Lens' GetRecordingConfigurationResponse (Maybe RecordingConfiguration)

-- | The response's http status code.
getRecordingConfigurationResponse_httpStatus :: Lens' GetRecordingConfigurationResponse Int

-- | Maximum number of key pairs to return.
listPlaybackKeyPairs_nextToken :: Lens' ListPlaybackKeyPairs (Maybe Text)

-- | The first key pair to retrieve. This is used for pagination; see the
--   <tt>nextToken</tt> response field. Default: 50.
listPlaybackKeyPairs_maxResults :: Lens' ListPlaybackKeyPairs (Maybe Natural)

-- | If there are more key pairs than <tt>maxResults</tt>, use
--   <tt>nextToken</tt> in the request to get the next set.
listPlaybackKeyPairsResponse_nextToken :: Lens' ListPlaybackKeyPairsResponse (Maybe Text)

-- | The response's http status code.
listPlaybackKeyPairsResponse_httpStatus :: Lens' ListPlaybackKeyPairsResponse Int

-- | List of key pairs.
listPlaybackKeyPairsResponse_keyPairs :: Lens' ListPlaybackKeyPairsResponse [PlaybackKeyPairSummary]

-- | ARN of the resource for which tags are to be removed.
untagResource_resourceArn :: Lens' UntagResource Text

-- | Array of tags to be removed.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | Recording-configuration name. The value does not need to be unique.
createRecordingConfiguration_name :: Lens' CreateRecordingConfiguration (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
createRecordingConfiguration_tags :: Lens' CreateRecordingConfiguration (Maybe (HashMap Text Text))

-- | A complex type that contains a destination configuration for where
--   recorded video will be stored.
createRecordingConfiguration_destinationConfiguration :: Lens' CreateRecordingConfiguration DestinationConfiguration

createRecordingConfigurationResponse_recordingConfiguration :: Lens' CreateRecordingConfigurationResponse (Maybe RecordingConfiguration)

-- | The response's http status code.
createRecordingConfigurationResponse_httpStatus :: Lens' CreateRecordingConfigurationResponse Int

-- | Array of ARNs, one per channel.
batchGetChannel_arns :: Lens' BatchGetChannel (NonEmpty Text)

batchGetChannelResponse_channels :: Lens' BatchGetChannelResponse (Maybe [Channel])

-- | Each error object is related to a specific ARN in the request.
batchGetChannelResponse_errors :: Lens' BatchGetChannelResponse (Maybe [BatchError])

-- | The response's http status code.
batchGetChannelResponse_httpStatus :: Lens' BatchGetChannelResponse Int

-- | Channel ARN.
batchError_arn :: Lens' BatchError (Maybe Text)

-- | Error code.
batchError_code :: Lens' BatchError (Maybe Text)

-- | Error message, determined by the application.
batchError_message :: Lens' BatchError (Maybe Text)

-- | Channel playback URL.
channel_playbackUrl :: Lens' Channel (Maybe Text)

-- | Whether the channel is private (enabled for playback authorization).
--   Default: <tt>false</tt>.
channel_authorized :: Lens' Channel (Maybe Bool)

-- | Channel ARN.
channel_arn :: Lens' Channel (Maybe Text)

-- | Channel latency mode. Use <tt>NORMAL</tt> to broadcast and deliver
--   live video up to Full HD. Use <tt>LOW</tt> for near-real-time
--   interaction with viewers. Default: <tt>LOW</tt>. (Note: In the Amazon
--   IVS console, <tt>LOW</tt> and <tt>NORMAL</tt> correspond to Ultra-low
--   and Standard, respectively.)
channel_latencyMode :: Lens' Channel (Maybe ChannelLatencyMode)

-- | Channel name.
channel_name :: Lens' Channel (Maybe Text)

-- | Recording-configuration ARN. A value other than an empty string
--   indicates that recording is enabled. Default: "" (empty string,
--   recording is disabled).
channel_recordingConfigurationArn :: Lens' Channel (Maybe Text)

-- | Channel type, which determines the allowable resolution and bitrate.
--   /If you exceed the allowable resolution or bitrate, the stream
--   probably will disconnect immediately./ Default: <tt>STANDARD</tt>.
--   Valid values:
--   
--   <ul>
--   <li><tt>STANDARD</tt>: Multiple qualities are generated from the
--   original input, to automatically give viewers the best experience for
--   their devices and network conditions. Resolution can be up to 1080p
--   and bitrate can be up to 8.5 Mbps. Audio is transcoded only for
--   renditions 360p and below; above that, audio is passed through.</li>
--   <li><tt>BASIC</tt>: Amazon IVS delivers the original input to viewers.
--   The viewer’s video-quality choice is limited to the original input.
--   Resolution can be up to 480p and bitrate can be up to 1.5 Mbps.</li>
--   </ul>
channel_type :: Lens' Channel (Maybe ChannelType)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
channel_tags :: Lens' Channel (Maybe (HashMap Text Text))

-- | Channel ingest endpoint, part of the definition of an ingest server,
--   used when you set up streaming software.
channel_ingestEndpoint :: Lens' Channel (Maybe Text)

-- | Whether the channel is private (enabled for playback authorization).
--   Default: <tt>false</tt>.
channelSummary_authorized :: Lens' ChannelSummary (Maybe Bool)

-- | Channel ARN.
channelSummary_arn :: Lens' ChannelSummary (Maybe Text)

-- | Channel latency mode. Use <tt>NORMAL</tt> to broadcast and deliver
--   live video up to Full HD. Use <tt>LOW</tt> for near-real-time
--   interaction with viewers. Default: <tt>LOW</tt>. (Note: In the Amazon
--   IVS console, <tt>LOW</tt> and <tt>NORMAL</tt> correspond to Ultra-low
--   and Standard, respectively.)
channelSummary_latencyMode :: Lens' ChannelSummary (Maybe ChannelLatencyMode)

-- | Channel name.
channelSummary_name :: Lens' ChannelSummary (Maybe Text)

-- | Recording-configuration ARN. A value other than an empty string
--   indicates that recording is enabled. Default: "" (empty string,
--   recording is disabled).
channelSummary_recordingConfigurationArn :: Lens' ChannelSummary (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
channelSummary_tags :: Lens' ChannelSummary (Maybe (HashMap Text Text))

-- | An S3 destination configuration where recorded videos will be stored.
destinationConfiguration_s3 :: Lens' DestinationConfiguration (Maybe S3DestinationConfiguration)

-- | Key-pair ARN.
playbackKeyPair_arn :: Lens' PlaybackKeyPair (Maybe Text)

-- | Key-pair identifier.
playbackKeyPair_fingerprint :: Lens' PlaybackKeyPair (Maybe Text)

-- | Playback-key-pair name. The value does not need to be unique.
playbackKeyPair_name :: Lens' PlaybackKeyPair (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
playbackKeyPair_tags :: Lens' PlaybackKeyPair (Maybe (HashMap Text Text))

-- | Key-pair ARN.
playbackKeyPairSummary_arn :: Lens' PlaybackKeyPairSummary (Maybe Text)

-- | Playback-key-pair name. The value does not need to be unique.
playbackKeyPairSummary_name :: Lens' PlaybackKeyPairSummary (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
playbackKeyPairSummary_tags :: Lens' PlaybackKeyPairSummary (Maybe (HashMap Text Text))

-- | Recording-configuration name. The value does not need to be unique.
recordingConfiguration_name :: Lens' RecordingConfiguration (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
recordingConfiguration_tags :: Lens' RecordingConfiguration (Maybe (HashMap Text Text))

-- | Recording-configuration ARN.
recordingConfiguration_arn :: Lens' RecordingConfiguration Text

-- | A complex type that contains information about where recorded video
--   will be stored.
recordingConfiguration_destinationConfiguration :: Lens' RecordingConfiguration DestinationConfiguration

-- | Indicates the current state of the recording configuration. When the
--   state is <tt>ACTIVE</tt>, the configuration is ready for recording a
--   channel stream.
recordingConfiguration_state :: Lens' RecordingConfiguration RecordingConfigurationState

-- | Recording-configuration name. The value does not need to be unique.
recordingConfigurationSummary_name :: Lens' RecordingConfigurationSummary (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
recordingConfigurationSummary_tags :: Lens' RecordingConfigurationSummary (Maybe (HashMap Text Text))

-- | Recording-configuration ARN.
recordingConfigurationSummary_arn :: Lens' RecordingConfigurationSummary Text

-- | A complex type that contains information about where recorded video
--   will be stored.
recordingConfigurationSummary_destinationConfiguration :: Lens' RecordingConfigurationSummary DestinationConfiguration

-- | Indicates the current state of the recording configuration. When the
--   state is <tt>ACTIVE</tt>, the configuration is ready for recording a
--   channel stream.
recordingConfigurationSummary_state :: Lens' RecordingConfigurationSummary RecordingConfigurationState

-- | Location (S3 bucket name) where recorded videos will be stored.
s3DestinationConfiguration_bucketName :: Lens' S3DestinationConfiguration Text

-- | URL of the master playlist, required by the video player to play the
--   HLS stream.
stream_playbackUrl :: Lens' Stream (Maybe Text)

-- | The stream’s state.
stream_state :: Lens' Stream (Maybe StreamState)

-- | Time of the stream’s start. This is an ISO 8601 timestamp returned as
--   a string.
stream_startTime :: Lens' Stream (Maybe UTCTime)

-- | Channel ARN for the stream.
stream_channelArn :: Lens' Stream (Maybe Text)

-- | A count of concurrent views of the stream. Typically, a new view
--   appears in <tt>viewerCount</tt> within 15 seconds of when video
--   playback starts and a view is removed from <tt>viewerCount</tt> within
--   1 minute of when video playback ends. A value of -1 indicates that the
--   request timed out; in this case, retry.
stream_viewerCount :: Lens' Stream (Maybe Integer)

-- | The stream’s health.
stream_health :: Lens' Stream (Maybe StreamHealth)

-- | Stream-key ARN.
streamKey_arn :: Lens' StreamKey (Maybe Text)

-- | Stream-key value.
streamKey_value :: Lens' StreamKey (Maybe Text)

-- | Channel ARN for the stream.
streamKey_channelArn :: Lens' StreamKey (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
streamKey_tags :: Lens' StreamKey (Maybe (HashMap Text Text))

-- | Stream-key ARN.
streamKeySummary_arn :: Lens' StreamKeySummary (Maybe Text)

-- | Channel ARN for the stream.
streamKeySummary_channelArn :: Lens' StreamKeySummary (Maybe Text)

-- | Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
streamKeySummary_tags :: Lens' StreamKeySummary (Maybe (HashMap Text Text))

-- | The stream’s state.
streamSummary_state :: Lens' StreamSummary (Maybe StreamState)

-- | Time of the stream’s start. This is an ISO 8601 timestamp returned as
--   a string.
streamSummary_startTime :: Lens' StreamSummary (Maybe UTCTime)

-- | Channel ARN for the stream.
streamSummary_channelArn :: Lens' StreamSummary (Maybe Text)

-- | A count of concurrent views of the stream. Typically, a new view
--   appears in <tt>viewerCount</tt> within 15 seconds of when video
--   playback starts and a view is removed from <tt>viewerCount</tt> within
--   1 minute of when video playback ends. A value of -1 indicates that the
--   request timed out; in this case, retry.
streamSummary_viewerCount :: Lens' StreamSummary (Maybe Integer)

-- | The stream’s health.
streamSummary_health :: Lens' StreamSummary (Maybe StreamHealth)


module Network.AWS.IVS.Waiters


-- | Derived from API version <tt>2020-07-14</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   <b>Introduction</b>
--   
--   The Amazon Interactive Video Service (IVS) API is REST compatible,
--   using a standard HTTP API and an Amazon Web Services EventBridge event
--   stream for responses. JSON is used for both requests and responses,
--   including errors.
--   
--   The API is an Amazon Web Services regional service. For a list of
--   supported regions and Amazon IVS HTTPS service endpoints, see the
--   <a>Amazon IVS page</a> in the <i>Amazon Web Services General
--   Reference</i>.
--   
--   <i><b>All API request parameters and URLs are case sensitive.</b></i>
--   
--   For a summary of notable documentation changes in each release, see
--   <a>Document History</a>.
--   
--   <pre>
--   &lt;p&gt; &lt;b&gt;Allowed Header Values&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt; &lt;b&gt;Accept:&lt;/b&gt; &lt;/code&gt; application/json&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt; &lt;b&gt;Accept-Encoding:&lt;/b&gt; &lt;/code&gt; gzip, deflate&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt; &lt;b&gt;Content-Type:&lt;/b&gt; &lt;/code&gt;application/json&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; &lt;b&gt;Resources&lt;/b&gt; &lt;/p&gt; &lt;p&gt;The following resources contain information about your IVS live stream (see &lt;a href="https://docs.aws.amazon.com/ivs/latest/userguide/getting-started.html"&gt; Getting Started with Amazon IVS&lt;/a&gt;):&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Channel — Stores configuration data related to your live stream. You first create a channel and then use the channel’s stream key to start your live stream. See the Channel endpoints for more information. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Stream key — An identifier assigned by Amazon IVS when you create a channel, which is then used to authorize streaming. See the StreamKey endpoints for more information. &lt;i&gt; &lt;b&gt;Treat the stream key like a secret, since it allows anyone to stream to the channel.&lt;/b&gt; &lt;/i&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Playback key pair — Video playback may be restricted using playback-authorization tokens, which use public-key encryption. A playback key pair is the public-private pair of keys used to sign and validate the playback-authorization token. See the PlaybackKeyPair endpoints for more information.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Recording configuration — Stores configuration related to recording a live stream and where to store the recorded content. Multiple channels can reference the same recording configuration. See the Recording Configuration endpoints for more information.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; &lt;b&gt;Tagging&lt;/b&gt; &lt;/p&gt; &lt;p&gt;A &lt;i&gt;tag&lt;/i&gt; is a metadata label that you assign to an Amazon Web Services resource. A tag comprises a &lt;i&gt;key&lt;/i&gt; and a &lt;i&gt;value&lt;/i&gt;, both set by you. For example, you might set a tag as &lt;code&gt;topic:nature&lt;/code&gt; to label a particular video category. See &lt;a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html"&gt;Tagging Amazon Web Services Resources&lt;/a&gt; for more information, including restrictions that apply to tags.&lt;/p&gt; &lt;p&gt;Tags can help you identify and organize your Amazon Web Services resources. For example, you can use the same tag for different resources to indicate that they are related. You can also use tags to manage access (see &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html"&gt; Access Tags&lt;/a&gt;). &lt;/p&gt; &lt;p&gt;The Amazon IVS API has these tag-related endpoints: &lt;a&gt;TagResource&lt;/a&gt;, &lt;a&gt;UntagResource&lt;/a&gt;, and &lt;a&gt;ListTagsForResource&lt;/a&gt;. The following resources support tagging: Channels, Stream Keys, Playback Key Pairs, and Recording Configurations.&lt;/p&gt; &lt;p&gt;At most 50 tags can be applied to a resource. &lt;/p&gt; &lt;p&gt; &lt;b&gt;Authentication versus Authorization&lt;/b&gt; &lt;/p&gt; &lt;p&gt;Note the differences between these concepts:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;i&gt;Authentication&lt;/i&gt; is about verifying identity. You need to be authenticated to sign Amazon IVS API requests.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;i&gt;Authorization&lt;/i&gt; is about granting permissions. You need to be authorized to view &lt;a href="https://docs.aws.amazon.com/ivs/latest/userguide/private-channels.html"&gt;Amazon IVS private channels&lt;/a&gt;. (Private channels are channels that are enabled for "playback authorization.")&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; &lt;b&gt;Authentication&lt;/b&gt; &lt;/p&gt; &lt;p&gt;All Amazon IVS API requests must be authenticated with a signature. The Amazon Web Services Command-Line Interface (CLI) and Amazon IVS Player SDKs take care of signing the underlying API calls for you. However, if your application calls the Amazon IVS API directly, it’s your responsibility to sign the requests.&lt;/p&gt; &lt;p&gt;You generate a signature using valid Amazon Web Services credentials that have permission to perform the requested action. For example, you must sign PutMetadata requests with a signature generated from an IAM user account that has the &lt;code&gt;ivs:PutMetadata&lt;/code&gt; permission.&lt;/p&gt; &lt;p&gt;For more information:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Authentication and generating signatures — See &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html"&gt;Authenticating Requests (Amazon Web Services Signature Version 4)&lt;/a&gt; in the &lt;i&gt;Amazon Web Services General Reference&lt;/i&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Managing Amazon IVS permissions — See &lt;a href="https://docs.aws.amazon.com/ivs/latest/userguide/security-iam.html"&gt;Identity and Access Management&lt;/a&gt; on the Security page of the &lt;i&gt;Amazon IVS User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; &lt;b&gt;Channel Endpoints&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateChannel&lt;/a&gt; — Creates a new channel and an associated stream key to start streaming.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetChannel&lt;/a&gt; — Gets the channel configuration for the specified channel ARN (Amazon Resource Name).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;BatchGetChannel&lt;/a&gt; — Performs &lt;a&gt;GetChannel&lt;/a&gt; on multiple ARNs simultaneously.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ListChannels&lt;/a&gt; — Gets summary information about all channels in your account, in the Amazon Web Services region where the API request is processed. This list can be filtered to match a specified name or recording-configuration ARN. Filters are mutually exclusive and cannot be used together. If you try to use both filters, you will get an error (409 Conflict Exception).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;UpdateChannel&lt;/a&gt; — Updates a channel's configuration. This does not affect an ongoing stream of this channel. You must stop and restart the stream for the changes to take effect.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DeleteChannel&lt;/a&gt; — Deletes the specified channel.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; &lt;b&gt;StreamKey Endpoints&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateStreamKey&lt;/a&gt; — Creates a stream key, used to initiate a stream, for the specified channel ARN.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetStreamKey&lt;/a&gt; — Gets stream key information for the specified ARN.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;BatchGetStreamKey&lt;/a&gt; — Performs &lt;a&gt;GetStreamKey&lt;/a&gt; on multiple ARNs simultaneously.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ListStreamKeys&lt;/a&gt; — Gets summary information about stream keys for the specified channel.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DeleteStreamKey&lt;/a&gt; — Deletes the stream key for the specified ARN, so it can no longer be used to stream.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; &lt;b&gt;Stream Endpoints&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetStream&lt;/a&gt; — Gets information about the active (live) stream on a specified channel.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ListStreams&lt;/a&gt; — Gets summary information about live streams in your account, in the Amazon Web Services region where the API request is processed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;StopStream&lt;/a&gt; — Disconnects the incoming RTMPS stream for the specified channel. Can be used in conjunction with &lt;a&gt;DeleteStreamKey&lt;/a&gt; to prevent further streaming to a channel.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;PutMetadata&lt;/a&gt; — Inserts metadata into the active stream of the specified channel. At most 5 requests per second per channel are allowed, each with a maximum 1 KB payload. (If 5 TPS is not sufficient for your needs, we recommend batching your data into a single PutMetadata call.) At most 155 requests per second per account are allowed.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; &lt;b&gt;PlaybackKeyPair Endpoints&lt;/b&gt; &lt;/p&gt; &lt;p&gt;For more information, see &lt;a href="https://docs.aws.amazon.com/ivs/latest/userguide/private-channels.html"&gt;Setting Up Private Channels&lt;/a&gt; in the &lt;i&gt;Amazon IVS User Guide&lt;/i&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ImportPlaybackKeyPair&lt;/a&gt; — Imports the public portion of a new key pair and returns its &lt;code&gt;arn&lt;/code&gt; and &lt;code&gt;fingerprint&lt;/code&gt;. The &lt;code&gt;privateKey&lt;/code&gt; can then be used to generate viewer authorization tokens, to grant viewers access to private channels (channels enabled for playback authorization).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetPlaybackKeyPair&lt;/a&gt; — Gets a specified playback authorization key pair and returns the &lt;code&gt;arn&lt;/code&gt; and &lt;code&gt;fingerprint&lt;/code&gt;. The &lt;code&gt;privateKey&lt;/code&gt; held by the caller can be used to generate viewer authorization tokens, to grant viewers access to private channels.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ListPlaybackKeyPairs&lt;/a&gt; — Gets summary information about playback key pairs.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DeletePlaybackKeyPair&lt;/a&gt; — Deletes a specified authorization key pair. This invalidates future viewer tokens generated using the key pair’s &lt;code&gt;privateKey&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; &lt;b&gt;RecordingConfiguration Endpoints&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateRecordingConfiguration&lt;/a&gt; — Creates a new recording configuration, used to enable recording to Amazon S3.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetRecordingConfiguration&lt;/a&gt; — Gets the recording-configuration metadata for the specified ARN.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ListRecordingConfigurations&lt;/a&gt; — Gets summary information about all recording configurations in your account, in the Amazon Web Services region where the API request is processed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DeleteRecordingConfiguration&lt;/a&gt; — Deletes the recording configuration for the specified ARN.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; &lt;b&gt;Amazon Web Services Tags Endpoints&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;TagResource&lt;/a&gt; — Adds or updates tags for the Amazon Web Services resource with the specified ARN.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;UntagResource&lt;/a&gt; — Removes tags from the resource with the specified ARN.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ListTagsForResource&lt;/a&gt; — Gets information about Amazon Web Services tags for the specified ARN.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
--   </pre>
module Network.AWS.IVS

-- | API version <tt>2020-07-14</tt> of the Amazon Interactive Video
--   Service SDK configuration.
defaultService :: Service

_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

_StreamUnavailable :: AsError a => Getting (First ServiceError) a ServiceError

_PendingVerification :: AsError a => Getting (First ServiceError) a ServiceError

_ChannelNotBroadcasting :: AsError a => Getting (First ServiceError) a ServiceError

_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newPutMetadata</a> smart constructor.
data PutMetadata
PutMetadata' :: Text -> Sensitive Text -> PutMetadata

-- | Create a value of <a>PutMetadata</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:PutMetadata'</a>, <a>putMetadata_channelArn</a> -
--   ARN of the channel into which metadata is inserted. This channel must
--   have an active stream.
--   
--   <a>$sel:metadata:PutMetadata'</a>, <a>putMetadata_metadata</a> -
--   Metadata to insert into the stream. Maximum: 1 KB per request.
newPutMetadata :: Text -> Text -> PutMetadata

-- | <i>See:</i> <a>newPutMetadataResponse</a> smart constructor.
data PutMetadataResponse
PutMetadataResponse' :: PutMetadataResponse

-- | Create a value of <a>PutMetadataResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutMetadataResponse :: PutMetadataResponse

-- | <i>See:</i> <a>newListRecordingConfigurations</a> smart constructor.
data ListRecordingConfigurations
ListRecordingConfigurations' :: Maybe Text -> Maybe Natural -> ListRecordingConfigurations

-- | Create a value of <a>ListRecordingConfigurations</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecordingConfigurations'</a>,
--   <a>listRecordingConfigurations_nextToken</a> - The first recording
--   configuration to retrieve. This is used for pagination; see the
--   <tt>nextToken</tt> response field.
--   
--   <a>$sel:maxResults:ListRecordingConfigurations'</a>,
--   <a>listRecordingConfigurations_maxResults</a> - Maximum number of
--   recording configurations to return. Default: 50.
newListRecordingConfigurations :: ListRecordingConfigurations

-- | <i>See:</i> <a>newListRecordingConfigurationsResponse</a> smart
--   constructor.
data ListRecordingConfigurationsResponse
ListRecordingConfigurationsResponse' :: Maybe Text -> Int -> [RecordingConfigurationSummary] -> ListRecordingConfigurationsResponse

-- | Create a value of <a>ListRecordingConfigurationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRecordingConfigurations'</a>,
--   <a>listRecordingConfigurationsResponse_nextToken</a> - If there are
--   more recording configurations than <tt>maxResults</tt>, use
--   <tt>nextToken</tt> in the request to get the next set.
--   
--   <a>$sel:httpStatus:ListRecordingConfigurationsResponse'</a>,
--   <a>listRecordingConfigurationsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   
--   <a>$sel:recordingConfigurations:ListRecordingConfigurationsResponse'</a>,
--   <a>listRecordingConfigurationsResponse_recordingConfigurations</a> -
--   List of the matching recording configurations.
newListRecordingConfigurationsResponse :: Int -> ListRecordingConfigurationsResponse

-- | <i>See:</i> <a>newCreateStreamKey</a> smart constructor.
data CreateStreamKey
CreateStreamKey' :: Maybe (HashMap Text Text) -> Text -> CreateStreamKey

-- | Create a value of <a>CreateStreamKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateStreamKey'</a>, <a>createStreamKey_tags</a> - Array
--   of 1-50 maps, each of the form <tt>string:string (key:value)</tt>.
--   
--   <a>$sel:channelArn:CreateStreamKey'</a>,
--   <a>createStreamKey_channelArn</a> - ARN of the channel for which to
--   create the stream key.
newCreateStreamKey :: Text -> CreateStreamKey

-- | <i>See:</i> <a>newCreateStreamKeyResponse</a> smart constructor.
data CreateStreamKeyResponse
CreateStreamKeyResponse' :: Maybe StreamKey -> Int -> CreateStreamKeyResponse

-- | Create a value of <a>CreateStreamKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamKey:CreateStreamKeyResponse'</a>,
--   <a>createStreamKeyResponse_streamKey</a> - Stream key used to
--   authenticate an RTMPS stream for ingestion.
--   
--   <a>$sel:httpStatus:CreateStreamKeyResponse'</a>,
--   <a>createStreamKeyResponse_httpStatus</a> - The response's http status
--   code.
newCreateStreamKeyResponse :: Int -> CreateStreamKeyResponse

-- | <i>See:</i> <a>newImportPlaybackKeyPair</a> smart constructor.
data ImportPlaybackKeyPair
ImportPlaybackKeyPair' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> ImportPlaybackKeyPair

-- | Create a value of <a>ImportPlaybackKeyPair</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ImportPlaybackKeyPair'</a>,
--   <a>importPlaybackKeyPair_name</a> - Playback-key-pair name. The value
--   does not need to be unique.
--   
--   <a>$sel:tags:ImportPlaybackKeyPair'</a>,
--   <a>importPlaybackKeyPair_tags</a> - Any tags provided with the request
--   are added to the playback key pair tags.
--   
--   <a>$sel:publicKeyMaterial:ImportPlaybackKeyPair'</a>,
--   <a>importPlaybackKeyPair_publicKeyMaterial</a> - The public portion of
--   a customer-generated key pair.
newImportPlaybackKeyPair :: Text -> ImportPlaybackKeyPair

-- | <i>See:</i> <a>newImportPlaybackKeyPairResponse</a> smart constructor.
data ImportPlaybackKeyPairResponse
ImportPlaybackKeyPairResponse' :: Maybe PlaybackKeyPair -> Int -> ImportPlaybackKeyPairResponse

-- | Create a value of <a>ImportPlaybackKeyPairResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPair:ImportPlaybackKeyPairResponse'</a>,
--   <a>importPlaybackKeyPairResponse_keyPair</a> -
--   
--   <a>$sel:httpStatus:ImportPlaybackKeyPairResponse'</a>,
--   <a>importPlaybackKeyPairResponse_httpStatus</a> - The response's http
--   status code.
newImportPlaybackKeyPairResponse :: Int -> ImportPlaybackKeyPairResponse

-- | <i>See:</i> <a>newListChannels</a> smart constructor.
data ListChannels
ListChannels' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> ListChannels

-- | Create a value of <a>ListChannels</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filterByName:ListChannels'</a>,
--   <a>listChannels_filterByName</a> - Filters the channel list to match
--   the specified name.
--   
--   <a>$sel:nextToken:ListChannels'</a>, <a>listChannels_nextToken</a> -
--   The first channel to retrieve. This is used for pagination; see the
--   <tt>nextToken</tt> response field.
--   
--   <a>$sel:filterByRecordingConfigurationArn:ListChannels'</a>,
--   <a>listChannels_filterByRecordingConfigurationArn</a> - Filters the
--   channel list to match the specified recording-configuration ARN.
--   
--   <a>$sel:maxResults:ListChannels'</a>, <a>listChannels_maxResults</a> -
--   Maximum number of channels to return. Default: 50.
newListChannels :: ListChannels

-- | <i>See:</i> <a>newListChannelsResponse</a> smart constructor.
data ListChannelsResponse
ListChannelsResponse' :: Maybe Text -> Int -> [ChannelSummary] -> ListChannelsResponse

-- | Create a value of <a>ListChannelsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChannels'</a>,
--   <a>listChannelsResponse_nextToken</a> - If there are more channels
--   than <tt>maxResults</tt>, use <tt>nextToken</tt> in the request to get
--   the next set.
--   
--   <a>$sel:httpStatus:ListChannelsResponse'</a>,
--   <a>listChannelsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:channels:ListChannelsResponse'</a>,
--   <a>listChannelsResponse_channels</a> - List of the matching channels.
newListChannelsResponse :: Int -> ListChannelsResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of the resource to be
--   retrieved.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Int -> HashMap Text Text -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> -
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newDeleteChannel</a> smart constructor.
data DeleteChannel
DeleteChannel' :: Text -> DeleteChannel

-- | Create a value of <a>DeleteChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteChannel'</a>, <a>deleteChannel_arn</a> - ARN of the
--   channel to be deleted.
newDeleteChannel :: Text -> DeleteChannel

-- | <i>See:</i> <a>newDeleteChannelResponse</a> smart constructor.
data DeleteChannelResponse
DeleteChannelResponse' :: DeleteChannelResponse

-- | Create a value of <a>DeleteChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteChannelResponse :: DeleteChannelResponse

-- | <i>See:</i> <a>newUpdateChannel</a> smart constructor.
data UpdateChannel
UpdateChannel' :: Maybe Bool -> Maybe ChannelLatencyMode -> Maybe Text -> Maybe Text -> Maybe ChannelType -> Text -> UpdateChannel

-- | Create a value of <a>UpdateChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorized:UpdateChannel'</a>, <a>updateChannel_authorized</a>
--   - Whether the channel is private (enabled for playback authorization).
--   
--   <a>$sel:latencyMode:UpdateChannel'</a>,
--   <a>updateChannel_latencyMode</a> - Channel latency mode. Use
--   <tt>NORMAL</tt> to broadcast and deliver live video up to Full HD. Use
--   <tt>LOW</tt> for near-real-time interaction with viewers. (Note: In
--   the Amazon IVS console, <tt>LOW</tt> and <tt>NORMAL</tt> correspond to
--   Ultra-low and Standard, respectively.)
--   
--   <a>$sel:name:UpdateChannel'</a>, <a>updateChannel_name</a> - Channel
--   name.
--   
--   <a>$sel:recordingConfigurationArn:UpdateChannel'</a>,
--   <a>updateChannel_recordingConfigurationArn</a> -
--   Recording-configuration ARN. If this is set to an empty string,
--   recording is disabled. A value other than an empty string indicates
--   that recording is enabled
--   
--   <a>$sel:type':UpdateChannel'</a>, <a>updateChannel_type</a> - Channel
--   type, which determines the allowable resolution and bitrate. /If you
--   exceed the allowable resolution or bitrate, the stream probably will
--   disconnect immediately/. Valid values:
--   
--   <ul>
--   <li><tt>STANDARD</tt>: Multiple qualities are generated from the
--   original input, to automatically give viewers the best experience for
--   their devices and network conditions. Resolution can be up to 1080p
--   and bitrate can be up to 8.5 Mbps. Audio is transcoded only for
--   renditions 360p and below; above that, audio is passed through.</li>
--   <li><tt>BASIC</tt>: Amazon IVS delivers the original input to viewers.
--   The viewer’s video-quality choice is limited to the original input.
--   Resolution can be up to 480p and bitrate can be up to 1.5 Mbps.</li>
--   </ul>
--   
--   <a>$sel:arn:UpdateChannel'</a>, <a>updateChannel_arn</a> - ARN of the
--   channel to be updated.
newUpdateChannel :: Text -> UpdateChannel

-- | <i>See:</i> <a>newUpdateChannelResponse</a> smart constructor.
data UpdateChannelResponse
UpdateChannelResponse' :: Maybe Channel -> Int -> UpdateChannelResponse

-- | Create a value of <a>UpdateChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channel:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_channel</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_httpStatus</a> - The response's http status
--   code.
newUpdateChannelResponse :: Int -> UpdateChannelResponse

-- | <i>See:</i> <a>newGetStreamKey</a> smart constructor.
data GetStreamKey
GetStreamKey' :: Text -> GetStreamKey

-- | Create a value of <a>GetStreamKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetStreamKey'</a>, <a>getStreamKey_arn</a> - ARN for the
--   stream key to be retrieved.
newGetStreamKey :: Text -> GetStreamKey

-- | <i>See:</i> <a>newGetStreamKeyResponse</a> smart constructor.
data GetStreamKeyResponse
GetStreamKeyResponse' :: Maybe StreamKey -> Int -> GetStreamKeyResponse

-- | Create a value of <a>GetStreamKeyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamKey:GetStreamKeyResponse'</a>,
--   <a>getStreamKeyResponse_streamKey</a> -
--   
--   <a>$sel:httpStatus:GetStreamKeyResponse'</a>,
--   <a>getStreamKeyResponse_httpStatus</a> - The response's http status
--   code.
newGetStreamKeyResponse :: Int -> GetStreamKeyResponse

-- | <i>See:</i> <a>newDeletePlaybackKeyPair</a> smart constructor.
data DeletePlaybackKeyPair
DeletePlaybackKeyPair' :: Text -> DeletePlaybackKeyPair

-- | Create a value of <a>DeletePlaybackKeyPair</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeletePlaybackKeyPair'</a>,
--   <a>deletePlaybackKeyPair_arn</a> - ARN of the key pair to be deleted.
newDeletePlaybackKeyPair :: Text -> DeletePlaybackKeyPair

-- | <i>See:</i> <a>newDeletePlaybackKeyPairResponse</a> smart constructor.
data DeletePlaybackKeyPairResponse
DeletePlaybackKeyPairResponse' :: Int -> DeletePlaybackKeyPairResponse

-- | Create a value of <a>DeletePlaybackKeyPairResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeletePlaybackKeyPairResponse'</a>,
--   <a>deletePlaybackKeyPairResponse_httpStatus</a> - The response's http
--   status code.
newDeletePlaybackKeyPairResponse :: Int -> DeletePlaybackKeyPairResponse

-- | <i>See:</i> <a>newBatchGetStreamKey</a> smart constructor.
data BatchGetStreamKey
BatchGetStreamKey' :: NonEmpty Text -> BatchGetStreamKey

-- | Create a value of <a>BatchGetStreamKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arns:BatchGetStreamKey'</a>, <a>batchGetStreamKey_arns</a> -
--   Array of ARNs, one per channel.
newBatchGetStreamKey :: NonEmpty Text -> BatchGetStreamKey

-- | <i>See:</i> <a>newBatchGetStreamKeyResponse</a> smart constructor.
data BatchGetStreamKeyResponse
BatchGetStreamKeyResponse' :: Maybe [StreamKey] -> Maybe [BatchError] -> Int -> BatchGetStreamKeyResponse

-- | Create a value of <a>BatchGetStreamKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamKeys:BatchGetStreamKeyResponse'</a>,
--   <a>batchGetStreamKeyResponse_streamKeys</a> -
--   
--   <a>$sel:errors:BatchGetStreamKeyResponse'</a>,
--   <a>batchGetStreamKeyResponse_errors</a> -
--   
--   <a>$sel:httpStatus:BatchGetStreamKeyResponse'</a>,
--   <a>batchGetStreamKeyResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetStreamKeyResponse :: Int -> BatchGetStreamKeyResponse

-- | <i>See:</i> <a>newGetPlaybackKeyPair</a> smart constructor.
data GetPlaybackKeyPair
GetPlaybackKeyPair' :: Text -> GetPlaybackKeyPair

-- | Create a value of <a>GetPlaybackKeyPair</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetPlaybackKeyPair'</a>, <a>getPlaybackKeyPair_arn</a> -
--   ARN of the key pair to be returned.
newGetPlaybackKeyPair :: Text -> GetPlaybackKeyPair

-- | <i>See:</i> <a>newGetPlaybackKeyPairResponse</a> smart constructor.
data GetPlaybackKeyPairResponse
GetPlaybackKeyPairResponse' :: Maybe PlaybackKeyPair -> Int -> GetPlaybackKeyPairResponse

-- | Create a value of <a>GetPlaybackKeyPairResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPair:GetPlaybackKeyPairResponse'</a>,
--   <a>getPlaybackKeyPairResponse_keyPair</a> -
--   
--   <a>$sel:httpStatus:GetPlaybackKeyPairResponse'</a>,
--   <a>getPlaybackKeyPairResponse_httpStatus</a> - The response's http
--   status code.
newGetPlaybackKeyPairResponse :: Int -> GetPlaybackKeyPairResponse

-- | <i>See:</i> <a>newDeleteRecordingConfiguration</a> smart constructor.
data DeleteRecordingConfiguration
DeleteRecordingConfiguration' :: Text -> DeleteRecordingConfiguration

-- | Create a value of <a>DeleteRecordingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteRecordingConfiguration'</a>,
--   <a>deleteRecordingConfiguration_arn</a> - ARN of the recording
--   configuration to be deleted.
newDeleteRecordingConfiguration :: Text -> DeleteRecordingConfiguration

-- | <i>See:</i> <a>newDeleteRecordingConfigurationResponse</a> smart
--   constructor.
data DeleteRecordingConfigurationResponse
DeleteRecordingConfigurationResponse' :: DeleteRecordingConfigurationResponse

-- | Create a value of <a>DeleteRecordingConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRecordingConfigurationResponse :: DeleteRecordingConfigurationResponse

-- | <i>See:</i> <a>newStopStream</a> smart constructor.
data StopStream
StopStream' :: Text -> StopStream

-- | Create a value of <a>StopStream</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:StopStream'</a>, <a>stopStream_channelArn</a> - ARN
--   of the channel for which the stream is to be stopped.
newStopStream :: Text -> StopStream

-- | <i>See:</i> <a>newStopStreamResponse</a> smart constructor.
data StopStreamResponse
StopStreamResponse' :: Int -> StopStreamResponse

-- | Create a value of <a>StopStreamResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopStreamResponse'</a>,
--   <a>stopStreamResponse_httpStatus</a> - The response's http status
--   code.
newStopStreamResponse :: Int -> StopStreamResponse

-- | <i>See:</i> <a>newCreateChannel</a> smart constructor.
data CreateChannel
CreateChannel' :: Maybe Bool -> Maybe ChannelLatencyMode -> Maybe Text -> Maybe Text -> Maybe ChannelType -> Maybe (HashMap Text Text) -> CreateChannel

-- | Create a value of <a>CreateChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorized:CreateChannel'</a>, <a>createChannel_authorized</a>
--   - Whether the channel is private (enabled for playback authorization).
--   Default: <tt>false</tt>.
--   
--   <a>$sel:latencyMode:CreateChannel'</a>,
--   <a>createChannel_latencyMode</a> - Channel latency mode. Use
--   <tt>NORMAL</tt> to broadcast and deliver live video up to Full HD. Use
--   <tt>LOW</tt> for near-real-time interaction with viewers. (Note: In
--   the Amazon IVS console, <tt>LOW</tt> and <tt>NORMAL</tt> correspond to
--   Ultra-low and Standard, respectively.) Default: <tt>LOW</tt>.
--   
--   <a>$sel:name:CreateChannel'</a>, <a>createChannel_name</a> - Channel
--   name.
--   
--   <a>$sel:recordingConfigurationArn:CreateChannel'</a>,
--   <a>createChannel_recordingConfigurationArn</a> -
--   Recording-configuration ARN. Default: "" (empty string, recording is
--   disabled).
--   
--   <a>$sel:type':CreateChannel'</a>, <a>createChannel_type</a> - Channel
--   type, which determines the allowable resolution and bitrate. /If you
--   exceed the allowable resolution or bitrate, the stream probably will
--   disconnect immediately./ Default: <tt>STANDARD</tt>. Valid values:
--   
--   <ul>
--   <li><tt>STANDARD</tt>: Multiple qualities are generated from the
--   original input, to automatically give viewers the best experience for
--   their devices and network conditions. Resolution can be up to 1080p
--   and bitrate can be up to 8.5 Mbps. Audio is transcoded only for
--   renditions 360p and below; above that, audio is passed through.</li>
--   <li><tt>BASIC</tt>: Amazon IVS delivers the original input to viewers.
--   The viewer’s video-quality choice is limited to the original input.
--   Resolution can be up to 480p and bitrate can be up to 1.5 Mbps.</li>
--   </ul>
--   
--   <a>$sel:tags:CreateChannel'</a>, <a>createChannel_tags</a> - Array of
--   1-50 maps, each of the form <tt>string:string (key:value)</tt>.
newCreateChannel :: CreateChannel

-- | <i>See:</i> <a>newCreateChannelResponse</a> smart constructor.
data CreateChannelResponse
CreateChannelResponse' :: Maybe Channel -> Maybe StreamKey -> Int -> CreateChannelResponse

-- | Create a value of <a>CreateChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channel:CreateChannelResponse'</a>,
--   <a>createChannelResponse_channel</a> -
--   
--   <a>$sel:streamKey:CreateChannelResponse'</a>,
--   <a>createChannelResponse_streamKey</a> -
--   
--   <a>$sel:httpStatus:CreateChannelResponse'</a>,
--   <a>createChannelResponse_httpStatus</a> - The response's http status
--   code.
newCreateChannelResponse :: Int -> CreateChannelResponse

-- | <i>See:</i> <a>newDeleteStreamKey</a> smart constructor.
data DeleteStreamKey
DeleteStreamKey' :: Text -> DeleteStreamKey

-- | Create a value of <a>DeleteStreamKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteStreamKey'</a>, <a>deleteStreamKey_arn</a> - ARN of
--   the stream key to be deleted.
newDeleteStreamKey :: Text -> DeleteStreamKey

-- | <i>See:</i> <a>newDeleteStreamKeyResponse</a> smart constructor.
data DeleteStreamKeyResponse
DeleteStreamKeyResponse' :: DeleteStreamKeyResponse

-- | Create a value of <a>DeleteStreamKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteStreamKeyResponse :: DeleteStreamKeyResponse

-- | <i>See:</i> <a>newGetStream</a> smart constructor.
data GetStream
GetStream' :: Text -> GetStream

-- | Create a value of <a>GetStream</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:GetStream'</a>, <a>getStream_channelArn</a> -
--   Channel ARN for stream to be accessed.
newGetStream :: Text -> GetStream

-- | <i>See:</i> <a>newGetStreamResponse</a> smart constructor.
data GetStreamResponse
GetStreamResponse' :: Maybe Stream -> Int -> GetStreamResponse

-- | Create a value of <a>GetStreamResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stream:GetStreamResponse'</a>, <a>getStreamResponse_stream</a>
--   -
--   
--   <a>$sel:httpStatus:GetStreamResponse'</a>,
--   <a>getStreamResponse_httpStatus</a> - The response's http status code.
newGetStreamResponse :: Int -> GetStreamResponse

-- | <i>See:</i> <a>newListStreamKeys</a> smart constructor.
data ListStreamKeys
ListStreamKeys' :: Maybe Text -> Maybe Natural -> Text -> ListStreamKeys

-- | Create a value of <a>ListStreamKeys</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListStreamKeys'</a>, <a>listStreamKeys_nextToken</a>
--   - The first stream key to retrieve. This is used for pagination; see
--   the <tt>nextToken</tt> response field.
--   
--   <a>$sel:maxResults:ListStreamKeys'</a>,
--   <a>listStreamKeys_maxResults</a> - Maximum number of streamKeys to
--   return. Default: 50.
--   
--   <a>$sel:channelArn:ListStreamKeys'</a>,
--   <a>listStreamKeys_channelArn</a> - Channel ARN used to filter the
--   list.
newListStreamKeys :: Text -> ListStreamKeys

-- | <i>See:</i> <a>newListStreamKeysResponse</a> smart constructor.
data ListStreamKeysResponse
ListStreamKeysResponse' :: Maybe Text -> Int -> [StreamKeySummary] -> ListStreamKeysResponse

-- | Create a value of <a>ListStreamKeysResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListStreamKeys'</a>,
--   <a>listStreamKeysResponse_nextToken</a> - If there are more stream
--   keys than <tt>maxResults</tt>, use <tt>nextToken</tt> in the request
--   to get the next set.
--   
--   <a>$sel:httpStatus:ListStreamKeysResponse'</a>,
--   <a>listStreamKeysResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:streamKeys:ListStreamKeysResponse'</a>,
--   <a>listStreamKeysResponse_streamKeys</a> - List of stream keys.
newListStreamKeysResponse :: Int -> ListStreamKeysResponse

-- | <i>See:</i> <a>newGetChannel</a> smart constructor.
data GetChannel
GetChannel' :: Text -> GetChannel

-- | Create a value of <a>GetChannel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetChannel'</a>, <a>getChannel_arn</a> - ARN of the
--   channel for which the configuration is to be retrieved.
newGetChannel :: Text -> GetChannel

-- | <i>See:</i> <a>newGetChannelResponse</a> smart constructor.
data GetChannelResponse
GetChannelResponse' :: Maybe Channel -> Int -> GetChannelResponse

-- | Create a value of <a>GetChannelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channel:GetChannelResponse'</a>,
--   <a>getChannelResponse_channel</a> -
--   
--   <a>$sel:httpStatus:GetChannelResponse'</a>,
--   <a>getChannelResponse_httpStatus</a> - The response's http status
--   code.
newGetChannelResponse :: Int -> GetChannelResponse

-- | <i>See:</i> <a>newListStreams</a> smart constructor.
data ListStreams
ListStreams' :: Maybe Text -> Maybe Natural -> ListStreams

-- | Create a value of <a>ListStreams</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListStreams'</a>, <a>listStreams_nextToken</a> - The
--   first stream to retrieve. This is used for pagination; see the
--   <tt>nextToken</tt> response field.
--   
--   <a>$sel:maxResults:ListStreams'</a>, <a>listStreams_maxResults</a> -
--   Maximum number of streams to return. Default: 50.
newListStreams :: ListStreams

-- | <i>See:</i> <a>newListStreamsResponse</a> smart constructor.
data ListStreamsResponse
ListStreamsResponse' :: Maybe Text -> Int -> [StreamSummary] -> ListStreamsResponse

-- | Create a value of <a>ListStreamsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListStreams'</a>,
--   <a>listStreamsResponse_nextToken</a> - If there are more streams than
--   <tt>maxResults</tt>, use <tt>nextToken</tt> in the request to get the
--   next set.
--   
--   <a>$sel:httpStatus:ListStreamsResponse'</a>,
--   <a>listStreamsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:streams:ListStreamsResponse'</a>,
--   <a>listStreamsResponse_streams</a> - List of streams.
newListStreamsResponse :: Int -> ListStreamsResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   ARN of the resource for which tags are to be added or updated.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - Array of tags
--   to be added or updated.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newGetRecordingConfiguration</a> smart constructor.
data GetRecordingConfiguration
GetRecordingConfiguration' :: Text -> GetRecordingConfiguration

-- | Create a value of <a>GetRecordingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetRecordingConfiguration'</a>,
--   <a>getRecordingConfiguration_arn</a> - ARN of the recording
--   configuration to be retrieved.
newGetRecordingConfiguration :: Text -> GetRecordingConfiguration

-- | <i>See:</i> <a>newGetRecordingConfigurationResponse</a> smart
--   constructor.
data GetRecordingConfigurationResponse
GetRecordingConfigurationResponse' :: Maybe RecordingConfiguration -> Int -> GetRecordingConfigurationResponse

-- | Create a value of <a>GetRecordingConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordingConfiguration:GetRecordingConfigurationResponse'</a>,
--   <a>getRecordingConfigurationResponse_recordingConfiguration</a> -
--   
--   <a>$sel:httpStatus:GetRecordingConfigurationResponse'</a>,
--   <a>getRecordingConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newGetRecordingConfigurationResponse :: Int -> GetRecordingConfigurationResponse

-- | <i>See:</i> <a>newListPlaybackKeyPairs</a> smart constructor.
data ListPlaybackKeyPairs
ListPlaybackKeyPairs' :: Maybe Text -> Maybe Natural -> ListPlaybackKeyPairs

-- | Create a value of <a>ListPlaybackKeyPairs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPlaybackKeyPairs'</a>,
--   <a>listPlaybackKeyPairs_nextToken</a> - Maximum number of key pairs to
--   return.
--   
--   <a>$sel:maxResults:ListPlaybackKeyPairs'</a>,
--   <a>listPlaybackKeyPairs_maxResults</a> - The first key pair to
--   retrieve. This is used for pagination; see the <tt>nextToken</tt>
--   response field. Default: 50.
newListPlaybackKeyPairs :: ListPlaybackKeyPairs

-- | <i>See:</i> <a>newListPlaybackKeyPairsResponse</a> smart constructor.
data ListPlaybackKeyPairsResponse
ListPlaybackKeyPairsResponse' :: Maybe Text -> Int -> [PlaybackKeyPairSummary] -> ListPlaybackKeyPairsResponse

-- | Create a value of <a>ListPlaybackKeyPairsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPlaybackKeyPairs'</a>,
--   <a>listPlaybackKeyPairsResponse_nextToken</a> - If there are more key
--   pairs than <tt>maxResults</tt>, use <tt>nextToken</tt> in the request
--   to get the next set.
--   
--   <a>$sel:httpStatus:ListPlaybackKeyPairsResponse'</a>,
--   <a>listPlaybackKeyPairsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:keyPairs:ListPlaybackKeyPairsResponse'</a>,
--   <a>listPlaybackKeyPairsResponse_keyPairs</a> - List of key pairs.
newListPlaybackKeyPairsResponse :: Int -> ListPlaybackKeyPairsResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - ARN of the resource for which tags
--   are to be removed.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> -
--   Array of tags to be removed.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newCreateRecordingConfiguration</a> smart constructor.
data CreateRecordingConfiguration
CreateRecordingConfiguration' :: Maybe Text -> Maybe (HashMap Text Text) -> DestinationConfiguration -> CreateRecordingConfiguration

-- | Create a value of <a>CreateRecordingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateRecordingConfiguration'</a>,
--   <a>createRecordingConfiguration_name</a> - Recording-configuration
--   name. The value does not need to be unique.
--   
--   <a>$sel:tags:CreateRecordingConfiguration'</a>,
--   <a>createRecordingConfiguration_tags</a> - Array of 1-50 maps, each of
--   the form <tt>string:string (key:value)</tt>.
--   
--   <a>$sel:destinationConfiguration:CreateRecordingConfiguration'</a>,
--   <a>createRecordingConfiguration_destinationConfiguration</a> - A
--   complex type that contains a destination configuration for where
--   recorded video will be stored.
newCreateRecordingConfiguration :: DestinationConfiguration -> CreateRecordingConfiguration

-- | <i>See:</i> <a>newCreateRecordingConfigurationResponse</a> smart
--   constructor.
data CreateRecordingConfigurationResponse
CreateRecordingConfigurationResponse' :: Maybe RecordingConfiguration -> Int -> CreateRecordingConfigurationResponse

-- | Create a value of <a>CreateRecordingConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:recordingConfiguration:CreateRecordingConfigurationResponse'</a>,
--   <a>createRecordingConfigurationResponse_recordingConfiguration</a> -
--   
--   <a>$sel:httpStatus:CreateRecordingConfigurationResponse'</a>,
--   <a>createRecordingConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newCreateRecordingConfigurationResponse :: Int -> CreateRecordingConfigurationResponse

-- | <i>See:</i> <a>newBatchGetChannel</a> smart constructor.
data BatchGetChannel
BatchGetChannel' :: NonEmpty Text -> BatchGetChannel

-- | Create a value of <a>BatchGetChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arns:BatchGetChannel'</a>, <a>batchGetChannel_arns</a> - Array
--   of ARNs, one per channel.
newBatchGetChannel :: NonEmpty Text -> BatchGetChannel

-- | <i>See:</i> <a>newBatchGetChannelResponse</a> smart constructor.
data BatchGetChannelResponse
BatchGetChannelResponse' :: Maybe [Channel] -> Maybe [BatchError] -> Int -> BatchGetChannelResponse

-- | Create a value of <a>BatchGetChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channels:BatchGetChannelResponse'</a>,
--   <a>batchGetChannelResponse_channels</a> -
--   
--   <a>$sel:errors:BatchGetChannelResponse'</a>,
--   <a>batchGetChannelResponse_errors</a> - Each error object is related
--   to a specific ARN in the request.
--   
--   <a>$sel:httpStatus:BatchGetChannelResponse'</a>,
--   <a>batchGetChannelResponse_httpStatus</a> - The response's http status
--   code.
newBatchGetChannelResponse :: Int -> BatchGetChannelResponse
newtype ChannelLatencyMode
ChannelLatencyMode' :: Text -> ChannelLatencyMode
[fromChannelLatencyMode] :: ChannelLatencyMode -> Text
pattern ChannelLatencyMode_LOW :: ChannelLatencyMode
pattern ChannelLatencyMode_NORMAL :: ChannelLatencyMode
newtype ChannelType
ChannelType' :: Text -> ChannelType
[fromChannelType] :: ChannelType -> Text
pattern ChannelType_BASIC :: ChannelType
pattern ChannelType_STANDARD :: ChannelType
newtype RecordingConfigurationState
RecordingConfigurationState' :: Text -> RecordingConfigurationState
[fromRecordingConfigurationState] :: RecordingConfigurationState -> Text
pattern RecordingConfigurationState_ACTIVE :: RecordingConfigurationState
pattern RecordingConfigurationState_CREATE_FAILED :: RecordingConfigurationState
pattern RecordingConfigurationState_CREATING :: RecordingConfigurationState
newtype StreamHealth
StreamHealth' :: Text -> StreamHealth
[fromStreamHealth] :: StreamHealth -> Text
pattern StreamHealth_HEALTHY :: StreamHealth
pattern StreamHealth_STARVING :: StreamHealth
pattern StreamHealth_UNKNOWN :: StreamHealth
newtype StreamState
StreamState' :: Text -> StreamState
[fromStreamState] :: StreamState -> Text
pattern StreamState_LIVE :: StreamState
pattern StreamState_OFFLINE :: StreamState

-- | Error related to a specific channel, specified by its ARN.
--   
--   <i>See:</i> <a>newBatchError</a> smart constructor.
data BatchError
BatchError' :: Maybe Text -> Maybe Text -> Maybe Text -> BatchError

-- | Create a value of <a>BatchError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:BatchError'</a>, <a>batchError_arn</a> - Channel ARN.
--   
--   <a>$sel:code:BatchError'</a>, <a>batchError_code</a> - Error code.
--   
--   <a>$sel:message:BatchError'</a>, <a>batchError_message</a> - Error
--   message, determined by the application.
newBatchError :: BatchError

-- | Object specifying a channel.
--   
--   <i>See:</i> <a>newChannel</a> smart constructor.
data Channel
Channel' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe ChannelLatencyMode -> Maybe Text -> Maybe Text -> Maybe ChannelType -> Maybe (HashMap Text Text) -> Maybe Text -> Channel

-- | Create a value of <a>Channel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playbackUrl:Channel'</a>, <a>channel_playbackUrl</a> - Channel
--   playback URL.
--   
--   <a>$sel:authorized:Channel'</a>, <a>channel_authorized</a> - Whether
--   the channel is private (enabled for playback authorization). Default:
--   <tt>false</tt>.
--   
--   <a>$sel:arn:Channel'</a>, <a>channel_arn</a> - Channel ARN.
--   
--   <a>$sel:latencyMode:Channel'</a>, <a>channel_latencyMode</a> - Channel
--   latency mode. Use <tt>NORMAL</tt> to broadcast and deliver live video
--   up to Full HD. Use <tt>LOW</tt> for near-real-time interaction with
--   viewers. Default: <tt>LOW</tt>. (Note: In the Amazon IVS console,
--   <tt>LOW</tt> and <tt>NORMAL</tt> correspond to Ultra-low and Standard,
--   respectively.)
--   
--   <a>$sel:name:Channel'</a>, <a>channel_name</a> - Channel name.
--   
--   <a>$sel:recordingConfigurationArn:Channel'</a>,
--   <a>channel_recordingConfigurationArn</a> - Recording-configuration
--   ARN. A value other than an empty string indicates that recording is
--   enabled. Default: "" (empty string, recording is disabled).
--   
--   <a>$sel:type':Channel'</a>, <a>channel_type</a> - Channel type, which
--   determines the allowable resolution and bitrate. /If you exceed the
--   allowable resolution or bitrate, the stream probably will disconnect
--   immediately./ Default: <tt>STANDARD</tt>. Valid values:
--   
--   <ul>
--   <li><tt>STANDARD</tt>: Multiple qualities are generated from the
--   original input, to automatically give viewers the best experience for
--   their devices and network conditions. Resolution can be up to 1080p
--   and bitrate can be up to 8.5 Mbps. Audio is transcoded only for
--   renditions 360p and below; above that, audio is passed through.</li>
--   <li><tt>BASIC</tt>: Amazon IVS delivers the original input to viewers.
--   The viewer’s video-quality choice is limited to the original input.
--   Resolution can be up to 480p and bitrate can be up to 1.5 Mbps.</li>
--   </ul>
--   
--   <a>$sel:tags:Channel'</a>, <a>channel_tags</a> - Array of 1-50 maps,
--   each of the form <tt>string:string (key:value)</tt>.
--   
--   <a>$sel:ingestEndpoint:Channel'</a>, <a>channel_ingestEndpoint</a> -
--   Channel ingest endpoint, part of the definition of an ingest server,
--   used when you set up streaming software.
newChannel :: Channel

-- | Summary information about a channel.
--   
--   <i>See:</i> <a>newChannelSummary</a> smart constructor.
data ChannelSummary
ChannelSummary' :: Maybe Bool -> Maybe Text -> Maybe ChannelLatencyMode -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> ChannelSummary

-- | Create a value of <a>ChannelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorized:ChannelSummary'</a>,
--   <a>channelSummary_authorized</a> - Whether the channel is private
--   (enabled for playback authorization). Default: <tt>false</tt>.
--   
--   <a>$sel:arn:ChannelSummary'</a>, <a>channelSummary_arn</a> - Channel
--   ARN.
--   
--   <a>$sel:latencyMode:ChannelSummary'</a>,
--   <a>channelSummary_latencyMode</a> - Channel latency mode. Use
--   <tt>NORMAL</tt> to broadcast and deliver live video up to Full HD. Use
--   <tt>LOW</tt> for near-real-time interaction with viewers. Default:
--   <tt>LOW</tt>. (Note: In the Amazon IVS console, <tt>LOW</tt> and
--   <tt>NORMAL</tt> correspond to Ultra-low and Standard, respectively.)
--   
--   <a>$sel:name:ChannelSummary'</a>, <a>channelSummary_name</a> - Channel
--   name.
--   
--   <a>$sel:recordingConfigurationArn:ChannelSummary'</a>,
--   <a>channelSummary_recordingConfigurationArn</a> -
--   Recording-configuration ARN. A value other than an empty string
--   indicates that recording is enabled. Default: "" (empty string,
--   recording is disabled).
--   
--   <a>$sel:tags:ChannelSummary'</a>, <a>channelSummary_tags</a> - Array
--   of 1-50 maps, each of the form <tt>string:string (key:value)</tt>.
newChannelSummary :: ChannelSummary

-- | A complex type that describes a location where recorded videos will be
--   stored. Each member represents a type of destination configuration.
--   For recording, you define one and only one type of destination
--   configuration.
--   
--   <i>See:</i> <a>newDestinationConfiguration</a> smart constructor.
data DestinationConfiguration
DestinationConfiguration' :: Maybe S3DestinationConfiguration -> DestinationConfiguration

-- | Create a value of <a>DestinationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3:DestinationConfiguration'</a>,
--   <a>destinationConfiguration_s3</a> - An S3 destination configuration
--   where recorded videos will be stored.
newDestinationConfiguration :: DestinationConfiguration

-- | A key pair used to sign and validate a playback authorization token.
--   
--   <i>See:</i> <a>newPlaybackKeyPair</a> smart constructor.
data PlaybackKeyPair
PlaybackKeyPair' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> PlaybackKeyPair

-- | Create a value of <a>PlaybackKeyPair</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PlaybackKeyPair'</a>, <a>playbackKeyPair_arn</a> -
--   Key-pair ARN.
--   
--   <a>$sel:fingerprint:PlaybackKeyPair'</a>,
--   <a>playbackKeyPair_fingerprint</a> - Key-pair identifier.
--   
--   <a>$sel:name:PlaybackKeyPair'</a>, <a>playbackKeyPair_name</a> -
--   Playback-key-pair name. The value does not need to be unique.
--   
--   <a>$sel:tags:PlaybackKeyPair'</a>, <a>playbackKeyPair_tags</a> - Array
--   of 1-50 maps, each of the form <tt>string:string (key:value)</tt>.
newPlaybackKeyPair :: PlaybackKeyPair

-- | Summary information about a playback key pair.
--   
--   <i>See:</i> <a>newPlaybackKeyPairSummary</a> smart constructor.
data PlaybackKeyPairSummary
PlaybackKeyPairSummary' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> PlaybackKeyPairSummary

-- | Create a value of <a>PlaybackKeyPairSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PlaybackKeyPairSummary'</a>,
--   <a>playbackKeyPairSummary_arn</a> - Key-pair ARN.
--   
--   <a>$sel:name:PlaybackKeyPairSummary'</a>,
--   <a>playbackKeyPairSummary_name</a> - Playback-key-pair name. The value
--   does not need to be unique.
--   
--   <a>$sel:tags:PlaybackKeyPairSummary'</a>,
--   <a>playbackKeyPairSummary_tags</a> - Array of 1-50 maps, each of the
--   form <tt>string:string (key:value)</tt>.
newPlaybackKeyPairSummary :: PlaybackKeyPairSummary

-- | An object representing a configuration to record a channel stream.
--   
--   <i>See:</i> <a>newRecordingConfiguration</a> smart constructor.
data RecordingConfiguration
RecordingConfiguration' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> DestinationConfiguration -> RecordingConfigurationState -> RecordingConfiguration

-- | Create a value of <a>RecordingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:RecordingConfiguration'</a>,
--   <a>recordingConfiguration_name</a> - Recording-configuration name. The
--   value does not need to be unique.
--   
--   <a>$sel:tags:RecordingConfiguration'</a>,
--   <a>recordingConfiguration_tags</a> - Array of 1-50 maps, each of the
--   form <tt>string:string (key:value)</tt>.
--   
--   <a>$sel:arn:RecordingConfiguration'</a>,
--   <a>recordingConfiguration_arn</a> - Recording-configuration ARN.
--   
--   <a>$sel:destinationConfiguration:RecordingConfiguration'</a>,
--   <a>recordingConfiguration_destinationConfiguration</a> - A complex
--   type that contains information about where recorded video will be
--   stored.
--   
--   <a>$sel:state:RecordingConfiguration'</a>,
--   <a>recordingConfiguration_state</a> - Indicates the current state of
--   the recording configuration. When the state is <tt>ACTIVE</tt>, the
--   configuration is ready for recording a channel stream.
newRecordingConfiguration :: Text -> DestinationConfiguration -> RecordingConfigurationState -> RecordingConfiguration

-- | Summary information about a RecordingConfiguration.
--   
--   <i>See:</i> <a>newRecordingConfigurationSummary</a> smart constructor.
data RecordingConfigurationSummary
RecordingConfigurationSummary' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> DestinationConfiguration -> RecordingConfigurationState -> RecordingConfigurationSummary

-- | Create a value of <a>RecordingConfigurationSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:RecordingConfigurationSummary'</a>,
--   <a>recordingConfigurationSummary_name</a> - Recording-configuration
--   name. The value does not need to be unique.
--   
--   <a>$sel:tags:RecordingConfigurationSummary'</a>,
--   <a>recordingConfigurationSummary_tags</a> - Array of 1-50 maps, each
--   of the form <tt>string:string (key:value)</tt>.
--   
--   <a>$sel:arn:RecordingConfigurationSummary'</a>,
--   <a>recordingConfigurationSummary_arn</a> - Recording-configuration
--   ARN.
--   
--   <a>$sel:destinationConfiguration:RecordingConfigurationSummary'</a>,
--   <a>recordingConfigurationSummary_destinationConfiguration</a> - A
--   complex type that contains information about where recorded video will
--   be stored.
--   
--   <a>$sel:state:RecordingConfigurationSummary'</a>,
--   <a>recordingConfigurationSummary_state</a> - Indicates the current
--   state of the recording configuration. When the state is
--   <tt>ACTIVE</tt>, the configuration is ready for recording a channel
--   stream.
newRecordingConfigurationSummary :: Text -> DestinationConfiguration -> RecordingConfigurationState -> RecordingConfigurationSummary

-- | A complex type that describes an S3 location where recorded videos
--   will be stored.
--   
--   <i>See:</i> <a>newS3DestinationConfiguration</a> smart constructor.
data S3DestinationConfiguration
S3DestinationConfiguration' :: Text -> S3DestinationConfiguration

-- | Create a value of <a>S3DestinationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucketName:S3DestinationConfiguration'</a>,
--   <a>s3DestinationConfiguration_bucketName</a> - Location (S3 bucket
--   name) where recorded videos will be stored.
newS3DestinationConfiguration :: Text -> S3DestinationConfiguration

-- | Specifies a live video stream that has been ingested and distributed.
--   
--   <i>See:</i> <a>newStream</a> smart constructor.
data Stream
Stream' :: Maybe Text -> Maybe StreamState -> Maybe POSIX -> Maybe Text -> Maybe Integer -> Maybe StreamHealth -> Stream

-- | Create a value of <a>Stream</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:playbackUrl:Stream'</a>, <a>stream_playbackUrl</a> - URL of
--   the master playlist, required by the video player to play the HLS
--   stream.
--   
--   <a>$sel:state:Stream'</a>, <a>stream_state</a> - The stream’s state.
--   
--   <a>$sel:startTime:Stream'</a>, <a>stream_startTime</a> - Time of the
--   stream’s start. This is an ISO 8601 timestamp returned as a string.
--   
--   <a>$sel:channelArn:Stream'</a>, <a>stream_channelArn</a> - Channel ARN
--   for the stream.
--   
--   <a>$sel:viewerCount:Stream'</a>, <a>stream_viewerCount</a> - A count
--   of concurrent views of the stream. Typically, a new view appears in
--   <tt>viewerCount</tt> within 15 seconds of when video playback starts
--   and a view is removed from <tt>viewerCount</tt> within 1 minute of
--   when video playback ends. A value of -1 indicates that the request
--   timed out; in this case, retry.
--   
--   <a>$sel:health:Stream'</a>, <a>stream_health</a> - The stream’s
--   health.
newStream :: Stream

-- | Object specifying a stream key.
--   
--   <i>See:</i> <a>newStreamKey</a> smart constructor.
data StreamKey
StreamKey' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe Text -> Maybe (HashMap Text Text) -> StreamKey

-- | Create a value of <a>StreamKey</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:StreamKey'</a>, <a>streamKey_arn</a> - Stream-key ARN.
--   
--   <a>$sel:value:StreamKey'</a>, <a>streamKey_value</a> - Stream-key
--   value.
--   
--   <a>$sel:channelArn:StreamKey'</a>, <a>streamKey_channelArn</a> -
--   Channel ARN for the stream.
--   
--   <a>$sel:tags:StreamKey'</a>, <a>streamKey_tags</a> - Array of 1-50
--   maps, each of the form <tt>string:string (key:value)</tt>.
newStreamKey :: StreamKey

-- | Summary information about a stream key.
--   
--   <i>See:</i> <a>newStreamKeySummary</a> smart constructor.
data StreamKeySummary
StreamKeySummary' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> StreamKeySummary

-- | Create a value of <a>StreamKeySummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:StreamKeySummary'</a>, <a>streamKeySummary_arn</a> -
--   Stream-key ARN.
--   
--   <a>$sel:channelArn:StreamKeySummary'</a>,
--   <a>streamKeySummary_channelArn</a> - Channel ARN for the stream.
--   
--   <a>$sel:tags:StreamKeySummary'</a>, <a>streamKeySummary_tags</a> -
--   Array of 1-50 maps, each of the form <tt>string:string
--   (key:value)</tt>.
newStreamKeySummary :: StreamKeySummary

-- | Summary information about a stream.
--   
--   <i>See:</i> <a>newStreamSummary</a> smart constructor.
data StreamSummary
StreamSummary' :: Maybe StreamState -> Maybe POSIX -> Maybe Text -> Maybe Integer -> Maybe StreamHealth -> StreamSummary

-- | Create a value of <a>StreamSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:StreamSummary'</a>, <a>streamSummary_state</a> - The
--   stream’s state.
--   
--   <a>$sel:startTime:StreamSummary'</a>, <a>streamSummary_startTime</a> -
--   Time of the stream’s start. This is an ISO 8601 timestamp returned as
--   a string.
--   
--   <a>$sel:channelArn:StreamSummary'</a>, <a>streamSummary_channelArn</a>
--   - Channel ARN for the stream.
--   
--   <a>$sel:viewerCount:StreamSummary'</a>,
--   <a>streamSummary_viewerCount</a> - A count of concurrent views of the
--   stream. Typically, a new view appears in <tt>viewerCount</tt> within
--   15 seconds of when video playback starts and a view is removed from
--   <tt>viewerCount</tt> within 1 minute of when video playback ends. A
--   value of -1 indicates that the request timed out; in this case, retry.
--   
--   <a>$sel:health:StreamSummary'</a>, <a>streamSummary_health</a> - The
--   stream’s health.
newStreamSummary :: StreamSummary
