-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-robomakerZSamazonka-robomaker
@version 2.0


module Amazonka.RobOMaker.Types.Architecture
newtype Architecture
Architecture' :: Text -> Architecture
[fromArchitecture] :: Architecture -> Text
pattern Architecture_ARM64 :: Architecture
pattern Architecture_ARMHF :: Architecture
pattern Architecture_X86_64 :: Architecture
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.Architecture.Architecture
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.Architecture.Architecture
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.Architecture.Architecture
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.Architecture.Architecture
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.Architecture.Architecture
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.Architecture.Architecture
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.Architecture.Architecture
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.Architecture.Architecture
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.Architecture.Architecture
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.Architecture.Architecture
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.Architecture.Architecture
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.Architecture.Architecture
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.Architecture.Architecture
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.Architecture.Architecture
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.Architecture.Architecture
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.Architecture.Architecture
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.Architecture.Architecture
instance GHC.Read.Read Amazonka.RobOMaker.Types.Architecture.Architecture
instance GHC.Show.Show Amazonka.RobOMaker.Types.Architecture.Architecture


module Amazonka.RobOMaker.Types.BatchPolicy

-- | Information about the batch policy.
--   
--   <i>See:</i> <a>newBatchPolicy</a> smart constructor.
data BatchPolicy
BatchPolicy' :: Maybe Integer -> Maybe Int -> BatchPolicy

-- | The amount of time, in seconds, to wait for the batch to complete.
--   
--   If a batch times out, and there are pending requests that were failing
--   due to an internal failure (like <tt>InternalServiceError</tt>), they
--   will be moved to the failed list and the batch status will be
--   <tt>Failed</tt>. If the pending requests were failing for any other
--   reason, the failed pending requests will be moved to the failed list
--   and the batch status will be <tt>TimedOut</tt>.
[$sel:timeoutInSeconds:BatchPolicy'] :: BatchPolicy -> Maybe Integer

-- | The number of active simulation jobs create as part of the batch that
--   can be in an active state at the same time.
--   
--   Active states include: <tt>Pending</tt>,<tt>Preparing</tt>,
--   <tt>Running</tt>, <tt>Restarting</tt>, <tt>RunningFailed</tt> and
--   <tt>Terminating</tt>. All other states are terminal states.
[$sel:maxConcurrency:BatchPolicy'] :: BatchPolicy -> Maybe Int

-- | Create a value of <a>BatchPolicy</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeoutInSeconds:BatchPolicy'</a>,
--   <a>batchPolicy_timeoutInSeconds</a> - The amount of time, in seconds,
--   to wait for the batch to complete.
--   
--   If a batch times out, and there are pending requests that were failing
--   due to an internal failure (like <tt>InternalServiceError</tt>), they
--   will be moved to the failed list and the batch status will be
--   <tt>Failed</tt>. If the pending requests were failing for any other
--   reason, the failed pending requests will be moved to the failed list
--   and the batch status will be <tt>TimedOut</tt>.
--   
--   <a>$sel:maxConcurrency:BatchPolicy'</a>,
--   <a>batchPolicy_maxConcurrency</a> - The number of active simulation
--   jobs create as part of the batch that can be in an active state at the
--   same time.
--   
--   Active states include: <tt>Pending</tt>,<tt>Preparing</tt>,
--   <tt>Running</tt>, <tt>Restarting</tt>, <tt>RunningFailed</tt> and
--   <tt>Terminating</tt>. All other states are terminal states.
newBatchPolicy :: BatchPolicy

-- | The amount of time, in seconds, to wait for the batch to complete.
--   
--   If a batch times out, and there are pending requests that were failing
--   due to an internal failure (like <tt>InternalServiceError</tt>), they
--   will be moved to the failed list and the batch status will be
--   <tt>Failed</tt>. If the pending requests were failing for any other
--   reason, the failed pending requests will be moved to the failed list
--   and the batch status will be <tt>TimedOut</tt>.
batchPolicy_timeoutInSeconds :: Lens' BatchPolicy (Maybe Integer)

-- | The number of active simulation jobs create as part of the batch that
--   can be in an active state at the same time.
--   
--   Active states include: <tt>Pending</tt>,<tt>Preparing</tt>,
--   <tt>Running</tt>, <tt>Restarting</tt>, <tt>RunningFailed</tt> and
--   <tt>Terminating</tt>. All other states are terminal states.
batchPolicy_maxConcurrency :: Lens' BatchPolicy (Maybe Int)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.BatchPolicy.BatchPolicy
instance GHC.Show.Show Amazonka.RobOMaker.Types.BatchPolicy.BatchPolicy
instance GHC.Read.Read Amazonka.RobOMaker.Types.BatchPolicy.BatchPolicy
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.BatchPolicy.BatchPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.BatchPolicy.BatchPolicy
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.BatchPolicy.BatchPolicy
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.BatchPolicy.BatchPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.BatchPolicy.BatchPolicy


module Amazonka.RobOMaker.Types.ComputeType
newtype ComputeType
ComputeType' :: Text -> ComputeType
[fromComputeType] :: ComputeType -> Text
pattern ComputeType_CPU :: ComputeType
pattern ComputeType_GPU_AND_CPU :: ComputeType
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.ComputeType.ComputeType
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.ComputeType.ComputeType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.ComputeType.ComputeType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.ComputeType.ComputeType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.ComputeType.ComputeType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.ComputeType.ComputeType
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.ComputeType.ComputeType
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.ComputeType.ComputeType
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.ComputeType.ComputeType
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.ComputeType.ComputeType
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.ComputeType.ComputeType
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.ComputeType.ComputeType
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.ComputeType.ComputeType
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.ComputeType.ComputeType
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.ComputeType.ComputeType
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.ComputeType.ComputeType
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.ComputeType.ComputeType
instance GHC.Read.Read Amazonka.RobOMaker.Types.ComputeType.ComputeType
instance GHC.Show.Show Amazonka.RobOMaker.Types.ComputeType.ComputeType


module Amazonka.RobOMaker.Types.ComputeResponse

-- | Compute information for the simulation job
--   
--   <i>See:</i> <a>newComputeResponse</a> smart constructor.
data ComputeResponse
ComputeResponse' :: Maybe Natural -> Maybe Natural -> Maybe ComputeType -> ComputeResponse

-- | The simulation unit limit. Your simulation is allocated CPU and memory
--   proportional to the supplied simulation unit limit. A simulation unit
--   is 1 vcpu and 2GB of memory. You are only billed for the SU
--   utilization you consume up to the maximum value provided. The default
--   is 15.
[$sel:simulationUnitLimit:ComputeResponse'] :: ComputeResponse -> Maybe Natural

-- | Compute GPU unit limit for the simulation job. It is the same as the
--   number of GPUs allocated to the SimulationJob.
[$sel:gpuUnitLimit:ComputeResponse'] :: ComputeResponse -> Maybe Natural

-- | Compute type response information for the simulation job.
[$sel:computeType:ComputeResponse'] :: ComputeResponse -> Maybe ComputeType

-- | Create a value of <a>ComputeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:simulationUnitLimit:ComputeResponse'</a>,
--   <a>computeResponse_simulationUnitLimit</a> - The simulation unit
--   limit. Your simulation is allocated CPU and memory proportional to the
--   supplied simulation unit limit. A simulation unit is 1 vcpu and 2GB of
--   memory. You are only billed for the SU utilization you consume up to
--   the maximum value provided. The default is 15.
--   
--   <a>$sel:gpuUnitLimit:ComputeResponse'</a>,
--   <a>computeResponse_gpuUnitLimit</a> - Compute GPU unit limit for the
--   simulation job. It is the same as the number of GPUs allocated to the
--   SimulationJob.
--   
--   <a>$sel:computeType:ComputeResponse'</a>,
--   <a>computeResponse_computeType</a> - Compute type response information
--   for the simulation job.
newComputeResponse :: ComputeResponse

-- | The simulation unit limit. Your simulation is allocated CPU and memory
--   proportional to the supplied simulation unit limit. A simulation unit
--   is 1 vcpu and 2GB of memory. You are only billed for the SU
--   utilization you consume up to the maximum value provided. The default
--   is 15.
computeResponse_simulationUnitLimit :: Lens' ComputeResponse (Maybe Natural)

-- | Compute GPU unit limit for the simulation job. It is the same as the
--   number of GPUs allocated to the SimulationJob.
computeResponse_gpuUnitLimit :: Lens' ComputeResponse (Maybe Natural)

-- | Compute type response information for the simulation job.
computeResponse_computeType :: Lens' ComputeResponse (Maybe ComputeType)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.ComputeResponse.ComputeResponse
instance GHC.Show.Show Amazonka.RobOMaker.Types.ComputeResponse.ComputeResponse
instance GHC.Read.Read Amazonka.RobOMaker.Types.ComputeResponse.ComputeResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.ComputeResponse.ComputeResponse
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.ComputeResponse.ComputeResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.ComputeResponse.ComputeResponse
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.ComputeResponse.ComputeResponse


module Amazonka.RobOMaker.Types.Compute

-- | Compute information for the simulation job.
--   
--   <i>See:</i> <a>newCompute</a> smart constructor.
data Compute
Compute' :: Maybe Natural -> Maybe Natural -> Maybe ComputeType -> Compute

-- | The simulation unit limit. Your simulation is allocated CPU and memory
--   proportional to the supplied simulation unit limit. A simulation unit
--   is 1 vcpu and 2GB of memory. You are only billed for the SU
--   utilization you consume up to the maximum value provided. The default
--   is 15.
[$sel:simulationUnitLimit:Compute'] :: Compute -> Maybe Natural

-- | Compute GPU unit limit for the simulation job. It is the same as the
--   number of GPUs allocated to the SimulationJob.
[$sel:gpuUnitLimit:Compute'] :: Compute -> Maybe Natural

-- | Compute type information for the simulation job.
[$sel:computeType:Compute'] :: Compute -> Maybe ComputeType

-- | Create a value of <a>Compute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:simulationUnitLimit:Compute'</a>,
--   <a>compute_simulationUnitLimit</a> - The simulation unit limit. Your
--   simulation is allocated CPU and memory proportional to the supplied
--   simulation unit limit. A simulation unit is 1 vcpu and 2GB of memory.
--   You are only billed for the SU utilization you consume up to the
--   maximum value provided. The default is 15.
--   
--   <a>$sel:gpuUnitLimit:Compute'</a>, <a>compute_gpuUnitLimit</a> -
--   Compute GPU unit limit for the simulation job. It is the same as the
--   number of GPUs allocated to the SimulationJob.
--   
--   <a>$sel:computeType:Compute'</a>, <a>compute_computeType</a> - Compute
--   type information for the simulation job.
newCompute :: Compute

-- | The simulation unit limit. Your simulation is allocated CPU and memory
--   proportional to the supplied simulation unit limit. A simulation unit
--   is 1 vcpu and 2GB of memory. You are only billed for the SU
--   utilization you consume up to the maximum value provided. The default
--   is 15.
compute_simulationUnitLimit :: Lens' Compute (Maybe Natural)

-- | Compute GPU unit limit for the simulation job. It is the same as the
--   number of GPUs allocated to the SimulationJob.
compute_gpuUnitLimit :: Lens' Compute (Maybe Natural)

-- | Compute type information for the simulation job.
compute_computeType :: Lens' Compute (Maybe ComputeType)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.Compute.Compute
instance GHC.Show.Show Amazonka.RobOMaker.Types.Compute.Compute
instance GHC.Read.Read Amazonka.RobOMaker.Types.Compute.Compute
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.Compute.Compute
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.Compute.Compute
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.Compute.Compute
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.Compute.Compute
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.Compute.Compute


module Amazonka.RobOMaker.Types.DataSourceType
newtype DataSourceType
DataSourceType' :: Text -> DataSourceType
[fromDataSourceType] :: DataSourceType -> Text
pattern DataSourceType_Archive :: DataSourceType
pattern DataSourceType_File :: DataSourceType
pattern DataSourceType_Prefix :: DataSourceType
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.DataSourceType.DataSourceType
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.DataSourceType.DataSourceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.DataSourceType.DataSourceType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.DataSourceType.DataSourceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.DataSourceType.DataSourceType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.DataSourceType.DataSourceType
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.DataSourceType.DataSourceType
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.DataSourceType.DataSourceType
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.DataSourceType.DataSourceType
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.DataSourceType.DataSourceType
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.DataSourceType.DataSourceType
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.DataSourceType.DataSourceType
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.DataSourceType.DataSourceType
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.DataSourceType.DataSourceType
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.DataSourceType.DataSourceType
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.DataSourceType.DataSourceType
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.DataSourceType.DataSourceType
instance GHC.Read.Read Amazonka.RobOMaker.Types.DataSourceType.DataSourceType
instance GHC.Show.Show Amazonka.RobOMaker.Types.DataSourceType.DataSourceType


module Amazonka.RobOMaker.Types.DataSourceConfig

-- | Information about a data source.
--   
--   <i>See:</i> <a>newDataSourceConfig</a> smart constructor.
data DataSourceConfig
DataSourceConfig' :: Maybe Text -> Maybe DataSourceType -> Text -> Text -> NonEmpty Text -> DataSourceConfig

-- | The location where your files are mounted in the container image.
--   
--   If you've specified the <tt>type</tt> of the data source as an
--   <tt>Archive</tt>, you must provide an Amazon S3 object key to your
--   archive. The object key must point to either a <tt>.zip</tt> or
--   <tt>.tar.gz</tt> file.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>Prefix</tt>, you provide the Amazon S3 prefix that points to the
--   files that you are using for your data source.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>File</tt>, you provide the Amazon S3 path to the file that you're
--   using as your data source.
[$sel:destination:DataSourceConfig'] :: DataSourceConfig -> Maybe Text

-- | The data type for the data source that you're using for your container
--   image or simulation job. You can use this field to specify whether
--   your data source is an Archive, an Amazon S3 prefix, or a file.
--   
--   If you don't specify a field, the default value is <tt>File</tt>.
[$sel:type':DataSourceConfig'] :: DataSourceConfig -> Maybe DataSourceType

-- | The name of the data source.
[$sel:name:DataSourceConfig'] :: DataSourceConfig -> Text

-- | The S3 bucket where the data files are located.
[$sel:s3Bucket:DataSourceConfig'] :: DataSourceConfig -> Text

-- | The list of S3 keys identifying the data source files.
[$sel:s3Keys:DataSourceConfig'] :: DataSourceConfig -> NonEmpty Text

-- | Create a value of <a>DataSourceConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:DataSourceConfig'</a>,
--   <a>dataSourceConfig_destination</a> - The location where your files
--   are mounted in the container image.
--   
--   If you've specified the <tt>type</tt> of the data source as an
--   <tt>Archive</tt>, you must provide an Amazon S3 object key to your
--   archive. The object key must point to either a <tt>.zip</tt> or
--   <tt>.tar.gz</tt> file.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>Prefix</tt>, you provide the Amazon S3 prefix that points to the
--   files that you are using for your data source.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>File</tt>, you provide the Amazon S3 path to the file that you're
--   using as your data source.
--   
--   <a>$sel:type':DataSourceConfig'</a>, <a>dataSourceConfig_type</a> -
--   The data type for the data source that you're using for your container
--   image or simulation job. You can use this field to specify whether
--   your data source is an Archive, an Amazon S3 prefix, or a file.
--   
--   If you don't specify a field, the default value is <tt>File</tt>.
--   
--   <a>$sel:name:DataSourceConfig'</a>, <a>dataSourceConfig_name</a> - The
--   name of the data source.
--   
--   <a>$sel:s3Bucket:DataSourceConfig'</a>,
--   <a>dataSourceConfig_s3Bucket</a> - The S3 bucket where the data files
--   are located.
--   
--   <a>$sel:s3Keys:DataSourceConfig'</a>, <a>dataSourceConfig_s3Keys</a> -
--   The list of S3 keys identifying the data source files.
newDataSourceConfig :: Text -> Text -> NonEmpty Text -> DataSourceConfig

-- | The location where your files are mounted in the container image.
--   
--   If you've specified the <tt>type</tt> of the data source as an
--   <tt>Archive</tt>, you must provide an Amazon S3 object key to your
--   archive. The object key must point to either a <tt>.zip</tt> or
--   <tt>.tar.gz</tt> file.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>Prefix</tt>, you provide the Amazon S3 prefix that points to the
--   files that you are using for your data source.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>File</tt>, you provide the Amazon S3 path to the file that you're
--   using as your data source.
dataSourceConfig_destination :: Lens' DataSourceConfig (Maybe Text)

-- | The data type for the data source that you're using for your container
--   image or simulation job. You can use this field to specify whether
--   your data source is an Archive, an Amazon S3 prefix, or a file.
--   
--   If you don't specify a field, the default value is <tt>File</tt>.
dataSourceConfig_type :: Lens' DataSourceConfig (Maybe DataSourceType)

-- | The name of the data source.
dataSourceConfig_name :: Lens' DataSourceConfig Text

-- | The S3 bucket where the data files are located.
dataSourceConfig_s3Bucket :: Lens' DataSourceConfig Text

-- | The list of S3 keys identifying the data source files.
dataSourceConfig_s3Keys :: Lens' DataSourceConfig (NonEmpty Text)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.DataSourceConfig.DataSourceConfig
instance GHC.Show.Show Amazonka.RobOMaker.Types.DataSourceConfig.DataSourceConfig
instance GHC.Read.Read Amazonka.RobOMaker.Types.DataSourceConfig.DataSourceConfig
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.DataSourceConfig.DataSourceConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.DataSourceConfig.DataSourceConfig
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.DataSourceConfig.DataSourceConfig
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.DataSourceConfig.DataSourceConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.DataSourceConfig.DataSourceConfig


module Amazonka.RobOMaker.Types.DeploymentJobErrorCode
newtype DeploymentJobErrorCode
DeploymentJobErrorCode' :: Text -> DeploymentJobErrorCode
[fromDeploymentJobErrorCode] :: DeploymentJobErrorCode -> Text
pattern DeploymentJobErrorCode_BadLambdaAssociated :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_BadPermissionError :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_DeploymentFleetDoesNotExist :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_DownloadConditionFailed :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_EnvironmentSetupError :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_EtagMismatch :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_ExtractingBundleFailure :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_FailureThresholdBreached :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_FleetDeploymentTimeout :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_GreengrassDeploymentFailed :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_GreengrassGroupVersionDoesNotExist :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_InternalServerError :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_InvalidGreengrassGroup :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_LambdaDeleted :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_MissingRobotApplicationArchitecture :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_MissingRobotArchitecture :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_MissingRobotDeploymentResource :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_PostLaunchFileFailure :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_PreLaunchFileFailure :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_ResourceNotFound :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_RobotAgentConnectionTimeout :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_RobotApplicationDoesNotExist :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_RobotDeploymentAborted :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_RobotDeploymentNoResponse :: DeploymentJobErrorCode
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.DeploymentJobErrorCode.DeploymentJobErrorCode
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.DeploymentJobErrorCode.DeploymentJobErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.DeploymentJobErrorCode.DeploymentJobErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.DeploymentJobErrorCode.DeploymentJobErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.DeploymentJobErrorCode.DeploymentJobErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.DeploymentJobErrorCode.DeploymentJobErrorCode
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.DeploymentJobErrorCode.DeploymentJobErrorCode
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.DeploymentJobErrorCode.DeploymentJobErrorCode
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.DeploymentJobErrorCode.DeploymentJobErrorCode
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.DeploymentJobErrorCode.DeploymentJobErrorCode
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.DeploymentJobErrorCode.DeploymentJobErrorCode
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.DeploymentJobErrorCode.DeploymentJobErrorCode
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.DeploymentJobErrorCode.DeploymentJobErrorCode
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.DeploymentJobErrorCode.DeploymentJobErrorCode
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.DeploymentJobErrorCode.DeploymentJobErrorCode
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.DeploymentJobErrorCode.DeploymentJobErrorCode
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.DeploymentJobErrorCode.DeploymentJobErrorCode
instance GHC.Read.Read Amazonka.RobOMaker.Types.DeploymentJobErrorCode.DeploymentJobErrorCode
instance GHC.Show.Show Amazonka.RobOMaker.Types.DeploymentJobErrorCode.DeploymentJobErrorCode


module Amazonka.RobOMaker.Types.DeploymentLaunchConfig

-- | Configuration information for a deployment launch.
--   
--   <i>See:</i> <a>newDeploymentLaunchConfig</a> smart constructor.
data DeploymentLaunchConfig
DeploymentLaunchConfig' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> DeploymentLaunchConfig

-- | The deployment pre-launch file. This file will be executed prior to
--   the launch file.
[$sel:preLaunchFile:DeploymentLaunchConfig'] :: DeploymentLaunchConfig -> Maybe Text

-- | The deployment post-launch file. This file will be executed after the
--   launch file.
[$sel:postLaunchFile:DeploymentLaunchConfig'] :: DeploymentLaunchConfig -> Maybe Text

-- | An array of key/value pairs specifying environment variables for the
--   robot application
[$sel:environmentVariables:DeploymentLaunchConfig'] :: DeploymentLaunchConfig -> Maybe (HashMap Text Text)

-- | The package name.
[$sel:packageName:DeploymentLaunchConfig'] :: DeploymentLaunchConfig -> Text

-- | The launch file name.
[$sel:launchFile:DeploymentLaunchConfig'] :: DeploymentLaunchConfig -> Text

-- | Create a value of <a>DeploymentLaunchConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:preLaunchFile:DeploymentLaunchConfig'</a>,
--   <a>deploymentLaunchConfig_preLaunchFile</a> - The deployment
--   pre-launch file. This file will be executed prior to the launch file.
--   
--   <a>$sel:postLaunchFile:DeploymentLaunchConfig'</a>,
--   <a>deploymentLaunchConfig_postLaunchFile</a> - The deployment
--   post-launch file. This file will be executed after the launch file.
--   
--   <a>$sel:environmentVariables:DeploymentLaunchConfig'</a>,
--   <a>deploymentLaunchConfig_environmentVariables</a> - An array of
--   key/value pairs specifying environment variables for the robot
--   application
--   
--   <a>$sel:packageName:DeploymentLaunchConfig'</a>,
--   <a>deploymentLaunchConfig_packageName</a> - The package name.
--   
--   <a>$sel:launchFile:DeploymentLaunchConfig'</a>,
--   <a>deploymentLaunchConfig_launchFile</a> - The launch file name.
newDeploymentLaunchConfig :: Text -> Text -> DeploymentLaunchConfig

-- | The deployment pre-launch file. This file will be executed prior to
--   the launch file.
deploymentLaunchConfig_preLaunchFile :: Lens' DeploymentLaunchConfig (Maybe Text)

-- | The deployment post-launch file. This file will be executed after the
--   launch file.
deploymentLaunchConfig_postLaunchFile :: Lens' DeploymentLaunchConfig (Maybe Text)

-- | An array of key/value pairs specifying environment variables for the
--   robot application
deploymentLaunchConfig_environmentVariables :: Lens' DeploymentLaunchConfig (Maybe (HashMap Text Text))

-- | The package name.
deploymentLaunchConfig_packageName :: Lens' DeploymentLaunchConfig Text

-- | The launch file name.
deploymentLaunchConfig_launchFile :: Lens' DeploymentLaunchConfig Text
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.DeploymentLaunchConfig.DeploymentLaunchConfig
instance GHC.Show.Show Amazonka.RobOMaker.Types.DeploymentLaunchConfig.DeploymentLaunchConfig
instance GHC.Read.Read Amazonka.RobOMaker.Types.DeploymentLaunchConfig.DeploymentLaunchConfig
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.DeploymentLaunchConfig.DeploymentLaunchConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.DeploymentLaunchConfig.DeploymentLaunchConfig
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.DeploymentLaunchConfig.DeploymentLaunchConfig
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.DeploymentLaunchConfig.DeploymentLaunchConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.DeploymentLaunchConfig.DeploymentLaunchConfig


module Amazonka.RobOMaker.Types.DeploymentApplicationConfig

-- | Information about a deployment application configuration.
--   
--   <i>See:</i> <a>newDeploymentApplicationConfig</a> smart constructor.
data DeploymentApplicationConfig
DeploymentApplicationConfig' :: Text -> Text -> DeploymentLaunchConfig -> DeploymentApplicationConfig

-- | The Amazon Resource Name (ARN) of the robot application.
[$sel:application:DeploymentApplicationConfig'] :: DeploymentApplicationConfig -> Text

-- | The version of the application.
[$sel:applicationVersion:DeploymentApplicationConfig'] :: DeploymentApplicationConfig -> Text

-- | The launch configuration.
[$sel:launchConfig:DeploymentApplicationConfig'] :: DeploymentApplicationConfig -> DeploymentLaunchConfig

-- | Create a value of <a>DeploymentApplicationConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:application:DeploymentApplicationConfig'</a>,
--   <a>deploymentApplicationConfig_application</a> - The Amazon Resource
--   Name (ARN) of the robot application.
--   
--   <a>$sel:applicationVersion:DeploymentApplicationConfig'</a>,
--   <a>deploymentApplicationConfig_applicationVersion</a> - The version of
--   the application.
--   
--   <a>$sel:launchConfig:DeploymentApplicationConfig'</a>,
--   <a>deploymentApplicationConfig_launchConfig</a> - The launch
--   configuration.
newDeploymentApplicationConfig :: Text -> Text -> DeploymentLaunchConfig -> DeploymentApplicationConfig

-- | The Amazon Resource Name (ARN) of the robot application.
deploymentApplicationConfig_application :: Lens' DeploymentApplicationConfig Text

-- | The version of the application.
deploymentApplicationConfig_applicationVersion :: Lens' DeploymentApplicationConfig Text

-- | The launch configuration.
deploymentApplicationConfig_launchConfig :: Lens' DeploymentApplicationConfig DeploymentLaunchConfig
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.DeploymentApplicationConfig.DeploymentApplicationConfig
instance GHC.Show.Show Amazonka.RobOMaker.Types.DeploymentApplicationConfig.DeploymentApplicationConfig
instance GHC.Read.Read Amazonka.RobOMaker.Types.DeploymentApplicationConfig.DeploymentApplicationConfig
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.DeploymentApplicationConfig.DeploymentApplicationConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.DeploymentApplicationConfig.DeploymentApplicationConfig
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.DeploymentApplicationConfig.DeploymentApplicationConfig
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.DeploymentApplicationConfig.DeploymentApplicationConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.DeploymentApplicationConfig.DeploymentApplicationConfig


module Amazonka.RobOMaker.Types.DeploymentStatus
newtype DeploymentStatus
DeploymentStatus' :: Text -> DeploymentStatus
[fromDeploymentStatus] :: DeploymentStatus -> Text
pattern DeploymentStatus_Canceled :: DeploymentStatus
pattern DeploymentStatus_Failed :: DeploymentStatus
pattern DeploymentStatus_InProgress :: DeploymentStatus
pattern DeploymentStatus_Pending :: DeploymentStatus
pattern DeploymentStatus_Preparing :: DeploymentStatus
pattern DeploymentStatus_Succeeded :: DeploymentStatus
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.DeploymentStatus.DeploymentStatus
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.DeploymentStatus.DeploymentStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.DeploymentStatus.DeploymentStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.DeploymentStatus.DeploymentStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.DeploymentStatus.DeploymentStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.DeploymentStatus.DeploymentStatus
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.DeploymentStatus.DeploymentStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.DeploymentStatus.DeploymentStatus
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.DeploymentStatus.DeploymentStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.DeploymentStatus.DeploymentStatus
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.DeploymentStatus.DeploymentStatus
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.DeploymentStatus.DeploymentStatus
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.DeploymentStatus.DeploymentStatus
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.DeploymentStatus.DeploymentStatus
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.DeploymentStatus.DeploymentStatus
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.DeploymentStatus.DeploymentStatus
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.DeploymentStatus.DeploymentStatus
instance GHC.Read.Read Amazonka.RobOMaker.Types.DeploymentStatus.DeploymentStatus
instance GHC.Show.Show Amazonka.RobOMaker.Types.DeploymentStatus.DeploymentStatus


module Amazonka.RobOMaker.Types.Environment

-- | The object that contains the Docker image URI for either your robot or
--   simulation applications.
--   
--   <i>See:</i> <a>newEnvironment</a> smart constructor.
data Environment
Environment' :: Maybe Text -> Environment

-- | The Docker image URI for either your robot or simulation applications.
[$sel:uri:Environment'] :: Environment -> Maybe Text

-- | Create a value of <a>Environment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uri:Environment'</a>, <a>environment_uri</a> - The Docker
--   image URI for either your robot or simulation applications.
newEnvironment :: Environment

-- | The Docker image URI for either your robot or simulation applications.
environment_uri :: Lens' Environment (Maybe Text)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.Environment.Environment
instance GHC.Show.Show Amazonka.RobOMaker.Types.Environment.Environment
instance GHC.Read.Read Amazonka.RobOMaker.Types.Environment.Environment
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.Environment.Environment
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.Environment.Environment
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.Environment.Environment
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.Environment.Environment
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.Environment.Environment


module Amazonka.RobOMaker.Types.ExitBehavior
newtype ExitBehavior
ExitBehavior' :: Text -> ExitBehavior
[fromExitBehavior] :: ExitBehavior -> Text
pattern ExitBehavior_FAIL :: ExitBehavior
pattern ExitBehavior_RESTART :: ExitBehavior
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.ExitBehavior.ExitBehavior
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.ExitBehavior.ExitBehavior
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.ExitBehavior.ExitBehavior
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.ExitBehavior.ExitBehavior
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.ExitBehavior.ExitBehavior
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.ExitBehavior.ExitBehavior
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.ExitBehavior.ExitBehavior
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.ExitBehavior.ExitBehavior
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.ExitBehavior.ExitBehavior
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.ExitBehavior.ExitBehavior
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.ExitBehavior.ExitBehavior
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.ExitBehavior.ExitBehavior
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.ExitBehavior.ExitBehavior
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.ExitBehavior.ExitBehavior
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.ExitBehavior.ExitBehavior
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.ExitBehavior.ExitBehavior
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.ExitBehavior.ExitBehavior
instance GHC.Read.Read Amazonka.RobOMaker.Types.ExitBehavior.ExitBehavior
instance GHC.Show.Show Amazonka.RobOMaker.Types.ExitBehavior.ExitBehavior


module Amazonka.RobOMaker.Types.FailureBehavior
newtype FailureBehavior
FailureBehavior' :: Text -> FailureBehavior
[fromFailureBehavior] :: FailureBehavior -> Text
pattern FailureBehavior_Continue :: FailureBehavior
pattern FailureBehavior_Fail :: FailureBehavior
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.FailureBehavior.FailureBehavior
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.FailureBehavior.FailureBehavior
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.FailureBehavior.FailureBehavior
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.FailureBehavior.FailureBehavior
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.FailureBehavior.FailureBehavior
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.FailureBehavior.FailureBehavior
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.FailureBehavior.FailureBehavior
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.FailureBehavior.FailureBehavior
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.FailureBehavior.FailureBehavior
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.FailureBehavior.FailureBehavior
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.FailureBehavior.FailureBehavior
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.FailureBehavior.FailureBehavior
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.FailureBehavior.FailureBehavior
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.FailureBehavior.FailureBehavior
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.FailureBehavior.FailureBehavior
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.FailureBehavior.FailureBehavior
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.FailureBehavior.FailureBehavior
instance GHC.Read.Read Amazonka.RobOMaker.Types.FailureBehavior.FailureBehavior
instance GHC.Show.Show Amazonka.RobOMaker.Types.FailureBehavior.FailureBehavior


module Amazonka.RobOMaker.Types.Filter

-- | Information about a filter.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe (NonEmpty Text) -> Maybe Text -> Filter

-- | A list of values.
[$sel:values:Filter'] :: Filter -> Maybe (NonEmpty Text)

-- | The name of the filter.
[$sel:name:Filter'] :: Filter -> Maybe Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - A list of values.
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The name of the filter.
newFilter :: Filter

-- | A list of values.
filter_values :: Lens' Filter (Maybe (NonEmpty Text))

-- | The name of the filter.
filter_name :: Lens' Filter (Maybe Text)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.Filter.Filter
instance GHC.Show.Show Amazonka.RobOMaker.Types.Filter.Filter
instance GHC.Read.Read Amazonka.RobOMaker.Types.Filter.Filter
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.Filter.Filter
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.Filter.Filter
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.Filter.Filter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.Filter.Filter


module Amazonka.RobOMaker.Types.Fleet

-- | Information about a fleet.
--   
--   <i>See:</i> <a>newFleet</a> smart constructor.
data Fleet
Fleet' :: Maybe Text -> Maybe DeploymentStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Fleet

-- | The Amazon Resource Name (ARN) of the last deployment job.
[$sel:lastDeploymentJob:Fleet'] :: Fleet -> Maybe Text

-- | The status of the last fleet deployment.
[$sel:lastDeploymentStatus:Fleet'] :: Fleet -> Maybe DeploymentStatus

-- | The Amazon Resource Name (ARN) of the fleet.
[$sel:arn:Fleet'] :: Fleet -> Maybe Text

-- | The time, in milliseconds since the epoch, when the fleet was created.
[$sel:createdAt:Fleet'] :: Fleet -> Maybe POSIX

-- | The name of the fleet.
[$sel:name:Fleet'] :: Fleet -> Maybe Text

-- | The time of the last deployment.
[$sel:lastDeploymentTime:Fleet'] :: Fleet -> Maybe POSIX

-- | Create a value of <a>Fleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastDeploymentJob:Fleet'</a>, <a>fleet_lastDeploymentJob</a> -
--   The Amazon Resource Name (ARN) of the last deployment job.
--   
--   <a>$sel:lastDeploymentStatus:Fleet'</a>,
--   <a>fleet_lastDeploymentStatus</a> - The status of the last fleet
--   deployment.
--   
--   <a>$sel:arn:Fleet'</a>, <a>fleet_arn</a> - The Amazon Resource Name
--   (ARN) of the fleet.
--   
--   <a>$sel:createdAt:Fleet'</a>, <a>fleet_createdAt</a> - The time, in
--   milliseconds since the epoch, when the fleet was created.
--   
--   <a>$sel:name:Fleet'</a>, <a>fleet_name</a> - The name of the fleet.
--   
--   <a>$sel:lastDeploymentTime:Fleet'</a>, <a>fleet_lastDeploymentTime</a>
--   - The time of the last deployment.
newFleet :: Fleet

-- | The Amazon Resource Name (ARN) of the last deployment job.
fleet_lastDeploymentJob :: Lens' Fleet (Maybe Text)

-- | The status of the last fleet deployment.
fleet_lastDeploymentStatus :: Lens' Fleet (Maybe DeploymentStatus)

-- | The Amazon Resource Name (ARN) of the fleet.
fleet_arn :: Lens' Fleet (Maybe Text)

-- | The time, in milliseconds since the epoch, when the fleet was created.
fleet_createdAt :: Lens' Fleet (Maybe UTCTime)

-- | The name of the fleet.
fleet_name :: Lens' Fleet (Maybe Text)

-- | The time of the last deployment.
fleet_lastDeploymentTime :: Lens' Fleet (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.Fleet.Fleet
instance GHC.Show.Show Amazonka.RobOMaker.Types.Fleet.Fleet
instance GHC.Read.Read Amazonka.RobOMaker.Types.Fleet.Fleet
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.Fleet.Fleet
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.Fleet.Fleet
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.Fleet.Fleet
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.Fleet.Fleet


module Amazonka.RobOMaker.Types.LoggingConfig

-- | The logging configuration.
--   
--   <i>See:</i> <a>newLoggingConfig</a> smart constructor.
data LoggingConfig
LoggingConfig' :: Bool -> LoggingConfig

-- | A boolean indicating whether to record all ROS topics.
[$sel:recordAllRosTopics:LoggingConfig'] :: LoggingConfig -> Bool

-- | Create a value of <a>LoggingConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordAllRosTopics:LoggingConfig'</a>,
--   <a>loggingConfig_recordAllRosTopics</a> - A boolean indicating whether
--   to record all ROS topics.
newLoggingConfig :: Bool -> LoggingConfig

-- | A boolean indicating whether to record all ROS topics.
loggingConfig_recordAllRosTopics :: Lens' LoggingConfig Bool
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.LoggingConfig.LoggingConfig
instance GHC.Show.Show Amazonka.RobOMaker.Types.LoggingConfig.LoggingConfig
instance GHC.Read.Read Amazonka.RobOMaker.Types.LoggingConfig.LoggingConfig
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.LoggingConfig.LoggingConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.LoggingConfig.LoggingConfig
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.LoggingConfig.LoggingConfig
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.LoggingConfig.LoggingConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.LoggingConfig.LoggingConfig


module Amazonka.RobOMaker.Types.NetworkInterface

-- | Describes a network interface.
--   
--   <i>See:</i> <a>newNetworkInterface</a> smart constructor.
data NetworkInterface
NetworkInterface' :: Maybe Text -> Maybe Text -> Maybe Text -> NetworkInterface

-- | The ID of the network interface.
[$sel:networkInterfaceId:NetworkInterface'] :: NetworkInterface -> Maybe Text

-- | The IPv4 address of the network interface within the subnet.
[$sel:privateIpAddress:NetworkInterface'] :: NetworkInterface -> Maybe Text

-- | The IPv4 public address of the network interface.
[$sel:publicIpAddress:NetworkInterface'] :: NetworkInterface -> Maybe Text

-- | Create a value of <a>NetworkInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkInterfaceId:NetworkInterface'</a>,
--   <a>networkInterface_networkInterfaceId</a> - The ID of the network
--   interface.
--   
--   <a>$sel:privateIpAddress:NetworkInterface'</a>,
--   <a>networkInterface_privateIpAddress</a> - The IPv4 address of the
--   network interface within the subnet.
--   
--   <a>$sel:publicIpAddress:NetworkInterface'</a>,
--   <a>networkInterface_publicIpAddress</a> - The IPv4 public address of
--   the network interface.
newNetworkInterface :: NetworkInterface

-- | The ID of the network interface.
networkInterface_networkInterfaceId :: Lens' NetworkInterface (Maybe Text)

-- | The IPv4 address of the network interface within the subnet.
networkInterface_privateIpAddress :: Lens' NetworkInterface (Maybe Text)

-- | The IPv4 public address of the network interface.
networkInterface_publicIpAddress :: Lens' NetworkInterface (Maybe Text)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.NetworkInterface.NetworkInterface
instance GHC.Show.Show Amazonka.RobOMaker.Types.NetworkInterface.NetworkInterface
instance GHC.Read.Read Amazonka.RobOMaker.Types.NetworkInterface.NetworkInterface
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.NetworkInterface.NetworkInterface
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.NetworkInterface.NetworkInterface
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.NetworkInterface.NetworkInterface
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.NetworkInterface.NetworkInterface


module Amazonka.RobOMaker.Types.OutputLocation

-- | The output location.
--   
--   <i>See:</i> <a>newOutputLocation</a> smart constructor.
data OutputLocation
OutputLocation' :: Maybe Text -> Maybe Text -> OutputLocation

-- | The S3 folder in the <tt>s3Bucket</tt> where output files will be
--   placed.
[$sel:s3Prefix:OutputLocation'] :: OutputLocation -> Maybe Text

-- | The S3 bucket for output.
[$sel:s3Bucket:OutputLocation'] :: OutputLocation -> Maybe Text

-- | Create a value of <a>OutputLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Prefix:OutputLocation'</a>, <a>outputLocation_s3Prefix</a> -
--   The S3 folder in the <tt>s3Bucket</tt> where output files will be
--   placed.
--   
--   <a>$sel:s3Bucket:OutputLocation'</a>, <a>outputLocation_s3Bucket</a> -
--   The S3 bucket for output.
newOutputLocation :: OutputLocation

-- | The S3 folder in the <tt>s3Bucket</tt> where output files will be
--   placed.
outputLocation_s3Prefix :: Lens' OutputLocation (Maybe Text)

-- | The S3 bucket for output.
outputLocation_s3Bucket :: Lens' OutputLocation (Maybe Text)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.OutputLocation.OutputLocation
instance GHC.Show.Show Amazonka.RobOMaker.Types.OutputLocation.OutputLocation
instance GHC.Read.Read Amazonka.RobOMaker.Types.OutputLocation.OutputLocation
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.OutputLocation.OutputLocation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.OutputLocation.OutputLocation
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.OutputLocation.OutputLocation
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.OutputLocation.OutputLocation
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.OutputLocation.OutputLocation


module Amazonka.RobOMaker.Types.PortMapping

-- | An object representing a port mapping.
--   
--   <i>See:</i> <a>newPortMapping</a> smart constructor.
data PortMapping
PortMapping' :: Maybe Bool -> Natural -> Natural -> PortMapping

-- | A Boolean indicating whether to enable this port mapping on public IP.
[$sel:enableOnPublicIp:PortMapping'] :: PortMapping -> Maybe Bool

-- | The port number on the simulation job instance to use as a remote
--   connection point.
[$sel:jobPort:PortMapping'] :: PortMapping -> Natural

-- | The port number on the application.
[$sel:applicationPort:PortMapping'] :: PortMapping -> Natural

-- | Create a value of <a>PortMapping</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enableOnPublicIp:PortMapping'</a>,
--   <a>portMapping_enableOnPublicIp</a> - A Boolean indicating whether to
--   enable this port mapping on public IP.
--   
--   <a>$sel:jobPort:PortMapping'</a>, <a>portMapping_jobPort</a> - The
--   port number on the simulation job instance to use as a remote
--   connection point.
--   
--   <a>$sel:applicationPort:PortMapping'</a>,
--   <a>portMapping_applicationPort</a> - The port number on the
--   application.
newPortMapping :: Natural -> Natural -> PortMapping

-- | A Boolean indicating whether to enable this port mapping on public IP.
portMapping_enableOnPublicIp :: Lens' PortMapping (Maybe Bool)

-- | The port number on the simulation job instance to use as a remote
--   connection point.
portMapping_jobPort :: Lens' PortMapping Natural

-- | The port number on the application.
portMapping_applicationPort :: Lens' PortMapping Natural
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.PortMapping.PortMapping
instance GHC.Show.Show Amazonka.RobOMaker.Types.PortMapping.PortMapping
instance GHC.Read.Read Amazonka.RobOMaker.Types.PortMapping.PortMapping
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.PortMapping.PortMapping
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.PortMapping.PortMapping
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.PortMapping.PortMapping
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.PortMapping.PortMapping
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.PortMapping.PortMapping


module Amazonka.RobOMaker.Types.PortForwardingConfig

-- | Configuration information for port forwarding.
--   
--   <i>See:</i> <a>newPortForwardingConfig</a> smart constructor.
data PortForwardingConfig
PortForwardingConfig' :: Maybe [PortMapping] -> PortForwardingConfig

-- | The port mappings for the configuration.
[$sel:portMappings:PortForwardingConfig'] :: PortForwardingConfig -> Maybe [PortMapping]

-- | Create a value of <a>PortForwardingConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:portMappings:PortForwardingConfig'</a>,
--   <a>portForwardingConfig_portMappings</a> - The port mappings for the
--   configuration.
newPortForwardingConfig :: PortForwardingConfig

-- | The port mappings for the configuration.
portForwardingConfig_portMappings :: Lens' PortForwardingConfig (Maybe [PortMapping])
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.PortForwardingConfig.PortForwardingConfig
instance GHC.Show.Show Amazonka.RobOMaker.Types.PortForwardingConfig.PortForwardingConfig
instance GHC.Read.Read Amazonka.RobOMaker.Types.PortForwardingConfig.PortForwardingConfig
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.PortForwardingConfig.PortForwardingConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.PortForwardingConfig.PortForwardingConfig
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.PortForwardingConfig.PortForwardingConfig
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.PortForwardingConfig.PortForwardingConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.PortForwardingConfig.PortForwardingConfig


module Amazonka.RobOMaker.Types.LaunchConfig

-- | Information about a launch configuration.
--   
--   <i>See:</i> <a>newLaunchConfig</a> smart constructor.
data LaunchConfig
LaunchConfig' :: Maybe [Text] -> Maybe Text -> Maybe PortForwardingConfig -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> LaunchConfig

-- | If you've specified <tt>General</tt> as the value for your
--   <tt>RobotSoftwareSuite</tt>, you can use this field to specify a list
--   of commands for your container image.
--   
--   If you've specified <tt>SimulationRuntime</tt> as the value for your
--   <tt>SimulationSoftwareSuite</tt>, you can use this field to specify a
--   list of commands for your container image.
[$sel:command:LaunchConfig'] :: LaunchConfig -> Maybe [Text]

-- | The package name.
[$sel:packageName:LaunchConfig'] :: LaunchConfig -> Maybe Text

-- | The port forwarding configuration.
[$sel:portForwardingConfig:LaunchConfig'] :: LaunchConfig -> Maybe PortForwardingConfig

-- | The launch file name.
[$sel:launchFile:LaunchConfig'] :: LaunchConfig -> Maybe Text

-- | The environment variables for the application launch.
[$sel:environmentVariables:LaunchConfig'] :: LaunchConfig -> Maybe (HashMap Text Text)

-- | Boolean indicating whether a streaming session will be configured for
--   the application. If <tt>True</tt>, AWS RoboMaker will configure a
--   connection so you can interact with your application as it is running
--   in the simulation. You must configure and launch the component. It
--   must have a graphical user interface.
[$sel:streamUI:LaunchConfig'] :: LaunchConfig -> Maybe Bool

-- | Create a value of <a>LaunchConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:command:LaunchConfig'</a>, <a>launchConfig_command</a> - If
--   you've specified <tt>General</tt> as the value for your
--   <tt>RobotSoftwareSuite</tt>, you can use this field to specify a list
--   of commands for your container image.
--   
--   If you've specified <tt>SimulationRuntime</tt> as the value for your
--   <tt>SimulationSoftwareSuite</tt>, you can use this field to specify a
--   list of commands for your container image.
--   
--   <a>$sel:packageName:LaunchConfig'</a>, <a>launchConfig_packageName</a>
--   - The package name.
--   
--   <a>$sel:portForwardingConfig:LaunchConfig'</a>,
--   <a>launchConfig_portForwardingConfig</a> - The port forwarding
--   configuration.
--   
--   <a>$sel:launchFile:LaunchConfig'</a>, <a>launchConfig_launchFile</a> -
--   The launch file name.
--   
--   <a>$sel:environmentVariables:LaunchConfig'</a>,
--   <a>launchConfig_environmentVariables</a> - The environment variables
--   for the application launch.
--   
--   <a>$sel:streamUI:LaunchConfig'</a>, <a>launchConfig_streamUI</a> -
--   Boolean indicating whether a streaming session will be configured for
--   the application. If <tt>True</tt>, AWS RoboMaker will configure a
--   connection so you can interact with your application as it is running
--   in the simulation. You must configure and launch the component. It
--   must have a graphical user interface.
newLaunchConfig :: LaunchConfig

-- | If you've specified <tt>General</tt> as the value for your
--   <tt>RobotSoftwareSuite</tt>, you can use this field to specify a list
--   of commands for your container image.
--   
--   If you've specified <tt>SimulationRuntime</tt> as the value for your
--   <tt>SimulationSoftwareSuite</tt>, you can use this field to specify a
--   list of commands for your container image.
launchConfig_command :: Lens' LaunchConfig (Maybe [Text])

-- | The package name.
launchConfig_packageName :: Lens' LaunchConfig (Maybe Text)

-- | The port forwarding configuration.
launchConfig_portForwardingConfig :: Lens' LaunchConfig (Maybe PortForwardingConfig)

-- | The launch file name.
launchConfig_launchFile :: Lens' LaunchConfig (Maybe Text)

-- | The environment variables for the application launch.
launchConfig_environmentVariables :: Lens' LaunchConfig (Maybe (HashMap Text Text))

-- | Boolean indicating whether a streaming session will be configured for
--   the application. If <tt>True</tt>, AWS RoboMaker will configure a
--   connection so you can interact with your application as it is running
--   in the simulation. You must configure and launch the component. It
--   must have a graphical user interface.
launchConfig_streamUI :: Lens' LaunchConfig (Maybe Bool)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.LaunchConfig.LaunchConfig
instance GHC.Show.Show Amazonka.RobOMaker.Types.LaunchConfig.LaunchConfig
instance GHC.Read.Read Amazonka.RobOMaker.Types.LaunchConfig.LaunchConfig
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.LaunchConfig.LaunchConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.LaunchConfig.LaunchConfig
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.LaunchConfig.LaunchConfig
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.LaunchConfig.LaunchConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.LaunchConfig.LaunchConfig


module Amazonka.RobOMaker.Types.RenderingEngineType
newtype RenderingEngineType
RenderingEngineType' :: Text -> RenderingEngineType
[fromRenderingEngineType] :: RenderingEngineType -> Text
pattern RenderingEngineType_OGRE :: RenderingEngineType
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.RenderingEngineType.RenderingEngineType
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.RenderingEngineType.RenderingEngineType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.RenderingEngineType.RenderingEngineType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.RenderingEngineType.RenderingEngineType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.RenderingEngineType.RenderingEngineType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.RenderingEngineType.RenderingEngineType
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.RenderingEngineType.RenderingEngineType
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.RenderingEngineType.RenderingEngineType
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.RenderingEngineType.RenderingEngineType
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.RenderingEngineType.RenderingEngineType
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.RenderingEngineType.RenderingEngineType
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.RenderingEngineType.RenderingEngineType
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.RenderingEngineType.RenderingEngineType
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.RenderingEngineType.RenderingEngineType
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.RenderingEngineType.RenderingEngineType
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.RenderingEngineType.RenderingEngineType
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.RenderingEngineType.RenderingEngineType
instance GHC.Read.Read Amazonka.RobOMaker.Types.RenderingEngineType.RenderingEngineType
instance GHC.Show.Show Amazonka.RobOMaker.Types.RenderingEngineType.RenderingEngineType


module Amazonka.RobOMaker.Types.RenderingEngine

-- | Information about a rendering engine.
--   
--   <i>See:</i> <a>newRenderingEngine</a> smart constructor.
data RenderingEngine
RenderingEngine' :: Maybe RenderingEngineType -> Maybe Text -> RenderingEngine

-- | The name of the rendering engine.
[$sel:name:RenderingEngine'] :: RenderingEngine -> Maybe RenderingEngineType

-- | The version of the rendering engine.
[$sel:version:RenderingEngine'] :: RenderingEngine -> Maybe Text

-- | Create a value of <a>RenderingEngine</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:RenderingEngine'</a>, <a>renderingEngine_name</a> - The
--   name of the rendering engine.
--   
--   <a>$sel:version:RenderingEngine'</a>, <a>renderingEngine_version</a> -
--   The version of the rendering engine.
newRenderingEngine :: RenderingEngine

-- | The name of the rendering engine.
renderingEngine_name :: Lens' RenderingEngine (Maybe RenderingEngineType)

-- | The version of the rendering engine.
renderingEngine_version :: Lens' RenderingEngine (Maybe Text)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.RenderingEngine.RenderingEngine
instance GHC.Show.Show Amazonka.RobOMaker.Types.RenderingEngine.RenderingEngine
instance GHC.Read.Read Amazonka.RobOMaker.Types.RenderingEngine.RenderingEngine
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.RenderingEngine.RenderingEngine
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.RenderingEngine.RenderingEngine
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.RenderingEngine.RenderingEngine
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.RenderingEngine.RenderingEngine
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.RenderingEngine.RenderingEngine


module Amazonka.RobOMaker.Types.RobotDeploymentStep
newtype RobotDeploymentStep
RobotDeploymentStep' :: Text -> RobotDeploymentStep
[fromRobotDeploymentStep] :: RobotDeploymentStep -> Text
pattern RobotDeploymentStep_DownloadingExtracting :: RobotDeploymentStep
pattern RobotDeploymentStep_ExecutingDownloadCondition :: RobotDeploymentStep
pattern RobotDeploymentStep_ExecutingPostLaunch :: RobotDeploymentStep
pattern RobotDeploymentStep_ExecutingPreLaunch :: RobotDeploymentStep
pattern RobotDeploymentStep_Finished :: RobotDeploymentStep
pattern RobotDeploymentStep_Launching :: RobotDeploymentStep
pattern RobotDeploymentStep_Validating :: RobotDeploymentStep
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.RobotDeploymentStep.RobotDeploymentStep
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.RobotDeploymentStep.RobotDeploymentStep
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.RobotDeploymentStep.RobotDeploymentStep
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.RobotDeploymentStep.RobotDeploymentStep
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.RobotDeploymentStep.RobotDeploymentStep
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.RobotDeploymentStep.RobotDeploymentStep
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.RobotDeploymentStep.RobotDeploymentStep
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.RobotDeploymentStep.RobotDeploymentStep
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.RobotDeploymentStep.RobotDeploymentStep
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.RobotDeploymentStep.RobotDeploymentStep
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.RobotDeploymentStep.RobotDeploymentStep
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.RobotDeploymentStep.RobotDeploymentStep
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.RobotDeploymentStep.RobotDeploymentStep
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.RobotDeploymentStep.RobotDeploymentStep
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.RobotDeploymentStep.RobotDeploymentStep
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.RobotDeploymentStep.RobotDeploymentStep
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.RobotDeploymentStep.RobotDeploymentStep
instance GHC.Read.Read Amazonka.RobOMaker.Types.RobotDeploymentStep.RobotDeploymentStep
instance GHC.Show.Show Amazonka.RobOMaker.Types.RobotDeploymentStep.RobotDeploymentStep


module Amazonka.RobOMaker.Types.ProgressDetail

-- | Information about the progress of a deployment job.
--   
--   <i>See:</i> <a>newProgressDetail</a> smart constructor.
data ProgressDetail
ProgressDetail' :: Maybe RobotDeploymentStep -> Maybe Int -> Maybe Text -> Maybe Double -> ProgressDetail

-- | The current progress status.
--   
--   <ul>
--   <li><i>Validating</i> Validating the deployment.</li>
--   <li><i>DownloadingExtracting</i> Downloading and extracting the bundle
--   on the robot.</li>
--   <li><i>ExecutingPreLaunch</i> Executing pre-launch script(s) if
--   provided.</li>
--   <li><i>Launching</i> Launching the robot application.</li>
--   <li><i>ExecutingPostLaunch</i> Executing post-launch script(s) if
--   provided.</li>
--   <li><i>Finished</i> Deployment is complete.</li>
--   </ul>
[$sel:currentProgress:ProgressDetail'] :: ProgressDetail -> Maybe RobotDeploymentStep

-- | Estimated amount of time in seconds remaining in the step. This
--   currently only applies to the <tt>Downloading/Extracting</tt> step of
--   the deployment. It is empty for other steps.
[$sel:estimatedTimeRemainingSeconds:ProgressDetail'] :: ProgressDetail -> Maybe Int

-- | The Amazon Resource Name (ARN) of the deployment job.
[$sel:targetResource:ProgressDetail'] :: ProgressDetail -> Maybe Text

-- | Precentage of the step that is done. This currently only applies to
--   the <tt>Downloading/Extracting</tt> step of the deployment. It is
--   empty for other steps.
[$sel:percentDone:ProgressDetail'] :: ProgressDetail -> Maybe Double

-- | Create a value of <a>ProgressDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currentProgress:ProgressDetail'</a>,
--   <a>progressDetail_currentProgress</a> - The current progress status.
--   
--   <ul>
--   <li><i>Validating</i> Validating the deployment.</li>
--   <li><i>DownloadingExtracting</i> Downloading and extracting the bundle
--   on the robot.</li>
--   <li><i>ExecutingPreLaunch</i> Executing pre-launch script(s) if
--   provided.</li>
--   <li><i>Launching</i> Launching the robot application.</li>
--   <li><i>ExecutingPostLaunch</i> Executing post-launch script(s) if
--   provided.</li>
--   <li><i>Finished</i> Deployment is complete.</li>
--   </ul>
--   
--   <a>$sel:estimatedTimeRemainingSeconds:ProgressDetail'</a>,
--   <a>progressDetail_estimatedTimeRemainingSeconds</a> - Estimated amount
--   of time in seconds remaining in the step. This currently only applies
--   to the <tt>Downloading/Extracting</tt> step of the deployment. It is
--   empty for other steps.
--   
--   <a>$sel:targetResource:ProgressDetail'</a>,
--   <a>progressDetail_targetResource</a> - The Amazon Resource Name (ARN)
--   of the deployment job.
--   
--   <a>$sel:percentDone:ProgressDetail'</a>,
--   <a>progressDetail_percentDone</a> - Precentage of the step that is
--   done. This currently only applies to the
--   <tt>Downloading/Extracting</tt> step of the deployment. It is empty
--   for other steps.
newProgressDetail :: ProgressDetail

-- | The current progress status.
--   
--   <ul>
--   <li><i>Validating</i> Validating the deployment.</li>
--   <li><i>DownloadingExtracting</i> Downloading and extracting the bundle
--   on the robot.</li>
--   <li><i>ExecutingPreLaunch</i> Executing pre-launch script(s) if
--   provided.</li>
--   <li><i>Launching</i> Launching the robot application.</li>
--   <li><i>ExecutingPostLaunch</i> Executing post-launch script(s) if
--   provided.</li>
--   <li><i>Finished</i> Deployment is complete.</li>
--   </ul>
progressDetail_currentProgress :: Lens' ProgressDetail (Maybe RobotDeploymentStep)

-- | Estimated amount of time in seconds remaining in the step. This
--   currently only applies to the <tt>Downloading/Extracting</tt> step of
--   the deployment. It is empty for other steps.
progressDetail_estimatedTimeRemainingSeconds :: Lens' ProgressDetail (Maybe Int)

-- | The Amazon Resource Name (ARN) of the deployment job.
progressDetail_targetResource :: Lens' ProgressDetail (Maybe Text)

-- | Precentage of the step that is done. This currently only applies to
--   the <tt>Downloading/Extracting</tt> step of the deployment. It is
--   empty for other steps.
progressDetail_percentDone :: Lens' ProgressDetail (Maybe Double)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.ProgressDetail.ProgressDetail
instance GHC.Show.Show Amazonka.RobOMaker.Types.ProgressDetail.ProgressDetail
instance GHC.Read.Read Amazonka.RobOMaker.Types.ProgressDetail.ProgressDetail
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.ProgressDetail.ProgressDetail
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.ProgressDetail.ProgressDetail
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.ProgressDetail.ProgressDetail
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.ProgressDetail.ProgressDetail


module Amazonka.RobOMaker.Types.RobotSoftwareSuiteType
newtype RobotSoftwareSuiteType
RobotSoftwareSuiteType' :: Text -> RobotSoftwareSuiteType
[fromRobotSoftwareSuiteType] :: RobotSoftwareSuiteType -> Text
pattern RobotSoftwareSuiteType_General :: RobotSoftwareSuiteType
pattern RobotSoftwareSuiteType_ROS :: RobotSoftwareSuiteType
pattern RobotSoftwareSuiteType_ROS2 :: RobotSoftwareSuiteType
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.RobotSoftwareSuiteType.RobotSoftwareSuiteType
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.RobotSoftwareSuiteType.RobotSoftwareSuiteType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.RobotSoftwareSuiteType.RobotSoftwareSuiteType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.RobotSoftwareSuiteType.RobotSoftwareSuiteType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.RobotSoftwareSuiteType.RobotSoftwareSuiteType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.RobotSoftwareSuiteType.RobotSoftwareSuiteType
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.RobotSoftwareSuiteType.RobotSoftwareSuiteType
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.RobotSoftwareSuiteType.RobotSoftwareSuiteType
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.RobotSoftwareSuiteType.RobotSoftwareSuiteType
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.RobotSoftwareSuiteType.RobotSoftwareSuiteType
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.RobotSoftwareSuiteType.RobotSoftwareSuiteType
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.RobotSoftwareSuiteType.RobotSoftwareSuiteType
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.RobotSoftwareSuiteType.RobotSoftwareSuiteType
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.RobotSoftwareSuiteType.RobotSoftwareSuiteType
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.RobotSoftwareSuiteType.RobotSoftwareSuiteType
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.RobotSoftwareSuiteType.RobotSoftwareSuiteType
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.RobotSoftwareSuiteType.RobotSoftwareSuiteType
instance GHC.Read.Read Amazonka.RobOMaker.Types.RobotSoftwareSuiteType.RobotSoftwareSuiteType
instance GHC.Show.Show Amazonka.RobOMaker.Types.RobotSoftwareSuiteType.RobotSoftwareSuiteType


module Amazonka.RobOMaker.Types.RobotSoftwareSuiteVersionType
newtype RobotSoftwareSuiteVersionType
RobotSoftwareSuiteVersionType' :: Text -> RobotSoftwareSuiteVersionType
[fromRobotSoftwareSuiteVersionType] :: RobotSoftwareSuiteVersionType -> Text
pattern RobotSoftwareSuiteVersionType_Dashing :: RobotSoftwareSuiteVersionType
pattern RobotSoftwareSuiteVersionType_Foxy :: RobotSoftwareSuiteVersionType
pattern RobotSoftwareSuiteVersionType_Kinetic :: RobotSoftwareSuiteVersionType
pattern RobotSoftwareSuiteVersionType_Melodic :: RobotSoftwareSuiteVersionType
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.RobotSoftwareSuiteVersionType.RobotSoftwareSuiteVersionType
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.RobotSoftwareSuiteVersionType.RobotSoftwareSuiteVersionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.RobotSoftwareSuiteVersionType.RobotSoftwareSuiteVersionType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.RobotSoftwareSuiteVersionType.RobotSoftwareSuiteVersionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.RobotSoftwareSuiteVersionType.RobotSoftwareSuiteVersionType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.RobotSoftwareSuiteVersionType.RobotSoftwareSuiteVersionType
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.RobotSoftwareSuiteVersionType.RobotSoftwareSuiteVersionType
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.RobotSoftwareSuiteVersionType.RobotSoftwareSuiteVersionType
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.RobotSoftwareSuiteVersionType.RobotSoftwareSuiteVersionType
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.RobotSoftwareSuiteVersionType.RobotSoftwareSuiteVersionType
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.RobotSoftwareSuiteVersionType.RobotSoftwareSuiteVersionType
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.RobotSoftwareSuiteVersionType.RobotSoftwareSuiteVersionType
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.RobotSoftwareSuiteVersionType.RobotSoftwareSuiteVersionType
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.RobotSoftwareSuiteVersionType.RobotSoftwareSuiteVersionType
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.RobotSoftwareSuiteVersionType.RobotSoftwareSuiteVersionType
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.RobotSoftwareSuiteVersionType.RobotSoftwareSuiteVersionType
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.RobotSoftwareSuiteVersionType.RobotSoftwareSuiteVersionType
instance GHC.Read.Read Amazonka.RobOMaker.Types.RobotSoftwareSuiteVersionType.RobotSoftwareSuiteVersionType
instance GHC.Show.Show Amazonka.RobOMaker.Types.RobotSoftwareSuiteVersionType.RobotSoftwareSuiteVersionType


module Amazonka.RobOMaker.Types.RobotSoftwareSuite

-- | Information about a robot software suite (ROS distribution).
--   
--   <i>See:</i> <a>newRobotSoftwareSuite</a> smart constructor.
data RobotSoftwareSuite
RobotSoftwareSuite' :: Maybe RobotSoftwareSuiteType -> Maybe RobotSoftwareSuiteVersionType -> RobotSoftwareSuite

-- | The name of the robot software suite (ROS distribution).
[$sel:name:RobotSoftwareSuite'] :: RobotSoftwareSuite -> Maybe RobotSoftwareSuiteType

-- | The version of the robot software suite (ROS distribution).
[$sel:version:RobotSoftwareSuite'] :: RobotSoftwareSuite -> Maybe RobotSoftwareSuiteVersionType

-- | Create a value of <a>RobotSoftwareSuite</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:RobotSoftwareSuite'</a>, <a>robotSoftwareSuite_name</a> -
--   The name of the robot software suite (ROS distribution).
--   
--   <a>$sel:version:RobotSoftwareSuite'</a>,
--   <a>robotSoftwareSuite_version</a> - The version of the robot software
--   suite (ROS distribution).
newRobotSoftwareSuite :: RobotSoftwareSuite

-- | The name of the robot software suite (ROS distribution).
robotSoftwareSuite_name :: Lens' RobotSoftwareSuite (Maybe RobotSoftwareSuiteType)

-- | The version of the robot software suite (ROS distribution).
robotSoftwareSuite_version :: Lens' RobotSoftwareSuite (Maybe RobotSoftwareSuiteVersionType)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.RobotSoftwareSuite.RobotSoftwareSuite
instance GHC.Show.Show Amazonka.RobOMaker.Types.RobotSoftwareSuite.RobotSoftwareSuite
instance GHC.Read.Read Amazonka.RobOMaker.Types.RobotSoftwareSuite.RobotSoftwareSuite
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.RobotSoftwareSuite.RobotSoftwareSuite
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.RobotSoftwareSuite.RobotSoftwareSuite
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.RobotSoftwareSuite.RobotSoftwareSuite
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.RobotSoftwareSuite.RobotSoftwareSuite
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.RobotSoftwareSuite.RobotSoftwareSuite


module Amazonka.RobOMaker.Types.RobotApplicationSummary

-- | Summary information for a robot application.
--   
--   <i>See:</i> <a>newRobotApplicationSummary</a> smart constructor.
data RobotApplicationSummary
RobotApplicationSummary' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe RobotSoftwareSuite -> RobotApplicationSummary

-- | The time, in milliseconds since the epoch, when the robot application
--   was last updated.
[$sel:lastUpdatedAt:RobotApplicationSummary'] :: RobotApplicationSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the robot.
[$sel:arn:RobotApplicationSummary'] :: RobotApplicationSummary -> Maybe Text

-- | The name of the robot application.
[$sel:name:RobotApplicationSummary'] :: RobotApplicationSummary -> Maybe Text

-- | The version of the robot application.
[$sel:version:RobotApplicationSummary'] :: RobotApplicationSummary -> Maybe Text

-- | Information about a robot software suite (ROS distribution).
[$sel:robotSoftwareSuite:RobotApplicationSummary'] :: RobotApplicationSummary -> Maybe RobotSoftwareSuite

-- | Create a value of <a>RobotApplicationSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:RobotApplicationSummary'</a>,
--   <a>robotApplicationSummary_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the robot application was last
--   updated.
--   
--   <a>$sel:arn:RobotApplicationSummary'</a>,
--   <a>robotApplicationSummary_arn</a> - The Amazon Resource Name (ARN) of
--   the robot.
--   
--   <a>$sel:name:RobotApplicationSummary'</a>,
--   <a>robotApplicationSummary_name</a> - The name of the robot
--   application.
--   
--   <a>$sel:version:RobotApplicationSummary'</a>,
--   <a>robotApplicationSummary_version</a> - The version of the robot
--   application.
--   
--   <a>$sel:robotSoftwareSuite:RobotApplicationSummary'</a>,
--   <a>robotApplicationSummary_robotSoftwareSuite</a> - Information about
--   a robot software suite (ROS distribution).
newRobotApplicationSummary :: RobotApplicationSummary

-- | The time, in milliseconds since the epoch, when the robot application
--   was last updated.
robotApplicationSummary_lastUpdatedAt :: Lens' RobotApplicationSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the robot.
robotApplicationSummary_arn :: Lens' RobotApplicationSummary (Maybe Text)

-- | The name of the robot application.
robotApplicationSummary_name :: Lens' RobotApplicationSummary (Maybe Text)

-- | The version of the robot application.
robotApplicationSummary_version :: Lens' RobotApplicationSummary (Maybe Text)

-- | Information about a robot software suite (ROS distribution).
robotApplicationSummary_robotSoftwareSuite :: Lens' RobotApplicationSummary (Maybe RobotSoftwareSuite)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.RobotApplicationSummary.RobotApplicationSummary
instance GHC.Show.Show Amazonka.RobOMaker.Types.RobotApplicationSummary.RobotApplicationSummary
instance GHC.Read.Read Amazonka.RobOMaker.Types.RobotApplicationSummary.RobotApplicationSummary
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.RobotApplicationSummary.RobotApplicationSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.RobotApplicationSummary.RobotApplicationSummary
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.RobotApplicationSummary.RobotApplicationSummary
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.RobotApplicationSummary.RobotApplicationSummary


module Amazonka.RobOMaker.Types.RobotStatus
newtype RobotStatus
RobotStatus' :: Text -> RobotStatus
[fromRobotStatus] :: RobotStatus -> Text
pattern RobotStatus_Available :: RobotStatus
pattern RobotStatus_Deploying :: RobotStatus
pattern RobotStatus_Failed :: RobotStatus
pattern RobotStatus_InSync :: RobotStatus
pattern RobotStatus_NoResponse :: RobotStatus
pattern RobotStatus_PendingNewDeployment :: RobotStatus
pattern RobotStatus_Registered :: RobotStatus
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.RobotStatus.RobotStatus
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.RobotStatus.RobotStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.RobotStatus.RobotStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.RobotStatus.RobotStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.RobotStatus.RobotStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.RobotStatus.RobotStatus
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.RobotStatus.RobotStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.RobotStatus.RobotStatus
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.RobotStatus.RobotStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.RobotStatus.RobotStatus
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.RobotStatus.RobotStatus
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.RobotStatus.RobotStatus
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.RobotStatus.RobotStatus
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.RobotStatus.RobotStatus
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.RobotStatus.RobotStatus
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.RobotStatus.RobotStatus
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.RobotStatus.RobotStatus
instance GHC.Read.Read Amazonka.RobOMaker.Types.RobotStatus.RobotStatus
instance GHC.Show.Show Amazonka.RobOMaker.Types.RobotStatus.RobotStatus


module Amazonka.RobOMaker.Types.RobotDeployment

-- | Information about a robot deployment.
--   
--   <i>See:</i> <a>newRobotDeployment</a> smart constructor.
data RobotDeployment
RobotDeployment' :: Maybe POSIX -> Maybe Text -> Maybe RobotStatus -> Maybe Text -> Maybe DeploymentJobErrorCode -> Maybe ProgressDetail -> Maybe POSIX -> RobotDeployment

-- | The time, in milliseconds since the epoch, when the deployment was
--   started.
[$sel:deploymentStartTime:RobotDeployment'] :: RobotDeployment -> Maybe POSIX

-- | A short description of the reason why the robot deployment failed.
[$sel:failureReason:RobotDeployment'] :: RobotDeployment -> Maybe Text

-- | The status of the robot deployment.
[$sel:status:RobotDeployment'] :: RobotDeployment -> Maybe RobotStatus

-- | The robot deployment Amazon Resource Name (ARN).
[$sel:arn:RobotDeployment'] :: RobotDeployment -> Maybe Text

-- | The robot deployment failure code.
[$sel:failureCode:RobotDeployment'] :: RobotDeployment -> Maybe DeploymentJobErrorCode

-- | Information about how the deployment is progressing.
[$sel:progressDetail:RobotDeployment'] :: RobotDeployment -> Maybe ProgressDetail

-- | The time, in milliseconds since the epoch, when the deployment
--   finished.
[$sel:deploymentFinishTime:RobotDeployment'] :: RobotDeployment -> Maybe POSIX

-- | Create a value of <a>RobotDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentStartTime:RobotDeployment'</a>,
--   <a>robotDeployment_deploymentStartTime</a> - The time, in milliseconds
--   since the epoch, when the deployment was started.
--   
--   <a>$sel:failureReason:RobotDeployment'</a>,
--   <a>robotDeployment_failureReason</a> - A short description of the
--   reason why the robot deployment failed.
--   
--   <a>$sel:status:RobotDeployment'</a>, <a>robotDeployment_status</a> -
--   The status of the robot deployment.
--   
--   <a>$sel:arn:RobotDeployment'</a>, <a>robotDeployment_arn</a> - The
--   robot deployment Amazon Resource Name (ARN).
--   
--   <a>$sel:failureCode:RobotDeployment'</a>,
--   <a>robotDeployment_failureCode</a> - The robot deployment failure
--   code.
--   
--   <a>$sel:progressDetail:RobotDeployment'</a>,
--   <a>robotDeployment_progressDetail</a> - Information about how the
--   deployment is progressing.
--   
--   <a>$sel:deploymentFinishTime:RobotDeployment'</a>,
--   <a>robotDeployment_deploymentFinishTime</a> - The time, in
--   milliseconds since the epoch, when the deployment finished.
newRobotDeployment :: RobotDeployment

-- | The time, in milliseconds since the epoch, when the deployment was
--   started.
robotDeployment_deploymentStartTime :: Lens' RobotDeployment (Maybe UTCTime)

-- | A short description of the reason why the robot deployment failed.
robotDeployment_failureReason :: Lens' RobotDeployment (Maybe Text)

-- | The status of the robot deployment.
robotDeployment_status :: Lens' RobotDeployment (Maybe RobotStatus)

-- | The robot deployment Amazon Resource Name (ARN).
robotDeployment_arn :: Lens' RobotDeployment (Maybe Text)

-- | The robot deployment failure code.
robotDeployment_failureCode :: Lens' RobotDeployment (Maybe DeploymentJobErrorCode)

-- | Information about how the deployment is progressing.
robotDeployment_progressDetail :: Lens' RobotDeployment (Maybe ProgressDetail)

-- | The time, in milliseconds since the epoch, when the deployment
--   finished.
robotDeployment_deploymentFinishTime :: Lens' RobotDeployment (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.RobotDeployment.RobotDeployment
instance GHC.Show.Show Amazonka.RobOMaker.Types.RobotDeployment.RobotDeployment
instance GHC.Read.Read Amazonka.RobOMaker.Types.RobotDeployment.RobotDeployment
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.RobotDeployment.RobotDeployment
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.RobotDeployment.RobotDeployment
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.RobotDeployment.RobotDeployment
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.RobotDeployment.RobotDeployment


module Amazonka.RobOMaker.Types.Robot

-- | Information about a robot.
--   
--   <i>See:</i> <a>newRobot</a> smart constructor.
data Robot
Robot' :: Maybe Text -> Maybe RobotStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Architecture -> Maybe POSIX -> Robot

-- | The Amazon Resource Name (ARN) of the last deployment job.
[$sel:lastDeploymentJob:Robot'] :: Robot -> Maybe Text

-- | The status of the robot.
[$sel:status:Robot'] :: Robot -> Maybe RobotStatus

-- | The Amazon Resource Name (ARN) of the robot.
[$sel:arn:Robot'] :: Robot -> Maybe Text

-- | The time, in milliseconds since the epoch, when the robot was created.
[$sel:createdAt:Robot'] :: Robot -> Maybe POSIX

-- | The Greengrass group associated with the robot.
[$sel:greenGrassGroupId:Robot'] :: Robot -> Maybe Text

-- | The Amazon Resource Name (ARN) of the fleet.
[$sel:fleetArn:Robot'] :: Robot -> Maybe Text

-- | The name of the robot.
[$sel:name:Robot'] :: Robot -> Maybe Text

-- | The architecture of the robot.
[$sel:architecture:Robot'] :: Robot -> Maybe Architecture

-- | The time of the last deployment.
[$sel:lastDeploymentTime:Robot'] :: Robot -> Maybe POSIX

-- | Create a value of <a>Robot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastDeploymentJob:Robot'</a>, <a>robot_lastDeploymentJob</a> -
--   The Amazon Resource Name (ARN) of the last deployment job.
--   
--   <a>$sel:status:Robot'</a>, <a>robot_status</a> - The status of the
--   robot.
--   
--   <a>$sel:arn:Robot'</a>, <a>robot_arn</a> - The Amazon Resource Name
--   (ARN) of the robot.
--   
--   <a>$sel:createdAt:Robot'</a>, <a>robot_createdAt</a> - The time, in
--   milliseconds since the epoch, when the robot was created.
--   
--   <a>$sel:greenGrassGroupId:Robot'</a>, <a>robot_greenGrassGroupId</a> -
--   The Greengrass group associated with the robot.
--   
--   <a>$sel:fleetArn:Robot'</a>, <a>robot_fleetArn</a> - The Amazon
--   Resource Name (ARN) of the fleet.
--   
--   <a>$sel:name:Robot'</a>, <a>robot_name</a> - The name of the robot.
--   
--   <a>$sel:architecture:Robot'</a>, <a>robot_architecture</a> - The
--   architecture of the robot.
--   
--   <a>$sel:lastDeploymentTime:Robot'</a>, <a>robot_lastDeploymentTime</a>
--   - The time of the last deployment.
newRobot :: Robot

-- | The Amazon Resource Name (ARN) of the last deployment job.
robot_lastDeploymentJob :: Lens' Robot (Maybe Text)

-- | The status of the robot.
robot_status :: Lens' Robot (Maybe RobotStatus)

-- | The Amazon Resource Name (ARN) of the robot.
robot_arn :: Lens' Robot (Maybe Text)

-- | The time, in milliseconds since the epoch, when the robot was created.
robot_createdAt :: Lens' Robot (Maybe UTCTime)

-- | The Greengrass group associated with the robot.
robot_greenGrassGroupId :: Lens' Robot (Maybe Text)

-- | The Amazon Resource Name (ARN) of the fleet.
robot_fleetArn :: Lens' Robot (Maybe Text)

-- | The name of the robot.
robot_name :: Lens' Robot (Maybe Text)

-- | The architecture of the robot.
robot_architecture :: Lens' Robot (Maybe Architecture)

-- | The time of the last deployment.
robot_lastDeploymentTime :: Lens' Robot (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.Robot.Robot
instance GHC.Show.Show Amazonka.RobOMaker.Types.Robot.Robot
instance GHC.Read.Read Amazonka.RobOMaker.Types.Robot.Robot
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.Robot.Robot
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.Robot.Robot
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.Robot.Robot
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.Robot.Robot


module Amazonka.RobOMaker.Types.S3KeyOutput

-- | Information about S3 keys.
--   
--   <i>See:</i> <a>newS3KeyOutput</a> smart constructor.
data S3KeyOutput
S3KeyOutput' :: Maybe Text -> Maybe Text -> S3KeyOutput

-- | The etag for the object.
[$sel:etag:S3KeyOutput'] :: S3KeyOutput -> Maybe Text

-- | The S3 key.
[$sel:s3Key:S3KeyOutput'] :: S3KeyOutput -> Maybe Text

-- | Create a value of <a>S3KeyOutput</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:etag:S3KeyOutput'</a>, <a>s3KeyOutput_etag</a> - The etag for
--   the object.
--   
--   <a>$sel:s3Key:S3KeyOutput'</a>, <a>s3KeyOutput_s3Key</a> - The S3 key.
newS3KeyOutput :: S3KeyOutput

-- | The etag for the object.
s3KeyOutput_etag :: Lens' S3KeyOutput (Maybe Text)

-- | The S3 key.
s3KeyOutput_s3Key :: Lens' S3KeyOutput (Maybe Text)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.S3KeyOutput.S3KeyOutput
instance GHC.Show.Show Amazonka.RobOMaker.Types.S3KeyOutput.S3KeyOutput
instance GHC.Read.Read Amazonka.RobOMaker.Types.S3KeyOutput.S3KeyOutput
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.S3KeyOutput.S3KeyOutput
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.S3KeyOutput.S3KeyOutput
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.S3KeyOutput.S3KeyOutput
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.S3KeyOutput.S3KeyOutput


module Amazonka.RobOMaker.Types.DataSource

-- | Information about a data source.
--   
--   <i>See:</i> <a>newDataSource</a> smart constructor.
data DataSource
DataSource' :: Maybe [S3KeyOutput] -> Maybe Text -> Maybe Text -> Maybe DataSourceType -> Maybe Text -> DataSource

-- | The list of S3 keys identifying the data source files.
[$sel:s3Keys:DataSource'] :: DataSource -> Maybe [S3KeyOutput]

-- | The location where your files are mounted in the container image.
--   
--   If you've specified the <tt>type</tt> of the data source as an
--   <tt>Archive</tt>, you must provide an Amazon S3 object key to your
--   archive. The object key must point to either a <tt>.zip</tt> or
--   <tt>.tar.gz</tt> file.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>Prefix</tt>, you provide the Amazon S3 prefix that points to the
--   files that you are using for your data source.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>File</tt>, you provide the Amazon S3 path to the file that you're
--   using as your data source.
[$sel:destination:DataSource'] :: DataSource -> Maybe Text

-- | The name of the data source.
[$sel:name:DataSource'] :: DataSource -> Maybe Text

-- | The data type for the data source that you're using for your container
--   image or simulation job. You can use this field to specify whether
--   your data source is an Archive, an Amazon S3 prefix, or a file.
--   
--   If you don't specify a field, the default value is <tt>File</tt>.
[$sel:type':DataSource'] :: DataSource -> Maybe DataSourceType

-- | The S3 bucket where the data files are located.
[$sel:s3Bucket:DataSource'] :: DataSource -> Maybe Text

-- | Create a value of <a>DataSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Keys:DataSource'</a>, <a>dataSource_s3Keys</a> - The list of
--   S3 keys identifying the data source files.
--   
--   <a>$sel:destination:DataSource'</a>, <a>dataSource_destination</a> -
--   The location where your files are mounted in the container image.
--   
--   If you've specified the <tt>type</tt> of the data source as an
--   <tt>Archive</tt>, you must provide an Amazon S3 object key to your
--   archive. The object key must point to either a <tt>.zip</tt> or
--   <tt>.tar.gz</tt> file.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>Prefix</tt>, you provide the Amazon S3 prefix that points to the
--   files that you are using for your data source.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>File</tt>, you provide the Amazon S3 path to the file that you're
--   using as your data source.
--   
--   <a>$sel:name:DataSource'</a>, <a>dataSource_name</a> - The name of the
--   data source.
--   
--   <a>$sel:type':DataSource'</a>, <a>dataSource_type</a> - The data type
--   for the data source that you're using for your container image or
--   simulation job. You can use this field to specify whether your data
--   source is an Archive, an Amazon S3 prefix, or a file.
--   
--   If you don't specify a field, the default value is <tt>File</tt>.
--   
--   <a>$sel:s3Bucket:DataSource'</a>, <a>dataSource_s3Bucket</a> - The S3
--   bucket where the data files are located.
newDataSource :: DataSource

-- | The list of S3 keys identifying the data source files.
dataSource_s3Keys :: Lens' DataSource (Maybe [S3KeyOutput])

-- | The location where your files are mounted in the container image.
--   
--   If you've specified the <tt>type</tt> of the data source as an
--   <tt>Archive</tt>, you must provide an Amazon S3 object key to your
--   archive. The object key must point to either a <tt>.zip</tt> or
--   <tt>.tar.gz</tt> file.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>Prefix</tt>, you provide the Amazon S3 prefix that points to the
--   files that you are using for your data source.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>File</tt>, you provide the Amazon S3 path to the file that you're
--   using as your data source.
dataSource_destination :: Lens' DataSource (Maybe Text)

-- | The name of the data source.
dataSource_name :: Lens' DataSource (Maybe Text)

-- | The data type for the data source that you're using for your container
--   image or simulation job. You can use this field to specify whether
--   your data source is an Archive, an Amazon S3 prefix, or a file.
--   
--   If you don't specify a field, the default value is <tt>File</tt>.
dataSource_type :: Lens' DataSource (Maybe DataSourceType)

-- | The S3 bucket where the data files are located.
dataSource_s3Bucket :: Lens' DataSource (Maybe Text)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.DataSource.DataSource
instance GHC.Show.Show Amazonka.RobOMaker.Types.DataSource.DataSource
instance GHC.Read.Read Amazonka.RobOMaker.Types.DataSource.DataSource
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.DataSource.DataSource
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.DataSource.DataSource
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.DataSource.DataSource
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.DataSource.DataSource


module Amazonka.RobOMaker.Types.S3Object

-- | Information about an S3 object.
--   
--   <i>See:</i> <a>newS3Object</a> smart constructor.
data S3Object
S3Object' :: Maybe Text -> Text -> Text -> S3Object

-- | The etag of the object.
[$sel:etag:S3Object'] :: S3Object -> Maybe Text

-- | The bucket containing the object.
[$sel:bucket:S3Object'] :: S3Object -> Text

-- | The key of the object.
[$sel:key:S3Object'] :: S3Object -> Text

-- | Create a value of <a>S3Object</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:etag:S3Object'</a>, <a>s3Object_etag</a> - The etag of the
--   object.
--   
--   <a>$sel:bucket:S3Object'</a>, <a>s3Object_bucket</a> - The bucket
--   containing the object.
--   
--   <a>$sel:key:S3Object'</a>, <a>s3Object_key</a> - The key of the
--   object.
newS3Object :: Text -> Text -> S3Object

-- | The etag of the object.
s3Object_etag :: Lens' S3Object (Maybe Text)

-- | The bucket containing the object.
s3Object_bucket :: Lens' S3Object Text

-- | The key of the object.
s3Object_key :: Lens' S3Object Text
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.S3Object.S3Object
instance GHC.Show.Show Amazonka.RobOMaker.Types.S3Object.S3Object
instance GHC.Read.Read Amazonka.RobOMaker.Types.S3Object.S3Object
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.S3Object.S3Object
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.S3Object.S3Object
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.S3Object.S3Object
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.S3Object.S3Object
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.S3Object.S3Object


module Amazonka.RobOMaker.Types.DeploymentConfig

-- | Information about a deployment configuration.
--   
--   <i>See:</i> <a>newDeploymentConfig</a> smart constructor.
data DeploymentConfig
DeploymentConfig' :: Maybe Natural -> Maybe S3Object -> Maybe Natural -> Maybe Integer -> DeploymentConfig

-- | The percentage of robots receiving the deployment at the same time.
[$sel:concurrentDeploymentPercentage:DeploymentConfig'] :: DeploymentConfig -> Maybe Natural

-- | The download condition file.
[$sel:downloadConditionFile:DeploymentConfig'] :: DeploymentConfig -> Maybe S3Object

-- | The percentage of deployments that need to fail before stopping
--   deployment.
[$sel:failureThresholdPercentage:DeploymentConfig'] :: DeploymentConfig -> Maybe Natural

-- | The amount of time, in seconds, to wait for deployment to a single
--   robot to complete. Choose a time between 1 minute and 7 days. The
--   default is 5 hours.
[$sel:robotDeploymentTimeoutInSeconds:DeploymentConfig'] :: DeploymentConfig -> Maybe Integer

-- | Create a value of <a>DeploymentConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:concurrentDeploymentPercentage:DeploymentConfig'</a>,
--   <a>deploymentConfig_concurrentDeploymentPercentage</a> - The
--   percentage of robots receiving the deployment at the same time.
--   
--   <a>$sel:downloadConditionFile:DeploymentConfig'</a>,
--   <a>deploymentConfig_downloadConditionFile</a> - The download condition
--   file.
--   
--   <a>$sel:failureThresholdPercentage:DeploymentConfig'</a>,
--   <a>deploymentConfig_failureThresholdPercentage</a> - The percentage of
--   deployments that need to fail before stopping deployment.
--   
--   <a>$sel:robotDeploymentTimeoutInSeconds:DeploymentConfig'</a>,
--   <a>deploymentConfig_robotDeploymentTimeoutInSeconds</a> - The amount
--   of time, in seconds, to wait for deployment to a single robot to
--   complete. Choose a time between 1 minute and 7 days. The default is 5
--   hours.
newDeploymentConfig :: DeploymentConfig

-- | The percentage of robots receiving the deployment at the same time.
deploymentConfig_concurrentDeploymentPercentage :: Lens' DeploymentConfig (Maybe Natural)

-- | The download condition file.
deploymentConfig_downloadConditionFile :: Lens' DeploymentConfig (Maybe S3Object)

-- | The percentage of deployments that need to fail before stopping
--   deployment.
deploymentConfig_failureThresholdPercentage :: Lens' DeploymentConfig (Maybe Natural)

-- | The amount of time, in seconds, to wait for deployment to a single
--   robot to complete. Choose a time between 1 minute and 7 days. The
--   default is 5 hours.
deploymentConfig_robotDeploymentTimeoutInSeconds :: Lens' DeploymentConfig (Maybe Integer)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.DeploymentConfig.DeploymentConfig
instance GHC.Show.Show Amazonka.RobOMaker.Types.DeploymentConfig.DeploymentConfig
instance GHC.Read.Read Amazonka.RobOMaker.Types.DeploymentConfig.DeploymentConfig
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.DeploymentConfig.DeploymentConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.DeploymentConfig.DeploymentConfig
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.DeploymentConfig.DeploymentConfig
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.DeploymentConfig.DeploymentConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.DeploymentConfig.DeploymentConfig


module Amazonka.RobOMaker.Types.DeploymentJob

-- | Information about a deployment job.
--   
--   <i>See:</i> <a>newDeploymentJob</a> smart constructor.
data DeploymentJob
DeploymentJob' :: Maybe Text -> Maybe DeploymentStatus -> Maybe (NonEmpty DeploymentApplicationConfig) -> Maybe Text -> Maybe POSIX -> Maybe DeploymentJobErrorCode -> Maybe DeploymentConfig -> Maybe Text -> DeploymentJob

-- | A short description of the reason why the deployment job failed.
[$sel:failureReason:DeploymentJob'] :: DeploymentJob -> Maybe Text

-- | The status of the deployment job.
[$sel:status:DeploymentJob'] :: DeploymentJob -> Maybe DeploymentStatus

-- | The deployment application configuration.
[$sel:deploymentApplicationConfigs:DeploymentJob'] :: DeploymentJob -> Maybe (NonEmpty DeploymentApplicationConfig)

-- | The Amazon Resource Name (ARN) of the deployment job.
[$sel:arn:DeploymentJob'] :: DeploymentJob -> Maybe Text

-- | The time, in milliseconds since the epoch, when the deployment job was
--   created.
[$sel:createdAt:DeploymentJob'] :: DeploymentJob -> Maybe POSIX

-- | The deployment job failure code.
[$sel:failureCode:DeploymentJob'] :: DeploymentJob -> Maybe DeploymentJobErrorCode

-- | The deployment configuration.
[$sel:deploymentConfig:DeploymentJob'] :: DeploymentJob -> Maybe DeploymentConfig

-- | The Amazon Resource Name (ARN) of the fleet.
[$sel:fleet:DeploymentJob'] :: DeploymentJob -> Maybe Text

-- | Create a value of <a>DeploymentJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DeploymentJob'</a>,
--   <a>deploymentJob_failureReason</a> - A short description of the reason
--   why the deployment job failed.
--   
--   <a>$sel:status:DeploymentJob'</a>, <a>deploymentJob_status</a> - The
--   status of the deployment job.
--   
--   <a>$sel:deploymentApplicationConfigs:DeploymentJob'</a>,
--   <a>deploymentJob_deploymentApplicationConfigs</a> - The deployment
--   application configuration.
--   
--   <a>$sel:arn:DeploymentJob'</a>, <a>deploymentJob_arn</a> - The Amazon
--   Resource Name (ARN) of the deployment job.
--   
--   <a>$sel:createdAt:DeploymentJob'</a>, <a>deploymentJob_createdAt</a> -
--   The time, in milliseconds since the epoch, when the deployment job was
--   created.
--   
--   <a>$sel:failureCode:DeploymentJob'</a>,
--   <a>deploymentJob_failureCode</a> - The deployment job failure code.
--   
--   <a>$sel:deploymentConfig:DeploymentJob'</a>,
--   <a>deploymentJob_deploymentConfig</a> - The deployment configuration.
--   
--   <a>$sel:fleet:DeploymentJob'</a>, <a>deploymentJob_fleet</a> - The
--   Amazon Resource Name (ARN) of the fleet.
newDeploymentJob :: DeploymentJob

-- | A short description of the reason why the deployment job failed.
deploymentJob_failureReason :: Lens' DeploymentJob (Maybe Text)

-- | The status of the deployment job.
deploymentJob_status :: Lens' DeploymentJob (Maybe DeploymentStatus)

-- | The deployment application configuration.
deploymentJob_deploymentApplicationConfigs :: Lens' DeploymentJob (Maybe (NonEmpty DeploymentApplicationConfig))

-- | The Amazon Resource Name (ARN) of the deployment job.
deploymentJob_arn :: Lens' DeploymentJob (Maybe Text)

-- | The time, in milliseconds since the epoch, when the deployment job was
--   created.
deploymentJob_createdAt :: Lens' DeploymentJob (Maybe UTCTime)

-- | The deployment job failure code.
deploymentJob_failureCode :: Lens' DeploymentJob (Maybe DeploymentJobErrorCode)

-- | The deployment configuration.
deploymentJob_deploymentConfig :: Lens' DeploymentJob (Maybe DeploymentConfig)

-- | The Amazon Resource Name (ARN) of the fleet.
deploymentJob_fleet :: Lens' DeploymentJob (Maybe Text)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.DeploymentJob.DeploymentJob
instance GHC.Show.Show Amazonka.RobOMaker.Types.DeploymentJob.DeploymentJob
instance GHC.Read.Read Amazonka.RobOMaker.Types.DeploymentJob.DeploymentJob
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.DeploymentJob.DeploymentJob
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.DeploymentJob.DeploymentJob
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.DeploymentJob.DeploymentJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.DeploymentJob.DeploymentJob


module Amazonka.RobOMaker.Types.SimulationJobBatchErrorCode
newtype SimulationJobBatchErrorCode
SimulationJobBatchErrorCode' :: Text -> SimulationJobBatchErrorCode
[fromSimulationJobBatchErrorCode] :: SimulationJobBatchErrorCode -> Text
pattern SimulationJobBatchErrorCode_InternalServiceError :: SimulationJobBatchErrorCode
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.SimulationJobBatchErrorCode.SimulationJobBatchErrorCode
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.SimulationJobBatchErrorCode.SimulationJobBatchErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.SimulationJobBatchErrorCode.SimulationJobBatchErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.SimulationJobBatchErrorCode.SimulationJobBatchErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.SimulationJobBatchErrorCode.SimulationJobBatchErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.SimulationJobBatchErrorCode.SimulationJobBatchErrorCode
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.SimulationJobBatchErrorCode.SimulationJobBatchErrorCode
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.SimulationJobBatchErrorCode.SimulationJobBatchErrorCode
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.SimulationJobBatchErrorCode.SimulationJobBatchErrorCode
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.SimulationJobBatchErrorCode.SimulationJobBatchErrorCode
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.SimulationJobBatchErrorCode.SimulationJobBatchErrorCode
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.SimulationJobBatchErrorCode.SimulationJobBatchErrorCode
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.SimulationJobBatchErrorCode.SimulationJobBatchErrorCode
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.SimulationJobBatchErrorCode.SimulationJobBatchErrorCode
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.SimulationJobBatchErrorCode.SimulationJobBatchErrorCode
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.SimulationJobBatchErrorCode.SimulationJobBatchErrorCode
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.SimulationJobBatchErrorCode.SimulationJobBatchErrorCode
instance GHC.Read.Read Amazonka.RobOMaker.Types.SimulationJobBatchErrorCode.SimulationJobBatchErrorCode
instance GHC.Show.Show Amazonka.RobOMaker.Types.SimulationJobBatchErrorCode.SimulationJobBatchErrorCode


module Amazonka.RobOMaker.Types.SimulationJobBatchStatus
newtype SimulationJobBatchStatus
SimulationJobBatchStatus' :: Text -> SimulationJobBatchStatus
[fromSimulationJobBatchStatus] :: SimulationJobBatchStatus -> Text
pattern SimulationJobBatchStatus_Canceled :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_Canceling :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_Completed :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_Completing :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_Failed :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_InProgress :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_Pending :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_TimedOut :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_TimingOut :: SimulationJobBatchStatus
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.SimulationJobBatchStatus.SimulationJobBatchStatus
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.SimulationJobBatchStatus.SimulationJobBatchStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.SimulationJobBatchStatus.SimulationJobBatchStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.SimulationJobBatchStatus.SimulationJobBatchStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.SimulationJobBatchStatus.SimulationJobBatchStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.SimulationJobBatchStatus.SimulationJobBatchStatus
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.SimulationJobBatchStatus.SimulationJobBatchStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.SimulationJobBatchStatus.SimulationJobBatchStatus
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.SimulationJobBatchStatus.SimulationJobBatchStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.SimulationJobBatchStatus.SimulationJobBatchStatus
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.SimulationJobBatchStatus.SimulationJobBatchStatus
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.SimulationJobBatchStatus.SimulationJobBatchStatus
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.SimulationJobBatchStatus.SimulationJobBatchStatus
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.SimulationJobBatchStatus.SimulationJobBatchStatus
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.SimulationJobBatchStatus.SimulationJobBatchStatus
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.SimulationJobBatchStatus.SimulationJobBatchStatus
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.SimulationJobBatchStatus.SimulationJobBatchStatus
instance GHC.Read.Read Amazonka.RobOMaker.Types.SimulationJobBatchStatus.SimulationJobBatchStatus
instance GHC.Show.Show Amazonka.RobOMaker.Types.SimulationJobBatchStatus.SimulationJobBatchStatus


module Amazonka.RobOMaker.Types.SimulationJobBatchSummary

-- | Information about a simulation job batch.
--   
--   <i>See:</i> <a>newSimulationJobBatchSummary</a> smart constructor.
data SimulationJobBatchSummary
SimulationJobBatchSummary' :: Maybe SimulationJobBatchStatus -> Maybe Int -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Int -> Maybe Int -> SimulationJobBatchSummary

-- | The status of the simulation job batch.
--   
--   <ul>
--   <li><i>Pending</i> The simulation job batch request is pending.</li>
--   <li><i>InProgress</i> The simulation job batch is in progress.</li>
--   <li><i>Failed</i> The simulation job batch failed. One or more
--   simulation job requests could not be completed due to an internal
--   failure (like <tt>InternalServiceError</tt>). See <tt>failureCode</tt>
--   and <tt>failureReason</tt> for more information.</li>
--   <li><i>Completed</i> The simulation batch job completed. A batch is
--   complete when (1) there are no pending simulation job requests in the
--   batch and none of the failed simulation job requests are due to
--   <tt>InternalServiceError</tt> and (2) when all created simulation jobs
--   have reached a terminal state (for example, <tt>Completed</tt> or
--   <tt>Failed</tt>).</li>
--   <li><i>Canceled</i> The simulation batch job was cancelled.</li>
--   <li><i>Canceling</i> The simulation batch job is being cancelled.</li>
--   <li><i>Completing</i> The simulation batch job is completing.</li>
--   <li><i>TimingOut</i> The simulation job batch is timing out.If a batch
--   timing out, and there are pending requests that were failing due to an
--   internal failure (like <tt>InternalServiceError</tt>), the batch
--   status will be <tt>Failed</tt>. If there are no such failing request,
--   the batch status will be <tt>TimedOut</tt>.</li>
--   <li><i>TimedOut</i> The simulation batch job timed out.</li>
--   </ul>
[$sel:status:SimulationJobBatchSummary'] :: SimulationJobBatchSummary -> Maybe SimulationJobBatchStatus

-- | The number of created simulation job requests.
[$sel:createdRequestCount:SimulationJobBatchSummary'] :: SimulationJobBatchSummary -> Maybe Int

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch was last updated.
[$sel:lastUpdatedAt:SimulationJobBatchSummary'] :: SimulationJobBatchSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the batch.
[$sel:arn:SimulationJobBatchSummary'] :: SimulationJobBatchSummary -> Maybe Text

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch was created.
[$sel:createdAt:SimulationJobBatchSummary'] :: SimulationJobBatchSummary -> Maybe POSIX

-- | The number of pending simulation job requests.
[$sel:pendingRequestCount:SimulationJobBatchSummary'] :: SimulationJobBatchSummary -> Maybe Int

-- | The number of failed simulation job requests.
[$sel:failedRequestCount:SimulationJobBatchSummary'] :: SimulationJobBatchSummary -> Maybe Int

-- | Create a value of <a>SimulationJobBatchSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_status</a> - The status of the simulation
--   job batch.
--   
--   <ul>
--   <li><i>Pending</i> The simulation job batch request is pending.</li>
--   <li><i>InProgress</i> The simulation job batch is in progress.</li>
--   <li><i>Failed</i> The simulation job batch failed. One or more
--   simulation job requests could not be completed due to an internal
--   failure (like <tt>InternalServiceError</tt>). See <tt>failureCode</tt>
--   and <tt>failureReason</tt> for more information.</li>
--   <li><i>Completed</i> The simulation batch job completed. A batch is
--   complete when (1) there are no pending simulation job requests in the
--   batch and none of the failed simulation job requests are due to
--   <tt>InternalServiceError</tt> and (2) when all created simulation jobs
--   have reached a terminal state (for example, <tt>Completed</tt> or
--   <tt>Failed</tt>).</li>
--   <li><i>Canceled</i> The simulation batch job was cancelled.</li>
--   <li><i>Canceling</i> The simulation batch job is being cancelled.</li>
--   <li><i>Completing</i> The simulation batch job is completing.</li>
--   <li><i>TimingOut</i> The simulation job batch is timing out.If a batch
--   timing out, and there are pending requests that were failing due to an
--   internal failure (like <tt>InternalServiceError</tt>), the batch
--   status will be <tt>Failed</tt>. If there are no such failing request,
--   the batch status will be <tt>TimedOut</tt>.</li>
--   <li><i>TimedOut</i> The simulation batch job timed out.</li>
--   </ul>
--   
--   <a>$sel:createdRequestCount:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_createdRequestCount</a> - The number of
--   created simulation job requests.
--   
--   <a>$sel:lastUpdatedAt:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the simulation job batch was last
--   updated.
--   
--   <a>$sel:arn:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_arn</a> - The Amazon Resource Name (ARN)
--   of the batch.
--   
--   <a>$sel:createdAt:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_createdAt</a> - The time, in milliseconds
--   since the epoch, when the simulation job batch was created.
--   
--   <a>$sel:pendingRequestCount:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_pendingRequestCount</a> - The number of
--   pending simulation job requests.
--   
--   <a>$sel:failedRequestCount:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_failedRequestCount</a> - The number of
--   failed simulation job requests.
newSimulationJobBatchSummary :: SimulationJobBatchSummary

-- | The status of the simulation job batch.
--   
--   <ul>
--   <li><i>Pending</i> The simulation job batch request is pending.</li>
--   <li><i>InProgress</i> The simulation job batch is in progress.</li>
--   <li><i>Failed</i> The simulation job batch failed. One or more
--   simulation job requests could not be completed due to an internal
--   failure (like <tt>InternalServiceError</tt>). See <tt>failureCode</tt>
--   and <tt>failureReason</tt> for more information.</li>
--   <li><i>Completed</i> The simulation batch job completed. A batch is
--   complete when (1) there are no pending simulation job requests in the
--   batch and none of the failed simulation job requests are due to
--   <tt>InternalServiceError</tt> and (2) when all created simulation jobs
--   have reached a terminal state (for example, <tt>Completed</tt> or
--   <tt>Failed</tt>).</li>
--   <li><i>Canceled</i> The simulation batch job was cancelled.</li>
--   <li><i>Canceling</i> The simulation batch job is being cancelled.</li>
--   <li><i>Completing</i> The simulation batch job is completing.</li>
--   <li><i>TimingOut</i> The simulation job batch is timing out.If a batch
--   timing out, and there are pending requests that were failing due to an
--   internal failure (like <tt>InternalServiceError</tt>), the batch
--   status will be <tt>Failed</tt>. If there are no such failing request,
--   the batch status will be <tt>TimedOut</tt>.</li>
--   <li><i>TimedOut</i> The simulation batch job timed out.</li>
--   </ul>
simulationJobBatchSummary_status :: Lens' SimulationJobBatchSummary (Maybe SimulationJobBatchStatus)

-- | The number of created simulation job requests.
simulationJobBatchSummary_createdRequestCount :: Lens' SimulationJobBatchSummary (Maybe Int)

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch was last updated.
simulationJobBatchSummary_lastUpdatedAt :: Lens' SimulationJobBatchSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the batch.
simulationJobBatchSummary_arn :: Lens' SimulationJobBatchSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch was created.
simulationJobBatchSummary_createdAt :: Lens' SimulationJobBatchSummary (Maybe UTCTime)

-- | The number of pending simulation job requests.
simulationJobBatchSummary_pendingRequestCount :: Lens' SimulationJobBatchSummary (Maybe Int)

-- | The number of failed simulation job requests.
simulationJobBatchSummary_failedRequestCount :: Lens' SimulationJobBatchSummary (Maybe Int)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.SimulationJobBatchSummary.SimulationJobBatchSummary
instance GHC.Show.Show Amazonka.RobOMaker.Types.SimulationJobBatchSummary.SimulationJobBatchSummary
instance GHC.Read.Read Amazonka.RobOMaker.Types.SimulationJobBatchSummary.SimulationJobBatchSummary
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.SimulationJobBatchSummary.SimulationJobBatchSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.SimulationJobBatchSummary.SimulationJobBatchSummary
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.SimulationJobBatchSummary.SimulationJobBatchSummary
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.SimulationJobBatchSummary.SimulationJobBatchSummary


module Amazonka.RobOMaker.Types.SimulationJobErrorCode
newtype SimulationJobErrorCode
SimulationJobErrorCode' :: Text -> SimulationJobErrorCode
[fromSimulationJobErrorCode] :: SimulationJobErrorCode -> Text
pattern SimulationJobErrorCode_BadPermissionsCloudwatchLogs :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BadPermissionsRobotApplication :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BadPermissionsS3Object :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BadPermissionsS3Output :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BadPermissionsSimulationApplication :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BadPermissionsUserCredentials :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BatchCanceled :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BatchTimedOut :: SimulationJobErrorCode
pattern SimulationJobErrorCode_ENILimitExceeded :: SimulationJobErrorCode
pattern SimulationJobErrorCode_InternalServiceError :: SimulationJobErrorCode
pattern SimulationJobErrorCode_InvalidBundleRobotApplication :: SimulationJobErrorCode
pattern SimulationJobErrorCode_InvalidBundleSimulationApplication :: SimulationJobErrorCode
pattern SimulationJobErrorCode_InvalidInput :: SimulationJobErrorCode
pattern SimulationJobErrorCode_InvalidS3Resource :: SimulationJobErrorCode
pattern SimulationJobErrorCode_LimitExceeded :: SimulationJobErrorCode
pattern SimulationJobErrorCode_MismatchedEtag :: SimulationJobErrorCode
pattern SimulationJobErrorCode_RequestThrottled :: SimulationJobErrorCode
pattern SimulationJobErrorCode_ResourceNotFound :: SimulationJobErrorCode
pattern SimulationJobErrorCode_RobotApplicationCrash :: SimulationJobErrorCode
pattern SimulationJobErrorCode_RobotApplicationHealthCheckFailure :: SimulationJobErrorCode
pattern SimulationJobErrorCode_RobotApplicationVersionMismatchedEtag :: SimulationJobErrorCode
pattern SimulationJobErrorCode_SimulationApplicationCrash :: SimulationJobErrorCode
pattern SimulationJobErrorCode_SimulationApplicationHealthCheckFailure :: SimulationJobErrorCode
pattern SimulationJobErrorCode_SimulationApplicationVersionMismatchedEtag :: SimulationJobErrorCode
pattern SimulationJobErrorCode_SubnetIpLimitExceeded :: SimulationJobErrorCode
pattern SimulationJobErrorCode_ThrottlingError :: SimulationJobErrorCode
pattern SimulationJobErrorCode_UploadContentMismatchError :: SimulationJobErrorCode
pattern SimulationJobErrorCode_WrongRegionRobotApplication :: SimulationJobErrorCode
pattern SimulationJobErrorCode_WrongRegionS3Bucket :: SimulationJobErrorCode
pattern SimulationJobErrorCode_WrongRegionS3Output :: SimulationJobErrorCode
pattern SimulationJobErrorCode_WrongRegionSimulationApplication :: SimulationJobErrorCode
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.SimulationJobErrorCode.SimulationJobErrorCode
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.SimulationJobErrorCode.SimulationJobErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.SimulationJobErrorCode.SimulationJobErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.SimulationJobErrorCode.SimulationJobErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.SimulationJobErrorCode.SimulationJobErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.SimulationJobErrorCode.SimulationJobErrorCode
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.SimulationJobErrorCode.SimulationJobErrorCode
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.SimulationJobErrorCode.SimulationJobErrorCode
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.SimulationJobErrorCode.SimulationJobErrorCode
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.SimulationJobErrorCode.SimulationJobErrorCode
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.SimulationJobErrorCode.SimulationJobErrorCode
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.SimulationJobErrorCode.SimulationJobErrorCode
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.SimulationJobErrorCode.SimulationJobErrorCode
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.SimulationJobErrorCode.SimulationJobErrorCode
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.SimulationJobErrorCode.SimulationJobErrorCode
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.SimulationJobErrorCode.SimulationJobErrorCode
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.SimulationJobErrorCode.SimulationJobErrorCode
instance GHC.Read.Read Amazonka.RobOMaker.Types.SimulationJobErrorCode.SimulationJobErrorCode
instance GHC.Show.Show Amazonka.RobOMaker.Types.SimulationJobErrorCode.SimulationJobErrorCode


module Amazonka.RobOMaker.Types.SimulationJobStatus
newtype SimulationJobStatus
SimulationJobStatus' :: Text -> SimulationJobStatus
[fromSimulationJobStatus] :: SimulationJobStatus -> Text
pattern SimulationJobStatus_Canceled :: SimulationJobStatus
pattern SimulationJobStatus_Completed :: SimulationJobStatus
pattern SimulationJobStatus_Failed :: SimulationJobStatus
pattern SimulationJobStatus_Pending :: SimulationJobStatus
pattern SimulationJobStatus_Preparing :: SimulationJobStatus
pattern SimulationJobStatus_Restarting :: SimulationJobStatus
pattern SimulationJobStatus_Running :: SimulationJobStatus
pattern SimulationJobStatus_RunningFailed :: SimulationJobStatus
pattern SimulationJobStatus_Terminated :: SimulationJobStatus
pattern SimulationJobStatus_Terminating :: SimulationJobStatus
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.SimulationJobStatus.SimulationJobStatus
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.SimulationJobStatus.SimulationJobStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.SimulationJobStatus.SimulationJobStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.SimulationJobStatus.SimulationJobStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.SimulationJobStatus.SimulationJobStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.SimulationJobStatus.SimulationJobStatus
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.SimulationJobStatus.SimulationJobStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.SimulationJobStatus.SimulationJobStatus
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.SimulationJobStatus.SimulationJobStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.SimulationJobStatus.SimulationJobStatus
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.SimulationJobStatus.SimulationJobStatus
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.SimulationJobStatus.SimulationJobStatus
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.SimulationJobStatus.SimulationJobStatus
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.SimulationJobStatus.SimulationJobStatus
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.SimulationJobStatus.SimulationJobStatus
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.SimulationJobStatus.SimulationJobStatus
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.SimulationJobStatus.SimulationJobStatus
instance GHC.Read.Read Amazonka.RobOMaker.Types.SimulationJobStatus.SimulationJobStatus
instance GHC.Show.Show Amazonka.RobOMaker.Types.SimulationJobStatus.SimulationJobStatus


module Amazonka.RobOMaker.Types.SimulationJobSummary

-- | Summary information for a simulation job.
--   
--   <i>See:</i> <a>newSimulationJobSummary</a> smart constructor.
data SimulationJobSummary
SimulationJobSummary' :: Maybe SimulationJobStatus -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe ComputeType -> Maybe [Text] -> SimulationJobSummary

-- | The status of the simulation job.
[$sel:status:SimulationJobSummary'] :: SimulationJobSummary -> Maybe SimulationJobStatus

-- | A list of simulation job robot application names.
[$sel:robotApplicationNames:SimulationJobSummary'] :: SimulationJobSummary -> Maybe [Text]

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last updated.
[$sel:lastUpdatedAt:SimulationJobSummary'] :: SimulationJobSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the simulation job.
[$sel:arn:SimulationJobSummary'] :: SimulationJobSummary -> Maybe Text

-- | The name of the simulation job.
[$sel:name:SimulationJobSummary'] :: SimulationJobSummary -> Maybe Text

-- | A list of simulation job simulation application names.
[$sel:simulationApplicationNames:SimulationJobSummary'] :: SimulationJobSummary -> Maybe [Text]

-- | The compute type for the simulation job summary.
[$sel:computeType:SimulationJobSummary'] :: SimulationJobSummary -> Maybe ComputeType

-- | The names of the data sources.
[$sel:dataSourceNames:SimulationJobSummary'] :: SimulationJobSummary -> Maybe [Text]

-- | Create a value of <a>SimulationJobSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_status</a> - The status of the simulation job.
--   
--   <a>$sel:robotApplicationNames:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_robotApplicationNames</a> - A list of
--   simulation job robot application names.
--   
--   <a>$sel:lastUpdatedAt:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_lastUpdatedAt</a> - The time, in milliseconds
--   since the epoch, when the simulation job was last updated.
--   
--   <a>$sel:arn:SimulationJobSummary'</a>, <a>simulationJobSummary_arn</a>
--   - The Amazon Resource Name (ARN) of the simulation job.
--   
--   <a>$sel:name:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_name</a> - The name of the simulation job.
--   
--   <a>$sel:simulationApplicationNames:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_simulationApplicationNames</a> - A list of
--   simulation job simulation application names.
--   
--   <a>$sel:computeType:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_computeType</a> - The compute type for the
--   simulation job summary.
--   
--   <a>$sel:dataSourceNames:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_dataSourceNames</a> - The names of the data
--   sources.
newSimulationJobSummary :: SimulationJobSummary

-- | The status of the simulation job.
simulationJobSummary_status :: Lens' SimulationJobSummary (Maybe SimulationJobStatus)

-- | A list of simulation job robot application names.
simulationJobSummary_robotApplicationNames :: Lens' SimulationJobSummary (Maybe [Text])

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last updated.
simulationJobSummary_lastUpdatedAt :: Lens' SimulationJobSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the simulation job.
simulationJobSummary_arn :: Lens' SimulationJobSummary (Maybe Text)

-- | The name of the simulation job.
simulationJobSummary_name :: Lens' SimulationJobSummary (Maybe Text)

-- | A list of simulation job simulation application names.
simulationJobSummary_simulationApplicationNames :: Lens' SimulationJobSummary (Maybe [Text])

-- | The compute type for the simulation job summary.
simulationJobSummary_computeType :: Lens' SimulationJobSummary (Maybe ComputeType)

-- | The names of the data sources.
simulationJobSummary_dataSourceNames :: Lens' SimulationJobSummary (Maybe [Text])
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.SimulationJobSummary.SimulationJobSummary
instance GHC.Show.Show Amazonka.RobOMaker.Types.SimulationJobSummary.SimulationJobSummary
instance GHC.Read.Read Amazonka.RobOMaker.Types.SimulationJobSummary.SimulationJobSummary
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.SimulationJobSummary.SimulationJobSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.SimulationJobSummary.SimulationJobSummary
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.SimulationJobSummary.SimulationJobSummary
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.SimulationJobSummary.SimulationJobSummary


module Amazonka.RobOMaker.Types.SimulationSoftwareSuiteType
newtype SimulationSoftwareSuiteType
SimulationSoftwareSuiteType' :: Text -> SimulationSoftwareSuiteType
[fromSimulationSoftwareSuiteType] :: SimulationSoftwareSuiteType -> Text
pattern SimulationSoftwareSuiteType_Gazebo :: SimulationSoftwareSuiteType
pattern SimulationSoftwareSuiteType_RosbagPlay :: SimulationSoftwareSuiteType
pattern SimulationSoftwareSuiteType_SimulationRuntime :: SimulationSoftwareSuiteType
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.SimulationSoftwareSuiteType.SimulationSoftwareSuiteType
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.SimulationSoftwareSuiteType.SimulationSoftwareSuiteType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.SimulationSoftwareSuiteType.SimulationSoftwareSuiteType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.SimulationSoftwareSuiteType.SimulationSoftwareSuiteType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.SimulationSoftwareSuiteType.SimulationSoftwareSuiteType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.SimulationSoftwareSuiteType.SimulationSoftwareSuiteType
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.SimulationSoftwareSuiteType.SimulationSoftwareSuiteType
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.SimulationSoftwareSuiteType.SimulationSoftwareSuiteType
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.SimulationSoftwareSuiteType.SimulationSoftwareSuiteType
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.SimulationSoftwareSuiteType.SimulationSoftwareSuiteType
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.SimulationSoftwareSuiteType.SimulationSoftwareSuiteType
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.SimulationSoftwareSuiteType.SimulationSoftwareSuiteType
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.SimulationSoftwareSuiteType.SimulationSoftwareSuiteType
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.SimulationSoftwareSuiteType.SimulationSoftwareSuiteType
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.SimulationSoftwareSuiteType.SimulationSoftwareSuiteType
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.SimulationSoftwareSuiteType.SimulationSoftwareSuiteType
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.SimulationSoftwareSuiteType.SimulationSoftwareSuiteType
instance GHC.Read.Read Amazonka.RobOMaker.Types.SimulationSoftwareSuiteType.SimulationSoftwareSuiteType
instance GHC.Show.Show Amazonka.RobOMaker.Types.SimulationSoftwareSuiteType.SimulationSoftwareSuiteType


module Amazonka.RobOMaker.Types.SimulationSoftwareSuite

-- | Information about a simulation software suite.
--   
--   <i>See:</i> <a>newSimulationSoftwareSuite</a> smart constructor.
data SimulationSoftwareSuite
SimulationSoftwareSuite' :: Maybe SimulationSoftwareSuiteType -> Maybe Text -> SimulationSoftwareSuite

-- | The name of the simulation software suite.
[$sel:name:SimulationSoftwareSuite'] :: SimulationSoftwareSuite -> Maybe SimulationSoftwareSuiteType

-- | The version of the simulation software suite.
[$sel:version:SimulationSoftwareSuite'] :: SimulationSoftwareSuite -> Maybe Text

-- | Create a value of <a>SimulationSoftwareSuite</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:SimulationSoftwareSuite'</a>,
--   <a>simulationSoftwareSuite_name</a> - The name of the simulation
--   software suite.
--   
--   <a>$sel:version:SimulationSoftwareSuite'</a>,
--   <a>simulationSoftwareSuite_version</a> - The version of the simulation
--   software suite.
newSimulationSoftwareSuite :: SimulationSoftwareSuite

-- | The name of the simulation software suite.
simulationSoftwareSuite_name :: Lens' SimulationSoftwareSuite (Maybe SimulationSoftwareSuiteType)

-- | The version of the simulation software suite.
simulationSoftwareSuite_version :: Lens' SimulationSoftwareSuite (Maybe Text)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.SimulationSoftwareSuite.SimulationSoftwareSuite
instance GHC.Show.Show Amazonka.RobOMaker.Types.SimulationSoftwareSuite.SimulationSoftwareSuite
instance GHC.Read.Read Amazonka.RobOMaker.Types.SimulationSoftwareSuite.SimulationSoftwareSuite
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.SimulationSoftwareSuite.SimulationSoftwareSuite
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.SimulationSoftwareSuite.SimulationSoftwareSuite
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.SimulationSoftwareSuite.SimulationSoftwareSuite
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.SimulationSoftwareSuite.SimulationSoftwareSuite
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.SimulationSoftwareSuite.SimulationSoftwareSuite


module Amazonka.RobOMaker.Types.SimulationApplicationSummary

-- | Summary information for a simulation application.
--   
--   <i>See:</i> <a>newSimulationApplicationSummary</a> smart constructor.
data SimulationApplicationSummary
SimulationApplicationSummary' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe SimulationSoftwareSuite -> Maybe RobotSoftwareSuite -> SimulationApplicationSummary

-- | The time, in milliseconds since the epoch, when the simulation
--   application was last updated.
[$sel:lastUpdatedAt:SimulationApplicationSummary'] :: SimulationApplicationSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the simulation application.
[$sel:arn:SimulationApplicationSummary'] :: SimulationApplicationSummary -> Maybe Text

-- | The name of the simulation application.
[$sel:name:SimulationApplicationSummary'] :: SimulationApplicationSummary -> Maybe Text

-- | The version of the simulation application.
[$sel:version:SimulationApplicationSummary'] :: SimulationApplicationSummary -> Maybe Text

-- | Information about a simulation software suite.
[$sel:simulationSoftwareSuite:SimulationApplicationSummary'] :: SimulationApplicationSummary -> Maybe SimulationSoftwareSuite

-- | Information about a robot software suite (ROS distribution).
[$sel:robotSoftwareSuite:SimulationApplicationSummary'] :: SimulationApplicationSummary -> Maybe RobotSoftwareSuite

-- | Create a value of <a>SimulationApplicationSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:SimulationApplicationSummary'</a>,
--   <a>simulationApplicationSummary_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the simulation application was last
--   updated.
--   
--   <a>$sel:arn:SimulationApplicationSummary'</a>,
--   <a>simulationApplicationSummary_arn</a> - The Amazon Resource Name
--   (ARN) of the simulation application.
--   
--   <a>$sel:name:SimulationApplicationSummary'</a>,
--   <a>simulationApplicationSummary_name</a> - The name of the simulation
--   application.
--   
--   <a>$sel:version:SimulationApplicationSummary'</a>,
--   <a>simulationApplicationSummary_version</a> - The version of the
--   simulation application.
--   
--   <a>$sel:simulationSoftwareSuite:SimulationApplicationSummary'</a>,
--   <a>simulationApplicationSummary_simulationSoftwareSuite</a> -
--   Information about a simulation software suite.
--   
--   <a>$sel:robotSoftwareSuite:SimulationApplicationSummary'</a>,
--   <a>simulationApplicationSummary_robotSoftwareSuite</a> - Information
--   about a robot software suite (ROS distribution).
newSimulationApplicationSummary :: SimulationApplicationSummary

-- | The time, in milliseconds since the epoch, when the simulation
--   application was last updated.
simulationApplicationSummary_lastUpdatedAt :: Lens' SimulationApplicationSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the simulation application.
simulationApplicationSummary_arn :: Lens' SimulationApplicationSummary (Maybe Text)

-- | The name of the simulation application.
simulationApplicationSummary_name :: Lens' SimulationApplicationSummary (Maybe Text)

-- | The version of the simulation application.
simulationApplicationSummary_version :: Lens' SimulationApplicationSummary (Maybe Text)

-- | Information about a simulation software suite.
simulationApplicationSummary_simulationSoftwareSuite :: Lens' SimulationApplicationSummary (Maybe SimulationSoftwareSuite)

-- | Information about a robot software suite (ROS distribution).
simulationApplicationSummary_robotSoftwareSuite :: Lens' SimulationApplicationSummary (Maybe RobotSoftwareSuite)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.SimulationApplicationSummary.SimulationApplicationSummary
instance GHC.Show.Show Amazonka.RobOMaker.Types.SimulationApplicationSummary.SimulationApplicationSummary
instance GHC.Read.Read Amazonka.RobOMaker.Types.SimulationApplicationSummary.SimulationApplicationSummary
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.SimulationApplicationSummary.SimulationApplicationSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.SimulationApplicationSummary.SimulationApplicationSummary
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.SimulationApplicationSummary.SimulationApplicationSummary
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.SimulationApplicationSummary.SimulationApplicationSummary


module Amazonka.RobOMaker.Types.Source

-- | Information about a source.
--   
--   <i>See:</i> <a>newSource</a> smart constructor.
data Source
Source' :: Maybe Text -> Maybe Text -> Maybe Architecture -> Maybe Text -> Source

-- | A hash of the object specified by <tt>s3Bucket</tt> and
--   <tt>s3Key</tt>.
[$sel:etag:Source'] :: Source -> Maybe Text

-- | The s3 object key.
[$sel:s3Key:Source'] :: Source -> Maybe Text

-- | The taget processor architecture for the application.
[$sel:architecture:Source'] :: Source -> Maybe Architecture

-- | The s3 bucket name.
[$sel:s3Bucket:Source'] :: Source -> Maybe Text

-- | Create a value of <a>Source</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:etag:Source'</a>, <a>source_etag</a> - A hash of the object
--   specified by <tt>s3Bucket</tt> and <tt>s3Key</tt>.
--   
--   <a>$sel:s3Key:Source'</a>, <a>source_s3Key</a> - The s3 object key.
--   
--   <a>$sel:architecture:Source'</a>, <a>source_architecture</a> - The
--   taget processor architecture for the application.
--   
--   <a>$sel:s3Bucket:Source'</a>, <a>source_s3Bucket</a> - The s3 bucket
--   name.
newSource :: Source

-- | A hash of the object specified by <tt>s3Bucket</tt> and
--   <tt>s3Key</tt>.
source_etag :: Lens' Source (Maybe Text)

-- | The s3 object key.
source_s3Key :: Lens' Source (Maybe Text)

-- | The taget processor architecture for the application.
source_architecture :: Lens' Source (Maybe Architecture)

-- | The s3 bucket name.
source_s3Bucket :: Lens' Source (Maybe Text)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.Source.Source
instance GHC.Show.Show Amazonka.RobOMaker.Types.Source.Source
instance GHC.Read.Read Amazonka.RobOMaker.Types.Source.Source
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.Source.Source
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.Source.Source
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.Source.Source
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.Source.Source


module Amazonka.RobOMaker.Types.SourceConfig

-- | Information about a source configuration.
--   
--   <i>See:</i> <a>newSourceConfig</a> smart constructor.
data SourceConfig
SourceConfig' :: Maybe Text -> Maybe Architecture -> Maybe Text -> SourceConfig

-- | The s3 object key.
[$sel:s3Key:SourceConfig'] :: SourceConfig -> Maybe Text

-- | The target processor architecture for the application.
[$sel:architecture:SourceConfig'] :: SourceConfig -> Maybe Architecture

-- | The Amazon S3 bucket name.
[$sel:s3Bucket:SourceConfig'] :: SourceConfig -> Maybe Text

-- | Create a value of <a>SourceConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Key:SourceConfig'</a>, <a>sourceConfig_s3Key</a> - The s3
--   object key.
--   
--   <a>$sel:architecture:SourceConfig'</a>,
--   <a>sourceConfig_architecture</a> - The target processor architecture
--   for the application.
--   
--   <a>$sel:s3Bucket:SourceConfig'</a>, <a>sourceConfig_s3Bucket</a> - The
--   Amazon S3 bucket name.
newSourceConfig :: SourceConfig

-- | The s3 object key.
sourceConfig_s3Key :: Lens' SourceConfig (Maybe Text)

-- | The target processor architecture for the application.
sourceConfig_architecture :: Lens' SourceConfig (Maybe Architecture)

-- | The Amazon S3 bucket name.
sourceConfig_s3Bucket :: Lens' SourceConfig (Maybe Text)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.SourceConfig.SourceConfig
instance GHC.Show.Show Amazonka.RobOMaker.Types.SourceConfig.SourceConfig
instance GHC.Read.Read Amazonka.RobOMaker.Types.SourceConfig.SourceConfig
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.SourceConfig.SourceConfig
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.SourceConfig.SourceConfig
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.SourceConfig.SourceConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.SourceConfig.SourceConfig


module Amazonka.RobOMaker.Types.TemplateLocation

-- | Information about a template location.
--   
--   <i>See:</i> <a>newTemplateLocation</a> smart constructor.
data TemplateLocation
TemplateLocation' :: Text -> Text -> TemplateLocation

-- | The Amazon S3 bucket name.
[$sel:s3Bucket:TemplateLocation'] :: TemplateLocation -> Text

-- | The list of S3 keys identifying the data source files.
[$sel:s3Key:TemplateLocation'] :: TemplateLocation -> Text

-- | Create a value of <a>TemplateLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Bucket:TemplateLocation'</a>,
--   <a>templateLocation_s3Bucket</a> - The Amazon S3 bucket name.
--   
--   <a>$sel:s3Key:TemplateLocation'</a>, <a>templateLocation_s3Key</a> -
--   The list of S3 keys identifying the data source files.
newTemplateLocation :: Text -> Text -> TemplateLocation

-- | The Amazon S3 bucket name.
templateLocation_s3Bucket :: Lens' TemplateLocation Text

-- | The list of S3 keys identifying the data source files.
templateLocation_s3Key :: Lens' TemplateLocation Text
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.TemplateLocation.TemplateLocation
instance GHC.Show.Show Amazonka.RobOMaker.Types.TemplateLocation.TemplateLocation
instance GHC.Read.Read Amazonka.RobOMaker.Types.TemplateLocation.TemplateLocation
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.TemplateLocation.TemplateLocation
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.TemplateLocation.TemplateLocation
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.TemplateLocation.TemplateLocation
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.TemplateLocation.TemplateLocation


module Amazonka.RobOMaker.Types.TemplateSummary

-- | Summary information for a template.
--   
--   <i>See:</i> <a>newTemplateSummary</a> smart constructor.
data TemplateSummary
TemplateSummary' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> TemplateSummary

-- | The time, in milliseconds since the epoch, when the template was last
--   updated.
[$sel:lastUpdatedAt:TemplateSummary'] :: TemplateSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the template.
[$sel:arn:TemplateSummary'] :: TemplateSummary -> Maybe Text

-- | The time, in milliseconds since the epoch, when the template was
--   created.
[$sel:createdAt:TemplateSummary'] :: TemplateSummary -> Maybe POSIX

-- | The name of the template.
[$sel:name:TemplateSummary'] :: TemplateSummary -> Maybe Text

-- | The version of the template that you're using.
[$sel:version:TemplateSummary'] :: TemplateSummary -> Maybe Text

-- | Create a value of <a>TemplateSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:TemplateSummary'</a>,
--   <a>templateSummary_lastUpdatedAt</a> - The time, in milliseconds since
--   the epoch, when the template was last updated.
--   
--   <a>$sel:arn:TemplateSummary'</a>, <a>templateSummary_arn</a> - The
--   Amazon Resource Name (ARN) of the template.
--   
--   <a>$sel:createdAt:TemplateSummary'</a>,
--   <a>templateSummary_createdAt</a> - The time, in milliseconds since the
--   epoch, when the template was created.
--   
--   <a>$sel:name:TemplateSummary'</a>, <a>templateSummary_name</a> - The
--   name of the template.
--   
--   <a>$sel:version:TemplateSummary'</a>, <a>templateSummary_version</a> -
--   The version of the template that you're using.
newTemplateSummary :: TemplateSummary

-- | The time, in milliseconds since the epoch, when the template was last
--   updated.
templateSummary_lastUpdatedAt :: Lens' TemplateSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the template.
templateSummary_arn :: Lens' TemplateSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, when the template was
--   created.
templateSummary_createdAt :: Lens' TemplateSummary (Maybe UTCTime)

-- | The name of the template.
templateSummary_name :: Lens' TemplateSummary (Maybe Text)

-- | The version of the template that you're using.
templateSummary_version :: Lens' TemplateSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.TemplateSummary.TemplateSummary
instance GHC.Show.Show Amazonka.RobOMaker.Types.TemplateSummary.TemplateSummary
instance GHC.Read.Read Amazonka.RobOMaker.Types.TemplateSummary.TemplateSummary
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.TemplateSummary.TemplateSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.TemplateSummary.TemplateSummary
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.TemplateSummary.TemplateSummary
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.TemplateSummary.TemplateSummary


module Amazonka.RobOMaker.Types.Tool

-- | Information about a tool. Tools are used in a simulation job.
--   
--   <i>See:</i> <a>newTool</a> smart constructor.
data Tool
Tool' :: Maybe Bool -> Maybe ExitBehavior -> Maybe Bool -> Text -> Text -> Tool

-- | Boolean indicating whether logs will be recorded in CloudWatch for the
--   tool. The default is <tt>False</tt>.
[$sel:streamOutputToCloudWatch:Tool'] :: Tool -> Maybe Bool

-- | Exit behavior determines what happens when your tool quits running.
--   <tt>RESTART</tt> will cause your tool to be restarted. <tt>FAIL</tt>
--   will cause your job to exit. The default is <tt>RESTART</tt>.
[$sel:exitBehavior:Tool'] :: Tool -> Maybe ExitBehavior

-- | Boolean indicating whether a streaming session will be configured for
--   the tool. If <tt>True</tt>, AWS RoboMaker will configure a connection
--   so you can interact with the tool as it is running in the simulation.
--   It must have a graphical user interface. The default is
--   <tt>False</tt>.
[$sel:streamUI:Tool'] :: Tool -> Maybe Bool

-- | The name of the tool.
[$sel:name:Tool'] :: Tool -> Text

-- | Command-line arguments for the tool. It must include the tool
--   executable name.
[$sel:command:Tool'] :: Tool -> Text

-- | Create a value of <a>Tool</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamOutputToCloudWatch:Tool'</a>,
--   <a>tool_streamOutputToCloudWatch</a> - Boolean indicating whether logs
--   will be recorded in CloudWatch for the tool. The default is
--   <tt>False</tt>.
--   
--   <a>$sel:exitBehavior:Tool'</a>, <a>tool_exitBehavior</a> - Exit
--   behavior determines what happens when your tool quits running.
--   <tt>RESTART</tt> will cause your tool to be restarted. <tt>FAIL</tt>
--   will cause your job to exit. The default is <tt>RESTART</tt>.
--   
--   <a>$sel:streamUI:Tool'</a>, <a>tool_streamUI</a> - Boolean indicating
--   whether a streaming session will be configured for the tool. If
--   <tt>True</tt>, AWS RoboMaker will configure a connection so you can
--   interact with the tool as it is running in the simulation. It must
--   have a graphical user interface. The default is <tt>False</tt>.
--   
--   <a>$sel:name:Tool'</a>, <a>tool_name</a> - The name of the tool.
--   
--   <a>$sel:command:Tool'</a>, <a>tool_command</a> - Command-line
--   arguments for the tool. It must include the tool executable name.
newTool :: Text -> Text -> Tool

-- | Boolean indicating whether logs will be recorded in CloudWatch for the
--   tool. The default is <tt>False</tt>.
tool_streamOutputToCloudWatch :: Lens' Tool (Maybe Bool)

-- | Exit behavior determines what happens when your tool quits running.
--   <tt>RESTART</tt> will cause your tool to be restarted. <tt>FAIL</tt>
--   will cause your job to exit. The default is <tt>RESTART</tt>.
tool_exitBehavior :: Lens' Tool (Maybe ExitBehavior)

-- | Boolean indicating whether a streaming session will be configured for
--   the tool. If <tt>True</tt>, AWS RoboMaker will configure a connection
--   so you can interact with the tool as it is running in the simulation.
--   It must have a graphical user interface. The default is
--   <tt>False</tt>.
tool_streamUI :: Lens' Tool (Maybe Bool)

-- | The name of the tool.
tool_name :: Lens' Tool Text

-- | Command-line arguments for the tool. It must include the tool
--   executable name.
tool_command :: Lens' Tool Text
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.Tool.Tool
instance GHC.Show.Show Amazonka.RobOMaker.Types.Tool.Tool
instance GHC.Read.Read Amazonka.RobOMaker.Types.Tool.Tool
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.Tool.Tool
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.Tool.Tool
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.Tool.Tool
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.Tool.Tool
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.Tool.Tool


module Amazonka.RobOMaker.Types.UploadBehavior
newtype UploadBehavior
UploadBehavior' :: Text -> UploadBehavior
[fromUploadBehavior] :: UploadBehavior -> Text
pattern UploadBehavior_UPLOAD_ON_TERMINATE :: UploadBehavior
pattern UploadBehavior_UPLOAD_ROLLING_AUTO_REMOVE :: UploadBehavior
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.UploadBehavior.UploadBehavior
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.UploadBehavior.UploadBehavior
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.UploadBehavior.UploadBehavior
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.UploadBehavior.UploadBehavior
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.UploadBehavior.UploadBehavior
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.UploadBehavior.UploadBehavior
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.UploadBehavior.UploadBehavior
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.UploadBehavior.UploadBehavior
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.UploadBehavior.UploadBehavior
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.UploadBehavior.UploadBehavior
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.UploadBehavior.UploadBehavior
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.UploadBehavior.UploadBehavior
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.UploadBehavior.UploadBehavior
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.UploadBehavior.UploadBehavior
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.UploadBehavior.UploadBehavior
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.UploadBehavior.UploadBehavior
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.UploadBehavior.UploadBehavior
instance GHC.Read.Read Amazonka.RobOMaker.Types.UploadBehavior.UploadBehavior
instance GHC.Show.Show Amazonka.RobOMaker.Types.UploadBehavior.UploadBehavior


module Amazonka.RobOMaker.Types.UploadConfiguration

-- | Provides upload configuration information. Files are uploaded from the
--   simulation job to a location you specify.
--   
--   <i>See:</i> <a>newUploadConfiguration</a> smart constructor.
data UploadConfiguration
UploadConfiguration' :: Text -> Text -> UploadBehavior -> UploadConfiguration

-- | A prefix that specifies where files will be uploaded in Amazon S3. It
--   is appended to the simulation output location to determine the final
--   path.
--   
--   For example, if your simulation output location is
--   <tt>s3://my-bucket</tt> and your upload configuration name is
--   <tt>robot-test</tt>, your files will be uploaded to
--   <tt>s3://my-bucket/&lt;simid&gt;/&lt;runid&gt;/robot-test</tt>.
[$sel:name:UploadConfiguration'] :: UploadConfiguration -> Text

-- | Specifies the path of the file(s) to upload. Standard Unix glob
--   matching rules are accepted, with the addition of <tt>**</tt> as a
--   <i>super asterisk</i>. For example, specifying
--   <tt>/var/log/**.log</tt> causes all .log files in the
--   <tt>/var/log</tt> directory tree to be collected. For more examples,
--   see <a>Glob Library</a>.
[$sel:path:UploadConfiguration'] :: UploadConfiguration -> Text

-- | Specifies when to upload the files:
--   
--   <ul>
--   <li><i>UPLOAD_ON_TERMINATE</i> Matching files are uploaded once the
--   simulation enters the <tt>TERMINATING</tt> state. Matching files are
--   not uploaded until all of your code (including tools) have stopped.If
--   there is a problem uploading a file, the upload is retried. If
--   problems persist, no further upload attempts will be made.</li>
--   <li><i>UPLOAD_ROLLING_AUTO_REMOVE</i> Matching files are uploaded as
--   they are created. They are deleted after they are uploaded. The
--   specified path is checked every 5 seconds. A final check is made when
--   all of your code (including tools) have stopped.</li>
--   </ul>
[$sel:uploadBehavior:UploadConfiguration'] :: UploadConfiguration -> UploadBehavior

-- | Create a value of <a>UploadConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UploadConfiguration'</a>, <a>uploadConfiguration_name</a>
--   - A prefix that specifies where files will be uploaded in Amazon S3.
--   It is appended to the simulation output location to determine the
--   final path.
--   
--   For example, if your simulation output location is
--   <tt>s3://my-bucket</tt> and your upload configuration name is
--   <tt>robot-test</tt>, your files will be uploaded to
--   <tt>s3://my-bucket/&lt;simid&gt;/&lt;runid&gt;/robot-test</tt>.
--   
--   <a>$sel:path:UploadConfiguration'</a>, <a>uploadConfiguration_path</a>
--   - Specifies the path of the file(s) to upload. Standard Unix glob
--   matching rules are accepted, with the addition of <tt>**</tt> as a
--   <i>super asterisk</i>. For example, specifying
--   <tt>/var/log/**.log</tt> causes all .log files in the
--   <tt>/var/log</tt> directory tree to be collected. For more examples,
--   see <a>Glob Library</a>.
--   
--   <a>$sel:uploadBehavior:UploadConfiguration'</a>,
--   <a>uploadConfiguration_uploadBehavior</a> - Specifies when to upload
--   the files:
--   
--   <ul>
--   <li><i>UPLOAD_ON_TERMINATE</i> Matching files are uploaded once the
--   simulation enters the <tt>TERMINATING</tt> state. Matching files are
--   not uploaded until all of your code (including tools) have stopped.If
--   there is a problem uploading a file, the upload is retried. If
--   problems persist, no further upload attempts will be made.</li>
--   <li><i>UPLOAD_ROLLING_AUTO_REMOVE</i> Matching files are uploaded as
--   they are created. They are deleted after they are uploaded. The
--   specified path is checked every 5 seconds. A final check is made when
--   all of your code (including tools) have stopped.</li>
--   </ul>
newUploadConfiguration :: Text -> Text -> UploadBehavior -> UploadConfiguration

-- | A prefix that specifies where files will be uploaded in Amazon S3. It
--   is appended to the simulation output location to determine the final
--   path.
--   
--   For example, if your simulation output location is
--   <tt>s3://my-bucket</tt> and your upload configuration name is
--   <tt>robot-test</tt>, your files will be uploaded to
--   <tt>s3://my-bucket/&lt;simid&gt;/&lt;runid&gt;/robot-test</tt>.
uploadConfiguration_name :: Lens' UploadConfiguration Text

-- | Specifies the path of the file(s) to upload. Standard Unix glob
--   matching rules are accepted, with the addition of <tt>**</tt> as a
--   <i>super asterisk</i>. For example, specifying
--   <tt>/var/log/**.log</tt> causes all .log files in the
--   <tt>/var/log</tt> directory tree to be collected. For more examples,
--   see <a>Glob Library</a>.
uploadConfiguration_path :: Lens' UploadConfiguration Text

-- | Specifies when to upload the files:
--   
--   <ul>
--   <li><i>UPLOAD_ON_TERMINATE</i> Matching files are uploaded once the
--   simulation enters the <tt>TERMINATING</tt> state. Matching files are
--   not uploaded until all of your code (including tools) have stopped.If
--   there is a problem uploading a file, the upload is retried. If
--   problems persist, no further upload attempts will be made.</li>
--   <li><i>UPLOAD_ROLLING_AUTO_REMOVE</i> Matching files are uploaded as
--   they are created. They are deleted after they are uploaded. The
--   specified path is checked every 5 seconds. A final check is made when
--   all of your code (including tools) have stopped.</li>
--   </ul>
uploadConfiguration_uploadBehavior :: Lens' UploadConfiguration UploadBehavior
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.UploadConfiguration.UploadConfiguration
instance GHC.Show.Show Amazonka.RobOMaker.Types.UploadConfiguration.UploadConfiguration
instance GHC.Read.Read Amazonka.RobOMaker.Types.UploadConfiguration.UploadConfiguration
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.UploadConfiguration.UploadConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.UploadConfiguration.UploadConfiguration
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.UploadConfiguration.UploadConfiguration
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.UploadConfiguration.UploadConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.UploadConfiguration.UploadConfiguration


module Amazonka.RobOMaker.Types.RobotApplicationConfig

-- | Application configuration information for a robot.
--   
--   <i>See:</i> <a>newRobotApplicationConfig</a> smart constructor.
data RobotApplicationConfig
RobotApplicationConfig' :: Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe [UploadConfiguration] -> Maybe [Tool] -> Text -> LaunchConfig -> RobotApplicationConfig

-- | A Boolean indicating whether to use default upload configurations. By
--   default, <tt>.ros</tt> and <tt>.gazebo</tt> files are uploaded when
--   the application terminates and all ROS topics will be recorded.
--   
--   If you set this value, you must specify an <tt>outputLocation</tt>.
[$sel:useDefaultUploadConfigurations:RobotApplicationConfig'] :: RobotApplicationConfig -> Maybe Bool

-- | A Boolean indicating whether to use default robot application tools.
--   The default tools are rviz, rqt, terminal and rosbag record. The
--   default is <tt>False</tt>.
[$sel:useDefaultTools:RobotApplicationConfig'] :: RobotApplicationConfig -> Maybe Bool

-- | The version of the robot application.
[$sel:applicationVersion:RobotApplicationConfig'] :: RobotApplicationConfig -> Maybe Text

-- | The upload configurations for the robot application.
[$sel:uploadConfigurations:RobotApplicationConfig'] :: RobotApplicationConfig -> Maybe [UploadConfiguration]

-- | Information about tools configured for the robot application.
[$sel:tools:RobotApplicationConfig'] :: RobotApplicationConfig -> Maybe [Tool]

-- | The application information for the robot application.
[$sel:application:RobotApplicationConfig'] :: RobotApplicationConfig -> Text

-- | The launch configuration for the robot application.
[$sel:launchConfig:RobotApplicationConfig'] :: RobotApplicationConfig -> LaunchConfig

-- | Create a value of <a>RobotApplicationConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:useDefaultUploadConfigurations:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_useDefaultUploadConfigurations</a> - A
--   Boolean indicating whether to use default upload configurations. By
--   default, <tt>.ros</tt> and <tt>.gazebo</tt> files are uploaded when
--   the application terminates and all ROS topics will be recorded.
--   
--   If you set this value, you must specify an <tt>outputLocation</tt>.
--   
--   <a>$sel:useDefaultTools:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_useDefaultTools</a> - A Boolean indicating
--   whether to use default robot application tools. The default tools are
--   rviz, rqt, terminal and rosbag record. The default is <tt>False</tt>.
--   
--   <a>$sel:applicationVersion:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_applicationVersion</a> - The version of the
--   robot application.
--   
--   <a>$sel:uploadConfigurations:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_uploadConfigurations</a> - The upload
--   configurations for the robot application.
--   
--   <a>$sel:tools:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_tools</a> - Information about tools
--   configured for the robot application.
--   
--   <a>$sel:application:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_application</a> - The application
--   information for the robot application.
--   
--   <a>$sel:launchConfig:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_launchConfig</a> - The launch configuration
--   for the robot application.
newRobotApplicationConfig :: Text -> LaunchConfig -> RobotApplicationConfig

-- | A Boolean indicating whether to use default upload configurations. By
--   default, <tt>.ros</tt> and <tt>.gazebo</tt> files are uploaded when
--   the application terminates and all ROS topics will be recorded.
--   
--   If you set this value, you must specify an <tt>outputLocation</tt>.
robotApplicationConfig_useDefaultUploadConfigurations :: Lens' RobotApplicationConfig (Maybe Bool)

-- | A Boolean indicating whether to use default robot application tools.
--   The default tools are rviz, rqt, terminal and rosbag record. The
--   default is <tt>False</tt>.
robotApplicationConfig_useDefaultTools :: Lens' RobotApplicationConfig (Maybe Bool)

-- | The version of the robot application.
robotApplicationConfig_applicationVersion :: Lens' RobotApplicationConfig (Maybe Text)

-- | The upload configurations for the robot application.
robotApplicationConfig_uploadConfigurations :: Lens' RobotApplicationConfig (Maybe [UploadConfiguration])

-- | Information about tools configured for the robot application.
robotApplicationConfig_tools :: Lens' RobotApplicationConfig (Maybe [Tool])

-- | The application information for the robot application.
robotApplicationConfig_application :: Lens' RobotApplicationConfig Text

-- | The launch configuration for the robot application.
robotApplicationConfig_launchConfig :: Lens' RobotApplicationConfig LaunchConfig
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.RobotApplicationConfig.RobotApplicationConfig
instance GHC.Show.Show Amazonka.RobOMaker.Types.RobotApplicationConfig.RobotApplicationConfig
instance GHC.Read.Read Amazonka.RobOMaker.Types.RobotApplicationConfig.RobotApplicationConfig
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.RobotApplicationConfig.RobotApplicationConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.RobotApplicationConfig.RobotApplicationConfig
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.RobotApplicationConfig.RobotApplicationConfig
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.RobotApplicationConfig.RobotApplicationConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.RobotApplicationConfig.RobotApplicationConfig


module Amazonka.RobOMaker.Types.VPCConfig

-- | If your simulation job accesses resources in a VPC, you provide this
--   parameter identifying the list of security group IDs and subnet IDs.
--   These must belong to the same VPC. You must provide at least one
--   security group and two subnet IDs.
--   
--   <i>See:</i> <a>newVPCConfig</a> smart constructor.
data VPCConfig
VPCConfig' :: Maybe (NonEmpty Text) -> Maybe Bool -> NonEmpty Text -> VPCConfig

-- | A list of one or more security groups IDs in your VPC.
[$sel:securityGroups:VPCConfig'] :: VPCConfig -> Maybe (NonEmpty Text)

-- | A boolean indicating whether to assign a public IP address.
[$sel:assignPublicIp:VPCConfig'] :: VPCConfig -> Maybe Bool

-- | A list of one or more subnet IDs in your VPC.
[$sel:subnets:VPCConfig'] :: VPCConfig -> NonEmpty Text

-- | Create a value of <a>VPCConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroups:VPCConfig'</a>, <a>vPCConfig_securityGroups</a>
--   - A list of one or more security groups IDs in your VPC.
--   
--   <a>$sel:assignPublicIp:VPCConfig'</a>, <a>vPCConfig_assignPublicIp</a>
--   - A boolean indicating whether to assign a public IP address.
--   
--   <a>$sel:subnets:VPCConfig'</a>, <a>vPCConfig_subnets</a> - A list of
--   one or more subnet IDs in your VPC.
newVPCConfig :: NonEmpty Text -> VPCConfig

-- | A list of one or more security groups IDs in your VPC.
vPCConfig_securityGroups :: Lens' VPCConfig (Maybe (NonEmpty Text))

-- | A boolean indicating whether to assign a public IP address.
vPCConfig_assignPublicIp :: Lens' VPCConfig (Maybe Bool)

-- | A list of one or more subnet IDs in your VPC.
vPCConfig_subnets :: Lens' VPCConfig (NonEmpty Text)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.VPCConfig.VPCConfig
instance GHC.Show.Show Amazonka.RobOMaker.Types.VPCConfig.VPCConfig
instance GHC.Read.Read Amazonka.RobOMaker.Types.VPCConfig.VPCConfig
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.VPCConfig.VPCConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.VPCConfig.VPCConfig
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.VPCConfig.VPCConfig
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.VPCConfig.VPCConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.VPCConfig.VPCConfig


module Amazonka.RobOMaker.Types.VPCConfigResponse

-- | VPC configuration associated with your simulation job.
--   
--   <i>See:</i> <a>newVPCConfigResponse</a> smart constructor.
data VPCConfigResponse
VPCConfigResponse' :: Maybe (NonEmpty Text) -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Bool -> VPCConfigResponse

-- | A list of security group IDs associated with the simulation job.
[$sel:securityGroups:VPCConfigResponse'] :: VPCConfigResponse -> Maybe (NonEmpty Text)

-- | The VPC ID associated with your simulation job.
[$sel:vpcId:VPCConfigResponse'] :: VPCConfigResponse -> Maybe Text

-- | A list of subnet IDs associated with the simulation job.
[$sel:subnets:VPCConfigResponse'] :: VPCConfigResponse -> Maybe (NonEmpty Text)

-- | A boolean indicating if a public IP was assigned.
[$sel:assignPublicIp:VPCConfigResponse'] :: VPCConfigResponse -> Maybe Bool

-- | Create a value of <a>VPCConfigResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroups:VPCConfigResponse'</a>,
--   <a>vPCConfigResponse_securityGroups</a> - A list of security group IDs
--   associated with the simulation job.
--   
--   <a>$sel:vpcId:VPCConfigResponse'</a>, <a>vPCConfigResponse_vpcId</a> -
--   The VPC ID associated with your simulation job.
--   
--   <a>$sel:subnets:VPCConfigResponse'</a>,
--   <a>vPCConfigResponse_subnets</a> - A list of subnet IDs associated
--   with the simulation job.
--   
--   <a>$sel:assignPublicIp:VPCConfigResponse'</a>,
--   <a>vPCConfigResponse_assignPublicIp</a> - A boolean indicating if a
--   public IP was assigned.
newVPCConfigResponse :: VPCConfigResponse

-- | A list of security group IDs associated with the simulation job.
vPCConfigResponse_securityGroups :: Lens' VPCConfigResponse (Maybe (NonEmpty Text))

-- | The VPC ID associated with your simulation job.
vPCConfigResponse_vpcId :: Lens' VPCConfigResponse (Maybe Text)

-- | A list of subnet IDs associated with the simulation job.
vPCConfigResponse_subnets :: Lens' VPCConfigResponse (Maybe (NonEmpty Text))

-- | A boolean indicating if a public IP was assigned.
vPCConfigResponse_assignPublicIp :: Lens' VPCConfigResponse (Maybe Bool)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.VPCConfigResponse.VPCConfigResponse
instance GHC.Show.Show Amazonka.RobOMaker.Types.VPCConfigResponse.VPCConfigResponse
instance GHC.Read.Read Amazonka.RobOMaker.Types.VPCConfigResponse.VPCConfigResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.VPCConfigResponse.VPCConfigResponse
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.VPCConfigResponse.VPCConfigResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.VPCConfigResponse.VPCConfigResponse
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.VPCConfigResponse.VPCConfigResponse


module Amazonka.RobOMaker.Types.WorldConfig

-- | Configuration information for a world.
--   
--   <i>See:</i> <a>newWorldConfig</a> smart constructor.
data WorldConfig
WorldConfig' :: Maybe Text -> WorldConfig

-- | The world generated by Simulation WorldForge.
[$sel:world:WorldConfig'] :: WorldConfig -> Maybe Text

-- | Create a value of <a>WorldConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:world:WorldConfig'</a>, <a>worldConfig_world</a> - The world
--   generated by Simulation WorldForge.
newWorldConfig :: WorldConfig

-- | The world generated by Simulation WorldForge.
worldConfig_world :: Lens' WorldConfig (Maybe Text)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.WorldConfig.WorldConfig
instance GHC.Show.Show Amazonka.RobOMaker.Types.WorldConfig.WorldConfig
instance GHC.Read.Read Amazonka.RobOMaker.Types.WorldConfig.WorldConfig
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.WorldConfig.WorldConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.WorldConfig.WorldConfig
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.WorldConfig.WorldConfig
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.WorldConfig.WorldConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.WorldConfig.WorldConfig


module Amazonka.RobOMaker.Types.SimulationApplicationConfig

-- | Information about a simulation application configuration.
--   
--   <i>See:</i> <a>newSimulationApplicationConfig</a> smart constructor.
data SimulationApplicationConfig
SimulationApplicationConfig' :: Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe [UploadConfiguration] -> Maybe [Tool] -> Maybe [WorldConfig] -> Text -> LaunchConfig -> SimulationApplicationConfig

-- | A Boolean indicating whether to use default upload configurations. By
--   default, <tt>.ros</tt> and <tt>.gazebo</tt> files are uploaded when
--   the application terminates and all ROS topics will be recorded.
--   
--   If you set this value, you must specify an <tt>outputLocation</tt>.
[$sel:useDefaultUploadConfigurations:SimulationApplicationConfig'] :: SimulationApplicationConfig -> Maybe Bool

-- | A Boolean indicating whether to use default simulation application
--   tools. The default tools are rviz, rqt, terminal and rosbag record.
--   The default is <tt>False</tt>.
[$sel:useDefaultTools:SimulationApplicationConfig'] :: SimulationApplicationConfig -> Maybe Bool

-- | The version of the simulation application.
[$sel:applicationVersion:SimulationApplicationConfig'] :: SimulationApplicationConfig -> Maybe Text

-- | Information about upload configurations for the simulation
--   application.
[$sel:uploadConfigurations:SimulationApplicationConfig'] :: SimulationApplicationConfig -> Maybe [UploadConfiguration]

-- | Information about tools configured for the simulation application.
[$sel:tools:SimulationApplicationConfig'] :: SimulationApplicationConfig -> Maybe [Tool]

-- | A list of world configurations.
[$sel:worldConfigs:SimulationApplicationConfig'] :: SimulationApplicationConfig -> Maybe [WorldConfig]

-- | The application information for the simulation application.
[$sel:application:SimulationApplicationConfig'] :: SimulationApplicationConfig -> Text

-- | The launch configuration for the simulation application.
[$sel:launchConfig:SimulationApplicationConfig'] :: SimulationApplicationConfig -> LaunchConfig

-- | Create a value of <a>SimulationApplicationConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:useDefaultUploadConfigurations:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_useDefaultUploadConfigurations</a> - A
--   Boolean indicating whether to use default upload configurations. By
--   default, <tt>.ros</tt> and <tt>.gazebo</tt> files are uploaded when
--   the application terminates and all ROS topics will be recorded.
--   
--   If you set this value, you must specify an <tt>outputLocation</tt>.
--   
--   <a>$sel:useDefaultTools:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_useDefaultTools</a> - A Boolean
--   indicating whether to use default simulation application tools. The
--   default tools are rviz, rqt, terminal and rosbag record. The default
--   is <tt>False</tt>.
--   
--   <a>$sel:applicationVersion:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_applicationVersion</a> - The version of
--   the simulation application.
--   
--   <a>$sel:uploadConfigurations:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_uploadConfigurations</a> - Information
--   about upload configurations for the simulation application.
--   
--   <a>$sel:tools:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_tools</a> - Information about tools
--   configured for the simulation application.
--   
--   <a>$sel:worldConfigs:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_worldConfigs</a> - A list of world
--   configurations.
--   
--   <a>$sel:application:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_application</a> - The application
--   information for the simulation application.
--   
--   <a>$sel:launchConfig:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_launchConfig</a> - The launch
--   configuration for the simulation application.
newSimulationApplicationConfig :: Text -> LaunchConfig -> SimulationApplicationConfig

-- | A Boolean indicating whether to use default upload configurations. By
--   default, <tt>.ros</tt> and <tt>.gazebo</tt> files are uploaded when
--   the application terminates and all ROS topics will be recorded.
--   
--   If you set this value, you must specify an <tt>outputLocation</tt>.
simulationApplicationConfig_useDefaultUploadConfigurations :: Lens' SimulationApplicationConfig (Maybe Bool)

-- | A Boolean indicating whether to use default simulation application
--   tools. The default tools are rviz, rqt, terminal and rosbag record.
--   The default is <tt>False</tt>.
simulationApplicationConfig_useDefaultTools :: Lens' SimulationApplicationConfig (Maybe Bool)

-- | The version of the simulation application.
simulationApplicationConfig_applicationVersion :: Lens' SimulationApplicationConfig (Maybe Text)

-- | Information about upload configurations for the simulation
--   application.
simulationApplicationConfig_uploadConfigurations :: Lens' SimulationApplicationConfig (Maybe [UploadConfiguration])

-- | Information about tools configured for the simulation application.
simulationApplicationConfig_tools :: Lens' SimulationApplicationConfig (Maybe [Tool])

-- | A list of world configurations.
simulationApplicationConfig_worldConfigs :: Lens' SimulationApplicationConfig (Maybe [WorldConfig])

-- | The application information for the simulation application.
simulationApplicationConfig_application :: Lens' SimulationApplicationConfig Text

-- | The launch configuration for the simulation application.
simulationApplicationConfig_launchConfig :: Lens' SimulationApplicationConfig LaunchConfig
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.SimulationApplicationConfig.SimulationApplicationConfig
instance GHC.Show.Show Amazonka.RobOMaker.Types.SimulationApplicationConfig.SimulationApplicationConfig
instance GHC.Read.Read Amazonka.RobOMaker.Types.SimulationApplicationConfig.SimulationApplicationConfig
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.SimulationApplicationConfig.SimulationApplicationConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.SimulationApplicationConfig.SimulationApplicationConfig
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.SimulationApplicationConfig.SimulationApplicationConfig
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.SimulationApplicationConfig.SimulationApplicationConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.SimulationApplicationConfig.SimulationApplicationConfig


module Amazonka.RobOMaker.Types.SimulationJobRequest

-- | Information about a simulation job request.
--   
--   <i>See:</i> <a>newSimulationJobRequest</a> smart constructor.
data SimulationJobRequest
SimulationJobRequest' :: Maybe FailureBehavior -> Maybe (NonEmpty RobotApplicationConfig) -> Maybe Compute -> Maybe (NonEmpty DataSourceConfig) -> Maybe Bool -> Maybe VPCConfig -> Maybe OutputLocation -> Maybe (NonEmpty SimulationApplicationConfig) -> Maybe LoggingConfig -> Maybe Text -> Maybe (HashMap Text Text) -> Integer -> SimulationJobRequest

-- | The failure behavior the simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the host running for its maximum timeout
--   duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
[$sel:failureBehavior:SimulationJobRequest'] :: SimulationJobRequest -> Maybe FailureBehavior

-- | The robot applications to use in the simulation job.
[$sel:robotApplications:SimulationJobRequest'] :: SimulationJobRequest -> Maybe (NonEmpty RobotApplicationConfig)

-- | Compute information for the simulation job
[$sel:compute:SimulationJobRequest'] :: SimulationJobRequest -> Maybe Compute

-- | Specify data sources to mount read-only files from S3 into your
--   simulation. These files are available under
--   <tt>/opt/robomaker/datasources/data_source_name</tt>.
--   
--   There is a limit of 100 files and a combined size of 25GB for all
--   <tt>DataSourceConfig</tt> objects.
[$sel:dataSources:SimulationJobRequest'] :: SimulationJobRequest -> Maybe (NonEmpty DataSourceConfig)

-- | A Boolean indicating whether to use default applications in the
--   simulation job. Default applications include Gazebo, rqt, rviz and
--   terminal access.
[$sel:useDefaultApplications:SimulationJobRequest'] :: SimulationJobRequest -> Maybe Bool
[$sel:vpcConfig:SimulationJobRequest'] :: SimulationJobRequest -> Maybe VPCConfig
[$sel:outputLocation:SimulationJobRequest'] :: SimulationJobRequest -> Maybe OutputLocation

-- | The simulation applications to use in the simulation job.
[$sel:simulationApplications:SimulationJobRequest'] :: SimulationJobRequest -> Maybe (NonEmpty SimulationApplicationConfig)
[$sel:loggingConfig:SimulationJobRequest'] :: SimulationJobRequest -> Maybe LoggingConfig

-- | The IAM role name that allows the simulation instance to call the AWS
--   APIs that are specified in its associated policies on your behalf.
--   This is how credentials are passed in to your simulation job.
[$sel:iamRole:SimulationJobRequest'] :: SimulationJobRequest -> Maybe Text

-- | A map that contains tag keys and tag values that are attached to the
--   simulation job request.
[$sel:tags:SimulationJobRequest'] :: SimulationJobRequest -> Maybe (HashMap Text Text)

-- | The maximum simulation job duration in seconds. The value must be 8
--   days (691,200 seconds) or less.
[$sel:maxJobDurationInSeconds:SimulationJobRequest'] :: SimulationJobRequest -> Integer

-- | Create a value of <a>SimulationJobRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureBehavior:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_failureBehavior</a> - The failure behavior the
--   simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the host running for its maximum timeout
--   duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
--   
--   <a>$sel:robotApplications:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_robotApplications</a> - The robot applications
--   to use in the simulation job.
--   
--   <a>$sel:compute:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_compute</a> - Compute information for the
--   simulation job
--   
--   <a>$sel:dataSources:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_dataSources</a> - Specify data sources to
--   mount read-only files from S3 into your simulation. These files are
--   available under <tt>/opt/robomaker/datasources/data_source_name</tt>.
--   
--   There is a limit of 100 files and a combined size of 25GB for all
--   <tt>DataSourceConfig</tt> objects.
--   
--   <a>$sel:useDefaultApplications:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_useDefaultApplications</a> - A Boolean
--   indicating whether to use default applications in the simulation job.
--   Default applications include Gazebo, rqt, rviz and terminal access.
--   
--   <a>$sel:vpcConfig:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_vpcConfig</a> - Undocumented member.
--   
--   <a>$sel:outputLocation:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_outputLocation</a> - Undocumented member.
--   
--   <a>$sel:simulationApplications:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_simulationApplications</a> - The simulation
--   applications to use in the simulation job.
--   
--   <a>$sel:loggingConfig:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_loggingConfig</a> - Undocumented member.
--   
--   <a>$sel:iamRole:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_iamRole</a> - The IAM role name that allows
--   the simulation instance to call the AWS APIs that are specified in its
--   associated policies on your behalf. This is how credentials are passed
--   in to your simulation job.
--   
--   <a>$sel:tags:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_tags</a> - A map that contains tag keys and
--   tag values that are attached to the simulation job request.
--   
--   <a>$sel:maxJobDurationInSeconds:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_maxJobDurationInSeconds</a> - The maximum
--   simulation job duration in seconds. The value must be 8 days (691,200
--   seconds) or less.
newSimulationJobRequest :: Integer -> SimulationJobRequest

-- | The failure behavior the simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the host running for its maximum timeout
--   duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
simulationJobRequest_failureBehavior :: Lens' SimulationJobRequest (Maybe FailureBehavior)

-- | The robot applications to use in the simulation job.
simulationJobRequest_robotApplications :: Lens' SimulationJobRequest (Maybe (NonEmpty RobotApplicationConfig))

-- | Compute information for the simulation job
simulationJobRequest_compute :: Lens' SimulationJobRequest (Maybe Compute)

-- | Specify data sources to mount read-only files from S3 into your
--   simulation. These files are available under
--   <tt>/opt/robomaker/datasources/data_source_name</tt>.
--   
--   There is a limit of 100 files and a combined size of 25GB for all
--   <tt>DataSourceConfig</tt> objects.
simulationJobRequest_dataSources :: Lens' SimulationJobRequest (Maybe (NonEmpty DataSourceConfig))

-- | A Boolean indicating whether to use default applications in the
--   simulation job. Default applications include Gazebo, rqt, rviz and
--   terminal access.
simulationJobRequest_useDefaultApplications :: Lens' SimulationJobRequest (Maybe Bool)

-- | Undocumented member.
simulationJobRequest_vpcConfig :: Lens' SimulationJobRequest (Maybe VPCConfig)

-- | Undocumented member.
simulationJobRequest_outputLocation :: Lens' SimulationJobRequest (Maybe OutputLocation)

-- | The simulation applications to use in the simulation job.
simulationJobRequest_simulationApplications :: Lens' SimulationJobRequest (Maybe (NonEmpty SimulationApplicationConfig))

-- | Undocumented member.
simulationJobRequest_loggingConfig :: Lens' SimulationJobRequest (Maybe LoggingConfig)

-- | The IAM role name that allows the simulation instance to call the AWS
--   APIs that are specified in its associated policies on your behalf.
--   This is how credentials are passed in to your simulation job.
simulationJobRequest_iamRole :: Lens' SimulationJobRequest (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   simulation job request.
simulationJobRequest_tags :: Lens' SimulationJobRequest (Maybe (HashMap Text Text))

-- | The maximum simulation job duration in seconds. The value must be 8
--   days (691,200 seconds) or less.
simulationJobRequest_maxJobDurationInSeconds :: Lens' SimulationJobRequest Integer
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.SimulationJobRequest.SimulationJobRequest
instance GHC.Show.Show Amazonka.RobOMaker.Types.SimulationJobRequest.SimulationJobRequest
instance GHC.Read.Read Amazonka.RobOMaker.Types.SimulationJobRequest.SimulationJobRequest
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.SimulationJobRequest.SimulationJobRequest
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.SimulationJobRequest.SimulationJobRequest
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.SimulationJobRequest.SimulationJobRequest
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.SimulationJobRequest.SimulationJobRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.SimulationJobRequest.SimulationJobRequest


module Amazonka.RobOMaker.Types.FailedCreateSimulationJobRequest

-- | Information about a failed create simulation job request.
--   
--   <i>See:</i> <a>newFailedCreateSimulationJobRequest</a> smart
--   constructor.
data FailedCreateSimulationJobRequest
FailedCreateSimulationJobRequest' :: Maybe Text -> Maybe SimulationJobErrorCode -> Maybe POSIX -> Maybe SimulationJobRequest -> FailedCreateSimulationJobRequest

-- | The failure reason of the simulation job request.
[$sel:failureReason:FailedCreateSimulationJobRequest'] :: FailedCreateSimulationJobRequest -> Maybe Text

-- | The failure code.
[$sel:failureCode:FailedCreateSimulationJobRequest'] :: FailedCreateSimulationJobRequest -> Maybe SimulationJobErrorCode

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch failed.
[$sel:failedAt:FailedCreateSimulationJobRequest'] :: FailedCreateSimulationJobRequest -> Maybe POSIX

-- | The simulation job request.
[$sel:request:FailedCreateSimulationJobRequest'] :: FailedCreateSimulationJobRequest -> Maybe SimulationJobRequest

-- | Create a value of <a>FailedCreateSimulationJobRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:FailedCreateSimulationJobRequest'</a>,
--   <a>failedCreateSimulationJobRequest_failureReason</a> - The failure
--   reason of the simulation job request.
--   
--   <a>$sel:failureCode:FailedCreateSimulationJobRequest'</a>,
--   <a>failedCreateSimulationJobRequest_failureCode</a> - The failure
--   code.
--   
--   <a>$sel:failedAt:FailedCreateSimulationJobRequest'</a>,
--   <a>failedCreateSimulationJobRequest_failedAt</a> - The time, in
--   milliseconds since the epoch, when the simulation job batch failed.
--   
--   <a>$sel:request:FailedCreateSimulationJobRequest'</a>,
--   <a>failedCreateSimulationJobRequest_request</a> - The simulation job
--   request.
newFailedCreateSimulationJobRequest :: FailedCreateSimulationJobRequest

-- | The failure reason of the simulation job request.
failedCreateSimulationJobRequest_failureReason :: Lens' FailedCreateSimulationJobRequest (Maybe Text)

-- | The failure code.
failedCreateSimulationJobRequest_failureCode :: Lens' FailedCreateSimulationJobRequest (Maybe SimulationJobErrorCode)

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch failed.
failedCreateSimulationJobRequest_failedAt :: Lens' FailedCreateSimulationJobRequest (Maybe UTCTime)

-- | The simulation job request.
failedCreateSimulationJobRequest_request :: Lens' FailedCreateSimulationJobRequest (Maybe SimulationJobRequest)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.FailedCreateSimulationJobRequest.FailedCreateSimulationJobRequest
instance GHC.Show.Show Amazonka.RobOMaker.Types.FailedCreateSimulationJobRequest.FailedCreateSimulationJobRequest
instance GHC.Read.Read Amazonka.RobOMaker.Types.FailedCreateSimulationJobRequest.FailedCreateSimulationJobRequest
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.FailedCreateSimulationJobRequest.FailedCreateSimulationJobRequest
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.FailedCreateSimulationJobRequest.FailedCreateSimulationJobRequest
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.FailedCreateSimulationJobRequest.FailedCreateSimulationJobRequest
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.FailedCreateSimulationJobRequest.FailedCreateSimulationJobRequest


module Amazonka.RobOMaker.Types.SimulationJob

-- | Information about a simulation job.
--   
--   <i>See:</i> <a>newSimulationJob</a> smart constructor.
data SimulationJob
SimulationJob' :: Maybe Text -> Maybe FailureBehavior -> Maybe SimulationJobStatus -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty RobotApplicationConfig) -> Maybe SimulationJobErrorCode -> Maybe ComputeResponse -> Maybe NetworkInterface -> Maybe [DataSource] -> Maybe Text -> Maybe VPCConfigResponse -> Maybe OutputLocation -> Maybe (NonEmpty SimulationApplicationConfig) -> Maybe Integer -> Maybe Text -> Maybe POSIX -> Maybe LoggingConfig -> Maybe Text -> Maybe Integer -> Maybe (HashMap Text Text) -> SimulationJob

-- | The reason why the simulation job failed.
[$sel:failureReason:SimulationJob'] :: SimulationJob -> Maybe Text

-- | The failure behavior the simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the host running for its maximum timeout
--   duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
[$sel:failureBehavior:SimulationJob'] :: SimulationJob -> Maybe FailureBehavior

-- | Status of the simulation job.
[$sel:status:SimulationJob'] :: SimulationJob -> Maybe SimulationJobStatus

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last updated.
[$sel:lastUpdatedAt:SimulationJob'] :: SimulationJob -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the simulation job.
[$sel:arn:SimulationJob'] :: SimulationJob -> Maybe Text

-- | A list of robot applications.
[$sel:robotApplications:SimulationJob'] :: SimulationJob -> Maybe (NonEmpty RobotApplicationConfig)

-- | The failure code of the simulation job if it failed.
[$sel:failureCode:SimulationJob'] :: SimulationJob -> Maybe SimulationJobErrorCode

-- | Compute information for the simulation job
[$sel:compute:SimulationJob'] :: SimulationJob -> Maybe ComputeResponse

-- | Information about a network interface.
[$sel:networkInterface:SimulationJob'] :: SimulationJob -> Maybe NetworkInterface

-- | The data sources for the simulation job.
[$sel:dataSources:SimulationJob'] :: SimulationJob -> Maybe [DataSource]

-- | The name of the simulation job.
[$sel:name:SimulationJob'] :: SimulationJob -> Maybe Text

-- | VPC configuration information.
[$sel:vpcConfig:SimulationJob'] :: SimulationJob -> Maybe VPCConfigResponse

-- | Location for output files generated by the simulation job.
[$sel:outputLocation:SimulationJob'] :: SimulationJob -> Maybe OutputLocation

-- | A list of simulation applications.
[$sel:simulationApplications:SimulationJob'] :: SimulationJob -> Maybe (NonEmpty SimulationApplicationConfig)

-- | The simulation job execution duration in milliseconds.
[$sel:simulationTimeMillis:SimulationJob'] :: SimulationJob -> Maybe Integer

-- | A unique identifier for this <tt>SimulationJob</tt> request.
[$sel:clientRequestToken:SimulationJob'] :: SimulationJob -> Maybe Text

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last started.
[$sel:lastStartedAt:SimulationJob'] :: SimulationJob -> Maybe POSIX

-- | The logging configuration.
[$sel:loggingConfig:SimulationJob'] :: SimulationJob -> Maybe LoggingConfig

-- | The IAM role that allows the simulation instance to call the AWS APIs
--   that are specified in its associated policies on your behalf. This is
--   how credentials are passed in to your simulation job.
[$sel:iamRole:SimulationJob'] :: SimulationJob -> Maybe Text

-- | The maximum simulation job duration in seconds. The value must be 8
--   days (691,200 seconds) or less.
[$sel:maxJobDurationInSeconds:SimulationJob'] :: SimulationJob -> Maybe Integer

-- | A map that contains tag keys and tag values that are attached to the
--   simulation job.
[$sel:tags:SimulationJob'] :: SimulationJob -> Maybe (HashMap Text Text)

-- | Create a value of <a>SimulationJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:SimulationJob'</a>,
--   <a>simulationJob_failureReason</a> - The reason why the simulation job
--   failed.
--   
--   <a>$sel:failureBehavior:SimulationJob'</a>,
--   <a>simulationJob_failureBehavior</a> - The failure behavior the
--   simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the host running for its maximum timeout
--   duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
--   
--   <a>$sel:status:SimulationJob'</a>, <a>simulationJob_status</a> -
--   Status of the simulation job.
--   
--   <a>$sel:lastUpdatedAt:SimulationJob'</a>,
--   <a>simulationJob_lastUpdatedAt</a> - The time, in milliseconds since
--   the epoch, when the simulation job was last updated.
--   
--   <a>$sel:arn:SimulationJob'</a>, <a>simulationJob_arn</a> - The Amazon
--   Resource Name (ARN) of the simulation job.
--   
--   <a>$sel:robotApplications:SimulationJob'</a>,
--   <a>simulationJob_robotApplications</a> - A list of robot applications.
--   
--   <a>$sel:failureCode:SimulationJob'</a>,
--   <a>simulationJob_failureCode</a> - The failure code of the simulation
--   job if it failed.
--   
--   <a>$sel:compute:SimulationJob'</a>, <a>simulationJob_compute</a> -
--   Compute information for the simulation job
--   
--   <a>$sel:networkInterface:SimulationJob'</a>,
--   <a>simulationJob_networkInterface</a> - Information about a network
--   interface.
--   
--   <a>$sel:dataSources:SimulationJob'</a>,
--   <a>simulationJob_dataSources</a> - The data sources for the simulation
--   job.
--   
--   <a>$sel:name:SimulationJob'</a>, <a>simulationJob_name</a> - The name
--   of the simulation job.
--   
--   <a>$sel:vpcConfig:SimulationJob'</a>, <a>simulationJob_vpcConfig</a> -
--   VPC configuration information.
--   
--   <a>$sel:outputLocation:SimulationJob'</a>,
--   <a>simulationJob_outputLocation</a> - Location for output files
--   generated by the simulation job.
--   
--   <a>$sel:simulationApplications:SimulationJob'</a>,
--   <a>simulationJob_simulationApplications</a> - A list of simulation
--   applications.
--   
--   <a>$sel:simulationTimeMillis:SimulationJob'</a>,
--   <a>simulationJob_simulationTimeMillis</a> - The simulation job
--   execution duration in milliseconds.
--   
--   <a>$sel:clientRequestToken:SimulationJob'</a>,
--   <a>simulationJob_clientRequestToken</a> - A unique identifier for this
--   <tt>SimulationJob</tt> request.
--   
--   <a>$sel:lastStartedAt:SimulationJob'</a>,
--   <a>simulationJob_lastStartedAt</a> - The time, in milliseconds since
--   the epoch, when the simulation job was last started.
--   
--   <a>$sel:loggingConfig:SimulationJob'</a>,
--   <a>simulationJob_loggingConfig</a> - The logging configuration.
--   
--   <a>$sel:iamRole:SimulationJob'</a>, <a>simulationJob_iamRole</a> - The
--   IAM role that allows the simulation instance to call the AWS APIs that
--   are specified in its associated policies on your behalf. This is how
--   credentials are passed in to your simulation job.
--   
--   <a>$sel:maxJobDurationInSeconds:SimulationJob'</a>,
--   <a>simulationJob_maxJobDurationInSeconds</a> - The maximum simulation
--   job duration in seconds. The value must be 8 days (691,200 seconds) or
--   less.
--   
--   <a>$sel:tags:SimulationJob'</a>, <a>simulationJob_tags</a> - A map
--   that contains tag keys and tag values that are attached to the
--   simulation job.
newSimulationJob :: SimulationJob

-- | The reason why the simulation job failed.
simulationJob_failureReason :: Lens' SimulationJob (Maybe Text)

-- | The failure behavior the simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the host running for its maximum timeout
--   duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
simulationJob_failureBehavior :: Lens' SimulationJob (Maybe FailureBehavior)

-- | Status of the simulation job.
simulationJob_status :: Lens' SimulationJob (Maybe SimulationJobStatus)

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last updated.
simulationJob_lastUpdatedAt :: Lens' SimulationJob (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the simulation job.
simulationJob_arn :: Lens' SimulationJob (Maybe Text)

-- | A list of robot applications.
simulationJob_robotApplications :: Lens' SimulationJob (Maybe (NonEmpty RobotApplicationConfig))

-- | The failure code of the simulation job if it failed.
simulationJob_failureCode :: Lens' SimulationJob (Maybe SimulationJobErrorCode)

-- | Compute information for the simulation job
simulationJob_compute :: Lens' SimulationJob (Maybe ComputeResponse)

-- | Information about a network interface.
simulationJob_networkInterface :: Lens' SimulationJob (Maybe NetworkInterface)

-- | The data sources for the simulation job.
simulationJob_dataSources :: Lens' SimulationJob (Maybe [DataSource])

-- | The name of the simulation job.
simulationJob_name :: Lens' SimulationJob (Maybe Text)

-- | VPC configuration information.
simulationJob_vpcConfig :: Lens' SimulationJob (Maybe VPCConfigResponse)

-- | Location for output files generated by the simulation job.
simulationJob_outputLocation :: Lens' SimulationJob (Maybe OutputLocation)

-- | A list of simulation applications.
simulationJob_simulationApplications :: Lens' SimulationJob (Maybe (NonEmpty SimulationApplicationConfig))

-- | The simulation job execution duration in milliseconds.
simulationJob_simulationTimeMillis :: Lens' SimulationJob (Maybe Integer)

-- | A unique identifier for this <tt>SimulationJob</tt> request.
simulationJob_clientRequestToken :: Lens' SimulationJob (Maybe Text)

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last started.
simulationJob_lastStartedAt :: Lens' SimulationJob (Maybe UTCTime)

-- | The logging configuration.
simulationJob_loggingConfig :: Lens' SimulationJob (Maybe LoggingConfig)

-- | The IAM role that allows the simulation instance to call the AWS APIs
--   that are specified in its associated policies on your behalf. This is
--   how credentials are passed in to your simulation job.
simulationJob_iamRole :: Lens' SimulationJob (Maybe Text)

-- | The maximum simulation job duration in seconds. The value must be 8
--   days (691,200 seconds) or less.
simulationJob_maxJobDurationInSeconds :: Lens' SimulationJob (Maybe Integer)

-- | A map that contains tag keys and tag values that are attached to the
--   simulation job.
simulationJob_tags :: Lens' SimulationJob (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.SimulationJob.SimulationJob
instance GHC.Show.Show Amazonka.RobOMaker.Types.SimulationJob.SimulationJob
instance GHC.Read.Read Amazonka.RobOMaker.Types.SimulationJob.SimulationJob
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.SimulationJob.SimulationJob
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.SimulationJob.SimulationJob
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.SimulationJob.SimulationJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.SimulationJob.SimulationJob


module Amazonka.RobOMaker.Types.WorldCount

-- | The number of worlds that will be created. You can configure the
--   number of unique floorplans and the number of unique interiors for
--   each floor plan. For example, if you want 1 world with 20 unique
--   interiors, you set <tt>floorplanCount = 1</tt> and
--   <tt>interiorCountPerFloorplan = 20</tt>. This will result in 20 worlds
--   (<tt>floorplanCount</tt> * <tt>interiorCountPerFloorplan)</tt>.
--   
--   If you set <tt>floorplanCount = 4</tt> and
--   <tt>interiorCountPerFloorplan = 5</tt>, there will be 20 worlds with 5
--   unique floor plans.
--   
--   <i>See:</i> <a>newWorldCount</a> smart constructor.
data WorldCount
WorldCount' :: Maybe Int -> Maybe Int -> WorldCount

-- | The number of unique interiors per floorplan.
[$sel:interiorCountPerFloorplan:WorldCount'] :: WorldCount -> Maybe Int

-- | The number of unique floorplans.
[$sel:floorplanCount:WorldCount'] :: WorldCount -> Maybe Int

-- | Create a value of <a>WorldCount</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interiorCountPerFloorplan:WorldCount'</a>,
--   <a>worldCount_interiorCountPerFloorplan</a> - The number of unique
--   interiors per floorplan.
--   
--   <a>$sel:floorplanCount:WorldCount'</a>,
--   <a>worldCount_floorplanCount</a> - The number of unique floorplans.
newWorldCount :: WorldCount

-- | The number of unique interiors per floorplan.
worldCount_interiorCountPerFloorplan :: Lens' WorldCount (Maybe Int)

-- | The number of unique floorplans.
worldCount_floorplanCount :: Lens' WorldCount (Maybe Int)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.WorldCount.WorldCount
instance GHC.Show.Show Amazonka.RobOMaker.Types.WorldCount.WorldCount
instance GHC.Read.Read Amazonka.RobOMaker.Types.WorldCount.WorldCount
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.WorldCount.WorldCount
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.WorldCount.WorldCount
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.WorldCount.WorldCount
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.WorldCount.WorldCount
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.WorldCount.WorldCount


module Amazonka.RobOMaker.Types.WorldExportJobErrorCode
newtype WorldExportJobErrorCode
WorldExportJobErrorCode' :: Text -> WorldExportJobErrorCode
[fromWorldExportJobErrorCode] :: WorldExportJobErrorCode -> Text
pattern WorldExportJobErrorCode_AccessDenied :: WorldExportJobErrorCode
pattern WorldExportJobErrorCode_InternalServiceError :: WorldExportJobErrorCode
pattern WorldExportJobErrorCode_InvalidInput :: WorldExportJobErrorCode
pattern WorldExportJobErrorCode_LimitExceeded :: WorldExportJobErrorCode
pattern WorldExportJobErrorCode_RequestThrottled :: WorldExportJobErrorCode
pattern WorldExportJobErrorCode_ResourceNotFound :: WorldExportJobErrorCode
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.WorldExportJobErrorCode.WorldExportJobErrorCode
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.WorldExportJobErrorCode.WorldExportJobErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.WorldExportJobErrorCode.WorldExportJobErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.WorldExportJobErrorCode.WorldExportJobErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.WorldExportJobErrorCode.WorldExportJobErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.WorldExportJobErrorCode.WorldExportJobErrorCode
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.WorldExportJobErrorCode.WorldExportJobErrorCode
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.WorldExportJobErrorCode.WorldExportJobErrorCode
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.WorldExportJobErrorCode.WorldExportJobErrorCode
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.WorldExportJobErrorCode.WorldExportJobErrorCode
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.WorldExportJobErrorCode.WorldExportJobErrorCode
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.WorldExportJobErrorCode.WorldExportJobErrorCode
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.WorldExportJobErrorCode.WorldExportJobErrorCode
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.WorldExportJobErrorCode.WorldExportJobErrorCode
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.WorldExportJobErrorCode.WorldExportJobErrorCode
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.WorldExportJobErrorCode.WorldExportJobErrorCode
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.WorldExportJobErrorCode.WorldExportJobErrorCode
instance GHC.Read.Read Amazonka.RobOMaker.Types.WorldExportJobErrorCode.WorldExportJobErrorCode
instance GHC.Show.Show Amazonka.RobOMaker.Types.WorldExportJobErrorCode.WorldExportJobErrorCode


module Amazonka.RobOMaker.Types.WorldExportJobStatus
newtype WorldExportJobStatus
WorldExportJobStatus' :: Text -> WorldExportJobStatus
[fromWorldExportJobStatus] :: WorldExportJobStatus -> Text
pattern WorldExportJobStatus_Canceled :: WorldExportJobStatus
pattern WorldExportJobStatus_Canceling :: WorldExportJobStatus
pattern WorldExportJobStatus_Completed :: WorldExportJobStatus
pattern WorldExportJobStatus_Failed :: WorldExportJobStatus
pattern WorldExportJobStatus_Pending :: WorldExportJobStatus
pattern WorldExportJobStatus_Running :: WorldExportJobStatus
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.WorldExportJobStatus.WorldExportJobStatus
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.WorldExportJobStatus.WorldExportJobStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.WorldExportJobStatus.WorldExportJobStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.WorldExportJobStatus.WorldExportJobStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.WorldExportJobStatus.WorldExportJobStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.WorldExportJobStatus.WorldExportJobStatus
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.WorldExportJobStatus.WorldExportJobStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.WorldExportJobStatus.WorldExportJobStatus
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.WorldExportJobStatus.WorldExportJobStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.WorldExportJobStatus.WorldExportJobStatus
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.WorldExportJobStatus.WorldExportJobStatus
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.WorldExportJobStatus.WorldExportJobStatus
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.WorldExportJobStatus.WorldExportJobStatus
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.WorldExportJobStatus.WorldExportJobStatus
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.WorldExportJobStatus.WorldExportJobStatus
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.WorldExportJobStatus.WorldExportJobStatus
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.WorldExportJobStatus.WorldExportJobStatus
instance GHC.Read.Read Amazonka.RobOMaker.Types.WorldExportJobStatus.WorldExportJobStatus
instance GHC.Show.Show Amazonka.RobOMaker.Types.WorldExportJobStatus.WorldExportJobStatus


module Amazonka.RobOMaker.Types.WorldExportJobSummary

-- | Information about a world export job.
--   
--   <i>See:</i> <a>newWorldExportJobSummary</a> smart constructor.
data WorldExportJobSummary
WorldExportJobSummary' :: Maybe WorldExportJobStatus -> Maybe Text -> Maybe POSIX -> Maybe (NonEmpty Text) -> WorldExportJobSummary

-- | The status of the world export job.
--   
--   <ul>
--   <li><i>Pending</i> The world export job request is pending.</li>
--   <li><i>Running</i> The world export job is running.</li>
--   <li><i>Completed</i> The world export job completed.</li>
--   <li><i>Failed</i> The world export job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>Canceled</i> The world export job was cancelled.</li>
--   <li><i>Canceling</i> The world export job is being cancelled.</li>
--   </ul>
[$sel:status:WorldExportJobSummary'] :: WorldExportJobSummary -> Maybe WorldExportJobStatus

-- | The Amazon Resource Name (ARN) of the world export job.
[$sel:arn:WorldExportJobSummary'] :: WorldExportJobSummary -> Maybe Text

-- | The time, in milliseconds since the epoch, when the world export job
--   was created.
[$sel:createdAt:WorldExportJobSummary'] :: WorldExportJobSummary -> Maybe POSIX

-- | A list of worlds.
[$sel:worlds:WorldExportJobSummary'] :: WorldExportJobSummary -> Maybe (NonEmpty Text)

-- | Create a value of <a>WorldExportJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:WorldExportJobSummary'</a>,
--   <a>worldExportJobSummary_status</a> - The status of the world export
--   job.
--   
--   <ul>
--   <li><i>Pending</i> The world export job request is pending.</li>
--   <li><i>Running</i> The world export job is running.</li>
--   <li><i>Completed</i> The world export job completed.</li>
--   <li><i>Failed</i> The world export job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>Canceled</i> The world export job was cancelled.</li>
--   <li><i>Canceling</i> The world export job is being cancelled.</li>
--   </ul>
--   
--   <a>$sel:arn:WorldExportJobSummary'</a>,
--   <a>worldExportJobSummary_arn</a> - The Amazon Resource Name (ARN) of
--   the world export job.
--   
--   <a>$sel:createdAt:WorldExportJobSummary'</a>,
--   <a>worldExportJobSummary_createdAt</a> - The time, in milliseconds
--   since the epoch, when the world export job was created.
--   
--   <a>$sel:worlds:WorldExportJobSummary'</a>,
--   <a>worldExportJobSummary_worlds</a> - A list of worlds.
newWorldExportJobSummary :: WorldExportJobSummary

-- | The status of the world export job.
--   
--   <ul>
--   <li><i>Pending</i> The world export job request is pending.</li>
--   <li><i>Running</i> The world export job is running.</li>
--   <li><i>Completed</i> The world export job completed.</li>
--   <li><i>Failed</i> The world export job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>Canceled</i> The world export job was cancelled.</li>
--   <li><i>Canceling</i> The world export job is being cancelled.</li>
--   </ul>
worldExportJobSummary_status :: Lens' WorldExportJobSummary (Maybe WorldExportJobStatus)

-- | The Amazon Resource Name (ARN) of the world export job.
worldExportJobSummary_arn :: Lens' WorldExportJobSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world export job
--   was created.
worldExportJobSummary_createdAt :: Lens' WorldExportJobSummary (Maybe UTCTime)

-- | A list of worlds.
worldExportJobSummary_worlds :: Lens' WorldExportJobSummary (Maybe (NonEmpty Text))
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.WorldExportJobSummary.WorldExportJobSummary
instance GHC.Show.Show Amazonka.RobOMaker.Types.WorldExportJobSummary.WorldExportJobSummary
instance GHC.Read.Read Amazonka.RobOMaker.Types.WorldExportJobSummary.WorldExportJobSummary
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.WorldExportJobSummary.WorldExportJobSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.WorldExportJobSummary.WorldExportJobSummary
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.WorldExportJobSummary.WorldExportJobSummary
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.WorldExportJobSummary.WorldExportJobSummary


module Amazonka.RobOMaker.Types.WorldGenerationJobErrorCode
newtype WorldGenerationJobErrorCode
WorldGenerationJobErrorCode' :: Text -> WorldGenerationJobErrorCode
[fromWorldGenerationJobErrorCode] :: WorldGenerationJobErrorCode -> Text
pattern WorldGenerationJobErrorCode_AllWorldGenerationFailed :: WorldGenerationJobErrorCode
pattern WorldGenerationJobErrorCode_InternalServiceError :: WorldGenerationJobErrorCode
pattern WorldGenerationJobErrorCode_InvalidInput :: WorldGenerationJobErrorCode
pattern WorldGenerationJobErrorCode_LimitExceeded :: WorldGenerationJobErrorCode
pattern WorldGenerationJobErrorCode_RequestThrottled :: WorldGenerationJobErrorCode
pattern WorldGenerationJobErrorCode_ResourceNotFound :: WorldGenerationJobErrorCode
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.WorldGenerationJobErrorCode.WorldGenerationJobErrorCode
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.WorldGenerationJobErrorCode.WorldGenerationJobErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.WorldGenerationJobErrorCode.WorldGenerationJobErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.WorldGenerationJobErrorCode.WorldGenerationJobErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.WorldGenerationJobErrorCode.WorldGenerationJobErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.WorldGenerationJobErrorCode.WorldGenerationJobErrorCode
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.WorldGenerationJobErrorCode.WorldGenerationJobErrorCode
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.WorldGenerationJobErrorCode.WorldGenerationJobErrorCode
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.WorldGenerationJobErrorCode.WorldGenerationJobErrorCode
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.WorldGenerationJobErrorCode.WorldGenerationJobErrorCode
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.WorldGenerationJobErrorCode.WorldGenerationJobErrorCode
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.WorldGenerationJobErrorCode.WorldGenerationJobErrorCode
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.WorldGenerationJobErrorCode.WorldGenerationJobErrorCode
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.WorldGenerationJobErrorCode.WorldGenerationJobErrorCode
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.WorldGenerationJobErrorCode.WorldGenerationJobErrorCode
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.WorldGenerationJobErrorCode.WorldGenerationJobErrorCode
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.WorldGenerationJobErrorCode.WorldGenerationJobErrorCode
instance GHC.Read.Read Amazonka.RobOMaker.Types.WorldGenerationJobErrorCode.WorldGenerationJobErrorCode
instance GHC.Show.Show Amazonka.RobOMaker.Types.WorldGenerationJobErrorCode.WorldGenerationJobErrorCode


module Amazonka.RobOMaker.Types.WorldFailure

-- | Information about a failed world.
--   
--   <i>See:</i> <a>newWorldFailure</a> smart constructor.
data WorldFailure
WorldFailure' :: Maybe Text -> Maybe WorldGenerationJobErrorCode -> Maybe Int -> WorldFailure

-- | The sample reason why the world failed. World errors are aggregated. A
--   sample is used as the <tt>sampleFailureReason</tt>.
[$sel:sampleFailureReason:WorldFailure'] :: WorldFailure -> Maybe Text

-- | The failure code of the world export job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
[$sel:failureCode:WorldFailure'] :: WorldFailure -> Maybe WorldGenerationJobErrorCode

-- | The number of failed worlds.
[$sel:failureCount:WorldFailure'] :: WorldFailure -> Maybe Int

-- | Create a value of <a>WorldFailure</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sampleFailureReason:WorldFailure'</a>,
--   <a>worldFailure_sampleFailureReason</a> - The sample reason why the
--   world failed. World errors are aggregated. A sample is used as the
--   <tt>sampleFailureReason</tt>.
--   
--   <a>$sel:failureCode:WorldFailure'</a>, <a>worldFailure_failureCode</a>
--   - The failure code of the world export job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
--   
--   <a>$sel:failureCount:WorldFailure'</a>,
--   <a>worldFailure_failureCount</a> - The number of failed worlds.
newWorldFailure :: WorldFailure

-- | The sample reason why the world failed. World errors are aggregated. A
--   sample is used as the <tt>sampleFailureReason</tt>.
worldFailure_sampleFailureReason :: Lens' WorldFailure (Maybe Text)

-- | The failure code of the world export job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
worldFailure_failureCode :: Lens' WorldFailure (Maybe WorldGenerationJobErrorCode)

-- | The number of failed worlds.
worldFailure_failureCount :: Lens' WorldFailure (Maybe Int)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.WorldFailure.WorldFailure
instance GHC.Show.Show Amazonka.RobOMaker.Types.WorldFailure.WorldFailure
instance GHC.Read.Read Amazonka.RobOMaker.Types.WorldFailure.WorldFailure
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.WorldFailure.WorldFailure
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.WorldFailure.WorldFailure
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.WorldFailure.WorldFailure
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.WorldFailure.WorldFailure


module Amazonka.RobOMaker.Types.FailureSummary

-- | Information about worlds that failed.
--   
--   <i>See:</i> <a>newFailureSummary</a> smart constructor.
data FailureSummary
FailureSummary' :: Maybe [WorldFailure] -> Maybe Int -> FailureSummary

-- | The worlds that failed.
[$sel:failures:FailureSummary'] :: FailureSummary -> Maybe [WorldFailure]

-- | The total number of failures.
[$sel:totalFailureCount:FailureSummary'] :: FailureSummary -> Maybe Int

-- | Create a value of <a>FailureSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failures:FailureSummary'</a>, <a>failureSummary_failures</a> -
--   The worlds that failed.
--   
--   <a>$sel:totalFailureCount:FailureSummary'</a>,
--   <a>failureSummary_totalFailureCount</a> - The total number of
--   failures.
newFailureSummary :: FailureSummary

-- | The worlds that failed.
failureSummary_failures :: Lens' FailureSummary (Maybe [WorldFailure])

-- | The total number of failures.
failureSummary_totalFailureCount :: Lens' FailureSummary (Maybe Int)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.FailureSummary.FailureSummary
instance GHC.Show.Show Amazonka.RobOMaker.Types.FailureSummary.FailureSummary
instance GHC.Read.Read Amazonka.RobOMaker.Types.FailureSummary.FailureSummary
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.FailureSummary.FailureSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.FailureSummary.FailureSummary
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.FailureSummary.FailureSummary
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.FailureSummary.FailureSummary


module Amazonka.RobOMaker.Types.FinishedWorldsSummary

-- | Information about worlds that finished.
--   
--   <i>See:</i> <a>newFinishedWorldsSummary</a> smart constructor.
data FinishedWorldsSummary
FinishedWorldsSummary' :: Maybe (NonEmpty Text) -> Maybe FailureSummary -> Maybe Int -> FinishedWorldsSummary

-- | A list of worlds that succeeded.
[$sel:succeededWorlds:FinishedWorldsSummary'] :: FinishedWorldsSummary -> Maybe (NonEmpty Text)

-- | Information about worlds that failed.
[$sel:failureSummary:FinishedWorldsSummary'] :: FinishedWorldsSummary -> Maybe FailureSummary

-- | The total number of finished worlds.
[$sel:finishedCount:FinishedWorldsSummary'] :: FinishedWorldsSummary -> Maybe Int

-- | Create a value of <a>FinishedWorldsSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:succeededWorlds:FinishedWorldsSummary'</a>,
--   <a>finishedWorldsSummary_succeededWorlds</a> - A list of worlds that
--   succeeded.
--   
--   <a>$sel:failureSummary:FinishedWorldsSummary'</a>,
--   <a>finishedWorldsSummary_failureSummary</a> - Information about worlds
--   that failed.
--   
--   <a>$sel:finishedCount:FinishedWorldsSummary'</a>,
--   <a>finishedWorldsSummary_finishedCount</a> - The total number of
--   finished worlds.
newFinishedWorldsSummary :: FinishedWorldsSummary

-- | A list of worlds that succeeded.
finishedWorldsSummary_succeededWorlds :: Lens' FinishedWorldsSummary (Maybe (NonEmpty Text))

-- | Information about worlds that failed.
finishedWorldsSummary_failureSummary :: Lens' FinishedWorldsSummary (Maybe FailureSummary)

-- | The total number of finished worlds.
finishedWorldsSummary_finishedCount :: Lens' FinishedWorldsSummary (Maybe Int)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.FinishedWorldsSummary.FinishedWorldsSummary
instance GHC.Show.Show Amazonka.RobOMaker.Types.FinishedWorldsSummary.FinishedWorldsSummary
instance GHC.Read.Read Amazonka.RobOMaker.Types.FinishedWorldsSummary.FinishedWorldsSummary
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.FinishedWorldsSummary.FinishedWorldsSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.FinishedWorldsSummary.FinishedWorldsSummary
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.FinishedWorldsSummary.FinishedWorldsSummary
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.FinishedWorldsSummary.FinishedWorldsSummary


module Amazonka.RobOMaker.Types.WorldGenerationJobStatus
newtype WorldGenerationJobStatus
WorldGenerationJobStatus' :: Text -> WorldGenerationJobStatus
[fromWorldGenerationJobStatus] :: WorldGenerationJobStatus -> Text
pattern WorldGenerationJobStatus_Canceled :: WorldGenerationJobStatus
pattern WorldGenerationJobStatus_Canceling :: WorldGenerationJobStatus
pattern WorldGenerationJobStatus_Completed :: WorldGenerationJobStatus
pattern WorldGenerationJobStatus_Failed :: WorldGenerationJobStatus
pattern WorldGenerationJobStatus_PartialFailed :: WorldGenerationJobStatus
pattern WorldGenerationJobStatus_Pending :: WorldGenerationJobStatus
pattern WorldGenerationJobStatus_Running :: WorldGenerationJobStatus
instance Amazonka.Data.XML.ToXML Amazonka.RobOMaker.Types.WorldGenerationJobStatus.WorldGenerationJobStatus
instance Amazonka.Data.XML.FromXML Amazonka.RobOMaker.Types.WorldGenerationJobStatus.WorldGenerationJobStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.RobOMaker.Types.WorldGenerationJobStatus.WorldGenerationJobStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.Types.WorldGenerationJobStatus.WorldGenerationJobStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.RobOMaker.Types.WorldGenerationJobStatus.WorldGenerationJobStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.WorldGenerationJobStatus.WorldGenerationJobStatus
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.Types.WorldGenerationJobStatus.WorldGenerationJobStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.RobOMaker.Types.WorldGenerationJobStatus.WorldGenerationJobStatus
instance Amazonka.Data.Log.ToLog Amazonka.RobOMaker.Types.WorldGenerationJobStatus.WorldGenerationJobStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.RobOMaker.Types.WorldGenerationJobStatus.WorldGenerationJobStatus
instance Amazonka.Data.Text.ToText Amazonka.RobOMaker.Types.WorldGenerationJobStatus.WorldGenerationJobStatus
instance Amazonka.Data.Text.FromText Amazonka.RobOMaker.Types.WorldGenerationJobStatus.WorldGenerationJobStatus
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.WorldGenerationJobStatus.WorldGenerationJobStatus
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.WorldGenerationJobStatus.WorldGenerationJobStatus
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.WorldGenerationJobStatus.WorldGenerationJobStatus
instance GHC.Classes.Ord Amazonka.RobOMaker.Types.WorldGenerationJobStatus.WorldGenerationJobStatus
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.WorldGenerationJobStatus.WorldGenerationJobStatus
instance GHC.Read.Read Amazonka.RobOMaker.Types.WorldGenerationJobStatus.WorldGenerationJobStatus
instance GHC.Show.Show Amazonka.RobOMaker.Types.WorldGenerationJobStatus.WorldGenerationJobStatus


module Amazonka.RobOMaker.Types.WorldGenerationJobSummary

-- | Information about a world generator job.
--   
--   <i>See:</i> <a>newWorldGenerationJobSummary</a> smart constructor.
data WorldGenerationJobSummary
WorldGenerationJobSummary' :: Maybe WorldGenerationJobStatus -> Maybe Text -> Maybe POSIX -> Maybe WorldCount -> Maybe Int -> Maybe Int -> Maybe Text -> WorldGenerationJobSummary

-- | The status of the world generator job:
--   
--   <ul>
--   <li><i>Pending</i> The world generator job request is pending.</li>
--   <li><i>Running</i> The world generator job is running.</li>
--   <li><i>Completed</i> The world generator job completed.</li>
--   <li><i>Failed</i> The world generator job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>PartialFailed</i> Some worlds did not generate.</li>
--   <li><i>Canceled</i> The world generator job was cancelled.</li>
--   <li><i>Canceling</i> The world generator job is being cancelled.</li>
--   </ul>
[$sel:status:WorldGenerationJobSummary'] :: WorldGenerationJobSummary -> Maybe WorldGenerationJobStatus

-- | The Amazon Resource Name (ARN) of the world generator job.
[$sel:arn:WorldGenerationJobSummary'] :: WorldGenerationJobSummary -> Maybe Text

-- | The time, in milliseconds since the epoch, when the world generator
--   job was created.
[$sel:createdAt:WorldGenerationJobSummary'] :: WorldGenerationJobSummary -> Maybe POSIX

-- | Information about the world count.
[$sel:worldCount:WorldGenerationJobSummary'] :: WorldGenerationJobSummary -> Maybe WorldCount

-- | The number of worlds that were generated.
[$sel:succeededWorldCount:WorldGenerationJobSummary'] :: WorldGenerationJobSummary -> Maybe Int

-- | The number of worlds that failed.
[$sel:failedWorldCount:WorldGenerationJobSummary'] :: WorldGenerationJobSummary -> Maybe Int

-- | The Amazon Resource Name (arn) of the world template.
[$sel:template:WorldGenerationJobSummary'] :: WorldGenerationJobSummary -> Maybe Text

-- | Create a value of <a>WorldGenerationJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_status</a> - The status of the world
--   generator job:
--   
--   <ul>
--   <li><i>Pending</i> The world generator job request is pending.</li>
--   <li><i>Running</i> The world generator job is running.</li>
--   <li><i>Completed</i> The world generator job completed.</li>
--   <li><i>Failed</i> The world generator job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>PartialFailed</i> Some worlds did not generate.</li>
--   <li><i>Canceled</i> The world generator job was cancelled.</li>
--   <li><i>Canceling</i> The world generator job is being cancelled.</li>
--   </ul>
--   
--   <a>$sel:arn:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_arn</a> - The Amazon Resource Name (ARN)
--   of the world generator job.
--   
--   <a>$sel:createdAt:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_createdAt</a> - The time, in milliseconds
--   since the epoch, when the world generator job was created.
--   
--   <a>$sel:worldCount:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_worldCount</a> - Information about the
--   world count.
--   
--   <a>$sel:succeededWorldCount:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_succeededWorldCount</a> - The number of
--   worlds that were generated.
--   
--   <a>$sel:failedWorldCount:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_failedWorldCount</a> - The number of
--   worlds that failed.
--   
--   <a>$sel:template:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_template</a> - The Amazon Resource Name
--   (arn) of the world template.
newWorldGenerationJobSummary :: WorldGenerationJobSummary

-- | The status of the world generator job:
--   
--   <ul>
--   <li><i>Pending</i> The world generator job request is pending.</li>
--   <li><i>Running</i> The world generator job is running.</li>
--   <li><i>Completed</i> The world generator job completed.</li>
--   <li><i>Failed</i> The world generator job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>PartialFailed</i> Some worlds did not generate.</li>
--   <li><i>Canceled</i> The world generator job was cancelled.</li>
--   <li><i>Canceling</i> The world generator job is being cancelled.</li>
--   </ul>
worldGenerationJobSummary_status :: Lens' WorldGenerationJobSummary (Maybe WorldGenerationJobStatus)

-- | The Amazon Resource Name (ARN) of the world generator job.
worldGenerationJobSummary_arn :: Lens' WorldGenerationJobSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world generator
--   job was created.
worldGenerationJobSummary_createdAt :: Lens' WorldGenerationJobSummary (Maybe UTCTime)

-- | Information about the world count.
worldGenerationJobSummary_worldCount :: Lens' WorldGenerationJobSummary (Maybe WorldCount)

-- | The number of worlds that were generated.
worldGenerationJobSummary_succeededWorldCount :: Lens' WorldGenerationJobSummary (Maybe Int)

-- | The number of worlds that failed.
worldGenerationJobSummary_failedWorldCount :: Lens' WorldGenerationJobSummary (Maybe Int)

-- | The Amazon Resource Name (arn) of the world template.
worldGenerationJobSummary_template :: Lens' WorldGenerationJobSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.WorldGenerationJobSummary.WorldGenerationJobSummary
instance GHC.Show.Show Amazonka.RobOMaker.Types.WorldGenerationJobSummary.WorldGenerationJobSummary
instance GHC.Read.Read Amazonka.RobOMaker.Types.WorldGenerationJobSummary.WorldGenerationJobSummary
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.WorldGenerationJobSummary.WorldGenerationJobSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.WorldGenerationJobSummary.WorldGenerationJobSummary
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.WorldGenerationJobSummary.WorldGenerationJobSummary
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.WorldGenerationJobSummary.WorldGenerationJobSummary


module Amazonka.RobOMaker.Types.WorldSummary

-- | Information about a world.
--   
--   <i>See:</i> <a>newWorldSummary</a> smart constructor.
data WorldSummary
WorldSummary' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> WorldSummary

-- | The Amazon Resource Name (ARN) of the world.
[$sel:arn:WorldSummary'] :: WorldSummary -> Maybe Text

-- | The time, in milliseconds since the epoch, when the world was created.
[$sel:createdAt:WorldSummary'] :: WorldSummary -> Maybe POSIX

-- | The Amazon Resource Name (arn) of the world template.
[$sel:template:WorldSummary'] :: WorldSummary -> Maybe Text

-- | The Amazon Resource Name (arn) of the world generation job.
[$sel:generationJob:WorldSummary'] :: WorldSummary -> Maybe Text

-- | Create a value of <a>WorldSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:WorldSummary'</a>, <a>worldSummary_arn</a> - The Amazon
--   Resource Name (ARN) of the world.
--   
--   <a>$sel:createdAt:WorldSummary'</a>, <a>worldSummary_createdAt</a> -
--   The time, in milliseconds since the epoch, when the world was created.
--   
--   <a>$sel:template:WorldSummary'</a>, <a>worldSummary_template</a> - The
--   Amazon Resource Name (arn) of the world template.
--   
--   <a>$sel:generationJob:WorldSummary'</a>,
--   <a>worldSummary_generationJob</a> - The Amazon Resource Name (arn) of
--   the world generation job.
newWorldSummary :: WorldSummary

-- | The Amazon Resource Name (ARN) of the world.
worldSummary_arn :: Lens' WorldSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world was created.
worldSummary_createdAt :: Lens' WorldSummary (Maybe UTCTime)

-- | The Amazon Resource Name (arn) of the world template.
worldSummary_template :: Lens' WorldSummary (Maybe Text)

-- | The Amazon Resource Name (arn) of the world generation job.
worldSummary_generationJob :: Lens' WorldSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.RobOMaker.Types.WorldSummary.WorldSummary
instance GHC.Show.Show Amazonka.RobOMaker.Types.WorldSummary.WorldSummary
instance GHC.Read.Read Amazonka.RobOMaker.Types.WorldSummary.WorldSummary
instance GHC.Classes.Eq Amazonka.RobOMaker.Types.WorldSummary.WorldSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.RobOMaker.Types.WorldSummary.WorldSummary
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.Types.WorldSummary.WorldSummary
instance Control.DeepSeq.NFData Amazonka.RobOMaker.Types.WorldSummary.WorldSummary


module Amazonka.RobOMaker.Types

-- | API version <tt>2018-06-29</tt> of the Amazon RoboMaker SDK
--   configuration.
defaultService :: Service

-- | A parameter specified in a request is not valid, is unsupported, or
--   cannot be used. The returned message provides an explanation of the
--   error value.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | AWS RoboMaker is temporarily unable to process the request. Try your
--   call again.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | AWS RoboMaker experienced a service issue. Try your call again.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The failure percentage threshold percentage was met.
_ConcurrentDeploymentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request has failed due to a temporary failure of the server.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request uses the same client token as a previous, but
--   non-identical request. Do not reuse a client token with different
--   requests, unless the requests are identical.
_IdempotentParameterMismatchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource does not exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested resource exceeds the maximum number allowed, or the
--   number of concurrent stream requests exceeds the maximum number
--   allowed.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError
newtype Architecture
Architecture' :: Text -> Architecture
[fromArchitecture] :: Architecture -> Text
pattern Architecture_ARM64 :: Architecture
pattern Architecture_ARMHF :: Architecture
pattern Architecture_X86_64 :: Architecture
newtype ComputeType
ComputeType' :: Text -> ComputeType
[fromComputeType] :: ComputeType -> Text
pattern ComputeType_CPU :: ComputeType
pattern ComputeType_GPU_AND_CPU :: ComputeType
newtype DataSourceType
DataSourceType' :: Text -> DataSourceType
[fromDataSourceType] :: DataSourceType -> Text
pattern DataSourceType_Archive :: DataSourceType
pattern DataSourceType_File :: DataSourceType
pattern DataSourceType_Prefix :: DataSourceType
newtype DeploymentJobErrorCode
DeploymentJobErrorCode' :: Text -> DeploymentJobErrorCode
[fromDeploymentJobErrorCode] :: DeploymentJobErrorCode -> Text
pattern DeploymentJobErrorCode_BadLambdaAssociated :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_BadPermissionError :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_DeploymentFleetDoesNotExist :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_DownloadConditionFailed :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_EnvironmentSetupError :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_EtagMismatch :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_ExtractingBundleFailure :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_FailureThresholdBreached :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_FleetDeploymentTimeout :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_GreengrassDeploymentFailed :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_GreengrassGroupVersionDoesNotExist :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_InternalServerError :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_InvalidGreengrassGroup :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_LambdaDeleted :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_MissingRobotApplicationArchitecture :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_MissingRobotArchitecture :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_MissingRobotDeploymentResource :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_PostLaunchFileFailure :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_PreLaunchFileFailure :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_ResourceNotFound :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_RobotAgentConnectionTimeout :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_RobotApplicationDoesNotExist :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_RobotDeploymentAborted :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_RobotDeploymentNoResponse :: DeploymentJobErrorCode
newtype DeploymentStatus
DeploymentStatus' :: Text -> DeploymentStatus
[fromDeploymentStatus] :: DeploymentStatus -> Text
pattern DeploymentStatus_Canceled :: DeploymentStatus
pattern DeploymentStatus_Failed :: DeploymentStatus
pattern DeploymentStatus_InProgress :: DeploymentStatus
pattern DeploymentStatus_Pending :: DeploymentStatus
pattern DeploymentStatus_Preparing :: DeploymentStatus
pattern DeploymentStatus_Succeeded :: DeploymentStatus
newtype ExitBehavior
ExitBehavior' :: Text -> ExitBehavior
[fromExitBehavior] :: ExitBehavior -> Text
pattern ExitBehavior_FAIL :: ExitBehavior
pattern ExitBehavior_RESTART :: ExitBehavior
newtype FailureBehavior
FailureBehavior' :: Text -> FailureBehavior
[fromFailureBehavior] :: FailureBehavior -> Text
pattern FailureBehavior_Continue :: FailureBehavior
pattern FailureBehavior_Fail :: FailureBehavior
newtype RenderingEngineType
RenderingEngineType' :: Text -> RenderingEngineType
[fromRenderingEngineType] :: RenderingEngineType -> Text
pattern RenderingEngineType_OGRE :: RenderingEngineType
newtype RobotDeploymentStep
RobotDeploymentStep' :: Text -> RobotDeploymentStep
[fromRobotDeploymentStep] :: RobotDeploymentStep -> Text
pattern RobotDeploymentStep_DownloadingExtracting :: RobotDeploymentStep
pattern RobotDeploymentStep_ExecutingDownloadCondition :: RobotDeploymentStep
pattern RobotDeploymentStep_ExecutingPostLaunch :: RobotDeploymentStep
pattern RobotDeploymentStep_ExecutingPreLaunch :: RobotDeploymentStep
pattern RobotDeploymentStep_Finished :: RobotDeploymentStep
pattern RobotDeploymentStep_Launching :: RobotDeploymentStep
pattern RobotDeploymentStep_Validating :: RobotDeploymentStep
newtype RobotSoftwareSuiteType
RobotSoftwareSuiteType' :: Text -> RobotSoftwareSuiteType
[fromRobotSoftwareSuiteType] :: RobotSoftwareSuiteType -> Text
pattern RobotSoftwareSuiteType_General :: RobotSoftwareSuiteType
pattern RobotSoftwareSuiteType_ROS :: RobotSoftwareSuiteType
pattern RobotSoftwareSuiteType_ROS2 :: RobotSoftwareSuiteType
newtype RobotSoftwareSuiteVersionType
RobotSoftwareSuiteVersionType' :: Text -> RobotSoftwareSuiteVersionType
[fromRobotSoftwareSuiteVersionType] :: RobotSoftwareSuiteVersionType -> Text
pattern RobotSoftwareSuiteVersionType_Dashing :: RobotSoftwareSuiteVersionType
pattern RobotSoftwareSuiteVersionType_Foxy :: RobotSoftwareSuiteVersionType
pattern RobotSoftwareSuiteVersionType_Kinetic :: RobotSoftwareSuiteVersionType
pattern RobotSoftwareSuiteVersionType_Melodic :: RobotSoftwareSuiteVersionType
newtype RobotStatus
RobotStatus' :: Text -> RobotStatus
[fromRobotStatus] :: RobotStatus -> Text
pattern RobotStatus_Available :: RobotStatus
pattern RobotStatus_Deploying :: RobotStatus
pattern RobotStatus_Failed :: RobotStatus
pattern RobotStatus_InSync :: RobotStatus
pattern RobotStatus_NoResponse :: RobotStatus
pattern RobotStatus_PendingNewDeployment :: RobotStatus
pattern RobotStatus_Registered :: RobotStatus
newtype SimulationJobBatchErrorCode
SimulationJobBatchErrorCode' :: Text -> SimulationJobBatchErrorCode
[fromSimulationJobBatchErrorCode] :: SimulationJobBatchErrorCode -> Text
pattern SimulationJobBatchErrorCode_InternalServiceError :: SimulationJobBatchErrorCode
newtype SimulationJobBatchStatus
SimulationJobBatchStatus' :: Text -> SimulationJobBatchStatus
[fromSimulationJobBatchStatus] :: SimulationJobBatchStatus -> Text
pattern SimulationJobBatchStatus_Canceled :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_Canceling :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_Completed :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_Completing :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_Failed :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_InProgress :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_Pending :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_TimedOut :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_TimingOut :: SimulationJobBatchStatus
newtype SimulationJobErrorCode
SimulationJobErrorCode' :: Text -> SimulationJobErrorCode
[fromSimulationJobErrorCode] :: SimulationJobErrorCode -> Text
pattern SimulationJobErrorCode_BadPermissionsCloudwatchLogs :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BadPermissionsRobotApplication :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BadPermissionsS3Object :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BadPermissionsS3Output :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BadPermissionsSimulationApplication :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BadPermissionsUserCredentials :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BatchCanceled :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BatchTimedOut :: SimulationJobErrorCode
pattern SimulationJobErrorCode_ENILimitExceeded :: SimulationJobErrorCode
pattern SimulationJobErrorCode_InternalServiceError :: SimulationJobErrorCode
pattern SimulationJobErrorCode_InvalidBundleRobotApplication :: SimulationJobErrorCode
pattern SimulationJobErrorCode_InvalidBundleSimulationApplication :: SimulationJobErrorCode
pattern SimulationJobErrorCode_InvalidInput :: SimulationJobErrorCode
pattern SimulationJobErrorCode_InvalidS3Resource :: SimulationJobErrorCode
pattern SimulationJobErrorCode_LimitExceeded :: SimulationJobErrorCode
pattern SimulationJobErrorCode_MismatchedEtag :: SimulationJobErrorCode
pattern SimulationJobErrorCode_RequestThrottled :: SimulationJobErrorCode
pattern SimulationJobErrorCode_ResourceNotFound :: SimulationJobErrorCode
pattern SimulationJobErrorCode_RobotApplicationCrash :: SimulationJobErrorCode
pattern SimulationJobErrorCode_RobotApplicationHealthCheckFailure :: SimulationJobErrorCode
pattern SimulationJobErrorCode_RobotApplicationVersionMismatchedEtag :: SimulationJobErrorCode
pattern SimulationJobErrorCode_SimulationApplicationCrash :: SimulationJobErrorCode
pattern SimulationJobErrorCode_SimulationApplicationHealthCheckFailure :: SimulationJobErrorCode
pattern SimulationJobErrorCode_SimulationApplicationVersionMismatchedEtag :: SimulationJobErrorCode
pattern SimulationJobErrorCode_SubnetIpLimitExceeded :: SimulationJobErrorCode
pattern SimulationJobErrorCode_ThrottlingError :: SimulationJobErrorCode
pattern SimulationJobErrorCode_UploadContentMismatchError :: SimulationJobErrorCode
pattern SimulationJobErrorCode_WrongRegionRobotApplication :: SimulationJobErrorCode
pattern SimulationJobErrorCode_WrongRegionS3Bucket :: SimulationJobErrorCode
pattern SimulationJobErrorCode_WrongRegionS3Output :: SimulationJobErrorCode
pattern SimulationJobErrorCode_WrongRegionSimulationApplication :: SimulationJobErrorCode
newtype SimulationJobStatus
SimulationJobStatus' :: Text -> SimulationJobStatus
[fromSimulationJobStatus] :: SimulationJobStatus -> Text
pattern SimulationJobStatus_Canceled :: SimulationJobStatus
pattern SimulationJobStatus_Completed :: SimulationJobStatus
pattern SimulationJobStatus_Failed :: SimulationJobStatus
pattern SimulationJobStatus_Pending :: SimulationJobStatus
pattern SimulationJobStatus_Preparing :: SimulationJobStatus
pattern SimulationJobStatus_Restarting :: SimulationJobStatus
pattern SimulationJobStatus_Running :: SimulationJobStatus
pattern SimulationJobStatus_RunningFailed :: SimulationJobStatus
pattern SimulationJobStatus_Terminated :: SimulationJobStatus
pattern SimulationJobStatus_Terminating :: SimulationJobStatus
newtype SimulationSoftwareSuiteType
SimulationSoftwareSuiteType' :: Text -> SimulationSoftwareSuiteType
[fromSimulationSoftwareSuiteType] :: SimulationSoftwareSuiteType -> Text
pattern SimulationSoftwareSuiteType_Gazebo :: SimulationSoftwareSuiteType
pattern SimulationSoftwareSuiteType_RosbagPlay :: SimulationSoftwareSuiteType
pattern SimulationSoftwareSuiteType_SimulationRuntime :: SimulationSoftwareSuiteType
newtype UploadBehavior
UploadBehavior' :: Text -> UploadBehavior
[fromUploadBehavior] :: UploadBehavior -> Text
pattern UploadBehavior_UPLOAD_ON_TERMINATE :: UploadBehavior
pattern UploadBehavior_UPLOAD_ROLLING_AUTO_REMOVE :: UploadBehavior
newtype WorldExportJobErrorCode
WorldExportJobErrorCode' :: Text -> WorldExportJobErrorCode
[fromWorldExportJobErrorCode] :: WorldExportJobErrorCode -> Text
pattern WorldExportJobErrorCode_AccessDenied :: WorldExportJobErrorCode
pattern WorldExportJobErrorCode_InternalServiceError :: WorldExportJobErrorCode
pattern WorldExportJobErrorCode_InvalidInput :: WorldExportJobErrorCode
pattern WorldExportJobErrorCode_LimitExceeded :: WorldExportJobErrorCode
pattern WorldExportJobErrorCode_RequestThrottled :: WorldExportJobErrorCode
pattern WorldExportJobErrorCode_ResourceNotFound :: WorldExportJobErrorCode
newtype WorldExportJobStatus
WorldExportJobStatus' :: Text -> WorldExportJobStatus
[fromWorldExportJobStatus] :: WorldExportJobStatus -> Text
pattern WorldExportJobStatus_Canceled :: WorldExportJobStatus
pattern WorldExportJobStatus_Canceling :: WorldExportJobStatus
pattern WorldExportJobStatus_Completed :: WorldExportJobStatus
pattern WorldExportJobStatus_Failed :: WorldExportJobStatus
pattern WorldExportJobStatus_Pending :: WorldExportJobStatus
pattern WorldExportJobStatus_Running :: WorldExportJobStatus
newtype WorldGenerationJobErrorCode
WorldGenerationJobErrorCode' :: Text -> WorldGenerationJobErrorCode
[fromWorldGenerationJobErrorCode] :: WorldGenerationJobErrorCode -> Text
pattern WorldGenerationJobErrorCode_AllWorldGenerationFailed :: WorldGenerationJobErrorCode
pattern WorldGenerationJobErrorCode_InternalServiceError :: WorldGenerationJobErrorCode
pattern WorldGenerationJobErrorCode_InvalidInput :: WorldGenerationJobErrorCode
pattern WorldGenerationJobErrorCode_LimitExceeded :: WorldGenerationJobErrorCode
pattern WorldGenerationJobErrorCode_RequestThrottled :: WorldGenerationJobErrorCode
pattern WorldGenerationJobErrorCode_ResourceNotFound :: WorldGenerationJobErrorCode
newtype WorldGenerationJobStatus
WorldGenerationJobStatus' :: Text -> WorldGenerationJobStatus
[fromWorldGenerationJobStatus] :: WorldGenerationJobStatus -> Text
pattern WorldGenerationJobStatus_Canceled :: WorldGenerationJobStatus
pattern WorldGenerationJobStatus_Canceling :: WorldGenerationJobStatus
pattern WorldGenerationJobStatus_Completed :: WorldGenerationJobStatus
pattern WorldGenerationJobStatus_Failed :: WorldGenerationJobStatus
pattern WorldGenerationJobStatus_PartialFailed :: WorldGenerationJobStatus
pattern WorldGenerationJobStatus_Pending :: WorldGenerationJobStatus
pattern WorldGenerationJobStatus_Running :: WorldGenerationJobStatus

-- | Information about the batch policy.
--   
--   <i>See:</i> <a>newBatchPolicy</a> smart constructor.
data BatchPolicy
BatchPolicy' :: Maybe Integer -> Maybe Int -> BatchPolicy

-- | The amount of time, in seconds, to wait for the batch to complete.
--   
--   If a batch times out, and there are pending requests that were failing
--   due to an internal failure (like <tt>InternalServiceError</tt>), they
--   will be moved to the failed list and the batch status will be
--   <tt>Failed</tt>. If the pending requests were failing for any other
--   reason, the failed pending requests will be moved to the failed list
--   and the batch status will be <tt>TimedOut</tt>.
[$sel:timeoutInSeconds:BatchPolicy'] :: BatchPolicy -> Maybe Integer

-- | The number of active simulation jobs create as part of the batch that
--   can be in an active state at the same time.
--   
--   Active states include: <tt>Pending</tt>,<tt>Preparing</tt>,
--   <tt>Running</tt>, <tt>Restarting</tt>, <tt>RunningFailed</tt> and
--   <tt>Terminating</tt>. All other states are terminal states.
[$sel:maxConcurrency:BatchPolicy'] :: BatchPolicy -> Maybe Int

-- | Create a value of <a>BatchPolicy</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeoutInSeconds:BatchPolicy'</a>,
--   <a>batchPolicy_timeoutInSeconds</a> - The amount of time, in seconds,
--   to wait for the batch to complete.
--   
--   If a batch times out, and there are pending requests that were failing
--   due to an internal failure (like <tt>InternalServiceError</tt>), they
--   will be moved to the failed list and the batch status will be
--   <tt>Failed</tt>. If the pending requests were failing for any other
--   reason, the failed pending requests will be moved to the failed list
--   and the batch status will be <tt>TimedOut</tt>.
--   
--   <a>$sel:maxConcurrency:BatchPolicy'</a>,
--   <a>batchPolicy_maxConcurrency</a> - The number of active simulation
--   jobs create as part of the batch that can be in an active state at the
--   same time.
--   
--   Active states include: <tt>Pending</tt>,<tt>Preparing</tt>,
--   <tt>Running</tt>, <tt>Restarting</tt>, <tt>RunningFailed</tt> and
--   <tt>Terminating</tt>. All other states are terminal states.
newBatchPolicy :: BatchPolicy

-- | The amount of time, in seconds, to wait for the batch to complete.
--   
--   If a batch times out, and there are pending requests that were failing
--   due to an internal failure (like <tt>InternalServiceError</tt>), they
--   will be moved to the failed list and the batch status will be
--   <tt>Failed</tt>. If the pending requests were failing for any other
--   reason, the failed pending requests will be moved to the failed list
--   and the batch status will be <tt>TimedOut</tt>.
batchPolicy_timeoutInSeconds :: Lens' BatchPolicy (Maybe Integer)

-- | The number of active simulation jobs create as part of the batch that
--   can be in an active state at the same time.
--   
--   Active states include: <tt>Pending</tt>,<tt>Preparing</tt>,
--   <tt>Running</tt>, <tt>Restarting</tt>, <tt>RunningFailed</tt> and
--   <tt>Terminating</tt>. All other states are terminal states.
batchPolicy_maxConcurrency :: Lens' BatchPolicy (Maybe Int)

-- | Compute information for the simulation job.
--   
--   <i>See:</i> <a>newCompute</a> smart constructor.
data Compute
Compute' :: Maybe Natural -> Maybe Natural -> Maybe ComputeType -> Compute

-- | The simulation unit limit. Your simulation is allocated CPU and memory
--   proportional to the supplied simulation unit limit. A simulation unit
--   is 1 vcpu and 2GB of memory. You are only billed for the SU
--   utilization you consume up to the maximum value provided. The default
--   is 15.
[$sel:simulationUnitLimit:Compute'] :: Compute -> Maybe Natural

-- | Compute GPU unit limit for the simulation job. It is the same as the
--   number of GPUs allocated to the SimulationJob.
[$sel:gpuUnitLimit:Compute'] :: Compute -> Maybe Natural

-- | Compute type information for the simulation job.
[$sel:computeType:Compute'] :: Compute -> Maybe ComputeType

-- | Create a value of <a>Compute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:simulationUnitLimit:Compute'</a>,
--   <a>compute_simulationUnitLimit</a> - The simulation unit limit. Your
--   simulation is allocated CPU and memory proportional to the supplied
--   simulation unit limit. A simulation unit is 1 vcpu and 2GB of memory.
--   You are only billed for the SU utilization you consume up to the
--   maximum value provided. The default is 15.
--   
--   <a>$sel:gpuUnitLimit:Compute'</a>, <a>compute_gpuUnitLimit</a> -
--   Compute GPU unit limit for the simulation job. It is the same as the
--   number of GPUs allocated to the SimulationJob.
--   
--   <a>$sel:computeType:Compute'</a>, <a>compute_computeType</a> - Compute
--   type information for the simulation job.
newCompute :: Compute

-- | The simulation unit limit. Your simulation is allocated CPU and memory
--   proportional to the supplied simulation unit limit. A simulation unit
--   is 1 vcpu and 2GB of memory. You are only billed for the SU
--   utilization you consume up to the maximum value provided. The default
--   is 15.
compute_simulationUnitLimit :: Lens' Compute (Maybe Natural)

-- | Compute GPU unit limit for the simulation job. It is the same as the
--   number of GPUs allocated to the SimulationJob.
compute_gpuUnitLimit :: Lens' Compute (Maybe Natural)

-- | Compute type information for the simulation job.
compute_computeType :: Lens' Compute (Maybe ComputeType)

-- | Compute information for the simulation job
--   
--   <i>See:</i> <a>newComputeResponse</a> smart constructor.
data ComputeResponse
ComputeResponse' :: Maybe Natural -> Maybe Natural -> Maybe ComputeType -> ComputeResponse

-- | The simulation unit limit. Your simulation is allocated CPU and memory
--   proportional to the supplied simulation unit limit. A simulation unit
--   is 1 vcpu and 2GB of memory. You are only billed for the SU
--   utilization you consume up to the maximum value provided. The default
--   is 15.
[$sel:simulationUnitLimit:ComputeResponse'] :: ComputeResponse -> Maybe Natural

-- | Compute GPU unit limit for the simulation job. It is the same as the
--   number of GPUs allocated to the SimulationJob.
[$sel:gpuUnitLimit:ComputeResponse'] :: ComputeResponse -> Maybe Natural

-- | Compute type response information for the simulation job.
[$sel:computeType:ComputeResponse'] :: ComputeResponse -> Maybe ComputeType

-- | Create a value of <a>ComputeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:simulationUnitLimit:ComputeResponse'</a>,
--   <a>computeResponse_simulationUnitLimit</a> - The simulation unit
--   limit. Your simulation is allocated CPU and memory proportional to the
--   supplied simulation unit limit. A simulation unit is 1 vcpu and 2GB of
--   memory. You are only billed for the SU utilization you consume up to
--   the maximum value provided. The default is 15.
--   
--   <a>$sel:gpuUnitLimit:ComputeResponse'</a>,
--   <a>computeResponse_gpuUnitLimit</a> - Compute GPU unit limit for the
--   simulation job. It is the same as the number of GPUs allocated to the
--   SimulationJob.
--   
--   <a>$sel:computeType:ComputeResponse'</a>,
--   <a>computeResponse_computeType</a> - Compute type response information
--   for the simulation job.
newComputeResponse :: ComputeResponse

-- | The simulation unit limit. Your simulation is allocated CPU and memory
--   proportional to the supplied simulation unit limit. A simulation unit
--   is 1 vcpu and 2GB of memory. You are only billed for the SU
--   utilization you consume up to the maximum value provided. The default
--   is 15.
computeResponse_simulationUnitLimit :: Lens' ComputeResponse (Maybe Natural)

-- | Compute GPU unit limit for the simulation job. It is the same as the
--   number of GPUs allocated to the SimulationJob.
computeResponse_gpuUnitLimit :: Lens' ComputeResponse (Maybe Natural)

-- | Compute type response information for the simulation job.
computeResponse_computeType :: Lens' ComputeResponse (Maybe ComputeType)

-- | Information about a data source.
--   
--   <i>See:</i> <a>newDataSource</a> smart constructor.
data DataSource
DataSource' :: Maybe [S3KeyOutput] -> Maybe Text -> Maybe Text -> Maybe DataSourceType -> Maybe Text -> DataSource

-- | The list of S3 keys identifying the data source files.
[$sel:s3Keys:DataSource'] :: DataSource -> Maybe [S3KeyOutput]

-- | The location where your files are mounted in the container image.
--   
--   If you've specified the <tt>type</tt> of the data source as an
--   <tt>Archive</tt>, you must provide an Amazon S3 object key to your
--   archive. The object key must point to either a <tt>.zip</tt> or
--   <tt>.tar.gz</tt> file.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>Prefix</tt>, you provide the Amazon S3 prefix that points to the
--   files that you are using for your data source.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>File</tt>, you provide the Amazon S3 path to the file that you're
--   using as your data source.
[$sel:destination:DataSource'] :: DataSource -> Maybe Text

-- | The name of the data source.
[$sel:name:DataSource'] :: DataSource -> Maybe Text

-- | The data type for the data source that you're using for your container
--   image or simulation job. You can use this field to specify whether
--   your data source is an Archive, an Amazon S3 prefix, or a file.
--   
--   If you don't specify a field, the default value is <tt>File</tt>.
[$sel:type':DataSource'] :: DataSource -> Maybe DataSourceType

-- | The S3 bucket where the data files are located.
[$sel:s3Bucket:DataSource'] :: DataSource -> Maybe Text

-- | Create a value of <a>DataSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Keys:DataSource'</a>, <a>dataSource_s3Keys</a> - The list of
--   S3 keys identifying the data source files.
--   
--   <a>$sel:destination:DataSource'</a>, <a>dataSource_destination</a> -
--   The location where your files are mounted in the container image.
--   
--   If you've specified the <tt>type</tt> of the data source as an
--   <tt>Archive</tt>, you must provide an Amazon S3 object key to your
--   archive. The object key must point to either a <tt>.zip</tt> or
--   <tt>.tar.gz</tt> file.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>Prefix</tt>, you provide the Amazon S3 prefix that points to the
--   files that you are using for your data source.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>File</tt>, you provide the Amazon S3 path to the file that you're
--   using as your data source.
--   
--   <a>$sel:name:DataSource'</a>, <a>dataSource_name</a> - The name of the
--   data source.
--   
--   <a>$sel:type':DataSource'</a>, <a>dataSource_type</a> - The data type
--   for the data source that you're using for your container image or
--   simulation job. You can use this field to specify whether your data
--   source is an Archive, an Amazon S3 prefix, or a file.
--   
--   If you don't specify a field, the default value is <tt>File</tt>.
--   
--   <a>$sel:s3Bucket:DataSource'</a>, <a>dataSource_s3Bucket</a> - The S3
--   bucket where the data files are located.
newDataSource :: DataSource

-- | The list of S3 keys identifying the data source files.
dataSource_s3Keys :: Lens' DataSource (Maybe [S3KeyOutput])

-- | The location where your files are mounted in the container image.
--   
--   If you've specified the <tt>type</tt> of the data source as an
--   <tt>Archive</tt>, you must provide an Amazon S3 object key to your
--   archive. The object key must point to either a <tt>.zip</tt> or
--   <tt>.tar.gz</tt> file.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>Prefix</tt>, you provide the Amazon S3 prefix that points to the
--   files that you are using for your data source.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>File</tt>, you provide the Amazon S3 path to the file that you're
--   using as your data source.
dataSource_destination :: Lens' DataSource (Maybe Text)

-- | The name of the data source.
dataSource_name :: Lens' DataSource (Maybe Text)

-- | The data type for the data source that you're using for your container
--   image or simulation job. You can use this field to specify whether
--   your data source is an Archive, an Amazon S3 prefix, or a file.
--   
--   If you don't specify a field, the default value is <tt>File</tt>.
dataSource_type :: Lens' DataSource (Maybe DataSourceType)

-- | The S3 bucket where the data files are located.
dataSource_s3Bucket :: Lens' DataSource (Maybe Text)

-- | Information about a data source.
--   
--   <i>See:</i> <a>newDataSourceConfig</a> smart constructor.
data DataSourceConfig
DataSourceConfig' :: Maybe Text -> Maybe DataSourceType -> Text -> Text -> NonEmpty Text -> DataSourceConfig

-- | The location where your files are mounted in the container image.
--   
--   If you've specified the <tt>type</tt> of the data source as an
--   <tt>Archive</tt>, you must provide an Amazon S3 object key to your
--   archive. The object key must point to either a <tt>.zip</tt> or
--   <tt>.tar.gz</tt> file.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>Prefix</tt>, you provide the Amazon S3 prefix that points to the
--   files that you are using for your data source.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>File</tt>, you provide the Amazon S3 path to the file that you're
--   using as your data source.
[$sel:destination:DataSourceConfig'] :: DataSourceConfig -> Maybe Text

-- | The data type for the data source that you're using for your container
--   image or simulation job. You can use this field to specify whether
--   your data source is an Archive, an Amazon S3 prefix, or a file.
--   
--   If you don't specify a field, the default value is <tt>File</tt>.
[$sel:type':DataSourceConfig'] :: DataSourceConfig -> Maybe DataSourceType

-- | The name of the data source.
[$sel:name:DataSourceConfig'] :: DataSourceConfig -> Text

-- | The S3 bucket where the data files are located.
[$sel:s3Bucket:DataSourceConfig'] :: DataSourceConfig -> Text

-- | The list of S3 keys identifying the data source files.
[$sel:s3Keys:DataSourceConfig'] :: DataSourceConfig -> NonEmpty Text

-- | Create a value of <a>DataSourceConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:DataSourceConfig'</a>,
--   <a>dataSourceConfig_destination</a> - The location where your files
--   are mounted in the container image.
--   
--   If you've specified the <tt>type</tt> of the data source as an
--   <tt>Archive</tt>, you must provide an Amazon S3 object key to your
--   archive. The object key must point to either a <tt>.zip</tt> or
--   <tt>.tar.gz</tt> file.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>Prefix</tt>, you provide the Amazon S3 prefix that points to the
--   files that you are using for your data source.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>File</tt>, you provide the Amazon S3 path to the file that you're
--   using as your data source.
--   
--   <a>$sel:type':DataSourceConfig'</a>, <a>dataSourceConfig_type</a> -
--   The data type for the data source that you're using for your container
--   image or simulation job. You can use this field to specify whether
--   your data source is an Archive, an Amazon S3 prefix, or a file.
--   
--   If you don't specify a field, the default value is <tt>File</tt>.
--   
--   <a>$sel:name:DataSourceConfig'</a>, <a>dataSourceConfig_name</a> - The
--   name of the data source.
--   
--   <a>$sel:s3Bucket:DataSourceConfig'</a>,
--   <a>dataSourceConfig_s3Bucket</a> - The S3 bucket where the data files
--   are located.
--   
--   <a>$sel:s3Keys:DataSourceConfig'</a>, <a>dataSourceConfig_s3Keys</a> -
--   The list of S3 keys identifying the data source files.
newDataSourceConfig :: Text -> Text -> NonEmpty Text -> DataSourceConfig

-- | The location where your files are mounted in the container image.
--   
--   If you've specified the <tt>type</tt> of the data source as an
--   <tt>Archive</tt>, you must provide an Amazon S3 object key to your
--   archive. The object key must point to either a <tt>.zip</tt> or
--   <tt>.tar.gz</tt> file.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>Prefix</tt>, you provide the Amazon S3 prefix that points to the
--   files that you are using for your data source.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>File</tt>, you provide the Amazon S3 path to the file that you're
--   using as your data source.
dataSourceConfig_destination :: Lens' DataSourceConfig (Maybe Text)

-- | The data type for the data source that you're using for your container
--   image or simulation job. You can use this field to specify whether
--   your data source is an Archive, an Amazon S3 prefix, or a file.
--   
--   If you don't specify a field, the default value is <tt>File</tt>.
dataSourceConfig_type :: Lens' DataSourceConfig (Maybe DataSourceType)

-- | The name of the data source.
dataSourceConfig_name :: Lens' DataSourceConfig Text

-- | The S3 bucket where the data files are located.
dataSourceConfig_s3Bucket :: Lens' DataSourceConfig Text

-- | The list of S3 keys identifying the data source files.
dataSourceConfig_s3Keys :: Lens' DataSourceConfig (NonEmpty Text)

-- | Information about a deployment application configuration.
--   
--   <i>See:</i> <a>newDeploymentApplicationConfig</a> smart constructor.
data DeploymentApplicationConfig
DeploymentApplicationConfig' :: Text -> Text -> DeploymentLaunchConfig -> DeploymentApplicationConfig

-- | The Amazon Resource Name (ARN) of the robot application.
[$sel:application:DeploymentApplicationConfig'] :: DeploymentApplicationConfig -> Text

-- | The version of the application.
[$sel:applicationVersion:DeploymentApplicationConfig'] :: DeploymentApplicationConfig -> Text

-- | The launch configuration.
[$sel:launchConfig:DeploymentApplicationConfig'] :: DeploymentApplicationConfig -> DeploymentLaunchConfig

-- | Create a value of <a>DeploymentApplicationConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:application:DeploymentApplicationConfig'</a>,
--   <a>deploymentApplicationConfig_application</a> - The Amazon Resource
--   Name (ARN) of the robot application.
--   
--   <a>$sel:applicationVersion:DeploymentApplicationConfig'</a>,
--   <a>deploymentApplicationConfig_applicationVersion</a> - The version of
--   the application.
--   
--   <a>$sel:launchConfig:DeploymentApplicationConfig'</a>,
--   <a>deploymentApplicationConfig_launchConfig</a> - The launch
--   configuration.
newDeploymentApplicationConfig :: Text -> Text -> DeploymentLaunchConfig -> DeploymentApplicationConfig

-- | The Amazon Resource Name (ARN) of the robot application.
deploymentApplicationConfig_application :: Lens' DeploymentApplicationConfig Text

-- | The version of the application.
deploymentApplicationConfig_applicationVersion :: Lens' DeploymentApplicationConfig Text

-- | The launch configuration.
deploymentApplicationConfig_launchConfig :: Lens' DeploymentApplicationConfig DeploymentLaunchConfig

-- | Information about a deployment configuration.
--   
--   <i>See:</i> <a>newDeploymentConfig</a> smart constructor.
data DeploymentConfig
DeploymentConfig' :: Maybe Natural -> Maybe S3Object -> Maybe Natural -> Maybe Integer -> DeploymentConfig

-- | The percentage of robots receiving the deployment at the same time.
[$sel:concurrentDeploymentPercentage:DeploymentConfig'] :: DeploymentConfig -> Maybe Natural

-- | The download condition file.
[$sel:downloadConditionFile:DeploymentConfig'] :: DeploymentConfig -> Maybe S3Object

-- | The percentage of deployments that need to fail before stopping
--   deployment.
[$sel:failureThresholdPercentage:DeploymentConfig'] :: DeploymentConfig -> Maybe Natural

-- | The amount of time, in seconds, to wait for deployment to a single
--   robot to complete. Choose a time between 1 minute and 7 days. The
--   default is 5 hours.
[$sel:robotDeploymentTimeoutInSeconds:DeploymentConfig'] :: DeploymentConfig -> Maybe Integer

-- | Create a value of <a>DeploymentConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:concurrentDeploymentPercentage:DeploymentConfig'</a>,
--   <a>deploymentConfig_concurrentDeploymentPercentage</a> - The
--   percentage of robots receiving the deployment at the same time.
--   
--   <a>$sel:downloadConditionFile:DeploymentConfig'</a>,
--   <a>deploymentConfig_downloadConditionFile</a> - The download condition
--   file.
--   
--   <a>$sel:failureThresholdPercentage:DeploymentConfig'</a>,
--   <a>deploymentConfig_failureThresholdPercentage</a> - The percentage of
--   deployments that need to fail before stopping deployment.
--   
--   <a>$sel:robotDeploymentTimeoutInSeconds:DeploymentConfig'</a>,
--   <a>deploymentConfig_robotDeploymentTimeoutInSeconds</a> - The amount
--   of time, in seconds, to wait for deployment to a single robot to
--   complete. Choose a time between 1 minute and 7 days. The default is 5
--   hours.
newDeploymentConfig :: DeploymentConfig

-- | The percentage of robots receiving the deployment at the same time.
deploymentConfig_concurrentDeploymentPercentage :: Lens' DeploymentConfig (Maybe Natural)

-- | The download condition file.
deploymentConfig_downloadConditionFile :: Lens' DeploymentConfig (Maybe S3Object)

-- | The percentage of deployments that need to fail before stopping
--   deployment.
deploymentConfig_failureThresholdPercentage :: Lens' DeploymentConfig (Maybe Natural)

-- | The amount of time, in seconds, to wait for deployment to a single
--   robot to complete. Choose a time between 1 minute and 7 days. The
--   default is 5 hours.
deploymentConfig_robotDeploymentTimeoutInSeconds :: Lens' DeploymentConfig (Maybe Integer)

-- | Information about a deployment job.
--   
--   <i>See:</i> <a>newDeploymentJob</a> smart constructor.
data DeploymentJob
DeploymentJob' :: Maybe Text -> Maybe DeploymentStatus -> Maybe (NonEmpty DeploymentApplicationConfig) -> Maybe Text -> Maybe POSIX -> Maybe DeploymentJobErrorCode -> Maybe DeploymentConfig -> Maybe Text -> DeploymentJob

-- | A short description of the reason why the deployment job failed.
[$sel:failureReason:DeploymentJob'] :: DeploymentJob -> Maybe Text

-- | The status of the deployment job.
[$sel:status:DeploymentJob'] :: DeploymentJob -> Maybe DeploymentStatus

-- | The deployment application configuration.
[$sel:deploymentApplicationConfigs:DeploymentJob'] :: DeploymentJob -> Maybe (NonEmpty DeploymentApplicationConfig)

-- | The Amazon Resource Name (ARN) of the deployment job.
[$sel:arn:DeploymentJob'] :: DeploymentJob -> Maybe Text

-- | The time, in milliseconds since the epoch, when the deployment job was
--   created.
[$sel:createdAt:DeploymentJob'] :: DeploymentJob -> Maybe POSIX

-- | The deployment job failure code.
[$sel:failureCode:DeploymentJob'] :: DeploymentJob -> Maybe DeploymentJobErrorCode

-- | The deployment configuration.
[$sel:deploymentConfig:DeploymentJob'] :: DeploymentJob -> Maybe DeploymentConfig

-- | The Amazon Resource Name (ARN) of the fleet.
[$sel:fleet:DeploymentJob'] :: DeploymentJob -> Maybe Text

-- | Create a value of <a>DeploymentJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DeploymentJob'</a>,
--   <a>deploymentJob_failureReason</a> - A short description of the reason
--   why the deployment job failed.
--   
--   <a>$sel:status:DeploymentJob'</a>, <a>deploymentJob_status</a> - The
--   status of the deployment job.
--   
--   <a>$sel:deploymentApplicationConfigs:DeploymentJob'</a>,
--   <a>deploymentJob_deploymentApplicationConfigs</a> - The deployment
--   application configuration.
--   
--   <a>$sel:arn:DeploymentJob'</a>, <a>deploymentJob_arn</a> - The Amazon
--   Resource Name (ARN) of the deployment job.
--   
--   <a>$sel:createdAt:DeploymentJob'</a>, <a>deploymentJob_createdAt</a> -
--   The time, in milliseconds since the epoch, when the deployment job was
--   created.
--   
--   <a>$sel:failureCode:DeploymentJob'</a>,
--   <a>deploymentJob_failureCode</a> - The deployment job failure code.
--   
--   <a>$sel:deploymentConfig:DeploymentJob'</a>,
--   <a>deploymentJob_deploymentConfig</a> - The deployment configuration.
--   
--   <a>$sel:fleet:DeploymentJob'</a>, <a>deploymentJob_fleet</a> - The
--   Amazon Resource Name (ARN) of the fleet.
newDeploymentJob :: DeploymentJob

-- | A short description of the reason why the deployment job failed.
deploymentJob_failureReason :: Lens' DeploymentJob (Maybe Text)

-- | The status of the deployment job.
deploymentJob_status :: Lens' DeploymentJob (Maybe DeploymentStatus)

-- | The deployment application configuration.
deploymentJob_deploymentApplicationConfigs :: Lens' DeploymentJob (Maybe (NonEmpty DeploymentApplicationConfig))

-- | The Amazon Resource Name (ARN) of the deployment job.
deploymentJob_arn :: Lens' DeploymentJob (Maybe Text)

-- | The time, in milliseconds since the epoch, when the deployment job was
--   created.
deploymentJob_createdAt :: Lens' DeploymentJob (Maybe UTCTime)

-- | The deployment job failure code.
deploymentJob_failureCode :: Lens' DeploymentJob (Maybe DeploymentJobErrorCode)

-- | The deployment configuration.
deploymentJob_deploymentConfig :: Lens' DeploymentJob (Maybe DeploymentConfig)

-- | The Amazon Resource Name (ARN) of the fleet.
deploymentJob_fleet :: Lens' DeploymentJob (Maybe Text)

-- | Configuration information for a deployment launch.
--   
--   <i>See:</i> <a>newDeploymentLaunchConfig</a> smart constructor.
data DeploymentLaunchConfig
DeploymentLaunchConfig' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> DeploymentLaunchConfig

-- | The deployment pre-launch file. This file will be executed prior to
--   the launch file.
[$sel:preLaunchFile:DeploymentLaunchConfig'] :: DeploymentLaunchConfig -> Maybe Text

-- | The deployment post-launch file. This file will be executed after the
--   launch file.
[$sel:postLaunchFile:DeploymentLaunchConfig'] :: DeploymentLaunchConfig -> Maybe Text

-- | An array of key/value pairs specifying environment variables for the
--   robot application
[$sel:environmentVariables:DeploymentLaunchConfig'] :: DeploymentLaunchConfig -> Maybe (HashMap Text Text)

-- | The package name.
[$sel:packageName:DeploymentLaunchConfig'] :: DeploymentLaunchConfig -> Text

-- | The launch file name.
[$sel:launchFile:DeploymentLaunchConfig'] :: DeploymentLaunchConfig -> Text

-- | Create a value of <a>DeploymentLaunchConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:preLaunchFile:DeploymentLaunchConfig'</a>,
--   <a>deploymentLaunchConfig_preLaunchFile</a> - The deployment
--   pre-launch file. This file will be executed prior to the launch file.
--   
--   <a>$sel:postLaunchFile:DeploymentLaunchConfig'</a>,
--   <a>deploymentLaunchConfig_postLaunchFile</a> - The deployment
--   post-launch file. This file will be executed after the launch file.
--   
--   <a>$sel:environmentVariables:DeploymentLaunchConfig'</a>,
--   <a>deploymentLaunchConfig_environmentVariables</a> - An array of
--   key/value pairs specifying environment variables for the robot
--   application
--   
--   <a>$sel:packageName:DeploymentLaunchConfig'</a>,
--   <a>deploymentLaunchConfig_packageName</a> - The package name.
--   
--   <a>$sel:launchFile:DeploymentLaunchConfig'</a>,
--   <a>deploymentLaunchConfig_launchFile</a> - The launch file name.
newDeploymentLaunchConfig :: Text -> Text -> DeploymentLaunchConfig

-- | The deployment pre-launch file. This file will be executed prior to
--   the launch file.
deploymentLaunchConfig_preLaunchFile :: Lens' DeploymentLaunchConfig (Maybe Text)

-- | The deployment post-launch file. This file will be executed after the
--   launch file.
deploymentLaunchConfig_postLaunchFile :: Lens' DeploymentLaunchConfig (Maybe Text)

-- | An array of key/value pairs specifying environment variables for the
--   robot application
deploymentLaunchConfig_environmentVariables :: Lens' DeploymentLaunchConfig (Maybe (HashMap Text Text))

-- | The package name.
deploymentLaunchConfig_packageName :: Lens' DeploymentLaunchConfig Text

-- | The launch file name.
deploymentLaunchConfig_launchFile :: Lens' DeploymentLaunchConfig Text

-- | The object that contains the Docker image URI for either your robot or
--   simulation applications.
--   
--   <i>See:</i> <a>newEnvironment</a> smart constructor.
data Environment
Environment' :: Maybe Text -> Environment

-- | The Docker image URI for either your robot or simulation applications.
[$sel:uri:Environment'] :: Environment -> Maybe Text

-- | Create a value of <a>Environment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uri:Environment'</a>, <a>environment_uri</a> - The Docker
--   image URI for either your robot or simulation applications.
newEnvironment :: Environment

-- | The Docker image URI for either your robot or simulation applications.
environment_uri :: Lens' Environment (Maybe Text)

-- | Information about a failed create simulation job request.
--   
--   <i>See:</i> <a>newFailedCreateSimulationJobRequest</a> smart
--   constructor.
data FailedCreateSimulationJobRequest
FailedCreateSimulationJobRequest' :: Maybe Text -> Maybe SimulationJobErrorCode -> Maybe POSIX -> Maybe SimulationJobRequest -> FailedCreateSimulationJobRequest

-- | The failure reason of the simulation job request.
[$sel:failureReason:FailedCreateSimulationJobRequest'] :: FailedCreateSimulationJobRequest -> Maybe Text

-- | The failure code.
[$sel:failureCode:FailedCreateSimulationJobRequest'] :: FailedCreateSimulationJobRequest -> Maybe SimulationJobErrorCode

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch failed.
[$sel:failedAt:FailedCreateSimulationJobRequest'] :: FailedCreateSimulationJobRequest -> Maybe POSIX

-- | The simulation job request.
[$sel:request:FailedCreateSimulationJobRequest'] :: FailedCreateSimulationJobRequest -> Maybe SimulationJobRequest

-- | Create a value of <a>FailedCreateSimulationJobRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:FailedCreateSimulationJobRequest'</a>,
--   <a>failedCreateSimulationJobRequest_failureReason</a> - The failure
--   reason of the simulation job request.
--   
--   <a>$sel:failureCode:FailedCreateSimulationJobRequest'</a>,
--   <a>failedCreateSimulationJobRequest_failureCode</a> - The failure
--   code.
--   
--   <a>$sel:failedAt:FailedCreateSimulationJobRequest'</a>,
--   <a>failedCreateSimulationJobRequest_failedAt</a> - The time, in
--   milliseconds since the epoch, when the simulation job batch failed.
--   
--   <a>$sel:request:FailedCreateSimulationJobRequest'</a>,
--   <a>failedCreateSimulationJobRequest_request</a> - The simulation job
--   request.
newFailedCreateSimulationJobRequest :: FailedCreateSimulationJobRequest

-- | The failure reason of the simulation job request.
failedCreateSimulationJobRequest_failureReason :: Lens' FailedCreateSimulationJobRequest (Maybe Text)

-- | The failure code.
failedCreateSimulationJobRequest_failureCode :: Lens' FailedCreateSimulationJobRequest (Maybe SimulationJobErrorCode)

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch failed.
failedCreateSimulationJobRequest_failedAt :: Lens' FailedCreateSimulationJobRequest (Maybe UTCTime)

-- | The simulation job request.
failedCreateSimulationJobRequest_request :: Lens' FailedCreateSimulationJobRequest (Maybe SimulationJobRequest)

-- | Information about worlds that failed.
--   
--   <i>See:</i> <a>newFailureSummary</a> smart constructor.
data FailureSummary
FailureSummary' :: Maybe [WorldFailure] -> Maybe Int -> FailureSummary

-- | The worlds that failed.
[$sel:failures:FailureSummary'] :: FailureSummary -> Maybe [WorldFailure]

-- | The total number of failures.
[$sel:totalFailureCount:FailureSummary'] :: FailureSummary -> Maybe Int

-- | Create a value of <a>FailureSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failures:FailureSummary'</a>, <a>failureSummary_failures</a> -
--   The worlds that failed.
--   
--   <a>$sel:totalFailureCount:FailureSummary'</a>,
--   <a>failureSummary_totalFailureCount</a> - The total number of
--   failures.
newFailureSummary :: FailureSummary

-- | The worlds that failed.
failureSummary_failures :: Lens' FailureSummary (Maybe [WorldFailure])

-- | The total number of failures.
failureSummary_totalFailureCount :: Lens' FailureSummary (Maybe Int)

-- | Information about a filter.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe (NonEmpty Text) -> Maybe Text -> Filter

-- | A list of values.
[$sel:values:Filter'] :: Filter -> Maybe (NonEmpty Text)

-- | The name of the filter.
[$sel:name:Filter'] :: Filter -> Maybe Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - A list of values.
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The name of the filter.
newFilter :: Filter

-- | A list of values.
filter_values :: Lens' Filter (Maybe (NonEmpty Text))

-- | The name of the filter.
filter_name :: Lens' Filter (Maybe Text)

-- | Information about worlds that finished.
--   
--   <i>See:</i> <a>newFinishedWorldsSummary</a> smart constructor.
data FinishedWorldsSummary
FinishedWorldsSummary' :: Maybe (NonEmpty Text) -> Maybe FailureSummary -> Maybe Int -> FinishedWorldsSummary

-- | A list of worlds that succeeded.
[$sel:succeededWorlds:FinishedWorldsSummary'] :: FinishedWorldsSummary -> Maybe (NonEmpty Text)

-- | Information about worlds that failed.
[$sel:failureSummary:FinishedWorldsSummary'] :: FinishedWorldsSummary -> Maybe FailureSummary

-- | The total number of finished worlds.
[$sel:finishedCount:FinishedWorldsSummary'] :: FinishedWorldsSummary -> Maybe Int

-- | Create a value of <a>FinishedWorldsSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:succeededWorlds:FinishedWorldsSummary'</a>,
--   <a>finishedWorldsSummary_succeededWorlds</a> - A list of worlds that
--   succeeded.
--   
--   <a>$sel:failureSummary:FinishedWorldsSummary'</a>,
--   <a>finishedWorldsSummary_failureSummary</a> - Information about worlds
--   that failed.
--   
--   <a>$sel:finishedCount:FinishedWorldsSummary'</a>,
--   <a>finishedWorldsSummary_finishedCount</a> - The total number of
--   finished worlds.
newFinishedWorldsSummary :: FinishedWorldsSummary

-- | A list of worlds that succeeded.
finishedWorldsSummary_succeededWorlds :: Lens' FinishedWorldsSummary (Maybe (NonEmpty Text))

-- | Information about worlds that failed.
finishedWorldsSummary_failureSummary :: Lens' FinishedWorldsSummary (Maybe FailureSummary)

-- | The total number of finished worlds.
finishedWorldsSummary_finishedCount :: Lens' FinishedWorldsSummary (Maybe Int)

-- | Information about a fleet.
--   
--   <i>See:</i> <a>newFleet</a> smart constructor.
data Fleet
Fleet' :: Maybe Text -> Maybe DeploymentStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Fleet

-- | The Amazon Resource Name (ARN) of the last deployment job.
[$sel:lastDeploymentJob:Fleet'] :: Fleet -> Maybe Text

-- | The status of the last fleet deployment.
[$sel:lastDeploymentStatus:Fleet'] :: Fleet -> Maybe DeploymentStatus

-- | The Amazon Resource Name (ARN) of the fleet.
[$sel:arn:Fleet'] :: Fleet -> Maybe Text

-- | The time, in milliseconds since the epoch, when the fleet was created.
[$sel:createdAt:Fleet'] :: Fleet -> Maybe POSIX

-- | The name of the fleet.
[$sel:name:Fleet'] :: Fleet -> Maybe Text

-- | The time of the last deployment.
[$sel:lastDeploymentTime:Fleet'] :: Fleet -> Maybe POSIX

-- | Create a value of <a>Fleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastDeploymentJob:Fleet'</a>, <a>fleet_lastDeploymentJob</a> -
--   The Amazon Resource Name (ARN) of the last deployment job.
--   
--   <a>$sel:lastDeploymentStatus:Fleet'</a>,
--   <a>fleet_lastDeploymentStatus</a> - The status of the last fleet
--   deployment.
--   
--   <a>$sel:arn:Fleet'</a>, <a>fleet_arn</a> - The Amazon Resource Name
--   (ARN) of the fleet.
--   
--   <a>$sel:createdAt:Fleet'</a>, <a>fleet_createdAt</a> - The time, in
--   milliseconds since the epoch, when the fleet was created.
--   
--   <a>$sel:name:Fleet'</a>, <a>fleet_name</a> - The name of the fleet.
--   
--   <a>$sel:lastDeploymentTime:Fleet'</a>, <a>fleet_lastDeploymentTime</a>
--   - The time of the last deployment.
newFleet :: Fleet

-- | The Amazon Resource Name (ARN) of the last deployment job.
fleet_lastDeploymentJob :: Lens' Fleet (Maybe Text)

-- | The status of the last fleet deployment.
fleet_lastDeploymentStatus :: Lens' Fleet (Maybe DeploymentStatus)

-- | The Amazon Resource Name (ARN) of the fleet.
fleet_arn :: Lens' Fleet (Maybe Text)

-- | The time, in milliseconds since the epoch, when the fleet was created.
fleet_createdAt :: Lens' Fleet (Maybe UTCTime)

-- | The name of the fleet.
fleet_name :: Lens' Fleet (Maybe Text)

-- | The time of the last deployment.
fleet_lastDeploymentTime :: Lens' Fleet (Maybe UTCTime)

-- | Information about a launch configuration.
--   
--   <i>See:</i> <a>newLaunchConfig</a> smart constructor.
data LaunchConfig
LaunchConfig' :: Maybe [Text] -> Maybe Text -> Maybe PortForwardingConfig -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> LaunchConfig

-- | If you've specified <tt>General</tt> as the value for your
--   <tt>RobotSoftwareSuite</tt>, you can use this field to specify a list
--   of commands for your container image.
--   
--   If you've specified <tt>SimulationRuntime</tt> as the value for your
--   <tt>SimulationSoftwareSuite</tt>, you can use this field to specify a
--   list of commands for your container image.
[$sel:command:LaunchConfig'] :: LaunchConfig -> Maybe [Text]

-- | The package name.
[$sel:packageName:LaunchConfig'] :: LaunchConfig -> Maybe Text

-- | The port forwarding configuration.
[$sel:portForwardingConfig:LaunchConfig'] :: LaunchConfig -> Maybe PortForwardingConfig

-- | The launch file name.
[$sel:launchFile:LaunchConfig'] :: LaunchConfig -> Maybe Text

-- | The environment variables for the application launch.
[$sel:environmentVariables:LaunchConfig'] :: LaunchConfig -> Maybe (HashMap Text Text)

-- | Boolean indicating whether a streaming session will be configured for
--   the application. If <tt>True</tt>, AWS RoboMaker will configure a
--   connection so you can interact with your application as it is running
--   in the simulation. You must configure and launch the component. It
--   must have a graphical user interface.
[$sel:streamUI:LaunchConfig'] :: LaunchConfig -> Maybe Bool

-- | Create a value of <a>LaunchConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:command:LaunchConfig'</a>, <a>launchConfig_command</a> - If
--   you've specified <tt>General</tt> as the value for your
--   <tt>RobotSoftwareSuite</tt>, you can use this field to specify a list
--   of commands for your container image.
--   
--   If you've specified <tt>SimulationRuntime</tt> as the value for your
--   <tt>SimulationSoftwareSuite</tt>, you can use this field to specify a
--   list of commands for your container image.
--   
--   <a>$sel:packageName:LaunchConfig'</a>, <a>launchConfig_packageName</a>
--   - The package name.
--   
--   <a>$sel:portForwardingConfig:LaunchConfig'</a>,
--   <a>launchConfig_portForwardingConfig</a> - The port forwarding
--   configuration.
--   
--   <a>$sel:launchFile:LaunchConfig'</a>, <a>launchConfig_launchFile</a> -
--   The launch file name.
--   
--   <a>$sel:environmentVariables:LaunchConfig'</a>,
--   <a>launchConfig_environmentVariables</a> - The environment variables
--   for the application launch.
--   
--   <a>$sel:streamUI:LaunchConfig'</a>, <a>launchConfig_streamUI</a> -
--   Boolean indicating whether a streaming session will be configured for
--   the application. If <tt>True</tt>, AWS RoboMaker will configure a
--   connection so you can interact with your application as it is running
--   in the simulation. You must configure and launch the component. It
--   must have a graphical user interface.
newLaunchConfig :: LaunchConfig

-- | If you've specified <tt>General</tt> as the value for your
--   <tt>RobotSoftwareSuite</tt>, you can use this field to specify a list
--   of commands for your container image.
--   
--   If you've specified <tt>SimulationRuntime</tt> as the value for your
--   <tt>SimulationSoftwareSuite</tt>, you can use this field to specify a
--   list of commands for your container image.
launchConfig_command :: Lens' LaunchConfig (Maybe [Text])

-- | The package name.
launchConfig_packageName :: Lens' LaunchConfig (Maybe Text)

-- | The port forwarding configuration.
launchConfig_portForwardingConfig :: Lens' LaunchConfig (Maybe PortForwardingConfig)

-- | The launch file name.
launchConfig_launchFile :: Lens' LaunchConfig (Maybe Text)

-- | The environment variables for the application launch.
launchConfig_environmentVariables :: Lens' LaunchConfig (Maybe (HashMap Text Text))

-- | Boolean indicating whether a streaming session will be configured for
--   the application. If <tt>True</tt>, AWS RoboMaker will configure a
--   connection so you can interact with your application as it is running
--   in the simulation. You must configure and launch the component. It
--   must have a graphical user interface.
launchConfig_streamUI :: Lens' LaunchConfig (Maybe Bool)

-- | The logging configuration.
--   
--   <i>See:</i> <a>newLoggingConfig</a> smart constructor.
data LoggingConfig
LoggingConfig' :: Bool -> LoggingConfig

-- | A boolean indicating whether to record all ROS topics.
[$sel:recordAllRosTopics:LoggingConfig'] :: LoggingConfig -> Bool

-- | Create a value of <a>LoggingConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordAllRosTopics:LoggingConfig'</a>,
--   <a>loggingConfig_recordAllRosTopics</a> - A boolean indicating whether
--   to record all ROS topics.
newLoggingConfig :: Bool -> LoggingConfig

-- | A boolean indicating whether to record all ROS topics.
loggingConfig_recordAllRosTopics :: Lens' LoggingConfig Bool

-- | Describes a network interface.
--   
--   <i>See:</i> <a>newNetworkInterface</a> smart constructor.
data NetworkInterface
NetworkInterface' :: Maybe Text -> Maybe Text -> Maybe Text -> NetworkInterface

-- | The ID of the network interface.
[$sel:networkInterfaceId:NetworkInterface'] :: NetworkInterface -> Maybe Text

-- | The IPv4 address of the network interface within the subnet.
[$sel:privateIpAddress:NetworkInterface'] :: NetworkInterface -> Maybe Text

-- | The IPv4 public address of the network interface.
[$sel:publicIpAddress:NetworkInterface'] :: NetworkInterface -> Maybe Text

-- | Create a value of <a>NetworkInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkInterfaceId:NetworkInterface'</a>,
--   <a>networkInterface_networkInterfaceId</a> - The ID of the network
--   interface.
--   
--   <a>$sel:privateIpAddress:NetworkInterface'</a>,
--   <a>networkInterface_privateIpAddress</a> - The IPv4 address of the
--   network interface within the subnet.
--   
--   <a>$sel:publicIpAddress:NetworkInterface'</a>,
--   <a>networkInterface_publicIpAddress</a> - The IPv4 public address of
--   the network interface.
newNetworkInterface :: NetworkInterface

-- | The ID of the network interface.
networkInterface_networkInterfaceId :: Lens' NetworkInterface (Maybe Text)

-- | The IPv4 address of the network interface within the subnet.
networkInterface_privateIpAddress :: Lens' NetworkInterface (Maybe Text)

-- | The IPv4 public address of the network interface.
networkInterface_publicIpAddress :: Lens' NetworkInterface (Maybe Text)

-- | The output location.
--   
--   <i>See:</i> <a>newOutputLocation</a> smart constructor.
data OutputLocation
OutputLocation' :: Maybe Text -> Maybe Text -> OutputLocation

-- | The S3 folder in the <tt>s3Bucket</tt> where output files will be
--   placed.
[$sel:s3Prefix:OutputLocation'] :: OutputLocation -> Maybe Text

-- | The S3 bucket for output.
[$sel:s3Bucket:OutputLocation'] :: OutputLocation -> Maybe Text

-- | Create a value of <a>OutputLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Prefix:OutputLocation'</a>, <a>outputLocation_s3Prefix</a> -
--   The S3 folder in the <tt>s3Bucket</tt> where output files will be
--   placed.
--   
--   <a>$sel:s3Bucket:OutputLocation'</a>, <a>outputLocation_s3Bucket</a> -
--   The S3 bucket for output.
newOutputLocation :: OutputLocation

-- | The S3 folder in the <tt>s3Bucket</tt> where output files will be
--   placed.
outputLocation_s3Prefix :: Lens' OutputLocation (Maybe Text)

-- | The S3 bucket for output.
outputLocation_s3Bucket :: Lens' OutputLocation (Maybe Text)

-- | Configuration information for port forwarding.
--   
--   <i>See:</i> <a>newPortForwardingConfig</a> smart constructor.
data PortForwardingConfig
PortForwardingConfig' :: Maybe [PortMapping] -> PortForwardingConfig

-- | The port mappings for the configuration.
[$sel:portMappings:PortForwardingConfig'] :: PortForwardingConfig -> Maybe [PortMapping]

-- | Create a value of <a>PortForwardingConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:portMappings:PortForwardingConfig'</a>,
--   <a>portForwardingConfig_portMappings</a> - The port mappings for the
--   configuration.
newPortForwardingConfig :: PortForwardingConfig

-- | The port mappings for the configuration.
portForwardingConfig_portMappings :: Lens' PortForwardingConfig (Maybe [PortMapping])

-- | An object representing a port mapping.
--   
--   <i>See:</i> <a>newPortMapping</a> smart constructor.
data PortMapping
PortMapping' :: Maybe Bool -> Natural -> Natural -> PortMapping

-- | A Boolean indicating whether to enable this port mapping on public IP.
[$sel:enableOnPublicIp:PortMapping'] :: PortMapping -> Maybe Bool

-- | The port number on the simulation job instance to use as a remote
--   connection point.
[$sel:jobPort:PortMapping'] :: PortMapping -> Natural

-- | The port number on the application.
[$sel:applicationPort:PortMapping'] :: PortMapping -> Natural

-- | Create a value of <a>PortMapping</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enableOnPublicIp:PortMapping'</a>,
--   <a>portMapping_enableOnPublicIp</a> - A Boolean indicating whether to
--   enable this port mapping on public IP.
--   
--   <a>$sel:jobPort:PortMapping'</a>, <a>portMapping_jobPort</a> - The
--   port number on the simulation job instance to use as a remote
--   connection point.
--   
--   <a>$sel:applicationPort:PortMapping'</a>,
--   <a>portMapping_applicationPort</a> - The port number on the
--   application.
newPortMapping :: Natural -> Natural -> PortMapping

-- | A Boolean indicating whether to enable this port mapping on public IP.
portMapping_enableOnPublicIp :: Lens' PortMapping (Maybe Bool)

-- | The port number on the simulation job instance to use as a remote
--   connection point.
portMapping_jobPort :: Lens' PortMapping Natural

-- | The port number on the application.
portMapping_applicationPort :: Lens' PortMapping Natural

-- | Information about the progress of a deployment job.
--   
--   <i>See:</i> <a>newProgressDetail</a> smart constructor.
data ProgressDetail
ProgressDetail' :: Maybe RobotDeploymentStep -> Maybe Int -> Maybe Text -> Maybe Double -> ProgressDetail

-- | The current progress status.
--   
--   <ul>
--   <li><i>Validating</i> Validating the deployment.</li>
--   <li><i>DownloadingExtracting</i> Downloading and extracting the bundle
--   on the robot.</li>
--   <li><i>ExecutingPreLaunch</i> Executing pre-launch script(s) if
--   provided.</li>
--   <li><i>Launching</i> Launching the robot application.</li>
--   <li><i>ExecutingPostLaunch</i> Executing post-launch script(s) if
--   provided.</li>
--   <li><i>Finished</i> Deployment is complete.</li>
--   </ul>
[$sel:currentProgress:ProgressDetail'] :: ProgressDetail -> Maybe RobotDeploymentStep

-- | Estimated amount of time in seconds remaining in the step. This
--   currently only applies to the <tt>Downloading/Extracting</tt> step of
--   the deployment. It is empty for other steps.
[$sel:estimatedTimeRemainingSeconds:ProgressDetail'] :: ProgressDetail -> Maybe Int

-- | The Amazon Resource Name (ARN) of the deployment job.
[$sel:targetResource:ProgressDetail'] :: ProgressDetail -> Maybe Text

-- | Precentage of the step that is done. This currently only applies to
--   the <tt>Downloading/Extracting</tt> step of the deployment. It is
--   empty for other steps.
[$sel:percentDone:ProgressDetail'] :: ProgressDetail -> Maybe Double

-- | Create a value of <a>ProgressDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currentProgress:ProgressDetail'</a>,
--   <a>progressDetail_currentProgress</a> - The current progress status.
--   
--   <ul>
--   <li><i>Validating</i> Validating the deployment.</li>
--   <li><i>DownloadingExtracting</i> Downloading and extracting the bundle
--   on the robot.</li>
--   <li><i>ExecutingPreLaunch</i> Executing pre-launch script(s) if
--   provided.</li>
--   <li><i>Launching</i> Launching the robot application.</li>
--   <li><i>ExecutingPostLaunch</i> Executing post-launch script(s) if
--   provided.</li>
--   <li><i>Finished</i> Deployment is complete.</li>
--   </ul>
--   
--   <a>$sel:estimatedTimeRemainingSeconds:ProgressDetail'</a>,
--   <a>progressDetail_estimatedTimeRemainingSeconds</a> - Estimated amount
--   of time in seconds remaining in the step. This currently only applies
--   to the <tt>Downloading/Extracting</tt> step of the deployment. It is
--   empty for other steps.
--   
--   <a>$sel:targetResource:ProgressDetail'</a>,
--   <a>progressDetail_targetResource</a> - The Amazon Resource Name (ARN)
--   of the deployment job.
--   
--   <a>$sel:percentDone:ProgressDetail'</a>,
--   <a>progressDetail_percentDone</a> - Precentage of the step that is
--   done. This currently only applies to the
--   <tt>Downloading/Extracting</tt> step of the deployment. It is empty
--   for other steps.
newProgressDetail :: ProgressDetail

-- | The current progress status.
--   
--   <ul>
--   <li><i>Validating</i> Validating the deployment.</li>
--   <li><i>DownloadingExtracting</i> Downloading and extracting the bundle
--   on the robot.</li>
--   <li><i>ExecutingPreLaunch</i> Executing pre-launch script(s) if
--   provided.</li>
--   <li><i>Launching</i> Launching the robot application.</li>
--   <li><i>ExecutingPostLaunch</i> Executing post-launch script(s) if
--   provided.</li>
--   <li><i>Finished</i> Deployment is complete.</li>
--   </ul>
progressDetail_currentProgress :: Lens' ProgressDetail (Maybe RobotDeploymentStep)

-- | Estimated amount of time in seconds remaining in the step. This
--   currently only applies to the <tt>Downloading/Extracting</tt> step of
--   the deployment. It is empty for other steps.
progressDetail_estimatedTimeRemainingSeconds :: Lens' ProgressDetail (Maybe Int)

-- | The Amazon Resource Name (ARN) of the deployment job.
progressDetail_targetResource :: Lens' ProgressDetail (Maybe Text)

-- | Precentage of the step that is done. This currently only applies to
--   the <tt>Downloading/Extracting</tt> step of the deployment. It is
--   empty for other steps.
progressDetail_percentDone :: Lens' ProgressDetail (Maybe Double)

-- | Information about a rendering engine.
--   
--   <i>See:</i> <a>newRenderingEngine</a> smart constructor.
data RenderingEngine
RenderingEngine' :: Maybe RenderingEngineType -> Maybe Text -> RenderingEngine

-- | The name of the rendering engine.
[$sel:name:RenderingEngine'] :: RenderingEngine -> Maybe RenderingEngineType

-- | The version of the rendering engine.
[$sel:version:RenderingEngine'] :: RenderingEngine -> Maybe Text

-- | Create a value of <a>RenderingEngine</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:RenderingEngine'</a>, <a>renderingEngine_name</a> - The
--   name of the rendering engine.
--   
--   <a>$sel:version:RenderingEngine'</a>, <a>renderingEngine_version</a> -
--   The version of the rendering engine.
newRenderingEngine :: RenderingEngine

-- | The name of the rendering engine.
renderingEngine_name :: Lens' RenderingEngine (Maybe RenderingEngineType)

-- | The version of the rendering engine.
renderingEngine_version :: Lens' RenderingEngine (Maybe Text)

-- | Information about a robot.
--   
--   <i>See:</i> <a>newRobot</a> smart constructor.
data Robot
Robot' :: Maybe Text -> Maybe RobotStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Architecture -> Maybe POSIX -> Robot

-- | The Amazon Resource Name (ARN) of the last deployment job.
[$sel:lastDeploymentJob:Robot'] :: Robot -> Maybe Text

-- | The status of the robot.
[$sel:status:Robot'] :: Robot -> Maybe RobotStatus

-- | The Amazon Resource Name (ARN) of the robot.
[$sel:arn:Robot'] :: Robot -> Maybe Text

-- | The time, in milliseconds since the epoch, when the robot was created.
[$sel:createdAt:Robot'] :: Robot -> Maybe POSIX

-- | The Greengrass group associated with the robot.
[$sel:greenGrassGroupId:Robot'] :: Robot -> Maybe Text

-- | The Amazon Resource Name (ARN) of the fleet.
[$sel:fleetArn:Robot'] :: Robot -> Maybe Text

-- | The name of the robot.
[$sel:name:Robot'] :: Robot -> Maybe Text

-- | The architecture of the robot.
[$sel:architecture:Robot'] :: Robot -> Maybe Architecture

-- | The time of the last deployment.
[$sel:lastDeploymentTime:Robot'] :: Robot -> Maybe POSIX

-- | Create a value of <a>Robot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastDeploymentJob:Robot'</a>, <a>robot_lastDeploymentJob</a> -
--   The Amazon Resource Name (ARN) of the last deployment job.
--   
--   <a>$sel:status:Robot'</a>, <a>robot_status</a> - The status of the
--   robot.
--   
--   <a>$sel:arn:Robot'</a>, <a>robot_arn</a> - The Amazon Resource Name
--   (ARN) of the robot.
--   
--   <a>$sel:createdAt:Robot'</a>, <a>robot_createdAt</a> - The time, in
--   milliseconds since the epoch, when the robot was created.
--   
--   <a>$sel:greenGrassGroupId:Robot'</a>, <a>robot_greenGrassGroupId</a> -
--   The Greengrass group associated with the robot.
--   
--   <a>$sel:fleetArn:Robot'</a>, <a>robot_fleetArn</a> - The Amazon
--   Resource Name (ARN) of the fleet.
--   
--   <a>$sel:name:Robot'</a>, <a>robot_name</a> - The name of the robot.
--   
--   <a>$sel:architecture:Robot'</a>, <a>robot_architecture</a> - The
--   architecture of the robot.
--   
--   <a>$sel:lastDeploymentTime:Robot'</a>, <a>robot_lastDeploymentTime</a>
--   - The time of the last deployment.
newRobot :: Robot

-- | The Amazon Resource Name (ARN) of the last deployment job.
robot_lastDeploymentJob :: Lens' Robot (Maybe Text)

-- | The status of the robot.
robot_status :: Lens' Robot (Maybe RobotStatus)

-- | The Amazon Resource Name (ARN) of the robot.
robot_arn :: Lens' Robot (Maybe Text)

-- | The time, in milliseconds since the epoch, when the robot was created.
robot_createdAt :: Lens' Robot (Maybe UTCTime)

-- | The Greengrass group associated with the robot.
robot_greenGrassGroupId :: Lens' Robot (Maybe Text)

-- | The Amazon Resource Name (ARN) of the fleet.
robot_fleetArn :: Lens' Robot (Maybe Text)

-- | The name of the robot.
robot_name :: Lens' Robot (Maybe Text)

-- | The architecture of the robot.
robot_architecture :: Lens' Robot (Maybe Architecture)

-- | The time of the last deployment.
robot_lastDeploymentTime :: Lens' Robot (Maybe UTCTime)

-- | Application configuration information for a robot.
--   
--   <i>See:</i> <a>newRobotApplicationConfig</a> smart constructor.
data RobotApplicationConfig
RobotApplicationConfig' :: Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe [UploadConfiguration] -> Maybe [Tool] -> Text -> LaunchConfig -> RobotApplicationConfig

-- | A Boolean indicating whether to use default upload configurations. By
--   default, <tt>.ros</tt> and <tt>.gazebo</tt> files are uploaded when
--   the application terminates and all ROS topics will be recorded.
--   
--   If you set this value, you must specify an <tt>outputLocation</tt>.
[$sel:useDefaultUploadConfigurations:RobotApplicationConfig'] :: RobotApplicationConfig -> Maybe Bool

-- | A Boolean indicating whether to use default robot application tools.
--   The default tools are rviz, rqt, terminal and rosbag record. The
--   default is <tt>False</tt>.
[$sel:useDefaultTools:RobotApplicationConfig'] :: RobotApplicationConfig -> Maybe Bool

-- | The version of the robot application.
[$sel:applicationVersion:RobotApplicationConfig'] :: RobotApplicationConfig -> Maybe Text

-- | The upload configurations for the robot application.
[$sel:uploadConfigurations:RobotApplicationConfig'] :: RobotApplicationConfig -> Maybe [UploadConfiguration]

-- | Information about tools configured for the robot application.
[$sel:tools:RobotApplicationConfig'] :: RobotApplicationConfig -> Maybe [Tool]

-- | The application information for the robot application.
[$sel:application:RobotApplicationConfig'] :: RobotApplicationConfig -> Text

-- | The launch configuration for the robot application.
[$sel:launchConfig:RobotApplicationConfig'] :: RobotApplicationConfig -> LaunchConfig

-- | Create a value of <a>RobotApplicationConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:useDefaultUploadConfigurations:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_useDefaultUploadConfigurations</a> - A
--   Boolean indicating whether to use default upload configurations. By
--   default, <tt>.ros</tt> and <tt>.gazebo</tt> files are uploaded when
--   the application terminates and all ROS topics will be recorded.
--   
--   If you set this value, you must specify an <tt>outputLocation</tt>.
--   
--   <a>$sel:useDefaultTools:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_useDefaultTools</a> - A Boolean indicating
--   whether to use default robot application tools. The default tools are
--   rviz, rqt, terminal and rosbag record. The default is <tt>False</tt>.
--   
--   <a>$sel:applicationVersion:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_applicationVersion</a> - The version of the
--   robot application.
--   
--   <a>$sel:uploadConfigurations:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_uploadConfigurations</a> - The upload
--   configurations for the robot application.
--   
--   <a>$sel:tools:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_tools</a> - Information about tools
--   configured for the robot application.
--   
--   <a>$sel:application:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_application</a> - The application
--   information for the robot application.
--   
--   <a>$sel:launchConfig:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_launchConfig</a> - The launch configuration
--   for the robot application.
newRobotApplicationConfig :: Text -> LaunchConfig -> RobotApplicationConfig

-- | A Boolean indicating whether to use default upload configurations. By
--   default, <tt>.ros</tt> and <tt>.gazebo</tt> files are uploaded when
--   the application terminates and all ROS topics will be recorded.
--   
--   If you set this value, you must specify an <tt>outputLocation</tt>.
robotApplicationConfig_useDefaultUploadConfigurations :: Lens' RobotApplicationConfig (Maybe Bool)

-- | A Boolean indicating whether to use default robot application tools.
--   The default tools are rviz, rqt, terminal and rosbag record. The
--   default is <tt>False</tt>.
robotApplicationConfig_useDefaultTools :: Lens' RobotApplicationConfig (Maybe Bool)

-- | The version of the robot application.
robotApplicationConfig_applicationVersion :: Lens' RobotApplicationConfig (Maybe Text)

-- | The upload configurations for the robot application.
robotApplicationConfig_uploadConfigurations :: Lens' RobotApplicationConfig (Maybe [UploadConfiguration])

-- | Information about tools configured for the robot application.
robotApplicationConfig_tools :: Lens' RobotApplicationConfig (Maybe [Tool])

-- | The application information for the robot application.
robotApplicationConfig_application :: Lens' RobotApplicationConfig Text

-- | The launch configuration for the robot application.
robotApplicationConfig_launchConfig :: Lens' RobotApplicationConfig LaunchConfig

-- | Summary information for a robot application.
--   
--   <i>See:</i> <a>newRobotApplicationSummary</a> smart constructor.
data RobotApplicationSummary
RobotApplicationSummary' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe RobotSoftwareSuite -> RobotApplicationSummary

-- | The time, in milliseconds since the epoch, when the robot application
--   was last updated.
[$sel:lastUpdatedAt:RobotApplicationSummary'] :: RobotApplicationSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the robot.
[$sel:arn:RobotApplicationSummary'] :: RobotApplicationSummary -> Maybe Text

-- | The name of the robot application.
[$sel:name:RobotApplicationSummary'] :: RobotApplicationSummary -> Maybe Text

-- | The version of the robot application.
[$sel:version:RobotApplicationSummary'] :: RobotApplicationSummary -> Maybe Text

-- | Information about a robot software suite (ROS distribution).
[$sel:robotSoftwareSuite:RobotApplicationSummary'] :: RobotApplicationSummary -> Maybe RobotSoftwareSuite

-- | Create a value of <a>RobotApplicationSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:RobotApplicationSummary'</a>,
--   <a>robotApplicationSummary_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the robot application was last
--   updated.
--   
--   <a>$sel:arn:RobotApplicationSummary'</a>,
--   <a>robotApplicationSummary_arn</a> - The Amazon Resource Name (ARN) of
--   the robot.
--   
--   <a>$sel:name:RobotApplicationSummary'</a>,
--   <a>robotApplicationSummary_name</a> - The name of the robot
--   application.
--   
--   <a>$sel:version:RobotApplicationSummary'</a>,
--   <a>robotApplicationSummary_version</a> - The version of the robot
--   application.
--   
--   <a>$sel:robotSoftwareSuite:RobotApplicationSummary'</a>,
--   <a>robotApplicationSummary_robotSoftwareSuite</a> - Information about
--   a robot software suite (ROS distribution).
newRobotApplicationSummary :: RobotApplicationSummary

-- | The time, in milliseconds since the epoch, when the robot application
--   was last updated.
robotApplicationSummary_lastUpdatedAt :: Lens' RobotApplicationSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the robot.
robotApplicationSummary_arn :: Lens' RobotApplicationSummary (Maybe Text)

-- | The name of the robot application.
robotApplicationSummary_name :: Lens' RobotApplicationSummary (Maybe Text)

-- | The version of the robot application.
robotApplicationSummary_version :: Lens' RobotApplicationSummary (Maybe Text)

-- | Information about a robot software suite (ROS distribution).
robotApplicationSummary_robotSoftwareSuite :: Lens' RobotApplicationSummary (Maybe RobotSoftwareSuite)

-- | Information about a robot deployment.
--   
--   <i>See:</i> <a>newRobotDeployment</a> smart constructor.
data RobotDeployment
RobotDeployment' :: Maybe POSIX -> Maybe Text -> Maybe RobotStatus -> Maybe Text -> Maybe DeploymentJobErrorCode -> Maybe ProgressDetail -> Maybe POSIX -> RobotDeployment

-- | The time, in milliseconds since the epoch, when the deployment was
--   started.
[$sel:deploymentStartTime:RobotDeployment'] :: RobotDeployment -> Maybe POSIX

-- | A short description of the reason why the robot deployment failed.
[$sel:failureReason:RobotDeployment'] :: RobotDeployment -> Maybe Text

-- | The status of the robot deployment.
[$sel:status:RobotDeployment'] :: RobotDeployment -> Maybe RobotStatus

-- | The robot deployment Amazon Resource Name (ARN).
[$sel:arn:RobotDeployment'] :: RobotDeployment -> Maybe Text

-- | The robot deployment failure code.
[$sel:failureCode:RobotDeployment'] :: RobotDeployment -> Maybe DeploymentJobErrorCode

-- | Information about how the deployment is progressing.
[$sel:progressDetail:RobotDeployment'] :: RobotDeployment -> Maybe ProgressDetail

-- | The time, in milliseconds since the epoch, when the deployment
--   finished.
[$sel:deploymentFinishTime:RobotDeployment'] :: RobotDeployment -> Maybe POSIX

-- | Create a value of <a>RobotDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentStartTime:RobotDeployment'</a>,
--   <a>robotDeployment_deploymentStartTime</a> - The time, in milliseconds
--   since the epoch, when the deployment was started.
--   
--   <a>$sel:failureReason:RobotDeployment'</a>,
--   <a>robotDeployment_failureReason</a> - A short description of the
--   reason why the robot deployment failed.
--   
--   <a>$sel:status:RobotDeployment'</a>, <a>robotDeployment_status</a> -
--   The status of the robot deployment.
--   
--   <a>$sel:arn:RobotDeployment'</a>, <a>robotDeployment_arn</a> - The
--   robot deployment Amazon Resource Name (ARN).
--   
--   <a>$sel:failureCode:RobotDeployment'</a>,
--   <a>robotDeployment_failureCode</a> - The robot deployment failure
--   code.
--   
--   <a>$sel:progressDetail:RobotDeployment'</a>,
--   <a>robotDeployment_progressDetail</a> - Information about how the
--   deployment is progressing.
--   
--   <a>$sel:deploymentFinishTime:RobotDeployment'</a>,
--   <a>robotDeployment_deploymentFinishTime</a> - The time, in
--   milliseconds since the epoch, when the deployment finished.
newRobotDeployment :: RobotDeployment

-- | The time, in milliseconds since the epoch, when the deployment was
--   started.
robotDeployment_deploymentStartTime :: Lens' RobotDeployment (Maybe UTCTime)

-- | A short description of the reason why the robot deployment failed.
robotDeployment_failureReason :: Lens' RobotDeployment (Maybe Text)

-- | The status of the robot deployment.
robotDeployment_status :: Lens' RobotDeployment (Maybe RobotStatus)

-- | The robot deployment Amazon Resource Name (ARN).
robotDeployment_arn :: Lens' RobotDeployment (Maybe Text)

-- | The robot deployment failure code.
robotDeployment_failureCode :: Lens' RobotDeployment (Maybe DeploymentJobErrorCode)

-- | Information about how the deployment is progressing.
robotDeployment_progressDetail :: Lens' RobotDeployment (Maybe ProgressDetail)

-- | The time, in milliseconds since the epoch, when the deployment
--   finished.
robotDeployment_deploymentFinishTime :: Lens' RobotDeployment (Maybe UTCTime)

-- | Information about a robot software suite (ROS distribution).
--   
--   <i>See:</i> <a>newRobotSoftwareSuite</a> smart constructor.
data RobotSoftwareSuite
RobotSoftwareSuite' :: Maybe RobotSoftwareSuiteType -> Maybe RobotSoftwareSuiteVersionType -> RobotSoftwareSuite

-- | The name of the robot software suite (ROS distribution).
[$sel:name:RobotSoftwareSuite'] :: RobotSoftwareSuite -> Maybe RobotSoftwareSuiteType

-- | The version of the robot software suite (ROS distribution).
[$sel:version:RobotSoftwareSuite'] :: RobotSoftwareSuite -> Maybe RobotSoftwareSuiteVersionType

-- | Create a value of <a>RobotSoftwareSuite</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:RobotSoftwareSuite'</a>, <a>robotSoftwareSuite_name</a> -
--   The name of the robot software suite (ROS distribution).
--   
--   <a>$sel:version:RobotSoftwareSuite'</a>,
--   <a>robotSoftwareSuite_version</a> - The version of the robot software
--   suite (ROS distribution).
newRobotSoftwareSuite :: RobotSoftwareSuite

-- | The name of the robot software suite (ROS distribution).
robotSoftwareSuite_name :: Lens' RobotSoftwareSuite (Maybe RobotSoftwareSuiteType)

-- | The version of the robot software suite (ROS distribution).
robotSoftwareSuite_version :: Lens' RobotSoftwareSuite (Maybe RobotSoftwareSuiteVersionType)

-- | Information about S3 keys.
--   
--   <i>See:</i> <a>newS3KeyOutput</a> smart constructor.
data S3KeyOutput
S3KeyOutput' :: Maybe Text -> Maybe Text -> S3KeyOutput

-- | The etag for the object.
[$sel:etag:S3KeyOutput'] :: S3KeyOutput -> Maybe Text

-- | The S3 key.
[$sel:s3Key:S3KeyOutput'] :: S3KeyOutput -> Maybe Text

-- | Create a value of <a>S3KeyOutput</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:etag:S3KeyOutput'</a>, <a>s3KeyOutput_etag</a> - The etag for
--   the object.
--   
--   <a>$sel:s3Key:S3KeyOutput'</a>, <a>s3KeyOutput_s3Key</a> - The S3 key.
newS3KeyOutput :: S3KeyOutput

-- | The etag for the object.
s3KeyOutput_etag :: Lens' S3KeyOutput (Maybe Text)

-- | The S3 key.
s3KeyOutput_s3Key :: Lens' S3KeyOutput (Maybe Text)

-- | Information about an S3 object.
--   
--   <i>See:</i> <a>newS3Object</a> smart constructor.
data S3Object
S3Object' :: Maybe Text -> Text -> Text -> S3Object

-- | The etag of the object.
[$sel:etag:S3Object'] :: S3Object -> Maybe Text

-- | The bucket containing the object.
[$sel:bucket:S3Object'] :: S3Object -> Text

-- | The key of the object.
[$sel:key:S3Object'] :: S3Object -> Text

-- | Create a value of <a>S3Object</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:etag:S3Object'</a>, <a>s3Object_etag</a> - The etag of the
--   object.
--   
--   <a>$sel:bucket:S3Object'</a>, <a>s3Object_bucket</a> - The bucket
--   containing the object.
--   
--   <a>$sel:key:S3Object'</a>, <a>s3Object_key</a> - The key of the
--   object.
newS3Object :: Text -> Text -> S3Object

-- | The etag of the object.
s3Object_etag :: Lens' S3Object (Maybe Text)

-- | The bucket containing the object.
s3Object_bucket :: Lens' S3Object Text

-- | The key of the object.
s3Object_key :: Lens' S3Object Text

-- | Information about a simulation application configuration.
--   
--   <i>See:</i> <a>newSimulationApplicationConfig</a> smart constructor.
data SimulationApplicationConfig
SimulationApplicationConfig' :: Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe [UploadConfiguration] -> Maybe [Tool] -> Maybe [WorldConfig] -> Text -> LaunchConfig -> SimulationApplicationConfig

-- | A Boolean indicating whether to use default upload configurations. By
--   default, <tt>.ros</tt> and <tt>.gazebo</tt> files are uploaded when
--   the application terminates and all ROS topics will be recorded.
--   
--   If you set this value, you must specify an <tt>outputLocation</tt>.
[$sel:useDefaultUploadConfigurations:SimulationApplicationConfig'] :: SimulationApplicationConfig -> Maybe Bool

-- | A Boolean indicating whether to use default simulation application
--   tools. The default tools are rviz, rqt, terminal and rosbag record.
--   The default is <tt>False</tt>.
[$sel:useDefaultTools:SimulationApplicationConfig'] :: SimulationApplicationConfig -> Maybe Bool

-- | The version of the simulation application.
[$sel:applicationVersion:SimulationApplicationConfig'] :: SimulationApplicationConfig -> Maybe Text

-- | Information about upload configurations for the simulation
--   application.
[$sel:uploadConfigurations:SimulationApplicationConfig'] :: SimulationApplicationConfig -> Maybe [UploadConfiguration]

-- | Information about tools configured for the simulation application.
[$sel:tools:SimulationApplicationConfig'] :: SimulationApplicationConfig -> Maybe [Tool]

-- | A list of world configurations.
[$sel:worldConfigs:SimulationApplicationConfig'] :: SimulationApplicationConfig -> Maybe [WorldConfig]

-- | The application information for the simulation application.
[$sel:application:SimulationApplicationConfig'] :: SimulationApplicationConfig -> Text

-- | The launch configuration for the simulation application.
[$sel:launchConfig:SimulationApplicationConfig'] :: SimulationApplicationConfig -> LaunchConfig

-- | Create a value of <a>SimulationApplicationConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:useDefaultUploadConfigurations:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_useDefaultUploadConfigurations</a> - A
--   Boolean indicating whether to use default upload configurations. By
--   default, <tt>.ros</tt> and <tt>.gazebo</tt> files are uploaded when
--   the application terminates and all ROS topics will be recorded.
--   
--   If you set this value, you must specify an <tt>outputLocation</tt>.
--   
--   <a>$sel:useDefaultTools:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_useDefaultTools</a> - A Boolean
--   indicating whether to use default simulation application tools. The
--   default tools are rviz, rqt, terminal and rosbag record. The default
--   is <tt>False</tt>.
--   
--   <a>$sel:applicationVersion:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_applicationVersion</a> - The version of
--   the simulation application.
--   
--   <a>$sel:uploadConfigurations:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_uploadConfigurations</a> - Information
--   about upload configurations for the simulation application.
--   
--   <a>$sel:tools:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_tools</a> - Information about tools
--   configured for the simulation application.
--   
--   <a>$sel:worldConfigs:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_worldConfigs</a> - A list of world
--   configurations.
--   
--   <a>$sel:application:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_application</a> - The application
--   information for the simulation application.
--   
--   <a>$sel:launchConfig:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_launchConfig</a> - The launch
--   configuration for the simulation application.
newSimulationApplicationConfig :: Text -> LaunchConfig -> SimulationApplicationConfig

-- | A Boolean indicating whether to use default upload configurations. By
--   default, <tt>.ros</tt> and <tt>.gazebo</tt> files are uploaded when
--   the application terminates and all ROS topics will be recorded.
--   
--   If you set this value, you must specify an <tt>outputLocation</tt>.
simulationApplicationConfig_useDefaultUploadConfigurations :: Lens' SimulationApplicationConfig (Maybe Bool)

-- | A Boolean indicating whether to use default simulation application
--   tools. The default tools are rviz, rqt, terminal and rosbag record.
--   The default is <tt>False</tt>.
simulationApplicationConfig_useDefaultTools :: Lens' SimulationApplicationConfig (Maybe Bool)

-- | The version of the simulation application.
simulationApplicationConfig_applicationVersion :: Lens' SimulationApplicationConfig (Maybe Text)

-- | Information about upload configurations for the simulation
--   application.
simulationApplicationConfig_uploadConfigurations :: Lens' SimulationApplicationConfig (Maybe [UploadConfiguration])

-- | Information about tools configured for the simulation application.
simulationApplicationConfig_tools :: Lens' SimulationApplicationConfig (Maybe [Tool])

-- | A list of world configurations.
simulationApplicationConfig_worldConfigs :: Lens' SimulationApplicationConfig (Maybe [WorldConfig])

-- | The application information for the simulation application.
simulationApplicationConfig_application :: Lens' SimulationApplicationConfig Text

-- | The launch configuration for the simulation application.
simulationApplicationConfig_launchConfig :: Lens' SimulationApplicationConfig LaunchConfig

-- | Summary information for a simulation application.
--   
--   <i>See:</i> <a>newSimulationApplicationSummary</a> smart constructor.
data SimulationApplicationSummary
SimulationApplicationSummary' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe SimulationSoftwareSuite -> Maybe RobotSoftwareSuite -> SimulationApplicationSummary

-- | The time, in milliseconds since the epoch, when the simulation
--   application was last updated.
[$sel:lastUpdatedAt:SimulationApplicationSummary'] :: SimulationApplicationSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the simulation application.
[$sel:arn:SimulationApplicationSummary'] :: SimulationApplicationSummary -> Maybe Text

-- | The name of the simulation application.
[$sel:name:SimulationApplicationSummary'] :: SimulationApplicationSummary -> Maybe Text

-- | The version of the simulation application.
[$sel:version:SimulationApplicationSummary'] :: SimulationApplicationSummary -> Maybe Text

-- | Information about a simulation software suite.
[$sel:simulationSoftwareSuite:SimulationApplicationSummary'] :: SimulationApplicationSummary -> Maybe SimulationSoftwareSuite

-- | Information about a robot software suite (ROS distribution).
[$sel:robotSoftwareSuite:SimulationApplicationSummary'] :: SimulationApplicationSummary -> Maybe RobotSoftwareSuite

-- | Create a value of <a>SimulationApplicationSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:SimulationApplicationSummary'</a>,
--   <a>simulationApplicationSummary_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the simulation application was last
--   updated.
--   
--   <a>$sel:arn:SimulationApplicationSummary'</a>,
--   <a>simulationApplicationSummary_arn</a> - The Amazon Resource Name
--   (ARN) of the simulation application.
--   
--   <a>$sel:name:SimulationApplicationSummary'</a>,
--   <a>simulationApplicationSummary_name</a> - The name of the simulation
--   application.
--   
--   <a>$sel:version:SimulationApplicationSummary'</a>,
--   <a>simulationApplicationSummary_version</a> - The version of the
--   simulation application.
--   
--   <a>$sel:simulationSoftwareSuite:SimulationApplicationSummary'</a>,
--   <a>simulationApplicationSummary_simulationSoftwareSuite</a> -
--   Information about a simulation software suite.
--   
--   <a>$sel:robotSoftwareSuite:SimulationApplicationSummary'</a>,
--   <a>simulationApplicationSummary_robotSoftwareSuite</a> - Information
--   about a robot software suite (ROS distribution).
newSimulationApplicationSummary :: SimulationApplicationSummary

-- | The time, in milliseconds since the epoch, when the simulation
--   application was last updated.
simulationApplicationSummary_lastUpdatedAt :: Lens' SimulationApplicationSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the simulation application.
simulationApplicationSummary_arn :: Lens' SimulationApplicationSummary (Maybe Text)

-- | The name of the simulation application.
simulationApplicationSummary_name :: Lens' SimulationApplicationSummary (Maybe Text)

-- | The version of the simulation application.
simulationApplicationSummary_version :: Lens' SimulationApplicationSummary (Maybe Text)

-- | Information about a simulation software suite.
simulationApplicationSummary_simulationSoftwareSuite :: Lens' SimulationApplicationSummary (Maybe SimulationSoftwareSuite)

-- | Information about a robot software suite (ROS distribution).
simulationApplicationSummary_robotSoftwareSuite :: Lens' SimulationApplicationSummary (Maybe RobotSoftwareSuite)

-- | Information about a simulation job.
--   
--   <i>See:</i> <a>newSimulationJob</a> smart constructor.
data SimulationJob
SimulationJob' :: Maybe Text -> Maybe FailureBehavior -> Maybe SimulationJobStatus -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty RobotApplicationConfig) -> Maybe SimulationJobErrorCode -> Maybe ComputeResponse -> Maybe NetworkInterface -> Maybe [DataSource] -> Maybe Text -> Maybe VPCConfigResponse -> Maybe OutputLocation -> Maybe (NonEmpty SimulationApplicationConfig) -> Maybe Integer -> Maybe Text -> Maybe POSIX -> Maybe LoggingConfig -> Maybe Text -> Maybe Integer -> Maybe (HashMap Text Text) -> SimulationJob

-- | The reason why the simulation job failed.
[$sel:failureReason:SimulationJob'] :: SimulationJob -> Maybe Text

-- | The failure behavior the simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the host running for its maximum timeout
--   duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
[$sel:failureBehavior:SimulationJob'] :: SimulationJob -> Maybe FailureBehavior

-- | Status of the simulation job.
[$sel:status:SimulationJob'] :: SimulationJob -> Maybe SimulationJobStatus

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last updated.
[$sel:lastUpdatedAt:SimulationJob'] :: SimulationJob -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the simulation job.
[$sel:arn:SimulationJob'] :: SimulationJob -> Maybe Text

-- | A list of robot applications.
[$sel:robotApplications:SimulationJob'] :: SimulationJob -> Maybe (NonEmpty RobotApplicationConfig)

-- | The failure code of the simulation job if it failed.
[$sel:failureCode:SimulationJob'] :: SimulationJob -> Maybe SimulationJobErrorCode

-- | Compute information for the simulation job
[$sel:compute:SimulationJob'] :: SimulationJob -> Maybe ComputeResponse

-- | Information about a network interface.
[$sel:networkInterface:SimulationJob'] :: SimulationJob -> Maybe NetworkInterface

-- | The data sources for the simulation job.
[$sel:dataSources:SimulationJob'] :: SimulationJob -> Maybe [DataSource]

-- | The name of the simulation job.
[$sel:name:SimulationJob'] :: SimulationJob -> Maybe Text

-- | VPC configuration information.
[$sel:vpcConfig:SimulationJob'] :: SimulationJob -> Maybe VPCConfigResponse

-- | Location for output files generated by the simulation job.
[$sel:outputLocation:SimulationJob'] :: SimulationJob -> Maybe OutputLocation

-- | A list of simulation applications.
[$sel:simulationApplications:SimulationJob'] :: SimulationJob -> Maybe (NonEmpty SimulationApplicationConfig)

-- | The simulation job execution duration in milliseconds.
[$sel:simulationTimeMillis:SimulationJob'] :: SimulationJob -> Maybe Integer

-- | A unique identifier for this <tt>SimulationJob</tt> request.
[$sel:clientRequestToken:SimulationJob'] :: SimulationJob -> Maybe Text

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last started.
[$sel:lastStartedAt:SimulationJob'] :: SimulationJob -> Maybe POSIX

-- | The logging configuration.
[$sel:loggingConfig:SimulationJob'] :: SimulationJob -> Maybe LoggingConfig

-- | The IAM role that allows the simulation instance to call the AWS APIs
--   that are specified in its associated policies on your behalf. This is
--   how credentials are passed in to your simulation job.
[$sel:iamRole:SimulationJob'] :: SimulationJob -> Maybe Text

-- | The maximum simulation job duration in seconds. The value must be 8
--   days (691,200 seconds) or less.
[$sel:maxJobDurationInSeconds:SimulationJob'] :: SimulationJob -> Maybe Integer

-- | A map that contains tag keys and tag values that are attached to the
--   simulation job.
[$sel:tags:SimulationJob'] :: SimulationJob -> Maybe (HashMap Text Text)

-- | Create a value of <a>SimulationJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:SimulationJob'</a>,
--   <a>simulationJob_failureReason</a> - The reason why the simulation job
--   failed.
--   
--   <a>$sel:failureBehavior:SimulationJob'</a>,
--   <a>simulationJob_failureBehavior</a> - The failure behavior the
--   simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the host running for its maximum timeout
--   duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
--   
--   <a>$sel:status:SimulationJob'</a>, <a>simulationJob_status</a> -
--   Status of the simulation job.
--   
--   <a>$sel:lastUpdatedAt:SimulationJob'</a>,
--   <a>simulationJob_lastUpdatedAt</a> - The time, in milliseconds since
--   the epoch, when the simulation job was last updated.
--   
--   <a>$sel:arn:SimulationJob'</a>, <a>simulationJob_arn</a> - The Amazon
--   Resource Name (ARN) of the simulation job.
--   
--   <a>$sel:robotApplications:SimulationJob'</a>,
--   <a>simulationJob_robotApplications</a> - A list of robot applications.
--   
--   <a>$sel:failureCode:SimulationJob'</a>,
--   <a>simulationJob_failureCode</a> - The failure code of the simulation
--   job if it failed.
--   
--   <a>$sel:compute:SimulationJob'</a>, <a>simulationJob_compute</a> -
--   Compute information for the simulation job
--   
--   <a>$sel:networkInterface:SimulationJob'</a>,
--   <a>simulationJob_networkInterface</a> - Information about a network
--   interface.
--   
--   <a>$sel:dataSources:SimulationJob'</a>,
--   <a>simulationJob_dataSources</a> - The data sources for the simulation
--   job.
--   
--   <a>$sel:name:SimulationJob'</a>, <a>simulationJob_name</a> - The name
--   of the simulation job.
--   
--   <a>$sel:vpcConfig:SimulationJob'</a>, <a>simulationJob_vpcConfig</a> -
--   VPC configuration information.
--   
--   <a>$sel:outputLocation:SimulationJob'</a>,
--   <a>simulationJob_outputLocation</a> - Location for output files
--   generated by the simulation job.
--   
--   <a>$sel:simulationApplications:SimulationJob'</a>,
--   <a>simulationJob_simulationApplications</a> - A list of simulation
--   applications.
--   
--   <a>$sel:simulationTimeMillis:SimulationJob'</a>,
--   <a>simulationJob_simulationTimeMillis</a> - The simulation job
--   execution duration in milliseconds.
--   
--   <a>$sel:clientRequestToken:SimulationJob'</a>,
--   <a>simulationJob_clientRequestToken</a> - A unique identifier for this
--   <tt>SimulationJob</tt> request.
--   
--   <a>$sel:lastStartedAt:SimulationJob'</a>,
--   <a>simulationJob_lastStartedAt</a> - The time, in milliseconds since
--   the epoch, when the simulation job was last started.
--   
--   <a>$sel:loggingConfig:SimulationJob'</a>,
--   <a>simulationJob_loggingConfig</a> - The logging configuration.
--   
--   <a>$sel:iamRole:SimulationJob'</a>, <a>simulationJob_iamRole</a> - The
--   IAM role that allows the simulation instance to call the AWS APIs that
--   are specified in its associated policies on your behalf. This is how
--   credentials are passed in to your simulation job.
--   
--   <a>$sel:maxJobDurationInSeconds:SimulationJob'</a>,
--   <a>simulationJob_maxJobDurationInSeconds</a> - The maximum simulation
--   job duration in seconds. The value must be 8 days (691,200 seconds) or
--   less.
--   
--   <a>$sel:tags:SimulationJob'</a>, <a>simulationJob_tags</a> - A map
--   that contains tag keys and tag values that are attached to the
--   simulation job.
newSimulationJob :: SimulationJob

-- | The reason why the simulation job failed.
simulationJob_failureReason :: Lens' SimulationJob (Maybe Text)

-- | The failure behavior the simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the host running for its maximum timeout
--   duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
simulationJob_failureBehavior :: Lens' SimulationJob (Maybe FailureBehavior)

-- | Status of the simulation job.
simulationJob_status :: Lens' SimulationJob (Maybe SimulationJobStatus)

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last updated.
simulationJob_lastUpdatedAt :: Lens' SimulationJob (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the simulation job.
simulationJob_arn :: Lens' SimulationJob (Maybe Text)

-- | A list of robot applications.
simulationJob_robotApplications :: Lens' SimulationJob (Maybe (NonEmpty RobotApplicationConfig))

-- | The failure code of the simulation job if it failed.
simulationJob_failureCode :: Lens' SimulationJob (Maybe SimulationJobErrorCode)

-- | Compute information for the simulation job
simulationJob_compute :: Lens' SimulationJob (Maybe ComputeResponse)

-- | Information about a network interface.
simulationJob_networkInterface :: Lens' SimulationJob (Maybe NetworkInterface)

-- | The data sources for the simulation job.
simulationJob_dataSources :: Lens' SimulationJob (Maybe [DataSource])

-- | The name of the simulation job.
simulationJob_name :: Lens' SimulationJob (Maybe Text)

-- | VPC configuration information.
simulationJob_vpcConfig :: Lens' SimulationJob (Maybe VPCConfigResponse)

-- | Location for output files generated by the simulation job.
simulationJob_outputLocation :: Lens' SimulationJob (Maybe OutputLocation)

-- | A list of simulation applications.
simulationJob_simulationApplications :: Lens' SimulationJob (Maybe (NonEmpty SimulationApplicationConfig))

-- | The simulation job execution duration in milliseconds.
simulationJob_simulationTimeMillis :: Lens' SimulationJob (Maybe Integer)

-- | A unique identifier for this <tt>SimulationJob</tt> request.
simulationJob_clientRequestToken :: Lens' SimulationJob (Maybe Text)

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last started.
simulationJob_lastStartedAt :: Lens' SimulationJob (Maybe UTCTime)

-- | The logging configuration.
simulationJob_loggingConfig :: Lens' SimulationJob (Maybe LoggingConfig)

-- | The IAM role that allows the simulation instance to call the AWS APIs
--   that are specified in its associated policies on your behalf. This is
--   how credentials are passed in to your simulation job.
simulationJob_iamRole :: Lens' SimulationJob (Maybe Text)

-- | The maximum simulation job duration in seconds. The value must be 8
--   days (691,200 seconds) or less.
simulationJob_maxJobDurationInSeconds :: Lens' SimulationJob (Maybe Integer)

-- | A map that contains tag keys and tag values that are attached to the
--   simulation job.
simulationJob_tags :: Lens' SimulationJob (Maybe (HashMap Text Text))

-- | Information about a simulation job batch.
--   
--   <i>See:</i> <a>newSimulationJobBatchSummary</a> smart constructor.
data SimulationJobBatchSummary
SimulationJobBatchSummary' :: Maybe SimulationJobBatchStatus -> Maybe Int -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Int -> Maybe Int -> SimulationJobBatchSummary

-- | The status of the simulation job batch.
--   
--   <ul>
--   <li><i>Pending</i> The simulation job batch request is pending.</li>
--   <li><i>InProgress</i> The simulation job batch is in progress.</li>
--   <li><i>Failed</i> The simulation job batch failed. One or more
--   simulation job requests could not be completed due to an internal
--   failure (like <tt>InternalServiceError</tt>). See <tt>failureCode</tt>
--   and <tt>failureReason</tt> for more information.</li>
--   <li><i>Completed</i> The simulation batch job completed. A batch is
--   complete when (1) there are no pending simulation job requests in the
--   batch and none of the failed simulation job requests are due to
--   <tt>InternalServiceError</tt> and (2) when all created simulation jobs
--   have reached a terminal state (for example, <tt>Completed</tt> or
--   <tt>Failed</tt>).</li>
--   <li><i>Canceled</i> The simulation batch job was cancelled.</li>
--   <li><i>Canceling</i> The simulation batch job is being cancelled.</li>
--   <li><i>Completing</i> The simulation batch job is completing.</li>
--   <li><i>TimingOut</i> The simulation job batch is timing out.If a batch
--   timing out, and there are pending requests that were failing due to an
--   internal failure (like <tt>InternalServiceError</tt>), the batch
--   status will be <tt>Failed</tt>. If there are no such failing request,
--   the batch status will be <tt>TimedOut</tt>.</li>
--   <li><i>TimedOut</i> The simulation batch job timed out.</li>
--   </ul>
[$sel:status:SimulationJobBatchSummary'] :: SimulationJobBatchSummary -> Maybe SimulationJobBatchStatus

-- | The number of created simulation job requests.
[$sel:createdRequestCount:SimulationJobBatchSummary'] :: SimulationJobBatchSummary -> Maybe Int

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch was last updated.
[$sel:lastUpdatedAt:SimulationJobBatchSummary'] :: SimulationJobBatchSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the batch.
[$sel:arn:SimulationJobBatchSummary'] :: SimulationJobBatchSummary -> Maybe Text

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch was created.
[$sel:createdAt:SimulationJobBatchSummary'] :: SimulationJobBatchSummary -> Maybe POSIX

-- | The number of pending simulation job requests.
[$sel:pendingRequestCount:SimulationJobBatchSummary'] :: SimulationJobBatchSummary -> Maybe Int

-- | The number of failed simulation job requests.
[$sel:failedRequestCount:SimulationJobBatchSummary'] :: SimulationJobBatchSummary -> Maybe Int

-- | Create a value of <a>SimulationJobBatchSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_status</a> - The status of the simulation
--   job batch.
--   
--   <ul>
--   <li><i>Pending</i> The simulation job batch request is pending.</li>
--   <li><i>InProgress</i> The simulation job batch is in progress.</li>
--   <li><i>Failed</i> The simulation job batch failed. One or more
--   simulation job requests could not be completed due to an internal
--   failure (like <tt>InternalServiceError</tt>). See <tt>failureCode</tt>
--   and <tt>failureReason</tt> for more information.</li>
--   <li><i>Completed</i> The simulation batch job completed. A batch is
--   complete when (1) there are no pending simulation job requests in the
--   batch and none of the failed simulation job requests are due to
--   <tt>InternalServiceError</tt> and (2) when all created simulation jobs
--   have reached a terminal state (for example, <tt>Completed</tt> or
--   <tt>Failed</tt>).</li>
--   <li><i>Canceled</i> The simulation batch job was cancelled.</li>
--   <li><i>Canceling</i> The simulation batch job is being cancelled.</li>
--   <li><i>Completing</i> The simulation batch job is completing.</li>
--   <li><i>TimingOut</i> The simulation job batch is timing out.If a batch
--   timing out, and there are pending requests that were failing due to an
--   internal failure (like <tt>InternalServiceError</tt>), the batch
--   status will be <tt>Failed</tt>. If there are no such failing request,
--   the batch status will be <tt>TimedOut</tt>.</li>
--   <li><i>TimedOut</i> The simulation batch job timed out.</li>
--   </ul>
--   
--   <a>$sel:createdRequestCount:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_createdRequestCount</a> - The number of
--   created simulation job requests.
--   
--   <a>$sel:lastUpdatedAt:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the simulation job batch was last
--   updated.
--   
--   <a>$sel:arn:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_arn</a> - The Amazon Resource Name (ARN)
--   of the batch.
--   
--   <a>$sel:createdAt:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_createdAt</a> - The time, in milliseconds
--   since the epoch, when the simulation job batch was created.
--   
--   <a>$sel:pendingRequestCount:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_pendingRequestCount</a> - The number of
--   pending simulation job requests.
--   
--   <a>$sel:failedRequestCount:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_failedRequestCount</a> - The number of
--   failed simulation job requests.
newSimulationJobBatchSummary :: SimulationJobBatchSummary

-- | The status of the simulation job batch.
--   
--   <ul>
--   <li><i>Pending</i> The simulation job batch request is pending.</li>
--   <li><i>InProgress</i> The simulation job batch is in progress.</li>
--   <li><i>Failed</i> The simulation job batch failed. One or more
--   simulation job requests could not be completed due to an internal
--   failure (like <tt>InternalServiceError</tt>). See <tt>failureCode</tt>
--   and <tt>failureReason</tt> for more information.</li>
--   <li><i>Completed</i> The simulation batch job completed. A batch is
--   complete when (1) there are no pending simulation job requests in the
--   batch and none of the failed simulation job requests are due to
--   <tt>InternalServiceError</tt> and (2) when all created simulation jobs
--   have reached a terminal state (for example, <tt>Completed</tt> or
--   <tt>Failed</tt>).</li>
--   <li><i>Canceled</i> The simulation batch job was cancelled.</li>
--   <li><i>Canceling</i> The simulation batch job is being cancelled.</li>
--   <li><i>Completing</i> The simulation batch job is completing.</li>
--   <li><i>TimingOut</i> The simulation job batch is timing out.If a batch
--   timing out, and there are pending requests that were failing due to an
--   internal failure (like <tt>InternalServiceError</tt>), the batch
--   status will be <tt>Failed</tt>. If there are no such failing request,
--   the batch status will be <tt>TimedOut</tt>.</li>
--   <li><i>TimedOut</i> The simulation batch job timed out.</li>
--   </ul>
simulationJobBatchSummary_status :: Lens' SimulationJobBatchSummary (Maybe SimulationJobBatchStatus)

-- | The number of created simulation job requests.
simulationJobBatchSummary_createdRequestCount :: Lens' SimulationJobBatchSummary (Maybe Int)

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch was last updated.
simulationJobBatchSummary_lastUpdatedAt :: Lens' SimulationJobBatchSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the batch.
simulationJobBatchSummary_arn :: Lens' SimulationJobBatchSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch was created.
simulationJobBatchSummary_createdAt :: Lens' SimulationJobBatchSummary (Maybe UTCTime)

-- | The number of pending simulation job requests.
simulationJobBatchSummary_pendingRequestCount :: Lens' SimulationJobBatchSummary (Maybe Int)

-- | The number of failed simulation job requests.
simulationJobBatchSummary_failedRequestCount :: Lens' SimulationJobBatchSummary (Maybe Int)

-- | Information about a simulation job request.
--   
--   <i>See:</i> <a>newSimulationJobRequest</a> smart constructor.
data SimulationJobRequest
SimulationJobRequest' :: Maybe FailureBehavior -> Maybe (NonEmpty RobotApplicationConfig) -> Maybe Compute -> Maybe (NonEmpty DataSourceConfig) -> Maybe Bool -> Maybe VPCConfig -> Maybe OutputLocation -> Maybe (NonEmpty SimulationApplicationConfig) -> Maybe LoggingConfig -> Maybe Text -> Maybe (HashMap Text Text) -> Integer -> SimulationJobRequest

-- | The failure behavior the simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the host running for its maximum timeout
--   duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
[$sel:failureBehavior:SimulationJobRequest'] :: SimulationJobRequest -> Maybe FailureBehavior

-- | The robot applications to use in the simulation job.
[$sel:robotApplications:SimulationJobRequest'] :: SimulationJobRequest -> Maybe (NonEmpty RobotApplicationConfig)

-- | Compute information for the simulation job
[$sel:compute:SimulationJobRequest'] :: SimulationJobRequest -> Maybe Compute

-- | Specify data sources to mount read-only files from S3 into your
--   simulation. These files are available under
--   <tt>/opt/robomaker/datasources/data_source_name</tt>.
--   
--   There is a limit of 100 files and a combined size of 25GB for all
--   <tt>DataSourceConfig</tt> objects.
[$sel:dataSources:SimulationJobRequest'] :: SimulationJobRequest -> Maybe (NonEmpty DataSourceConfig)

-- | A Boolean indicating whether to use default applications in the
--   simulation job. Default applications include Gazebo, rqt, rviz and
--   terminal access.
[$sel:useDefaultApplications:SimulationJobRequest'] :: SimulationJobRequest -> Maybe Bool
[$sel:vpcConfig:SimulationJobRequest'] :: SimulationJobRequest -> Maybe VPCConfig
[$sel:outputLocation:SimulationJobRequest'] :: SimulationJobRequest -> Maybe OutputLocation

-- | The simulation applications to use in the simulation job.
[$sel:simulationApplications:SimulationJobRequest'] :: SimulationJobRequest -> Maybe (NonEmpty SimulationApplicationConfig)
[$sel:loggingConfig:SimulationJobRequest'] :: SimulationJobRequest -> Maybe LoggingConfig

-- | The IAM role name that allows the simulation instance to call the AWS
--   APIs that are specified in its associated policies on your behalf.
--   This is how credentials are passed in to your simulation job.
[$sel:iamRole:SimulationJobRequest'] :: SimulationJobRequest -> Maybe Text

-- | A map that contains tag keys and tag values that are attached to the
--   simulation job request.
[$sel:tags:SimulationJobRequest'] :: SimulationJobRequest -> Maybe (HashMap Text Text)

-- | The maximum simulation job duration in seconds. The value must be 8
--   days (691,200 seconds) or less.
[$sel:maxJobDurationInSeconds:SimulationJobRequest'] :: SimulationJobRequest -> Integer

-- | Create a value of <a>SimulationJobRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureBehavior:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_failureBehavior</a> - The failure behavior the
--   simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the host running for its maximum timeout
--   duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
--   
--   <a>$sel:robotApplications:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_robotApplications</a> - The robot applications
--   to use in the simulation job.
--   
--   <a>$sel:compute:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_compute</a> - Compute information for the
--   simulation job
--   
--   <a>$sel:dataSources:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_dataSources</a> - Specify data sources to
--   mount read-only files from S3 into your simulation. These files are
--   available under <tt>/opt/robomaker/datasources/data_source_name</tt>.
--   
--   There is a limit of 100 files and a combined size of 25GB for all
--   <tt>DataSourceConfig</tt> objects.
--   
--   <a>$sel:useDefaultApplications:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_useDefaultApplications</a> - A Boolean
--   indicating whether to use default applications in the simulation job.
--   Default applications include Gazebo, rqt, rviz and terminal access.
--   
--   <a>$sel:vpcConfig:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_vpcConfig</a> - Undocumented member.
--   
--   <a>$sel:outputLocation:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_outputLocation</a> - Undocumented member.
--   
--   <a>$sel:simulationApplications:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_simulationApplications</a> - The simulation
--   applications to use in the simulation job.
--   
--   <a>$sel:loggingConfig:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_loggingConfig</a> - Undocumented member.
--   
--   <a>$sel:iamRole:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_iamRole</a> - The IAM role name that allows
--   the simulation instance to call the AWS APIs that are specified in its
--   associated policies on your behalf. This is how credentials are passed
--   in to your simulation job.
--   
--   <a>$sel:tags:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_tags</a> - A map that contains tag keys and
--   tag values that are attached to the simulation job request.
--   
--   <a>$sel:maxJobDurationInSeconds:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_maxJobDurationInSeconds</a> - The maximum
--   simulation job duration in seconds. The value must be 8 days (691,200
--   seconds) or less.
newSimulationJobRequest :: Integer -> SimulationJobRequest

-- | The failure behavior the simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the host running for its maximum timeout
--   duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
simulationJobRequest_failureBehavior :: Lens' SimulationJobRequest (Maybe FailureBehavior)

-- | The robot applications to use in the simulation job.
simulationJobRequest_robotApplications :: Lens' SimulationJobRequest (Maybe (NonEmpty RobotApplicationConfig))

-- | Compute information for the simulation job
simulationJobRequest_compute :: Lens' SimulationJobRequest (Maybe Compute)

-- | Specify data sources to mount read-only files from S3 into your
--   simulation. These files are available under
--   <tt>/opt/robomaker/datasources/data_source_name</tt>.
--   
--   There is a limit of 100 files and a combined size of 25GB for all
--   <tt>DataSourceConfig</tt> objects.
simulationJobRequest_dataSources :: Lens' SimulationJobRequest (Maybe (NonEmpty DataSourceConfig))

-- | A Boolean indicating whether to use default applications in the
--   simulation job. Default applications include Gazebo, rqt, rviz and
--   terminal access.
simulationJobRequest_useDefaultApplications :: Lens' SimulationJobRequest (Maybe Bool)

-- | Undocumented member.
simulationJobRequest_vpcConfig :: Lens' SimulationJobRequest (Maybe VPCConfig)

-- | Undocumented member.
simulationJobRequest_outputLocation :: Lens' SimulationJobRequest (Maybe OutputLocation)

-- | The simulation applications to use in the simulation job.
simulationJobRequest_simulationApplications :: Lens' SimulationJobRequest (Maybe (NonEmpty SimulationApplicationConfig))

-- | Undocumented member.
simulationJobRequest_loggingConfig :: Lens' SimulationJobRequest (Maybe LoggingConfig)

-- | The IAM role name that allows the simulation instance to call the AWS
--   APIs that are specified in its associated policies on your behalf.
--   This is how credentials are passed in to your simulation job.
simulationJobRequest_iamRole :: Lens' SimulationJobRequest (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   simulation job request.
simulationJobRequest_tags :: Lens' SimulationJobRequest (Maybe (HashMap Text Text))

-- | The maximum simulation job duration in seconds. The value must be 8
--   days (691,200 seconds) or less.
simulationJobRequest_maxJobDurationInSeconds :: Lens' SimulationJobRequest Integer

-- | Summary information for a simulation job.
--   
--   <i>See:</i> <a>newSimulationJobSummary</a> smart constructor.
data SimulationJobSummary
SimulationJobSummary' :: Maybe SimulationJobStatus -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe ComputeType -> Maybe [Text] -> SimulationJobSummary

-- | The status of the simulation job.
[$sel:status:SimulationJobSummary'] :: SimulationJobSummary -> Maybe SimulationJobStatus

-- | A list of simulation job robot application names.
[$sel:robotApplicationNames:SimulationJobSummary'] :: SimulationJobSummary -> Maybe [Text]

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last updated.
[$sel:lastUpdatedAt:SimulationJobSummary'] :: SimulationJobSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the simulation job.
[$sel:arn:SimulationJobSummary'] :: SimulationJobSummary -> Maybe Text

-- | The name of the simulation job.
[$sel:name:SimulationJobSummary'] :: SimulationJobSummary -> Maybe Text

-- | A list of simulation job simulation application names.
[$sel:simulationApplicationNames:SimulationJobSummary'] :: SimulationJobSummary -> Maybe [Text]

-- | The compute type for the simulation job summary.
[$sel:computeType:SimulationJobSummary'] :: SimulationJobSummary -> Maybe ComputeType

-- | The names of the data sources.
[$sel:dataSourceNames:SimulationJobSummary'] :: SimulationJobSummary -> Maybe [Text]

-- | Create a value of <a>SimulationJobSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_status</a> - The status of the simulation job.
--   
--   <a>$sel:robotApplicationNames:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_robotApplicationNames</a> - A list of
--   simulation job robot application names.
--   
--   <a>$sel:lastUpdatedAt:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_lastUpdatedAt</a> - The time, in milliseconds
--   since the epoch, when the simulation job was last updated.
--   
--   <a>$sel:arn:SimulationJobSummary'</a>, <a>simulationJobSummary_arn</a>
--   - The Amazon Resource Name (ARN) of the simulation job.
--   
--   <a>$sel:name:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_name</a> - The name of the simulation job.
--   
--   <a>$sel:simulationApplicationNames:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_simulationApplicationNames</a> - A list of
--   simulation job simulation application names.
--   
--   <a>$sel:computeType:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_computeType</a> - The compute type for the
--   simulation job summary.
--   
--   <a>$sel:dataSourceNames:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_dataSourceNames</a> - The names of the data
--   sources.
newSimulationJobSummary :: SimulationJobSummary

-- | The status of the simulation job.
simulationJobSummary_status :: Lens' SimulationJobSummary (Maybe SimulationJobStatus)

-- | A list of simulation job robot application names.
simulationJobSummary_robotApplicationNames :: Lens' SimulationJobSummary (Maybe [Text])

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last updated.
simulationJobSummary_lastUpdatedAt :: Lens' SimulationJobSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the simulation job.
simulationJobSummary_arn :: Lens' SimulationJobSummary (Maybe Text)

-- | The name of the simulation job.
simulationJobSummary_name :: Lens' SimulationJobSummary (Maybe Text)

-- | A list of simulation job simulation application names.
simulationJobSummary_simulationApplicationNames :: Lens' SimulationJobSummary (Maybe [Text])

-- | The compute type for the simulation job summary.
simulationJobSummary_computeType :: Lens' SimulationJobSummary (Maybe ComputeType)

-- | The names of the data sources.
simulationJobSummary_dataSourceNames :: Lens' SimulationJobSummary (Maybe [Text])

-- | Information about a simulation software suite.
--   
--   <i>See:</i> <a>newSimulationSoftwareSuite</a> smart constructor.
data SimulationSoftwareSuite
SimulationSoftwareSuite' :: Maybe SimulationSoftwareSuiteType -> Maybe Text -> SimulationSoftwareSuite

-- | The name of the simulation software suite.
[$sel:name:SimulationSoftwareSuite'] :: SimulationSoftwareSuite -> Maybe SimulationSoftwareSuiteType

-- | The version of the simulation software suite.
[$sel:version:SimulationSoftwareSuite'] :: SimulationSoftwareSuite -> Maybe Text

-- | Create a value of <a>SimulationSoftwareSuite</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:SimulationSoftwareSuite'</a>,
--   <a>simulationSoftwareSuite_name</a> - The name of the simulation
--   software suite.
--   
--   <a>$sel:version:SimulationSoftwareSuite'</a>,
--   <a>simulationSoftwareSuite_version</a> - The version of the simulation
--   software suite.
newSimulationSoftwareSuite :: SimulationSoftwareSuite

-- | The name of the simulation software suite.
simulationSoftwareSuite_name :: Lens' SimulationSoftwareSuite (Maybe SimulationSoftwareSuiteType)

-- | The version of the simulation software suite.
simulationSoftwareSuite_version :: Lens' SimulationSoftwareSuite (Maybe Text)

-- | Information about a source.
--   
--   <i>See:</i> <a>newSource</a> smart constructor.
data Source
Source' :: Maybe Text -> Maybe Text -> Maybe Architecture -> Maybe Text -> Source

-- | A hash of the object specified by <tt>s3Bucket</tt> and
--   <tt>s3Key</tt>.
[$sel:etag:Source'] :: Source -> Maybe Text

-- | The s3 object key.
[$sel:s3Key:Source'] :: Source -> Maybe Text

-- | The taget processor architecture for the application.
[$sel:architecture:Source'] :: Source -> Maybe Architecture

-- | The s3 bucket name.
[$sel:s3Bucket:Source'] :: Source -> Maybe Text

-- | Create a value of <a>Source</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:etag:Source'</a>, <a>source_etag</a> - A hash of the object
--   specified by <tt>s3Bucket</tt> and <tt>s3Key</tt>.
--   
--   <a>$sel:s3Key:Source'</a>, <a>source_s3Key</a> - The s3 object key.
--   
--   <a>$sel:architecture:Source'</a>, <a>source_architecture</a> - The
--   taget processor architecture for the application.
--   
--   <a>$sel:s3Bucket:Source'</a>, <a>source_s3Bucket</a> - The s3 bucket
--   name.
newSource :: Source

-- | A hash of the object specified by <tt>s3Bucket</tt> and
--   <tt>s3Key</tt>.
source_etag :: Lens' Source (Maybe Text)

-- | The s3 object key.
source_s3Key :: Lens' Source (Maybe Text)

-- | The taget processor architecture for the application.
source_architecture :: Lens' Source (Maybe Architecture)

-- | The s3 bucket name.
source_s3Bucket :: Lens' Source (Maybe Text)

-- | Information about a source configuration.
--   
--   <i>See:</i> <a>newSourceConfig</a> smart constructor.
data SourceConfig
SourceConfig' :: Maybe Text -> Maybe Architecture -> Maybe Text -> SourceConfig

-- | The s3 object key.
[$sel:s3Key:SourceConfig'] :: SourceConfig -> Maybe Text

-- | The target processor architecture for the application.
[$sel:architecture:SourceConfig'] :: SourceConfig -> Maybe Architecture

-- | The Amazon S3 bucket name.
[$sel:s3Bucket:SourceConfig'] :: SourceConfig -> Maybe Text

-- | Create a value of <a>SourceConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Key:SourceConfig'</a>, <a>sourceConfig_s3Key</a> - The s3
--   object key.
--   
--   <a>$sel:architecture:SourceConfig'</a>,
--   <a>sourceConfig_architecture</a> - The target processor architecture
--   for the application.
--   
--   <a>$sel:s3Bucket:SourceConfig'</a>, <a>sourceConfig_s3Bucket</a> - The
--   Amazon S3 bucket name.
newSourceConfig :: SourceConfig

-- | The s3 object key.
sourceConfig_s3Key :: Lens' SourceConfig (Maybe Text)

-- | The target processor architecture for the application.
sourceConfig_architecture :: Lens' SourceConfig (Maybe Architecture)

-- | The Amazon S3 bucket name.
sourceConfig_s3Bucket :: Lens' SourceConfig (Maybe Text)

-- | Information about a template location.
--   
--   <i>See:</i> <a>newTemplateLocation</a> smart constructor.
data TemplateLocation
TemplateLocation' :: Text -> Text -> TemplateLocation

-- | The Amazon S3 bucket name.
[$sel:s3Bucket:TemplateLocation'] :: TemplateLocation -> Text

-- | The list of S3 keys identifying the data source files.
[$sel:s3Key:TemplateLocation'] :: TemplateLocation -> Text

-- | Create a value of <a>TemplateLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Bucket:TemplateLocation'</a>,
--   <a>templateLocation_s3Bucket</a> - The Amazon S3 bucket name.
--   
--   <a>$sel:s3Key:TemplateLocation'</a>, <a>templateLocation_s3Key</a> -
--   The list of S3 keys identifying the data source files.
newTemplateLocation :: Text -> Text -> TemplateLocation

-- | The Amazon S3 bucket name.
templateLocation_s3Bucket :: Lens' TemplateLocation Text

-- | The list of S3 keys identifying the data source files.
templateLocation_s3Key :: Lens' TemplateLocation Text

-- | Summary information for a template.
--   
--   <i>See:</i> <a>newTemplateSummary</a> smart constructor.
data TemplateSummary
TemplateSummary' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> TemplateSummary

-- | The time, in milliseconds since the epoch, when the template was last
--   updated.
[$sel:lastUpdatedAt:TemplateSummary'] :: TemplateSummary -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the template.
[$sel:arn:TemplateSummary'] :: TemplateSummary -> Maybe Text

-- | The time, in milliseconds since the epoch, when the template was
--   created.
[$sel:createdAt:TemplateSummary'] :: TemplateSummary -> Maybe POSIX

-- | The name of the template.
[$sel:name:TemplateSummary'] :: TemplateSummary -> Maybe Text

-- | The version of the template that you're using.
[$sel:version:TemplateSummary'] :: TemplateSummary -> Maybe Text

-- | Create a value of <a>TemplateSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:TemplateSummary'</a>,
--   <a>templateSummary_lastUpdatedAt</a> - The time, in milliseconds since
--   the epoch, when the template was last updated.
--   
--   <a>$sel:arn:TemplateSummary'</a>, <a>templateSummary_arn</a> - The
--   Amazon Resource Name (ARN) of the template.
--   
--   <a>$sel:createdAt:TemplateSummary'</a>,
--   <a>templateSummary_createdAt</a> - The time, in milliseconds since the
--   epoch, when the template was created.
--   
--   <a>$sel:name:TemplateSummary'</a>, <a>templateSummary_name</a> - The
--   name of the template.
--   
--   <a>$sel:version:TemplateSummary'</a>, <a>templateSummary_version</a> -
--   The version of the template that you're using.
newTemplateSummary :: TemplateSummary

-- | The time, in milliseconds since the epoch, when the template was last
--   updated.
templateSummary_lastUpdatedAt :: Lens' TemplateSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the template.
templateSummary_arn :: Lens' TemplateSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, when the template was
--   created.
templateSummary_createdAt :: Lens' TemplateSummary (Maybe UTCTime)

-- | The name of the template.
templateSummary_name :: Lens' TemplateSummary (Maybe Text)

-- | The version of the template that you're using.
templateSummary_version :: Lens' TemplateSummary (Maybe Text)

-- | Information about a tool. Tools are used in a simulation job.
--   
--   <i>See:</i> <a>newTool</a> smart constructor.
data Tool
Tool' :: Maybe Bool -> Maybe ExitBehavior -> Maybe Bool -> Text -> Text -> Tool

-- | Boolean indicating whether logs will be recorded in CloudWatch for the
--   tool. The default is <tt>False</tt>.
[$sel:streamOutputToCloudWatch:Tool'] :: Tool -> Maybe Bool

-- | Exit behavior determines what happens when your tool quits running.
--   <tt>RESTART</tt> will cause your tool to be restarted. <tt>FAIL</tt>
--   will cause your job to exit. The default is <tt>RESTART</tt>.
[$sel:exitBehavior:Tool'] :: Tool -> Maybe ExitBehavior

-- | Boolean indicating whether a streaming session will be configured for
--   the tool. If <tt>True</tt>, AWS RoboMaker will configure a connection
--   so you can interact with the tool as it is running in the simulation.
--   It must have a graphical user interface. The default is
--   <tt>False</tt>.
[$sel:streamUI:Tool'] :: Tool -> Maybe Bool

-- | The name of the tool.
[$sel:name:Tool'] :: Tool -> Text

-- | Command-line arguments for the tool. It must include the tool
--   executable name.
[$sel:command:Tool'] :: Tool -> Text

-- | Create a value of <a>Tool</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamOutputToCloudWatch:Tool'</a>,
--   <a>tool_streamOutputToCloudWatch</a> - Boolean indicating whether logs
--   will be recorded in CloudWatch for the tool. The default is
--   <tt>False</tt>.
--   
--   <a>$sel:exitBehavior:Tool'</a>, <a>tool_exitBehavior</a> - Exit
--   behavior determines what happens when your tool quits running.
--   <tt>RESTART</tt> will cause your tool to be restarted. <tt>FAIL</tt>
--   will cause your job to exit. The default is <tt>RESTART</tt>.
--   
--   <a>$sel:streamUI:Tool'</a>, <a>tool_streamUI</a> - Boolean indicating
--   whether a streaming session will be configured for the tool. If
--   <tt>True</tt>, AWS RoboMaker will configure a connection so you can
--   interact with the tool as it is running in the simulation. It must
--   have a graphical user interface. The default is <tt>False</tt>.
--   
--   <a>$sel:name:Tool'</a>, <a>tool_name</a> - The name of the tool.
--   
--   <a>$sel:command:Tool'</a>, <a>tool_command</a> - Command-line
--   arguments for the tool. It must include the tool executable name.
newTool :: Text -> Text -> Tool

-- | Boolean indicating whether logs will be recorded in CloudWatch for the
--   tool. The default is <tt>False</tt>.
tool_streamOutputToCloudWatch :: Lens' Tool (Maybe Bool)

-- | Exit behavior determines what happens when your tool quits running.
--   <tt>RESTART</tt> will cause your tool to be restarted. <tt>FAIL</tt>
--   will cause your job to exit. The default is <tt>RESTART</tt>.
tool_exitBehavior :: Lens' Tool (Maybe ExitBehavior)

-- | Boolean indicating whether a streaming session will be configured for
--   the tool. If <tt>True</tt>, AWS RoboMaker will configure a connection
--   so you can interact with the tool as it is running in the simulation.
--   It must have a graphical user interface. The default is
--   <tt>False</tt>.
tool_streamUI :: Lens' Tool (Maybe Bool)

-- | The name of the tool.
tool_name :: Lens' Tool Text

-- | Command-line arguments for the tool. It must include the tool
--   executable name.
tool_command :: Lens' Tool Text

-- | Provides upload configuration information. Files are uploaded from the
--   simulation job to a location you specify.
--   
--   <i>See:</i> <a>newUploadConfiguration</a> smart constructor.
data UploadConfiguration
UploadConfiguration' :: Text -> Text -> UploadBehavior -> UploadConfiguration

-- | A prefix that specifies where files will be uploaded in Amazon S3. It
--   is appended to the simulation output location to determine the final
--   path.
--   
--   For example, if your simulation output location is
--   <tt>s3://my-bucket</tt> and your upload configuration name is
--   <tt>robot-test</tt>, your files will be uploaded to
--   <tt>s3://my-bucket/&lt;simid&gt;/&lt;runid&gt;/robot-test</tt>.
[$sel:name:UploadConfiguration'] :: UploadConfiguration -> Text

-- | Specifies the path of the file(s) to upload. Standard Unix glob
--   matching rules are accepted, with the addition of <tt>**</tt> as a
--   <i>super asterisk</i>. For example, specifying
--   <tt>/var/log/**.log</tt> causes all .log files in the
--   <tt>/var/log</tt> directory tree to be collected. For more examples,
--   see <a>Glob Library</a>.
[$sel:path:UploadConfiguration'] :: UploadConfiguration -> Text

-- | Specifies when to upload the files:
--   
--   <ul>
--   <li><i>UPLOAD_ON_TERMINATE</i> Matching files are uploaded once the
--   simulation enters the <tt>TERMINATING</tt> state. Matching files are
--   not uploaded until all of your code (including tools) have stopped.If
--   there is a problem uploading a file, the upload is retried. If
--   problems persist, no further upload attempts will be made.</li>
--   <li><i>UPLOAD_ROLLING_AUTO_REMOVE</i> Matching files are uploaded as
--   they are created. They are deleted after they are uploaded. The
--   specified path is checked every 5 seconds. A final check is made when
--   all of your code (including tools) have stopped.</li>
--   </ul>
[$sel:uploadBehavior:UploadConfiguration'] :: UploadConfiguration -> UploadBehavior

-- | Create a value of <a>UploadConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UploadConfiguration'</a>, <a>uploadConfiguration_name</a>
--   - A prefix that specifies where files will be uploaded in Amazon S3.
--   It is appended to the simulation output location to determine the
--   final path.
--   
--   For example, if your simulation output location is
--   <tt>s3://my-bucket</tt> and your upload configuration name is
--   <tt>robot-test</tt>, your files will be uploaded to
--   <tt>s3://my-bucket/&lt;simid&gt;/&lt;runid&gt;/robot-test</tt>.
--   
--   <a>$sel:path:UploadConfiguration'</a>, <a>uploadConfiguration_path</a>
--   - Specifies the path of the file(s) to upload. Standard Unix glob
--   matching rules are accepted, with the addition of <tt>**</tt> as a
--   <i>super asterisk</i>. For example, specifying
--   <tt>/var/log/**.log</tt> causes all .log files in the
--   <tt>/var/log</tt> directory tree to be collected. For more examples,
--   see <a>Glob Library</a>.
--   
--   <a>$sel:uploadBehavior:UploadConfiguration'</a>,
--   <a>uploadConfiguration_uploadBehavior</a> - Specifies when to upload
--   the files:
--   
--   <ul>
--   <li><i>UPLOAD_ON_TERMINATE</i> Matching files are uploaded once the
--   simulation enters the <tt>TERMINATING</tt> state. Matching files are
--   not uploaded until all of your code (including tools) have stopped.If
--   there is a problem uploading a file, the upload is retried. If
--   problems persist, no further upload attempts will be made.</li>
--   <li><i>UPLOAD_ROLLING_AUTO_REMOVE</i> Matching files are uploaded as
--   they are created. They are deleted after they are uploaded. The
--   specified path is checked every 5 seconds. A final check is made when
--   all of your code (including tools) have stopped.</li>
--   </ul>
newUploadConfiguration :: Text -> Text -> UploadBehavior -> UploadConfiguration

-- | A prefix that specifies where files will be uploaded in Amazon S3. It
--   is appended to the simulation output location to determine the final
--   path.
--   
--   For example, if your simulation output location is
--   <tt>s3://my-bucket</tt> and your upload configuration name is
--   <tt>robot-test</tt>, your files will be uploaded to
--   <tt>s3://my-bucket/&lt;simid&gt;/&lt;runid&gt;/robot-test</tt>.
uploadConfiguration_name :: Lens' UploadConfiguration Text

-- | Specifies the path of the file(s) to upload. Standard Unix glob
--   matching rules are accepted, with the addition of <tt>**</tt> as a
--   <i>super asterisk</i>. For example, specifying
--   <tt>/var/log/**.log</tt> causes all .log files in the
--   <tt>/var/log</tt> directory tree to be collected. For more examples,
--   see <a>Glob Library</a>.
uploadConfiguration_path :: Lens' UploadConfiguration Text

-- | Specifies when to upload the files:
--   
--   <ul>
--   <li><i>UPLOAD_ON_TERMINATE</i> Matching files are uploaded once the
--   simulation enters the <tt>TERMINATING</tt> state. Matching files are
--   not uploaded until all of your code (including tools) have stopped.If
--   there is a problem uploading a file, the upload is retried. If
--   problems persist, no further upload attempts will be made.</li>
--   <li><i>UPLOAD_ROLLING_AUTO_REMOVE</i> Matching files are uploaded as
--   they are created. They are deleted after they are uploaded. The
--   specified path is checked every 5 seconds. A final check is made when
--   all of your code (including tools) have stopped.</li>
--   </ul>
uploadConfiguration_uploadBehavior :: Lens' UploadConfiguration UploadBehavior

-- | If your simulation job accesses resources in a VPC, you provide this
--   parameter identifying the list of security group IDs and subnet IDs.
--   These must belong to the same VPC. You must provide at least one
--   security group and two subnet IDs.
--   
--   <i>See:</i> <a>newVPCConfig</a> smart constructor.
data VPCConfig
VPCConfig' :: Maybe (NonEmpty Text) -> Maybe Bool -> NonEmpty Text -> VPCConfig

-- | A list of one or more security groups IDs in your VPC.
[$sel:securityGroups:VPCConfig'] :: VPCConfig -> Maybe (NonEmpty Text)

-- | A boolean indicating whether to assign a public IP address.
[$sel:assignPublicIp:VPCConfig'] :: VPCConfig -> Maybe Bool

-- | A list of one or more subnet IDs in your VPC.
[$sel:subnets:VPCConfig'] :: VPCConfig -> NonEmpty Text

-- | Create a value of <a>VPCConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroups:VPCConfig'</a>, <a>vPCConfig_securityGroups</a>
--   - A list of one or more security groups IDs in your VPC.
--   
--   <a>$sel:assignPublicIp:VPCConfig'</a>, <a>vPCConfig_assignPublicIp</a>
--   - A boolean indicating whether to assign a public IP address.
--   
--   <a>$sel:subnets:VPCConfig'</a>, <a>vPCConfig_subnets</a> - A list of
--   one or more subnet IDs in your VPC.
newVPCConfig :: NonEmpty Text -> VPCConfig

-- | A list of one or more security groups IDs in your VPC.
vPCConfig_securityGroups :: Lens' VPCConfig (Maybe (NonEmpty Text))

-- | A boolean indicating whether to assign a public IP address.
vPCConfig_assignPublicIp :: Lens' VPCConfig (Maybe Bool)

-- | A list of one or more subnet IDs in your VPC.
vPCConfig_subnets :: Lens' VPCConfig (NonEmpty Text)

-- | VPC configuration associated with your simulation job.
--   
--   <i>See:</i> <a>newVPCConfigResponse</a> smart constructor.
data VPCConfigResponse
VPCConfigResponse' :: Maybe (NonEmpty Text) -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Bool -> VPCConfigResponse

-- | A list of security group IDs associated with the simulation job.
[$sel:securityGroups:VPCConfigResponse'] :: VPCConfigResponse -> Maybe (NonEmpty Text)

-- | The VPC ID associated with your simulation job.
[$sel:vpcId:VPCConfigResponse'] :: VPCConfigResponse -> Maybe Text

-- | A list of subnet IDs associated with the simulation job.
[$sel:subnets:VPCConfigResponse'] :: VPCConfigResponse -> Maybe (NonEmpty Text)

-- | A boolean indicating if a public IP was assigned.
[$sel:assignPublicIp:VPCConfigResponse'] :: VPCConfigResponse -> Maybe Bool

-- | Create a value of <a>VPCConfigResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroups:VPCConfigResponse'</a>,
--   <a>vPCConfigResponse_securityGroups</a> - A list of security group IDs
--   associated with the simulation job.
--   
--   <a>$sel:vpcId:VPCConfigResponse'</a>, <a>vPCConfigResponse_vpcId</a> -
--   The VPC ID associated with your simulation job.
--   
--   <a>$sel:subnets:VPCConfigResponse'</a>,
--   <a>vPCConfigResponse_subnets</a> - A list of subnet IDs associated
--   with the simulation job.
--   
--   <a>$sel:assignPublicIp:VPCConfigResponse'</a>,
--   <a>vPCConfigResponse_assignPublicIp</a> - A boolean indicating if a
--   public IP was assigned.
newVPCConfigResponse :: VPCConfigResponse

-- | A list of security group IDs associated with the simulation job.
vPCConfigResponse_securityGroups :: Lens' VPCConfigResponse (Maybe (NonEmpty Text))

-- | The VPC ID associated with your simulation job.
vPCConfigResponse_vpcId :: Lens' VPCConfigResponse (Maybe Text)

-- | A list of subnet IDs associated with the simulation job.
vPCConfigResponse_subnets :: Lens' VPCConfigResponse (Maybe (NonEmpty Text))

-- | A boolean indicating if a public IP was assigned.
vPCConfigResponse_assignPublicIp :: Lens' VPCConfigResponse (Maybe Bool)

-- | Configuration information for a world.
--   
--   <i>See:</i> <a>newWorldConfig</a> smart constructor.
data WorldConfig
WorldConfig' :: Maybe Text -> WorldConfig

-- | The world generated by Simulation WorldForge.
[$sel:world:WorldConfig'] :: WorldConfig -> Maybe Text

-- | Create a value of <a>WorldConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:world:WorldConfig'</a>, <a>worldConfig_world</a> - The world
--   generated by Simulation WorldForge.
newWorldConfig :: WorldConfig

-- | The world generated by Simulation WorldForge.
worldConfig_world :: Lens' WorldConfig (Maybe Text)

-- | The number of worlds that will be created. You can configure the
--   number of unique floorplans and the number of unique interiors for
--   each floor plan. For example, if you want 1 world with 20 unique
--   interiors, you set <tt>floorplanCount = 1</tt> and
--   <tt>interiorCountPerFloorplan = 20</tt>. This will result in 20 worlds
--   (<tt>floorplanCount</tt> * <tt>interiorCountPerFloorplan)</tt>.
--   
--   If you set <tt>floorplanCount = 4</tt> and
--   <tt>interiorCountPerFloorplan = 5</tt>, there will be 20 worlds with 5
--   unique floor plans.
--   
--   <i>See:</i> <a>newWorldCount</a> smart constructor.
data WorldCount
WorldCount' :: Maybe Int -> Maybe Int -> WorldCount

-- | The number of unique interiors per floorplan.
[$sel:interiorCountPerFloorplan:WorldCount'] :: WorldCount -> Maybe Int

-- | The number of unique floorplans.
[$sel:floorplanCount:WorldCount'] :: WorldCount -> Maybe Int

-- | Create a value of <a>WorldCount</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interiorCountPerFloorplan:WorldCount'</a>,
--   <a>worldCount_interiorCountPerFloorplan</a> - The number of unique
--   interiors per floorplan.
--   
--   <a>$sel:floorplanCount:WorldCount'</a>,
--   <a>worldCount_floorplanCount</a> - The number of unique floorplans.
newWorldCount :: WorldCount

-- | The number of unique interiors per floorplan.
worldCount_interiorCountPerFloorplan :: Lens' WorldCount (Maybe Int)

-- | The number of unique floorplans.
worldCount_floorplanCount :: Lens' WorldCount (Maybe Int)

-- | Information about a world export job.
--   
--   <i>See:</i> <a>newWorldExportJobSummary</a> smart constructor.
data WorldExportJobSummary
WorldExportJobSummary' :: Maybe WorldExportJobStatus -> Maybe Text -> Maybe POSIX -> Maybe (NonEmpty Text) -> WorldExportJobSummary

-- | The status of the world export job.
--   
--   <ul>
--   <li><i>Pending</i> The world export job request is pending.</li>
--   <li><i>Running</i> The world export job is running.</li>
--   <li><i>Completed</i> The world export job completed.</li>
--   <li><i>Failed</i> The world export job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>Canceled</i> The world export job was cancelled.</li>
--   <li><i>Canceling</i> The world export job is being cancelled.</li>
--   </ul>
[$sel:status:WorldExportJobSummary'] :: WorldExportJobSummary -> Maybe WorldExportJobStatus

-- | The Amazon Resource Name (ARN) of the world export job.
[$sel:arn:WorldExportJobSummary'] :: WorldExportJobSummary -> Maybe Text

-- | The time, in milliseconds since the epoch, when the world export job
--   was created.
[$sel:createdAt:WorldExportJobSummary'] :: WorldExportJobSummary -> Maybe POSIX

-- | A list of worlds.
[$sel:worlds:WorldExportJobSummary'] :: WorldExportJobSummary -> Maybe (NonEmpty Text)

-- | Create a value of <a>WorldExportJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:WorldExportJobSummary'</a>,
--   <a>worldExportJobSummary_status</a> - The status of the world export
--   job.
--   
--   <ul>
--   <li><i>Pending</i> The world export job request is pending.</li>
--   <li><i>Running</i> The world export job is running.</li>
--   <li><i>Completed</i> The world export job completed.</li>
--   <li><i>Failed</i> The world export job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>Canceled</i> The world export job was cancelled.</li>
--   <li><i>Canceling</i> The world export job is being cancelled.</li>
--   </ul>
--   
--   <a>$sel:arn:WorldExportJobSummary'</a>,
--   <a>worldExportJobSummary_arn</a> - The Amazon Resource Name (ARN) of
--   the world export job.
--   
--   <a>$sel:createdAt:WorldExportJobSummary'</a>,
--   <a>worldExportJobSummary_createdAt</a> - The time, in milliseconds
--   since the epoch, when the world export job was created.
--   
--   <a>$sel:worlds:WorldExportJobSummary'</a>,
--   <a>worldExportJobSummary_worlds</a> - A list of worlds.
newWorldExportJobSummary :: WorldExportJobSummary

-- | The status of the world export job.
--   
--   <ul>
--   <li><i>Pending</i> The world export job request is pending.</li>
--   <li><i>Running</i> The world export job is running.</li>
--   <li><i>Completed</i> The world export job completed.</li>
--   <li><i>Failed</i> The world export job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>Canceled</i> The world export job was cancelled.</li>
--   <li><i>Canceling</i> The world export job is being cancelled.</li>
--   </ul>
worldExportJobSummary_status :: Lens' WorldExportJobSummary (Maybe WorldExportJobStatus)

-- | The Amazon Resource Name (ARN) of the world export job.
worldExportJobSummary_arn :: Lens' WorldExportJobSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world export job
--   was created.
worldExportJobSummary_createdAt :: Lens' WorldExportJobSummary (Maybe UTCTime)

-- | A list of worlds.
worldExportJobSummary_worlds :: Lens' WorldExportJobSummary (Maybe (NonEmpty Text))

-- | Information about a failed world.
--   
--   <i>See:</i> <a>newWorldFailure</a> smart constructor.
data WorldFailure
WorldFailure' :: Maybe Text -> Maybe WorldGenerationJobErrorCode -> Maybe Int -> WorldFailure

-- | The sample reason why the world failed. World errors are aggregated. A
--   sample is used as the <tt>sampleFailureReason</tt>.
[$sel:sampleFailureReason:WorldFailure'] :: WorldFailure -> Maybe Text

-- | The failure code of the world export job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
[$sel:failureCode:WorldFailure'] :: WorldFailure -> Maybe WorldGenerationJobErrorCode

-- | The number of failed worlds.
[$sel:failureCount:WorldFailure'] :: WorldFailure -> Maybe Int

-- | Create a value of <a>WorldFailure</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sampleFailureReason:WorldFailure'</a>,
--   <a>worldFailure_sampleFailureReason</a> - The sample reason why the
--   world failed. World errors are aggregated. A sample is used as the
--   <tt>sampleFailureReason</tt>.
--   
--   <a>$sel:failureCode:WorldFailure'</a>, <a>worldFailure_failureCode</a>
--   - The failure code of the world export job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
--   
--   <a>$sel:failureCount:WorldFailure'</a>,
--   <a>worldFailure_failureCount</a> - The number of failed worlds.
newWorldFailure :: WorldFailure

-- | The sample reason why the world failed. World errors are aggregated. A
--   sample is used as the <tt>sampleFailureReason</tt>.
worldFailure_sampleFailureReason :: Lens' WorldFailure (Maybe Text)

-- | The failure code of the world export job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
worldFailure_failureCode :: Lens' WorldFailure (Maybe WorldGenerationJobErrorCode)

-- | The number of failed worlds.
worldFailure_failureCount :: Lens' WorldFailure (Maybe Int)

-- | Information about a world generator job.
--   
--   <i>See:</i> <a>newWorldGenerationJobSummary</a> smart constructor.
data WorldGenerationJobSummary
WorldGenerationJobSummary' :: Maybe WorldGenerationJobStatus -> Maybe Text -> Maybe POSIX -> Maybe WorldCount -> Maybe Int -> Maybe Int -> Maybe Text -> WorldGenerationJobSummary

-- | The status of the world generator job:
--   
--   <ul>
--   <li><i>Pending</i> The world generator job request is pending.</li>
--   <li><i>Running</i> The world generator job is running.</li>
--   <li><i>Completed</i> The world generator job completed.</li>
--   <li><i>Failed</i> The world generator job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>PartialFailed</i> Some worlds did not generate.</li>
--   <li><i>Canceled</i> The world generator job was cancelled.</li>
--   <li><i>Canceling</i> The world generator job is being cancelled.</li>
--   </ul>
[$sel:status:WorldGenerationJobSummary'] :: WorldGenerationJobSummary -> Maybe WorldGenerationJobStatus

-- | The Amazon Resource Name (ARN) of the world generator job.
[$sel:arn:WorldGenerationJobSummary'] :: WorldGenerationJobSummary -> Maybe Text

-- | The time, in milliseconds since the epoch, when the world generator
--   job was created.
[$sel:createdAt:WorldGenerationJobSummary'] :: WorldGenerationJobSummary -> Maybe POSIX

-- | Information about the world count.
[$sel:worldCount:WorldGenerationJobSummary'] :: WorldGenerationJobSummary -> Maybe WorldCount

-- | The number of worlds that were generated.
[$sel:succeededWorldCount:WorldGenerationJobSummary'] :: WorldGenerationJobSummary -> Maybe Int

-- | The number of worlds that failed.
[$sel:failedWorldCount:WorldGenerationJobSummary'] :: WorldGenerationJobSummary -> Maybe Int

-- | The Amazon Resource Name (arn) of the world template.
[$sel:template:WorldGenerationJobSummary'] :: WorldGenerationJobSummary -> Maybe Text

-- | Create a value of <a>WorldGenerationJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_status</a> - The status of the world
--   generator job:
--   
--   <ul>
--   <li><i>Pending</i> The world generator job request is pending.</li>
--   <li><i>Running</i> The world generator job is running.</li>
--   <li><i>Completed</i> The world generator job completed.</li>
--   <li><i>Failed</i> The world generator job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>PartialFailed</i> Some worlds did not generate.</li>
--   <li><i>Canceled</i> The world generator job was cancelled.</li>
--   <li><i>Canceling</i> The world generator job is being cancelled.</li>
--   </ul>
--   
--   <a>$sel:arn:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_arn</a> - The Amazon Resource Name (ARN)
--   of the world generator job.
--   
--   <a>$sel:createdAt:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_createdAt</a> - The time, in milliseconds
--   since the epoch, when the world generator job was created.
--   
--   <a>$sel:worldCount:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_worldCount</a> - Information about the
--   world count.
--   
--   <a>$sel:succeededWorldCount:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_succeededWorldCount</a> - The number of
--   worlds that were generated.
--   
--   <a>$sel:failedWorldCount:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_failedWorldCount</a> - The number of
--   worlds that failed.
--   
--   <a>$sel:template:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_template</a> - The Amazon Resource Name
--   (arn) of the world template.
newWorldGenerationJobSummary :: WorldGenerationJobSummary

-- | The status of the world generator job:
--   
--   <ul>
--   <li><i>Pending</i> The world generator job request is pending.</li>
--   <li><i>Running</i> The world generator job is running.</li>
--   <li><i>Completed</i> The world generator job completed.</li>
--   <li><i>Failed</i> The world generator job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>PartialFailed</i> Some worlds did not generate.</li>
--   <li><i>Canceled</i> The world generator job was cancelled.</li>
--   <li><i>Canceling</i> The world generator job is being cancelled.</li>
--   </ul>
worldGenerationJobSummary_status :: Lens' WorldGenerationJobSummary (Maybe WorldGenerationJobStatus)

-- | The Amazon Resource Name (ARN) of the world generator job.
worldGenerationJobSummary_arn :: Lens' WorldGenerationJobSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world generator
--   job was created.
worldGenerationJobSummary_createdAt :: Lens' WorldGenerationJobSummary (Maybe UTCTime)

-- | Information about the world count.
worldGenerationJobSummary_worldCount :: Lens' WorldGenerationJobSummary (Maybe WorldCount)

-- | The number of worlds that were generated.
worldGenerationJobSummary_succeededWorldCount :: Lens' WorldGenerationJobSummary (Maybe Int)

-- | The number of worlds that failed.
worldGenerationJobSummary_failedWorldCount :: Lens' WorldGenerationJobSummary (Maybe Int)

-- | The Amazon Resource Name (arn) of the world template.
worldGenerationJobSummary_template :: Lens' WorldGenerationJobSummary (Maybe Text)

-- | Information about a world.
--   
--   <i>See:</i> <a>newWorldSummary</a> smart constructor.
data WorldSummary
WorldSummary' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> WorldSummary

-- | The Amazon Resource Name (ARN) of the world.
[$sel:arn:WorldSummary'] :: WorldSummary -> Maybe Text

-- | The time, in milliseconds since the epoch, when the world was created.
[$sel:createdAt:WorldSummary'] :: WorldSummary -> Maybe POSIX

-- | The Amazon Resource Name (arn) of the world template.
[$sel:template:WorldSummary'] :: WorldSummary -> Maybe Text

-- | The Amazon Resource Name (arn) of the world generation job.
[$sel:generationJob:WorldSummary'] :: WorldSummary -> Maybe Text

-- | Create a value of <a>WorldSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:WorldSummary'</a>, <a>worldSummary_arn</a> - The Amazon
--   Resource Name (ARN) of the world.
--   
--   <a>$sel:createdAt:WorldSummary'</a>, <a>worldSummary_createdAt</a> -
--   The time, in milliseconds since the epoch, when the world was created.
--   
--   <a>$sel:template:WorldSummary'</a>, <a>worldSummary_template</a> - The
--   Amazon Resource Name (arn) of the world template.
--   
--   <a>$sel:generationJob:WorldSummary'</a>,
--   <a>worldSummary_generationJob</a> - The Amazon Resource Name (arn) of
--   the world generation job.
newWorldSummary :: WorldSummary

-- | The Amazon Resource Name (ARN) of the world.
worldSummary_arn :: Lens' WorldSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world was created.
worldSummary_createdAt :: Lens' WorldSummary (Maybe UTCTime)

-- | The Amazon Resource Name (arn) of the world template.
worldSummary_template :: Lens' WorldSummary (Maybe Text)

-- | The Amazon Resource Name (arn) of the world generation job.
worldSummary_generationJob :: Lens' WorldSummary (Maybe Text)


-- | Adds or edits tags for a AWS RoboMaker resource.
--   
--   Each tag consists of a tag key and a tag value. Tag keys and tag
--   values are both required, but tag values can be empty strings.
--   
--   For information about the rules that apply to tag keys and tag values,
--   see <a>User-Defined Tag Restrictions</a> in the <i>AWS Billing and
--   Cost Management User Guide</i>.
module Amazonka.RobOMaker.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The Amazon Resource Name (ARN) of the AWS RoboMaker resource you are
--   tagging.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | A map that contains tag keys and tag values that are attached to the
--   resource.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the AWS RoboMaker resource you are
--   tagging.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A map that
--   contains tag keys and tag values that are attached to the resource.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the AWS RoboMaker resource you are
--   tagging.
tagResource_resourceArn :: Lens' TagResource Text

-- | A map that contains tag keys and tag values that are attached to the
--   resource.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.TagResource.TagResource
instance GHC.Show.Show Amazonka.RobOMaker.TagResource.TagResource
instance GHC.Read.Read Amazonka.RobOMaker.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.RobOMaker.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.RobOMaker.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.RobOMaker.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.RobOMaker.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.RobOMaker.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.RobOMaker.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.TagResource.TagResource


-- | Syncrhonizes robots in a fleet to the latest deployment. This is
--   helpful if robots were added after a deployment.
module Amazonka.RobOMaker.SyncDeploymentJob

-- | <i>See:</i> <a>newSyncDeploymentJob</a> smart constructor.
data SyncDeploymentJob
SyncDeploymentJob' :: Text -> Text -> SyncDeploymentJob

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:SyncDeploymentJob'] :: SyncDeploymentJob -> Text

-- | The target fleet for the synchronization.
[$sel:fleet:SyncDeploymentJob'] :: SyncDeploymentJob -> Text

-- | Create a value of <a>SyncDeploymentJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:SyncDeploymentJob'</a>,
--   <a>syncDeploymentJob_clientRequestToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:fleet:SyncDeploymentJob'</a>, <a>syncDeploymentJob_fleet</a> -
--   The target fleet for the synchronization.
newSyncDeploymentJob :: Text -> Text -> SyncDeploymentJob

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
syncDeploymentJob_clientRequestToken :: Lens' SyncDeploymentJob Text

-- | The target fleet for the synchronization.
syncDeploymentJob_fleet :: Lens' SyncDeploymentJob Text

-- | <i>See:</i> <a>newSyncDeploymentJobResponse</a> smart constructor.
data SyncDeploymentJobResponse
SyncDeploymentJobResponse' :: Maybe Text -> Maybe DeploymentStatus -> Maybe (NonEmpty DeploymentApplicationConfig) -> Maybe Text -> Maybe POSIX -> Maybe DeploymentJobErrorCode -> Maybe DeploymentConfig -> Maybe Text -> Int -> SyncDeploymentJobResponse

-- | The failure reason if the job fails.
[$sel:failureReason:SyncDeploymentJobResponse'] :: SyncDeploymentJobResponse -> Maybe Text

-- | The status of the synchronization job.
[$sel:status:SyncDeploymentJobResponse'] :: SyncDeploymentJobResponse -> Maybe DeploymentStatus

-- | Information about the deployment application configurations.
[$sel:deploymentApplicationConfigs:SyncDeploymentJobResponse'] :: SyncDeploymentJobResponse -> Maybe (NonEmpty DeploymentApplicationConfig)

-- | The Amazon Resource Name (ARN) of the synchronization request.
[$sel:arn:SyncDeploymentJobResponse'] :: SyncDeploymentJobResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the fleet was created.
[$sel:createdAt:SyncDeploymentJobResponse'] :: SyncDeploymentJobResponse -> Maybe POSIX

-- | The failure code if the job fails:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>RobotApplicationCrash</i> Robot application exited
--   abnormally.</li>
--   <li><i>SimulationApplicationCrash</i> Simulation application exited
--   abnormally.</li>
--   <li><i>BadPermissionsRobotApplication</i> Robot application bundle
--   could not be downloaded.</li>
--   <li><i>BadPermissionsSimulationApplication</i> Simulation application
--   bundle could not be downloaded.</li>
--   <li><i>BadPermissionsS3Output</i> Unable to publish outputs to
--   customer-provided S3 bucket.</li>
--   <li><i>BadPermissionsCloudwatchLogs</i> Unable to publish logs to
--   customer-provided CloudWatch Logs resource.</li>
--   <li><i>SubnetIpLimitExceeded</i> Subnet IP limit exceeded.</li>
--   <li><i>ENILimitExceeded</i> ENI limit exceeded.</li>
--   <li><i>BadPermissionsUserCredentials</i> Unable to use the Role
--   provided.</li>
--   <li><i>InvalidBundleRobotApplication</i> Robot bundle cannot be
--   extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>InvalidBundleSimulationApplication</i> Simulation bundle cannot
--   be extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>RobotApplicationVersionMismatchedEtag</i> Etag for
--   RobotApplication does not match value during version creation.</li>
--   <li><i>SimulationApplicationVersionMismatchedEtag</i> Etag for
--   SimulationApplication does not match value during version
--   creation.</li>
--   </ul>
[$sel:failureCode:SyncDeploymentJobResponse'] :: SyncDeploymentJobResponse -> Maybe DeploymentJobErrorCode

-- | Information about the deployment configuration.
[$sel:deploymentConfig:SyncDeploymentJobResponse'] :: SyncDeploymentJobResponse -> Maybe DeploymentConfig

-- | The Amazon Resource Name (ARN) of the fleet.
[$sel:fleet:SyncDeploymentJobResponse'] :: SyncDeploymentJobResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:SyncDeploymentJobResponse'] :: SyncDeploymentJobResponse -> Int

-- | Create a value of <a>SyncDeploymentJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:SyncDeploymentJobResponse'</a>,
--   <a>syncDeploymentJobResponse_failureReason</a> - The failure reason if
--   the job fails.
--   
--   <a>$sel:status:SyncDeploymentJobResponse'</a>,
--   <a>syncDeploymentJobResponse_status</a> - The status of the
--   synchronization job.
--   
--   <a>$sel:deploymentApplicationConfigs:SyncDeploymentJobResponse'</a>,
--   <a>syncDeploymentJobResponse_deploymentApplicationConfigs</a> -
--   Information about the deployment application configurations.
--   
--   <a>$sel:arn:SyncDeploymentJobResponse'</a>,
--   <a>syncDeploymentJobResponse_arn</a> - The Amazon Resource Name (ARN)
--   of the synchronization request.
--   
--   <a>$sel:createdAt:SyncDeploymentJobResponse'</a>,
--   <a>syncDeploymentJobResponse_createdAt</a> - The time, in milliseconds
--   since the epoch, when the fleet was created.
--   
--   <a>$sel:failureCode:SyncDeploymentJobResponse'</a>,
--   <a>syncDeploymentJobResponse_failureCode</a> - The failure code if the
--   job fails:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>RobotApplicationCrash</i> Robot application exited
--   abnormally.</li>
--   <li><i>SimulationApplicationCrash</i> Simulation application exited
--   abnormally.</li>
--   <li><i>BadPermissionsRobotApplication</i> Robot application bundle
--   could not be downloaded.</li>
--   <li><i>BadPermissionsSimulationApplication</i> Simulation application
--   bundle could not be downloaded.</li>
--   <li><i>BadPermissionsS3Output</i> Unable to publish outputs to
--   customer-provided S3 bucket.</li>
--   <li><i>BadPermissionsCloudwatchLogs</i> Unable to publish logs to
--   customer-provided CloudWatch Logs resource.</li>
--   <li><i>SubnetIpLimitExceeded</i> Subnet IP limit exceeded.</li>
--   <li><i>ENILimitExceeded</i> ENI limit exceeded.</li>
--   <li><i>BadPermissionsUserCredentials</i> Unable to use the Role
--   provided.</li>
--   <li><i>InvalidBundleRobotApplication</i> Robot bundle cannot be
--   extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>InvalidBundleSimulationApplication</i> Simulation bundle cannot
--   be extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>RobotApplicationVersionMismatchedEtag</i> Etag for
--   RobotApplication does not match value during version creation.</li>
--   <li><i>SimulationApplicationVersionMismatchedEtag</i> Etag for
--   SimulationApplication does not match value during version
--   creation.</li>
--   </ul>
--   
--   <a>$sel:deploymentConfig:SyncDeploymentJobResponse'</a>,
--   <a>syncDeploymentJobResponse_deploymentConfig</a> - Information about
--   the deployment configuration.
--   
--   <a>$sel:fleet:SyncDeploymentJob'</a>,
--   <a>syncDeploymentJobResponse_fleet</a> - The Amazon Resource Name
--   (ARN) of the fleet.
--   
--   <a>$sel:httpStatus:SyncDeploymentJobResponse'</a>,
--   <a>syncDeploymentJobResponse_httpStatus</a> - The response's http
--   status code.
newSyncDeploymentJobResponse :: Int -> SyncDeploymentJobResponse

-- | The failure reason if the job fails.
syncDeploymentJobResponse_failureReason :: Lens' SyncDeploymentJobResponse (Maybe Text)

-- | The status of the synchronization job.
syncDeploymentJobResponse_status :: Lens' SyncDeploymentJobResponse (Maybe DeploymentStatus)

-- | Information about the deployment application configurations.
syncDeploymentJobResponse_deploymentApplicationConfigs :: Lens' SyncDeploymentJobResponse (Maybe (NonEmpty DeploymentApplicationConfig))

-- | The Amazon Resource Name (ARN) of the synchronization request.
syncDeploymentJobResponse_arn :: Lens' SyncDeploymentJobResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the fleet was created.
syncDeploymentJobResponse_createdAt :: Lens' SyncDeploymentJobResponse (Maybe UTCTime)

-- | The failure code if the job fails:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>RobotApplicationCrash</i> Robot application exited
--   abnormally.</li>
--   <li><i>SimulationApplicationCrash</i> Simulation application exited
--   abnormally.</li>
--   <li><i>BadPermissionsRobotApplication</i> Robot application bundle
--   could not be downloaded.</li>
--   <li><i>BadPermissionsSimulationApplication</i> Simulation application
--   bundle could not be downloaded.</li>
--   <li><i>BadPermissionsS3Output</i> Unable to publish outputs to
--   customer-provided S3 bucket.</li>
--   <li><i>BadPermissionsCloudwatchLogs</i> Unable to publish logs to
--   customer-provided CloudWatch Logs resource.</li>
--   <li><i>SubnetIpLimitExceeded</i> Subnet IP limit exceeded.</li>
--   <li><i>ENILimitExceeded</i> ENI limit exceeded.</li>
--   <li><i>BadPermissionsUserCredentials</i> Unable to use the Role
--   provided.</li>
--   <li><i>InvalidBundleRobotApplication</i> Robot bundle cannot be
--   extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>InvalidBundleSimulationApplication</i> Simulation bundle cannot
--   be extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>RobotApplicationVersionMismatchedEtag</i> Etag for
--   RobotApplication does not match value during version creation.</li>
--   <li><i>SimulationApplicationVersionMismatchedEtag</i> Etag for
--   SimulationApplication does not match value during version
--   creation.</li>
--   </ul>
syncDeploymentJobResponse_failureCode :: Lens' SyncDeploymentJobResponse (Maybe DeploymentJobErrorCode)

-- | Information about the deployment configuration.
syncDeploymentJobResponse_deploymentConfig :: Lens' SyncDeploymentJobResponse (Maybe DeploymentConfig)

-- | The Amazon Resource Name (ARN) of the fleet.
syncDeploymentJobResponse_fleet :: Lens' SyncDeploymentJobResponse (Maybe Text)

-- | The response's http status code.
syncDeploymentJobResponse_httpStatus :: Lens' SyncDeploymentJobResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.SyncDeploymentJob.SyncDeploymentJob
instance GHC.Show.Show Amazonka.RobOMaker.SyncDeploymentJob.SyncDeploymentJob
instance GHC.Read.Read Amazonka.RobOMaker.SyncDeploymentJob.SyncDeploymentJob
instance GHC.Classes.Eq Amazonka.RobOMaker.SyncDeploymentJob.SyncDeploymentJob
instance GHC.Generics.Generic Amazonka.RobOMaker.SyncDeploymentJob.SyncDeploymentJobResponse
instance GHC.Show.Show Amazonka.RobOMaker.SyncDeploymentJob.SyncDeploymentJobResponse
instance GHC.Read.Read Amazonka.RobOMaker.SyncDeploymentJob.SyncDeploymentJobResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.SyncDeploymentJob.SyncDeploymentJobResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.SyncDeploymentJob.SyncDeploymentJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.SyncDeploymentJob.SyncDeploymentJobResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.SyncDeploymentJob.SyncDeploymentJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.SyncDeploymentJob.SyncDeploymentJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.SyncDeploymentJob.SyncDeploymentJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.SyncDeploymentJob.SyncDeploymentJob
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.SyncDeploymentJob.SyncDeploymentJob
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.SyncDeploymentJob.SyncDeploymentJob


-- | Starts a new simulation job batch. The batch is defined using one or
--   more <tt>SimulationJobRequest</tt> objects.
module Amazonka.RobOMaker.StartSimulationJobBatch

-- | <i>See:</i> <a>newStartSimulationJobBatch</a> smart constructor.
data StartSimulationJobBatch
StartSimulationJobBatch' :: Maybe BatchPolicy -> Maybe Text -> Maybe (HashMap Text Text) -> NonEmpty SimulationJobRequest -> StartSimulationJobBatch

-- | The batch policy.
[$sel:batchPolicy:StartSimulationJobBatch'] :: StartSimulationJobBatch -> Maybe BatchPolicy

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:StartSimulationJobBatch'] :: StartSimulationJobBatch -> Maybe Text

-- | A map that contains tag keys and tag values that are attached to the
--   deployment job batch.
[$sel:tags:StartSimulationJobBatch'] :: StartSimulationJobBatch -> Maybe (HashMap Text Text)

-- | A list of simulation job requests to create in the batch.
[$sel:createSimulationJobRequests:StartSimulationJobBatch'] :: StartSimulationJobBatch -> NonEmpty SimulationJobRequest

-- | Create a value of <a>StartSimulationJobBatch</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPolicy:StartSimulationJobBatch'</a>,
--   <a>startSimulationJobBatch_batchPolicy</a> - The batch policy.
--   
--   <a>$sel:clientRequestToken:StartSimulationJobBatch'</a>,
--   <a>startSimulationJobBatch_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:tags:StartSimulationJobBatch'</a>,
--   <a>startSimulationJobBatch_tags</a> - A map that contains tag keys and
--   tag values that are attached to the deployment job batch.
--   
--   <a>$sel:createSimulationJobRequests:StartSimulationJobBatch'</a>,
--   <a>startSimulationJobBatch_createSimulationJobRequests</a> - A list of
--   simulation job requests to create in the batch.
newStartSimulationJobBatch :: NonEmpty SimulationJobRequest -> StartSimulationJobBatch

-- | The batch policy.
startSimulationJobBatch_batchPolicy :: Lens' StartSimulationJobBatch (Maybe BatchPolicy)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
startSimulationJobBatch_clientRequestToken :: Lens' StartSimulationJobBatch (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   deployment job batch.
startSimulationJobBatch_tags :: Lens' StartSimulationJobBatch (Maybe (HashMap Text Text))

-- | A list of simulation job requests to create in the batch.
startSimulationJobBatch_createSimulationJobRequests :: Lens' StartSimulationJobBatch (NonEmpty SimulationJobRequest)

-- | <i>See:</i> <a>newStartSimulationJobBatchResponse</a> smart
--   constructor.
data StartSimulationJobBatchResponse
StartSimulationJobBatchResponse' :: Maybe Text -> Maybe SimulationJobBatchStatus -> Maybe Text -> Maybe POSIX -> Maybe SimulationJobBatchErrorCode -> Maybe [FailedCreateSimulationJobRequest] -> Maybe BatchPolicy -> Maybe [SimulationJobSummary] -> Maybe (NonEmpty SimulationJobRequest) -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> StartSimulationJobBatchResponse

-- | The reason the simulation job batch failed.
[$sel:failureReason:StartSimulationJobBatchResponse'] :: StartSimulationJobBatchResponse -> Maybe Text

-- | The status of the simulation job batch.
--   
--   <ul>
--   <li><i>Pending</i> The simulation job batch request is pending.</li>
--   <li><i>InProgress</i> The simulation job batch is in progress.</li>
--   <li><i>Failed</i> The simulation job batch failed. One or more
--   simulation job requests could not be completed due to an internal
--   failure (like <tt>InternalServiceError</tt>). See <tt>failureCode</tt>
--   and <tt>failureReason</tt> for more information.</li>
--   <li><i>Completed</i> The simulation batch job completed. A batch is
--   complete when (1) there are no pending simulation job requests in the
--   batch and none of the failed simulation job requests are due to
--   <tt>InternalServiceError</tt> and (2) when all created simulation jobs
--   have reached a terminal state (for example, <tt>Completed</tt> or
--   <tt>Failed</tt>).</li>
--   <li><i>Canceled</i> The simulation batch job was cancelled.</li>
--   <li><i>Canceling</i> The simulation batch job is being cancelled.</li>
--   <li><i>Completing</i> The simulation batch job is completing.</li>
--   <li><i>TimingOut</i> The simulation job batch is timing out.If a batch
--   timing out, and there are pending requests that were failing due to an
--   internal failure (like <tt>InternalServiceError</tt>), the batch
--   status will be <tt>Failed</tt>. If there are no such failing request,
--   the batch status will be <tt>TimedOut</tt>.</li>
--   <li><i>TimedOut</i> The simulation batch job timed out.</li>
--   </ul>
[$sel:status:StartSimulationJobBatchResponse'] :: StartSimulationJobBatchResponse -> Maybe SimulationJobBatchStatus

-- | The Amazon Resource Name (arn) of the batch.
[$sel:arn:StartSimulationJobBatchResponse'] :: StartSimulationJobBatchResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch was created.
[$sel:createdAt:StartSimulationJobBatchResponse'] :: StartSimulationJobBatchResponse -> Maybe POSIX

-- | The failure code if the simulation job batch failed.
[$sel:failureCode:StartSimulationJobBatchResponse'] :: StartSimulationJobBatchResponse -> Maybe SimulationJobBatchErrorCode

-- | A list of failed simulation job requests. The request failed to be
--   created into a simulation job. Failed requests do not have a
--   simulation job ID.
[$sel:failedRequests:StartSimulationJobBatchResponse'] :: StartSimulationJobBatchResponse -> Maybe [FailedCreateSimulationJobRequest]

-- | The batch policy.
[$sel:batchPolicy:StartSimulationJobBatchResponse'] :: StartSimulationJobBatchResponse -> Maybe BatchPolicy

-- | A list of created simulation job request summaries.
[$sel:createdRequests:StartSimulationJobBatchResponse'] :: StartSimulationJobBatchResponse -> Maybe [SimulationJobSummary]

-- | A list of pending simulation job requests. These requests have not yet
--   been created into simulation jobs.
[$sel:pendingRequests:StartSimulationJobBatchResponse'] :: StartSimulationJobBatchResponse -> Maybe (NonEmpty SimulationJobRequest)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:StartSimulationJobBatchResponse'] :: StartSimulationJobBatchResponse -> Maybe Text

-- | A map that contains tag keys and tag values that are attached to the
--   deployment job batch.
[$sel:tags:StartSimulationJobBatchResponse'] :: StartSimulationJobBatchResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:StartSimulationJobBatchResponse'] :: StartSimulationJobBatchResponse -> Int

-- | Create a value of <a>StartSimulationJobBatchResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:StartSimulationJobBatchResponse'</a>,
--   <a>startSimulationJobBatchResponse_failureReason</a> - The reason the
--   simulation job batch failed.
--   
--   <a>$sel:status:StartSimulationJobBatchResponse'</a>,
--   <a>startSimulationJobBatchResponse_status</a> - The status of the
--   simulation job batch.
--   
--   <ul>
--   <li><i>Pending</i> The simulation job batch request is pending.</li>
--   <li><i>InProgress</i> The simulation job batch is in progress.</li>
--   <li><i>Failed</i> The simulation job batch failed. One or more
--   simulation job requests could not be completed due to an internal
--   failure (like <tt>InternalServiceError</tt>). See <tt>failureCode</tt>
--   and <tt>failureReason</tt> for more information.</li>
--   <li><i>Completed</i> The simulation batch job completed. A batch is
--   complete when (1) there are no pending simulation job requests in the
--   batch and none of the failed simulation job requests are due to
--   <tt>InternalServiceError</tt> and (2) when all created simulation jobs
--   have reached a terminal state (for example, <tt>Completed</tt> or
--   <tt>Failed</tt>).</li>
--   <li><i>Canceled</i> The simulation batch job was cancelled.</li>
--   <li><i>Canceling</i> The simulation batch job is being cancelled.</li>
--   <li><i>Completing</i> The simulation batch job is completing.</li>
--   <li><i>TimingOut</i> The simulation job batch is timing out.If a batch
--   timing out, and there are pending requests that were failing due to an
--   internal failure (like <tt>InternalServiceError</tt>), the batch
--   status will be <tt>Failed</tt>. If there are no such failing request,
--   the batch status will be <tt>TimedOut</tt>.</li>
--   <li><i>TimedOut</i> The simulation batch job timed out.</li>
--   </ul>
--   
--   <a>$sel:arn:StartSimulationJobBatchResponse'</a>,
--   <a>startSimulationJobBatchResponse_arn</a> - The Amazon Resource Name
--   (arn) of the batch.
--   
--   <a>$sel:createdAt:StartSimulationJobBatchResponse'</a>,
--   <a>startSimulationJobBatchResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the simulation job batch was
--   created.
--   
--   <a>$sel:failureCode:StartSimulationJobBatchResponse'</a>,
--   <a>startSimulationJobBatchResponse_failureCode</a> - The failure code
--   if the simulation job batch failed.
--   
--   <a>$sel:failedRequests:StartSimulationJobBatchResponse'</a>,
--   <a>startSimulationJobBatchResponse_failedRequests</a> - A list of
--   failed simulation job requests. The request failed to be created into
--   a simulation job. Failed requests do not have a simulation job ID.
--   
--   <a>$sel:batchPolicy:StartSimulationJobBatch'</a>,
--   <a>startSimulationJobBatchResponse_batchPolicy</a> - The batch policy.
--   
--   <a>$sel:createdRequests:StartSimulationJobBatchResponse'</a>,
--   <a>startSimulationJobBatchResponse_createdRequests</a> - A list of
--   created simulation job request summaries.
--   
--   <a>$sel:pendingRequests:StartSimulationJobBatchResponse'</a>,
--   <a>startSimulationJobBatchResponse_pendingRequests</a> - A list of
--   pending simulation job requests. These requests have not yet been
--   created into simulation jobs.
--   
--   <a>$sel:clientRequestToken:StartSimulationJobBatch'</a>,
--   <a>startSimulationJobBatchResponse_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:tags:StartSimulationJobBatch'</a>,
--   <a>startSimulationJobBatchResponse_tags</a> - A map that contains tag
--   keys and tag values that are attached to the deployment job batch.
--   
--   <a>$sel:httpStatus:StartSimulationJobBatchResponse'</a>,
--   <a>startSimulationJobBatchResponse_httpStatus</a> - The response's
--   http status code.
newStartSimulationJobBatchResponse :: Int -> StartSimulationJobBatchResponse

-- | The reason the simulation job batch failed.
startSimulationJobBatchResponse_failureReason :: Lens' StartSimulationJobBatchResponse (Maybe Text)

-- | The status of the simulation job batch.
--   
--   <ul>
--   <li><i>Pending</i> The simulation job batch request is pending.</li>
--   <li><i>InProgress</i> The simulation job batch is in progress.</li>
--   <li><i>Failed</i> The simulation job batch failed. One or more
--   simulation job requests could not be completed due to an internal
--   failure (like <tt>InternalServiceError</tt>). See <tt>failureCode</tt>
--   and <tt>failureReason</tt> for more information.</li>
--   <li><i>Completed</i> The simulation batch job completed. A batch is
--   complete when (1) there are no pending simulation job requests in the
--   batch and none of the failed simulation job requests are due to
--   <tt>InternalServiceError</tt> and (2) when all created simulation jobs
--   have reached a terminal state (for example, <tt>Completed</tt> or
--   <tt>Failed</tt>).</li>
--   <li><i>Canceled</i> The simulation batch job was cancelled.</li>
--   <li><i>Canceling</i> The simulation batch job is being cancelled.</li>
--   <li><i>Completing</i> The simulation batch job is completing.</li>
--   <li><i>TimingOut</i> The simulation job batch is timing out.If a batch
--   timing out, and there are pending requests that were failing due to an
--   internal failure (like <tt>InternalServiceError</tt>), the batch
--   status will be <tt>Failed</tt>. If there are no such failing request,
--   the batch status will be <tt>TimedOut</tt>.</li>
--   <li><i>TimedOut</i> The simulation batch job timed out.</li>
--   </ul>
startSimulationJobBatchResponse_status :: Lens' StartSimulationJobBatchResponse (Maybe SimulationJobBatchStatus)

-- | The Amazon Resource Name (arn) of the batch.
startSimulationJobBatchResponse_arn :: Lens' StartSimulationJobBatchResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch was created.
startSimulationJobBatchResponse_createdAt :: Lens' StartSimulationJobBatchResponse (Maybe UTCTime)

-- | The failure code if the simulation job batch failed.
startSimulationJobBatchResponse_failureCode :: Lens' StartSimulationJobBatchResponse (Maybe SimulationJobBatchErrorCode)

-- | A list of failed simulation job requests. The request failed to be
--   created into a simulation job. Failed requests do not have a
--   simulation job ID.
startSimulationJobBatchResponse_failedRequests :: Lens' StartSimulationJobBatchResponse (Maybe [FailedCreateSimulationJobRequest])

-- | The batch policy.
startSimulationJobBatchResponse_batchPolicy :: Lens' StartSimulationJobBatchResponse (Maybe BatchPolicy)

-- | A list of created simulation job request summaries.
startSimulationJobBatchResponse_createdRequests :: Lens' StartSimulationJobBatchResponse (Maybe [SimulationJobSummary])

-- | A list of pending simulation job requests. These requests have not yet
--   been created into simulation jobs.
startSimulationJobBatchResponse_pendingRequests :: Lens' StartSimulationJobBatchResponse (Maybe (NonEmpty SimulationJobRequest))

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
startSimulationJobBatchResponse_clientRequestToken :: Lens' StartSimulationJobBatchResponse (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   deployment job batch.
startSimulationJobBatchResponse_tags :: Lens' StartSimulationJobBatchResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
startSimulationJobBatchResponse_httpStatus :: Lens' StartSimulationJobBatchResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.StartSimulationJobBatch.StartSimulationJobBatch
instance GHC.Show.Show Amazonka.RobOMaker.StartSimulationJobBatch.StartSimulationJobBatch
instance GHC.Read.Read Amazonka.RobOMaker.StartSimulationJobBatch.StartSimulationJobBatch
instance GHC.Classes.Eq Amazonka.RobOMaker.StartSimulationJobBatch.StartSimulationJobBatch
instance GHC.Generics.Generic Amazonka.RobOMaker.StartSimulationJobBatch.StartSimulationJobBatchResponse
instance GHC.Show.Show Amazonka.RobOMaker.StartSimulationJobBatch.StartSimulationJobBatchResponse
instance GHC.Read.Read Amazonka.RobOMaker.StartSimulationJobBatch.StartSimulationJobBatchResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.StartSimulationJobBatch.StartSimulationJobBatchResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.StartSimulationJobBatch.StartSimulationJobBatch
instance Control.DeepSeq.NFData Amazonka.RobOMaker.StartSimulationJobBatch.StartSimulationJobBatchResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.StartSimulationJobBatch.StartSimulationJobBatch
instance Control.DeepSeq.NFData Amazonka.RobOMaker.StartSimulationJobBatch.StartSimulationJobBatch
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.StartSimulationJobBatch.StartSimulationJobBatch
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.StartSimulationJobBatch.StartSimulationJobBatch
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.StartSimulationJobBatch.StartSimulationJobBatch
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.StartSimulationJobBatch.StartSimulationJobBatch


-- | Restarts a running simulation job.
module Amazonka.RobOMaker.RestartSimulationJob

-- | <i>See:</i> <a>newRestartSimulationJob</a> smart constructor.
data RestartSimulationJob
RestartSimulationJob' :: Text -> RestartSimulationJob

-- | The Amazon Resource Name (ARN) of the simulation job.
[$sel:job:RestartSimulationJob'] :: RestartSimulationJob -> Text

-- | Create a value of <a>RestartSimulationJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:RestartSimulationJob'</a>, <a>restartSimulationJob_job</a>
--   - The Amazon Resource Name (ARN) of the simulation job.
newRestartSimulationJob :: Text -> RestartSimulationJob

-- | The Amazon Resource Name (ARN) of the simulation job.
restartSimulationJob_job :: Lens' RestartSimulationJob Text

-- | <i>See:</i> <a>newRestartSimulationJobResponse</a> smart constructor.
data RestartSimulationJobResponse
RestartSimulationJobResponse' :: Int -> RestartSimulationJobResponse

-- | The response's http status code.
[$sel:httpStatus:RestartSimulationJobResponse'] :: RestartSimulationJobResponse -> Int

-- | Create a value of <a>RestartSimulationJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RestartSimulationJobResponse'</a>,
--   <a>restartSimulationJobResponse_httpStatus</a> - The response's http
--   status code.
newRestartSimulationJobResponse :: Int -> RestartSimulationJobResponse

-- | The response's http status code.
restartSimulationJobResponse_httpStatus :: Lens' RestartSimulationJobResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.RestartSimulationJob.RestartSimulationJob
instance GHC.Show.Show Amazonka.RobOMaker.RestartSimulationJob.RestartSimulationJob
instance GHC.Read.Read Amazonka.RobOMaker.RestartSimulationJob.RestartSimulationJob
instance GHC.Classes.Eq Amazonka.RobOMaker.RestartSimulationJob.RestartSimulationJob
instance GHC.Generics.Generic Amazonka.RobOMaker.RestartSimulationJob.RestartSimulationJobResponse
instance GHC.Show.Show Amazonka.RobOMaker.RestartSimulationJob.RestartSimulationJobResponse
instance GHC.Read.Read Amazonka.RobOMaker.RestartSimulationJob.RestartSimulationJobResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.RestartSimulationJob.RestartSimulationJobResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.RestartSimulationJob.RestartSimulationJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.RestartSimulationJob.RestartSimulationJobResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.RestartSimulationJob.RestartSimulationJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.RestartSimulationJob.RestartSimulationJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.RestartSimulationJob.RestartSimulationJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.RestartSimulationJob.RestartSimulationJob
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.RestartSimulationJob.RestartSimulationJob
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.RestartSimulationJob.RestartSimulationJob


-- | Registers a robot with a fleet.
module Amazonka.RobOMaker.RegisterRobot

-- | <i>See:</i> <a>newRegisterRobot</a> smart constructor.
data RegisterRobot
RegisterRobot' :: Text -> Text -> RegisterRobot

-- | The Amazon Resource Name (ARN) of the fleet.
[$sel:fleet:RegisterRobot'] :: RegisterRobot -> Text

-- | The Amazon Resource Name (ARN) of the robot.
[$sel:robot:RegisterRobot'] :: RegisterRobot -> Text

-- | Create a value of <a>RegisterRobot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleet:RegisterRobot'</a>, <a>registerRobot_fleet</a> - The
--   Amazon Resource Name (ARN) of the fleet.
--   
--   <a>$sel:robot:RegisterRobot'</a>, <a>registerRobot_robot</a> - The
--   Amazon Resource Name (ARN) of the robot.
newRegisterRobot :: Text -> Text -> RegisterRobot

-- | The Amazon Resource Name (ARN) of the fleet.
registerRobot_fleet :: Lens' RegisterRobot Text

-- | The Amazon Resource Name (ARN) of the robot.
registerRobot_robot :: Lens' RegisterRobot Text

-- | <i>See:</i> <a>newRegisterRobotResponse</a> smart constructor.
data RegisterRobotResponse
RegisterRobotResponse' :: Maybe Text -> Maybe Text -> Int -> RegisterRobotResponse

-- | Information about the robot registration.
[$sel:robot:RegisterRobotResponse'] :: RegisterRobotResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the fleet that the robot will join.
[$sel:fleet:RegisterRobotResponse'] :: RegisterRobotResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:RegisterRobotResponse'] :: RegisterRobotResponse -> Int

-- | Create a value of <a>RegisterRobotResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:robot:RegisterRobot'</a>, <a>registerRobotResponse_robot</a> -
--   Information about the robot registration.
--   
--   <a>$sel:fleet:RegisterRobot'</a>, <a>registerRobotResponse_fleet</a> -
--   The Amazon Resource Name (ARN) of the fleet that the robot will join.
--   
--   <a>$sel:httpStatus:RegisterRobotResponse'</a>,
--   <a>registerRobotResponse_httpStatus</a> - The response's http status
--   code.
newRegisterRobotResponse :: Int -> RegisterRobotResponse

-- | Information about the robot registration.
registerRobotResponse_robot :: Lens' RegisterRobotResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the fleet that the robot will join.
registerRobotResponse_fleet :: Lens' RegisterRobotResponse (Maybe Text)

-- | The response's http status code.
registerRobotResponse_httpStatus :: Lens' RegisterRobotResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.RegisterRobot.RegisterRobot
instance GHC.Show.Show Amazonka.RobOMaker.RegisterRobot.RegisterRobot
instance GHC.Read.Read Amazonka.RobOMaker.RegisterRobot.RegisterRobot
instance GHC.Classes.Eq Amazonka.RobOMaker.RegisterRobot.RegisterRobot
instance GHC.Generics.Generic Amazonka.RobOMaker.RegisterRobot.RegisterRobotResponse
instance GHC.Show.Show Amazonka.RobOMaker.RegisterRobot.RegisterRobotResponse
instance GHC.Read.Read Amazonka.RobOMaker.RegisterRobot.RegisterRobotResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.RegisterRobot.RegisterRobotResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.RegisterRobot.RegisterRobot
instance Control.DeepSeq.NFData Amazonka.RobOMaker.RegisterRobot.RegisterRobotResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.RegisterRobot.RegisterRobot
instance Control.DeepSeq.NFData Amazonka.RobOMaker.RegisterRobot.RegisterRobot
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.RegisterRobot.RegisterRobot
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.RegisterRobot.RegisterRobot
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.RegisterRobot.RegisterRobot
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.RegisterRobot.RegisterRobot


-- | Lists worlds.
--   
--   This operation returns paginated results.
module Amazonka.RobOMaker.ListWorlds

-- | <i>See:</i> <a>newListWorlds</a> smart constructor.
data ListWorlds
ListWorlds' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Int -> ListWorlds

-- | Optional filters to limit results. You can use <tt>status</tt>.
[$sel:filters:ListWorlds'] :: ListWorlds -> Maybe (NonEmpty Filter)

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorlds</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
[$sel:nextToken:ListWorlds'] :: ListWorlds -> Maybe Text

-- | When this parameter is used, <tt>ListWorlds</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another <tt>ListWorlds</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If this parameter is not used, then
--   <tt>ListWorlds</tt> returns up to 100 results and a <tt>nextToken</tt>
--   value if applicable.
[$sel:maxResults:ListWorlds'] :: ListWorlds -> Maybe Int

-- | Create a value of <a>ListWorlds</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListWorlds'</a>, <a>listWorlds_filters</a> - Optional
--   filters to limit results. You can use <tt>status</tt>.
--   
--   <a>$sel:nextToken:ListWorlds'</a>, <a>listWorlds_nextToken</a> - If
--   the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorlds</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   <a>$sel:maxResults:ListWorlds'</a>, <a>listWorlds_maxResults</a> -
--   When this parameter is used, <tt>ListWorlds</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another <tt>ListWorlds</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If this parameter is not used, then
--   <tt>ListWorlds</tt> returns up to 100 results and a <tt>nextToken</tt>
--   value if applicable.
newListWorlds :: ListWorlds

-- | Optional filters to limit results. You can use <tt>status</tt>.
listWorlds_filters :: Lens' ListWorlds (Maybe (NonEmpty Filter))

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorlds</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listWorlds_nextToken :: Lens' ListWorlds (Maybe Text)

-- | When this parameter is used, <tt>ListWorlds</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another <tt>ListWorlds</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If this parameter is not used, then
--   <tt>ListWorlds</tt> returns up to 100 results and a <tt>nextToken</tt>
--   value if applicable.
listWorlds_maxResults :: Lens' ListWorlds (Maybe Int)

-- | <i>See:</i> <a>newListWorldsResponse</a> smart constructor.
data ListWorldsResponse
ListWorldsResponse' :: Maybe Text -> Maybe [WorldSummary] -> Int -> ListWorldsResponse

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorlds</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
[$sel:nextToken:ListWorldsResponse'] :: ListWorldsResponse -> Maybe Text

-- | Summary information for worlds.
[$sel:worldSummaries:ListWorldsResponse'] :: ListWorldsResponse -> Maybe [WorldSummary]

-- | The response's http status code.
[$sel:httpStatus:ListWorldsResponse'] :: ListWorldsResponse -> Int

-- | Create a value of <a>ListWorldsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWorlds'</a>, <a>listWorldsResponse_nextToken</a>
--   - If the previous paginated request did not return all of the
--   remaining results, the response object's <tt>nextToken</tt> parameter
--   value is set to a token. To retrieve the next set of results, call
--   <tt>ListWorlds</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   <a>$sel:worldSummaries:ListWorldsResponse'</a>,
--   <a>listWorldsResponse_worldSummaries</a> - Summary information for
--   worlds.
--   
--   <a>$sel:httpStatus:ListWorldsResponse'</a>,
--   <a>listWorldsResponse_httpStatus</a> - The response's http status
--   code.
newListWorldsResponse :: Int -> ListWorldsResponse

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorlds</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listWorldsResponse_nextToken :: Lens' ListWorldsResponse (Maybe Text)

-- | Summary information for worlds.
listWorldsResponse_worldSummaries :: Lens' ListWorldsResponse (Maybe [WorldSummary])

-- | The response's http status code.
listWorldsResponse_httpStatus :: Lens' ListWorldsResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.ListWorlds.ListWorlds
instance GHC.Show.Show Amazonka.RobOMaker.ListWorlds.ListWorlds
instance GHC.Read.Read Amazonka.RobOMaker.ListWorlds.ListWorlds
instance GHC.Classes.Eq Amazonka.RobOMaker.ListWorlds.ListWorlds
instance GHC.Generics.Generic Amazonka.RobOMaker.ListWorlds.ListWorldsResponse
instance GHC.Show.Show Amazonka.RobOMaker.ListWorlds.ListWorldsResponse
instance GHC.Read.Read Amazonka.RobOMaker.ListWorlds.ListWorldsResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.ListWorlds.ListWorldsResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.ListWorlds.ListWorlds
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListWorlds.ListWorldsResponse
instance Amazonka.Pager.AWSPager Amazonka.RobOMaker.ListWorlds.ListWorlds
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.ListWorlds.ListWorlds
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListWorlds.ListWorlds
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.ListWorlds.ListWorlds
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.ListWorlds.ListWorlds
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.ListWorlds.ListWorlds
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.ListWorlds.ListWorlds


-- | Lists world templates.
--   
--   This operation returns paginated results.
module Amazonka.RobOMaker.ListWorldTemplates

-- | <i>See:</i> <a>newListWorldTemplates</a> smart constructor.
data ListWorldTemplates
ListWorldTemplates' :: Maybe Text -> Maybe Int -> ListWorldTemplates

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorldTemplates</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
[$sel:nextToken:ListWorldTemplates'] :: ListWorldTemplates -> Maybe Text

-- | When this parameter is used, <tt>ListWorldTemplates</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListWorldTemplates</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListWorldTemplates</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
[$sel:maxResults:ListWorldTemplates'] :: ListWorldTemplates -> Maybe Int

-- | Create a value of <a>ListWorldTemplates</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWorldTemplates'</a>,
--   <a>listWorldTemplates_nextToken</a> - If the previous paginated
--   request did not return all of the remaining results, the response
--   object's <tt>nextToken</tt> parameter value is set to a token. To
--   retrieve the next set of results, call <tt>ListWorldTemplates</tt>
--   again and assign that token to the request object's <tt>nextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's NextToken parameter is set to null.
--   
--   <a>$sel:maxResults:ListWorldTemplates'</a>,
--   <a>listWorldTemplates_maxResults</a> - When this parameter is used,
--   <tt>ListWorldTemplates</tt> only returns <tt>maxResults</tt> results
--   in a single page along with a <tt>nextToken</tt> response element. The
--   remaining results of the initial request can be seen by sending
--   another <tt>ListWorldTemplates</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListWorldTemplates</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
newListWorldTemplates :: ListWorldTemplates

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorldTemplates</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listWorldTemplates_nextToken :: Lens' ListWorldTemplates (Maybe Text)

-- | When this parameter is used, <tt>ListWorldTemplates</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListWorldTemplates</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListWorldTemplates</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
listWorldTemplates_maxResults :: Lens' ListWorldTemplates (Maybe Int)

-- | <i>See:</i> <a>newListWorldTemplatesResponse</a> smart constructor.
data ListWorldTemplatesResponse
ListWorldTemplatesResponse' :: Maybe [TemplateSummary] -> Maybe Text -> Int -> ListWorldTemplatesResponse

-- | Summary information for templates.
[$sel:templateSummaries:ListWorldTemplatesResponse'] :: ListWorldTemplatesResponse -> Maybe [TemplateSummary]

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorldTemplates</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
[$sel:nextToken:ListWorldTemplatesResponse'] :: ListWorldTemplatesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListWorldTemplatesResponse'] :: ListWorldTemplatesResponse -> Int

-- | Create a value of <a>ListWorldTemplatesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:templateSummaries:ListWorldTemplatesResponse'</a>,
--   <a>listWorldTemplatesResponse_templateSummaries</a> - Summary
--   information for templates.
--   
--   <a>$sel:nextToken:ListWorldTemplates'</a>,
--   <a>listWorldTemplatesResponse_nextToken</a> - If the previous
--   paginated request did not return all of the remaining results, the
--   response object's <tt>nextToken</tt> parameter value is set to a
--   token. To retrieve the next set of results, call
--   <tt>ListWorldTemplates</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   <a>$sel:httpStatus:ListWorldTemplatesResponse'</a>,
--   <a>listWorldTemplatesResponse_httpStatus</a> - The response's http
--   status code.
newListWorldTemplatesResponse :: Int -> ListWorldTemplatesResponse

-- | Summary information for templates.
listWorldTemplatesResponse_templateSummaries :: Lens' ListWorldTemplatesResponse (Maybe [TemplateSummary])

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorldTemplates</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listWorldTemplatesResponse_nextToken :: Lens' ListWorldTemplatesResponse (Maybe Text)

-- | The response's http status code.
listWorldTemplatesResponse_httpStatus :: Lens' ListWorldTemplatesResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.ListWorldTemplates.ListWorldTemplates
instance GHC.Show.Show Amazonka.RobOMaker.ListWorldTemplates.ListWorldTemplates
instance GHC.Read.Read Amazonka.RobOMaker.ListWorldTemplates.ListWorldTemplates
instance GHC.Classes.Eq Amazonka.RobOMaker.ListWorldTemplates.ListWorldTemplates
instance GHC.Generics.Generic Amazonka.RobOMaker.ListWorldTemplates.ListWorldTemplatesResponse
instance GHC.Show.Show Amazonka.RobOMaker.ListWorldTemplates.ListWorldTemplatesResponse
instance GHC.Read.Read Amazonka.RobOMaker.ListWorldTemplates.ListWorldTemplatesResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.ListWorldTemplates.ListWorldTemplatesResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.ListWorldTemplates.ListWorldTemplates
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListWorldTemplates.ListWorldTemplatesResponse
instance Amazonka.Pager.AWSPager Amazonka.RobOMaker.ListWorldTemplates.ListWorldTemplates
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.ListWorldTemplates.ListWorldTemplates
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListWorldTemplates.ListWorldTemplates
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.ListWorldTemplates.ListWorldTemplates
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.ListWorldTemplates.ListWorldTemplates
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.ListWorldTemplates.ListWorldTemplates
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.ListWorldTemplates.ListWorldTemplates


-- | Lists world generator jobs.
--   
--   This operation returns paginated results.
module Amazonka.RobOMaker.ListWorldGenerationJobs

-- | <i>See:</i> <a>newListWorldGenerationJobs</a> smart constructor.
data ListWorldGenerationJobs
ListWorldGenerationJobs' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Int -> ListWorldGenerationJobs

-- | Optional filters to limit results. You can use <tt>status</tt> and
--   <tt>templateId</tt>.
[$sel:filters:ListWorldGenerationJobs'] :: ListWorldGenerationJobs -> Maybe (NonEmpty Filter)

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorldGenerationJobsRequest</tt> again and assign that token to
--   the request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
[$sel:nextToken:ListWorldGenerationJobs'] :: ListWorldGenerationJobs -> Maybe Text

-- | When this parameter is used, <tt>ListWorldGeneratorJobs</tt> only
--   returns <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListWorldGeneratorJobs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListWorldGeneratorJobs</tt> returns up
--   to 100 results and a <tt>nextToken</tt> value if applicable.
[$sel:maxResults:ListWorldGenerationJobs'] :: ListWorldGenerationJobs -> Maybe Int

-- | Create a value of <a>ListWorldGenerationJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListWorldGenerationJobs'</a>,
--   <a>listWorldGenerationJobs_filters</a> - Optional filters to limit
--   results. You can use <tt>status</tt> and <tt>templateId</tt>.
--   
--   <a>$sel:nextToken:ListWorldGenerationJobs'</a>,
--   <a>listWorldGenerationJobs_nextToken</a> - If the previous paginated
--   request did not return all of the remaining results, the response
--   object's <tt>nextToken</tt> parameter value is set to a token. To
--   retrieve the next set of results, call
--   <tt>ListWorldGenerationJobsRequest</tt> again and assign that token to
--   the request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
--   
--   <a>$sel:maxResults:ListWorldGenerationJobs'</a>,
--   <a>listWorldGenerationJobs_maxResults</a> - When this parameter is
--   used, <tt>ListWorldGeneratorJobs</tt> only returns <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. The remaining results of the initial request can be seen by
--   sending another <tt>ListWorldGeneratorJobs</tt> request with the
--   returned <tt>nextToken</tt> value. This value can be between 1 and
--   100. If this parameter is not used, then
--   <tt>ListWorldGeneratorJobs</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
newListWorldGenerationJobs :: ListWorldGenerationJobs

-- | Optional filters to limit results. You can use <tt>status</tt> and
--   <tt>templateId</tt>.
listWorldGenerationJobs_filters :: Lens' ListWorldGenerationJobs (Maybe (NonEmpty Filter))

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorldGenerationJobsRequest</tt> again and assign that token to
--   the request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
listWorldGenerationJobs_nextToken :: Lens' ListWorldGenerationJobs (Maybe Text)

-- | When this parameter is used, <tt>ListWorldGeneratorJobs</tt> only
--   returns <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListWorldGeneratorJobs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListWorldGeneratorJobs</tt> returns up
--   to 100 results and a <tt>nextToken</tt> value if applicable.
listWorldGenerationJobs_maxResults :: Lens' ListWorldGenerationJobs (Maybe Int)

-- | <i>See:</i> <a>newListWorldGenerationJobsResponse</a> smart
--   constructor.
data ListWorldGenerationJobsResponse
ListWorldGenerationJobsResponse' :: Maybe Text -> Int -> [WorldGenerationJobSummary] -> ListWorldGenerationJobsResponse

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorldGeneratorJobsRequest</tt> again and assign that token to
--   the request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
[$sel:nextToken:ListWorldGenerationJobsResponse'] :: ListWorldGenerationJobsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListWorldGenerationJobsResponse'] :: ListWorldGenerationJobsResponse -> Int

-- | Summary information for world generator jobs.
[$sel:worldGenerationJobSummaries:ListWorldGenerationJobsResponse'] :: ListWorldGenerationJobsResponse -> [WorldGenerationJobSummary]

-- | Create a value of <a>ListWorldGenerationJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWorldGenerationJobs'</a>,
--   <a>listWorldGenerationJobsResponse_nextToken</a> - If the previous
--   paginated request did not return all of the remaining results, the
--   response object's <tt>nextToken</tt> parameter value is set to a
--   token. To retrieve the next set of results, call
--   <tt>ListWorldGeneratorJobsRequest</tt> again and assign that token to
--   the request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
--   
--   <a>$sel:httpStatus:ListWorldGenerationJobsResponse'</a>,
--   <a>listWorldGenerationJobsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   
--   <a>$sel:worldGenerationJobSummaries:ListWorldGenerationJobsResponse'</a>,
--   <a>listWorldGenerationJobsResponse_worldGenerationJobSummaries</a> -
--   Summary information for world generator jobs.
newListWorldGenerationJobsResponse :: Int -> ListWorldGenerationJobsResponse

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorldGeneratorJobsRequest</tt> again and assign that token to
--   the request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
listWorldGenerationJobsResponse_nextToken :: Lens' ListWorldGenerationJobsResponse (Maybe Text)

-- | The response's http status code.
listWorldGenerationJobsResponse_httpStatus :: Lens' ListWorldGenerationJobsResponse Int

-- | Summary information for world generator jobs.
listWorldGenerationJobsResponse_worldGenerationJobSummaries :: Lens' ListWorldGenerationJobsResponse [WorldGenerationJobSummary]
instance GHC.Generics.Generic Amazonka.RobOMaker.ListWorldGenerationJobs.ListWorldGenerationJobs
instance GHC.Show.Show Amazonka.RobOMaker.ListWorldGenerationJobs.ListWorldGenerationJobs
instance GHC.Read.Read Amazonka.RobOMaker.ListWorldGenerationJobs.ListWorldGenerationJobs
instance GHC.Classes.Eq Amazonka.RobOMaker.ListWorldGenerationJobs.ListWorldGenerationJobs
instance GHC.Generics.Generic Amazonka.RobOMaker.ListWorldGenerationJobs.ListWorldGenerationJobsResponse
instance GHC.Show.Show Amazonka.RobOMaker.ListWorldGenerationJobs.ListWorldGenerationJobsResponse
instance GHC.Read.Read Amazonka.RobOMaker.ListWorldGenerationJobs.ListWorldGenerationJobsResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.ListWorldGenerationJobs.ListWorldGenerationJobsResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.ListWorldGenerationJobs.ListWorldGenerationJobs
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListWorldGenerationJobs.ListWorldGenerationJobsResponse
instance Amazonka.Pager.AWSPager Amazonka.RobOMaker.ListWorldGenerationJobs.ListWorldGenerationJobs
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.ListWorldGenerationJobs.ListWorldGenerationJobs
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListWorldGenerationJobs.ListWorldGenerationJobs
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.ListWorldGenerationJobs.ListWorldGenerationJobs
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.ListWorldGenerationJobs.ListWorldGenerationJobs
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.ListWorldGenerationJobs.ListWorldGenerationJobs
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.ListWorldGenerationJobs.ListWorldGenerationJobs


-- | Lists world export jobs.
--   
--   This operation returns paginated results.
module Amazonka.RobOMaker.ListWorldExportJobs

-- | <i>See:</i> <a>newListWorldExportJobs</a> smart constructor.
data ListWorldExportJobs
ListWorldExportJobs' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Int -> ListWorldExportJobs

-- | Optional filters to limit results. You can use
--   <tt>generationJobId</tt> and <tt>templateId</tt>.
[$sel:filters:ListWorldExportJobs'] :: ListWorldExportJobs -> Maybe (NonEmpty Filter)

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorldExportJobs</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
[$sel:nextToken:ListWorldExportJobs'] :: ListWorldExportJobs -> Maybe Text

-- | When this parameter is used, <tt>ListWorldExportJobs</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListWorldExportJobs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListWorldExportJobs</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
[$sel:maxResults:ListWorldExportJobs'] :: ListWorldExportJobs -> Maybe Int

-- | Create a value of <a>ListWorldExportJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListWorldExportJobs'</a>,
--   <a>listWorldExportJobs_filters</a> - Optional filters to limit
--   results. You can use <tt>generationJobId</tt> and <tt>templateId</tt>.
--   
--   <a>$sel:nextToken:ListWorldExportJobs'</a>,
--   <a>listWorldExportJobs_nextToken</a> - If the previous paginated
--   request did not return all of the remaining results, the response
--   object's <tt>nextToken</tt> parameter value is set to a token. To
--   retrieve the next set of results, call <tt>ListWorldExportJobs</tt>
--   again and assign that token to the request object's <tt>nextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's NextToken parameter is set to null.
--   
--   <a>$sel:maxResults:ListWorldExportJobs'</a>,
--   <a>listWorldExportJobs_maxResults</a> - When this parameter is used,
--   <tt>ListWorldExportJobs</tt> only returns <tt>maxResults</tt> results
--   in a single page along with a <tt>nextToken</tt> response element. The
--   remaining results of the initial request can be seen by sending
--   another <tt>ListWorldExportJobs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListWorldExportJobs</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
newListWorldExportJobs :: ListWorldExportJobs

-- | Optional filters to limit results. You can use
--   <tt>generationJobId</tt> and <tt>templateId</tt>.
listWorldExportJobs_filters :: Lens' ListWorldExportJobs (Maybe (NonEmpty Filter))

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorldExportJobs</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
listWorldExportJobs_nextToken :: Lens' ListWorldExportJobs (Maybe Text)

-- | When this parameter is used, <tt>ListWorldExportJobs</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListWorldExportJobs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListWorldExportJobs</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
listWorldExportJobs_maxResults :: Lens' ListWorldExportJobs (Maybe Int)

-- | <i>See:</i> <a>newListWorldExportJobsResponse</a> smart constructor.
data ListWorldExportJobsResponse
ListWorldExportJobsResponse' :: Maybe Text -> Int -> [WorldExportJobSummary] -> ListWorldExportJobsResponse

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorldExportJobsRequest</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
[$sel:nextToken:ListWorldExportJobsResponse'] :: ListWorldExportJobsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListWorldExportJobsResponse'] :: ListWorldExportJobsResponse -> Int

-- | Summary information for world export jobs.
[$sel:worldExportJobSummaries:ListWorldExportJobsResponse'] :: ListWorldExportJobsResponse -> [WorldExportJobSummary]

-- | Create a value of <a>ListWorldExportJobsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWorldExportJobs'</a>,
--   <a>listWorldExportJobsResponse_nextToken</a> - If the previous
--   paginated request did not return all of the remaining results, the
--   response object's <tt>nextToken</tt> parameter value is set to a
--   token. To retrieve the next set of results, call
--   <tt>ListWorldExportJobsRequest</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
--   
--   <a>$sel:httpStatus:ListWorldExportJobsResponse'</a>,
--   <a>listWorldExportJobsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:worldExportJobSummaries:ListWorldExportJobsResponse'</a>,
--   <a>listWorldExportJobsResponse_worldExportJobSummaries</a> - Summary
--   information for world export jobs.
newListWorldExportJobsResponse :: Int -> ListWorldExportJobsResponse

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorldExportJobsRequest</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
listWorldExportJobsResponse_nextToken :: Lens' ListWorldExportJobsResponse (Maybe Text)

-- | The response's http status code.
listWorldExportJobsResponse_httpStatus :: Lens' ListWorldExportJobsResponse Int

-- | Summary information for world export jobs.
listWorldExportJobsResponse_worldExportJobSummaries :: Lens' ListWorldExportJobsResponse [WorldExportJobSummary]
instance GHC.Generics.Generic Amazonka.RobOMaker.ListWorldExportJobs.ListWorldExportJobs
instance GHC.Show.Show Amazonka.RobOMaker.ListWorldExportJobs.ListWorldExportJobs
instance GHC.Read.Read Amazonka.RobOMaker.ListWorldExportJobs.ListWorldExportJobs
instance GHC.Classes.Eq Amazonka.RobOMaker.ListWorldExportJobs.ListWorldExportJobs
instance GHC.Generics.Generic Amazonka.RobOMaker.ListWorldExportJobs.ListWorldExportJobsResponse
instance GHC.Show.Show Amazonka.RobOMaker.ListWorldExportJobs.ListWorldExportJobsResponse
instance GHC.Read.Read Amazonka.RobOMaker.ListWorldExportJobs.ListWorldExportJobsResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.ListWorldExportJobs.ListWorldExportJobsResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.ListWorldExportJobs.ListWorldExportJobs
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListWorldExportJobs.ListWorldExportJobsResponse
instance Amazonka.Pager.AWSPager Amazonka.RobOMaker.ListWorldExportJobs.ListWorldExportJobs
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.ListWorldExportJobs.ListWorldExportJobs
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListWorldExportJobs.ListWorldExportJobs
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.ListWorldExportJobs.ListWorldExportJobs
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.ListWorldExportJobs.ListWorldExportJobs
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.ListWorldExportJobs.ListWorldExportJobs
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.ListWorldExportJobs.ListWorldExportJobs


-- | Lists all tags on a AWS RoboMaker resource.
module Amazonka.RobOMaker.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The AWS RoboMaker Amazon Resource Name (ARN) with tags to be listed.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The AWS RoboMaker Amazon
--   Resource Name (ARN) with tags to be listed.
newListTagsForResource :: Text -> ListTagsForResource

-- | The AWS RoboMaker Amazon Resource Name (ARN) with tags to be listed.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | The list of all tags added to the specified resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The list of all tags added
--   to the specified resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The list of all tags added to the specified resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.RobOMaker.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.RobOMaker.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.RobOMaker.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.RobOMaker.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.RobOMaker.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.RobOMaker.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.ListTagsForResource.ListTagsForResource


-- | Returns a list of simulation jobs. You can optionally provide filters
--   to retrieve specific simulation jobs.
--   
--   This operation returns paginated results.
module Amazonka.RobOMaker.ListSimulationJobs

-- | <i>See:</i> <a>newListSimulationJobs</a> smart constructor.
data ListSimulationJobs
ListSimulationJobs' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Int -> ListSimulationJobs

-- | Optional filters to limit results.
--   
--   The filter names <tt>status</tt> and
--   <tt>simulationApplicationName</tt> and <tt>robotApplicationName</tt>
--   are supported. When filtering, you must use the complete value of the
--   filtered item. You can use up to three filters, but they must be for
--   the same named item. For example, if you are looking for items with
--   the status <tt>Preparing</tt> or the status <tt>Running</tt>.
[$sel:filters:ListSimulationJobs'] :: ListSimulationJobs -> Maybe (NonEmpty Filter)

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListSimulationJobs</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
[$sel:nextToken:ListSimulationJobs'] :: ListSimulationJobs -> Maybe Text

-- | When this parameter is used, <tt>ListSimulationJobs</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListSimulationJobs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 1000. If
--   this parameter is not used, then <tt>ListSimulationJobs</tt> returns
--   up to 1000 results and a <tt>nextToken</tt> value if applicable.
[$sel:maxResults:ListSimulationJobs'] :: ListSimulationJobs -> Maybe Int

-- | Create a value of <a>ListSimulationJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListSimulationJobs'</a>,
--   <a>listSimulationJobs_filters</a> - Optional filters to limit results.
--   
--   The filter names <tt>status</tt> and
--   <tt>simulationApplicationName</tt> and <tt>robotApplicationName</tt>
--   are supported. When filtering, you must use the complete value of the
--   filtered item. You can use up to three filters, but they must be for
--   the same named item. For example, if you are looking for items with
--   the status <tt>Preparing</tt> or the status <tt>Running</tt>.
--   
--   <a>$sel:nextToken:ListSimulationJobs'</a>,
--   <a>listSimulationJobs_nextToken</a> - If the previous paginated
--   request did not return all of the remaining results, the response
--   object's <tt>nextToken</tt> parameter value is set to a token. To
--   retrieve the next set of results, call <tt>ListSimulationJobs</tt>
--   again and assign that token to the request object's <tt>nextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's NextToken parameter is set to null.
--   
--   <a>$sel:maxResults:ListSimulationJobs'</a>,
--   <a>listSimulationJobs_maxResults</a> - When this parameter is used,
--   <tt>ListSimulationJobs</tt> only returns <tt>maxResults</tt> results
--   in a single page along with a <tt>nextToken</tt> response element. The
--   remaining results of the initial request can be seen by sending
--   another <tt>ListSimulationJobs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 1000. If
--   this parameter is not used, then <tt>ListSimulationJobs</tt> returns
--   up to 1000 results and a <tt>nextToken</tt> value if applicable.
newListSimulationJobs :: ListSimulationJobs

-- | Optional filters to limit results.
--   
--   The filter names <tt>status</tt> and
--   <tt>simulationApplicationName</tt> and <tt>robotApplicationName</tt>
--   are supported. When filtering, you must use the complete value of the
--   filtered item. You can use up to three filters, but they must be for
--   the same named item. For example, if you are looking for items with
--   the status <tt>Preparing</tt> or the status <tt>Running</tt>.
listSimulationJobs_filters :: Lens' ListSimulationJobs (Maybe (NonEmpty Filter))

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListSimulationJobs</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listSimulationJobs_nextToken :: Lens' ListSimulationJobs (Maybe Text)

-- | When this parameter is used, <tt>ListSimulationJobs</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListSimulationJobs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 1000. If
--   this parameter is not used, then <tt>ListSimulationJobs</tt> returns
--   up to 1000 results and a <tt>nextToken</tt> value if applicable.
listSimulationJobs_maxResults :: Lens' ListSimulationJobs (Maybe Int)

-- | <i>See:</i> <a>newListSimulationJobsResponse</a> smart constructor.
data ListSimulationJobsResponse
ListSimulationJobsResponse' :: Maybe Text -> Int -> [SimulationJobSummary] -> ListSimulationJobsResponse

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListSimulationJobs</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
[$sel:nextToken:ListSimulationJobsResponse'] :: ListSimulationJobsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListSimulationJobsResponse'] :: ListSimulationJobsResponse -> Int

-- | A list of simulation job summaries that meet the criteria of the
--   request.
[$sel:simulationJobSummaries:ListSimulationJobsResponse'] :: ListSimulationJobsResponse -> [SimulationJobSummary]

-- | Create a value of <a>ListSimulationJobsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSimulationJobs'</a>,
--   <a>listSimulationJobsResponse_nextToken</a> - If the previous
--   paginated request did not return all of the remaining results, the
--   response object's <tt>nextToken</tt> parameter value is set to a
--   token. To retrieve the next set of results, call
--   <tt>ListSimulationJobs</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   <a>$sel:httpStatus:ListSimulationJobsResponse'</a>,
--   <a>listSimulationJobsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:simulationJobSummaries:ListSimulationJobsResponse'</a>,
--   <a>listSimulationJobsResponse_simulationJobSummaries</a> - A list of
--   simulation job summaries that meet the criteria of the request.
newListSimulationJobsResponse :: Int -> ListSimulationJobsResponse

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListSimulationJobs</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listSimulationJobsResponse_nextToken :: Lens' ListSimulationJobsResponse (Maybe Text)

-- | The response's http status code.
listSimulationJobsResponse_httpStatus :: Lens' ListSimulationJobsResponse Int

-- | A list of simulation job summaries that meet the criteria of the
--   request.
listSimulationJobsResponse_simulationJobSummaries :: Lens' ListSimulationJobsResponse [SimulationJobSummary]
instance GHC.Generics.Generic Amazonka.RobOMaker.ListSimulationJobs.ListSimulationJobs
instance GHC.Show.Show Amazonka.RobOMaker.ListSimulationJobs.ListSimulationJobs
instance GHC.Read.Read Amazonka.RobOMaker.ListSimulationJobs.ListSimulationJobs
instance GHC.Classes.Eq Amazonka.RobOMaker.ListSimulationJobs.ListSimulationJobs
instance GHC.Generics.Generic Amazonka.RobOMaker.ListSimulationJobs.ListSimulationJobsResponse
instance GHC.Show.Show Amazonka.RobOMaker.ListSimulationJobs.ListSimulationJobsResponse
instance GHC.Read.Read Amazonka.RobOMaker.ListSimulationJobs.ListSimulationJobsResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.ListSimulationJobs.ListSimulationJobsResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.ListSimulationJobs.ListSimulationJobs
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListSimulationJobs.ListSimulationJobsResponse
instance Amazonka.Pager.AWSPager Amazonka.RobOMaker.ListSimulationJobs.ListSimulationJobs
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.ListSimulationJobs.ListSimulationJobs
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListSimulationJobs.ListSimulationJobs
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.ListSimulationJobs.ListSimulationJobs
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.ListSimulationJobs.ListSimulationJobs
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.ListSimulationJobs.ListSimulationJobs
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.ListSimulationJobs.ListSimulationJobs


-- | Returns a list simulation job batches. You can optionally provide
--   filters to retrieve specific simulation batch jobs.
--   
--   This operation returns paginated results.
module Amazonka.RobOMaker.ListSimulationJobBatches

-- | <i>See:</i> <a>newListSimulationJobBatches</a> smart constructor.
data ListSimulationJobBatches
ListSimulationJobBatches' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Int -> ListSimulationJobBatches

-- | Optional filters to limit results.
[$sel:filters:ListSimulationJobBatches'] :: ListSimulationJobBatches -> Maybe (NonEmpty Filter)

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListSimulationJobBatches</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
[$sel:nextToken:ListSimulationJobBatches'] :: ListSimulationJobBatches -> Maybe Text

-- | When this parameter is used, <tt>ListSimulationJobBatches</tt> only
--   returns <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListSimulationJobBatches</tt> request with the returned
--   <tt>nextToken</tt> value.
[$sel:maxResults:ListSimulationJobBatches'] :: ListSimulationJobBatches -> Maybe Int

-- | Create a value of <a>ListSimulationJobBatches</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListSimulationJobBatches'</a>,
--   <a>listSimulationJobBatches_filters</a> - Optional filters to limit
--   results.
--   
--   <a>$sel:nextToken:ListSimulationJobBatches'</a>,
--   <a>listSimulationJobBatches_nextToken</a> - If the previous paginated
--   request did not return all of the remaining results, the response
--   object's <tt>nextToken</tt> parameter value is set to a token. To
--   retrieve the next set of results, call
--   <tt>ListSimulationJobBatches</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
--   
--   <a>$sel:maxResults:ListSimulationJobBatches'</a>,
--   <a>listSimulationJobBatches_maxResults</a> - When this parameter is
--   used, <tt>ListSimulationJobBatches</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListSimulationJobBatches</tt> request with the returned
--   <tt>nextToken</tt> value.
newListSimulationJobBatches :: ListSimulationJobBatches

-- | Optional filters to limit results.
listSimulationJobBatches_filters :: Lens' ListSimulationJobBatches (Maybe (NonEmpty Filter))

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListSimulationJobBatches</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
listSimulationJobBatches_nextToken :: Lens' ListSimulationJobBatches (Maybe Text)

-- | When this parameter is used, <tt>ListSimulationJobBatches</tt> only
--   returns <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListSimulationJobBatches</tt> request with the returned
--   <tt>nextToken</tt> value.
listSimulationJobBatches_maxResults :: Lens' ListSimulationJobBatches (Maybe Int)

-- | <i>See:</i> <a>newListSimulationJobBatchesResponse</a> smart
--   constructor.
data ListSimulationJobBatchesResponse
ListSimulationJobBatchesResponse' :: Maybe Text -> Maybe [SimulationJobBatchSummary] -> Int -> ListSimulationJobBatchesResponse

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListSimulationJobBatches</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
[$sel:nextToken:ListSimulationJobBatchesResponse'] :: ListSimulationJobBatchesResponse -> Maybe Text

-- | A list of simulation job batch summaries.
[$sel:simulationJobBatchSummaries:ListSimulationJobBatchesResponse'] :: ListSimulationJobBatchesResponse -> Maybe [SimulationJobBatchSummary]

-- | The response's http status code.
[$sel:httpStatus:ListSimulationJobBatchesResponse'] :: ListSimulationJobBatchesResponse -> Int

-- | Create a value of <a>ListSimulationJobBatchesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSimulationJobBatches'</a>,
--   <a>listSimulationJobBatchesResponse_nextToken</a> - If the previous
--   paginated request did not return all of the remaining results, the
--   response object's <tt>nextToken</tt> parameter value is set to a
--   token. To retrieve the next set of results, call
--   <tt>ListSimulationJobBatches</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
--   
--   
--   <a>$sel:simulationJobBatchSummaries:ListSimulationJobBatchesResponse'</a>,
--   <a>listSimulationJobBatchesResponse_simulationJobBatchSummaries</a> -
--   A list of simulation job batch summaries.
--   
--   <a>$sel:httpStatus:ListSimulationJobBatchesResponse'</a>,
--   <a>listSimulationJobBatchesResponse_httpStatus</a> - The response's
--   http status code.
newListSimulationJobBatchesResponse :: Int -> ListSimulationJobBatchesResponse

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListSimulationJobBatches</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
listSimulationJobBatchesResponse_nextToken :: Lens' ListSimulationJobBatchesResponse (Maybe Text)

-- | A list of simulation job batch summaries.
listSimulationJobBatchesResponse_simulationJobBatchSummaries :: Lens' ListSimulationJobBatchesResponse (Maybe [SimulationJobBatchSummary])

-- | The response's http status code.
listSimulationJobBatchesResponse_httpStatus :: Lens' ListSimulationJobBatchesResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.ListSimulationJobBatches.ListSimulationJobBatches
instance GHC.Show.Show Amazonka.RobOMaker.ListSimulationJobBatches.ListSimulationJobBatches
instance GHC.Read.Read Amazonka.RobOMaker.ListSimulationJobBatches.ListSimulationJobBatches
instance GHC.Classes.Eq Amazonka.RobOMaker.ListSimulationJobBatches.ListSimulationJobBatches
instance GHC.Generics.Generic Amazonka.RobOMaker.ListSimulationJobBatches.ListSimulationJobBatchesResponse
instance GHC.Show.Show Amazonka.RobOMaker.ListSimulationJobBatches.ListSimulationJobBatchesResponse
instance GHC.Read.Read Amazonka.RobOMaker.ListSimulationJobBatches.ListSimulationJobBatchesResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.ListSimulationJobBatches.ListSimulationJobBatchesResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.ListSimulationJobBatches.ListSimulationJobBatches
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListSimulationJobBatches.ListSimulationJobBatchesResponse
instance Amazonka.Pager.AWSPager Amazonka.RobOMaker.ListSimulationJobBatches.ListSimulationJobBatches
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.ListSimulationJobBatches.ListSimulationJobBatches
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListSimulationJobBatches.ListSimulationJobBatches
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.ListSimulationJobBatches.ListSimulationJobBatches
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.ListSimulationJobBatches.ListSimulationJobBatches
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.ListSimulationJobBatches.ListSimulationJobBatches
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.ListSimulationJobBatches.ListSimulationJobBatches


-- | Returns a list of simulation applications. You can optionally provide
--   filters to retrieve specific simulation applications.
--   
--   This operation returns paginated results.
module Amazonka.RobOMaker.ListSimulationApplications

-- | <i>See:</i> <a>newListSimulationApplications</a> smart constructor.
data ListSimulationApplications
ListSimulationApplications' :: Maybe Text -> Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Int -> ListSimulationApplications

-- | The version qualifier of the simulation application.
[$sel:versionQualifier:ListSimulationApplications'] :: ListSimulationApplications -> Maybe Text

-- | Optional list of filters to limit results.
--   
--   The filter name <tt>name</tt> is supported. When filtering, you must
--   use the complete value of the filtered item. You can use up to three
--   filters.
[$sel:filters:ListSimulationApplications'] :: ListSimulationApplications -> Maybe (NonEmpty Filter)

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListSimulationApplications</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
[$sel:nextToken:ListSimulationApplications'] :: ListSimulationApplications -> Maybe Text

-- | When this parameter is used, <tt>ListSimulationApplications</tt> only
--   returns <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListSimulationApplications</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListSimulationApplications</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
[$sel:maxResults:ListSimulationApplications'] :: ListSimulationApplications -> Maybe Int

-- | Create a value of <a>ListSimulationApplications</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionQualifier:ListSimulationApplications'</a>,
--   <a>listSimulationApplications_versionQualifier</a> - The version
--   qualifier of the simulation application.
--   
--   <a>$sel:filters:ListSimulationApplications'</a>,
--   <a>listSimulationApplications_filters</a> - Optional list of filters
--   to limit results.
--   
--   The filter name <tt>name</tt> is supported. When filtering, you must
--   use the complete value of the filtered item. You can use up to three
--   filters.
--   
--   <a>$sel:nextToken:ListSimulationApplications'</a>,
--   <a>listSimulationApplications_nextToken</a> - If the previous
--   paginated request did not return all of the remaining results, the
--   response object's <tt>nextToken</tt> parameter value is set to a
--   token. To retrieve the next set of results, call
--   <tt>ListSimulationApplications</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
--   
--   <a>$sel:maxResults:ListSimulationApplications'</a>,
--   <a>listSimulationApplications_maxResults</a> - When this parameter is
--   used, <tt>ListSimulationApplications</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListSimulationApplications</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListSimulationApplications</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
newListSimulationApplications :: ListSimulationApplications

-- | The version qualifier of the simulation application.
listSimulationApplications_versionQualifier :: Lens' ListSimulationApplications (Maybe Text)

-- | Optional list of filters to limit results.
--   
--   The filter name <tt>name</tt> is supported. When filtering, you must
--   use the complete value of the filtered item. You can use up to three
--   filters.
listSimulationApplications_filters :: Lens' ListSimulationApplications (Maybe (NonEmpty Filter))

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListSimulationApplications</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
listSimulationApplications_nextToken :: Lens' ListSimulationApplications (Maybe Text)

-- | When this parameter is used, <tt>ListSimulationApplications</tt> only
--   returns <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListSimulationApplications</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListSimulationApplications</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
listSimulationApplications_maxResults :: Lens' ListSimulationApplications (Maybe Int)

-- | <i>See:</i> <a>newListSimulationApplicationsResponse</a> smart
--   constructor.
data ListSimulationApplicationsResponse
ListSimulationApplicationsResponse' :: Maybe Text -> Maybe [SimulationApplicationSummary] -> Int -> ListSimulationApplicationsResponse

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListSimulationApplications</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
[$sel:nextToken:ListSimulationApplicationsResponse'] :: ListSimulationApplicationsResponse -> Maybe Text

-- | A list of simulation application summaries that meet the criteria of
--   the request.
[$sel:simulationApplicationSummaries:ListSimulationApplicationsResponse'] :: ListSimulationApplicationsResponse -> Maybe [SimulationApplicationSummary]

-- | The response's http status code.
[$sel:httpStatus:ListSimulationApplicationsResponse'] :: ListSimulationApplicationsResponse -> Int

-- | Create a value of <a>ListSimulationApplicationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSimulationApplications'</a>,
--   <a>listSimulationApplicationsResponse_nextToken</a> - If the previous
--   paginated request did not return all of the remaining results, the
--   response object's <tt>nextToken</tt> parameter value is set to a
--   token. To retrieve the next set of results, call
--   <tt>ListSimulationApplications</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
--   
--   
--   <a>$sel:simulationApplicationSummaries:ListSimulationApplicationsResponse'</a>,
--   <a>listSimulationApplicationsResponse_simulationApplicationSummaries</a>
--   - A list of simulation application summaries that meet the criteria of
--   the request.
--   
--   <a>$sel:httpStatus:ListSimulationApplicationsResponse'</a>,
--   <a>listSimulationApplicationsResponse_httpStatus</a> - The response's
--   http status code.
newListSimulationApplicationsResponse :: Int -> ListSimulationApplicationsResponse

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListSimulationApplications</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
listSimulationApplicationsResponse_nextToken :: Lens' ListSimulationApplicationsResponse (Maybe Text)

-- | A list of simulation application summaries that meet the criteria of
--   the request.
listSimulationApplicationsResponse_simulationApplicationSummaries :: Lens' ListSimulationApplicationsResponse (Maybe [SimulationApplicationSummary])

-- | The response's http status code.
listSimulationApplicationsResponse_httpStatus :: Lens' ListSimulationApplicationsResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.ListSimulationApplications.ListSimulationApplications
instance GHC.Show.Show Amazonka.RobOMaker.ListSimulationApplications.ListSimulationApplications
instance GHC.Read.Read Amazonka.RobOMaker.ListSimulationApplications.ListSimulationApplications
instance GHC.Classes.Eq Amazonka.RobOMaker.ListSimulationApplications.ListSimulationApplications
instance GHC.Generics.Generic Amazonka.RobOMaker.ListSimulationApplications.ListSimulationApplicationsResponse
instance GHC.Show.Show Amazonka.RobOMaker.ListSimulationApplications.ListSimulationApplicationsResponse
instance GHC.Read.Read Amazonka.RobOMaker.ListSimulationApplications.ListSimulationApplicationsResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.ListSimulationApplications.ListSimulationApplicationsResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.ListSimulationApplications.ListSimulationApplications
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListSimulationApplications.ListSimulationApplicationsResponse
instance Amazonka.Pager.AWSPager Amazonka.RobOMaker.ListSimulationApplications.ListSimulationApplications
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.ListSimulationApplications.ListSimulationApplications
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListSimulationApplications.ListSimulationApplications
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.ListSimulationApplications.ListSimulationApplications
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.ListSimulationApplications.ListSimulationApplications
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.ListSimulationApplications.ListSimulationApplications
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.ListSimulationApplications.ListSimulationApplications


-- | Returns a list of robots. You can optionally provide filters to
--   retrieve specific robots.
--   
--   This operation returns paginated results.
module Amazonka.RobOMaker.ListRobots

-- | <i>See:</i> <a>newListRobots</a> smart constructor.
data ListRobots
ListRobots' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Int -> ListRobots

-- | Optional filters to limit results.
--   
--   The filter names <tt>status</tt> and <tt>fleetName</tt> are supported.
--   When filtering, you must use the complete value of the filtered item.
--   You can use up to three filters, but they must be for the same named
--   item. For example, if you are looking for items with the status
--   <tt>Registered</tt> or the status <tt>Available</tt>.
[$sel:filters:ListRobots'] :: ListRobots -> Maybe (NonEmpty Filter)

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListRobots</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
[$sel:nextToken:ListRobots'] :: ListRobots -> Maybe Text

-- | When this parameter is used, <tt>ListRobots</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another <tt>ListRobots</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 200. If this parameter is not used, then
--   <tt>ListRobots</tt> returns up to 200 results and a <tt>nextToken</tt>
--   value if applicable.
[$sel:maxResults:ListRobots'] :: ListRobots -> Maybe Int

-- | Create a value of <a>ListRobots</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListRobots'</a>, <a>listRobots_filters</a> - Optional
--   filters to limit results.
--   
--   The filter names <tt>status</tt> and <tt>fleetName</tt> are supported.
--   When filtering, you must use the complete value of the filtered item.
--   You can use up to three filters, but they must be for the same named
--   item. For example, if you are looking for items with the status
--   <tt>Registered</tt> or the status <tt>Available</tt>.
--   
--   <a>$sel:nextToken:ListRobots'</a>, <a>listRobots_nextToken</a> - If
--   the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListRobots</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   <a>$sel:maxResults:ListRobots'</a>, <a>listRobots_maxResults</a> -
--   When this parameter is used, <tt>ListRobots</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another <tt>ListRobots</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 200. If this parameter is not used, then
--   <tt>ListRobots</tt> returns up to 200 results and a <tt>nextToken</tt>
--   value if applicable.
newListRobots :: ListRobots

-- | Optional filters to limit results.
--   
--   The filter names <tt>status</tt> and <tt>fleetName</tt> are supported.
--   When filtering, you must use the complete value of the filtered item.
--   You can use up to three filters, but they must be for the same named
--   item. For example, if you are looking for items with the status
--   <tt>Registered</tt> or the status <tt>Available</tt>.
listRobots_filters :: Lens' ListRobots (Maybe (NonEmpty Filter))

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListRobots</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listRobots_nextToken :: Lens' ListRobots (Maybe Text)

-- | When this parameter is used, <tt>ListRobots</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another <tt>ListRobots</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 200. If this parameter is not used, then
--   <tt>ListRobots</tt> returns up to 200 results and a <tt>nextToken</tt>
--   value if applicable.
listRobots_maxResults :: Lens' ListRobots (Maybe Int)

-- | <i>See:</i> <a>newListRobotsResponse</a> smart constructor.
data ListRobotsResponse
ListRobotsResponse' :: Maybe [Robot] -> Maybe Text -> Int -> ListRobotsResponse

-- | A list of robots that meet the criteria of the request.
[$sel:robots:ListRobotsResponse'] :: ListRobotsResponse -> Maybe [Robot]

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListRobots</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
[$sel:nextToken:ListRobotsResponse'] :: ListRobotsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListRobotsResponse'] :: ListRobotsResponse -> Int

-- | Create a value of <a>ListRobotsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:robots:ListRobotsResponse'</a>,
--   <a>listRobotsResponse_robots</a> - A list of robots that meet the
--   criteria of the request.
--   
--   <a>$sel:nextToken:ListRobots'</a>, <a>listRobotsResponse_nextToken</a>
--   - If the previous paginated request did not return all of the
--   remaining results, the response object's <tt>nextToken</tt> parameter
--   value is set to a token. To retrieve the next set of results, call
--   <tt>ListRobots</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   <a>$sel:httpStatus:ListRobotsResponse'</a>,
--   <a>listRobotsResponse_httpStatus</a> - The response's http status
--   code.
newListRobotsResponse :: Int -> ListRobotsResponse

-- | A list of robots that meet the criteria of the request.
listRobotsResponse_robots :: Lens' ListRobotsResponse (Maybe [Robot])

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListRobots</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listRobotsResponse_nextToken :: Lens' ListRobotsResponse (Maybe Text)

-- | The response's http status code.
listRobotsResponse_httpStatus :: Lens' ListRobotsResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.ListRobots.ListRobots
instance GHC.Show.Show Amazonka.RobOMaker.ListRobots.ListRobots
instance GHC.Read.Read Amazonka.RobOMaker.ListRobots.ListRobots
instance GHC.Classes.Eq Amazonka.RobOMaker.ListRobots.ListRobots
instance GHC.Generics.Generic Amazonka.RobOMaker.ListRobots.ListRobotsResponse
instance GHC.Show.Show Amazonka.RobOMaker.ListRobots.ListRobotsResponse
instance GHC.Read.Read Amazonka.RobOMaker.ListRobots.ListRobotsResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.ListRobots.ListRobotsResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.ListRobots.ListRobots
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListRobots.ListRobotsResponse
instance Amazonka.Pager.AWSPager Amazonka.RobOMaker.ListRobots.ListRobots
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.ListRobots.ListRobots
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListRobots.ListRobots
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.ListRobots.ListRobots
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.ListRobots.ListRobots
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.ListRobots.ListRobots
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.ListRobots.ListRobots


-- | Returns a list of robot application. You can optionally provide
--   filters to retrieve specific robot applications.
--   
--   This operation returns paginated results.
module Amazonka.RobOMaker.ListRobotApplications

-- | <i>See:</i> <a>newListRobotApplications</a> smart constructor.
data ListRobotApplications
ListRobotApplications' :: Maybe Text -> Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Int -> ListRobotApplications

-- | The version qualifier of the robot application.
[$sel:versionQualifier:ListRobotApplications'] :: ListRobotApplications -> Maybe Text

-- | Optional filters to limit results.
--   
--   The filter name <tt>name</tt> is supported. When filtering, you must
--   use the complete value of the filtered item. You can use up to three
--   filters.
[$sel:filters:ListRobotApplications'] :: ListRobotApplications -> Maybe (NonEmpty Filter)

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListRobotApplications</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
[$sel:nextToken:ListRobotApplications'] :: ListRobotApplications -> Maybe Text

-- | When this parameter is used, <tt>ListRobotApplications</tt> only
--   returns <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListRobotApplications</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListRobotApplications</tt> returns up
--   to 100 results and a <tt>nextToken</tt> value if applicable.
[$sel:maxResults:ListRobotApplications'] :: ListRobotApplications -> Maybe Int

-- | Create a value of <a>ListRobotApplications</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionQualifier:ListRobotApplications'</a>,
--   <a>listRobotApplications_versionQualifier</a> - The version qualifier
--   of the robot application.
--   
--   <a>$sel:filters:ListRobotApplications'</a>,
--   <a>listRobotApplications_filters</a> - Optional filters to limit
--   results.
--   
--   The filter name <tt>name</tt> is supported. When filtering, you must
--   use the complete value of the filtered item. You can use up to three
--   filters.
--   
--   <a>$sel:nextToken:ListRobotApplications'</a>,
--   <a>listRobotApplications_nextToken</a> - If the previous paginated
--   request did not return all of the remaining results, the response
--   object's <tt>nextToken</tt> parameter value is set to a token. To
--   retrieve the next set of results, call <tt>ListRobotApplications</tt>
--   again and assign that token to the request object's <tt>nextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's NextToken parameter is set to null.
--   
--   <a>$sel:maxResults:ListRobotApplications'</a>,
--   <a>listRobotApplications_maxResults</a> - When this parameter is used,
--   <tt>ListRobotApplications</tt> only returns <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. The remaining results of the initial request can be seen by
--   sending another <tt>ListRobotApplications</tt> request with the
--   returned <tt>nextToken</tt> value. This value can be between 1 and
--   100. If this parameter is not used, then
--   <tt>ListRobotApplications</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
newListRobotApplications :: ListRobotApplications

-- | The version qualifier of the robot application.
listRobotApplications_versionQualifier :: Lens' ListRobotApplications (Maybe Text)

-- | Optional filters to limit results.
--   
--   The filter name <tt>name</tt> is supported. When filtering, you must
--   use the complete value of the filtered item. You can use up to three
--   filters.
listRobotApplications_filters :: Lens' ListRobotApplications (Maybe (NonEmpty Filter))

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListRobotApplications</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
listRobotApplications_nextToken :: Lens' ListRobotApplications (Maybe Text)

-- | When this parameter is used, <tt>ListRobotApplications</tt> only
--   returns <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListRobotApplications</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListRobotApplications</tt> returns up
--   to 100 results and a <tt>nextToken</tt> value if applicable.
listRobotApplications_maxResults :: Lens' ListRobotApplications (Maybe Int)

-- | <i>See:</i> <a>newListRobotApplicationsResponse</a> smart constructor.
data ListRobotApplicationsResponse
ListRobotApplicationsResponse' :: Maybe [RobotApplicationSummary] -> Maybe Text -> Int -> ListRobotApplicationsResponse

-- | A list of robot application summaries that meet the criteria of the
--   request.
[$sel:robotApplicationSummaries:ListRobotApplicationsResponse'] :: ListRobotApplicationsResponse -> Maybe [RobotApplicationSummary]

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListRobotApplications</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
[$sel:nextToken:ListRobotApplicationsResponse'] :: ListRobotApplicationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListRobotApplicationsResponse'] :: ListRobotApplicationsResponse -> Int

-- | Create a value of <a>ListRobotApplicationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:robotApplicationSummaries:ListRobotApplicationsResponse'</a>,
--   <a>listRobotApplicationsResponse_robotApplicationSummaries</a> - A
--   list of robot application summaries that meet the criteria of the
--   request.
--   
--   <a>$sel:nextToken:ListRobotApplications'</a>,
--   <a>listRobotApplicationsResponse_nextToken</a> - If the previous
--   paginated request did not return all of the remaining results, the
--   response object's <tt>nextToken</tt> parameter value is set to a
--   token. To retrieve the next set of results, call
--   <tt>ListRobotApplications</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
--   
--   <a>$sel:httpStatus:ListRobotApplicationsResponse'</a>,
--   <a>listRobotApplicationsResponse_httpStatus</a> - The response's http
--   status code.
newListRobotApplicationsResponse :: Int -> ListRobotApplicationsResponse

-- | A list of robot application summaries that meet the criteria of the
--   request.
listRobotApplicationsResponse_robotApplicationSummaries :: Lens' ListRobotApplicationsResponse (Maybe [RobotApplicationSummary])

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListRobotApplications</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
listRobotApplicationsResponse_nextToken :: Lens' ListRobotApplicationsResponse (Maybe Text)

-- | The response's http status code.
listRobotApplicationsResponse_httpStatus :: Lens' ListRobotApplicationsResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.ListRobotApplications.ListRobotApplications
instance GHC.Show.Show Amazonka.RobOMaker.ListRobotApplications.ListRobotApplications
instance GHC.Read.Read Amazonka.RobOMaker.ListRobotApplications.ListRobotApplications
instance GHC.Classes.Eq Amazonka.RobOMaker.ListRobotApplications.ListRobotApplications
instance GHC.Generics.Generic Amazonka.RobOMaker.ListRobotApplications.ListRobotApplicationsResponse
instance GHC.Show.Show Amazonka.RobOMaker.ListRobotApplications.ListRobotApplicationsResponse
instance GHC.Read.Read Amazonka.RobOMaker.ListRobotApplications.ListRobotApplicationsResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.ListRobotApplications.ListRobotApplicationsResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.ListRobotApplications.ListRobotApplications
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListRobotApplications.ListRobotApplicationsResponse
instance Amazonka.Pager.AWSPager Amazonka.RobOMaker.ListRobotApplications.ListRobotApplications
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.ListRobotApplications.ListRobotApplications
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListRobotApplications.ListRobotApplications
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.ListRobotApplications.ListRobotApplications
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.ListRobotApplications.ListRobotApplications
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.ListRobotApplications.ListRobotApplications
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.ListRobotApplications.ListRobotApplications


-- | Returns a list of fleets. You can optionally provide filters to
--   retrieve specific fleets.
--   
--   This operation returns paginated results.
module Amazonka.RobOMaker.ListFleets

-- | <i>See:</i> <a>newListFleets</a> smart constructor.
data ListFleets
ListFleets' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Int -> ListFleets

-- | Optional filters to limit results.
--   
--   The filter name <tt>name</tt> is supported. When filtering, you must
--   use the complete value of the filtered item. You can use up to three
--   filters.
[$sel:filters:ListFleets'] :: ListFleets -> Maybe (NonEmpty Filter)

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListFleets</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   This token should be treated as an opaque identifier that is only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
[$sel:nextToken:ListFleets'] :: ListFleets -> Maybe Text

-- | When this parameter is used, <tt>ListFleets</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another <tt>ListFleets</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 200. If this parameter is not used, then
--   <tt>ListFleets</tt> returns up to 200 results and a <tt>nextToken</tt>
--   value if applicable.
[$sel:maxResults:ListFleets'] :: ListFleets -> Maybe Int

-- | Create a value of <a>ListFleets</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListFleets'</a>, <a>listFleets_filters</a> - Optional
--   filters to limit results.
--   
--   The filter name <tt>name</tt> is supported. When filtering, you must
--   use the complete value of the filtered item. You can use up to three
--   filters.
--   
--   <a>$sel:nextToken:ListFleets'</a>, <a>listFleets_nextToken</a> - If
--   the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListFleets</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   This token should be treated as an opaque identifier that is only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:maxResults:ListFleets'</a>, <a>listFleets_maxResults</a> -
--   When this parameter is used, <tt>ListFleets</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another <tt>ListFleets</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 200. If this parameter is not used, then
--   <tt>ListFleets</tt> returns up to 200 results and a <tt>nextToken</tt>
--   value if applicable.
newListFleets :: ListFleets

-- | Optional filters to limit results.
--   
--   The filter name <tt>name</tt> is supported. When filtering, you must
--   use the complete value of the filtered item. You can use up to three
--   filters.
listFleets_filters :: Lens' ListFleets (Maybe (NonEmpty Filter))

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListFleets</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   This token should be treated as an opaque identifier that is only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
listFleets_nextToken :: Lens' ListFleets (Maybe Text)

-- | When this parameter is used, <tt>ListFleets</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another <tt>ListFleets</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 200. If this parameter is not used, then
--   <tt>ListFleets</tt> returns up to 200 results and a <tt>nextToken</tt>
--   value if applicable.
listFleets_maxResults :: Lens' ListFleets (Maybe Int)

-- | <i>See:</i> <a>newListFleetsResponse</a> smart constructor.
data ListFleetsResponse
ListFleetsResponse' :: Maybe [Fleet] -> Maybe Text -> Int -> ListFleetsResponse

-- | A list of fleet details meeting the request criteria.
[$sel:fleetDetails:ListFleetsResponse'] :: ListFleetsResponse -> Maybe [Fleet]

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListFleets</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
[$sel:nextToken:ListFleetsResponse'] :: ListFleetsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListFleetsResponse'] :: ListFleetsResponse -> Int

-- | Create a value of <a>ListFleetsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetDetails:ListFleetsResponse'</a>,
--   <a>listFleetsResponse_fleetDetails</a> - A list of fleet details
--   meeting the request criteria.
--   
--   <a>$sel:nextToken:ListFleets'</a>, <a>listFleetsResponse_nextToken</a>
--   - If the previous paginated request did not return all of the
--   remaining results, the response object's <tt>nextToken</tt> parameter
--   value is set to a token. To retrieve the next set of results, call
--   <tt>ListFleets</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   <a>$sel:httpStatus:ListFleetsResponse'</a>,
--   <a>listFleetsResponse_httpStatus</a> - The response's http status
--   code.
newListFleetsResponse :: Int -> ListFleetsResponse

-- | A list of fleet details meeting the request criteria.
listFleetsResponse_fleetDetails :: Lens' ListFleetsResponse (Maybe [Fleet])

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListFleets</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listFleetsResponse_nextToken :: Lens' ListFleetsResponse (Maybe Text)

-- | The response's http status code.
listFleetsResponse_httpStatus :: Lens' ListFleetsResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.ListFleets.ListFleets
instance GHC.Show.Show Amazonka.RobOMaker.ListFleets.ListFleets
instance GHC.Read.Read Amazonka.RobOMaker.ListFleets.ListFleets
instance GHC.Classes.Eq Amazonka.RobOMaker.ListFleets.ListFleets
instance GHC.Generics.Generic Amazonka.RobOMaker.ListFleets.ListFleetsResponse
instance GHC.Show.Show Amazonka.RobOMaker.ListFleets.ListFleetsResponse
instance GHC.Read.Read Amazonka.RobOMaker.ListFleets.ListFleetsResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.ListFleets.ListFleetsResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.ListFleets.ListFleets
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListFleets.ListFleetsResponse
instance Amazonka.Pager.AWSPager Amazonka.RobOMaker.ListFleets.ListFleets
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.ListFleets.ListFleets
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListFleets.ListFleets
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.ListFleets.ListFleets
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.ListFleets.ListFleets
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.ListFleets.ListFleets
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.ListFleets.ListFleets


-- | Returns a list of deployment jobs for a fleet. You can optionally
--   provide filters to retrieve specific deployment jobs.
--   
--   This operation returns paginated results.
module Amazonka.RobOMaker.ListDeploymentJobs

-- | <i>See:</i> <a>newListDeploymentJobs</a> smart constructor.
data ListDeploymentJobs
ListDeploymentJobs' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Int -> ListDeploymentJobs

-- | Optional filters to limit results.
--   
--   The filter names <tt>status</tt> and <tt>fleetName</tt> are supported.
--   When filtering, you must use the complete value of the filtered item.
--   You can use up to three filters, but they must be for the same named
--   item. For example, if you are looking for items with the status
--   <tt>InProgress</tt> or the status <tt>Pending</tt>.
[$sel:filters:ListDeploymentJobs'] :: ListDeploymentJobs -> Maybe (NonEmpty Filter)

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListDeploymentJobs</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
[$sel:nextToken:ListDeploymentJobs'] :: ListDeploymentJobs -> Maybe Text

-- | When this parameter is used, <tt>ListDeploymentJobs</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListDeploymentJobs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 200. If this
--   parameter is not used, then <tt>ListDeploymentJobs</tt> returns up to
--   200 results and a <tt>nextToken</tt> value if applicable.
[$sel:maxResults:ListDeploymentJobs'] :: ListDeploymentJobs -> Maybe Int

-- | Create a value of <a>ListDeploymentJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListDeploymentJobs'</a>,
--   <a>listDeploymentJobs_filters</a> - Optional filters to limit results.
--   
--   The filter names <tt>status</tt> and <tt>fleetName</tt> are supported.
--   When filtering, you must use the complete value of the filtered item.
--   You can use up to three filters, but they must be for the same named
--   item. For example, if you are looking for items with the status
--   <tt>InProgress</tt> or the status <tt>Pending</tt>.
--   
--   <a>$sel:nextToken:ListDeploymentJobs'</a>,
--   <a>listDeploymentJobs_nextToken</a> - If the previous paginated
--   request did not return all of the remaining results, the response
--   object's <tt>nextToken</tt> parameter value is set to a token. To
--   retrieve the next set of results, call <tt>ListDeploymentJobs</tt>
--   again and assign that token to the request object's <tt>nextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's NextToken parameter is set to null.
--   
--   <a>$sel:maxResults:ListDeploymentJobs'</a>,
--   <a>listDeploymentJobs_maxResults</a> - When this parameter is used,
--   <tt>ListDeploymentJobs</tt> only returns <tt>maxResults</tt> results
--   in a single page along with a <tt>nextToken</tt> response element. The
--   remaining results of the initial request can be seen by sending
--   another <tt>ListDeploymentJobs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 200. If this
--   parameter is not used, then <tt>ListDeploymentJobs</tt> returns up to
--   200 results and a <tt>nextToken</tt> value if applicable.
newListDeploymentJobs :: ListDeploymentJobs

-- | Optional filters to limit results.
--   
--   The filter names <tt>status</tt> and <tt>fleetName</tt> are supported.
--   When filtering, you must use the complete value of the filtered item.
--   You can use up to three filters, but they must be for the same named
--   item. For example, if you are looking for items with the status
--   <tt>InProgress</tt> or the status <tt>Pending</tt>.
listDeploymentJobs_filters :: Lens' ListDeploymentJobs (Maybe (NonEmpty Filter))

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListDeploymentJobs</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listDeploymentJobs_nextToken :: Lens' ListDeploymentJobs (Maybe Text)

-- | When this parameter is used, <tt>ListDeploymentJobs</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListDeploymentJobs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 200. If this
--   parameter is not used, then <tt>ListDeploymentJobs</tt> returns up to
--   200 results and a <tt>nextToken</tt> value if applicable.
listDeploymentJobs_maxResults :: Lens' ListDeploymentJobs (Maybe Int)

-- | <i>See:</i> <a>newListDeploymentJobsResponse</a> smart constructor.
data ListDeploymentJobsResponse
ListDeploymentJobsResponse' :: Maybe [DeploymentJob] -> Maybe Text -> Int -> ListDeploymentJobsResponse

-- | A list of deployment jobs that meet the criteria of the request.
[$sel:deploymentJobs:ListDeploymentJobsResponse'] :: ListDeploymentJobsResponse -> Maybe [DeploymentJob]

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListDeploymentJobs</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
[$sel:nextToken:ListDeploymentJobsResponse'] :: ListDeploymentJobsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListDeploymentJobsResponse'] :: ListDeploymentJobsResponse -> Int

-- | Create a value of <a>ListDeploymentJobsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentJobs:ListDeploymentJobsResponse'</a>,
--   <a>listDeploymentJobsResponse_deploymentJobs</a> - A list of
--   deployment jobs that meet the criteria of the request.
--   
--   <a>$sel:nextToken:ListDeploymentJobs'</a>,
--   <a>listDeploymentJobsResponse_nextToken</a> - If the previous
--   paginated request did not return all of the remaining results, the
--   response object's <tt>nextToken</tt> parameter value is set to a
--   token. To retrieve the next set of results, call
--   <tt>ListDeploymentJobs</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   <a>$sel:httpStatus:ListDeploymentJobsResponse'</a>,
--   <a>listDeploymentJobsResponse_httpStatus</a> - The response's http
--   status code.
newListDeploymentJobsResponse :: Int -> ListDeploymentJobsResponse

-- | A list of deployment jobs that meet the criteria of the request.
listDeploymentJobsResponse_deploymentJobs :: Lens' ListDeploymentJobsResponse (Maybe [DeploymentJob])

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListDeploymentJobs</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listDeploymentJobsResponse_nextToken :: Lens' ListDeploymentJobsResponse (Maybe Text)

-- | The response's http status code.
listDeploymentJobsResponse_httpStatus :: Lens' ListDeploymentJobsResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.ListDeploymentJobs.ListDeploymentJobs
instance GHC.Show.Show Amazonka.RobOMaker.ListDeploymentJobs.ListDeploymentJobs
instance GHC.Read.Read Amazonka.RobOMaker.ListDeploymentJobs.ListDeploymentJobs
instance GHC.Classes.Eq Amazonka.RobOMaker.ListDeploymentJobs.ListDeploymentJobs
instance GHC.Generics.Generic Amazonka.RobOMaker.ListDeploymentJobs.ListDeploymentJobsResponse
instance GHC.Show.Show Amazonka.RobOMaker.ListDeploymentJobs.ListDeploymentJobsResponse
instance GHC.Read.Read Amazonka.RobOMaker.ListDeploymentJobs.ListDeploymentJobsResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.ListDeploymentJobs.ListDeploymentJobsResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.ListDeploymentJobs.ListDeploymentJobs
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListDeploymentJobs.ListDeploymentJobsResponse
instance Amazonka.Pager.AWSPager Amazonka.RobOMaker.ListDeploymentJobs.ListDeploymentJobs
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.ListDeploymentJobs.ListDeploymentJobs
instance Control.DeepSeq.NFData Amazonka.RobOMaker.ListDeploymentJobs.ListDeploymentJobs
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.ListDeploymentJobs.ListDeploymentJobs
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.ListDeploymentJobs.ListDeploymentJobs
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.ListDeploymentJobs.ListDeploymentJobs
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.ListDeploymentJobs.ListDeploymentJobs


-- | Gets the world template body.
module Amazonka.RobOMaker.GetWorldTemplateBody

-- | <i>See:</i> <a>newGetWorldTemplateBody</a> smart constructor.
data GetWorldTemplateBody
GetWorldTemplateBody' :: Maybe Text -> Maybe Text -> GetWorldTemplateBody

-- | The Amazon Resource Name (arn) of the world template.
[$sel:template:GetWorldTemplateBody'] :: GetWorldTemplateBody -> Maybe Text

-- | The Amazon Resource Name (arn) of the world generator job.
[$sel:generationJob:GetWorldTemplateBody'] :: GetWorldTemplateBody -> Maybe Text

-- | Create a value of <a>GetWorldTemplateBody</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:template:GetWorldTemplateBody'</a>,
--   <a>getWorldTemplateBody_template</a> - The Amazon Resource Name (arn)
--   of the world template.
--   
--   <a>$sel:generationJob:GetWorldTemplateBody'</a>,
--   <a>getWorldTemplateBody_generationJob</a> - The Amazon Resource Name
--   (arn) of the world generator job.
newGetWorldTemplateBody :: GetWorldTemplateBody

-- | The Amazon Resource Name (arn) of the world template.
getWorldTemplateBody_template :: Lens' GetWorldTemplateBody (Maybe Text)

-- | The Amazon Resource Name (arn) of the world generator job.
getWorldTemplateBody_generationJob :: Lens' GetWorldTemplateBody (Maybe Text)

-- | <i>See:</i> <a>newGetWorldTemplateBodyResponse</a> smart constructor.
data GetWorldTemplateBodyResponse
GetWorldTemplateBodyResponse' :: Maybe Text -> Int -> GetWorldTemplateBodyResponse

-- | The world template body.
[$sel:templateBody:GetWorldTemplateBodyResponse'] :: GetWorldTemplateBodyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetWorldTemplateBodyResponse'] :: GetWorldTemplateBodyResponse -> Int

-- | Create a value of <a>GetWorldTemplateBodyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:templateBody:GetWorldTemplateBodyResponse'</a>,
--   <a>getWorldTemplateBodyResponse_templateBody</a> - The world template
--   body.
--   
--   <a>$sel:httpStatus:GetWorldTemplateBodyResponse'</a>,
--   <a>getWorldTemplateBodyResponse_httpStatus</a> - The response's http
--   status code.
newGetWorldTemplateBodyResponse :: Int -> GetWorldTemplateBodyResponse

-- | The world template body.
getWorldTemplateBodyResponse_templateBody :: Lens' GetWorldTemplateBodyResponse (Maybe Text)

-- | The response's http status code.
getWorldTemplateBodyResponse_httpStatus :: Lens' GetWorldTemplateBodyResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.GetWorldTemplateBody.GetWorldTemplateBody
instance GHC.Show.Show Amazonka.RobOMaker.GetWorldTemplateBody.GetWorldTemplateBody
instance GHC.Read.Read Amazonka.RobOMaker.GetWorldTemplateBody.GetWorldTemplateBody
instance GHC.Classes.Eq Amazonka.RobOMaker.GetWorldTemplateBody.GetWorldTemplateBody
instance GHC.Generics.Generic Amazonka.RobOMaker.GetWorldTemplateBody.GetWorldTemplateBodyResponse
instance GHC.Show.Show Amazonka.RobOMaker.GetWorldTemplateBody.GetWorldTemplateBodyResponse
instance GHC.Read.Read Amazonka.RobOMaker.GetWorldTemplateBody.GetWorldTemplateBodyResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.GetWorldTemplateBody.GetWorldTemplateBodyResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.GetWorldTemplateBody.GetWorldTemplateBody
instance Control.DeepSeq.NFData Amazonka.RobOMaker.GetWorldTemplateBody.GetWorldTemplateBodyResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.GetWorldTemplateBody.GetWorldTemplateBody
instance Control.DeepSeq.NFData Amazonka.RobOMaker.GetWorldTemplateBody.GetWorldTemplateBody
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.GetWorldTemplateBody.GetWorldTemplateBody
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.GetWorldTemplateBody.GetWorldTemplateBody
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.GetWorldTemplateBody.GetWorldTemplateBody
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.GetWorldTemplateBody.GetWorldTemplateBody


-- | Describes a world template.
module Amazonka.RobOMaker.DescribeWorldTemplate

-- | <i>See:</i> <a>newDescribeWorldTemplate</a> smart constructor.
data DescribeWorldTemplate
DescribeWorldTemplate' :: Text -> DescribeWorldTemplate

-- | The Amazon Resource Name (arn) of the world template you want to
--   describe.
[$sel:template:DescribeWorldTemplate'] :: DescribeWorldTemplate -> Text

-- | Create a value of <a>DescribeWorldTemplate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:template:DescribeWorldTemplate'</a>,
--   <a>describeWorldTemplate_template</a> - The Amazon Resource Name (arn)
--   of the world template you want to describe.
newDescribeWorldTemplate :: Text -> DescribeWorldTemplate

-- | The Amazon Resource Name (arn) of the world template you want to
--   describe.
describeWorldTemplate_template :: Lens' DescribeWorldTemplate Text

-- | <i>See:</i> <a>newDescribeWorldTemplateResponse</a> smart constructor.
data DescribeWorldTemplateResponse
DescribeWorldTemplateResponse' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> DescribeWorldTemplateResponse

-- | The time, in milliseconds since the epoch, when the world template was
--   last updated.
[$sel:lastUpdatedAt:DescribeWorldTemplateResponse'] :: DescribeWorldTemplateResponse -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the world template.
[$sel:arn:DescribeWorldTemplateResponse'] :: DescribeWorldTemplateResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the world template was
--   created.
[$sel:createdAt:DescribeWorldTemplateResponse'] :: DescribeWorldTemplateResponse -> Maybe POSIX

-- | The name of the world template.
[$sel:name:DescribeWorldTemplateResponse'] :: DescribeWorldTemplateResponse -> Maybe Text

-- | The version of the world template that you're using.
[$sel:version:DescribeWorldTemplateResponse'] :: DescribeWorldTemplateResponse -> Maybe Text

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:DescribeWorldTemplateResponse'] :: DescribeWorldTemplateResponse -> Maybe Text

-- | A map that contains tag keys and tag values that are attached to the
--   world template.
[$sel:tags:DescribeWorldTemplateResponse'] :: DescribeWorldTemplateResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeWorldTemplateResponse'] :: DescribeWorldTemplateResponse -> Int

-- | Create a value of <a>DescribeWorldTemplateResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:DescribeWorldTemplateResponse'</a>,
--   <a>describeWorldTemplateResponse_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the world template was last
--   updated.
--   
--   <a>$sel:arn:DescribeWorldTemplateResponse'</a>,
--   <a>describeWorldTemplateResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the world template.
--   
--   <a>$sel:createdAt:DescribeWorldTemplateResponse'</a>,
--   <a>describeWorldTemplateResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the world template was created.
--   
--   <a>$sel:name:DescribeWorldTemplateResponse'</a>,
--   <a>describeWorldTemplateResponse_name</a> - The name of the world
--   template.
--   
--   <a>$sel:version:DescribeWorldTemplateResponse'</a>,
--   <a>describeWorldTemplateResponse_version</a> - The version of the
--   world template that you're using.
--   
--   <a>$sel:clientRequestToken:DescribeWorldTemplateResponse'</a>,
--   <a>describeWorldTemplateResponse_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:tags:DescribeWorldTemplateResponse'</a>,
--   <a>describeWorldTemplateResponse_tags</a> - A map that contains tag
--   keys and tag values that are attached to the world template.
--   
--   <a>$sel:httpStatus:DescribeWorldTemplateResponse'</a>,
--   <a>describeWorldTemplateResponse_httpStatus</a> - The response's http
--   status code.
newDescribeWorldTemplateResponse :: Int -> DescribeWorldTemplateResponse

-- | The time, in milliseconds since the epoch, when the world template was
--   last updated.
describeWorldTemplateResponse_lastUpdatedAt :: Lens' DescribeWorldTemplateResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the world template.
describeWorldTemplateResponse_arn :: Lens' DescribeWorldTemplateResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world template was
--   created.
describeWorldTemplateResponse_createdAt :: Lens' DescribeWorldTemplateResponse (Maybe UTCTime)

-- | The name of the world template.
describeWorldTemplateResponse_name :: Lens' DescribeWorldTemplateResponse (Maybe Text)

-- | The version of the world template that you're using.
describeWorldTemplateResponse_version :: Lens' DescribeWorldTemplateResponse (Maybe Text)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
describeWorldTemplateResponse_clientRequestToken :: Lens' DescribeWorldTemplateResponse (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   world template.
describeWorldTemplateResponse_tags :: Lens' DescribeWorldTemplateResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeWorldTemplateResponse_httpStatus :: Lens' DescribeWorldTemplateResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeWorldTemplate.DescribeWorldTemplate
instance GHC.Show.Show Amazonka.RobOMaker.DescribeWorldTemplate.DescribeWorldTemplate
instance GHC.Read.Read Amazonka.RobOMaker.DescribeWorldTemplate.DescribeWorldTemplate
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeWorldTemplate.DescribeWorldTemplate
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeWorldTemplate.DescribeWorldTemplateResponse
instance GHC.Show.Show Amazonka.RobOMaker.DescribeWorldTemplate.DescribeWorldTemplateResponse
instance GHC.Read.Read Amazonka.RobOMaker.DescribeWorldTemplate.DescribeWorldTemplateResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeWorldTemplate.DescribeWorldTemplateResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.DescribeWorldTemplate.DescribeWorldTemplate
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeWorldTemplate.DescribeWorldTemplateResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.DescribeWorldTemplate.DescribeWorldTemplate
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeWorldTemplate.DescribeWorldTemplate
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.DescribeWorldTemplate.DescribeWorldTemplate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.DescribeWorldTemplate.DescribeWorldTemplate
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.DescribeWorldTemplate.DescribeWorldTemplate
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.DescribeWorldTemplate.DescribeWorldTemplate


-- | Describes a world generation job.
module Amazonka.RobOMaker.DescribeWorldGenerationJob

-- | <i>See:</i> <a>newDescribeWorldGenerationJob</a> smart constructor.
data DescribeWorldGenerationJob
DescribeWorldGenerationJob' :: Text -> DescribeWorldGenerationJob

-- | The Amazon Resource Name (arn) of the world generation job to
--   describe.
[$sel:job:DescribeWorldGenerationJob'] :: DescribeWorldGenerationJob -> Text

-- | Create a value of <a>DescribeWorldGenerationJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:DescribeWorldGenerationJob'</a>,
--   <a>describeWorldGenerationJob_job</a> - The Amazon Resource Name (arn)
--   of the world generation job to describe.
newDescribeWorldGenerationJob :: Text -> DescribeWorldGenerationJob

-- | The Amazon Resource Name (arn) of the world generation job to
--   describe.
describeWorldGenerationJob_job :: Lens' DescribeWorldGenerationJob Text

-- | <i>See:</i> <a>newDescribeWorldGenerationJobResponse</a> smart
--   constructor.
data DescribeWorldGenerationJobResponse
DescribeWorldGenerationJobResponse' :: Maybe Text -> Maybe WorldGenerationJobStatus -> Maybe Text -> Maybe POSIX -> Maybe WorldGenerationJobErrorCode -> Maybe WorldCount -> Maybe FinishedWorldsSummary -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> DescribeWorldGenerationJobResponse

-- | The reason why the world generation job failed.
[$sel:failureReason:DescribeWorldGenerationJobResponse'] :: DescribeWorldGenerationJobResponse -> Maybe Text

-- | The status of the world generation job:
--   
--   <ul>
--   <li><i>Pending</i> The world generation job request is pending.</li>
--   <li><i>Running</i> The world generation job is running.</li>
--   <li><i>Completed</i> The world generation job completed.</li>
--   <li><i>Failed</i> The world generation job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>PartialFailed</i> Some worlds did not generate.</li>
--   <li><i>Canceled</i> The world generation job was cancelled.</li>
--   <li><i>Canceling</i> The world generation job is being cancelled.</li>
--   </ul>
[$sel:status:DescribeWorldGenerationJobResponse'] :: DescribeWorldGenerationJobResponse -> Maybe WorldGenerationJobStatus

-- | The Amazon Resource Name (ARN) of the world generation job.
[$sel:arn:DescribeWorldGenerationJobResponse'] :: DescribeWorldGenerationJobResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the world generation
--   job was created.
[$sel:createdAt:DescribeWorldGenerationJobResponse'] :: DescribeWorldGenerationJobResponse -> Maybe POSIX

-- | The failure code of the world generation job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
[$sel:failureCode:DescribeWorldGenerationJobResponse'] :: DescribeWorldGenerationJobResponse -> Maybe WorldGenerationJobErrorCode

-- | Information about the world count.
[$sel:worldCount:DescribeWorldGenerationJobResponse'] :: DescribeWorldGenerationJobResponse -> Maybe WorldCount

-- | Summary information about finished worlds.
[$sel:finishedWorldsSummary:DescribeWorldGenerationJobResponse'] :: DescribeWorldGenerationJobResponse -> Maybe FinishedWorldsSummary

-- | The Amazon Resource Name (arn) of the world template.
[$sel:template:DescribeWorldGenerationJobResponse'] :: DescribeWorldGenerationJobResponse -> Maybe Text

-- | A map that contains tag keys and tag values that are attached to the
--   generated worlds.
[$sel:worldTags:DescribeWorldGenerationJobResponse'] :: DescribeWorldGenerationJobResponse -> Maybe (HashMap Text Text)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:DescribeWorldGenerationJobResponse'] :: DescribeWorldGenerationJobResponse -> Maybe Text

-- | A map that contains tag keys and tag values that are attached to the
--   world generation job.
[$sel:tags:DescribeWorldGenerationJobResponse'] :: DescribeWorldGenerationJobResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeWorldGenerationJobResponse'] :: DescribeWorldGenerationJobResponse -> Int

-- | Create a value of <a>DescribeWorldGenerationJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_failureReason</a> - The reason
--   why the world generation job failed.
--   
--   <a>$sel:status:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_status</a> - The status of the
--   world generation job:
--   
--   <ul>
--   <li><i>Pending</i> The world generation job request is pending.</li>
--   <li><i>Running</i> The world generation job is running.</li>
--   <li><i>Completed</i> The world generation job completed.</li>
--   <li><i>Failed</i> The world generation job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>PartialFailed</i> Some worlds did not generate.</li>
--   <li><i>Canceled</i> The world generation job was cancelled.</li>
--   <li><i>Canceling</i> The world generation job is being cancelled.</li>
--   </ul>
--   
--   <a>$sel:arn:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_arn</a> - The Amazon Resource
--   Name (ARN) of the world generation job.
--   
--   <a>$sel:createdAt:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the world generation job was
--   created.
--   
--   <a>$sel:failureCode:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_failureCode</a> - The failure
--   code of the world generation job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
--   
--   <a>$sel:worldCount:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_worldCount</a> - Information
--   about the world count.
--   
--   <a>$sel:finishedWorldsSummary:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_finishedWorldsSummary</a> -
--   Summary information about finished worlds.
--   
--   <a>$sel:template:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_template</a> - The Amazon
--   Resource Name (arn) of the world template.
--   
--   <a>$sel:worldTags:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_worldTags</a> - A map that
--   contains tag keys and tag values that are attached to the generated
--   worlds.
--   
--   <a>$sel:clientRequestToken:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:tags:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_tags</a> - A map that contains
--   tag keys and tag values that are attached to the world generation job.
--   
--   <a>$sel:httpStatus:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_httpStatus</a> - The response's
--   http status code.
newDescribeWorldGenerationJobResponse :: Int -> DescribeWorldGenerationJobResponse

-- | The reason why the world generation job failed.
describeWorldGenerationJobResponse_failureReason :: Lens' DescribeWorldGenerationJobResponse (Maybe Text)

-- | The status of the world generation job:
--   
--   <ul>
--   <li><i>Pending</i> The world generation job request is pending.</li>
--   <li><i>Running</i> The world generation job is running.</li>
--   <li><i>Completed</i> The world generation job completed.</li>
--   <li><i>Failed</i> The world generation job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>PartialFailed</i> Some worlds did not generate.</li>
--   <li><i>Canceled</i> The world generation job was cancelled.</li>
--   <li><i>Canceling</i> The world generation job is being cancelled.</li>
--   </ul>
describeWorldGenerationJobResponse_status :: Lens' DescribeWorldGenerationJobResponse (Maybe WorldGenerationJobStatus)

-- | The Amazon Resource Name (ARN) of the world generation job.
describeWorldGenerationJobResponse_arn :: Lens' DescribeWorldGenerationJobResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world generation
--   job was created.
describeWorldGenerationJobResponse_createdAt :: Lens' DescribeWorldGenerationJobResponse (Maybe UTCTime)

-- | The failure code of the world generation job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
describeWorldGenerationJobResponse_failureCode :: Lens' DescribeWorldGenerationJobResponse (Maybe WorldGenerationJobErrorCode)

-- | Information about the world count.
describeWorldGenerationJobResponse_worldCount :: Lens' DescribeWorldGenerationJobResponse (Maybe WorldCount)

-- | Summary information about finished worlds.
describeWorldGenerationJobResponse_finishedWorldsSummary :: Lens' DescribeWorldGenerationJobResponse (Maybe FinishedWorldsSummary)

-- | The Amazon Resource Name (arn) of the world template.
describeWorldGenerationJobResponse_template :: Lens' DescribeWorldGenerationJobResponse (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   generated worlds.
describeWorldGenerationJobResponse_worldTags :: Lens' DescribeWorldGenerationJobResponse (Maybe (HashMap Text Text))

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
describeWorldGenerationJobResponse_clientRequestToken :: Lens' DescribeWorldGenerationJobResponse (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   world generation job.
describeWorldGenerationJobResponse_tags :: Lens' DescribeWorldGenerationJobResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeWorldGenerationJobResponse_httpStatus :: Lens' DescribeWorldGenerationJobResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeWorldGenerationJob.DescribeWorldGenerationJob
instance GHC.Show.Show Amazonka.RobOMaker.DescribeWorldGenerationJob.DescribeWorldGenerationJob
instance GHC.Read.Read Amazonka.RobOMaker.DescribeWorldGenerationJob.DescribeWorldGenerationJob
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeWorldGenerationJob.DescribeWorldGenerationJob
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeWorldGenerationJob.DescribeWorldGenerationJobResponse
instance GHC.Show.Show Amazonka.RobOMaker.DescribeWorldGenerationJob.DescribeWorldGenerationJobResponse
instance GHC.Read.Read Amazonka.RobOMaker.DescribeWorldGenerationJob.DescribeWorldGenerationJobResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeWorldGenerationJob.DescribeWorldGenerationJobResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.DescribeWorldGenerationJob.DescribeWorldGenerationJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeWorldGenerationJob.DescribeWorldGenerationJobResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.DescribeWorldGenerationJob.DescribeWorldGenerationJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeWorldGenerationJob.DescribeWorldGenerationJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.DescribeWorldGenerationJob.DescribeWorldGenerationJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.DescribeWorldGenerationJob.DescribeWorldGenerationJob
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.DescribeWorldGenerationJob.DescribeWorldGenerationJob
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.DescribeWorldGenerationJob.DescribeWorldGenerationJob


-- | Describes a world export job.
module Amazonka.RobOMaker.DescribeWorldExportJob

-- | <i>See:</i> <a>newDescribeWorldExportJob</a> smart constructor.
data DescribeWorldExportJob
DescribeWorldExportJob' :: Text -> DescribeWorldExportJob

-- | The Amazon Resource Name (arn) of the world export job to describe.
[$sel:job:DescribeWorldExportJob'] :: DescribeWorldExportJob -> Text

-- | Create a value of <a>DescribeWorldExportJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:DescribeWorldExportJob'</a>,
--   <a>describeWorldExportJob_job</a> - The Amazon Resource Name (arn) of
--   the world export job to describe.
newDescribeWorldExportJob :: Text -> DescribeWorldExportJob

-- | The Amazon Resource Name (arn) of the world export job to describe.
describeWorldExportJob_job :: Lens' DescribeWorldExportJob Text

-- | <i>See:</i> <a>newDescribeWorldExportJobResponse</a> smart
--   constructor.
data DescribeWorldExportJobResponse
DescribeWorldExportJobResponse' :: Maybe Text -> Maybe WorldExportJobStatus -> Maybe Text -> Maybe POSIX -> Maybe WorldExportJobErrorCode -> Maybe OutputLocation -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe (HashMap Text Text) -> Int -> DescribeWorldExportJobResponse

-- | The reason why the world export job failed.
[$sel:failureReason:DescribeWorldExportJobResponse'] :: DescribeWorldExportJobResponse -> Maybe Text

-- | The status of the world export job.
--   
--   <ul>
--   <li><i>Pending</i> The world export job request is pending.</li>
--   <li><i>Running</i> The world export job is running.</li>
--   <li><i>Completed</i> The world export job completed.</li>
--   <li><i>Failed</i> The world export job failed. See
--   <tt>failureCode</tt> and <tt>failureReason</tt> for more
--   information.</li>
--   <li><i>Canceled</i> The world export job was cancelled.</li>
--   <li><i>Canceling</i> The world export job is being cancelled.</li>
--   </ul>
[$sel:status:DescribeWorldExportJobResponse'] :: DescribeWorldExportJobResponse -> Maybe WorldExportJobStatus

-- | The Amazon Resource Name (ARN) of the world export job.
[$sel:arn:DescribeWorldExportJobResponse'] :: DescribeWorldExportJobResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the world export job
--   was created.
[$sel:createdAt:DescribeWorldExportJobResponse'] :: DescribeWorldExportJobResponse -> Maybe POSIX

-- | The failure code of the world export job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
[$sel:failureCode:DescribeWorldExportJobResponse'] :: DescribeWorldExportJobResponse -> Maybe WorldExportJobErrorCode
[$sel:outputLocation:DescribeWorldExportJobResponse'] :: DescribeWorldExportJobResponse -> Maybe OutputLocation

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:DescribeWorldExportJobResponse'] :: DescribeWorldExportJobResponse -> Maybe Text

-- | The IAM role that the world export process uses to access the Amazon
--   S3 bucket and put the export.
[$sel:iamRole:DescribeWorldExportJobResponse'] :: DescribeWorldExportJobResponse -> Maybe Text

-- | A list of Amazon Resource Names (arns) that correspond to worlds to be
--   exported.
[$sel:worlds:DescribeWorldExportJobResponse'] :: DescribeWorldExportJobResponse -> Maybe (NonEmpty Text)

-- | A map that contains tag keys and tag values that are attached to the
--   world export job.
[$sel:tags:DescribeWorldExportJobResponse'] :: DescribeWorldExportJobResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeWorldExportJobResponse'] :: DescribeWorldExportJobResponse -> Int

-- | Create a value of <a>DescribeWorldExportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_failureReason</a> - The reason why
--   the world export job failed.
--   
--   <a>$sel:status:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_status</a> - The status of the world
--   export job.
--   
--   <ul>
--   <li><i>Pending</i> The world export job request is pending.</li>
--   <li><i>Running</i> The world export job is running.</li>
--   <li><i>Completed</i> The world export job completed.</li>
--   <li><i>Failed</i> The world export job failed. See
--   <tt>failureCode</tt> and <tt>failureReason</tt> for more
--   information.</li>
--   <li><i>Canceled</i> The world export job was cancelled.</li>
--   <li><i>Canceling</i> The world export job is being cancelled.</li>
--   </ul>
--   
--   <a>$sel:arn:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the world export job.
--   
--   <a>$sel:createdAt:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the world export job was created.
--   
--   <a>$sel:failureCode:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_failureCode</a> - The failure code
--   of the world export job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
--   
--   <a>$sel:outputLocation:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_outputLocation</a> - Undocumented
--   member.
--   
--   <a>$sel:clientRequestToken:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:iamRole:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_iamRole</a> - The IAM role that the
--   world export process uses to access the Amazon S3 bucket and put the
--   export.
--   
--   <a>$sel:worlds:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_worlds</a> - A list of Amazon
--   Resource Names (arns) that correspond to worlds to be exported.
--   
--   <a>$sel:tags:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_tags</a> - A map that contains tag
--   keys and tag values that are attached to the world export job.
--   
--   <a>$sel:httpStatus:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_httpStatus</a> - The response's http
--   status code.
newDescribeWorldExportJobResponse :: Int -> DescribeWorldExportJobResponse

-- | The reason why the world export job failed.
describeWorldExportJobResponse_failureReason :: Lens' DescribeWorldExportJobResponse (Maybe Text)

-- | The status of the world export job.
--   
--   <ul>
--   <li><i>Pending</i> The world export job request is pending.</li>
--   <li><i>Running</i> The world export job is running.</li>
--   <li><i>Completed</i> The world export job completed.</li>
--   <li><i>Failed</i> The world export job failed. See
--   <tt>failureCode</tt> and <tt>failureReason</tt> for more
--   information.</li>
--   <li><i>Canceled</i> The world export job was cancelled.</li>
--   <li><i>Canceling</i> The world export job is being cancelled.</li>
--   </ul>
describeWorldExportJobResponse_status :: Lens' DescribeWorldExportJobResponse (Maybe WorldExportJobStatus)

-- | The Amazon Resource Name (ARN) of the world export job.
describeWorldExportJobResponse_arn :: Lens' DescribeWorldExportJobResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world export job
--   was created.
describeWorldExportJobResponse_createdAt :: Lens' DescribeWorldExportJobResponse (Maybe UTCTime)

-- | The failure code of the world export job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
describeWorldExportJobResponse_failureCode :: Lens' DescribeWorldExportJobResponse (Maybe WorldExportJobErrorCode)

-- | Undocumented member.
describeWorldExportJobResponse_outputLocation :: Lens' DescribeWorldExportJobResponse (Maybe OutputLocation)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
describeWorldExportJobResponse_clientRequestToken :: Lens' DescribeWorldExportJobResponse (Maybe Text)

-- | The IAM role that the world export process uses to access the Amazon
--   S3 bucket and put the export.
describeWorldExportJobResponse_iamRole :: Lens' DescribeWorldExportJobResponse (Maybe Text)

-- | A list of Amazon Resource Names (arns) that correspond to worlds to be
--   exported.
describeWorldExportJobResponse_worlds :: Lens' DescribeWorldExportJobResponse (Maybe (NonEmpty Text))

-- | A map that contains tag keys and tag values that are attached to the
--   world export job.
describeWorldExportJobResponse_tags :: Lens' DescribeWorldExportJobResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeWorldExportJobResponse_httpStatus :: Lens' DescribeWorldExportJobResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeWorldExportJob.DescribeWorldExportJob
instance GHC.Show.Show Amazonka.RobOMaker.DescribeWorldExportJob.DescribeWorldExportJob
instance GHC.Read.Read Amazonka.RobOMaker.DescribeWorldExportJob.DescribeWorldExportJob
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeWorldExportJob.DescribeWorldExportJob
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeWorldExportJob.DescribeWorldExportJobResponse
instance GHC.Show.Show Amazonka.RobOMaker.DescribeWorldExportJob.DescribeWorldExportJobResponse
instance GHC.Read.Read Amazonka.RobOMaker.DescribeWorldExportJob.DescribeWorldExportJobResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeWorldExportJob.DescribeWorldExportJobResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.DescribeWorldExportJob.DescribeWorldExportJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeWorldExportJob.DescribeWorldExportJobResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.DescribeWorldExportJob.DescribeWorldExportJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeWorldExportJob.DescribeWorldExportJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.DescribeWorldExportJob.DescribeWorldExportJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.DescribeWorldExportJob.DescribeWorldExportJob
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.DescribeWorldExportJob.DescribeWorldExportJob
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.DescribeWorldExportJob.DescribeWorldExportJob


-- | Describes a world.
module Amazonka.RobOMaker.DescribeWorld

-- | <i>See:</i> <a>newDescribeWorld</a> smart constructor.
data DescribeWorld
DescribeWorld' :: Text -> DescribeWorld

-- | The Amazon Resource Name (arn) of the world you want to describe.
[$sel:world:DescribeWorld'] :: DescribeWorld -> Text

-- | Create a value of <a>DescribeWorld</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:world:DescribeWorld'</a>, <a>describeWorld_world</a> - The
--   Amazon Resource Name (arn) of the world you want to describe.
newDescribeWorld :: Text -> DescribeWorld

-- | The Amazon Resource Name (arn) of the world you want to describe.
describeWorld_world :: Lens' DescribeWorld Text

-- | <i>See:</i> <a>newDescribeWorldResponse</a> smart constructor.
data DescribeWorldResponse
DescribeWorldResponse' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> DescribeWorldResponse

-- | Returns the JSON formatted string that describes the contents of your
--   world.
[$sel:worldDescriptionBody:DescribeWorldResponse'] :: DescribeWorldResponse -> Maybe Text

-- | The Amazon Resource Name (arn) of the world.
[$sel:arn:DescribeWorldResponse'] :: DescribeWorldResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the world was created.
[$sel:createdAt:DescribeWorldResponse'] :: DescribeWorldResponse -> Maybe POSIX

-- | The world template.
[$sel:template:DescribeWorldResponse'] :: DescribeWorldResponse -> Maybe Text

-- | A map that contains tag keys and tag values that are attached to the
--   world.
[$sel:tags:DescribeWorldResponse'] :: DescribeWorldResponse -> Maybe (HashMap Text Text)

-- | The Amazon Resource Name (arn) of the world generation job that
--   generated the world.
[$sel:generationJob:DescribeWorldResponse'] :: DescribeWorldResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeWorldResponse'] :: DescribeWorldResponse -> Int

-- | Create a value of <a>DescribeWorldResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:worldDescriptionBody:DescribeWorldResponse'</a>,
--   <a>describeWorldResponse_worldDescriptionBody</a> - Returns the JSON
--   formatted string that describes the contents of your world.
--   
--   <a>$sel:arn:DescribeWorldResponse'</a>,
--   <a>describeWorldResponse_arn</a> - The Amazon Resource Name (arn) of
--   the world.
--   
--   <a>$sel:createdAt:DescribeWorldResponse'</a>,
--   <a>describeWorldResponse_createdAt</a> - The time, in milliseconds
--   since the epoch, when the world was created.
--   
--   <a>$sel:template:DescribeWorldResponse'</a>,
--   <a>describeWorldResponse_template</a> - The world template.
--   
--   <a>$sel:tags:DescribeWorldResponse'</a>,
--   <a>describeWorldResponse_tags</a> - A map that contains tag keys and
--   tag values that are attached to the world.
--   
--   <a>$sel:generationJob:DescribeWorldResponse'</a>,
--   <a>describeWorldResponse_generationJob</a> - The Amazon Resource Name
--   (arn) of the world generation job that generated the world.
--   
--   <a>$sel:httpStatus:DescribeWorldResponse'</a>,
--   <a>describeWorldResponse_httpStatus</a> - The response's http status
--   code.
newDescribeWorldResponse :: Int -> DescribeWorldResponse

-- | Returns the JSON formatted string that describes the contents of your
--   world.
describeWorldResponse_worldDescriptionBody :: Lens' DescribeWorldResponse (Maybe Text)

-- | The Amazon Resource Name (arn) of the world.
describeWorldResponse_arn :: Lens' DescribeWorldResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world was created.
describeWorldResponse_createdAt :: Lens' DescribeWorldResponse (Maybe UTCTime)

-- | The world template.
describeWorldResponse_template :: Lens' DescribeWorldResponse (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   world.
describeWorldResponse_tags :: Lens' DescribeWorldResponse (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (arn) of the world generation job that
--   generated the world.
describeWorldResponse_generationJob :: Lens' DescribeWorldResponse (Maybe Text)

-- | The response's http status code.
describeWorldResponse_httpStatus :: Lens' DescribeWorldResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeWorld.DescribeWorld
instance GHC.Show.Show Amazonka.RobOMaker.DescribeWorld.DescribeWorld
instance GHC.Read.Read Amazonka.RobOMaker.DescribeWorld.DescribeWorld
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeWorld.DescribeWorld
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeWorld.DescribeWorldResponse
instance GHC.Show.Show Amazonka.RobOMaker.DescribeWorld.DescribeWorldResponse
instance GHC.Read.Read Amazonka.RobOMaker.DescribeWorld.DescribeWorldResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeWorld.DescribeWorldResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.DescribeWorld.DescribeWorld
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeWorld.DescribeWorldResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.DescribeWorld.DescribeWorld
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeWorld.DescribeWorld
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.DescribeWorld.DescribeWorld
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.DescribeWorld.DescribeWorld
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.DescribeWorld.DescribeWorld
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.DescribeWorld.DescribeWorld


-- | Describes a simulation job batch.
module Amazonka.RobOMaker.DescribeSimulationJobBatch

-- | <i>See:</i> <a>newDescribeSimulationJobBatch</a> smart constructor.
data DescribeSimulationJobBatch
DescribeSimulationJobBatch' :: Text -> DescribeSimulationJobBatch

-- | The id of the batch to describe.
[$sel:batch:DescribeSimulationJobBatch'] :: DescribeSimulationJobBatch -> Text

-- | Create a value of <a>DescribeSimulationJobBatch</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batch:DescribeSimulationJobBatch'</a>,
--   <a>describeSimulationJobBatch_batch</a> - The id of the batch to
--   describe.
newDescribeSimulationJobBatch :: Text -> DescribeSimulationJobBatch

-- | The id of the batch to describe.
describeSimulationJobBatch_batch :: Lens' DescribeSimulationJobBatch Text

-- | <i>See:</i> <a>newDescribeSimulationJobBatchResponse</a> smart
--   constructor.
data DescribeSimulationJobBatchResponse
DescribeSimulationJobBatchResponse' :: Maybe Text -> Maybe SimulationJobBatchStatus -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe SimulationJobBatchErrorCode -> Maybe [FailedCreateSimulationJobRequest] -> Maybe BatchPolicy -> Maybe [SimulationJobSummary] -> Maybe (NonEmpty SimulationJobRequest) -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> DescribeSimulationJobBatchResponse

-- | The reason the simulation job batch failed.
[$sel:failureReason:DescribeSimulationJobBatchResponse'] :: DescribeSimulationJobBatchResponse -> Maybe Text

-- | The status of the batch.
--   
--   <ul>
--   <li><i>Pending</i> The simulation job batch request is pending.</li>
--   <li><i>InProgress</i> The simulation job batch is in progress.</li>
--   <li><i>Failed</i> The simulation job batch failed. One or more
--   simulation job requests could not be completed due to an internal
--   failure (like <tt>InternalServiceError</tt>). See <tt>failureCode</tt>
--   and <tt>failureReason</tt> for more information.</li>
--   <li><i>Completed</i> The simulation batch job completed. A batch is
--   complete when (1) there are no pending simulation job requests in the
--   batch and none of the failed simulation job requests are due to
--   <tt>InternalServiceError</tt> and (2) when all created simulation jobs
--   have reached a terminal state (for example, <tt>Completed</tt> or
--   <tt>Failed</tt>).</li>
--   <li><i>Canceled</i> The simulation batch job was cancelled.</li>
--   <li><i>Canceling</i> The simulation batch job is being cancelled.</li>
--   <li><i>Completing</i> The simulation batch job is completing.</li>
--   <li><i>TimingOut</i> The simulation job batch is timing out.If a batch
--   timing out, and there are pending requests that were failing due to an
--   internal failure (like <tt>InternalServiceError</tt>), the batch
--   status will be <tt>Failed</tt>. If there are no such failing request,
--   the batch status will be <tt>TimedOut</tt>.</li>
--   <li><i>TimedOut</i> The simulation batch job timed out.</li>
--   </ul>
[$sel:status:DescribeSimulationJobBatchResponse'] :: DescribeSimulationJobBatchResponse -> Maybe SimulationJobBatchStatus

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch was last updated.
[$sel:lastUpdatedAt:DescribeSimulationJobBatchResponse'] :: DescribeSimulationJobBatchResponse -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the batch.
[$sel:arn:DescribeSimulationJobBatchResponse'] :: DescribeSimulationJobBatchResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch was created.
[$sel:createdAt:DescribeSimulationJobBatchResponse'] :: DescribeSimulationJobBatchResponse -> Maybe POSIX

-- | The failure code of the simulation job batch.
[$sel:failureCode:DescribeSimulationJobBatchResponse'] :: DescribeSimulationJobBatchResponse -> Maybe SimulationJobBatchErrorCode

-- | A list of failed create simulation job requests. The request failed to
--   be created into a simulation job. Failed requests do not have a
--   simulation job ID.
[$sel:failedRequests:DescribeSimulationJobBatchResponse'] :: DescribeSimulationJobBatchResponse -> Maybe [FailedCreateSimulationJobRequest]

-- | The batch policy.
[$sel:batchPolicy:DescribeSimulationJobBatchResponse'] :: DescribeSimulationJobBatchResponse -> Maybe BatchPolicy

-- | A list of created simulation job summaries.
[$sel:createdRequests:DescribeSimulationJobBatchResponse'] :: DescribeSimulationJobBatchResponse -> Maybe [SimulationJobSummary]

-- | A list of pending simulation job requests. These requests have not yet
--   been created into simulation jobs.
[$sel:pendingRequests:DescribeSimulationJobBatchResponse'] :: DescribeSimulationJobBatchResponse -> Maybe (NonEmpty SimulationJobRequest)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:DescribeSimulationJobBatchResponse'] :: DescribeSimulationJobBatchResponse -> Maybe Text

-- | A map that contains tag keys and tag values that are attached to the
--   simulation job batch.
[$sel:tags:DescribeSimulationJobBatchResponse'] :: DescribeSimulationJobBatchResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeSimulationJobBatchResponse'] :: DescribeSimulationJobBatchResponse -> Int

-- | Create a value of <a>DescribeSimulationJobBatchResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_failureReason</a> - The reason
--   the simulation job batch failed.
--   
--   <a>$sel:status:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_status</a> - The status of the
--   batch.
--   
--   <ul>
--   <li><i>Pending</i> The simulation job batch request is pending.</li>
--   <li><i>InProgress</i> The simulation job batch is in progress.</li>
--   <li><i>Failed</i> The simulation job batch failed. One or more
--   simulation job requests could not be completed due to an internal
--   failure (like <tt>InternalServiceError</tt>). See <tt>failureCode</tt>
--   and <tt>failureReason</tt> for more information.</li>
--   <li><i>Completed</i> The simulation batch job completed. A batch is
--   complete when (1) there are no pending simulation job requests in the
--   batch and none of the failed simulation job requests are due to
--   <tt>InternalServiceError</tt> and (2) when all created simulation jobs
--   have reached a terminal state (for example, <tt>Completed</tt> or
--   <tt>Failed</tt>).</li>
--   <li><i>Canceled</i> The simulation batch job was cancelled.</li>
--   <li><i>Canceling</i> The simulation batch job is being cancelled.</li>
--   <li><i>Completing</i> The simulation batch job is completing.</li>
--   <li><i>TimingOut</i> The simulation job batch is timing out.If a batch
--   timing out, and there are pending requests that were failing due to an
--   internal failure (like <tt>InternalServiceError</tt>), the batch
--   status will be <tt>Failed</tt>. If there are no such failing request,
--   the batch status will be <tt>TimedOut</tt>.</li>
--   <li><i>TimedOut</i> The simulation batch job timed out.</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedAt:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the simulation job batch was last
--   updated.
--   
--   <a>$sel:arn:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_arn</a> - The Amazon Resource
--   Name (ARN) of the batch.
--   
--   <a>$sel:createdAt:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the simulation job batch was
--   created.
--   
--   <a>$sel:failureCode:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_failureCode</a> - The failure
--   code of the simulation job batch.
--   
--   <a>$sel:failedRequests:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_failedRequests</a> - A list of
--   failed create simulation job requests. The request failed to be
--   created into a simulation job. Failed requests do not have a
--   simulation job ID.
--   
--   <a>$sel:batchPolicy:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_batchPolicy</a> - The batch
--   policy.
--   
--   <a>$sel:createdRequests:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_createdRequests</a> - A list of
--   created simulation job summaries.
--   
--   <a>$sel:pendingRequests:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_pendingRequests</a> - A list of
--   pending simulation job requests. These requests have not yet been
--   created into simulation jobs.
--   
--   <a>$sel:clientRequestToken:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:tags:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_tags</a> - A map that contains
--   tag keys and tag values that are attached to the simulation job batch.
--   
--   <a>$sel:httpStatus:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_httpStatus</a> - The response's
--   http status code.
newDescribeSimulationJobBatchResponse :: Int -> DescribeSimulationJobBatchResponse

-- | The reason the simulation job batch failed.
describeSimulationJobBatchResponse_failureReason :: Lens' DescribeSimulationJobBatchResponse (Maybe Text)

-- | The status of the batch.
--   
--   <ul>
--   <li><i>Pending</i> The simulation job batch request is pending.</li>
--   <li><i>InProgress</i> The simulation job batch is in progress.</li>
--   <li><i>Failed</i> The simulation job batch failed. One or more
--   simulation job requests could not be completed due to an internal
--   failure (like <tt>InternalServiceError</tt>). See <tt>failureCode</tt>
--   and <tt>failureReason</tt> for more information.</li>
--   <li><i>Completed</i> The simulation batch job completed. A batch is
--   complete when (1) there are no pending simulation job requests in the
--   batch and none of the failed simulation job requests are due to
--   <tt>InternalServiceError</tt> and (2) when all created simulation jobs
--   have reached a terminal state (for example, <tt>Completed</tt> or
--   <tt>Failed</tt>).</li>
--   <li><i>Canceled</i> The simulation batch job was cancelled.</li>
--   <li><i>Canceling</i> The simulation batch job is being cancelled.</li>
--   <li><i>Completing</i> The simulation batch job is completing.</li>
--   <li><i>TimingOut</i> The simulation job batch is timing out.If a batch
--   timing out, and there are pending requests that were failing due to an
--   internal failure (like <tt>InternalServiceError</tt>), the batch
--   status will be <tt>Failed</tt>. If there are no such failing request,
--   the batch status will be <tt>TimedOut</tt>.</li>
--   <li><i>TimedOut</i> The simulation batch job timed out.</li>
--   </ul>
describeSimulationJobBatchResponse_status :: Lens' DescribeSimulationJobBatchResponse (Maybe SimulationJobBatchStatus)

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch was last updated.
describeSimulationJobBatchResponse_lastUpdatedAt :: Lens' DescribeSimulationJobBatchResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the batch.
describeSimulationJobBatchResponse_arn :: Lens' DescribeSimulationJobBatchResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch was created.
describeSimulationJobBatchResponse_createdAt :: Lens' DescribeSimulationJobBatchResponse (Maybe UTCTime)

-- | The failure code of the simulation job batch.
describeSimulationJobBatchResponse_failureCode :: Lens' DescribeSimulationJobBatchResponse (Maybe SimulationJobBatchErrorCode)

-- | A list of failed create simulation job requests. The request failed to
--   be created into a simulation job. Failed requests do not have a
--   simulation job ID.
describeSimulationJobBatchResponse_failedRequests :: Lens' DescribeSimulationJobBatchResponse (Maybe [FailedCreateSimulationJobRequest])

-- | The batch policy.
describeSimulationJobBatchResponse_batchPolicy :: Lens' DescribeSimulationJobBatchResponse (Maybe BatchPolicy)

-- | A list of created simulation job summaries.
describeSimulationJobBatchResponse_createdRequests :: Lens' DescribeSimulationJobBatchResponse (Maybe [SimulationJobSummary])

-- | A list of pending simulation job requests. These requests have not yet
--   been created into simulation jobs.
describeSimulationJobBatchResponse_pendingRequests :: Lens' DescribeSimulationJobBatchResponse (Maybe (NonEmpty SimulationJobRequest))

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
describeSimulationJobBatchResponse_clientRequestToken :: Lens' DescribeSimulationJobBatchResponse (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   simulation job batch.
describeSimulationJobBatchResponse_tags :: Lens' DescribeSimulationJobBatchResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeSimulationJobBatchResponse_httpStatus :: Lens' DescribeSimulationJobBatchResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeSimulationJobBatch.DescribeSimulationJobBatch
instance GHC.Show.Show Amazonka.RobOMaker.DescribeSimulationJobBatch.DescribeSimulationJobBatch
instance GHC.Read.Read Amazonka.RobOMaker.DescribeSimulationJobBatch.DescribeSimulationJobBatch
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeSimulationJobBatch.DescribeSimulationJobBatch
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeSimulationJobBatch.DescribeSimulationJobBatchResponse
instance GHC.Show.Show Amazonka.RobOMaker.DescribeSimulationJobBatch.DescribeSimulationJobBatchResponse
instance GHC.Read.Read Amazonka.RobOMaker.DescribeSimulationJobBatch.DescribeSimulationJobBatchResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeSimulationJobBatch.DescribeSimulationJobBatchResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.DescribeSimulationJobBatch.DescribeSimulationJobBatch
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeSimulationJobBatch.DescribeSimulationJobBatchResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.DescribeSimulationJobBatch.DescribeSimulationJobBatch
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeSimulationJobBatch.DescribeSimulationJobBatch
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.DescribeSimulationJobBatch.DescribeSimulationJobBatch
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.DescribeSimulationJobBatch.DescribeSimulationJobBatch
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.DescribeSimulationJobBatch.DescribeSimulationJobBatch
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.DescribeSimulationJobBatch.DescribeSimulationJobBatch


-- | Describes a simulation job.
module Amazonka.RobOMaker.DescribeSimulationJob

-- | <i>See:</i> <a>newDescribeSimulationJob</a> smart constructor.
data DescribeSimulationJob
DescribeSimulationJob' :: Text -> DescribeSimulationJob

-- | The Amazon Resource Name (ARN) of the simulation job to be described.
[$sel:job:DescribeSimulationJob'] :: DescribeSimulationJob -> Text

-- | Create a value of <a>DescribeSimulationJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:DescribeSimulationJob'</a>,
--   <a>describeSimulationJob_job</a> - The Amazon Resource Name (ARN) of
--   the simulation job to be described.
newDescribeSimulationJob :: Text -> DescribeSimulationJob

-- | The Amazon Resource Name (ARN) of the simulation job to be described.
describeSimulationJob_job :: Lens' DescribeSimulationJob Text

-- | <i>See:</i> <a>newDescribeSimulationJobResponse</a> smart constructor.
data DescribeSimulationJobResponse
DescribeSimulationJobResponse' :: Maybe Text -> Maybe FailureBehavior -> Maybe SimulationJobStatus -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty RobotApplicationConfig) -> Maybe SimulationJobErrorCode -> Maybe ComputeResponse -> Maybe NetworkInterface -> Maybe [DataSource] -> Maybe Text -> Maybe VPCConfigResponse -> Maybe OutputLocation -> Maybe (NonEmpty SimulationApplicationConfig) -> Maybe Integer -> Maybe Text -> Maybe POSIX -> Maybe LoggingConfig -> Maybe Text -> Maybe Integer -> Maybe (HashMap Text Text) -> Int -> DescribeSimulationJobResponse

-- | Details about why the simulation job failed. For more information
--   about troubleshooting, see <a>Troubleshooting</a>.
[$sel:failureReason:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe Text

-- | The failure behavior for the simulation job.
[$sel:failureBehavior:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe FailureBehavior

-- | The status of the simulation job.
[$sel:status:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe SimulationJobStatus

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last updated.
[$sel:lastUpdatedAt:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the simulation job.
[$sel:arn:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe Text

-- | A list of robot applications.
[$sel:robotApplications:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe (NonEmpty RobotApplicationConfig)

-- | The failure code of the simulation job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>RobotApplicationCrash</i> Robot application exited
--   abnormally.</li>
--   <li><i>SimulationApplicationCrash</i> Simulation application exited
--   abnormally.</li>
--   <li><i>BadPermissionsRobotApplication</i> Robot application bundle
--   could not be downloaded.</li>
--   <li><i>BadPermissionsSimulationApplication</i> Simulation application
--   bundle could not be downloaded.</li>
--   <li><i>BadPermissionsS3Output</i> Unable to publish outputs to
--   customer-provided S3 bucket.</li>
--   <li><i>BadPermissionsCloudwatchLogs</i> Unable to publish logs to
--   customer-provided CloudWatch Logs resource.</li>
--   <li><i>SubnetIpLimitExceeded</i> Subnet IP limit exceeded.</li>
--   <li><i>ENILimitExceeded</i> ENI limit exceeded.</li>
--   <li><i>BadPermissionsUserCredentials</i> Unable to use the Role
--   provided.</li>
--   <li><i>InvalidBundleRobotApplication</i> Robot bundle cannot be
--   extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>InvalidBundleSimulationApplication</i> Simulation bundle cannot
--   be extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>RobotApplicationVersionMismatchedEtag</i> Etag for
--   RobotApplication does not match value during version creation.</li>
--   <li><i>SimulationApplicationVersionMismatchedEtag</i> Etag for
--   SimulationApplication does not match value during version
--   creation.</li>
--   </ul>
[$sel:failureCode:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe SimulationJobErrorCode

-- | Compute information for the simulation job.
[$sel:compute:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe ComputeResponse

-- | The network interface information for the simulation job.
[$sel:networkInterface:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe NetworkInterface

-- | The data sources for the simulation job.
[$sel:dataSources:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe [DataSource]

-- | The name of the simulation job.
[$sel:name:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe Text

-- | The VPC configuration.
[$sel:vpcConfig:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe VPCConfigResponse

-- | Location for output files generated by the simulation job.
[$sel:outputLocation:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe OutputLocation

-- | A list of simulation applications.
[$sel:simulationApplications:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe (NonEmpty SimulationApplicationConfig)

-- | The simulation job execution duration in milliseconds.
[$sel:simulationTimeMillis:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe Integer

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last started.
[$sel:lastStartedAt:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe POSIX

-- | The logging configuration.
[$sel:loggingConfig:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe LoggingConfig

-- | The IAM role that allows the simulation instance to call the AWS APIs
--   that are specified in its associated policies on your behalf.
[$sel:iamRole:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe Text

-- | The maximum job duration in seconds. The value must be 8 days (691,200
--   seconds) or less.
[$sel:maxJobDurationInSeconds:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe Integer

-- | The list of all tags added to the specified simulation job.
[$sel:tags:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeSimulationJobResponse'] :: DescribeSimulationJobResponse -> Int

-- | Create a value of <a>DescribeSimulationJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_failureReason</a> - Details about why
--   the simulation job failed. For more information about troubleshooting,
--   see <a>Troubleshooting</a>.
--   
--   <a>$sel:failureBehavior:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_failureBehavior</a> - The failure
--   behavior for the simulation job.
--   
--   <a>$sel:status:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_status</a> - The status of the
--   simulation job.
--   
--   <a>$sel:lastUpdatedAt:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the simulation job was last
--   updated.
--   
--   <a>$sel:arn:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the simulation job.
--   
--   <a>$sel:robotApplications:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_robotApplications</a> - A list of
--   robot applications.
--   
--   <a>$sel:failureCode:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_failureCode</a> - The failure code of
--   the simulation job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>RobotApplicationCrash</i> Robot application exited
--   abnormally.</li>
--   <li><i>SimulationApplicationCrash</i> Simulation application exited
--   abnormally.</li>
--   <li><i>BadPermissionsRobotApplication</i> Robot application bundle
--   could not be downloaded.</li>
--   <li><i>BadPermissionsSimulationApplication</i> Simulation application
--   bundle could not be downloaded.</li>
--   <li><i>BadPermissionsS3Output</i> Unable to publish outputs to
--   customer-provided S3 bucket.</li>
--   <li><i>BadPermissionsCloudwatchLogs</i> Unable to publish logs to
--   customer-provided CloudWatch Logs resource.</li>
--   <li><i>SubnetIpLimitExceeded</i> Subnet IP limit exceeded.</li>
--   <li><i>ENILimitExceeded</i> ENI limit exceeded.</li>
--   <li><i>BadPermissionsUserCredentials</i> Unable to use the Role
--   provided.</li>
--   <li><i>InvalidBundleRobotApplication</i> Robot bundle cannot be
--   extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>InvalidBundleSimulationApplication</i> Simulation bundle cannot
--   be extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>RobotApplicationVersionMismatchedEtag</i> Etag for
--   RobotApplication does not match value during version creation.</li>
--   <li><i>SimulationApplicationVersionMismatchedEtag</i> Etag for
--   SimulationApplication does not match value during version
--   creation.</li>
--   </ul>
--   
--   <a>$sel:compute:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_compute</a> - Compute information for
--   the simulation job.
--   
--   <a>$sel:networkInterface:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_networkInterface</a> - The network
--   interface information for the simulation job.
--   
--   <a>$sel:dataSources:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_dataSources</a> - The data sources
--   for the simulation job.
--   
--   <a>$sel:name:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_name</a> - The name of the simulation
--   job.
--   
--   <a>$sel:vpcConfig:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_vpcConfig</a> - The VPC
--   configuration.
--   
--   <a>$sel:outputLocation:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_outputLocation</a> - Location for
--   output files generated by the simulation job.
--   
--   <a>$sel:simulationApplications:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_simulationApplications</a> - A list
--   of simulation applications.
--   
--   <a>$sel:simulationTimeMillis:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_simulationTimeMillis</a> - The
--   simulation job execution duration in milliseconds.
--   
--   <a>$sel:clientRequestToken:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:lastStartedAt:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_lastStartedAt</a> - The time, in
--   milliseconds since the epoch, when the simulation job was last
--   started.
--   
--   <a>$sel:loggingConfig:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_loggingConfig</a> - The logging
--   configuration.
--   
--   <a>$sel:iamRole:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_iamRole</a> - The IAM role that
--   allows the simulation instance to call the AWS APIs that are specified
--   in its associated policies on your behalf.
--   
--   <a>$sel:maxJobDurationInSeconds:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_maxJobDurationInSeconds</a> - The
--   maximum job duration in seconds. The value must be 8 days (691,200
--   seconds) or less.
--   
--   <a>$sel:tags:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_tags</a> - The list of all tags added
--   to the specified simulation job.
--   
--   <a>$sel:httpStatus:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_httpStatus</a> - The response's http
--   status code.
newDescribeSimulationJobResponse :: Int -> DescribeSimulationJobResponse

-- | Details about why the simulation job failed. For more information
--   about troubleshooting, see <a>Troubleshooting</a>.
describeSimulationJobResponse_failureReason :: Lens' DescribeSimulationJobResponse (Maybe Text)

-- | The failure behavior for the simulation job.
describeSimulationJobResponse_failureBehavior :: Lens' DescribeSimulationJobResponse (Maybe FailureBehavior)

-- | The status of the simulation job.
describeSimulationJobResponse_status :: Lens' DescribeSimulationJobResponse (Maybe SimulationJobStatus)

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last updated.
describeSimulationJobResponse_lastUpdatedAt :: Lens' DescribeSimulationJobResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the simulation job.
describeSimulationJobResponse_arn :: Lens' DescribeSimulationJobResponse (Maybe Text)

-- | A list of robot applications.
describeSimulationJobResponse_robotApplications :: Lens' DescribeSimulationJobResponse (Maybe (NonEmpty RobotApplicationConfig))

-- | The failure code of the simulation job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>RobotApplicationCrash</i> Robot application exited
--   abnormally.</li>
--   <li><i>SimulationApplicationCrash</i> Simulation application exited
--   abnormally.</li>
--   <li><i>BadPermissionsRobotApplication</i> Robot application bundle
--   could not be downloaded.</li>
--   <li><i>BadPermissionsSimulationApplication</i> Simulation application
--   bundle could not be downloaded.</li>
--   <li><i>BadPermissionsS3Output</i> Unable to publish outputs to
--   customer-provided S3 bucket.</li>
--   <li><i>BadPermissionsCloudwatchLogs</i> Unable to publish logs to
--   customer-provided CloudWatch Logs resource.</li>
--   <li><i>SubnetIpLimitExceeded</i> Subnet IP limit exceeded.</li>
--   <li><i>ENILimitExceeded</i> ENI limit exceeded.</li>
--   <li><i>BadPermissionsUserCredentials</i> Unable to use the Role
--   provided.</li>
--   <li><i>InvalidBundleRobotApplication</i> Robot bundle cannot be
--   extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>InvalidBundleSimulationApplication</i> Simulation bundle cannot
--   be extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>RobotApplicationVersionMismatchedEtag</i> Etag for
--   RobotApplication does not match value during version creation.</li>
--   <li><i>SimulationApplicationVersionMismatchedEtag</i> Etag for
--   SimulationApplication does not match value during version
--   creation.</li>
--   </ul>
describeSimulationJobResponse_failureCode :: Lens' DescribeSimulationJobResponse (Maybe SimulationJobErrorCode)

-- | Compute information for the simulation job.
describeSimulationJobResponse_compute :: Lens' DescribeSimulationJobResponse (Maybe ComputeResponse)

-- | The network interface information for the simulation job.
describeSimulationJobResponse_networkInterface :: Lens' DescribeSimulationJobResponse (Maybe NetworkInterface)

-- | The data sources for the simulation job.
describeSimulationJobResponse_dataSources :: Lens' DescribeSimulationJobResponse (Maybe [DataSource])

-- | The name of the simulation job.
describeSimulationJobResponse_name :: Lens' DescribeSimulationJobResponse (Maybe Text)

-- | The VPC configuration.
describeSimulationJobResponse_vpcConfig :: Lens' DescribeSimulationJobResponse (Maybe VPCConfigResponse)

-- | Location for output files generated by the simulation job.
describeSimulationJobResponse_outputLocation :: Lens' DescribeSimulationJobResponse (Maybe OutputLocation)

-- | A list of simulation applications.
describeSimulationJobResponse_simulationApplications :: Lens' DescribeSimulationJobResponse (Maybe (NonEmpty SimulationApplicationConfig))

-- | The simulation job execution duration in milliseconds.
describeSimulationJobResponse_simulationTimeMillis :: Lens' DescribeSimulationJobResponse (Maybe Integer)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
describeSimulationJobResponse_clientRequestToken :: Lens' DescribeSimulationJobResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last started.
describeSimulationJobResponse_lastStartedAt :: Lens' DescribeSimulationJobResponse (Maybe UTCTime)

-- | The logging configuration.
describeSimulationJobResponse_loggingConfig :: Lens' DescribeSimulationJobResponse (Maybe LoggingConfig)

-- | The IAM role that allows the simulation instance to call the AWS APIs
--   that are specified in its associated policies on your behalf.
describeSimulationJobResponse_iamRole :: Lens' DescribeSimulationJobResponse (Maybe Text)

-- | The maximum job duration in seconds. The value must be 8 days (691,200
--   seconds) or less.
describeSimulationJobResponse_maxJobDurationInSeconds :: Lens' DescribeSimulationJobResponse (Maybe Integer)

-- | The list of all tags added to the specified simulation job.
describeSimulationJobResponse_tags :: Lens' DescribeSimulationJobResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeSimulationJobResponse_httpStatus :: Lens' DescribeSimulationJobResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeSimulationJob.DescribeSimulationJob
instance GHC.Show.Show Amazonka.RobOMaker.DescribeSimulationJob.DescribeSimulationJob
instance GHC.Read.Read Amazonka.RobOMaker.DescribeSimulationJob.DescribeSimulationJob
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeSimulationJob.DescribeSimulationJob
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeSimulationJob.DescribeSimulationJobResponse
instance GHC.Show.Show Amazonka.RobOMaker.DescribeSimulationJob.DescribeSimulationJobResponse
instance GHC.Read.Read Amazonka.RobOMaker.DescribeSimulationJob.DescribeSimulationJobResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeSimulationJob.DescribeSimulationJobResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.DescribeSimulationJob.DescribeSimulationJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeSimulationJob.DescribeSimulationJobResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.DescribeSimulationJob.DescribeSimulationJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeSimulationJob.DescribeSimulationJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.DescribeSimulationJob.DescribeSimulationJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.DescribeSimulationJob.DescribeSimulationJob
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.DescribeSimulationJob.DescribeSimulationJob
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.DescribeSimulationJob.DescribeSimulationJob


-- | Describes a simulation application.
module Amazonka.RobOMaker.DescribeSimulationApplication

-- | <i>See:</i> <a>newDescribeSimulationApplication</a> smart constructor.
data DescribeSimulationApplication
DescribeSimulationApplication' :: Maybe Text -> Text -> DescribeSimulationApplication

-- | The version of the simulation application to describe.
[$sel:applicationVersion:DescribeSimulationApplication'] :: DescribeSimulationApplication -> Maybe Text

-- | The application information for the simulation application.
[$sel:application:DescribeSimulationApplication'] :: DescribeSimulationApplication -> Text

-- | Create a value of <a>DescribeSimulationApplication</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationVersion:DescribeSimulationApplication'</a>,
--   <a>describeSimulationApplication_applicationVersion</a> - The version
--   of the simulation application to describe.
--   
--   <a>$sel:application:DescribeSimulationApplication'</a>,
--   <a>describeSimulationApplication_application</a> - The application
--   information for the simulation application.
newDescribeSimulationApplication :: Text -> DescribeSimulationApplication

-- | The version of the simulation application to describe.
describeSimulationApplication_applicationVersion :: Lens' DescribeSimulationApplication (Maybe Text)

-- | The application information for the simulation application.
describeSimulationApplication_application :: Lens' DescribeSimulationApplication Text

-- | <i>See:</i> <a>newDescribeSimulationApplicationResponse</a> smart
--   constructor.
data DescribeSimulationApplicationResponse
DescribeSimulationApplicationResponse' :: Maybe RenderingEngine -> Maybe POSIX -> Maybe Text -> Maybe Environment -> Maybe [Source] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe SimulationSoftwareSuite -> Maybe RobotSoftwareSuite -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> DescribeSimulationApplicationResponse

-- | The rendering engine for the simulation application.
[$sel:renderingEngine:DescribeSimulationApplicationResponse'] :: DescribeSimulationApplicationResponse -> Maybe RenderingEngine

-- | The time, in milliseconds since the epoch, when the simulation
--   application was last updated.
[$sel:lastUpdatedAt:DescribeSimulationApplicationResponse'] :: DescribeSimulationApplicationResponse -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the robot simulation application.
[$sel:arn:DescribeSimulationApplicationResponse'] :: DescribeSimulationApplicationResponse -> Maybe Text

-- | The object that contains the Docker image URI used to create the
--   simulation application.
[$sel:environment:DescribeSimulationApplicationResponse'] :: DescribeSimulationApplicationResponse -> Maybe Environment

-- | The sources of the simulation application.
[$sel:sources:DescribeSimulationApplicationResponse'] :: DescribeSimulationApplicationResponse -> Maybe [Source]

-- | The name of the simulation application.
[$sel:name:DescribeSimulationApplicationResponse'] :: DescribeSimulationApplicationResponse -> Maybe Text

-- | A SHA256 identifier for the Docker image that you use for your
--   simulation application.
[$sel:imageDigest:DescribeSimulationApplicationResponse'] :: DescribeSimulationApplicationResponse -> Maybe Text

-- | The version of the simulation application.
[$sel:version:DescribeSimulationApplicationResponse'] :: DescribeSimulationApplicationResponse -> Maybe Text

-- | The simulation software suite used by the simulation application.
[$sel:simulationSoftwareSuite:DescribeSimulationApplicationResponse'] :: DescribeSimulationApplicationResponse -> Maybe SimulationSoftwareSuite

-- | Information about the robot software suite (ROS distribution).
[$sel:robotSoftwareSuite:DescribeSimulationApplicationResponse'] :: DescribeSimulationApplicationResponse -> Maybe RobotSoftwareSuite

-- | The revision id of the simulation application.
[$sel:revisionId:DescribeSimulationApplicationResponse'] :: DescribeSimulationApplicationResponse -> Maybe Text

-- | The list of all tags added to the specified simulation application.
[$sel:tags:DescribeSimulationApplicationResponse'] :: DescribeSimulationApplicationResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeSimulationApplicationResponse'] :: DescribeSimulationApplicationResponse -> Int

-- | Create a value of <a>DescribeSimulationApplicationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:renderingEngine:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_renderingEngine</a> - The
--   rendering engine for the simulation application.
--   
--   <a>$sel:lastUpdatedAt:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_lastUpdatedAt</a> - The time,
--   in milliseconds since the epoch, when the simulation application was
--   last updated.
--   
--   <a>$sel:arn:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_arn</a> - The Amazon Resource
--   Name (ARN) of the robot simulation application.
--   
--   <a>$sel:environment:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_environment</a> - The object
--   that contains the Docker image URI used to create the simulation
--   application.
--   
--   <a>$sel:sources:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_sources</a> - The sources of
--   the simulation application.
--   
--   <a>$sel:name:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_name</a> - The name of the
--   simulation application.
--   
--   <a>$sel:imageDigest:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_imageDigest</a> - A SHA256
--   identifier for the Docker image that you use for your simulation
--   application.
--   
--   <a>$sel:version:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_version</a> - The version of
--   the simulation application.
--   
--   
--   <a>$sel:simulationSoftwareSuite:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_simulationSoftwareSuite</a> -
--   The simulation software suite used by the simulation application.
--   
--   <a>$sel:robotSoftwareSuite:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_robotSoftwareSuite</a> -
--   Information about the robot software suite (ROS distribution).
--   
--   <a>$sel:revisionId:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_revisionId</a> - The revision
--   id of the simulation application.
--   
--   <a>$sel:tags:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_tags</a> - The list of all
--   tags added to the specified simulation application.
--   
--   <a>$sel:httpStatus:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_httpStatus</a> - The
--   response's http status code.
newDescribeSimulationApplicationResponse :: Int -> DescribeSimulationApplicationResponse

-- | The rendering engine for the simulation application.
describeSimulationApplicationResponse_renderingEngine :: Lens' DescribeSimulationApplicationResponse (Maybe RenderingEngine)

-- | The time, in milliseconds since the epoch, when the simulation
--   application was last updated.
describeSimulationApplicationResponse_lastUpdatedAt :: Lens' DescribeSimulationApplicationResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the robot simulation application.
describeSimulationApplicationResponse_arn :: Lens' DescribeSimulationApplicationResponse (Maybe Text)

-- | The object that contains the Docker image URI used to create the
--   simulation application.
describeSimulationApplicationResponse_environment :: Lens' DescribeSimulationApplicationResponse (Maybe Environment)

-- | The sources of the simulation application.
describeSimulationApplicationResponse_sources :: Lens' DescribeSimulationApplicationResponse (Maybe [Source])

-- | The name of the simulation application.
describeSimulationApplicationResponse_name :: Lens' DescribeSimulationApplicationResponse (Maybe Text)

-- | A SHA256 identifier for the Docker image that you use for your
--   simulation application.
describeSimulationApplicationResponse_imageDigest :: Lens' DescribeSimulationApplicationResponse (Maybe Text)

-- | The version of the simulation application.
describeSimulationApplicationResponse_version :: Lens' DescribeSimulationApplicationResponse (Maybe Text)

-- | The simulation software suite used by the simulation application.
describeSimulationApplicationResponse_simulationSoftwareSuite :: Lens' DescribeSimulationApplicationResponse (Maybe SimulationSoftwareSuite)

-- | Information about the robot software suite (ROS distribution).
describeSimulationApplicationResponse_robotSoftwareSuite :: Lens' DescribeSimulationApplicationResponse (Maybe RobotSoftwareSuite)

-- | The revision id of the simulation application.
describeSimulationApplicationResponse_revisionId :: Lens' DescribeSimulationApplicationResponse (Maybe Text)

-- | The list of all tags added to the specified simulation application.
describeSimulationApplicationResponse_tags :: Lens' DescribeSimulationApplicationResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeSimulationApplicationResponse_httpStatus :: Lens' DescribeSimulationApplicationResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeSimulationApplication.DescribeSimulationApplication
instance GHC.Show.Show Amazonka.RobOMaker.DescribeSimulationApplication.DescribeSimulationApplication
instance GHC.Read.Read Amazonka.RobOMaker.DescribeSimulationApplication.DescribeSimulationApplication
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeSimulationApplication.DescribeSimulationApplication
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeSimulationApplication.DescribeSimulationApplicationResponse
instance GHC.Show.Show Amazonka.RobOMaker.DescribeSimulationApplication.DescribeSimulationApplicationResponse
instance GHC.Read.Read Amazonka.RobOMaker.DescribeSimulationApplication.DescribeSimulationApplicationResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeSimulationApplication.DescribeSimulationApplicationResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.DescribeSimulationApplication.DescribeSimulationApplication
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeSimulationApplication.DescribeSimulationApplicationResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.DescribeSimulationApplication.DescribeSimulationApplication
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeSimulationApplication.DescribeSimulationApplication
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.DescribeSimulationApplication.DescribeSimulationApplication
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.DescribeSimulationApplication.DescribeSimulationApplication
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.DescribeSimulationApplication.DescribeSimulationApplication
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.DescribeSimulationApplication.DescribeSimulationApplication


-- | Describes a robot application.
module Amazonka.RobOMaker.DescribeRobotApplication

-- | <i>See:</i> <a>newDescribeRobotApplication</a> smart constructor.
data DescribeRobotApplication
DescribeRobotApplication' :: Maybe Text -> Text -> DescribeRobotApplication

-- | The version of the robot application to describe.
[$sel:applicationVersion:DescribeRobotApplication'] :: DescribeRobotApplication -> Maybe Text

-- | The Amazon Resource Name (ARN) of the robot application.
[$sel:application:DescribeRobotApplication'] :: DescribeRobotApplication -> Text

-- | Create a value of <a>DescribeRobotApplication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationVersion:DescribeRobotApplication'</a>,
--   <a>describeRobotApplication_applicationVersion</a> - The version of
--   the robot application to describe.
--   
--   <a>$sel:application:DescribeRobotApplication'</a>,
--   <a>describeRobotApplication_application</a> - The Amazon Resource Name
--   (ARN) of the robot application.
newDescribeRobotApplication :: Text -> DescribeRobotApplication

-- | The version of the robot application to describe.
describeRobotApplication_applicationVersion :: Lens' DescribeRobotApplication (Maybe Text)

-- | The Amazon Resource Name (ARN) of the robot application.
describeRobotApplication_application :: Lens' DescribeRobotApplication Text

-- | <i>See:</i> <a>newDescribeRobotApplicationResponse</a> smart
--   constructor.
data DescribeRobotApplicationResponse
DescribeRobotApplicationResponse' :: Maybe POSIX -> Maybe Text -> Maybe Environment -> Maybe [Source] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe RobotSoftwareSuite -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> DescribeRobotApplicationResponse

-- | The time, in milliseconds since the epoch, when the robot application
--   was last updated.
[$sel:lastUpdatedAt:DescribeRobotApplicationResponse'] :: DescribeRobotApplicationResponse -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the robot application.
[$sel:arn:DescribeRobotApplicationResponse'] :: DescribeRobotApplicationResponse -> Maybe Text

-- | The object that contains the Docker image URI used to create the robot
--   application.
[$sel:environment:DescribeRobotApplicationResponse'] :: DescribeRobotApplicationResponse -> Maybe Environment

-- | The sources of the robot application.
[$sel:sources:DescribeRobotApplicationResponse'] :: DescribeRobotApplicationResponse -> Maybe [Source]

-- | The name of the robot application.
[$sel:name:DescribeRobotApplicationResponse'] :: DescribeRobotApplicationResponse -> Maybe Text

-- | A SHA256 identifier for the Docker image that you use for your robot
--   application.
[$sel:imageDigest:DescribeRobotApplicationResponse'] :: DescribeRobotApplicationResponse -> Maybe Text

-- | The version of the robot application.
[$sel:version:DescribeRobotApplicationResponse'] :: DescribeRobotApplicationResponse -> Maybe Text

-- | The robot software suite (ROS distribution) used by the robot
--   application.
[$sel:robotSoftwareSuite:DescribeRobotApplicationResponse'] :: DescribeRobotApplicationResponse -> Maybe RobotSoftwareSuite

-- | The revision id of the robot application.
[$sel:revisionId:DescribeRobotApplicationResponse'] :: DescribeRobotApplicationResponse -> Maybe Text

-- | The list of all tags added to the specified robot application.
[$sel:tags:DescribeRobotApplicationResponse'] :: DescribeRobotApplicationResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeRobotApplicationResponse'] :: DescribeRobotApplicationResponse -> Int

-- | Create a value of <a>DescribeRobotApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the robot application was last
--   updated.
--   
--   <a>$sel:arn:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the robot application.
--   
--   <a>$sel:environment:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_environment</a> - The object that
--   contains the Docker image URI used to create the robot application.
--   
--   <a>$sel:sources:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_sources</a> - The sources of the
--   robot application.
--   
--   <a>$sel:name:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_name</a> - The name of the robot
--   application.
--   
--   <a>$sel:imageDigest:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_imageDigest</a> - A SHA256
--   identifier for the Docker image that you use for your robot
--   application.
--   
--   <a>$sel:version:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_version</a> - The version of the
--   robot application.
--   
--   <a>$sel:robotSoftwareSuite:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_robotSoftwareSuite</a> - The robot
--   software suite (ROS distribution) used by the robot application.
--   
--   <a>$sel:revisionId:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_revisionId</a> - The revision id
--   of the robot application.
--   
--   <a>$sel:tags:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_tags</a> - The list of all tags
--   added to the specified robot application.
--   
--   <a>$sel:httpStatus:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_httpStatus</a> - The response's
--   http status code.
newDescribeRobotApplicationResponse :: Int -> DescribeRobotApplicationResponse

-- | The time, in milliseconds since the epoch, when the robot application
--   was last updated.
describeRobotApplicationResponse_lastUpdatedAt :: Lens' DescribeRobotApplicationResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the robot application.
describeRobotApplicationResponse_arn :: Lens' DescribeRobotApplicationResponse (Maybe Text)

-- | The object that contains the Docker image URI used to create the robot
--   application.
describeRobotApplicationResponse_environment :: Lens' DescribeRobotApplicationResponse (Maybe Environment)

-- | The sources of the robot application.
describeRobotApplicationResponse_sources :: Lens' DescribeRobotApplicationResponse (Maybe [Source])

-- | The name of the robot application.
describeRobotApplicationResponse_name :: Lens' DescribeRobotApplicationResponse (Maybe Text)

-- | A SHA256 identifier for the Docker image that you use for your robot
--   application.
describeRobotApplicationResponse_imageDigest :: Lens' DescribeRobotApplicationResponse (Maybe Text)

-- | The version of the robot application.
describeRobotApplicationResponse_version :: Lens' DescribeRobotApplicationResponse (Maybe Text)

-- | The robot software suite (ROS distribution) used by the robot
--   application.
describeRobotApplicationResponse_robotSoftwareSuite :: Lens' DescribeRobotApplicationResponse (Maybe RobotSoftwareSuite)

-- | The revision id of the robot application.
describeRobotApplicationResponse_revisionId :: Lens' DescribeRobotApplicationResponse (Maybe Text)

-- | The list of all tags added to the specified robot application.
describeRobotApplicationResponse_tags :: Lens' DescribeRobotApplicationResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeRobotApplicationResponse_httpStatus :: Lens' DescribeRobotApplicationResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeRobotApplication.DescribeRobotApplication
instance GHC.Show.Show Amazonka.RobOMaker.DescribeRobotApplication.DescribeRobotApplication
instance GHC.Read.Read Amazonka.RobOMaker.DescribeRobotApplication.DescribeRobotApplication
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeRobotApplication.DescribeRobotApplication
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeRobotApplication.DescribeRobotApplicationResponse
instance GHC.Show.Show Amazonka.RobOMaker.DescribeRobotApplication.DescribeRobotApplicationResponse
instance GHC.Read.Read Amazonka.RobOMaker.DescribeRobotApplication.DescribeRobotApplicationResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeRobotApplication.DescribeRobotApplicationResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.DescribeRobotApplication.DescribeRobotApplication
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeRobotApplication.DescribeRobotApplicationResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.DescribeRobotApplication.DescribeRobotApplication
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeRobotApplication.DescribeRobotApplication
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.DescribeRobotApplication.DescribeRobotApplication
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.DescribeRobotApplication.DescribeRobotApplication
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.DescribeRobotApplication.DescribeRobotApplication
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.DescribeRobotApplication.DescribeRobotApplication


-- | Describes a robot.
module Amazonka.RobOMaker.DescribeRobot

-- | <i>See:</i> <a>newDescribeRobot</a> smart constructor.
data DescribeRobot
DescribeRobot' :: Text -> DescribeRobot

-- | The Amazon Resource Name (ARN) of the robot to be described.
[$sel:robot:DescribeRobot'] :: DescribeRobot -> Text

-- | Create a value of <a>DescribeRobot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:robot:DescribeRobot'</a>, <a>describeRobot_robot</a> - The
--   Amazon Resource Name (ARN) of the robot to be described.
newDescribeRobot :: Text -> DescribeRobot

-- | The Amazon Resource Name (ARN) of the robot to be described.
describeRobot_robot :: Lens' DescribeRobot Text

-- | <i>See:</i> <a>newDescribeRobotResponse</a> smart constructor.
data DescribeRobotResponse
DescribeRobotResponse' :: Maybe Text -> Maybe RobotStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Architecture -> Maybe POSIX -> Maybe (HashMap Text Text) -> Int -> DescribeRobotResponse

-- | The Amazon Resource Name (ARN) of the last deployment job.
[$sel:lastDeploymentJob:DescribeRobotResponse'] :: DescribeRobotResponse -> Maybe Text

-- | The status of the fleet.
[$sel:status:DescribeRobotResponse'] :: DescribeRobotResponse -> Maybe RobotStatus

-- | The Amazon Resource Name (ARN) of the robot.
[$sel:arn:DescribeRobotResponse'] :: DescribeRobotResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the robot was created.
[$sel:createdAt:DescribeRobotResponse'] :: DescribeRobotResponse -> Maybe POSIX

-- | The Greengrass group id.
[$sel:greengrassGroupId:DescribeRobotResponse'] :: DescribeRobotResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the fleet.
[$sel:fleetArn:DescribeRobotResponse'] :: DescribeRobotResponse -> Maybe Text

-- | The name of the robot.
[$sel:name:DescribeRobotResponse'] :: DescribeRobotResponse -> Maybe Text

-- | The target architecture of the robot application.
[$sel:architecture:DescribeRobotResponse'] :: DescribeRobotResponse -> Maybe Architecture

-- | The time of the last deployment job.
[$sel:lastDeploymentTime:DescribeRobotResponse'] :: DescribeRobotResponse -> Maybe POSIX

-- | The list of all tags added to the specified robot.
[$sel:tags:DescribeRobotResponse'] :: DescribeRobotResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeRobotResponse'] :: DescribeRobotResponse -> Int

-- | Create a value of <a>DescribeRobotResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastDeploymentJob:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_lastDeploymentJob</a> - The Amazon Resource
--   Name (ARN) of the last deployment job.
--   
--   <a>$sel:status:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_status</a> - The status of the fleet.
--   
--   <a>$sel:arn:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_arn</a> - The Amazon Resource Name (ARN) of
--   the robot.
--   
--   <a>$sel:createdAt:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_createdAt</a> - The time, in milliseconds
--   since the epoch, when the robot was created.
--   
--   <a>$sel:greengrassGroupId:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_greengrassGroupId</a> - The Greengrass group
--   id.
--   
--   <a>$sel:fleetArn:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_fleetArn</a> - The Amazon Resource Name (ARN)
--   of the fleet.
--   
--   <a>$sel:name:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_name</a> - The name of the robot.
--   
--   <a>$sel:architecture:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_architecture</a> - The target architecture of
--   the robot application.
--   
--   <a>$sel:lastDeploymentTime:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_lastDeploymentTime</a> - The time of the last
--   deployment job.
--   
--   <a>$sel:tags:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_tags</a> - The list of all tags added to the
--   specified robot.
--   
--   <a>$sel:httpStatus:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_httpStatus</a> - The response's http status
--   code.
newDescribeRobotResponse :: Int -> DescribeRobotResponse

-- | The Amazon Resource Name (ARN) of the last deployment job.
describeRobotResponse_lastDeploymentJob :: Lens' DescribeRobotResponse (Maybe Text)

-- | The status of the fleet.
describeRobotResponse_status :: Lens' DescribeRobotResponse (Maybe RobotStatus)

-- | The Amazon Resource Name (ARN) of the robot.
describeRobotResponse_arn :: Lens' DescribeRobotResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the robot was created.
describeRobotResponse_createdAt :: Lens' DescribeRobotResponse (Maybe UTCTime)

-- | The Greengrass group id.
describeRobotResponse_greengrassGroupId :: Lens' DescribeRobotResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the fleet.
describeRobotResponse_fleetArn :: Lens' DescribeRobotResponse (Maybe Text)

-- | The name of the robot.
describeRobotResponse_name :: Lens' DescribeRobotResponse (Maybe Text)

-- | The target architecture of the robot application.
describeRobotResponse_architecture :: Lens' DescribeRobotResponse (Maybe Architecture)

-- | The time of the last deployment job.
describeRobotResponse_lastDeploymentTime :: Lens' DescribeRobotResponse (Maybe UTCTime)

-- | The list of all tags added to the specified robot.
describeRobotResponse_tags :: Lens' DescribeRobotResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeRobotResponse_httpStatus :: Lens' DescribeRobotResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeRobot.DescribeRobot
instance GHC.Show.Show Amazonka.RobOMaker.DescribeRobot.DescribeRobot
instance GHC.Read.Read Amazonka.RobOMaker.DescribeRobot.DescribeRobot
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeRobot.DescribeRobot
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeRobot.DescribeRobotResponse
instance GHC.Show.Show Amazonka.RobOMaker.DescribeRobot.DescribeRobotResponse
instance GHC.Read.Read Amazonka.RobOMaker.DescribeRobot.DescribeRobotResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeRobot.DescribeRobotResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.DescribeRobot.DescribeRobot
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeRobot.DescribeRobotResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.DescribeRobot.DescribeRobot
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeRobot.DescribeRobot
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.DescribeRobot.DescribeRobot
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.DescribeRobot.DescribeRobot
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.DescribeRobot.DescribeRobot
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.DescribeRobot.DescribeRobot


-- | Describes a fleet.
module Amazonka.RobOMaker.DescribeFleet

-- | <i>See:</i> <a>newDescribeFleet</a> smart constructor.
data DescribeFleet
DescribeFleet' :: Text -> DescribeFleet

-- | The Amazon Resource Name (ARN) of the fleet.
[$sel:fleet:DescribeFleet'] :: DescribeFleet -> Text

-- | Create a value of <a>DescribeFleet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleet:DescribeFleet'</a>, <a>describeFleet_fleet</a> - The
--   Amazon Resource Name (ARN) of the fleet.
newDescribeFleet :: Text -> DescribeFleet

-- | The Amazon Resource Name (ARN) of the fleet.
describeFleet_fleet :: Lens' DescribeFleet Text

-- | <i>See:</i> <a>newDescribeFleetResponse</a> smart constructor.
data DescribeFleetResponse
DescribeFleetResponse' :: Maybe Text -> Maybe DeploymentStatus -> Maybe [Robot] -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe (HashMap Text Text) -> Int -> DescribeFleetResponse

-- | The Amazon Resource Name (ARN) of the last deployment job.
[$sel:lastDeploymentJob:DescribeFleetResponse'] :: DescribeFleetResponse -> Maybe Text

-- | The status of the last deployment.
[$sel:lastDeploymentStatus:DescribeFleetResponse'] :: DescribeFleetResponse -> Maybe DeploymentStatus

-- | A list of robots.
[$sel:robots:DescribeFleetResponse'] :: DescribeFleetResponse -> Maybe [Robot]

-- | The Amazon Resource Name (ARN) of the fleet.
[$sel:arn:DescribeFleetResponse'] :: DescribeFleetResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the fleet was created.
[$sel:createdAt:DescribeFleetResponse'] :: DescribeFleetResponse -> Maybe POSIX

-- | The name of the fleet.
[$sel:name:DescribeFleetResponse'] :: DescribeFleetResponse -> Maybe Text

-- | The time of the last deployment.
[$sel:lastDeploymentTime:DescribeFleetResponse'] :: DescribeFleetResponse -> Maybe POSIX

-- | The list of all tags added to the specified fleet.
[$sel:tags:DescribeFleetResponse'] :: DescribeFleetResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeFleetResponse'] :: DescribeFleetResponse -> Int

-- | Create a value of <a>DescribeFleetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastDeploymentJob:DescribeFleetResponse'</a>,
--   <a>describeFleetResponse_lastDeploymentJob</a> - The Amazon Resource
--   Name (ARN) of the last deployment job.
--   
--   <a>$sel:lastDeploymentStatus:DescribeFleetResponse'</a>,
--   <a>describeFleetResponse_lastDeploymentStatus</a> - The status of the
--   last deployment.
--   
--   <a>$sel:robots:DescribeFleetResponse'</a>,
--   <a>describeFleetResponse_robots</a> - A list of robots.
--   
--   <a>$sel:arn:DescribeFleetResponse'</a>,
--   <a>describeFleetResponse_arn</a> - The Amazon Resource Name (ARN) of
--   the fleet.
--   
--   <a>$sel:createdAt:DescribeFleetResponse'</a>,
--   <a>describeFleetResponse_createdAt</a> - The time, in milliseconds
--   since the epoch, when the fleet was created.
--   
--   <a>$sel:name:DescribeFleetResponse'</a>,
--   <a>describeFleetResponse_name</a> - The name of the fleet.
--   
--   <a>$sel:lastDeploymentTime:DescribeFleetResponse'</a>,
--   <a>describeFleetResponse_lastDeploymentTime</a> - The time of the last
--   deployment.
--   
--   <a>$sel:tags:DescribeFleetResponse'</a>,
--   <a>describeFleetResponse_tags</a> - The list of all tags added to the
--   specified fleet.
--   
--   <a>$sel:httpStatus:DescribeFleetResponse'</a>,
--   <a>describeFleetResponse_httpStatus</a> - The response's http status
--   code.
newDescribeFleetResponse :: Int -> DescribeFleetResponse

-- | The Amazon Resource Name (ARN) of the last deployment job.
describeFleetResponse_lastDeploymentJob :: Lens' DescribeFleetResponse (Maybe Text)

-- | The status of the last deployment.
describeFleetResponse_lastDeploymentStatus :: Lens' DescribeFleetResponse (Maybe DeploymentStatus)

-- | A list of robots.
describeFleetResponse_robots :: Lens' DescribeFleetResponse (Maybe [Robot])

-- | The Amazon Resource Name (ARN) of the fleet.
describeFleetResponse_arn :: Lens' DescribeFleetResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the fleet was created.
describeFleetResponse_createdAt :: Lens' DescribeFleetResponse (Maybe UTCTime)

-- | The name of the fleet.
describeFleetResponse_name :: Lens' DescribeFleetResponse (Maybe Text)

-- | The time of the last deployment.
describeFleetResponse_lastDeploymentTime :: Lens' DescribeFleetResponse (Maybe UTCTime)

-- | The list of all tags added to the specified fleet.
describeFleetResponse_tags :: Lens' DescribeFleetResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeFleetResponse_httpStatus :: Lens' DescribeFleetResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeFleet.DescribeFleet
instance GHC.Show.Show Amazonka.RobOMaker.DescribeFleet.DescribeFleet
instance GHC.Read.Read Amazonka.RobOMaker.DescribeFleet.DescribeFleet
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeFleet.DescribeFleet
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeFleet.DescribeFleetResponse
instance GHC.Show.Show Amazonka.RobOMaker.DescribeFleet.DescribeFleetResponse
instance GHC.Read.Read Amazonka.RobOMaker.DescribeFleet.DescribeFleetResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeFleet.DescribeFleetResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.DescribeFleet.DescribeFleet
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeFleet.DescribeFleetResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.DescribeFleet.DescribeFleet
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeFleet.DescribeFleet
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.DescribeFleet.DescribeFleet
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.DescribeFleet.DescribeFleet
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.DescribeFleet.DescribeFleet
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.DescribeFleet.DescribeFleet


-- | Describes a deployment job.
module Amazonka.RobOMaker.DescribeDeploymentJob

-- | <i>See:</i> <a>newDescribeDeploymentJob</a> smart constructor.
data DescribeDeploymentJob
DescribeDeploymentJob' :: Text -> DescribeDeploymentJob

-- | The Amazon Resource Name (ARN) of the deployment job.
[$sel:job:DescribeDeploymentJob'] :: DescribeDeploymentJob -> Text

-- | Create a value of <a>DescribeDeploymentJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:DescribeDeploymentJob'</a>,
--   <a>describeDeploymentJob_job</a> - The Amazon Resource Name (ARN) of
--   the deployment job.
newDescribeDeploymentJob :: Text -> DescribeDeploymentJob

-- | The Amazon Resource Name (ARN) of the deployment job.
describeDeploymentJob_job :: Lens' DescribeDeploymentJob Text

-- | <i>See:</i> <a>newDescribeDeploymentJobResponse</a> smart constructor.
data DescribeDeploymentJobResponse
DescribeDeploymentJobResponse' :: Maybe Text -> Maybe DeploymentStatus -> Maybe (NonEmpty DeploymentApplicationConfig) -> Maybe Text -> Maybe POSIX -> Maybe DeploymentJobErrorCode -> Maybe DeploymentConfig -> Maybe Text -> Maybe [RobotDeployment] -> Maybe (HashMap Text Text) -> Int -> DescribeDeploymentJobResponse

-- | A short description of the reason why the deployment job failed.
[$sel:failureReason:DescribeDeploymentJobResponse'] :: DescribeDeploymentJobResponse -> Maybe Text

-- | The status of the deployment job.
[$sel:status:DescribeDeploymentJobResponse'] :: DescribeDeploymentJobResponse -> Maybe DeploymentStatus

-- | The deployment application configuration.
[$sel:deploymentApplicationConfigs:DescribeDeploymentJobResponse'] :: DescribeDeploymentJobResponse -> Maybe (NonEmpty DeploymentApplicationConfig)

-- | The Amazon Resource Name (ARN) of the deployment job.
[$sel:arn:DescribeDeploymentJobResponse'] :: DescribeDeploymentJobResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the deployment job was
--   created.
[$sel:createdAt:DescribeDeploymentJobResponse'] :: DescribeDeploymentJobResponse -> Maybe POSIX

-- | The deployment job failure code.
[$sel:failureCode:DescribeDeploymentJobResponse'] :: DescribeDeploymentJobResponse -> Maybe DeploymentJobErrorCode

-- | The deployment configuration.
[$sel:deploymentConfig:DescribeDeploymentJobResponse'] :: DescribeDeploymentJobResponse -> Maybe DeploymentConfig

-- | The Amazon Resource Name (ARN) of the fleet.
[$sel:fleet:DescribeDeploymentJobResponse'] :: DescribeDeploymentJobResponse -> Maybe Text

-- | A list of robot deployment summaries.
[$sel:robotDeploymentSummary:DescribeDeploymentJobResponse'] :: DescribeDeploymentJobResponse -> Maybe [RobotDeployment]

-- | The list of all tags added to the specified deployment job.
[$sel:tags:DescribeDeploymentJobResponse'] :: DescribeDeploymentJobResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:DescribeDeploymentJobResponse'] :: DescribeDeploymentJobResponse -> Int

-- | Create a value of <a>DescribeDeploymentJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_failureReason</a> - A short
--   description of the reason why the deployment job failed.
--   
--   <a>$sel:status:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_status</a> - The status of the
--   deployment job.
--   
--   
--   <a>$sel:deploymentApplicationConfigs:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_deploymentApplicationConfigs</a> -
--   The deployment application configuration.
--   
--   <a>$sel:arn:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the deployment job.
--   
--   <a>$sel:createdAt:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the deployment job was created.
--   
--   <a>$sel:failureCode:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_failureCode</a> - The deployment job
--   failure code.
--   
--   <a>$sel:deploymentConfig:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_deploymentConfig</a> - The deployment
--   configuration.
--   
--   <a>$sel:fleet:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_fleet</a> - The Amazon Resource Name
--   (ARN) of the fleet.
--   
--   <a>$sel:robotDeploymentSummary:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_robotDeploymentSummary</a> - A list
--   of robot deployment summaries.
--   
--   <a>$sel:tags:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_tags</a> - The list of all tags added
--   to the specified deployment job.
--   
--   <a>$sel:httpStatus:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_httpStatus</a> - The response's http
--   status code.
newDescribeDeploymentJobResponse :: Int -> DescribeDeploymentJobResponse

-- | A short description of the reason why the deployment job failed.
describeDeploymentJobResponse_failureReason :: Lens' DescribeDeploymentJobResponse (Maybe Text)

-- | The status of the deployment job.
describeDeploymentJobResponse_status :: Lens' DescribeDeploymentJobResponse (Maybe DeploymentStatus)

-- | The deployment application configuration.
describeDeploymentJobResponse_deploymentApplicationConfigs :: Lens' DescribeDeploymentJobResponse (Maybe (NonEmpty DeploymentApplicationConfig))

-- | The Amazon Resource Name (ARN) of the deployment job.
describeDeploymentJobResponse_arn :: Lens' DescribeDeploymentJobResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the deployment job was
--   created.
describeDeploymentJobResponse_createdAt :: Lens' DescribeDeploymentJobResponse (Maybe UTCTime)

-- | The deployment job failure code.
describeDeploymentJobResponse_failureCode :: Lens' DescribeDeploymentJobResponse (Maybe DeploymentJobErrorCode)

-- | The deployment configuration.
describeDeploymentJobResponse_deploymentConfig :: Lens' DescribeDeploymentJobResponse (Maybe DeploymentConfig)

-- | The Amazon Resource Name (ARN) of the fleet.
describeDeploymentJobResponse_fleet :: Lens' DescribeDeploymentJobResponse (Maybe Text)

-- | A list of robot deployment summaries.
describeDeploymentJobResponse_robotDeploymentSummary :: Lens' DescribeDeploymentJobResponse (Maybe [RobotDeployment])

-- | The list of all tags added to the specified deployment job.
describeDeploymentJobResponse_tags :: Lens' DescribeDeploymentJobResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeDeploymentJobResponse_httpStatus :: Lens' DescribeDeploymentJobResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeDeploymentJob.DescribeDeploymentJob
instance GHC.Show.Show Amazonka.RobOMaker.DescribeDeploymentJob.DescribeDeploymentJob
instance GHC.Read.Read Amazonka.RobOMaker.DescribeDeploymentJob.DescribeDeploymentJob
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeDeploymentJob.DescribeDeploymentJob
instance GHC.Generics.Generic Amazonka.RobOMaker.DescribeDeploymentJob.DescribeDeploymentJobResponse
instance GHC.Show.Show Amazonka.RobOMaker.DescribeDeploymentJob.DescribeDeploymentJobResponse
instance GHC.Read.Read Amazonka.RobOMaker.DescribeDeploymentJob.DescribeDeploymentJobResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.DescribeDeploymentJob.DescribeDeploymentJobResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.DescribeDeploymentJob.DescribeDeploymentJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeDeploymentJob.DescribeDeploymentJobResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.DescribeDeploymentJob.DescribeDeploymentJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DescribeDeploymentJob.DescribeDeploymentJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.DescribeDeploymentJob.DescribeDeploymentJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.DescribeDeploymentJob.DescribeDeploymentJob
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.DescribeDeploymentJob.DescribeDeploymentJob
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.DescribeDeploymentJob.DescribeDeploymentJob


-- | Deregisters a robot.
module Amazonka.RobOMaker.DeregisterRobot

-- | <i>See:</i> <a>newDeregisterRobot</a> smart constructor.
data DeregisterRobot
DeregisterRobot' :: Text -> Text -> DeregisterRobot

-- | The Amazon Resource Name (ARN) of the fleet.
[$sel:fleet:DeregisterRobot'] :: DeregisterRobot -> Text

-- | The Amazon Resource Name (ARN) of the robot.
[$sel:robot:DeregisterRobot'] :: DeregisterRobot -> Text

-- | Create a value of <a>DeregisterRobot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleet:DeregisterRobot'</a>, <a>deregisterRobot_fleet</a> - The
--   Amazon Resource Name (ARN) of the fleet.
--   
--   <a>$sel:robot:DeregisterRobot'</a>, <a>deregisterRobot_robot</a> - The
--   Amazon Resource Name (ARN) of the robot.
newDeregisterRobot :: Text -> Text -> DeregisterRobot

-- | The Amazon Resource Name (ARN) of the fleet.
deregisterRobot_fleet :: Lens' DeregisterRobot Text

-- | The Amazon Resource Name (ARN) of the robot.
deregisterRobot_robot :: Lens' DeregisterRobot Text

-- | <i>See:</i> <a>newDeregisterRobotResponse</a> smart constructor.
data DeregisterRobotResponse
DeregisterRobotResponse' :: Maybe Text -> Maybe Text -> Int -> DeregisterRobotResponse

-- | The Amazon Resource Name (ARN) of the robot.
[$sel:robot:DeregisterRobotResponse'] :: DeregisterRobotResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the fleet.
[$sel:fleet:DeregisterRobotResponse'] :: DeregisterRobotResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeregisterRobotResponse'] :: DeregisterRobotResponse -> Int

-- | Create a value of <a>DeregisterRobotResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:robot:DeregisterRobot'</a>,
--   <a>deregisterRobotResponse_robot</a> - The Amazon Resource Name (ARN)
--   of the robot.
--   
--   <a>$sel:fleet:DeregisterRobot'</a>,
--   <a>deregisterRobotResponse_fleet</a> - The Amazon Resource Name (ARN)
--   of the fleet.
--   
--   <a>$sel:httpStatus:DeregisterRobotResponse'</a>,
--   <a>deregisterRobotResponse_httpStatus</a> - The response's http status
--   code.
newDeregisterRobotResponse :: Int -> DeregisterRobotResponse

-- | The Amazon Resource Name (ARN) of the robot.
deregisterRobotResponse_robot :: Lens' DeregisterRobotResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the fleet.
deregisterRobotResponse_fleet :: Lens' DeregisterRobotResponse (Maybe Text)

-- | The response's http status code.
deregisterRobotResponse_httpStatus :: Lens' DeregisterRobotResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.DeregisterRobot.DeregisterRobot
instance GHC.Show.Show Amazonka.RobOMaker.DeregisterRobot.DeregisterRobot
instance GHC.Read.Read Amazonka.RobOMaker.DeregisterRobot.DeregisterRobot
instance GHC.Classes.Eq Amazonka.RobOMaker.DeregisterRobot.DeregisterRobot
instance GHC.Generics.Generic Amazonka.RobOMaker.DeregisterRobot.DeregisterRobotResponse
instance GHC.Show.Show Amazonka.RobOMaker.DeregisterRobot.DeregisterRobotResponse
instance GHC.Read.Read Amazonka.RobOMaker.DeregisterRobot.DeregisterRobotResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.DeregisterRobot.DeregisterRobotResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.DeregisterRobot.DeregisterRobot
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DeregisterRobot.DeregisterRobotResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.DeregisterRobot.DeregisterRobot
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DeregisterRobot.DeregisterRobot
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.DeregisterRobot.DeregisterRobot
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.DeregisterRobot.DeregisterRobot
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.DeregisterRobot.DeregisterRobot
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.DeregisterRobot.DeregisterRobot


-- | Deletes a world template.
module Amazonka.RobOMaker.DeleteWorldTemplate

-- | <i>See:</i> <a>newDeleteWorldTemplate</a> smart constructor.
data DeleteWorldTemplate
DeleteWorldTemplate' :: Text -> DeleteWorldTemplate

-- | The Amazon Resource Name (arn) of the world template you want to
--   delete.
[$sel:template:DeleteWorldTemplate'] :: DeleteWorldTemplate -> Text

-- | Create a value of <a>DeleteWorldTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:template:DeleteWorldTemplate'</a>,
--   <a>deleteWorldTemplate_template</a> - The Amazon Resource Name (arn)
--   of the world template you want to delete.
newDeleteWorldTemplate :: Text -> DeleteWorldTemplate

-- | The Amazon Resource Name (arn) of the world template you want to
--   delete.
deleteWorldTemplate_template :: Lens' DeleteWorldTemplate Text

-- | <i>See:</i> <a>newDeleteWorldTemplateResponse</a> smart constructor.
data DeleteWorldTemplateResponse
DeleteWorldTemplateResponse' :: Int -> DeleteWorldTemplateResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteWorldTemplateResponse'] :: DeleteWorldTemplateResponse -> Int

-- | Create a value of <a>DeleteWorldTemplateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteWorldTemplateResponse'</a>,
--   <a>deleteWorldTemplateResponse_httpStatus</a> - The response's http
--   status code.
newDeleteWorldTemplateResponse :: Int -> DeleteWorldTemplateResponse

-- | The response's http status code.
deleteWorldTemplateResponse_httpStatus :: Lens' DeleteWorldTemplateResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.DeleteWorldTemplate.DeleteWorldTemplate
instance GHC.Show.Show Amazonka.RobOMaker.DeleteWorldTemplate.DeleteWorldTemplate
instance GHC.Read.Read Amazonka.RobOMaker.DeleteWorldTemplate.DeleteWorldTemplate
instance GHC.Classes.Eq Amazonka.RobOMaker.DeleteWorldTemplate.DeleteWorldTemplate
instance GHC.Generics.Generic Amazonka.RobOMaker.DeleteWorldTemplate.DeleteWorldTemplateResponse
instance GHC.Show.Show Amazonka.RobOMaker.DeleteWorldTemplate.DeleteWorldTemplateResponse
instance GHC.Read.Read Amazonka.RobOMaker.DeleteWorldTemplate.DeleteWorldTemplateResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.DeleteWorldTemplate.DeleteWorldTemplateResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.DeleteWorldTemplate.DeleteWorldTemplate
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DeleteWorldTemplate.DeleteWorldTemplateResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.DeleteWorldTemplate.DeleteWorldTemplate
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DeleteWorldTemplate.DeleteWorldTemplate
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.DeleteWorldTemplate.DeleteWorldTemplate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.DeleteWorldTemplate.DeleteWorldTemplate
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.DeleteWorldTemplate.DeleteWorldTemplate
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.DeleteWorldTemplate.DeleteWorldTemplate


-- | Deletes a simulation application.
module Amazonka.RobOMaker.DeleteSimulationApplication

-- | <i>See:</i> <a>newDeleteSimulationApplication</a> smart constructor.
data DeleteSimulationApplication
DeleteSimulationApplication' :: Maybe Text -> Text -> DeleteSimulationApplication

-- | The version of the simulation application to delete.
[$sel:applicationVersion:DeleteSimulationApplication'] :: DeleteSimulationApplication -> Maybe Text

-- | The application information for the simulation application to delete.
[$sel:application:DeleteSimulationApplication'] :: DeleteSimulationApplication -> Text

-- | Create a value of <a>DeleteSimulationApplication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationVersion:DeleteSimulationApplication'</a>,
--   <a>deleteSimulationApplication_applicationVersion</a> - The version of
--   the simulation application to delete.
--   
--   <a>$sel:application:DeleteSimulationApplication'</a>,
--   <a>deleteSimulationApplication_application</a> - The application
--   information for the simulation application to delete.
newDeleteSimulationApplication :: Text -> DeleteSimulationApplication

-- | The version of the simulation application to delete.
deleteSimulationApplication_applicationVersion :: Lens' DeleteSimulationApplication (Maybe Text)

-- | The application information for the simulation application to delete.
deleteSimulationApplication_application :: Lens' DeleteSimulationApplication Text

-- | <i>See:</i> <a>newDeleteSimulationApplicationResponse</a> smart
--   constructor.
data DeleteSimulationApplicationResponse
DeleteSimulationApplicationResponse' :: Int -> DeleteSimulationApplicationResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteSimulationApplicationResponse'] :: DeleteSimulationApplicationResponse -> Int

-- | Create a value of <a>DeleteSimulationApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteSimulationApplicationResponse'</a>,
--   <a>deleteSimulationApplicationResponse_httpStatus</a> - The response's
--   http status code.
newDeleteSimulationApplicationResponse :: Int -> DeleteSimulationApplicationResponse

-- | The response's http status code.
deleteSimulationApplicationResponse_httpStatus :: Lens' DeleteSimulationApplicationResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.DeleteSimulationApplication.DeleteSimulationApplication
instance GHC.Show.Show Amazonka.RobOMaker.DeleteSimulationApplication.DeleteSimulationApplication
instance GHC.Read.Read Amazonka.RobOMaker.DeleteSimulationApplication.DeleteSimulationApplication
instance GHC.Classes.Eq Amazonka.RobOMaker.DeleteSimulationApplication.DeleteSimulationApplication
instance GHC.Generics.Generic Amazonka.RobOMaker.DeleteSimulationApplication.DeleteSimulationApplicationResponse
instance GHC.Show.Show Amazonka.RobOMaker.DeleteSimulationApplication.DeleteSimulationApplicationResponse
instance GHC.Read.Read Amazonka.RobOMaker.DeleteSimulationApplication.DeleteSimulationApplicationResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.DeleteSimulationApplication.DeleteSimulationApplicationResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.DeleteSimulationApplication.DeleteSimulationApplication
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DeleteSimulationApplication.DeleteSimulationApplicationResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.DeleteSimulationApplication.DeleteSimulationApplication
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DeleteSimulationApplication.DeleteSimulationApplication
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.DeleteSimulationApplication.DeleteSimulationApplication
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.DeleteSimulationApplication.DeleteSimulationApplication
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.DeleteSimulationApplication.DeleteSimulationApplication
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.DeleteSimulationApplication.DeleteSimulationApplication


-- | Deletes a robot application.
module Amazonka.RobOMaker.DeleteRobotApplication

-- | <i>See:</i> <a>newDeleteRobotApplication</a> smart constructor.
data DeleteRobotApplication
DeleteRobotApplication' :: Maybe Text -> Text -> DeleteRobotApplication

-- | The version of the robot application to delete.
[$sel:applicationVersion:DeleteRobotApplication'] :: DeleteRobotApplication -> Maybe Text

-- | The Amazon Resource Name (ARN) of the the robot application.
[$sel:application:DeleteRobotApplication'] :: DeleteRobotApplication -> Text

-- | Create a value of <a>DeleteRobotApplication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationVersion:DeleteRobotApplication'</a>,
--   <a>deleteRobotApplication_applicationVersion</a> - The version of the
--   robot application to delete.
--   
--   <a>$sel:application:DeleteRobotApplication'</a>,
--   <a>deleteRobotApplication_application</a> - The Amazon Resource Name
--   (ARN) of the the robot application.
newDeleteRobotApplication :: Text -> DeleteRobotApplication

-- | The version of the robot application to delete.
deleteRobotApplication_applicationVersion :: Lens' DeleteRobotApplication (Maybe Text)

-- | The Amazon Resource Name (ARN) of the the robot application.
deleteRobotApplication_application :: Lens' DeleteRobotApplication Text

-- | <i>See:</i> <a>newDeleteRobotApplicationResponse</a> smart
--   constructor.
data DeleteRobotApplicationResponse
DeleteRobotApplicationResponse' :: Int -> DeleteRobotApplicationResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteRobotApplicationResponse'] :: DeleteRobotApplicationResponse -> Int

-- | Create a value of <a>DeleteRobotApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRobotApplicationResponse'</a>,
--   <a>deleteRobotApplicationResponse_httpStatus</a> - The response's http
--   status code.
newDeleteRobotApplicationResponse :: Int -> DeleteRobotApplicationResponse

-- | The response's http status code.
deleteRobotApplicationResponse_httpStatus :: Lens' DeleteRobotApplicationResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.DeleteRobotApplication.DeleteRobotApplication
instance GHC.Show.Show Amazonka.RobOMaker.DeleteRobotApplication.DeleteRobotApplication
instance GHC.Read.Read Amazonka.RobOMaker.DeleteRobotApplication.DeleteRobotApplication
instance GHC.Classes.Eq Amazonka.RobOMaker.DeleteRobotApplication.DeleteRobotApplication
instance GHC.Generics.Generic Amazonka.RobOMaker.DeleteRobotApplication.DeleteRobotApplicationResponse
instance GHC.Show.Show Amazonka.RobOMaker.DeleteRobotApplication.DeleteRobotApplicationResponse
instance GHC.Read.Read Amazonka.RobOMaker.DeleteRobotApplication.DeleteRobotApplicationResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.DeleteRobotApplication.DeleteRobotApplicationResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.DeleteRobotApplication.DeleteRobotApplication
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DeleteRobotApplication.DeleteRobotApplicationResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.DeleteRobotApplication.DeleteRobotApplication
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DeleteRobotApplication.DeleteRobotApplication
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.DeleteRobotApplication.DeleteRobotApplication
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.DeleteRobotApplication.DeleteRobotApplication
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.DeleteRobotApplication.DeleteRobotApplication
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.DeleteRobotApplication.DeleteRobotApplication


-- | Deletes a robot.
module Amazonka.RobOMaker.DeleteRobot

-- | <i>See:</i> <a>newDeleteRobot</a> smart constructor.
data DeleteRobot
DeleteRobot' :: Text -> DeleteRobot

-- | The Amazon Resource Name (ARN) of the robot.
[$sel:robot:DeleteRobot'] :: DeleteRobot -> Text

-- | Create a value of <a>DeleteRobot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:robot:DeleteRobot'</a>, <a>deleteRobot_robot</a> - The Amazon
--   Resource Name (ARN) of the robot.
newDeleteRobot :: Text -> DeleteRobot

-- | The Amazon Resource Name (ARN) of the robot.
deleteRobot_robot :: Lens' DeleteRobot Text

-- | <i>See:</i> <a>newDeleteRobotResponse</a> smart constructor.
data DeleteRobotResponse
DeleteRobotResponse' :: Int -> DeleteRobotResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteRobotResponse'] :: DeleteRobotResponse -> Int

-- | Create a value of <a>DeleteRobotResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRobotResponse'</a>,
--   <a>deleteRobotResponse_httpStatus</a> - The response's http status
--   code.
newDeleteRobotResponse :: Int -> DeleteRobotResponse

-- | The response's http status code.
deleteRobotResponse_httpStatus :: Lens' DeleteRobotResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.DeleteRobot.DeleteRobot
instance GHC.Show.Show Amazonka.RobOMaker.DeleteRobot.DeleteRobot
instance GHC.Read.Read Amazonka.RobOMaker.DeleteRobot.DeleteRobot
instance GHC.Classes.Eq Amazonka.RobOMaker.DeleteRobot.DeleteRobot
instance GHC.Generics.Generic Amazonka.RobOMaker.DeleteRobot.DeleteRobotResponse
instance GHC.Show.Show Amazonka.RobOMaker.DeleteRobot.DeleteRobotResponse
instance GHC.Read.Read Amazonka.RobOMaker.DeleteRobot.DeleteRobotResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.DeleteRobot.DeleteRobotResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.DeleteRobot.DeleteRobot
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DeleteRobot.DeleteRobotResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.DeleteRobot.DeleteRobot
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DeleteRobot.DeleteRobot
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.DeleteRobot.DeleteRobot
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.DeleteRobot.DeleteRobot
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.DeleteRobot.DeleteRobot
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.DeleteRobot.DeleteRobot


-- | Deletes a fleet.
module Amazonka.RobOMaker.DeleteFleet

-- | <i>See:</i> <a>newDeleteFleet</a> smart constructor.
data DeleteFleet
DeleteFleet' :: Text -> DeleteFleet

-- | The Amazon Resource Name (ARN) of the fleet.
[$sel:fleet:DeleteFleet'] :: DeleteFleet -> Text

-- | Create a value of <a>DeleteFleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleet:DeleteFleet'</a>, <a>deleteFleet_fleet</a> - The Amazon
--   Resource Name (ARN) of the fleet.
newDeleteFleet :: Text -> DeleteFleet

-- | The Amazon Resource Name (ARN) of the fleet.
deleteFleet_fleet :: Lens' DeleteFleet Text

-- | <i>See:</i> <a>newDeleteFleetResponse</a> smart constructor.
data DeleteFleetResponse
DeleteFleetResponse' :: Int -> DeleteFleetResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteFleetResponse'] :: DeleteFleetResponse -> Int

-- | Create a value of <a>DeleteFleetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteFleetResponse'</a>,
--   <a>deleteFleetResponse_httpStatus</a> - The response's http status
--   code.
newDeleteFleetResponse :: Int -> DeleteFleetResponse

-- | The response's http status code.
deleteFleetResponse_httpStatus :: Lens' DeleteFleetResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.DeleteFleet.DeleteFleet
instance GHC.Show.Show Amazonka.RobOMaker.DeleteFleet.DeleteFleet
instance GHC.Read.Read Amazonka.RobOMaker.DeleteFleet.DeleteFleet
instance GHC.Classes.Eq Amazonka.RobOMaker.DeleteFleet.DeleteFleet
instance GHC.Generics.Generic Amazonka.RobOMaker.DeleteFleet.DeleteFleetResponse
instance GHC.Show.Show Amazonka.RobOMaker.DeleteFleet.DeleteFleetResponse
instance GHC.Read.Read Amazonka.RobOMaker.DeleteFleet.DeleteFleetResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.DeleteFleet.DeleteFleetResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.DeleteFleet.DeleteFleet
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DeleteFleet.DeleteFleetResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.DeleteFleet.DeleteFleet
instance Control.DeepSeq.NFData Amazonka.RobOMaker.DeleteFleet.DeleteFleet
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.DeleteFleet.DeleteFleet
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.DeleteFleet.DeleteFleet
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.DeleteFleet.DeleteFleet
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.DeleteFleet.DeleteFleet


-- | Creates a world template.
module Amazonka.RobOMaker.CreateWorldTemplate

-- | <i>See:</i> <a>newCreateWorldTemplate</a> smart constructor.
data CreateWorldTemplate
CreateWorldTemplate' :: Maybe Text -> Maybe TemplateLocation -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> CreateWorldTemplate

-- | The name of the world template.
[$sel:name:CreateWorldTemplate'] :: CreateWorldTemplate -> Maybe Text

-- | The location of the world template.
[$sel:templateLocation:CreateWorldTemplate'] :: CreateWorldTemplate -> Maybe TemplateLocation

-- | The world template body.
[$sel:templateBody:CreateWorldTemplate'] :: CreateWorldTemplate -> Maybe Text

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:CreateWorldTemplate'] :: CreateWorldTemplate -> Maybe Text

-- | A map that contains tag keys and tag values that are attached to the
--   world template.
[$sel:tags:CreateWorldTemplate'] :: CreateWorldTemplate -> Maybe (HashMap Text Text)

-- | Create a value of <a>CreateWorldTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateWorldTemplate'</a>, <a>createWorldTemplate_name</a>
--   - The name of the world template.
--   
--   <a>$sel:templateLocation:CreateWorldTemplate'</a>,
--   <a>createWorldTemplate_templateLocation</a> - The location of the
--   world template.
--   
--   <a>$sel:templateBody:CreateWorldTemplate'</a>,
--   <a>createWorldTemplate_templateBody</a> - The world template body.
--   
--   <a>$sel:clientRequestToken:CreateWorldTemplate'</a>,
--   <a>createWorldTemplate_clientRequestToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:tags:CreateWorldTemplate'</a>, <a>createWorldTemplate_tags</a>
--   - A map that contains tag keys and tag values that are attached to the
--   world template.
newCreateWorldTemplate :: CreateWorldTemplate

-- | The name of the world template.
createWorldTemplate_name :: Lens' CreateWorldTemplate (Maybe Text)

-- | The location of the world template.
createWorldTemplate_templateLocation :: Lens' CreateWorldTemplate (Maybe TemplateLocation)

-- | The world template body.
createWorldTemplate_templateBody :: Lens' CreateWorldTemplate (Maybe Text)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createWorldTemplate_clientRequestToken :: Lens' CreateWorldTemplate (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   world template.
createWorldTemplate_tags :: Lens' CreateWorldTemplate (Maybe (HashMap Text Text))

-- | <i>See:</i> <a>newCreateWorldTemplateResponse</a> smart constructor.
data CreateWorldTemplateResponse
CreateWorldTemplateResponse' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateWorldTemplateResponse

-- | The Amazon Resource Name (ARN) of the world template.
[$sel:arn:CreateWorldTemplateResponse'] :: CreateWorldTemplateResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the world template was
--   created.
[$sel:createdAt:CreateWorldTemplateResponse'] :: CreateWorldTemplateResponse -> Maybe POSIX

-- | The name of the world template.
[$sel:name:CreateWorldTemplateResponse'] :: CreateWorldTemplateResponse -> Maybe Text

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:CreateWorldTemplateResponse'] :: CreateWorldTemplateResponse -> Maybe Text

-- | A map that contains tag keys and tag values that are attached to the
--   world template.
[$sel:tags:CreateWorldTemplateResponse'] :: CreateWorldTemplateResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:CreateWorldTemplateResponse'] :: CreateWorldTemplateResponse -> Int

-- | Create a value of <a>CreateWorldTemplateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:CreateWorldTemplateResponse'</a>,
--   <a>createWorldTemplateResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the world template.
--   
--   <a>$sel:createdAt:CreateWorldTemplateResponse'</a>,
--   <a>createWorldTemplateResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the world template was created.
--   
--   <a>$sel:name:CreateWorldTemplate'</a>,
--   <a>createWorldTemplateResponse_name</a> - The name of the world
--   template.
--   
--   <a>$sel:clientRequestToken:CreateWorldTemplate'</a>,
--   <a>createWorldTemplateResponse_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:tags:CreateWorldTemplate'</a>,
--   <a>createWorldTemplateResponse_tags</a> - A map that contains tag keys
--   and tag values that are attached to the world template.
--   
--   <a>$sel:httpStatus:CreateWorldTemplateResponse'</a>,
--   <a>createWorldTemplateResponse_httpStatus</a> - The response's http
--   status code.
newCreateWorldTemplateResponse :: Int -> CreateWorldTemplateResponse

-- | The Amazon Resource Name (ARN) of the world template.
createWorldTemplateResponse_arn :: Lens' CreateWorldTemplateResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world template was
--   created.
createWorldTemplateResponse_createdAt :: Lens' CreateWorldTemplateResponse (Maybe UTCTime)

-- | The name of the world template.
createWorldTemplateResponse_name :: Lens' CreateWorldTemplateResponse (Maybe Text)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createWorldTemplateResponse_clientRequestToken :: Lens' CreateWorldTemplateResponse (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   world template.
createWorldTemplateResponse_tags :: Lens' CreateWorldTemplateResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createWorldTemplateResponse_httpStatus :: Lens' CreateWorldTemplateResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateWorldTemplate.CreateWorldTemplate
instance GHC.Show.Show Amazonka.RobOMaker.CreateWorldTemplate.CreateWorldTemplate
instance GHC.Read.Read Amazonka.RobOMaker.CreateWorldTemplate.CreateWorldTemplate
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateWorldTemplate.CreateWorldTemplate
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateWorldTemplate.CreateWorldTemplateResponse
instance GHC.Show.Show Amazonka.RobOMaker.CreateWorldTemplate.CreateWorldTemplateResponse
instance GHC.Read.Read Amazonka.RobOMaker.CreateWorldTemplate.CreateWorldTemplateResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateWorldTemplate.CreateWorldTemplateResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.CreateWorldTemplate.CreateWorldTemplate
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateWorldTemplate.CreateWorldTemplateResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.CreateWorldTemplate.CreateWorldTemplate
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateWorldTemplate.CreateWorldTemplate
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.CreateWorldTemplate.CreateWorldTemplate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.CreateWorldTemplate.CreateWorldTemplate
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.CreateWorldTemplate.CreateWorldTemplate
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.CreateWorldTemplate.CreateWorldTemplate


-- | Creates worlds using the specified template.
module Amazonka.RobOMaker.CreateWorldGenerationJob

-- | <i>See:</i> <a>newCreateWorldGenerationJob</a> smart constructor.
data CreateWorldGenerationJob
CreateWorldGenerationJob' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> WorldCount -> CreateWorldGenerationJob

-- | A map that contains tag keys and tag values that are attached to the
--   generated worlds.
[$sel:worldTags:CreateWorldGenerationJob'] :: CreateWorldGenerationJob -> Maybe (HashMap Text Text)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:CreateWorldGenerationJob'] :: CreateWorldGenerationJob -> Maybe Text

-- | A map that contains tag keys and tag values that are attached to the
--   world generator job.
[$sel:tags:CreateWorldGenerationJob'] :: CreateWorldGenerationJob -> Maybe (HashMap Text Text)

-- | The Amazon Resource Name (arn) of the world template describing the
--   worlds you want to create.
[$sel:template:CreateWorldGenerationJob'] :: CreateWorldGenerationJob -> Text

-- | Information about the world count.
[$sel:worldCount:CreateWorldGenerationJob'] :: CreateWorldGenerationJob -> WorldCount

-- | Create a value of <a>CreateWorldGenerationJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:worldTags:CreateWorldGenerationJob'</a>,
--   <a>createWorldGenerationJob_worldTags</a> - A map that contains tag
--   keys and tag values that are attached to the generated worlds.
--   
--   <a>$sel:clientRequestToken:CreateWorldGenerationJob'</a>,
--   <a>createWorldGenerationJob_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:tags:CreateWorldGenerationJob'</a>,
--   <a>createWorldGenerationJob_tags</a> - A map that contains tag keys
--   and tag values that are attached to the world generator job.
--   
--   <a>$sel:template:CreateWorldGenerationJob'</a>,
--   <a>createWorldGenerationJob_template</a> - The Amazon Resource Name
--   (arn) of the world template describing the worlds you want to create.
--   
--   <a>$sel:worldCount:CreateWorldGenerationJob'</a>,
--   <a>createWorldGenerationJob_worldCount</a> - Information about the
--   world count.
newCreateWorldGenerationJob :: Text -> WorldCount -> CreateWorldGenerationJob

-- | A map that contains tag keys and tag values that are attached to the
--   generated worlds.
createWorldGenerationJob_worldTags :: Lens' CreateWorldGenerationJob (Maybe (HashMap Text Text))

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createWorldGenerationJob_clientRequestToken :: Lens' CreateWorldGenerationJob (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   world generator job.
createWorldGenerationJob_tags :: Lens' CreateWorldGenerationJob (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (arn) of the world template describing the
--   worlds you want to create.
createWorldGenerationJob_template :: Lens' CreateWorldGenerationJob Text

-- | Information about the world count.
createWorldGenerationJob_worldCount :: Lens' CreateWorldGenerationJob WorldCount

-- | <i>See:</i> <a>newCreateWorldGenerationJobResponse</a> smart
--   constructor.
data CreateWorldGenerationJobResponse
CreateWorldGenerationJobResponse' :: Maybe WorldGenerationJobStatus -> Maybe Text -> Maybe POSIX -> Maybe WorldGenerationJobErrorCode -> Maybe WorldCount -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateWorldGenerationJobResponse

-- | The status of the world generator job.
--   
--   <ul>
--   <li><i>Pending</i> The world generator job request is pending.</li>
--   <li><i>Running</i> The world generator job is running.</li>
--   <li><i>Completed</i> The world generator job completed.</li>
--   <li><i>Failed</i> The world generator job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>PartialFailed</i> Some worlds did not generate.</li>
--   <li><i>Canceled</i> The world generator job was cancelled.</li>
--   <li><i>Canceling</i> The world generator job is being cancelled.</li>
--   </ul>
[$sel:status:CreateWorldGenerationJobResponse'] :: CreateWorldGenerationJobResponse -> Maybe WorldGenerationJobStatus

-- | The Amazon Resource Name (ARN) of the world generator job.
[$sel:arn:CreateWorldGenerationJobResponse'] :: CreateWorldGenerationJobResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the world generator
--   job was created.
[$sel:createdAt:CreateWorldGenerationJobResponse'] :: CreateWorldGenerationJobResponse -> Maybe POSIX

-- | The failure code of the world generator job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
[$sel:failureCode:CreateWorldGenerationJobResponse'] :: CreateWorldGenerationJobResponse -> Maybe WorldGenerationJobErrorCode

-- | Information about the world count.
[$sel:worldCount:CreateWorldGenerationJobResponse'] :: CreateWorldGenerationJobResponse -> Maybe WorldCount

-- | The Amazon Resource Name (arn) of the world template.
[$sel:template:CreateWorldGenerationJobResponse'] :: CreateWorldGenerationJobResponse -> Maybe Text

-- | A map that contains tag keys and tag values that are attached to the
--   generated worlds.
[$sel:worldTags:CreateWorldGenerationJobResponse'] :: CreateWorldGenerationJobResponse -> Maybe (HashMap Text Text)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:CreateWorldGenerationJobResponse'] :: CreateWorldGenerationJobResponse -> Maybe Text

-- | A map that contains tag keys and tag values that are attached to the
--   world generator job.
[$sel:tags:CreateWorldGenerationJobResponse'] :: CreateWorldGenerationJobResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:CreateWorldGenerationJobResponse'] :: CreateWorldGenerationJobResponse -> Int

-- | Create a value of <a>CreateWorldGenerationJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateWorldGenerationJobResponse'</a>,
--   <a>createWorldGenerationJobResponse_status</a> - The status of the
--   world generator job.
--   
--   <ul>
--   <li><i>Pending</i> The world generator job request is pending.</li>
--   <li><i>Running</i> The world generator job is running.</li>
--   <li><i>Completed</i> The world generator job completed.</li>
--   <li><i>Failed</i> The world generator job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>PartialFailed</i> Some worlds did not generate.</li>
--   <li><i>Canceled</i> The world generator job was cancelled.</li>
--   <li><i>Canceling</i> The world generator job is being cancelled.</li>
--   </ul>
--   
--   <a>$sel:arn:CreateWorldGenerationJobResponse'</a>,
--   <a>createWorldGenerationJobResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the world generator job.
--   
--   <a>$sel:createdAt:CreateWorldGenerationJobResponse'</a>,
--   <a>createWorldGenerationJobResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the world generator job was
--   created.
--   
--   <a>$sel:failureCode:CreateWorldGenerationJobResponse'</a>,
--   <a>createWorldGenerationJobResponse_failureCode</a> - The failure code
--   of the world generator job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
--   
--   <a>$sel:worldCount:CreateWorldGenerationJob'</a>,
--   <a>createWorldGenerationJobResponse_worldCount</a> - Information about
--   the world count.
--   
--   <a>$sel:template:CreateWorldGenerationJob'</a>,
--   <a>createWorldGenerationJobResponse_template</a> - The Amazon Resource
--   Name (arn) of the world template.
--   
--   <a>$sel:worldTags:CreateWorldGenerationJob'</a>,
--   <a>createWorldGenerationJobResponse_worldTags</a> - A map that
--   contains tag keys and tag values that are attached to the generated
--   worlds.
--   
--   <a>$sel:clientRequestToken:CreateWorldGenerationJob'</a>,
--   <a>createWorldGenerationJobResponse_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:tags:CreateWorldGenerationJob'</a>,
--   <a>createWorldGenerationJobResponse_tags</a> - A map that contains tag
--   keys and tag values that are attached to the world generator job.
--   
--   <a>$sel:httpStatus:CreateWorldGenerationJobResponse'</a>,
--   <a>createWorldGenerationJobResponse_httpStatus</a> - The response's
--   http status code.
newCreateWorldGenerationJobResponse :: Int -> CreateWorldGenerationJobResponse

-- | The status of the world generator job.
--   
--   <ul>
--   <li><i>Pending</i> The world generator job request is pending.</li>
--   <li><i>Running</i> The world generator job is running.</li>
--   <li><i>Completed</i> The world generator job completed.</li>
--   <li><i>Failed</i> The world generator job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>PartialFailed</i> Some worlds did not generate.</li>
--   <li><i>Canceled</i> The world generator job was cancelled.</li>
--   <li><i>Canceling</i> The world generator job is being cancelled.</li>
--   </ul>
createWorldGenerationJobResponse_status :: Lens' CreateWorldGenerationJobResponse (Maybe WorldGenerationJobStatus)

-- | The Amazon Resource Name (ARN) of the world generator job.
createWorldGenerationJobResponse_arn :: Lens' CreateWorldGenerationJobResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world generator
--   job was created.
createWorldGenerationJobResponse_createdAt :: Lens' CreateWorldGenerationJobResponse (Maybe UTCTime)

-- | The failure code of the world generator job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
createWorldGenerationJobResponse_failureCode :: Lens' CreateWorldGenerationJobResponse (Maybe WorldGenerationJobErrorCode)

-- | Information about the world count.
createWorldGenerationJobResponse_worldCount :: Lens' CreateWorldGenerationJobResponse (Maybe WorldCount)

-- | The Amazon Resource Name (arn) of the world template.
createWorldGenerationJobResponse_template :: Lens' CreateWorldGenerationJobResponse (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   generated worlds.
createWorldGenerationJobResponse_worldTags :: Lens' CreateWorldGenerationJobResponse (Maybe (HashMap Text Text))

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createWorldGenerationJobResponse_clientRequestToken :: Lens' CreateWorldGenerationJobResponse (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   world generator job.
createWorldGenerationJobResponse_tags :: Lens' CreateWorldGenerationJobResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createWorldGenerationJobResponse_httpStatus :: Lens' CreateWorldGenerationJobResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateWorldGenerationJob.CreateWorldGenerationJob
instance GHC.Show.Show Amazonka.RobOMaker.CreateWorldGenerationJob.CreateWorldGenerationJob
instance GHC.Read.Read Amazonka.RobOMaker.CreateWorldGenerationJob.CreateWorldGenerationJob
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateWorldGenerationJob.CreateWorldGenerationJob
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateWorldGenerationJob.CreateWorldGenerationJobResponse
instance GHC.Show.Show Amazonka.RobOMaker.CreateWorldGenerationJob.CreateWorldGenerationJobResponse
instance GHC.Read.Read Amazonka.RobOMaker.CreateWorldGenerationJob.CreateWorldGenerationJobResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateWorldGenerationJob.CreateWorldGenerationJobResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.CreateWorldGenerationJob.CreateWorldGenerationJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateWorldGenerationJob.CreateWorldGenerationJobResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.CreateWorldGenerationJob.CreateWorldGenerationJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateWorldGenerationJob.CreateWorldGenerationJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.CreateWorldGenerationJob.CreateWorldGenerationJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.CreateWorldGenerationJob.CreateWorldGenerationJob
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.CreateWorldGenerationJob.CreateWorldGenerationJob
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.CreateWorldGenerationJob.CreateWorldGenerationJob


-- | Creates a world export job.
module Amazonka.RobOMaker.CreateWorldExportJob

-- | <i>See:</i> <a>newCreateWorldExportJob</a> smart constructor.
data CreateWorldExportJob
CreateWorldExportJob' :: Maybe Text -> Maybe (HashMap Text Text) -> NonEmpty Text -> OutputLocation -> Text -> CreateWorldExportJob

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:CreateWorldExportJob'] :: CreateWorldExportJob -> Maybe Text

-- | A map that contains tag keys and tag values that are attached to the
--   world export job.
[$sel:tags:CreateWorldExportJob'] :: CreateWorldExportJob -> Maybe (HashMap Text Text)

-- | A list of Amazon Resource Names (arns) that correspond to worlds to
--   export.
[$sel:worlds:CreateWorldExportJob'] :: CreateWorldExportJob -> NonEmpty Text
[$sel:outputLocation:CreateWorldExportJob'] :: CreateWorldExportJob -> OutputLocation

-- | The IAM role that the world export process uses to access the Amazon
--   S3 bucket and put the export.
[$sel:iamRole:CreateWorldExportJob'] :: CreateWorldExportJob -> Text

-- | Create a value of <a>CreateWorldExportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:CreateWorldExportJob'</a>,
--   <a>createWorldExportJob_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:tags:CreateWorldExportJob'</a>,
--   <a>createWorldExportJob_tags</a> - A map that contains tag keys and
--   tag values that are attached to the world export job.
--   
--   <a>$sel:worlds:CreateWorldExportJob'</a>,
--   <a>createWorldExportJob_worlds</a> - A list of Amazon Resource Names
--   (arns) that correspond to worlds to export.
--   
--   <a>$sel:outputLocation:CreateWorldExportJob'</a>,
--   <a>createWorldExportJob_outputLocation</a> - Undocumented member.
--   
--   <a>$sel:iamRole:CreateWorldExportJob'</a>,
--   <a>createWorldExportJob_iamRole</a> - The IAM role that the world
--   export process uses to access the Amazon S3 bucket and put the export.
newCreateWorldExportJob :: NonEmpty Text -> OutputLocation -> Text -> CreateWorldExportJob

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createWorldExportJob_clientRequestToken :: Lens' CreateWorldExportJob (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   world export job.
createWorldExportJob_tags :: Lens' CreateWorldExportJob (Maybe (HashMap Text Text))

-- | A list of Amazon Resource Names (arns) that correspond to worlds to
--   export.
createWorldExportJob_worlds :: Lens' CreateWorldExportJob (NonEmpty Text)

-- | Undocumented member.
createWorldExportJob_outputLocation :: Lens' CreateWorldExportJob OutputLocation

-- | The IAM role that the world export process uses to access the Amazon
--   S3 bucket and put the export.
createWorldExportJob_iamRole :: Lens' CreateWorldExportJob Text

-- | <i>See:</i> <a>newCreateWorldExportJobResponse</a> smart constructor.
data CreateWorldExportJobResponse
CreateWorldExportJobResponse' :: Maybe WorldExportJobStatus -> Maybe Text -> Maybe POSIX -> Maybe WorldExportJobErrorCode -> Maybe OutputLocation -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateWorldExportJobResponse

-- | The status of the world export job.
--   
--   <ul>
--   <li><i>Pending</i> The world export job request is pending.</li>
--   <li><i>Running</i> The world export job is running.</li>
--   <li><i>Completed</i> The world export job completed.</li>
--   <li><i>Failed</i> The world export job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>Canceled</i> The world export job was cancelled.</li>
--   <li><i>Canceling</i> The world export job is being cancelled.</li>
--   </ul>
[$sel:status:CreateWorldExportJobResponse'] :: CreateWorldExportJobResponse -> Maybe WorldExportJobStatus

-- | The Amazon Resource Name (ARN) of the world export job.
[$sel:arn:CreateWorldExportJobResponse'] :: CreateWorldExportJobResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the world export job
--   was created.
[$sel:createdAt:CreateWorldExportJobResponse'] :: CreateWorldExportJobResponse -> Maybe POSIX

-- | The failure code of the world export job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   <li><i>AllWorldGenerationFailed</i> All of the worlds in the world
--   generation job failed. This can happen if your <tt>worldCount</tt> is
--   greater than 50 or less than 1.</li>
--   </ul>
--   
--   For more information about troubleshooting WorldForge, see
--   <a>Troubleshooting Simulation WorldForge</a>.
[$sel:failureCode:CreateWorldExportJobResponse'] :: CreateWorldExportJobResponse -> Maybe WorldExportJobErrorCode
[$sel:outputLocation:CreateWorldExportJobResponse'] :: CreateWorldExportJobResponse -> Maybe OutputLocation

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:CreateWorldExportJobResponse'] :: CreateWorldExportJobResponse -> Maybe Text

-- | The IAM role that the world export process uses to access the Amazon
--   S3 bucket and put the export.
[$sel:iamRole:CreateWorldExportJobResponse'] :: CreateWorldExportJobResponse -> Maybe Text

-- | A map that contains tag keys and tag values that are attached to the
--   world export job.
[$sel:tags:CreateWorldExportJobResponse'] :: CreateWorldExportJobResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:CreateWorldExportJobResponse'] :: CreateWorldExportJobResponse -> Int

-- | Create a value of <a>CreateWorldExportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateWorldExportJobResponse'</a>,
--   <a>createWorldExportJobResponse_status</a> - The status of the world
--   export job.
--   
--   <ul>
--   <li><i>Pending</i> The world export job request is pending.</li>
--   <li><i>Running</i> The world export job is running.</li>
--   <li><i>Completed</i> The world export job completed.</li>
--   <li><i>Failed</i> The world export job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>Canceled</i> The world export job was cancelled.</li>
--   <li><i>Canceling</i> The world export job is being cancelled.</li>
--   </ul>
--   
--   <a>$sel:arn:CreateWorldExportJobResponse'</a>,
--   <a>createWorldExportJobResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the world export job.
--   
--   <a>$sel:createdAt:CreateWorldExportJobResponse'</a>,
--   <a>createWorldExportJobResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the world export job was created.
--   
--   <a>$sel:failureCode:CreateWorldExportJobResponse'</a>,
--   <a>createWorldExportJobResponse_failureCode</a> - The failure code of
--   the world export job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   <li><i>AllWorldGenerationFailed</i> All of the worlds in the world
--   generation job failed. This can happen if your <tt>worldCount</tt> is
--   greater than 50 or less than 1.</li>
--   </ul>
--   
--   For more information about troubleshooting WorldForge, see
--   <a>Troubleshooting Simulation WorldForge</a>.
--   
--   <a>$sel:outputLocation:CreateWorldExportJob'</a>,
--   <a>createWorldExportJobResponse_outputLocation</a> - Undocumented
--   member.
--   
--   <a>$sel:clientRequestToken:CreateWorldExportJob'</a>,
--   <a>createWorldExportJobResponse_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:iamRole:CreateWorldExportJob'</a>,
--   <a>createWorldExportJobResponse_iamRole</a> - The IAM role that the
--   world export process uses to access the Amazon S3 bucket and put the
--   export.
--   
--   <a>$sel:tags:CreateWorldExportJob'</a>,
--   <a>createWorldExportJobResponse_tags</a> - A map that contains tag
--   keys and tag values that are attached to the world export job.
--   
--   <a>$sel:httpStatus:CreateWorldExportJobResponse'</a>,
--   <a>createWorldExportJobResponse_httpStatus</a> - The response's http
--   status code.
newCreateWorldExportJobResponse :: Int -> CreateWorldExportJobResponse

-- | The status of the world export job.
--   
--   <ul>
--   <li><i>Pending</i> The world export job request is pending.</li>
--   <li><i>Running</i> The world export job is running.</li>
--   <li><i>Completed</i> The world export job completed.</li>
--   <li><i>Failed</i> The world export job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>Canceled</i> The world export job was cancelled.</li>
--   <li><i>Canceling</i> The world export job is being cancelled.</li>
--   </ul>
createWorldExportJobResponse_status :: Lens' CreateWorldExportJobResponse (Maybe WorldExportJobStatus)

-- | The Amazon Resource Name (ARN) of the world export job.
createWorldExportJobResponse_arn :: Lens' CreateWorldExportJobResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world export job
--   was created.
createWorldExportJobResponse_createdAt :: Lens' CreateWorldExportJobResponse (Maybe UTCTime)

-- | The failure code of the world export job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   <li><i>AllWorldGenerationFailed</i> All of the worlds in the world
--   generation job failed. This can happen if your <tt>worldCount</tt> is
--   greater than 50 or less than 1.</li>
--   </ul>
--   
--   For more information about troubleshooting WorldForge, see
--   <a>Troubleshooting Simulation WorldForge</a>.
createWorldExportJobResponse_failureCode :: Lens' CreateWorldExportJobResponse (Maybe WorldExportJobErrorCode)

-- | Undocumented member.
createWorldExportJobResponse_outputLocation :: Lens' CreateWorldExportJobResponse (Maybe OutputLocation)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createWorldExportJobResponse_clientRequestToken :: Lens' CreateWorldExportJobResponse (Maybe Text)

-- | The IAM role that the world export process uses to access the Amazon
--   S3 bucket and put the export.
createWorldExportJobResponse_iamRole :: Lens' CreateWorldExportJobResponse (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   world export job.
createWorldExportJobResponse_tags :: Lens' CreateWorldExportJobResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createWorldExportJobResponse_httpStatus :: Lens' CreateWorldExportJobResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateWorldExportJob.CreateWorldExportJob
instance GHC.Show.Show Amazonka.RobOMaker.CreateWorldExportJob.CreateWorldExportJob
instance GHC.Read.Read Amazonka.RobOMaker.CreateWorldExportJob.CreateWorldExportJob
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateWorldExportJob.CreateWorldExportJob
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateWorldExportJob.CreateWorldExportJobResponse
instance GHC.Show.Show Amazonka.RobOMaker.CreateWorldExportJob.CreateWorldExportJobResponse
instance GHC.Read.Read Amazonka.RobOMaker.CreateWorldExportJob.CreateWorldExportJobResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateWorldExportJob.CreateWorldExportJobResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.CreateWorldExportJob.CreateWorldExportJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateWorldExportJob.CreateWorldExportJobResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.CreateWorldExportJob.CreateWorldExportJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateWorldExportJob.CreateWorldExportJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.CreateWorldExportJob.CreateWorldExportJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.CreateWorldExportJob.CreateWorldExportJob
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.CreateWorldExportJob.CreateWorldExportJob
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.CreateWorldExportJob.CreateWorldExportJob


-- | Creates a simulation job.
--   
--   After 90 days, simulation jobs expire and will be deleted. They will
--   no longer be accessible.
module Amazonka.RobOMaker.CreateSimulationJob

-- | <i>See:</i> <a>newCreateSimulationJob</a> smart constructor.
data CreateSimulationJob
CreateSimulationJob' :: Maybe FailureBehavior -> Maybe (NonEmpty RobotApplicationConfig) -> Maybe Compute -> Maybe (NonEmpty DataSourceConfig) -> Maybe VPCConfig -> Maybe OutputLocation -> Maybe (NonEmpty SimulationApplicationConfig) -> Maybe Text -> Maybe LoggingConfig -> Maybe (HashMap Text Text) -> Integer -> Text -> CreateSimulationJob

-- | The failure behavior the simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the instance running for its maximum
--   timeout duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
[$sel:failureBehavior:CreateSimulationJob'] :: CreateSimulationJob -> Maybe FailureBehavior

-- | The robot application to use in the simulation job.
[$sel:robotApplications:CreateSimulationJob'] :: CreateSimulationJob -> Maybe (NonEmpty RobotApplicationConfig)

-- | Compute information for the simulation job.
[$sel:compute:CreateSimulationJob'] :: CreateSimulationJob -> Maybe Compute

-- | Specify data sources to mount read-only files from S3 into your
--   simulation. These files are available under
--   <tt>/opt/robomaker/datasources/data_source_name</tt>.
--   
--   There is a limit of 100 files and a combined size of 25GB for all
--   <tt>DataSourceConfig</tt> objects.
[$sel:dataSources:CreateSimulationJob'] :: CreateSimulationJob -> Maybe (NonEmpty DataSourceConfig)

-- | If your simulation job accesses resources in a VPC, you provide this
--   parameter identifying the list of security group IDs and subnet IDs.
--   These must belong to the same VPC. You must provide at least one
--   security group and one subnet ID.
[$sel:vpcConfig:CreateSimulationJob'] :: CreateSimulationJob -> Maybe VPCConfig

-- | Location for output files generated by the simulation job.
[$sel:outputLocation:CreateSimulationJob'] :: CreateSimulationJob -> Maybe OutputLocation

-- | The simulation application to use in the simulation job.
[$sel:simulationApplications:CreateSimulationJob'] :: CreateSimulationJob -> Maybe (NonEmpty SimulationApplicationConfig)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:CreateSimulationJob'] :: CreateSimulationJob -> Maybe Text

-- | The logging configuration.
[$sel:loggingConfig:CreateSimulationJob'] :: CreateSimulationJob -> Maybe LoggingConfig

-- | A map that contains tag keys and tag values that are attached to the
--   simulation job.
[$sel:tags:CreateSimulationJob'] :: CreateSimulationJob -> Maybe (HashMap Text Text)

-- | The maximum simulation job duration in seconds (up to 14 days or
--   1,209,600 seconds. When <tt>maxJobDurationInSeconds</tt> is reached,
--   the simulation job will status will transition to <tt>Completed</tt>.
[$sel:maxJobDurationInSeconds:CreateSimulationJob'] :: CreateSimulationJob -> Integer

-- | The IAM role name that allows the simulation instance to call the AWS
--   APIs that are specified in its associated policies on your behalf.
--   This is how credentials are passed in to your simulation job.
[$sel:iamRole:CreateSimulationJob'] :: CreateSimulationJob -> Text

-- | Create a value of <a>CreateSimulationJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureBehavior:CreateSimulationJob'</a>,
--   <a>createSimulationJob_failureBehavior</a> - The failure behavior the
--   simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the instance running for its maximum
--   timeout duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
--   
--   <a>$sel:robotApplications:CreateSimulationJob'</a>,
--   <a>createSimulationJob_robotApplications</a> - The robot application
--   to use in the simulation job.
--   
--   <a>$sel:compute:CreateSimulationJob'</a>,
--   <a>createSimulationJob_compute</a> - Compute information for the
--   simulation job.
--   
--   <a>$sel:dataSources:CreateSimulationJob'</a>,
--   <a>createSimulationJob_dataSources</a> - Specify data sources to mount
--   read-only files from S3 into your simulation. These files are
--   available under <tt>/opt/robomaker/datasources/data_source_name</tt>.
--   
--   There is a limit of 100 files and a combined size of 25GB for all
--   <tt>DataSourceConfig</tt> objects.
--   
--   <a>$sel:vpcConfig:CreateSimulationJob'</a>,
--   <a>createSimulationJob_vpcConfig</a> - If your simulation job accesses
--   resources in a VPC, you provide this parameter identifying the list of
--   security group IDs and subnet IDs. These must belong to the same VPC.
--   You must provide at least one security group and one subnet ID.
--   
--   <a>$sel:outputLocation:CreateSimulationJob'</a>,
--   <a>createSimulationJob_outputLocation</a> - Location for output files
--   generated by the simulation job.
--   
--   <a>$sel:simulationApplications:CreateSimulationJob'</a>,
--   <a>createSimulationJob_simulationApplications</a> - The simulation
--   application to use in the simulation job.
--   
--   <a>$sel:clientRequestToken:CreateSimulationJob'</a>,
--   <a>createSimulationJob_clientRequestToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:loggingConfig:CreateSimulationJob'</a>,
--   <a>createSimulationJob_loggingConfig</a> - The logging configuration.
--   
--   <a>$sel:tags:CreateSimulationJob'</a>, <a>createSimulationJob_tags</a>
--   - A map that contains tag keys and tag values that are attached to the
--   simulation job.
--   
--   <a>$sel:maxJobDurationInSeconds:CreateSimulationJob'</a>,
--   <a>createSimulationJob_maxJobDurationInSeconds</a> - The maximum
--   simulation job duration in seconds (up to 14 days or 1,209,600
--   seconds. When <tt>maxJobDurationInSeconds</tt> is reached, the
--   simulation job will status will transition to <tt>Completed</tt>.
--   
--   <a>$sel:iamRole:CreateSimulationJob'</a>,
--   <a>createSimulationJob_iamRole</a> - The IAM role name that allows the
--   simulation instance to call the AWS APIs that are specified in its
--   associated policies on your behalf. This is how credentials are passed
--   in to your simulation job.
newCreateSimulationJob :: Integer -> Text -> CreateSimulationJob

-- | The failure behavior the simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the instance running for its maximum
--   timeout duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
createSimulationJob_failureBehavior :: Lens' CreateSimulationJob (Maybe FailureBehavior)

-- | The robot application to use in the simulation job.
createSimulationJob_robotApplications :: Lens' CreateSimulationJob (Maybe (NonEmpty RobotApplicationConfig))

-- | Compute information for the simulation job.
createSimulationJob_compute :: Lens' CreateSimulationJob (Maybe Compute)

-- | Specify data sources to mount read-only files from S3 into your
--   simulation. These files are available under
--   <tt>/opt/robomaker/datasources/data_source_name</tt>.
--   
--   There is a limit of 100 files and a combined size of 25GB for all
--   <tt>DataSourceConfig</tt> objects.
createSimulationJob_dataSources :: Lens' CreateSimulationJob (Maybe (NonEmpty DataSourceConfig))

-- | If your simulation job accesses resources in a VPC, you provide this
--   parameter identifying the list of security group IDs and subnet IDs.
--   These must belong to the same VPC. You must provide at least one
--   security group and one subnet ID.
createSimulationJob_vpcConfig :: Lens' CreateSimulationJob (Maybe VPCConfig)

-- | Location for output files generated by the simulation job.
createSimulationJob_outputLocation :: Lens' CreateSimulationJob (Maybe OutputLocation)

-- | The simulation application to use in the simulation job.
createSimulationJob_simulationApplications :: Lens' CreateSimulationJob (Maybe (NonEmpty SimulationApplicationConfig))

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createSimulationJob_clientRequestToken :: Lens' CreateSimulationJob (Maybe Text)

-- | The logging configuration.
createSimulationJob_loggingConfig :: Lens' CreateSimulationJob (Maybe LoggingConfig)

-- | A map that contains tag keys and tag values that are attached to the
--   simulation job.
createSimulationJob_tags :: Lens' CreateSimulationJob (Maybe (HashMap Text Text))

-- | The maximum simulation job duration in seconds (up to 14 days or
--   1,209,600 seconds. When <tt>maxJobDurationInSeconds</tt> is reached,
--   the simulation job will status will transition to <tt>Completed</tt>.
createSimulationJob_maxJobDurationInSeconds :: Lens' CreateSimulationJob Integer

-- | The IAM role name that allows the simulation instance to call the AWS
--   APIs that are specified in its associated policies on your behalf.
--   This is how credentials are passed in to your simulation job.
createSimulationJob_iamRole :: Lens' CreateSimulationJob Text

-- | <i>See:</i> <a>newCreateSimulationJobResponse</a> smart constructor.
data CreateSimulationJobResponse
CreateSimulationJobResponse' :: Maybe FailureBehavior -> Maybe SimulationJobStatus -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty RobotApplicationConfig) -> Maybe SimulationJobErrorCode -> Maybe ComputeResponse -> Maybe [DataSource] -> Maybe VPCConfigResponse -> Maybe OutputLocation -> Maybe (NonEmpty SimulationApplicationConfig) -> Maybe Integer -> Maybe Text -> Maybe POSIX -> Maybe LoggingConfig -> Maybe Text -> Maybe Integer -> Maybe (HashMap Text Text) -> Int -> CreateSimulationJobResponse

-- | the failure behavior for the simulation job.
[$sel:failureBehavior:CreateSimulationJobResponse'] :: CreateSimulationJobResponse -> Maybe FailureBehavior

-- | The status of the simulation job.
[$sel:status:CreateSimulationJobResponse'] :: CreateSimulationJobResponse -> Maybe SimulationJobStatus

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last updated.
[$sel:lastUpdatedAt:CreateSimulationJobResponse'] :: CreateSimulationJobResponse -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the simulation job.
[$sel:arn:CreateSimulationJobResponse'] :: CreateSimulationJobResponse -> Maybe Text

-- | The robot application used by the simulation job.
[$sel:robotApplications:CreateSimulationJobResponse'] :: CreateSimulationJobResponse -> Maybe (NonEmpty RobotApplicationConfig)

-- | The failure code of the simulation job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>RobotApplicationCrash</i> Robot application exited
--   abnormally.</li>
--   <li><i>SimulationApplicationCrash</i> Simulation application exited
--   abnormally.</li>
--   <li><i>BadPermissionsRobotApplication</i> Robot application bundle
--   could not be downloaded.</li>
--   <li><i>BadPermissionsSimulationApplication</i> Simulation application
--   bundle could not be downloaded.</li>
--   <li><i>BadPermissionsS3Output</i> Unable to publish outputs to
--   customer-provided S3 bucket.</li>
--   <li><i>BadPermissionsCloudwatchLogs</i> Unable to publish logs to
--   customer-provided CloudWatch Logs resource.</li>
--   <li><i>SubnetIpLimitExceeded</i> Subnet IP limit exceeded.</li>
--   <li><i>ENILimitExceeded</i> ENI limit exceeded.</li>
--   <li><i>BadPermissionsUserCredentials</i> Unable to use the Role
--   provided.</li>
--   <li><i>InvalidBundleRobotApplication</i> Robot bundle cannot be
--   extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>InvalidBundleSimulationApplication</i> Simulation bundle cannot
--   be extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>RobotApplicationVersionMismatchedEtag</i> Etag for
--   RobotApplication does not match value during version creation.</li>
--   <li><i>SimulationApplicationVersionMismatchedEtag</i> Etag for
--   SimulationApplication does not match value during version
--   creation.</li>
--   </ul>
[$sel:failureCode:CreateSimulationJobResponse'] :: CreateSimulationJobResponse -> Maybe SimulationJobErrorCode

-- | Compute information for the simulation job.
[$sel:compute:CreateSimulationJobResponse'] :: CreateSimulationJobResponse -> Maybe ComputeResponse

-- | The data sources for the simulation job.
[$sel:dataSources:CreateSimulationJobResponse'] :: CreateSimulationJobResponse -> Maybe [DataSource]

-- | Information about the vpc configuration.
[$sel:vpcConfig:CreateSimulationJobResponse'] :: CreateSimulationJobResponse -> Maybe VPCConfigResponse

-- | Simulation job output files location.
[$sel:outputLocation:CreateSimulationJobResponse'] :: CreateSimulationJobResponse -> Maybe OutputLocation

-- | The simulation application used by the simulation job.
[$sel:simulationApplications:CreateSimulationJobResponse'] :: CreateSimulationJobResponse -> Maybe (NonEmpty SimulationApplicationConfig)

-- | The simulation job execution duration in milliseconds.
[$sel:simulationTimeMillis:CreateSimulationJobResponse'] :: CreateSimulationJobResponse -> Maybe Integer

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:CreateSimulationJobResponse'] :: CreateSimulationJobResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last started.
[$sel:lastStartedAt:CreateSimulationJobResponse'] :: CreateSimulationJobResponse -> Maybe POSIX

-- | The logging configuration.
[$sel:loggingConfig:CreateSimulationJobResponse'] :: CreateSimulationJobResponse -> Maybe LoggingConfig

-- | The IAM role that allows the simulation job to call the AWS APIs that
--   are specified in its associated policies on your behalf.
[$sel:iamRole:CreateSimulationJobResponse'] :: CreateSimulationJobResponse -> Maybe Text

-- | The maximum simulation job duration in seconds.
[$sel:maxJobDurationInSeconds:CreateSimulationJobResponse'] :: CreateSimulationJobResponse -> Maybe Integer

-- | The list of all tags added to the simulation job.
[$sel:tags:CreateSimulationJobResponse'] :: CreateSimulationJobResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:CreateSimulationJobResponse'] :: CreateSimulationJobResponse -> Int

-- | Create a value of <a>CreateSimulationJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureBehavior:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_failureBehavior</a> - the failure
--   behavior for the simulation job.
--   
--   <a>$sel:status:CreateSimulationJobResponse'</a>,
--   <a>createSimulationJobResponse_status</a> - The status of the
--   simulation job.
--   
--   <a>$sel:lastUpdatedAt:CreateSimulationJobResponse'</a>,
--   <a>createSimulationJobResponse_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the simulation job was last
--   updated.
--   
--   <a>$sel:arn:CreateSimulationJobResponse'</a>,
--   <a>createSimulationJobResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the simulation job.
--   
--   <a>$sel:robotApplications:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_robotApplications</a> - The robot
--   application used by the simulation job.
--   
--   <a>$sel:failureCode:CreateSimulationJobResponse'</a>,
--   <a>createSimulationJobResponse_failureCode</a> - The failure code of
--   the simulation job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>RobotApplicationCrash</i> Robot application exited
--   abnormally.</li>
--   <li><i>SimulationApplicationCrash</i> Simulation application exited
--   abnormally.</li>
--   <li><i>BadPermissionsRobotApplication</i> Robot application bundle
--   could not be downloaded.</li>
--   <li><i>BadPermissionsSimulationApplication</i> Simulation application
--   bundle could not be downloaded.</li>
--   <li><i>BadPermissionsS3Output</i> Unable to publish outputs to
--   customer-provided S3 bucket.</li>
--   <li><i>BadPermissionsCloudwatchLogs</i> Unable to publish logs to
--   customer-provided CloudWatch Logs resource.</li>
--   <li><i>SubnetIpLimitExceeded</i> Subnet IP limit exceeded.</li>
--   <li><i>ENILimitExceeded</i> ENI limit exceeded.</li>
--   <li><i>BadPermissionsUserCredentials</i> Unable to use the Role
--   provided.</li>
--   <li><i>InvalidBundleRobotApplication</i> Robot bundle cannot be
--   extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>InvalidBundleSimulationApplication</i> Simulation bundle cannot
--   be extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>RobotApplicationVersionMismatchedEtag</i> Etag for
--   RobotApplication does not match value during version creation.</li>
--   <li><i>SimulationApplicationVersionMismatchedEtag</i> Etag for
--   SimulationApplication does not match value during version
--   creation.</li>
--   </ul>
--   
--   <a>$sel:compute:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_compute</a> - Compute information for
--   the simulation job.
--   
--   <a>$sel:dataSources:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_dataSources</a> - The data sources for
--   the simulation job.
--   
--   <a>$sel:vpcConfig:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_vpcConfig</a> - Information about the
--   vpc configuration.
--   
--   <a>$sel:outputLocation:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_outputLocation</a> - Simulation job
--   output files location.
--   
--   <a>$sel:simulationApplications:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_simulationApplications</a> - The
--   simulation application used by the simulation job.
--   
--   <a>$sel:simulationTimeMillis:CreateSimulationJobResponse'</a>,
--   <a>createSimulationJobResponse_simulationTimeMillis</a> - The
--   simulation job execution duration in milliseconds.
--   
--   <a>$sel:clientRequestToken:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:lastStartedAt:CreateSimulationJobResponse'</a>,
--   <a>createSimulationJobResponse_lastStartedAt</a> - The time, in
--   milliseconds since the epoch, when the simulation job was last
--   started.
--   
--   <a>$sel:loggingConfig:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_loggingConfig</a> - The logging
--   configuration.
--   
--   <a>$sel:iamRole:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_iamRole</a> - The IAM role that allows
--   the simulation job to call the AWS APIs that are specified in its
--   associated policies on your behalf.
--   
--   <a>$sel:maxJobDurationInSeconds:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_maxJobDurationInSeconds</a> - The
--   maximum simulation job duration in seconds.
--   
--   <a>$sel:tags:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_tags</a> - The list of all tags added
--   to the simulation job.
--   
--   <a>$sel:httpStatus:CreateSimulationJobResponse'</a>,
--   <a>createSimulationJobResponse_httpStatus</a> - The response's http
--   status code.
newCreateSimulationJobResponse :: Int -> CreateSimulationJobResponse

-- | the failure behavior for the simulation job.
createSimulationJobResponse_failureBehavior :: Lens' CreateSimulationJobResponse (Maybe FailureBehavior)

-- | The status of the simulation job.
createSimulationJobResponse_status :: Lens' CreateSimulationJobResponse (Maybe SimulationJobStatus)

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last updated.
createSimulationJobResponse_lastUpdatedAt :: Lens' CreateSimulationJobResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the simulation job.
createSimulationJobResponse_arn :: Lens' CreateSimulationJobResponse (Maybe Text)

-- | The robot application used by the simulation job.
createSimulationJobResponse_robotApplications :: Lens' CreateSimulationJobResponse (Maybe (NonEmpty RobotApplicationConfig))

-- | The failure code of the simulation job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>RobotApplicationCrash</i> Robot application exited
--   abnormally.</li>
--   <li><i>SimulationApplicationCrash</i> Simulation application exited
--   abnormally.</li>
--   <li><i>BadPermissionsRobotApplication</i> Robot application bundle
--   could not be downloaded.</li>
--   <li><i>BadPermissionsSimulationApplication</i> Simulation application
--   bundle could not be downloaded.</li>
--   <li><i>BadPermissionsS3Output</i> Unable to publish outputs to
--   customer-provided S3 bucket.</li>
--   <li><i>BadPermissionsCloudwatchLogs</i> Unable to publish logs to
--   customer-provided CloudWatch Logs resource.</li>
--   <li><i>SubnetIpLimitExceeded</i> Subnet IP limit exceeded.</li>
--   <li><i>ENILimitExceeded</i> ENI limit exceeded.</li>
--   <li><i>BadPermissionsUserCredentials</i> Unable to use the Role
--   provided.</li>
--   <li><i>InvalidBundleRobotApplication</i> Robot bundle cannot be
--   extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>InvalidBundleSimulationApplication</i> Simulation bundle cannot
--   be extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>RobotApplicationVersionMismatchedEtag</i> Etag for
--   RobotApplication does not match value during version creation.</li>
--   <li><i>SimulationApplicationVersionMismatchedEtag</i> Etag for
--   SimulationApplication does not match value during version
--   creation.</li>
--   </ul>
createSimulationJobResponse_failureCode :: Lens' CreateSimulationJobResponse (Maybe SimulationJobErrorCode)

-- | Compute information for the simulation job.
createSimulationJobResponse_compute :: Lens' CreateSimulationJobResponse (Maybe ComputeResponse)

-- | The data sources for the simulation job.
createSimulationJobResponse_dataSources :: Lens' CreateSimulationJobResponse (Maybe [DataSource])

-- | Information about the vpc configuration.
createSimulationJobResponse_vpcConfig :: Lens' CreateSimulationJobResponse (Maybe VPCConfigResponse)

-- | Simulation job output files location.
createSimulationJobResponse_outputLocation :: Lens' CreateSimulationJobResponse (Maybe OutputLocation)

-- | The simulation application used by the simulation job.
createSimulationJobResponse_simulationApplications :: Lens' CreateSimulationJobResponse (Maybe (NonEmpty SimulationApplicationConfig))

-- | The simulation job execution duration in milliseconds.
createSimulationJobResponse_simulationTimeMillis :: Lens' CreateSimulationJobResponse (Maybe Integer)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createSimulationJobResponse_clientRequestToken :: Lens' CreateSimulationJobResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last started.
createSimulationJobResponse_lastStartedAt :: Lens' CreateSimulationJobResponse (Maybe UTCTime)

-- | The logging configuration.
createSimulationJobResponse_loggingConfig :: Lens' CreateSimulationJobResponse (Maybe LoggingConfig)

-- | The IAM role that allows the simulation job to call the AWS APIs that
--   are specified in its associated policies on your behalf.
createSimulationJobResponse_iamRole :: Lens' CreateSimulationJobResponse (Maybe Text)

-- | The maximum simulation job duration in seconds.
createSimulationJobResponse_maxJobDurationInSeconds :: Lens' CreateSimulationJobResponse (Maybe Integer)

-- | The list of all tags added to the simulation job.
createSimulationJobResponse_tags :: Lens' CreateSimulationJobResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createSimulationJobResponse_httpStatus :: Lens' CreateSimulationJobResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateSimulationJob.CreateSimulationJob
instance GHC.Show.Show Amazonka.RobOMaker.CreateSimulationJob.CreateSimulationJob
instance GHC.Read.Read Amazonka.RobOMaker.CreateSimulationJob.CreateSimulationJob
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateSimulationJob.CreateSimulationJob
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateSimulationJob.CreateSimulationJobResponse
instance GHC.Show.Show Amazonka.RobOMaker.CreateSimulationJob.CreateSimulationJobResponse
instance GHC.Read.Read Amazonka.RobOMaker.CreateSimulationJob.CreateSimulationJobResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateSimulationJob.CreateSimulationJobResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.CreateSimulationJob.CreateSimulationJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateSimulationJob.CreateSimulationJobResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.CreateSimulationJob.CreateSimulationJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateSimulationJob.CreateSimulationJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.CreateSimulationJob.CreateSimulationJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.CreateSimulationJob.CreateSimulationJob
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.CreateSimulationJob.CreateSimulationJob
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.CreateSimulationJob.CreateSimulationJob


-- | Creates a simulation application with a specific revision id.
module Amazonka.RobOMaker.CreateSimulationApplicationVersion

-- | <i>See:</i> <a>newCreateSimulationApplicationVersion</a> smart
--   constructor.
data CreateSimulationApplicationVersion
CreateSimulationApplicationVersion' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Text -> CreateSimulationApplicationVersion

-- | The current revision id for the simulation application. If you provide
--   a value and it matches the latest revision ID, a new version will be
--   created.
[$sel:currentRevisionId:CreateSimulationApplicationVersion'] :: CreateSimulationApplicationVersion -> Maybe Text

-- | The Amazon S3 eTag identifier for the zip file bundle that you use to
--   create the simulation application.
[$sel:s3Etags:CreateSimulationApplicationVersion'] :: CreateSimulationApplicationVersion -> Maybe [Text]

-- | The SHA256 digest used to identify the Docker image URI used to
--   created the simulation application.
[$sel:imageDigest:CreateSimulationApplicationVersion'] :: CreateSimulationApplicationVersion -> Maybe Text

-- | The application information for the simulation application.
[$sel:application:CreateSimulationApplicationVersion'] :: CreateSimulationApplicationVersion -> Text

-- | Create a value of <a>CreateSimulationApplicationVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currentRevisionId:CreateSimulationApplicationVersion'</a>,
--   <a>createSimulationApplicationVersion_currentRevisionId</a> - The
--   current revision id for the simulation application. If you provide a
--   value and it matches the latest revision ID, a new version will be
--   created.
--   
--   <a>$sel:s3Etags:CreateSimulationApplicationVersion'</a>,
--   <a>createSimulationApplicationVersion_s3Etags</a> - The Amazon S3 eTag
--   identifier for the zip file bundle that you use to create the
--   simulation application.
--   
--   <a>$sel:imageDigest:CreateSimulationApplicationVersion'</a>,
--   <a>createSimulationApplicationVersion_imageDigest</a> - The SHA256
--   digest used to identify the Docker image URI used to created the
--   simulation application.
--   
--   <a>$sel:application:CreateSimulationApplicationVersion'</a>,
--   <a>createSimulationApplicationVersion_application</a> - The
--   application information for the simulation application.
newCreateSimulationApplicationVersion :: Text -> CreateSimulationApplicationVersion

-- | The current revision id for the simulation application. If you provide
--   a value and it matches the latest revision ID, a new version will be
--   created.
createSimulationApplicationVersion_currentRevisionId :: Lens' CreateSimulationApplicationVersion (Maybe Text)

-- | The Amazon S3 eTag identifier for the zip file bundle that you use to
--   create the simulation application.
createSimulationApplicationVersion_s3Etags :: Lens' CreateSimulationApplicationVersion (Maybe [Text])

-- | The SHA256 digest used to identify the Docker image URI used to
--   created the simulation application.
createSimulationApplicationVersion_imageDigest :: Lens' CreateSimulationApplicationVersion (Maybe Text)

-- | The application information for the simulation application.
createSimulationApplicationVersion_application :: Lens' CreateSimulationApplicationVersion Text

-- | <i>See:</i> <a>newCreateSimulationApplicationVersionResponse</a> smart
--   constructor.
data CreateSimulationApplicationVersionResponse
CreateSimulationApplicationVersionResponse' :: Maybe RenderingEngine -> Maybe POSIX -> Maybe Text -> Maybe Environment -> Maybe [Source] -> Maybe Text -> Maybe Text -> Maybe SimulationSoftwareSuite -> Maybe RobotSoftwareSuite -> Maybe Text -> Int -> CreateSimulationApplicationVersionResponse

-- | The rendering engine for the simulation application.
[$sel:renderingEngine:CreateSimulationApplicationVersionResponse'] :: CreateSimulationApplicationVersionResponse -> Maybe RenderingEngine

-- | The time, in milliseconds since the epoch, when the simulation
--   application was last updated.
[$sel:lastUpdatedAt:CreateSimulationApplicationVersionResponse'] :: CreateSimulationApplicationVersionResponse -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the simulation application.
[$sel:arn:CreateSimulationApplicationVersionResponse'] :: CreateSimulationApplicationVersionResponse -> Maybe Text

-- | The object that contains the Docker image URI used to create the
--   simulation application.
[$sel:environment:CreateSimulationApplicationVersionResponse'] :: CreateSimulationApplicationVersionResponse -> Maybe Environment

-- | The sources of the simulation application.
[$sel:sources:CreateSimulationApplicationVersionResponse'] :: CreateSimulationApplicationVersionResponse -> Maybe [Source]

-- | The name of the simulation application.
[$sel:name:CreateSimulationApplicationVersionResponse'] :: CreateSimulationApplicationVersionResponse -> Maybe Text

-- | The version of the simulation application.
[$sel:version:CreateSimulationApplicationVersionResponse'] :: CreateSimulationApplicationVersionResponse -> Maybe Text

-- | The simulation software suite used by the simulation application.
[$sel:simulationSoftwareSuite:CreateSimulationApplicationVersionResponse'] :: CreateSimulationApplicationVersionResponse -> Maybe SimulationSoftwareSuite

-- | Information about the robot software suite (ROS distribution).
[$sel:robotSoftwareSuite:CreateSimulationApplicationVersionResponse'] :: CreateSimulationApplicationVersionResponse -> Maybe RobotSoftwareSuite

-- | The revision ID of the simulation application.
[$sel:revisionId:CreateSimulationApplicationVersionResponse'] :: CreateSimulationApplicationVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateSimulationApplicationVersionResponse'] :: CreateSimulationApplicationVersionResponse -> Int

-- | Create a value of <a>CreateSimulationApplicationVersionResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:renderingEngine:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_renderingEngine</a> -
--   The rendering engine for the simulation application.
--   
--   <a>$sel:lastUpdatedAt:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_lastUpdatedAt</a> - The
--   time, in milliseconds since the epoch, when the simulation application
--   was last updated.
--   
--   <a>$sel:arn:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_arn</a> - The Amazon
--   Resource Name (ARN) of the simulation application.
--   
--   <a>$sel:environment:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_environment</a> - The
--   object that contains the Docker image URI used to create the
--   simulation application.
--   
--   <a>$sel:sources:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_sources</a> - The
--   sources of the simulation application.
--   
--   <a>$sel:name:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_name</a> - The name of
--   the simulation application.
--   
--   <a>$sel:version:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_version</a> - The
--   version of the simulation application.
--   
--   
--   <a>$sel:simulationSoftwareSuite:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_simulationSoftwareSuite</a>
--   - The simulation software suite used by the simulation application.
--   
--   
--   <a>$sel:robotSoftwareSuite:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_robotSoftwareSuite</a> -
--   Information about the robot software suite (ROS distribution).
--   
--   <a>$sel:revisionId:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_revisionId</a> - The
--   revision ID of the simulation application.
--   
--   <a>$sel:httpStatus:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_httpStatus</a> - The
--   response's http status code.
newCreateSimulationApplicationVersionResponse :: Int -> CreateSimulationApplicationVersionResponse

-- | The rendering engine for the simulation application.
createSimulationApplicationVersionResponse_renderingEngine :: Lens' CreateSimulationApplicationVersionResponse (Maybe RenderingEngine)

-- | The time, in milliseconds since the epoch, when the simulation
--   application was last updated.
createSimulationApplicationVersionResponse_lastUpdatedAt :: Lens' CreateSimulationApplicationVersionResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the simulation application.
createSimulationApplicationVersionResponse_arn :: Lens' CreateSimulationApplicationVersionResponse (Maybe Text)

-- | The object that contains the Docker image URI used to create the
--   simulation application.
createSimulationApplicationVersionResponse_environment :: Lens' CreateSimulationApplicationVersionResponse (Maybe Environment)

-- | The sources of the simulation application.
createSimulationApplicationVersionResponse_sources :: Lens' CreateSimulationApplicationVersionResponse (Maybe [Source])

-- | The name of the simulation application.
createSimulationApplicationVersionResponse_name :: Lens' CreateSimulationApplicationVersionResponse (Maybe Text)

-- | The version of the simulation application.
createSimulationApplicationVersionResponse_version :: Lens' CreateSimulationApplicationVersionResponse (Maybe Text)

-- | The simulation software suite used by the simulation application.
createSimulationApplicationVersionResponse_simulationSoftwareSuite :: Lens' CreateSimulationApplicationVersionResponse (Maybe SimulationSoftwareSuite)

-- | Information about the robot software suite (ROS distribution).
createSimulationApplicationVersionResponse_robotSoftwareSuite :: Lens' CreateSimulationApplicationVersionResponse (Maybe RobotSoftwareSuite)

-- | The revision ID of the simulation application.
createSimulationApplicationVersionResponse_revisionId :: Lens' CreateSimulationApplicationVersionResponse (Maybe Text)

-- | The response's http status code.
createSimulationApplicationVersionResponse_httpStatus :: Lens' CreateSimulationApplicationVersionResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateSimulationApplicationVersion.CreateSimulationApplicationVersion
instance GHC.Show.Show Amazonka.RobOMaker.CreateSimulationApplicationVersion.CreateSimulationApplicationVersion
instance GHC.Read.Read Amazonka.RobOMaker.CreateSimulationApplicationVersion.CreateSimulationApplicationVersion
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateSimulationApplicationVersion.CreateSimulationApplicationVersion
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateSimulationApplicationVersion.CreateSimulationApplicationVersionResponse
instance GHC.Show.Show Amazonka.RobOMaker.CreateSimulationApplicationVersion.CreateSimulationApplicationVersionResponse
instance GHC.Read.Read Amazonka.RobOMaker.CreateSimulationApplicationVersion.CreateSimulationApplicationVersionResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateSimulationApplicationVersion.CreateSimulationApplicationVersionResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.CreateSimulationApplicationVersion.CreateSimulationApplicationVersion
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateSimulationApplicationVersion.CreateSimulationApplicationVersionResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.CreateSimulationApplicationVersion.CreateSimulationApplicationVersion
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateSimulationApplicationVersion.CreateSimulationApplicationVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.CreateSimulationApplicationVersion.CreateSimulationApplicationVersion
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.CreateSimulationApplicationVersion.CreateSimulationApplicationVersion
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.CreateSimulationApplicationVersion.CreateSimulationApplicationVersion
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.CreateSimulationApplicationVersion.CreateSimulationApplicationVersion


-- | Creates a simulation application.
module Amazonka.RobOMaker.CreateSimulationApplication

-- | <i>See:</i> <a>newCreateSimulationApplication</a> smart constructor.
data CreateSimulationApplication
CreateSimulationApplication' :: Maybe RenderingEngine -> Maybe Environment -> Maybe [SourceConfig] -> Maybe (HashMap Text Text) -> Text -> SimulationSoftwareSuite -> RobotSoftwareSuite -> CreateSimulationApplication

-- | The rendering engine for the simulation application.
[$sel:renderingEngine:CreateSimulationApplication'] :: CreateSimulationApplication -> Maybe RenderingEngine

-- | The object that contains the Docker image URI used to create your
--   simulation application.
[$sel:environment:CreateSimulationApplication'] :: CreateSimulationApplication -> Maybe Environment

-- | The sources of the simulation application.
[$sel:sources:CreateSimulationApplication'] :: CreateSimulationApplication -> Maybe [SourceConfig]

-- | A map that contains tag keys and tag values that are attached to the
--   simulation application.
[$sel:tags:CreateSimulationApplication'] :: CreateSimulationApplication -> Maybe (HashMap Text Text)

-- | The name of the simulation application.
[$sel:name:CreateSimulationApplication'] :: CreateSimulationApplication -> Text

-- | The simulation software suite used by the simulation application.
[$sel:simulationSoftwareSuite:CreateSimulationApplication'] :: CreateSimulationApplication -> SimulationSoftwareSuite

-- | The robot software suite (ROS distribution) used by the simulation
--   application.
[$sel:robotSoftwareSuite:CreateSimulationApplication'] :: CreateSimulationApplication -> RobotSoftwareSuite

-- | Create a value of <a>CreateSimulationApplication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:renderingEngine:CreateSimulationApplication'</a>,
--   <a>createSimulationApplication_renderingEngine</a> - The rendering
--   engine for the simulation application.
--   
--   <a>$sel:environment:CreateSimulationApplication'</a>,
--   <a>createSimulationApplication_environment</a> - The object that
--   contains the Docker image URI used to create your simulation
--   application.
--   
--   <a>$sel:sources:CreateSimulationApplication'</a>,
--   <a>createSimulationApplication_sources</a> - The sources of the
--   simulation application.
--   
--   <a>$sel:tags:CreateSimulationApplication'</a>,
--   <a>createSimulationApplication_tags</a> - A map that contains tag keys
--   and tag values that are attached to the simulation application.
--   
--   <a>$sel:name:CreateSimulationApplication'</a>,
--   <a>createSimulationApplication_name</a> - The name of the simulation
--   application.
--   
--   <a>$sel:simulationSoftwareSuite:CreateSimulationApplication'</a>,
--   <a>createSimulationApplication_simulationSoftwareSuite</a> - The
--   simulation software suite used by the simulation application.
--   
--   <a>$sel:robotSoftwareSuite:CreateSimulationApplication'</a>,
--   <a>createSimulationApplication_robotSoftwareSuite</a> - The robot
--   software suite (ROS distribution) used by the simulation application.
newCreateSimulationApplication :: Text -> SimulationSoftwareSuite -> RobotSoftwareSuite -> CreateSimulationApplication

-- | The rendering engine for the simulation application.
createSimulationApplication_renderingEngine :: Lens' CreateSimulationApplication (Maybe RenderingEngine)

-- | The object that contains the Docker image URI used to create your
--   simulation application.
createSimulationApplication_environment :: Lens' CreateSimulationApplication (Maybe Environment)

-- | The sources of the simulation application.
createSimulationApplication_sources :: Lens' CreateSimulationApplication (Maybe [SourceConfig])

-- | A map that contains tag keys and tag values that are attached to the
--   simulation application.
createSimulationApplication_tags :: Lens' CreateSimulationApplication (Maybe (HashMap Text Text))

-- | The name of the simulation application.
createSimulationApplication_name :: Lens' CreateSimulationApplication Text

-- | The simulation software suite used by the simulation application.
createSimulationApplication_simulationSoftwareSuite :: Lens' CreateSimulationApplication SimulationSoftwareSuite

-- | The robot software suite (ROS distribution) used by the simulation
--   application.
createSimulationApplication_robotSoftwareSuite :: Lens' CreateSimulationApplication RobotSoftwareSuite

-- | <i>See:</i> <a>newCreateSimulationApplicationResponse</a> smart
--   constructor.
data CreateSimulationApplicationResponse
CreateSimulationApplicationResponse' :: Maybe RenderingEngine -> Maybe POSIX -> Maybe Text -> Maybe Environment -> Maybe [Source] -> Maybe Text -> Maybe Text -> Maybe SimulationSoftwareSuite -> Maybe RobotSoftwareSuite -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateSimulationApplicationResponse

-- | The rendering engine for the simulation application.
[$sel:renderingEngine:CreateSimulationApplicationResponse'] :: CreateSimulationApplicationResponse -> Maybe RenderingEngine

-- | The time, in milliseconds since the epoch, when the simulation
--   application was last updated.
[$sel:lastUpdatedAt:CreateSimulationApplicationResponse'] :: CreateSimulationApplicationResponse -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the simulation application.
[$sel:arn:CreateSimulationApplicationResponse'] :: CreateSimulationApplicationResponse -> Maybe Text

-- | The object that contains the Docker image URI that you used to create
--   your simulation application.
[$sel:environment:CreateSimulationApplicationResponse'] :: CreateSimulationApplicationResponse -> Maybe Environment

-- | The sources of the simulation application.
[$sel:sources:CreateSimulationApplicationResponse'] :: CreateSimulationApplicationResponse -> Maybe [Source]

-- | The name of the simulation application.
[$sel:name:CreateSimulationApplicationResponse'] :: CreateSimulationApplicationResponse -> Maybe Text

-- | The version of the simulation application.
[$sel:version:CreateSimulationApplicationResponse'] :: CreateSimulationApplicationResponse -> Maybe Text

-- | The simulation software suite used by the simulation application.
[$sel:simulationSoftwareSuite:CreateSimulationApplicationResponse'] :: CreateSimulationApplicationResponse -> Maybe SimulationSoftwareSuite

-- | Information about the robot software suite (ROS distribution).
[$sel:robotSoftwareSuite:CreateSimulationApplicationResponse'] :: CreateSimulationApplicationResponse -> Maybe RobotSoftwareSuite

-- | The revision id of the simulation application.
[$sel:revisionId:CreateSimulationApplicationResponse'] :: CreateSimulationApplicationResponse -> Maybe Text

-- | The list of all tags added to the simulation application.
[$sel:tags:CreateSimulationApplicationResponse'] :: CreateSimulationApplicationResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:CreateSimulationApplicationResponse'] :: CreateSimulationApplicationResponse -> Int

-- | Create a value of <a>CreateSimulationApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:renderingEngine:CreateSimulationApplication'</a>,
--   <a>createSimulationApplicationResponse_renderingEngine</a> - The
--   rendering engine for the simulation application.
--   
--   <a>$sel:lastUpdatedAt:CreateSimulationApplicationResponse'</a>,
--   <a>createSimulationApplicationResponse_lastUpdatedAt</a> - The time,
--   in milliseconds since the epoch, when the simulation application was
--   last updated.
--   
--   <a>$sel:arn:CreateSimulationApplicationResponse'</a>,
--   <a>createSimulationApplicationResponse_arn</a> - The Amazon Resource
--   Name (ARN) of the simulation application.
--   
--   <a>$sel:environment:CreateSimulationApplication'</a>,
--   <a>createSimulationApplicationResponse_environment</a> - The object
--   that contains the Docker image URI that you used to create your
--   simulation application.
--   
--   <a>$sel:sources:CreateSimulationApplication'</a>,
--   <a>createSimulationApplicationResponse_sources</a> - The sources of
--   the simulation application.
--   
--   <a>$sel:name:CreateSimulationApplication'</a>,
--   <a>createSimulationApplicationResponse_name</a> - The name of the
--   simulation application.
--   
--   <a>$sel:version:CreateSimulationApplicationResponse'</a>,
--   <a>createSimulationApplicationResponse_version</a> - The version of
--   the simulation application.
--   
--   <a>$sel:simulationSoftwareSuite:CreateSimulationApplication'</a>,
--   <a>createSimulationApplicationResponse_simulationSoftwareSuite</a> -
--   The simulation software suite used by the simulation application.
--   
--   <a>$sel:robotSoftwareSuite:CreateSimulationApplication'</a>,
--   <a>createSimulationApplicationResponse_robotSoftwareSuite</a> -
--   Information about the robot software suite (ROS distribution).
--   
--   <a>$sel:revisionId:CreateSimulationApplicationResponse'</a>,
--   <a>createSimulationApplicationResponse_revisionId</a> - The revision
--   id of the simulation application.
--   
--   <a>$sel:tags:CreateSimulationApplication'</a>,
--   <a>createSimulationApplicationResponse_tags</a> - The list of all tags
--   added to the simulation application.
--   
--   <a>$sel:httpStatus:CreateSimulationApplicationResponse'</a>,
--   <a>createSimulationApplicationResponse_httpStatus</a> - The response's
--   http status code.
newCreateSimulationApplicationResponse :: Int -> CreateSimulationApplicationResponse

-- | The rendering engine for the simulation application.
createSimulationApplicationResponse_renderingEngine :: Lens' CreateSimulationApplicationResponse (Maybe RenderingEngine)

-- | The time, in milliseconds since the epoch, when the simulation
--   application was last updated.
createSimulationApplicationResponse_lastUpdatedAt :: Lens' CreateSimulationApplicationResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the simulation application.
createSimulationApplicationResponse_arn :: Lens' CreateSimulationApplicationResponse (Maybe Text)

-- | The object that contains the Docker image URI that you used to create
--   your simulation application.
createSimulationApplicationResponse_environment :: Lens' CreateSimulationApplicationResponse (Maybe Environment)

-- | The sources of the simulation application.
createSimulationApplicationResponse_sources :: Lens' CreateSimulationApplicationResponse (Maybe [Source])

-- | The name of the simulation application.
createSimulationApplicationResponse_name :: Lens' CreateSimulationApplicationResponse (Maybe Text)

-- | The version of the simulation application.
createSimulationApplicationResponse_version :: Lens' CreateSimulationApplicationResponse (Maybe Text)

-- | The simulation software suite used by the simulation application.
createSimulationApplicationResponse_simulationSoftwareSuite :: Lens' CreateSimulationApplicationResponse (Maybe SimulationSoftwareSuite)

-- | Information about the robot software suite (ROS distribution).
createSimulationApplicationResponse_robotSoftwareSuite :: Lens' CreateSimulationApplicationResponse (Maybe RobotSoftwareSuite)

-- | The revision id of the simulation application.
createSimulationApplicationResponse_revisionId :: Lens' CreateSimulationApplicationResponse (Maybe Text)

-- | The list of all tags added to the simulation application.
createSimulationApplicationResponse_tags :: Lens' CreateSimulationApplicationResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createSimulationApplicationResponse_httpStatus :: Lens' CreateSimulationApplicationResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateSimulationApplication.CreateSimulationApplication
instance GHC.Show.Show Amazonka.RobOMaker.CreateSimulationApplication.CreateSimulationApplication
instance GHC.Read.Read Amazonka.RobOMaker.CreateSimulationApplication.CreateSimulationApplication
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateSimulationApplication.CreateSimulationApplication
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateSimulationApplication.CreateSimulationApplicationResponse
instance GHC.Show.Show Amazonka.RobOMaker.CreateSimulationApplication.CreateSimulationApplicationResponse
instance GHC.Read.Read Amazonka.RobOMaker.CreateSimulationApplication.CreateSimulationApplicationResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateSimulationApplication.CreateSimulationApplicationResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.CreateSimulationApplication.CreateSimulationApplication
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateSimulationApplication.CreateSimulationApplicationResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.CreateSimulationApplication.CreateSimulationApplication
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateSimulationApplication.CreateSimulationApplication
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.CreateSimulationApplication.CreateSimulationApplication
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.CreateSimulationApplication.CreateSimulationApplication
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.CreateSimulationApplication.CreateSimulationApplication
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.CreateSimulationApplication.CreateSimulationApplication


-- | Creates a version of a robot application.
module Amazonka.RobOMaker.CreateRobotApplicationVersion

-- | <i>See:</i> <a>newCreateRobotApplicationVersion</a> smart constructor.
data CreateRobotApplicationVersion
CreateRobotApplicationVersion' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Text -> CreateRobotApplicationVersion

-- | The current revision id for the robot application. If you provide a
--   value and it matches the latest revision ID, a new version will be
--   created.
[$sel:currentRevisionId:CreateRobotApplicationVersion'] :: CreateRobotApplicationVersion -> Maybe Text

-- | The Amazon S3 identifier for the zip file bundle that you use for your
--   robot application.
[$sel:s3Etags:CreateRobotApplicationVersion'] :: CreateRobotApplicationVersion -> Maybe [Text]

-- | A SHA256 identifier for the Docker image that you use for your robot
--   application.
[$sel:imageDigest:CreateRobotApplicationVersion'] :: CreateRobotApplicationVersion -> Maybe Text

-- | The application information for the robot application.
[$sel:application:CreateRobotApplicationVersion'] :: CreateRobotApplicationVersion -> Text

-- | Create a value of <a>CreateRobotApplicationVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currentRevisionId:CreateRobotApplicationVersion'</a>,
--   <a>createRobotApplicationVersion_currentRevisionId</a> - The current
--   revision id for the robot application. If you provide a value and it
--   matches the latest revision ID, a new version will be created.
--   
--   <a>$sel:s3Etags:CreateRobotApplicationVersion'</a>,
--   <a>createRobotApplicationVersion_s3Etags</a> - The Amazon S3
--   identifier for the zip file bundle that you use for your robot
--   application.
--   
--   <a>$sel:imageDigest:CreateRobotApplicationVersion'</a>,
--   <a>createRobotApplicationVersion_imageDigest</a> - A SHA256 identifier
--   for the Docker image that you use for your robot application.
--   
--   <a>$sel:application:CreateRobotApplicationVersion'</a>,
--   <a>createRobotApplicationVersion_application</a> - The application
--   information for the robot application.
newCreateRobotApplicationVersion :: Text -> CreateRobotApplicationVersion

-- | The current revision id for the robot application. If you provide a
--   value and it matches the latest revision ID, a new version will be
--   created.
createRobotApplicationVersion_currentRevisionId :: Lens' CreateRobotApplicationVersion (Maybe Text)

-- | The Amazon S3 identifier for the zip file bundle that you use for your
--   robot application.
createRobotApplicationVersion_s3Etags :: Lens' CreateRobotApplicationVersion (Maybe [Text])

-- | A SHA256 identifier for the Docker image that you use for your robot
--   application.
createRobotApplicationVersion_imageDigest :: Lens' CreateRobotApplicationVersion (Maybe Text)

-- | The application information for the robot application.
createRobotApplicationVersion_application :: Lens' CreateRobotApplicationVersion Text

-- | <i>See:</i> <a>newCreateRobotApplicationVersionResponse</a> smart
--   constructor.
data CreateRobotApplicationVersionResponse
CreateRobotApplicationVersionResponse' :: Maybe POSIX -> Maybe Text -> Maybe Environment -> Maybe [Source] -> Maybe Text -> Maybe Text -> Maybe RobotSoftwareSuite -> Maybe Text -> Int -> CreateRobotApplicationVersionResponse

-- | The time, in milliseconds since the epoch, when the robot application
--   was last updated.
[$sel:lastUpdatedAt:CreateRobotApplicationVersionResponse'] :: CreateRobotApplicationVersionResponse -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the robot application.
[$sel:arn:CreateRobotApplicationVersionResponse'] :: CreateRobotApplicationVersionResponse -> Maybe Text

-- | The object that contains the Docker image URI used to create your
--   robot application.
[$sel:environment:CreateRobotApplicationVersionResponse'] :: CreateRobotApplicationVersionResponse -> Maybe Environment

-- | The sources of the robot application.
[$sel:sources:CreateRobotApplicationVersionResponse'] :: CreateRobotApplicationVersionResponse -> Maybe [Source]

-- | The name of the robot application.
[$sel:name:CreateRobotApplicationVersionResponse'] :: CreateRobotApplicationVersionResponse -> Maybe Text

-- | The version of the robot application.
[$sel:version:CreateRobotApplicationVersionResponse'] :: CreateRobotApplicationVersionResponse -> Maybe Text

-- | The robot software suite (ROS distribution) used by the robot
--   application.
[$sel:robotSoftwareSuite:CreateRobotApplicationVersionResponse'] :: CreateRobotApplicationVersionResponse -> Maybe RobotSoftwareSuite

-- | The revision id of the robot application.
[$sel:revisionId:CreateRobotApplicationVersionResponse'] :: CreateRobotApplicationVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateRobotApplicationVersionResponse'] :: CreateRobotApplicationVersionResponse -> Int

-- | Create a value of <a>CreateRobotApplicationVersionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:CreateRobotApplicationVersionResponse'</a>,
--   <a>createRobotApplicationVersionResponse_lastUpdatedAt</a> - The time,
--   in milliseconds since the epoch, when the robot application was last
--   updated.
--   
--   <a>$sel:arn:CreateRobotApplicationVersionResponse'</a>,
--   <a>createRobotApplicationVersionResponse_arn</a> - The Amazon Resource
--   Name (ARN) of the robot application.
--   
--   <a>$sel:environment:CreateRobotApplicationVersionResponse'</a>,
--   <a>createRobotApplicationVersionResponse_environment</a> - The object
--   that contains the Docker image URI used to create your robot
--   application.
--   
--   <a>$sel:sources:CreateRobotApplicationVersionResponse'</a>,
--   <a>createRobotApplicationVersionResponse_sources</a> - The sources of
--   the robot application.
--   
--   <a>$sel:name:CreateRobotApplicationVersionResponse'</a>,
--   <a>createRobotApplicationVersionResponse_name</a> - The name of the
--   robot application.
--   
--   <a>$sel:version:CreateRobotApplicationVersionResponse'</a>,
--   <a>createRobotApplicationVersionResponse_version</a> - The version of
--   the robot application.
--   
--   <a>$sel:robotSoftwareSuite:CreateRobotApplicationVersionResponse'</a>,
--   <a>createRobotApplicationVersionResponse_robotSoftwareSuite</a> - The
--   robot software suite (ROS distribution) used by the robot application.
--   
--   <a>$sel:revisionId:CreateRobotApplicationVersionResponse'</a>,
--   <a>createRobotApplicationVersionResponse_revisionId</a> - The revision
--   id of the robot application.
--   
--   <a>$sel:httpStatus:CreateRobotApplicationVersionResponse'</a>,
--   <a>createRobotApplicationVersionResponse_httpStatus</a> - The
--   response's http status code.
newCreateRobotApplicationVersionResponse :: Int -> CreateRobotApplicationVersionResponse

-- | The time, in milliseconds since the epoch, when the robot application
--   was last updated.
createRobotApplicationVersionResponse_lastUpdatedAt :: Lens' CreateRobotApplicationVersionResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the robot application.
createRobotApplicationVersionResponse_arn :: Lens' CreateRobotApplicationVersionResponse (Maybe Text)

-- | The object that contains the Docker image URI used to create your
--   robot application.
createRobotApplicationVersionResponse_environment :: Lens' CreateRobotApplicationVersionResponse (Maybe Environment)

-- | The sources of the robot application.
createRobotApplicationVersionResponse_sources :: Lens' CreateRobotApplicationVersionResponse (Maybe [Source])

-- | The name of the robot application.
createRobotApplicationVersionResponse_name :: Lens' CreateRobotApplicationVersionResponse (Maybe Text)

-- | The version of the robot application.
createRobotApplicationVersionResponse_version :: Lens' CreateRobotApplicationVersionResponse (Maybe Text)

-- | The robot software suite (ROS distribution) used by the robot
--   application.
createRobotApplicationVersionResponse_robotSoftwareSuite :: Lens' CreateRobotApplicationVersionResponse (Maybe RobotSoftwareSuite)

-- | The revision id of the robot application.
createRobotApplicationVersionResponse_revisionId :: Lens' CreateRobotApplicationVersionResponse (Maybe Text)

-- | The response's http status code.
createRobotApplicationVersionResponse_httpStatus :: Lens' CreateRobotApplicationVersionResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateRobotApplicationVersion.CreateRobotApplicationVersion
instance GHC.Show.Show Amazonka.RobOMaker.CreateRobotApplicationVersion.CreateRobotApplicationVersion
instance GHC.Read.Read Amazonka.RobOMaker.CreateRobotApplicationVersion.CreateRobotApplicationVersion
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateRobotApplicationVersion.CreateRobotApplicationVersion
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateRobotApplicationVersion.CreateRobotApplicationVersionResponse
instance GHC.Show.Show Amazonka.RobOMaker.CreateRobotApplicationVersion.CreateRobotApplicationVersionResponse
instance GHC.Read.Read Amazonka.RobOMaker.CreateRobotApplicationVersion.CreateRobotApplicationVersionResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateRobotApplicationVersion.CreateRobotApplicationVersionResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.CreateRobotApplicationVersion.CreateRobotApplicationVersion
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateRobotApplicationVersion.CreateRobotApplicationVersionResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.CreateRobotApplicationVersion.CreateRobotApplicationVersion
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateRobotApplicationVersion.CreateRobotApplicationVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.CreateRobotApplicationVersion.CreateRobotApplicationVersion
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.CreateRobotApplicationVersion.CreateRobotApplicationVersion
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.CreateRobotApplicationVersion.CreateRobotApplicationVersion
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.CreateRobotApplicationVersion.CreateRobotApplicationVersion


-- | Creates a robot application.
module Amazonka.RobOMaker.CreateRobotApplication

-- | <i>See:</i> <a>newCreateRobotApplication</a> smart constructor.
data CreateRobotApplication
CreateRobotApplication' :: Maybe Environment -> Maybe [SourceConfig] -> Maybe (HashMap Text Text) -> Text -> RobotSoftwareSuite -> CreateRobotApplication

-- | The object that contains that URI of the Docker image that you use for
--   your robot application.
[$sel:environment:CreateRobotApplication'] :: CreateRobotApplication -> Maybe Environment

-- | The sources of the robot application.
[$sel:sources:CreateRobotApplication'] :: CreateRobotApplication -> Maybe [SourceConfig]

-- | A map that contains tag keys and tag values that are attached to the
--   robot application.
[$sel:tags:CreateRobotApplication'] :: CreateRobotApplication -> Maybe (HashMap Text Text)

-- | The name of the robot application.
[$sel:name:CreateRobotApplication'] :: CreateRobotApplication -> Text

-- | The robot software suite (ROS distribuition) used by the robot
--   application.
[$sel:robotSoftwareSuite:CreateRobotApplication'] :: CreateRobotApplication -> RobotSoftwareSuite

-- | Create a value of <a>CreateRobotApplication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:environment:CreateRobotApplication'</a>,
--   <a>createRobotApplication_environment</a> - The object that contains
--   that URI of the Docker image that you use for your robot application.
--   
--   <a>$sel:sources:CreateRobotApplication'</a>,
--   <a>createRobotApplication_sources</a> - The sources of the robot
--   application.
--   
--   <a>$sel:tags:CreateRobotApplication'</a>,
--   <a>createRobotApplication_tags</a> - A map that contains tag keys and
--   tag values that are attached to the robot application.
--   
--   <a>$sel:name:CreateRobotApplication'</a>,
--   <a>createRobotApplication_name</a> - The name of the robot
--   application.
--   
--   <a>$sel:robotSoftwareSuite:CreateRobotApplication'</a>,
--   <a>createRobotApplication_robotSoftwareSuite</a> - The robot software
--   suite (ROS distribuition) used by the robot application.
newCreateRobotApplication :: Text -> RobotSoftwareSuite -> CreateRobotApplication

-- | The object that contains that URI of the Docker image that you use for
--   your robot application.
createRobotApplication_environment :: Lens' CreateRobotApplication (Maybe Environment)

-- | The sources of the robot application.
createRobotApplication_sources :: Lens' CreateRobotApplication (Maybe [SourceConfig])

-- | A map that contains tag keys and tag values that are attached to the
--   robot application.
createRobotApplication_tags :: Lens' CreateRobotApplication (Maybe (HashMap Text Text))

-- | The name of the robot application.
createRobotApplication_name :: Lens' CreateRobotApplication Text

-- | The robot software suite (ROS distribuition) used by the robot
--   application.
createRobotApplication_robotSoftwareSuite :: Lens' CreateRobotApplication RobotSoftwareSuite

-- | <i>See:</i> <a>newCreateRobotApplicationResponse</a> smart
--   constructor.
data CreateRobotApplicationResponse
CreateRobotApplicationResponse' :: Maybe POSIX -> Maybe Text -> Maybe Environment -> Maybe [Source] -> Maybe Text -> Maybe Text -> Maybe RobotSoftwareSuite -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateRobotApplicationResponse

-- | The time, in milliseconds since the epoch, when the robot application
--   was last updated.
[$sel:lastUpdatedAt:CreateRobotApplicationResponse'] :: CreateRobotApplicationResponse -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the robot application.
[$sel:arn:CreateRobotApplicationResponse'] :: CreateRobotApplicationResponse -> Maybe Text

-- | An object that contains the Docker image URI used to a create your
--   robot application.
[$sel:environment:CreateRobotApplicationResponse'] :: CreateRobotApplicationResponse -> Maybe Environment

-- | The sources of the robot application.
[$sel:sources:CreateRobotApplicationResponse'] :: CreateRobotApplicationResponse -> Maybe [Source]

-- | The name of the robot application.
[$sel:name:CreateRobotApplicationResponse'] :: CreateRobotApplicationResponse -> Maybe Text

-- | The version of the robot application.
[$sel:version:CreateRobotApplicationResponse'] :: CreateRobotApplicationResponse -> Maybe Text

-- | The robot software suite (ROS distribution) used by the robot
--   application.
[$sel:robotSoftwareSuite:CreateRobotApplicationResponse'] :: CreateRobotApplicationResponse -> Maybe RobotSoftwareSuite

-- | The revision id of the robot application.
[$sel:revisionId:CreateRobotApplicationResponse'] :: CreateRobotApplicationResponse -> Maybe Text

-- | The list of all tags added to the robot application.
[$sel:tags:CreateRobotApplicationResponse'] :: CreateRobotApplicationResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:CreateRobotApplicationResponse'] :: CreateRobotApplicationResponse -> Int

-- | Create a value of <a>CreateRobotApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:CreateRobotApplicationResponse'</a>,
--   <a>createRobotApplicationResponse_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the robot application was last
--   updated.
--   
--   <a>$sel:arn:CreateRobotApplicationResponse'</a>,
--   <a>createRobotApplicationResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the robot application.
--   
--   <a>$sel:environment:CreateRobotApplication'</a>,
--   <a>createRobotApplicationResponse_environment</a> - An object that
--   contains the Docker image URI used to a create your robot application.
--   
--   <a>$sel:sources:CreateRobotApplication'</a>,
--   <a>createRobotApplicationResponse_sources</a> - The sources of the
--   robot application.
--   
--   <a>$sel:name:CreateRobotApplication'</a>,
--   <a>createRobotApplicationResponse_name</a> - The name of the robot
--   application.
--   
--   <a>$sel:version:CreateRobotApplicationResponse'</a>,
--   <a>createRobotApplicationResponse_version</a> - The version of the
--   robot application.
--   
--   <a>$sel:robotSoftwareSuite:CreateRobotApplication'</a>,
--   <a>createRobotApplicationResponse_robotSoftwareSuite</a> - The robot
--   software suite (ROS distribution) used by the robot application.
--   
--   <a>$sel:revisionId:CreateRobotApplicationResponse'</a>,
--   <a>createRobotApplicationResponse_revisionId</a> - The revision id of
--   the robot application.
--   
--   <a>$sel:tags:CreateRobotApplication'</a>,
--   <a>createRobotApplicationResponse_tags</a> - The list of all tags
--   added to the robot application.
--   
--   <a>$sel:httpStatus:CreateRobotApplicationResponse'</a>,
--   <a>createRobotApplicationResponse_httpStatus</a> - The response's http
--   status code.
newCreateRobotApplicationResponse :: Int -> CreateRobotApplicationResponse

-- | The time, in milliseconds since the epoch, when the robot application
--   was last updated.
createRobotApplicationResponse_lastUpdatedAt :: Lens' CreateRobotApplicationResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the robot application.
createRobotApplicationResponse_arn :: Lens' CreateRobotApplicationResponse (Maybe Text)

-- | An object that contains the Docker image URI used to a create your
--   robot application.
createRobotApplicationResponse_environment :: Lens' CreateRobotApplicationResponse (Maybe Environment)

-- | The sources of the robot application.
createRobotApplicationResponse_sources :: Lens' CreateRobotApplicationResponse (Maybe [Source])

-- | The name of the robot application.
createRobotApplicationResponse_name :: Lens' CreateRobotApplicationResponse (Maybe Text)

-- | The version of the robot application.
createRobotApplicationResponse_version :: Lens' CreateRobotApplicationResponse (Maybe Text)

-- | The robot software suite (ROS distribution) used by the robot
--   application.
createRobotApplicationResponse_robotSoftwareSuite :: Lens' CreateRobotApplicationResponse (Maybe RobotSoftwareSuite)

-- | The revision id of the robot application.
createRobotApplicationResponse_revisionId :: Lens' CreateRobotApplicationResponse (Maybe Text)

-- | The list of all tags added to the robot application.
createRobotApplicationResponse_tags :: Lens' CreateRobotApplicationResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createRobotApplicationResponse_httpStatus :: Lens' CreateRobotApplicationResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateRobotApplication.CreateRobotApplication
instance GHC.Show.Show Amazonka.RobOMaker.CreateRobotApplication.CreateRobotApplication
instance GHC.Read.Read Amazonka.RobOMaker.CreateRobotApplication.CreateRobotApplication
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateRobotApplication.CreateRobotApplication
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateRobotApplication.CreateRobotApplicationResponse
instance GHC.Show.Show Amazonka.RobOMaker.CreateRobotApplication.CreateRobotApplicationResponse
instance GHC.Read.Read Amazonka.RobOMaker.CreateRobotApplication.CreateRobotApplicationResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateRobotApplication.CreateRobotApplicationResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.CreateRobotApplication.CreateRobotApplication
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateRobotApplication.CreateRobotApplicationResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.CreateRobotApplication.CreateRobotApplication
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateRobotApplication.CreateRobotApplication
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.CreateRobotApplication.CreateRobotApplication
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.CreateRobotApplication.CreateRobotApplication
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.CreateRobotApplication.CreateRobotApplication
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.CreateRobotApplication.CreateRobotApplication


-- | Creates a robot.
module Amazonka.RobOMaker.CreateRobot

-- | <i>See:</i> <a>newCreateRobot</a> smart constructor.
data CreateRobot
CreateRobot' :: Maybe (HashMap Text Text) -> Text -> Architecture -> Text -> CreateRobot

-- | A map that contains tag keys and tag values that are attached to the
--   robot.
[$sel:tags:CreateRobot'] :: CreateRobot -> Maybe (HashMap Text Text)

-- | The name for the robot.
[$sel:name:CreateRobot'] :: CreateRobot -> Text

-- | The target architecture of the robot.
[$sel:architecture:CreateRobot'] :: CreateRobot -> Architecture

-- | The Greengrass group id.
[$sel:greengrassGroupId:CreateRobot'] :: CreateRobot -> Text

-- | Create a value of <a>CreateRobot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateRobot'</a>, <a>createRobot_tags</a> - A map that
--   contains tag keys and tag values that are attached to the robot.
--   
--   <a>$sel:name:CreateRobot'</a>, <a>createRobot_name</a> - The name for
--   the robot.
--   
--   <a>$sel:architecture:CreateRobot'</a>, <a>createRobot_architecture</a>
--   - The target architecture of the robot.
--   
--   <a>$sel:greengrassGroupId:CreateRobot'</a>,
--   <a>createRobot_greengrassGroupId</a> - The Greengrass group id.
newCreateRobot :: Text -> Architecture -> Text -> CreateRobot

-- | A map that contains tag keys and tag values that are attached to the
--   robot.
createRobot_tags :: Lens' CreateRobot (Maybe (HashMap Text Text))

-- | The name for the robot.
createRobot_name :: Lens' CreateRobot Text

-- | The target architecture of the robot.
createRobot_architecture :: Lens' CreateRobot Architecture

-- | The Greengrass group id.
createRobot_greengrassGroupId :: Lens' CreateRobot Text

-- | <i>See:</i> <a>newCreateRobotResponse</a> smart constructor.
data CreateRobotResponse
CreateRobotResponse' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Architecture -> Maybe (HashMap Text Text) -> Int -> CreateRobotResponse

-- | The Amazon Resource Name (ARN) of the robot.
[$sel:arn:CreateRobotResponse'] :: CreateRobotResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the robot was created.
[$sel:createdAt:CreateRobotResponse'] :: CreateRobotResponse -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the Greengrass group associated with
--   the robot.
[$sel:greengrassGroupId:CreateRobotResponse'] :: CreateRobotResponse -> Maybe Text

-- | The name of the robot.
[$sel:name:CreateRobotResponse'] :: CreateRobotResponse -> Maybe Text

-- | The target architecture of the robot.
[$sel:architecture:CreateRobotResponse'] :: CreateRobotResponse -> Maybe Architecture

-- | The list of all tags added to the robot.
[$sel:tags:CreateRobotResponse'] :: CreateRobotResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:CreateRobotResponse'] :: CreateRobotResponse -> Int

-- | Create a value of <a>CreateRobotResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:CreateRobotResponse'</a>, <a>createRobotResponse_arn</a> -
--   The Amazon Resource Name (ARN) of the robot.
--   
--   <a>$sel:createdAt:CreateRobotResponse'</a>,
--   <a>createRobotResponse_createdAt</a> - The time, in milliseconds since
--   the epoch, when the robot was created.
--   
--   <a>$sel:greengrassGroupId:CreateRobot'</a>,
--   <a>createRobotResponse_greengrassGroupId</a> - The Amazon Resource
--   Name (ARN) of the Greengrass group associated with the robot.
--   
--   <a>$sel:name:CreateRobot'</a>, <a>createRobotResponse_name</a> - The
--   name of the robot.
--   
--   <a>$sel:architecture:CreateRobot'</a>,
--   <a>createRobotResponse_architecture</a> - The target architecture of
--   the robot.
--   
--   <a>$sel:tags:CreateRobot'</a>, <a>createRobotResponse_tags</a> - The
--   list of all tags added to the robot.
--   
--   <a>$sel:httpStatus:CreateRobotResponse'</a>,
--   <a>createRobotResponse_httpStatus</a> - The response's http status
--   code.
newCreateRobotResponse :: Int -> CreateRobotResponse

-- | The Amazon Resource Name (ARN) of the robot.
createRobotResponse_arn :: Lens' CreateRobotResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the robot was created.
createRobotResponse_createdAt :: Lens' CreateRobotResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the Greengrass group associated with
--   the robot.
createRobotResponse_greengrassGroupId :: Lens' CreateRobotResponse (Maybe Text)

-- | The name of the robot.
createRobotResponse_name :: Lens' CreateRobotResponse (Maybe Text)

-- | The target architecture of the robot.
createRobotResponse_architecture :: Lens' CreateRobotResponse (Maybe Architecture)

-- | The list of all tags added to the robot.
createRobotResponse_tags :: Lens' CreateRobotResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createRobotResponse_httpStatus :: Lens' CreateRobotResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateRobot.CreateRobot
instance GHC.Show.Show Amazonka.RobOMaker.CreateRobot.CreateRobot
instance GHC.Read.Read Amazonka.RobOMaker.CreateRobot.CreateRobot
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateRobot.CreateRobot
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateRobot.CreateRobotResponse
instance GHC.Show.Show Amazonka.RobOMaker.CreateRobot.CreateRobotResponse
instance GHC.Read.Read Amazonka.RobOMaker.CreateRobot.CreateRobotResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateRobot.CreateRobotResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.CreateRobot.CreateRobot
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateRobot.CreateRobotResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.CreateRobot.CreateRobot
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateRobot.CreateRobot
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.CreateRobot.CreateRobot
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.CreateRobot.CreateRobot
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.CreateRobot.CreateRobot
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.CreateRobot.CreateRobot


-- | Creates a fleet, a logical group of robots running the same robot
--   application.
module Amazonka.RobOMaker.CreateFleet

-- | <i>See:</i> <a>newCreateFleet</a> smart constructor.
data CreateFleet
CreateFleet' :: Maybe (HashMap Text Text) -> Text -> CreateFleet

-- | A map that contains tag keys and tag values that are attached to the
--   fleet.
[$sel:tags:CreateFleet'] :: CreateFleet -> Maybe (HashMap Text Text)

-- | The name of the fleet.
[$sel:name:CreateFleet'] :: CreateFleet -> Text

-- | Create a value of <a>CreateFleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateFleet'</a>, <a>createFleet_tags</a> - A map that
--   contains tag keys and tag values that are attached to the fleet.
--   
--   <a>$sel:name:CreateFleet'</a>, <a>createFleet_name</a> - The name of
--   the fleet.
newCreateFleet :: Text -> CreateFleet

-- | A map that contains tag keys and tag values that are attached to the
--   fleet.
createFleet_tags :: Lens' CreateFleet (Maybe (HashMap Text Text))

-- | The name of the fleet.
createFleet_name :: Lens' CreateFleet Text

-- | <i>See:</i> <a>newCreateFleetResponse</a> smart constructor.
data CreateFleetResponse
CreateFleetResponse' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateFleetResponse

-- | The Amazon Resource Name (ARN) of the fleet.
[$sel:arn:CreateFleetResponse'] :: CreateFleetResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the fleet was created.
[$sel:createdAt:CreateFleetResponse'] :: CreateFleetResponse -> Maybe POSIX

-- | The name of the fleet.
[$sel:name:CreateFleetResponse'] :: CreateFleetResponse -> Maybe Text

-- | The list of all tags added to the fleet.
[$sel:tags:CreateFleetResponse'] :: CreateFleetResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:CreateFleetResponse'] :: CreateFleetResponse -> Int

-- | Create a value of <a>CreateFleetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:CreateFleetResponse'</a>, <a>createFleetResponse_arn</a> -
--   The Amazon Resource Name (ARN) of the fleet.
--   
--   <a>$sel:createdAt:CreateFleetResponse'</a>,
--   <a>createFleetResponse_createdAt</a> - The time, in milliseconds since
--   the epoch, when the fleet was created.
--   
--   <a>$sel:name:CreateFleet'</a>, <a>createFleetResponse_name</a> - The
--   name of the fleet.
--   
--   <a>$sel:tags:CreateFleet'</a>, <a>createFleetResponse_tags</a> - The
--   list of all tags added to the fleet.
--   
--   <a>$sel:httpStatus:CreateFleetResponse'</a>,
--   <a>createFleetResponse_httpStatus</a> - The response's http status
--   code.
newCreateFleetResponse :: Int -> CreateFleetResponse

-- | The Amazon Resource Name (ARN) of the fleet.
createFleetResponse_arn :: Lens' CreateFleetResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the fleet was created.
createFleetResponse_createdAt :: Lens' CreateFleetResponse (Maybe UTCTime)

-- | The name of the fleet.
createFleetResponse_name :: Lens' CreateFleetResponse (Maybe Text)

-- | The list of all tags added to the fleet.
createFleetResponse_tags :: Lens' CreateFleetResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createFleetResponse_httpStatus :: Lens' CreateFleetResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateFleet.CreateFleet
instance GHC.Show.Show Amazonka.RobOMaker.CreateFleet.CreateFleet
instance GHC.Read.Read Amazonka.RobOMaker.CreateFleet.CreateFleet
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateFleet.CreateFleet
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateFleet.CreateFleetResponse
instance GHC.Show.Show Amazonka.RobOMaker.CreateFleet.CreateFleetResponse
instance GHC.Read.Read Amazonka.RobOMaker.CreateFleet.CreateFleetResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateFleet.CreateFleetResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.CreateFleet.CreateFleet
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateFleet.CreateFleetResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.CreateFleet.CreateFleet
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateFleet.CreateFleet
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.CreateFleet.CreateFleet
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.CreateFleet.CreateFleet
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.CreateFleet.CreateFleet
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.CreateFleet.CreateFleet


-- | Deploys a specific version of a robot application to robots in a
--   fleet.
--   
--   The robot application must have a numbered <tt>applicationVersion</tt>
--   for consistency reasons. To create a new version, use
--   <tt>CreateRobotApplicationVersion</tt> or see <a>Creating a Robot
--   Application Version</a>.
--   
--   After 90 days, deployment jobs expire and will be deleted. They will
--   no longer be accessible.
module Amazonka.RobOMaker.CreateDeploymentJob

-- | <i>See:</i> <a>newCreateDeploymentJob</a> smart constructor.
data CreateDeploymentJob
CreateDeploymentJob' :: Maybe DeploymentConfig -> Maybe (HashMap Text Text) -> Text -> Text -> NonEmpty DeploymentApplicationConfig -> CreateDeploymentJob

-- | The requested deployment configuration.
[$sel:deploymentConfig:CreateDeploymentJob'] :: CreateDeploymentJob -> Maybe DeploymentConfig

-- | A map that contains tag keys and tag values that are attached to the
--   deployment job.
[$sel:tags:CreateDeploymentJob'] :: CreateDeploymentJob -> Maybe (HashMap Text Text)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:CreateDeploymentJob'] :: CreateDeploymentJob -> Text

-- | The Amazon Resource Name (ARN) of the fleet to deploy.
[$sel:fleet:CreateDeploymentJob'] :: CreateDeploymentJob -> Text

-- | The deployment application configuration.
[$sel:deploymentApplicationConfigs:CreateDeploymentJob'] :: CreateDeploymentJob -> NonEmpty DeploymentApplicationConfig

-- | Create a value of <a>CreateDeploymentJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentConfig:CreateDeploymentJob'</a>,
--   <a>createDeploymentJob_deploymentConfig</a> - The requested deployment
--   configuration.
--   
--   <a>$sel:tags:CreateDeploymentJob'</a>, <a>createDeploymentJob_tags</a>
--   - A map that contains tag keys and tag values that are attached to the
--   deployment job.
--   
--   <a>$sel:clientRequestToken:CreateDeploymentJob'</a>,
--   <a>createDeploymentJob_clientRequestToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:fleet:CreateDeploymentJob'</a>,
--   <a>createDeploymentJob_fleet</a> - The Amazon Resource Name (ARN) of
--   the fleet to deploy.
--   
--   <a>$sel:deploymentApplicationConfigs:CreateDeploymentJob'</a>,
--   <a>createDeploymentJob_deploymentApplicationConfigs</a> - The
--   deployment application configuration.
newCreateDeploymentJob :: Text -> Text -> NonEmpty DeploymentApplicationConfig -> CreateDeploymentJob

-- | The requested deployment configuration.
createDeploymentJob_deploymentConfig :: Lens' CreateDeploymentJob (Maybe DeploymentConfig)

-- | A map that contains tag keys and tag values that are attached to the
--   deployment job.
createDeploymentJob_tags :: Lens' CreateDeploymentJob (Maybe (HashMap Text Text))

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createDeploymentJob_clientRequestToken :: Lens' CreateDeploymentJob Text

-- | The Amazon Resource Name (ARN) of the fleet to deploy.
createDeploymentJob_fleet :: Lens' CreateDeploymentJob Text

-- | The deployment application configuration.
createDeploymentJob_deploymentApplicationConfigs :: Lens' CreateDeploymentJob (NonEmpty DeploymentApplicationConfig)

-- | <i>See:</i> <a>newCreateDeploymentJobResponse</a> smart constructor.
data CreateDeploymentJobResponse
CreateDeploymentJobResponse' :: Maybe Text -> Maybe DeploymentStatus -> Maybe (NonEmpty DeploymentApplicationConfig) -> Maybe Text -> Maybe POSIX -> Maybe DeploymentJobErrorCode -> Maybe DeploymentConfig -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateDeploymentJobResponse

-- | The failure reason of the deployment job if it failed.
[$sel:failureReason:CreateDeploymentJobResponse'] :: CreateDeploymentJobResponse -> Maybe Text

-- | The status of the deployment job.
[$sel:status:CreateDeploymentJobResponse'] :: CreateDeploymentJobResponse -> Maybe DeploymentStatus

-- | The deployment application configuration.
[$sel:deploymentApplicationConfigs:CreateDeploymentJobResponse'] :: CreateDeploymentJobResponse -> Maybe (NonEmpty DeploymentApplicationConfig)

-- | The Amazon Resource Name (ARN) of the deployment job.
[$sel:arn:CreateDeploymentJobResponse'] :: CreateDeploymentJobResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the fleet was created.
[$sel:createdAt:CreateDeploymentJobResponse'] :: CreateDeploymentJobResponse -> Maybe POSIX

-- | The failure code of the simulation job if it failed:
--   
--   <ul>
--   <li><i>BadPermissionError</i> AWS Greengrass requires a service-level
--   role permission to access other services. The role must include the
--   <a>AWSGreengrassResourceAccessRolePolicy managed policy</a>.</li>
--   <li><i>ExtractingBundleFailure</i> The robot application could not be
--   extracted from the bundle.</li>
--   <li><i>FailureThresholdBreached</i> The percentage of robots that
--   could not be updated exceeded the percentage set for the
--   deployment.</li>
--   <li><i>GreengrassDeploymentFailed</i> The robot application could not
--   be deployed to the robot.</li>
--   <li><i>GreengrassGroupVersionDoesNotExist</i> The AWS Greengrass group
--   or version associated with a robot is missing.</li>
--   <li><i>InternalServerError</i> An internal error has occurred. Retry
--   your request, but if the problem persists, contact us with
--   details.</li>
--   <li><i>MissingRobotApplicationArchitecture</i> The robot application
--   does not have a source that matches the architecture of the
--   robot.</li>
--   <li><i>MissingRobotDeploymentResource</i> One or more of the resources
--   specified for the robot application are missing. For example, does the
--   robot application have the correct launch package and launch
--   file?</li>
--   <li><i>PostLaunchFileFailure</i> The post-launch script failed.</li>
--   <li><i>PreLaunchFileFailure</i> The pre-launch script failed.</li>
--   <li><i>ResourceNotFound</i> One or more deployment resources are
--   missing. For example, do robot application source bundles still
--   exist?</li>
--   <li><i>RobotDeploymentNoResponse</i> There is no response from the
--   robot. It might not be powered on or connected to the internet.</li>
--   </ul>
[$sel:failureCode:CreateDeploymentJobResponse'] :: CreateDeploymentJobResponse -> Maybe DeploymentJobErrorCode

-- | The deployment configuration.
[$sel:deploymentConfig:CreateDeploymentJobResponse'] :: CreateDeploymentJobResponse -> Maybe DeploymentConfig

-- | The target fleet for the deployment job.
[$sel:fleet:CreateDeploymentJobResponse'] :: CreateDeploymentJobResponse -> Maybe Text

-- | The list of all tags added to the deployment job.
[$sel:tags:CreateDeploymentJobResponse'] :: CreateDeploymentJobResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:CreateDeploymentJobResponse'] :: CreateDeploymentJobResponse -> Int

-- | Create a value of <a>CreateDeploymentJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:CreateDeploymentJobResponse'</a>,
--   <a>createDeploymentJobResponse_failureReason</a> - The failure reason
--   of the deployment job if it failed.
--   
--   <a>$sel:status:CreateDeploymentJobResponse'</a>,
--   <a>createDeploymentJobResponse_status</a> - The status of the
--   deployment job.
--   
--   <a>$sel:deploymentApplicationConfigs:CreateDeploymentJob'</a>,
--   <a>createDeploymentJobResponse_deploymentApplicationConfigs</a> - The
--   deployment application configuration.
--   
--   <a>$sel:arn:CreateDeploymentJobResponse'</a>,
--   <a>createDeploymentJobResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the deployment job.
--   
--   <a>$sel:createdAt:CreateDeploymentJobResponse'</a>,
--   <a>createDeploymentJobResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the fleet was created.
--   
--   <a>$sel:failureCode:CreateDeploymentJobResponse'</a>,
--   <a>createDeploymentJobResponse_failureCode</a> - The failure code of
--   the simulation job if it failed:
--   
--   <ul>
--   <li><i>BadPermissionError</i> AWS Greengrass requires a service-level
--   role permission to access other services. The role must include the
--   <a>AWSGreengrassResourceAccessRolePolicy managed policy</a>.</li>
--   <li><i>ExtractingBundleFailure</i> The robot application could not be
--   extracted from the bundle.</li>
--   <li><i>FailureThresholdBreached</i> The percentage of robots that
--   could not be updated exceeded the percentage set for the
--   deployment.</li>
--   <li><i>GreengrassDeploymentFailed</i> The robot application could not
--   be deployed to the robot.</li>
--   <li><i>GreengrassGroupVersionDoesNotExist</i> The AWS Greengrass group
--   or version associated with a robot is missing.</li>
--   <li><i>InternalServerError</i> An internal error has occurred. Retry
--   your request, but if the problem persists, contact us with
--   details.</li>
--   <li><i>MissingRobotApplicationArchitecture</i> The robot application
--   does not have a source that matches the architecture of the
--   robot.</li>
--   <li><i>MissingRobotDeploymentResource</i> One or more of the resources
--   specified for the robot application are missing. For example, does the
--   robot application have the correct launch package and launch
--   file?</li>
--   <li><i>PostLaunchFileFailure</i> The post-launch script failed.</li>
--   <li><i>PreLaunchFileFailure</i> The pre-launch script failed.</li>
--   <li><i>ResourceNotFound</i> One or more deployment resources are
--   missing. For example, do robot application source bundles still
--   exist?</li>
--   <li><i>RobotDeploymentNoResponse</i> There is no response from the
--   robot. It might not be powered on or connected to the internet.</li>
--   </ul>
--   
--   <a>$sel:deploymentConfig:CreateDeploymentJob'</a>,
--   <a>createDeploymentJobResponse_deploymentConfig</a> - The deployment
--   configuration.
--   
--   <a>$sel:fleet:CreateDeploymentJob'</a>,
--   <a>createDeploymentJobResponse_fleet</a> - The target fleet for the
--   deployment job.
--   
--   <a>$sel:tags:CreateDeploymentJob'</a>,
--   <a>createDeploymentJobResponse_tags</a> - The list of all tags added
--   to the deployment job.
--   
--   <a>$sel:httpStatus:CreateDeploymentJobResponse'</a>,
--   <a>createDeploymentJobResponse_httpStatus</a> - The response's http
--   status code.
newCreateDeploymentJobResponse :: Int -> CreateDeploymentJobResponse

-- | The failure reason of the deployment job if it failed.
createDeploymentJobResponse_failureReason :: Lens' CreateDeploymentJobResponse (Maybe Text)

-- | The status of the deployment job.
createDeploymentJobResponse_status :: Lens' CreateDeploymentJobResponse (Maybe DeploymentStatus)

-- | The deployment application configuration.
createDeploymentJobResponse_deploymentApplicationConfigs :: Lens' CreateDeploymentJobResponse (Maybe (NonEmpty DeploymentApplicationConfig))

-- | The Amazon Resource Name (ARN) of the deployment job.
createDeploymentJobResponse_arn :: Lens' CreateDeploymentJobResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the fleet was created.
createDeploymentJobResponse_createdAt :: Lens' CreateDeploymentJobResponse (Maybe UTCTime)

-- | The failure code of the simulation job if it failed:
--   
--   <ul>
--   <li><i>BadPermissionError</i> AWS Greengrass requires a service-level
--   role permission to access other services. The role must include the
--   <a>AWSGreengrassResourceAccessRolePolicy managed policy</a>.</li>
--   <li><i>ExtractingBundleFailure</i> The robot application could not be
--   extracted from the bundle.</li>
--   <li><i>FailureThresholdBreached</i> The percentage of robots that
--   could not be updated exceeded the percentage set for the
--   deployment.</li>
--   <li><i>GreengrassDeploymentFailed</i> The robot application could not
--   be deployed to the robot.</li>
--   <li><i>GreengrassGroupVersionDoesNotExist</i> The AWS Greengrass group
--   or version associated with a robot is missing.</li>
--   <li><i>InternalServerError</i> An internal error has occurred. Retry
--   your request, but if the problem persists, contact us with
--   details.</li>
--   <li><i>MissingRobotApplicationArchitecture</i> The robot application
--   does not have a source that matches the architecture of the
--   robot.</li>
--   <li><i>MissingRobotDeploymentResource</i> One or more of the resources
--   specified for the robot application are missing. For example, does the
--   robot application have the correct launch package and launch
--   file?</li>
--   <li><i>PostLaunchFileFailure</i> The post-launch script failed.</li>
--   <li><i>PreLaunchFileFailure</i> The pre-launch script failed.</li>
--   <li><i>ResourceNotFound</i> One or more deployment resources are
--   missing. For example, do robot application source bundles still
--   exist?</li>
--   <li><i>RobotDeploymentNoResponse</i> There is no response from the
--   robot. It might not be powered on or connected to the internet.</li>
--   </ul>
createDeploymentJobResponse_failureCode :: Lens' CreateDeploymentJobResponse (Maybe DeploymentJobErrorCode)

-- | The deployment configuration.
createDeploymentJobResponse_deploymentConfig :: Lens' CreateDeploymentJobResponse (Maybe DeploymentConfig)

-- | The target fleet for the deployment job.
createDeploymentJobResponse_fleet :: Lens' CreateDeploymentJobResponse (Maybe Text)

-- | The list of all tags added to the deployment job.
createDeploymentJobResponse_tags :: Lens' CreateDeploymentJobResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createDeploymentJobResponse_httpStatus :: Lens' CreateDeploymentJobResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateDeploymentJob.CreateDeploymentJob
instance GHC.Show.Show Amazonka.RobOMaker.CreateDeploymentJob.CreateDeploymentJob
instance GHC.Read.Read Amazonka.RobOMaker.CreateDeploymentJob.CreateDeploymentJob
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateDeploymentJob.CreateDeploymentJob
instance GHC.Generics.Generic Amazonka.RobOMaker.CreateDeploymentJob.CreateDeploymentJobResponse
instance GHC.Show.Show Amazonka.RobOMaker.CreateDeploymentJob.CreateDeploymentJobResponse
instance GHC.Read.Read Amazonka.RobOMaker.CreateDeploymentJob.CreateDeploymentJobResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.CreateDeploymentJob.CreateDeploymentJobResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.CreateDeploymentJob.CreateDeploymentJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateDeploymentJob.CreateDeploymentJobResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.CreateDeploymentJob.CreateDeploymentJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CreateDeploymentJob.CreateDeploymentJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.CreateDeploymentJob.CreateDeploymentJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.CreateDeploymentJob.CreateDeploymentJob
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.CreateDeploymentJob.CreateDeploymentJob
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.CreateDeploymentJob.CreateDeploymentJob


-- | Cancels the specified world generator job.
module Amazonka.RobOMaker.CancelWorldGenerationJob

-- | <i>See:</i> <a>newCancelWorldGenerationJob</a> smart constructor.
data CancelWorldGenerationJob
CancelWorldGenerationJob' :: Text -> CancelWorldGenerationJob

-- | The Amazon Resource Name (arn) of the world generator job to cancel.
[$sel:job:CancelWorldGenerationJob'] :: CancelWorldGenerationJob -> Text

-- | Create a value of <a>CancelWorldGenerationJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:CancelWorldGenerationJob'</a>,
--   <a>cancelWorldGenerationJob_job</a> - The Amazon Resource Name (arn)
--   of the world generator job to cancel.
newCancelWorldGenerationJob :: Text -> CancelWorldGenerationJob

-- | The Amazon Resource Name (arn) of the world generator job to cancel.
cancelWorldGenerationJob_job :: Lens' CancelWorldGenerationJob Text

-- | <i>See:</i> <a>newCancelWorldGenerationJobResponse</a> smart
--   constructor.
data CancelWorldGenerationJobResponse
CancelWorldGenerationJobResponse' :: Int -> CancelWorldGenerationJobResponse

-- | The response's http status code.
[$sel:httpStatus:CancelWorldGenerationJobResponse'] :: CancelWorldGenerationJobResponse -> Int

-- | Create a value of <a>CancelWorldGenerationJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelWorldGenerationJobResponse'</a>,
--   <a>cancelWorldGenerationJobResponse_httpStatus</a> - The response's
--   http status code.
newCancelWorldGenerationJobResponse :: Int -> CancelWorldGenerationJobResponse

-- | The response's http status code.
cancelWorldGenerationJobResponse_httpStatus :: Lens' CancelWorldGenerationJobResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.CancelWorldGenerationJob.CancelWorldGenerationJob
instance GHC.Show.Show Amazonka.RobOMaker.CancelWorldGenerationJob.CancelWorldGenerationJob
instance GHC.Read.Read Amazonka.RobOMaker.CancelWorldGenerationJob.CancelWorldGenerationJob
instance GHC.Classes.Eq Amazonka.RobOMaker.CancelWorldGenerationJob.CancelWorldGenerationJob
instance GHC.Generics.Generic Amazonka.RobOMaker.CancelWorldGenerationJob.CancelWorldGenerationJobResponse
instance GHC.Show.Show Amazonka.RobOMaker.CancelWorldGenerationJob.CancelWorldGenerationJobResponse
instance GHC.Read.Read Amazonka.RobOMaker.CancelWorldGenerationJob.CancelWorldGenerationJobResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.CancelWorldGenerationJob.CancelWorldGenerationJobResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.CancelWorldGenerationJob.CancelWorldGenerationJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CancelWorldGenerationJob.CancelWorldGenerationJobResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.CancelWorldGenerationJob.CancelWorldGenerationJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CancelWorldGenerationJob.CancelWorldGenerationJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.CancelWorldGenerationJob.CancelWorldGenerationJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.CancelWorldGenerationJob.CancelWorldGenerationJob
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.CancelWorldGenerationJob.CancelWorldGenerationJob
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.CancelWorldGenerationJob.CancelWorldGenerationJob


-- | Cancels the specified export job.
module Amazonka.RobOMaker.CancelWorldExportJob

-- | <i>See:</i> <a>newCancelWorldExportJob</a> smart constructor.
data CancelWorldExportJob
CancelWorldExportJob' :: Text -> CancelWorldExportJob

-- | The Amazon Resource Name (arn) of the world export job to cancel.
[$sel:job:CancelWorldExportJob'] :: CancelWorldExportJob -> Text

-- | Create a value of <a>CancelWorldExportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:CancelWorldExportJob'</a>, <a>cancelWorldExportJob_job</a>
--   - The Amazon Resource Name (arn) of the world export job to cancel.
newCancelWorldExportJob :: Text -> CancelWorldExportJob

-- | The Amazon Resource Name (arn) of the world export job to cancel.
cancelWorldExportJob_job :: Lens' CancelWorldExportJob Text

-- | <i>See:</i> <a>newCancelWorldExportJobResponse</a> smart constructor.
data CancelWorldExportJobResponse
CancelWorldExportJobResponse' :: Int -> CancelWorldExportJobResponse

-- | The response's http status code.
[$sel:httpStatus:CancelWorldExportJobResponse'] :: CancelWorldExportJobResponse -> Int

-- | Create a value of <a>CancelWorldExportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelWorldExportJobResponse'</a>,
--   <a>cancelWorldExportJobResponse_httpStatus</a> - The response's http
--   status code.
newCancelWorldExportJobResponse :: Int -> CancelWorldExportJobResponse

-- | The response's http status code.
cancelWorldExportJobResponse_httpStatus :: Lens' CancelWorldExportJobResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.CancelWorldExportJob.CancelWorldExportJob
instance GHC.Show.Show Amazonka.RobOMaker.CancelWorldExportJob.CancelWorldExportJob
instance GHC.Read.Read Amazonka.RobOMaker.CancelWorldExportJob.CancelWorldExportJob
instance GHC.Classes.Eq Amazonka.RobOMaker.CancelWorldExportJob.CancelWorldExportJob
instance GHC.Generics.Generic Amazonka.RobOMaker.CancelWorldExportJob.CancelWorldExportJobResponse
instance GHC.Show.Show Amazonka.RobOMaker.CancelWorldExportJob.CancelWorldExportJobResponse
instance GHC.Read.Read Amazonka.RobOMaker.CancelWorldExportJob.CancelWorldExportJobResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.CancelWorldExportJob.CancelWorldExportJobResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.CancelWorldExportJob.CancelWorldExportJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CancelWorldExportJob.CancelWorldExportJobResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.CancelWorldExportJob.CancelWorldExportJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CancelWorldExportJob.CancelWorldExportJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.CancelWorldExportJob.CancelWorldExportJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.CancelWorldExportJob.CancelWorldExportJob
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.CancelWorldExportJob.CancelWorldExportJob
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.CancelWorldExportJob.CancelWorldExportJob


-- | Cancels a simulation job batch. When you cancel a simulation job
--   batch, you are also cancelling all of the active simulation jobs
--   created as part of the batch.
module Amazonka.RobOMaker.CancelSimulationJobBatch

-- | <i>See:</i> <a>newCancelSimulationJobBatch</a> smart constructor.
data CancelSimulationJobBatch
CancelSimulationJobBatch' :: Text -> CancelSimulationJobBatch

-- | The id of the batch to cancel.
[$sel:batch:CancelSimulationJobBatch'] :: CancelSimulationJobBatch -> Text

-- | Create a value of <a>CancelSimulationJobBatch</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batch:CancelSimulationJobBatch'</a>,
--   <a>cancelSimulationJobBatch_batch</a> - The id of the batch to cancel.
newCancelSimulationJobBatch :: Text -> CancelSimulationJobBatch

-- | The id of the batch to cancel.
cancelSimulationJobBatch_batch :: Lens' CancelSimulationJobBatch Text

-- | <i>See:</i> <a>newCancelSimulationJobBatchResponse</a> smart
--   constructor.
data CancelSimulationJobBatchResponse
CancelSimulationJobBatchResponse' :: Int -> CancelSimulationJobBatchResponse

-- | The response's http status code.
[$sel:httpStatus:CancelSimulationJobBatchResponse'] :: CancelSimulationJobBatchResponse -> Int

-- | Create a value of <a>CancelSimulationJobBatchResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelSimulationJobBatchResponse'</a>,
--   <a>cancelSimulationJobBatchResponse_httpStatus</a> - The response's
--   http status code.
newCancelSimulationJobBatchResponse :: Int -> CancelSimulationJobBatchResponse

-- | The response's http status code.
cancelSimulationJobBatchResponse_httpStatus :: Lens' CancelSimulationJobBatchResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.CancelSimulationJobBatch.CancelSimulationJobBatch
instance GHC.Show.Show Amazonka.RobOMaker.CancelSimulationJobBatch.CancelSimulationJobBatch
instance GHC.Read.Read Amazonka.RobOMaker.CancelSimulationJobBatch.CancelSimulationJobBatch
instance GHC.Classes.Eq Amazonka.RobOMaker.CancelSimulationJobBatch.CancelSimulationJobBatch
instance GHC.Generics.Generic Amazonka.RobOMaker.CancelSimulationJobBatch.CancelSimulationJobBatchResponse
instance GHC.Show.Show Amazonka.RobOMaker.CancelSimulationJobBatch.CancelSimulationJobBatchResponse
instance GHC.Read.Read Amazonka.RobOMaker.CancelSimulationJobBatch.CancelSimulationJobBatchResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.CancelSimulationJobBatch.CancelSimulationJobBatchResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.CancelSimulationJobBatch.CancelSimulationJobBatch
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CancelSimulationJobBatch.CancelSimulationJobBatchResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.CancelSimulationJobBatch.CancelSimulationJobBatch
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CancelSimulationJobBatch.CancelSimulationJobBatch
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.CancelSimulationJobBatch.CancelSimulationJobBatch
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.CancelSimulationJobBatch.CancelSimulationJobBatch
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.CancelSimulationJobBatch.CancelSimulationJobBatch
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.CancelSimulationJobBatch.CancelSimulationJobBatch


-- | Cancels the specified simulation job.
module Amazonka.RobOMaker.CancelSimulationJob

-- | <i>See:</i> <a>newCancelSimulationJob</a> smart constructor.
data CancelSimulationJob
CancelSimulationJob' :: Text -> CancelSimulationJob

-- | The simulation job ARN to cancel.
[$sel:job:CancelSimulationJob'] :: CancelSimulationJob -> Text

-- | Create a value of <a>CancelSimulationJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:CancelSimulationJob'</a>, <a>cancelSimulationJob_job</a> -
--   The simulation job ARN to cancel.
newCancelSimulationJob :: Text -> CancelSimulationJob

-- | The simulation job ARN to cancel.
cancelSimulationJob_job :: Lens' CancelSimulationJob Text

-- | <i>See:</i> <a>newCancelSimulationJobResponse</a> smart constructor.
data CancelSimulationJobResponse
CancelSimulationJobResponse' :: Int -> CancelSimulationJobResponse

-- | The response's http status code.
[$sel:httpStatus:CancelSimulationJobResponse'] :: CancelSimulationJobResponse -> Int

-- | Create a value of <a>CancelSimulationJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelSimulationJobResponse'</a>,
--   <a>cancelSimulationJobResponse_httpStatus</a> - The response's http
--   status code.
newCancelSimulationJobResponse :: Int -> CancelSimulationJobResponse

-- | The response's http status code.
cancelSimulationJobResponse_httpStatus :: Lens' CancelSimulationJobResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.CancelSimulationJob.CancelSimulationJob
instance GHC.Show.Show Amazonka.RobOMaker.CancelSimulationJob.CancelSimulationJob
instance GHC.Read.Read Amazonka.RobOMaker.CancelSimulationJob.CancelSimulationJob
instance GHC.Classes.Eq Amazonka.RobOMaker.CancelSimulationJob.CancelSimulationJob
instance GHC.Generics.Generic Amazonka.RobOMaker.CancelSimulationJob.CancelSimulationJobResponse
instance GHC.Show.Show Amazonka.RobOMaker.CancelSimulationJob.CancelSimulationJobResponse
instance GHC.Read.Read Amazonka.RobOMaker.CancelSimulationJob.CancelSimulationJobResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.CancelSimulationJob.CancelSimulationJobResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.CancelSimulationJob.CancelSimulationJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CancelSimulationJob.CancelSimulationJobResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.CancelSimulationJob.CancelSimulationJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CancelSimulationJob.CancelSimulationJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.CancelSimulationJob.CancelSimulationJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.CancelSimulationJob.CancelSimulationJob
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.CancelSimulationJob.CancelSimulationJob
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.CancelSimulationJob.CancelSimulationJob


-- | Cancels the specified deployment job.
module Amazonka.RobOMaker.CancelDeploymentJob

-- | <i>See:</i> <a>newCancelDeploymentJob</a> smart constructor.
data CancelDeploymentJob
CancelDeploymentJob' :: Text -> CancelDeploymentJob

-- | The deployment job ARN to cancel.
[$sel:job:CancelDeploymentJob'] :: CancelDeploymentJob -> Text

-- | Create a value of <a>CancelDeploymentJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:CancelDeploymentJob'</a>, <a>cancelDeploymentJob_job</a> -
--   The deployment job ARN to cancel.
newCancelDeploymentJob :: Text -> CancelDeploymentJob

-- | The deployment job ARN to cancel.
cancelDeploymentJob_job :: Lens' CancelDeploymentJob Text

-- | <i>See:</i> <a>newCancelDeploymentJobResponse</a> smart constructor.
data CancelDeploymentJobResponse
CancelDeploymentJobResponse' :: Int -> CancelDeploymentJobResponse

-- | The response's http status code.
[$sel:httpStatus:CancelDeploymentJobResponse'] :: CancelDeploymentJobResponse -> Int

-- | Create a value of <a>CancelDeploymentJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelDeploymentJobResponse'</a>,
--   <a>cancelDeploymentJobResponse_httpStatus</a> - The response's http
--   status code.
newCancelDeploymentJobResponse :: Int -> CancelDeploymentJobResponse

-- | The response's http status code.
cancelDeploymentJobResponse_httpStatus :: Lens' CancelDeploymentJobResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.CancelDeploymentJob.CancelDeploymentJob
instance GHC.Show.Show Amazonka.RobOMaker.CancelDeploymentJob.CancelDeploymentJob
instance GHC.Read.Read Amazonka.RobOMaker.CancelDeploymentJob.CancelDeploymentJob
instance GHC.Classes.Eq Amazonka.RobOMaker.CancelDeploymentJob.CancelDeploymentJob
instance GHC.Generics.Generic Amazonka.RobOMaker.CancelDeploymentJob.CancelDeploymentJobResponse
instance GHC.Show.Show Amazonka.RobOMaker.CancelDeploymentJob.CancelDeploymentJobResponse
instance GHC.Read.Read Amazonka.RobOMaker.CancelDeploymentJob.CancelDeploymentJobResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.CancelDeploymentJob.CancelDeploymentJobResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.CancelDeploymentJob.CancelDeploymentJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CancelDeploymentJob.CancelDeploymentJobResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.CancelDeploymentJob.CancelDeploymentJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.CancelDeploymentJob.CancelDeploymentJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.CancelDeploymentJob.CancelDeploymentJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.CancelDeploymentJob.CancelDeploymentJob
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.CancelDeploymentJob.CancelDeploymentJob
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.CancelDeploymentJob.CancelDeploymentJob


-- | Describes one or more simulation jobs.
module Amazonka.RobOMaker.BatchDescribeSimulationJob

-- | <i>See:</i> <a>newBatchDescribeSimulationJob</a> smart constructor.
data BatchDescribeSimulationJob
BatchDescribeSimulationJob' :: NonEmpty Text -> BatchDescribeSimulationJob

-- | A list of Amazon Resource Names (ARNs) of simulation jobs to describe.
[$sel:jobs:BatchDescribeSimulationJob'] :: BatchDescribeSimulationJob -> NonEmpty Text

-- | Create a value of <a>BatchDescribeSimulationJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobs:BatchDescribeSimulationJob'</a>,
--   <a>batchDescribeSimulationJob_jobs</a> - A list of Amazon Resource
--   Names (ARNs) of simulation jobs to describe.
newBatchDescribeSimulationJob :: NonEmpty Text -> BatchDescribeSimulationJob

-- | A list of Amazon Resource Names (ARNs) of simulation jobs to describe.
batchDescribeSimulationJob_jobs :: Lens' BatchDescribeSimulationJob (NonEmpty Text)

-- | <i>See:</i> <a>newBatchDescribeSimulationJobResponse</a> smart
--   constructor.
data BatchDescribeSimulationJobResponse
BatchDescribeSimulationJobResponse' :: Maybe (NonEmpty Text) -> Maybe [SimulationJob] -> Int -> BatchDescribeSimulationJobResponse

-- | A list of unprocessed simulation job Amazon Resource Names (ARNs).
[$sel:unprocessedJobs:BatchDescribeSimulationJobResponse'] :: BatchDescribeSimulationJobResponse -> Maybe (NonEmpty Text)

-- | A list of simulation jobs.
[$sel:jobs:BatchDescribeSimulationJobResponse'] :: BatchDescribeSimulationJobResponse -> Maybe [SimulationJob]

-- | The response's http status code.
[$sel:httpStatus:BatchDescribeSimulationJobResponse'] :: BatchDescribeSimulationJobResponse -> Int

-- | Create a value of <a>BatchDescribeSimulationJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedJobs:BatchDescribeSimulationJobResponse'</a>,
--   <a>batchDescribeSimulationJobResponse_unprocessedJobs</a> - A list of
--   unprocessed simulation job Amazon Resource Names (ARNs).
--   
--   <a>$sel:jobs:BatchDescribeSimulationJob'</a>,
--   <a>batchDescribeSimulationJobResponse_jobs</a> - A list of simulation
--   jobs.
--   
--   <a>$sel:httpStatus:BatchDescribeSimulationJobResponse'</a>,
--   <a>batchDescribeSimulationJobResponse_httpStatus</a> - The response's
--   http status code.
newBatchDescribeSimulationJobResponse :: Int -> BatchDescribeSimulationJobResponse

-- | A list of unprocessed simulation job Amazon Resource Names (ARNs).
batchDescribeSimulationJobResponse_unprocessedJobs :: Lens' BatchDescribeSimulationJobResponse (Maybe (NonEmpty Text))

-- | A list of simulation jobs.
batchDescribeSimulationJobResponse_jobs :: Lens' BatchDescribeSimulationJobResponse (Maybe [SimulationJob])

-- | The response's http status code.
batchDescribeSimulationJobResponse_httpStatus :: Lens' BatchDescribeSimulationJobResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.BatchDescribeSimulationJob.BatchDescribeSimulationJob
instance GHC.Show.Show Amazonka.RobOMaker.BatchDescribeSimulationJob.BatchDescribeSimulationJob
instance GHC.Read.Read Amazonka.RobOMaker.BatchDescribeSimulationJob.BatchDescribeSimulationJob
instance GHC.Classes.Eq Amazonka.RobOMaker.BatchDescribeSimulationJob.BatchDescribeSimulationJob
instance GHC.Generics.Generic Amazonka.RobOMaker.BatchDescribeSimulationJob.BatchDescribeSimulationJobResponse
instance GHC.Show.Show Amazonka.RobOMaker.BatchDescribeSimulationJob.BatchDescribeSimulationJobResponse
instance GHC.Read.Read Amazonka.RobOMaker.BatchDescribeSimulationJob.BatchDescribeSimulationJobResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.BatchDescribeSimulationJob.BatchDescribeSimulationJobResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.BatchDescribeSimulationJob.BatchDescribeSimulationJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.BatchDescribeSimulationJob.BatchDescribeSimulationJobResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.BatchDescribeSimulationJob.BatchDescribeSimulationJob
instance Control.DeepSeq.NFData Amazonka.RobOMaker.BatchDescribeSimulationJob.BatchDescribeSimulationJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.BatchDescribeSimulationJob.BatchDescribeSimulationJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.BatchDescribeSimulationJob.BatchDescribeSimulationJob
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.BatchDescribeSimulationJob.BatchDescribeSimulationJob
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.BatchDescribeSimulationJob.BatchDescribeSimulationJob


-- | Deletes one or more worlds in a batch operation.
module Amazonka.RobOMaker.BatchDeleteWorlds

-- | <i>See:</i> <a>newBatchDeleteWorlds</a> smart constructor.
data BatchDeleteWorlds
BatchDeleteWorlds' :: NonEmpty Text -> BatchDeleteWorlds

-- | A list of Amazon Resource Names (arns) that correspond to worlds to
--   delete.
[$sel:worlds:BatchDeleteWorlds'] :: BatchDeleteWorlds -> NonEmpty Text

-- | Create a value of <a>BatchDeleteWorlds</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:worlds:BatchDeleteWorlds'</a>, <a>batchDeleteWorlds_worlds</a>
--   - A list of Amazon Resource Names (arns) that correspond to worlds to
--   delete.
newBatchDeleteWorlds :: NonEmpty Text -> BatchDeleteWorlds

-- | A list of Amazon Resource Names (arns) that correspond to worlds to
--   delete.
batchDeleteWorlds_worlds :: Lens' BatchDeleteWorlds (NonEmpty Text)

-- | <i>See:</i> <a>newBatchDeleteWorldsResponse</a> smart constructor.
data BatchDeleteWorldsResponse
BatchDeleteWorldsResponse' :: Maybe (NonEmpty Text) -> Int -> BatchDeleteWorldsResponse

-- | A list of unprocessed worlds associated with the call. These worlds
--   were not deleted.
[$sel:unprocessedWorlds:BatchDeleteWorldsResponse'] :: BatchDeleteWorldsResponse -> Maybe (NonEmpty Text)

-- | The response's http status code.
[$sel:httpStatus:BatchDeleteWorldsResponse'] :: BatchDeleteWorldsResponse -> Int

-- | Create a value of <a>BatchDeleteWorldsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedWorlds:BatchDeleteWorldsResponse'</a>,
--   <a>batchDeleteWorldsResponse_unprocessedWorlds</a> - A list of
--   unprocessed worlds associated with the call. These worlds were not
--   deleted.
--   
--   <a>$sel:httpStatus:BatchDeleteWorldsResponse'</a>,
--   <a>batchDeleteWorldsResponse_httpStatus</a> - The response's http
--   status code.
newBatchDeleteWorldsResponse :: Int -> BatchDeleteWorldsResponse

-- | A list of unprocessed worlds associated with the call. These worlds
--   were not deleted.
batchDeleteWorldsResponse_unprocessedWorlds :: Lens' BatchDeleteWorldsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
batchDeleteWorldsResponse_httpStatus :: Lens' BatchDeleteWorldsResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.BatchDeleteWorlds.BatchDeleteWorlds
instance GHC.Show.Show Amazonka.RobOMaker.BatchDeleteWorlds.BatchDeleteWorlds
instance GHC.Read.Read Amazonka.RobOMaker.BatchDeleteWorlds.BatchDeleteWorlds
instance GHC.Classes.Eq Amazonka.RobOMaker.BatchDeleteWorlds.BatchDeleteWorlds
instance GHC.Generics.Generic Amazonka.RobOMaker.BatchDeleteWorlds.BatchDeleteWorldsResponse
instance GHC.Show.Show Amazonka.RobOMaker.BatchDeleteWorlds.BatchDeleteWorldsResponse
instance GHC.Read.Read Amazonka.RobOMaker.BatchDeleteWorlds.BatchDeleteWorldsResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.BatchDeleteWorlds.BatchDeleteWorldsResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.BatchDeleteWorlds.BatchDeleteWorlds
instance Control.DeepSeq.NFData Amazonka.RobOMaker.BatchDeleteWorlds.BatchDeleteWorldsResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.BatchDeleteWorlds.BatchDeleteWorlds
instance Control.DeepSeq.NFData Amazonka.RobOMaker.BatchDeleteWorlds.BatchDeleteWorlds
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.BatchDeleteWorlds.BatchDeleteWorlds
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.BatchDeleteWorlds.BatchDeleteWorlds
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.BatchDeleteWorlds.BatchDeleteWorlds
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.BatchDeleteWorlds.BatchDeleteWorlds


-- | Removes the specified tags from the specified AWS RoboMaker resource.
--   
--   To remove a tag, specify the tag key. To change the tag value of an
--   existing tag key, use <a>TagResource</a> .
module Amazonka.RobOMaker.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the AWS RoboMaker resource you are
--   removing tags.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | A map that contains tag keys and tag values that will be unattached
--   from the resource.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the AWS RoboMaker resource you are removing tags.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   map that contains tag keys and tag values that will be unattached from
--   the resource.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the AWS RoboMaker resource you are
--   removing tags.
untagResource_resourceArn :: Lens' UntagResource Text

-- | A map that contains tag keys and tag values that will be unattached
--   from the resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.RobOMaker.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.RobOMaker.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.RobOMaker.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.RobOMaker.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.RobOMaker.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.RobOMaker.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.RobOMaker.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.RobOMaker.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.UntagResource.UntagResource


-- | Updates a robot application.
module Amazonka.RobOMaker.UpdateRobotApplication

-- | <i>See:</i> <a>newUpdateRobotApplication</a> smart constructor.
data UpdateRobotApplication
UpdateRobotApplication' :: Maybe Text -> Maybe Environment -> Maybe [SourceConfig] -> Text -> RobotSoftwareSuite -> UpdateRobotApplication

-- | The revision id for the robot application.
[$sel:currentRevisionId:UpdateRobotApplication'] :: UpdateRobotApplication -> Maybe Text

-- | The object that contains the Docker image URI for your robot
--   application.
[$sel:environment:UpdateRobotApplication'] :: UpdateRobotApplication -> Maybe Environment

-- | The sources of the robot application.
[$sel:sources:UpdateRobotApplication'] :: UpdateRobotApplication -> Maybe [SourceConfig]

-- | The application information for the robot application.
[$sel:application:UpdateRobotApplication'] :: UpdateRobotApplication -> Text

-- | The robot software suite (ROS distribution) used by the robot
--   application.
[$sel:robotSoftwareSuite:UpdateRobotApplication'] :: UpdateRobotApplication -> RobotSoftwareSuite

-- | Create a value of <a>UpdateRobotApplication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currentRevisionId:UpdateRobotApplication'</a>,
--   <a>updateRobotApplication_currentRevisionId</a> - The revision id for
--   the robot application.
--   
--   <a>$sel:environment:UpdateRobotApplication'</a>,
--   <a>updateRobotApplication_environment</a> - The object that contains
--   the Docker image URI for your robot application.
--   
--   <a>$sel:sources:UpdateRobotApplication'</a>,
--   <a>updateRobotApplication_sources</a> - The sources of the robot
--   application.
--   
--   <a>$sel:application:UpdateRobotApplication'</a>,
--   <a>updateRobotApplication_application</a> - The application
--   information for the robot application.
--   
--   <a>$sel:robotSoftwareSuite:UpdateRobotApplication'</a>,
--   <a>updateRobotApplication_robotSoftwareSuite</a> - The robot software
--   suite (ROS distribution) used by the robot application.
newUpdateRobotApplication :: Text -> RobotSoftwareSuite -> UpdateRobotApplication

-- | The revision id for the robot application.
updateRobotApplication_currentRevisionId :: Lens' UpdateRobotApplication (Maybe Text)

-- | The object that contains the Docker image URI for your robot
--   application.
updateRobotApplication_environment :: Lens' UpdateRobotApplication (Maybe Environment)

-- | The sources of the robot application.
updateRobotApplication_sources :: Lens' UpdateRobotApplication (Maybe [SourceConfig])

-- | The application information for the robot application.
updateRobotApplication_application :: Lens' UpdateRobotApplication Text

-- | The robot software suite (ROS distribution) used by the robot
--   application.
updateRobotApplication_robotSoftwareSuite :: Lens' UpdateRobotApplication RobotSoftwareSuite

-- | <i>See:</i> <a>newUpdateRobotApplicationResponse</a> smart
--   constructor.
data UpdateRobotApplicationResponse
UpdateRobotApplicationResponse' :: Maybe POSIX -> Maybe Text -> Maybe Environment -> Maybe [Source] -> Maybe Text -> Maybe Text -> Maybe RobotSoftwareSuite -> Maybe Text -> Int -> UpdateRobotApplicationResponse

-- | The time, in milliseconds since the epoch, when the robot application
--   was last updated.
[$sel:lastUpdatedAt:UpdateRobotApplicationResponse'] :: UpdateRobotApplicationResponse -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the updated robot application.
[$sel:arn:UpdateRobotApplicationResponse'] :: UpdateRobotApplicationResponse -> Maybe Text

-- | The object that contains the Docker image URI for your robot
--   application.
[$sel:environment:UpdateRobotApplicationResponse'] :: UpdateRobotApplicationResponse -> Maybe Environment

-- | The sources of the robot application.
[$sel:sources:UpdateRobotApplicationResponse'] :: UpdateRobotApplicationResponse -> Maybe [Source]

-- | The name of the robot application.
[$sel:name:UpdateRobotApplicationResponse'] :: UpdateRobotApplicationResponse -> Maybe Text

-- | The version of the robot application.
[$sel:version:UpdateRobotApplicationResponse'] :: UpdateRobotApplicationResponse -> Maybe Text

-- | The robot software suite (ROS distribution) used by the robot
--   application.
[$sel:robotSoftwareSuite:UpdateRobotApplicationResponse'] :: UpdateRobotApplicationResponse -> Maybe RobotSoftwareSuite

-- | The revision id of the robot application.
[$sel:revisionId:UpdateRobotApplicationResponse'] :: UpdateRobotApplicationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateRobotApplicationResponse'] :: UpdateRobotApplicationResponse -> Int

-- | Create a value of <a>UpdateRobotApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:UpdateRobotApplicationResponse'</a>,
--   <a>updateRobotApplicationResponse_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the robot application was last
--   updated.
--   
--   <a>$sel:arn:UpdateRobotApplicationResponse'</a>,
--   <a>updateRobotApplicationResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the updated robot application.
--   
--   <a>$sel:environment:UpdateRobotApplication'</a>,
--   <a>updateRobotApplicationResponse_environment</a> - The object that
--   contains the Docker image URI for your robot application.
--   
--   <a>$sel:sources:UpdateRobotApplication'</a>,
--   <a>updateRobotApplicationResponse_sources</a> - The sources of the
--   robot application.
--   
--   <a>$sel:name:UpdateRobotApplicationResponse'</a>,
--   <a>updateRobotApplicationResponse_name</a> - The name of the robot
--   application.
--   
--   <a>$sel:version:UpdateRobotApplicationResponse'</a>,
--   <a>updateRobotApplicationResponse_version</a> - The version of the
--   robot application.
--   
--   <a>$sel:robotSoftwareSuite:UpdateRobotApplication'</a>,
--   <a>updateRobotApplicationResponse_robotSoftwareSuite</a> - The robot
--   software suite (ROS distribution) used by the robot application.
--   
--   <a>$sel:revisionId:UpdateRobotApplicationResponse'</a>,
--   <a>updateRobotApplicationResponse_revisionId</a> - The revision id of
--   the robot application.
--   
--   <a>$sel:httpStatus:UpdateRobotApplicationResponse'</a>,
--   <a>updateRobotApplicationResponse_httpStatus</a> - The response's http
--   status code.
newUpdateRobotApplicationResponse :: Int -> UpdateRobotApplicationResponse

-- | The time, in milliseconds since the epoch, when the robot application
--   was last updated.
updateRobotApplicationResponse_lastUpdatedAt :: Lens' UpdateRobotApplicationResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the updated robot application.
updateRobotApplicationResponse_arn :: Lens' UpdateRobotApplicationResponse (Maybe Text)

-- | The object that contains the Docker image URI for your robot
--   application.
updateRobotApplicationResponse_environment :: Lens' UpdateRobotApplicationResponse (Maybe Environment)

-- | The sources of the robot application.
updateRobotApplicationResponse_sources :: Lens' UpdateRobotApplicationResponse (Maybe [Source])

-- | The name of the robot application.
updateRobotApplicationResponse_name :: Lens' UpdateRobotApplicationResponse (Maybe Text)

-- | The version of the robot application.
updateRobotApplicationResponse_version :: Lens' UpdateRobotApplicationResponse (Maybe Text)

-- | The robot software suite (ROS distribution) used by the robot
--   application.
updateRobotApplicationResponse_robotSoftwareSuite :: Lens' UpdateRobotApplicationResponse (Maybe RobotSoftwareSuite)

-- | The revision id of the robot application.
updateRobotApplicationResponse_revisionId :: Lens' UpdateRobotApplicationResponse (Maybe Text)

-- | The response's http status code.
updateRobotApplicationResponse_httpStatus :: Lens' UpdateRobotApplicationResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.UpdateRobotApplication.UpdateRobotApplication
instance GHC.Show.Show Amazonka.RobOMaker.UpdateRobotApplication.UpdateRobotApplication
instance GHC.Read.Read Amazonka.RobOMaker.UpdateRobotApplication.UpdateRobotApplication
instance GHC.Classes.Eq Amazonka.RobOMaker.UpdateRobotApplication.UpdateRobotApplication
instance GHC.Generics.Generic Amazonka.RobOMaker.UpdateRobotApplication.UpdateRobotApplicationResponse
instance GHC.Show.Show Amazonka.RobOMaker.UpdateRobotApplication.UpdateRobotApplicationResponse
instance GHC.Read.Read Amazonka.RobOMaker.UpdateRobotApplication.UpdateRobotApplicationResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.UpdateRobotApplication.UpdateRobotApplicationResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.UpdateRobotApplication.UpdateRobotApplication
instance Control.DeepSeq.NFData Amazonka.RobOMaker.UpdateRobotApplication.UpdateRobotApplicationResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.UpdateRobotApplication.UpdateRobotApplication
instance Control.DeepSeq.NFData Amazonka.RobOMaker.UpdateRobotApplication.UpdateRobotApplication
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.UpdateRobotApplication.UpdateRobotApplication
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.UpdateRobotApplication.UpdateRobotApplication
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.UpdateRobotApplication.UpdateRobotApplication
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.UpdateRobotApplication.UpdateRobotApplication


-- | Updates a simulation application.
module Amazonka.RobOMaker.UpdateSimulationApplication

-- | <i>See:</i> <a>newUpdateSimulationApplication</a> smart constructor.
data UpdateSimulationApplication
UpdateSimulationApplication' :: Maybe RenderingEngine -> Maybe Text -> Maybe Environment -> Maybe [SourceConfig] -> Text -> SimulationSoftwareSuite -> RobotSoftwareSuite -> UpdateSimulationApplication

-- | The rendering engine for the simulation application.
[$sel:renderingEngine:UpdateSimulationApplication'] :: UpdateSimulationApplication -> Maybe RenderingEngine

-- | The revision id for the robot application.
[$sel:currentRevisionId:UpdateSimulationApplication'] :: UpdateSimulationApplication -> Maybe Text

-- | The object that contains the Docker image URI for your simulation
--   application.
[$sel:environment:UpdateSimulationApplication'] :: UpdateSimulationApplication -> Maybe Environment

-- | The sources of the simulation application.
[$sel:sources:UpdateSimulationApplication'] :: UpdateSimulationApplication -> Maybe [SourceConfig]

-- | The application information for the simulation application.
[$sel:application:UpdateSimulationApplication'] :: UpdateSimulationApplication -> Text

-- | The simulation software suite used by the simulation application.
[$sel:simulationSoftwareSuite:UpdateSimulationApplication'] :: UpdateSimulationApplication -> SimulationSoftwareSuite

-- | Information about the robot software suite (ROS distribution).
[$sel:robotSoftwareSuite:UpdateSimulationApplication'] :: UpdateSimulationApplication -> RobotSoftwareSuite

-- | Create a value of <a>UpdateSimulationApplication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:renderingEngine:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplication_renderingEngine</a> - The rendering
--   engine for the simulation application.
--   
--   <a>$sel:currentRevisionId:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplication_currentRevisionId</a> - The revision id
--   for the robot application.
--   
--   <a>$sel:environment:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplication_environment</a> - The object that
--   contains the Docker image URI for your simulation application.
--   
--   <a>$sel:sources:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplication_sources</a> - The sources of the
--   simulation application.
--   
--   <a>$sel:application:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplication_application</a> - The application
--   information for the simulation application.
--   
--   <a>$sel:simulationSoftwareSuite:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplication_simulationSoftwareSuite</a> - The
--   simulation software suite used by the simulation application.
--   
--   <a>$sel:robotSoftwareSuite:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplication_robotSoftwareSuite</a> - Information
--   about the robot software suite (ROS distribution).
newUpdateSimulationApplication :: Text -> SimulationSoftwareSuite -> RobotSoftwareSuite -> UpdateSimulationApplication

-- | The rendering engine for the simulation application.
updateSimulationApplication_renderingEngine :: Lens' UpdateSimulationApplication (Maybe RenderingEngine)

-- | The revision id for the robot application.
updateSimulationApplication_currentRevisionId :: Lens' UpdateSimulationApplication (Maybe Text)

-- | The object that contains the Docker image URI for your simulation
--   application.
updateSimulationApplication_environment :: Lens' UpdateSimulationApplication (Maybe Environment)

-- | The sources of the simulation application.
updateSimulationApplication_sources :: Lens' UpdateSimulationApplication (Maybe [SourceConfig])

-- | The application information for the simulation application.
updateSimulationApplication_application :: Lens' UpdateSimulationApplication Text

-- | The simulation software suite used by the simulation application.
updateSimulationApplication_simulationSoftwareSuite :: Lens' UpdateSimulationApplication SimulationSoftwareSuite

-- | Information about the robot software suite (ROS distribution).
updateSimulationApplication_robotSoftwareSuite :: Lens' UpdateSimulationApplication RobotSoftwareSuite

-- | <i>See:</i> <a>newUpdateSimulationApplicationResponse</a> smart
--   constructor.
data UpdateSimulationApplicationResponse
UpdateSimulationApplicationResponse' :: Maybe RenderingEngine -> Maybe POSIX -> Maybe Text -> Maybe Environment -> Maybe [Source] -> Maybe Text -> Maybe Text -> Maybe SimulationSoftwareSuite -> Maybe RobotSoftwareSuite -> Maybe Text -> Int -> UpdateSimulationApplicationResponse

-- | The rendering engine for the simulation application.
[$sel:renderingEngine:UpdateSimulationApplicationResponse'] :: UpdateSimulationApplicationResponse -> Maybe RenderingEngine

-- | The time, in milliseconds since the epoch, when the simulation
--   application was last updated.
[$sel:lastUpdatedAt:UpdateSimulationApplicationResponse'] :: UpdateSimulationApplicationResponse -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the updated simulation application.
[$sel:arn:UpdateSimulationApplicationResponse'] :: UpdateSimulationApplicationResponse -> Maybe Text

-- | The object that contains the Docker image URI used for your simulation
--   application.
[$sel:environment:UpdateSimulationApplicationResponse'] :: UpdateSimulationApplicationResponse -> Maybe Environment

-- | The sources of the simulation application.
[$sel:sources:UpdateSimulationApplicationResponse'] :: UpdateSimulationApplicationResponse -> Maybe [Source]

-- | The name of the simulation application.
[$sel:name:UpdateSimulationApplicationResponse'] :: UpdateSimulationApplicationResponse -> Maybe Text

-- | The version of the robot application.
[$sel:version:UpdateSimulationApplicationResponse'] :: UpdateSimulationApplicationResponse -> Maybe Text

-- | The simulation software suite used by the simulation application.
[$sel:simulationSoftwareSuite:UpdateSimulationApplicationResponse'] :: UpdateSimulationApplicationResponse -> Maybe SimulationSoftwareSuite

-- | Information about the robot software suite (ROS distribution).
[$sel:robotSoftwareSuite:UpdateSimulationApplicationResponse'] :: UpdateSimulationApplicationResponse -> Maybe RobotSoftwareSuite

-- | The revision id of the simulation application.
[$sel:revisionId:UpdateSimulationApplicationResponse'] :: UpdateSimulationApplicationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateSimulationApplicationResponse'] :: UpdateSimulationApplicationResponse -> Int

-- | Create a value of <a>UpdateSimulationApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:renderingEngine:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplicationResponse_renderingEngine</a> - The
--   rendering engine for the simulation application.
--   
--   <a>$sel:lastUpdatedAt:UpdateSimulationApplicationResponse'</a>,
--   <a>updateSimulationApplicationResponse_lastUpdatedAt</a> - The time,
--   in milliseconds since the epoch, when the simulation application was
--   last updated.
--   
--   <a>$sel:arn:UpdateSimulationApplicationResponse'</a>,
--   <a>updateSimulationApplicationResponse_arn</a> - The Amazon Resource
--   Name (ARN) of the updated simulation application.
--   
--   <a>$sel:environment:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplicationResponse_environment</a> - The object
--   that contains the Docker image URI used for your simulation
--   application.
--   
--   <a>$sel:sources:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplicationResponse_sources</a> - The sources of
--   the simulation application.
--   
--   <a>$sel:name:UpdateSimulationApplicationResponse'</a>,
--   <a>updateSimulationApplicationResponse_name</a> - The name of the
--   simulation application.
--   
--   <a>$sel:version:UpdateSimulationApplicationResponse'</a>,
--   <a>updateSimulationApplicationResponse_version</a> - The version of
--   the robot application.
--   
--   <a>$sel:simulationSoftwareSuite:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplicationResponse_simulationSoftwareSuite</a> -
--   The simulation software suite used by the simulation application.
--   
--   <a>$sel:robotSoftwareSuite:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplicationResponse_robotSoftwareSuite</a> -
--   Information about the robot software suite (ROS distribution).
--   
--   <a>$sel:revisionId:UpdateSimulationApplicationResponse'</a>,
--   <a>updateSimulationApplicationResponse_revisionId</a> - The revision
--   id of the simulation application.
--   
--   <a>$sel:httpStatus:UpdateSimulationApplicationResponse'</a>,
--   <a>updateSimulationApplicationResponse_httpStatus</a> - The response's
--   http status code.
newUpdateSimulationApplicationResponse :: Int -> UpdateSimulationApplicationResponse

-- | The rendering engine for the simulation application.
updateSimulationApplicationResponse_renderingEngine :: Lens' UpdateSimulationApplicationResponse (Maybe RenderingEngine)

-- | The time, in milliseconds since the epoch, when the simulation
--   application was last updated.
updateSimulationApplicationResponse_lastUpdatedAt :: Lens' UpdateSimulationApplicationResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the updated simulation application.
updateSimulationApplicationResponse_arn :: Lens' UpdateSimulationApplicationResponse (Maybe Text)

-- | The object that contains the Docker image URI used for your simulation
--   application.
updateSimulationApplicationResponse_environment :: Lens' UpdateSimulationApplicationResponse (Maybe Environment)

-- | The sources of the simulation application.
updateSimulationApplicationResponse_sources :: Lens' UpdateSimulationApplicationResponse (Maybe [Source])

-- | The name of the simulation application.
updateSimulationApplicationResponse_name :: Lens' UpdateSimulationApplicationResponse (Maybe Text)

-- | The version of the robot application.
updateSimulationApplicationResponse_version :: Lens' UpdateSimulationApplicationResponse (Maybe Text)

-- | The simulation software suite used by the simulation application.
updateSimulationApplicationResponse_simulationSoftwareSuite :: Lens' UpdateSimulationApplicationResponse (Maybe SimulationSoftwareSuite)

-- | Information about the robot software suite (ROS distribution).
updateSimulationApplicationResponse_robotSoftwareSuite :: Lens' UpdateSimulationApplicationResponse (Maybe RobotSoftwareSuite)

-- | The revision id of the simulation application.
updateSimulationApplicationResponse_revisionId :: Lens' UpdateSimulationApplicationResponse (Maybe Text)

-- | The response's http status code.
updateSimulationApplicationResponse_httpStatus :: Lens' UpdateSimulationApplicationResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.UpdateSimulationApplication.UpdateSimulationApplication
instance GHC.Show.Show Amazonka.RobOMaker.UpdateSimulationApplication.UpdateSimulationApplication
instance GHC.Read.Read Amazonka.RobOMaker.UpdateSimulationApplication.UpdateSimulationApplication
instance GHC.Classes.Eq Amazonka.RobOMaker.UpdateSimulationApplication.UpdateSimulationApplication
instance GHC.Generics.Generic Amazonka.RobOMaker.UpdateSimulationApplication.UpdateSimulationApplicationResponse
instance GHC.Show.Show Amazonka.RobOMaker.UpdateSimulationApplication.UpdateSimulationApplicationResponse
instance GHC.Read.Read Amazonka.RobOMaker.UpdateSimulationApplication.UpdateSimulationApplicationResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.UpdateSimulationApplication.UpdateSimulationApplicationResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.UpdateSimulationApplication.UpdateSimulationApplication
instance Control.DeepSeq.NFData Amazonka.RobOMaker.UpdateSimulationApplication.UpdateSimulationApplicationResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.UpdateSimulationApplication.UpdateSimulationApplication
instance Control.DeepSeq.NFData Amazonka.RobOMaker.UpdateSimulationApplication.UpdateSimulationApplication
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.UpdateSimulationApplication.UpdateSimulationApplication
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.UpdateSimulationApplication.UpdateSimulationApplication
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.UpdateSimulationApplication.UpdateSimulationApplication
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.UpdateSimulationApplication.UpdateSimulationApplication


-- | Updates a world template.
module Amazonka.RobOMaker.UpdateWorldTemplate

-- | <i>See:</i> <a>newUpdateWorldTemplate</a> smart constructor.
data UpdateWorldTemplate
UpdateWorldTemplate' :: Maybe Text -> Maybe TemplateLocation -> Maybe Text -> Text -> UpdateWorldTemplate

-- | The name of the template.
[$sel:name:UpdateWorldTemplate'] :: UpdateWorldTemplate -> Maybe Text

-- | The location of the world template.
[$sel:templateLocation:UpdateWorldTemplate'] :: UpdateWorldTemplate -> Maybe TemplateLocation

-- | The world template body.
[$sel:templateBody:UpdateWorldTemplate'] :: UpdateWorldTemplate -> Maybe Text

-- | The Amazon Resource Name (arn) of the world template to update.
[$sel:template:UpdateWorldTemplate'] :: UpdateWorldTemplate -> Text

-- | Create a value of <a>UpdateWorldTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateWorldTemplate'</a>, <a>updateWorldTemplate_name</a>
--   - The name of the template.
--   
--   <a>$sel:templateLocation:UpdateWorldTemplate'</a>,
--   <a>updateWorldTemplate_templateLocation</a> - The location of the
--   world template.
--   
--   <a>$sel:templateBody:UpdateWorldTemplate'</a>,
--   <a>updateWorldTemplate_templateBody</a> - The world template body.
--   
--   <a>$sel:template:UpdateWorldTemplate'</a>,
--   <a>updateWorldTemplate_template</a> - The Amazon Resource Name (arn)
--   of the world template to update.
newUpdateWorldTemplate :: Text -> UpdateWorldTemplate

-- | The name of the template.
updateWorldTemplate_name :: Lens' UpdateWorldTemplate (Maybe Text)

-- | The location of the world template.
updateWorldTemplate_templateLocation :: Lens' UpdateWorldTemplate (Maybe TemplateLocation)

-- | The world template body.
updateWorldTemplate_templateBody :: Lens' UpdateWorldTemplate (Maybe Text)

-- | The Amazon Resource Name (arn) of the world template to update.
updateWorldTemplate_template :: Lens' UpdateWorldTemplate Text

-- | <i>See:</i> <a>newUpdateWorldTemplateResponse</a> smart constructor.
data UpdateWorldTemplateResponse
UpdateWorldTemplateResponse' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Int -> UpdateWorldTemplateResponse

-- | The time, in milliseconds since the epoch, when the world template was
--   last updated.
[$sel:lastUpdatedAt:UpdateWorldTemplateResponse'] :: UpdateWorldTemplateResponse -> Maybe POSIX

-- | The Amazon Resource Name (arn) of the world template.
[$sel:arn:UpdateWorldTemplateResponse'] :: UpdateWorldTemplateResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the world template was
--   created.
[$sel:createdAt:UpdateWorldTemplateResponse'] :: UpdateWorldTemplateResponse -> Maybe POSIX

-- | The name of the world template.
[$sel:name:UpdateWorldTemplateResponse'] :: UpdateWorldTemplateResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateWorldTemplateResponse'] :: UpdateWorldTemplateResponse -> Int

-- | Create a value of <a>UpdateWorldTemplateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:UpdateWorldTemplateResponse'</a>,
--   <a>updateWorldTemplateResponse_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the world template was last
--   updated.
--   
--   <a>$sel:arn:UpdateWorldTemplateResponse'</a>,
--   <a>updateWorldTemplateResponse_arn</a> - The Amazon Resource Name
--   (arn) of the world template.
--   
--   <a>$sel:createdAt:UpdateWorldTemplateResponse'</a>,
--   <a>updateWorldTemplateResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the world template was created.
--   
--   <a>$sel:name:UpdateWorldTemplate'</a>,
--   <a>updateWorldTemplateResponse_name</a> - The name of the world
--   template.
--   
--   <a>$sel:httpStatus:UpdateWorldTemplateResponse'</a>,
--   <a>updateWorldTemplateResponse_httpStatus</a> - The response's http
--   status code.
newUpdateWorldTemplateResponse :: Int -> UpdateWorldTemplateResponse

-- | The time, in milliseconds since the epoch, when the world template was
--   last updated.
updateWorldTemplateResponse_lastUpdatedAt :: Lens' UpdateWorldTemplateResponse (Maybe UTCTime)

-- | The Amazon Resource Name (arn) of the world template.
updateWorldTemplateResponse_arn :: Lens' UpdateWorldTemplateResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world template was
--   created.
updateWorldTemplateResponse_createdAt :: Lens' UpdateWorldTemplateResponse (Maybe UTCTime)

-- | The name of the world template.
updateWorldTemplateResponse_name :: Lens' UpdateWorldTemplateResponse (Maybe Text)

-- | The response's http status code.
updateWorldTemplateResponse_httpStatus :: Lens' UpdateWorldTemplateResponse Int
instance GHC.Generics.Generic Amazonka.RobOMaker.UpdateWorldTemplate.UpdateWorldTemplate
instance GHC.Show.Show Amazonka.RobOMaker.UpdateWorldTemplate.UpdateWorldTemplate
instance GHC.Read.Read Amazonka.RobOMaker.UpdateWorldTemplate.UpdateWorldTemplate
instance GHC.Classes.Eq Amazonka.RobOMaker.UpdateWorldTemplate.UpdateWorldTemplate
instance GHC.Generics.Generic Amazonka.RobOMaker.UpdateWorldTemplate.UpdateWorldTemplateResponse
instance GHC.Show.Show Amazonka.RobOMaker.UpdateWorldTemplate.UpdateWorldTemplateResponse
instance GHC.Read.Read Amazonka.RobOMaker.UpdateWorldTemplate.UpdateWorldTemplateResponse
instance GHC.Classes.Eq Amazonka.RobOMaker.UpdateWorldTemplate.UpdateWorldTemplateResponse
instance Amazonka.Types.AWSRequest Amazonka.RobOMaker.UpdateWorldTemplate.UpdateWorldTemplate
instance Control.DeepSeq.NFData Amazonka.RobOMaker.UpdateWorldTemplate.UpdateWorldTemplateResponse
instance Data.Hashable.Class.Hashable Amazonka.RobOMaker.UpdateWorldTemplate.UpdateWorldTemplate
instance Control.DeepSeq.NFData Amazonka.RobOMaker.UpdateWorldTemplate.UpdateWorldTemplate
instance Amazonka.Data.Headers.ToHeaders Amazonka.RobOMaker.UpdateWorldTemplate.UpdateWorldTemplate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.RobOMaker.UpdateWorldTemplate.UpdateWorldTemplate
instance Amazonka.Data.Path.ToPath Amazonka.RobOMaker.UpdateWorldTemplate.UpdateWorldTemplate
instance Amazonka.Data.Query.ToQuery Amazonka.RobOMaker.UpdateWorldTemplate.UpdateWorldTemplate


module Amazonka.RobOMaker.Lens

-- | The Amazon Resource Name (arn) of the world export job to describe.
describeWorldExportJob_job :: Lens' DescribeWorldExportJob Text

-- | The reason why the world export job failed.
describeWorldExportJobResponse_failureReason :: Lens' DescribeWorldExportJobResponse (Maybe Text)

-- | The status of the world export job.
--   
--   <ul>
--   <li><i>Pending</i> The world export job request is pending.</li>
--   <li><i>Running</i> The world export job is running.</li>
--   <li><i>Completed</i> The world export job completed.</li>
--   <li><i>Failed</i> The world export job failed. See
--   <tt>failureCode</tt> and <tt>failureReason</tt> for more
--   information.</li>
--   <li><i>Canceled</i> The world export job was cancelled.</li>
--   <li><i>Canceling</i> The world export job is being cancelled.</li>
--   </ul>
describeWorldExportJobResponse_status :: Lens' DescribeWorldExportJobResponse (Maybe WorldExportJobStatus)

-- | The Amazon Resource Name (ARN) of the world export job.
describeWorldExportJobResponse_arn :: Lens' DescribeWorldExportJobResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world export job
--   was created.
describeWorldExportJobResponse_createdAt :: Lens' DescribeWorldExportJobResponse (Maybe UTCTime)

-- | The failure code of the world export job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
describeWorldExportJobResponse_failureCode :: Lens' DescribeWorldExportJobResponse (Maybe WorldExportJobErrorCode)

-- | Undocumented member.
describeWorldExportJobResponse_outputLocation :: Lens' DescribeWorldExportJobResponse (Maybe OutputLocation)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
describeWorldExportJobResponse_clientRequestToken :: Lens' DescribeWorldExportJobResponse (Maybe Text)

-- | The IAM role that the world export process uses to access the Amazon
--   S3 bucket and put the export.
describeWorldExportJobResponse_iamRole :: Lens' DescribeWorldExportJobResponse (Maybe Text)

-- | A list of Amazon Resource Names (arns) that correspond to worlds to be
--   exported.
describeWorldExportJobResponse_worlds :: Lens' DescribeWorldExportJobResponse (Maybe (NonEmpty Text))

-- | A map that contains tag keys and tag values that are attached to the
--   world export job.
describeWorldExportJobResponse_tags :: Lens' DescribeWorldExportJobResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeWorldExportJobResponse_httpStatus :: Lens' DescribeWorldExportJobResponse Int

-- | A list of Amazon Resource Names (arns) that correspond to worlds to
--   delete.
batchDeleteWorlds_worlds :: Lens' BatchDeleteWorlds (NonEmpty Text)

-- | A list of unprocessed worlds associated with the call. These worlds
--   were not deleted.
batchDeleteWorldsResponse_unprocessedWorlds :: Lens' BatchDeleteWorldsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
batchDeleteWorldsResponse_httpStatus :: Lens' BatchDeleteWorldsResponse Int

-- | The Amazon Resource Name (arn) of the world template.
getWorldTemplateBody_template :: Lens' GetWorldTemplateBody (Maybe Text)

-- | The Amazon Resource Name (arn) of the world generator job.
getWorldTemplateBody_generationJob :: Lens' GetWorldTemplateBody (Maybe Text)

-- | The world template body.
getWorldTemplateBodyResponse_templateBody :: Lens' GetWorldTemplateBodyResponse (Maybe Text)

-- | The response's http status code.
getWorldTemplateBodyResponse_httpStatus :: Lens' GetWorldTemplateBodyResponse Int

-- | The Amazon Resource Name (ARN) of the fleet.
deleteFleet_fleet :: Lens' DeleteFleet Text

-- | The response's http status code.
deleteFleetResponse_httpStatus :: Lens' DeleteFleetResponse Int

-- | A map that contains tag keys and tag values that are attached to the
--   generated worlds.
createWorldGenerationJob_worldTags :: Lens' CreateWorldGenerationJob (Maybe (HashMap Text Text))

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createWorldGenerationJob_clientRequestToken :: Lens' CreateWorldGenerationJob (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   world generator job.
createWorldGenerationJob_tags :: Lens' CreateWorldGenerationJob (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (arn) of the world template describing the
--   worlds you want to create.
createWorldGenerationJob_template :: Lens' CreateWorldGenerationJob Text

-- | Information about the world count.
createWorldGenerationJob_worldCount :: Lens' CreateWorldGenerationJob WorldCount

-- | The status of the world generator job.
--   
--   <ul>
--   <li><i>Pending</i> The world generator job request is pending.</li>
--   <li><i>Running</i> The world generator job is running.</li>
--   <li><i>Completed</i> The world generator job completed.</li>
--   <li><i>Failed</i> The world generator job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>PartialFailed</i> Some worlds did not generate.</li>
--   <li><i>Canceled</i> The world generator job was cancelled.</li>
--   <li><i>Canceling</i> The world generator job is being cancelled.</li>
--   </ul>
createWorldGenerationJobResponse_status :: Lens' CreateWorldGenerationJobResponse (Maybe WorldGenerationJobStatus)

-- | The Amazon Resource Name (ARN) of the world generator job.
createWorldGenerationJobResponse_arn :: Lens' CreateWorldGenerationJobResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world generator
--   job was created.
createWorldGenerationJobResponse_createdAt :: Lens' CreateWorldGenerationJobResponse (Maybe UTCTime)

-- | The failure code of the world generator job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
createWorldGenerationJobResponse_failureCode :: Lens' CreateWorldGenerationJobResponse (Maybe WorldGenerationJobErrorCode)

-- | Information about the world count.
createWorldGenerationJobResponse_worldCount :: Lens' CreateWorldGenerationJobResponse (Maybe WorldCount)

-- | The Amazon Resource Name (arn) of the world template.
createWorldGenerationJobResponse_template :: Lens' CreateWorldGenerationJobResponse (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   generated worlds.
createWorldGenerationJobResponse_worldTags :: Lens' CreateWorldGenerationJobResponse (Maybe (HashMap Text Text))

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createWorldGenerationJobResponse_clientRequestToken :: Lens' CreateWorldGenerationJobResponse (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   world generator job.
createWorldGenerationJobResponse_tags :: Lens' CreateWorldGenerationJobResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createWorldGenerationJobResponse_httpStatus :: Lens' CreateWorldGenerationJobResponse Int

-- | The version qualifier of the robot application.
listRobotApplications_versionQualifier :: Lens' ListRobotApplications (Maybe Text)

-- | Optional filters to limit results.
--   
--   The filter name <tt>name</tt> is supported. When filtering, you must
--   use the complete value of the filtered item. You can use up to three
--   filters.
listRobotApplications_filters :: Lens' ListRobotApplications (Maybe (NonEmpty Filter))

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListRobotApplications</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
listRobotApplications_nextToken :: Lens' ListRobotApplications (Maybe Text)

-- | When this parameter is used, <tt>ListRobotApplications</tt> only
--   returns <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListRobotApplications</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListRobotApplications</tt> returns up
--   to 100 results and a <tt>nextToken</tt> value if applicable.
listRobotApplications_maxResults :: Lens' ListRobotApplications (Maybe Int)

-- | A list of robot application summaries that meet the criteria of the
--   request.
listRobotApplicationsResponse_robotApplicationSummaries :: Lens' ListRobotApplicationsResponse (Maybe [RobotApplicationSummary])

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListRobotApplications</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
listRobotApplicationsResponse_nextToken :: Lens' ListRobotApplicationsResponse (Maybe Text)

-- | The response's http status code.
listRobotApplicationsResponse_httpStatus :: Lens' ListRobotApplicationsResponse Int

-- | The revision id for the robot application.
updateRobotApplication_currentRevisionId :: Lens' UpdateRobotApplication (Maybe Text)

-- | The object that contains the Docker image URI for your robot
--   application.
updateRobotApplication_environment :: Lens' UpdateRobotApplication (Maybe Environment)

-- | The sources of the robot application.
updateRobotApplication_sources :: Lens' UpdateRobotApplication (Maybe [SourceConfig])

-- | The application information for the robot application.
updateRobotApplication_application :: Lens' UpdateRobotApplication Text

-- | The robot software suite (ROS distribution) used by the robot
--   application.
updateRobotApplication_robotSoftwareSuite :: Lens' UpdateRobotApplication RobotSoftwareSuite

-- | The time, in milliseconds since the epoch, when the robot application
--   was last updated.
updateRobotApplicationResponse_lastUpdatedAt :: Lens' UpdateRobotApplicationResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the updated robot application.
updateRobotApplicationResponse_arn :: Lens' UpdateRobotApplicationResponse (Maybe Text)

-- | The object that contains the Docker image URI for your robot
--   application.
updateRobotApplicationResponse_environment :: Lens' UpdateRobotApplicationResponse (Maybe Environment)

-- | The sources of the robot application.
updateRobotApplicationResponse_sources :: Lens' UpdateRobotApplicationResponse (Maybe [Source])

-- | The name of the robot application.
updateRobotApplicationResponse_name :: Lens' UpdateRobotApplicationResponse (Maybe Text)

-- | The version of the robot application.
updateRobotApplicationResponse_version :: Lens' UpdateRobotApplicationResponse (Maybe Text)

-- | The robot software suite (ROS distribution) used by the robot
--   application.
updateRobotApplicationResponse_robotSoftwareSuite :: Lens' UpdateRobotApplicationResponse (Maybe RobotSoftwareSuite)

-- | The revision id of the robot application.
updateRobotApplicationResponse_revisionId :: Lens' UpdateRobotApplicationResponse (Maybe Text)

-- | The response's http status code.
updateRobotApplicationResponse_httpStatus :: Lens' UpdateRobotApplicationResponse Int

-- | The version of the robot application to delete.
deleteRobotApplication_applicationVersion :: Lens' DeleteRobotApplication (Maybe Text)

-- | The Amazon Resource Name (ARN) of the the robot application.
deleteRobotApplication_application :: Lens' DeleteRobotApplication Text

-- | The response's http status code.
deleteRobotApplicationResponse_httpStatus :: Lens' DeleteRobotApplicationResponse Int

-- | The current revision id for the simulation application. If you provide
--   a value and it matches the latest revision ID, a new version will be
--   created.
createSimulationApplicationVersion_currentRevisionId :: Lens' CreateSimulationApplicationVersion (Maybe Text)

-- | The Amazon S3 eTag identifier for the zip file bundle that you use to
--   create the simulation application.
createSimulationApplicationVersion_s3Etags :: Lens' CreateSimulationApplicationVersion (Maybe [Text])

-- | The SHA256 digest used to identify the Docker image URI used to
--   created the simulation application.
createSimulationApplicationVersion_imageDigest :: Lens' CreateSimulationApplicationVersion (Maybe Text)

-- | The application information for the simulation application.
createSimulationApplicationVersion_application :: Lens' CreateSimulationApplicationVersion Text

-- | The rendering engine for the simulation application.
createSimulationApplicationVersionResponse_renderingEngine :: Lens' CreateSimulationApplicationVersionResponse (Maybe RenderingEngine)

-- | The time, in milliseconds since the epoch, when the simulation
--   application was last updated.
createSimulationApplicationVersionResponse_lastUpdatedAt :: Lens' CreateSimulationApplicationVersionResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the simulation application.
createSimulationApplicationVersionResponse_arn :: Lens' CreateSimulationApplicationVersionResponse (Maybe Text)

-- | The object that contains the Docker image URI used to create the
--   simulation application.
createSimulationApplicationVersionResponse_environment :: Lens' CreateSimulationApplicationVersionResponse (Maybe Environment)

-- | The sources of the simulation application.
createSimulationApplicationVersionResponse_sources :: Lens' CreateSimulationApplicationVersionResponse (Maybe [Source])

-- | The name of the simulation application.
createSimulationApplicationVersionResponse_name :: Lens' CreateSimulationApplicationVersionResponse (Maybe Text)

-- | The version of the simulation application.
createSimulationApplicationVersionResponse_version :: Lens' CreateSimulationApplicationVersionResponse (Maybe Text)

-- | The simulation software suite used by the simulation application.
createSimulationApplicationVersionResponse_simulationSoftwareSuite :: Lens' CreateSimulationApplicationVersionResponse (Maybe SimulationSoftwareSuite)

-- | Information about the robot software suite (ROS distribution).
createSimulationApplicationVersionResponse_robotSoftwareSuite :: Lens' CreateSimulationApplicationVersionResponse (Maybe RobotSoftwareSuite)

-- | The revision ID of the simulation application.
createSimulationApplicationVersionResponse_revisionId :: Lens' CreateSimulationApplicationVersionResponse (Maybe Text)

-- | The response's http status code.
createSimulationApplicationVersionResponse_httpStatus :: Lens' CreateSimulationApplicationVersionResponse Int

-- | Optional filters to limit results.
--   
--   The filter names <tt>status</tt> and <tt>fleetName</tt> are supported.
--   When filtering, you must use the complete value of the filtered item.
--   You can use up to three filters, but they must be for the same named
--   item. For example, if you are looking for items with the status
--   <tt>InProgress</tt> or the status <tt>Pending</tt>.
listDeploymentJobs_filters :: Lens' ListDeploymentJobs (Maybe (NonEmpty Filter))

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListDeploymentJobs</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listDeploymentJobs_nextToken :: Lens' ListDeploymentJobs (Maybe Text)

-- | When this parameter is used, <tt>ListDeploymentJobs</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListDeploymentJobs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 200. If this
--   parameter is not used, then <tt>ListDeploymentJobs</tt> returns up to
--   200 results and a <tt>nextToken</tt> value if applicable.
listDeploymentJobs_maxResults :: Lens' ListDeploymentJobs (Maybe Int)

-- | A list of deployment jobs that meet the criteria of the request.
listDeploymentJobsResponse_deploymentJobs :: Lens' ListDeploymentJobsResponse (Maybe [DeploymentJob])

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListDeploymentJobs</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listDeploymentJobsResponse_nextToken :: Lens' ListDeploymentJobsResponse (Maybe Text)

-- | The response's http status code.
listDeploymentJobsResponse_httpStatus :: Lens' ListDeploymentJobsResponse Int

-- | The Amazon Resource Name (arn) of the world you want to describe.
describeWorld_world :: Lens' DescribeWorld Text

-- | Returns the JSON formatted string that describes the contents of your
--   world.
describeWorldResponse_worldDescriptionBody :: Lens' DescribeWorldResponse (Maybe Text)

-- | The Amazon Resource Name (arn) of the world.
describeWorldResponse_arn :: Lens' DescribeWorldResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world was created.
describeWorldResponse_createdAt :: Lens' DescribeWorldResponse (Maybe UTCTime)

-- | The world template.
describeWorldResponse_template :: Lens' DescribeWorldResponse (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   world.
describeWorldResponse_tags :: Lens' DescribeWorldResponse (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (arn) of the world generation job that
--   generated the world.
describeWorldResponse_generationJob :: Lens' DescribeWorldResponse (Maybe Text)

-- | The response's http status code.
describeWorldResponse_httpStatus :: Lens' DescribeWorldResponse Int

-- | The simulation job ARN to cancel.
cancelSimulationJob_job :: Lens' CancelSimulationJob Text

-- | The response's http status code.
cancelSimulationJobResponse_httpStatus :: Lens' CancelSimulationJobResponse Int

-- | The object that contains that URI of the Docker image that you use for
--   your robot application.
createRobotApplication_environment :: Lens' CreateRobotApplication (Maybe Environment)

-- | The sources of the robot application.
createRobotApplication_sources :: Lens' CreateRobotApplication (Maybe [SourceConfig])

-- | A map that contains tag keys and tag values that are attached to the
--   robot application.
createRobotApplication_tags :: Lens' CreateRobotApplication (Maybe (HashMap Text Text))

-- | The name of the robot application.
createRobotApplication_name :: Lens' CreateRobotApplication Text

-- | The robot software suite (ROS distribuition) used by the robot
--   application.
createRobotApplication_robotSoftwareSuite :: Lens' CreateRobotApplication RobotSoftwareSuite

-- | The time, in milliseconds since the epoch, when the robot application
--   was last updated.
createRobotApplicationResponse_lastUpdatedAt :: Lens' CreateRobotApplicationResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the robot application.
createRobotApplicationResponse_arn :: Lens' CreateRobotApplicationResponse (Maybe Text)

-- | An object that contains the Docker image URI used to a create your
--   robot application.
createRobotApplicationResponse_environment :: Lens' CreateRobotApplicationResponse (Maybe Environment)

-- | The sources of the robot application.
createRobotApplicationResponse_sources :: Lens' CreateRobotApplicationResponse (Maybe [Source])

-- | The name of the robot application.
createRobotApplicationResponse_name :: Lens' CreateRobotApplicationResponse (Maybe Text)

-- | The version of the robot application.
createRobotApplicationResponse_version :: Lens' CreateRobotApplicationResponse (Maybe Text)

-- | The robot software suite (ROS distribution) used by the robot
--   application.
createRobotApplicationResponse_robotSoftwareSuite :: Lens' CreateRobotApplicationResponse (Maybe RobotSoftwareSuite)

-- | The revision id of the robot application.
createRobotApplicationResponse_revisionId :: Lens' CreateRobotApplicationResponse (Maybe Text)

-- | The list of all tags added to the robot application.
createRobotApplicationResponse_tags :: Lens' CreateRobotApplicationResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createRobotApplicationResponse_httpStatus :: Lens' CreateRobotApplicationResponse Int

-- | The AWS RoboMaker Amazon Resource Name (ARN) with tags to be listed.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The list of all tags added to the specified resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The requested deployment configuration.
createDeploymentJob_deploymentConfig :: Lens' CreateDeploymentJob (Maybe DeploymentConfig)

-- | A map that contains tag keys and tag values that are attached to the
--   deployment job.
createDeploymentJob_tags :: Lens' CreateDeploymentJob (Maybe (HashMap Text Text))

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createDeploymentJob_clientRequestToken :: Lens' CreateDeploymentJob Text

-- | The Amazon Resource Name (ARN) of the fleet to deploy.
createDeploymentJob_fleet :: Lens' CreateDeploymentJob Text

-- | The deployment application configuration.
createDeploymentJob_deploymentApplicationConfigs :: Lens' CreateDeploymentJob (NonEmpty DeploymentApplicationConfig)

-- | The failure reason of the deployment job if it failed.
createDeploymentJobResponse_failureReason :: Lens' CreateDeploymentJobResponse (Maybe Text)

-- | The status of the deployment job.
createDeploymentJobResponse_status :: Lens' CreateDeploymentJobResponse (Maybe DeploymentStatus)

-- | The deployment application configuration.
createDeploymentJobResponse_deploymentApplicationConfigs :: Lens' CreateDeploymentJobResponse (Maybe (NonEmpty DeploymentApplicationConfig))

-- | The Amazon Resource Name (ARN) of the deployment job.
createDeploymentJobResponse_arn :: Lens' CreateDeploymentJobResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the fleet was created.
createDeploymentJobResponse_createdAt :: Lens' CreateDeploymentJobResponse (Maybe UTCTime)

-- | The failure code of the simulation job if it failed:
--   
--   <ul>
--   <li><i>BadPermissionError</i> AWS Greengrass requires a service-level
--   role permission to access other services. The role must include the
--   <a>AWSGreengrassResourceAccessRolePolicy managed policy</a>.</li>
--   <li><i>ExtractingBundleFailure</i> The robot application could not be
--   extracted from the bundle.</li>
--   <li><i>FailureThresholdBreached</i> The percentage of robots that
--   could not be updated exceeded the percentage set for the
--   deployment.</li>
--   <li><i>GreengrassDeploymentFailed</i> The robot application could not
--   be deployed to the robot.</li>
--   <li><i>GreengrassGroupVersionDoesNotExist</i> The AWS Greengrass group
--   or version associated with a robot is missing.</li>
--   <li><i>InternalServerError</i> An internal error has occurred. Retry
--   your request, but if the problem persists, contact us with
--   details.</li>
--   <li><i>MissingRobotApplicationArchitecture</i> The robot application
--   does not have a source that matches the architecture of the
--   robot.</li>
--   <li><i>MissingRobotDeploymentResource</i> One or more of the resources
--   specified for the robot application are missing. For example, does the
--   robot application have the correct launch package and launch
--   file?</li>
--   <li><i>PostLaunchFileFailure</i> The post-launch script failed.</li>
--   <li><i>PreLaunchFileFailure</i> The pre-launch script failed.</li>
--   <li><i>ResourceNotFound</i> One or more deployment resources are
--   missing. For example, do robot application source bundles still
--   exist?</li>
--   <li><i>RobotDeploymentNoResponse</i> There is no response from the
--   robot. It might not be powered on or connected to the internet.</li>
--   </ul>
createDeploymentJobResponse_failureCode :: Lens' CreateDeploymentJobResponse (Maybe DeploymentJobErrorCode)

-- | The deployment configuration.
createDeploymentJobResponse_deploymentConfig :: Lens' CreateDeploymentJobResponse (Maybe DeploymentConfig)

-- | The target fleet for the deployment job.
createDeploymentJobResponse_fleet :: Lens' CreateDeploymentJobResponse (Maybe Text)

-- | The list of all tags added to the deployment job.
createDeploymentJobResponse_tags :: Lens' CreateDeploymentJobResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createDeploymentJobResponse_httpStatus :: Lens' CreateDeploymentJobResponse Int

-- | The Amazon Resource Name (ARN) of the fleet.
registerRobot_fleet :: Lens' RegisterRobot Text

-- | The Amazon Resource Name (ARN) of the robot.
registerRobot_robot :: Lens' RegisterRobot Text

-- | Information about the robot registration.
registerRobotResponse_robot :: Lens' RegisterRobotResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the fleet that the robot will join.
registerRobotResponse_fleet :: Lens' RegisterRobotResponse (Maybe Text)

-- | The response's http status code.
registerRobotResponse_httpStatus :: Lens' RegisterRobotResponse Int

-- | Optional filters to limit results.
--   
--   The filter names <tt>status</tt> and <tt>fleetName</tt> are supported.
--   When filtering, you must use the complete value of the filtered item.
--   You can use up to three filters, but they must be for the same named
--   item. For example, if you are looking for items with the status
--   <tt>Registered</tt> or the status <tt>Available</tt>.
listRobots_filters :: Lens' ListRobots (Maybe (NonEmpty Filter))

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListRobots</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listRobots_nextToken :: Lens' ListRobots (Maybe Text)

-- | When this parameter is used, <tt>ListRobots</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another <tt>ListRobots</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 200. If this parameter is not used, then
--   <tt>ListRobots</tt> returns up to 200 results and a <tt>nextToken</tt>
--   value if applicable.
listRobots_maxResults :: Lens' ListRobots (Maybe Int)

-- | A list of robots that meet the criteria of the request.
listRobotsResponse_robots :: Lens' ListRobotsResponse (Maybe [Robot])

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListRobots</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listRobotsResponse_nextToken :: Lens' ListRobotsResponse (Maybe Text)

-- | The response's http status code.
listRobotsResponse_httpStatus :: Lens' ListRobotsResponse Int

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createWorldExportJob_clientRequestToken :: Lens' CreateWorldExportJob (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   world export job.
createWorldExportJob_tags :: Lens' CreateWorldExportJob (Maybe (HashMap Text Text))

-- | A list of Amazon Resource Names (arns) that correspond to worlds to
--   export.
createWorldExportJob_worlds :: Lens' CreateWorldExportJob (NonEmpty Text)

-- | Undocumented member.
createWorldExportJob_outputLocation :: Lens' CreateWorldExportJob OutputLocation

-- | The IAM role that the world export process uses to access the Amazon
--   S3 bucket and put the export.
createWorldExportJob_iamRole :: Lens' CreateWorldExportJob Text

-- | The status of the world export job.
--   
--   <ul>
--   <li><i>Pending</i> The world export job request is pending.</li>
--   <li><i>Running</i> The world export job is running.</li>
--   <li><i>Completed</i> The world export job completed.</li>
--   <li><i>Failed</i> The world export job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>Canceled</i> The world export job was cancelled.</li>
--   <li><i>Canceling</i> The world export job is being cancelled.</li>
--   </ul>
createWorldExportJobResponse_status :: Lens' CreateWorldExportJobResponse (Maybe WorldExportJobStatus)

-- | The Amazon Resource Name (ARN) of the world export job.
createWorldExportJobResponse_arn :: Lens' CreateWorldExportJobResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world export job
--   was created.
createWorldExportJobResponse_createdAt :: Lens' CreateWorldExportJobResponse (Maybe UTCTime)

-- | The failure code of the world export job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   <li><i>AllWorldGenerationFailed</i> All of the worlds in the world
--   generation job failed. This can happen if your <tt>worldCount</tt> is
--   greater than 50 or less than 1.</li>
--   </ul>
--   
--   For more information about troubleshooting WorldForge, see
--   <a>Troubleshooting Simulation WorldForge</a>.
createWorldExportJobResponse_failureCode :: Lens' CreateWorldExportJobResponse (Maybe WorldExportJobErrorCode)

-- | Undocumented member.
createWorldExportJobResponse_outputLocation :: Lens' CreateWorldExportJobResponse (Maybe OutputLocation)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createWorldExportJobResponse_clientRequestToken :: Lens' CreateWorldExportJobResponse (Maybe Text)

-- | The IAM role that the world export process uses to access the Amazon
--   S3 bucket and put the export.
createWorldExportJobResponse_iamRole :: Lens' CreateWorldExportJobResponse (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   world export job.
createWorldExportJobResponse_tags :: Lens' CreateWorldExportJobResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createWorldExportJobResponse_httpStatus :: Lens' CreateWorldExportJobResponse Int

-- | A list of Amazon Resource Names (ARNs) of simulation jobs to describe.
batchDescribeSimulationJob_jobs :: Lens' BatchDescribeSimulationJob (NonEmpty Text)

-- | A list of unprocessed simulation job Amazon Resource Names (ARNs).
batchDescribeSimulationJobResponse_unprocessedJobs :: Lens' BatchDescribeSimulationJobResponse (Maybe (NonEmpty Text))

-- | A list of simulation jobs.
batchDescribeSimulationJobResponse_jobs :: Lens' BatchDescribeSimulationJobResponse (Maybe [SimulationJob])

-- | The response's http status code.
batchDescribeSimulationJobResponse_httpStatus :: Lens' BatchDescribeSimulationJobResponse Int

-- | The rendering engine for the simulation application.
createSimulationApplication_renderingEngine :: Lens' CreateSimulationApplication (Maybe RenderingEngine)

-- | The object that contains the Docker image URI used to create your
--   simulation application.
createSimulationApplication_environment :: Lens' CreateSimulationApplication (Maybe Environment)

-- | The sources of the simulation application.
createSimulationApplication_sources :: Lens' CreateSimulationApplication (Maybe [SourceConfig])

-- | A map that contains tag keys and tag values that are attached to the
--   simulation application.
createSimulationApplication_tags :: Lens' CreateSimulationApplication (Maybe (HashMap Text Text))

-- | The name of the simulation application.
createSimulationApplication_name :: Lens' CreateSimulationApplication Text

-- | The simulation software suite used by the simulation application.
createSimulationApplication_simulationSoftwareSuite :: Lens' CreateSimulationApplication SimulationSoftwareSuite

-- | The robot software suite (ROS distribution) used by the simulation
--   application.
createSimulationApplication_robotSoftwareSuite :: Lens' CreateSimulationApplication RobotSoftwareSuite

-- | The rendering engine for the simulation application.
createSimulationApplicationResponse_renderingEngine :: Lens' CreateSimulationApplicationResponse (Maybe RenderingEngine)

-- | The time, in milliseconds since the epoch, when the simulation
--   application was last updated.
createSimulationApplicationResponse_lastUpdatedAt :: Lens' CreateSimulationApplicationResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the simulation application.
createSimulationApplicationResponse_arn :: Lens' CreateSimulationApplicationResponse (Maybe Text)

-- | The object that contains the Docker image URI that you used to create
--   your simulation application.
createSimulationApplicationResponse_environment :: Lens' CreateSimulationApplicationResponse (Maybe Environment)

-- | The sources of the simulation application.
createSimulationApplicationResponse_sources :: Lens' CreateSimulationApplicationResponse (Maybe [Source])

-- | The name of the simulation application.
createSimulationApplicationResponse_name :: Lens' CreateSimulationApplicationResponse (Maybe Text)

-- | The version of the simulation application.
createSimulationApplicationResponse_version :: Lens' CreateSimulationApplicationResponse (Maybe Text)

-- | The simulation software suite used by the simulation application.
createSimulationApplicationResponse_simulationSoftwareSuite :: Lens' CreateSimulationApplicationResponse (Maybe SimulationSoftwareSuite)

-- | Information about the robot software suite (ROS distribution).
createSimulationApplicationResponse_robotSoftwareSuite :: Lens' CreateSimulationApplicationResponse (Maybe RobotSoftwareSuite)

-- | The revision id of the simulation application.
createSimulationApplicationResponse_revisionId :: Lens' CreateSimulationApplicationResponse (Maybe Text)

-- | The list of all tags added to the simulation application.
createSimulationApplicationResponse_tags :: Lens' CreateSimulationApplicationResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createSimulationApplicationResponse_httpStatus :: Lens' CreateSimulationApplicationResponse Int

-- | The batch policy.
startSimulationJobBatch_batchPolicy :: Lens' StartSimulationJobBatch (Maybe BatchPolicy)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
startSimulationJobBatch_clientRequestToken :: Lens' StartSimulationJobBatch (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   deployment job batch.
startSimulationJobBatch_tags :: Lens' StartSimulationJobBatch (Maybe (HashMap Text Text))

-- | A list of simulation job requests to create in the batch.
startSimulationJobBatch_createSimulationJobRequests :: Lens' StartSimulationJobBatch (NonEmpty SimulationJobRequest)

-- | The reason the simulation job batch failed.
startSimulationJobBatchResponse_failureReason :: Lens' StartSimulationJobBatchResponse (Maybe Text)

-- | The status of the simulation job batch.
--   
--   <ul>
--   <li><i>Pending</i> The simulation job batch request is pending.</li>
--   <li><i>InProgress</i> The simulation job batch is in progress.</li>
--   <li><i>Failed</i> The simulation job batch failed. One or more
--   simulation job requests could not be completed due to an internal
--   failure (like <tt>InternalServiceError</tt>). See <tt>failureCode</tt>
--   and <tt>failureReason</tt> for more information.</li>
--   <li><i>Completed</i> The simulation batch job completed. A batch is
--   complete when (1) there are no pending simulation job requests in the
--   batch and none of the failed simulation job requests are due to
--   <tt>InternalServiceError</tt> and (2) when all created simulation jobs
--   have reached a terminal state (for example, <tt>Completed</tt> or
--   <tt>Failed</tt>).</li>
--   <li><i>Canceled</i> The simulation batch job was cancelled.</li>
--   <li><i>Canceling</i> The simulation batch job is being cancelled.</li>
--   <li><i>Completing</i> The simulation batch job is completing.</li>
--   <li><i>TimingOut</i> The simulation job batch is timing out.If a batch
--   timing out, and there are pending requests that were failing due to an
--   internal failure (like <tt>InternalServiceError</tt>), the batch
--   status will be <tt>Failed</tt>. If there are no such failing request,
--   the batch status will be <tt>TimedOut</tt>.</li>
--   <li><i>TimedOut</i> The simulation batch job timed out.</li>
--   </ul>
startSimulationJobBatchResponse_status :: Lens' StartSimulationJobBatchResponse (Maybe SimulationJobBatchStatus)

-- | The Amazon Resource Name (arn) of the batch.
startSimulationJobBatchResponse_arn :: Lens' StartSimulationJobBatchResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch was created.
startSimulationJobBatchResponse_createdAt :: Lens' StartSimulationJobBatchResponse (Maybe UTCTime)

-- | The failure code if the simulation job batch failed.
startSimulationJobBatchResponse_failureCode :: Lens' StartSimulationJobBatchResponse (Maybe SimulationJobBatchErrorCode)

-- | A list of failed simulation job requests. The request failed to be
--   created into a simulation job. Failed requests do not have a
--   simulation job ID.
startSimulationJobBatchResponse_failedRequests :: Lens' StartSimulationJobBatchResponse (Maybe [FailedCreateSimulationJobRequest])

-- | The batch policy.
startSimulationJobBatchResponse_batchPolicy :: Lens' StartSimulationJobBatchResponse (Maybe BatchPolicy)

-- | A list of created simulation job request summaries.
startSimulationJobBatchResponse_createdRequests :: Lens' StartSimulationJobBatchResponse (Maybe [SimulationJobSummary])

-- | A list of pending simulation job requests. These requests have not yet
--   been created into simulation jobs.
startSimulationJobBatchResponse_pendingRequests :: Lens' StartSimulationJobBatchResponse (Maybe (NonEmpty SimulationJobRequest))

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
startSimulationJobBatchResponse_clientRequestToken :: Lens' StartSimulationJobBatchResponse (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   deployment job batch.
startSimulationJobBatchResponse_tags :: Lens' StartSimulationJobBatchResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
startSimulationJobBatchResponse_httpStatus :: Lens' StartSimulationJobBatchResponse Int

-- | A map that contains tag keys and tag values that are attached to the
--   robot.
createRobot_tags :: Lens' CreateRobot (Maybe (HashMap Text Text))

-- | The name for the robot.
createRobot_name :: Lens' CreateRobot Text

-- | The target architecture of the robot.
createRobot_architecture :: Lens' CreateRobot Architecture

-- | The Greengrass group id.
createRobot_greengrassGroupId :: Lens' CreateRobot Text

-- | The Amazon Resource Name (ARN) of the robot.
createRobotResponse_arn :: Lens' CreateRobotResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the robot was created.
createRobotResponse_createdAt :: Lens' CreateRobotResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the Greengrass group associated with
--   the robot.
createRobotResponse_greengrassGroupId :: Lens' CreateRobotResponse (Maybe Text)

-- | The name of the robot.
createRobotResponse_name :: Lens' CreateRobotResponse (Maybe Text)

-- | The target architecture of the robot.
createRobotResponse_architecture :: Lens' CreateRobotResponse (Maybe Architecture)

-- | The list of all tags added to the robot.
createRobotResponse_tags :: Lens' CreateRobotResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createRobotResponse_httpStatus :: Lens' CreateRobotResponse Int

-- | The Amazon Resource Name (ARN) of the fleet.
describeFleet_fleet :: Lens' DescribeFleet Text

-- | The Amazon Resource Name (ARN) of the last deployment job.
describeFleetResponse_lastDeploymentJob :: Lens' DescribeFleetResponse (Maybe Text)

-- | The status of the last deployment.
describeFleetResponse_lastDeploymentStatus :: Lens' DescribeFleetResponse (Maybe DeploymentStatus)

-- | A list of robots.
describeFleetResponse_robots :: Lens' DescribeFleetResponse (Maybe [Robot])

-- | The Amazon Resource Name (ARN) of the fleet.
describeFleetResponse_arn :: Lens' DescribeFleetResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the fleet was created.
describeFleetResponse_createdAt :: Lens' DescribeFleetResponse (Maybe UTCTime)

-- | The name of the fleet.
describeFleetResponse_name :: Lens' DescribeFleetResponse (Maybe Text)

-- | The time of the last deployment.
describeFleetResponse_lastDeploymentTime :: Lens' DescribeFleetResponse (Maybe UTCTime)

-- | The list of all tags added to the specified fleet.
describeFleetResponse_tags :: Lens' DescribeFleetResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeFleetResponse_httpStatus :: Lens' DescribeFleetResponse Int

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorldTemplates</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listWorldTemplates_nextToken :: Lens' ListWorldTemplates (Maybe Text)

-- | When this parameter is used, <tt>ListWorldTemplates</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListWorldTemplates</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListWorldTemplates</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
listWorldTemplates_maxResults :: Lens' ListWorldTemplates (Maybe Int)

-- | Summary information for templates.
listWorldTemplatesResponse_templateSummaries :: Lens' ListWorldTemplatesResponse (Maybe [TemplateSummary])

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorldTemplates</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listWorldTemplatesResponse_nextToken :: Lens' ListWorldTemplatesResponse (Maybe Text)

-- | The response's http status code.
listWorldTemplatesResponse_httpStatus :: Lens' ListWorldTemplatesResponse Int

-- | The version of the robot application to describe.
describeRobotApplication_applicationVersion :: Lens' DescribeRobotApplication (Maybe Text)

-- | The Amazon Resource Name (ARN) of the robot application.
describeRobotApplication_application :: Lens' DescribeRobotApplication Text

-- | The time, in milliseconds since the epoch, when the robot application
--   was last updated.
describeRobotApplicationResponse_lastUpdatedAt :: Lens' DescribeRobotApplicationResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the robot application.
describeRobotApplicationResponse_arn :: Lens' DescribeRobotApplicationResponse (Maybe Text)

-- | The object that contains the Docker image URI used to create the robot
--   application.
describeRobotApplicationResponse_environment :: Lens' DescribeRobotApplicationResponse (Maybe Environment)

-- | The sources of the robot application.
describeRobotApplicationResponse_sources :: Lens' DescribeRobotApplicationResponse (Maybe [Source])

-- | The name of the robot application.
describeRobotApplicationResponse_name :: Lens' DescribeRobotApplicationResponse (Maybe Text)

-- | A SHA256 identifier for the Docker image that you use for your robot
--   application.
describeRobotApplicationResponse_imageDigest :: Lens' DescribeRobotApplicationResponse (Maybe Text)

-- | The version of the robot application.
describeRobotApplicationResponse_version :: Lens' DescribeRobotApplicationResponse (Maybe Text)

-- | The robot software suite (ROS distribution) used by the robot
--   application.
describeRobotApplicationResponse_robotSoftwareSuite :: Lens' DescribeRobotApplicationResponse (Maybe RobotSoftwareSuite)

-- | The revision id of the robot application.
describeRobotApplicationResponse_revisionId :: Lens' DescribeRobotApplicationResponse (Maybe Text)

-- | The list of all tags added to the specified robot application.
describeRobotApplicationResponse_tags :: Lens' DescribeRobotApplicationResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeRobotApplicationResponse_httpStatus :: Lens' DescribeRobotApplicationResponse Int

-- | The Amazon Resource Name (ARN) of the simulation job.
restartSimulationJob_job :: Lens' RestartSimulationJob Text

-- | The response's http status code.
restartSimulationJobResponse_httpStatus :: Lens' RestartSimulationJobResponse Int

-- | The Amazon Resource Name (ARN) of the simulation job to be described.
describeSimulationJob_job :: Lens' DescribeSimulationJob Text

-- | Details about why the simulation job failed. For more information
--   about troubleshooting, see <a>Troubleshooting</a>.
describeSimulationJobResponse_failureReason :: Lens' DescribeSimulationJobResponse (Maybe Text)

-- | The failure behavior for the simulation job.
describeSimulationJobResponse_failureBehavior :: Lens' DescribeSimulationJobResponse (Maybe FailureBehavior)

-- | The status of the simulation job.
describeSimulationJobResponse_status :: Lens' DescribeSimulationJobResponse (Maybe SimulationJobStatus)

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last updated.
describeSimulationJobResponse_lastUpdatedAt :: Lens' DescribeSimulationJobResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the simulation job.
describeSimulationJobResponse_arn :: Lens' DescribeSimulationJobResponse (Maybe Text)

-- | A list of robot applications.
describeSimulationJobResponse_robotApplications :: Lens' DescribeSimulationJobResponse (Maybe (NonEmpty RobotApplicationConfig))

-- | The failure code of the simulation job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>RobotApplicationCrash</i> Robot application exited
--   abnormally.</li>
--   <li><i>SimulationApplicationCrash</i> Simulation application exited
--   abnormally.</li>
--   <li><i>BadPermissionsRobotApplication</i> Robot application bundle
--   could not be downloaded.</li>
--   <li><i>BadPermissionsSimulationApplication</i> Simulation application
--   bundle could not be downloaded.</li>
--   <li><i>BadPermissionsS3Output</i> Unable to publish outputs to
--   customer-provided S3 bucket.</li>
--   <li><i>BadPermissionsCloudwatchLogs</i> Unable to publish logs to
--   customer-provided CloudWatch Logs resource.</li>
--   <li><i>SubnetIpLimitExceeded</i> Subnet IP limit exceeded.</li>
--   <li><i>ENILimitExceeded</i> ENI limit exceeded.</li>
--   <li><i>BadPermissionsUserCredentials</i> Unable to use the Role
--   provided.</li>
--   <li><i>InvalidBundleRobotApplication</i> Robot bundle cannot be
--   extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>InvalidBundleSimulationApplication</i> Simulation bundle cannot
--   be extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>RobotApplicationVersionMismatchedEtag</i> Etag for
--   RobotApplication does not match value during version creation.</li>
--   <li><i>SimulationApplicationVersionMismatchedEtag</i> Etag for
--   SimulationApplication does not match value during version
--   creation.</li>
--   </ul>
describeSimulationJobResponse_failureCode :: Lens' DescribeSimulationJobResponse (Maybe SimulationJobErrorCode)

-- | Compute information for the simulation job.
describeSimulationJobResponse_compute :: Lens' DescribeSimulationJobResponse (Maybe ComputeResponse)

-- | The network interface information for the simulation job.
describeSimulationJobResponse_networkInterface :: Lens' DescribeSimulationJobResponse (Maybe NetworkInterface)

-- | The data sources for the simulation job.
describeSimulationJobResponse_dataSources :: Lens' DescribeSimulationJobResponse (Maybe [DataSource])

-- | The name of the simulation job.
describeSimulationJobResponse_name :: Lens' DescribeSimulationJobResponse (Maybe Text)

-- | The VPC configuration.
describeSimulationJobResponse_vpcConfig :: Lens' DescribeSimulationJobResponse (Maybe VPCConfigResponse)

-- | Location for output files generated by the simulation job.
describeSimulationJobResponse_outputLocation :: Lens' DescribeSimulationJobResponse (Maybe OutputLocation)

-- | A list of simulation applications.
describeSimulationJobResponse_simulationApplications :: Lens' DescribeSimulationJobResponse (Maybe (NonEmpty SimulationApplicationConfig))

-- | The simulation job execution duration in milliseconds.
describeSimulationJobResponse_simulationTimeMillis :: Lens' DescribeSimulationJobResponse (Maybe Integer)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
describeSimulationJobResponse_clientRequestToken :: Lens' DescribeSimulationJobResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last started.
describeSimulationJobResponse_lastStartedAt :: Lens' DescribeSimulationJobResponse (Maybe UTCTime)

-- | The logging configuration.
describeSimulationJobResponse_loggingConfig :: Lens' DescribeSimulationJobResponse (Maybe LoggingConfig)

-- | The IAM role that allows the simulation instance to call the AWS APIs
--   that are specified in its associated policies on your behalf.
describeSimulationJobResponse_iamRole :: Lens' DescribeSimulationJobResponse (Maybe Text)

-- | The maximum job duration in seconds. The value must be 8 days (691,200
--   seconds) or less.
describeSimulationJobResponse_maxJobDurationInSeconds :: Lens' DescribeSimulationJobResponse (Maybe Integer)

-- | The list of all tags added to the specified simulation job.
describeSimulationJobResponse_tags :: Lens' DescribeSimulationJobResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeSimulationJobResponse_httpStatus :: Lens' DescribeSimulationJobResponse Int

-- | The Amazon Resource Name (ARN) of the fleet.
deregisterRobot_fleet :: Lens' DeregisterRobot Text

-- | The Amazon Resource Name (ARN) of the robot.
deregisterRobot_robot :: Lens' DeregisterRobot Text

-- | The Amazon Resource Name (ARN) of the robot.
deregisterRobotResponse_robot :: Lens' DeregisterRobotResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the fleet.
deregisterRobotResponse_fleet :: Lens' DeregisterRobotResponse (Maybe Text)

-- | The response's http status code.
deregisterRobotResponse_httpStatus :: Lens' DeregisterRobotResponse Int

-- | The version of the simulation application to describe.
describeSimulationApplication_applicationVersion :: Lens' DescribeSimulationApplication (Maybe Text)

-- | The application information for the simulation application.
describeSimulationApplication_application :: Lens' DescribeSimulationApplication Text

-- | The rendering engine for the simulation application.
describeSimulationApplicationResponse_renderingEngine :: Lens' DescribeSimulationApplicationResponse (Maybe RenderingEngine)

-- | The time, in milliseconds since the epoch, when the simulation
--   application was last updated.
describeSimulationApplicationResponse_lastUpdatedAt :: Lens' DescribeSimulationApplicationResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the robot simulation application.
describeSimulationApplicationResponse_arn :: Lens' DescribeSimulationApplicationResponse (Maybe Text)

-- | The object that contains the Docker image URI used to create the
--   simulation application.
describeSimulationApplicationResponse_environment :: Lens' DescribeSimulationApplicationResponse (Maybe Environment)

-- | The sources of the simulation application.
describeSimulationApplicationResponse_sources :: Lens' DescribeSimulationApplicationResponse (Maybe [Source])

-- | The name of the simulation application.
describeSimulationApplicationResponse_name :: Lens' DescribeSimulationApplicationResponse (Maybe Text)

-- | A SHA256 identifier for the Docker image that you use for your
--   simulation application.
describeSimulationApplicationResponse_imageDigest :: Lens' DescribeSimulationApplicationResponse (Maybe Text)

-- | The version of the simulation application.
describeSimulationApplicationResponse_version :: Lens' DescribeSimulationApplicationResponse (Maybe Text)

-- | The simulation software suite used by the simulation application.
describeSimulationApplicationResponse_simulationSoftwareSuite :: Lens' DescribeSimulationApplicationResponse (Maybe SimulationSoftwareSuite)

-- | Information about the robot software suite (ROS distribution).
describeSimulationApplicationResponse_robotSoftwareSuite :: Lens' DescribeSimulationApplicationResponse (Maybe RobotSoftwareSuite)

-- | The revision id of the simulation application.
describeSimulationApplicationResponse_revisionId :: Lens' DescribeSimulationApplicationResponse (Maybe Text)

-- | The list of all tags added to the specified simulation application.
describeSimulationApplicationResponse_tags :: Lens' DescribeSimulationApplicationResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeSimulationApplicationResponse_httpStatus :: Lens' DescribeSimulationApplicationResponse Int

-- | Optional filters to limit results.
listSimulationJobBatches_filters :: Lens' ListSimulationJobBatches (Maybe (NonEmpty Filter))

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListSimulationJobBatches</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
listSimulationJobBatches_nextToken :: Lens' ListSimulationJobBatches (Maybe Text)

-- | When this parameter is used, <tt>ListSimulationJobBatches</tt> only
--   returns <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListSimulationJobBatches</tt> request with the returned
--   <tt>nextToken</tt> value.
listSimulationJobBatches_maxResults :: Lens' ListSimulationJobBatches (Maybe Int)

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListSimulationJobBatches</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
listSimulationJobBatchesResponse_nextToken :: Lens' ListSimulationJobBatchesResponse (Maybe Text)

-- | A list of simulation job batch summaries.
listSimulationJobBatchesResponse_simulationJobBatchSummaries :: Lens' ListSimulationJobBatchesResponse (Maybe [SimulationJobBatchSummary])

-- | The response's http status code.
listSimulationJobBatchesResponse_httpStatus :: Lens' ListSimulationJobBatchesResponse Int

-- | Optional filters to limit results.
--   
--   The filter name <tt>name</tt> is supported. When filtering, you must
--   use the complete value of the filtered item. You can use up to three
--   filters.
listFleets_filters :: Lens' ListFleets (Maybe (NonEmpty Filter))

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListFleets</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   This token should be treated as an opaque identifier that is only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
listFleets_nextToken :: Lens' ListFleets (Maybe Text)

-- | When this parameter is used, <tt>ListFleets</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another <tt>ListFleets</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 200. If this parameter is not used, then
--   <tt>ListFleets</tt> returns up to 200 results and a <tt>nextToken</tt>
--   value if applicable.
listFleets_maxResults :: Lens' ListFleets (Maybe Int)

-- | A list of fleet details meeting the request criteria.
listFleetsResponse_fleetDetails :: Lens' ListFleetsResponse (Maybe [Fleet])

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListFleets</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listFleetsResponse_nextToken :: Lens' ListFleetsResponse (Maybe Text)

-- | The response's http status code.
listFleetsResponse_httpStatus :: Lens' ListFleetsResponse Int

-- | The Amazon Resource Name (arn) of the world template you want to
--   describe.
describeWorldTemplate_template :: Lens' DescribeWorldTemplate Text

-- | The time, in milliseconds since the epoch, when the world template was
--   last updated.
describeWorldTemplateResponse_lastUpdatedAt :: Lens' DescribeWorldTemplateResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the world template.
describeWorldTemplateResponse_arn :: Lens' DescribeWorldTemplateResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world template was
--   created.
describeWorldTemplateResponse_createdAt :: Lens' DescribeWorldTemplateResponse (Maybe UTCTime)

-- | The name of the world template.
describeWorldTemplateResponse_name :: Lens' DescribeWorldTemplateResponse (Maybe Text)

-- | The version of the world template that you're using.
describeWorldTemplateResponse_version :: Lens' DescribeWorldTemplateResponse (Maybe Text)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
describeWorldTemplateResponse_clientRequestToken :: Lens' DescribeWorldTemplateResponse (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   world template.
describeWorldTemplateResponse_tags :: Lens' DescribeWorldTemplateResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeWorldTemplateResponse_httpStatus :: Lens' DescribeWorldTemplateResponse Int

-- | The Amazon Resource Name (arn) of the world export job to cancel.
cancelWorldExportJob_job :: Lens' CancelWorldExportJob Text

-- | The response's http status code.
cancelWorldExportJobResponse_httpStatus :: Lens' CancelWorldExportJobResponse Int

-- | Optional filters to limit results. You can use <tt>status</tt> and
--   <tt>templateId</tt>.
listWorldGenerationJobs_filters :: Lens' ListWorldGenerationJobs (Maybe (NonEmpty Filter))

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorldGenerationJobsRequest</tt> again and assign that token to
--   the request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
listWorldGenerationJobs_nextToken :: Lens' ListWorldGenerationJobs (Maybe Text)

-- | When this parameter is used, <tt>ListWorldGeneratorJobs</tt> only
--   returns <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListWorldGeneratorJobs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListWorldGeneratorJobs</tt> returns up
--   to 100 results and a <tt>nextToken</tt> value if applicable.
listWorldGenerationJobs_maxResults :: Lens' ListWorldGenerationJobs (Maybe Int)

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorldGeneratorJobsRequest</tt> again and assign that token to
--   the request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
listWorldGenerationJobsResponse_nextToken :: Lens' ListWorldGenerationJobsResponse (Maybe Text)

-- | The response's http status code.
listWorldGenerationJobsResponse_httpStatus :: Lens' ListWorldGenerationJobsResponse Int

-- | Summary information for world generator jobs.
listWorldGenerationJobsResponse_worldGenerationJobSummaries :: Lens' ListWorldGenerationJobsResponse [WorldGenerationJobSummary]

-- | A map that contains tag keys and tag values that are attached to the
--   fleet.
createFleet_tags :: Lens' CreateFleet (Maybe (HashMap Text Text))

-- | The name of the fleet.
createFleet_name :: Lens' CreateFleet Text

-- | The Amazon Resource Name (ARN) of the fleet.
createFleetResponse_arn :: Lens' CreateFleetResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the fleet was created.
createFleetResponse_createdAt :: Lens' CreateFleetResponse (Maybe UTCTime)

-- | The name of the fleet.
createFleetResponse_name :: Lens' CreateFleetResponse (Maybe Text)

-- | The list of all tags added to the fleet.
createFleetResponse_tags :: Lens' CreateFleetResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createFleetResponse_httpStatus :: Lens' CreateFleetResponse Int

-- | The Amazon Resource Name (arn) of the world generator job to cancel.
cancelWorldGenerationJob_job :: Lens' CancelWorldGenerationJob Text

-- | The response's http status code.
cancelWorldGenerationJobResponse_httpStatus :: Lens' CancelWorldGenerationJobResponse Int

-- | The id of the batch to describe.
describeSimulationJobBatch_batch :: Lens' DescribeSimulationJobBatch Text

-- | The reason the simulation job batch failed.
describeSimulationJobBatchResponse_failureReason :: Lens' DescribeSimulationJobBatchResponse (Maybe Text)

-- | The status of the batch.
--   
--   <ul>
--   <li><i>Pending</i> The simulation job batch request is pending.</li>
--   <li><i>InProgress</i> The simulation job batch is in progress.</li>
--   <li><i>Failed</i> The simulation job batch failed. One or more
--   simulation job requests could not be completed due to an internal
--   failure (like <tt>InternalServiceError</tt>). See <tt>failureCode</tt>
--   and <tt>failureReason</tt> for more information.</li>
--   <li><i>Completed</i> The simulation batch job completed. A batch is
--   complete when (1) there are no pending simulation job requests in the
--   batch and none of the failed simulation job requests are due to
--   <tt>InternalServiceError</tt> and (2) when all created simulation jobs
--   have reached a terminal state (for example, <tt>Completed</tt> or
--   <tt>Failed</tt>).</li>
--   <li><i>Canceled</i> The simulation batch job was cancelled.</li>
--   <li><i>Canceling</i> The simulation batch job is being cancelled.</li>
--   <li><i>Completing</i> The simulation batch job is completing.</li>
--   <li><i>TimingOut</i> The simulation job batch is timing out.If a batch
--   timing out, and there are pending requests that were failing due to an
--   internal failure (like <tt>InternalServiceError</tt>), the batch
--   status will be <tt>Failed</tt>. If there are no such failing request,
--   the batch status will be <tt>TimedOut</tt>.</li>
--   <li><i>TimedOut</i> The simulation batch job timed out.</li>
--   </ul>
describeSimulationJobBatchResponse_status :: Lens' DescribeSimulationJobBatchResponse (Maybe SimulationJobBatchStatus)

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch was last updated.
describeSimulationJobBatchResponse_lastUpdatedAt :: Lens' DescribeSimulationJobBatchResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the batch.
describeSimulationJobBatchResponse_arn :: Lens' DescribeSimulationJobBatchResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch was created.
describeSimulationJobBatchResponse_createdAt :: Lens' DescribeSimulationJobBatchResponse (Maybe UTCTime)

-- | The failure code of the simulation job batch.
describeSimulationJobBatchResponse_failureCode :: Lens' DescribeSimulationJobBatchResponse (Maybe SimulationJobBatchErrorCode)

-- | A list of failed create simulation job requests. The request failed to
--   be created into a simulation job. Failed requests do not have a
--   simulation job ID.
describeSimulationJobBatchResponse_failedRequests :: Lens' DescribeSimulationJobBatchResponse (Maybe [FailedCreateSimulationJobRequest])

-- | The batch policy.
describeSimulationJobBatchResponse_batchPolicy :: Lens' DescribeSimulationJobBatchResponse (Maybe BatchPolicy)

-- | A list of created simulation job summaries.
describeSimulationJobBatchResponse_createdRequests :: Lens' DescribeSimulationJobBatchResponse (Maybe [SimulationJobSummary])

-- | A list of pending simulation job requests. These requests have not yet
--   been created into simulation jobs.
describeSimulationJobBatchResponse_pendingRequests :: Lens' DescribeSimulationJobBatchResponse (Maybe (NonEmpty SimulationJobRequest))

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
describeSimulationJobBatchResponse_clientRequestToken :: Lens' DescribeSimulationJobBatchResponse (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   simulation job batch.
describeSimulationJobBatchResponse_tags :: Lens' DescribeSimulationJobBatchResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeSimulationJobBatchResponse_httpStatus :: Lens' DescribeSimulationJobBatchResponse Int

-- | Optional filters to limit results.
--   
--   The filter names <tt>status</tt> and
--   <tt>simulationApplicationName</tt> and <tt>robotApplicationName</tt>
--   are supported. When filtering, you must use the complete value of the
--   filtered item. You can use up to three filters, but they must be for
--   the same named item. For example, if you are looking for items with
--   the status <tt>Preparing</tt> or the status <tt>Running</tt>.
listSimulationJobs_filters :: Lens' ListSimulationJobs (Maybe (NonEmpty Filter))

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListSimulationJobs</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listSimulationJobs_nextToken :: Lens' ListSimulationJobs (Maybe Text)

-- | When this parameter is used, <tt>ListSimulationJobs</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListSimulationJobs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 1000. If
--   this parameter is not used, then <tt>ListSimulationJobs</tt> returns
--   up to 1000 results and a <tt>nextToken</tt> value if applicable.
listSimulationJobs_maxResults :: Lens' ListSimulationJobs (Maybe Int)

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListSimulationJobs</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listSimulationJobsResponse_nextToken :: Lens' ListSimulationJobsResponse (Maybe Text)

-- | The response's http status code.
listSimulationJobsResponse_httpStatus :: Lens' ListSimulationJobsResponse Int

-- | A list of simulation job summaries that meet the criteria of the
--   request.
listSimulationJobsResponse_simulationJobSummaries :: Lens' ListSimulationJobsResponse [SimulationJobSummary]

-- | The Amazon Resource Name (ARN) of the robot.
deleteRobot_robot :: Lens' DeleteRobot Text

-- | The response's http status code.
deleteRobotResponse_httpStatus :: Lens' DeleteRobotResponse Int

-- | The version of the simulation application to delete.
deleteSimulationApplication_applicationVersion :: Lens' DeleteSimulationApplication (Maybe Text)

-- | The application information for the simulation application to delete.
deleteSimulationApplication_application :: Lens' DeleteSimulationApplication Text

-- | The response's http status code.
deleteSimulationApplicationResponse_httpStatus :: Lens' DeleteSimulationApplicationResponse Int

-- | The rendering engine for the simulation application.
updateSimulationApplication_renderingEngine :: Lens' UpdateSimulationApplication (Maybe RenderingEngine)

-- | The revision id for the robot application.
updateSimulationApplication_currentRevisionId :: Lens' UpdateSimulationApplication (Maybe Text)

-- | The object that contains the Docker image URI for your simulation
--   application.
updateSimulationApplication_environment :: Lens' UpdateSimulationApplication (Maybe Environment)

-- | The sources of the simulation application.
updateSimulationApplication_sources :: Lens' UpdateSimulationApplication (Maybe [SourceConfig])

-- | The application information for the simulation application.
updateSimulationApplication_application :: Lens' UpdateSimulationApplication Text

-- | The simulation software suite used by the simulation application.
updateSimulationApplication_simulationSoftwareSuite :: Lens' UpdateSimulationApplication SimulationSoftwareSuite

-- | Information about the robot software suite (ROS distribution).
updateSimulationApplication_robotSoftwareSuite :: Lens' UpdateSimulationApplication RobotSoftwareSuite

-- | The rendering engine for the simulation application.
updateSimulationApplicationResponse_renderingEngine :: Lens' UpdateSimulationApplicationResponse (Maybe RenderingEngine)

-- | The time, in milliseconds since the epoch, when the simulation
--   application was last updated.
updateSimulationApplicationResponse_lastUpdatedAt :: Lens' UpdateSimulationApplicationResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the updated simulation application.
updateSimulationApplicationResponse_arn :: Lens' UpdateSimulationApplicationResponse (Maybe Text)

-- | The object that contains the Docker image URI used for your simulation
--   application.
updateSimulationApplicationResponse_environment :: Lens' UpdateSimulationApplicationResponse (Maybe Environment)

-- | The sources of the simulation application.
updateSimulationApplicationResponse_sources :: Lens' UpdateSimulationApplicationResponse (Maybe [Source])

-- | The name of the simulation application.
updateSimulationApplicationResponse_name :: Lens' UpdateSimulationApplicationResponse (Maybe Text)

-- | The version of the robot application.
updateSimulationApplicationResponse_version :: Lens' UpdateSimulationApplicationResponse (Maybe Text)

-- | The simulation software suite used by the simulation application.
updateSimulationApplicationResponse_simulationSoftwareSuite :: Lens' UpdateSimulationApplicationResponse (Maybe SimulationSoftwareSuite)

-- | Information about the robot software suite (ROS distribution).
updateSimulationApplicationResponse_robotSoftwareSuite :: Lens' UpdateSimulationApplicationResponse (Maybe RobotSoftwareSuite)

-- | The revision id of the simulation application.
updateSimulationApplicationResponse_revisionId :: Lens' UpdateSimulationApplicationResponse (Maybe Text)

-- | The response's http status code.
updateSimulationApplicationResponse_httpStatus :: Lens' UpdateSimulationApplicationResponse Int

-- | The failure behavior the simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the instance running for its maximum
--   timeout duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
createSimulationJob_failureBehavior :: Lens' CreateSimulationJob (Maybe FailureBehavior)

-- | The robot application to use in the simulation job.
createSimulationJob_robotApplications :: Lens' CreateSimulationJob (Maybe (NonEmpty RobotApplicationConfig))

-- | Compute information for the simulation job.
createSimulationJob_compute :: Lens' CreateSimulationJob (Maybe Compute)

-- | Specify data sources to mount read-only files from S3 into your
--   simulation. These files are available under
--   <tt>/opt/robomaker/datasources/data_source_name</tt>.
--   
--   There is a limit of 100 files and a combined size of 25GB for all
--   <tt>DataSourceConfig</tt> objects.
createSimulationJob_dataSources :: Lens' CreateSimulationJob (Maybe (NonEmpty DataSourceConfig))

-- | If your simulation job accesses resources in a VPC, you provide this
--   parameter identifying the list of security group IDs and subnet IDs.
--   These must belong to the same VPC. You must provide at least one
--   security group and one subnet ID.
createSimulationJob_vpcConfig :: Lens' CreateSimulationJob (Maybe VPCConfig)

-- | Location for output files generated by the simulation job.
createSimulationJob_outputLocation :: Lens' CreateSimulationJob (Maybe OutputLocation)

-- | The simulation application to use in the simulation job.
createSimulationJob_simulationApplications :: Lens' CreateSimulationJob (Maybe (NonEmpty SimulationApplicationConfig))

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createSimulationJob_clientRequestToken :: Lens' CreateSimulationJob (Maybe Text)

-- | The logging configuration.
createSimulationJob_loggingConfig :: Lens' CreateSimulationJob (Maybe LoggingConfig)

-- | A map that contains tag keys and tag values that are attached to the
--   simulation job.
createSimulationJob_tags :: Lens' CreateSimulationJob (Maybe (HashMap Text Text))

-- | The maximum simulation job duration in seconds (up to 14 days or
--   1,209,600 seconds. When <tt>maxJobDurationInSeconds</tt> is reached,
--   the simulation job will status will transition to <tt>Completed</tt>.
createSimulationJob_maxJobDurationInSeconds :: Lens' CreateSimulationJob Integer

-- | The IAM role name that allows the simulation instance to call the AWS
--   APIs that are specified in its associated policies on your behalf.
--   This is how credentials are passed in to your simulation job.
createSimulationJob_iamRole :: Lens' CreateSimulationJob Text

-- | the failure behavior for the simulation job.
createSimulationJobResponse_failureBehavior :: Lens' CreateSimulationJobResponse (Maybe FailureBehavior)

-- | The status of the simulation job.
createSimulationJobResponse_status :: Lens' CreateSimulationJobResponse (Maybe SimulationJobStatus)

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last updated.
createSimulationJobResponse_lastUpdatedAt :: Lens' CreateSimulationJobResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the simulation job.
createSimulationJobResponse_arn :: Lens' CreateSimulationJobResponse (Maybe Text)

-- | The robot application used by the simulation job.
createSimulationJobResponse_robotApplications :: Lens' CreateSimulationJobResponse (Maybe (NonEmpty RobotApplicationConfig))

-- | The failure code of the simulation job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>RobotApplicationCrash</i> Robot application exited
--   abnormally.</li>
--   <li><i>SimulationApplicationCrash</i> Simulation application exited
--   abnormally.</li>
--   <li><i>BadPermissionsRobotApplication</i> Robot application bundle
--   could not be downloaded.</li>
--   <li><i>BadPermissionsSimulationApplication</i> Simulation application
--   bundle could not be downloaded.</li>
--   <li><i>BadPermissionsS3Output</i> Unable to publish outputs to
--   customer-provided S3 bucket.</li>
--   <li><i>BadPermissionsCloudwatchLogs</i> Unable to publish logs to
--   customer-provided CloudWatch Logs resource.</li>
--   <li><i>SubnetIpLimitExceeded</i> Subnet IP limit exceeded.</li>
--   <li><i>ENILimitExceeded</i> ENI limit exceeded.</li>
--   <li><i>BadPermissionsUserCredentials</i> Unable to use the Role
--   provided.</li>
--   <li><i>InvalidBundleRobotApplication</i> Robot bundle cannot be
--   extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>InvalidBundleSimulationApplication</i> Simulation bundle cannot
--   be extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>RobotApplicationVersionMismatchedEtag</i> Etag for
--   RobotApplication does not match value during version creation.</li>
--   <li><i>SimulationApplicationVersionMismatchedEtag</i> Etag for
--   SimulationApplication does not match value during version
--   creation.</li>
--   </ul>
createSimulationJobResponse_failureCode :: Lens' CreateSimulationJobResponse (Maybe SimulationJobErrorCode)

-- | Compute information for the simulation job.
createSimulationJobResponse_compute :: Lens' CreateSimulationJobResponse (Maybe ComputeResponse)

-- | The data sources for the simulation job.
createSimulationJobResponse_dataSources :: Lens' CreateSimulationJobResponse (Maybe [DataSource])

-- | Information about the vpc configuration.
createSimulationJobResponse_vpcConfig :: Lens' CreateSimulationJobResponse (Maybe VPCConfigResponse)

-- | Simulation job output files location.
createSimulationJobResponse_outputLocation :: Lens' CreateSimulationJobResponse (Maybe OutputLocation)

-- | The simulation application used by the simulation job.
createSimulationJobResponse_simulationApplications :: Lens' CreateSimulationJobResponse (Maybe (NonEmpty SimulationApplicationConfig))

-- | The simulation job execution duration in milliseconds.
createSimulationJobResponse_simulationTimeMillis :: Lens' CreateSimulationJobResponse (Maybe Integer)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createSimulationJobResponse_clientRequestToken :: Lens' CreateSimulationJobResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last started.
createSimulationJobResponse_lastStartedAt :: Lens' CreateSimulationJobResponse (Maybe UTCTime)

-- | The logging configuration.
createSimulationJobResponse_loggingConfig :: Lens' CreateSimulationJobResponse (Maybe LoggingConfig)

-- | The IAM role that allows the simulation job to call the AWS APIs that
--   are specified in its associated policies on your behalf.
createSimulationJobResponse_iamRole :: Lens' CreateSimulationJobResponse (Maybe Text)

-- | The maximum simulation job duration in seconds.
createSimulationJobResponse_maxJobDurationInSeconds :: Lens' CreateSimulationJobResponse (Maybe Integer)

-- | The list of all tags added to the simulation job.
createSimulationJobResponse_tags :: Lens' CreateSimulationJobResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createSimulationJobResponse_httpStatus :: Lens' CreateSimulationJobResponse Int

-- | Optional filters to limit results. You can use
--   <tt>generationJobId</tt> and <tt>templateId</tt>.
listWorldExportJobs_filters :: Lens' ListWorldExportJobs (Maybe (NonEmpty Filter))

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorldExportJobs</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
listWorldExportJobs_nextToken :: Lens' ListWorldExportJobs (Maybe Text)

-- | When this parameter is used, <tt>ListWorldExportJobs</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListWorldExportJobs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListWorldExportJobs</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
listWorldExportJobs_maxResults :: Lens' ListWorldExportJobs (Maybe Int)

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorldExportJobsRequest</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
listWorldExportJobsResponse_nextToken :: Lens' ListWorldExportJobsResponse (Maybe Text)

-- | The response's http status code.
listWorldExportJobsResponse_httpStatus :: Lens' ListWorldExportJobsResponse Int

-- | Summary information for world export jobs.
listWorldExportJobsResponse_worldExportJobSummaries :: Lens' ListWorldExportJobsResponse [WorldExportJobSummary]

-- | The version qualifier of the simulation application.
listSimulationApplications_versionQualifier :: Lens' ListSimulationApplications (Maybe Text)

-- | Optional list of filters to limit results.
--   
--   The filter name <tt>name</tt> is supported. When filtering, you must
--   use the complete value of the filtered item. You can use up to three
--   filters.
listSimulationApplications_filters :: Lens' ListSimulationApplications (Maybe (NonEmpty Filter))

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListSimulationApplications</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
listSimulationApplications_nextToken :: Lens' ListSimulationApplications (Maybe Text)

-- | When this parameter is used, <tt>ListSimulationApplications</tt> only
--   returns <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListSimulationApplications</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListSimulationApplications</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
listSimulationApplications_maxResults :: Lens' ListSimulationApplications (Maybe Int)

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListSimulationApplications</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
listSimulationApplicationsResponse_nextToken :: Lens' ListSimulationApplicationsResponse (Maybe Text)

-- | A list of simulation application summaries that meet the criteria of
--   the request.
listSimulationApplicationsResponse_simulationApplicationSummaries :: Lens' ListSimulationApplicationsResponse (Maybe [SimulationApplicationSummary])

-- | The response's http status code.
listSimulationApplicationsResponse_httpStatus :: Lens' ListSimulationApplicationsResponse Int

-- | The current revision id for the robot application. If you provide a
--   value and it matches the latest revision ID, a new version will be
--   created.
createRobotApplicationVersion_currentRevisionId :: Lens' CreateRobotApplicationVersion (Maybe Text)

-- | The Amazon S3 identifier for the zip file bundle that you use for your
--   robot application.
createRobotApplicationVersion_s3Etags :: Lens' CreateRobotApplicationVersion (Maybe [Text])

-- | A SHA256 identifier for the Docker image that you use for your robot
--   application.
createRobotApplicationVersion_imageDigest :: Lens' CreateRobotApplicationVersion (Maybe Text)

-- | The application information for the robot application.
createRobotApplicationVersion_application :: Lens' CreateRobotApplicationVersion Text

-- | The time, in milliseconds since the epoch, when the robot application
--   was last updated.
createRobotApplicationVersionResponse_lastUpdatedAt :: Lens' CreateRobotApplicationVersionResponse (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the robot application.
createRobotApplicationVersionResponse_arn :: Lens' CreateRobotApplicationVersionResponse (Maybe Text)

-- | The object that contains the Docker image URI used to create your
--   robot application.
createRobotApplicationVersionResponse_environment :: Lens' CreateRobotApplicationVersionResponse (Maybe Environment)

-- | The sources of the robot application.
createRobotApplicationVersionResponse_sources :: Lens' CreateRobotApplicationVersionResponse (Maybe [Source])

-- | The name of the robot application.
createRobotApplicationVersionResponse_name :: Lens' CreateRobotApplicationVersionResponse (Maybe Text)

-- | The version of the robot application.
createRobotApplicationVersionResponse_version :: Lens' CreateRobotApplicationVersionResponse (Maybe Text)

-- | The robot software suite (ROS distribution) used by the robot
--   application.
createRobotApplicationVersionResponse_robotSoftwareSuite :: Lens' CreateRobotApplicationVersionResponse (Maybe RobotSoftwareSuite)

-- | The revision id of the robot application.
createRobotApplicationVersionResponse_revisionId :: Lens' CreateRobotApplicationVersionResponse (Maybe Text)

-- | The response's http status code.
createRobotApplicationVersionResponse_httpStatus :: Lens' CreateRobotApplicationVersionResponse Int

-- | The deployment job ARN to cancel.
cancelDeploymentJob_job :: Lens' CancelDeploymentJob Text

-- | The response's http status code.
cancelDeploymentJobResponse_httpStatus :: Lens' CancelDeploymentJobResponse Int

-- | The Amazon Resource Name (ARN) of the AWS RoboMaker resource you are
--   tagging.
tagResource_resourceArn :: Lens' TagResource Text

-- | A map that contains tag keys and tag values that are attached to the
--   resource.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | Optional filters to limit results. You can use <tt>status</tt>.
listWorlds_filters :: Lens' ListWorlds (Maybe (NonEmpty Filter))

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorlds</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listWorlds_nextToken :: Lens' ListWorlds (Maybe Text)

-- | When this parameter is used, <tt>ListWorlds</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another <tt>ListWorlds</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If this parameter is not used, then
--   <tt>ListWorlds</tt> returns up to 100 results and a <tt>nextToken</tt>
--   value if applicable.
listWorlds_maxResults :: Lens' ListWorlds (Maybe Int)

-- | If the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorlds</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
listWorldsResponse_nextToken :: Lens' ListWorldsResponse (Maybe Text)

-- | Summary information for worlds.
listWorldsResponse_worldSummaries :: Lens' ListWorldsResponse (Maybe [WorldSummary])

-- | The response's http status code.
listWorldsResponse_httpStatus :: Lens' ListWorldsResponse Int

-- | The Amazon Resource Name (ARN) of the AWS RoboMaker resource you are
--   removing tags.
untagResource_resourceArn :: Lens' UntagResource Text

-- | A map that contains tag keys and tag values that will be unattached
--   from the resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The Amazon Resource Name (ARN) of the deployment job.
describeDeploymentJob_job :: Lens' DescribeDeploymentJob Text

-- | A short description of the reason why the deployment job failed.
describeDeploymentJobResponse_failureReason :: Lens' DescribeDeploymentJobResponse (Maybe Text)

-- | The status of the deployment job.
describeDeploymentJobResponse_status :: Lens' DescribeDeploymentJobResponse (Maybe DeploymentStatus)

-- | The deployment application configuration.
describeDeploymentJobResponse_deploymentApplicationConfigs :: Lens' DescribeDeploymentJobResponse (Maybe (NonEmpty DeploymentApplicationConfig))

-- | The Amazon Resource Name (ARN) of the deployment job.
describeDeploymentJobResponse_arn :: Lens' DescribeDeploymentJobResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the deployment job was
--   created.
describeDeploymentJobResponse_createdAt :: Lens' DescribeDeploymentJobResponse (Maybe UTCTime)

-- | The deployment job failure code.
describeDeploymentJobResponse_failureCode :: Lens' DescribeDeploymentJobResponse (Maybe DeploymentJobErrorCode)

-- | The deployment configuration.
describeDeploymentJobResponse_deploymentConfig :: Lens' DescribeDeploymentJobResponse (Maybe DeploymentConfig)

-- | The Amazon Resource Name (ARN) of the fleet.
describeDeploymentJobResponse_fleet :: Lens' DescribeDeploymentJobResponse (Maybe Text)

-- | A list of robot deployment summaries.
describeDeploymentJobResponse_robotDeploymentSummary :: Lens' DescribeDeploymentJobResponse (Maybe [RobotDeployment])

-- | The list of all tags added to the specified deployment job.
describeDeploymentJobResponse_tags :: Lens' DescribeDeploymentJobResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeDeploymentJobResponse_httpStatus :: Lens' DescribeDeploymentJobResponse Int

-- | The Amazon Resource Name (arn) of the world template you want to
--   delete.
deleteWorldTemplate_template :: Lens' DeleteWorldTemplate Text

-- | The response's http status code.
deleteWorldTemplateResponse_httpStatus :: Lens' DeleteWorldTemplateResponse Int

-- | The name of the template.
updateWorldTemplate_name :: Lens' UpdateWorldTemplate (Maybe Text)

-- | The location of the world template.
updateWorldTemplate_templateLocation :: Lens' UpdateWorldTemplate (Maybe TemplateLocation)

-- | The world template body.
updateWorldTemplate_templateBody :: Lens' UpdateWorldTemplate (Maybe Text)

-- | The Amazon Resource Name (arn) of the world template to update.
updateWorldTemplate_template :: Lens' UpdateWorldTemplate Text

-- | The time, in milliseconds since the epoch, when the world template was
--   last updated.
updateWorldTemplateResponse_lastUpdatedAt :: Lens' UpdateWorldTemplateResponse (Maybe UTCTime)

-- | The Amazon Resource Name (arn) of the world template.
updateWorldTemplateResponse_arn :: Lens' UpdateWorldTemplateResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world template was
--   created.
updateWorldTemplateResponse_createdAt :: Lens' UpdateWorldTemplateResponse (Maybe UTCTime)

-- | The name of the world template.
updateWorldTemplateResponse_name :: Lens' UpdateWorldTemplateResponse (Maybe Text)

-- | The response's http status code.
updateWorldTemplateResponse_httpStatus :: Lens' UpdateWorldTemplateResponse Int

-- | The Amazon Resource Name (arn) of the world generation job to
--   describe.
describeWorldGenerationJob_job :: Lens' DescribeWorldGenerationJob Text

-- | The reason why the world generation job failed.
describeWorldGenerationJobResponse_failureReason :: Lens' DescribeWorldGenerationJobResponse (Maybe Text)

-- | The status of the world generation job:
--   
--   <ul>
--   <li><i>Pending</i> The world generation job request is pending.</li>
--   <li><i>Running</i> The world generation job is running.</li>
--   <li><i>Completed</i> The world generation job completed.</li>
--   <li><i>Failed</i> The world generation job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>PartialFailed</i> Some worlds did not generate.</li>
--   <li><i>Canceled</i> The world generation job was cancelled.</li>
--   <li><i>Canceling</i> The world generation job is being cancelled.</li>
--   </ul>
describeWorldGenerationJobResponse_status :: Lens' DescribeWorldGenerationJobResponse (Maybe WorldGenerationJobStatus)

-- | The Amazon Resource Name (ARN) of the world generation job.
describeWorldGenerationJobResponse_arn :: Lens' DescribeWorldGenerationJobResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world generation
--   job was created.
describeWorldGenerationJobResponse_createdAt :: Lens' DescribeWorldGenerationJobResponse (Maybe UTCTime)

-- | The failure code of the world generation job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
describeWorldGenerationJobResponse_failureCode :: Lens' DescribeWorldGenerationJobResponse (Maybe WorldGenerationJobErrorCode)

-- | Information about the world count.
describeWorldGenerationJobResponse_worldCount :: Lens' DescribeWorldGenerationJobResponse (Maybe WorldCount)

-- | Summary information about finished worlds.
describeWorldGenerationJobResponse_finishedWorldsSummary :: Lens' DescribeWorldGenerationJobResponse (Maybe FinishedWorldsSummary)

-- | The Amazon Resource Name (arn) of the world template.
describeWorldGenerationJobResponse_template :: Lens' DescribeWorldGenerationJobResponse (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   generated worlds.
describeWorldGenerationJobResponse_worldTags :: Lens' DescribeWorldGenerationJobResponse (Maybe (HashMap Text Text))

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
describeWorldGenerationJobResponse_clientRequestToken :: Lens' DescribeWorldGenerationJobResponse (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   world generation job.
describeWorldGenerationJobResponse_tags :: Lens' DescribeWorldGenerationJobResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeWorldGenerationJobResponse_httpStatus :: Lens' DescribeWorldGenerationJobResponse Int

-- | The name of the world template.
createWorldTemplate_name :: Lens' CreateWorldTemplate (Maybe Text)

-- | The location of the world template.
createWorldTemplate_templateLocation :: Lens' CreateWorldTemplate (Maybe TemplateLocation)

-- | The world template body.
createWorldTemplate_templateBody :: Lens' CreateWorldTemplate (Maybe Text)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createWorldTemplate_clientRequestToken :: Lens' CreateWorldTemplate (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   world template.
createWorldTemplate_tags :: Lens' CreateWorldTemplate (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the world template.
createWorldTemplateResponse_arn :: Lens' CreateWorldTemplateResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world template was
--   created.
createWorldTemplateResponse_createdAt :: Lens' CreateWorldTemplateResponse (Maybe UTCTime)

-- | The name of the world template.
createWorldTemplateResponse_name :: Lens' CreateWorldTemplateResponse (Maybe Text)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createWorldTemplateResponse_clientRequestToken :: Lens' CreateWorldTemplateResponse (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   world template.
createWorldTemplateResponse_tags :: Lens' CreateWorldTemplateResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createWorldTemplateResponse_httpStatus :: Lens' CreateWorldTemplateResponse Int

-- | The id of the batch to cancel.
cancelSimulationJobBatch_batch :: Lens' CancelSimulationJobBatch Text

-- | The response's http status code.
cancelSimulationJobBatchResponse_httpStatus :: Lens' CancelSimulationJobBatchResponse Int

-- | The Amazon Resource Name (ARN) of the robot to be described.
describeRobot_robot :: Lens' DescribeRobot Text

-- | The Amazon Resource Name (ARN) of the last deployment job.
describeRobotResponse_lastDeploymentJob :: Lens' DescribeRobotResponse (Maybe Text)

-- | The status of the fleet.
describeRobotResponse_status :: Lens' DescribeRobotResponse (Maybe RobotStatus)

-- | The Amazon Resource Name (ARN) of the robot.
describeRobotResponse_arn :: Lens' DescribeRobotResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the robot was created.
describeRobotResponse_createdAt :: Lens' DescribeRobotResponse (Maybe UTCTime)

-- | The Greengrass group id.
describeRobotResponse_greengrassGroupId :: Lens' DescribeRobotResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the fleet.
describeRobotResponse_fleetArn :: Lens' DescribeRobotResponse (Maybe Text)

-- | The name of the robot.
describeRobotResponse_name :: Lens' DescribeRobotResponse (Maybe Text)

-- | The target architecture of the robot application.
describeRobotResponse_architecture :: Lens' DescribeRobotResponse (Maybe Architecture)

-- | The time of the last deployment job.
describeRobotResponse_lastDeploymentTime :: Lens' DescribeRobotResponse (Maybe UTCTime)

-- | The list of all tags added to the specified robot.
describeRobotResponse_tags :: Lens' DescribeRobotResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
describeRobotResponse_httpStatus :: Lens' DescribeRobotResponse Int

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
syncDeploymentJob_clientRequestToken :: Lens' SyncDeploymentJob Text

-- | The target fleet for the synchronization.
syncDeploymentJob_fleet :: Lens' SyncDeploymentJob Text

-- | The failure reason if the job fails.
syncDeploymentJobResponse_failureReason :: Lens' SyncDeploymentJobResponse (Maybe Text)

-- | The status of the synchronization job.
syncDeploymentJobResponse_status :: Lens' SyncDeploymentJobResponse (Maybe DeploymentStatus)

-- | Information about the deployment application configurations.
syncDeploymentJobResponse_deploymentApplicationConfigs :: Lens' SyncDeploymentJobResponse (Maybe (NonEmpty DeploymentApplicationConfig))

-- | The Amazon Resource Name (ARN) of the synchronization request.
syncDeploymentJobResponse_arn :: Lens' SyncDeploymentJobResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the fleet was created.
syncDeploymentJobResponse_createdAt :: Lens' SyncDeploymentJobResponse (Maybe UTCTime)

-- | The failure code if the job fails:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>RobotApplicationCrash</i> Robot application exited
--   abnormally.</li>
--   <li><i>SimulationApplicationCrash</i> Simulation application exited
--   abnormally.</li>
--   <li><i>BadPermissionsRobotApplication</i> Robot application bundle
--   could not be downloaded.</li>
--   <li><i>BadPermissionsSimulationApplication</i> Simulation application
--   bundle could not be downloaded.</li>
--   <li><i>BadPermissionsS3Output</i> Unable to publish outputs to
--   customer-provided S3 bucket.</li>
--   <li><i>BadPermissionsCloudwatchLogs</i> Unable to publish logs to
--   customer-provided CloudWatch Logs resource.</li>
--   <li><i>SubnetIpLimitExceeded</i> Subnet IP limit exceeded.</li>
--   <li><i>ENILimitExceeded</i> ENI limit exceeded.</li>
--   <li><i>BadPermissionsUserCredentials</i> Unable to use the Role
--   provided.</li>
--   <li><i>InvalidBundleRobotApplication</i> Robot bundle cannot be
--   extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>InvalidBundleSimulationApplication</i> Simulation bundle cannot
--   be extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>RobotApplicationVersionMismatchedEtag</i> Etag for
--   RobotApplication does not match value during version creation.</li>
--   <li><i>SimulationApplicationVersionMismatchedEtag</i> Etag for
--   SimulationApplication does not match value during version
--   creation.</li>
--   </ul>
syncDeploymentJobResponse_failureCode :: Lens' SyncDeploymentJobResponse (Maybe DeploymentJobErrorCode)

-- | Information about the deployment configuration.
syncDeploymentJobResponse_deploymentConfig :: Lens' SyncDeploymentJobResponse (Maybe DeploymentConfig)

-- | The Amazon Resource Name (ARN) of the fleet.
syncDeploymentJobResponse_fleet :: Lens' SyncDeploymentJobResponse (Maybe Text)

-- | The response's http status code.
syncDeploymentJobResponse_httpStatus :: Lens' SyncDeploymentJobResponse Int

-- | The amount of time, in seconds, to wait for the batch to complete.
--   
--   If a batch times out, and there are pending requests that were failing
--   due to an internal failure (like <tt>InternalServiceError</tt>), they
--   will be moved to the failed list and the batch status will be
--   <tt>Failed</tt>. If the pending requests were failing for any other
--   reason, the failed pending requests will be moved to the failed list
--   and the batch status will be <tt>TimedOut</tt>.
batchPolicy_timeoutInSeconds :: Lens' BatchPolicy (Maybe Integer)

-- | The number of active simulation jobs create as part of the batch that
--   can be in an active state at the same time.
--   
--   Active states include: <tt>Pending</tt>,<tt>Preparing</tt>,
--   <tt>Running</tt>, <tt>Restarting</tt>, <tt>RunningFailed</tt> and
--   <tt>Terminating</tt>. All other states are terminal states.
batchPolicy_maxConcurrency :: Lens' BatchPolicy (Maybe Int)

-- | The simulation unit limit. Your simulation is allocated CPU and memory
--   proportional to the supplied simulation unit limit. A simulation unit
--   is 1 vcpu and 2GB of memory. You are only billed for the SU
--   utilization you consume up to the maximum value provided. The default
--   is 15.
compute_simulationUnitLimit :: Lens' Compute (Maybe Natural)

-- | Compute GPU unit limit for the simulation job. It is the same as the
--   number of GPUs allocated to the SimulationJob.
compute_gpuUnitLimit :: Lens' Compute (Maybe Natural)

-- | Compute type information for the simulation job.
compute_computeType :: Lens' Compute (Maybe ComputeType)

-- | The simulation unit limit. Your simulation is allocated CPU and memory
--   proportional to the supplied simulation unit limit. A simulation unit
--   is 1 vcpu and 2GB of memory. You are only billed for the SU
--   utilization you consume up to the maximum value provided. The default
--   is 15.
computeResponse_simulationUnitLimit :: Lens' ComputeResponse (Maybe Natural)

-- | Compute GPU unit limit for the simulation job. It is the same as the
--   number of GPUs allocated to the SimulationJob.
computeResponse_gpuUnitLimit :: Lens' ComputeResponse (Maybe Natural)

-- | Compute type response information for the simulation job.
computeResponse_computeType :: Lens' ComputeResponse (Maybe ComputeType)

-- | The list of S3 keys identifying the data source files.
dataSource_s3Keys :: Lens' DataSource (Maybe [S3KeyOutput])

-- | The location where your files are mounted in the container image.
--   
--   If you've specified the <tt>type</tt> of the data source as an
--   <tt>Archive</tt>, you must provide an Amazon S3 object key to your
--   archive. The object key must point to either a <tt>.zip</tt> or
--   <tt>.tar.gz</tt> file.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>Prefix</tt>, you provide the Amazon S3 prefix that points to the
--   files that you are using for your data source.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>File</tt>, you provide the Amazon S3 path to the file that you're
--   using as your data source.
dataSource_destination :: Lens' DataSource (Maybe Text)

-- | The name of the data source.
dataSource_name :: Lens' DataSource (Maybe Text)

-- | The data type for the data source that you're using for your container
--   image or simulation job. You can use this field to specify whether
--   your data source is an Archive, an Amazon S3 prefix, or a file.
--   
--   If you don't specify a field, the default value is <tt>File</tt>.
dataSource_type :: Lens' DataSource (Maybe DataSourceType)

-- | The S3 bucket where the data files are located.
dataSource_s3Bucket :: Lens' DataSource (Maybe Text)

-- | The location where your files are mounted in the container image.
--   
--   If you've specified the <tt>type</tt> of the data source as an
--   <tt>Archive</tt>, you must provide an Amazon S3 object key to your
--   archive. The object key must point to either a <tt>.zip</tt> or
--   <tt>.tar.gz</tt> file.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>Prefix</tt>, you provide the Amazon S3 prefix that points to the
--   files that you are using for your data source.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>File</tt>, you provide the Amazon S3 path to the file that you're
--   using as your data source.
dataSourceConfig_destination :: Lens' DataSourceConfig (Maybe Text)

-- | The data type for the data source that you're using for your container
--   image or simulation job. You can use this field to specify whether
--   your data source is an Archive, an Amazon S3 prefix, or a file.
--   
--   If you don't specify a field, the default value is <tt>File</tt>.
dataSourceConfig_type :: Lens' DataSourceConfig (Maybe DataSourceType)

-- | The name of the data source.
dataSourceConfig_name :: Lens' DataSourceConfig Text

-- | The S3 bucket where the data files are located.
dataSourceConfig_s3Bucket :: Lens' DataSourceConfig Text

-- | The list of S3 keys identifying the data source files.
dataSourceConfig_s3Keys :: Lens' DataSourceConfig (NonEmpty Text)

-- | The Amazon Resource Name (ARN) of the robot application.
deploymentApplicationConfig_application :: Lens' DeploymentApplicationConfig Text

-- | The version of the application.
deploymentApplicationConfig_applicationVersion :: Lens' DeploymentApplicationConfig Text

-- | The launch configuration.
deploymentApplicationConfig_launchConfig :: Lens' DeploymentApplicationConfig DeploymentLaunchConfig

-- | The percentage of robots receiving the deployment at the same time.
deploymentConfig_concurrentDeploymentPercentage :: Lens' DeploymentConfig (Maybe Natural)

-- | The download condition file.
deploymentConfig_downloadConditionFile :: Lens' DeploymentConfig (Maybe S3Object)

-- | The percentage of deployments that need to fail before stopping
--   deployment.
deploymentConfig_failureThresholdPercentage :: Lens' DeploymentConfig (Maybe Natural)

-- | The amount of time, in seconds, to wait for deployment to a single
--   robot to complete. Choose a time between 1 minute and 7 days. The
--   default is 5 hours.
deploymentConfig_robotDeploymentTimeoutInSeconds :: Lens' DeploymentConfig (Maybe Integer)

-- | A short description of the reason why the deployment job failed.
deploymentJob_failureReason :: Lens' DeploymentJob (Maybe Text)

-- | The status of the deployment job.
deploymentJob_status :: Lens' DeploymentJob (Maybe DeploymentStatus)

-- | The deployment application configuration.
deploymentJob_deploymentApplicationConfigs :: Lens' DeploymentJob (Maybe (NonEmpty DeploymentApplicationConfig))

-- | The Amazon Resource Name (ARN) of the deployment job.
deploymentJob_arn :: Lens' DeploymentJob (Maybe Text)

-- | The time, in milliseconds since the epoch, when the deployment job was
--   created.
deploymentJob_createdAt :: Lens' DeploymentJob (Maybe UTCTime)

-- | The deployment job failure code.
deploymentJob_failureCode :: Lens' DeploymentJob (Maybe DeploymentJobErrorCode)

-- | The deployment configuration.
deploymentJob_deploymentConfig :: Lens' DeploymentJob (Maybe DeploymentConfig)

-- | The Amazon Resource Name (ARN) of the fleet.
deploymentJob_fleet :: Lens' DeploymentJob (Maybe Text)

-- | The deployment pre-launch file. This file will be executed prior to
--   the launch file.
deploymentLaunchConfig_preLaunchFile :: Lens' DeploymentLaunchConfig (Maybe Text)

-- | The deployment post-launch file. This file will be executed after the
--   launch file.
deploymentLaunchConfig_postLaunchFile :: Lens' DeploymentLaunchConfig (Maybe Text)

-- | An array of key/value pairs specifying environment variables for the
--   robot application
deploymentLaunchConfig_environmentVariables :: Lens' DeploymentLaunchConfig (Maybe (HashMap Text Text))

-- | The package name.
deploymentLaunchConfig_packageName :: Lens' DeploymentLaunchConfig Text

-- | The launch file name.
deploymentLaunchConfig_launchFile :: Lens' DeploymentLaunchConfig Text

-- | The Docker image URI for either your robot or simulation applications.
environment_uri :: Lens' Environment (Maybe Text)

-- | The failure reason of the simulation job request.
failedCreateSimulationJobRequest_failureReason :: Lens' FailedCreateSimulationJobRequest (Maybe Text)

-- | The failure code.
failedCreateSimulationJobRequest_failureCode :: Lens' FailedCreateSimulationJobRequest (Maybe SimulationJobErrorCode)

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch failed.
failedCreateSimulationJobRequest_failedAt :: Lens' FailedCreateSimulationJobRequest (Maybe UTCTime)

-- | The simulation job request.
failedCreateSimulationJobRequest_request :: Lens' FailedCreateSimulationJobRequest (Maybe SimulationJobRequest)

-- | The worlds that failed.
failureSummary_failures :: Lens' FailureSummary (Maybe [WorldFailure])

-- | The total number of failures.
failureSummary_totalFailureCount :: Lens' FailureSummary (Maybe Int)

-- | A list of values.
filter_values :: Lens' Filter (Maybe (NonEmpty Text))

-- | The name of the filter.
filter_name :: Lens' Filter (Maybe Text)

-- | A list of worlds that succeeded.
finishedWorldsSummary_succeededWorlds :: Lens' FinishedWorldsSummary (Maybe (NonEmpty Text))

-- | Information about worlds that failed.
finishedWorldsSummary_failureSummary :: Lens' FinishedWorldsSummary (Maybe FailureSummary)

-- | The total number of finished worlds.
finishedWorldsSummary_finishedCount :: Lens' FinishedWorldsSummary (Maybe Int)

-- | The Amazon Resource Name (ARN) of the last deployment job.
fleet_lastDeploymentJob :: Lens' Fleet (Maybe Text)

-- | The status of the last fleet deployment.
fleet_lastDeploymentStatus :: Lens' Fleet (Maybe DeploymentStatus)

-- | The Amazon Resource Name (ARN) of the fleet.
fleet_arn :: Lens' Fleet (Maybe Text)

-- | The time, in milliseconds since the epoch, when the fleet was created.
fleet_createdAt :: Lens' Fleet (Maybe UTCTime)

-- | The name of the fleet.
fleet_name :: Lens' Fleet (Maybe Text)

-- | The time of the last deployment.
fleet_lastDeploymentTime :: Lens' Fleet (Maybe UTCTime)

-- | If you've specified <tt>General</tt> as the value for your
--   <tt>RobotSoftwareSuite</tt>, you can use this field to specify a list
--   of commands for your container image.
--   
--   If you've specified <tt>SimulationRuntime</tt> as the value for your
--   <tt>SimulationSoftwareSuite</tt>, you can use this field to specify a
--   list of commands for your container image.
launchConfig_command :: Lens' LaunchConfig (Maybe [Text])

-- | The package name.
launchConfig_packageName :: Lens' LaunchConfig (Maybe Text)

-- | The port forwarding configuration.
launchConfig_portForwardingConfig :: Lens' LaunchConfig (Maybe PortForwardingConfig)

-- | The launch file name.
launchConfig_launchFile :: Lens' LaunchConfig (Maybe Text)

-- | The environment variables for the application launch.
launchConfig_environmentVariables :: Lens' LaunchConfig (Maybe (HashMap Text Text))

-- | Boolean indicating whether a streaming session will be configured for
--   the application. If <tt>True</tt>, AWS RoboMaker will configure a
--   connection so you can interact with your application as it is running
--   in the simulation. You must configure and launch the component. It
--   must have a graphical user interface.
launchConfig_streamUI :: Lens' LaunchConfig (Maybe Bool)

-- | A boolean indicating whether to record all ROS topics.
loggingConfig_recordAllRosTopics :: Lens' LoggingConfig Bool

-- | The ID of the network interface.
networkInterface_networkInterfaceId :: Lens' NetworkInterface (Maybe Text)

-- | The IPv4 address of the network interface within the subnet.
networkInterface_privateIpAddress :: Lens' NetworkInterface (Maybe Text)

-- | The IPv4 public address of the network interface.
networkInterface_publicIpAddress :: Lens' NetworkInterface (Maybe Text)

-- | The S3 folder in the <tt>s3Bucket</tt> where output files will be
--   placed.
outputLocation_s3Prefix :: Lens' OutputLocation (Maybe Text)

-- | The S3 bucket for output.
outputLocation_s3Bucket :: Lens' OutputLocation (Maybe Text)

-- | The port mappings for the configuration.
portForwardingConfig_portMappings :: Lens' PortForwardingConfig (Maybe [PortMapping])

-- | A Boolean indicating whether to enable this port mapping on public IP.
portMapping_enableOnPublicIp :: Lens' PortMapping (Maybe Bool)

-- | The port number on the simulation job instance to use as a remote
--   connection point.
portMapping_jobPort :: Lens' PortMapping Natural

-- | The port number on the application.
portMapping_applicationPort :: Lens' PortMapping Natural

-- | The current progress status.
--   
--   <ul>
--   <li><i>Validating</i> Validating the deployment.</li>
--   <li><i>DownloadingExtracting</i> Downloading and extracting the bundle
--   on the robot.</li>
--   <li><i>ExecutingPreLaunch</i> Executing pre-launch script(s) if
--   provided.</li>
--   <li><i>Launching</i> Launching the robot application.</li>
--   <li><i>ExecutingPostLaunch</i> Executing post-launch script(s) if
--   provided.</li>
--   <li><i>Finished</i> Deployment is complete.</li>
--   </ul>
progressDetail_currentProgress :: Lens' ProgressDetail (Maybe RobotDeploymentStep)

-- | Estimated amount of time in seconds remaining in the step. This
--   currently only applies to the <tt>Downloading/Extracting</tt> step of
--   the deployment. It is empty for other steps.
progressDetail_estimatedTimeRemainingSeconds :: Lens' ProgressDetail (Maybe Int)

-- | The Amazon Resource Name (ARN) of the deployment job.
progressDetail_targetResource :: Lens' ProgressDetail (Maybe Text)

-- | Precentage of the step that is done. This currently only applies to
--   the <tt>Downloading/Extracting</tt> step of the deployment. It is
--   empty for other steps.
progressDetail_percentDone :: Lens' ProgressDetail (Maybe Double)

-- | The name of the rendering engine.
renderingEngine_name :: Lens' RenderingEngine (Maybe RenderingEngineType)

-- | The version of the rendering engine.
renderingEngine_version :: Lens' RenderingEngine (Maybe Text)

-- | The Amazon Resource Name (ARN) of the last deployment job.
robot_lastDeploymentJob :: Lens' Robot (Maybe Text)

-- | The status of the robot.
robot_status :: Lens' Robot (Maybe RobotStatus)

-- | The Amazon Resource Name (ARN) of the robot.
robot_arn :: Lens' Robot (Maybe Text)

-- | The time, in milliseconds since the epoch, when the robot was created.
robot_createdAt :: Lens' Robot (Maybe UTCTime)

-- | The Greengrass group associated with the robot.
robot_greenGrassGroupId :: Lens' Robot (Maybe Text)

-- | The Amazon Resource Name (ARN) of the fleet.
robot_fleetArn :: Lens' Robot (Maybe Text)

-- | The name of the robot.
robot_name :: Lens' Robot (Maybe Text)

-- | The architecture of the robot.
robot_architecture :: Lens' Robot (Maybe Architecture)

-- | The time of the last deployment.
robot_lastDeploymentTime :: Lens' Robot (Maybe UTCTime)

-- | A Boolean indicating whether to use default upload configurations. By
--   default, <tt>.ros</tt> and <tt>.gazebo</tt> files are uploaded when
--   the application terminates and all ROS topics will be recorded.
--   
--   If you set this value, you must specify an <tt>outputLocation</tt>.
robotApplicationConfig_useDefaultUploadConfigurations :: Lens' RobotApplicationConfig (Maybe Bool)

-- | A Boolean indicating whether to use default robot application tools.
--   The default tools are rviz, rqt, terminal and rosbag record. The
--   default is <tt>False</tt>.
robotApplicationConfig_useDefaultTools :: Lens' RobotApplicationConfig (Maybe Bool)

-- | The version of the robot application.
robotApplicationConfig_applicationVersion :: Lens' RobotApplicationConfig (Maybe Text)

-- | The upload configurations for the robot application.
robotApplicationConfig_uploadConfigurations :: Lens' RobotApplicationConfig (Maybe [UploadConfiguration])

-- | Information about tools configured for the robot application.
robotApplicationConfig_tools :: Lens' RobotApplicationConfig (Maybe [Tool])

-- | The application information for the robot application.
robotApplicationConfig_application :: Lens' RobotApplicationConfig Text

-- | The launch configuration for the robot application.
robotApplicationConfig_launchConfig :: Lens' RobotApplicationConfig LaunchConfig

-- | The time, in milliseconds since the epoch, when the robot application
--   was last updated.
robotApplicationSummary_lastUpdatedAt :: Lens' RobotApplicationSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the robot.
robotApplicationSummary_arn :: Lens' RobotApplicationSummary (Maybe Text)

-- | The name of the robot application.
robotApplicationSummary_name :: Lens' RobotApplicationSummary (Maybe Text)

-- | The version of the robot application.
robotApplicationSummary_version :: Lens' RobotApplicationSummary (Maybe Text)

-- | Information about a robot software suite (ROS distribution).
robotApplicationSummary_robotSoftwareSuite :: Lens' RobotApplicationSummary (Maybe RobotSoftwareSuite)

-- | The time, in milliseconds since the epoch, when the deployment was
--   started.
robotDeployment_deploymentStartTime :: Lens' RobotDeployment (Maybe UTCTime)

-- | A short description of the reason why the robot deployment failed.
robotDeployment_failureReason :: Lens' RobotDeployment (Maybe Text)

-- | The status of the robot deployment.
robotDeployment_status :: Lens' RobotDeployment (Maybe RobotStatus)

-- | The robot deployment Amazon Resource Name (ARN).
robotDeployment_arn :: Lens' RobotDeployment (Maybe Text)

-- | The robot deployment failure code.
robotDeployment_failureCode :: Lens' RobotDeployment (Maybe DeploymentJobErrorCode)

-- | Information about how the deployment is progressing.
robotDeployment_progressDetail :: Lens' RobotDeployment (Maybe ProgressDetail)

-- | The time, in milliseconds since the epoch, when the deployment
--   finished.
robotDeployment_deploymentFinishTime :: Lens' RobotDeployment (Maybe UTCTime)

-- | The name of the robot software suite (ROS distribution).
robotSoftwareSuite_name :: Lens' RobotSoftwareSuite (Maybe RobotSoftwareSuiteType)

-- | The version of the robot software suite (ROS distribution).
robotSoftwareSuite_version :: Lens' RobotSoftwareSuite (Maybe RobotSoftwareSuiteVersionType)

-- | The etag for the object.
s3KeyOutput_etag :: Lens' S3KeyOutput (Maybe Text)

-- | The S3 key.
s3KeyOutput_s3Key :: Lens' S3KeyOutput (Maybe Text)

-- | The etag of the object.
s3Object_etag :: Lens' S3Object (Maybe Text)

-- | The bucket containing the object.
s3Object_bucket :: Lens' S3Object Text

-- | The key of the object.
s3Object_key :: Lens' S3Object Text

-- | A Boolean indicating whether to use default upload configurations. By
--   default, <tt>.ros</tt> and <tt>.gazebo</tt> files are uploaded when
--   the application terminates and all ROS topics will be recorded.
--   
--   If you set this value, you must specify an <tt>outputLocation</tt>.
simulationApplicationConfig_useDefaultUploadConfigurations :: Lens' SimulationApplicationConfig (Maybe Bool)

-- | A Boolean indicating whether to use default simulation application
--   tools. The default tools are rviz, rqt, terminal and rosbag record.
--   The default is <tt>False</tt>.
simulationApplicationConfig_useDefaultTools :: Lens' SimulationApplicationConfig (Maybe Bool)

-- | The version of the simulation application.
simulationApplicationConfig_applicationVersion :: Lens' SimulationApplicationConfig (Maybe Text)

-- | Information about upload configurations for the simulation
--   application.
simulationApplicationConfig_uploadConfigurations :: Lens' SimulationApplicationConfig (Maybe [UploadConfiguration])

-- | Information about tools configured for the simulation application.
simulationApplicationConfig_tools :: Lens' SimulationApplicationConfig (Maybe [Tool])

-- | A list of world configurations.
simulationApplicationConfig_worldConfigs :: Lens' SimulationApplicationConfig (Maybe [WorldConfig])

-- | The application information for the simulation application.
simulationApplicationConfig_application :: Lens' SimulationApplicationConfig Text

-- | The launch configuration for the simulation application.
simulationApplicationConfig_launchConfig :: Lens' SimulationApplicationConfig LaunchConfig

-- | The time, in milliseconds since the epoch, when the simulation
--   application was last updated.
simulationApplicationSummary_lastUpdatedAt :: Lens' SimulationApplicationSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the simulation application.
simulationApplicationSummary_arn :: Lens' SimulationApplicationSummary (Maybe Text)

-- | The name of the simulation application.
simulationApplicationSummary_name :: Lens' SimulationApplicationSummary (Maybe Text)

-- | The version of the simulation application.
simulationApplicationSummary_version :: Lens' SimulationApplicationSummary (Maybe Text)

-- | Information about a simulation software suite.
simulationApplicationSummary_simulationSoftwareSuite :: Lens' SimulationApplicationSummary (Maybe SimulationSoftwareSuite)

-- | Information about a robot software suite (ROS distribution).
simulationApplicationSummary_robotSoftwareSuite :: Lens' SimulationApplicationSummary (Maybe RobotSoftwareSuite)

-- | The reason why the simulation job failed.
simulationJob_failureReason :: Lens' SimulationJob (Maybe Text)

-- | The failure behavior the simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the host running for its maximum timeout
--   duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
simulationJob_failureBehavior :: Lens' SimulationJob (Maybe FailureBehavior)

-- | Status of the simulation job.
simulationJob_status :: Lens' SimulationJob (Maybe SimulationJobStatus)

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last updated.
simulationJob_lastUpdatedAt :: Lens' SimulationJob (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the simulation job.
simulationJob_arn :: Lens' SimulationJob (Maybe Text)

-- | A list of robot applications.
simulationJob_robotApplications :: Lens' SimulationJob (Maybe (NonEmpty RobotApplicationConfig))

-- | The failure code of the simulation job if it failed.
simulationJob_failureCode :: Lens' SimulationJob (Maybe SimulationJobErrorCode)

-- | Compute information for the simulation job
simulationJob_compute :: Lens' SimulationJob (Maybe ComputeResponse)

-- | Information about a network interface.
simulationJob_networkInterface :: Lens' SimulationJob (Maybe NetworkInterface)

-- | The data sources for the simulation job.
simulationJob_dataSources :: Lens' SimulationJob (Maybe [DataSource])

-- | The name of the simulation job.
simulationJob_name :: Lens' SimulationJob (Maybe Text)

-- | VPC configuration information.
simulationJob_vpcConfig :: Lens' SimulationJob (Maybe VPCConfigResponse)

-- | Location for output files generated by the simulation job.
simulationJob_outputLocation :: Lens' SimulationJob (Maybe OutputLocation)

-- | A list of simulation applications.
simulationJob_simulationApplications :: Lens' SimulationJob (Maybe (NonEmpty SimulationApplicationConfig))

-- | The simulation job execution duration in milliseconds.
simulationJob_simulationTimeMillis :: Lens' SimulationJob (Maybe Integer)

-- | A unique identifier for this <tt>SimulationJob</tt> request.
simulationJob_clientRequestToken :: Lens' SimulationJob (Maybe Text)

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last started.
simulationJob_lastStartedAt :: Lens' SimulationJob (Maybe UTCTime)

-- | The logging configuration.
simulationJob_loggingConfig :: Lens' SimulationJob (Maybe LoggingConfig)

-- | The IAM role that allows the simulation instance to call the AWS APIs
--   that are specified in its associated policies on your behalf. This is
--   how credentials are passed in to your simulation job.
simulationJob_iamRole :: Lens' SimulationJob (Maybe Text)

-- | The maximum simulation job duration in seconds. The value must be 8
--   days (691,200 seconds) or less.
simulationJob_maxJobDurationInSeconds :: Lens' SimulationJob (Maybe Integer)

-- | A map that contains tag keys and tag values that are attached to the
--   simulation job.
simulationJob_tags :: Lens' SimulationJob (Maybe (HashMap Text Text))

-- | The status of the simulation job batch.
--   
--   <ul>
--   <li><i>Pending</i> The simulation job batch request is pending.</li>
--   <li><i>InProgress</i> The simulation job batch is in progress.</li>
--   <li><i>Failed</i> The simulation job batch failed. One or more
--   simulation job requests could not be completed due to an internal
--   failure (like <tt>InternalServiceError</tt>). See <tt>failureCode</tt>
--   and <tt>failureReason</tt> for more information.</li>
--   <li><i>Completed</i> The simulation batch job completed. A batch is
--   complete when (1) there are no pending simulation job requests in the
--   batch and none of the failed simulation job requests are due to
--   <tt>InternalServiceError</tt> and (2) when all created simulation jobs
--   have reached a terminal state (for example, <tt>Completed</tt> or
--   <tt>Failed</tt>).</li>
--   <li><i>Canceled</i> The simulation batch job was cancelled.</li>
--   <li><i>Canceling</i> The simulation batch job is being cancelled.</li>
--   <li><i>Completing</i> The simulation batch job is completing.</li>
--   <li><i>TimingOut</i> The simulation job batch is timing out.If a batch
--   timing out, and there are pending requests that were failing due to an
--   internal failure (like <tt>InternalServiceError</tt>), the batch
--   status will be <tt>Failed</tt>. If there are no such failing request,
--   the batch status will be <tt>TimedOut</tt>.</li>
--   <li><i>TimedOut</i> The simulation batch job timed out.</li>
--   </ul>
simulationJobBatchSummary_status :: Lens' SimulationJobBatchSummary (Maybe SimulationJobBatchStatus)

-- | The number of created simulation job requests.
simulationJobBatchSummary_createdRequestCount :: Lens' SimulationJobBatchSummary (Maybe Int)

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch was last updated.
simulationJobBatchSummary_lastUpdatedAt :: Lens' SimulationJobBatchSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the batch.
simulationJobBatchSummary_arn :: Lens' SimulationJobBatchSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, when the simulation job
--   batch was created.
simulationJobBatchSummary_createdAt :: Lens' SimulationJobBatchSummary (Maybe UTCTime)

-- | The number of pending simulation job requests.
simulationJobBatchSummary_pendingRequestCount :: Lens' SimulationJobBatchSummary (Maybe Int)

-- | The number of failed simulation job requests.
simulationJobBatchSummary_failedRequestCount :: Lens' SimulationJobBatchSummary (Maybe Int)

-- | The failure behavior the simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the host running for its maximum timeout
--   duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
simulationJobRequest_failureBehavior :: Lens' SimulationJobRequest (Maybe FailureBehavior)

-- | The robot applications to use in the simulation job.
simulationJobRequest_robotApplications :: Lens' SimulationJobRequest (Maybe (NonEmpty RobotApplicationConfig))

-- | Compute information for the simulation job
simulationJobRequest_compute :: Lens' SimulationJobRequest (Maybe Compute)

-- | Specify data sources to mount read-only files from S3 into your
--   simulation. These files are available under
--   <tt>/opt/robomaker/datasources/data_source_name</tt>.
--   
--   There is a limit of 100 files and a combined size of 25GB for all
--   <tt>DataSourceConfig</tt> objects.
simulationJobRequest_dataSources :: Lens' SimulationJobRequest (Maybe (NonEmpty DataSourceConfig))

-- | A Boolean indicating whether to use default applications in the
--   simulation job. Default applications include Gazebo, rqt, rviz and
--   terminal access.
simulationJobRequest_useDefaultApplications :: Lens' SimulationJobRequest (Maybe Bool)

-- | Undocumented member.
simulationJobRequest_vpcConfig :: Lens' SimulationJobRequest (Maybe VPCConfig)

-- | Undocumented member.
simulationJobRequest_outputLocation :: Lens' SimulationJobRequest (Maybe OutputLocation)

-- | The simulation applications to use in the simulation job.
simulationJobRequest_simulationApplications :: Lens' SimulationJobRequest (Maybe (NonEmpty SimulationApplicationConfig))

-- | Undocumented member.
simulationJobRequest_loggingConfig :: Lens' SimulationJobRequest (Maybe LoggingConfig)

-- | The IAM role name that allows the simulation instance to call the AWS
--   APIs that are specified in its associated policies on your behalf.
--   This is how credentials are passed in to your simulation job.
simulationJobRequest_iamRole :: Lens' SimulationJobRequest (Maybe Text)

-- | A map that contains tag keys and tag values that are attached to the
--   simulation job request.
simulationJobRequest_tags :: Lens' SimulationJobRequest (Maybe (HashMap Text Text))

-- | The maximum simulation job duration in seconds. The value must be 8
--   days (691,200 seconds) or less.
simulationJobRequest_maxJobDurationInSeconds :: Lens' SimulationJobRequest Integer

-- | The status of the simulation job.
simulationJobSummary_status :: Lens' SimulationJobSummary (Maybe SimulationJobStatus)

-- | A list of simulation job robot application names.
simulationJobSummary_robotApplicationNames :: Lens' SimulationJobSummary (Maybe [Text])

-- | The time, in milliseconds since the epoch, when the simulation job was
--   last updated.
simulationJobSummary_lastUpdatedAt :: Lens' SimulationJobSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the simulation job.
simulationJobSummary_arn :: Lens' SimulationJobSummary (Maybe Text)

-- | The name of the simulation job.
simulationJobSummary_name :: Lens' SimulationJobSummary (Maybe Text)

-- | A list of simulation job simulation application names.
simulationJobSummary_simulationApplicationNames :: Lens' SimulationJobSummary (Maybe [Text])

-- | The compute type for the simulation job summary.
simulationJobSummary_computeType :: Lens' SimulationJobSummary (Maybe ComputeType)

-- | The names of the data sources.
simulationJobSummary_dataSourceNames :: Lens' SimulationJobSummary (Maybe [Text])

-- | The name of the simulation software suite.
simulationSoftwareSuite_name :: Lens' SimulationSoftwareSuite (Maybe SimulationSoftwareSuiteType)

-- | The version of the simulation software suite.
simulationSoftwareSuite_version :: Lens' SimulationSoftwareSuite (Maybe Text)

-- | A hash of the object specified by <tt>s3Bucket</tt> and
--   <tt>s3Key</tt>.
source_etag :: Lens' Source (Maybe Text)

-- | The s3 object key.
source_s3Key :: Lens' Source (Maybe Text)

-- | The taget processor architecture for the application.
source_architecture :: Lens' Source (Maybe Architecture)

-- | The s3 bucket name.
source_s3Bucket :: Lens' Source (Maybe Text)

-- | The s3 object key.
sourceConfig_s3Key :: Lens' SourceConfig (Maybe Text)

-- | The target processor architecture for the application.
sourceConfig_architecture :: Lens' SourceConfig (Maybe Architecture)

-- | The Amazon S3 bucket name.
sourceConfig_s3Bucket :: Lens' SourceConfig (Maybe Text)

-- | The Amazon S3 bucket name.
templateLocation_s3Bucket :: Lens' TemplateLocation Text

-- | The list of S3 keys identifying the data source files.
templateLocation_s3Key :: Lens' TemplateLocation Text

-- | The time, in milliseconds since the epoch, when the template was last
--   updated.
templateSummary_lastUpdatedAt :: Lens' TemplateSummary (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the template.
templateSummary_arn :: Lens' TemplateSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, when the template was
--   created.
templateSummary_createdAt :: Lens' TemplateSummary (Maybe UTCTime)

-- | The name of the template.
templateSummary_name :: Lens' TemplateSummary (Maybe Text)

-- | The version of the template that you're using.
templateSummary_version :: Lens' TemplateSummary (Maybe Text)

-- | Boolean indicating whether logs will be recorded in CloudWatch for the
--   tool. The default is <tt>False</tt>.
tool_streamOutputToCloudWatch :: Lens' Tool (Maybe Bool)

-- | Exit behavior determines what happens when your tool quits running.
--   <tt>RESTART</tt> will cause your tool to be restarted. <tt>FAIL</tt>
--   will cause your job to exit. The default is <tt>RESTART</tt>.
tool_exitBehavior :: Lens' Tool (Maybe ExitBehavior)

-- | Boolean indicating whether a streaming session will be configured for
--   the tool. If <tt>True</tt>, AWS RoboMaker will configure a connection
--   so you can interact with the tool as it is running in the simulation.
--   It must have a graphical user interface. The default is
--   <tt>False</tt>.
tool_streamUI :: Lens' Tool (Maybe Bool)

-- | The name of the tool.
tool_name :: Lens' Tool Text

-- | Command-line arguments for the tool. It must include the tool
--   executable name.
tool_command :: Lens' Tool Text

-- | A prefix that specifies where files will be uploaded in Amazon S3. It
--   is appended to the simulation output location to determine the final
--   path.
--   
--   For example, if your simulation output location is
--   <tt>s3://my-bucket</tt> and your upload configuration name is
--   <tt>robot-test</tt>, your files will be uploaded to
--   <tt>s3://my-bucket/&lt;simid&gt;/&lt;runid&gt;/robot-test</tt>.
uploadConfiguration_name :: Lens' UploadConfiguration Text

-- | Specifies the path of the file(s) to upload. Standard Unix glob
--   matching rules are accepted, with the addition of <tt>**</tt> as a
--   <i>super asterisk</i>. For example, specifying
--   <tt>/var/log/**.log</tt> causes all .log files in the
--   <tt>/var/log</tt> directory tree to be collected. For more examples,
--   see <a>Glob Library</a>.
uploadConfiguration_path :: Lens' UploadConfiguration Text

-- | Specifies when to upload the files:
--   
--   <ul>
--   <li><i>UPLOAD_ON_TERMINATE</i> Matching files are uploaded once the
--   simulation enters the <tt>TERMINATING</tt> state. Matching files are
--   not uploaded until all of your code (including tools) have stopped.If
--   there is a problem uploading a file, the upload is retried. If
--   problems persist, no further upload attempts will be made.</li>
--   <li><i>UPLOAD_ROLLING_AUTO_REMOVE</i> Matching files are uploaded as
--   they are created. They are deleted after they are uploaded. The
--   specified path is checked every 5 seconds. A final check is made when
--   all of your code (including tools) have stopped.</li>
--   </ul>
uploadConfiguration_uploadBehavior :: Lens' UploadConfiguration UploadBehavior

-- | A list of one or more security groups IDs in your VPC.
vPCConfig_securityGroups :: Lens' VPCConfig (Maybe (NonEmpty Text))

-- | A boolean indicating whether to assign a public IP address.
vPCConfig_assignPublicIp :: Lens' VPCConfig (Maybe Bool)

-- | A list of one or more subnet IDs in your VPC.
vPCConfig_subnets :: Lens' VPCConfig (NonEmpty Text)

-- | A list of security group IDs associated with the simulation job.
vPCConfigResponse_securityGroups :: Lens' VPCConfigResponse (Maybe (NonEmpty Text))

-- | The VPC ID associated with your simulation job.
vPCConfigResponse_vpcId :: Lens' VPCConfigResponse (Maybe Text)

-- | A list of subnet IDs associated with the simulation job.
vPCConfigResponse_subnets :: Lens' VPCConfigResponse (Maybe (NonEmpty Text))

-- | A boolean indicating if a public IP was assigned.
vPCConfigResponse_assignPublicIp :: Lens' VPCConfigResponse (Maybe Bool)

-- | The world generated by Simulation WorldForge.
worldConfig_world :: Lens' WorldConfig (Maybe Text)

-- | The number of unique interiors per floorplan.
worldCount_interiorCountPerFloorplan :: Lens' WorldCount (Maybe Int)

-- | The number of unique floorplans.
worldCount_floorplanCount :: Lens' WorldCount (Maybe Int)

-- | The status of the world export job.
--   
--   <ul>
--   <li><i>Pending</i> The world export job request is pending.</li>
--   <li><i>Running</i> The world export job is running.</li>
--   <li><i>Completed</i> The world export job completed.</li>
--   <li><i>Failed</i> The world export job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>Canceled</i> The world export job was cancelled.</li>
--   <li><i>Canceling</i> The world export job is being cancelled.</li>
--   </ul>
worldExportJobSummary_status :: Lens' WorldExportJobSummary (Maybe WorldExportJobStatus)

-- | The Amazon Resource Name (ARN) of the world export job.
worldExportJobSummary_arn :: Lens' WorldExportJobSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world export job
--   was created.
worldExportJobSummary_createdAt :: Lens' WorldExportJobSummary (Maybe UTCTime)

-- | A list of worlds.
worldExportJobSummary_worlds :: Lens' WorldExportJobSummary (Maybe (NonEmpty Text))

-- | The sample reason why the world failed. World errors are aggregated. A
--   sample is used as the <tt>sampleFailureReason</tt>.
worldFailure_sampleFailureReason :: Lens' WorldFailure (Maybe Text)

-- | The failure code of the world export job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
worldFailure_failureCode :: Lens' WorldFailure (Maybe WorldGenerationJobErrorCode)

-- | The number of failed worlds.
worldFailure_failureCount :: Lens' WorldFailure (Maybe Int)

-- | The status of the world generator job:
--   
--   <ul>
--   <li><i>Pending</i> The world generator job request is pending.</li>
--   <li><i>Running</i> The world generator job is running.</li>
--   <li><i>Completed</i> The world generator job completed.</li>
--   <li><i>Failed</i> The world generator job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>PartialFailed</i> Some worlds did not generate.</li>
--   <li><i>Canceled</i> The world generator job was cancelled.</li>
--   <li><i>Canceling</i> The world generator job is being cancelled.</li>
--   </ul>
worldGenerationJobSummary_status :: Lens' WorldGenerationJobSummary (Maybe WorldGenerationJobStatus)

-- | The Amazon Resource Name (ARN) of the world generator job.
worldGenerationJobSummary_arn :: Lens' WorldGenerationJobSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world generator
--   job was created.
worldGenerationJobSummary_createdAt :: Lens' WorldGenerationJobSummary (Maybe UTCTime)

-- | Information about the world count.
worldGenerationJobSummary_worldCount :: Lens' WorldGenerationJobSummary (Maybe WorldCount)

-- | The number of worlds that were generated.
worldGenerationJobSummary_succeededWorldCount :: Lens' WorldGenerationJobSummary (Maybe Int)

-- | The number of worlds that failed.
worldGenerationJobSummary_failedWorldCount :: Lens' WorldGenerationJobSummary (Maybe Int)

-- | The Amazon Resource Name (arn) of the world template.
worldGenerationJobSummary_template :: Lens' WorldGenerationJobSummary (Maybe Text)

-- | The Amazon Resource Name (ARN) of the world.
worldSummary_arn :: Lens' WorldSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, when the world was created.
worldSummary_createdAt :: Lens' WorldSummary (Maybe UTCTime)

-- | The Amazon Resource Name (arn) of the world template.
worldSummary_template :: Lens' WorldSummary (Maybe Text)

-- | The Amazon Resource Name (arn) of the world generation job.
worldSummary_generationJob :: Lens' WorldSummary (Maybe Text)


module Amazonka.RobOMaker.Waiters


-- | Derived from API version <tt>2018-06-29</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   This section provides documentation for the AWS RoboMaker API
--   operations.
module Amazonka.RobOMaker

-- | API version <tt>2018-06-29</tt> of the Amazon RoboMaker SDK
--   configuration.
defaultService :: Service

-- | A parameter specified in a request is not valid, is unsupported, or
--   cannot be used. The returned message provides an explanation of the
--   error value.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | AWS RoboMaker is temporarily unable to process the request. Try your
--   call again.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | AWS RoboMaker experienced a service issue. Try your call again.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The failure percentage threshold percentage was met.
_ConcurrentDeploymentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request has failed due to a temporary failure of the server.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request uses the same client token as a previous, but
--   non-identical request. Do not reuse a client token with different
--   requests, unless the requests are identical.
_IdempotentParameterMismatchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource does not exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested resource exceeds the maximum number allowed, or the
--   number of concurrent stream requests exceeds the maximum number
--   allowed.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newDescribeWorldExportJob</a> smart constructor.
data DescribeWorldExportJob
DescribeWorldExportJob' :: Text -> DescribeWorldExportJob

-- | Create a value of <a>DescribeWorldExportJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:DescribeWorldExportJob'</a>,
--   <a>describeWorldExportJob_job</a> - The Amazon Resource Name (arn) of
--   the world export job to describe.
newDescribeWorldExportJob :: Text -> DescribeWorldExportJob

-- | <i>See:</i> <a>newDescribeWorldExportJobResponse</a> smart
--   constructor.
data DescribeWorldExportJobResponse
DescribeWorldExportJobResponse' :: Maybe Text -> Maybe WorldExportJobStatus -> Maybe Text -> Maybe POSIX -> Maybe WorldExportJobErrorCode -> Maybe OutputLocation -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe (HashMap Text Text) -> Int -> DescribeWorldExportJobResponse

-- | Create a value of <a>DescribeWorldExportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_failureReason</a> - The reason why
--   the world export job failed.
--   
--   <a>$sel:status:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_status</a> - The status of the world
--   export job.
--   
--   <ul>
--   <li><i>Pending</i> The world export job request is pending.</li>
--   <li><i>Running</i> The world export job is running.</li>
--   <li><i>Completed</i> The world export job completed.</li>
--   <li><i>Failed</i> The world export job failed. See
--   <tt>failureCode</tt> and <tt>failureReason</tt> for more
--   information.</li>
--   <li><i>Canceled</i> The world export job was cancelled.</li>
--   <li><i>Canceling</i> The world export job is being cancelled.</li>
--   </ul>
--   
--   <a>$sel:arn:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the world export job.
--   
--   <a>$sel:createdAt:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the world export job was created.
--   
--   <a>$sel:failureCode:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_failureCode</a> - The failure code
--   of the world export job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
--   
--   <a>$sel:outputLocation:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_outputLocation</a> - Undocumented
--   member.
--   
--   <a>$sel:clientRequestToken:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:iamRole:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_iamRole</a> - The IAM role that the
--   world export process uses to access the Amazon S3 bucket and put the
--   export.
--   
--   <a>$sel:worlds:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_worlds</a> - A list of Amazon
--   Resource Names (arns) that correspond to worlds to be exported.
--   
--   <a>$sel:tags:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_tags</a> - A map that contains tag
--   keys and tag values that are attached to the world export job.
--   
--   <a>$sel:httpStatus:DescribeWorldExportJobResponse'</a>,
--   <a>describeWorldExportJobResponse_httpStatus</a> - The response's http
--   status code.
newDescribeWorldExportJobResponse :: Int -> DescribeWorldExportJobResponse

-- | <i>See:</i> <a>newBatchDeleteWorlds</a> smart constructor.
data BatchDeleteWorlds
BatchDeleteWorlds' :: NonEmpty Text -> BatchDeleteWorlds

-- | Create a value of <a>BatchDeleteWorlds</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:worlds:BatchDeleteWorlds'</a>, <a>batchDeleteWorlds_worlds</a>
--   - A list of Amazon Resource Names (arns) that correspond to worlds to
--   delete.
newBatchDeleteWorlds :: NonEmpty Text -> BatchDeleteWorlds

-- | <i>See:</i> <a>newBatchDeleteWorldsResponse</a> smart constructor.
data BatchDeleteWorldsResponse
BatchDeleteWorldsResponse' :: Maybe (NonEmpty Text) -> Int -> BatchDeleteWorldsResponse

-- | Create a value of <a>BatchDeleteWorldsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedWorlds:BatchDeleteWorldsResponse'</a>,
--   <a>batchDeleteWorldsResponse_unprocessedWorlds</a> - A list of
--   unprocessed worlds associated with the call. These worlds were not
--   deleted.
--   
--   <a>$sel:httpStatus:BatchDeleteWorldsResponse'</a>,
--   <a>batchDeleteWorldsResponse_httpStatus</a> - The response's http
--   status code.
newBatchDeleteWorldsResponse :: Int -> BatchDeleteWorldsResponse

-- | <i>See:</i> <a>newGetWorldTemplateBody</a> smart constructor.
data GetWorldTemplateBody
GetWorldTemplateBody' :: Maybe Text -> Maybe Text -> GetWorldTemplateBody

-- | Create a value of <a>GetWorldTemplateBody</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:template:GetWorldTemplateBody'</a>,
--   <a>getWorldTemplateBody_template</a> - The Amazon Resource Name (arn)
--   of the world template.
--   
--   <a>$sel:generationJob:GetWorldTemplateBody'</a>,
--   <a>getWorldTemplateBody_generationJob</a> - The Amazon Resource Name
--   (arn) of the world generator job.
newGetWorldTemplateBody :: GetWorldTemplateBody

-- | <i>See:</i> <a>newGetWorldTemplateBodyResponse</a> smart constructor.
data GetWorldTemplateBodyResponse
GetWorldTemplateBodyResponse' :: Maybe Text -> Int -> GetWorldTemplateBodyResponse

-- | Create a value of <a>GetWorldTemplateBodyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:templateBody:GetWorldTemplateBodyResponse'</a>,
--   <a>getWorldTemplateBodyResponse_templateBody</a> - The world template
--   body.
--   
--   <a>$sel:httpStatus:GetWorldTemplateBodyResponse'</a>,
--   <a>getWorldTemplateBodyResponse_httpStatus</a> - The response's http
--   status code.
newGetWorldTemplateBodyResponse :: Int -> GetWorldTemplateBodyResponse

-- | <i>See:</i> <a>newDeleteFleet</a> smart constructor.
data DeleteFleet
DeleteFleet' :: Text -> DeleteFleet

-- | Create a value of <a>DeleteFleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleet:DeleteFleet'</a>, <a>deleteFleet_fleet</a> - The Amazon
--   Resource Name (ARN) of the fleet.
newDeleteFleet :: Text -> DeleteFleet

-- | <i>See:</i> <a>newDeleteFleetResponse</a> smart constructor.
data DeleteFleetResponse
DeleteFleetResponse' :: Int -> DeleteFleetResponse

-- | Create a value of <a>DeleteFleetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteFleetResponse'</a>,
--   <a>deleteFleetResponse_httpStatus</a> - The response's http status
--   code.
newDeleteFleetResponse :: Int -> DeleteFleetResponse

-- | <i>See:</i> <a>newCreateWorldGenerationJob</a> smart constructor.
data CreateWorldGenerationJob
CreateWorldGenerationJob' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> WorldCount -> CreateWorldGenerationJob

-- | Create a value of <a>CreateWorldGenerationJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:worldTags:CreateWorldGenerationJob'</a>,
--   <a>createWorldGenerationJob_worldTags</a> - A map that contains tag
--   keys and tag values that are attached to the generated worlds.
--   
--   <a>$sel:clientRequestToken:CreateWorldGenerationJob'</a>,
--   <a>createWorldGenerationJob_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:tags:CreateWorldGenerationJob'</a>,
--   <a>createWorldGenerationJob_tags</a> - A map that contains tag keys
--   and tag values that are attached to the world generator job.
--   
--   <a>$sel:template:CreateWorldGenerationJob'</a>,
--   <a>createWorldGenerationJob_template</a> - The Amazon Resource Name
--   (arn) of the world template describing the worlds you want to create.
--   
--   <a>$sel:worldCount:CreateWorldGenerationJob'</a>,
--   <a>createWorldGenerationJob_worldCount</a> - Information about the
--   world count.
newCreateWorldGenerationJob :: Text -> WorldCount -> CreateWorldGenerationJob

-- | <i>See:</i> <a>newCreateWorldGenerationJobResponse</a> smart
--   constructor.
data CreateWorldGenerationJobResponse
CreateWorldGenerationJobResponse' :: Maybe WorldGenerationJobStatus -> Maybe Text -> Maybe POSIX -> Maybe WorldGenerationJobErrorCode -> Maybe WorldCount -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateWorldGenerationJobResponse

-- | Create a value of <a>CreateWorldGenerationJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateWorldGenerationJobResponse'</a>,
--   <a>createWorldGenerationJobResponse_status</a> - The status of the
--   world generator job.
--   
--   <ul>
--   <li><i>Pending</i> The world generator job request is pending.</li>
--   <li><i>Running</i> The world generator job is running.</li>
--   <li><i>Completed</i> The world generator job completed.</li>
--   <li><i>Failed</i> The world generator job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>PartialFailed</i> Some worlds did not generate.</li>
--   <li><i>Canceled</i> The world generator job was cancelled.</li>
--   <li><i>Canceling</i> The world generator job is being cancelled.</li>
--   </ul>
--   
--   <a>$sel:arn:CreateWorldGenerationJobResponse'</a>,
--   <a>createWorldGenerationJobResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the world generator job.
--   
--   <a>$sel:createdAt:CreateWorldGenerationJobResponse'</a>,
--   <a>createWorldGenerationJobResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the world generator job was
--   created.
--   
--   <a>$sel:failureCode:CreateWorldGenerationJobResponse'</a>,
--   <a>createWorldGenerationJobResponse_failureCode</a> - The failure code
--   of the world generator job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
--   
--   <a>$sel:worldCount:CreateWorldGenerationJob'</a>,
--   <a>createWorldGenerationJobResponse_worldCount</a> - Information about
--   the world count.
--   
--   <a>$sel:template:CreateWorldGenerationJob'</a>,
--   <a>createWorldGenerationJobResponse_template</a> - The Amazon Resource
--   Name (arn) of the world template.
--   
--   <a>$sel:worldTags:CreateWorldGenerationJob'</a>,
--   <a>createWorldGenerationJobResponse_worldTags</a> - A map that
--   contains tag keys and tag values that are attached to the generated
--   worlds.
--   
--   <a>$sel:clientRequestToken:CreateWorldGenerationJob'</a>,
--   <a>createWorldGenerationJobResponse_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:tags:CreateWorldGenerationJob'</a>,
--   <a>createWorldGenerationJobResponse_tags</a> - A map that contains tag
--   keys and tag values that are attached to the world generator job.
--   
--   <a>$sel:httpStatus:CreateWorldGenerationJobResponse'</a>,
--   <a>createWorldGenerationJobResponse_httpStatus</a> - The response's
--   http status code.
newCreateWorldGenerationJobResponse :: Int -> CreateWorldGenerationJobResponse

-- | <i>See:</i> <a>newListRobotApplications</a> smart constructor.
data ListRobotApplications
ListRobotApplications' :: Maybe Text -> Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Int -> ListRobotApplications

-- | Create a value of <a>ListRobotApplications</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionQualifier:ListRobotApplications'</a>,
--   <a>listRobotApplications_versionQualifier</a> - The version qualifier
--   of the robot application.
--   
--   <a>$sel:filters:ListRobotApplications'</a>,
--   <a>listRobotApplications_filters</a> - Optional filters to limit
--   results.
--   
--   The filter name <tt>name</tt> is supported. When filtering, you must
--   use the complete value of the filtered item. You can use up to three
--   filters.
--   
--   <a>$sel:nextToken:ListRobotApplications'</a>,
--   <a>listRobotApplications_nextToken</a> - If the previous paginated
--   request did not return all of the remaining results, the response
--   object's <tt>nextToken</tt> parameter value is set to a token. To
--   retrieve the next set of results, call <tt>ListRobotApplications</tt>
--   again and assign that token to the request object's <tt>nextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's NextToken parameter is set to null.
--   
--   <a>$sel:maxResults:ListRobotApplications'</a>,
--   <a>listRobotApplications_maxResults</a> - When this parameter is used,
--   <tt>ListRobotApplications</tt> only returns <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. The remaining results of the initial request can be seen by
--   sending another <tt>ListRobotApplications</tt> request with the
--   returned <tt>nextToken</tt> value. This value can be between 1 and
--   100. If this parameter is not used, then
--   <tt>ListRobotApplications</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
newListRobotApplications :: ListRobotApplications

-- | <i>See:</i> <a>newListRobotApplicationsResponse</a> smart constructor.
data ListRobotApplicationsResponse
ListRobotApplicationsResponse' :: Maybe [RobotApplicationSummary] -> Maybe Text -> Int -> ListRobotApplicationsResponse

-- | Create a value of <a>ListRobotApplicationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:robotApplicationSummaries:ListRobotApplicationsResponse'</a>,
--   <a>listRobotApplicationsResponse_robotApplicationSummaries</a> - A
--   list of robot application summaries that meet the criteria of the
--   request.
--   
--   <a>$sel:nextToken:ListRobotApplications'</a>,
--   <a>listRobotApplicationsResponse_nextToken</a> - If the previous
--   paginated request did not return all of the remaining results, the
--   response object's <tt>nextToken</tt> parameter value is set to a
--   token. To retrieve the next set of results, call
--   <tt>ListRobotApplications</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
--   
--   <a>$sel:httpStatus:ListRobotApplicationsResponse'</a>,
--   <a>listRobotApplicationsResponse_httpStatus</a> - The response's http
--   status code.
newListRobotApplicationsResponse :: Int -> ListRobotApplicationsResponse

-- | <i>See:</i> <a>newUpdateRobotApplication</a> smart constructor.
data UpdateRobotApplication
UpdateRobotApplication' :: Maybe Text -> Maybe Environment -> Maybe [SourceConfig] -> Text -> RobotSoftwareSuite -> UpdateRobotApplication

-- | Create a value of <a>UpdateRobotApplication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currentRevisionId:UpdateRobotApplication'</a>,
--   <a>updateRobotApplication_currentRevisionId</a> - The revision id for
--   the robot application.
--   
--   <a>$sel:environment:UpdateRobotApplication'</a>,
--   <a>updateRobotApplication_environment</a> - The object that contains
--   the Docker image URI for your robot application.
--   
--   <a>$sel:sources:UpdateRobotApplication'</a>,
--   <a>updateRobotApplication_sources</a> - The sources of the robot
--   application.
--   
--   <a>$sel:application:UpdateRobotApplication'</a>,
--   <a>updateRobotApplication_application</a> - The application
--   information for the robot application.
--   
--   <a>$sel:robotSoftwareSuite:UpdateRobotApplication'</a>,
--   <a>updateRobotApplication_robotSoftwareSuite</a> - The robot software
--   suite (ROS distribution) used by the robot application.
newUpdateRobotApplication :: Text -> RobotSoftwareSuite -> UpdateRobotApplication

-- | <i>See:</i> <a>newUpdateRobotApplicationResponse</a> smart
--   constructor.
data UpdateRobotApplicationResponse
UpdateRobotApplicationResponse' :: Maybe POSIX -> Maybe Text -> Maybe Environment -> Maybe [Source] -> Maybe Text -> Maybe Text -> Maybe RobotSoftwareSuite -> Maybe Text -> Int -> UpdateRobotApplicationResponse

-- | Create a value of <a>UpdateRobotApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:UpdateRobotApplicationResponse'</a>,
--   <a>updateRobotApplicationResponse_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the robot application was last
--   updated.
--   
--   <a>$sel:arn:UpdateRobotApplicationResponse'</a>,
--   <a>updateRobotApplicationResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the updated robot application.
--   
--   <a>$sel:environment:UpdateRobotApplication'</a>,
--   <a>updateRobotApplicationResponse_environment</a> - The object that
--   contains the Docker image URI for your robot application.
--   
--   <a>$sel:sources:UpdateRobotApplication'</a>,
--   <a>updateRobotApplicationResponse_sources</a> - The sources of the
--   robot application.
--   
--   <a>$sel:name:UpdateRobotApplicationResponse'</a>,
--   <a>updateRobotApplicationResponse_name</a> - The name of the robot
--   application.
--   
--   <a>$sel:version:UpdateRobotApplicationResponse'</a>,
--   <a>updateRobotApplicationResponse_version</a> - The version of the
--   robot application.
--   
--   <a>$sel:robotSoftwareSuite:UpdateRobotApplication'</a>,
--   <a>updateRobotApplicationResponse_robotSoftwareSuite</a> - The robot
--   software suite (ROS distribution) used by the robot application.
--   
--   <a>$sel:revisionId:UpdateRobotApplicationResponse'</a>,
--   <a>updateRobotApplicationResponse_revisionId</a> - The revision id of
--   the robot application.
--   
--   <a>$sel:httpStatus:UpdateRobotApplicationResponse'</a>,
--   <a>updateRobotApplicationResponse_httpStatus</a> - The response's http
--   status code.
newUpdateRobotApplicationResponse :: Int -> UpdateRobotApplicationResponse

-- | <i>See:</i> <a>newDeleteRobotApplication</a> smart constructor.
data DeleteRobotApplication
DeleteRobotApplication' :: Maybe Text -> Text -> DeleteRobotApplication

-- | Create a value of <a>DeleteRobotApplication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationVersion:DeleteRobotApplication'</a>,
--   <a>deleteRobotApplication_applicationVersion</a> - The version of the
--   robot application to delete.
--   
--   <a>$sel:application:DeleteRobotApplication'</a>,
--   <a>deleteRobotApplication_application</a> - The Amazon Resource Name
--   (ARN) of the the robot application.
newDeleteRobotApplication :: Text -> DeleteRobotApplication

-- | <i>See:</i> <a>newDeleteRobotApplicationResponse</a> smart
--   constructor.
data DeleteRobotApplicationResponse
DeleteRobotApplicationResponse' :: Int -> DeleteRobotApplicationResponse

-- | Create a value of <a>DeleteRobotApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRobotApplicationResponse'</a>,
--   <a>deleteRobotApplicationResponse_httpStatus</a> - The response's http
--   status code.
newDeleteRobotApplicationResponse :: Int -> DeleteRobotApplicationResponse

-- | <i>See:</i> <a>newCreateSimulationApplicationVersion</a> smart
--   constructor.
data CreateSimulationApplicationVersion
CreateSimulationApplicationVersion' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Text -> CreateSimulationApplicationVersion

-- | Create a value of <a>CreateSimulationApplicationVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currentRevisionId:CreateSimulationApplicationVersion'</a>,
--   <a>createSimulationApplicationVersion_currentRevisionId</a> - The
--   current revision id for the simulation application. If you provide a
--   value and it matches the latest revision ID, a new version will be
--   created.
--   
--   <a>$sel:s3Etags:CreateSimulationApplicationVersion'</a>,
--   <a>createSimulationApplicationVersion_s3Etags</a> - The Amazon S3 eTag
--   identifier for the zip file bundle that you use to create the
--   simulation application.
--   
--   <a>$sel:imageDigest:CreateSimulationApplicationVersion'</a>,
--   <a>createSimulationApplicationVersion_imageDigest</a> - The SHA256
--   digest used to identify the Docker image URI used to created the
--   simulation application.
--   
--   <a>$sel:application:CreateSimulationApplicationVersion'</a>,
--   <a>createSimulationApplicationVersion_application</a> - The
--   application information for the simulation application.
newCreateSimulationApplicationVersion :: Text -> CreateSimulationApplicationVersion

-- | <i>See:</i> <a>newCreateSimulationApplicationVersionResponse</a> smart
--   constructor.
data CreateSimulationApplicationVersionResponse
CreateSimulationApplicationVersionResponse' :: Maybe RenderingEngine -> Maybe POSIX -> Maybe Text -> Maybe Environment -> Maybe [Source] -> Maybe Text -> Maybe Text -> Maybe SimulationSoftwareSuite -> Maybe RobotSoftwareSuite -> Maybe Text -> Int -> CreateSimulationApplicationVersionResponse

-- | Create a value of <a>CreateSimulationApplicationVersionResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:renderingEngine:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_renderingEngine</a> -
--   The rendering engine for the simulation application.
--   
--   <a>$sel:lastUpdatedAt:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_lastUpdatedAt</a> - The
--   time, in milliseconds since the epoch, when the simulation application
--   was last updated.
--   
--   <a>$sel:arn:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_arn</a> - The Amazon
--   Resource Name (ARN) of the simulation application.
--   
--   <a>$sel:environment:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_environment</a> - The
--   object that contains the Docker image URI used to create the
--   simulation application.
--   
--   <a>$sel:sources:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_sources</a> - The
--   sources of the simulation application.
--   
--   <a>$sel:name:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_name</a> - The name of
--   the simulation application.
--   
--   <a>$sel:version:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_version</a> - The
--   version of the simulation application.
--   
--   
--   <a>$sel:simulationSoftwareSuite:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_simulationSoftwareSuite</a>
--   - The simulation software suite used by the simulation application.
--   
--   
--   <a>$sel:robotSoftwareSuite:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_robotSoftwareSuite</a> -
--   Information about the robot software suite (ROS distribution).
--   
--   <a>$sel:revisionId:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_revisionId</a> - The
--   revision ID of the simulation application.
--   
--   <a>$sel:httpStatus:CreateSimulationApplicationVersionResponse'</a>,
--   <a>createSimulationApplicationVersionResponse_httpStatus</a> - The
--   response's http status code.
newCreateSimulationApplicationVersionResponse :: Int -> CreateSimulationApplicationVersionResponse

-- | <i>See:</i> <a>newListDeploymentJobs</a> smart constructor.
data ListDeploymentJobs
ListDeploymentJobs' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Int -> ListDeploymentJobs

-- | Create a value of <a>ListDeploymentJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListDeploymentJobs'</a>,
--   <a>listDeploymentJobs_filters</a> - Optional filters to limit results.
--   
--   The filter names <tt>status</tt> and <tt>fleetName</tt> are supported.
--   When filtering, you must use the complete value of the filtered item.
--   You can use up to three filters, but they must be for the same named
--   item. For example, if you are looking for items with the status
--   <tt>InProgress</tt> or the status <tt>Pending</tt>.
--   
--   <a>$sel:nextToken:ListDeploymentJobs'</a>,
--   <a>listDeploymentJobs_nextToken</a> - If the previous paginated
--   request did not return all of the remaining results, the response
--   object's <tt>nextToken</tt> parameter value is set to a token. To
--   retrieve the next set of results, call <tt>ListDeploymentJobs</tt>
--   again and assign that token to the request object's <tt>nextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's NextToken parameter is set to null.
--   
--   <a>$sel:maxResults:ListDeploymentJobs'</a>,
--   <a>listDeploymentJobs_maxResults</a> - When this parameter is used,
--   <tt>ListDeploymentJobs</tt> only returns <tt>maxResults</tt> results
--   in a single page along with a <tt>nextToken</tt> response element. The
--   remaining results of the initial request can be seen by sending
--   another <tt>ListDeploymentJobs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 200. If this
--   parameter is not used, then <tt>ListDeploymentJobs</tt> returns up to
--   200 results and a <tt>nextToken</tt> value if applicable.
newListDeploymentJobs :: ListDeploymentJobs

-- | <i>See:</i> <a>newListDeploymentJobsResponse</a> smart constructor.
data ListDeploymentJobsResponse
ListDeploymentJobsResponse' :: Maybe [DeploymentJob] -> Maybe Text -> Int -> ListDeploymentJobsResponse

-- | Create a value of <a>ListDeploymentJobsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentJobs:ListDeploymentJobsResponse'</a>,
--   <a>listDeploymentJobsResponse_deploymentJobs</a> - A list of
--   deployment jobs that meet the criteria of the request.
--   
--   <a>$sel:nextToken:ListDeploymentJobs'</a>,
--   <a>listDeploymentJobsResponse_nextToken</a> - If the previous
--   paginated request did not return all of the remaining results, the
--   response object's <tt>nextToken</tt> parameter value is set to a
--   token. To retrieve the next set of results, call
--   <tt>ListDeploymentJobs</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   <a>$sel:httpStatus:ListDeploymentJobsResponse'</a>,
--   <a>listDeploymentJobsResponse_httpStatus</a> - The response's http
--   status code.
newListDeploymentJobsResponse :: Int -> ListDeploymentJobsResponse

-- | <i>See:</i> <a>newDescribeWorld</a> smart constructor.
data DescribeWorld
DescribeWorld' :: Text -> DescribeWorld

-- | Create a value of <a>DescribeWorld</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:world:DescribeWorld'</a>, <a>describeWorld_world</a> - The
--   Amazon Resource Name (arn) of the world you want to describe.
newDescribeWorld :: Text -> DescribeWorld

-- | <i>See:</i> <a>newDescribeWorldResponse</a> smart constructor.
data DescribeWorldResponse
DescribeWorldResponse' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> DescribeWorldResponse

-- | Create a value of <a>DescribeWorldResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:worldDescriptionBody:DescribeWorldResponse'</a>,
--   <a>describeWorldResponse_worldDescriptionBody</a> - Returns the JSON
--   formatted string that describes the contents of your world.
--   
--   <a>$sel:arn:DescribeWorldResponse'</a>,
--   <a>describeWorldResponse_arn</a> - The Amazon Resource Name (arn) of
--   the world.
--   
--   <a>$sel:createdAt:DescribeWorldResponse'</a>,
--   <a>describeWorldResponse_createdAt</a> - The time, in milliseconds
--   since the epoch, when the world was created.
--   
--   <a>$sel:template:DescribeWorldResponse'</a>,
--   <a>describeWorldResponse_template</a> - The world template.
--   
--   <a>$sel:tags:DescribeWorldResponse'</a>,
--   <a>describeWorldResponse_tags</a> - A map that contains tag keys and
--   tag values that are attached to the world.
--   
--   <a>$sel:generationJob:DescribeWorldResponse'</a>,
--   <a>describeWorldResponse_generationJob</a> - The Amazon Resource Name
--   (arn) of the world generation job that generated the world.
--   
--   <a>$sel:httpStatus:DescribeWorldResponse'</a>,
--   <a>describeWorldResponse_httpStatus</a> - The response's http status
--   code.
newDescribeWorldResponse :: Int -> DescribeWorldResponse

-- | <i>See:</i> <a>newCancelSimulationJob</a> smart constructor.
data CancelSimulationJob
CancelSimulationJob' :: Text -> CancelSimulationJob

-- | Create a value of <a>CancelSimulationJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:CancelSimulationJob'</a>, <a>cancelSimulationJob_job</a> -
--   The simulation job ARN to cancel.
newCancelSimulationJob :: Text -> CancelSimulationJob

-- | <i>See:</i> <a>newCancelSimulationJobResponse</a> smart constructor.
data CancelSimulationJobResponse
CancelSimulationJobResponse' :: Int -> CancelSimulationJobResponse

-- | Create a value of <a>CancelSimulationJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelSimulationJobResponse'</a>,
--   <a>cancelSimulationJobResponse_httpStatus</a> - The response's http
--   status code.
newCancelSimulationJobResponse :: Int -> CancelSimulationJobResponse

-- | <i>See:</i> <a>newCreateRobotApplication</a> smart constructor.
data CreateRobotApplication
CreateRobotApplication' :: Maybe Environment -> Maybe [SourceConfig] -> Maybe (HashMap Text Text) -> Text -> RobotSoftwareSuite -> CreateRobotApplication

-- | Create a value of <a>CreateRobotApplication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:environment:CreateRobotApplication'</a>,
--   <a>createRobotApplication_environment</a> - The object that contains
--   that URI of the Docker image that you use for your robot application.
--   
--   <a>$sel:sources:CreateRobotApplication'</a>,
--   <a>createRobotApplication_sources</a> - The sources of the robot
--   application.
--   
--   <a>$sel:tags:CreateRobotApplication'</a>,
--   <a>createRobotApplication_tags</a> - A map that contains tag keys and
--   tag values that are attached to the robot application.
--   
--   <a>$sel:name:CreateRobotApplication'</a>,
--   <a>createRobotApplication_name</a> - The name of the robot
--   application.
--   
--   <a>$sel:robotSoftwareSuite:CreateRobotApplication'</a>,
--   <a>createRobotApplication_robotSoftwareSuite</a> - The robot software
--   suite (ROS distribuition) used by the robot application.
newCreateRobotApplication :: Text -> RobotSoftwareSuite -> CreateRobotApplication

-- | <i>See:</i> <a>newCreateRobotApplicationResponse</a> smart
--   constructor.
data CreateRobotApplicationResponse
CreateRobotApplicationResponse' :: Maybe POSIX -> Maybe Text -> Maybe Environment -> Maybe [Source] -> Maybe Text -> Maybe Text -> Maybe RobotSoftwareSuite -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateRobotApplicationResponse

-- | Create a value of <a>CreateRobotApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:CreateRobotApplicationResponse'</a>,
--   <a>createRobotApplicationResponse_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the robot application was last
--   updated.
--   
--   <a>$sel:arn:CreateRobotApplicationResponse'</a>,
--   <a>createRobotApplicationResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the robot application.
--   
--   <a>$sel:environment:CreateRobotApplication'</a>,
--   <a>createRobotApplicationResponse_environment</a> - An object that
--   contains the Docker image URI used to a create your robot application.
--   
--   <a>$sel:sources:CreateRobotApplication'</a>,
--   <a>createRobotApplicationResponse_sources</a> - The sources of the
--   robot application.
--   
--   <a>$sel:name:CreateRobotApplication'</a>,
--   <a>createRobotApplicationResponse_name</a> - The name of the robot
--   application.
--   
--   <a>$sel:version:CreateRobotApplicationResponse'</a>,
--   <a>createRobotApplicationResponse_version</a> - The version of the
--   robot application.
--   
--   <a>$sel:robotSoftwareSuite:CreateRobotApplication'</a>,
--   <a>createRobotApplicationResponse_robotSoftwareSuite</a> - The robot
--   software suite (ROS distribution) used by the robot application.
--   
--   <a>$sel:revisionId:CreateRobotApplicationResponse'</a>,
--   <a>createRobotApplicationResponse_revisionId</a> - The revision id of
--   the robot application.
--   
--   <a>$sel:tags:CreateRobotApplication'</a>,
--   <a>createRobotApplicationResponse_tags</a> - The list of all tags
--   added to the robot application.
--   
--   <a>$sel:httpStatus:CreateRobotApplicationResponse'</a>,
--   <a>createRobotApplicationResponse_httpStatus</a> - The response's http
--   status code.
newCreateRobotApplicationResponse :: Int -> CreateRobotApplicationResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The AWS RoboMaker Amazon
--   Resource Name (ARN) with tags to be listed.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The list of all tags added
--   to the specified resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newCreateDeploymentJob</a> smart constructor.
data CreateDeploymentJob
CreateDeploymentJob' :: Maybe DeploymentConfig -> Maybe (HashMap Text Text) -> Text -> Text -> NonEmpty DeploymentApplicationConfig -> CreateDeploymentJob

-- | Create a value of <a>CreateDeploymentJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentConfig:CreateDeploymentJob'</a>,
--   <a>createDeploymentJob_deploymentConfig</a> - The requested deployment
--   configuration.
--   
--   <a>$sel:tags:CreateDeploymentJob'</a>, <a>createDeploymentJob_tags</a>
--   - A map that contains tag keys and tag values that are attached to the
--   deployment job.
--   
--   <a>$sel:clientRequestToken:CreateDeploymentJob'</a>,
--   <a>createDeploymentJob_clientRequestToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:fleet:CreateDeploymentJob'</a>,
--   <a>createDeploymentJob_fleet</a> - The Amazon Resource Name (ARN) of
--   the fleet to deploy.
--   
--   <a>$sel:deploymentApplicationConfigs:CreateDeploymentJob'</a>,
--   <a>createDeploymentJob_deploymentApplicationConfigs</a> - The
--   deployment application configuration.
newCreateDeploymentJob :: Text -> Text -> NonEmpty DeploymentApplicationConfig -> CreateDeploymentJob

-- | <i>See:</i> <a>newCreateDeploymentJobResponse</a> smart constructor.
data CreateDeploymentJobResponse
CreateDeploymentJobResponse' :: Maybe Text -> Maybe DeploymentStatus -> Maybe (NonEmpty DeploymentApplicationConfig) -> Maybe Text -> Maybe POSIX -> Maybe DeploymentJobErrorCode -> Maybe DeploymentConfig -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateDeploymentJobResponse

-- | Create a value of <a>CreateDeploymentJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:CreateDeploymentJobResponse'</a>,
--   <a>createDeploymentJobResponse_failureReason</a> - The failure reason
--   of the deployment job if it failed.
--   
--   <a>$sel:status:CreateDeploymentJobResponse'</a>,
--   <a>createDeploymentJobResponse_status</a> - The status of the
--   deployment job.
--   
--   <a>$sel:deploymentApplicationConfigs:CreateDeploymentJob'</a>,
--   <a>createDeploymentJobResponse_deploymentApplicationConfigs</a> - The
--   deployment application configuration.
--   
--   <a>$sel:arn:CreateDeploymentJobResponse'</a>,
--   <a>createDeploymentJobResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the deployment job.
--   
--   <a>$sel:createdAt:CreateDeploymentJobResponse'</a>,
--   <a>createDeploymentJobResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the fleet was created.
--   
--   <a>$sel:failureCode:CreateDeploymentJobResponse'</a>,
--   <a>createDeploymentJobResponse_failureCode</a> - The failure code of
--   the simulation job if it failed:
--   
--   <ul>
--   <li><i>BadPermissionError</i> AWS Greengrass requires a service-level
--   role permission to access other services. The role must include the
--   <a>AWSGreengrassResourceAccessRolePolicy managed policy</a>.</li>
--   <li><i>ExtractingBundleFailure</i> The robot application could not be
--   extracted from the bundle.</li>
--   <li><i>FailureThresholdBreached</i> The percentage of robots that
--   could not be updated exceeded the percentage set for the
--   deployment.</li>
--   <li><i>GreengrassDeploymentFailed</i> The robot application could not
--   be deployed to the robot.</li>
--   <li><i>GreengrassGroupVersionDoesNotExist</i> The AWS Greengrass group
--   or version associated with a robot is missing.</li>
--   <li><i>InternalServerError</i> An internal error has occurred. Retry
--   your request, but if the problem persists, contact us with
--   details.</li>
--   <li><i>MissingRobotApplicationArchitecture</i> The robot application
--   does not have a source that matches the architecture of the
--   robot.</li>
--   <li><i>MissingRobotDeploymentResource</i> One or more of the resources
--   specified for the robot application are missing. For example, does the
--   robot application have the correct launch package and launch
--   file?</li>
--   <li><i>PostLaunchFileFailure</i> The post-launch script failed.</li>
--   <li><i>PreLaunchFileFailure</i> The pre-launch script failed.</li>
--   <li><i>ResourceNotFound</i> One or more deployment resources are
--   missing. For example, do robot application source bundles still
--   exist?</li>
--   <li><i>RobotDeploymentNoResponse</i> There is no response from the
--   robot. It might not be powered on or connected to the internet.</li>
--   </ul>
--   
--   <a>$sel:deploymentConfig:CreateDeploymentJob'</a>,
--   <a>createDeploymentJobResponse_deploymentConfig</a> - The deployment
--   configuration.
--   
--   <a>$sel:fleet:CreateDeploymentJob'</a>,
--   <a>createDeploymentJobResponse_fleet</a> - The target fleet for the
--   deployment job.
--   
--   <a>$sel:tags:CreateDeploymentJob'</a>,
--   <a>createDeploymentJobResponse_tags</a> - The list of all tags added
--   to the deployment job.
--   
--   <a>$sel:httpStatus:CreateDeploymentJobResponse'</a>,
--   <a>createDeploymentJobResponse_httpStatus</a> - The response's http
--   status code.
newCreateDeploymentJobResponse :: Int -> CreateDeploymentJobResponse

-- | <i>See:</i> <a>newRegisterRobot</a> smart constructor.
data RegisterRobot
RegisterRobot' :: Text -> Text -> RegisterRobot

-- | Create a value of <a>RegisterRobot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleet:RegisterRobot'</a>, <a>registerRobot_fleet</a> - The
--   Amazon Resource Name (ARN) of the fleet.
--   
--   <a>$sel:robot:RegisterRobot'</a>, <a>registerRobot_robot</a> - The
--   Amazon Resource Name (ARN) of the robot.
newRegisterRobot :: Text -> Text -> RegisterRobot

-- | <i>See:</i> <a>newRegisterRobotResponse</a> smart constructor.
data RegisterRobotResponse
RegisterRobotResponse' :: Maybe Text -> Maybe Text -> Int -> RegisterRobotResponse

-- | Create a value of <a>RegisterRobotResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:robot:RegisterRobot'</a>, <a>registerRobotResponse_robot</a> -
--   Information about the robot registration.
--   
--   <a>$sel:fleet:RegisterRobot'</a>, <a>registerRobotResponse_fleet</a> -
--   The Amazon Resource Name (ARN) of the fleet that the robot will join.
--   
--   <a>$sel:httpStatus:RegisterRobotResponse'</a>,
--   <a>registerRobotResponse_httpStatus</a> - The response's http status
--   code.
newRegisterRobotResponse :: Int -> RegisterRobotResponse

-- | <i>See:</i> <a>newListRobots</a> smart constructor.
data ListRobots
ListRobots' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Int -> ListRobots

-- | Create a value of <a>ListRobots</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListRobots'</a>, <a>listRobots_filters</a> - Optional
--   filters to limit results.
--   
--   The filter names <tt>status</tt> and <tt>fleetName</tt> are supported.
--   When filtering, you must use the complete value of the filtered item.
--   You can use up to three filters, but they must be for the same named
--   item. For example, if you are looking for items with the status
--   <tt>Registered</tt> or the status <tt>Available</tt>.
--   
--   <a>$sel:nextToken:ListRobots'</a>, <a>listRobots_nextToken</a> - If
--   the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListRobots</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   <a>$sel:maxResults:ListRobots'</a>, <a>listRobots_maxResults</a> -
--   When this parameter is used, <tt>ListRobots</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another <tt>ListRobots</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 200. If this parameter is not used, then
--   <tt>ListRobots</tt> returns up to 200 results and a <tt>nextToken</tt>
--   value if applicable.
newListRobots :: ListRobots

-- | <i>See:</i> <a>newListRobotsResponse</a> smart constructor.
data ListRobotsResponse
ListRobotsResponse' :: Maybe [Robot] -> Maybe Text -> Int -> ListRobotsResponse

-- | Create a value of <a>ListRobotsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:robots:ListRobotsResponse'</a>,
--   <a>listRobotsResponse_robots</a> - A list of robots that meet the
--   criteria of the request.
--   
--   <a>$sel:nextToken:ListRobots'</a>, <a>listRobotsResponse_nextToken</a>
--   - If the previous paginated request did not return all of the
--   remaining results, the response object's <tt>nextToken</tt> parameter
--   value is set to a token. To retrieve the next set of results, call
--   <tt>ListRobots</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   <a>$sel:httpStatus:ListRobotsResponse'</a>,
--   <a>listRobotsResponse_httpStatus</a> - The response's http status
--   code.
newListRobotsResponse :: Int -> ListRobotsResponse

-- | <i>See:</i> <a>newCreateWorldExportJob</a> smart constructor.
data CreateWorldExportJob
CreateWorldExportJob' :: Maybe Text -> Maybe (HashMap Text Text) -> NonEmpty Text -> OutputLocation -> Text -> CreateWorldExportJob

-- | Create a value of <a>CreateWorldExportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:CreateWorldExportJob'</a>,
--   <a>createWorldExportJob_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:tags:CreateWorldExportJob'</a>,
--   <a>createWorldExportJob_tags</a> - A map that contains tag keys and
--   tag values that are attached to the world export job.
--   
--   <a>$sel:worlds:CreateWorldExportJob'</a>,
--   <a>createWorldExportJob_worlds</a> - A list of Amazon Resource Names
--   (arns) that correspond to worlds to export.
--   
--   <a>$sel:outputLocation:CreateWorldExportJob'</a>,
--   <a>createWorldExportJob_outputLocation</a> - Undocumented member.
--   
--   <a>$sel:iamRole:CreateWorldExportJob'</a>,
--   <a>createWorldExportJob_iamRole</a> - The IAM role that the world
--   export process uses to access the Amazon S3 bucket and put the export.
newCreateWorldExportJob :: NonEmpty Text -> OutputLocation -> Text -> CreateWorldExportJob

-- | <i>See:</i> <a>newCreateWorldExportJobResponse</a> smart constructor.
data CreateWorldExportJobResponse
CreateWorldExportJobResponse' :: Maybe WorldExportJobStatus -> Maybe Text -> Maybe POSIX -> Maybe WorldExportJobErrorCode -> Maybe OutputLocation -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateWorldExportJobResponse

-- | Create a value of <a>CreateWorldExportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateWorldExportJobResponse'</a>,
--   <a>createWorldExportJobResponse_status</a> - The status of the world
--   export job.
--   
--   <ul>
--   <li><i>Pending</i> The world export job request is pending.</li>
--   <li><i>Running</i> The world export job is running.</li>
--   <li><i>Completed</i> The world export job completed.</li>
--   <li><i>Failed</i> The world export job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>Canceled</i> The world export job was cancelled.</li>
--   <li><i>Canceling</i> The world export job is being cancelled.</li>
--   </ul>
--   
--   <a>$sel:arn:CreateWorldExportJobResponse'</a>,
--   <a>createWorldExportJobResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the world export job.
--   
--   <a>$sel:createdAt:CreateWorldExportJobResponse'</a>,
--   <a>createWorldExportJobResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the world export job was created.
--   
--   <a>$sel:failureCode:CreateWorldExportJobResponse'</a>,
--   <a>createWorldExportJobResponse_failureCode</a> - The failure code of
--   the world export job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   <li><i>AllWorldGenerationFailed</i> All of the worlds in the world
--   generation job failed. This can happen if your <tt>worldCount</tt> is
--   greater than 50 or less than 1.</li>
--   </ul>
--   
--   For more information about troubleshooting WorldForge, see
--   <a>Troubleshooting Simulation WorldForge</a>.
--   
--   <a>$sel:outputLocation:CreateWorldExportJob'</a>,
--   <a>createWorldExportJobResponse_outputLocation</a> - Undocumented
--   member.
--   
--   <a>$sel:clientRequestToken:CreateWorldExportJob'</a>,
--   <a>createWorldExportJobResponse_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:iamRole:CreateWorldExportJob'</a>,
--   <a>createWorldExportJobResponse_iamRole</a> - The IAM role that the
--   world export process uses to access the Amazon S3 bucket and put the
--   export.
--   
--   <a>$sel:tags:CreateWorldExportJob'</a>,
--   <a>createWorldExportJobResponse_tags</a> - A map that contains tag
--   keys and tag values that are attached to the world export job.
--   
--   <a>$sel:httpStatus:CreateWorldExportJobResponse'</a>,
--   <a>createWorldExportJobResponse_httpStatus</a> - The response's http
--   status code.
newCreateWorldExportJobResponse :: Int -> CreateWorldExportJobResponse

-- | <i>See:</i> <a>newBatchDescribeSimulationJob</a> smart constructor.
data BatchDescribeSimulationJob
BatchDescribeSimulationJob' :: NonEmpty Text -> BatchDescribeSimulationJob

-- | Create a value of <a>BatchDescribeSimulationJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobs:BatchDescribeSimulationJob'</a>,
--   <a>batchDescribeSimulationJob_jobs</a> - A list of Amazon Resource
--   Names (ARNs) of simulation jobs to describe.
newBatchDescribeSimulationJob :: NonEmpty Text -> BatchDescribeSimulationJob

-- | <i>See:</i> <a>newBatchDescribeSimulationJobResponse</a> smart
--   constructor.
data BatchDescribeSimulationJobResponse
BatchDescribeSimulationJobResponse' :: Maybe (NonEmpty Text) -> Maybe [SimulationJob] -> Int -> BatchDescribeSimulationJobResponse

-- | Create a value of <a>BatchDescribeSimulationJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedJobs:BatchDescribeSimulationJobResponse'</a>,
--   <a>batchDescribeSimulationJobResponse_unprocessedJobs</a> - A list of
--   unprocessed simulation job Amazon Resource Names (ARNs).
--   
--   <a>$sel:jobs:BatchDescribeSimulationJob'</a>,
--   <a>batchDescribeSimulationJobResponse_jobs</a> - A list of simulation
--   jobs.
--   
--   <a>$sel:httpStatus:BatchDescribeSimulationJobResponse'</a>,
--   <a>batchDescribeSimulationJobResponse_httpStatus</a> - The response's
--   http status code.
newBatchDescribeSimulationJobResponse :: Int -> BatchDescribeSimulationJobResponse

-- | <i>See:</i> <a>newCreateSimulationApplication</a> smart constructor.
data CreateSimulationApplication
CreateSimulationApplication' :: Maybe RenderingEngine -> Maybe Environment -> Maybe [SourceConfig] -> Maybe (HashMap Text Text) -> Text -> SimulationSoftwareSuite -> RobotSoftwareSuite -> CreateSimulationApplication

-- | Create a value of <a>CreateSimulationApplication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:renderingEngine:CreateSimulationApplication'</a>,
--   <a>createSimulationApplication_renderingEngine</a> - The rendering
--   engine for the simulation application.
--   
--   <a>$sel:environment:CreateSimulationApplication'</a>,
--   <a>createSimulationApplication_environment</a> - The object that
--   contains the Docker image URI used to create your simulation
--   application.
--   
--   <a>$sel:sources:CreateSimulationApplication'</a>,
--   <a>createSimulationApplication_sources</a> - The sources of the
--   simulation application.
--   
--   <a>$sel:tags:CreateSimulationApplication'</a>,
--   <a>createSimulationApplication_tags</a> - A map that contains tag keys
--   and tag values that are attached to the simulation application.
--   
--   <a>$sel:name:CreateSimulationApplication'</a>,
--   <a>createSimulationApplication_name</a> - The name of the simulation
--   application.
--   
--   <a>$sel:simulationSoftwareSuite:CreateSimulationApplication'</a>,
--   <a>createSimulationApplication_simulationSoftwareSuite</a> - The
--   simulation software suite used by the simulation application.
--   
--   <a>$sel:robotSoftwareSuite:CreateSimulationApplication'</a>,
--   <a>createSimulationApplication_robotSoftwareSuite</a> - The robot
--   software suite (ROS distribution) used by the simulation application.
newCreateSimulationApplication :: Text -> SimulationSoftwareSuite -> RobotSoftwareSuite -> CreateSimulationApplication

-- | <i>See:</i> <a>newCreateSimulationApplicationResponse</a> smart
--   constructor.
data CreateSimulationApplicationResponse
CreateSimulationApplicationResponse' :: Maybe RenderingEngine -> Maybe POSIX -> Maybe Text -> Maybe Environment -> Maybe [Source] -> Maybe Text -> Maybe Text -> Maybe SimulationSoftwareSuite -> Maybe RobotSoftwareSuite -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateSimulationApplicationResponse

-- | Create a value of <a>CreateSimulationApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:renderingEngine:CreateSimulationApplication'</a>,
--   <a>createSimulationApplicationResponse_renderingEngine</a> - The
--   rendering engine for the simulation application.
--   
--   <a>$sel:lastUpdatedAt:CreateSimulationApplicationResponse'</a>,
--   <a>createSimulationApplicationResponse_lastUpdatedAt</a> - The time,
--   in milliseconds since the epoch, when the simulation application was
--   last updated.
--   
--   <a>$sel:arn:CreateSimulationApplicationResponse'</a>,
--   <a>createSimulationApplicationResponse_arn</a> - The Amazon Resource
--   Name (ARN) of the simulation application.
--   
--   <a>$sel:environment:CreateSimulationApplication'</a>,
--   <a>createSimulationApplicationResponse_environment</a> - The object
--   that contains the Docker image URI that you used to create your
--   simulation application.
--   
--   <a>$sel:sources:CreateSimulationApplication'</a>,
--   <a>createSimulationApplicationResponse_sources</a> - The sources of
--   the simulation application.
--   
--   <a>$sel:name:CreateSimulationApplication'</a>,
--   <a>createSimulationApplicationResponse_name</a> - The name of the
--   simulation application.
--   
--   <a>$sel:version:CreateSimulationApplicationResponse'</a>,
--   <a>createSimulationApplicationResponse_version</a> - The version of
--   the simulation application.
--   
--   <a>$sel:simulationSoftwareSuite:CreateSimulationApplication'</a>,
--   <a>createSimulationApplicationResponse_simulationSoftwareSuite</a> -
--   The simulation software suite used by the simulation application.
--   
--   <a>$sel:robotSoftwareSuite:CreateSimulationApplication'</a>,
--   <a>createSimulationApplicationResponse_robotSoftwareSuite</a> -
--   Information about the robot software suite (ROS distribution).
--   
--   <a>$sel:revisionId:CreateSimulationApplicationResponse'</a>,
--   <a>createSimulationApplicationResponse_revisionId</a> - The revision
--   id of the simulation application.
--   
--   <a>$sel:tags:CreateSimulationApplication'</a>,
--   <a>createSimulationApplicationResponse_tags</a> - The list of all tags
--   added to the simulation application.
--   
--   <a>$sel:httpStatus:CreateSimulationApplicationResponse'</a>,
--   <a>createSimulationApplicationResponse_httpStatus</a> - The response's
--   http status code.
newCreateSimulationApplicationResponse :: Int -> CreateSimulationApplicationResponse

-- | <i>See:</i> <a>newStartSimulationJobBatch</a> smart constructor.
data StartSimulationJobBatch
StartSimulationJobBatch' :: Maybe BatchPolicy -> Maybe Text -> Maybe (HashMap Text Text) -> NonEmpty SimulationJobRequest -> StartSimulationJobBatch

-- | Create a value of <a>StartSimulationJobBatch</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPolicy:StartSimulationJobBatch'</a>,
--   <a>startSimulationJobBatch_batchPolicy</a> - The batch policy.
--   
--   <a>$sel:clientRequestToken:StartSimulationJobBatch'</a>,
--   <a>startSimulationJobBatch_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:tags:StartSimulationJobBatch'</a>,
--   <a>startSimulationJobBatch_tags</a> - A map that contains tag keys and
--   tag values that are attached to the deployment job batch.
--   
--   <a>$sel:createSimulationJobRequests:StartSimulationJobBatch'</a>,
--   <a>startSimulationJobBatch_createSimulationJobRequests</a> - A list of
--   simulation job requests to create in the batch.
newStartSimulationJobBatch :: NonEmpty SimulationJobRequest -> StartSimulationJobBatch

-- | <i>See:</i> <a>newStartSimulationJobBatchResponse</a> smart
--   constructor.
data StartSimulationJobBatchResponse
StartSimulationJobBatchResponse' :: Maybe Text -> Maybe SimulationJobBatchStatus -> Maybe Text -> Maybe POSIX -> Maybe SimulationJobBatchErrorCode -> Maybe [FailedCreateSimulationJobRequest] -> Maybe BatchPolicy -> Maybe [SimulationJobSummary] -> Maybe (NonEmpty SimulationJobRequest) -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> StartSimulationJobBatchResponse

-- | Create a value of <a>StartSimulationJobBatchResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:StartSimulationJobBatchResponse'</a>,
--   <a>startSimulationJobBatchResponse_failureReason</a> - The reason the
--   simulation job batch failed.
--   
--   <a>$sel:status:StartSimulationJobBatchResponse'</a>,
--   <a>startSimulationJobBatchResponse_status</a> - The status of the
--   simulation job batch.
--   
--   <ul>
--   <li><i>Pending</i> The simulation job batch request is pending.</li>
--   <li><i>InProgress</i> The simulation job batch is in progress.</li>
--   <li><i>Failed</i> The simulation job batch failed. One or more
--   simulation job requests could not be completed due to an internal
--   failure (like <tt>InternalServiceError</tt>). See <tt>failureCode</tt>
--   and <tt>failureReason</tt> for more information.</li>
--   <li><i>Completed</i> The simulation batch job completed. A batch is
--   complete when (1) there are no pending simulation job requests in the
--   batch and none of the failed simulation job requests are due to
--   <tt>InternalServiceError</tt> and (2) when all created simulation jobs
--   have reached a terminal state (for example, <tt>Completed</tt> or
--   <tt>Failed</tt>).</li>
--   <li><i>Canceled</i> The simulation batch job was cancelled.</li>
--   <li><i>Canceling</i> The simulation batch job is being cancelled.</li>
--   <li><i>Completing</i> The simulation batch job is completing.</li>
--   <li><i>TimingOut</i> The simulation job batch is timing out.If a batch
--   timing out, and there are pending requests that were failing due to an
--   internal failure (like <tt>InternalServiceError</tt>), the batch
--   status will be <tt>Failed</tt>. If there are no such failing request,
--   the batch status will be <tt>TimedOut</tt>.</li>
--   <li><i>TimedOut</i> The simulation batch job timed out.</li>
--   </ul>
--   
--   <a>$sel:arn:StartSimulationJobBatchResponse'</a>,
--   <a>startSimulationJobBatchResponse_arn</a> - The Amazon Resource Name
--   (arn) of the batch.
--   
--   <a>$sel:createdAt:StartSimulationJobBatchResponse'</a>,
--   <a>startSimulationJobBatchResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the simulation job batch was
--   created.
--   
--   <a>$sel:failureCode:StartSimulationJobBatchResponse'</a>,
--   <a>startSimulationJobBatchResponse_failureCode</a> - The failure code
--   if the simulation job batch failed.
--   
--   <a>$sel:failedRequests:StartSimulationJobBatchResponse'</a>,
--   <a>startSimulationJobBatchResponse_failedRequests</a> - A list of
--   failed simulation job requests. The request failed to be created into
--   a simulation job. Failed requests do not have a simulation job ID.
--   
--   <a>$sel:batchPolicy:StartSimulationJobBatch'</a>,
--   <a>startSimulationJobBatchResponse_batchPolicy</a> - The batch policy.
--   
--   <a>$sel:createdRequests:StartSimulationJobBatchResponse'</a>,
--   <a>startSimulationJobBatchResponse_createdRequests</a> - A list of
--   created simulation job request summaries.
--   
--   <a>$sel:pendingRequests:StartSimulationJobBatchResponse'</a>,
--   <a>startSimulationJobBatchResponse_pendingRequests</a> - A list of
--   pending simulation job requests. These requests have not yet been
--   created into simulation jobs.
--   
--   <a>$sel:clientRequestToken:StartSimulationJobBatch'</a>,
--   <a>startSimulationJobBatchResponse_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:tags:StartSimulationJobBatch'</a>,
--   <a>startSimulationJobBatchResponse_tags</a> - A map that contains tag
--   keys and tag values that are attached to the deployment job batch.
--   
--   <a>$sel:httpStatus:StartSimulationJobBatchResponse'</a>,
--   <a>startSimulationJobBatchResponse_httpStatus</a> - The response's
--   http status code.
newStartSimulationJobBatchResponse :: Int -> StartSimulationJobBatchResponse

-- | <i>See:</i> <a>newCreateRobot</a> smart constructor.
data CreateRobot
CreateRobot' :: Maybe (HashMap Text Text) -> Text -> Architecture -> Text -> CreateRobot

-- | Create a value of <a>CreateRobot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateRobot'</a>, <a>createRobot_tags</a> - A map that
--   contains tag keys and tag values that are attached to the robot.
--   
--   <a>$sel:name:CreateRobot'</a>, <a>createRobot_name</a> - The name for
--   the robot.
--   
--   <a>$sel:architecture:CreateRobot'</a>, <a>createRobot_architecture</a>
--   - The target architecture of the robot.
--   
--   <a>$sel:greengrassGroupId:CreateRobot'</a>,
--   <a>createRobot_greengrassGroupId</a> - The Greengrass group id.
newCreateRobot :: Text -> Architecture -> Text -> CreateRobot

-- | <i>See:</i> <a>newCreateRobotResponse</a> smart constructor.
data CreateRobotResponse
CreateRobotResponse' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Architecture -> Maybe (HashMap Text Text) -> Int -> CreateRobotResponse

-- | Create a value of <a>CreateRobotResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:CreateRobotResponse'</a>, <a>createRobotResponse_arn</a> -
--   The Amazon Resource Name (ARN) of the robot.
--   
--   <a>$sel:createdAt:CreateRobotResponse'</a>,
--   <a>createRobotResponse_createdAt</a> - The time, in milliseconds since
--   the epoch, when the robot was created.
--   
--   <a>$sel:greengrassGroupId:CreateRobot'</a>,
--   <a>createRobotResponse_greengrassGroupId</a> - The Amazon Resource
--   Name (ARN) of the Greengrass group associated with the robot.
--   
--   <a>$sel:name:CreateRobot'</a>, <a>createRobotResponse_name</a> - The
--   name of the robot.
--   
--   <a>$sel:architecture:CreateRobot'</a>,
--   <a>createRobotResponse_architecture</a> - The target architecture of
--   the robot.
--   
--   <a>$sel:tags:CreateRobot'</a>, <a>createRobotResponse_tags</a> - The
--   list of all tags added to the robot.
--   
--   <a>$sel:httpStatus:CreateRobotResponse'</a>,
--   <a>createRobotResponse_httpStatus</a> - The response's http status
--   code.
newCreateRobotResponse :: Int -> CreateRobotResponse

-- | <i>See:</i> <a>newDescribeFleet</a> smart constructor.
data DescribeFleet
DescribeFleet' :: Text -> DescribeFleet

-- | Create a value of <a>DescribeFleet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleet:DescribeFleet'</a>, <a>describeFleet_fleet</a> - The
--   Amazon Resource Name (ARN) of the fleet.
newDescribeFleet :: Text -> DescribeFleet

-- | <i>See:</i> <a>newDescribeFleetResponse</a> smart constructor.
data DescribeFleetResponse
DescribeFleetResponse' :: Maybe Text -> Maybe DeploymentStatus -> Maybe [Robot] -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe (HashMap Text Text) -> Int -> DescribeFleetResponse

-- | Create a value of <a>DescribeFleetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastDeploymentJob:DescribeFleetResponse'</a>,
--   <a>describeFleetResponse_lastDeploymentJob</a> - The Amazon Resource
--   Name (ARN) of the last deployment job.
--   
--   <a>$sel:lastDeploymentStatus:DescribeFleetResponse'</a>,
--   <a>describeFleetResponse_lastDeploymentStatus</a> - The status of the
--   last deployment.
--   
--   <a>$sel:robots:DescribeFleetResponse'</a>,
--   <a>describeFleetResponse_robots</a> - A list of robots.
--   
--   <a>$sel:arn:DescribeFleetResponse'</a>,
--   <a>describeFleetResponse_arn</a> - The Amazon Resource Name (ARN) of
--   the fleet.
--   
--   <a>$sel:createdAt:DescribeFleetResponse'</a>,
--   <a>describeFleetResponse_createdAt</a> - The time, in milliseconds
--   since the epoch, when the fleet was created.
--   
--   <a>$sel:name:DescribeFleetResponse'</a>,
--   <a>describeFleetResponse_name</a> - The name of the fleet.
--   
--   <a>$sel:lastDeploymentTime:DescribeFleetResponse'</a>,
--   <a>describeFleetResponse_lastDeploymentTime</a> - The time of the last
--   deployment.
--   
--   <a>$sel:tags:DescribeFleetResponse'</a>,
--   <a>describeFleetResponse_tags</a> - The list of all tags added to the
--   specified fleet.
--   
--   <a>$sel:httpStatus:DescribeFleetResponse'</a>,
--   <a>describeFleetResponse_httpStatus</a> - The response's http status
--   code.
newDescribeFleetResponse :: Int -> DescribeFleetResponse

-- | <i>See:</i> <a>newListWorldTemplates</a> smart constructor.
data ListWorldTemplates
ListWorldTemplates' :: Maybe Text -> Maybe Int -> ListWorldTemplates

-- | Create a value of <a>ListWorldTemplates</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWorldTemplates'</a>,
--   <a>listWorldTemplates_nextToken</a> - If the previous paginated
--   request did not return all of the remaining results, the response
--   object's <tt>nextToken</tt> parameter value is set to a token. To
--   retrieve the next set of results, call <tt>ListWorldTemplates</tt>
--   again and assign that token to the request object's <tt>nextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's NextToken parameter is set to null.
--   
--   <a>$sel:maxResults:ListWorldTemplates'</a>,
--   <a>listWorldTemplates_maxResults</a> - When this parameter is used,
--   <tt>ListWorldTemplates</tt> only returns <tt>maxResults</tt> results
--   in a single page along with a <tt>nextToken</tt> response element. The
--   remaining results of the initial request can be seen by sending
--   another <tt>ListWorldTemplates</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListWorldTemplates</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
newListWorldTemplates :: ListWorldTemplates

-- | <i>See:</i> <a>newListWorldTemplatesResponse</a> smart constructor.
data ListWorldTemplatesResponse
ListWorldTemplatesResponse' :: Maybe [TemplateSummary] -> Maybe Text -> Int -> ListWorldTemplatesResponse

-- | Create a value of <a>ListWorldTemplatesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:templateSummaries:ListWorldTemplatesResponse'</a>,
--   <a>listWorldTemplatesResponse_templateSummaries</a> - Summary
--   information for templates.
--   
--   <a>$sel:nextToken:ListWorldTemplates'</a>,
--   <a>listWorldTemplatesResponse_nextToken</a> - If the previous
--   paginated request did not return all of the remaining results, the
--   response object's <tt>nextToken</tt> parameter value is set to a
--   token. To retrieve the next set of results, call
--   <tt>ListWorldTemplates</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   <a>$sel:httpStatus:ListWorldTemplatesResponse'</a>,
--   <a>listWorldTemplatesResponse_httpStatus</a> - The response's http
--   status code.
newListWorldTemplatesResponse :: Int -> ListWorldTemplatesResponse

-- | <i>See:</i> <a>newDescribeRobotApplication</a> smart constructor.
data DescribeRobotApplication
DescribeRobotApplication' :: Maybe Text -> Text -> DescribeRobotApplication

-- | Create a value of <a>DescribeRobotApplication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationVersion:DescribeRobotApplication'</a>,
--   <a>describeRobotApplication_applicationVersion</a> - The version of
--   the robot application to describe.
--   
--   <a>$sel:application:DescribeRobotApplication'</a>,
--   <a>describeRobotApplication_application</a> - The Amazon Resource Name
--   (ARN) of the robot application.
newDescribeRobotApplication :: Text -> DescribeRobotApplication

-- | <i>See:</i> <a>newDescribeRobotApplicationResponse</a> smart
--   constructor.
data DescribeRobotApplicationResponse
DescribeRobotApplicationResponse' :: Maybe POSIX -> Maybe Text -> Maybe Environment -> Maybe [Source] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe RobotSoftwareSuite -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> DescribeRobotApplicationResponse

-- | Create a value of <a>DescribeRobotApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the robot application was last
--   updated.
--   
--   <a>$sel:arn:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the robot application.
--   
--   <a>$sel:environment:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_environment</a> - The object that
--   contains the Docker image URI used to create the robot application.
--   
--   <a>$sel:sources:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_sources</a> - The sources of the
--   robot application.
--   
--   <a>$sel:name:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_name</a> - The name of the robot
--   application.
--   
--   <a>$sel:imageDigest:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_imageDigest</a> - A SHA256
--   identifier for the Docker image that you use for your robot
--   application.
--   
--   <a>$sel:version:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_version</a> - The version of the
--   robot application.
--   
--   <a>$sel:robotSoftwareSuite:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_robotSoftwareSuite</a> - The robot
--   software suite (ROS distribution) used by the robot application.
--   
--   <a>$sel:revisionId:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_revisionId</a> - The revision id
--   of the robot application.
--   
--   <a>$sel:tags:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_tags</a> - The list of all tags
--   added to the specified robot application.
--   
--   <a>$sel:httpStatus:DescribeRobotApplicationResponse'</a>,
--   <a>describeRobotApplicationResponse_httpStatus</a> - The response's
--   http status code.
newDescribeRobotApplicationResponse :: Int -> DescribeRobotApplicationResponse

-- | <i>See:</i> <a>newRestartSimulationJob</a> smart constructor.
data RestartSimulationJob
RestartSimulationJob' :: Text -> RestartSimulationJob

-- | Create a value of <a>RestartSimulationJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:RestartSimulationJob'</a>, <a>restartSimulationJob_job</a>
--   - The Amazon Resource Name (ARN) of the simulation job.
newRestartSimulationJob :: Text -> RestartSimulationJob

-- | <i>See:</i> <a>newRestartSimulationJobResponse</a> smart constructor.
data RestartSimulationJobResponse
RestartSimulationJobResponse' :: Int -> RestartSimulationJobResponse

-- | Create a value of <a>RestartSimulationJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RestartSimulationJobResponse'</a>,
--   <a>restartSimulationJobResponse_httpStatus</a> - The response's http
--   status code.
newRestartSimulationJobResponse :: Int -> RestartSimulationJobResponse

-- | <i>See:</i> <a>newDescribeSimulationJob</a> smart constructor.
data DescribeSimulationJob
DescribeSimulationJob' :: Text -> DescribeSimulationJob

-- | Create a value of <a>DescribeSimulationJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:DescribeSimulationJob'</a>,
--   <a>describeSimulationJob_job</a> - The Amazon Resource Name (ARN) of
--   the simulation job to be described.
newDescribeSimulationJob :: Text -> DescribeSimulationJob

-- | <i>See:</i> <a>newDescribeSimulationJobResponse</a> smart constructor.
data DescribeSimulationJobResponse
DescribeSimulationJobResponse' :: Maybe Text -> Maybe FailureBehavior -> Maybe SimulationJobStatus -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty RobotApplicationConfig) -> Maybe SimulationJobErrorCode -> Maybe ComputeResponse -> Maybe NetworkInterface -> Maybe [DataSource] -> Maybe Text -> Maybe VPCConfigResponse -> Maybe OutputLocation -> Maybe (NonEmpty SimulationApplicationConfig) -> Maybe Integer -> Maybe Text -> Maybe POSIX -> Maybe LoggingConfig -> Maybe Text -> Maybe Integer -> Maybe (HashMap Text Text) -> Int -> DescribeSimulationJobResponse

-- | Create a value of <a>DescribeSimulationJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_failureReason</a> - Details about why
--   the simulation job failed. For more information about troubleshooting,
--   see <a>Troubleshooting</a>.
--   
--   <a>$sel:failureBehavior:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_failureBehavior</a> - The failure
--   behavior for the simulation job.
--   
--   <a>$sel:status:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_status</a> - The status of the
--   simulation job.
--   
--   <a>$sel:lastUpdatedAt:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the simulation job was last
--   updated.
--   
--   <a>$sel:arn:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the simulation job.
--   
--   <a>$sel:robotApplications:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_robotApplications</a> - A list of
--   robot applications.
--   
--   <a>$sel:failureCode:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_failureCode</a> - The failure code of
--   the simulation job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>RobotApplicationCrash</i> Robot application exited
--   abnormally.</li>
--   <li><i>SimulationApplicationCrash</i> Simulation application exited
--   abnormally.</li>
--   <li><i>BadPermissionsRobotApplication</i> Robot application bundle
--   could not be downloaded.</li>
--   <li><i>BadPermissionsSimulationApplication</i> Simulation application
--   bundle could not be downloaded.</li>
--   <li><i>BadPermissionsS3Output</i> Unable to publish outputs to
--   customer-provided S3 bucket.</li>
--   <li><i>BadPermissionsCloudwatchLogs</i> Unable to publish logs to
--   customer-provided CloudWatch Logs resource.</li>
--   <li><i>SubnetIpLimitExceeded</i> Subnet IP limit exceeded.</li>
--   <li><i>ENILimitExceeded</i> ENI limit exceeded.</li>
--   <li><i>BadPermissionsUserCredentials</i> Unable to use the Role
--   provided.</li>
--   <li><i>InvalidBundleRobotApplication</i> Robot bundle cannot be
--   extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>InvalidBundleSimulationApplication</i> Simulation bundle cannot
--   be extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>RobotApplicationVersionMismatchedEtag</i> Etag for
--   RobotApplication does not match value during version creation.</li>
--   <li><i>SimulationApplicationVersionMismatchedEtag</i> Etag for
--   SimulationApplication does not match value during version
--   creation.</li>
--   </ul>
--   
--   <a>$sel:compute:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_compute</a> - Compute information for
--   the simulation job.
--   
--   <a>$sel:networkInterface:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_networkInterface</a> - The network
--   interface information for the simulation job.
--   
--   <a>$sel:dataSources:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_dataSources</a> - The data sources
--   for the simulation job.
--   
--   <a>$sel:name:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_name</a> - The name of the simulation
--   job.
--   
--   <a>$sel:vpcConfig:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_vpcConfig</a> - The VPC
--   configuration.
--   
--   <a>$sel:outputLocation:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_outputLocation</a> - Location for
--   output files generated by the simulation job.
--   
--   <a>$sel:simulationApplications:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_simulationApplications</a> - A list
--   of simulation applications.
--   
--   <a>$sel:simulationTimeMillis:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_simulationTimeMillis</a> - The
--   simulation job execution duration in milliseconds.
--   
--   <a>$sel:clientRequestToken:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:lastStartedAt:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_lastStartedAt</a> - The time, in
--   milliseconds since the epoch, when the simulation job was last
--   started.
--   
--   <a>$sel:loggingConfig:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_loggingConfig</a> - The logging
--   configuration.
--   
--   <a>$sel:iamRole:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_iamRole</a> - The IAM role that
--   allows the simulation instance to call the AWS APIs that are specified
--   in its associated policies on your behalf.
--   
--   <a>$sel:maxJobDurationInSeconds:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_maxJobDurationInSeconds</a> - The
--   maximum job duration in seconds. The value must be 8 days (691,200
--   seconds) or less.
--   
--   <a>$sel:tags:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_tags</a> - The list of all tags added
--   to the specified simulation job.
--   
--   <a>$sel:httpStatus:DescribeSimulationJobResponse'</a>,
--   <a>describeSimulationJobResponse_httpStatus</a> - The response's http
--   status code.
newDescribeSimulationJobResponse :: Int -> DescribeSimulationJobResponse

-- | <i>See:</i> <a>newDeregisterRobot</a> smart constructor.
data DeregisterRobot
DeregisterRobot' :: Text -> Text -> DeregisterRobot

-- | Create a value of <a>DeregisterRobot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleet:DeregisterRobot'</a>, <a>deregisterRobot_fleet</a> - The
--   Amazon Resource Name (ARN) of the fleet.
--   
--   <a>$sel:robot:DeregisterRobot'</a>, <a>deregisterRobot_robot</a> - The
--   Amazon Resource Name (ARN) of the robot.
newDeregisterRobot :: Text -> Text -> DeregisterRobot

-- | <i>See:</i> <a>newDeregisterRobotResponse</a> smart constructor.
data DeregisterRobotResponse
DeregisterRobotResponse' :: Maybe Text -> Maybe Text -> Int -> DeregisterRobotResponse

-- | Create a value of <a>DeregisterRobotResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:robot:DeregisterRobot'</a>,
--   <a>deregisterRobotResponse_robot</a> - The Amazon Resource Name (ARN)
--   of the robot.
--   
--   <a>$sel:fleet:DeregisterRobot'</a>,
--   <a>deregisterRobotResponse_fleet</a> - The Amazon Resource Name (ARN)
--   of the fleet.
--   
--   <a>$sel:httpStatus:DeregisterRobotResponse'</a>,
--   <a>deregisterRobotResponse_httpStatus</a> - The response's http status
--   code.
newDeregisterRobotResponse :: Int -> DeregisterRobotResponse

-- | <i>See:</i> <a>newDescribeSimulationApplication</a> smart constructor.
data DescribeSimulationApplication
DescribeSimulationApplication' :: Maybe Text -> Text -> DescribeSimulationApplication

-- | Create a value of <a>DescribeSimulationApplication</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationVersion:DescribeSimulationApplication'</a>,
--   <a>describeSimulationApplication_applicationVersion</a> - The version
--   of the simulation application to describe.
--   
--   <a>$sel:application:DescribeSimulationApplication'</a>,
--   <a>describeSimulationApplication_application</a> - The application
--   information for the simulation application.
newDescribeSimulationApplication :: Text -> DescribeSimulationApplication

-- | <i>See:</i> <a>newDescribeSimulationApplicationResponse</a> smart
--   constructor.
data DescribeSimulationApplicationResponse
DescribeSimulationApplicationResponse' :: Maybe RenderingEngine -> Maybe POSIX -> Maybe Text -> Maybe Environment -> Maybe [Source] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe SimulationSoftwareSuite -> Maybe RobotSoftwareSuite -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> DescribeSimulationApplicationResponse

-- | Create a value of <a>DescribeSimulationApplicationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:renderingEngine:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_renderingEngine</a> - The
--   rendering engine for the simulation application.
--   
--   <a>$sel:lastUpdatedAt:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_lastUpdatedAt</a> - The time,
--   in milliseconds since the epoch, when the simulation application was
--   last updated.
--   
--   <a>$sel:arn:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_arn</a> - The Amazon Resource
--   Name (ARN) of the robot simulation application.
--   
--   <a>$sel:environment:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_environment</a> - The object
--   that contains the Docker image URI used to create the simulation
--   application.
--   
--   <a>$sel:sources:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_sources</a> - The sources of
--   the simulation application.
--   
--   <a>$sel:name:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_name</a> - The name of the
--   simulation application.
--   
--   <a>$sel:imageDigest:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_imageDigest</a> - A SHA256
--   identifier for the Docker image that you use for your simulation
--   application.
--   
--   <a>$sel:version:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_version</a> - The version of
--   the simulation application.
--   
--   
--   <a>$sel:simulationSoftwareSuite:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_simulationSoftwareSuite</a> -
--   The simulation software suite used by the simulation application.
--   
--   <a>$sel:robotSoftwareSuite:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_robotSoftwareSuite</a> -
--   Information about the robot software suite (ROS distribution).
--   
--   <a>$sel:revisionId:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_revisionId</a> - The revision
--   id of the simulation application.
--   
--   <a>$sel:tags:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_tags</a> - The list of all
--   tags added to the specified simulation application.
--   
--   <a>$sel:httpStatus:DescribeSimulationApplicationResponse'</a>,
--   <a>describeSimulationApplicationResponse_httpStatus</a> - The
--   response's http status code.
newDescribeSimulationApplicationResponse :: Int -> DescribeSimulationApplicationResponse

-- | <i>See:</i> <a>newListSimulationJobBatches</a> smart constructor.
data ListSimulationJobBatches
ListSimulationJobBatches' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Int -> ListSimulationJobBatches

-- | Create a value of <a>ListSimulationJobBatches</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListSimulationJobBatches'</a>,
--   <a>listSimulationJobBatches_filters</a> - Optional filters to limit
--   results.
--   
--   <a>$sel:nextToken:ListSimulationJobBatches'</a>,
--   <a>listSimulationJobBatches_nextToken</a> - If the previous paginated
--   request did not return all of the remaining results, the response
--   object's <tt>nextToken</tt> parameter value is set to a token. To
--   retrieve the next set of results, call
--   <tt>ListSimulationJobBatches</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
--   
--   <a>$sel:maxResults:ListSimulationJobBatches'</a>,
--   <a>listSimulationJobBatches_maxResults</a> - When this parameter is
--   used, <tt>ListSimulationJobBatches</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListSimulationJobBatches</tt> request with the returned
--   <tt>nextToken</tt> value.
newListSimulationJobBatches :: ListSimulationJobBatches

-- | <i>See:</i> <a>newListSimulationJobBatchesResponse</a> smart
--   constructor.
data ListSimulationJobBatchesResponse
ListSimulationJobBatchesResponse' :: Maybe Text -> Maybe [SimulationJobBatchSummary] -> Int -> ListSimulationJobBatchesResponse

-- | Create a value of <a>ListSimulationJobBatchesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSimulationJobBatches'</a>,
--   <a>listSimulationJobBatchesResponse_nextToken</a> - If the previous
--   paginated request did not return all of the remaining results, the
--   response object's <tt>nextToken</tt> parameter value is set to a
--   token. To retrieve the next set of results, call
--   <tt>ListSimulationJobBatches</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
--   
--   
--   <a>$sel:simulationJobBatchSummaries:ListSimulationJobBatchesResponse'</a>,
--   <a>listSimulationJobBatchesResponse_simulationJobBatchSummaries</a> -
--   A list of simulation job batch summaries.
--   
--   <a>$sel:httpStatus:ListSimulationJobBatchesResponse'</a>,
--   <a>listSimulationJobBatchesResponse_httpStatus</a> - The response's
--   http status code.
newListSimulationJobBatchesResponse :: Int -> ListSimulationJobBatchesResponse

-- | <i>See:</i> <a>newListFleets</a> smart constructor.
data ListFleets
ListFleets' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Int -> ListFleets

-- | Create a value of <a>ListFleets</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListFleets'</a>, <a>listFleets_filters</a> - Optional
--   filters to limit results.
--   
--   The filter name <tt>name</tt> is supported. When filtering, you must
--   use the complete value of the filtered item. You can use up to three
--   filters.
--   
--   <a>$sel:nextToken:ListFleets'</a>, <a>listFleets_nextToken</a> - If
--   the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListFleets</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   This token should be treated as an opaque identifier that is only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:maxResults:ListFleets'</a>, <a>listFleets_maxResults</a> -
--   When this parameter is used, <tt>ListFleets</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another <tt>ListFleets</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 200. If this parameter is not used, then
--   <tt>ListFleets</tt> returns up to 200 results and a <tt>nextToken</tt>
--   value if applicable.
newListFleets :: ListFleets

-- | <i>See:</i> <a>newListFleetsResponse</a> smart constructor.
data ListFleetsResponse
ListFleetsResponse' :: Maybe [Fleet] -> Maybe Text -> Int -> ListFleetsResponse

-- | Create a value of <a>ListFleetsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fleetDetails:ListFleetsResponse'</a>,
--   <a>listFleetsResponse_fleetDetails</a> - A list of fleet details
--   meeting the request criteria.
--   
--   <a>$sel:nextToken:ListFleets'</a>, <a>listFleetsResponse_nextToken</a>
--   - If the previous paginated request did not return all of the
--   remaining results, the response object's <tt>nextToken</tt> parameter
--   value is set to a token. To retrieve the next set of results, call
--   <tt>ListFleets</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   <a>$sel:httpStatus:ListFleetsResponse'</a>,
--   <a>listFleetsResponse_httpStatus</a> - The response's http status
--   code.
newListFleetsResponse :: Int -> ListFleetsResponse

-- | <i>See:</i> <a>newDescribeWorldTemplate</a> smart constructor.
data DescribeWorldTemplate
DescribeWorldTemplate' :: Text -> DescribeWorldTemplate

-- | Create a value of <a>DescribeWorldTemplate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:template:DescribeWorldTemplate'</a>,
--   <a>describeWorldTemplate_template</a> - The Amazon Resource Name (arn)
--   of the world template you want to describe.
newDescribeWorldTemplate :: Text -> DescribeWorldTemplate

-- | <i>See:</i> <a>newDescribeWorldTemplateResponse</a> smart constructor.
data DescribeWorldTemplateResponse
DescribeWorldTemplateResponse' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> DescribeWorldTemplateResponse

-- | Create a value of <a>DescribeWorldTemplateResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:DescribeWorldTemplateResponse'</a>,
--   <a>describeWorldTemplateResponse_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the world template was last
--   updated.
--   
--   <a>$sel:arn:DescribeWorldTemplateResponse'</a>,
--   <a>describeWorldTemplateResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the world template.
--   
--   <a>$sel:createdAt:DescribeWorldTemplateResponse'</a>,
--   <a>describeWorldTemplateResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the world template was created.
--   
--   <a>$sel:name:DescribeWorldTemplateResponse'</a>,
--   <a>describeWorldTemplateResponse_name</a> - The name of the world
--   template.
--   
--   <a>$sel:version:DescribeWorldTemplateResponse'</a>,
--   <a>describeWorldTemplateResponse_version</a> - The version of the
--   world template that you're using.
--   
--   <a>$sel:clientRequestToken:DescribeWorldTemplateResponse'</a>,
--   <a>describeWorldTemplateResponse_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:tags:DescribeWorldTemplateResponse'</a>,
--   <a>describeWorldTemplateResponse_tags</a> - A map that contains tag
--   keys and tag values that are attached to the world template.
--   
--   <a>$sel:httpStatus:DescribeWorldTemplateResponse'</a>,
--   <a>describeWorldTemplateResponse_httpStatus</a> - The response's http
--   status code.
newDescribeWorldTemplateResponse :: Int -> DescribeWorldTemplateResponse

-- | <i>See:</i> <a>newCancelWorldExportJob</a> smart constructor.
data CancelWorldExportJob
CancelWorldExportJob' :: Text -> CancelWorldExportJob

-- | Create a value of <a>CancelWorldExportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:CancelWorldExportJob'</a>, <a>cancelWorldExportJob_job</a>
--   - The Amazon Resource Name (arn) of the world export job to cancel.
newCancelWorldExportJob :: Text -> CancelWorldExportJob

-- | <i>See:</i> <a>newCancelWorldExportJobResponse</a> smart constructor.
data CancelWorldExportJobResponse
CancelWorldExportJobResponse' :: Int -> CancelWorldExportJobResponse

-- | Create a value of <a>CancelWorldExportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelWorldExportJobResponse'</a>,
--   <a>cancelWorldExportJobResponse_httpStatus</a> - The response's http
--   status code.
newCancelWorldExportJobResponse :: Int -> CancelWorldExportJobResponse

-- | <i>See:</i> <a>newListWorldGenerationJobs</a> smart constructor.
data ListWorldGenerationJobs
ListWorldGenerationJobs' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Int -> ListWorldGenerationJobs

-- | Create a value of <a>ListWorldGenerationJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListWorldGenerationJobs'</a>,
--   <a>listWorldGenerationJobs_filters</a> - Optional filters to limit
--   results. You can use <tt>status</tt> and <tt>templateId</tt>.
--   
--   <a>$sel:nextToken:ListWorldGenerationJobs'</a>,
--   <a>listWorldGenerationJobs_nextToken</a> - If the previous paginated
--   request did not return all of the remaining results, the response
--   object's <tt>nextToken</tt> parameter value is set to a token. To
--   retrieve the next set of results, call
--   <tt>ListWorldGenerationJobsRequest</tt> again and assign that token to
--   the request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
--   
--   <a>$sel:maxResults:ListWorldGenerationJobs'</a>,
--   <a>listWorldGenerationJobs_maxResults</a> - When this parameter is
--   used, <tt>ListWorldGeneratorJobs</tt> only returns <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. The remaining results of the initial request can be seen by
--   sending another <tt>ListWorldGeneratorJobs</tt> request with the
--   returned <tt>nextToken</tt> value. This value can be between 1 and
--   100. If this parameter is not used, then
--   <tt>ListWorldGeneratorJobs</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
newListWorldGenerationJobs :: ListWorldGenerationJobs

-- | <i>See:</i> <a>newListWorldGenerationJobsResponse</a> smart
--   constructor.
data ListWorldGenerationJobsResponse
ListWorldGenerationJobsResponse' :: Maybe Text -> Int -> [WorldGenerationJobSummary] -> ListWorldGenerationJobsResponse

-- | Create a value of <a>ListWorldGenerationJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWorldGenerationJobs'</a>,
--   <a>listWorldGenerationJobsResponse_nextToken</a> - If the previous
--   paginated request did not return all of the remaining results, the
--   response object's <tt>nextToken</tt> parameter value is set to a
--   token. To retrieve the next set of results, call
--   <tt>ListWorldGeneratorJobsRequest</tt> again and assign that token to
--   the request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
--   
--   <a>$sel:httpStatus:ListWorldGenerationJobsResponse'</a>,
--   <a>listWorldGenerationJobsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   
--   <a>$sel:worldGenerationJobSummaries:ListWorldGenerationJobsResponse'</a>,
--   <a>listWorldGenerationJobsResponse_worldGenerationJobSummaries</a> -
--   Summary information for world generator jobs.
newListWorldGenerationJobsResponse :: Int -> ListWorldGenerationJobsResponse

-- | <i>See:</i> <a>newCreateFleet</a> smart constructor.
data CreateFleet
CreateFleet' :: Maybe (HashMap Text Text) -> Text -> CreateFleet

-- | Create a value of <a>CreateFleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateFleet'</a>, <a>createFleet_tags</a> - A map that
--   contains tag keys and tag values that are attached to the fleet.
--   
--   <a>$sel:name:CreateFleet'</a>, <a>createFleet_name</a> - The name of
--   the fleet.
newCreateFleet :: Text -> CreateFleet

-- | <i>See:</i> <a>newCreateFleetResponse</a> smart constructor.
data CreateFleetResponse
CreateFleetResponse' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateFleetResponse

-- | Create a value of <a>CreateFleetResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:CreateFleetResponse'</a>, <a>createFleetResponse_arn</a> -
--   The Amazon Resource Name (ARN) of the fleet.
--   
--   <a>$sel:createdAt:CreateFleetResponse'</a>,
--   <a>createFleetResponse_createdAt</a> - The time, in milliseconds since
--   the epoch, when the fleet was created.
--   
--   <a>$sel:name:CreateFleet'</a>, <a>createFleetResponse_name</a> - The
--   name of the fleet.
--   
--   <a>$sel:tags:CreateFleet'</a>, <a>createFleetResponse_tags</a> - The
--   list of all tags added to the fleet.
--   
--   <a>$sel:httpStatus:CreateFleetResponse'</a>,
--   <a>createFleetResponse_httpStatus</a> - The response's http status
--   code.
newCreateFleetResponse :: Int -> CreateFleetResponse

-- | <i>See:</i> <a>newCancelWorldGenerationJob</a> smart constructor.
data CancelWorldGenerationJob
CancelWorldGenerationJob' :: Text -> CancelWorldGenerationJob

-- | Create a value of <a>CancelWorldGenerationJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:CancelWorldGenerationJob'</a>,
--   <a>cancelWorldGenerationJob_job</a> - The Amazon Resource Name (arn)
--   of the world generator job to cancel.
newCancelWorldGenerationJob :: Text -> CancelWorldGenerationJob

-- | <i>See:</i> <a>newCancelWorldGenerationJobResponse</a> smart
--   constructor.
data CancelWorldGenerationJobResponse
CancelWorldGenerationJobResponse' :: Int -> CancelWorldGenerationJobResponse

-- | Create a value of <a>CancelWorldGenerationJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelWorldGenerationJobResponse'</a>,
--   <a>cancelWorldGenerationJobResponse_httpStatus</a> - The response's
--   http status code.
newCancelWorldGenerationJobResponse :: Int -> CancelWorldGenerationJobResponse

-- | <i>See:</i> <a>newDescribeSimulationJobBatch</a> smart constructor.
data DescribeSimulationJobBatch
DescribeSimulationJobBatch' :: Text -> DescribeSimulationJobBatch

-- | Create a value of <a>DescribeSimulationJobBatch</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batch:DescribeSimulationJobBatch'</a>,
--   <a>describeSimulationJobBatch_batch</a> - The id of the batch to
--   describe.
newDescribeSimulationJobBatch :: Text -> DescribeSimulationJobBatch

-- | <i>See:</i> <a>newDescribeSimulationJobBatchResponse</a> smart
--   constructor.
data DescribeSimulationJobBatchResponse
DescribeSimulationJobBatchResponse' :: Maybe Text -> Maybe SimulationJobBatchStatus -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe SimulationJobBatchErrorCode -> Maybe [FailedCreateSimulationJobRequest] -> Maybe BatchPolicy -> Maybe [SimulationJobSummary] -> Maybe (NonEmpty SimulationJobRequest) -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> DescribeSimulationJobBatchResponse

-- | Create a value of <a>DescribeSimulationJobBatchResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_failureReason</a> - The reason
--   the simulation job batch failed.
--   
--   <a>$sel:status:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_status</a> - The status of the
--   batch.
--   
--   <ul>
--   <li><i>Pending</i> The simulation job batch request is pending.</li>
--   <li><i>InProgress</i> The simulation job batch is in progress.</li>
--   <li><i>Failed</i> The simulation job batch failed. One or more
--   simulation job requests could not be completed due to an internal
--   failure (like <tt>InternalServiceError</tt>). See <tt>failureCode</tt>
--   and <tt>failureReason</tt> for more information.</li>
--   <li><i>Completed</i> The simulation batch job completed. A batch is
--   complete when (1) there are no pending simulation job requests in the
--   batch and none of the failed simulation job requests are due to
--   <tt>InternalServiceError</tt> and (2) when all created simulation jobs
--   have reached a terminal state (for example, <tt>Completed</tt> or
--   <tt>Failed</tt>).</li>
--   <li><i>Canceled</i> The simulation batch job was cancelled.</li>
--   <li><i>Canceling</i> The simulation batch job is being cancelled.</li>
--   <li><i>Completing</i> The simulation batch job is completing.</li>
--   <li><i>TimingOut</i> The simulation job batch is timing out.If a batch
--   timing out, and there are pending requests that were failing due to an
--   internal failure (like <tt>InternalServiceError</tt>), the batch
--   status will be <tt>Failed</tt>. If there are no such failing request,
--   the batch status will be <tt>TimedOut</tt>.</li>
--   <li><i>TimedOut</i> The simulation batch job timed out.</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedAt:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the simulation job batch was last
--   updated.
--   
--   <a>$sel:arn:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_arn</a> - The Amazon Resource
--   Name (ARN) of the batch.
--   
--   <a>$sel:createdAt:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the simulation job batch was
--   created.
--   
--   <a>$sel:failureCode:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_failureCode</a> - The failure
--   code of the simulation job batch.
--   
--   <a>$sel:failedRequests:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_failedRequests</a> - A list of
--   failed create simulation job requests. The request failed to be
--   created into a simulation job. Failed requests do not have a
--   simulation job ID.
--   
--   <a>$sel:batchPolicy:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_batchPolicy</a> - The batch
--   policy.
--   
--   <a>$sel:createdRequests:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_createdRequests</a> - A list of
--   created simulation job summaries.
--   
--   <a>$sel:pendingRequests:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_pendingRequests</a> - A list of
--   pending simulation job requests. These requests have not yet been
--   created into simulation jobs.
--   
--   <a>$sel:clientRequestToken:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:tags:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_tags</a> - A map that contains
--   tag keys and tag values that are attached to the simulation job batch.
--   
--   <a>$sel:httpStatus:DescribeSimulationJobBatchResponse'</a>,
--   <a>describeSimulationJobBatchResponse_httpStatus</a> - The response's
--   http status code.
newDescribeSimulationJobBatchResponse :: Int -> DescribeSimulationJobBatchResponse

-- | <i>See:</i> <a>newListSimulationJobs</a> smart constructor.
data ListSimulationJobs
ListSimulationJobs' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Int -> ListSimulationJobs

-- | Create a value of <a>ListSimulationJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListSimulationJobs'</a>,
--   <a>listSimulationJobs_filters</a> - Optional filters to limit results.
--   
--   The filter names <tt>status</tt> and
--   <tt>simulationApplicationName</tt> and <tt>robotApplicationName</tt>
--   are supported. When filtering, you must use the complete value of the
--   filtered item. You can use up to three filters, but they must be for
--   the same named item. For example, if you are looking for items with
--   the status <tt>Preparing</tt> or the status <tt>Running</tt>.
--   
--   <a>$sel:nextToken:ListSimulationJobs'</a>,
--   <a>listSimulationJobs_nextToken</a> - If the previous paginated
--   request did not return all of the remaining results, the response
--   object's <tt>nextToken</tt> parameter value is set to a token. To
--   retrieve the next set of results, call <tt>ListSimulationJobs</tt>
--   again and assign that token to the request object's <tt>nextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's NextToken parameter is set to null.
--   
--   <a>$sel:maxResults:ListSimulationJobs'</a>,
--   <a>listSimulationJobs_maxResults</a> - When this parameter is used,
--   <tt>ListSimulationJobs</tt> only returns <tt>maxResults</tt> results
--   in a single page along with a <tt>nextToken</tt> response element. The
--   remaining results of the initial request can be seen by sending
--   another <tt>ListSimulationJobs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 1000. If
--   this parameter is not used, then <tt>ListSimulationJobs</tt> returns
--   up to 1000 results and a <tt>nextToken</tt> value if applicable.
newListSimulationJobs :: ListSimulationJobs

-- | <i>See:</i> <a>newListSimulationJobsResponse</a> smart constructor.
data ListSimulationJobsResponse
ListSimulationJobsResponse' :: Maybe Text -> Int -> [SimulationJobSummary] -> ListSimulationJobsResponse

-- | Create a value of <a>ListSimulationJobsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSimulationJobs'</a>,
--   <a>listSimulationJobsResponse_nextToken</a> - If the previous
--   paginated request did not return all of the remaining results, the
--   response object's <tt>nextToken</tt> parameter value is set to a
--   token. To retrieve the next set of results, call
--   <tt>ListSimulationJobs</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   <a>$sel:httpStatus:ListSimulationJobsResponse'</a>,
--   <a>listSimulationJobsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:simulationJobSummaries:ListSimulationJobsResponse'</a>,
--   <a>listSimulationJobsResponse_simulationJobSummaries</a> - A list of
--   simulation job summaries that meet the criteria of the request.
newListSimulationJobsResponse :: Int -> ListSimulationJobsResponse

-- | <i>See:</i> <a>newDeleteRobot</a> smart constructor.
data DeleteRobot
DeleteRobot' :: Text -> DeleteRobot

-- | Create a value of <a>DeleteRobot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:robot:DeleteRobot'</a>, <a>deleteRobot_robot</a> - The Amazon
--   Resource Name (ARN) of the robot.
newDeleteRobot :: Text -> DeleteRobot

-- | <i>See:</i> <a>newDeleteRobotResponse</a> smart constructor.
data DeleteRobotResponse
DeleteRobotResponse' :: Int -> DeleteRobotResponse

-- | Create a value of <a>DeleteRobotResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRobotResponse'</a>,
--   <a>deleteRobotResponse_httpStatus</a> - The response's http status
--   code.
newDeleteRobotResponse :: Int -> DeleteRobotResponse

-- | <i>See:</i> <a>newDeleteSimulationApplication</a> smart constructor.
data DeleteSimulationApplication
DeleteSimulationApplication' :: Maybe Text -> Text -> DeleteSimulationApplication

-- | Create a value of <a>DeleteSimulationApplication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationVersion:DeleteSimulationApplication'</a>,
--   <a>deleteSimulationApplication_applicationVersion</a> - The version of
--   the simulation application to delete.
--   
--   <a>$sel:application:DeleteSimulationApplication'</a>,
--   <a>deleteSimulationApplication_application</a> - The application
--   information for the simulation application to delete.
newDeleteSimulationApplication :: Text -> DeleteSimulationApplication

-- | <i>See:</i> <a>newDeleteSimulationApplicationResponse</a> smart
--   constructor.
data DeleteSimulationApplicationResponse
DeleteSimulationApplicationResponse' :: Int -> DeleteSimulationApplicationResponse

-- | Create a value of <a>DeleteSimulationApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteSimulationApplicationResponse'</a>,
--   <a>deleteSimulationApplicationResponse_httpStatus</a> - The response's
--   http status code.
newDeleteSimulationApplicationResponse :: Int -> DeleteSimulationApplicationResponse

-- | <i>See:</i> <a>newUpdateSimulationApplication</a> smart constructor.
data UpdateSimulationApplication
UpdateSimulationApplication' :: Maybe RenderingEngine -> Maybe Text -> Maybe Environment -> Maybe [SourceConfig] -> Text -> SimulationSoftwareSuite -> RobotSoftwareSuite -> UpdateSimulationApplication

-- | Create a value of <a>UpdateSimulationApplication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:renderingEngine:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplication_renderingEngine</a> - The rendering
--   engine for the simulation application.
--   
--   <a>$sel:currentRevisionId:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplication_currentRevisionId</a> - The revision id
--   for the robot application.
--   
--   <a>$sel:environment:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplication_environment</a> - The object that
--   contains the Docker image URI for your simulation application.
--   
--   <a>$sel:sources:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplication_sources</a> - The sources of the
--   simulation application.
--   
--   <a>$sel:application:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplication_application</a> - The application
--   information for the simulation application.
--   
--   <a>$sel:simulationSoftwareSuite:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplication_simulationSoftwareSuite</a> - The
--   simulation software suite used by the simulation application.
--   
--   <a>$sel:robotSoftwareSuite:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplication_robotSoftwareSuite</a> - Information
--   about the robot software suite (ROS distribution).
newUpdateSimulationApplication :: Text -> SimulationSoftwareSuite -> RobotSoftwareSuite -> UpdateSimulationApplication

-- | <i>See:</i> <a>newUpdateSimulationApplicationResponse</a> smart
--   constructor.
data UpdateSimulationApplicationResponse
UpdateSimulationApplicationResponse' :: Maybe RenderingEngine -> Maybe POSIX -> Maybe Text -> Maybe Environment -> Maybe [Source] -> Maybe Text -> Maybe Text -> Maybe SimulationSoftwareSuite -> Maybe RobotSoftwareSuite -> Maybe Text -> Int -> UpdateSimulationApplicationResponse

-- | Create a value of <a>UpdateSimulationApplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:renderingEngine:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplicationResponse_renderingEngine</a> - The
--   rendering engine for the simulation application.
--   
--   <a>$sel:lastUpdatedAt:UpdateSimulationApplicationResponse'</a>,
--   <a>updateSimulationApplicationResponse_lastUpdatedAt</a> - The time,
--   in milliseconds since the epoch, when the simulation application was
--   last updated.
--   
--   <a>$sel:arn:UpdateSimulationApplicationResponse'</a>,
--   <a>updateSimulationApplicationResponse_arn</a> - The Amazon Resource
--   Name (ARN) of the updated simulation application.
--   
--   <a>$sel:environment:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplicationResponse_environment</a> - The object
--   that contains the Docker image URI used for your simulation
--   application.
--   
--   <a>$sel:sources:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplicationResponse_sources</a> - The sources of
--   the simulation application.
--   
--   <a>$sel:name:UpdateSimulationApplicationResponse'</a>,
--   <a>updateSimulationApplicationResponse_name</a> - The name of the
--   simulation application.
--   
--   <a>$sel:version:UpdateSimulationApplicationResponse'</a>,
--   <a>updateSimulationApplicationResponse_version</a> - The version of
--   the robot application.
--   
--   <a>$sel:simulationSoftwareSuite:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplicationResponse_simulationSoftwareSuite</a> -
--   The simulation software suite used by the simulation application.
--   
--   <a>$sel:robotSoftwareSuite:UpdateSimulationApplication'</a>,
--   <a>updateSimulationApplicationResponse_robotSoftwareSuite</a> -
--   Information about the robot software suite (ROS distribution).
--   
--   <a>$sel:revisionId:UpdateSimulationApplicationResponse'</a>,
--   <a>updateSimulationApplicationResponse_revisionId</a> - The revision
--   id of the simulation application.
--   
--   <a>$sel:httpStatus:UpdateSimulationApplicationResponse'</a>,
--   <a>updateSimulationApplicationResponse_httpStatus</a> - The response's
--   http status code.
newUpdateSimulationApplicationResponse :: Int -> UpdateSimulationApplicationResponse

-- | <i>See:</i> <a>newCreateSimulationJob</a> smart constructor.
data CreateSimulationJob
CreateSimulationJob' :: Maybe FailureBehavior -> Maybe (NonEmpty RobotApplicationConfig) -> Maybe Compute -> Maybe (NonEmpty DataSourceConfig) -> Maybe VPCConfig -> Maybe OutputLocation -> Maybe (NonEmpty SimulationApplicationConfig) -> Maybe Text -> Maybe LoggingConfig -> Maybe (HashMap Text Text) -> Integer -> Text -> CreateSimulationJob

-- | Create a value of <a>CreateSimulationJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureBehavior:CreateSimulationJob'</a>,
--   <a>createSimulationJob_failureBehavior</a> - The failure behavior the
--   simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the instance running for its maximum
--   timeout duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
--   
--   <a>$sel:robotApplications:CreateSimulationJob'</a>,
--   <a>createSimulationJob_robotApplications</a> - The robot application
--   to use in the simulation job.
--   
--   <a>$sel:compute:CreateSimulationJob'</a>,
--   <a>createSimulationJob_compute</a> - Compute information for the
--   simulation job.
--   
--   <a>$sel:dataSources:CreateSimulationJob'</a>,
--   <a>createSimulationJob_dataSources</a> - Specify data sources to mount
--   read-only files from S3 into your simulation. These files are
--   available under <tt>/opt/robomaker/datasources/data_source_name</tt>.
--   
--   There is a limit of 100 files and a combined size of 25GB for all
--   <tt>DataSourceConfig</tt> objects.
--   
--   <a>$sel:vpcConfig:CreateSimulationJob'</a>,
--   <a>createSimulationJob_vpcConfig</a> - If your simulation job accesses
--   resources in a VPC, you provide this parameter identifying the list of
--   security group IDs and subnet IDs. These must belong to the same VPC.
--   You must provide at least one security group and one subnet ID.
--   
--   <a>$sel:outputLocation:CreateSimulationJob'</a>,
--   <a>createSimulationJob_outputLocation</a> - Location for output files
--   generated by the simulation job.
--   
--   <a>$sel:simulationApplications:CreateSimulationJob'</a>,
--   <a>createSimulationJob_simulationApplications</a> - The simulation
--   application to use in the simulation job.
--   
--   <a>$sel:clientRequestToken:CreateSimulationJob'</a>,
--   <a>createSimulationJob_clientRequestToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:loggingConfig:CreateSimulationJob'</a>,
--   <a>createSimulationJob_loggingConfig</a> - The logging configuration.
--   
--   <a>$sel:tags:CreateSimulationJob'</a>, <a>createSimulationJob_tags</a>
--   - A map that contains tag keys and tag values that are attached to the
--   simulation job.
--   
--   <a>$sel:maxJobDurationInSeconds:CreateSimulationJob'</a>,
--   <a>createSimulationJob_maxJobDurationInSeconds</a> - The maximum
--   simulation job duration in seconds (up to 14 days or 1,209,600
--   seconds. When <tt>maxJobDurationInSeconds</tt> is reached, the
--   simulation job will status will transition to <tt>Completed</tt>.
--   
--   <a>$sel:iamRole:CreateSimulationJob'</a>,
--   <a>createSimulationJob_iamRole</a> - The IAM role name that allows the
--   simulation instance to call the AWS APIs that are specified in its
--   associated policies on your behalf. This is how credentials are passed
--   in to your simulation job.
newCreateSimulationJob :: Integer -> Text -> CreateSimulationJob

-- | <i>See:</i> <a>newCreateSimulationJobResponse</a> smart constructor.
data CreateSimulationJobResponse
CreateSimulationJobResponse' :: Maybe FailureBehavior -> Maybe SimulationJobStatus -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty RobotApplicationConfig) -> Maybe SimulationJobErrorCode -> Maybe ComputeResponse -> Maybe [DataSource] -> Maybe VPCConfigResponse -> Maybe OutputLocation -> Maybe (NonEmpty SimulationApplicationConfig) -> Maybe Integer -> Maybe Text -> Maybe POSIX -> Maybe LoggingConfig -> Maybe Text -> Maybe Integer -> Maybe (HashMap Text Text) -> Int -> CreateSimulationJobResponse

-- | Create a value of <a>CreateSimulationJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureBehavior:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_failureBehavior</a> - the failure
--   behavior for the simulation job.
--   
--   <a>$sel:status:CreateSimulationJobResponse'</a>,
--   <a>createSimulationJobResponse_status</a> - The status of the
--   simulation job.
--   
--   <a>$sel:lastUpdatedAt:CreateSimulationJobResponse'</a>,
--   <a>createSimulationJobResponse_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the simulation job was last
--   updated.
--   
--   <a>$sel:arn:CreateSimulationJobResponse'</a>,
--   <a>createSimulationJobResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the simulation job.
--   
--   <a>$sel:robotApplications:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_robotApplications</a> - The robot
--   application used by the simulation job.
--   
--   <a>$sel:failureCode:CreateSimulationJobResponse'</a>,
--   <a>createSimulationJobResponse_failureCode</a> - The failure code of
--   the simulation job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>RobotApplicationCrash</i> Robot application exited
--   abnormally.</li>
--   <li><i>SimulationApplicationCrash</i> Simulation application exited
--   abnormally.</li>
--   <li><i>BadPermissionsRobotApplication</i> Robot application bundle
--   could not be downloaded.</li>
--   <li><i>BadPermissionsSimulationApplication</i> Simulation application
--   bundle could not be downloaded.</li>
--   <li><i>BadPermissionsS3Output</i> Unable to publish outputs to
--   customer-provided S3 bucket.</li>
--   <li><i>BadPermissionsCloudwatchLogs</i> Unable to publish logs to
--   customer-provided CloudWatch Logs resource.</li>
--   <li><i>SubnetIpLimitExceeded</i> Subnet IP limit exceeded.</li>
--   <li><i>ENILimitExceeded</i> ENI limit exceeded.</li>
--   <li><i>BadPermissionsUserCredentials</i> Unable to use the Role
--   provided.</li>
--   <li><i>InvalidBundleRobotApplication</i> Robot bundle cannot be
--   extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>InvalidBundleSimulationApplication</i> Simulation bundle cannot
--   be extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>RobotApplicationVersionMismatchedEtag</i> Etag for
--   RobotApplication does not match value during version creation.</li>
--   <li><i>SimulationApplicationVersionMismatchedEtag</i> Etag for
--   SimulationApplication does not match value during version
--   creation.</li>
--   </ul>
--   
--   <a>$sel:compute:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_compute</a> - Compute information for
--   the simulation job.
--   
--   <a>$sel:dataSources:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_dataSources</a> - The data sources for
--   the simulation job.
--   
--   <a>$sel:vpcConfig:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_vpcConfig</a> - Information about the
--   vpc configuration.
--   
--   <a>$sel:outputLocation:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_outputLocation</a> - Simulation job
--   output files location.
--   
--   <a>$sel:simulationApplications:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_simulationApplications</a> - The
--   simulation application used by the simulation job.
--   
--   <a>$sel:simulationTimeMillis:CreateSimulationJobResponse'</a>,
--   <a>createSimulationJobResponse_simulationTimeMillis</a> - The
--   simulation job execution duration in milliseconds.
--   
--   <a>$sel:clientRequestToken:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:lastStartedAt:CreateSimulationJobResponse'</a>,
--   <a>createSimulationJobResponse_lastStartedAt</a> - The time, in
--   milliseconds since the epoch, when the simulation job was last
--   started.
--   
--   <a>$sel:loggingConfig:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_loggingConfig</a> - The logging
--   configuration.
--   
--   <a>$sel:iamRole:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_iamRole</a> - The IAM role that allows
--   the simulation job to call the AWS APIs that are specified in its
--   associated policies on your behalf.
--   
--   <a>$sel:maxJobDurationInSeconds:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_maxJobDurationInSeconds</a> - The
--   maximum simulation job duration in seconds.
--   
--   <a>$sel:tags:CreateSimulationJob'</a>,
--   <a>createSimulationJobResponse_tags</a> - The list of all tags added
--   to the simulation job.
--   
--   <a>$sel:httpStatus:CreateSimulationJobResponse'</a>,
--   <a>createSimulationJobResponse_httpStatus</a> - The response's http
--   status code.
newCreateSimulationJobResponse :: Int -> CreateSimulationJobResponse

-- | <i>See:</i> <a>newListWorldExportJobs</a> smart constructor.
data ListWorldExportJobs
ListWorldExportJobs' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Int -> ListWorldExportJobs

-- | Create a value of <a>ListWorldExportJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListWorldExportJobs'</a>,
--   <a>listWorldExportJobs_filters</a> - Optional filters to limit
--   results. You can use <tt>generationJobId</tt> and <tt>templateId</tt>.
--   
--   <a>$sel:nextToken:ListWorldExportJobs'</a>,
--   <a>listWorldExportJobs_nextToken</a> - If the previous paginated
--   request did not return all of the remaining results, the response
--   object's <tt>nextToken</tt> parameter value is set to a token. To
--   retrieve the next set of results, call <tt>ListWorldExportJobs</tt>
--   again and assign that token to the request object's <tt>nextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's NextToken parameter is set to null.
--   
--   <a>$sel:maxResults:ListWorldExportJobs'</a>,
--   <a>listWorldExportJobs_maxResults</a> - When this parameter is used,
--   <tt>ListWorldExportJobs</tt> only returns <tt>maxResults</tt> results
--   in a single page along with a <tt>nextToken</tt> response element. The
--   remaining results of the initial request can be seen by sending
--   another <tt>ListWorldExportJobs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListWorldExportJobs</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
newListWorldExportJobs :: ListWorldExportJobs

-- | <i>See:</i> <a>newListWorldExportJobsResponse</a> smart constructor.
data ListWorldExportJobsResponse
ListWorldExportJobsResponse' :: Maybe Text -> Int -> [WorldExportJobSummary] -> ListWorldExportJobsResponse

-- | Create a value of <a>ListWorldExportJobsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWorldExportJobs'</a>,
--   <a>listWorldExportJobsResponse_nextToken</a> - If the previous
--   paginated request did not return all of the remaining results, the
--   response object's <tt>nextToken</tt> parameter value is set to a
--   token. To retrieve the next set of results, call
--   <tt>ListWorldExportJobsRequest</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
--   
--   <a>$sel:httpStatus:ListWorldExportJobsResponse'</a>,
--   <a>listWorldExportJobsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:worldExportJobSummaries:ListWorldExportJobsResponse'</a>,
--   <a>listWorldExportJobsResponse_worldExportJobSummaries</a> - Summary
--   information for world export jobs.
newListWorldExportJobsResponse :: Int -> ListWorldExportJobsResponse

-- | <i>See:</i> <a>newListSimulationApplications</a> smart constructor.
data ListSimulationApplications
ListSimulationApplications' :: Maybe Text -> Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Int -> ListSimulationApplications

-- | Create a value of <a>ListSimulationApplications</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionQualifier:ListSimulationApplications'</a>,
--   <a>listSimulationApplications_versionQualifier</a> - The version
--   qualifier of the simulation application.
--   
--   <a>$sel:filters:ListSimulationApplications'</a>,
--   <a>listSimulationApplications_filters</a> - Optional list of filters
--   to limit results.
--   
--   The filter name <tt>name</tt> is supported. When filtering, you must
--   use the complete value of the filtered item. You can use up to three
--   filters.
--   
--   <a>$sel:nextToken:ListSimulationApplications'</a>,
--   <a>listSimulationApplications_nextToken</a> - If the previous
--   paginated request did not return all of the remaining results, the
--   response object's <tt>nextToken</tt> parameter value is set to a
--   token. To retrieve the next set of results, call
--   <tt>ListSimulationApplications</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
--   
--   <a>$sel:maxResults:ListSimulationApplications'</a>,
--   <a>listSimulationApplications_maxResults</a> - When this parameter is
--   used, <tt>ListSimulationApplications</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>ListSimulationApplications</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <tt>ListSimulationApplications</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
newListSimulationApplications :: ListSimulationApplications

-- | <i>See:</i> <a>newListSimulationApplicationsResponse</a> smart
--   constructor.
data ListSimulationApplicationsResponse
ListSimulationApplicationsResponse' :: Maybe Text -> Maybe [SimulationApplicationSummary] -> Int -> ListSimulationApplicationsResponse

-- | Create a value of <a>ListSimulationApplicationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSimulationApplications'</a>,
--   <a>listSimulationApplicationsResponse_nextToken</a> - If the previous
--   paginated request did not return all of the remaining results, the
--   response object's <tt>nextToken</tt> parameter value is set to a
--   token. To retrieve the next set of results, call
--   <tt>ListSimulationApplications</tt> again and assign that token to the
--   request object's <tt>nextToken</tt> parameter. If there are no
--   remaining results, the previous response object's NextToken parameter
--   is set to null.
--   
--   
--   <a>$sel:simulationApplicationSummaries:ListSimulationApplicationsResponse'</a>,
--   <a>listSimulationApplicationsResponse_simulationApplicationSummaries</a>
--   - A list of simulation application summaries that meet the criteria of
--   the request.
--   
--   <a>$sel:httpStatus:ListSimulationApplicationsResponse'</a>,
--   <a>listSimulationApplicationsResponse_httpStatus</a> - The response's
--   http status code.
newListSimulationApplicationsResponse :: Int -> ListSimulationApplicationsResponse

-- | <i>See:</i> <a>newCreateRobotApplicationVersion</a> smart constructor.
data CreateRobotApplicationVersion
CreateRobotApplicationVersion' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Text -> CreateRobotApplicationVersion

-- | Create a value of <a>CreateRobotApplicationVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currentRevisionId:CreateRobotApplicationVersion'</a>,
--   <a>createRobotApplicationVersion_currentRevisionId</a> - The current
--   revision id for the robot application. If you provide a value and it
--   matches the latest revision ID, a new version will be created.
--   
--   <a>$sel:s3Etags:CreateRobotApplicationVersion'</a>,
--   <a>createRobotApplicationVersion_s3Etags</a> - The Amazon S3
--   identifier for the zip file bundle that you use for your robot
--   application.
--   
--   <a>$sel:imageDigest:CreateRobotApplicationVersion'</a>,
--   <a>createRobotApplicationVersion_imageDigest</a> - A SHA256 identifier
--   for the Docker image that you use for your robot application.
--   
--   <a>$sel:application:CreateRobotApplicationVersion'</a>,
--   <a>createRobotApplicationVersion_application</a> - The application
--   information for the robot application.
newCreateRobotApplicationVersion :: Text -> CreateRobotApplicationVersion

-- | <i>See:</i> <a>newCreateRobotApplicationVersionResponse</a> smart
--   constructor.
data CreateRobotApplicationVersionResponse
CreateRobotApplicationVersionResponse' :: Maybe POSIX -> Maybe Text -> Maybe Environment -> Maybe [Source] -> Maybe Text -> Maybe Text -> Maybe RobotSoftwareSuite -> Maybe Text -> Int -> CreateRobotApplicationVersionResponse

-- | Create a value of <a>CreateRobotApplicationVersionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:CreateRobotApplicationVersionResponse'</a>,
--   <a>createRobotApplicationVersionResponse_lastUpdatedAt</a> - The time,
--   in milliseconds since the epoch, when the robot application was last
--   updated.
--   
--   <a>$sel:arn:CreateRobotApplicationVersionResponse'</a>,
--   <a>createRobotApplicationVersionResponse_arn</a> - The Amazon Resource
--   Name (ARN) of the robot application.
--   
--   <a>$sel:environment:CreateRobotApplicationVersionResponse'</a>,
--   <a>createRobotApplicationVersionResponse_environment</a> - The object
--   that contains the Docker image URI used to create your robot
--   application.
--   
--   <a>$sel:sources:CreateRobotApplicationVersionResponse'</a>,
--   <a>createRobotApplicationVersionResponse_sources</a> - The sources of
--   the robot application.
--   
--   <a>$sel:name:CreateRobotApplicationVersionResponse'</a>,
--   <a>createRobotApplicationVersionResponse_name</a> - The name of the
--   robot application.
--   
--   <a>$sel:version:CreateRobotApplicationVersionResponse'</a>,
--   <a>createRobotApplicationVersionResponse_version</a> - The version of
--   the robot application.
--   
--   <a>$sel:robotSoftwareSuite:CreateRobotApplicationVersionResponse'</a>,
--   <a>createRobotApplicationVersionResponse_robotSoftwareSuite</a> - The
--   robot software suite (ROS distribution) used by the robot application.
--   
--   <a>$sel:revisionId:CreateRobotApplicationVersionResponse'</a>,
--   <a>createRobotApplicationVersionResponse_revisionId</a> - The revision
--   id of the robot application.
--   
--   <a>$sel:httpStatus:CreateRobotApplicationVersionResponse'</a>,
--   <a>createRobotApplicationVersionResponse_httpStatus</a> - The
--   response's http status code.
newCreateRobotApplicationVersionResponse :: Int -> CreateRobotApplicationVersionResponse

-- | <i>See:</i> <a>newCancelDeploymentJob</a> smart constructor.
data CancelDeploymentJob
CancelDeploymentJob' :: Text -> CancelDeploymentJob

-- | Create a value of <a>CancelDeploymentJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:CancelDeploymentJob'</a>, <a>cancelDeploymentJob_job</a> -
--   The deployment job ARN to cancel.
newCancelDeploymentJob :: Text -> CancelDeploymentJob

-- | <i>See:</i> <a>newCancelDeploymentJobResponse</a> smart constructor.
data CancelDeploymentJobResponse
CancelDeploymentJobResponse' :: Int -> CancelDeploymentJobResponse

-- | Create a value of <a>CancelDeploymentJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelDeploymentJobResponse'</a>,
--   <a>cancelDeploymentJobResponse_httpStatus</a> - The response's http
--   status code.
newCancelDeploymentJobResponse :: Int -> CancelDeploymentJobResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the AWS RoboMaker resource you are
--   tagging.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A map that
--   contains tag keys and tag values that are attached to the resource.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newListWorlds</a> smart constructor.
data ListWorlds
ListWorlds' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Int -> ListWorlds

-- | Create a value of <a>ListWorlds</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListWorlds'</a>, <a>listWorlds_filters</a> - Optional
--   filters to limit results. You can use <tt>status</tt>.
--   
--   <a>$sel:nextToken:ListWorlds'</a>, <a>listWorlds_nextToken</a> - If
--   the previous paginated request did not return all of the remaining
--   results, the response object's <tt>nextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call
--   <tt>ListWorlds</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   <a>$sel:maxResults:ListWorlds'</a>, <a>listWorlds_maxResults</a> -
--   When this parameter is used, <tt>ListWorlds</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another <tt>ListWorlds</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If this parameter is not used, then
--   <tt>ListWorlds</tt> returns up to 100 results and a <tt>nextToken</tt>
--   value if applicable.
newListWorlds :: ListWorlds

-- | <i>See:</i> <a>newListWorldsResponse</a> smart constructor.
data ListWorldsResponse
ListWorldsResponse' :: Maybe Text -> Maybe [WorldSummary] -> Int -> ListWorldsResponse

-- | Create a value of <a>ListWorldsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWorlds'</a>, <a>listWorldsResponse_nextToken</a>
--   - If the previous paginated request did not return all of the
--   remaining results, the response object's <tt>nextToken</tt> parameter
--   value is set to a token. To retrieve the next set of results, call
--   <tt>ListWorlds</tt> again and assign that token to the request
--   object's <tt>nextToken</tt> parameter. If there are no remaining
--   results, the previous response object's NextToken parameter is set to
--   null.
--   
--   <a>$sel:worldSummaries:ListWorldsResponse'</a>,
--   <a>listWorldsResponse_worldSummaries</a> - Summary information for
--   worlds.
--   
--   <a>$sel:httpStatus:ListWorldsResponse'</a>,
--   <a>listWorldsResponse_httpStatus</a> - The response's http status
--   code.
newListWorldsResponse :: Int -> ListWorldsResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the AWS RoboMaker resource you are removing tags.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   map that contains tag keys and tag values that will be unattached from
--   the resource.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newDescribeDeploymentJob</a> smart constructor.
data DescribeDeploymentJob
DescribeDeploymentJob' :: Text -> DescribeDeploymentJob

-- | Create a value of <a>DescribeDeploymentJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:DescribeDeploymentJob'</a>,
--   <a>describeDeploymentJob_job</a> - The Amazon Resource Name (ARN) of
--   the deployment job.
newDescribeDeploymentJob :: Text -> DescribeDeploymentJob

-- | <i>See:</i> <a>newDescribeDeploymentJobResponse</a> smart constructor.
data DescribeDeploymentJobResponse
DescribeDeploymentJobResponse' :: Maybe Text -> Maybe DeploymentStatus -> Maybe (NonEmpty DeploymentApplicationConfig) -> Maybe Text -> Maybe POSIX -> Maybe DeploymentJobErrorCode -> Maybe DeploymentConfig -> Maybe Text -> Maybe [RobotDeployment] -> Maybe (HashMap Text Text) -> Int -> DescribeDeploymentJobResponse

-- | Create a value of <a>DescribeDeploymentJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_failureReason</a> - A short
--   description of the reason why the deployment job failed.
--   
--   <a>$sel:status:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_status</a> - The status of the
--   deployment job.
--   
--   
--   <a>$sel:deploymentApplicationConfigs:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_deploymentApplicationConfigs</a> -
--   The deployment application configuration.
--   
--   <a>$sel:arn:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the deployment job.
--   
--   <a>$sel:createdAt:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the deployment job was created.
--   
--   <a>$sel:failureCode:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_failureCode</a> - The deployment job
--   failure code.
--   
--   <a>$sel:deploymentConfig:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_deploymentConfig</a> - The deployment
--   configuration.
--   
--   <a>$sel:fleet:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_fleet</a> - The Amazon Resource Name
--   (ARN) of the fleet.
--   
--   <a>$sel:robotDeploymentSummary:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_robotDeploymentSummary</a> - A list
--   of robot deployment summaries.
--   
--   <a>$sel:tags:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_tags</a> - The list of all tags added
--   to the specified deployment job.
--   
--   <a>$sel:httpStatus:DescribeDeploymentJobResponse'</a>,
--   <a>describeDeploymentJobResponse_httpStatus</a> - The response's http
--   status code.
newDescribeDeploymentJobResponse :: Int -> DescribeDeploymentJobResponse

-- | <i>See:</i> <a>newDeleteWorldTemplate</a> smart constructor.
data DeleteWorldTemplate
DeleteWorldTemplate' :: Text -> DeleteWorldTemplate

-- | Create a value of <a>DeleteWorldTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:template:DeleteWorldTemplate'</a>,
--   <a>deleteWorldTemplate_template</a> - The Amazon Resource Name (arn)
--   of the world template you want to delete.
newDeleteWorldTemplate :: Text -> DeleteWorldTemplate

-- | <i>See:</i> <a>newDeleteWorldTemplateResponse</a> smart constructor.
data DeleteWorldTemplateResponse
DeleteWorldTemplateResponse' :: Int -> DeleteWorldTemplateResponse

-- | Create a value of <a>DeleteWorldTemplateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteWorldTemplateResponse'</a>,
--   <a>deleteWorldTemplateResponse_httpStatus</a> - The response's http
--   status code.
newDeleteWorldTemplateResponse :: Int -> DeleteWorldTemplateResponse

-- | <i>See:</i> <a>newUpdateWorldTemplate</a> smart constructor.
data UpdateWorldTemplate
UpdateWorldTemplate' :: Maybe Text -> Maybe TemplateLocation -> Maybe Text -> Text -> UpdateWorldTemplate

-- | Create a value of <a>UpdateWorldTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateWorldTemplate'</a>, <a>updateWorldTemplate_name</a>
--   - The name of the template.
--   
--   <a>$sel:templateLocation:UpdateWorldTemplate'</a>,
--   <a>updateWorldTemplate_templateLocation</a> - The location of the
--   world template.
--   
--   <a>$sel:templateBody:UpdateWorldTemplate'</a>,
--   <a>updateWorldTemplate_templateBody</a> - The world template body.
--   
--   <a>$sel:template:UpdateWorldTemplate'</a>,
--   <a>updateWorldTemplate_template</a> - The Amazon Resource Name (arn)
--   of the world template to update.
newUpdateWorldTemplate :: Text -> UpdateWorldTemplate

-- | <i>See:</i> <a>newUpdateWorldTemplateResponse</a> smart constructor.
data UpdateWorldTemplateResponse
UpdateWorldTemplateResponse' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Int -> UpdateWorldTemplateResponse

-- | Create a value of <a>UpdateWorldTemplateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:UpdateWorldTemplateResponse'</a>,
--   <a>updateWorldTemplateResponse_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the world template was last
--   updated.
--   
--   <a>$sel:arn:UpdateWorldTemplateResponse'</a>,
--   <a>updateWorldTemplateResponse_arn</a> - The Amazon Resource Name
--   (arn) of the world template.
--   
--   <a>$sel:createdAt:UpdateWorldTemplateResponse'</a>,
--   <a>updateWorldTemplateResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the world template was created.
--   
--   <a>$sel:name:UpdateWorldTemplate'</a>,
--   <a>updateWorldTemplateResponse_name</a> - The name of the world
--   template.
--   
--   <a>$sel:httpStatus:UpdateWorldTemplateResponse'</a>,
--   <a>updateWorldTemplateResponse_httpStatus</a> - The response's http
--   status code.
newUpdateWorldTemplateResponse :: Int -> UpdateWorldTemplateResponse

-- | <i>See:</i> <a>newDescribeWorldGenerationJob</a> smart constructor.
data DescribeWorldGenerationJob
DescribeWorldGenerationJob' :: Text -> DescribeWorldGenerationJob

-- | Create a value of <a>DescribeWorldGenerationJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:DescribeWorldGenerationJob'</a>,
--   <a>describeWorldGenerationJob_job</a> - The Amazon Resource Name (arn)
--   of the world generation job to describe.
newDescribeWorldGenerationJob :: Text -> DescribeWorldGenerationJob

-- | <i>See:</i> <a>newDescribeWorldGenerationJobResponse</a> smart
--   constructor.
data DescribeWorldGenerationJobResponse
DescribeWorldGenerationJobResponse' :: Maybe Text -> Maybe WorldGenerationJobStatus -> Maybe Text -> Maybe POSIX -> Maybe WorldGenerationJobErrorCode -> Maybe WorldCount -> Maybe FinishedWorldsSummary -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> DescribeWorldGenerationJobResponse

-- | Create a value of <a>DescribeWorldGenerationJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_failureReason</a> - The reason
--   why the world generation job failed.
--   
--   <a>$sel:status:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_status</a> - The status of the
--   world generation job:
--   
--   <ul>
--   <li><i>Pending</i> The world generation job request is pending.</li>
--   <li><i>Running</i> The world generation job is running.</li>
--   <li><i>Completed</i> The world generation job completed.</li>
--   <li><i>Failed</i> The world generation job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>PartialFailed</i> Some worlds did not generate.</li>
--   <li><i>Canceled</i> The world generation job was cancelled.</li>
--   <li><i>Canceling</i> The world generation job is being cancelled.</li>
--   </ul>
--   
--   <a>$sel:arn:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_arn</a> - The Amazon Resource
--   Name (ARN) of the world generation job.
--   
--   <a>$sel:createdAt:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the world generation job was
--   created.
--   
--   <a>$sel:failureCode:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_failureCode</a> - The failure
--   code of the world generation job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
--   
--   <a>$sel:worldCount:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_worldCount</a> - Information
--   about the world count.
--   
--   <a>$sel:finishedWorldsSummary:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_finishedWorldsSummary</a> -
--   Summary information about finished worlds.
--   
--   <a>$sel:template:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_template</a> - The Amazon
--   Resource Name (arn) of the world template.
--   
--   <a>$sel:worldTags:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_worldTags</a> - A map that
--   contains tag keys and tag values that are attached to the generated
--   worlds.
--   
--   <a>$sel:clientRequestToken:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:tags:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_tags</a> - A map that contains
--   tag keys and tag values that are attached to the world generation job.
--   
--   <a>$sel:httpStatus:DescribeWorldGenerationJobResponse'</a>,
--   <a>describeWorldGenerationJobResponse_httpStatus</a> - The response's
--   http status code.
newDescribeWorldGenerationJobResponse :: Int -> DescribeWorldGenerationJobResponse

-- | <i>See:</i> <a>newCreateWorldTemplate</a> smart constructor.
data CreateWorldTemplate
CreateWorldTemplate' :: Maybe Text -> Maybe TemplateLocation -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> CreateWorldTemplate

-- | Create a value of <a>CreateWorldTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateWorldTemplate'</a>, <a>createWorldTemplate_name</a>
--   - The name of the world template.
--   
--   <a>$sel:templateLocation:CreateWorldTemplate'</a>,
--   <a>createWorldTemplate_templateLocation</a> - The location of the
--   world template.
--   
--   <a>$sel:templateBody:CreateWorldTemplate'</a>,
--   <a>createWorldTemplate_templateBody</a> - The world template body.
--   
--   <a>$sel:clientRequestToken:CreateWorldTemplate'</a>,
--   <a>createWorldTemplate_clientRequestToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:tags:CreateWorldTemplate'</a>, <a>createWorldTemplate_tags</a>
--   - A map that contains tag keys and tag values that are attached to the
--   world template.
newCreateWorldTemplate :: CreateWorldTemplate

-- | <i>See:</i> <a>newCreateWorldTemplateResponse</a> smart constructor.
data CreateWorldTemplateResponse
CreateWorldTemplateResponse' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateWorldTemplateResponse

-- | Create a value of <a>CreateWorldTemplateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:CreateWorldTemplateResponse'</a>,
--   <a>createWorldTemplateResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the world template.
--   
--   <a>$sel:createdAt:CreateWorldTemplateResponse'</a>,
--   <a>createWorldTemplateResponse_createdAt</a> - The time, in
--   milliseconds since the epoch, when the world template was created.
--   
--   <a>$sel:name:CreateWorldTemplate'</a>,
--   <a>createWorldTemplateResponse_name</a> - The name of the world
--   template.
--   
--   <a>$sel:clientRequestToken:CreateWorldTemplate'</a>,
--   <a>createWorldTemplateResponse_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:tags:CreateWorldTemplate'</a>,
--   <a>createWorldTemplateResponse_tags</a> - A map that contains tag keys
--   and tag values that are attached to the world template.
--   
--   <a>$sel:httpStatus:CreateWorldTemplateResponse'</a>,
--   <a>createWorldTemplateResponse_httpStatus</a> - The response's http
--   status code.
newCreateWorldTemplateResponse :: Int -> CreateWorldTemplateResponse

-- | <i>See:</i> <a>newCancelSimulationJobBatch</a> smart constructor.
data CancelSimulationJobBatch
CancelSimulationJobBatch' :: Text -> CancelSimulationJobBatch

-- | Create a value of <a>CancelSimulationJobBatch</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batch:CancelSimulationJobBatch'</a>,
--   <a>cancelSimulationJobBatch_batch</a> - The id of the batch to cancel.
newCancelSimulationJobBatch :: Text -> CancelSimulationJobBatch

-- | <i>See:</i> <a>newCancelSimulationJobBatchResponse</a> smart
--   constructor.
data CancelSimulationJobBatchResponse
CancelSimulationJobBatchResponse' :: Int -> CancelSimulationJobBatchResponse

-- | Create a value of <a>CancelSimulationJobBatchResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelSimulationJobBatchResponse'</a>,
--   <a>cancelSimulationJobBatchResponse_httpStatus</a> - The response's
--   http status code.
newCancelSimulationJobBatchResponse :: Int -> CancelSimulationJobBatchResponse

-- | <i>See:</i> <a>newDescribeRobot</a> smart constructor.
data DescribeRobot
DescribeRobot' :: Text -> DescribeRobot

-- | Create a value of <a>DescribeRobot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:robot:DescribeRobot'</a>, <a>describeRobot_robot</a> - The
--   Amazon Resource Name (ARN) of the robot to be described.
newDescribeRobot :: Text -> DescribeRobot

-- | <i>See:</i> <a>newDescribeRobotResponse</a> smart constructor.
data DescribeRobotResponse
DescribeRobotResponse' :: Maybe Text -> Maybe RobotStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Architecture -> Maybe POSIX -> Maybe (HashMap Text Text) -> Int -> DescribeRobotResponse

-- | Create a value of <a>DescribeRobotResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastDeploymentJob:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_lastDeploymentJob</a> - The Amazon Resource
--   Name (ARN) of the last deployment job.
--   
--   <a>$sel:status:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_status</a> - The status of the fleet.
--   
--   <a>$sel:arn:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_arn</a> - The Amazon Resource Name (ARN) of
--   the robot.
--   
--   <a>$sel:createdAt:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_createdAt</a> - The time, in milliseconds
--   since the epoch, when the robot was created.
--   
--   <a>$sel:greengrassGroupId:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_greengrassGroupId</a> - The Greengrass group
--   id.
--   
--   <a>$sel:fleetArn:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_fleetArn</a> - The Amazon Resource Name (ARN)
--   of the fleet.
--   
--   <a>$sel:name:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_name</a> - The name of the robot.
--   
--   <a>$sel:architecture:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_architecture</a> - The target architecture of
--   the robot application.
--   
--   <a>$sel:lastDeploymentTime:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_lastDeploymentTime</a> - The time of the last
--   deployment job.
--   
--   <a>$sel:tags:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_tags</a> - The list of all tags added to the
--   specified robot.
--   
--   <a>$sel:httpStatus:DescribeRobotResponse'</a>,
--   <a>describeRobotResponse_httpStatus</a> - The response's http status
--   code.
newDescribeRobotResponse :: Int -> DescribeRobotResponse

-- | <i>See:</i> <a>newSyncDeploymentJob</a> smart constructor.
data SyncDeploymentJob
SyncDeploymentJob' :: Text -> Text -> SyncDeploymentJob

-- | Create a value of <a>SyncDeploymentJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:SyncDeploymentJob'</a>,
--   <a>syncDeploymentJob_clientRequestToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:fleet:SyncDeploymentJob'</a>, <a>syncDeploymentJob_fleet</a> -
--   The target fleet for the synchronization.
newSyncDeploymentJob :: Text -> Text -> SyncDeploymentJob

-- | <i>See:</i> <a>newSyncDeploymentJobResponse</a> smart constructor.
data SyncDeploymentJobResponse
SyncDeploymentJobResponse' :: Maybe Text -> Maybe DeploymentStatus -> Maybe (NonEmpty DeploymentApplicationConfig) -> Maybe Text -> Maybe POSIX -> Maybe DeploymentJobErrorCode -> Maybe DeploymentConfig -> Maybe Text -> Int -> SyncDeploymentJobResponse

-- | Create a value of <a>SyncDeploymentJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:SyncDeploymentJobResponse'</a>,
--   <a>syncDeploymentJobResponse_failureReason</a> - The failure reason if
--   the job fails.
--   
--   <a>$sel:status:SyncDeploymentJobResponse'</a>,
--   <a>syncDeploymentJobResponse_status</a> - The status of the
--   synchronization job.
--   
--   <a>$sel:deploymentApplicationConfigs:SyncDeploymentJobResponse'</a>,
--   <a>syncDeploymentJobResponse_deploymentApplicationConfigs</a> -
--   Information about the deployment application configurations.
--   
--   <a>$sel:arn:SyncDeploymentJobResponse'</a>,
--   <a>syncDeploymentJobResponse_arn</a> - The Amazon Resource Name (ARN)
--   of the synchronization request.
--   
--   <a>$sel:createdAt:SyncDeploymentJobResponse'</a>,
--   <a>syncDeploymentJobResponse_createdAt</a> - The time, in milliseconds
--   since the epoch, when the fleet was created.
--   
--   <a>$sel:failureCode:SyncDeploymentJobResponse'</a>,
--   <a>syncDeploymentJobResponse_failureCode</a> - The failure code if the
--   job fails:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>RobotApplicationCrash</i> Robot application exited
--   abnormally.</li>
--   <li><i>SimulationApplicationCrash</i> Simulation application exited
--   abnormally.</li>
--   <li><i>BadPermissionsRobotApplication</i> Robot application bundle
--   could not be downloaded.</li>
--   <li><i>BadPermissionsSimulationApplication</i> Simulation application
--   bundle could not be downloaded.</li>
--   <li><i>BadPermissionsS3Output</i> Unable to publish outputs to
--   customer-provided S3 bucket.</li>
--   <li><i>BadPermissionsCloudwatchLogs</i> Unable to publish logs to
--   customer-provided CloudWatch Logs resource.</li>
--   <li><i>SubnetIpLimitExceeded</i> Subnet IP limit exceeded.</li>
--   <li><i>ENILimitExceeded</i> ENI limit exceeded.</li>
--   <li><i>BadPermissionsUserCredentials</i> Unable to use the Role
--   provided.</li>
--   <li><i>InvalidBundleRobotApplication</i> Robot bundle cannot be
--   extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>InvalidBundleSimulationApplication</i> Simulation bundle cannot
--   be extracted (invalid format, bundling error, or other issue).</li>
--   <li><i>RobotApplicationVersionMismatchedEtag</i> Etag for
--   RobotApplication does not match value during version creation.</li>
--   <li><i>SimulationApplicationVersionMismatchedEtag</i> Etag for
--   SimulationApplication does not match value during version
--   creation.</li>
--   </ul>
--   
--   <a>$sel:deploymentConfig:SyncDeploymentJobResponse'</a>,
--   <a>syncDeploymentJobResponse_deploymentConfig</a> - Information about
--   the deployment configuration.
--   
--   <a>$sel:fleet:SyncDeploymentJob'</a>,
--   <a>syncDeploymentJobResponse_fleet</a> - The Amazon Resource Name
--   (ARN) of the fleet.
--   
--   <a>$sel:httpStatus:SyncDeploymentJobResponse'</a>,
--   <a>syncDeploymentJobResponse_httpStatus</a> - The response's http
--   status code.
newSyncDeploymentJobResponse :: Int -> SyncDeploymentJobResponse
newtype Architecture
Architecture' :: Text -> Architecture
[fromArchitecture] :: Architecture -> Text
pattern Architecture_ARM64 :: Architecture
pattern Architecture_ARMHF :: Architecture
pattern Architecture_X86_64 :: Architecture
newtype ComputeType
ComputeType' :: Text -> ComputeType
[fromComputeType] :: ComputeType -> Text
pattern ComputeType_CPU :: ComputeType
pattern ComputeType_GPU_AND_CPU :: ComputeType
newtype DataSourceType
DataSourceType' :: Text -> DataSourceType
[fromDataSourceType] :: DataSourceType -> Text
pattern DataSourceType_Archive :: DataSourceType
pattern DataSourceType_File :: DataSourceType
pattern DataSourceType_Prefix :: DataSourceType
newtype DeploymentJobErrorCode
DeploymentJobErrorCode' :: Text -> DeploymentJobErrorCode
[fromDeploymentJobErrorCode] :: DeploymentJobErrorCode -> Text
pattern DeploymentJobErrorCode_BadLambdaAssociated :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_BadPermissionError :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_DeploymentFleetDoesNotExist :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_DownloadConditionFailed :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_EnvironmentSetupError :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_EtagMismatch :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_ExtractingBundleFailure :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_FailureThresholdBreached :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_FleetDeploymentTimeout :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_GreengrassDeploymentFailed :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_GreengrassGroupVersionDoesNotExist :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_InternalServerError :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_InvalidGreengrassGroup :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_LambdaDeleted :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_MissingRobotApplicationArchitecture :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_MissingRobotArchitecture :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_MissingRobotDeploymentResource :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_PostLaunchFileFailure :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_PreLaunchFileFailure :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_ResourceNotFound :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_RobotAgentConnectionTimeout :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_RobotApplicationDoesNotExist :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_RobotDeploymentAborted :: DeploymentJobErrorCode
pattern DeploymentJobErrorCode_RobotDeploymentNoResponse :: DeploymentJobErrorCode
newtype DeploymentStatus
DeploymentStatus' :: Text -> DeploymentStatus
[fromDeploymentStatus] :: DeploymentStatus -> Text
pattern DeploymentStatus_Canceled :: DeploymentStatus
pattern DeploymentStatus_Failed :: DeploymentStatus
pattern DeploymentStatus_InProgress :: DeploymentStatus
pattern DeploymentStatus_Pending :: DeploymentStatus
pattern DeploymentStatus_Preparing :: DeploymentStatus
pattern DeploymentStatus_Succeeded :: DeploymentStatus
newtype ExitBehavior
ExitBehavior' :: Text -> ExitBehavior
[fromExitBehavior] :: ExitBehavior -> Text
pattern ExitBehavior_FAIL :: ExitBehavior
pattern ExitBehavior_RESTART :: ExitBehavior
newtype FailureBehavior
FailureBehavior' :: Text -> FailureBehavior
[fromFailureBehavior] :: FailureBehavior -> Text
pattern FailureBehavior_Continue :: FailureBehavior
pattern FailureBehavior_Fail :: FailureBehavior
newtype RenderingEngineType
RenderingEngineType' :: Text -> RenderingEngineType
[fromRenderingEngineType] :: RenderingEngineType -> Text
pattern RenderingEngineType_OGRE :: RenderingEngineType
newtype RobotDeploymentStep
RobotDeploymentStep' :: Text -> RobotDeploymentStep
[fromRobotDeploymentStep] :: RobotDeploymentStep -> Text
pattern RobotDeploymentStep_DownloadingExtracting :: RobotDeploymentStep
pattern RobotDeploymentStep_ExecutingDownloadCondition :: RobotDeploymentStep
pattern RobotDeploymentStep_ExecutingPostLaunch :: RobotDeploymentStep
pattern RobotDeploymentStep_ExecutingPreLaunch :: RobotDeploymentStep
pattern RobotDeploymentStep_Finished :: RobotDeploymentStep
pattern RobotDeploymentStep_Launching :: RobotDeploymentStep
pattern RobotDeploymentStep_Validating :: RobotDeploymentStep
newtype RobotSoftwareSuiteType
RobotSoftwareSuiteType' :: Text -> RobotSoftwareSuiteType
[fromRobotSoftwareSuiteType] :: RobotSoftwareSuiteType -> Text
pattern RobotSoftwareSuiteType_General :: RobotSoftwareSuiteType
pattern RobotSoftwareSuiteType_ROS :: RobotSoftwareSuiteType
pattern RobotSoftwareSuiteType_ROS2 :: RobotSoftwareSuiteType
newtype RobotSoftwareSuiteVersionType
RobotSoftwareSuiteVersionType' :: Text -> RobotSoftwareSuiteVersionType
[fromRobotSoftwareSuiteVersionType] :: RobotSoftwareSuiteVersionType -> Text
pattern RobotSoftwareSuiteVersionType_Dashing :: RobotSoftwareSuiteVersionType
pattern RobotSoftwareSuiteVersionType_Foxy :: RobotSoftwareSuiteVersionType
pattern RobotSoftwareSuiteVersionType_Kinetic :: RobotSoftwareSuiteVersionType
pattern RobotSoftwareSuiteVersionType_Melodic :: RobotSoftwareSuiteVersionType
newtype RobotStatus
RobotStatus' :: Text -> RobotStatus
[fromRobotStatus] :: RobotStatus -> Text
pattern RobotStatus_Available :: RobotStatus
pattern RobotStatus_Deploying :: RobotStatus
pattern RobotStatus_Failed :: RobotStatus
pattern RobotStatus_InSync :: RobotStatus
pattern RobotStatus_NoResponse :: RobotStatus
pattern RobotStatus_PendingNewDeployment :: RobotStatus
pattern RobotStatus_Registered :: RobotStatus
newtype SimulationJobBatchErrorCode
SimulationJobBatchErrorCode' :: Text -> SimulationJobBatchErrorCode
[fromSimulationJobBatchErrorCode] :: SimulationJobBatchErrorCode -> Text
pattern SimulationJobBatchErrorCode_InternalServiceError :: SimulationJobBatchErrorCode
newtype SimulationJobBatchStatus
SimulationJobBatchStatus' :: Text -> SimulationJobBatchStatus
[fromSimulationJobBatchStatus] :: SimulationJobBatchStatus -> Text
pattern SimulationJobBatchStatus_Canceled :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_Canceling :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_Completed :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_Completing :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_Failed :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_InProgress :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_Pending :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_TimedOut :: SimulationJobBatchStatus
pattern SimulationJobBatchStatus_TimingOut :: SimulationJobBatchStatus
newtype SimulationJobErrorCode
SimulationJobErrorCode' :: Text -> SimulationJobErrorCode
[fromSimulationJobErrorCode] :: SimulationJobErrorCode -> Text
pattern SimulationJobErrorCode_BadPermissionsCloudwatchLogs :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BadPermissionsRobotApplication :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BadPermissionsS3Object :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BadPermissionsS3Output :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BadPermissionsSimulationApplication :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BadPermissionsUserCredentials :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BatchCanceled :: SimulationJobErrorCode
pattern SimulationJobErrorCode_BatchTimedOut :: SimulationJobErrorCode
pattern SimulationJobErrorCode_ENILimitExceeded :: SimulationJobErrorCode
pattern SimulationJobErrorCode_InternalServiceError :: SimulationJobErrorCode
pattern SimulationJobErrorCode_InvalidBundleRobotApplication :: SimulationJobErrorCode
pattern SimulationJobErrorCode_InvalidBundleSimulationApplication :: SimulationJobErrorCode
pattern SimulationJobErrorCode_InvalidInput :: SimulationJobErrorCode
pattern SimulationJobErrorCode_InvalidS3Resource :: SimulationJobErrorCode
pattern SimulationJobErrorCode_LimitExceeded :: SimulationJobErrorCode
pattern SimulationJobErrorCode_MismatchedEtag :: SimulationJobErrorCode
pattern SimulationJobErrorCode_RequestThrottled :: SimulationJobErrorCode
pattern SimulationJobErrorCode_ResourceNotFound :: SimulationJobErrorCode
pattern SimulationJobErrorCode_RobotApplicationCrash :: SimulationJobErrorCode
pattern SimulationJobErrorCode_RobotApplicationHealthCheckFailure :: SimulationJobErrorCode
pattern SimulationJobErrorCode_RobotApplicationVersionMismatchedEtag :: SimulationJobErrorCode
pattern SimulationJobErrorCode_SimulationApplicationCrash :: SimulationJobErrorCode
pattern SimulationJobErrorCode_SimulationApplicationHealthCheckFailure :: SimulationJobErrorCode
pattern SimulationJobErrorCode_SimulationApplicationVersionMismatchedEtag :: SimulationJobErrorCode
pattern SimulationJobErrorCode_SubnetIpLimitExceeded :: SimulationJobErrorCode
pattern SimulationJobErrorCode_ThrottlingError :: SimulationJobErrorCode
pattern SimulationJobErrorCode_UploadContentMismatchError :: SimulationJobErrorCode
pattern SimulationJobErrorCode_WrongRegionRobotApplication :: SimulationJobErrorCode
pattern SimulationJobErrorCode_WrongRegionS3Bucket :: SimulationJobErrorCode
pattern SimulationJobErrorCode_WrongRegionS3Output :: SimulationJobErrorCode
pattern SimulationJobErrorCode_WrongRegionSimulationApplication :: SimulationJobErrorCode
newtype SimulationJobStatus
SimulationJobStatus' :: Text -> SimulationJobStatus
[fromSimulationJobStatus] :: SimulationJobStatus -> Text
pattern SimulationJobStatus_Canceled :: SimulationJobStatus
pattern SimulationJobStatus_Completed :: SimulationJobStatus
pattern SimulationJobStatus_Failed :: SimulationJobStatus
pattern SimulationJobStatus_Pending :: SimulationJobStatus
pattern SimulationJobStatus_Preparing :: SimulationJobStatus
pattern SimulationJobStatus_Restarting :: SimulationJobStatus
pattern SimulationJobStatus_Running :: SimulationJobStatus
pattern SimulationJobStatus_RunningFailed :: SimulationJobStatus
pattern SimulationJobStatus_Terminated :: SimulationJobStatus
pattern SimulationJobStatus_Terminating :: SimulationJobStatus
newtype SimulationSoftwareSuiteType
SimulationSoftwareSuiteType' :: Text -> SimulationSoftwareSuiteType
[fromSimulationSoftwareSuiteType] :: SimulationSoftwareSuiteType -> Text
pattern SimulationSoftwareSuiteType_Gazebo :: SimulationSoftwareSuiteType
pattern SimulationSoftwareSuiteType_RosbagPlay :: SimulationSoftwareSuiteType
pattern SimulationSoftwareSuiteType_SimulationRuntime :: SimulationSoftwareSuiteType
newtype UploadBehavior
UploadBehavior' :: Text -> UploadBehavior
[fromUploadBehavior] :: UploadBehavior -> Text
pattern UploadBehavior_UPLOAD_ON_TERMINATE :: UploadBehavior
pattern UploadBehavior_UPLOAD_ROLLING_AUTO_REMOVE :: UploadBehavior
newtype WorldExportJobErrorCode
WorldExportJobErrorCode' :: Text -> WorldExportJobErrorCode
[fromWorldExportJobErrorCode] :: WorldExportJobErrorCode -> Text
pattern WorldExportJobErrorCode_AccessDenied :: WorldExportJobErrorCode
pattern WorldExportJobErrorCode_InternalServiceError :: WorldExportJobErrorCode
pattern WorldExportJobErrorCode_InvalidInput :: WorldExportJobErrorCode
pattern WorldExportJobErrorCode_LimitExceeded :: WorldExportJobErrorCode
pattern WorldExportJobErrorCode_RequestThrottled :: WorldExportJobErrorCode
pattern WorldExportJobErrorCode_ResourceNotFound :: WorldExportJobErrorCode
newtype WorldExportJobStatus
WorldExportJobStatus' :: Text -> WorldExportJobStatus
[fromWorldExportJobStatus] :: WorldExportJobStatus -> Text
pattern WorldExportJobStatus_Canceled :: WorldExportJobStatus
pattern WorldExportJobStatus_Canceling :: WorldExportJobStatus
pattern WorldExportJobStatus_Completed :: WorldExportJobStatus
pattern WorldExportJobStatus_Failed :: WorldExportJobStatus
pattern WorldExportJobStatus_Pending :: WorldExportJobStatus
pattern WorldExportJobStatus_Running :: WorldExportJobStatus
newtype WorldGenerationJobErrorCode
WorldGenerationJobErrorCode' :: Text -> WorldGenerationJobErrorCode
[fromWorldGenerationJobErrorCode] :: WorldGenerationJobErrorCode -> Text
pattern WorldGenerationJobErrorCode_AllWorldGenerationFailed :: WorldGenerationJobErrorCode
pattern WorldGenerationJobErrorCode_InternalServiceError :: WorldGenerationJobErrorCode
pattern WorldGenerationJobErrorCode_InvalidInput :: WorldGenerationJobErrorCode
pattern WorldGenerationJobErrorCode_LimitExceeded :: WorldGenerationJobErrorCode
pattern WorldGenerationJobErrorCode_RequestThrottled :: WorldGenerationJobErrorCode
pattern WorldGenerationJobErrorCode_ResourceNotFound :: WorldGenerationJobErrorCode
newtype WorldGenerationJobStatus
WorldGenerationJobStatus' :: Text -> WorldGenerationJobStatus
[fromWorldGenerationJobStatus] :: WorldGenerationJobStatus -> Text
pattern WorldGenerationJobStatus_Canceled :: WorldGenerationJobStatus
pattern WorldGenerationJobStatus_Canceling :: WorldGenerationJobStatus
pattern WorldGenerationJobStatus_Completed :: WorldGenerationJobStatus
pattern WorldGenerationJobStatus_Failed :: WorldGenerationJobStatus
pattern WorldGenerationJobStatus_PartialFailed :: WorldGenerationJobStatus
pattern WorldGenerationJobStatus_Pending :: WorldGenerationJobStatus
pattern WorldGenerationJobStatus_Running :: WorldGenerationJobStatus

-- | Information about the batch policy.
--   
--   <i>See:</i> <a>newBatchPolicy</a> smart constructor.
data BatchPolicy
BatchPolicy' :: Maybe Integer -> Maybe Int -> BatchPolicy

-- | Create a value of <a>BatchPolicy</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeoutInSeconds:BatchPolicy'</a>,
--   <a>batchPolicy_timeoutInSeconds</a> - The amount of time, in seconds,
--   to wait for the batch to complete.
--   
--   If a batch times out, and there are pending requests that were failing
--   due to an internal failure (like <tt>InternalServiceError</tt>), they
--   will be moved to the failed list and the batch status will be
--   <tt>Failed</tt>. If the pending requests were failing for any other
--   reason, the failed pending requests will be moved to the failed list
--   and the batch status will be <tt>TimedOut</tt>.
--   
--   <a>$sel:maxConcurrency:BatchPolicy'</a>,
--   <a>batchPolicy_maxConcurrency</a> - The number of active simulation
--   jobs create as part of the batch that can be in an active state at the
--   same time.
--   
--   Active states include: <tt>Pending</tt>,<tt>Preparing</tt>,
--   <tt>Running</tt>, <tt>Restarting</tt>, <tt>RunningFailed</tt> and
--   <tt>Terminating</tt>. All other states are terminal states.
newBatchPolicy :: BatchPolicy

-- | Compute information for the simulation job.
--   
--   <i>See:</i> <a>newCompute</a> smart constructor.
data Compute
Compute' :: Maybe Natural -> Maybe Natural -> Maybe ComputeType -> Compute

-- | Create a value of <a>Compute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:simulationUnitLimit:Compute'</a>,
--   <a>compute_simulationUnitLimit</a> - The simulation unit limit. Your
--   simulation is allocated CPU and memory proportional to the supplied
--   simulation unit limit. A simulation unit is 1 vcpu and 2GB of memory.
--   You are only billed for the SU utilization you consume up to the
--   maximum value provided. The default is 15.
--   
--   <a>$sel:gpuUnitLimit:Compute'</a>, <a>compute_gpuUnitLimit</a> -
--   Compute GPU unit limit for the simulation job. It is the same as the
--   number of GPUs allocated to the SimulationJob.
--   
--   <a>$sel:computeType:Compute'</a>, <a>compute_computeType</a> - Compute
--   type information for the simulation job.
newCompute :: Compute

-- | Compute information for the simulation job
--   
--   <i>See:</i> <a>newComputeResponse</a> smart constructor.
data ComputeResponse
ComputeResponse' :: Maybe Natural -> Maybe Natural -> Maybe ComputeType -> ComputeResponse

-- | Create a value of <a>ComputeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:simulationUnitLimit:ComputeResponse'</a>,
--   <a>computeResponse_simulationUnitLimit</a> - The simulation unit
--   limit. Your simulation is allocated CPU and memory proportional to the
--   supplied simulation unit limit. A simulation unit is 1 vcpu and 2GB of
--   memory. You are only billed for the SU utilization you consume up to
--   the maximum value provided. The default is 15.
--   
--   <a>$sel:gpuUnitLimit:ComputeResponse'</a>,
--   <a>computeResponse_gpuUnitLimit</a> - Compute GPU unit limit for the
--   simulation job. It is the same as the number of GPUs allocated to the
--   SimulationJob.
--   
--   <a>$sel:computeType:ComputeResponse'</a>,
--   <a>computeResponse_computeType</a> - Compute type response information
--   for the simulation job.
newComputeResponse :: ComputeResponse

-- | Information about a data source.
--   
--   <i>See:</i> <a>newDataSource</a> smart constructor.
data DataSource
DataSource' :: Maybe [S3KeyOutput] -> Maybe Text -> Maybe Text -> Maybe DataSourceType -> Maybe Text -> DataSource

-- | Create a value of <a>DataSource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Keys:DataSource'</a>, <a>dataSource_s3Keys</a> - The list of
--   S3 keys identifying the data source files.
--   
--   <a>$sel:destination:DataSource'</a>, <a>dataSource_destination</a> -
--   The location where your files are mounted in the container image.
--   
--   If you've specified the <tt>type</tt> of the data source as an
--   <tt>Archive</tt>, you must provide an Amazon S3 object key to your
--   archive. The object key must point to either a <tt>.zip</tt> or
--   <tt>.tar.gz</tt> file.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>Prefix</tt>, you provide the Amazon S3 prefix that points to the
--   files that you are using for your data source.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>File</tt>, you provide the Amazon S3 path to the file that you're
--   using as your data source.
--   
--   <a>$sel:name:DataSource'</a>, <a>dataSource_name</a> - The name of the
--   data source.
--   
--   <a>$sel:type':DataSource'</a>, <a>dataSource_type</a> - The data type
--   for the data source that you're using for your container image or
--   simulation job. You can use this field to specify whether your data
--   source is an Archive, an Amazon S3 prefix, or a file.
--   
--   If you don't specify a field, the default value is <tt>File</tt>.
--   
--   <a>$sel:s3Bucket:DataSource'</a>, <a>dataSource_s3Bucket</a> - The S3
--   bucket where the data files are located.
newDataSource :: DataSource

-- | Information about a data source.
--   
--   <i>See:</i> <a>newDataSourceConfig</a> smart constructor.
data DataSourceConfig
DataSourceConfig' :: Maybe Text -> Maybe DataSourceType -> Text -> Text -> NonEmpty Text -> DataSourceConfig

-- | Create a value of <a>DataSourceConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:DataSourceConfig'</a>,
--   <a>dataSourceConfig_destination</a> - The location where your files
--   are mounted in the container image.
--   
--   If you've specified the <tt>type</tt> of the data source as an
--   <tt>Archive</tt>, you must provide an Amazon S3 object key to your
--   archive. The object key must point to either a <tt>.zip</tt> or
--   <tt>.tar.gz</tt> file.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>Prefix</tt>, you provide the Amazon S3 prefix that points to the
--   files that you are using for your data source.
--   
--   If you've specified the <tt>type</tt> of the data source as a
--   <tt>File</tt>, you provide the Amazon S3 path to the file that you're
--   using as your data source.
--   
--   <a>$sel:type':DataSourceConfig'</a>, <a>dataSourceConfig_type</a> -
--   The data type for the data source that you're using for your container
--   image or simulation job. You can use this field to specify whether
--   your data source is an Archive, an Amazon S3 prefix, or a file.
--   
--   If you don't specify a field, the default value is <tt>File</tt>.
--   
--   <a>$sel:name:DataSourceConfig'</a>, <a>dataSourceConfig_name</a> - The
--   name of the data source.
--   
--   <a>$sel:s3Bucket:DataSourceConfig'</a>,
--   <a>dataSourceConfig_s3Bucket</a> - The S3 bucket where the data files
--   are located.
--   
--   <a>$sel:s3Keys:DataSourceConfig'</a>, <a>dataSourceConfig_s3Keys</a> -
--   The list of S3 keys identifying the data source files.
newDataSourceConfig :: Text -> Text -> NonEmpty Text -> DataSourceConfig

-- | Information about a deployment application configuration.
--   
--   <i>See:</i> <a>newDeploymentApplicationConfig</a> smart constructor.
data DeploymentApplicationConfig
DeploymentApplicationConfig' :: Text -> Text -> DeploymentLaunchConfig -> DeploymentApplicationConfig

-- | Create a value of <a>DeploymentApplicationConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:application:DeploymentApplicationConfig'</a>,
--   <a>deploymentApplicationConfig_application</a> - The Amazon Resource
--   Name (ARN) of the robot application.
--   
--   <a>$sel:applicationVersion:DeploymentApplicationConfig'</a>,
--   <a>deploymentApplicationConfig_applicationVersion</a> - The version of
--   the application.
--   
--   <a>$sel:launchConfig:DeploymentApplicationConfig'</a>,
--   <a>deploymentApplicationConfig_launchConfig</a> - The launch
--   configuration.
newDeploymentApplicationConfig :: Text -> Text -> DeploymentLaunchConfig -> DeploymentApplicationConfig

-- | Information about a deployment configuration.
--   
--   <i>See:</i> <a>newDeploymentConfig</a> smart constructor.
data DeploymentConfig
DeploymentConfig' :: Maybe Natural -> Maybe S3Object -> Maybe Natural -> Maybe Integer -> DeploymentConfig

-- | Create a value of <a>DeploymentConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:concurrentDeploymentPercentage:DeploymentConfig'</a>,
--   <a>deploymentConfig_concurrentDeploymentPercentage</a> - The
--   percentage of robots receiving the deployment at the same time.
--   
--   <a>$sel:downloadConditionFile:DeploymentConfig'</a>,
--   <a>deploymentConfig_downloadConditionFile</a> - The download condition
--   file.
--   
--   <a>$sel:failureThresholdPercentage:DeploymentConfig'</a>,
--   <a>deploymentConfig_failureThresholdPercentage</a> - The percentage of
--   deployments that need to fail before stopping deployment.
--   
--   <a>$sel:robotDeploymentTimeoutInSeconds:DeploymentConfig'</a>,
--   <a>deploymentConfig_robotDeploymentTimeoutInSeconds</a> - The amount
--   of time, in seconds, to wait for deployment to a single robot to
--   complete. Choose a time between 1 minute and 7 days. The default is 5
--   hours.
newDeploymentConfig :: DeploymentConfig

-- | Information about a deployment job.
--   
--   <i>See:</i> <a>newDeploymentJob</a> smart constructor.
data DeploymentJob
DeploymentJob' :: Maybe Text -> Maybe DeploymentStatus -> Maybe (NonEmpty DeploymentApplicationConfig) -> Maybe Text -> Maybe POSIX -> Maybe DeploymentJobErrorCode -> Maybe DeploymentConfig -> Maybe Text -> DeploymentJob

-- | Create a value of <a>DeploymentJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:DeploymentJob'</a>,
--   <a>deploymentJob_failureReason</a> - A short description of the reason
--   why the deployment job failed.
--   
--   <a>$sel:status:DeploymentJob'</a>, <a>deploymentJob_status</a> - The
--   status of the deployment job.
--   
--   <a>$sel:deploymentApplicationConfigs:DeploymentJob'</a>,
--   <a>deploymentJob_deploymentApplicationConfigs</a> - The deployment
--   application configuration.
--   
--   <a>$sel:arn:DeploymentJob'</a>, <a>deploymentJob_arn</a> - The Amazon
--   Resource Name (ARN) of the deployment job.
--   
--   <a>$sel:createdAt:DeploymentJob'</a>, <a>deploymentJob_createdAt</a> -
--   The time, in milliseconds since the epoch, when the deployment job was
--   created.
--   
--   <a>$sel:failureCode:DeploymentJob'</a>,
--   <a>deploymentJob_failureCode</a> - The deployment job failure code.
--   
--   <a>$sel:deploymentConfig:DeploymentJob'</a>,
--   <a>deploymentJob_deploymentConfig</a> - The deployment configuration.
--   
--   <a>$sel:fleet:DeploymentJob'</a>, <a>deploymentJob_fleet</a> - The
--   Amazon Resource Name (ARN) of the fleet.
newDeploymentJob :: DeploymentJob

-- | Configuration information for a deployment launch.
--   
--   <i>See:</i> <a>newDeploymentLaunchConfig</a> smart constructor.
data DeploymentLaunchConfig
DeploymentLaunchConfig' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> DeploymentLaunchConfig

-- | Create a value of <a>DeploymentLaunchConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:preLaunchFile:DeploymentLaunchConfig'</a>,
--   <a>deploymentLaunchConfig_preLaunchFile</a> - The deployment
--   pre-launch file. This file will be executed prior to the launch file.
--   
--   <a>$sel:postLaunchFile:DeploymentLaunchConfig'</a>,
--   <a>deploymentLaunchConfig_postLaunchFile</a> - The deployment
--   post-launch file. This file will be executed after the launch file.
--   
--   <a>$sel:environmentVariables:DeploymentLaunchConfig'</a>,
--   <a>deploymentLaunchConfig_environmentVariables</a> - An array of
--   key/value pairs specifying environment variables for the robot
--   application
--   
--   <a>$sel:packageName:DeploymentLaunchConfig'</a>,
--   <a>deploymentLaunchConfig_packageName</a> - The package name.
--   
--   <a>$sel:launchFile:DeploymentLaunchConfig'</a>,
--   <a>deploymentLaunchConfig_launchFile</a> - The launch file name.
newDeploymentLaunchConfig :: Text -> Text -> DeploymentLaunchConfig

-- | The object that contains the Docker image URI for either your robot or
--   simulation applications.
--   
--   <i>See:</i> <a>newEnvironment</a> smart constructor.
data Environment
Environment' :: Maybe Text -> Environment

-- | Create a value of <a>Environment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uri:Environment'</a>, <a>environment_uri</a> - The Docker
--   image URI for either your robot or simulation applications.
newEnvironment :: Environment

-- | Information about a failed create simulation job request.
--   
--   <i>See:</i> <a>newFailedCreateSimulationJobRequest</a> smart
--   constructor.
data FailedCreateSimulationJobRequest
FailedCreateSimulationJobRequest' :: Maybe Text -> Maybe SimulationJobErrorCode -> Maybe POSIX -> Maybe SimulationJobRequest -> FailedCreateSimulationJobRequest

-- | Create a value of <a>FailedCreateSimulationJobRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:FailedCreateSimulationJobRequest'</a>,
--   <a>failedCreateSimulationJobRequest_failureReason</a> - The failure
--   reason of the simulation job request.
--   
--   <a>$sel:failureCode:FailedCreateSimulationJobRequest'</a>,
--   <a>failedCreateSimulationJobRequest_failureCode</a> - The failure
--   code.
--   
--   <a>$sel:failedAt:FailedCreateSimulationJobRequest'</a>,
--   <a>failedCreateSimulationJobRequest_failedAt</a> - The time, in
--   milliseconds since the epoch, when the simulation job batch failed.
--   
--   <a>$sel:request:FailedCreateSimulationJobRequest'</a>,
--   <a>failedCreateSimulationJobRequest_request</a> - The simulation job
--   request.
newFailedCreateSimulationJobRequest :: FailedCreateSimulationJobRequest

-- | Information about worlds that failed.
--   
--   <i>See:</i> <a>newFailureSummary</a> smart constructor.
data FailureSummary
FailureSummary' :: Maybe [WorldFailure] -> Maybe Int -> FailureSummary

-- | Create a value of <a>FailureSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failures:FailureSummary'</a>, <a>failureSummary_failures</a> -
--   The worlds that failed.
--   
--   <a>$sel:totalFailureCount:FailureSummary'</a>,
--   <a>failureSummary_totalFailureCount</a> - The total number of
--   failures.
newFailureSummary :: FailureSummary

-- | Information about a filter.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe (NonEmpty Text) -> Maybe Text -> Filter

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - A list of values.
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The name of the filter.
newFilter :: Filter

-- | Information about worlds that finished.
--   
--   <i>See:</i> <a>newFinishedWorldsSummary</a> smart constructor.
data FinishedWorldsSummary
FinishedWorldsSummary' :: Maybe (NonEmpty Text) -> Maybe FailureSummary -> Maybe Int -> FinishedWorldsSummary

-- | Create a value of <a>FinishedWorldsSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:succeededWorlds:FinishedWorldsSummary'</a>,
--   <a>finishedWorldsSummary_succeededWorlds</a> - A list of worlds that
--   succeeded.
--   
--   <a>$sel:failureSummary:FinishedWorldsSummary'</a>,
--   <a>finishedWorldsSummary_failureSummary</a> - Information about worlds
--   that failed.
--   
--   <a>$sel:finishedCount:FinishedWorldsSummary'</a>,
--   <a>finishedWorldsSummary_finishedCount</a> - The total number of
--   finished worlds.
newFinishedWorldsSummary :: FinishedWorldsSummary

-- | Information about a fleet.
--   
--   <i>See:</i> <a>newFleet</a> smart constructor.
data Fleet
Fleet' :: Maybe Text -> Maybe DeploymentStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Fleet

-- | Create a value of <a>Fleet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastDeploymentJob:Fleet'</a>, <a>fleet_lastDeploymentJob</a> -
--   The Amazon Resource Name (ARN) of the last deployment job.
--   
--   <a>$sel:lastDeploymentStatus:Fleet'</a>,
--   <a>fleet_lastDeploymentStatus</a> - The status of the last fleet
--   deployment.
--   
--   <a>$sel:arn:Fleet'</a>, <a>fleet_arn</a> - The Amazon Resource Name
--   (ARN) of the fleet.
--   
--   <a>$sel:createdAt:Fleet'</a>, <a>fleet_createdAt</a> - The time, in
--   milliseconds since the epoch, when the fleet was created.
--   
--   <a>$sel:name:Fleet'</a>, <a>fleet_name</a> - The name of the fleet.
--   
--   <a>$sel:lastDeploymentTime:Fleet'</a>, <a>fleet_lastDeploymentTime</a>
--   - The time of the last deployment.
newFleet :: Fleet

-- | Information about a launch configuration.
--   
--   <i>See:</i> <a>newLaunchConfig</a> smart constructor.
data LaunchConfig
LaunchConfig' :: Maybe [Text] -> Maybe Text -> Maybe PortForwardingConfig -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> LaunchConfig

-- | Create a value of <a>LaunchConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:command:LaunchConfig'</a>, <a>launchConfig_command</a> - If
--   you've specified <tt>General</tt> as the value for your
--   <tt>RobotSoftwareSuite</tt>, you can use this field to specify a list
--   of commands for your container image.
--   
--   If you've specified <tt>SimulationRuntime</tt> as the value for your
--   <tt>SimulationSoftwareSuite</tt>, you can use this field to specify a
--   list of commands for your container image.
--   
--   <a>$sel:packageName:LaunchConfig'</a>, <a>launchConfig_packageName</a>
--   - The package name.
--   
--   <a>$sel:portForwardingConfig:LaunchConfig'</a>,
--   <a>launchConfig_portForwardingConfig</a> - The port forwarding
--   configuration.
--   
--   <a>$sel:launchFile:LaunchConfig'</a>, <a>launchConfig_launchFile</a> -
--   The launch file name.
--   
--   <a>$sel:environmentVariables:LaunchConfig'</a>,
--   <a>launchConfig_environmentVariables</a> - The environment variables
--   for the application launch.
--   
--   <a>$sel:streamUI:LaunchConfig'</a>, <a>launchConfig_streamUI</a> -
--   Boolean indicating whether a streaming session will be configured for
--   the application. If <tt>True</tt>, AWS RoboMaker will configure a
--   connection so you can interact with your application as it is running
--   in the simulation. You must configure and launch the component. It
--   must have a graphical user interface.
newLaunchConfig :: LaunchConfig

-- | The logging configuration.
--   
--   <i>See:</i> <a>newLoggingConfig</a> smart constructor.
data LoggingConfig
LoggingConfig' :: Bool -> LoggingConfig

-- | Create a value of <a>LoggingConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordAllRosTopics:LoggingConfig'</a>,
--   <a>loggingConfig_recordAllRosTopics</a> - A boolean indicating whether
--   to record all ROS topics.
newLoggingConfig :: Bool -> LoggingConfig

-- | Describes a network interface.
--   
--   <i>See:</i> <a>newNetworkInterface</a> smart constructor.
data NetworkInterface
NetworkInterface' :: Maybe Text -> Maybe Text -> Maybe Text -> NetworkInterface

-- | Create a value of <a>NetworkInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkInterfaceId:NetworkInterface'</a>,
--   <a>networkInterface_networkInterfaceId</a> - The ID of the network
--   interface.
--   
--   <a>$sel:privateIpAddress:NetworkInterface'</a>,
--   <a>networkInterface_privateIpAddress</a> - The IPv4 address of the
--   network interface within the subnet.
--   
--   <a>$sel:publicIpAddress:NetworkInterface'</a>,
--   <a>networkInterface_publicIpAddress</a> - The IPv4 public address of
--   the network interface.
newNetworkInterface :: NetworkInterface

-- | The output location.
--   
--   <i>See:</i> <a>newOutputLocation</a> smart constructor.
data OutputLocation
OutputLocation' :: Maybe Text -> Maybe Text -> OutputLocation

-- | Create a value of <a>OutputLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Prefix:OutputLocation'</a>, <a>outputLocation_s3Prefix</a> -
--   The S3 folder in the <tt>s3Bucket</tt> where output files will be
--   placed.
--   
--   <a>$sel:s3Bucket:OutputLocation'</a>, <a>outputLocation_s3Bucket</a> -
--   The S3 bucket for output.
newOutputLocation :: OutputLocation

-- | Configuration information for port forwarding.
--   
--   <i>See:</i> <a>newPortForwardingConfig</a> smart constructor.
data PortForwardingConfig
PortForwardingConfig' :: Maybe [PortMapping] -> PortForwardingConfig

-- | Create a value of <a>PortForwardingConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:portMappings:PortForwardingConfig'</a>,
--   <a>portForwardingConfig_portMappings</a> - The port mappings for the
--   configuration.
newPortForwardingConfig :: PortForwardingConfig

-- | An object representing a port mapping.
--   
--   <i>See:</i> <a>newPortMapping</a> smart constructor.
data PortMapping
PortMapping' :: Maybe Bool -> Natural -> Natural -> PortMapping

-- | Create a value of <a>PortMapping</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enableOnPublicIp:PortMapping'</a>,
--   <a>portMapping_enableOnPublicIp</a> - A Boolean indicating whether to
--   enable this port mapping on public IP.
--   
--   <a>$sel:jobPort:PortMapping'</a>, <a>portMapping_jobPort</a> - The
--   port number on the simulation job instance to use as a remote
--   connection point.
--   
--   <a>$sel:applicationPort:PortMapping'</a>,
--   <a>portMapping_applicationPort</a> - The port number on the
--   application.
newPortMapping :: Natural -> Natural -> PortMapping

-- | Information about the progress of a deployment job.
--   
--   <i>See:</i> <a>newProgressDetail</a> smart constructor.
data ProgressDetail
ProgressDetail' :: Maybe RobotDeploymentStep -> Maybe Int -> Maybe Text -> Maybe Double -> ProgressDetail

-- | Create a value of <a>ProgressDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currentProgress:ProgressDetail'</a>,
--   <a>progressDetail_currentProgress</a> - The current progress status.
--   
--   <ul>
--   <li><i>Validating</i> Validating the deployment.</li>
--   <li><i>DownloadingExtracting</i> Downloading and extracting the bundle
--   on the robot.</li>
--   <li><i>ExecutingPreLaunch</i> Executing pre-launch script(s) if
--   provided.</li>
--   <li><i>Launching</i> Launching the robot application.</li>
--   <li><i>ExecutingPostLaunch</i> Executing post-launch script(s) if
--   provided.</li>
--   <li><i>Finished</i> Deployment is complete.</li>
--   </ul>
--   
--   <a>$sel:estimatedTimeRemainingSeconds:ProgressDetail'</a>,
--   <a>progressDetail_estimatedTimeRemainingSeconds</a> - Estimated amount
--   of time in seconds remaining in the step. This currently only applies
--   to the <tt>Downloading/Extracting</tt> step of the deployment. It is
--   empty for other steps.
--   
--   <a>$sel:targetResource:ProgressDetail'</a>,
--   <a>progressDetail_targetResource</a> - The Amazon Resource Name (ARN)
--   of the deployment job.
--   
--   <a>$sel:percentDone:ProgressDetail'</a>,
--   <a>progressDetail_percentDone</a> - Precentage of the step that is
--   done. This currently only applies to the
--   <tt>Downloading/Extracting</tt> step of the deployment. It is empty
--   for other steps.
newProgressDetail :: ProgressDetail

-- | Information about a rendering engine.
--   
--   <i>See:</i> <a>newRenderingEngine</a> smart constructor.
data RenderingEngine
RenderingEngine' :: Maybe RenderingEngineType -> Maybe Text -> RenderingEngine

-- | Create a value of <a>RenderingEngine</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:RenderingEngine'</a>, <a>renderingEngine_name</a> - The
--   name of the rendering engine.
--   
--   <a>$sel:version:RenderingEngine'</a>, <a>renderingEngine_version</a> -
--   The version of the rendering engine.
newRenderingEngine :: RenderingEngine

-- | Information about a robot.
--   
--   <i>See:</i> <a>newRobot</a> smart constructor.
data Robot
Robot' :: Maybe Text -> Maybe RobotStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Architecture -> Maybe POSIX -> Robot

-- | Create a value of <a>Robot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastDeploymentJob:Robot'</a>, <a>robot_lastDeploymentJob</a> -
--   The Amazon Resource Name (ARN) of the last deployment job.
--   
--   <a>$sel:status:Robot'</a>, <a>robot_status</a> - The status of the
--   robot.
--   
--   <a>$sel:arn:Robot'</a>, <a>robot_arn</a> - The Amazon Resource Name
--   (ARN) of the robot.
--   
--   <a>$sel:createdAt:Robot'</a>, <a>robot_createdAt</a> - The time, in
--   milliseconds since the epoch, when the robot was created.
--   
--   <a>$sel:greenGrassGroupId:Robot'</a>, <a>robot_greenGrassGroupId</a> -
--   The Greengrass group associated with the robot.
--   
--   <a>$sel:fleetArn:Robot'</a>, <a>robot_fleetArn</a> - The Amazon
--   Resource Name (ARN) of the fleet.
--   
--   <a>$sel:name:Robot'</a>, <a>robot_name</a> - The name of the robot.
--   
--   <a>$sel:architecture:Robot'</a>, <a>robot_architecture</a> - The
--   architecture of the robot.
--   
--   <a>$sel:lastDeploymentTime:Robot'</a>, <a>robot_lastDeploymentTime</a>
--   - The time of the last deployment.
newRobot :: Robot

-- | Application configuration information for a robot.
--   
--   <i>See:</i> <a>newRobotApplicationConfig</a> smart constructor.
data RobotApplicationConfig
RobotApplicationConfig' :: Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe [UploadConfiguration] -> Maybe [Tool] -> Text -> LaunchConfig -> RobotApplicationConfig

-- | Create a value of <a>RobotApplicationConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:useDefaultUploadConfigurations:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_useDefaultUploadConfigurations</a> - A
--   Boolean indicating whether to use default upload configurations. By
--   default, <tt>.ros</tt> and <tt>.gazebo</tt> files are uploaded when
--   the application terminates and all ROS topics will be recorded.
--   
--   If you set this value, you must specify an <tt>outputLocation</tt>.
--   
--   <a>$sel:useDefaultTools:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_useDefaultTools</a> - A Boolean indicating
--   whether to use default robot application tools. The default tools are
--   rviz, rqt, terminal and rosbag record. The default is <tt>False</tt>.
--   
--   <a>$sel:applicationVersion:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_applicationVersion</a> - The version of the
--   robot application.
--   
--   <a>$sel:uploadConfigurations:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_uploadConfigurations</a> - The upload
--   configurations for the robot application.
--   
--   <a>$sel:tools:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_tools</a> - Information about tools
--   configured for the robot application.
--   
--   <a>$sel:application:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_application</a> - The application
--   information for the robot application.
--   
--   <a>$sel:launchConfig:RobotApplicationConfig'</a>,
--   <a>robotApplicationConfig_launchConfig</a> - The launch configuration
--   for the robot application.
newRobotApplicationConfig :: Text -> LaunchConfig -> RobotApplicationConfig

-- | Summary information for a robot application.
--   
--   <i>See:</i> <a>newRobotApplicationSummary</a> smart constructor.
data RobotApplicationSummary
RobotApplicationSummary' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe RobotSoftwareSuite -> RobotApplicationSummary

-- | Create a value of <a>RobotApplicationSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:RobotApplicationSummary'</a>,
--   <a>robotApplicationSummary_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the robot application was last
--   updated.
--   
--   <a>$sel:arn:RobotApplicationSummary'</a>,
--   <a>robotApplicationSummary_arn</a> - The Amazon Resource Name (ARN) of
--   the robot.
--   
--   <a>$sel:name:RobotApplicationSummary'</a>,
--   <a>robotApplicationSummary_name</a> - The name of the robot
--   application.
--   
--   <a>$sel:version:RobotApplicationSummary'</a>,
--   <a>robotApplicationSummary_version</a> - The version of the robot
--   application.
--   
--   <a>$sel:robotSoftwareSuite:RobotApplicationSummary'</a>,
--   <a>robotApplicationSummary_robotSoftwareSuite</a> - Information about
--   a robot software suite (ROS distribution).
newRobotApplicationSummary :: RobotApplicationSummary

-- | Information about a robot deployment.
--   
--   <i>See:</i> <a>newRobotDeployment</a> smart constructor.
data RobotDeployment
RobotDeployment' :: Maybe POSIX -> Maybe Text -> Maybe RobotStatus -> Maybe Text -> Maybe DeploymentJobErrorCode -> Maybe ProgressDetail -> Maybe POSIX -> RobotDeployment

-- | Create a value of <a>RobotDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentStartTime:RobotDeployment'</a>,
--   <a>robotDeployment_deploymentStartTime</a> - The time, in milliseconds
--   since the epoch, when the deployment was started.
--   
--   <a>$sel:failureReason:RobotDeployment'</a>,
--   <a>robotDeployment_failureReason</a> - A short description of the
--   reason why the robot deployment failed.
--   
--   <a>$sel:status:RobotDeployment'</a>, <a>robotDeployment_status</a> -
--   The status of the robot deployment.
--   
--   <a>$sel:arn:RobotDeployment'</a>, <a>robotDeployment_arn</a> - The
--   robot deployment Amazon Resource Name (ARN).
--   
--   <a>$sel:failureCode:RobotDeployment'</a>,
--   <a>robotDeployment_failureCode</a> - The robot deployment failure
--   code.
--   
--   <a>$sel:progressDetail:RobotDeployment'</a>,
--   <a>robotDeployment_progressDetail</a> - Information about how the
--   deployment is progressing.
--   
--   <a>$sel:deploymentFinishTime:RobotDeployment'</a>,
--   <a>robotDeployment_deploymentFinishTime</a> - The time, in
--   milliseconds since the epoch, when the deployment finished.
newRobotDeployment :: RobotDeployment

-- | Information about a robot software suite (ROS distribution).
--   
--   <i>See:</i> <a>newRobotSoftwareSuite</a> smart constructor.
data RobotSoftwareSuite
RobotSoftwareSuite' :: Maybe RobotSoftwareSuiteType -> Maybe RobotSoftwareSuiteVersionType -> RobotSoftwareSuite

-- | Create a value of <a>RobotSoftwareSuite</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:RobotSoftwareSuite'</a>, <a>robotSoftwareSuite_name</a> -
--   The name of the robot software suite (ROS distribution).
--   
--   <a>$sel:version:RobotSoftwareSuite'</a>,
--   <a>robotSoftwareSuite_version</a> - The version of the robot software
--   suite (ROS distribution).
newRobotSoftwareSuite :: RobotSoftwareSuite

-- | Information about S3 keys.
--   
--   <i>See:</i> <a>newS3KeyOutput</a> smart constructor.
data S3KeyOutput
S3KeyOutput' :: Maybe Text -> Maybe Text -> S3KeyOutput

-- | Create a value of <a>S3KeyOutput</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:etag:S3KeyOutput'</a>, <a>s3KeyOutput_etag</a> - The etag for
--   the object.
--   
--   <a>$sel:s3Key:S3KeyOutput'</a>, <a>s3KeyOutput_s3Key</a> - The S3 key.
newS3KeyOutput :: S3KeyOutput

-- | Information about an S3 object.
--   
--   <i>See:</i> <a>newS3Object</a> smart constructor.
data S3Object
S3Object' :: Maybe Text -> Text -> Text -> S3Object

-- | Create a value of <a>S3Object</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:etag:S3Object'</a>, <a>s3Object_etag</a> - The etag of the
--   object.
--   
--   <a>$sel:bucket:S3Object'</a>, <a>s3Object_bucket</a> - The bucket
--   containing the object.
--   
--   <a>$sel:key:S3Object'</a>, <a>s3Object_key</a> - The key of the
--   object.
newS3Object :: Text -> Text -> S3Object

-- | Information about a simulation application configuration.
--   
--   <i>See:</i> <a>newSimulationApplicationConfig</a> smart constructor.
data SimulationApplicationConfig
SimulationApplicationConfig' :: Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe [UploadConfiguration] -> Maybe [Tool] -> Maybe [WorldConfig] -> Text -> LaunchConfig -> SimulationApplicationConfig

-- | Create a value of <a>SimulationApplicationConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:useDefaultUploadConfigurations:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_useDefaultUploadConfigurations</a> - A
--   Boolean indicating whether to use default upload configurations. By
--   default, <tt>.ros</tt> and <tt>.gazebo</tt> files are uploaded when
--   the application terminates and all ROS topics will be recorded.
--   
--   If you set this value, you must specify an <tt>outputLocation</tt>.
--   
--   <a>$sel:useDefaultTools:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_useDefaultTools</a> - A Boolean
--   indicating whether to use default simulation application tools. The
--   default tools are rviz, rqt, terminal and rosbag record. The default
--   is <tt>False</tt>.
--   
--   <a>$sel:applicationVersion:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_applicationVersion</a> - The version of
--   the simulation application.
--   
--   <a>$sel:uploadConfigurations:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_uploadConfigurations</a> - Information
--   about upload configurations for the simulation application.
--   
--   <a>$sel:tools:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_tools</a> - Information about tools
--   configured for the simulation application.
--   
--   <a>$sel:worldConfigs:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_worldConfigs</a> - A list of world
--   configurations.
--   
--   <a>$sel:application:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_application</a> - The application
--   information for the simulation application.
--   
--   <a>$sel:launchConfig:SimulationApplicationConfig'</a>,
--   <a>simulationApplicationConfig_launchConfig</a> - The launch
--   configuration for the simulation application.
newSimulationApplicationConfig :: Text -> LaunchConfig -> SimulationApplicationConfig

-- | Summary information for a simulation application.
--   
--   <i>See:</i> <a>newSimulationApplicationSummary</a> smart constructor.
data SimulationApplicationSummary
SimulationApplicationSummary' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe SimulationSoftwareSuite -> Maybe RobotSoftwareSuite -> SimulationApplicationSummary

-- | Create a value of <a>SimulationApplicationSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:SimulationApplicationSummary'</a>,
--   <a>simulationApplicationSummary_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the simulation application was last
--   updated.
--   
--   <a>$sel:arn:SimulationApplicationSummary'</a>,
--   <a>simulationApplicationSummary_arn</a> - The Amazon Resource Name
--   (ARN) of the simulation application.
--   
--   <a>$sel:name:SimulationApplicationSummary'</a>,
--   <a>simulationApplicationSummary_name</a> - The name of the simulation
--   application.
--   
--   <a>$sel:version:SimulationApplicationSummary'</a>,
--   <a>simulationApplicationSummary_version</a> - The version of the
--   simulation application.
--   
--   <a>$sel:simulationSoftwareSuite:SimulationApplicationSummary'</a>,
--   <a>simulationApplicationSummary_simulationSoftwareSuite</a> -
--   Information about a simulation software suite.
--   
--   <a>$sel:robotSoftwareSuite:SimulationApplicationSummary'</a>,
--   <a>simulationApplicationSummary_robotSoftwareSuite</a> - Information
--   about a robot software suite (ROS distribution).
newSimulationApplicationSummary :: SimulationApplicationSummary

-- | Information about a simulation job.
--   
--   <i>See:</i> <a>newSimulationJob</a> smart constructor.
data SimulationJob
SimulationJob' :: Maybe Text -> Maybe FailureBehavior -> Maybe SimulationJobStatus -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty RobotApplicationConfig) -> Maybe SimulationJobErrorCode -> Maybe ComputeResponse -> Maybe NetworkInterface -> Maybe [DataSource] -> Maybe Text -> Maybe VPCConfigResponse -> Maybe OutputLocation -> Maybe (NonEmpty SimulationApplicationConfig) -> Maybe Integer -> Maybe Text -> Maybe POSIX -> Maybe LoggingConfig -> Maybe Text -> Maybe Integer -> Maybe (HashMap Text Text) -> SimulationJob

-- | Create a value of <a>SimulationJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureReason:SimulationJob'</a>,
--   <a>simulationJob_failureReason</a> - The reason why the simulation job
--   failed.
--   
--   <a>$sel:failureBehavior:SimulationJob'</a>,
--   <a>simulationJob_failureBehavior</a> - The failure behavior the
--   simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the host running for its maximum timeout
--   duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
--   
--   <a>$sel:status:SimulationJob'</a>, <a>simulationJob_status</a> -
--   Status of the simulation job.
--   
--   <a>$sel:lastUpdatedAt:SimulationJob'</a>,
--   <a>simulationJob_lastUpdatedAt</a> - The time, in milliseconds since
--   the epoch, when the simulation job was last updated.
--   
--   <a>$sel:arn:SimulationJob'</a>, <a>simulationJob_arn</a> - The Amazon
--   Resource Name (ARN) of the simulation job.
--   
--   <a>$sel:robotApplications:SimulationJob'</a>,
--   <a>simulationJob_robotApplications</a> - A list of robot applications.
--   
--   <a>$sel:failureCode:SimulationJob'</a>,
--   <a>simulationJob_failureCode</a> - The failure code of the simulation
--   job if it failed.
--   
--   <a>$sel:compute:SimulationJob'</a>, <a>simulationJob_compute</a> -
--   Compute information for the simulation job
--   
--   <a>$sel:networkInterface:SimulationJob'</a>,
--   <a>simulationJob_networkInterface</a> - Information about a network
--   interface.
--   
--   <a>$sel:dataSources:SimulationJob'</a>,
--   <a>simulationJob_dataSources</a> - The data sources for the simulation
--   job.
--   
--   <a>$sel:name:SimulationJob'</a>, <a>simulationJob_name</a> - The name
--   of the simulation job.
--   
--   <a>$sel:vpcConfig:SimulationJob'</a>, <a>simulationJob_vpcConfig</a> -
--   VPC configuration information.
--   
--   <a>$sel:outputLocation:SimulationJob'</a>,
--   <a>simulationJob_outputLocation</a> - Location for output files
--   generated by the simulation job.
--   
--   <a>$sel:simulationApplications:SimulationJob'</a>,
--   <a>simulationJob_simulationApplications</a> - A list of simulation
--   applications.
--   
--   <a>$sel:simulationTimeMillis:SimulationJob'</a>,
--   <a>simulationJob_simulationTimeMillis</a> - The simulation job
--   execution duration in milliseconds.
--   
--   <a>$sel:clientRequestToken:SimulationJob'</a>,
--   <a>simulationJob_clientRequestToken</a> - A unique identifier for this
--   <tt>SimulationJob</tt> request.
--   
--   <a>$sel:lastStartedAt:SimulationJob'</a>,
--   <a>simulationJob_lastStartedAt</a> - The time, in milliseconds since
--   the epoch, when the simulation job was last started.
--   
--   <a>$sel:loggingConfig:SimulationJob'</a>,
--   <a>simulationJob_loggingConfig</a> - The logging configuration.
--   
--   <a>$sel:iamRole:SimulationJob'</a>, <a>simulationJob_iamRole</a> - The
--   IAM role that allows the simulation instance to call the AWS APIs that
--   are specified in its associated policies on your behalf. This is how
--   credentials are passed in to your simulation job.
--   
--   <a>$sel:maxJobDurationInSeconds:SimulationJob'</a>,
--   <a>simulationJob_maxJobDurationInSeconds</a> - The maximum simulation
--   job duration in seconds. The value must be 8 days (691,200 seconds) or
--   less.
--   
--   <a>$sel:tags:SimulationJob'</a>, <a>simulationJob_tags</a> - A map
--   that contains tag keys and tag values that are attached to the
--   simulation job.
newSimulationJob :: SimulationJob

-- | Information about a simulation job batch.
--   
--   <i>See:</i> <a>newSimulationJobBatchSummary</a> smart constructor.
data SimulationJobBatchSummary
SimulationJobBatchSummary' :: Maybe SimulationJobBatchStatus -> Maybe Int -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Int -> Maybe Int -> SimulationJobBatchSummary

-- | Create a value of <a>SimulationJobBatchSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_status</a> - The status of the simulation
--   job batch.
--   
--   <ul>
--   <li><i>Pending</i> The simulation job batch request is pending.</li>
--   <li><i>InProgress</i> The simulation job batch is in progress.</li>
--   <li><i>Failed</i> The simulation job batch failed. One or more
--   simulation job requests could not be completed due to an internal
--   failure (like <tt>InternalServiceError</tt>). See <tt>failureCode</tt>
--   and <tt>failureReason</tt> for more information.</li>
--   <li><i>Completed</i> The simulation batch job completed. A batch is
--   complete when (1) there are no pending simulation job requests in the
--   batch and none of the failed simulation job requests are due to
--   <tt>InternalServiceError</tt> and (2) when all created simulation jobs
--   have reached a terminal state (for example, <tt>Completed</tt> or
--   <tt>Failed</tt>).</li>
--   <li><i>Canceled</i> The simulation batch job was cancelled.</li>
--   <li><i>Canceling</i> The simulation batch job is being cancelled.</li>
--   <li><i>Completing</i> The simulation batch job is completing.</li>
--   <li><i>TimingOut</i> The simulation job batch is timing out.If a batch
--   timing out, and there are pending requests that were failing due to an
--   internal failure (like <tt>InternalServiceError</tt>), the batch
--   status will be <tt>Failed</tt>. If there are no such failing request,
--   the batch status will be <tt>TimedOut</tt>.</li>
--   <li><i>TimedOut</i> The simulation batch job timed out.</li>
--   </ul>
--   
--   <a>$sel:createdRequestCount:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_createdRequestCount</a> - The number of
--   created simulation job requests.
--   
--   <a>$sel:lastUpdatedAt:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_lastUpdatedAt</a> - The time, in
--   milliseconds since the epoch, when the simulation job batch was last
--   updated.
--   
--   <a>$sel:arn:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_arn</a> - The Amazon Resource Name (ARN)
--   of the batch.
--   
--   <a>$sel:createdAt:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_createdAt</a> - The time, in milliseconds
--   since the epoch, when the simulation job batch was created.
--   
--   <a>$sel:pendingRequestCount:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_pendingRequestCount</a> - The number of
--   pending simulation job requests.
--   
--   <a>$sel:failedRequestCount:SimulationJobBatchSummary'</a>,
--   <a>simulationJobBatchSummary_failedRequestCount</a> - The number of
--   failed simulation job requests.
newSimulationJobBatchSummary :: SimulationJobBatchSummary

-- | Information about a simulation job request.
--   
--   <i>See:</i> <a>newSimulationJobRequest</a> smart constructor.
data SimulationJobRequest
SimulationJobRequest' :: Maybe FailureBehavior -> Maybe (NonEmpty RobotApplicationConfig) -> Maybe Compute -> Maybe (NonEmpty DataSourceConfig) -> Maybe Bool -> Maybe VPCConfig -> Maybe OutputLocation -> Maybe (NonEmpty SimulationApplicationConfig) -> Maybe LoggingConfig -> Maybe Text -> Maybe (HashMap Text Text) -> Integer -> SimulationJobRequest

-- | Create a value of <a>SimulationJobRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureBehavior:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_failureBehavior</a> - The failure behavior the
--   simulation job.
--   
--   <ul>
--   <li><i>Continue</i> Leaves the host running for its maximum timeout
--   duration after a <tt>4XX</tt> error code.</li>
--   <li><i>Fail</i> Stop the simulation job and terminate the
--   instance.</li>
--   </ul>
--   
--   <a>$sel:robotApplications:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_robotApplications</a> - The robot applications
--   to use in the simulation job.
--   
--   <a>$sel:compute:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_compute</a> - Compute information for the
--   simulation job
--   
--   <a>$sel:dataSources:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_dataSources</a> - Specify data sources to
--   mount read-only files from S3 into your simulation. These files are
--   available under <tt>/opt/robomaker/datasources/data_source_name</tt>.
--   
--   There is a limit of 100 files and a combined size of 25GB for all
--   <tt>DataSourceConfig</tt> objects.
--   
--   <a>$sel:useDefaultApplications:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_useDefaultApplications</a> - A Boolean
--   indicating whether to use default applications in the simulation job.
--   Default applications include Gazebo, rqt, rviz and terminal access.
--   
--   <a>$sel:vpcConfig:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_vpcConfig</a> - Undocumented member.
--   
--   <a>$sel:outputLocation:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_outputLocation</a> - Undocumented member.
--   
--   <a>$sel:simulationApplications:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_simulationApplications</a> - The simulation
--   applications to use in the simulation job.
--   
--   <a>$sel:loggingConfig:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_loggingConfig</a> - Undocumented member.
--   
--   <a>$sel:iamRole:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_iamRole</a> - The IAM role name that allows
--   the simulation instance to call the AWS APIs that are specified in its
--   associated policies on your behalf. This is how credentials are passed
--   in to your simulation job.
--   
--   <a>$sel:tags:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_tags</a> - A map that contains tag keys and
--   tag values that are attached to the simulation job request.
--   
--   <a>$sel:maxJobDurationInSeconds:SimulationJobRequest'</a>,
--   <a>simulationJobRequest_maxJobDurationInSeconds</a> - The maximum
--   simulation job duration in seconds. The value must be 8 days (691,200
--   seconds) or less.
newSimulationJobRequest :: Integer -> SimulationJobRequest

-- | Summary information for a simulation job.
--   
--   <i>See:</i> <a>newSimulationJobSummary</a> smart constructor.
data SimulationJobSummary
SimulationJobSummary' :: Maybe SimulationJobStatus -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe ComputeType -> Maybe [Text] -> SimulationJobSummary

-- | Create a value of <a>SimulationJobSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_status</a> - The status of the simulation job.
--   
--   <a>$sel:robotApplicationNames:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_robotApplicationNames</a> - A list of
--   simulation job robot application names.
--   
--   <a>$sel:lastUpdatedAt:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_lastUpdatedAt</a> - The time, in milliseconds
--   since the epoch, when the simulation job was last updated.
--   
--   <a>$sel:arn:SimulationJobSummary'</a>, <a>simulationJobSummary_arn</a>
--   - The Amazon Resource Name (ARN) of the simulation job.
--   
--   <a>$sel:name:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_name</a> - The name of the simulation job.
--   
--   <a>$sel:simulationApplicationNames:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_simulationApplicationNames</a> - A list of
--   simulation job simulation application names.
--   
--   <a>$sel:computeType:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_computeType</a> - The compute type for the
--   simulation job summary.
--   
--   <a>$sel:dataSourceNames:SimulationJobSummary'</a>,
--   <a>simulationJobSummary_dataSourceNames</a> - The names of the data
--   sources.
newSimulationJobSummary :: SimulationJobSummary

-- | Information about a simulation software suite.
--   
--   <i>See:</i> <a>newSimulationSoftwareSuite</a> smart constructor.
data SimulationSoftwareSuite
SimulationSoftwareSuite' :: Maybe SimulationSoftwareSuiteType -> Maybe Text -> SimulationSoftwareSuite

-- | Create a value of <a>SimulationSoftwareSuite</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:SimulationSoftwareSuite'</a>,
--   <a>simulationSoftwareSuite_name</a> - The name of the simulation
--   software suite.
--   
--   <a>$sel:version:SimulationSoftwareSuite'</a>,
--   <a>simulationSoftwareSuite_version</a> - The version of the simulation
--   software suite.
newSimulationSoftwareSuite :: SimulationSoftwareSuite

-- | Information about a source.
--   
--   <i>See:</i> <a>newSource</a> smart constructor.
data Source
Source' :: Maybe Text -> Maybe Text -> Maybe Architecture -> Maybe Text -> Source

-- | Create a value of <a>Source</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:etag:Source'</a>, <a>source_etag</a> - A hash of the object
--   specified by <tt>s3Bucket</tt> and <tt>s3Key</tt>.
--   
--   <a>$sel:s3Key:Source'</a>, <a>source_s3Key</a> - The s3 object key.
--   
--   <a>$sel:architecture:Source'</a>, <a>source_architecture</a> - The
--   taget processor architecture for the application.
--   
--   <a>$sel:s3Bucket:Source'</a>, <a>source_s3Bucket</a> - The s3 bucket
--   name.
newSource :: Source

-- | Information about a source configuration.
--   
--   <i>See:</i> <a>newSourceConfig</a> smart constructor.
data SourceConfig
SourceConfig' :: Maybe Text -> Maybe Architecture -> Maybe Text -> SourceConfig

-- | Create a value of <a>SourceConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Key:SourceConfig'</a>, <a>sourceConfig_s3Key</a> - The s3
--   object key.
--   
--   <a>$sel:architecture:SourceConfig'</a>,
--   <a>sourceConfig_architecture</a> - The target processor architecture
--   for the application.
--   
--   <a>$sel:s3Bucket:SourceConfig'</a>, <a>sourceConfig_s3Bucket</a> - The
--   Amazon S3 bucket name.
newSourceConfig :: SourceConfig

-- | Information about a template location.
--   
--   <i>See:</i> <a>newTemplateLocation</a> smart constructor.
data TemplateLocation
TemplateLocation' :: Text -> Text -> TemplateLocation

-- | Create a value of <a>TemplateLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Bucket:TemplateLocation'</a>,
--   <a>templateLocation_s3Bucket</a> - The Amazon S3 bucket name.
--   
--   <a>$sel:s3Key:TemplateLocation'</a>, <a>templateLocation_s3Key</a> -
--   The list of S3 keys identifying the data source files.
newTemplateLocation :: Text -> Text -> TemplateLocation

-- | Summary information for a template.
--   
--   <i>See:</i> <a>newTemplateSummary</a> smart constructor.
data TemplateSummary
TemplateSummary' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> TemplateSummary

-- | Create a value of <a>TemplateSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastUpdatedAt:TemplateSummary'</a>,
--   <a>templateSummary_lastUpdatedAt</a> - The time, in milliseconds since
--   the epoch, when the template was last updated.
--   
--   <a>$sel:arn:TemplateSummary'</a>, <a>templateSummary_arn</a> - The
--   Amazon Resource Name (ARN) of the template.
--   
--   <a>$sel:createdAt:TemplateSummary'</a>,
--   <a>templateSummary_createdAt</a> - The time, in milliseconds since the
--   epoch, when the template was created.
--   
--   <a>$sel:name:TemplateSummary'</a>, <a>templateSummary_name</a> - The
--   name of the template.
--   
--   <a>$sel:version:TemplateSummary'</a>, <a>templateSummary_version</a> -
--   The version of the template that you're using.
newTemplateSummary :: TemplateSummary

-- | Information about a tool. Tools are used in a simulation job.
--   
--   <i>See:</i> <a>newTool</a> smart constructor.
data Tool
Tool' :: Maybe Bool -> Maybe ExitBehavior -> Maybe Bool -> Text -> Text -> Tool

-- | Create a value of <a>Tool</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamOutputToCloudWatch:Tool'</a>,
--   <a>tool_streamOutputToCloudWatch</a> - Boolean indicating whether logs
--   will be recorded in CloudWatch for the tool. The default is
--   <tt>False</tt>.
--   
--   <a>$sel:exitBehavior:Tool'</a>, <a>tool_exitBehavior</a> - Exit
--   behavior determines what happens when your tool quits running.
--   <tt>RESTART</tt> will cause your tool to be restarted. <tt>FAIL</tt>
--   will cause your job to exit. The default is <tt>RESTART</tt>.
--   
--   <a>$sel:streamUI:Tool'</a>, <a>tool_streamUI</a> - Boolean indicating
--   whether a streaming session will be configured for the tool. If
--   <tt>True</tt>, AWS RoboMaker will configure a connection so you can
--   interact with the tool as it is running in the simulation. It must
--   have a graphical user interface. The default is <tt>False</tt>.
--   
--   <a>$sel:name:Tool'</a>, <a>tool_name</a> - The name of the tool.
--   
--   <a>$sel:command:Tool'</a>, <a>tool_command</a> - Command-line
--   arguments for the tool. It must include the tool executable name.
newTool :: Text -> Text -> Tool

-- | Provides upload configuration information. Files are uploaded from the
--   simulation job to a location you specify.
--   
--   <i>See:</i> <a>newUploadConfiguration</a> smart constructor.
data UploadConfiguration
UploadConfiguration' :: Text -> Text -> UploadBehavior -> UploadConfiguration

-- | Create a value of <a>UploadConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UploadConfiguration'</a>, <a>uploadConfiguration_name</a>
--   - A prefix that specifies where files will be uploaded in Amazon S3.
--   It is appended to the simulation output location to determine the
--   final path.
--   
--   For example, if your simulation output location is
--   <tt>s3://my-bucket</tt> and your upload configuration name is
--   <tt>robot-test</tt>, your files will be uploaded to
--   <tt>s3://my-bucket/&lt;simid&gt;/&lt;runid&gt;/robot-test</tt>.
--   
--   <a>$sel:path:UploadConfiguration'</a>, <a>uploadConfiguration_path</a>
--   - Specifies the path of the file(s) to upload. Standard Unix glob
--   matching rules are accepted, with the addition of <tt>**</tt> as a
--   <i>super asterisk</i>. For example, specifying
--   <tt>/var/log/**.log</tt> causes all .log files in the
--   <tt>/var/log</tt> directory tree to be collected. For more examples,
--   see <a>Glob Library</a>.
--   
--   <a>$sel:uploadBehavior:UploadConfiguration'</a>,
--   <a>uploadConfiguration_uploadBehavior</a> - Specifies when to upload
--   the files:
--   
--   <ul>
--   <li><i>UPLOAD_ON_TERMINATE</i> Matching files are uploaded once the
--   simulation enters the <tt>TERMINATING</tt> state. Matching files are
--   not uploaded until all of your code (including tools) have stopped.If
--   there is a problem uploading a file, the upload is retried. If
--   problems persist, no further upload attempts will be made.</li>
--   <li><i>UPLOAD_ROLLING_AUTO_REMOVE</i> Matching files are uploaded as
--   they are created. They are deleted after they are uploaded. The
--   specified path is checked every 5 seconds. A final check is made when
--   all of your code (including tools) have stopped.</li>
--   </ul>
newUploadConfiguration :: Text -> Text -> UploadBehavior -> UploadConfiguration

-- | If your simulation job accesses resources in a VPC, you provide this
--   parameter identifying the list of security group IDs and subnet IDs.
--   These must belong to the same VPC. You must provide at least one
--   security group and two subnet IDs.
--   
--   <i>See:</i> <a>newVPCConfig</a> smart constructor.
data VPCConfig
VPCConfig' :: Maybe (NonEmpty Text) -> Maybe Bool -> NonEmpty Text -> VPCConfig

-- | Create a value of <a>VPCConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroups:VPCConfig'</a>, <a>vPCConfig_securityGroups</a>
--   - A list of one or more security groups IDs in your VPC.
--   
--   <a>$sel:assignPublicIp:VPCConfig'</a>, <a>vPCConfig_assignPublicIp</a>
--   - A boolean indicating whether to assign a public IP address.
--   
--   <a>$sel:subnets:VPCConfig'</a>, <a>vPCConfig_subnets</a> - A list of
--   one or more subnet IDs in your VPC.
newVPCConfig :: NonEmpty Text -> VPCConfig

-- | VPC configuration associated with your simulation job.
--   
--   <i>See:</i> <a>newVPCConfigResponse</a> smart constructor.
data VPCConfigResponse
VPCConfigResponse' :: Maybe (NonEmpty Text) -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Bool -> VPCConfigResponse

-- | Create a value of <a>VPCConfigResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroups:VPCConfigResponse'</a>,
--   <a>vPCConfigResponse_securityGroups</a> - A list of security group IDs
--   associated with the simulation job.
--   
--   <a>$sel:vpcId:VPCConfigResponse'</a>, <a>vPCConfigResponse_vpcId</a> -
--   The VPC ID associated with your simulation job.
--   
--   <a>$sel:subnets:VPCConfigResponse'</a>,
--   <a>vPCConfigResponse_subnets</a> - A list of subnet IDs associated
--   with the simulation job.
--   
--   <a>$sel:assignPublicIp:VPCConfigResponse'</a>,
--   <a>vPCConfigResponse_assignPublicIp</a> - A boolean indicating if a
--   public IP was assigned.
newVPCConfigResponse :: VPCConfigResponse

-- | Configuration information for a world.
--   
--   <i>See:</i> <a>newWorldConfig</a> smart constructor.
data WorldConfig
WorldConfig' :: Maybe Text -> WorldConfig

-- | Create a value of <a>WorldConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:world:WorldConfig'</a>, <a>worldConfig_world</a> - The world
--   generated by Simulation WorldForge.
newWorldConfig :: WorldConfig

-- | The number of worlds that will be created. You can configure the
--   number of unique floorplans and the number of unique interiors for
--   each floor plan. For example, if you want 1 world with 20 unique
--   interiors, you set <tt>floorplanCount = 1</tt> and
--   <tt>interiorCountPerFloorplan = 20</tt>. This will result in 20 worlds
--   (<tt>floorplanCount</tt> * <tt>interiorCountPerFloorplan)</tt>.
--   
--   If you set <tt>floorplanCount = 4</tt> and
--   <tt>interiorCountPerFloorplan = 5</tt>, there will be 20 worlds with 5
--   unique floor plans.
--   
--   <i>See:</i> <a>newWorldCount</a> smart constructor.
data WorldCount
WorldCount' :: Maybe Int -> Maybe Int -> WorldCount

-- | Create a value of <a>WorldCount</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:interiorCountPerFloorplan:WorldCount'</a>,
--   <a>worldCount_interiorCountPerFloorplan</a> - The number of unique
--   interiors per floorplan.
--   
--   <a>$sel:floorplanCount:WorldCount'</a>,
--   <a>worldCount_floorplanCount</a> - The number of unique floorplans.
newWorldCount :: WorldCount

-- | Information about a world export job.
--   
--   <i>See:</i> <a>newWorldExportJobSummary</a> smart constructor.
data WorldExportJobSummary
WorldExportJobSummary' :: Maybe WorldExportJobStatus -> Maybe Text -> Maybe POSIX -> Maybe (NonEmpty Text) -> WorldExportJobSummary

-- | Create a value of <a>WorldExportJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:WorldExportJobSummary'</a>,
--   <a>worldExportJobSummary_status</a> - The status of the world export
--   job.
--   
--   <ul>
--   <li><i>Pending</i> The world export job request is pending.</li>
--   <li><i>Running</i> The world export job is running.</li>
--   <li><i>Completed</i> The world export job completed.</li>
--   <li><i>Failed</i> The world export job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>Canceled</i> The world export job was cancelled.</li>
--   <li><i>Canceling</i> The world export job is being cancelled.</li>
--   </ul>
--   
--   <a>$sel:arn:WorldExportJobSummary'</a>,
--   <a>worldExportJobSummary_arn</a> - The Amazon Resource Name (ARN) of
--   the world export job.
--   
--   <a>$sel:createdAt:WorldExportJobSummary'</a>,
--   <a>worldExportJobSummary_createdAt</a> - The time, in milliseconds
--   since the epoch, when the world export job was created.
--   
--   <a>$sel:worlds:WorldExportJobSummary'</a>,
--   <a>worldExportJobSummary_worlds</a> - A list of worlds.
newWorldExportJobSummary :: WorldExportJobSummary

-- | Information about a failed world.
--   
--   <i>See:</i> <a>newWorldFailure</a> smart constructor.
data WorldFailure
WorldFailure' :: Maybe Text -> Maybe WorldGenerationJobErrorCode -> Maybe Int -> WorldFailure

-- | Create a value of <a>WorldFailure</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sampleFailureReason:WorldFailure'</a>,
--   <a>worldFailure_sampleFailureReason</a> - The sample reason why the
--   world failed. World errors are aggregated. A sample is used as the
--   <tt>sampleFailureReason</tt>.
--   
--   <a>$sel:failureCode:WorldFailure'</a>, <a>worldFailure_failureCode</a>
--   - The failure code of the world export job if it failed:
--   
--   <ul>
--   <li><i>InternalServiceError</i> Internal service error.</li>
--   <li><i>LimitExceeded</i> The requested resource exceeds the maximum
--   number allowed, or the number of concurrent stream requests exceeds
--   the maximum number allowed.</li>
--   <li><i>ResourceNotFound</i> The specified resource could not be
--   found.</li>
--   <li><i>RequestThrottled</i> The request was throttled.</li>
--   <li><i>InvalidInput</i> An input parameter in the request is not
--   valid.</li>
--   </ul>
--   
--   <a>$sel:failureCount:WorldFailure'</a>,
--   <a>worldFailure_failureCount</a> - The number of failed worlds.
newWorldFailure :: WorldFailure

-- | Information about a world generator job.
--   
--   <i>See:</i> <a>newWorldGenerationJobSummary</a> smart constructor.
data WorldGenerationJobSummary
WorldGenerationJobSummary' :: Maybe WorldGenerationJobStatus -> Maybe Text -> Maybe POSIX -> Maybe WorldCount -> Maybe Int -> Maybe Int -> Maybe Text -> WorldGenerationJobSummary

-- | Create a value of <a>WorldGenerationJobSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_status</a> - The status of the world
--   generator job:
--   
--   <ul>
--   <li><i>Pending</i> The world generator job request is pending.</li>
--   <li><i>Running</i> The world generator job is running.</li>
--   <li><i>Completed</i> The world generator job completed.</li>
--   <li><i>Failed</i> The world generator job failed. See
--   <tt>failureCode</tt> for more information.</li>
--   <li><i>PartialFailed</i> Some worlds did not generate.</li>
--   <li><i>Canceled</i> The world generator job was cancelled.</li>
--   <li><i>Canceling</i> The world generator job is being cancelled.</li>
--   </ul>
--   
--   <a>$sel:arn:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_arn</a> - The Amazon Resource Name (ARN)
--   of the world generator job.
--   
--   <a>$sel:createdAt:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_createdAt</a> - The time, in milliseconds
--   since the epoch, when the world generator job was created.
--   
--   <a>$sel:worldCount:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_worldCount</a> - Information about the
--   world count.
--   
--   <a>$sel:succeededWorldCount:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_succeededWorldCount</a> - The number of
--   worlds that were generated.
--   
--   <a>$sel:failedWorldCount:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_failedWorldCount</a> - The number of
--   worlds that failed.
--   
--   <a>$sel:template:WorldGenerationJobSummary'</a>,
--   <a>worldGenerationJobSummary_template</a> - The Amazon Resource Name
--   (arn) of the world template.
newWorldGenerationJobSummary :: WorldGenerationJobSummary

-- | Information about a world.
--   
--   <i>See:</i> <a>newWorldSummary</a> smart constructor.
data WorldSummary
WorldSummary' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> WorldSummary

-- | Create a value of <a>WorldSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:WorldSummary'</a>, <a>worldSummary_arn</a> - The Amazon
--   Resource Name (ARN) of the world.
--   
--   <a>$sel:createdAt:WorldSummary'</a>, <a>worldSummary_createdAt</a> -
--   The time, in milliseconds since the epoch, when the world was created.
--   
--   <a>$sel:template:WorldSummary'</a>, <a>worldSummary_template</a> - The
--   Amazon Resource Name (arn) of the world template.
--   
--   <a>$sel:generationJob:WorldSummary'</a>,
--   <a>worldSummary_generationJob</a> - The Amazon Resource Name (arn) of
--   the world generation job.
newWorldSummary :: WorldSummary
