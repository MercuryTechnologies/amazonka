-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-glueZSamazonka-glue
@version 2.0


module Network.AWS.Glue.Types.BackfillErrorCode
newtype BackfillErrorCode
BackfillErrorCode' :: Text -> BackfillErrorCode
[fromBackfillErrorCode] :: BackfillErrorCode -> Text
pattern BackfillErrorCode_ENCRYPTED_PARTITION_ERROR :: BackfillErrorCode
pattern BackfillErrorCode_INTERNAL_ERROR :: BackfillErrorCode
pattern BackfillErrorCode_INVALID_PARTITION_TYPE_DATA_ERROR :: BackfillErrorCode
pattern BackfillErrorCode_MISSING_PARTITION_VALUE_ERROR :: BackfillErrorCode
pattern BackfillErrorCode_UNSUPPORTED_PARTITION_CHARACTER_ERROR :: BackfillErrorCode
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.BackfillErrorCode.BackfillErrorCode
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.BackfillErrorCode.BackfillErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.BackfillErrorCode.BackfillErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.BackfillErrorCode.BackfillErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.BackfillErrorCode.BackfillErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.BackfillErrorCode.BackfillErrorCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.BackfillErrorCode.BackfillErrorCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.BackfillErrorCode.BackfillErrorCode
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.BackfillErrorCode.BackfillErrorCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.BackfillErrorCode.BackfillErrorCode
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.BackfillErrorCode.BackfillErrorCode
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.BackfillErrorCode.BackfillErrorCode
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.BackfillErrorCode.BackfillErrorCode
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.BackfillErrorCode.BackfillErrorCode
instance GHC.Generics.Generic Network.AWS.Glue.Types.BackfillErrorCode.BackfillErrorCode
instance GHC.Classes.Ord Network.AWS.Glue.Types.BackfillErrorCode.BackfillErrorCode
instance GHC.Classes.Eq Network.AWS.Glue.Types.BackfillErrorCode.BackfillErrorCode
instance GHC.Read.Read Network.AWS.Glue.Types.BackfillErrorCode.BackfillErrorCode
instance GHC.Show.Show Network.AWS.Glue.Types.BackfillErrorCode.BackfillErrorCode


module Network.AWS.Glue.Types.BatchStopJobRunSuccessfulSubmission

-- | Records a successful request to stop a specified <tt>JobRun</tt>.
--   
--   <i>See:</i> <a>newBatchStopJobRunSuccessfulSubmission</a> smart
--   constructor.
data BatchStopJobRunSuccessfulSubmission
BatchStopJobRunSuccessfulSubmission' :: Maybe Text -> Maybe Text -> BatchStopJobRunSuccessfulSubmission

-- | The name of the job definition used in the job run that was stopped.
[$sel:jobName:BatchStopJobRunSuccessfulSubmission'] :: BatchStopJobRunSuccessfulSubmission -> Maybe Text

-- | The <tt>JobRunId</tt> of the job run that was stopped.
[$sel:jobRunId:BatchStopJobRunSuccessfulSubmission'] :: BatchStopJobRunSuccessfulSubmission -> Maybe Text

-- | Create a value of <a>BatchStopJobRunSuccessfulSubmission</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:BatchStopJobRunSuccessfulSubmission'</a>,
--   <a>batchStopJobRunSuccessfulSubmission_jobName</a> - The name of the
--   job definition used in the job run that was stopped.
--   
--   <a>$sel:jobRunId:BatchStopJobRunSuccessfulSubmission'</a>,
--   <a>batchStopJobRunSuccessfulSubmission_jobRunId</a> - The
--   <tt>JobRunId</tt> of the job run that was stopped.
newBatchStopJobRunSuccessfulSubmission :: BatchStopJobRunSuccessfulSubmission

-- | The name of the job definition used in the job run that was stopped.
batchStopJobRunSuccessfulSubmission_jobName :: Lens' BatchStopJobRunSuccessfulSubmission (Maybe Text)

-- | The <tt>JobRunId</tt> of the job run that was stopped.
batchStopJobRunSuccessfulSubmission_jobRunId :: Lens' BatchStopJobRunSuccessfulSubmission (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.BatchStopJobRunSuccessfulSubmission.BatchStopJobRunSuccessfulSubmission
instance GHC.Show.Show Network.AWS.Glue.Types.BatchStopJobRunSuccessfulSubmission.BatchStopJobRunSuccessfulSubmission
instance GHC.Read.Read Network.AWS.Glue.Types.BatchStopJobRunSuccessfulSubmission.BatchStopJobRunSuccessfulSubmission
instance GHC.Classes.Eq Network.AWS.Glue.Types.BatchStopJobRunSuccessfulSubmission.BatchStopJobRunSuccessfulSubmission
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.BatchStopJobRunSuccessfulSubmission.BatchStopJobRunSuccessfulSubmission
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.BatchStopJobRunSuccessfulSubmission.BatchStopJobRunSuccessfulSubmission
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.BatchStopJobRunSuccessfulSubmission.BatchStopJobRunSuccessfulSubmission


module Network.AWS.Glue.Types.BinaryColumnStatisticsData

-- | Defines column statistics supported for bit sequence data values.
--   
--   <i>See:</i> <a>newBinaryColumnStatisticsData</a> smart constructor.
data BinaryColumnStatisticsData
BinaryColumnStatisticsData' :: Natural -> Double -> Natural -> BinaryColumnStatisticsData

-- | The size of the longest bit sequence in the column.
[$sel:maximumLength:BinaryColumnStatisticsData'] :: BinaryColumnStatisticsData -> Natural

-- | The average bit sequence length in the column.
[$sel:averageLength:BinaryColumnStatisticsData'] :: BinaryColumnStatisticsData -> Double

-- | The number of null values in the column.
[$sel:numberOfNulls:BinaryColumnStatisticsData'] :: BinaryColumnStatisticsData -> Natural

-- | Create a value of <a>BinaryColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumLength:BinaryColumnStatisticsData'</a>,
--   <a>binaryColumnStatisticsData_maximumLength</a> - The size of the
--   longest bit sequence in the column.
--   
--   <a>$sel:averageLength:BinaryColumnStatisticsData'</a>,
--   <a>binaryColumnStatisticsData_averageLength</a> - The average bit
--   sequence length in the column.
--   
--   <a>$sel:numberOfNulls:BinaryColumnStatisticsData'</a>,
--   <a>binaryColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
newBinaryColumnStatisticsData :: Natural -> Double -> Natural -> BinaryColumnStatisticsData

-- | The size of the longest bit sequence in the column.
binaryColumnStatisticsData_maximumLength :: Lens' BinaryColumnStatisticsData Natural

-- | The average bit sequence length in the column.
binaryColumnStatisticsData_averageLength :: Lens' BinaryColumnStatisticsData Double

-- | The number of null values in the column.
binaryColumnStatisticsData_numberOfNulls :: Lens' BinaryColumnStatisticsData Natural
instance GHC.Generics.Generic Network.AWS.Glue.Types.BinaryColumnStatisticsData.BinaryColumnStatisticsData
instance GHC.Show.Show Network.AWS.Glue.Types.BinaryColumnStatisticsData.BinaryColumnStatisticsData
instance GHC.Read.Read Network.AWS.Glue.Types.BinaryColumnStatisticsData.BinaryColumnStatisticsData
instance GHC.Classes.Eq Network.AWS.Glue.Types.BinaryColumnStatisticsData.BinaryColumnStatisticsData
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.BinaryColumnStatisticsData.BinaryColumnStatisticsData
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.BinaryColumnStatisticsData.BinaryColumnStatisticsData
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.BinaryColumnStatisticsData.BinaryColumnStatisticsData
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.BinaryColumnStatisticsData.BinaryColumnStatisticsData


module Network.AWS.Glue.Types.BlueprintDetails

-- | The details of a blueprint.
--   
--   <i>See:</i> <a>newBlueprintDetails</a> smart constructor.
data BlueprintDetails
BlueprintDetails' :: Maybe Text -> Maybe Text -> BlueprintDetails

-- | The run ID for this blueprint.
[$sel:runId:BlueprintDetails'] :: BlueprintDetails -> Maybe Text

-- | The name of the blueprint.
[$sel:blueprintName:BlueprintDetails'] :: BlueprintDetails -> Maybe Text

-- | Create a value of <a>BlueprintDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runId:BlueprintDetails'</a>, <a>blueprintDetails_runId</a> -
--   The run ID for this blueprint.
--   
--   <a>$sel:blueprintName:BlueprintDetails'</a>,
--   <a>blueprintDetails_blueprintName</a> - The name of the blueprint.
newBlueprintDetails :: BlueprintDetails

-- | The run ID for this blueprint.
blueprintDetails_runId :: Lens' BlueprintDetails (Maybe Text)

-- | The name of the blueprint.
blueprintDetails_blueprintName :: Lens' BlueprintDetails (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.BlueprintDetails.BlueprintDetails
instance GHC.Show.Show Network.AWS.Glue.Types.BlueprintDetails.BlueprintDetails
instance GHC.Read.Read Network.AWS.Glue.Types.BlueprintDetails.BlueprintDetails
instance GHC.Classes.Eq Network.AWS.Glue.Types.BlueprintDetails.BlueprintDetails
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.BlueprintDetails.BlueprintDetails
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.BlueprintDetails.BlueprintDetails
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.BlueprintDetails.BlueprintDetails


module Network.AWS.Glue.Types.BlueprintRunState
newtype BlueprintRunState
BlueprintRunState' :: Text -> BlueprintRunState
[fromBlueprintRunState] :: BlueprintRunState -> Text
pattern BlueprintRunState_FAILED :: BlueprintRunState
pattern BlueprintRunState_ROLLING_BACK :: BlueprintRunState
pattern BlueprintRunState_RUNNING :: BlueprintRunState
pattern BlueprintRunState_SUCCEEDED :: BlueprintRunState
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.BlueprintRunState.BlueprintRunState
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.BlueprintRunState.BlueprintRunState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.BlueprintRunState.BlueprintRunState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.BlueprintRunState.BlueprintRunState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.BlueprintRunState.BlueprintRunState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.BlueprintRunState.BlueprintRunState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.BlueprintRunState.BlueprintRunState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.BlueprintRunState.BlueprintRunState
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.BlueprintRunState.BlueprintRunState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.BlueprintRunState.BlueprintRunState
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.BlueprintRunState.BlueprintRunState
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.BlueprintRunState.BlueprintRunState
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.BlueprintRunState.BlueprintRunState
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.BlueprintRunState.BlueprintRunState
instance GHC.Generics.Generic Network.AWS.Glue.Types.BlueprintRunState.BlueprintRunState
instance GHC.Classes.Ord Network.AWS.Glue.Types.BlueprintRunState.BlueprintRunState
instance GHC.Classes.Eq Network.AWS.Glue.Types.BlueprintRunState.BlueprintRunState
instance GHC.Read.Read Network.AWS.Glue.Types.BlueprintRunState.BlueprintRunState
instance GHC.Show.Show Network.AWS.Glue.Types.BlueprintRunState.BlueprintRunState


module Network.AWS.Glue.Types.BlueprintRun

-- | The details of a blueprint run.
--   
--   <i>See:</i> <a>newBlueprintRun</a> smart constructor.
data BlueprintRun
BlueprintRun' :: Maybe Text -> Maybe POSIX -> Maybe BlueprintRunState -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> BlueprintRun

-- | The name of a workflow that is created as a result of a successful
--   blueprint run. If a blueprint run has an error, there will not be a
--   workflow created.
[$sel:workflowName:BlueprintRun'] :: BlueprintRun -> Maybe Text

-- | The date and time that the blueprint run completed.
[$sel:completedOn:BlueprintRun'] :: BlueprintRun -> Maybe POSIX

-- | The state of the blueprint run. Possible values are:
--   
--   <ul>
--   <li>Running — The blueprint run is in progress.</li>
--   <li>Succeeded — The blueprint run completed successfully.</li>
--   <li>Failed — The blueprint run failed and rollback is complete.</li>
--   <li>Rolling Back — The blueprint run failed and rollback is in
--   progress.</li>
--   </ul>
[$sel:state:BlueprintRun'] :: BlueprintRun -> Maybe BlueprintRunState

-- | If there are any errors while creating the entities of a workflow, we
--   try to roll back the created entities until that point and delete
--   them. This attribute indicates the errors seen while trying to delete
--   the entities that are created.
[$sel:rollbackErrorMessage:BlueprintRun'] :: BlueprintRun -> Maybe Text

-- | The date and time that the blueprint run started.
[$sel:startedOn:BlueprintRun'] :: BlueprintRun -> Maybe POSIX

-- | The run ID for this blueprint run.
[$sel:runId:BlueprintRun'] :: BlueprintRun -> Maybe Text

-- | The blueprint parameters as a string. You will have to provide a value
--   for each key that is required from the parameter spec that is defined
--   in the <tt>Blueprint$ParameterSpec</tt>.
[$sel:parameters:BlueprintRun'] :: BlueprintRun -> Maybe Text

-- | The name of the blueprint.
[$sel:blueprintName:BlueprintRun'] :: BlueprintRun -> Maybe Text

-- | Indicates any errors that are seen while running the blueprint.
[$sel:errorMessage:BlueprintRun'] :: BlueprintRun -> Maybe Text

-- | The role ARN. This role will be assumed by the Glue service and will
--   be used to create the workflow and other entities of a workflow.
[$sel:roleArn:BlueprintRun'] :: BlueprintRun -> Maybe Text

-- | Create a value of <a>BlueprintRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workflowName:BlueprintRun'</a>,
--   <a>blueprintRun_workflowName</a> - The name of a workflow that is
--   created as a result of a successful blueprint run. If a blueprint run
--   has an error, there will not be a workflow created.
--   
--   <a>$sel:completedOn:BlueprintRun'</a>, <a>blueprintRun_completedOn</a>
--   - The date and time that the blueprint run completed.
--   
--   <a>$sel:state:BlueprintRun'</a>, <a>blueprintRun_state</a> - The state
--   of the blueprint run. Possible values are:
--   
--   <ul>
--   <li>Running — The blueprint run is in progress.</li>
--   <li>Succeeded — The blueprint run completed successfully.</li>
--   <li>Failed — The blueprint run failed and rollback is complete.</li>
--   <li>Rolling Back — The blueprint run failed and rollback is in
--   progress.</li>
--   </ul>
--   
--   <a>$sel:rollbackErrorMessage:BlueprintRun'</a>,
--   <a>blueprintRun_rollbackErrorMessage</a> - If there are any errors
--   while creating the entities of a workflow, we try to roll back the
--   created entities until that point and delete them. This attribute
--   indicates the errors seen while trying to delete the entities that are
--   created.
--   
--   <a>$sel:startedOn:BlueprintRun'</a>, <a>blueprintRun_startedOn</a> -
--   The date and time that the blueprint run started.
--   
--   <a>$sel:runId:BlueprintRun'</a>, <a>blueprintRun_runId</a> - The run
--   ID for this blueprint run.
--   
--   <a>$sel:parameters:BlueprintRun'</a>, <a>blueprintRun_parameters</a> -
--   The blueprint parameters as a string. You will have to provide a value
--   for each key that is required from the parameter spec that is defined
--   in the <tt>Blueprint$ParameterSpec</tt>.
--   
--   <a>$sel:blueprintName:BlueprintRun'</a>,
--   <a>blueprintRun_blueprintName</a> - The name of the blueprint.
--   
--   <a>$sel:errorMessage:BlueprintRun'</a>,
--   <a>blueprintRun_errorMessage</a> - Indicates any errors that are seen
--   while running the blueprint.
--   
--   <a>$sel:roleArn:BlueprintRun'</a>, <a>blueprintRun_roleArn</a> - The
--   role ARN. This role will be assumed by the Glue service and will be
--   used to create the workflow and other entities of a workflow.
newBlueprintRun :: BlueprintRun

-- | The name of a workflow that is created as a result of a successful
--   blueprint run. If a blueprint run has an error, there will not be a
--   workflow created.
blueprintRun_workflowName :: Lens' BlueprintRun (Maybe Text)

-- | The date and time that the blueprint run completed.
blueprintRun_completedOn :: Lens' BlueprintRun (Maybe UTCTime)

-- | The state of the blueprint run. Possible values are:
--   
--   <ul>
--   <li>Running — The blueprint run is in progress.</li>
--   <li>Succeeded — The blueprint run completed successfully.</li>
--   <li>Failed — The blueprint run failed and rollback is complete.</li>
--   <li>Rolling Back — The blueprint run failed and rollback is in
--   progress.</li>
--   </ul>
blueprintRun_state :: Lens' BlueprintRun (Maybe BlueprintRunState)

-- | If there are any errors while creating the entities of a workflow, we
--   try to roll back the created entities until that point and delete
--   them. This attribute indicates the errors seen while trying to delete
--   the entities that are created.
blueprintRun_rollbackErrorMessage :: Lens' BlueprintRun (Maybe Text)

-- | The date and time that the blueprint run started.
blueprintRun_startedOn :: Lens' BlueprintRun (Maybe UTCTime)

-- | The run ID for this blueprint run.
blueprintRun_runId :: Lens' BlueprintRun (Maybe Text)

-- | The blueprint parameters as a string. You will have to provide a value
--   for each key that is required from the parameter spec that is defined
--   in the <tt>Blueprint$ParameterSpec</tt>.
blueprintRun_parameters :: Lens' BlueprintRun (Maybe Text)

-- | The name of the blueprint.
blueprintRun_blueprintName :: Lens' BlueprintRun (Maybe Text)

-- | Indicates any errors that are seen while running the blueprint.
blueprintRun_errorMessage :: Lens' BlueprintRun (Maybe Text)

-- | The role ARN. This role will be assumed by the Glue service and will
--   be used to create the workflow and other entities of a workflow.
blueprintRun_roleArn :: Lens' BlueprintRun (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.BlueprintRun.BlueprintRun
instance GHC.Show.Show Network.AWS.Glue.Types.BlueprintRun.BlueprintRun
instance GHC.Read.Read Network.AWS.Glue.Types.BlueprintRun.BlueprintRun
instance GHC.Classes.Eq Network.AWS.Glue.Types.BlueprintRun.BlueprintRun
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.BlueprintRun.BlueprintRun
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.BlueprintRun.BlueprintRun
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.BlueprintRun.BlueprintRun


module Network.AWS.Glue.Types.BlueprintStatus
newtype BlueprintStatus
BlueprintStatus' :: Text -> BlueprintStatus
[fromBlueprintStatus] :: BlueprintStatus -> Text
pattern BlueprintStatus_ACTIVE :: BlueprintStatus
pattern BlueprintStatus_CREATING :: BlueprintStatus
pattern BlueprintStatus_FAILED :: BlueprintStatus
pattern BlueprintStatus_UPDATING :: BlueprintStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.BlueprintStatus.BlueprintStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.BlueprintStatus.BlueprintStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.BlueprintStatus.BlueprintStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.BlueprintStatus.BlueprintStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.BlueprintStatus.BlueprintStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.BlueprintStatus.BlueprintStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.BlueprintStatus.BlueprintStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.BlueprintStatus.BlueprintStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.BlueprintStatus.BlueprintStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.BlueprintStatus.BlueprintStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.BlueprintStatus.BlueprintStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.BlueprintStatus.BlueprintStatus
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.BlueprintStatus.BlueprintStatus
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.BlueprintStatus.BlueprintStatus
instance GHC.Generics.Generic Network.AWS.Glue.Types.BlueprintStatus.BlueprintStatus
instance GHC.Classes.Ord Network.AWS.Glue.Types.BlueprintStatus.BlueprintStatus
instance GHC.Classes.Eq Network.AWS.Glue.Types.BlueprintStatus.BlueprintStatus
instance GHC.Read.Read Network.AWS.Glue.Types.BlueprintStatus.BlueprintStatus
instance GHC.Show.Show Network.AWS.Glue.Types.BlueprintStatus.BlueprintStatus


module Network.AWS.Glue.Types.BooleanColumnStatisticsData

-- | Defines column statistics supported for Boolean data columns.
--   
--   <i>See:</i> <a>newBooleanColumnStatisticsData</a> smart constructor.
data BooleanColumnStatisticsData
BooleanColumnStatisticsData' :: Natural -> Natural -> Natural -> BooleanColumnStatisticsData

-- | The number of true values in the column.
[$sel:numberOfTrues:BooleanColumnStatisticsData'] :: BooleanColumnStatisticsData -> Natural

-- | The number of false values in the column.
[$sel:numberOfFalses:BooleanColumnStatisticsData'] :: BooleanColumnStatisticsData -> Natural

-- | The number of null values in the column.
[$sel:numberOfNulls:BooleanColumnStatisticsData'] :: BooleanColumnStatisticsData -> Natural

-- | Create a value of <a>BooleanColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfTrues:BooleanColumnStatisticsData'</a>,
--   <a>booleanColumnStatisticsData_numberOfTrues</a> - The number of true
--   values in the column.
--   
--   <a>$sel:numberOfFalses:BooleanColumnStatisticsData'</a>,
--   <a>booleanColumnStatisticsData_numberOfFalses</a> - The number of
--   false values in the column.
--   
--   <a>$sel:numberOfNulls:BooleanColumnStatisticsData'</a>,
--   <a>booleanColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
newBooleanColumnStatisticsData :: Natural -> Natural -> Natural -> BooleanColumnStatisticsData

-- | The number of true values in the column.
booleanColumnStatisticsData_numberOfTrues :: Lens' BooleanColumnStatisticsData Natural

-- | The number of false values in the column.
booleanColumnStatisticsData_numberOfFalses :: Lens' BooleanColumnStatisticsData Natural

-- | The number of null values in the column.
booleanColumnStatisticsData_numberOfNulls :: Lens' BooleanColumnStatisticsData Natural
instance GHC.Generics.Generic Network.AWS.Glue.Types.BooleanColumnStatisticsData.BooleanColumnStatisticsData
instance GHC.Show.Show Network.AWS.Glue.Types.BooleanColumnStatisticsData.BooleanColumnStatisticsData
instance GHC.Read.Read Network.AWS.Glue.Types.BooleanColumnStatisticsData.BooleanColumnStatisticsData
instance GHC.Classes.Eq Network.AWS.Glue.Types.BooleanColumnStatisticsData.BooleanColumnStatisticsData
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.BooleanColumnStatisticsData.BooleanColumnStatisticsData
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.BooleanColumnStatisticsData.BooleanColumnStatisticsData
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.BooleanColumnStatisticsData.BooleanColumnStatisticsData
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.BooleanColumnStatisticsData.BooleanColumnStatisticsData


module Network.AWS.Glue.Types.CatalogEncryptionMode
newtype CatalogEncryptionMode
CatalogEncryptionMode' :: Text -> CatalogEncryptionMode
[fromCatalogEncryptionMode] :: CatalogEncryptionMode -> Text
pattern CatalogEncryptionMode_DISABLED :: CatalogEncryptionMode
pattern CatalogEncryptionMode_SSE_KMS :: CatalogEncryptionMode
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.CatalogEncryptionMode.CatalogEncryptionMode
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.CatalogEncryptionMode.CatalogEncryptionMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.CatalogEncryptionMode.CatalogEncryptionMode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.CatalogEncryptionMode.CatalogEncryptionMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.CatalogEncryptionMode.CatalogEncryptionMode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.CatalogEncryptionMode.CatalogEncryptionMode
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.CatalogEncryptionMode.CatalogEncryptionMode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.CatalogEncryptionMode.CatalogEncryptionMode
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.CatalogEncryptionMode.CatalogEncryptionMode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.CatalogEncryptionMode.CatalogEncryptionMode
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.CatalogEncryptionMode.CatalogEncryptionMode
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.CatalogEncryptionMode.CatalogEncryptionMode
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CatalogEncryptionMode.CatalogEncryptionMode
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CatalogEncryptionMode.CatalogEncryptionMode
instance GHC.Generics.Generic Network.AWS.Glue.Types.CatalogEncryptionMode.CatalogEncryptionMode
instance GHC.Classes.Ord Network.AWS.Glue.Types.CatalogEncryptionMode.CatalogEncryptionMode
instance GHC.Classes.Eq Network.AWS.Glue.Types.CatalogEncryptionMode.CatalogEncryptionMode
instance GHC.Read.Read Network.AWS.Glue.Types.CatalogEncryptionMode.CatalogEncryptionMode
instance GHC.Show.Show Network.AWS.Glue.Types.CatalogEncryptionMode.CatalogEncryptionMode


module Network.AWS.Glue.Types.CatalogEntry

-- | Specifies a table definition in the Glue Data Catalog.
--   
--   <i>See:</i> <a>newCatalogEntry</a> smart constructor.
data CatalogEntry
CatalogEntry' :: Text -> Text -> CatalogEntry

-- | The database in which the table metadata resides.
[$sel:databaseName:CatalogEntry'] :: CatalogEntry -> Text

-- | The name of the table in question.
[$sel:tableName:CatalogEntry'] :: CatalogEntry -> Text

-- | Create a value of <a>CatalogEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:databaseName:CatalogEntry'</a>,
--   <a>catalogEntry_databaseName</a> - The database in which the table
--   metadata resides.
--   
--   <a>$sel:tableName:CatalogEntry'</a>, <a>catalogEntry_tableName</a> -
--   The name of the table in question.
newCatalogEntry :: Text -> Text -> CatalogEntry

-- | The database in which the table metadata resides.
catalogEntry_databaseName :: Lens' CatalogEntry Text

-- | The name of the table in question.
catalogEntry_tableName :: Lens' CatalogEntry Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.CatalogEntry.CatalogEntry
instance GHC.Show.Show Network.AWS.Glue.Types.CatalogEntry.CatalogEntry
instance GHC.Read.Read Network.AWS.Glue.Types.CatalogEntry.CatalogEntry
instance GHC.Classes.Eq Network.AWS.Glue.Types.CatalogEntry.CatalogEntry
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CatalogEntry.CatalogEntry
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CatalogEntry.CatalogEntry
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.CatalogEntry.CatalogEntry


module Network.AWS.Glue.Types.CatalogImportStatus

-- | A structure containing migration status information.
--   
--   <i>See:</i> <a>newCatalogImportStatus</a> smart constructor.
data CatalogImportStatus
CatalogImportStatus' :: Maybe Text -> Maybe POSIX -> Maybe Bool -> CatalogImportStatus

-- | The name of the person who initiated the migration.
[$sel:importedBy:CatalogImportStatus'] :: CatalogImportStatus -> Maybe Text

-- | The time that the migration was started.
[$sel:importTime:CatalogImportStatus'] :: CatalogImportStatus -> Maybe POSIX

-- | <tt>True</tt> if the migration has completed, or <tt>False</tt>
--   otherwise.
[$sel:importCompleted:CatalogImportStatus'] :: CatalogImportStatus -> Maybe Bool

-- | Create a value of <a>CatalogImportStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:importedBy:CatalogImportStatus'</a>,
--   <a>catalogImportStatus_importedBy</a> - The name of the person who
--   initiated the migration.
--   
--   <a>$sel:importTime:CatalogImportStatus'</a>,
--   <a>catalogImportStatus_importTime</a> - The time that the migration
--   was started.
--   
--   <a>$sel:importCompleted:CatalogImportStatus'</a>,
--   <a>catalogImportStatus_importCompleted</a> - <tt>True</tt> if the
--   migration has completed, or <tt>False</tt> otherwise.
newCatalogImportStatus :: CatalogImportStatus

-- | The name of the person who initiated the migration.
catalogImportStatus_importedBy :: Lens' CatalogImportStatus (Maybe Text)

-- | The time that the migration was started.
catalogImportStatus_importTime :: Lens' CatalogImportStatus (Maybe UTCTime)

-- | <tt>True</tt> if the migration has completed, or <tt>False</tt>
--   otherwise.
catalogImportStatus_importCompleted :: Lens' CatalogImportStatus (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.Glue.Types.CatalogImportStatus.CatalogImportStatus
instance GHC.Show.Show Network.AWS.Glue.Types.CatalogImportStatus.CatalogImportStatus
instance GHC.Read.Read Network.AWS.Glue.Types.CatalogImportStatus.CatalogImportStatus
instance GHC.Classes.Eq Network.AWS.Glue.Types.CatalogImportStatus.CatalogImportStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.CatalogImportStatus.CatalogImportStatus
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CatalogImportStatus.CatalogImportStatus
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CatalogImportStatus.CatalogImportStatus


module Network.AWS.Glue.Types.CatalogTarget

-- | Specifies an Glue Data Catalog target.
--   
--   <i>See:</i> <a>newCatalogTarget</a> smart constructor.
data CatalogTarget
CatalogTarget' :: Text -> NonEmpty Text -> CatalogTarget

-- | The name of the database to be synchronized.
[$sel:databaseName:CatalogTarget'] :: CatalogTarget -> Text

-- | A list of the tables to be synchronized.
[$sel:tables:CatalogTarget'] :: CatalogTarget -> NonEmpty Text

-- | Create a value of <a>CatalogTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:databaseName:CatalogTarget'</a>,
--   <a>catalogTarget_databaseName</a> - The name of the database to be
--   synchronized.
--   
--   <a>$sel:tables:CatalogTarget'</a>, <a>catalogTarget_tables</a> - A
--   list of the tables to be synchronized.
newCatalogTarget :: Text -> NonEmpty Text -> CatalogTarget

-- | The name of the database to be synchronized.
catalogTarget_databaseName :: Lens' CatalogTarget Text

-- | A list of the tables to be synchronized.
catalogTarget_tables :: Lens' CatalogTarget (NonEmpty Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.CatalogTarget.CatalogTarget
instance GHC.Show.Show Network.AWS.Glue.Types.CatalogTarget.CatalogTarget
instance GHC.Read.Read Network.AWS.Glue.Types.CatalogTarget.CatalogTarget
instance GHC.Classes.Eq Network.AWS.Glue.Types.CatalogTarget.CatalogTarget
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.CatalogTarget.CatalogTarget
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CatalogTarget.CatalogTarget
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CatalogTarget.CatalogTarget
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.CatalogTarget.CatalogTarget


module Network.AWS.Glue.Types.CloudWatchEncryptionMode
newtype CloudWatchEncryptionMode
CloudWatchEncryptionMode' :: Text -> CloudWatchEncryptionMode
[fromCloudWatchEncryptionMode] :: CloudWatchEncryptionMode -> Text
pattern CloudWatchEncryptionMode_DISABLED :: CloudWatchEncryptionMode
pattern CloudWatchEncryptionMode_SSE_KMS :: CloudWatchEncryptionMode
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.CloudWatchEncryptionMode.CloudWatchEncryptionMode
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.CloudWatchEncryptionMode.CloudWatchEncryptionMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.CloudWatchEncryptionMode.CloudWatchEncryptionMode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.CloudWatchEncryptionMode.CloudWatchEncryptionMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.CloudWatchEncryptionMode.CloudWatchEncryptionMode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.CloudWatchEncryptionMode.CloudWatchEncryptionMode
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.CloudWatchEncryptionMode.CloudWatchEncryptionMode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.CloudWatchEncryptionMode.CloudWatchEncryptionMode
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.CloudWatchEncryptionMode.CloudWatchEncryptionMode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.CloudWatchEncryptionMode.CloudWatchEncryptionMode
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.CloudWatchEncryptionMode.CloudWatchEncryptionMode
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.CloudWatchEncryptionMode.CloudWatchEncryptionMode
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CloudWatchEncryptionMode.CloudWatchEncryptionMode
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CloudWatchEncryptionMode.CloudWatchEncryptionMode
instance GHC.Generics.Generic Network.AWS.Glue.Types.CloudWatchEncryptionMode.CloudWatchEncryptionMode
instance GHC.Classes.Ord Network.AWS.Glue.Types.CloudWatchEncryptionMode.CloudWatchEncryptionMode
instance GHC.Classes.Eq Network.AWS.Glue.Types.CloudWatchEncryptionMode.CloudWatchEncryptionMode
instance GHC.Read.Read Network.AWS.Glue.Types.CloudWatchEncryptionMode.CloudWatchEncryptionMode
instance GHC.Show.Show Network.AWS.Glue.Types.CloudWatchEncryptionMode.CloudWatchEncryptionMode


module Network.AWS.Glue.Types.CloudWatchEncryption

-- | Specifies how Amazon CloudWatch data should be encrypted.
--   
--   <i>See:</i> <a>newCloudWatchEncryption</a> smart constructor.
data CloudWatchEncryption
CloudWatchEncryption' :: Maybe CloudWatchEncryptionMode -> Maybe Text -> CloudWatchEncryption

-- | The encryption mode to use for CloudWatch data.
[$sel:cloudWatchEncryptionMode:CloudWatchEncryption'] :: CloudWatchEncryption -> Maybe CloudWatchEncryptionMode

-- | The Amazon Resource Name (ARN) of the KMS key to be used to encrypt
--   the data.
[$sel:kmsKeyArn:CloudWatchEncryption'] :: CloudWatchEncryption -> Maybe Text

-- | Create a value of <a>CloudWatchEncryption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cloudWatchEncryptionMode:CloudWatchEncryption'</a>,
--   <a>cloudWatchEncryption_cloudWatchEncryptionMode</a> - The encryption
--   mode to use for CloudWatch data.
--   
--   <a>$sel:kmsKeyArn:CloudWatchEncryption'</a>,
--   <a>cloudWatchEncryption_kmsKeyArn</a> - The Amazon Resource Name (ARN)
--   of the KMS key to be used to encrypt the data.
newCloudWatchEncryption :: CloudWatchEncryption

-- | The encryption mode to use for CloudWatch data.
cloudWatchEncryption_cloudWatchEncryptionMode :: Lens' CloudWatchEncryption (Maybe CloudWatchEncryptionMode)

-- | The Amazon Resource Name (ARN) of the KMS key to be used to encrypt
--   the data.
cloudWatchEncryption_kmsKeyArn :: Lens' CloudWatchEncryption (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.CloudWatchEncryption.CloudWatchEncryption
instance GHC.Show.Show Network.AWS.Glue.Types.CloudWatchEncryption.CloudWatchEncryption
instance GHC.Read.Read Network.AWS.Glue.Types.CloudWatchEncryption.CloudWatchEncryption
instance GHC.Classes.Eq Network.AWS.Glue.Types.CloudWatchEncryption.CloudWatchEncryption
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.CloudWatchEncryption.CloudWatchEncryption
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CloudWatchEncryption.CloudWatchEncryption
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CloudWatchEncryption.CloudWatchEncryption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.CloudWatchEncryption.CloudWatchEncryption


module Network.AWS.Glue.Types.CodeGenEdge

-- | Represents a directional edge in a directed acyclic graph (DAG).
--   
--   <i>See:</i> <a>newCodeGenEdge</a> smart constructor.
data CodeGenEdge
CodeGenEdge' :: Maybe Text -> Text -> Text -> CodeGenEdge

-- | The target of the edge.
[$sel:targetParameter:CodeGenEdge'] :: CodeGenEdge -> Maybe Text

-- | The ID of the node at which the edge starts.
[$sel:source:CodeGenEdge'] :: CodeGenEdge -> Text

-- | The ID of the node at which the edge ends.
[$sel:target:CodeGenEdge'] :: CodeGenEdge -> Text

-- | Create a value of <a>CodeGenEdge</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetParameter:CodeGenEdge'</a>,
--   <a>codeGenEdge_targetParameter</a> - The target of the edge.
--   
--   <a>$sel:source:CodeGenEdge'</a>, <a>codeGenEdge_source</a> - The ID of
--   the node at which the edge starts.
--   
--   <a>$sel:target:CodeGenEdge'</a>, <a>codeGenEdge_target</a> - The ID of
--   the node at which the edge ends.
newCodeGenEdge :: Text -> Text -> CodeGenEdge

-- | The target of the edge.
codeGenEdge_targetParameter :: Lens' CodeGenEdge (Maybe Text)

-- | The ID of the node at which the edge starts.
codeGenEdge_source :: Lens' CodeGenEdge Text

-- | The ID of the node at which the edge ends.
codeGenEdge_target :: Lens' CodeGenEdge Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.CodeGenEdge.CodeGenEdge
instance GHC.Show.Show Network.AWS.Glue.Types.CodeGenEdge.CodeGenEdge
instance GHC.Read.Read Network.AWS.Glue.Types.CodeGenEdge.CodeGenEdge
instance GHC.Classes.Eq Network.AWS.Glue.Types.CodeGenEdge.CodeGenEdge
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.CodeGenEdge.CodeGenEdge
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CodeGenEdge.CodeGenEdge
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CodeGenEdge.CodeGenEdge
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.CodeGenEdge.CodeGenEdge


module Network.AWS.Glue.Types.CodeGenNodeArg

-- | An argument or property of a node.
--   
--   <i>See:</i> <a>newCodeGenNodeArg</a> smart constructor.
data CodeGenNodeArg
CodeGenNodeArg' :: Maybe Bool -> Text -> Text -> CodeGenNodeArg

-- | True if the value is used as a parameter.
[$sel:param:CodeGenNodeArg'] :: CodeGenNodeArg -> Maybe Bool

-- | The name of the argument or property.
[$sel:name:CodeGenNodeArg'] :: CodeGenNodeArg -> Text

-- | The value of the argument or property.
[$sel:value:CodeGenNodeArg'] :: CodeGenNodeArg -> Text

-- | Create a value of <a>CodeGenNodeArg</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:param:CodeGenNodeArg'</a>, <a>codeGenNodeArg_param</a> - True
--   if the value is used as a parameter.
--   
--   <a>$sel:name:CodeGenNodeArg'</a>, <a>codeGenNodeArg_name</a> - The
--   name of the argument or property.
--   
--   <a>$sel:value:CodeGenNodeArg'</a>, <a>codeGenNodeArg_value</a> - The
--   value of the argument or property.
newCodeGenNodeArg :: Text -> Text -> CodeGenNodeArg

-- | True if the value is used as a parameter.
codeGenNodeArg_param :: Lens' CodeGenNodeArg (Maybe Bool)

-- | The name of the argument or property.
codeGenNodeArg_name :: Lens' CodeGenNodeArg Text

-- | The value of the argument or property.
codeGenNodeArg_value :: Lens' CodeGenNodeArg Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.CodeGenNodeArg.CodeGenNodeArg
instance GHC.Show.Show Network.AWS.Glue.Types.CodeGenNodeArg.CodeGenNodeArg
instance GHC.Read.Read Network.AWS.Glue.Types.CodeGenNodeArg.CodeGenNodeArg
instance GHC.Classes.Eq Network.AWS.Glue.Types.CodeGenNodeArg.CodeGenNodeArg
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.CodeGenNodeArg.CodeGenNodeArg
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CodeGenNodeArg.CodeGenNodeArg
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CodeGenNodeArg.CodeGenNodeArg
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.CodeGenNodeArg.CodeGenNodeArg


module Network.AWS.Glue.Types.CodeGenNode

-- | Represents a node in a directed acyclic graph (DAG)
--   
--   <i>See:</i> <a>newCodeGenNode</a> smart constructor.
data CodeGenNode
CodeGenNode' :: Maybe Int -> Text -> Text -> [CodeGenNodeArg] -> CodeGenNode

-- | The line number of the node.
[$sel:lineNumber:CodeGenNode'] :: CodeGenNode -> Maybe Int

-- | A node identifier that is unique within the node's graph.
[$sel:id:CodeGenNode'] :: CodeGenNode -> Text

-- | The type of node that this is.
[$sel:nodeType:CodeGenNode'] :: CodeGenNode -> Text

-- | Properties of the node, in the form of name-value pairs.
[$sel:args:CodeGenNode'] :: CodeGenNode -> [CodeGenNodeArg]

-- | Create a value of <a>CodeGenNode</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lineNumber:CodeGenNode'</a>, <a>codeGenNode_lineNumber</a> -
--   The line number of the node.
--   
--   <a>$sel:id:CodeGenNode'</a>, <a>codeGenNode_id</a> - A node identifier
--   that is unique within the node's graph.
--   
--   <a>$sel:nodeType:CodeGenNode'</a>, <a>codeGenNode_nodeType</a> - The
--   type of node that this is.
--   
--   <a>$sel:args:CodeGenNode'</a>, <a>codeGenNode_args</a> - Properties of
--   the node, in the form of name-value pairs.
newCodeGenNode :: Text -> Text -> CodeGenNode

-- | The line number of the node.
codeGenNode_lineNumber :: Lens' CodeGenNode (Maybe Int)

-- | A node identifier that is unique within the node's graph.
codeGenNode_id :: Lens' CodeGenNode Text

-- | The type of node that this is.
codeGenNode_nodeType :: Lens' CodeGenNode Text

-- | Properties of the node, in the form of name-value pairs.
codeGenNode_args :: Lens' CodeGenNode [CodeGenNodeArg]
instance GHC.Generics.Generic Network.AWS.Glue.Types.CodeGenNode.CodeGenNode
instance GHC.Show.Show Network.AWS.Glue.Types.CodeGenNode.CodeGenNode
instance GHC.Read.Read Network.AWS.Glue.Types.CodeGenNode.CodeGenNode
instance GHC.Classes.Eq Network.AWS.Glue.Types.CodeGenNode.CodeGenNode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.CodeGenNode.CodeGenNode
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CodeGenNode.CodeGenNode
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CodeGenNode.CodeGenNode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.CodeGenNode.CodeGenNode


module Network.AWS.Glue.Types.Column

-- | A column in a <tt>Table</tt>.
--   
--   <i>See:</i> <a>newColumn</a> smart constructor.
data Column
Column' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Text -> Column

-- | These key-value pairs define properties associated with the column.
[$sel:parameters:Column'] :: Column -> Maybe (HashMap Text Text)

-- | The data type of the <tt>Column</tt>.
[$sel:type':Column'] :: Column -> Maybe Text

-- | A free-form text comment.
[$sel:comment:Column'] :: Column -> Maybe Text

-- | The name of the <tt>Column</tt>.
[$sel:name:Column'] :: Column -> Text

-- | Create a value of <a>Column</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:Column'</a>, <a>column_parameters</a> - These
--   key-value pairs define properties associated with the column.
--   
--   <a>$sel:type':Column'</a>, <a>column_type</a> - The data type of the
--   <tt>Column</tt>.
--   
--   <a>$sel:comment:Column'</a>, <a>column_comment</a> - A free-form text
--   comment.
--   
--   <a>$sel:name:Column'</a>, <a>column_name</a> - The name of the
--   <tt>Column</tt>.
newColumn :: Text -> Column

-- | These key-value pairs define properties associated with the column.
column_parameters :: Lens' Column (Maybe (HashMap Text Text))

-- | The data type of the <tt>Column</tt>.
column_type :: Lens' Column (Maybe Text)

-- | A free-form text comment.
column_comment :: Lens' Column (Maybe Text)

-- | The name of the <tt>Column</tt>.
column_name :: Lens' Column Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.Column.Column
instance GHC.Show.Show Network.AWS.Glue.Types.Column.Column
instance GHC.Read.Read Network.AWS.Glue.Types.Column.Column
instance GHC.Classes.Eq Network.AWS.Glue.Types.Column.Column
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Column.Column
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Column.Column
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Column.Column
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.Column.Column


module Network.AWS.Glue.Types.ColumnImportance

-- | A structure containing the column name and column importance score for
--   a column.
--   
--   Column importance helps you understand how columns contribute to your
--   model, by identifying which columns in your records are more important
--   than others.
--   
--   <i>See:</i> <a>newColumnImportance</a> smart constructor.
data ColumnImportance
ColumnImportance' :: Maybe Double -> Maybe Text -> ColumnImportance

-- | The column importance score for the column, as a decimal.
[$sel:importance:ColumnImportance'] :: ColumnImportance -> Maybe Double

-- | The name of a column.
[$sel:columnName:ColumnImportance'] :: ColumnImportance -> Maybe Text

-- | Create a value of <a>ColumnImportance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:importance:ColumnImportance'</a>,
--   <a>columnImportance_importance</a> - The column importance score for
--   the column, as a decimal.
--   
--   <a>$sel:columnName:ColumnImportance'</a>,
--   <a>columnImportance_columnName</a> - The name of a column.
newColumnImportance :: ColumnImportance

-- | The column importance score for the column, as a decimal.
columnImportance_importance :: Lens' ColumnImportance (Maybe Double)

-- | The name of a column.
columnImportance_columnName :: Lens' ColumnImportance (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.ColumnImportance.ColumnImportance
instance GHC.Show.Show Network.AWS.Glue.Types.ColumnImportance.ColumnImportance
instance GHC.Read.Read Network.AWS.Glue.Types.ColumnImportance.ColumnImportance
instance GHC.Classes.Eq Network.AWS.Glue.Types.ColumnImportance.ColumnImportance
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ColumnImportance.ColumnImportance
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ColumnImportance.ColumnImportance
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ColumnImportance.ColumnImportance


module Network.AWS.Glue.Types.ColumnStatisticsType
newtype ColumnStatisticsType
ColumnStatisticsType' :: Text -> ColumnStatisticsType
[fromColumnStatisticsType] :: ColumnStatisticsType -> Text
pattern ColumnStatisticsType_BINARY :: ColumnStatisticsType
pattern ColumnStatisticsType_BOOLEAN :: ColumnStatisticsType
pattern ColumnStatisticsType_DATE :: ColumnStatisticsType
pattern ColumnStatisticsType_DECIMAL :: ColumnStatisticsType
pattern ColumnStatisticsType_DOUBLE :: ColumnStatisticsType
pattern ColumnStatisticsType_LONG :: ColumnStatisticsType
pattern ColumnStatisticsType_STRING :: ColumnStatisticsType
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.ColumnStatisticsType.ColumnStatisticsType
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.ColumnStatisticsType.ColumnStatisticsType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.ColumnStatisticsType.ColumnStatisticsType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.ColumnStatisticsType.ColumnStatisticsType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.ColumnStatisticsType.ColumnStatisticsType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ColumnStatisticsType.ColumnStatisticsType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.ColumnStatisticsType.ColumnStatisticsType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.ColumnStatisticsType.ColumnStatisticsType
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.ColumnStatisticsType.ColumnStatisticsType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.ColumnStatisticsType.ColumnStatisticsType
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.ColumnStatisticsType.ColumnStatisticsType
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.ColumnStatisticsType.ColumnStatisticsType
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ColumnStatisticsType.ColumnStatisticsType
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ColumnStatisticsType.ColumnStatisticsType
instance GHC.Generics.Generic Network.AWS.Glue.Types.ColumnStatisticsType.ColumnStatisticsType
instance GHC.Classes.Ord Network.AWS.Glue.Types.ColumnStatisticsType.ColumnStatisticsType
instance GHC.Classes.Eq Network.AWS.Glue.Types.ColumnStatisticsType.ColumnStatisticsType
instance GHC.Read.Read Network.AWS.Glue.Types.ColumnStatisticsType.ColumnStatisticsType
instance GHC.Show.Show Network.AWS.Glue.Types.ColumnStatisticsType.ColumnStatisticsType


module Network.AWS.Glue.Types.Comparator
newtype Comparator
Comparator' :: Text -> Comparator
[fromComparator] :: Comparator -> Text
pattern Comparator_EQUALS :: Comparator
pattern Comparator_GREATER_THAN :: Comparator
pattern Comparator_GREATER_THAN_EQUALS :: Comparator
pattern Comparator_LESS_THAN :: Comparator
pattern Comparator_LESS_THAN_EQUALS :: Comparator
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.Comparator.Comparator
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.Comparator.Comparator
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.Comparator.Comparator
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.Comparator.Comparator
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.Comparator.Comparator
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Comparator.Comparator
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.Comparator.Comparator
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.Comparator.Comparator
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.Comparator.Comparator
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.Comparator.Comparator
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.Comparator.Comparator
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.Comparator.Comparator
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Comparator.Comparator
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Comparator.Comparator
instance GHC.Generics.Generic Network.AWS.Glue.Types.Comparator.Comparator
instance GHC.Classes.Ord Network.AWS.Glue.Types.Comparator.Comparator
instance GHC.Classes.Eq Network.AWS.Glue.Types.Comparator.Comparator
instance GHC.Read.Read Network.AWS.Glue.Types.Comparator.Comparator
instance GHC.Show.Show Network.AWS.Glue.Types.Comparator.Comparator


module Network.AWS.Glue.Types.Compatibility
newtype Compatibility
Compatibility' :: Text -> Compatibility
[fromCompatibility] :: Compatibility -> Text
pattern Compatibility_BACKWARD :: Compatibility
pattern Compatibility_BACKWARD_ALL :: Compatibility
pattern Compatibility_DISABLED :: Compatibility
pattern Compatibility_FORWARD :: Compatibility
pattern Compatibility_FORWARD_ALL :: Compatibility
pattern Compatibility_FULL :: Compatibility
pattern Compatibility_FULL_ALL :: Compatibility
pattern Compatibility_NONE :: Compatibility
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.Compatibility.Compatibility
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.Compatibility.Compatibility
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.Compatibility.Compatibility
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.Compatibility.Compatibility
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.Compatibility.Compatibility
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Compatibility.Compatibility
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.Compatibility.Compatibility
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.Compatibility.Compatibility
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.Compatibility.Compatibility
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.Compatibility.Compatibility
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.Compatibility.Compatibility
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.Compatibility.Compatibility
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Compatibility.Compatibility
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Compatibility.Compatibility
instance GHC.Generics.Generic Network.AWS.Glue.Types.Compatibility.Compatibility
instance GHC.Classes.Ord Network.AWS.Glue.Types.Compatibility.Compatibility
instance GHC.Classes.Eq Network.AWS.Glue.Types.Compatibility.Compatibility
instance GHC.Read.Read Network.AWS.Glue.Types.Compatibility.Compatibility
instance GHC.Show.Show Network.AWS.Glue.Types.Compatibility.Compatibility


module Network.AWS.Glue.Types.ConfusionMatrix

-- | The confusion matrix shows you what your transform is predicting
--   accurately and what types of errors it is making.
--   
--   For more information, see <a>Confusion matrix</a> in Wikipedia.
--   
--   <i>See:</i> <a>newConfusionMatrix</a> smart constructor.
data ConfusionMatrix
ConfusionMatrix' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> ConfusionMatrix

-- | The number of nonmatches in the data that the transform correctly
--   rejected, in the confusion matrix for your transform.
[$sel:numTrueNegatives:ConfusionMatrix'] :: ConfusionMatrix -> Maybe Integer

-- | The number of matches in the data that the transform didn't find, in
--   the confusion matrix for your transform.
[$sel:numFalseNegatives:ConfusionMatrix'] :: ConfusionMatrix -> Maybe Integer

-- | The number of matches in the data that the transform correctly found,
--   in the confusion matrix for your transform.
[$sel:numTruePositives:ConfusionMatrix'] :: ConfusionMatrix -> Maybe Integer

-- | The number of nonmatches in the data that the transform incorrectly
--   classified as a match, in the confusion matrix for your transform.
[$sel:numFalsePositives:ConfusionMatrix'] :: ConfusionMatrix -> Maybe Integer

-- | Create a value of <a>ConfusionMatrix</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numTrueNegatives:ConfusionMatrix'</a>,
--   <a>confusionMatrix_numTrueNegatives</a> - The number of nonmatches in
--   the data that the transform correctly rejected, in the confusion
--   matrix for your transform.
--   
--   <a>$sel:numFalseNegatives:ConfusionMatrix'</a>,
--   <a>confusionMatrix_numFalseNegatives</a> - The number of matches in
--   the data that the transform didn't find, in the confusion matrix for
--   your transform.
--   
--   <a>$sel:numTruePositives:ConfusionMatrix'</a>,
--   <a>confusionMatrix_numTruePositives</a> - The number of matches in the
--   data that the transform correctly found, in the confusion matrix for
--   your transform.
--   
--   <a>$sel:numFalsePositives:ConfusionMatrix'</a>,
--   <a>confusionMatrix_numFalsePositives</a> - The number of nonmatches in
--   the data that the transform incorrectly classified as a match, in the
--   confusion matrix for your transform.
newConfusionMatrix :: ConfusionMatrix

-- | The number of nonmatches in the data that the transform correctly
--   rejected, in the confusion matrix for your transform.
confusionMatrix_numTrueNegatives :: Lens' ConfusionMatrix (Maybe Integer)

-- | The number of matches in the data that the transform didn't find, in
--   the confusion matrix for your transform.
confusionMatrix_numFalseNegatives :: Lens' ConfusionMatrix (Maybe Integer)

-- | The number of matches in the data that the transform correctly found,
--   in the confusion matrix for your transform.
confusionMatrix_numTruePositives :: Lens' ConfusionMatrix (Maybe Integer)

-- | The number of nonmatches in the data that the transform incorrectly
--   classified as a match, in the confusion matrix for your transform.
confusionMatrix_numFalsePositives :: Lens' ConfusionMatrix (Maybe Integer)
instance GHC.Generics.Generic Network.AWS.Glue.Types.ConfusionMatrix.ConfusionMatrix
instance GHC.Show.Show Network.AWS.Glue.Types.ConfusionMatrix.ConfusionMatrix
instance GHC.Read.Read Network.AWS.Glue.Types.ConfusionMatrix.ConfusionMatrix
instance GHC.Classes.Eq Network.AWS.Glue.Types.ConfusionMatrix.ConfusionMatrix
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ConfusionMatrix.ConfusionMatrix
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ConfusionMatrix.ConfusionMatrix
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ConfusionMatrix.ConfusionMatrix


module Network.AWS.Glue.Types.ConnectionPasswordEncryption

-- | The data structure used by the Data Catalog to encrypt the password as
--   part of <tt>CreateConnection</tt> or <tt>UpdateConnection</tt> and
--   store it in the <tt>ENCRYPTED_PASSWORD</tt> field in the connection
--   properties. You can enable catalog encryption or only password
--   encryption.
--   
--   When a <tt>CreationConnection</tt> request arrives containing a
--   password, the Data Catalog first encrypts the password using your KMS
--   key. It then encrypts the whole connection object again if catalog
--   encryption is also enabled.
--   
--   This encryption requires that you set KMS key permissions to enable or
--   restrict access on the password key according to your security
--   requirements. For example, you might want only administrators to have
--   decrypt permission on the password key.
--   
--   <i>See:</i> <a>newConnectionPasswordEncryption</a> smart constructor.
data ConnectionPasswordEncryption
ConnectionPasswordEncryption' :: Maybe Text -> Bool -> ConnectionPasswordEncryption

-- | An KMS key that is used to encrypt the connection password.
--   
--   If connection password protection is enabled, the caller of
--   <tt>CreateConnection</tt> and <tt>UpdateConnection</tt> needs at least
--   <tt>kms:Encrypt</tt> permission on the specified KMS key, to encrypt
--   passwords before storing them in the Data Catalog.
--   
--   You can set the decrypt permission to enable or restrict access on the
--   password key according to your security requirements.
[$sel:awsKmsKeyId:ConnectionPasswordEncryption'] :: ConnectionPasswordEncryption -> Maybe Text

-- | When the <tt>ReturnConnectionPasswordEncrypted</tt> flag is set to
--   "true", passwords remain encrypted in the responses of
--   <tt>GetConnection</tt> and <tt>GetConnections</tt>. This encryption
--   takes effect independently from catalog encryption.
[$sel:returnConnectionPasswordEncrypted:ConnectionPasswordEncryption'] :: ConnectionPasswordEncryption -> Bool

-- | Create a value of <a>ConnectionPasswordEncryption</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:awsKmsKeyId:ConnectionPasswordEncryption'</a>,
--   <a>connectionPasswordEncryption_awsKmsKeyId</a> - An KMS key that is
--   used to encrypt the connection password.
--   
--   If connection password protection is enabled, the caller of
--   <tt>CreateConnection</tt> and <tt>UpdateConnection</tt> needs at least
--   <tt>kms:Encrypt</tt> permission on the specified KMS key, to encrypt
--   passwords before storing them in the Data Catalog.
--   
--   You can set the decrypt permission to enable or restrict access on the
--   password key according to your security requirements.
--   
--   
--   <a>$sel:returnConnectionPasswordEncrypted:ConnectionPasswordEncryption'</a>,
--   <a>connectionPasswordEncryption_returnConnectionPasswordEncrypted</a>
--   - When the <tt>ReturnConnectionPasswordEncrypted</tt> flag is set to
--   "true", passwords remain encrypted in the responses of
--   <tt>GetConnection</tt> and <tt>GetConnections</tt>. This encryption
--   takes effect independently from catalog encryption.
newConnectionPasswordEncryption :: Bool -> ConnectionPasswordEncryption

-- | An KMS key that is used to encrypt the connection password.
--   
--   If connection password protection is enabled, the caller of
--   <tt>CreateConnection</tt> and <tt>UpdateConnection</tt> needs at least
--   <tt>kms:Encrypt</tt> permission on the specified KMS key, to encrypt
--   passwords before storing them in the Data Catalog.
--   
--   You can set the decrypt permission to enable or restrict access on the
--   password key according to your security requirements.
connectionPasswordEncryption_awsKmsKeyId :: Lens' ConnectionPasswordEncryption (Maybe Text)

-- | When the <tt>ReturnConnectionPasswordEncrypted</tt> flag is set to
--   "true", passwords remain encrypted in the responses of
--   <tt>GetConnection</tt> and <tt>GetConnections</tt>. This encryption
--   takes effect independently from catalog encryption.
connectionPasswordEncryption_returnConnectionPasswordEncrypted :: Lens' ConnectionPasswordEncryption Bool
instance GHC.Generics.Generic Network.AWS.Glue.Types.ConnectionPasswordEncryption.ConnectionPasswordEncryption
instance GHC.Show.Show Network.AWS.Glue.Types.ConnectionPasswordEncryption.ConnectionPasswordEncryption
instance GHC.Read.Read Network.AWS.Glue.Types.ConnectionPasswordEncryption.ConnectionPasswordEncryption
instance GHC.Classes.Eq Network.AWS.Glue.Types.ConnectionPasswordEncryption.ConnectionPasswordEncryption
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ConnectionPasswordEncryption.ConnectionPasswordEncryption
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ConnectionPasswordEncryption.ConnectionPasswordEncryption
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ConnectionPasswordEncryption.ConnectionPasswordEncryption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.ConnectionPasswordEncryption.ConnectionPasswordEncryption


module Network.AWS.Glue.Types.ConnectionPropertyKey
newtype ConnectionPropertyKey
ConnectionPropertyKey' :: Text -> ConnectionPropertyKey
[fromConnectionPropertyKey] :: ConnectionPropertyKey -> Text
pattern ConnectionPropertyKey_CONFIG_FILES :: ConnectionPropertyKey
pattern ConnectionPropertyKey_CONNECTION_URL :: ConnectionPropertyKey
pattern ConnectionPropertyKey_CONNECTOR_CLASS_NAME :: ConnectionPropertyKey
pattern ConnectionPropertyKey_CONNECTOR_TYPE :: ConnectionPropertyKey
pattern ConnectionPropertyKey_CONNECTOR_URL :: ConnectionPropertyKey
pattern ConnectionPropertyKey_CUSTOM_JDBC_CERT :: ConnectionPropertyKey
pattern ConnectionPropertyKey_CUSTOM_JDBC_CERT_STRING :: ConnectionPropertyKey
pattern ConnectionPropertyKey_ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD :: ConnectionPropertyKey
pattern ConnectionPropertyKey_ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD :: ConnectionPropertyKey
pattern ConnectionPropertyKey_ENCRYPTED_PASSWORD :: ConnectionPropertyKey
pattern ConnectionPropertyKey_HOST :: ConnectionPropertyKey
pattern ConnectionPropertyKey_INSTANCE_ID :: ConnectionPropertyKey
pattern ConnectionPropertyKey_JDBC_CONNECTION_URL :: ConnectionPropertyKey
pattern ConnectionPropertyKey_JDBC_DRIVER_CLASS_NAME :: ConnectionPropertyKey
pattern ConnectionPropertyKey_JDBC_DRIVER_JAR_URI :: ConnectionPropertyKey
pattern ConnectionPropertyKey_JDBC_ENFORCE_SSL :: ConnectionPropertyKey
pattern ConnectionPropertyKey_JDBC_ENGINE :: ConnectionPropertyKey
pattern ConnectionPropertyKey_JDBC_ENGINE_VERSION :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_BOOTSTRAP_SERVERS :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_CLIENT_KEYSTORE :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_CLIENT_KEYSTORE_PASSWORD :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_CLIENT_KEY_PASSWORD :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_CUSTOM_CERT :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_SKIP_CUSTOM_CERT_VALIDATION :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_SSL_ENABLED :: ConnectionPropertyKey
pattern ConnectionPropertyKey_PASSWORD :: ConnectionPropertyKey
pattern ConnectionPropertyKey_PORT :: ConnectionPropertyKey
pattern ConnectionPropertyKey_SECRET_ID :: ConnectionPropertyKey
pattern ConnectionPropertyKey_SKIP_CUSTOM_JDBC_CERT_VALIDATION :: ConnectionPropertyKey
pattern ConnectionPropertyKey_USERNAME :: ConnectionPropertyKey
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.ConnectionPropertyKey.ConnectionPropertyKey
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.ConnectionPropertyKey.ConnectionPropertyKey
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.ConnectionPropertyKey.ConnectionPropertyKey
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.ConnectionPropertyKey.ConnectionPropertyKey
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.ConnectionPropertyKey.ConnectionPropertyKey
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ConnectionPropertyKey.ConnectionPropertyKey
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.ConnectionPropertyKey.ConnectionPropertyKey
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.ConnectionPropertyKey.ConnectionPropertyKey
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.ConnectionPropertyKey.ConnectionPropertyKey
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.ConnectionPropertyKey.ConnectionPropertyKey
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.ConnectionPropertyKey.ConnectionPropertyKey
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.ConnectionPropertyKey.ConnectionPropertyKey
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ConnectionPropertyKey.ConnectionPropertyKey
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ConnectionPropertyKey.ConnectionPropertyKey
instance GHC.Generics.Generic Network.AWS.Glue.Types.ConnectionPropertyKey.ConnectionPropertyKey
instance GHC.Classes.Ord Network.AWS.Glue.Types.ConnectionPropertyKey.ConnectionPropertyKey
instance GHC.Classes.Eq Network.AWS.Glue.Types.ConnectionPropertyKey.ConnectionPropertyKey
instance GHC.Read.Read Network.AWS.Glue.Types.ConnectionPropertyKey.ConnectionPropertyKey
instance GHC.Show.Show Network.AWS.Glue.Types.ConnectionPropertyKey.ConnectionPropertyKey


module Network.AWS.Glue.Types.ConnectionType
newtype ConnectionType
ConnectionType' :: Text -> ConnectionType
[fromConnectionType] :: ConnectionType -> Text
pattern ConnectionType_CUSTOM :: ConnectionType
pattern ConnectionType_JDBC :: ConnectionType
pattern ConnectionType_KAFKA :: ConnectionType
pattern ConnectionType_MARKETPLACE :: ConnectionType
pattern ConnectionType_MONGODB :: ConnectionType
pattern ConnectionType_NETWORK :: ConnectionType
pattern ConnectionType_SFTP :: ConnectionType
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.ConnectionType.ConnectionType
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.ConnectionType.ConnectionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.ConnectionType.ConnectionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.ConnectionType.ConnectionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.ConnectionType.ConnectionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ConnectionType.ConnectionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.ConnectionType.ConnectionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.ConnectionType.ConnectionType
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.ConnectionType.ConnectionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.ConnectionType.ConnectionType
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.ConnectionType.ConnectionType
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.ConnectionType.ConnectionType
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ConnectionType.ConnectionType
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ConnectionType.ConnectionType
instance GHC.Generics.Generic Network.AWS.Glue.Types.ConnectionType.ConnectionType
instance GHC.Classes.Ord Network.AWS.Glue.Types.ConnectionType.ConnectionType
instance GHC.Classes.Eq Network.AWS.Glue.Types.ConnectionType.ConnectionType
instance GHC.Read.Read Network.AWS.Glue.Types.ConnectionType.ConnectionType
instance GHC.Show.Show Network.AWS.Glue.Types.ConnectionType.ConnectionType


module Network.AWS.Glue.Types.ConnectionsList

-- | Specifies the connections used by a job.
--   
--   <i>See:</i> <a>newConnectionsList</a> smart constructor.
data ConnectionsList
ConnectionsList' :: Maybe [Text] -> ConnectionsList

-- | A list of connections used by the job.
[$sel:connections:ConnectionsList'] :: ConnectionsList -> Maybe [Text]

-- | Create a value of <a>ConnectionsList</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connections:ConnectionsList'</a>,
--   <a>connectionsList_connections</a> - A list of connections used by the
--   job.
newConnectionsList :: ConnectionsList

-- | A list of connections used by the job.
connectionsList_connections :: Lens' ConnectionsList (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.Glue.Types.ConnectionsList.ConnectionsList
instance GHC.Show.Show Network.AWS.Glue.Types.ConnectionsList.ConnectionsList
instance GHC.Read.Read Network.AWS.Glue.Types.ConnectionsList.ConnectionsList
instance GHC.Classes.Eq Network.AWS.Glue.Types.ConnectionsList.ConnectionsList
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ConnectionsList.ConnectionsList
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ConnectionsList.ConnectionsList
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ConnectionsList.ConnectionsList
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.ConnectionsList.ConnectionsList


module Network.AWS.Glue.Types.CrawlState
newtype CrawlState
CrawlState' :: Text -> CrawlState
[fromCrawlState] :: CrawlState -> Text
pattern CrawlState_CANCELLED :: CrawlState
pattern CrawlState_CANCELLING :: CrawlState
pattern CrawlState_FAILED :: CrawlState
pattern CrawlState_RUNNING :: CrawlState
pattern CrawlState_SUCCEEDED :: CrawlState
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.CrawlState.CrawlState
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.CrawlState.CrawlState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.CrawlState.CrawlState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.CrawlState.CrawlState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.CrawlState.CrawlState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.CrawlState.CrawlState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.CrawlState.CrawlState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.CrawlState.CrawlState
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.CrawlState.CrawlState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.CrawlState.CrawlState
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.CrawlState.CrawlState
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.CrawlState.CrawlState
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CrawlState.CrawlState
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CrawlState.CrawlState
instance GHC.Generics.Generic Network.AWS.Glue.Types.CrawlState.CrawlState
instance GHC.Classes.Ord Network.AWS.Glue.Types.CrawlState.CrawlState
instance GHC.Classes.Eq Network.AWS.Glue.Types.CrawlState.CrawlState
instance GHC.Read.Read Network.AWS.Glue.Types.CrawlState.CrawlState
instance GHC.Show.Show Network.AWS.Glue.Types.CrawlState.CrawlState


module Network.AWS.Glue.Types.Crawl

-- | The details of a crawl in the workflow.
--   
--   <i>See:</i> <a>newCrawl</a> smart constructor.
data Crawl
Crawl' :: Maybe POSIX -> Maybe CrawlState -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Crawl

-- | The date and time on which the crawl completed.
[$sel:completedOn:Crawl'] :: Crawl -> Maybe POSIX

-- | The state of the crawler.
[$sel:state:Crawl'] :: Crawl -> Maybe CrawlState

-- | The date and time on which the crawl started.
[$sel:startedOn:Crawl'] :: Crawl -> Maybe POSIX

-- | The log stream associated with the crawl.
[$sel:logStream:Crawl'] :: Crawl -> Maybe Text

-- | The log group associated with the crawl.
[$sel:logGroup:Crawl'] :: Crawl -> Maybe Text

-- | The error message associated with the crawl.
[$sel:errorMessage:Crawl'] :: Crawl -> Maybe Text

-- | Create a value of <a>Crawl</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completedOn:Crawl'</a>, <a>crawl_completedOn</a> - The date
--   and time on which the crawl completed.
--   
--   <a>$sel:state:Crawl'</a>, <a>crawl_state</a> - The state of the
--   crawler.
--   
--   <a>$sel:startedOn:Crawl'</a>, <a>crawl_startedOn</a> - The date and
--   time on which the crawl started.
--   
--   <a>$sel:logStream:Crawl'</a>, <a>crawl_logStream</a> - The log stream
--   associated with the crawl.
--   
--   <a>$sel:logGroup:Crawl'</a>, <a>crawl_logGroup</a> - The log group
--   associated with the crawl.
--   
--   <a>$sel:errorMessage:Crawl'</a>, <a>crawl_errorMessage</a> - The error
--   message associated with the crawl.
newCrawl :: Crawl

-- | The date and time on which the crawl completed.
crawl_completedOn :: Lens' Crawl (Maybe UTCTime)

-- | The state of the crawler.
crawl_state :: Lens' Crawl (Maybe CrawlState)

-- | The date and time on which the crawl started.
crawl_startedOn :: Lens' Crawl (Maybe UTCTime)

-- | The log stream associated with the crawl.
crawl_logStream :: Lens' Crawl (Maybe Text)

-- | The log group associated with the crawl.
crawl_logGroup :: Lens' Crawl (Maybe Text)

-- | The error message associated with the crawl.
crawl_errorMessage :: Lens' Crawl (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.Crawl.Crawl
instance GHC.Show.Show Network.AWS.Glue.Types.Crawl.Crawl
instance GHC.Read.Read Network.AWS.Glue.Types.Crawl.Crawl
instance GHC.Classes.Eq Network.AWS.Glue.Types.Crawl.Crawl
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Crawl.Crawl
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Crawl.Crawl
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Crawl.Crawl


module Network.AWS.Glue.Types.CrawlerLineageSettings
newtype CrawlerLineageSettings
CrawlerLineageSettings' :: Text -> CrawlerLineageSettings
[fromCrawlerLineageSettings] :: CrawlerLineageSettings -> Text
pattern CrawlerLineageSettings_DISABLE :: CrawlerLineageSettings
pattern CrawlerLineageSettings_ENABLE :: CrawlerLineageSettings
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.CrawlerLineageSettings.CrawlerLineageSettings
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.CrawlerLineageSettings.CrawlerLineageSettings
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.CrawlerLineageSettings.CrawlerLineageSettings
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.CrawlerLineageSettings.CrawlerLineageSettings
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.CrawlerLineageSettings.CrawlerLineageSettings
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.CrawlerLineageSettings.CrawlerLineageSettings
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.CrawlerLineageSettings.CrawlerLineageSettings
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.CrawlerLineageSettings.CrawlerLineageSettings
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.CrawlerLineageSettings.CrawlerLineageSettings
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.CrawlerLineageSettings.CrawlerLineageSettings
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.CrawlerLineageSettings.CrawlerLineageSettings
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.CrawlerLineageSettings.CrawlerLineageSettings
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CrawlerLineageSettings.CrawlerLineageSettings
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CrawlerLineageSettings.CrawlerLineageSettings
instance GHC.Generics.Generic Network.AWS.Glue.Types.CrawlerLineageSettings.CrawlerLineageSettings
instance GHC.Classes.Ord Network.AWS.Glue.Types.CrawlerLineageSettings.CrawlerLineageSettings
instance GHC.Classes.Eq Network.AWS.Glue.Types.CrawlerLineageSettings.CrawlerLineageSettings
instance GHC.Read.Read Network.AWS.Glue.Types.CrawlerLineageSettings.CrawlerLineageSettings
instance GHC.Show.Show Network.AWS.Glue.Types.CrawlerLineageSettings.CrawlerLineageSettings


module Network.AWS.Glue.Types.CrawlerMetrics

-- | Metrics for a specified crawler.
--   
--   <i>See:</i> <a>newCrawlerMetrics</a> smart constructor.
data CrawlerMetrics
CrawlerMetrics' :: Maybe Double -> Maybe Natural -> Maybe Bool -> Maybe Double -> Maybe Double -> Maybe Natural -> Maybe Natural -> Maybe Text -> CrawlerMetrics

-- | The duration of the crawler's most recent run, in seconds.
[$sel:lastRuntimeSeconds:CrawlerMetrics'] :: CrawlerMetrics -> Maybe Double

-- | The number of tables created by this crawler.
[$sel:tablesCreated:CrawlerMetrics'] :: CrawlerMetrics -> Maybe Natural

-- | True if the crawler is still estimating how long it will take to
--   complete this run.
[$sel:stillEstimating:CrawlerMetrics'] :: CrawlerMetrics -> Maybe Bool

-- | The median duration of this crawler's runs, in seconds.
[$sel:medianRuntimeSeconds:CrawlerMetrics'] :: CrawlerMetrics -> Maybe Double

-- | The estimated time left to complete a running crawl.
[$sel:timeLeftSeconds:CrawlerMetrics'] :: CrawlerMetrics -> Maybe Double

-- | The number of tables deleted by this crawler.
[$sel:tablesDeleted:CrawlerMetrics'] :: CrawlerMetrics -> Maybe Natural

-- | The number of tables updated by this crawler.
[$sel:tablesUpdated:CrawlerMetrics'] :: CrawlerMetrics -> Maybe Natural

-- | The name of the crawler.
[$sel:crawlerName:CrawlerMetrics'] :: CrawlerMetrics -> Maybe Text

-- | Create a value of <a>CrawlerMetrics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastRuntimeSeconds:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_lastRuntimeSeconds</a> - The duration of the
--   crawler's most recent run, in seconds.
--   
--   <a>$sel:tablesCreated:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_tablesCreated</a> - The number of tables created by
--   this crawler.
--   
--   <a>$sel:stillEstimating:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_stillEstimating</a> - True if the crawler is still
--   estimating how long it will take to complete this run.
--   
--   <a>$sel:medianRuntimeSeconds:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_medianRuntimeSeconds</a> - The median duration of
--   this crawler's runs, in seconds.
--   
--   <a>$sel:timeLeftSeconds:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_timeLeftSeconds</a> - The estimated time left to
--   complete a running crawl.
--   
--   <a>$sel:tablesDeleted:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_tablesDeleted</a> - The number of tables deleted by
--   this crawler.
--   
--   <a>$sel:tablesUpdated:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_tablesUpdated</a> - The number of tables updated by
--   this crawler.
--   
--   <a>$sel:crawlerName:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_crawlerName</a> - The name of the crawler.
newCrawlerMetrics :: CrawlerMetrics

-- | The duration of the crawler's most recent run, in seconds.
crawlerMetrics_lastRuntimeSeconds :: Lens' CrawlerMetrics (Maybe Double)

-- | The number of tables created by this crawler.
crawlerMetrics_tablesCreated :: Lens' CrawlerMetrics (Maybe Natural)

-- | True if the crawler is still estimating how long it will take to
--   complete this run.
crawlerMetrics_stillEstimating :: Lens' CrawlerMetrics (Maybe Bool)

-- | The median duration of this crawler's runs, in seconds.
crawlerMetrics_medianRuntimeSeconds :: Lens' CrawlerMetrics (Maybe Double)

-- | The estimated time left to complete a running crawl.
crawlerMetrics_timeLeftSeconds :: Lens' CrawlerMetrics (Maybe Double)

-- | The number of tables deleted by this crawler.
crawlerMetrics_tablesDeleted :: Lens' CrawlerMetrics (Maybe Natural)

-- | The number of tables updated by this crawler.
crawlerMetrics_tablesUpdated :: Lens' CrawlerMetrics (Maybe Natural)

-- | The name of the crawler.
crawlerMetrics_crawlerName :: Lens' CrawlerMetrics (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.CrawlerMetrics.CrawlerMetrics
instance GHC.Show.Show Network.AWS.Glue.Types.CrawlerMetrics.CrawlerMetrics
instance GHC.Read.Read Network.AWS.Glue.Types.CrawlerMetrics.CrawlerMetrics
instance GHC.Classes.Eq Network.AWS.Glue.Types.CrawlerMetrics.CrawlerMetrics
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.CrawlerMetrics.CrawlerMetrics
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CrawlerMetrics.CrawlerMetrics
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CrawlerMetrics.CrawlerMetrics


module Network.AWS.Glue.Types.CrawlerNodeDetails

-- | The details of a Crawler node present in the workflow.
--   
--   <i>See:</i> <a>newCrawlerNodeDetails</a> smart constructor.
data CrawlerNodeDetails
CrawlerNodeDetails' :: Maybe [Crawl] -> CrawlerNodeDetails

-- | A list of crawls represented by the crawl node.
[$sel:crawls:CrawlerNodeDetails'] :: CrawlerNodeDetails -> Maybe [Crawl]

-- | Create a value of <a>CrawlerNodeDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawls:CrawlerNodeDetails'</a>,
--   <a>crawlerNodeDetails_crawls</a> - A list of crawls represented by the
--   crawl node.
newCrawlerNodeDetails :: CrawlerNodeDetails

-- | A list of crawls represented by the crawl node.
crawlerNodeDetails_crawls :: Lens' CrawlerNodeDetails (Maybe [Crawl])
instance GHC.Generics.Generic Network.AWS.Glue.Types.CrawlerNodeDetails.CrawlerNodeDetails
instance GHC.Show.Show Network.AWS.Glue.Types.CrawlerNodeDetails.CrawlerNodeDetails
instance GHC.Read.Read Network.AWS.Glue.Types.CrawlerNodeDetails.CrawlerNodeDetails
instance GHC.Classes.Eq Network.AWS.Glue.Types.CrawlerNodeDetails.CrawlerNodeDetails
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.CrawlerNodeDetails.CrawlerNodeDetails
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CrawlerNodeDetails.CrawlerNodeDetails
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CrawlerNodeDetails.CrawlerNodeDetails


module Network.AWS.Glue.Types.CrawlerState
newtype CrawlerState
CrawlerState' :: Text -> CrawlerState
[fromCrawlerState] :: CrawlerState -> Text
pattern CrawlerState_READY :: CrawlerState
pattern CrawlerState_RUNNING :: CrawlerState
pattern CrawlerState_STOPPING :: CrawlerState
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.CrawlerState.CrawlerState
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.CrawlerState.CrawlerState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.CrawlerState.CrawlerState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.CrawlerState.CrawlerState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.CrawlerState.CrawlerState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.CrawlerState.CrawlerState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.CrawlerState.CrawlerState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.CrawlerState.CrawlerState
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.CrawlerState.CrawlerState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.CrawlerState.CrawlerState
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.CrawlerState.CrawlerState
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.CrawlerState.CrawlerState
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CrawlerState.CrawlerState
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CrawlerState.CrawlerState
instance GHC.Generics.Generic Network.AWS.Glue.Types.CrawlerState.CrawlerState
instance GHC.Classes.Ord Network.AWS.Glue.Types.CrawlerState.CrawlerState
instance GHC.Classes.Eq Network.AWS.Glue.Types.CrawlerState.CrawlerState
instance GHC.Read.Read Network.AWS.Glue.Types.CrawlerState.CrawlerState
instance GHC.Show.Show Network.AWS.Glue.Types.CrawlerState.CrawlerState


module Network.AWS.Glue.Types.CreateGrokClassifierRequest

-- | Specifies a <tt>grok</tt> classifier for <tt>CreateClassifier</tt> to
--   create.
--   
--   <i>See:</i> <a>newCreateGrokClassifierRequest</a> smart constructor.
data CreateGrokClassifierRequest
CreateGrokClassifierRequest' :: Maybe Text -> Text -> Text -> Text -> CreateGrokClassifierRequest

-- | Optional custom grok patterns used by this classifier.
[$sel:customPatterns:CreateGrokClassifierRequest'] :: CreateGrokClassifierRequest -> Maybe Text

-- | An identifier of the data format that the classifier matches, such as
--   Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.
[$sel:classification:CreateGrokClassifierRequest'] :: CreateGrokClassifierRequest -> Text

-- | The name of the new classifier.
[$sel:name:CreateGrokClassifierRequest'] :: CreateGrokClassifierRequest -> Text

-- | The grok pattern used by this classifier.
[$sel:grokPattern:CreateGrokClassifierRequest'] :: CreateGrokClassifierRequest -> Text

-- | Create a value of <a>CreateGrokClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customPatterns:CreateGrokClassifierRequest'</a>,
--   <a>createGrokClassifierRequest_customPatterns</a> - Optional custom
--   grok patterns used by this classifier.
--   
--   <a>$sel:classification:CreateGrokClassifierRequest'</a>,
--   <a>createGrokClassifierRequest_classification</a> - An identifier of
--   the data format that the classifier matches, such as Twitter, JSON,
--   Omniture logs, Amazon CloudWatch Logs, and so on.
--   
--   <a>$sel:name:CreateGrokClassifierRequest'</a>,
--   <a>createGrokClassifierRequest_name</a> - The name of the new
--   classifier.
--   
--   <a>$sel:grokPattern:CreateGrokClassifierRequest'</a>,
--   <a>createGrokClassifierRequest_grokPattern</a> - The grok pattern used
--   by this classifier.
newCreateGrokClassifierRequest :: Text -> Text -> Text -> CreateGrokClassifierRequest

-- | Optional custom grok patterns used by this classifier.
createGrokClassifierRequest_customPatterns :: Lens' CreateGrokClassifierRequest (Maybe Text)

-- | An identifier of the data format that the classifier matches, such as
--   Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.
createGrokClassifierRequest_classification :: Lens' CreateGrokClassifierRequest Text

-- | The name of the new classifier.
createGrokClassifierRequest_name :: Lens' CreateGrokClassifierRequest Text

-- | The grok pattern used by this classifier.
createGrokClassifierRequest_grokPattern :: Lens' CreateGrokClassifierRequest Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.CreateGrokClassifierRequest.CreateGrokClassifierRequest
instance GHC.Show.Show Network.AWS.Glue.Types.CreateGrokClassifierRequest.CreateGrokClassifierRequest
instance GHC.Read.Read Network.AWS.Glue.Types.CreateGrokClassifierRequest.CreateGrokClassifierRequest
instance GHC.Classes.Eq Network.AWS.Glue.Types.CreateGrokClassifierRequest.CreateGrokClassifierRequest
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CreateGrokClassifierRequest.CreateGrokClassifierRequest
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CreateGrokClassifierRequest.CreateGrokClassifierRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.CreateGrokClassifierRequest.CreateGrokClassifierRequest


module Network.AWS.Glue.Types.CreateJsonClassifierRequest

-- | Specifies a JSON classifier for <tt>CreateClassifier</tt> to create.
--   
--   <i>See:</i> <a>newCreateJsonClassifierRequest</a> smart constructor.
data CreateJsonClassifierRequest
CreateJsonClassifierRequest' :: Text -> Text -> CreateJsonClassifierRequest

-- | The name of the classifier.
[$sel:name:CreateJsonClassifierRequest'] :: CreateJsonClassifierRequest -> Text

-- | A <tt>JsonPath</tt> string defining the JSON data for the classifier
--   to classify. Glue supports a subset of JsonPath, as described in
--   <a>Writing JsonPath Custom Classifiers</a>.
[$sel:jsonPath:CreateJsonClassifierRequest'] :: CreateJsonClassifierRequest -> Text

-- | Create a value of <a>CreateJsonClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateJsonClassifierRequest'</a>,
--   <a>createJsonClassifierRequest_name</a> - The name of the classifier.
--   
--   <a>$sel:jsonPath:CreateJsonClassifierRequest'</a>,
--   <a>createJsonClassifierRequest_jsonPath</a> - A <tt>JsonPath</tt>
--   string defining the JSON data for the classifier to classify. Glue
--   supports a subset of JsonPath, as described in <a>Writing JsonPath
--   Custom Classifiers</a>.
newCreateJsonClassifierRequest :: Text -> Text -> CreateJsonClassifierRequest

-- | The name of the classifier.
createJsonClassifierRequest_name :: Lens' CreateJsonClassifierRequest Text

-- | A <tt>JsonPath</tt> string defining the JSON data for the classifier
--   to classify. Glue supports a subset of JsonPath, as described in
--   <a>Writing JsonPath Custom Classifiers</a>.
createJsonClassifierRequest_jsonPath :: Lens' CreateJsonClassifierRequest Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.CreateJsonClassifierRequest.CreateJsonClassifierRequest
instance GHC.Show.Show Network.AWS.Glue.Types.CreateJsonClassifierRequest.CreateJsonClassifierRequest
instance GHC.Read.Read Network.AWS.Glue.Types.CreateJsonClassifierRequest.CreateJsonClassifierRequest
instance GHC.Classes.Eq Network.AWS.Glue.Types.CreateJsonClassifierRequest.CreateJsonClassifierRequest
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CreateJsonClassifierRequest.CreateJsonClassifierRequest
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CreateJsonClassifierRequest.CreateJsonClassifierRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.CreateJsonClassifierRequest.CreateJsonClassifierRequest


module Network.AWS.Glue.Types.CreateXMLClassifierRequest

-- | Specifies an XML classifier for <tt>CreateClassifier</tt> to create.
--   
--   <i>See:</i> <a>newCreateXMLClassifierRequest</a> smart constructor.
data CreateXMLClassifierRequest
CreateXMLClassifierRequest' :: Maybe Text -> Text -> Text -> CreateXMLClassifierRequest

-- | The XML tag designating the element that contains each record in an
--   XML document being parsed. This can't identify a self-closing element
--   (closed by <tt>/&gt;</tt>). An empty row element that contains only
--   attributes can be parsed as long as it ends with a closing tag (for
--   example, <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is
--   okay, but <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
[$sel:rowTag:CreateXMLClassifierRequest'] :: CreateXMLClassifierRequest -> Maybe Text

-- | An identifier of the data format that the classifier matches.
[$sel:classification:CreateXMLClassifierRequest'] :: CreateXMLClassifierRequest -> Text

-- | The name of the classifier.
[$sel:name:CreateXMLClassifierRequest'] :: CreateXMLClassifierRequest -> Text

-- | Create a value of <a>CreateXMLClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rowTag:CreateXMLClassifierRequest'</a>,
--   <a>createXMLClassifierRequest_rowTag</a> - The XML tag designating the
--   element that contains each record in an XML document being parsed.
--   This can't identify a self-closing element (closed by <tt>/&gt;</tt>).
--   An empty row element that contains only attributes can be parsed as
--   long as it ends with a closing tag (for example, <tt>&lt;row
--   item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is okay, but <tt>&lt;row
--   item_a="A" item_b="B" /&gt;</tt> is not).
--   
--   <a>$sel:classification:CreateXMLClassifierRequest'</a>,
--   <a>createXMLClassifierRequest_classification</a> - An identifier of
--   the data format that the classifier matches.
--   
--   <a>$sel:name:CreateXMLClassifierRequest'</a>,
--   <a>createXMLClassifierRequest_name</a> - The name of the classifier.
newCreateXMLClassifierRequest :: Text -> Text -> CreateXMLClassifierRequest

-- | The XML tag designating the element that contains each record in an
--   XML document being parsed. This can't identify a self-closing element
--   (closed by <tt>/&gt;</tt>). An empty row element that contains only
--   attributes can be parsed as long as it ends with a closing tag (for
--   example, <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is
--   okay, but <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
createXMLClassifierRequest_rowTag :: Lens' CreateXMLClassifierRequest (Maybe Text)

-- | An identifier of the data format that the classifier matches.
createXMLClassifierRequest_classification :: Lens' CreateXMLClassifierRequest Text

-- | The name of the classifier.
createXMLClassifierRequest_name :: Lens' CreateXMLClassifierRequest Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.CreateXMLClassifierRequest.CreateXMLClassifierRequest
instance GHC.Show.Show Network.AWS.Glue.Types.CreateXMLClassifierRequest.CreateXMLClassifierRequest
instance GHC.Read.Read Network.AWS.Glue.Types.CreateXMLClassifierRequest.CreateXMLClassifierRequest
instance GHC.Classes.Eq Network.AWS.Glue.Types.CreateXMLClassifierRequest.CreateXMLClassifierRequest
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CreateXMLClassifierRequest.CreateXMLClassifierRequest
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CreateXMLClassifierRequest.CreateXMLClassifierRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.CreateXMLClassifierRequest.CreateXMLClassifierRequest


module Network.AWS.Glue.Types.CsvHeaderOption
newtype CsvHeaderOption
CsvHeaderOption' :: Text -> CsvHeaderOption
[fromCsvHeaderOption] :: CsvHeaderOption -> Text
pattern CsvHeaderOption_ABSENT :: CsvHeaderOption
pattern CsvHeaderOption_PRESENT :: CsvHeaderOption
pattern CsvHeaderOption_UNKNOWN :: CsvHeaderOption
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.CsvHeaderOption.CsvHeaderOption
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.CsvHeaderOption.CsvHeaderOption
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.CsvHeaderOption.CsvHeaderOption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.CsvHeaderOption.CsvHeaderOption
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.CsvHeaderOption.CsvHeaderOption
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.CsvHeaderOption.CsvHeaderOption
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.CsvHeaderOption.CsvHeaderOption
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.CsvHeaderOption.CsvHeaderOption
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.CsvHeaderOption.CsvHeaderOption
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.CsvHeaderOption.CsvHeaderOption
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.CsvHeaderOption.CsvHeaderOption
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.CsvHeaderOption.CsvHeaderOption
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CsvHeaderOption.CsvHeaderOption
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CsvHeaderOption.CsvHeaderOption
instance GHC.Generics.Generic Network.AWS.Glue.Types.CsvHeaderOption.CsvHeaderOption
instance GHC.Classes.Ord Network.AWS.Glue.Types.CsvHeaderOption.CsvHeaderOption
instance GHC.Classes.Eq Network.AWS.Glue.Types.CsvHeaderOption.CsvHeaderOption
instance GHC.Read.Read Network.AWS.Glue.Types.CsvHeaderOption.CsvHeaderOption
instance GHC.Show.Show Network.AWS.Glue.Types.CsvHeaderOption.CsvHeaderOption


module Network.AWS.Glue.Types.CsvClassifier

-- | A classifier for custom <tt>CSV</tt> content.
--   
--   <i>See:</i> <a>newCsvClassifier</a> smart constructor.
data CsvClassifier
CsvClassifier' :: Maybe POSIX -> Maybe Text -> Maybe CsvHeaderOption -> Maybe POSIX -> Maybe Bool -> Maybe [Text] -> Maybe Integer -> Maybe Bool -> Maybe Text -> Text -> CsvClassifier

-- | The time that this classifier was registered.
[$sel:creationTime:CsvClassifier'] :: CsvClassifier -> Maybe POSIX

-- | A custom symbol to denote what combines content into a single column
--   value. It must be different from the column delimiter.
[$sel:quoteSymbol:CsvClassifier'] :: CsvClassifier -> Maybe Text

-- | Indicates whether the CSV file contains a header.
[$sel:containsHeader:CsvClassifier'] :: CsvClassifier -> Maybe CsvHeaderOption

-- | The time that this classifier was last updated.
[$sel:lastUpdated:CsvClassifier'] :: CsvClassifier -> Maybe POSIX

-- | Specifies not to trim values before identifying the type of column
--   values. The default value is <tt>true</tt>.
[$sel:disableValueTrimming:CsvClassifier'] :: CsvClassifier -> Maybe Bool

-- | A list of strings representing column names.
[$sel:header:CsvClassifier'] :: CsvClassifier -> Maybe [Text]

-- | The version of this classifier.
[$sel:version:CsvClassifier'] :: CsvClassifier -> Maybe Integer

-- | Enables the processing of files that contain only one column.
[$sel:allowSingleColumn:CsvClassifier'] :: CsvClassifier -> Maybe Bool

-- | A custom symbol to denote what separates each column entry in the row.
[$sel:delimiter:CsvClassifier'] :: CsvClassifier -> Maybe Text

-- | The name of the classifier.
[$sel:name:CsvClassifier'] :: CsvClassifier -> Text

-- | Create a value of <a>CsvClassifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CsvClassifier'</a>,
--   <a>csvClassifier_creationTime</a> - The time that this classifier was
--   registered.
--   
--   <a>$sel:quoteSymbol:CsvClassifier'</a>,
--   <a>csvClassifier_quoteSymbol</a> - A custom symbol to denote what
--   combines content into a single column value. It must be different from
--   the column delimiter.
--   
--   <a>$sel:containsHeader:CsvClassifier'</a>,
--   <a>csvClassifier_containsHeader</a> - Indicates whether the CSV file
--   contains a header.
--   
--   <a>$sel:lastUpdated:CsvClassifier'</a>,
--   <a>csvClassifier_lastUpdated</a> - The time that this classifier was
--   last updated.
--   
--   <a>$sel:disableValueTrimming:CsvClassifier'</a>,
--   <a>csvClassifier_disableValueTrimming</a> - Specifies not to trim
--   values before identifying the type of column values. The default value
--   is <tt>true</tt>.
--   
--   <a>$sel:header:CsvClassifier'</a>, <a>csvClassifier_header</a> - A
--   list of strings representing column names.
--   
--   <a>$sel:version:CsvClassifier'</a>, <a>csvClassifier_version</a> - The
--   version of this classifier.
--   
--   <a>$sel:allowSingleColumn:CsvClassifier'</a>,
--   <a>csvClassifier_allowSingleColumn</a> - Enables the processing of
--   files that contain only one column.
--   
--   <a>$sel:delimiter:CsvClassifier'</a>, <a>csvClassifier_delimiter</a> -
--   A custom symbol to denote what separates each column entry in the row.
--   
--   <a>$sel:name:CsvClassifier'</a>, <a>csvClassifier_name</a> - The name
--   of the classifier.
newCsvClassifier :: Text -> CsvClassifier

-- | The time that this classifier was registered.
csvClassifier_creationTime :: Lens' CsvClassifier (Maybe UTCTime)

-- | A custom symbol to denote what combines content into a single column
--   value. It must be different from the column delimiter.
csvClassifier_quoteSymbol :: Lens' CsvClassifier (Maybe Text)

-- | Indicates whether the CSV file contains a header.
csvClassifier_containsHeader :: Lens' CsvClassifier (Maybe CsvHeaderOption)

-- | The time that this classifier was last updated.
csvClassifier_lastUpdated :: Lens' CsvClassifier (Maybe UTCTime)

-- | Specifies not to trim values before identifying the type of column
--   values. The default value is <tt>true</tt>.
csvClassifier_disableValueTrimming :: Lens' CsvClassifier (Maybe Bool)

-- | A list of strings representing column names.
csvClassifier_header :: Lens' CsvClassifier (Maybe [Text])

-- | The version of this classifier.
csvClassifier_version :: Lens' CsvClassifier (Maybe Integer)

-- | Enables the processing of files that contain only one column.
csvClassifier_allowSingleColumn :: Lens' CsvClassifier (Maybe Bool)

-- | A custom symbol to denote what separates each column entry in the row.
csvClassifier_delimiter :: Lens' CsvClassifier (Maybe Text)

-- | The name of the classifier.
csvClassifier_name :: Lens' CsvClassifier Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.CsvClassifier.CsvClassifier
instance GHC.Show.Show Network.AWS.Glue.Types.CsvClassifier.CsvClassifier
instance GHC.Read.Read Network.AWS.Glue.Types.CsvClassifier.CsvClassifier
instance GHC.Classes.Eq Network.AWS.Glue.Types.CsvClassifier.CsvClassifier
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.CsvClassifier.CsvClassifier
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CsvClassifier.CsvClassifier
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CsvClassifier.CsvClassifier


module Network.AWS.Glue.Types.CreateCsvClassifierRequest

-- | Specifies a custom CSV classifier for <tt>CreateClassifier</tt> to
--   create.
--   
--   <i>See:</i> <a>newCreateCsvClassifierRequest</a> smart constructor.
data CreateCsvClassifierRequest
CreateCsvClassifierRequest' :: Maybe Text -> Maybe CsvHeaderOption -> Maybe Bool -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Text -> CreateCsvClassifierRequest

-- | A custom symbol to denote what combines content into a single column
--   value. Must be different from the column delimiter.
[$sel:quoteSymbol:CreateCsvClassifierRequest'] :: CreateCsvClassifierRequest -> Maybe Text

-- | Indicates whether the CSV file contains a header.
[$sel:containsHeader:CreateCsvClassifierRequest'] :: CreateCsvClassifierRequest -> Maybe CsvHeaderOption

-- | Specifies not to trim values before identifying the type of column
--   values. The default value is true.
[$sel:disableValueTrimming:CreateCsvClassifierRequest'] :: CreateCsvClassifierRequest -> Maybe Bool

-- | A list of strings representing column names.
[$sel:header:CreateCsvClassifierRequest'] :: CreateCsvClassifierRequest -> Maybe [Text]

-- | Enables the processing of files that contain only one column.
[$sel:allowSingleColumn:CreateCsvClassifierRequest'] :: CreateCsvClassifierRequest -> Maybe Bool

-- | A custom symbol to denote what separates each column entry in the row.
[$sel:delimiter:CreateCsvClassifierRequest'] :: CreateCsvClassifierRequest -> Maybe Text

-- | The name of the classifier.
[$sel:name:CreateCsvClassifierRequest'] :: CreateCsvClassifierRequest -> Text

-- | Create a value of <a>CreateCsvClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:quoteSymbol:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_quoteSymbol</a> - A custom symbol to
--   denote what combines content into a single column value. Must be
--   different from the column delimiter.
--   
--   <a>$sel:containsHeader:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_containsHeader</a> - Indicates whether
--   the CSV file contains a header.
--   
--   <a>$sel:disableValueTrimming:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_disableValueTrimming</a> - Specifies not
--   to trim values before identifying the type of column values. The
--   default value is true.
--   
--   <a>$sel:header:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_header</a> - A list of strings
--   representing column names.
--   
--   <a>$sel:allowSingleColumn:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_allowSingleColumn</a> - Enables the
--   processing of files that contain only one column.
--   
--   <a>$sel:delimiter:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_delimiter</a> - A custom symbol to
--   denote what separates each column entry in the row.
--   
--   <a>$sel:name:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_name</a> - The name of the classifier.
newCreateCsvClassifierRequest :: Text -> CreateCsvClassifierRequest

-- | A custom symbol to denote what combines content into a single column
--   value. Must be different from the column delimiter.
createCsvClassifierRequest_quoteSymbol :: Lens' CreateCsvClassifierRequest (Maybe Text)

-- | Indicates whether the CSV file contains a header.
createCsvClassifierRequest_containsHeader :: Lens' CreateCsvClassifierRequest (Maybe CsvHeaderOption)

-- | Specifies not to trim values before identifying the type of column
--   values. The default value is true.
createCsvClassifierRequest_disableValueTrimming :: Lens' CreateCsvClassifierRequest (Maybe Bool)

-- | A list of strings representing column names.
createCsvClassifierRequest_header :: Lens' CreateCsvClassifierRequest (Maybe [Text])

-- | Enables the processing of files that contain only one column.
createCsvClassifierRequest_allowSingleColumn :: Lens' CreateCsvClassifierRequest (Maybe Bool)

-- | A custom symbol to denote what separates each column entry in the row.
createCsvClassifierRequest_delimiter :: Lens' CreateCsvClassifierRequest (Maybe Text)

-- | The name of the classifier.
createCsvClassifierRequest_name :: Lens' CreateCsvClassifierRequest Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.CreateCsvClassifierRequest.CreateCsvClassifierRequest
instance GHC.Show.Show Network.AWS.Glue.Types.CreateCsvClassifierRequest.CreateCsvClassifierRequest
instance GHC.Read.Read Network.AWS.Glue.Types.CreateCsvClassifierRequest.CreateCsvClassifierRequest
instance GHC.Classes.Eq Network.AWS.Glue.Types.CreateCsvClassifierRequest.CreateCsvClassifierRequest
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CreateCsvClassifierRequest.CreateCsvClassifierRequest
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CreateCsvClassifierRequest.CreateCsvClassifierRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.CreateCsvClassifierRequest.CreateCsvClassifierRequest


module Network.AWS.Glue.Types.DataFormat
newtype DataFormat
DataFormat' :: Text -> DataFormat
[fromDataFormat] :: DataFormat -> Text
pattern DataFormat_AVRO :: DataFormat
pattern DataFormat_JSON :: DataFormat
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.DataFormat.DataFormat
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.DataFormat.DataFormat
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.DataFormat.DataFormat
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.DataFormat.DataFormat
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.DataFormat.DataFormat
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.DataFormat.DataFormat
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.DataFormat.DataFormat
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.DataFormat.DataFormat
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.DataFormat.DataFormat
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.DataFormat.DataFormat
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.DataFormat.DataFormat
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.DataFormat.DataFormat
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.DataFormat.DataFormat
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.DataFormat.DataFormat
instance GHC.Generics.Generic Network.AWS.Glue.Types.DataFormat.DataFormat
instance GHC.Classes.Ord Network.AWS.Glue.Types.DataFormat.DataFormat
instance GHC.Classes.Eq Network.AWS.Glue.Types.DataFormat.DataFormat
instance GHC.Read.Read Network.AWS.Glue.Types.DataFormat.DataFormat
instance GHC.Show.Show Network.AWS.Glue.Types.DataFormat.DataFormat


module Network.AWS.Glue.Types.DataLakePrincipal

-- | The Lake Formation principal.
--   
--   <i>See:</i> <a>newDataLakePrincipal</a> smart constructor.
data DataLakePrincipal
DataLakePrincipal' :: Maybe Text -> DataLakePrincipal

-- | An identifier for the Lake Formation principal.
[$sel:dataLakePrincipalIdentifier:DataLakePrincipal'] :: DataLakePrincipal -> Maybe Text

-- | Create a value of <a>DataLakePrincipal</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLakePrincipalIdentifier:DataLakePrincipal'</a>,
--   <a>dataLakePrincipal_dataLakePrincipalIdentifier</a> - An identifier
--   for the Lake Formation principal.
newDataLakePrincipal :: DataLakePrincipal

-- | An identifier for the Lake Formation principal.
dataLakePrincipal_dataLakePrincipalIdentifier :: Lens' DataLakePrincipal (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.DataLakePrincipal.DataLakePrincipal
instance GHC.Show.Show Network.AWS.Glue.Types.DataLakePrincipal.DataLakePrincipal
instance GHC.Read.Read Network.AWS.Glue.Types.DataLakePrincipal.DataLakePrincipal
instance GHC.Classes.Eq Network.AWS.Glue.Types.DataLakePrincipal.DataLakePrincipal
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.DataLakePrincipal.DataLakePrincipal
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.DataLakePrincipal.DataLakePrincipal
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.DataLakePrincipal.DataLakePrincipal
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.DataLakePrincipal.DataLakePrincipal


module Network.AWS.Glue.Types.DatabaseIdentifier

-- | A structure that describes a target database for resource linking.
--   
--   <i>See:</i> <a>newDatabaseIdentifier</a> smart constructor.
data DatabaseIdentifier
DatabaseIdentifier' :: Maybe Text -> Maybe Text -> DatabaseIdentifier

-- | The ID of the Data Catalog in which the database resides.
[$sel:catalogId:DatabaseIdentifier'] :: DatabaseIdentifier -> Maybe Text

-- | The name of the catalog database.
[$sel:databaseName:DatabaseIdentifier'] :: DatabaseIdentifier -> Maybe Text

-- | Create a value of <a>DatabaseIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DatabaseIdentifier'</a>,
--   <a>databaseIdentifier_catalogId</a> - The ID of the Data Catalog in
--   which the database resides.
--   
--   <a>$sel:databaseName:DatabaseIdentifier'</a>,
--   <a>databaseIdentifier_databaseName</a> - The name of the catalog
--   database.
newDatabaseIdentifier :: DatabaseIdentifier

-- | The ID of the Data Catalog in which the database resides.
databaseIdentifier_catalogId :: Lens' DatabaseIdentifier (Maybe Text)

-- | The name of the catalog database.
databaseIdentifier_databaseName :: Lens' DatabaseIdentifier (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.DatabaseIdentifier.DatabaseIdentifier
instance GHC.Show.Show Network.AWS.Glue.Types.DatabaseIdentifier.DatabaseIdentifier
instance GHC.Read.Read Network.AWS.Glue.Types.DatabaseIdentifier.DatabaseIdentifier
instance GHC.Classes.Eq Network.AWS.Glue.Types.DatabaseIdentifier.DatabaseIdentifier
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.DatabaseIdentifier.DatabaseIdentifier
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.DatabaseIdentifier.DatabaseIdentifier
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.DatabaseIdentifier.DatabaseIdentifier
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.DatabaseIdentifier.DatabaseIdentifier


module Network.AWS.Glue.Types.DateColumnStatisticsData

-- | Defines column statistics supported for timestamp data columns.
--   
--   <i>See:</i> <a>newDateColumnStatisticsData</a> smart constructor.
data DateColumnStatisticsData
DateColumnStatisticsData' :: Maybe POSIX -> Maybe POSIX -> Natural -> Natural -> DateColumnStatisticsData

-- | The highest value in the column.
[$sel:maximumValue:DateColumnStatisticsData'] :: DateColumnStatisticsData -> Maybe POSIX

-- | The lowest value in the column.
[$sel:minimumValue:DateColumnStatisticsData'] :: DateColumnStatisticsData -> Maybe POSIX

-- | The number of null values in the column.
[$sel:numberOfNulls:DateColumnStatisticsData'] :: DateColumnStatisticsData -> Natural

-- | The number of distinct values in a column.
[$sel:numberOfDistinctValues:DateColumnStatisticsData'] :: DateColumnStatisticsData -> Natural

-- | Create a value of <a>DateColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumValue:DateColumnStatisticsData'</a>,
--   <a>dateColumnStatisticsData_maximumValue</a> - The highest value in
--   the column.
--   
--   <a>$sel:minimumValue:DateColumnStatisticsData'</a>,
--   <a>dateColumnStatisticsData_minimumValue</a> - The lowest value in the
--   column.
--   
--   <a>$sel:numberOfNulls:DateColumnStatisticsData'</a>,
--   <a>dateColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
--   
--   <a>$sel:numberOfDistinctValues:DateColumnStatisticsData'</a>,
--   <a>dateColumnStatisticsData_numberOfDistinctValues</a> - The number of
--   distinct values in a column.
newDateColumnStatisticsData :: Natural -> Natural -> DateColumnStatisticsData

-- | The highest value in the column.
dateColumnStatisticsData_maximumValue :: Lens' DateColumnStatisticsData (Maybe UTCTime)

-- | The lowest value in the column.
dateColumnStatisticsData_minimumValue :: Lens' DateColumnStatisticsData (Maybe UTCTime)

-- | The number of null values in the column.
dateColumnStatisticsData_numberOfNulls :: Lens' DateColumnStatisticsData Natural

-- | The number of distinct values in a column.
dateColumnStatisticsData_numberOfDistinctValues :: Lens' DateColumnStatisticsData Natural
instance GHC.Generics.Generic Network.AWS.Glue.Types.DateColumnStatisticsData.DateColumnStatisticsData
instance GHC.Show.Show Network.AWS.Glue.Types.DateColumnStatisticsData.DateColumnStatisticsData
instance GHC.Read.Read Network.AWS.Glue.Types.DateColumnStatisticsData.DateColumnStatisticsData
instance GHC.Classes.Eq Network.AWS.Glue.Types.DateColumnStatisticsData.DateColumnStatisticsData
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.DateColumnStatisticsData.DateColumnStatisticsData
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.DateColumnStatisticsData.DateColumnStatisticsData
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.DateColumnStatisticsData.DateColumnStatisticsData
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.DateColumnStatisticsData.DateColumnStatisticsData


module Network.AWS.Glue.Types.DecimalNumber

-- | Contains a numeric value in decimal format.
--   
--   <i>See:</i> <a>newDecimalNumber</a> smart constructor.
data DecimalNumber
DecimalNumber' :: Base64 -> Int -> DecimalNumber

-- | The unscaled numeric value.
[$sel:unscaledValue:DecimalNumber'] :: DecimalNumber -> Base64

-- | The scale that determines where the decimal point falls in the
--   unscaled value.
[$sel:scale:DecimalNumber'] :: DecimalNumber -> Int

-- | Create a value of <a>DecimalNumber</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unscaledValue:DecimalNumber'</a>,
--   <a>decimalNumber_unscaledValue</a> - The unscaled numeric value.-- --
--   <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:scale:DecimalNumber'</a>, <a>decimalNumber_scale</a> - The
--   scale that determines where the decimal point falls in the unscaled
--   value.
newDecimalNumber :: ByteString -> Int -> DecimalNumber

-- | The unscaled numeric value.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
decimalNumber_unscaledValue :: Lens' DecimalNumber ByteString

-- | The scale that determines where the decimal point falls in the
--   unscaled value.
decimalNumber_scale :: Lens' DecimalNumber Int
instance GHC.Generics.Generic Network.AWS.Glue.Types.DecimalNumber.DecimalNumber
instance GHC.Show.Show Network.AWS.Glue.Types.DecimalNumber.DecimalNumber
instance GHC.Read.Read Network.AWS.Glue.Types.DecimalNumber.DecimalNumber
instance GHC.Classes.Eq Network.AWS.Glue.Types.DecimalNumber.DecimalNumber
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.DecimalNumber.DecimalNumber
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.DecimalNumber.DecimalNumber
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.DecimalNumber.DecimalNumber
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.DecimalNumber.DecimalNumber


module Network.AWS.Glue.Types.DecimalColumnStatisticsData

-- | Defines column statistics supported for fixed-point number data
--   columns.
--   
--   <i>See:</i> <a>newDecimalColumnStatisticsData</a> smart constructor.
data DecimalColumnStatisticsData
DecimalColumnStatisticsData' :: Maybe DecimalNumber -> Maybe DecimalNumber -> Natural -> Natural -> DecimalColumnStatisticsData

-- | The highest value in the column.
[$sel:maximumValue:DecimalColumnStatisticsData'] :: DecimalColumnStatisticsData -> Maybe DecimalNumber

-- | The lowest value in the column.
[$sel:minimumValue:DecimalColumnStatisticsData'] :: DecimalColumnStatisticsData -> Maybe DecimalNumber

-- | The number of null values in the column.
[$sel:numberOfNulls:DecimalColumnStatisticsData'] :: DecimalColumnStatisticsData -> Natural

-- | The number of distinct values in a column.
[$sel:numberOfDistinctValues:DecimalColumnStatisticsData'] :: DecimalColumnStatisticsData -> Natural

-- | Create a value of <a>DecimalColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumValue:DecimalColumnStatisticsData'</a>,
--   <a>decimalColumnStatisticsData_maximumValue</a> - The highest value in
--   the column.
--   
--   <a>$sel:minimumValue:DecimalColumnStatisticsData'</a>,
--   <a>decimalColumnStatisticsData_minimumValue</a> - The lowest value in
--   the column.
--   
--   <a>$sel:numberOfNulls:DecimalColumnStatisticsData'</a>,
--   <a>decimalColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
--   
--   <a>$sel:numberOfDistinctValues:DecimalColumnStatisticsData'</a>,
--   <a>decimalColumnStatisticsData_numberOfDistinctValues</a> - The number
--   of distinct values in a column.
newDecimalColumnStatisticsData :: Natural -> Natural -> DecimalColumnStatisticsData

-- | The highest value in the column.
decimalColumnStatisticsData_maximumValue :: Lens' DecimalColumnStatisticsData (Maybe DecimalNumber)

-- | The lowest value in the column.
decimalColumnStatisticsData_minimumValue :: Lens' DecimalColumnStatisticsData (Maybe DecimalNumber)

-- | The number of null values in the column.
decimalColumnStatisticsData_numberOfNulls :: Lens' DecimalColumnStatisticsData Natural

-- | The number of distinct values in a column.
decimalColumnStatisticsData_numberOfDistinctValues :: Lens' DecimalColumnStatisticsData Natural
instance GHC.Generics.Generic Network.AWS.Glue.Types.DecimalColumnStatisticsData.DecimalColumnStatisticsData
instance GHC.Show.Show Network.AWS.Glue.Types.DecimalColumnStatisticsData.DecimalColumnStatisticsData
instance GHC.Read.Read Network.AWS.Glue.Types.DecimalColumnStatisticsData.DecimalColumnStatisticsData
instance GHC.Classes.Eq Network.AWS.Glue.Types.DecimalColumnStatisticsData.DecimalColumnStatisticsData
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.DecimalColumnStatisticsData.DecimalColumnStatisticsData
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.DecimalColumnStatisticsData.DecimalColumnStatisticsData
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.DecimalColumnStatisticsData.DecimalColumnStatisticsData
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.DecimalColumnStatisticsData.DecimalColumnStatisticsData


module Network.AWS.Glue.Types.DeleteBehavior
newtype DeleteBehavior
DeleteBehavior' :: Text -> DeleteBehavior
[fromDeleteBehavior] :: DeleteBehavior -> Text
pattern DeleteBehavior_DELETE_FROM_DATABASE :: DeleteBehavior
pattern DeleteBehavior_DEPRECATE_IN_DATABASE :: DeleteBehavior
pattern DeleteBehavior_LOG :: DeleteBehavior
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.DeleteBehavior.DeleteBehavior
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.DeleteBehavior.DeleteBehavior
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.DeleteBehavior.DeleteBehavior
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.DeleteBehavior.DeleteBehavior
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.DeleteBehavior.DeleteBehavior
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.DeleteBehavior.DeleteBehavior
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.DeleteBehavior.DeleteBehavior
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.DeleteBehavior.DeleteBehavior
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.DeleteBehavior.DeleteBehavior
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.DeleteBehavior.DeleteBehavior
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.DeleteBehavior.DeleteBehavior
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.DeleteBehavior.DeleteBehavior
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.DeleteBehavior.DeleteBehavior
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.DeleteBehavior.DeleteBehavior
instance GHC.Generics.Generic Network.AWS.Glue.Types.DeleteBehavior.DeleteBehavior
instance GHC.Classes.Ord Network.AWS.Glue.Types.DeleteBehavior.DeleteBehavior
instance GHC.Classes.Eq Network.AWS.Glue.Types.DeleteBehavior.DeleteBehavior
instance GHC.Read.Read Network.AWS.Glue.Types.DeleteBehavior.DeleteBehavior
instance GHC.Show.Show Network.AWS.Glue.Types.DeleteBehavior.DeleteBehavior


module Network.AWS.Glue.Types.DevEndpointCustomLibraries

-- | Custom libraries to be loaded into a development endpoint.
--   
--   <i>See:</i> <a>newDevEndpointCustomLibraries</a> smart constructor.
data DevEndpointCustomLibraries
DevEndpointCustomLibraries' :: Maybe Text -> Maybe Text -> DevEndpointCustomLibraries

-- | The paths to one or more Python libraries in an Amazon Simple Storage
--   Service (Amazon S3) bucket that should be loaded in your
--   <tt>DevEndpoint</tt>. Multiple values must be complete paths separated
--   by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not currently supported.
[$sel:extraPythonLibsS3Path:DevEndpointCustomLibraries'] :: DevEndpointCustomLibraries -> Maybe Text

-- | The path to one or more Java <tt>.jar</tt> files in an S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>.
--   
--   You can only use pure Java/Scala libraries with a
--   <tt>DevEndpoint</tt>.
[$sel:extraJarsS3Path:DevEndpointCustomLibraries'] :: DevEndpointCustomLibraries -> Maybe Text

-- | Create a value of <a>DevEndpointCustomLibraries</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:extraPythonLibsS3Path:DevEndpointCustomLibraries'</a>,
--   <a>devEndpointCustomLibraries_extraPythonLibsS3Path</a> - The paths to
--   one or more Python libraries in an Amazon Simple Storage Service
--   (Amazon S3) bucket that should be loaded in your <tt>DevEndpoint</tt>.
--   Multiple values must be complete paths separated by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not currently supported.
--   
--   <a>$sel:extraJarsS3Path:DevEndpointCustomLibraries'</a>,
--   <a>devEndpointCustomLibraries_extraJarsS3Path</a> - The path to one or
--   more Java <tt>.jar</tt> files in an S3 bucket that should be loaded in
--   your <tt>DevEndpoint</tt>.
--   
--   You can only use pure Java/Scala libraries with a
--   <tt>DevEndpoint</tt>.
newDevEndpointCustomLibraries :: DevEndpointCustomLibraries

-- | The paths to one or more Python libraries in an Amazon Simple Storage
--   Service (Amazon S3) bucket that should be loaded in your
--   <tt>DevEndpoint</tt>. Multiple values must be complete paths separated
--   by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not currently supported.
devEndpointCustomLibraries_extraPythonLibsS3Path :: Lens' DevEndpointCustomLibraries (Maybe Text)

-- | The path to one or more Java <tt>.jar</tt> files in an S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>.
--   
--   You can only use pure Java/Scala libraries with a
--   <tt>DevEndpoint</tt>.
devEndpointCustomLibraries_extraJarsS3Path :: Lens' DevEndpointCustomLibraries (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.DevEndpointCustomLibraries.DevEndpointCustomLibraries
instance GHC.Show.Show Network.AWS.Glue.Types.DevEndpointCustomLibraries.DevEndpointCustomLibraries
instance GHC.Read.Read Network.AWS.Glue.Types.DevEndpointCustomLibraries.DevEndpointCustomLibraries
instance GHC.Classes.Eq Network.AWS.Glue.Types.DevEndpointCustomLibraries.DevEndpointCustomLibraries
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.DevEndpointCustomLibraries.DevEndpointCustomLibraries
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.DevEndpointCustomLibraries.DevEndpointCustomLibraries
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.DevEndpointCustomLibraries.DevEndpointCustomLibraries


module Network.AWS.Glue.Types.DoubleColumnStatisticsData

-- | Defines column statistics supported for floating-point number data
--   columns.
--   
--   <i>See:</i> <a>newDoubleColumnStatisticsData</a> smart constructor.
data DoubleColumnStatisticsData
DoubleColumnStatisticsData' :: Maybe Double -> Maybe Double -> Natural -> Natural -> DoubleColumnStatisticsData

-- | The highest value in the column.
[$sel:maximumValue:DoubleColumnStatisticsData'] :: DoubleColumnStatisticsData -> Maybe Double

-- | The lowest value in the column.
[$sel:minimumValue:DoubleColumnStatisticsData'] :: DoubleColumnStatisticsData -> Maybe Double

-- | The number of null values in the column.
[$sel:numberOfNulls:DoubleColumnStatisticsData'] :: DoubleColumnStatisticsData -> Natural

-- | The number of distinct values in a column.
[$sel:numberOfDistinctValues:DoubleColumnStatisticsData'] :: DoubleColumnStatisticsData -> Natural

-- | Create a value of <a>DoubleColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumValue:DoubleColumnStatisticsData'</a>,
--   <a>doubleColumnStatisticsData_maximumValue</a> - The highest value in
--   the column.
--   
--   <a>$sel:minimumValue:DoubleColumnStatisticsData'</a>,
--   <a>doubleColumnStatisticsData_minimumValue</a> - The lowest value in
--   the column.
--   
--   <a>$sel:numberOfNulls:DoubleColumnStatisticsData'</a>,
--   <a>doubleColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
--   
--   <a>$sel:numberOfDistinctValues:DoubleColumnStatisticsData'</a>,
--   <a>doubleColumnStatisticsData_numberOfDistinctValues</a> - The number
--   of distinct values in a column.
newDoubleColumnStatisticsData :: Natural -> Natural -> DoubleColumnStatisticsData

-- | The highest value in the column.
doubleColumnStatisticsData_maximumValue :: Lens' DoubleColumnStatisticsData (Maybe Double)

-- | The lowest value in the column.
doubleColumnStatisticsData_minimumValue :: Lens' DoubleColumnStatisticsData (Maybe Double)

-- | The number of null values in the column.
doubleColumnStatisticsData_numberOfNulls :: Lens' DoubleColumnStatisticsData Natural

-- | The number of distinct values in a column.
doubleColumnStatisticsData_numberOfDistinctValues :: Lens' DoubleColumnStatisticsData Natural
instance GHC.Generics.Generic Network.AWS.Glue.Types.DoubleColumnStatisticsData.DoubleColumnStatisticsData
instance GHC.Show.Show Network.AWS.Glue.Types.DoubleColumnStatisticsData.DoubleColumnStatisticsData
instance GHC.Read.Read Network.AWS.Glue.Types.DoubleColumnStatisticsData.DoubleColumnStatisticsData
instance GHC.Classes.Eq Network.AWS.Glue.Types.DoubleColumnStatisticsData.DoubleColumnStatisticsData
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.DoubleColumnStatisticsData.DoubleColumnStatisticsData
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.DoubleColumnStatisticsData.DoubleColumnStatisticsData
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.DoubleColumnStatisticsData.DoubleColumnStatisticsData
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.DoubleColumnStatisticsData.DoubleColumnStatisticsData


module Network.AWS.Glue.Types.DynamoDBTarget

-- | Specifies an Amazon DynamoDB table to crawl.
--   
--   <i>See:</i> <a>newDynamoDBTarget</a> smart constructor.
data DynamoDBTarget
DynamoDBTarget' :: Maybe Text -> Maybe Double -> Maybe Bool -> DynamoDBTarget

-- | The name of the DynamoDB table to crawl.
[$sel:path:DynamoDBTarget'] :: DynamoDBTarget -> Maybe Text

-- | The percentage of the configured read capacity units to use by the
--   Glue crawler. Read capacity units is a term defined by DynamoDB, and
--   is a numeric value that acts as rate limiter for the number of reads
--   that can be performed on that table per second.
--   
--   The valid values are null or a value between 0.1 to 1.5. A null value
--   is used when user does not provide a value, and defaults to 0.5 of the
--   configured Read Capacity Unit (for provisioned tables), or 0.25 of the
--   max configured Read Capacity Unit (for tables using on-demand mode).
[$sel:scanRate:DynamoDBTarget'] :: DynamoDBTarget -> Maybe Double

-- | Indicates whether to scan all the records, or to sample rows from the
--   table. Scanning all the records can take a long time when the table is
--   not a high throughput table.
--   
--   A value of <tt>true</tt> means to scan all records, while a value of
--   <tt>false</tt> means to sample the records. If no value is specified,
--   the value defaults to <tt>true</tt>.
[$sel:scanAll:DynamoDBTarget'] :: DynamoDBTarget -> Maybe Bool

-- | Create a value of <a>DynamoDBTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:DynamoDBTarget'</a>, <a>dynamoDBTarget_path</a> - The
--   name of the DynamoDB table to crawl.
--   
--   <a>$sel:scanRate:DynamoDBTarget'</a>, <a>dynamoDBTarget_scanRate</a> -
--   The percentage of the configured read capacity units to use by the
--   Glue crawler. Read capacity units is a term defined by DynamoDB, and
--   is a numeric value that acts as rate limiter for the number of reads
--   that can be performed on that table per second.
--   
--   The valid values are null or a value between 0.1 to 1.5. A null value
--   is used when user does not provide a value, and defaults to 0.5 of the
--   configured Read Capacity Unit (for provisioned tables), or 0.25 of the
--   max configured Read Capacity Unit (for tables using on-demand mode).
--   
--   <a>$sel:scanAll:DynamoDBTarget'</a>, <a>dynamoDBTarget_scanAll</a> -
--   Indicates whether to scan all the records, or to sample rows from the
--   table. Scanning all the records can take a long time when the table is
--   not a high throughput table.
--   
--   A value of <tt>true</tt> means to scan all records, while a value of
--   <tt>false</tt> means to sample the records. If no value is specified,
--   the value defaults to <tt>true</tt>.
newDynamoDBTarget :: DynamoDBTarget

-- | The name of the DynamoDB table to crawl.
dynamoDBTarget_path :: Lens' DynamoDBTarget (Maybe Text)

-- | The percentage of the configured read capacity units to use by the
--   Glue crawler. Read capacity units is a term defined by DynamoDB, and
--   is a numeric value that acts as rate limiter for the number of reads
--   that can be performed on that table per second.
--   
--   The valid values are null or a value between 0.1 to 1.5. A null value
--   is used when user does not provide a value, and defaults to 0.5 of the
--   configured Read Capacity Unit (for provisioned tables), or 0.25 of the
--   max configured Read Capacity Unit (for tables using on-demand mode).
dynamoDBTarget_scanRate :: Lens' DynamoDBTarget (Maybe Double)

-- | Indicates whether to scan all the records, or to sample rows from the
--   table. Scanning all the records can take a long time when the table is
--   not a high throughput table.
--   
--   A value of <tt>true</tt> means to scan all records, while a value of
--   <tt>false</tt> means to sample the records. If no value is specified,
--   the value defaults to <tt>true</tt>.
dynamoDBTarget_scanAll :: Lens' DynamoDBTarget (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.Glue.Types.DynamoDBTarget.DynamoDBTarget
instance GHC.Show.Show Network.AWS.Glue.Types.DynamoDBTarget.DynamoDBTarget
instance GHC.Read.Read Network.AWS.Glue.Types.DynamoDBTarget.DynamoDBTarget
instance GHC.Classes.Eq Network.AWS.Glue.Types.DynamoDBTarget.DynamoDBTarget
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.DynamoDBTarget.DynamoDBTarget
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.DynamoDBTarget.DynamoDBTarget
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.DynamoDBTarget.DynamoDBTarget
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.DynamoDBTarget.DynamoDBTarget


module Network.AWS.Glue.Types.Edge

-- | An edge represents a directed connection between two components on a
--   workflow graph.
--   
--   <i>See:</i> <a>newEdge</a> smart constructor.
data Edge
Edge' :: Maybe Text -> Maybe Text -> Edge

-- | The unique of the node within the workflow where the edge starts.
[$sel:sourceId:Edge'] :: Edge -> Maybe Text

-- | The unique of the node within the workflow where the edge ends.
[$sel:destinationId:Edge'] :: Edge -> Maybe Text

-- | Create a value of <a>Edge</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceId:Edge'</a>, <a>edge_sourceId</a> - The unique of the
--   node within the workflow where the edge starts.
--   
--   <a>$sel:destinationId:Edge'</a>, <a>edge_destinationId</a> - The
--   unique of the node within the workflow where the edge ends.
newEdge :: Edge

-- | The unique of the node within the workflow where the edge starts.
edge_sourceId :: Lens' Edge (Maybe Text)

-- | The unique of the node within the workflow where the edge ends.
edge_destinationId :: Lens' Edge (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.Edge.Edge
instance GHC.Show.Show Network.AWS.Glue.Types.Edge.Edge
instance GHC.Read.Read Network.AWS.Glue.Types.Edge.Edge
instance GHC.Classes.Eq Network.AWS.Glue.Types.Edge.Edge
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Edge.Edge
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Edge.Edge
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Edge.Edge


module Network.AWS.Glue.Types.EnableHybridValues
newtype EnableHybridValues
EnableHybridValues' :: Text -> EnableHybridValues
[fromEnableHybridValues] :: EnableHybridValues -> Text
pattern EnableHybridValues_FALSE :: EnableHybridValues
pattern EnableHybridValues_TRUE :: EnableHybridValues
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.EnableHybridValues.EnableHybridValues
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.EnableHybridValues.EnableHybridValues
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.EnableHybridValues.EnableHybridValues
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.EnableHybridValues.EnableHybridValues
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.EnableHybridValues.EnableHybridValues
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.EnableHybridValues.EnableHybridValues
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.EnableHybridValues.EnableHybridValues
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.EnableHybridValues.EnableHybridValues
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.EnableHybridValues.EnableHybridValues
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.EnableHybridValues.EnableHybridValues
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.EnableHybridValues.EnableHybridValues
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.EnableHybridValues.EnableHybridValues
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.EnableHybridValues.EnableHybridValues
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.EnableHybridValues.EnableHybridValues
instance GHC.Generics.Generic Network.AWS.Glue.Types.EnableHybridValues.EnableHybridValues
instance GHC.Classes.Ord Network.AWS.Glue.Types.EnableHybridValues.EnableHybridValues
instance GHC.Classes.Eq Network.AWS.Glue.Types.EnableHybridValues.EnableHybridValues
instance GHC.Read.Read Network.AWS.Glue.Types.EnableHybridValues.EnableHybridValues
instance GHC.Show.Show Network.AWS.Glue.Types.EnableHybridValues.EnableHybridValues


module Network.AWS.Glue.Types.EncryptionAtRest

-- | Specifies the encryption-at-rest configuration for the Data Catalog.
--   
--   <i>See:</i> <a>newEncryptionAtRest</a> smart constructor.
data EncryptionAtRest
EncryptionAtRest' :: Maybe Text -> CatalogEncryptionMode -> EncryptionAtRest

-- | The ID of the KMS key to use for encryption at rest.
[$sel:sseAwsKmsKeyId:EncryptionAtRest'] :: EncryptionAtRest -> Maybe Text

-- | The encryption-at-rest mode for encrypting Data Catalog data.
[$sel:catalogEncryptionMode:EncryptionAtRest'] :: EncryptionAtRest -> CatalogEncryptionMode

-- | Create a value of <a>EncryptionAtRest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sseAwsKmsKeyId:EncryptionAtRest'</a>,
--   <a>encryptionAtRest_sseAwsKmsKeyId</a> - The ID of the KMS key to use
--   for encryption at rest.
--   
--   <a>$sel:catalogEncryptionMode:EncryptionAtRest'</a>,
--   <a>encryptionAtRest_catalogEncryptionMode</a> - The encryption-at-rest
--   mode for encrypting Data Catalog data.
newEncryptionAtRest :: CatalogEncryptionMode -> EncryptionAtRest

-- | The ID of the KMS key to use for encryption at rest.
encryptionAtRest_sseAwsKmsKeyId :: Lens' EncryptionAtRest (Maybe Text)

-- | The encryption-at-rest mode for encrypting Data Catalog data.
encryptionAtRest_catalogEncryptionMode :: Lens' EncryptionAtRest CatalogEncryptionMode
instance GHC.Generics.Generic Network.AWS.Glue.Types.EncryptionAtRest.EncryptionAtRest
instance GHC.Show.Show Network.AWS.Glue.Types.EncryptionAtRest.EncryptionAtRest
instance GHC.Read.Read Network.AWS.Glue.Types.EncryptionAtRest.EncryptionAtRest
instance GHC.Classes.Eq Network.AWS.Glue.Types.EncryptionAtRest.EncryptionAtRest
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.EncryptionAtRest.EncryptionAtRest
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.EncryptionAtRest.EncryptionAtRest
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.EncryptionAtRest.EncryptionAtRest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.EncryptionAtRest.EncryptionAtRest


module Network.AWS.Glue.Types.DataCatalogEncryptionSettings

-- | Contains configuration information for maintaining Data Catalog
--   security.
--   
--   <i>See:</i> <a>newDataCatalogEncryptionSettings</a> smart constructor.
data DataCatalogEncryptionSettings
DataCatalogEncryptionSettings' :: Maybe EncryptionAtRest -> Maybe ConnectionPasswordEncryption -> DataCatalogEncryptionSettings

-- | Specifies the encryption-at-rest configuration for the Data Catalog.
[$sel:encryptionAtRest:DataCatalogEncryptionSettings'] :: DataCatalogEncryptionSettings -> Maybe EncryptionAtRest

-- | When connection password protection is enabled, the Data Catalog uses
--   a customer-provided key to encrypt the password as part of
--   <tt>CreateConnection</tt> or <tt>UpdateConnection</tt> and store it in
--   the <tt>ENCRYPTED_PASSWORD</tt> field in the connection properties.
--   You can enable catalog encryption or only password encryption.
[$sel:connectionPasswordEncryption:DataCatalogEncryptionSettings'] :: DataCatalogEncryptionSettings -> Maybe ConnectionPasswordEncryption

-- | Create a value of <a>DataCatalogEncryptionSettings</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionAtRest:DataCatalogEncryptionSettings'</a>,
--   <a>dataCatalogEncryptionSettings_encryptionAtRest</a> - Specifies the
--   encryption-at-rest configuration for the Data Catalog.
--   
--   
--   <a>$sel:connectionPasswordEncryption:DataCatalogEncryptionSettings'</a>,
--   <a>dataCatalogEncryptionSettings_connectionPasswordEncryption</a> -
--   When connection password protection is enabled, the Data Catalog uses
--   a customer-provided key to encrypt the password as part of
--   <tt>CreateConnection</tt> or <tt>UpdateConnection</tt> and store it in
--   the <tt>ENCRYPTED_PASSWORD</tt> field in the connection properties.
--   You can enable catalog encryption or only password encryption.
newDataCatalogEncryptionSettings :: DataCatalogEncryptionSettings

-- | Specifies the encryption-at-rest configuration for the Data Catalog.
dataCatalogEncryptionSettings_encryptionAtRest :: Lens' DataCatalogEncryptionSettings (Maybe EncryptionAtRest)

-- | When connection password protection is enabled, the Data Catalog uses
--   a customer-provided key to encrypt the password as part of
--   <tt>CreateConnection</tt> or <tt>UpdateConnection</tt> and store it in
--   the <tt>ENCRYPTED_PASSWORD</tt> field in the connection properties.
--   You can enable catalog encryption or only password encryption.
dataCatalogEncryptionSettings_connectionPasswordEncryption :: Lens' DataCatalogEncryptionSettings (Maybe ConnectionPasswordEncryption)
instance GHC.Generics.Generic Network.AWS.Glue.Types.DataCatalogEncryptionSettings.DataCatalogEncryptionSettings
instance GHC.Show.Show Network.AWS.Glue.Types.DataCatalogEncryptionSettings.DataCatalogEncryptionSettings
instance GHC.Read.Read Network.AWS.Glue.Types.DataCatalogEncryptionSettings.DataCatalogEncryptionSettings
instance GHC.Classes.Eq Network.AWS.Glue.Types.DataCatalogEncryptionSettings.DataCatalogEncryptionSettings
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.DataCatalogEncryptionSettings.DataCatalogEncryptionSettings
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.DataCatalogEncryptionSettings.DataCatalogEncryptionSettings
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.DataCatalogEncryptionSettings.DataCatalogEncryptionSettings
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.DataCatalogEncryptionSettings.DataCatalogEncryptionSettings


module Network.AWS.Glue.Types.ErrorDetail

-- | Contains details about an error.
--   
--   <i>See:</i> <a>newErrorDetail</a> smart constructor.
data ErrorDetail
ErrorDetail' :: Maybe Text -> Maybe Text -> ErrorDetail

-- | The code associated with this error.
[$sel:errorCode:ErrorDetail'] :: ErrorDetail -> Maybe Text

-- | A message describing the error.
[$sel:errorMessage:ErrorDetail'] :: ErrorDetail -> Maybe Text

-- | Create a value of <a>ErrorDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:ErrorDetail'</a>, <a>errorDetail_errorCode</a> - The
--   code associated with this error.
--   
--   <a>$sel:errorMessage:ErrorDetail'</a>, <a>errorDetail_errorMessage</a>
--   - A message describing the error.
newErrorDetail :: ErrorDetail

-- | The code associated with this error.
errorDetail_errorCode :: Lens' ErrorDetail (Maybe Text)

-- | A message describing the error.
errorDetail_errorMessage :: Lens' ErrorDetail (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.ErrorDetail.ErrorDetail
instance GHC.Show.Show Network.AWS.Glue.Types.ErrorDetail.ErrorDetail
instance GHC.Read.Read Network.AWS.Glue.Types.ErrorDetail.ErrorDetail
instance GHC.Classes.Eq Network.AWS.Glue.Types.ErrorDetail.ErrorDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ErrorDetail.ErrorDetail
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ErrorDetail.ErrorDetail
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ErrorDetail.ErrorDetail


module Network.AWS.Glue.Types.ColumnError

-- | Encapsulates a column name that failed and the reason for failure.
--   
--   <i>See:</i> <a>newColumnError</a> smart constructor.
data ColumnError
ColumnError' :: Maybe ErrorDetail -> Maybe Text -> ColumnError

-- | An error message with the reason for the failure of an operation.
[$sel:error:ColumnError'] :: ColumnError -> Maybe ErrorDetail

-- | The name of the column that failed.
[$sel:columnName:ColumnError'] :: ColumnError -> Maybe Text

-- | Create a value of <a>ColumnError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:error:ColumnError'</a>, <a>columnError_error</a> - An error
--   message with the reason for the failure of an operation.
--   
--   <a>$sel:columnName:ColumnError'</a>, <a>columnError_columnName</a> -
--   The name of the column that failed.
newColumnError :: ColumnError

-- | An error message with the reason for the failure of an operation.
columnError_error :: Lens' ColumnError (Maybe ErrorDetail)

-- | The name of the column that failed.
columnError_columnName :: Lens' ColumnError (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.ColumnError.ColumnError
instance GHC.Show.Show Network.AWS.Glue.Types.ColumnError.ColumnError
instance GHC.Read.Read Network.AWS.Glue.Types.ColumnError.ColumnError
instance GHC.Classes.Eq Network.AWS.Glue.Types.ColumnError.ColumnError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ColumnError.ColumnError
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ColumnError.ColumnError
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ColumnError.ColumnError


module Network.AWS.Glue.Types.BatchUpdatePartitionFailureEntry

-- | Contains information about a batch update partition error.
--   
--   <i>See:</i> <a>newBatchUpdatePartitionFailureEntry</a> smart
--   constructor.
data BatchUpdatePartitionFailureEntry
BatchUpdatePartitionFailureEntry' :: Maybe [Text] -> Maybe ErrorDetail -> BatchUpdatePartitionFailureEntry

-- | A list of values defining the partitions.
[$sel:partitionValueList:BatchUpdatePartitionFailureEntry'] :: BatchUpdatePartitionFailureEntry -> Maybe [Text]

-- | The details about the batch update partition error.
[$sel:errorDetail:BatchUpdatePartitionFailureEntry'] :: BatchUpdatePartitionFailureEntry -> Maybe ErrorDetail

-- | Create a value of <a>BatchUpdatePartitionFailureEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitionValueList:BatchUpdatePartitionFailureEntry'</a>,
--   <a>batchUpdatePartitionFailureEntry_partitionValueList</a> - A list of
--   values defining the partitions.
--   
--   <a>$sel:errorDetail:BatchUpdatePartitionFailureEntry'</a>,
--   <a>batchUpdatePartitionFailureEntry_errorDetail</a> - The details
--   about the batch update partition error.
newBatchUpdatePartitionFailureEntry :: BatchUpdatePartitionFailureEntry

-- | A list of values defining the partitions.
batchUpdatePartitionFailureEntry_partitionValueList :: Lens' BatchUpdatePartitionFailureEntry (Maybe [Text])

-- | The details about the batch update partition error.
batchUpdatePartitionFailureEntry_errorDetail :: Lens' BatchUpdatePartitionFailureEntry (Maybe ErrorDetail)
instance GHC.Generics.Generic Network.AWS.Glue.Types.BatchUpdatePartitionFailureEntry.BatchUpdatePartitionFailureEntry
instance GHC.Show.Show Network.AWS.Glue.Types.BatchUpdatePartitionFailureEntry.BatchUpdatePartitionFailureEntry
instance GHC.Read.Read Network.AWS.Glue.Types.BatchUpdatePartitionFailureEntry.BatchUpdatePartitionFailureEntry
instance GHC.Classes.Eq Network.AWS.Glue.Types.BatchUpdatePartitionFailureEntry.BatchUpdatePartitionFailureEntry
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.BatchUpdatePartitionFailureEntry.BatchUpdatePartitionFailureEntry
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.BatchUpdatePartitionFailureEntry.BatchUpdatePartitionFailureEntry
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.BatchUpdatePartitionFailureEntry.BatchUpdatePartitionFailureEntry


module Network.AWS.Glue.Types.BatchStopJobRunError

-- | Records an error that occurred when attempting to stop a specified job
--   run.
--   
--   <i>See:</i> <a>newBatchStopJobRunError</a> smart constructor.
data BatchStopJobRunError
BatchStopJobRunError' :: Maybe Text -> Maybe Text -> Maybe ErrorDetail -> BatchStopJobRunError

-- | The name of the job definition that is used in the job run in
--   question.
[$sel:jobName:BatchStopJobRunError'] :: BatchStopJobRunError -> Maybe Text

-- | The <tt>JobRunId</tt> of the job run in question.
[$sel:jobRunId:BatchStopJobRunError'] :: BatchStopJobRunError -> Maybe Text

-- | Specifies details about the error that was encountered.
[$sel:errorDetail:BatchStopJobRunError'] :: BatchStopJobRunError -> Maybe ErrorDetail

-- | Create a value of <a>BatchStopJobRunError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:BatchStopJobRunError'</a>,
--   <a>batchStopJobRunError_jobName</a> - The name of the job definition
--   that is used in the job run in question.
--   
--   <a>$sel:jobRunId:BatchStopJobRunError'</a>,
--   <a>batchStopJobRunError_jobRunId</a> - The <tt>JobRunId</tt> of the
--   job run in question.
--   
--   <a>$sel:errorDetail:BatchStopJobRunError'</a>,
--   <a>batchStopJobRunError_errorDetail</a> - Specifies details about the
--   error that was encountered.
newBatchStopJobRunError :: BatchStopJobRunError

-- | The name of the job definition that is used in the job run in
--   question.
batchStopJobRunError_jobName :: Lens' BatchStopJobRunError (Maybe Text)

-- | The <tt>JobRunId</tt> of the job run in question.
batchStopJobRunError_jobRunId :: Lens' BatchStopJobRunError (Maybe Text)

-- | Specifies details about the error that was encountered.
batchStopJobRunError_errorDetail :: Lens' BatchStopJobRunError (Maybe ErrorDetail)
instance GHC.Generics.Generic Network.AWS.Glue.Types.BatchStopJobRunError.BatchStopJobRunError
instance GHC.Show.Show Network.AWS.Glue.Types.BatchStopJobRunError.BatchStopJobRunError
instance GHC.Read.Read Network.AWS.Glue.Types.BatchStopJobRunError.BatchStopJobRunError
instance GHC.Classes.Eq Network.AWS.Glue.Types.BatchStopJobRunError.BatchStopJobRunError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.BatchStopJobRunError.BatchStopJobRunError
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.BatchStopJobRunError.BatchStopJobRunError
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.BatchStopJobRunError.BatchStopJobRunError


module Network.AWS.Glue.Types.ErrorDetails

-- | An object containing error details.
--   
--   <i>See:</i> <a>newErrorDetails</a> smart constructor.
data ErrorDetails
ErrorDetails' :: Maybe Text -> Maybe Text -> ErrorDetails

-- | The error code for an error.
[$sel:errorCode:ErrorDetails'] :: ErrorDetails -> Maybe Text

-- | The error message for an error.
[$sel:errorMessage:ErrorDetails'] :: ErrorDetails -> Maybe Text

-- | Create a value of <a>ErrorDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:ErrorDetails'</a>, <a>errorDetails_errorCode</a> -
--   The error code for an error.
--   
--   <a>$sel:errorMessage:ErrorDetails'</a>,
--   <a>errorDetails_errorMessage</a> - The error message for an error.
newErrorDetails :: ErrorDetails

-- | The error code for an error.
errorDetails_errorCode :: Lens' ErrorDetails (Maybe Text)

-- | The error message for an error.
errorDetails_errorMessage :: Lens' ErrorDetails (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.ErrorDetails.ErrorDetails
instance GHC.Show.Show Network.AWS.Glue.Types.ErrorDetails.ErrorDetails
instance GHC.Read.Read Network.AWS.Glue.Types.ErrorDetails.ErrorDetails
instance GHC.Classes.Eq Network.AWS.Glue.Types.ErrorDetails.ErrorDetails
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ErrorDetails.ErrorDetails
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ErrorDetails.ErrorDetails
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ErrorDetails.ErrorDetails


module Network.AWS.Glue.Types.EventBatchingCondition

-- | Batch condition that must be met (specified number of events received
--   or batch time window expired) before EventBridge event trigger fires.
--   
--   <i>See:</i> <a>newEventBatchingCondition</a> smart constructor.
data EventBatchingCondition
EventBatchingCondition' :: Maybe Natural -> Natural -> EventBatchingCondition

-- | Window of time in seconds after which EventBridge event trigger fires.
--   Window starts when first event is received.
[$sel:batchWindow:EventBatchingCondition'] :: EventBatchingCondition -> Maybe Natural

-- | Number of events that must be received from Amazon EventBridge before
--   EventBridge event trigger fires.
[$sel:batchSize:EventBatchingCondition'] :: EventBatchingCondition -> Natural

-- | Create a value of <a>EventBatchingCondition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchWindow:EventBatchingCondition'</a>,
--   <a>eventBatchingCondition_batchWindow</a> - Window of time in seconds
--   after which EventBridge event trigger fires. Window starts when first
--   event is received.
--   
--   <a>$sel:batchSize:EventBatchingCondition'</a>,
--   <a>eventBatchingCondition_batchSize</a> - Number of events that must
--   be received from Amazon EventBridge before EventBridge event trigger
--   fires.
newEventBatchingCondition :: Natural -> EventBatchingCondition

-- | Window of time in seconds after which EventBridge event trigger fires.
--   Window starts when first event is received.
eventBatchingCondition_batchWindow :: Lens' EventBatchingCondition (Maybe Natural)

-- | Number of events that must be received from Amazon EventBridge before
--   EventBridge event trigger fires.
eventBatchingCondition_batchSize :: Lens' EventBatchingCondition Natural
instance GHC.Generics.Generic Network.AWS.Glue.Types.EventBatchingCondition.EventBatchingCondition
instance GHC.Show.Show Network.AWS.Glue.Types.EventBatchingCondition.EventBatchingCondition
instance GHC.Read.Read Network.AWS.Glue.Types.EventBatchingCondition.EventBatchingCondition
instance GHC.Classes.Eq Network.AWS.Glue.Types.EventBatchingCondition.EventBatchingCondition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.EventBatchingCondition.EventBatchingCondition
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.EventBatchingCondition.EventBatchingCondition
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.EventBatchingCondition.EventBatchingCondition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.EventBatchingCondition.EventBatchingCondition


module Network.AWS.Glue.Types.ExecutionProperty

-- | An execution property of a job.
--   
--   <i>See:</i> <a>newExecutionProperty</a> smart constructor.
data ExecutionProperty
ExecutionProperty' :: Maybe Int -> ExecutionProperty

-- | The maximum number of concurrent runs allowed for the job. The default
--   is 1. An error is returned when this threshold is reached. The maximum
--   value you can specify is controlled by a service limit.
[$sel:maxConcurrentRuns:ExecutionProperty'] :: ExecutionProperty -> Maybe Int

-- | Create a value of <a>ExecutionProperty</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxConcurrentRuns:ExecutionProperty'</a>,
--   <a>executionProperty_maxConcurrentRuns</a> - The maximum number of
--   concurrent runs allowed for the job. The default is 1. An error is
--   returned when this threshold is reached. The maximum value you can
--   specify is controlled by a service limit.
newExecutionProperty :: ExecutionProperty

-- | The maximum number of concurrent runs allowed for the job. The default
--   is 1. An error is returned when this threshold is reached. The maximum
--   value you can specify is controlled by a service limit.
executionProperty_maxConcurrentRuns :: Lens' ExecutionProperty (Maybe Int)
instance GHC.Generics.Generic Network.AWS.Glue.Types.ExecutionProperty.ExecutionProperty
instance GHC.Show.Show Network.AWS.Glue.Types.ExecutionProperty.ExecutionProperty
instance GHC.Read.Read Network.AWS.Glue.Types.ExecutionProperty.ExecutionProperty
instance GHC.Classes.Eq Network.AWS.Glue.Types.ExecutionProperty.ExecutionProperty
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ExecutionProperty.ExecutionProperty
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ExecutionProperty.ExecutionProperty
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ExecutionProperty.ExecutionProperty
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.ExecutionProperty.ExecutionProperty


module Network.AWS.Glue.Types.ExistCondition
newtype ExistCondition
ExistCondition' :: Text -> ExistCondition
[fromExistCondition] :: ExistCondition -> Text
pattern ExistCondition_MUST_EXIST :: ExistCondition
pattern ExistCondition_NONE :: ExistCondition
pattern ExistCondition_NOT_EXIST :: ExistCondition
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.ExistCondition.ExistCondition
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.ExistCondition.ExistCondition
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.ExistCondition.ExistCondition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.ExistCondition.ExistCondition
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.ExistCondition.ExistCondition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ExistCondition.ExistCondition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.ExistCondition.ExistCondition
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.ExistCondition.ExistCondition
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.ExistCondition.ExistCondition
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.ExistCondition.ExistCondition
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.ExistCondition.ExistCondition
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.ExistCondition.ExistCondition
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ExistCondition.ExistCondition
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ExistCondition.ExistCondition
instance GHC.Generics.Generic Network.AWS.Glue.Types.ExistCondition.ExistCondition
instance GHC.Classes.Ord Network.AWS.Glue.Types.ExistCondition.ExistCondition
instance GHC.Classes.Eq Network.AWS.Glue.Types.ExistCondition.ExistCondition
instance GHC.Read.Read Network.AWS.Glue.Types.ExistCondition.ExistCondition
instance GHC.Show.Show Network.AWS.Glue.Types.ExistCondition.ExistCondition


module Network.AWS.Glue.Types.ExportLabelsTaskRunProperties

-- | Specifies configuration properties for an exporting labels task run.
--   
--   <i>See:</i> <a>newExportLabelsTaskRunProperties</a> smart constructor.
data ExportLabelsTaskRunProperties
ExportLabelsTaskRunProperties' :: Maybe Text -> ExportLabelsTaskRunProperties

-- | The Amazon Simple Storage Service (Amazon S3) path where you will
--   export the labels.
[$sel:outputS3Path:ExportLabelsTaskRunProperties'] :: ExportLabelsTaskRunProperties -> Maybe Text

-- | Create a value of <a>ExportLabelsTaskRunProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputS3Path:ExportLabelsTaskRunProperties'</a>,
--   <a>exportLabelsTaskRunProperties_outputS3Path</a> - The Amazon Simple
--   Storage Service (Amazon S3) path where you will export the labels.
newExportLabelsTaskRunProperties :: ExportLabelsTaskRunProperties

-- | The Amazon Simple Storage Service (Amazon S3) path where you will
--   export the labels.
exportLabelsTaskRunProperties_outputS3Path :: Lens' ExportLabelsTaskRunProperties (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.ExportLabelsTaskRunProperties.ExportLabelsTaskRunProperties
instance GHC.Show.Show Network.AWS.Glue.Types.ExportLabelsTaskRunProperties.ExportLabelsTaskRunProperties
instance GHC.Read.Read Network.AWS.Glue.Types.ExportLabelsTaskRunProperties.ExportLabelsTaskRunProperties
instance GHC.Classes.Eq Network.AWS.Glue.Types.ExportLabelsTaskRunProperties.ExportLabelsTaskRunProperties
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ExportLabelsTaskRunProperties.ExportLabelsTaskRunProperties
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ExportLabelsTaskRunProperties.ExportLabelsTaskRunProperties
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ExportLabelsTaskRunProperties.ExportLabelsTaskRunProperties


module Network.AWS.Glue.Types.FindMatchesMetrics

-- | The evaluation metrics for the find matches algorithm. The quality of
--   your machine learning transform is measured by getting your transform
--   to predict some matches and comparing the results to known matches
--   from the same dataset. The quality metrics are based on a subset of
--   your data, so they are not precise.
--   
--   <i>See:</i> <a>newFindMatchesMetrics</a> smart constructor.
data FindMatchesMetrics
FindMatchesMetrics' :: Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> Maybe [ColumnImportance] -> Maybe ConfusionMatrix -> FindMatchesMetrics

-- | The maximum F1 metric indicates the transform's accuracy between 0 and
--   1, where 1 is the best accuracy.
--   
--   For more information, see <a>F1 score</a> in Wikipedia.
[$sel:f1:FindMatchesMetrics'] :: FindMatchesMetrics -> Maybe Double

-- | The area under the precision/recall curve (AUPRC) is a single number
--   measuring the overall quality of the transform, that is independent of
--   the choice made for precision vs. recall. Higher values indicate that
--   you have a more attractive precision vs. recall tradeoff.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
[$sel:areaUnderPRCurve:FindMatchesMetrics'] :: FindMatchesMetrics -> Maybe Double

-- | The recall metric indicates that for an actual match, how often your
--   transform predicts the match. Specifically, it measures how well the
--   transform finds true positives from the total records in the source
--   data.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
[$sel:recall:FindMatchesMetrics'] :: FindMatchesMetrics -> Maybe Double

-- | The precision metric indicates when often your transform is correct
--   when it predicts a match. Specifically, it measures how well the
--   transform finds true positives from the total true positives possible.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
[$sel:precision:FindMatchesMetrics'] :: FindMatchesMetrics -> Maybe Double

-- | A list of <tt>ColumnImportance</tt> structures containing column
--   importance metrics, sorted in order of descending importance.
[$sel:columnImportances:FindMatchesMetrics'] :: FindMatchesMetrics -> Maybe [ColumnImportance]

-- | The confusion matrix shows you what your transform is predicting
--   accurately and what types of errors it is making.
--   
--   For more information, see <a>Confusion matrix</a> in Wikipedia.
[$sel:confusionMatrix:FindMatchesMetrics'] :: FindMatchesMetrics -> Maybe ConfusionMatrix

-- | Create a value of <a>FindMatchesMetrics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:f1:FindMatchesMetrics'</a>, <a>findMatchesMetrics_f1</a> - The
--   maximum F1 metric indicates the transform's accuracy between 0 and 1,
--   where 1 is the best accuracy.
--   
--   For more information, see <a>F1 score</a> in Wikipedia.
--   
--   <a>$sel:areaUnderPRCurve:FindMatchesMetrics'</a>,
--   <a>findMatchesMetrics_areaUnderPRCurve</a> - The area under the
--   precision/recall curve (AUPRC) is a single number measuring the
--   overall quality of the transform, that is independent of the choice
--   made for precision vs. recall. Higher values indicate that you have a
--   more attractive precision vs. recall tradeoff.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
--   
--   <a>$sel:recall:FindMatchesMetrics'</a>,
--   <a>findMatchesMetrics_recall</a> - The recall metric indicates that
--   for an actual match, how often your transform predicts the match.
--   Specifically, it measures how well the transform finds true positives
--   from the total records in the source data.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
--   
--   <a>$sel:precision:FindMatchesMetrics'</a>,
--   <a>findMatchesMetrics_precision</a> - The precision metric indicates
--   when often your transform is correct when it predicts a match.
--   Specifically, it measures how well the transform finds true positives
--   from the total true positives possible.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
--   
--   <a>$sel:columnImportances:FindMatchesMetrics'</a>,
--   <a>findMatchesMetrics_columnImportances</a> - A list of
--   <tt>ColumnImportance</tt> structures containing column importance
--   metrics, sorted in order of descending importance.
--   
--   <a>$sel:confusionMatrix:FindMatchesMetrics'</a>,
--   <a>findMatchesMetrics_confusionMatrix</a> - The confusion matrix shows
--   you what your transform is predicting accurately and what types of
--   errors it is making.
--   
--   For more information, see <a>Confusion matrix</a> in Wikipedia.
newFindMatchesMetrics :: FindMatchesMetrics

-- | The maximum F1 metric indicates the transform's accuracy between 0 and
--   1, where 1 is the best accuracy.
--   
--   For more information, see <a>F1 score</a> in Wikipedia.
findMatchesMetrics_f1 :: Lens' FindMatchesMetrics (Maybe Double)

-- | The area under the precision/recall curve (AUPRC) is a single number
--   measuring the overall quality of the transform, that is independent of
--   the choice made for precision vs. recall. Higher values indicate that
--   you have a more attractive precision vs. recall tradeoff.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
findMatchesMetrics_areaUnderPRCurve :: Lens' FindMatchesMetrics (Maybe Double)

-- | The recall metric indicates that for an actual match, how often your
--   transform predicts the match. Specifically, it measures how well the
--   transform finds true positives from the total records in the source
--   data.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
findMatchesMetrics_recall :: Lens' FindMatchesMetrics (Maybe Double)

-- | The precision metric indicates when often your transform is correct
--   when it predicts a match. Specifically, it measures how well the
--   transform finds true positives from the total true positives possible.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
findMatchesMetrics_precision :: Lens' FindMatchesMetrics (Maybe Double)

-- | A list of <tt>ColumnImportance</tt> structures containing column
--   importance metrics, sorted in order of descending importance.
findMatchesMetrics_columnImportances :: Lens' FindMatchesMetrics (Maybe [ColumnImportance])

-- | The confusion matrix shows you what your transform is predicting
--   accurately and what types of errors it is making.
--   
--   For more information, see <a>Confusion matrix</a> in Wikipedia.
findMatchesMetrics_confusionMatrix :: Lens' FindMatchesMetrics (Maybe ConfusionMatrix)
instance GHC.Generics.Generic Network.AWS.Glue.Types.FindMatchesMetrics.FindMatchesMetrics
instance GHC.Show.Show Network.AWS.Glue.Types.FindMatchesMetrics.FindMatchesMetrics
instance GHC.Read.Read Network.AWS.Glue.Types.FindMatchesMetrics.FindMatchesMetrics
instance GHC.Classes.Eq Network.AWS.Glue.Types.FindMatchesMetrics.FindMatchesMetrics
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.FindMatchesMetrics.FindMatchesMetrics
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.FindMatchesMetrics.FindMatchesMetrics
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.FindMatchesMetrics.FindMatchesMetrics


module Network.AWS.Glue.Types.FindMatchesParameters

-- | The parameters to configure the find matches transform.
--   
--   <i>See:</i> <a>newFindMatchesParameters</a> smart constructor.
data FindMatchesParameters
FindMatchesParameters' :: Maybe Bool -> Maybe Double -> Maybe Double -> Maybe Text -> FindMatchesParameters

-- | The value to switch on or off to force the output to match the
--   provided labels from users. If the value is <tt>True</tt>, the
--   <tt>find matches</tt> transform forces the output to match the
--   provided labels. The results override the normal conflation results.
--   If the value is <tt>False</tt>, the <tt>find matches</tt> transform
--   does not ensure all the labels provided are respected, and the results
--   rely on the trained model.
--   
--   Note that setting this value to true may increase the conflation
--   execution time.
[$sel:enforceProvidedLabels:FindMatchesParameters'] :: FindMatchesParameters -> Maybe Bool

-- | The value that is selected when tuning your transform for a balance
--   between accuracy and cost. A value of 0.5 means that the system
--   balances accuracy and cost concerns. A value of 1.0 means a bias
--   purely for accuracy, which typically results in a higher cost,
--   sometimes substantially higher. A value of 0.0 means a bias purely for
--   cost, which results in a less accurate <tt>FindMatches</tt> transform,
--   sometimes with unacceptable accuracy.
--   
--   Accuracy measures how well the transform finds true positives and true
--   negatives. Increasing accuracy requires more machine resources and
--   cost. But it also results in increased recall.
--   
--   Cost measures how many compute resources, and thus money, are consumed
--   to run the transform.
[$sel:accuracyCostTradeoff:FindMatchesParameters'] :: FindMatchesParameters -> Maybe Double

-- | The value selected when tuning your transform for a balance between
--   precision and recall. A value of 0.5 means no preference; a value of
--   1.0 means a bias purely for precision, and a value of 0.0 means a bias
--   for recall. Because this is a tradeoff, choosing values close to 1.0
--   means very low recall, and choosing values close to 0.0 results in
--   very low precision.
--   
--   The precision metric indicates how often your model is correct when it
--   predicts a match.
--   
--   The recall metric indicates that for an actual match, how often your
--   model predicts the match.
[$sel:precisionRecallTradeoff:FindMatchesParameters'] :: FindMatchesParameters -> Maybe Double

-- | The name of a column that uniquely identifies rows in the source
--   table. Used to help identify matching records.
[$sel:primaryKeyColumnName:FindMatchesParameters'] :: FindMatchesParameters -> Maybe Text

-- | Create a value of <a>FindMatchesParameters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enforceProvidedLabels:FindMatchesParameters'</a>,
--   <a>findMatchesParameters_enforceProvidedLabels</a> - The value to
--   switch on or off to force the output to match the provided labels from
--   users. If the value is <tt>True</tt>, the <tt>find matches</tt>
--   transform forces the output to match the provided labels. The results
--   override the normal conflation results. If the value is
--   <tt>False</tt>, the <tt>find matches</tt> transform does not ensure
--   all the labels provided are respected, and the results rely on the
--   trained model.
--   
--   Note that setting this value to true may increase the conflation
--   execution time.
--   
--   <a>$sel:accuracyCostTradeoff:FindMatchesParameters'</a>,
--   <a>findMatchesParameters_accuracyCostTradeoff</a> - The value that is
--   selected when tuning your transform for a balance between accuracy and
--   cost. A value of 0.5 means that the system balances accuracy and cost
--   concerns. A value of 1.0 means a bias purely for accuracy, which
--   typically results in a higher cost, sometimes substantially higher. A
--   value of 0.0 means a bias purely for cost, which results in a less
--   accurate <tt>FindMatches</tt> transform, sometimes with unacceptable
--   accuracy.
--   
--   Accuracy measures how well the transform finds true positives and true
--   negatives. Increasing accuracy requires more machine resources and
--   cost. But it also results in increased recall.
--   
--   Cost measures how many compute resources, and thus money, are consumed
--   to run the transform.
--   
--   <a>$sel:precisionRecallTradeoff:FindMatchesParameters'</a>,
--   <a>findMatchesParameters_precisionRecallTradeoff</a> - The value
--   selected when tuning your transform for a balance between precision
--   and recall. A value of 0.5 means no preference; a value of 1.0 means a
--   bias purely for precision, and a value of 0.0 means a bias for recall.
--   Because this is a tradeoff, choosing values close to 1.0 means very
--   low recall, and choosing values close to 0.0 results in very low
--   precision.
--   
--   The precision metric indicates how often your model is correct when it
--   predicts a match.
--   
--   The recall metric indicates that for an actual match, how often your
--   model predicts the match.
--   
--   <a>$sel:primaryKeyColumnName:FindMatchesParameters'</a>,
--   <a>findMatchesParameters_primaryKeyColumnName</a> - The name of a
--   column that uniquely identifies rows in the source table. Used to help
--   identify matching records.
newFindMatchesParameters :: FindMatchesParameters

-- | The value to switch on or off to force the output to match the
--   provided labels from users. If the value is <tt>True</tt>, the
--   <tt>find matches</tt> transform forces the output to match the
--   provided labels. The results override the normal conflation results.
--   If the value is <tt>False</tt>, the <tt>find matches</tt> transform
--   does not ensure all the labels provided are respected, and the results
--   rely on the trained model.
--   
--   Note that setting this value to true may increase the conflation
--   execution time.
findMatchesParameters_enforceProvidedLabels :: Lens' FindMatchesParameters (Maybe Bool)

-- | The value that is selected when tuning your transform for a balance
--   between accuracy and cost. A value of 0.5 means that the system
--   balances accuracy and cost concerns. A value of 1.0 means a bias
--   purely for accuracy, which typically results in a higher cost,
--   sometimes substantially higher. A value of 0.0 means a bias purely for
--   cost, which results in a less accurate <tt>FindMatches</tt> transform,
--   sometimes with unacceptable accuracy.
--   
--   Accuracy measures how well the transform finds true positives and true
--   negatives. Increasing accuracy requires more machine resources and
--   cost. But it also results in increased recall.
--   
--   Cost measures how many compute resources, and thus money, are consumed
--   to run the transform.
findMatchesParameters_accuracyCostTradeoff :: Lens' FindMatchesParameters (Maybe Double)

-- | The value selected when tuning your transform for a balance between
--   precision and recall. A value of 0.5 means no preference; a value of
--   1.0 means a bias purely for precision, and a value of 0.0 means a bias
--   for recall. Because this is a tradeoff, choosing values close to 1.0
--   means very low recall, and choosing values close to 0.0 results in
--   very low precision.
--   
--   The precision metric indicates how often your model is correct when it
--   predicts a match.
--   
--   The recall metric indicates that for an actual match, how often your
--   model predicts the match.
findMatchesParameters_precisionRecallTradeoff :: Lens' FindMatchesParameters (Maybe Double)

-- | The name of a column that uniquely identifies rows in the source
--   table. Used to help identify matching records.
findMatchesParameters_primaryKeyColumnName :: Lens' FindMatchesParameters (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.FindMatchesParameters.FindMatchesParameters
instance GHC.Show.Show Network.AWS.Glue.Types.FindMatchesParameters.FindMatchesParameters
instance GHC.Read.Read Network.AWS.Glue.Types.FindMatchesParameters.FindMatchesParameters
instance GHC.Classes.Eq Network.AWS.Glue.Types.FindMatchesParameters.FindMatchesParameters
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.FindMatchesParameters.FindMatchesParameters
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.FindMatchesParameters.FindMatchesParameters
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.FindMatchesParameters.FindMatchesParameters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.FindMatchesParameters.FindMatchesParameters


module Network.AWS.Glue.Types.FindMatchesTaskRunProperties

-- | Specifies configuration properties for a Find Matches task run.
--   
--   <i>See:</i> <a>newFindMatchesTaskRunProperties</a> smart constructor.
data FindMatchesTaskRunProperties
FindMatchesTaskRunProperties' :: Maybe Text -> Maybe Text -> Maybe Text -> FindMatchesTaskRunProperties

-- | The job ID for the Find Matches task run.
[$sel:jobId:FindMatchesTaskRunProperties'] :: FindMatchesTaskRunProperties -> Maybe Text

-- | The name assigned to the job for the Find Matches task run.
[$sel:jobName:FindMatchesTaskRunProperties'] :: FindMatchesTaskRunProperties -> Maybe Text

-- | The job run ID for the Find Matches task run.
[$sel:jobRunId:FindMatchesTaskRunProperties'] :: FindMatchesTaskRunProperties -> Maybe Text

-- | Create a value of <a>FindMatchesTaskRunProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:FindMatchesTaskRunProperties'</a>,
--   <a>findMatchesTaskRunProperties_jobId</a> - The job ID for the Find
--   Matches task run.
--   
--   <a>$sel:jobName:FindMatchesTaskRunProperties'</a>,
--   <a>findMatchesTaskRunProperties_jobName</a> - The name assigned to the
--   job for the Find Matches task run.
--   
--   <a>$sel:jobRunId:FindMatchesTaskRunProperties'</a>,
--   <a>findMatchesTaskRunProperties_jobRunId</a> - The job run ID for the
--   Find Matches task run.
newFindMatchesTaskRunProperties :: FindMatchesTaskRunProperties

-- | The job ID for the Find Matches task run.
findMatchesTaskRunProperties_jobId :: Lens' FindMatchesTaskRunProperties (Maybe Text)

-- | The name assigned to the job for the Find Matches task run.
findMatchesTaskRunProperties_jobName :: Lens' FindMatchesTaskRunProperties (Maybe Text)

-- | The job run ID for the Find Matches task run.
findMatchesTaskRunProperties_jobRunId :: Lens' FindMatchesTaskRunProperties (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.FindMatchesTaskRunProperties.FindMatchesTaskRunProperties
instance GHC.Show.Show Network.AWS.Glue.Types.FindMatchesTaskRunProperties.FindMatchesTaskRunProperties
instance GHC.Read.Read Network.AWS.Glue.Types.FindMatchesTaskRunProperties.FindMatchesTaskRunProperties
instance GHC.Classes.Eq Network.AWS.Glue.Types.FindMatchesTaskRunProperties.FindMatchesTaskRunProperties
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.FindMatchesTaskRunProperties.FindMatchesTaskRunProperties
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.FindMatchesTaskRunProperties.FindMatchesTaskRunProperties
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.FindMatchesTaskRunProperties.FindMatchesTaskRunProperties


module Network.AWS.Glue.Types.GetConnectionsFilter

-- | Filters the connection definitions that are returned by the
--   <tt>GetConnections</tt> API operation.
--   
--   <i>See:</i> <a>newGetConnectionsFilter</a> smart constructor.
data GetConnectionsFilter
GetConnectionsFilter' :: Maybe [Text] -> Maybe ConnectionType -> GetConnectionsFilter

-- | A criteria string that must match the criteria recorded in the
--   connection definition for that connection definition to be returned.
[$sel:matchCriteria:GetConnectionsFilter'] :: GetConnectionsFilter -> Maybe [Text]

-- | The type of connections to return. Currently, SFTP is not supported.
[$sel:connectionType:GetConnectionsFilter'] :: GetConnectionsFilter -> Maybe ConnectionType

-- | Create a value of <a>GetConnectionsFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:matchCriteria:GetConnectionsFilter'</a>,
--   <a>getConnectionsFilter_matchCriteria</a> - A criteria string that
--   must match the criteria recorded in the connection definition for that
--   connection definition to be returned.
--   
--   <a>$sel:connectionType:GetConnectionsFilter'</a>,
--   <a>getConnectionsFilter_connectionType</a> - The type of connections
--   to return. Currently, SFTP is not supported.
newGetConnectionsFilter :: GetConnectionsFilter

-- | A criteria string that must match the criteria recorded in the
--   connection definition for that connection definition to be returned.
getConnectionsFilter_matchCriteria :: Lens' GetConnectionsFilter (Maybe [Text])

-- | The type of connections to return. Currently, SFTP is not supported.
getConnectionsFilter_connectionType :: Lens' GetConnectionsFilter (Maybe ConnectionType)
instance GHC.Generics.Generic Network.AWS.Glue.Types.GetConnectionsFilter.GetConnectionsFilter
instance GHC.Show.Show Network.AWS.Glue.Types.GetConnectionsFilter.GetConnectionsFilter
instance GHC.Read.Read Network.AWS.Glue.Types.GetConnectionsFilter.GetConnectionsFilter
instance GHC.Classes.Eq Network.AWS.Glue.Types.GetConnectionsFilter.GetConnectionsFilter
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.GetConnectionsFilter.GetConnectionsFilter
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.GetConnectionsFilter.GetConnectionsFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.GetConnectionsFilter.GetConnectionsFilter


module Network.AWS.Glue.Types.GluePolicy

-- | A structure for returning a resource policy.
--   
--   <i>See:</i> <a>newGluePolicy</a> smart constructor.
data GluePolicy
GluePolicy' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> GluePolicy

-- | Contains the requested policy document, in JSON format.
[$sel:policyInJson:GluePolicy'] :: GluePolicy -> Maybe Text

-- | The date and time at which the policy was last updated.
[$sel:updateTime:GluePolicy'] :: GluePolicy -> Maybe POSIX

-- | Contains the hash value associated with this policy.
[$sel:policyHash:GluePolicy'] :: GluePolicy -> Maybe Text

-- | The date and time at which the policy was created.
[$sel:createTime:GluePolicy'] :: GluePolicy -> Maybe POSIX

-- | Create a value of <a>GluePolicy</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyInJson:GluePolicy'</a>, <a>gluePolicy_policyInJson</a> -
--   Contains the requested policy document, in JSON format.
--   
--   <a>$sel:updateTime:GluePolicy'</a>, <a>gluePolicy_updateTime</a> - The
--   date and time at which the policy was last updated.
--   
--   <a>$sel:policyHash:GluePolicy'</a>, <a>gluePolicy_policyHash</a> -
--   Contains the hash value associated with this policy.
--   
--   <a>$sel:createTime:GluePolicy'</a>, <a>gluePolicy_createTime</a> - The
--   date and time at which the policy was created.
newGluePolicy :: GluePolicy

-- | Contains the requested policy document, in JSON format.
gluePolicy_policyInJson :: Lens' GluePolicy (Maybe Text)

-- | The date and time at which the policy was last updated.
gluePolicy_updateTime :: Lens' GluePolicy (Maybe UTCTime)

-- | Contains the hash value associated with this policy.
gluePolicy_policyHash :: Lens' GluePolicy (Maybe Text)

-- | The date and time at which the policy was created.
gluePolicy_createTime :: Lens' GluePolicy (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.Glue.Types.GluePolicy.GluePolicy
instance GHC.Show.Show Network.AWS.Glue.Types.GluePolicy.GluePolicy
instance GHC.Read.Read Network.AWS.Glue.Types.GluePolicy.GluePolicy
instance GHC.Classes.Eq Network.AWS.Glue.Types.GluePolicy.GluePolicy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.GluePolicy.GluePolicy
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.GluePolicy.GluePolicy
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.GluePolicy.GluePolicy


module Network.AWS.Glue.Types.GlueTable

-- | The database and table in the Glue Data Catalog that is used for input
--   or output data.
--   
--   <i>See:</i> <a>newGlueTable</a> smart constructor.
data GlueTable
GlueTable' :: Maybe Text -> Maybe Text -> Text -> Text -> GlueTable

-- | A unique identifier for the Glue Data Catalog.
[$sel:catalogId:GlueTable'] :: GlueTable -> Maybe Text

-- | The name of the connection to the Glue Data Catalog.
[$sel:connectionName:GlueTable'] :: GlueTable -> Maybe Text

-- | A database name in the Glue Data Catalog.
[$sel:databaseName:GlueTable'] :: GlueTable -> Text

-- | A table name in the Glue Data Catalog.
[$sel:tableName:GlueTable'] :: GlueTable -> Text

-- | Create a value of <a>GlueTable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GlueTable'</a>, <a>glueTable_catalogId</a> - A
--   unique identifier for the Glue Data Catalog.
--   
--   <a>$sel:connectionName:GlueTable'</a>, <a>glueTable_connectionName</a>
--   - The name of the connection to the Glue Data Catalog.
--   
--   <a>$sel:databaseName:GlueTable'</a>, <a>glueTable_databaseName</a> - A
--   database name in the Glue Data Catalog.
--   
--   <a>$sel:tableName:GlueTable'</a>, <a>glueTable_tableName</a> - A table
--   name in the Glue Data Catalog.
newGlueTable :: Text -> Text -> GlueTable

-- | A unique identifier for the Glue Data Catalog.
glueTable_catalogId :: Lens' GlueTable (Maybe Text)

-- | The name of the connection to the Glue Data Catalog.
glueTable_connectionName :: Lens' GlueTable (Maybe Text)

-- | A database name in the Glue Data Catalog.
glueTable_databaseName :: Lens' GlueTable Text

-- | A table name in the Glue Data Catalog.
glueTable_tableName :: Lens' GlueTable Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.GlueTable.GlueTable
instance GHC.Show.Show Network.AWS.Glue.Types.GlueTable.GlueTable
instance GHC.Read.Read Network.AWS.Glue.Types.GlueTable.GlueTable
instance GHC.Classes.Eq Network.AWS.Glue.Types.GlueTable.GlueTable
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.GlueTable.GlueTable
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.GlueTable.GlueTable
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.GlueTable.GlueTable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.GlueTable.GlueTable


module Network.AWS.Glue.Types.GrokClassifier

-- | A classifier that uses <tt>grok</tt> patterns.
--   
--   <i>See:</i> <a>newGrokClassifier</a> smart constructor.
data GrokClassifier
GrokClassifier' :: Maybe POSIX -> Maybe POSIX -> Maybe Integer -> Maybe Text -> Text -> Text -> Text -> GrokClassifier

-- | The time that this classifier was registered.
[$sel:creationTime:GrokClassifier'] :: GrokClassifier -> Maybe POSIX

-- | The time that this classifier was last updated.
[$sel:lastUpdated:GrokClassifier'] :: GrokClassifier -> Maybe POSIX

-- | The version of this classifier.
[$sel:version:GrokClassifier'] :: GrokClassifier -> Maybe Integer

-- | Optional custom grok patterns defined by this classifier. For more
--   information, see custom patterns in <a>Writing Custom Classifiers</a>.
[$sel:customPatterns:GrokClassifier'] :: GrokClassifier -> Maybe Text

-- | The name of the classifier.
[$sel:name:GrokClassifier'] :: GrokClassifier -> Text

-- | An identifier of the data format that the classifier matches, such as
--   Twitter, JSON, Omniture logs, and so on.
[$sel:classification:GrokClassifier'] :: GrokClassifier -> Text

-- | The grok pattern applied to a data store by this classifier. For more
--   information, see built-in patterns in <a>Writing Custom
--   Classifiers</a>.
[$sel:grokPattern:GrokClassifier'] :: GrokClassifier -> Text

-- | Create a value of <a>GrokClassifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:GrokClassifier'</a>,
--   <a>grokClassifier_creationTime</a> - The time that this classifier was
--   registered.
--   
--   <a>$sel:lastUpdated:GrokClassifier'</a>,
--   <a>grokClassifier_lastUpdated</a> - The time that this classifier was
--   last updated.
--   
--   <a>$sel:version:GrokClassifier'</a>, <a>grokClassifier_version</a> -
--   The version of this classifier.
--   
--   <a>$sel:customPatterns:GrokClassifier'</a>,
--   <a>grokClassifier_customPatterns</a> - Optional custom grok patterns
--   defined by this classifier. For more information, see custom patterns
--   in <a>Writing Custom Classifiers</a>.
--   
--   <a>$sel:name:GrokClassifier'</a>, <a>grokClassifier_name</a> - The
--   name of the classifier.
--   
--   <a>$sel:classification:GrokClassifier'</a>,
--   <a>grokClassifier_classification</a> - An identifier of the data
--   format that the classifier matches, such as Twitter, JSON, Omniture
--   logs, and so on.
--   
--   <a>$sel:grokPattern:GrokClassifier'</a>,
--   <a>grokClassifier_grokPattern</a> - The grok pattern applied to a data
--   store by this classifier. For more information, see built-in patterns
--   in <a>Writing Custom Classifiers</a>.
newGrokClassifier :: Text -> Text -> Text -> GrokClassifier

-- | The time that this classifier was registered.
grokClassifier_creationTime :: Lens' GrokClassifier (Maybe UTCTime)

-- | The time that this classifier was last updated.
grokClassifier_lastUpdated :: Lens' GrokClassifier (Maybe UTCTime)

-- | The version of this classifier.
grokClassifier_version :: Lens' GrokClassifier (Maybe Integer)

-- | Optional custom grok patterns defined by this classifier. For more
--   information, see custom patterns in <a>Writing Custom Classifiers</a>.
grokClassifier_customPatterns :: Lens' GrokClassifier (Maybe Text)

-- | The name of the classifier.
grokClassifier_name :: Lens' GrokClassifier Text

-- | An identifier of the data format that the classifier matches, such as
--   Twitter, JSON, Omniture logs, and so on.
grokClassifier_classification :: Lens' GrokClassifier Text

-- | The grok pattern applied to a data store by this classifier. For more
--   information, see built-in patterns in <a>Writing Custom
--   Classifiers</a>.
grokClassifier_grokPattern :: Lens' GrokClassifier Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.GrokClassifier.GrokClassifier
instance GHC.Show.Show Network.AWS.Glue.Types.GrokClassifier.GrokClassifier
instance GHC.Read.Read Network.AWS.Glue.Types.GrokClassifier.GrokClassifier
instance GHC.Classes.Eq Network.AWS.Glue.Types.GrokClassifier.GrokClassifier
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.GrokClassifier.GrokClassifier
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.GrokClassifier.GrokClassifier
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.GrokClassifier.GrokClassifier


module Network.AWS.Glue.Types.ImportLabelsTaskRunProperties

-- | Specifies configuration properties for an importing labels task run.
--   
--   <i>See:</i> <a>newImportLabelsTaskRunProperties</a> smart constructor.
data ImportLabelsTaskRunProperties
ImportLabelsTaskRunProperties' :: Maybe Bool -> Maybe Text -> ImportLabelsTaskRunProperties

-- | Indicates whether to overwrite your existing labels.
[$sel:replace:ImportLabelsTaskRunProperties'] :: ImportLabelsTaskRunProperties -> Maybe Bool

-- | The Amazon Simple Storage Service (Amazon S3) path from where you will
--   import the labels.
[$sel:inputS3Path:ImportLabelsTaskRunProperties'] :: ImportLabelsTaskRunProperties -> Maybe Text

-- | Create a value of <a>ImportLabelsTaskRunProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replace:ImportLabelsTaskRunProperties'</a>,
--   <a>importLabelsTaskRunProperties_replace</a> - Indicates whether to
--   overwrite your existing labels.
--   
--   <a>$sel:inputS3Path:ImportLabelsTaskRunProperties'</a>,
--   <a>importLabelsTaskRunProperties_inputS3Path</a> - The Amazon Simple
--   Storage Service (Amazon S3) path from where you will import the
--   labels.
newImportLabelsTaskRunProperties :: ImportLabelsTaskRunProperties

-- | Indicates whether to overwrite your existing labels.
importLabelsTaskRunProperties_replace :: Lens' ImportLabelsTaskRunProperties (Maybe Bool)

-- | The Amazon Simple Storage Service (Amazon S3) path from where you will
--   import the labels.
importLabelsTaskRunProperties_inputS3Path :: Lens' ImportLabelsTaskRunProperties (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.ImportLabelsTaskRunProperties.ImportLabelsTaskRunProperties
instance GHC.Show.Show Network.AWS.Glue.Types.ImportLabelsTaskRunProperties.ImportLabelsTaskRunProperties
instance GHC.Read.Read Network.AWS.Glue.Types.ImportLabelsTaskRunProperties.ImportLabelsTaskRunProperties
instance GHC.Classes.Eq Network.AWS.Glue.Types.ImportLabelsTaskRunProperties.ImportLabelsTaskRunProperties
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ImportLabelsTaskRunProperties.ImportLabelsTaskRunProperties
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ImportLabelsTaskRunProperties.ImportLabelsTaskRunProperties
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ImportLabelsTaskRunProperties.ImportLabelsTaskRunProperties


module Network.AWS.Glue.Types.JdbcTarget

-- | Specifies a JDBC data store to crawl.
--   
--   <i>See:</i> <a>newJdbcTarget</a> smart constructor.
data JdbcTarget
JdbcTarget' :: Maybe Text -> Maybe Text -> Maybe [Text] -> JdbcTarget

-- | The path of the JDBC target.
[$sel:path:JdbcTarget'] :: JdbcTarget -> Maybe Text

-- | The name of the connection to use to connect to the JDBC target.
[$sel:connectionName:JdbcTarget'] :: JdbcTarget -> Maybe Text

-- | A list of glob patterns used to exclude from the crawl. For more
--   information, see <a>Catalog Tables with a Crawler</a>.
[$sel:exclusions:JdbcTarget'] :: JdbcTarget -> Maybe [Text]

-- | Create a value of <a>JdbcTarget</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:JdbcTarget'</a>, <a>jdbcTarget_path</a> - The path of the
--   JDBC target.
--   
--   <a>$sel:connectionName:JdbcTarget'</a>,
--   <a>jdbcTarget_connectionName</a> - The name of the connection to use
--   to connect to the JDBC target.
--   
--   <a>$sel:exclusions:JdbcTarget'</a>, <a>jdbcTarget_exclusions</a> - A
--   list of glob patterns used to exclude from the crawl. For more
--   information, see <a>Catalog Tables with a Crawler</a>.
newJdbcTarget :: JdbcTarget

-- | The path of the JDBC target.
jdbcTarget_path :: Lens' JdbcTarget (Maybe Text)

-- | The name of the connection to use to connect to the JDBC target.
jdbcTarget_connectionName :: Lens' JdbcTarget (Maybe Text)

-- | A list of glob patterns used to exclude from the crawl. For more
--   information, see <a>Catalog Tables with a Crawler</a>.
jdbcTarget_exclusions :: Lens' JdbcTarget (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.Glue.Types.JdbcTarget.JdbcTarget
instance GHC.Show.Show Network.AWS.Glue.Types.JdbcTarget.JdbcTarget
instance GHC.Read.Read Network.AWS.Glue.Types.JdbcTarget.JdbcTarget
instance GHC.Classes.Eq Network.AWS.Glue.Types.JdbcTarget.JdbcTarget
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.JdbcTarget.JdbcTarget
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.JdbcTarget.JdbcTarget
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.JdbcTarget.JdbcTarget
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.JdbcTarget.JdbcTarget


module Network.AWS.Glue.Types.JobBookmarkEntry

-- | Defines a point that a job can resume processing.
--   
--   <i>See:</i> <a>newJobBookmarkEntry</a> smart constructor.
data JobBookmarkEntry
JobBookmarkEntry' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Text -> JobBookmarkEntry

-- | The name of the job in question.
[$sel:jobName:JobBookmarkEntry'] :: JobBookmarkEntry -> Maybe Text

-- | The run ID number.
[$sel:run:JobBookmarkEntry'] :: JobBookmarkEntry -> Maybe Int

-- | The run ID number.
[$sel:runId:JobBookmarkEntry'] :: JobBookmarkEntry -> Maybe Text

-- | The version of the job.
[$sel:version:JobBookmarkEntry'] :: JobBookmarkEntry -> Maybe Int

-- | The unique run identifier associated with the previous job run.
[$sel:previousRunId:JobBookmarkEntry'] :: JobBookmarkEntry -> Maybe Text

-- | The attempt ID number.
[$sel:attempt:JobBookmarkEntry'] :: JobBookmarkEntry -> Maybe Int

-- | The bookmark itself.
[$sel:jobBookmark:JobBookmarkEntry'] :: JobBookmarkEntry -> Maybe Text

-- | Create a value of <a>JobBookmarkEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:JobBookmarkEntry'</a>, <a>jobBookmarkEntry_jobName</a>
--   - The name of the job in question.
--   
--   <a>$sel:run:JobBookmarkEntry'</a>, <a>jobBookmarkEntry_run</a> - The
--   run ID number.
--   
--   <a>$sel:runId:JobBookmarkEntry'</a>, <a>jobBookmarkEntry_runId</a> -
--   The run ID number.
--   
--   <a>$sel:version:JobBookmarkEntry'</a>, <a>jobBookmarkEntry_version</a>
--   - The version of the job.
--   
--   <a>$sel:previousRunId:JobBookmarkEntry'</a>,
--   <a>jobBookmarkEntry_previousRunId</a> - The unique run identifier
--   associated with the previous job run.
--   
--   <a>$sel:attempt:JobBookmarkEntry'</a>, <a>jobBookmarkEntry_attempt</a>
--   - The attempt ID number.
--   
--   <a>$sel:jobBookmark:JobBookmarkEntry'</a>,
--   <a>jobBookmarkEntry_jobBookmark</a> - The bookmark itself.
newJobBookmarkEntry :: JobBookmarkEntry

-- | The name of the job in question.
jobBookmarkEntry_jobName :: Lens' JobBookmarkEntry (Maybe Text)

-- | The run ID number.
jobBookmarkEntry_run :: Lens' JobBookmarkEntry (Maybe Int)

-- | The run ID number.
jobBookmarkEntry_runId :: Lens' JobBookmarkEntry (Maybe Text)

-- | The version of the job.
jobBookmarkEntry_version :: Lens' JobBookmarkEntry (Maybe Int)

-- | The unique run identifier associated with the previous job run.
jobBookmarkEntry_previousRunId :: Lens' JobBookmarkEntry (Maybe Text)

-- | The attempt ID number.
jobBookmarkEntry_attempt :: Lens' JobBookmarkEntry (Maybe Int)

-- | The bookmark itself.
jobBookmarkEntry_jobBookmark :: Lens' JobBookmarkEntry (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.JobBookmarkEntry.JobBookmarkEntry
instance GHC.Show.Show Network.AWS.Glue.Types.JobBookmarkEntry.JobBookmarkEntry
instance GHC.Read.Read Network.AWS.Glue.Types.JobBookmarkEntry.JobBookmarkEntry
instance GHC.Classes.Eq Network.AWS.Glue.Types.JobBookmarkEntry.JobBookmarkEntry
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.JobBookmarkEntry.JobBookmarkEntry
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.JobBookmarkEntry.JobBookmarkEntry
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.JobBookmarkEntry.JobBookmarkEntry


module Network.AWS.Glue.Types.JobBookmarksEncryptionMode
newtype JobBookmarksEncryptionMode
JobBookmarksEncryptionMode' :: Text -> JobBookmarksEncryptionMode
[fromJobBookmarksEncryptionMode] :: JobBookmarksEncryptionMode -> Text
pattern JobBookmarksEncryptionMode_CSE_KMS :: JobBookmarksEncryptionMode
pattern JobBookmarksEncryptionMode_DISABLED :: JobBookmarksEncryptionMode
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.JobBookmarksEncryptionMode.JobBookmarksEncryptionMode
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.JobBookmarksEncryptionMode.JobBookmarksEncryptionMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.JobBookmarksEncryptionMode.JobBookmarksEncryptionMode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.JobBookmarksEncryptionMode.JobBookmarksEncryptionMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.JobBookmarksEncryptionMode.JobBookmarksEncryptionMode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.JobBookmarksEncryptionMode.JobBookmarksEncryptionMode
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.JobBookmarksEncryptionMode.JobBookmarksEncryptionMode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.JobBookmarksEncryptionMode.JobBookmarksEncryptionMode
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.JobBookmarksEncryptionMode.JobBookmarksEncryptionMode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.JobBookmarksEncryptionMode.JobBookmarksEncryptionMode
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.JobBookmarksEncryptionMode.JobBookmarksEncryptionMode
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.JobBookmarksEncryptionMode.JobBookmarksEncryptionMode
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.JobBookmarksEncryptionMode.JobBookmarksEncryptionMode
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.JobBookmarksEncryptionMode.JobBookmarksEncryptionMode
instance GHC.Generics.Generic Network.AWS.Glue.Types.JobBookmarksEncryptionMode.JobBookmarksEncryptionMode
instance GHC.Classes.Ord Network.AWS.Glue.Types.JobBookmarksEncryptionMode.JobBookmarksEncryptionMode
instance GHC.Classes.Eq Network.AWS.Glue.Types.JobBookmarksEncryptionMode.JobBookmarksEncryptionMode
instance GHC.Read.Read Network.AWS.Glue.Types.JobBookmarksEncryptionMode.JobBookmarksEncryptionMode
instance GHC.Show.Show Network.AWS.Glue.Types.JobBookmarksEncryptionMode.JobBookmarksEncryptionMode


module Network.AWS.Glue.Types.JobBookmarksEncryption

-- | Specifies how job bookmark data should be encrypted.
--   
--   <i>See:</i> <a>newJobBookmarksEncryption</a> smart constructor.
data JobBookmarksEncryption
JobBookmarksEncryption' :: Maybe JobBookmarksEncryptionMode -> Maybe Text -> JobBookmarksEncryption

-- | The encryption mode to use for job bookmarks data.
[$sel:jobBookmarksEncryptionMode:JobBookmarksEncryption'] :: JobBookmarksEncryption -> Maybe JobBookmarksEncryptionMode

-- | The Amazon Resource Name (ARN) of the KMS key to be used to encrypt
--   the data.
[$sel:kmsKeyArn:JobBookmarksEncryption'] :: JobBookmarksEncryption -> Maybe Text

-- | Create a value of <a>JobBookmarksEncryption</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobBookmarksEncryptionMode:JobBookmarksEncryption'</a>,
--   <a>jobBookmarksEncryption_jobBookmarksEncryptionMode</a> - The
--   encryption mode to use for job bookmarks data.
--   
--   <a>$sel:kmsKeyArn:JobBookmarksEncryption'</a>,
--   <a>jobBookmarksEncryption_kmsKeyArn</a> - The Amazon Resource Name
--   (ARN) of the KMS key to be used to encrypt the data.
newJobBookmarksEncryption :: JobBookmarksEncryption

-- | The encryption mode to use for job bookmarks data.
jobBookmarksEncryption_jobBookmarksEncryptionMode :: Lens' JobBookmarksEncryption (Maybe JobBookmarksEncryptionMode)

-- | The Amazon Resource Name (ARN) of the KMS key to be used to encrypt
--   the data.
jobBookmarksEncryption_kmsKeyArn :: Lens' JobBookmarksEncryption (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.JobBookmarksEncryption.JobBookmarksEncryption
instance GHC.Show.Show Network.AWS.Glue.Types.JobBookmarksEncryption.JobBookmarksEncryption
instance GHC.Read.Read Network.AWS.Glue.Types.JobBookmarksEncryption.JobBookmarksEncryption
instance GHC.Classes.Eq Network.AWS.Glue.Types.JobBookmarksEncryption.JobBookmarksEncryption
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.JobBookmarksEncryption.JobBookmarksEncryption
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.JobBookmarksEncryption.JobBookmarksEncryption
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.JobBookmarksEncryption.JobBookmarksEncryption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.JobBookmarksEncryption.JobBookmarksEncryption


module Network.AWS.Glue.Types.JobCommand

-- | Specifies code that runs when a job is run.
--   
--   <i>See:</i> <a>newJobCommand</a> smart constructor.
data JobCommand
JobCommand' :: Maybe Text -> Maybe Text -> Maybe Text -> JobCommand

-- | Specifies the Amazon Simple Storage Service (Amazon S3) path to a
--   script that runs a job.
[$sel:scriptLocation:JobCommand'] :: JobCommand -> Maybe Text

-- | The Python version being used to run a Python shell job. Allowed
--   values are 2 or 3.
[$sel:pythonVersion:JobCommand'] :: JobCommand -> Maybe Text

-- | The name of the job command. For an Apache Spark ETL job, this must be
--   <tt>glueetl</tt>. For a Python shell job, it must be
--   <tt>pythonshell</tt>. For an Apache Spark streaming ETL job, this must
--   be <tt>gluestreaming</tt>.
[$sel:name:JobCommand'] :: JobCommand -> Maybe Text

-- | Create a value of <a>JobCommand</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scriptLocation:JobCommand'</a>,
--   <a>jobCommand_scriptLocation</a> - Specifies the Amazon Simple Storage
--   Service (Amazon S3) path to a script that runs a job.
--   
--   <a>$sel:pythonVersion:JobCommand'</a>, <a>jobCommand_pythonVersion</a>
--   - The Python version being used to run a Python shell job. Allowed
--   values are 2 or 3.
--   
--   <a>$sel:name:JobCommand'</a>, <a>jobCommand_name</a> - The name of the
--   job command. For an Apache Spark ETL job, this must be
--   <tt>glueetl</tt>. For a Python shell job, it must be
--   <tt>pythonshell</tt>. For an Apache Spark streaming ETL job, this must
--   be <tt>gluestreaming</tt>.
newJobCommand :: JobCommand

-- | Specifies the Amazon Simple Storage Service (Amazon S3) path to a
--   script that runs a job.
jobCommand_scriptLocation :: Lens' JobCommand (Maybe Text)

-- | The Python version being used to run a Python shell job. Allowed
--   values are 2 or 3.
jobCommand_pythonVersion :: Lens' JobCommand (Maybe Text)

-- | The name of the job command. For an Apache Spark ETL job, this must be
--   <tt>glueetl</tt>. For a Python shell job, it must be
--   <tt>pythonshell</tt>. For an Apache Spark streaming ETL job, this must
--   be <tt>gluestreaming</tt>.
jobCommand_name :: Lens' JobCommand (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.JobCommand.JobCommand
instance GHC.Show.Show Network.AWS.Glue.Types.JobCommand.JobCommand
instance GHC.Read.Read Network.AWS.Glue.Types.JobCommand.JobCommand
instance GHC.Classes.Eq Network.AWS.Glue.Types.JobCommand.JobCommand
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.JobCommand.JobCommand
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.JobCommand.JobCommand
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.JobCommand.JobCommand
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.JobCommand.JobCommand


module Network.AWS.Glue.Types.JobRunState
newtype JobRunState
JobRunState' :: Text -> JobRunState
[fromJobRunState] :: JobRunState -> Text
pattern JobRunState_FAILED :: JobRunState
pattern JobRunState_RUNNING :: JobRunState
pattern JobRunState_STARTING :: JobRunState
pattern JobRunState_STOPPED :: JobRunState
pattern JobRunState_STOPPING :: JobRunState
pattern JobRunState_SUCCEEDED :: JobRunState
pattern JobRunState_TIMEOUT :: JobRunState
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.JobRunState.JobRunState
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.JobRunState.JobRunState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.JobRunState.JobRunState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.JobRunState.JobRunState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.JobRunState.JobRunState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.JobRunState.JobRunState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.JobRunState.JobRunState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.JobRunState.JobRunState
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.JobRunState.JobRunState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.JobRunState.JobRunState
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.JobRunState.JobRunState
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.JobRunState.JobRunState
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.JobRunState.JobRunState
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.JobRunState.JobRunState
instance GHC.Generics.Generic Network.AWS.Glue.Types.JobRunState.JobRunState
instance GHC.Classes.Ord Network.AWS.Glue.Types.JobRunState.JobRunState
instance GHC.Classes.Eq Network.AWS.Glue.Types.JobRunState.JobRunState
instance GHC.Read.Read Network.AWS.Glue.Types.JobRunState.JobRunState
instance GHC.Show.Show Network.AWS.Glue.Types.JobRunState.JobRunState


module Network.AWS.Glue.Types.JsonClassifier

-- | A classifier for <tt>JSON</tt> content.
--   
--   <i>See:</i> <a>newJsonClassifier</a> smart constructor.
data JsonClassifier
JsonClassifier' :: Maybe POSIX -> Maybe POSIX -> Maybe Integer -> Text -> Text -> JsonClassifier

-- | The time that this classifier was registered.
[$sel:creationTime:JsonClassifier'] :: JsonClassifier -> Maybe POSIX

-- | The time that this classifier was last updated.
[$sel:lastUpdated:JsonClassifier'] :: JsonClassifier -> Maybe POSIX

-- | The version of this classifier.
[$sel:version:JsonClassifier'] :: JsonClassifier -> Maybe Integer

-- | The name of the classifier.
[$sel:name:JsonClassifier'] :: JsonClassifier -> Text

-- | A <tt>JsonPath</tt> string defining the JSON data for the classifier
--   to classify. Glue supports a subset of JsonPath, as described in
--   <a>Writing JsonPath Custom Classifiers</a>.
[$sel:jsonPath:JsonClassifier'] :: JsonClassifier -> Text

-- | Create a value of <a>JsonClassifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:JsonClassifier'</a>,
--   <a>jsonClassifier_creationTime</a> - The time that this classifier was
--   registered.
--   
--   <a>$sel:lastUpdated:JsonClassifier'</a>,
--   <a>jsonClassifier_lastUpdated</a> - The time that this classifier was
--   last updated.
--   
--   <a>$sel:version:JsonClassifier'</a>, <a>jsonClassifier_version</a> -
--   The version of this classifier.
--   
--   <a>$sel:name:JsonClassifier'</a>, <a>jsonClassifier_name</a> - The
--   name of the classifier.
--   
--   <a>$sel:jsonPath:JsonClassifier'</a>, <a>jsonClassifier_jsonPath</a> -
--   A <tt>JsonPath</tt> string defining the JSON data for the classifier
--   to classify. Glue supports a subset of JsonPath, as described in
--   <a>Writing JsonPath Custom Classifiers</a>.
newJsonClassifier :: Text -> Text -> JsonClassifier

-- | The time that this classifier was registered.
jsonClassifier_creationTime :: Lens' JsonClassifier (Maybe UTCTime)

-- | The time that this classifier was last updated.
jsonClassifier_lastUpdated :: Lens' JsonClassifier (Maybe UTCTime)

-- | The version of this classifier.
jsonClassifier_version :: Lens' JsonClassifier (Maybe Integer)

-- | The name of the classifier.
jsonClassifier_name :: Lens' JsonClassifier Text

-- | A <tt>JsonPath</tt> string defining the JSON data for the classifier
--   to classify. Glue supports a subset of JsonPath, as described in
--   <a>Writing JsonPath Custom Classifiers</a>.
jsonClassifier_jsonPath :: Lens' JsonClassifier Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.JsonClassifier.JsonClassifier
instance GHC.Show.Show Network.AWS.Glue.Types.JsonClassifier.JsonClassifier
instance GHC.Read.Read Network.AWS.Glue.Types.JsonClassifier.JsonClassifier
instance GHC.Classes.Eq Network.AWS.Glue.Types.JsonClassifier.JsonClassifier
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.JsonClassifier.JsonClassifier
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.JsonClassifier.JsonClassifier
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.JsonClassifier.JsonClassifier


module Network.AWS.Glue.Types.KeySchemaElement

-- | A partition key pair consisting of a name and a type.
--   
--   <i>See:</i> <a>newKeySchemaElement</a> smart constructor.
data KeySchemaElement
KeySchemaElement' :: Text -> Text -> KeySchemaElement

-- | The name of a partition key.
[$sel:name:KeySchemaElement'] :: KeySchemaElement -> Text

-- | The type of a partition key.
[$sel:type':KeySchemaElement'] :: KeySchemaElement -> Text

-- | Create a value of <a>KeySchemaElement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:KeySchemaElement'</a>, <a>keySchemaElement_name</a> - The
--   name of a partition key.
--   
--   <a>$sel:type':KeySchemaElement'</a>, <a>keySchemaElement_type</a> -
--   The type of a partition key.
newKeySchemaElement :: Text -> Text -> KeySchemaElement

-- | The name of a partition key.
keySchemaElement_name :: Lens' KeySchemaElement Text

-- | The type of a partition key.
keySchemaElement_type :: Lens' KeySchemaElement Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.KeySchemaElement.KeySchemaElement
instance GHC.Show.Show Network.AWS.Glue.Types.KeySchemaElement.KeySchemaElement
instance GHC.Read.Read Network.AWS.Glue.Types.KeySchemaElement.KeySchemaElement
instance GHC.Classes.Eq Network.AWS.Glue.Types.KeySchemaElement.KeySchemaElement
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.KeySchemaElement.KeySchemaElement
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.KeySchemaElement.KeySchemaElement
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.KeySchemaElement.KeySchemaElement


module Network.AWS.Glue.Types.LabelingSetGenerationTaskRunProperties

-- | Specifies configuration properties for a labeling set generation task
--   run.
--   
--   <i>See:</i> <a>newLabelingSetGenerationTaskRunProperties</a> smart
--   constructor.
data LabelingSetGenerationTaskRunProperties
LabelingSetGenerationTaskRunProperties' :: Maybe Text -> LabelingSetGenerationTaskRunProperties

-- | The Amazon Simple Storage Service (Amazon S3) path where you will
--   generate the labeling set.
[$sel:outputS3Path:LabelingSetGenerationTaskRunProperties'] :: LabelingSetGenerationTaskRunProperties -> Maybe Text

-- | Create a value of <a>LabelingSetGenerationTaskRunProperties</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputS3Path:LabelingSetGenerationTaskRunProperties'</a>,
--   <a>labelingSetGenerationTaskRunProperties_outputS3Path</a> - The
--   Amazon Simple Storage Service (Amazon S3) path where you will generate
--   the labeling set.
newLabelingSetGenerationTaskRunProperties :: LabelingSetGenerationTaskRunProperties

-- | The Amazon Simple Storage Service (Amazon S3) path where you will
--   generate the labeling set.
labelingSetGenerationTaskRunProperties_outputS3Path :: Lens' LabelingSetGenerationTaskRunProperties (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.LabelingSetGenerationTaskRunProperties.LabelingSetGenerationTaskRunProperties
instance GHC.Show.Show Network.AWS.Glue.Types.LabelingSetGenerationTaskRunProperties.LabelingSetGenerationTaskRunProperties
instance GHC.Read.Read Network.AWS.Glue.Types.LabelingSetGenerationTaskRunProperties.LabelingSetGenerationTaskRunProperties
instance GHC.Classes.Eq Network.AWS.Glue.Types.LabelingSetGenerationTaskRunProperties.LabelingSetGenerationTaskRunProperties
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.LabelingSetGenerationTaskRunProperties.LabelingSetGenerationTaskRunProperties
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.LabelingSetGenerationTaskRunProperties.LabelingSetGenerationTaskRunProperties
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.LabelingSetGenerationTaskRunProperties.LabelingSetGenerationTaskRunProperties


module Network.AWS.Glue.Types.Language
newtype Language
Language' :: Text -> Language
[fromLanguage] :: Language -> Text
pattern Language_PYTHON :: Language
pattern Language_SCALA :: Language
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.Language.Language
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.Language.Language
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.Language.Language
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.Language.Language
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.Language.Language
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Language.Language
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.Language.Language
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.Language.Language
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.Language.Language
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.Language.Language
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.Language.Language
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.Language.Language
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Language.Language
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Language.Language
instance GHC.Generics.Generic Network.AWS.Glue.Types.Language.Language
instance GHC.Classes.Ord Network.AWS.Glue.Types.Language.Language
instance GHC.Classes.Eq Network.AWS.Glue.Types.Language.Language
instance GHC.Read.Read Network.AWS.Glue.Types.Language.Language
instance GHC.Show.Show Network.AWS.Glue.Types.Language.Language


module Network.AWS.Glue.Types.LastActiveDefinition

-- | When there are multiple versions of a blueprint and the latest version
--   has some errors, this attribute indicates the last successful
--   blueprint definition that is available with the service.
--   
--   <i>See:</i> <a>newLastActiveDefinition</a> smart constructor.
data LastActiveDefinition
LastActiveDefinition' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> LastActiveDefinition

-- | A JSON string specifying the parameters for the blueprint.
[$sel:parameterSpec:LastActiveDefinition'] :: LastActiveDefinition -> Maybe Text

-- | Specifies a path in Amazon S3 where the blueprint is published by the
--   Glue developer.
[$sel:blueprintLocation:LastActiveDefinition'] :: LastActiveDefinition -> Maybe Text

-- | The date and time the blueprint was last modified.
[$sel:lastModifiedOn:LastActiveDefinition'] :: LastActiveDefinition -> Maybe POSIX

-- | Specifies a path in Amazon S3 where the blueprint is copied when you
--   create or update the blueprint.
[$sel:blueprintServiceLocation:LastActiveDefinition'] :: LastActiveDefinition -> Maybe Text

-- | The description of the blueprint.
[$sel:description:LastActiveDefinition'] :: LastActiveDefinition -> Maybe Text

-- | Create a value of <a>LastActiveDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterSpec:LastActiveDefinition'</a>,
--   <a>lastActiveDefinition_parameterSpec</a> - A JSON string specifying
--   the parameters for the blueprint.
--   
--   <a>$sel:blueprintLocation:LastActiveDefinition'</a>,
--   <a>lastActiveDefinition_blueprintLocation</a> - Specifies a path in
--   Amazon S3 where the blueprint is published by the Glue developer.
--   
--   <a>$sel:lastModifiedOn:LastActiveDefinition'</a>,
--   <a>lastActiveDefinition_lastModifiedOn</a> - The date and time the
--   blueprint was last modified.
--   
--   <a>$sel:blueprintServiceLocation:LastActiveDefinition'</a>,
--   <a>lastActiveDefinition_blueprintServiceLocation</a> - Specifies a
--   path in Amazon S3 where the blueprint is copied when you create or
--   update the blueprint.
--   
--   <a>$sel:description:LastActiveDefinition'</a>,
--   <a>lastActiveDefinition_description</a> - The description of the
--   blueprint.
newLastActiveDefinition :: LastActiveDefinition

-- | A JSON string specifying the parameters for the blueprint.
lastActiveDefinition_parameterSpec :: Lens' LastActiveDefinition (Maybe Text)

-- | Specifies a path in Amazon S3 where the blueprint is published by the
--   Glue developer.
lastActiveDefinition_blueprintLocation :: Lens' LastActiveDefinition (Maybe Text)

-- | The date and time the blueprint was last modified.
lastActiveDefinition_lastModifiedOn :: Lens' LastActiveDefinition (Maybe UTCTime)

-- | Specifies a path in Amazon S3 where the blueprint is copied when you
--   create or update the blueprint.
lastActiveDefinition_blueprintServiceLocation :: Lens' LastActiveDefinition (Maybe Text)

-- | The description of the blueprint.
lastActiveDefinition_description :: Lens' LastActiveDefinition (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.LastActiveDefinition.LastActiveDefinition
instance GHC.Show.Show Network.AWS.Glue.Types.LastActiveDefinition.LastActiveDefinition
instance GHC.Read.Read Network.AWS.Glue.Types.LastActiveDefinition.LastActiveDefinition
instance GHC.Classes.Eq Network.AWS.Glue.Types.LastActiveDefinition.LastActiveDefinition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.LastActiveDefinition.LastActiveDefinition
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.LastActiveDefinition.LastActiveDefinition
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.LastActiveDefinition.LastActiveDefinition


module Network.AWS.Glue.Types.Blueprint

-- | The details of a blueprint.
--   
--   <i>See:</i> <a>newBlueprint</a> smart constructor.
data Blueprint
Blueprint' :: Maybe BlueprintStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe LastActiveDefinition -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Blueprint

-- | The status of the blueprint registration.
--   
--   <ul>
--   <li>Creating — The blueprint registration is in progress.</li>
--   <li>Active — The blueprint has been successfully registered.</li>
--   <li>Updating — An update to the blueprint registration is in
--   progress.</li>
--   <li>Failed — The blueprint registration failed.</li>
--   </ul>
[$sel:status:Blueprint'] :: Blueprint -> Maybe BlueprintStatus

-- | A JSON string that indicates the list of parameter specifications for
--   the blueprint.
[$sel:parameterSpec:Blueprint'] :: Blueprint -> Maybe Text

-- | Specifies the path in Amazon S3 where the blueprint is published.
[$sel:blueprintLocation:Blueprint'] :: Blueprint -> Maybe Text

-- | The date and time the blueprint was last modified.
[$sel:lastModifiedOn:Blueprint'] :: Blueprint -> Maybe POSIX

-- | When there are multiple versions of a blueprint and the latest version
--   has some errors, this attribute indicates the last successful
--   blueprint definition that is available with the service.
[$sel:lastActiveDefinition:Blueprint'] :: Blueprint -> Maybe LastActiveDefinition

-- | The name of the blueprint.
[$sel:name:Blueprint'] :: Blueprint -> Maybe Text

-- | Specifies a path in Amazon S3 where the blueprint is copied when you
--   call <tt>CreateBlueprint/UpdateBlueprint</tt> to register the
--   blueprint in Glue.
[$sel:blueprintServiceLocation:Blueprint'] :: Blueprint -> Maybe Text

-- | An error message.
[$sel:errorMessage:Blueprint'] :: Blueprint -> Maybe Text

-- | The description of the blueprint.
[$sel:description:Blueprint'] :: Blueprint -> Maybe Text

-- | The date and time the blueprint was registered.
[$sel:createdOn:Blueprint'] :: Blueprint -> Maybe POSIX

-- | Create a value of <a>Blueprint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Blueprint'</a>, <a>blueprint_status</a> - The status of
--   the blueprint registration.
--   
--   <ul>
--   <li>Creating — The blueprint registration is in progress.</li>
--   <li>Active — The blueprint has been successfully registered.</li>
--   <li>Updating — An update to the blueprint registration is in
--   progress.</li>
--   <li>Failed — The blueprint registration failed.</li>
--   </ul>
--   
--   <a>$sel:parameterSpec:Blueprint'</a>, <a>blueprint_parameterSpec</a> -
--   A JSON string that indicates the list of parameter specifications for
--   the blueprint.
--   
--   <a>$sel:blueprintLocation:Blueprint'</a>,
--   <a>blueprint_blueprintLocation</a> - Specifies the path in Amazon S3
--   where the blueprint is published.
--   
--   <a>$sel:lastModifiedOn:Blueprint'</a>, <a>blueprint_lastModifiedOn</a>
--   - The date and time the blueprint was last modified.
--   
--   <a>$sel:lastActiveDefinition:Blueprint'</a>,
--   <a>blueprint_lastActiveDefinition</a> - When there are multiple
--   versions of a blueprint and the latest version has some errors, this
--   attribute indicates the last successful blueprint definition that is
--   available with the service.
--   
--   <a>$sel:name:Blueprint'</a>, <a>blueprint_name</a> - The name of the
--   blueprint.
--   
--   <a>$sel:blueprintServiceLocation:Blueprint'</a>,
--   <a>blueprint_blueprintServiceLocation</a> - Specifies a path in Amazon
--   S3 where the blueprint is copied when you call
--   <tt>CreateBlueprint/UpdateBlueprint</tt> to register the blueprint in
--   Glue.
--   
--   <a>$sel:errorMessage:Blueprint'</a>, <a>blueprint_errorMessage</a> -
--   An error message.
--   
--   <a>$sel:description:Blueprint'</a>, <a>blueprint_description</a> - The
--   description of the blueprint.
--   
--   <a>$sel:createdOn:Blueprint'</a>, <a>blueprint_createdOn</a> - The
--   date and time the blueprint was registered.
newBlueprint :: Blueprint

-- | The status of the blueprint registration.
--   
--   <ul>
--   <li>Creating — The blueprint registration is in progress.</li>
--   <li>Active — The blueprint has been successfully registered.</li>
--   <li>Updating — An update to the blueprint registration is in
--   progress.</li>
--   <li>Failed — The blueprint registration failed.</li>
--   </ul>
blueprint_status :: Lens' Blueprint (Maybe BlueprintStatus)

-- | A JSON string that indicates the list of parameter specifications for
--   the blueprint.
blueprint_parameterSpec :: Lens' Blueprint (Maybe Text)

-- | Specifies the path in Amazon S3 where the blueprint is published.
blueprint_blueprintLocation :: Lens' Blueprint (Maybe Text)

-- | The date and time the blueprint was last modified.
blueprint_lastModifiedOn :: Lens' Blueprint (Maybe UTCTime)

-- | When there are multiple versions of a blueprint and the latest version
--   has some errors, this attribute indicates the last successful
--   blueprint definition that is available with the service.
blueprint_lastActiveDefinition :: Lens' Blueprint (Maybe LastActiveDefinition)

-- | The name of the blueprint.
blueprint_name :: Lens' Blueprint (Maybe Text)

-- | Specifies a path in Amazon S3 where the blueprint is copied when you
--   call <tt>CreateBlueprint/UpdateBlueprint</tt> to register the
--   blueprint in Glue.
blueprint_blueprintServiceLocation :: Lens' Blueprint (Maybe Text)

-- | An error message.
blueprint_errorMessage :: Lens' Blueprint (Maybe Text)

-- | The description of the blueprint.
blueprint_description :: Lens' Blueprint (Maybe Text)

-- | The date and time the blueprint was registered.
blueprint_createdOn :: Lens' Blueprint (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.Glue.Types.Blueprint.Blueprint
instance GHC.Show.Show Network.AWS.Glue.Types.Blueprint.Blueprint
instance GHC.Read.Read Network.AWS.Glue.Types.Blueprint.Blueprint
instance GHC.Classes.Eq Network.AWS.Glue.Types.Blueprint.Blueprint
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Blueprint.Blueprint
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Blueprint.Blueprint
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Blueprint.Blueprint


module Network.AWS.Glue.Types.LastCrawlStatus
newtype LastCrawlStatus
LastCrawlStatus' :: Text -> LastCrawlStatus
[fromLastCrawlStatus] :: LastCrawlStatus -> Text
pattern LastCrawlStatus_CANCELLED :: LastCrawlStatus
pattern LastCrawlStatus_FAILED :: LastCrawlStatus
pattern LastCrawlStatus_SUCCEEDED :: LastCrawlStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.LastCrawlStatus.LastCrawlStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.LastCrawlStatus.LastCrawlStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.LastCrawlStatus.LastCrawlStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.LastCrawlStatus.LastCrawlStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.LastCrawlStatus.LastCrawlStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.LastCrawlStatus.LastCrawlStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.LastCrawlStatus.LastCrawlStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.LastCrawlStatus.LastCrawlStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.LastCrawlStatus.LastCrawlStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.LastCrawlStatus.LastCrawlStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.LastCrawlStatus.LastCrawlStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.LastCrawlStatus.LastCrawlStatus
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.LastCrawlStatus.LastCrawlStatus
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.LastCrawlStatus.LastCrawlStatus
instance GHC.Generics.Generic Network.AWS.Glue.Types.LastCrawlStatus.LastCrawlStatus
instance GHC.Classes.Ord Network.AWS.Glue.Types.LastCrawlStatus.LastCrawlStatus
instance GHC.Classes.Eq Network.AWS.Glue.Types.LastCrawlStatus.LastCrawlStatus
instance GHC.Read.Read Network.AWS.Glue.Types.LastCrawlStatus.LastCrawlStatus
instance GHC.Show.Show Network.AWS.Glue.Types.LastCrawlStatus.LastCrawlStatus


module Network.AWS.Glue.Types.LastCrawlInfo

-- | Status and error information about the most recent crawl.
--   
--   <i>See:</i> <a>newLastCrawlInfo</a> smart constructor.
data LastCrawlInfo
LastCrawlInfo' :: Maybe LastCrawlStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> LastCrawlInfo

-- | Status of the last crawl.
[$sel:status:LastCrawlInfo'] :: LastCrawlInfo -> Maybe LastCrawlStatus

-- | The time at which the crawl started.
[$sel:startTime:LastCrawlInfo'] :: LastCrawlInfo -> Maybe POSIX

-- | The log stream for the last crawl.
[$sel:logStream:LastCrawlInfo'] :: LastCrawlInfo -> Maybe Text

-- | The log group for the last crawl.
[$sel:logGroup:LastCrawlInfo'] :: LastCrawlInfo -> Maybe Text

-- | The prefix for a message about this crawl.
[$sel:messagePrefix:LastCrawlInfo'] :: LastCrawlInfo -> Maybe Text

-- | If an error occurred, the error information about the last crawl.
[$sel:errorMessage:LastCrawlInfo'] :: LastCrawlInfo -> Maybe Text

-- | Create a value of <a>LastCrawlInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:LastCrawlInfo'</a>, <a>lastCrawlInfo_status</a> -
--   Status of the last crawl.
--   
--   <a>$sel:startTime:LastCrawlInfo'</a>, <a>lastCrawlInfo_startTime</a> -
--   The time at which the crawl started.
--   
--   <a>$sel:logStream:LastCrawlInfo'</a>, <a>lastCrawlInfo_logStream</a> -
--   The log stream for the last crawl.
--   
--   <a>$sel:logGroup:LastCrawlInfo'</a>, <a>lastCrawlInfo_logGroup</a> -
--   The log group for the last crawl.
--   
--   <a>$sel:messagePrefix:LastCrawlInfo'</a>,
--   <a>lastCrawlInfo_messagePrefix</a> - The prefix for a message about
--   this crawl.
--   
--   <a>$sel:errorMessage:LastCrawlInfo'</a>,
--   <a>lastCrawlInfo_errorMessage</a> - If an error occurred, the error
--   information about the last crawl.
newLastCrawlInfo :: LastCrawlInfo

-- | Status of the last crawl.
lastCrawlInfo_status :: Lens' LastCrawlInfo (Maybe LastCrawlStatus)

-- | The time at which the crawl started.
lastCrawlInfo_startTime :: Lens' LastCrawlInfo (Maybe UTCTime)

-- | The log stream for the last crawl.
lastCrawlInfo_logStream :: Lens' LastCrawlInfo (Maybe Text)

-- | The log group for the last crawl.
lastCrawlInfo_logGroup :: Lens' LastCrawlInfo (Maybe Text)

-- | The prefix for a message about this crawl.
lastCrawlInfo_messagePrefix :: Lens' LastCrawlInfo (Maybe Text)

-- | If an error occurred, the error information about the last crawl.
lastCrawlInfo_errorMessage :: Lens' LastCrawlInfo (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.LastCrawlInfo.LastCrawlInfo
instance GHC.Show.Show Network.AWS.Glue.Types.LastCrawlInfo.LastCrawlInfo
instance GHC.Read.Read Network.AWS.Glue.Types.LastCrawlInfo.LastCrawlInfo
instance GHC.Classes.Eq Network.AWS.Glue.Types.LastCrawlInfo.LastCrawlInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.LastCrawlInfo.LastCrawlInfo
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.LastCrawlInfo.LastCrawlInfo
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.LastCrawlInfo.LastCrawlInfo


module Network.AWS.Glue.Types.LineageConfiguration

-- | Specifies data lineage configuration settings for the crawler.
--   
--   <i>See:</i> <a>newLineageConfiguration</a> smart constructor.
data LineageConfiguration
LineageConfiguration' :: Maybe CrawlerLineageSettings -> LineageConfiguration

-- | Specifies whether data lineage is enabled for the crawler. Valid
--   values are:
--   
--   <ul>
--   <li>ENABLE: enables data lineage for the crawler</li>
--   <li>DISABLE: disables data lineage for the crawler</li>
--   </ul>
[$sel:crawlerLineageSettings:LineageConfiguration'] :: LineageConfiguration -> Maybe CrawlerLineageSettings

-- | Create a value of <a>LineageConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawlerLineageSettings:LineageConfiguration'</a>,
--   <a>lineageConfiguration_crawlerLineageSettings</a> - Specifies whether
--   data lineage is enabled for the crawler. Valid values are:
--   
--   <ul>
--   <li>ENABLE: enables data lineage for the crawler</li>
--   <li>DISABLE: disables data lineage for the crawler</li>
--   </ul>
newLineageConfiguration :: LineageConfiguration

-- | Specifies whether data lineage is enabled for the crawler. Valid
--   values are:
--   
--   <ul>
--   <li>ENABLE: enables data lineage for the crawler</li>
--   <li>DISABLE: disables data lineage for the crawler</li>
--   </ul>
lineageConfiguration_crawlerLineageSettings :: Lens' LineageConfiguration (Maybe CrawlerLineageSettings)
instance GHC.Generics.Generic Network.AWS.Glue.Types.LineageConfiguration.LineageConfiguration
instance GHC.Show.Show Network.AWS.Glue.Types.LineageConfiguration.LineageConfiguration
instance GHC.Read.Read Network.AWS.Glue.Types.LineageConfiguration.LineageConfiguration
instance GHC.Classes.Eq Network.AWS.Glue.Types.LineageConfiguration.LineageConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.LineageConfiguration.LineageConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.LineageConfiguration.LineageConfiguration
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.LineageConfiguration.LineageConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.LineageConfiguration.LineageConfiguration


module Network.AWS.Glue.Types.Location

-- | The location of resources.
--   
--   <i>See:</i> <a>newLocation</a> smart constructor.
data Location
Location' :: Maybe [CodeGenNodeArg] -> Maybe [CodeGenNodeArg] -> Maybe [CodeGenNodeArg] -> Location

-- | An Amazon DynamoDB table location.
[$sel:dynamoDB:Location'] :: Location -> Maybe [CodeGenNodeArg]

-- | A JDBC location.
[$sel:jdbc:Location'] :: Location -> Maybe [CodeGenNodeArg]

-- | An Amazon Simple Storage Service (Amazon S3) location.
[$sel:s3:Location'] :: Location -> Maybe [CodeGenNodeArg]

-- | Create a value of <a>Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dynamoDB:Location'</a>, <a>location_dynamoDB</a> - An Amazon
--   DynamoDB table location.
--   
--   <a>$sel:jdbc:Location'</a>, <a>location_jdbc</a> - A JDBC location.
--   
--   <a>$sel:s3:Location'</a>, <a>location_s3</a> - An Amazon Simple
--   Storage Service (Amazon S3) location.
newLocation :: Location

-- | An Amazon DynamoDB table location.
location_dynamoDB :: Lens' Location (Maybe [CodeGenNodeArg])

-- | A JDBC location.
location_jdbc :: Lens' Location (Maybe [CodeGenNodeArg])

-- | An Amazon Simple Storage Service (Amazon S3) location.
location_s3 :: Lens' Location (Maybe [CodeGenNodeArg])
instance GHC.Generics.Generic Network.AWS.Glue.Types.Location.Location
instance GHC.Show.Show Network.AWS.Glue.Types.Location.Location
instance GHC.Read.Read Network.AWS.Glue.Types.Location.Location
instance GHC.Classes.Eq Network.AWS.Glue.Types.Location.Location
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Location.Location
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Location.Location
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.Location.Location


module Network.AWS.Glue.Types.Logical
newtype Logical
Logical' :: Text -> Logical
[fromLogical] :: Logical -> Text
pattern Logical_AND :: Logical
pattern Logical_ANY :: Logical
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.Logical.Logical
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.Logical.Logical
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.Logical.Logical
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.Logical.Logical
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.Logical.Logical
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Logical.Logical
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.Logical.Logical
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.Logical.Logical
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.Logical.Logical
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.Logical.Logical
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.Logical.Logical
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.Logical.Logical
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Logical.Logical
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Logical.Logical
instance GHC.Generics.Generic Network.AWS.Glue.Types.Logical.Logical
instance GHC.Classes.Ord Network.AWS.Glue.Types.Logical.Logical
instance GHC.Classes.Eq Network.AWS.Glue.Types.Logical.Logical
instance GHC.Read.Read Network.AWS.Glue.Types.Logical.Logical
instance GHC.Show.Show Network.AWS.Glue.Types.Logical.Logical


module Network.AWS.Glue.Types.LogicalOperator
newtype LogicalOperator
LogicalOperator' :: Text -> LogicalOperator
[fromLogicalOperator] :: LogicalOperator -> Text
pattern LogicalOperator_EQUALS :: LogicalOperator
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.LogicalOperator.LogicalOperator
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.LogicalOperator.LogicalOperator
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.LogicalOperator.LogicalOperator
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.LogicalOperator.LogicalOperator
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.LogicalOperator.LogicalOperator
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.LogicalOperator.LogicalOperator
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.LogicalOperator.LogicalOperator
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.LogicalOperator.LogicalOperator
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.LogicalOperator.LogicalOperator
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.LogicalOperator.LogicalOperator
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.LogicalOperator.LogicalOperator
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.LogicalOperator.LogicalOperator
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.LogicalOperator.LogicalOperator
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.LogicalOperator.LogicalOperator
instance GHC.Generics.Generic Network.AWS.Glue.Types.LogicalOperator.LogicalOperator
instance GHC.Classes.Ord Network.AWS.Glue.Types.LogicalOperator.LogicalOperator
instance GHC.Classes.Eq Network.AWS.Glue.Types.LogicalOperator.LogicalOperator
instance GHC.Read.Read Network.AWS.Glue.Types.LogicalOperator.LogicalOperator
instance GHC.Show.Show Network.AWS.Glue.Types.LogicalOperator.LogicalOperator


module Network.AWS.Glue.Types.Condition

-- | Defines a condition under which a trigger fires.
--   
--   <i>See:</i> <a>newCondition</a> smart constructor.
data Condition
Condition' :: Maybe CrawlState -> Maybe JobRunState -> Maybe Text -> Maybe LogicalOperator -> Maybe Text -> Condition

-- | The state of the crawler to which this condition applies.
[$sel:crawlState:Condition'] :: Condition -> Maybe CrawlState

-- | The condition state. Currently, the only job states that a trigger can
--   listen for are <tt>SUCCEEDED</tt>, <tt>STOPPED</tt>, <tt>FAILED</tt>,
--   and <tt>TIMEOUT</tt>. The only crawler states that a trigger can
--   listen for are <tt>SUCCEEDED</tt>, <tt>FAILED</tt>, and
--   <tt>CANCELLED</tt>.
[$sel:state:Condition'] :: Condition -> Maybe JobRunState

-- | The name of the job whose <tt>JobRuns</tt> this condition applies to,
--   and on which this trigger waits.
[$sel:jobName:Condition'] :: Condition -> Maybe Text

-- | A logical operator.
[$sel:logicalOperator:Condition'] :: Condition -> Maybe LogicalOperator

-- | The name of the crawler to which this condition applies.
[$sel:crawlerName:Condition'] :: Condition -> Maybe Text

-- | Create a value of <a>Condition</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawlState:Condition'</a>, <a>condition_crawlState</a> - The
--   state of the crawler to which this condition applies.
--   
--   <a>$sel:state:Condition'</a>, <a>condition_state</a> - The condition
--   state. Currently, the only job states that a trigger can listen for
--   are <tt>SUCCEEDED</tt>, <tt>STOPPED</tt>, <tt>FAILED</tt>, and
--   <tt>TIMEOUT</tt>. The only crawler states that a trigger can listen
--   for are <tt>SUCCEEDED</tt>, <tt>FAILED</tt>, and <tt>CANCELLED</tt>.
--   
--   <a>$sel:jobName:Condition'</a>, <a>condition_jobName</a> - The name of
--   the job whose <tt>JobRuns</tt> this condition applies to, and on which
--   this trigger waits.
--   
--   <a>$sel:logicalOperator:Condition'</a>,
--   <a>condition_logicalOperator</a> - A logical operator.
--   
--   <a>$sel:crawlerName:Condition'</a>, <a>condition_crawlerName</a> - The
--   name of the crawler to which this condition applies.
newCondition :: Condition

-- | The state of the crawler to which this condition applies.
condition_crawlState :: Lens' Condition (Maybe CrawlState)

-- | The condition state. Currently, the only job states that a trigger can
--   listen for are <tt>SUCCEEDED</tt>, <tt>STOPPED</tt>, <tt>FAILED</tt>,
--   and <tt>TIMEOUT</tt>. The only crawler states that a trigger can
--   listen for are <tt>SUCCEEDED</tt>, <tt>FAILED</tt>, and
--   <tt>CANCELLED</tt>.
condition_state :: Lens' Condition (Maybe JobRunState)

-- | The name of the job whose <tt>JobRuns</tt> this condition applies to,
--   and on which this trigger waits.
condition_jobName :: Lens' Condition (Maybe Text)

-- | A logical operator.
condition_logicalOperator :: Lens' Condition (Maybe LogicalOperator)

-- | The name of the crawler to which this condition applies.
condition_crawlerName :: Lens' Condition (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.Condition.Condition
instance GHC.Show.Show Network.AWS.Glue.Types.Condition.Condition
instance GHC.Read.Read Network.AWS.Glue.Types.Condition.Condition
instance GHC.Classes.Eq Network.AWS.Glue.Types.Condition.Condition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Condition.Condition
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Condition.Condition
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Condition.Condition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.Condition.Condition


module Network.AWS.Glue.Types.LongColumnStatisticsData

-- | Defines column statistics supported for integer data columns.
--   
--   <i>See:</i> <a>newLongColumnStatisticsData</a> smart constructor.
data LongColumnStatisticsData
LongColumnStatisticsData' :: Maybe Integer -> Maybe Integer -> Natural -> Natural -> LongColumnStatisticsData

-- | The highest value in the column.
[$sel:maximumValue:LongColumnStatisticsData'] :: LongColumnStatisticsData -> Maybe Integer

-- | The lowest value in the column.
[$sel:minimumValue:LongColumnStatisticsData'] :: LongColumnStatisticsData -> Maybe Integer

-- | The number of null values in the column.
[$sel:numberOfNulls:LongColumnStatisticsData'] :: LongColumnStatisticsData -> Natural

-- | The number of distinct values in a column.
[$sel:numberOfDistinctValues:LongColumnStatisticsData'] :: LongColumnStatisticsData -> Natural

-- | Create a value of <a>LongColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumValue:LongColumnStatisticsData'</a>,
--   <a>longColumnStatisticsData_maximumValue</a> - The highest value in
--   the column.
--   
--   <a>$sel:minimumValue:LongColumnStatisticsData'</a>,
--   <a>longColumnStatisticsData_minimumValue</a> - The lowest value in the
--   column.
--   
--   <a>$sel:numberOfNulls:LongColumnStatisticsData'</a>,
--   <a>longColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
--   
--   <a>$sel:numberOfDistinctValues:LongColumnStatisticsData'</a>,
--   <a>longColumnStatisticsData_numberOfDistinctValues</a> - The number of
--   distinct values in a column.
newLongColumnStatisticsData :: Natural -> Natural -> LongColumnStatisticsData

-- | The highest value in the column.
longColumnStatisticsData_maximumValue :: Lens' LongColumnStatisticsData (Maybe Integer)

-- | The lowest value in the column.
longColumnStatisticsData_minimumValue :: Lens' LongColumnStatisticsData (Maybe Integer)

-- | The number of null values in the column.
longColumnStatisticsData_numberOfNulls :: Lens' LongColumnStatisticsData Natural

-- | The number of distinct values in a column.
longColumnStatisticsData_numberOfDistinctValues :: Lens' LongColumnStatisticsData Natural
instance GHC.Generics.Generic Network.AWS.Glue.Types.LongColumnStatisticsData.LongColumnStatisticsData
instance GHC.Show.Show Network.AWS.Glue.Types.LongColumnStatisticsData.LongColumnStatisticsData
instance GHC.Read.Read Network.AWS.Glue.Types.LongColumnStatisticsData.LongColumnStatisticsData
instance GHC.Classes.Eq Network.AWS.Glue.Types.LongColumnStatisticsData.LongColumnStatisticsData
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.LongColumnStatisticsData.LongColumnStatisticsData
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.LongColumnStatisticsData.LongColumnStatisticsData
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.LongColumnStatisticsData.LongColumnStatisticsData
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.LongColumnStatisticsData.LongColumnStatisticsData


module Network.AWS.Glue.Types.MLUserDataEncryptionModeString
newtype MLUserDataEncryptionModeString
MLUserDataEncryptionModeString' :: Text -> MLUserDataEncryptionModeString
[fromMLUserDataEncryptionModeString] :: MLUserDataEncryptionModeString -> Text
pattern MLUserDataEncryptionModeString_DISABLED :: MLUserDataEncryptionModeString
pattern MLUserDataEncryptionModeString_SSE_KMS :: MLUserDataEncryptionModeString
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.MLUserDataEncryptionModeString.MLUserDataEncryptionModeString
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.MLUserDataEncryptionModeString.MLUserDataEncryptionModeString
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.MLUserDataEncryptionModeString.MLUserDataEncryptionModeString
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.MLUserDataEncryptionModeString.MLUserDataEncryptionModeString
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.MLUserDataEncryptionModeString.MLUserDataEncryptionModeString
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.MLUserDataEncryptionModeString.MLUserDataEncryptionModeString
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.MLUserDataEncryptionModeString.MLUserDataEncryptionModeString
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.MLUserDataEncryptionModeString.MLUserDataEncryptionModeString
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.MLUserDataEncryptionModeString.MLUserDataEncryptionModeString
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.MLUserDataEncryptionModeString.MLUserDataEncryptionModeString
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.MLUserDataEncryptionModeString.MLUserDataEncryptionModeString
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.MLUserDataEncryptionModeString.MLUserDataEncryptionModeString
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.MLUserDataEncryptionModeString.MLUserDataEncryptionModeString
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.MLUserDataEncryptionModeString.MLUserDataEncryptionModeString
instance GHC.Generics.Generic Network.AWS.Glue.Types.MLUserDataEncryptionModeString.MLUserDataEncryptionModeString
instance GHC.Classes.Ord Network.AWS.Glue.Types.MLUserDataEncryptionModeString.MLUserDataEncryptionModeString
instance GHC.Classes.Eq Network.AWS.Glue.Types.MLUserDataEncryptionModeString.MLUserDataEncryptionModeString
instance GHC.Read.Read Network.AWS.Glue.Types.MLUserDataEncryptionModeString.MLUserDataEncryptionModeString
instance GHC.Show.Show Network.AWS.Glue.Types.MLUserDataEncryptionModeString.MLUserDataEncryptionModeString


module Network.AWS.Glue.Types.MLUserDataEncryption

-- | The encryption-at-rest settings of the transform that apply to
--   accessing user data.
--   
--   <i>See:</i> <a>newMLUserDataEncryption</a> smart constructor.
data MLUserDataEncryption
MLUserDataEncryption' :: Maybe Text -> MLUserDataEncryptionModeString -> MLUserDataEncryption

-- | The ID for the customer-provided KMS key.
[$sel:kmsKeyId:MLUserDataEncryption'] :: MLUserDataEncryption -> Maybe Text

-- | The encryption mode applied to user data. Valid values are:
--   
--   <ul>
--   <li>DISABLED: encryption is disabled</li>
--   <li>SSEKMS: use of server-side encryption with Key Management Service
--   (SSE-KMS) for user data stored in Amazon S3.</li>
--   </ul>
[$sel:mlUserDataEncryptionMode:MLUserDataEncryption'] :: MLUserDataEncryption -> MLUserDataEncryptionModeString

-- | Create a value of <a>MLUserDataEncryption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:MLUserDataEncryption'</a>,
--   <a>mLUserDataEncryption_kmsKeyId</a> - The ID for the
--   customer-provided KMS key.
--   
--   <a>$sel:mlUserDataEncryptionMode:MLUserDataEncryption'</a>,
--   <a>mLUserDataEncryption_mlUserDataEncryptionMode</a> - The encryption
--   mode applied to user data. Valid values are:
--   
--   <ul>
--   <li>DISABLED: encryption is disabled</li>
--   <li>SSEKMS: use of server-side encryption with Key Management Service
--   (SSE-KMS) for user data stored in Amazon S3.</li>
--   </ul>
newMLUserDataEncryption :: MLUserDataEncryptionModeString -> MLUserDataEncryption

-- | The ID for the customer-provided KMS key.
mLUserDataEncryption_kmsKeyId :: Lens' MLUserDataEncryption (Maybe Text)

-- | The encryption mode applied to user data. Valid values are:
--   
--   <ul>
--   <li>DISABLED: encryption is disabled</li>
--   <li>SSEKMS: use of server-side encryption with Key Management Service
--   (SSE-KMS) for user data stored in Amazon S3.</li>
--   </ul>
mLUserDataEncryption_mlUserDataEncryptionMode :: Lens' MLUserDataEncryption MLUserDataEncryptionModeString
instance GHC.Generics.Generic Network.AWS.Glue.Types.MLUserDataEncryption.MLUserDataEncryption
instance GHC.Show.Show Network.AWS.Glue.Types.MLUserDataEncryption.MLUserDataEncryption
instance GHC.Read.Read Network.AWS.Glue.Types.MLUserDataEncryption.MLUserDataEncryption
instance GHC.Classes.Eq Network.AWS.Glue.Types.MLUserDataEncryption.MLUserDataEncryption
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.MLUserDataEncryption.MLUserDataEncryption
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.MLUserDataEncryption.MLUserDataEncryption
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.MLUserDataEncryption.MLUserDataEncryption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.MLUserDataEncryption.MLUserDataEncryption


module Network.AWS.Glue.Types.MappingEntry

-- | Defines a mapping.
--   
--   <i>See:</i> <a>newMappingEntry</a> smart constructor.
data MappingEntry
MappingEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> MappingEntry

-- | The target table.
[$sel:targetTable:MappingEntry'] :: MappingEntry -> Maybe Text

-- | The source type.
[$sel:sourceType:MappingEntry'] :: MappingEntry -> Maybe Text

-- | The name of the source table.
[$sel:sourceTable:MappingEntry'] :: MappingEntry -> Maybe Text

-- | The target type.
[$sel:targetType:MappingEntry'] :: MappingEntry -> Maybe Text

-- | The target path.
[$sel:targetPath:MappingEntry'] :: MappingEntry -> Maybe Text

-- | The source path.
[$sel:sourcePath:MappingEntry'] :: MappingEntry -> Maybe Text

-- | Create a value of <a>MappingEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetTable:MappingEntry'</a>, <a>mappingEntry_targetTable</a>
--   - The target table.
--   
--   <a>$sel:sourceType:MappingEntry'</a>, <a>mappingEntry_sourceType</a> -
--   The source type.
--   
--   <a>$sel:sourceTable:MappingEntry'</a>, <a>mappingEntry_sourceTable</a>
--   - The name of the source table.
--   
--   <a>$sel:targetType:MappingEntry'</a>, <a>mappingEntry_targetType</a> -
--   The target type.
--   
--   <a>$sel:targetPath:MappingEntry'</a>, <a>mappingEntry_targetPath</a> -
--   The target path.
--   
--   <a>$sel:sourcePath:MappingEntry'</a>, <a>mappingEntry_sourcePath</a> -
--   The source path.
newMappingEntry :: MappingEntry

-- | The target table.
mappingEntry_targetTable :: Lens' MappingEntry (Maybe Text)

-- | The source type.
mappingEntry_sourceType :: Lens' MappingEntry (Maybe Text)

-- | The name of the source table.
mappingEntry_sourceTable :: Lens' MappingEntry (Maybe Text)

-- | The target type.
mappingEntry_targetType :: Lens' MappingEntry (Maybe Text)

-- | The target path.
mappingEntry_targetPath :: Lens' MappingEntry (Maybe Text)

-- | The source path.
mappingEntry_sourcePath :: Lens' MappingEntry (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.MappingEntry.MappingEntry
instance GHC.Show.Show Network.AWS.Glue.Types.MappingEntry.MappingEntry
instance GHC.Read.Read Network.AWS.Glue.Types.MappingEntry.MappingEntry
instance GHC.Classes.Eq Network.AWS.Glue.Types.MappingEntry.MappingEntry
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.MappingEntry.MappingEntry
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.MappingEntry.MappingEntry
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.MappingEntry.MappingEntry
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.MappingEntry.MappingEntry


module Network.AWS.Glue.Types.MetadataKeyValuePair

-- | A structure containing a key value pair for metadata.
--   
--   <i>See:</i> <a>newMetadataKeyValuePair</a> smart constructor.
data MetadataKeyValuePair
MetadataKeyValuePair' :: Maybe Text -> Maybe Text -> MetadataKeyValuePair

-- | A metadata key.
[$sel:metadataKey:MetadataKeyValuePair'] :: MetadataKeyValuePair -> Maybe Text

-- | A metadata key’s corresponding value.
[$sel:metadataValue:MetadataKeyValuePair'] :: MetadataKeyValuePair -> Maybe Text

-- | Create a value of <a>MetadataKeyValuePair</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metadataKey:MetadataKeyValuePair'</a>,
--   <a>metadataKeyValuePair_metadataKey</a> - A metadata key.
--   
--   <a>$sel:metadataValue:MetadataKeyValuePair'</a>,
--   <a>metadataKeyValuePair_metadataValue</a> - A metadata key’s
--   corresponding value.
newMetadataKeyValuePair :: MetadataKeyValuePair

-- | A metadata key.
metadataKeyValuePair_metadataKey :: Lens' MetadataKeyValuePair (Maybe Text)

-- | A metadata key’s corresponding value.
metadataKeyValuePair_metadataValue :: Lens' MetadataKeyValuePair (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.MetadataKeyValuePair.MetadataKeyValuePair
instance GHC.Show.Show Network.AWS.Glue.Types.MetadataKeyValuePair.MetadataKeyValuePair
instance GHC.Read.Read Network.AWS.Glue.Types.MetadataKeyValuePair.MetadataKeyValuePair
instance GHC.Classes.Eq Network.AWS.Glue.Types.MetadataKeyValuePair.MetadataKeyValuePair
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.MetadataKeyValuePair.MetadataKeyValuePair
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.MetadataKeyValuePair.MetadataKeyValuePair
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.MetadataKeyValuePair.MetadataKeyValuePair


module Network.AWS.Glue.Types.MongoDBTarget

-- | Specifies an Amazon DocumentDB or MongoDB data store to crawl.
--   
--   <i>See:</i> <a>newMongoDBTarget</a> smart constructor.
data MongoDBTarget
MongoDBTarget' :: Maybe Text -> Maybe Text -> Maybe Bool -> MongoDBTarget

-- | The path of the Amazon DocumentDB or MongoDB target
--   (database/collection).
[$sel:path:MongoDBTarget'] :: MongoDBTarget -> Maybe Text

-- | The name of the connection to use to connect to the Amazon DocumentDB
--   or MongoDB target.
[$sel:connectionName:MongoDBTarget'] :: MongoDBTarget -> Maybe Text

-- | Indicates whether to scan all the records, or to sample rows from the
--   table. Scanning all the records can take a long time when the table is
--   not a high throughput table.
--   
--   A value of <tt>true</tt> means to scan all records, while a value of
--   <tt>false</tt> means to sample the records. If no value is specified,
--   the value defaults to <tt>true</tt>.
[$sel:scanAll:MongoDBTarget'] :: MongoDBTarget -> Maybe Bool

-- | Create a value of <a>MongoDBTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:MongoDBTarget'</a>, <a>mongoDBTarget_path</a> - The path
--   of the Amazon DocumentDB or MongoDB target (database/collection).
--   
--   <a>$sel:connectionName:MongoDBTarget'</a>,
--   <a>mongoDBTarget_connectionName</a> - The name of the connection to
--   use to connect to the Amazon DocumentDB or MongoDB target.
--   
--   <a>$sel:scanAll:MongoDBTarget'</a>, <a>mongoDBTarget_scanAll</a> -
--   Indicates whether to scan all the records, or to sample rows from the
--   table. Scanning all the records can take a long time when the table is
--   not a high throughput table.
--   
--   A value of <tt>true</tt> means to scan all records, while a value of
--   <tt>false</tt> means to sample the records. If no value is specified,
--   the value defaults to <tt>true</tt>.
newMongoDBTarget :: MongoDBTarget

-- | The path of the Amazon DocumentDB or MongoDB target
--   (database/collection).
mongoDBTarget_path :: Lens' MongoDBTarget (Maybe Text)

-- | The name of the connection to use to connect to the Amazon DocumentDB
--   or MongoDB target.
mongoDBTarget_connectionName :: Lens' MongoDBTarget (Maybe Text)

-- | Indicates whether to scan all the records, or to sample rows from the
--   table. Scanning all the records can take a long time when the table is
--   not a high throughput table.
--   
--   A value of <tt>true</tt> means to scan all records, while a value of
--   <tt>false</tt> means to sample the records. If no value is specified,
--   the value defaults to <tt>true</tt>.
mongoDBTarget_scanAll :: Lens' MongoDBTarget (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.Glue.Types.MongoDBTarget.MongoDBTarget
instance GHC.Show.Show Network.AWS.Glue.Types.MongoDBTarget.MongoDBTarget
instance GHC.Read.Read Network.AWS.Glue.Types.MongoDBTarget.MongoDBTarget
instance GHC.Classes.Eq Network.AWS.Glue.Types.MongoDBTarget.MongoDBTarget
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.MongoDBTarget.MongoDBTarget
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.MongoDBTarget.MongoDBTarget
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.MongoDBTarget.MongoDBTarget
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.MongoDBTarget.MongoDBTarget


module Network.AWS.Glue.Types.NodeType
newtype NodeType
NodeType' :: Text -> NodeType
[fromNodeType] :: NodeType -> Text
pattern NodeType_CRAWLER :: NodeType
pattern NodeType_JOB :: NodeType
pattern NodeType_TRIGGER :: NodeType
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.NodeType.NodeType
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.NodeType.NodeType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.NodeType.NodeType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.NodeType.NodeType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.NodeType.NodeType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.NodeType.NodeType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.NodeType.NodeType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.NodeType.NodeType
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.NodeType.NodeType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.NodeType.NodeType
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.NodeType.NodeType
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.NodeType.NodeType
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.NodeType.NodeType
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.NodeType.NodeType
instance GHC.Generics.Generic Network.AWS.Glue.Types.NodeType.NodeType
instance GHC.Classes.Ord Network.AWS.Glue.Types.NodeType.NodeType
instance GHC.Classes.Eq Network.AWS.Glue.Types.NodeType.NodeType
instance GHC.Read.Read Network.AWS.Glue.Types.NodeType.NodeType
instance GHC.Show.Show Network.AWS.Glue.Types.NodeType.NodeType


module Network.AWS.Glue.Types.NotificationProperty

-- | Specifies configuration properties of a notification.
--   
--   <i>See:</i> <a>newNotificationProperty</a> smart constructor.
data NotificationProperty
NotificationProperty' :: Maybe Natural -> NotificationProperty

-- | After a job run starts, the number of minutes to wait before sending a
--   job run delay notification.
[$sel:notifyDelayAfter:NotificationProperty'] :: NotificationProperty -> Maybe Natural

-- | Create a value of <a>NotificationProperty</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notifyDelayAfter:NotificationProperty'</a>,
--   <a>notificationProperty_notifyDelayAfter</a> - After a job run starts,
--   the number of minutes to wait before sending a job run delay
--   notification.
newNotificationProperty :: NotificationProperty

-- | After a job run starts, the number of minutes to wait before sending a
--   job run delay notification.
notificationProperty_notifyDelayAfter :: Lens' NotificationProperty (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.Glue.Types.NotificationProperty.NotificationProperty
instance GHC.Show.Show Network.AWS.Glue.Types.NotificationProperty.NotificationProperty
instance GHC.Read.Read Network.AWS.Glue.Types.NotificationProperty.NotificationProperty
instance GHC.Classes.Eq Network.AWS.Glue.Types.NotificationProperty.NotificationProperty
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.NotificationProperty.NotificationProperty
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.NotificationProperty.NotificationProperty
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.NotificationProperty.NotificationProperty
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.NotificationProperty.NotificationProperty


module Network.AWS.Glue.Types.Action

-- | Defines an action to be initiated by a trigger.
--   
--   <i>See:</i> <a>newAction</a> smart constructor.
data Action
Action' :: Maybe NotificationProperty -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Action

-- | Specifies configuration properties of a job run notification.
[$sel:notificationProperty:Action'] :: Action -> Maybe NotificationProperty

-- | The job arguments used when this trigger fires. For this job run, they
--   replace the default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
[$sel:arguments:Action'] :: Action -> Maybe (HashMap Text Text)

-- | The name of a job to be run.
[$sel:jobName:Action'] :: Action -> Maybe Text

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this action.
[$sel:securityConfiguration:Action'] :: Action -> Maybe Text

-- | The <tt>JobRun</tt> timeout in minutes. This is the maximum time that
--   a job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
[$sel:timeout:Action'] :: Action -> Maybe Natural

-- | The name of the crawler to be used with this action.
[$sel:crawlerName:Action'] :: Action -> Maybe Text

-- | Create a value of <a>Action</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationProperty:Action'</a>,
--   <a>action_notificationProperty</a> - Specifies configuration
--   properties of a job run notification.
--   
--   <a>$sel:arguments:Action'</a>, <a>action_arguments</a> - The job
--   arguments used when this trigger fires. For this job run, they replace
--   the default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
--   
--   <a>$sel:jobName:Action'</a>, <a>action_jobName</a> - The name of a job
--   to be run.
--   
--   <a>$sel:securityConfiguration:Action'</a>,
--   <a>action_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this action.
--   
--   <a>$sel:timeout:Action'</a>, <a>action_timeout</a> - The
--   <tt>JobRun</tt> timeout in minutes. This is the maximum time that a
--   job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
--   
--   <a>$sel:crawlerName:Action'</a>, <a>action_crawlerName</a> - The name
--   of the crawler to be used with this action.
newAction :: Action

-- | Specifies configuration properties of a job run notification.
action_notificationProperty :: Lens' Action (Maybe NotificationProperty)

-- | The job arguments used when this trigger fires. For this job run, they
--   replace the default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
action_arguments :: Lens' Action (Maybe (HashMap Text Text))

-- | The name of a job to be run.
action_jobName :: Lens' Action (Maybe Text)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this action.
action_securityConfiguration :: Lens' Action (Maybe Text)

-- | The <tt>JobRun</tt> timeout in minutes. This is the maximum time that
--   a job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
action_timeout :: Lens' Action (Maybe Natural)

-- | The name of the crawler to be used with this action.
action_crawlerName :: Lens' Action (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.Action.Action
instance GHC.Show.Show Network.AWS.Glue.Types.Action.Action
instance GHC.Read.Read Network.AWS.Glue.Types.Action.Action
instance GHC.Classes.Eq Network.AWS.Glue.Types.Action.Action
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Action.Action
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Action.Action
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Action.Action
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.Action.Action


module Network.AWS.Glue.Types.Order

-- | Specifies the sort order of a sorted column.
--   
--   <i>See:</i> <a>newOrder</a> smart constructor.
data Order
Order' :: Text -> Natural -> Order

-- | The name of the column.
[$sel:column:Order'] :: Order -> Text

-- | Indicates that the column is sorted in ascending order (<tt>==
--   1</tt>), or in descending order (<tt>==0</tt>).
[$sel:sortOrder:Order'] :: Order -> Natural

-- | Create a value of <a>Order</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:column:Order'</a>, <a>order_column</a> - The name of the
--   column.
--   
--   <a>$sel:sortOrder:Order'</a>, <a>order_sortOrder</a> - Indicates that
--   the column is sorted in ascending order (<tt>== 1</tt>), or in
--   descending order (<tt>==0</tt>).
newOrder :: Text -> Natural -> Order

-- | The name of the column.
order_column :: Lens' Order Text

-- | Indicates that the column is sorted in ascending order (<tt>==
--   1</tt>), or in descending order (<tt>==0</tt>).
order_sortOrder :: Lens' Order Natural
instance GHC.Generics.Generic Network.AWS.Glue.Types.Order.Order
instance GHC.Show.Show Network.AWS.Glue.Types.Order.Order
instance GHC.Read.Read Network.AWS.Glue.Types.Order.Order
instance GHC.Classes.Eq Network.AWS.Glue.Types.Order.Order
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Order.Order
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Order.Order
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Order.Order
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.Order.Order


module Network.AWS.Glue.Types.OtherMetadataValueListItem

-- | A structure containing other metadata for a schema version belonging
--   to the same metadata key.
--   
--   <i>See:</i> <a>newOtherMetadataValueListItem</a> smart constructor.
data OtherMetadataValueListItem
OtherMetadataValueListItem' :: Maybe Text -> Maybe Text -> OtherMetadataValueListItem

-- | The time at which the entry was created.
[$sel:createdTime:OtherMetadataValueListItem'] :: OtherMetadataValueListItem -> Maybe Text

-- | The metadata key’s corresponding value for the other metadata
--   belonging to the same metadata key.
[$sel:metadataValue:OtherMetadataValueListItem'] :: OtherMetadataValueListItem -> Maybe Text

-- | Create a value of <a>OtherMetadataValueListItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdTime:OtherMetadataValueListItem'</a>,
--   <a>otherMetadataValueListItem_createdTime</a> - The time at which the
--   entry was created.
--   
--   <a>$sel:metadataValue:OtherMetadataValueListItem'</a>,
--   <a>otherMetadataValueListItem_metadataValue</a> - The metadata key’s
--   corresponding value for the other metadata belonging to the same
--   metadata key.
newOtherMetadataValueListItem :: OtherMetadataValueListItem

-- | The time at which the entry was created.
otherMetadataValueListItem_createdTime :: Lens' OtherMetadataValueListItem (Maybe Text)

-- | The metadata key’s corresponding value for the other metadata
--   belonging to the same metadata key.
otherMetadataValueListItem_metadataValue :: Lens' OtherMetadataValueListItem (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.OtherMetadataValueListItem.OtherMetadataValueListItem
instance GHC.Show.Show Network.AWS.Glue.Types.OtherMetadataValueListItem.OtherMetadataValueListItem
instance GHC.Read.Read Network.AWS.Glue.Types.OtherMetadataValueListItem.OtherMetadataValueListItem
instance GHC.Classes.Eq Network.AWS.Glue.Types.OtherMetadataValueListItem.OtherMetadataValueListItem
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.OtherMetadataValueListItem.OtherMetadataValueListItem
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.OtherMetadataValueListItem.OtherMetadataValueListItem
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.OtherMetadataValueListItem.OtherMetadataValueListItem


module Network.AWS.Glue.Types.MetadataInfo

-- | A structure containing metadata information for a schema version.
--   
--   <i>See:</i> <a>newMetadataInfo</a> smart constructor.
data MetadataInfo
MetadataInfo' :: Maybe Text -> Maybe [OtherMetadataValueListItem] -> Maybe Text -> MetadataInfo

-- | The time at which the entry was created.
[$sel:createdTime:MetadataInfo'] :: MetadataInfo -> Maybe Text

-- | Other metadata belonging to the same metadata key.
[$sel:otherMetadataValueList:MetadataInfo'] :: MetadataInfo -> Maybe [OtherMetadataValueListItem]

-- | The metadata key’s corresponding value.
[$sel:metadataValue:MetadataInfo'] :: MetadataInfo -> Maybe Text

-- | Create a value of <a>MetadataInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdTime:MetadataInfo'</a>, <a>metadataInfo_createdTime</a>
--   - The time at which the entry was created.
--   
--   <a>$sel:otherMetadataValueList:MetadataInfo'</a>,
--   <a>metadataInfo_otherMetadataValueList</a> - Other metadata belonging
--   to the same metadata key.
--   
--   <a>$sel:metadataValue:MetadataInfo'</a>,
--   <a>metadataInfo_metadataValue</a> - The metadata key’s corresponding
--   value.
newMetadataInfo :: MetadataInfo

-- | The time at which the entry was created.
metadataInfo_createdTime :: Lens' MetadataInfo (Maybe Text)

-- | Other metadata belonging to the same metadata key.
metadataInfo_otherMetadataValueList :: Lens' MetadataInfo (Maybe [OtherMetadataValueListItem])

-- | The metadata key’s corresponding value.
metadataInfo_metadataValue :: Lens' MetadataInfo (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.MetadataInfo.MetadataInfo
instance GHC.Show.Show Network.AWS.Glue.Types.MetadataInfo.MetadataInfo
instance GHC.Read.Read Network.AWS.Glue.Types.MetadataInfo.MetadataInfo
instance GHC.Classes.Eq Network.AWS.Glue.Types.MetadataInfo.MetadataInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.MetadataInfo.MetadataInfo
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.MetadataInfo.MetadataInfo
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.MetadataInfo.MetadataInfo


module Network.AWS.Glue.Types.PartitionError

-- | Contains information about a partition error.
--   
--   <i>See:</i> <a>newPartitionError</a> smart constructor.
data PartitionError
PartitionError' :: Maybe [Text] -> Maybe ErrorDetail -> PartitionError

-- | The values that define the partition.
[$sel:partitionValues:PartitionError'] :: PartitionError -> Maybe [Text]

-- | The details about the partition error.
[$sel:errorDetail:PartitionError'] :: PartitionError -> Maybe ErrorDetail

-- | Create a value of <a>PartitionError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitionValues:PartitionError'</a>,
--   <a>partitionError_partitionValues</a> - The values that define the
--   partition.
--   
--   <a>$sel:errorDetail:PartitionError'</a>,
--   <a>partitionError_errorDetail</a> - The details about the partition
--   error.
newPartitionError :: PartitionError

-- | The values that define the partition.
partitionError_partitionValues :: Lens' PartitionError (Maybe [Text])

-- | The details about the partition error.
partitionError_errorDetail :: Lens' PartitionError (Maybe ErrorDetail)
instance GHC.Generics.Generic Network.AWS.Glue.Types.PartitionError.PartitionError
instance GHC.Show.Show Network.AWS.Glue.Types.PartitionError.PartitionError
instance GHC.Read.Read Network.AWS.Glue.Types.PartitionError.PartitionError
instance GHC.Classes.Eq Network.AWS.Glue.Types.PartitionError.PartitionError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.PartitionError.PartitionError
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.PartitionError.PartitionError
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.PartitionError.PartitionError


module Network.AWS.Glue.Types.PartitionIndex

-- | A structure for a partition index.
--   
--   <i>See:</i> <a>newPartitionIndex</a> smart constructor.
data PartitionIndex
PartitionIndex' :: NonEmpty Text -> Text -> PartitionIndex

-- | The keys for the partition index.
[$sel:keys:PartitionIndex'] :: PartitionIndex -> NonEmpty Text

-- | The name of the partition index.
[$sel:indexName:PartitionIndex'] :: PartitionIndex -> Text

-- | Create a value of <a>PartitionIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keys:PartitionIndex'</a>, <a>partitionIndex_keys</a> - The
--   keys for the partition index.
--   
--   <a>$sel:indexName:PartitionIndex'</a>, <a>partitionIndex_indexName</a>
--   - The name of the partition index.
newPartitionIndex :: NonEmpty Text -> Text -> PartitionIndex

-- | The keys for the partition index.
partitionIndex_keys :: Lens' PartitionIndex (NonEmpty Text)

-- | The name of the partition index.
partitionIndex_indexName :: Lens' PartitionIndex Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.PartitionIndex.PartitionIndex
instance GHC.Show.Show Network.AWS.Glue.Types.PartitionIndex.PartitionIndex
instance GHC.Read.Read Network.AWS.Glue.Types.PartitionIndex.PartitionIndex
instance GHC.Classes.Eq Network.AWS.Glue.Types.PartitionIndex.PartitionIndex
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.PartitionIndex.PartitionIndex
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.PartitionIndex.PartitionIndex
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.PartitionIndex.PartitionIndex


module Network.AWS.Glue.Types.PartitionIndexStatus
newtype PartitionIndexStatus
PartitionIndexStatus' :: Text -> PartitionIndexStatus
[fromPartitionIndexStatus] :: PartitionIndexStatus -> Text
pattern PartitionIndexStatus_ACTIVE :: PartitionIndexStatus
pattern PartitionIndexStatus_CREATING :: PartitionIndexStatus
pattern PartitionIndexStatus_DELETING :: PartitionIndexStatus
pattern PartitionIndexStatus_FAILED :: PartitionIndexStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.PartitionIndexStatus.PartitionIndexStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.PartitionIndexStatus.PartitionIndexStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.PartitionIndexStatus.PartitionIndexStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.PartitionIndexStatus.PartitionIndexStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.PartitionIndexStatus.PartitionIndexStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.PartitionIndexStatus.PartitionIndexStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.PartitionIndexStatus.PartitionIndexStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.PartitionIndexStatus.PartitionIndexStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.PartitionIndexStatus.PartitionIndexStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.PartitionIndexStatus.PartitionIndexStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.PartitionIndexStatus.PartitionIndexStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.PartitionIndexStatus.PartitionIndexStatus
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.PartitionIndexStatus.PartitionIndexStatus
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.PartitionIndexStatus.PartitionIndexStatus
instance GHC.Generics.Generic Network.AWS.Glue.Types.PartitionIndexStatus.PartitionIndexStatus
instance GHC.Classes.Ord Network.AWS.Glue.Types.PartitionIndexStatus.PartitionIndexStatus
instance GHC.Classes.Eq Network.AWS.Glue.Types.PartitionIndexStatus.PartitionIndexStatus
instance GHC.Read.Read Network.AWS.Glue.Types.PartitionIndexStatus.PartitionIndexStatus
instance GHC.Show.Show Network.AWS.Glue.Types.PartitionIndexStatus.PartitionIndexStatus


module Network.AWS.Glue.Types.PartitionValueList

-- | Contains a list of values defining partitions.
--   
--   <i>See:</i> <a>newPartitionValueList</a> smart constructor.
data PartitionValueList
PartitionValueList' :: [Text] -> PartitionValueList

-- | The list of values.
[$sel:values:PartitionValueList'] :: PartitionValueList -> [Text]

-- | Create a value of <a>PartitionValueList</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:PartitionValueList'</a>,
--   <a>partitionValueList_values</a> - The list of values.
newPartitionValueList :: PartitionValueList

-- | The list of values.
partitionValueList_values :: Lens' PartitionValueList [Text]
instance GHC.Generics.Generic Network.AWS.Glue.Types.PartitionValueList.PartitionValueList
instance GHC.Show.Show Network.AWS.Glue.Types.PartitionValueList.PartitionValueList
instance GHC.Read.Read Network.AWS.Glue.Types.PartitionValueList.PartitionValueList
instance GHC.Classes.Eq Network.AWS.Glue.Types.PartitionValueList.PartitionValueList
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.PartitionValueList.PartitionValueList
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.PartitionValueList.PartitionValueList
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.PartitionValueList.PartitionValueList
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.PartitionValueList.PartitionValueList


module Network.AWS.Glue.Types.BackfillError

-- | A list of errors that can occur when registering partition indexes for
--   an existing table.
--   
--   These errors give the details about why an index registration failed
--   and provide a limited number of partitions in the response, so that
--   you can fix the partitions at fault and try registering the index
--   again. The most common set of errors that can occur are categorized as
--   follows:
--   
--   <ul>
--   <li>EncryptedPartitionError: The partitions are encrypted.</li>
--   <li>InvalidPartitionTypeDataError: The partition value doesn't match
--   the data type for that partition column.</li>
--   <li>MissingPartitionValueError: The partitions are encrypted.</li>
--   <li>UnsupportedPartitionCharacterError: Characters inside the
--   partition value are not supported. For example: U+0000 , U+0001,
--   U+0002.</li>
--   <li>InternalError: Any error which does not belong to other error
--   codes.</li>
--   </ul>
--   
--   <i>See:</i> <a>newBackfillError</a> smart constructor.
data BackfillError
BackfillError' :: Maybe [PartitionValueList] -> Maybe BackfillErrorCode -> BackfillError

-- | A list of a limited number of partitions in the response.
[$sel:partitions:BackfillError'] :: BackfillError -> Maybe [PartitionValueList]

-- | The error code for an error that occurred when registering partition
--   indexes for an existing table.
[$sel:code:BackfillError'] :: BackfillError -> Maybe BackfillErrorCode

-- | Create a value of <a>BackfillError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitions:BackfillError'</a>, <a>backfillError_partitions</a>
--   - A list of a limited number of partitions in the response.
--   
--   <a>$sel:code:BackfillError'</a>, <a>backfillError_code</a> - The error
--   code for an error that occurred when registering partition indexes for
--   an existing table.
newBackfillError :: BackfillError

-- | A list of a limited number of partitions in the response.
backfillError_partitions :: Lens' BackfillError (Maybe [PartitionValueList])

-- | The error code for an error that occurred when registering partition
--   indexes for an existing table.
backfillError_code :: Lens' BackfillError (Maybe BackfillErrorCode)
instance GHC.Generics.Generic Network.AWS.Glue.Types.BackfillError.BackfillError
instance GHC.Show.Show Network.AWS.Glue.Types.BackfillError.BackfillError
instance GHC.Read.Read Network.AWS.Glue.Types.BackfillError.BackfillError
instance GHC.Classes.Eq Network.AWS.Glue.Types.BackfillError.BackfillError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.BackfillError.BackfillError
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.BackfillError.BackfillError
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.BackfillError.BackfillError


module Network.AWS.Glue.Types.PartitionIndexDescriptor

-- | A descriptor for a partition index in a table.
--   
--   <i>See:</i> <a>newPartitionIndexDescriptor</a> smart constructor.
data PartitionIndexDescriptor
PartitionIndexDescriptor' :: Maybe [BackfillError] -> Text -> NonEmpty KeySchemaElement -> PartitionIndexStatus -> PartitionIndexDescriptor

-- | A list of errors that can occur when registering partition indexes for
--   an existing table.
[$sel:backfillErrors:PartitionIndexDescriptor'] :: PartitionIndexDescriptor -> Maybe [BackfillError]

-- | The name of the partition index.
[$sel:indexName:PartitionIndexDescriptor'] :: PartitionIndexDescriptor -> Text

-- | A list of one or more keys, as <tt>KeySchemaElement</tt> structures,
--   for the partition index.
[$sel:keys:PartitionIndexDescriptor'] :: PartitionIndexDescriptor -> NonEmpty KeySchemaElement

-- | The status of the partition index.
--   
--   The possible statuses are:
--   
--   <ul>
--   <li>CREATING: The index is being created. When an index is in a
--   CREATING state, the index or its table cannot be deleted.</li>
--   <li>ACTIVE: The index creation succeeds.</li>
--   <li>FAILED: The index creation fails.</li>
--   <li>DELETING: The index is deleted from the list of indexes.</li>
--   </ul>
[$sel:indexStatus:PartitionIndexDescriptor'] :: PartitionIndexDescriptor -> PartitionIndexStatus

-- | Create a value of <a>PartitionIndexDescriptor</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backfillErrors:PartitionIndexDescriptor'</a>,
--   <a>partitionIndexDescriptor_backfillErrors</a> - A list of errors that
--   can occur when registering partition indexes for an existing table.
--   
--   <a>$sel:indexName:PartitionIndexDescriptor'</a>,
--   <a>partitionIndexDescriptor_indexName</a> - The name of the partition
--   index.
--   
--   <a>$sel:keys:PartitionIndexDescriptor'</a>,
--   <a>partitionIndexDescriptor_keys</a> - A list of one or more keys, as
--   <tt>KeySchemaElement</tt> structures, for the partition index.
--   
--   <a>$sel:indexStatus:PartitionIndexDescriptor'</a>,
--   <a>partitionIndexDescriptor_indexStatus</a> - The status of the
--   partition index.
--   
--   The possible statuses are:
--   
--   <ul>
--   <li>CREATING: The index is being created. When an index is in a
--   CREATING state, the index or its table cannot be deleted.</li>
--   <li>ACTIVE: The index creation succeeds.</li>
--   <li>FAILED: The index creation fails.</li>
--   <li>DELETING: The index is deleted from the list of indexes.</li>
--   </ul>
newPartitionIndexDescriptor :: Text -> NonEmpty KeySchemaElement -> PartitionIndexStatus -> PartitionIndexDescriptor

-- | A list of errors that can occur when registering partition indexes for
--   an existing table.
partitionIndexDescriptor_backfillErrors :: Lens' PartitionIndexDescriptor (Maybe [BackfillError])

-- | The name of the partition index.
partitionIndexDescriptor_indexName :: Lens' PartitionIndexDescriptor Text

-- | A list of one or more keys, as <tt>KeySchemaElement</tt> structures,
--   for the partition index.
partitionIndexDescriptor_keys :: Lens' PartitionIndexDescriptor (NonEmpty KeySchemaElement)

-- | The status of the partition index.
--   
--   The possible statuses are:
--   
--   <ul>
--   <li>CREATING: The index is being created. When an index is in a
--   CREATING state, the index or its table cannot be deleted.</li>
--   <li>ACTIVE: The index creation succeeds.</li>
--   <li>FAILED: The index creation fails.</li>
--   <li>DELETING: The index is deleted from the list of indexes.</li>
--   </ul>
partitionIndexDescriptor_indexStatus :: Lens' PartitionIndexDescriptor PartitionIndexStatus
instance GHC.Generics.Generic Network.AWS.Glue.Types.PartitionIndexDescriptor.PartitionIndexDescriptor
instance GHC.Show.Show Network.AWS.Glue.Types.PartitionIndexDescriptor.PartitionIndexDescriptor
instance GHC.Read.Read Network.AWS.Glue.Types.PartitionIndexDescriptor.PartitionIndexDescriptor
instance GHC.Classes.Eq Network.AWS.Glue.Types.PartitionIndexDescriptor.PartitionIndexDescriptor
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.PartitionIndexDescriptor.PartitionIndexDescriptor
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.PartitionIndexDescriptor.PartitionIndexDescriptor
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.PartitionIndexDescriptor.PartitionIndexDescriptor


module Network.AWS.Glue.Types.Permission
newtype Permission
Permission' :: Text -> Permission
[fromPermission] :: Permission -> Text
pattern Permission_ALL :: Permission
pattern Permission_ALTER :: Permission
pattern Permission_CREATE_DATABASE :: Permission
pattern Permission_CREATE_TABLE :: Permission
pattern Permission_DATA_LOCATION_ACCESS :: Permission
pattern Permission_DELETE :: Permission
pattern Permission_DROP :: Permission
pattern Permission_INSERT :: Permission
pattern Permission_SELECT :: Permission
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.Permission.Permission
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.Permission.Permission
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.Permission.Permission
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.Permission.Permission
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.Permission.Permission
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Permission.Permission
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.Permission.Permission
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.Permission.Permission
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.Permission.Permission
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.Permission.Permission
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.Permission.Permission
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.Permission.Permission
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Permission.Permission
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Permission.Permission
instance GHC.Generics.Generic Network.AWS.Glue.Types.Permission.Permission
instance GHC.Classes.Ord Network.AWS.Glue.Types.Permission.Permission
instance GHC.Classes.Eq Network.AWS.Glue.Types.Permission.Permission
instance GHC.Read.Read Network.AWS.Glue.Types.Permission.Permission
instance GHC.Show.Show Network.AWS.Glue.Types.Permission.Permission


module Network.AWS.Glue.Types.PhysicalConnectionRequirements

-- | Specifies the physical requirements for a connection.
--   
--   <i>See:</i> <a>newPhysicalConnectionRequirements</a> smart
--   constructor.
data PhysicalConnectionRequirements
PhysicalConnectionRequirements' :: Maybe [Text] -> Maybe Text -> Maybe Text -> PhysicalConnectionRequirements

-- | The security group ID list used by the connection.
[$sel:securityGroupIdList:PhysicalConnectionRequirements'] :: PhysicalConnectionRequirements -> Maybe [Text]

-- | The subnet ID used by the connection.
[$sel:subnetId:PhysicalConnectionRequirements'] :: PhysicalConnectionRequirements -> Maybe Text

-- | The connection's Availability Zone. This field is redundant because
--   the specified subnet implies the Availability Zone to be used.
--   Currently the field must be populated, but it will be deprecated in
--   the future.
[$sel:availabilityZone:PhysicalConnectionRequirements'] :: PhysicalConnectionRequirements -> Maybe Text

-- | Create a value of <a>PhysicalConnectionRequirements</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIdList:PhysicalConnectionRequirements'</a>,
--   <a>physicalConnectionRequirements_securityGroupIdList</a> - The
--   security group ID list used by the connection.
--   
--   <a>$sel:subnetId:PhysicalConnectionRequirements'</a>,
--   <a>physicalConnectionRequirements_subnetId</a> - The subnet ID used by
--   the connection.
--   
--   <a>$sel:availabilityZone:PhysicalConnectionRequirements'</a>,
--   <a>physicalConnectionRequirements_availabilityZone</a> - The
--   connection's Availability Zone. This field is redundant because the
--   specified subnet implies the Availability Zone to be used. Currently
--   the field must be populated, but it will be deprecated in the future.
newPhysicalConnectionRequirements :: PhysicalConnectionRequirements

-- | The security group ID list used by the connection.
physicalConnectionRequirements_securityGroupIdList :: Lens' PhysicalConnectionRequirements (Maybe [Text])

-- | The subnet ID used by the connection.
physicalConnectionRequirements_subnetId :: Lens' PhysicalConnectionRequirements (Maybe Text)

-- | The connection's Availability Zone. This field is redundant because
--   the specified subnet implies the Availability Zone to be used.
--   Currently the field must be populated, but it will be deprecated in
--   the future.
physicalConnectionRequirements_availabilityZone :: Lens' PhysicalConnectionRequirements (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.PhysicalConnectionRequirements.PhysicalConnectionRequirements
instance GHC.Show.Show Network.AWS.Glue.Types.PhysicalConnectionRequirements.PhysicalConnectionRequirements
instance GHC.Read.Read Network.AWS.Glue.Types.PhysicalConnectionRequirements.PhysicalConnectionRequirements
instance GHC.Classes.Eq Network.AWS.Glue.Types.PhysicalConnectionRequirements.PhysicalConnectionRequirements
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.PhysicalConnectionRequirements.PhysicalConnectionRequirements
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.PhysicalConnectionRequirements.PhysicalConnectionRequirements
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.PhysicalConnectionRequirements.PhysicalConnectionRequirements
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.PhysicalConnectionRequirements.PhysicalConnectionRequirements


module Network.AWS.Glue.Types.ConnectionInput

-- | A structure that is used to specify a connection to create or update.
--   
--   <i>See:</i> <a>newConnectionInput</a> smart constructor.
data ConnectionInput
ConnectionInput' :: Maybe [Text] -> Maybe PhysicalConnectionRequirements -> Maybe Text -> Text -> ConnectionType -> HashMap ConnectionPropertyKey Text -> ConnectionInput

-- | A list of criteria that can be used in selecting this connection.
[$sel:matchCriteria:ConnectionInput'] :: ConnectionInput -> Maybe [Text]

-- | A map of physical connection requirements, such as virtual private
--   cloud (VPC) and <tt>SecurityGroup</tt>, that are needed to
--   successfully make this connection.
[$sel:physicalConnectionRequirements:ConnectionInput'] :: ConnectionInput -> Maybe PhysicalConnectionRequirements

-- | The description of the connection.
[$sel:description:ConnectionInput'] :: ConnectionInput -> Maybe Text

-- | The name of the connection.
[$sel:name:ConnectionInput'] :: ConnectionInput -> Text

-- | The type of the connection. Currently, these types are supported:
--   
--   <ul>
--   <li><tt>JDBC</tt> - Designates a connection to a database through Java
--   Database Connectivity (JDBC).</li>
--   <li><tt>KAFKA</tt> - Designates a connection to an Apache Kafka
--   streaming platform.</li>
--   <li><tt>MONGODB</tt> - Designates a connection to a MongoDB document
--   database.</li>
--   <li><tt>NETWORK</tt> - Designates a network connection to a data
--   source within an Amazon Virtual Private Cloud environment (Amazon
--   VPC).</li>
--   <li><tt>MARKETPLACE</tt> - Uses configuration settings contained in a
--   connector purchased from Amazon Web Services Marketplace to read from
--   and write to data stores that are not natively supported by Glue.</li>
--   <li><tt>CUSTOM</tt> - Uses configuration settings contained in a
--   custom connector to read from and write to data stores that are not
--   natively supported by Glue.</li>
--   </ul>
--   
--   SFTP is not supported.
[$sel:connectionType:ConnectionInput'] :: ConnectionInput -> ConnectionType

-- | These key-value pairs define parameters for the connection.
[$sel:connectionProperties:ConnectionInput'] :: ConnectionInput -> HashMap ConnectionPropertyKey Text

-- | Create a value of <a>ConnectionInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:matchCriteria:ConnectionInput'</a>,
--   <a>connectionInput_matchCriteria</a> - A list of criteria that can be
--   used in selecting this connection.
--   
--   <a>$sel:physicalConnectionRequirements:ConnectionInput'</a>,
--   <a>connectionInput_physicalConnectionRequirements</a> - A map of
--   physical connection requirements, such as virtual private cloud (VPC)
--   and <tt>SecurityGroup</tt>, that are needed to successfully make this
--   connection.
--   
--   <a>$sel:description:ConnectionInput'</a>,
--   <a>connectionInput_description</a> - The description of the
--   connection.
--   
--   <a>$sel:name:ConnectionInput'</a>, <a>connectionInput_name</a> - The
--   name of the connection.
--   
--   <a>$sel:connectionType:ConnectionInput'</a>,
--   <a>connectionInput_connectionType</a> - The type of the connection.
--   Currently, these types are supported:
--   
--   <ul>
--   <li><tt>JDBC</tt> - Designates a connection to a database through Java
--   Database Connectivity (JDBC).</li>
--   <li><tt>KAFKA</tt> - Designates a connection to an Apache Kafka
--   streaming platform.</li>
--   <li><tt>MONGODB</tt> - Designates a connection to a MongoDB document
--   database.</li>
--   <li><tt>NETWORK</tt> - Designates a network connection to a data
--   source within an Amazon Virtual Private Cloud environment (Amazon
--   VPC).</li>
--   <li><tt>MARKETPLACE</tt> - Uses configuration settings contained in a
--   connector purchased from Amazon Web Services Marketplace to read from
--   and write to data stores that are not natively supported by Glue.</li>
--   <li><tt>CUSTOM</tt> - Uses configuration settings contained in a
--   custom connector to read from and write to data stores that are not
--   natively supported by Glue.</li>
--   </ul>
--   
--   SFTP is not supported.
--   
--   <a>$sel:connectionProperties:ConnectionInput'</a>,
--   <a>connectionInput_connectionProperties</a> - These key-value pairs
--   define parameters for the connection.
newConnectionInput :: Text -> ConnectionType -> ConnectionInput

-- | A list of criteria that can be used in selecting this connection.
connectionInput_matchCriteria :: Lens' ConnectionInput (Maybe [Text])

-- | A map of physical connection requirements, such as virtual private
--   cloud (VPC) and <tt>SecurityGroup</tt>, that are needed to
--   successfully make this connection.
connectionInput_physicalConnectionRequirements :: Lens' ConnectionInput (Maybe PhysicalConnectionRequirements)

-- | The description of the connection.
connectionInput_description :: Lens' ConnectionInput (Maybe Text)

-- | The name of the connection.
connectionInput_name :: Lens' ConnectionInput Text

-- | The type of the connection. Currently, these types are supported:
--   
--   <ul>
--   <li><tt>JDBC</tt> - Designates a connection to a database through Java
--   Database Connectivity (JDBC).</li>
--   <li><tt>KAFKA</tt> - Designates a connection to an Apache Kafka
--   streaming platform.</li>
--   <li><tt>MONGODB</tt> - Designates a connection to a MongoDB document
--   database.</li>
--   <li><tt>NETWORK</tt> - Designates a network connection to a data
--   source within an Amazon Virtual Private Cloud environment (Amazon
--   VPC).</li>
--   <li><tt>MARKETPLACE</tt> - Uses configuration settings contained in a
--   connector purchased from Amazon Web Services Marketplace to read from
--   and write to data stores that are not natively supported by Glue.</li>
--   <li><tt>CUSTOM</tt> - Uses configuration settings contained in a
--   custom connector to read from and write to data stores that are not
--   natively supported by Glue.</li>
--   </ul>
--   
--   SFTP is not supported.
connectionInput_connectionType :: Lens' ConnectionInput ConnectionType

-- | These key-value pairs define parameters for the connection.
connectionInput_connectionProperties :: Lens' ConnectionInput (HashMap ConnectionPropertyKey Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.ConnectionInput.ConnectionInput
instance GHC.Show.Show Network.AWS.Glue.Types.ConnectionInput.ConnectionInput
instance GHC.Read.Read Network.AWS.Glue.Types.ConnectionInput.ConnectionInput
instance GHC.Classes.Eq Network.AWS.Glue.Types.ConnectionInput.ConnectionInput
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ConnectionInput.ConnectionInput
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ConnectionInput.ConnectionInput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.ConnectionInput.ConnectionInput


module Network.AWS.Glue.Types.Connection

-- | Defines a connection to a data source.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe POSIX -> Maybe Text -> Maybe (HashMap ConnectionPropertyKey Text) -> Maybe POSIX -> Maybe [Text] -> Maybe PhysicalConnectionRequirements -> Maybe Text -> Maybe Text -> Maybe ConnectionType -> Connection

-- | The time that this connection definition was created.
[$sel:creationTime:Connection'] :: Connection -> Maybe POSIX

-- | The user, group, or role that last updated this connection definition.
[$sel:lastUpdatedBy:Connection'] :: Connection -> Maybe Text

-- | These key-value pairs define parameters for the connection:
--   
--   <ul>
--   <li><tt>HOST</tt> - The host URI: either the fully qualified domain
--   name (FQDN) or the IPv4 address of the database host.</li>
--   <li><tt>PORT</tt> - The port number, between 1024 and 65535, of the
--   port on which the database host is listening for database
--   connections.</li>
--   <li><tt>USER_NAME</tt> - The name under which to log in to the
--   database. The value string for <tt>USER_NAME</tt> is
--   "<tt>USERNAME</tt>".</li>
--   <li><tt>PASSWORD</tt> - A password, if one is used, for the user
--   name.</li>
--   <li><tt>ENCRYPTED_PASSWORD</tt> - When you enable connection password
--   protection by setting <tt>ConnectionPasswordEncryption</tt> in the
--   Data Catalog encryption settings, this field stores the encrypted
--   password.</li>
--   <li><tt>JDBC_DRIVER_JAR_URI</tt> - The Amazon Simple Storage Service
--   (Amazon S3) path of the JAR file that contains the JDBC driver to
--   use.</li>
--   <li><tt>JDBC_DRIVER_CLASS_NAME</tt> - The class name of the JDBC
--   driver to use.</li>
--   <li><tt>JDBC_ENGINE</tt> - The name of the JDBC engine to use.</li>
--   <li><tt>JDBC_ENGINE_VERSION</tt> - The version of the JDBC engine to
--   use.</li>
--   <li><tt>CONFIG_FILES</tt> - (Reserved for future use.)</li>
--   <li><tt>INSTANCE_ID</tt> - The instance ID to use.</li>
--   <li><tt>JDBC_CONNECTION_URL</tt> - The URL for connecting to a JDBC
--   data source.</li>
--   <li><tt>JDBC_ENFORCE_SSL</tt> - A Boolean string (true, false)
--   specifying whether Secure Sockets Layer (SSL) with hostname matching
--   is enforced for the JDBC connection on the client. The default is
--   false.</li>
--   <li><tt>CUSTOM_JDBC_CERT</tt> - An Amazon S3 location specifying the
--   customer's root certificate. Glue uses this root certificate to
--   validate the customer’s certificate when connecting to the customer
--   database. Glue only handles X.509 certificates. The certificate
--   provided must be DER-encoded and supplied in Base64 encoding PEM
--   format.</li>
--   <li><tt>SKIP_CUSTOM_JDBC_CERT_VALIDATION</tt> - By default, this is
--   <tt>false</tt>. Glue validates the Signature algorithm and Subject
--   Public Key Algorithm for the customer certificate. The only permitted
--   algorithms for the Signature algorithm are SHA256withRSA,
--   SHA384withRSA or SHA512withRSA. For the Subject Public Key Algorithm,
--   the key length must be at least 2048. You can set the value of this
--   property to <tt>true</tt> to skip Glue’s validation of the customer
--   certificate.</li>
--   <li><tt>CUSTOM_JDBC_CERT_STRING</tt> - A custom JDBC certificate
--   string which is used for domain match or distinguished name match to
--   prevent a man-in-the-middle attack. In Oracle database, this is used
--   as the <tt>SSL_SERVER_CERT_DN</tt>; in Microsoft SQL Server, this is
--   used as the <tt>hostNameInCertificate</tt>.</li>
--   <li><tt>CONNECTION_URL</tt> - The URL for connecting to a general
--   (non-JDBC) data source.</li>
--   <li><tt>KAFKA_BOOTSTRAP_SERVERS</tt> - A comma-separated list of host
--   and port pairs that are the addresses of the Apache Kafka brokers in a
--   Kafka cluster to which a Kafka client will connect to and bootstrap
--   itself.</li>
--   <li><tt>KAFKA_SSL_ENABLED</tt> - Whether to enable or disable SSL on
--   an Apache Kafka connection. Default value is "true".</li>
--   <li><tt>KAFKA_CUSTOM_CERT</tt> - The Amazon S3 URL for the private CA
--   cert file (.pem format). The default is an empty string.</li>
--   <li><tt>KAFKA_SKIP_CUSTOM_CERT_VALIDATION</tt> - Whether to skip the
--   validation of the CA cert file or not. Glue validates for three
--   algorithms: SHA256withRSA, SHA384withRSA and SHA512withRSA. Default
--   value is "false".</li>
--   <li><tt>SECRET_ID</tt> - The secret ID used for the secret manager of
--   credentials.</li>
--   <li><tt>CONNECTOR_URL</tt> - The connector URL for a MARKETPLACE or
--   CUSTOM connection.</li>
--   <li><tt>CONNECTOR_TYPE</tt> - The connector type for a MARKETPLACE or
--   CUSTOM connection.</li>
--   <li><tt>CONNECTOR_CLASS_NAME</tt> - The connector class name for a
--   MARKETPLACE or CUSTOM connection.</li>
--   <li><tt>KAFKA_CLIENT_KEYSTORE</tt> - The Amazon S3 location of the
--   client keystore file for Kafka client side authentication
--   (Optional).</li>
--   <li><tt>KAFKA_CLIENT_KEYSTORE_PASSWORD</tt> - The password to access
--   the provided keystore (Optional).</li>
--   <li><tt>KAFKA_CLIENT_KEY_PASSWORD</tt> - A keystore can consist of
--   multiple keys, so this is the password to access the client key to be
--   used with the Kafka server side key (Optional).</li>
--   <li><tt>ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD</tt> - The encrypted
--   version of the Kafka client keystore password (if the user has the
--   Glue encrypt passwords setting selected).</li>
--   <li><tt>ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD</tt> - The encrypted
--   version of the Kafka client key password (if the user has the Glue
--   encrypt passwords setting selected).</li>
--   </ul>
[$sel:connectionProperties:Connection'] :: Connection -> Maybe (HashMap ConnectionPropertyKey Text)

-- | The last time that this connection definition was updated.
[$sel:lastUpdatedTime:Connection'] :: Connection -> Maybe POSIX

-- | A list of criteria that can be used in selecting this connection.
[$sel:matchCriteria:Connection'] :: Connection -> Maybe [Text]

-- | A map of physical connection requirements, such as virtual private
--   cloud (VPC) and <tt>SecurityGroup</tt>, that are needed to make this
--   connection successfully.
[$sel:physicalConnectionRequirements:Connection'] :: Connection -> Maybe PhysicalConnectionRequirements

-- | The name of the connection definition.
[$sel:name:Connection'] :: Connection -> Maybe Text

-- | The description of the connection.
[$sel:description:Connection'] :: Connection -> Maybe Text

-- | The type of the connection. Currently, SFTP is not supported.
[$sel:connectionType:Connection'] :: Connection -> Maybe ConnectionType

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Connection'</a>, <a>connection_creationTime</a> -
--   The time that this connection definition was created.
--   
--   <a>$sel:lastUpdatedBy:Connection'</a>, <a>connection_lastUpdatedBy</a>
--   - The user, group, or role that last updated this connection
--   definition.
--   
--   <a>$sel:connectionProperties:Connection'</a>,
--   <a>connection_connectionProperties</a> - These key-value pairs define
--   parameters for the connection:
--   
--   <ul>
--   <li><tt>HOST</tt> - The host URI: either the fully qualified domain
--   name (FQDN) or the IPv4 address of the database host.</li>
--   <li><tt>PORT</tt> - The port number, between 1024 and 65535, of the
--   port on which the database host is listening for database
--   connections.</li>
--   <li><tt>USER_NAME</tt> - The name under which to log in to the
--   database. The value string for <tt>USER_NAME</tt> is
--   "<tt>USERNAME</tt>".</li>
--   <li><tt>PASSWORD</tt> - A password, if one is used, for the user
--   name.</li>
--   <li><tt>ENCRYPTED_PASSWORD</tt> - When you enable connection password
--   protection by setting <tt>ConnectionPasswordEncryption</tt> in the
--   Data Catalog encryption settings, this field stores the encrypted
--   password.</li>
--   <li><tt>JDBC_DRIVER_JAR_URI</tt> - The Amazon Simple Storage Service
--   (Amazon S3) path of the JAR file that contains the JDBC driver to
--   use.</li>
--   <li><tt>JDBC_DRIVER_CLASS_NAME</tt> - The class name of the JDBC
--   driver to use.</li>
--   <li><tt>JDBC_ENGINE</tt> - The name of the JDBC engine to use.</li>
--   <li><tt>JDBC_ENGINE_VERSION</tt> - The version of the JDBC engine to
--   use.</li>
--   <li><tt>CONFIG_FILES</tt> - (Reserved for future use.)</li>
--   <li><tt>INSTANCE_ID</tt> - The instance ID to use.</li>
--   <li><tt>JDBC_CONNECTION_URL</tt> - The URL for connecting to a JDBC
--   data source.</li>
--   <li><tt>JDBC_ENFORCE_SSL</tt> - A Boolean string (true, false)
--   specifying whether Secure Sockets Layer (SSL) with hostname matching
--   is enforced for the JDBC connection on the client. The default is
--   false.</li>
--   <li><tt>CUSTOM_JDBC_CERT</tt> - An Amazon S3 location specifying the
--   customer's root certificate. Glue uses this root certificate to
--   validate the customer’s certificate when connecting to the customer
--   database. Glue only handles X.509 certificates. The certificate
--   provided must be DER-encoded and supplied in Base64 encoding PEM
--   format.</li>
--   <li><tt>SKIP_CUSTOM_JDBC_CERT_VALIDATION</tt> - By default, this is
--   <tt>false</tt>. Glue validates the Signature algorithm and Subject
--   Public Key Algorithm for the customer certificate. The only permitted
--   algorithms for the Signature algorithm are SHA256withRSA,
--   SHA384withRSA or SHA512withRSA. For the Subject Public Key Algorithm,
--   the key length must be at least 2048. You can set the value of this
--   property to <tt>true</tt> to skip Glue’s validation of the customer
--   certificate.</li>
--   <li><tt>CUSTOM_JDBC_CERT_STRING</tt> - A custom JDBC certificate
--   string which is used for domain match or distinguished name match to
--   prevent a man-in-the-middle attack. In Oracle database, this is used
--   as the <tt>SSL_SERVER_CERT_DN</tt>; in Microsoft SQL Server, this is
--   used as the <tt>hostNameInCertificate</tt>.</li>
--   <li><tt>CONNECTION_URL</tt> - The URL for connecting to a general
--   (non-JDBC) data source.</li>
--   <li><tt>KAFKA_BOOTSTRAP_SERVERS</tt> - A comma-separated list of host
--   and port pairs that are the addresses of the Apache Kafka brokers in a
--   Kafka cluster to which a Kafka client will connect to and bootstrap
--   itself.</li>
--   <li><tt>KAFKA_SSL_ENABLED</tt> - Whether to enable or disable SSL on
--   an Apache Kafka connection. Default value is "true".</li>
--   <li><tt>KAFKA_CUSTOM_CERT</tt> - The Amazon S3 URL for the private CA
--   cert file (.pem format). The default is an empty string.</li>
--   <li><tt>KAFKA_SKIP_CUSTOM_CERT_VALIDATION</tt> - Whether to skip the
--   validation of the CA cert file or not. Glue validates for three
--   algorithms: SHA256withRSA, SHA384withRSA and SHA512withRSA. Default
--   value is "false".</li>
--   <li><tt>SECRET_ID</tt> - The secret ID used for the secret manager of
--   credentials.</li>
--   <li><tt>CONNECTOR_URL</tt> - The connector URL for a MARKETPLACE or
--   CUSTOM connection.</li>
--   <li><tt>CONNECTOR_TYPE</tt> - The connector type for a MARKETPLACE or
--   CUSTOM connection.</li>
--   <li><tt>CONNECTOR_CLASS_NAME</tt> - The connector class name for a
--   MARKETPLACE or CUSTOM connection.</li>
--   <li><tt>KAFKA_CLIENT_KEYSTORE</tt> - The Amazon S3 location of the
--   client keystore file for Kafka client side authentication
--   (Optional).</li>
--   <li><tt>KAFKA_CLIENT_KEYSTORE_PASSWORD</tt> - The password to access
--   the provided keystore (Optional).</li>
--   <li><tt>KAFKA_CLIENT_KEY_PASSWORD</tt> - A keystore can consist of
--   multiple keys, so this is the password to access the client key to be
--   used with the Kafka server side key (Optional).</li>
--   <li><tt>ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD</tt> - The encrypted
--   version of the Kafka client keystore password (if the user has the
--   Glue encrypt passwords setting selected).</li>
--   <li><tt>ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD</tt> - The encrypted
--   version of the Kafka client key password (if the user has the Glue
--   encrypt passwords setting selected).</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedTime:Connection'</a>,
--   <a>connection_lastUpdatedTime</a> - The last time that this connection
--   definition was updated.
--   
--   <a>$sel:matchCriteria:Connection'</a>, <a>connection_matchCriteria</a>
--   - A list of criteria that can be used in selecting this connection.
--   
--   <a>$sel:physicalConnectionRequirements:Connection'</a>,
--   <a>connection_physicalConnectionRequirements</a> - A map of physical
--   connection requirements, such as virtual private cloud (VPC) and
--   <tt>SecurityGroup</tt>, that are needed to make this connection
--   successfully.
--   
--   <a>$sel:name:Connection'</a>, <a>connection_name</a> - The name of the
--   connection definition.
--   
--   <a>$sel:description:Connection'</a>, <a>connection_description</a> -
--   The description of the connection.
--   
--   <a>$sel:connectionType:Connection'</a>,
--   <a>connection_connectionType</a> - The type of the connection.
--   Currently, SFTP is not supported.
newConnection :: Connection

-- | The time that this connection definition was created.
connection_creationTime :: Lens' Connection (Maybe UTCTime)

-- | The user, group, or role that last updated this connection definition.
connection_lastUpdatedBy :: Lens' Connection (Maybe Text)

-- | These key-value pairs define parameters for the connection:
--   
--   <ul>
--   <li><tt>HOST</tt> - The host URI: either the fully qualified domain
--   name (FQDN) or the IPv4 address of the database host.</li>
--   <li><tt>PORT</tt> - The port number, between 1024 and 65535, of the
--   port on which the database host is listening for database
--   connections.</li>
--   <li><tt>USER_NAME</tt> - The name under which to log in to the
--   database. The value string for <tt>USER_NAME</tt> is
--   "<tt>USERNAME</tt>".</li>
--   <li><tt>PASSWORD</tt> - A password, if one is used, for the user
--   name.</li>
--   <li><tt>ENCRYPTED_PASSWORD</tt> - When you enable connection password
--   protection by setting <tt>ConnectionPasswordEncryption</tt> in the
--   Data Catalog encryption settings, this field stores the encrypted
--   password.</li>
--   <li><tt>JDBC_DRIVER_JAR_URI</tt> - The Amazon Simple Storage Service
--   (Amazon S3) path of the JAR file that contains the JDBC driver to
--   use.</li>
--   <li><tt>JDBC_DRIVER_CLASS_NAME</tt> - The class name of the JDBC
--   driver to use.</li>
--   <li><tt>JDBC_ENGINE</tt> - The name of the JDBC engine to use.</li>
--   <li><tt>JDBC_ENGINE_VERSION</tt> - The version of the JDBC engine to
--   use.</li>
--   <li><tt>CONFIG_FILES</tt> - (Reserved for future use.)</li>
--   <li><tt>INSTANCE_ID</tt> - The instance ID to use.</li>
--   <li><tt>JDBC_CONNECTION_URL</tt> - The URL for connecting to a JDBC
--   data source.</li>
--   <li><tt>JDBC_ENFORCE_SSL</tt> - A Boolean string (true, false)
--   specifying whether Secure Sockets Layer (SSL) with hostname matching
--   is enforced for the JDBC connection on the client. The default is
--   false.</li>
--   <li><tt>CUSTOM_JDBC_CERT</tt> - An Amazon S3 location specifying the
--   customer's root certificate. Glue uses this root certificate to
--   validate the customer’s certificate when connecting to the customer
--   database. Glue only handles X.509 certificates. The certificate
--   provided must be DER-encoded and supplied in Base64 encoding PEM
--   format.</li>
--   <li><tt>SKIP_CUSTOM_JDBC_CERT_VALIDATION</tt> - By default, this is
--   <tt>false</tt>. Glue validates the Signature algorithm and Subject
--   Public Key Algorithm for the customer certificate. The only permitted
--   algorithms for the Signature algorithm are SHA256withRSA,
--   SHA384withRSA or SHA512withRSA. For the Subject Public Key Algorithm,
--   the key length must be at least 2048. You can set the value of this
--   property to <tt>true</tt> to skip Glue’s validation of the customer
--   certificate.</li>
--   <li><tt>CUSTOM_JDBC_CERT_STRING</tt> - A custom JDBC certificate
--   string which is used for domain match or distinguished name match to
--   prevent a man-in-the-middle attack. In Oracle database, this is used
--   as the <tt>SSL_SERVER_CERT_DN</tt>; in Microsoft SQL Server, this is
--   used as the <tt>hostNameInCertificate</tt>.</li>
--   <li><tt>CONNECTION_URL</tt> - The URL for connecting to a general
--   (non-JDBC) data source.</li>
--   <li><tt>KAFKA_BOOTSTRAP_SERVERS</tt> - A comma-separated list of host
--   and port pairs that are the addresses of the Apache Kafka brokers in a
--   Kafka cluster to which a Kafka client will connect to and bootstrap
--   itself.</li>
--   <li><tt>KAFKA_SSL_ENABLED</tt> - Whether to enable or disable SSL on
--   an Apache Kafka connection. Default value is "true".</li>
--   <li><tt>KAFKA_CUSTOM_CERT</tt> - The Amazon S3 URL for the private CA
--   cert file (.pem format). The default is an empty string.</li>
--   <li><tt>KAFKA_SKIP_CUSTOM_CERT_VALIDATION</tt> - Whether to skip the
--   validation of the CA cert file or not. Glue validates for three
--   algorithms: SHA256withRSA, SHA384withRSA and SHA512withRSA. Default
--   value is "false".</li>
--   <li><tt>SECRET_ID</tt> - The secret ID used for the secret manager of
--   credentials.</li>
--   <li><tt>CONNECTOR_URL</tt> - The connector URL for a MARKETPLACE or
--   CUSTOM connection.</li>
--   <li><tt>CONNECTOR_TYPE</tt> - The connector type for a MARKETPLACE or
--   CUSTOM connection.</li>
--   <li><tt>CONNECTOR_CLASS_NAME</tt> - The connector class name for a
--   MARKETPLACE or CUSTOM connection.</li>
--   <li><tt>KAFKA_CLIENT_KEYSTORE</tt> - The Amazon S3 location of the
--   client keystore file for Kafka client side authentication
--   (Optional).</li>
--   <li><tt>KAFKA_CLIENT_KEYSTORE_PASSWORD</tt> - The password to access
--   the provided keystore (Optional).</li>
--   <li><tt>KAFKA_CLIENT_KEY_PASSWORD</tt> - A keystore can consist of
--   multiple keys, so this is the password to access the client key to be
--   used with the Kafka server side key (Optional).</li>
--   <li><tt>ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD</tt> - The encrypted
--   version of the Kafka client keystore password (if the user has the
--   Glue encrypt passwords setting selected).</li>
--   <li><tt>ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD</tt> - The encrypted
--   version of the Kafka client key password (if the user has the Glue
--   encrypt passwords setting selected).</li>
--   </ul>
connection_connectionProperties :: Lens' Connection (Maybe (HashMap ConnectionPropertyKey Text))

-- | The last time that this connection definition was updated.
connection_lastUpdatedTime :: Lens' Connection (Maybe UTCTime)

-- | A list of criteria that can be used in selecting this connection.
connection_matchCriteria :: Lens' Connection (Maybe [Text])

-- | A map of physical connection requirements, such as virtual private
--   cloud (VPC) and <tt>SecurityGroup</tt>, that are needed to make this
--   connection successfully.
connection_physicalConnectionRequirements :: Lens' Connection (Maybe PhysicalConnectionRequirements)

-- | The name of the connection definition.
connection_name :: Lens' Connection (Maybe Text)

-- | The description of the connection.
connection_description :: Lens' Connection (Maybe Text)

-- | The type of the connection. Currently, SFTP is not supported.
connection_connectionType :: Lens' Connection (Maybe ConnectionType)
instance GHC.Generics.Generic Network.AWS.Glue.Types.Connection.Connection
instance GHC.Show.Show Network.AWS.Glue.Types.Connection.Connection
instance GHC.Read.Read Network.AWS.Glue.Types.Connection.Connection
instance GHC.Classes.Eq Network.AWS.Glue.Types.Connection.Connection
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Connection.Connection
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Connection.Connection
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Connection.Connection


module Network.AWS.Glue.Types.Predecessor

-- | A job run that was used in the predicate of a conditional trigger that
--   triggered this job run.
--   
--   <i>See:</i> <a>newPredecessor</a> smart constructor.
data Predecessor
Predecessor' :: Maybe Text -> Maybe Text -> Predecessor

-- | The name of the job definition used by the predecessor job run.
[$sel:jobName:Predecessor'] :: Predecessor -> Maybe Text

-- | The job-run ID of the predecessor job run.
[$sel:runId:Predecessor'] :: Predecessor -> Maybe Text

-- | Create a value of <a>Predecessor</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:Predecessor'</a>, <a>predecessor_jobName</a> - The
--   name of the job definition used by the predecessor job run.
--   
--   <a>$sel:runId:Predecessor'</a>, <a>predecessor_runId</a> - The job-run
--   ID of the predecessor job run.
newPredecessor :: Predecessor

-- | The name of the job definition used by the predecessor job run.
predecessor_jobName :: Lens' Predecessor (Maybe Text)

-- | The job-run ID of the predecessor job run.
predecessor_runId :: Lens' Predecessor (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.Predecessor.Predecessor
instance GHC.Show.Show Network.AWS.Glue.Types.Predecessor.Predecessor
instance GHC.Read.Read Network.AWS.Glue.Types.Predecessor.Predecessor
instance GHC.Classes.Eq Network.AWS.Glue.Types.Predecessor.Predecessor
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Predecessor.Predecessor
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Predecessor.Predecessor
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Predecessor.Predecessor


module Network.AWS.Glue.Types.Predicate

-- | Defines the predicate of the trigger, which determines when it fires.
--   
--   <i>See:</i> <a>newPredicate</a> smart constructor.
data Predicate
Predicate' :: Maybe Logical -> Maybe [Condition] -> Predicate

-- | An optional field if only one condition is listed. If multiple
--   conditions are listed, then this field is required.
[$sel:logical:Predicate'] :: Predicate -> Maybe Logical

-- | A list of the conditions that determine when the trigger will fire.
[$sel:conditions:Predicate'] :: Predicate -> Maybe [Condition]

-- | Create a value of <a>Predicate</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logical:Predicate'</a>, <a>predicate_logical</a> - An optional
--   field if only one condition is listed. If multiple conditions are
--   listed, then this field is required.
--   
--   <a>$sel:conditions:Predicate'</a>, <a>predicate_conditions</a> - A
--   list of the conditions that determine when the trigger will fire.
newPredicate :: Predicate

-- | An optional field if only one condition is listed. If multiple
--   conditions are listed, then this field is required.
predicate_logical :: Lens' Predicate (Maybe Logical)

-- | A list of the conditions that determine when the trigger will fire.
predicate_conditions :: Lens' Predicate (Maybe [Condition])
instance GHC.Generics.Generic Network.AWS.Glue.Types.Predicate.Predicate
instance GHC.Show.Show Network.AWS.Glue.Types.Predicate.Predicate
instance GHC.Read.Read Network.AWS.Glue.Types.Predicate.Predicate
instance GHC.Classes.Eq Network.AWS.Glue.Types.Predicate.Predicate
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Predicate.Predicate
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Predicate.Predicate
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Predicate.Predicate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.Predicate.Predicate


module Network.AWS.Glue.Types.PrincipalPermissions

-- | Permissions granted to a principal.
--   
--   <i>See:</i> <a>newPrincipalPermissions</a> smart constructor.
data PrincipalPermissions
PrincipalPermissions' :: Maybe DataLakePrincipal -> Maybe [Permission] -> PrincipalPermissions

-- | The principal who is granted permissions.
[$sel:principal:PrincipalPermissions'] :: PrincipalPermissions -> Maybe DataLakePrincipal

-- | The permissions that are granted to the principal.
[$sel:permissions:PrincipalPermissions'] :: PrincipalPermissions -> Maybe [Permission]

-- | Create a value of <a>PrincipalPermissions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:principal:PrincipalPermissions'</a>,
--   <a>principalPermissions_principal</a> - The principal who is granted
--   permissions.
--   
--   <a>$sel:permissions:PrincipalPermissions'</a>,
--   <a>principalPermissions_permissions</a> - The permissions that are
--   granted to the principal.
newPrincipalPermissions :: PrincipalPermissions

-- | The principal who is granted permissions.
principalPermissions_principal :: Lens' PrincipalPermissions (Maybe DataLakePrincipal)

-- | The permissions that are granted to the principal.
principalPermissions_permissions :: Lens' PrincipalPermissions (Maybe [Permission])
instance GHC.Generics.Generic Network.AWS.Glue.Types.PrincipalPermissions.PrincipalPermissions
instance GHC.Show.Show Network.AWS.Glue.Types.PrincipalPermissions.PrincipalPermissions
instance GHC.Read.Read Network.AWS.Glue.Types.PrincipalPermissions.PrincipalPermissions
instance GHC.Classes.Eq Network.AWS.Glue.Types.PrincipalPermissions.PrincipalPermissions
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.PrincipalPermissions.PrincipalPermissions
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.PrincipalPermissions.PrincipalPermissions
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.PrincipalPermissions.PrincipalPermissions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.PrincipalPermissions.PrincipalPermissions


module Network.AWS.Glue.Types.DatabaseInput

-- | The structure used to create or update a database.
--   
--   <i>See:</i> <a>newDatabaseInput</a> smart constructor.
data DatabaseInput
DatabaseInput' :: Maybe Text -> Maybe DatabaseIdentifier -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe [PrincipalPermissions] -> Text -> DatabaseInput

-- | The location of the database (for example, an HDFS path).
[$sel:locationUri:DatabaseInput'] :: DatabaseInput -> Maybe Text

-- | A <tt>DatabaseIdentifier</tt> structure that describes a target
--   database for resource linking.
[$sel:targetDatabase:DatabaseInput'] :: DatabaseInput -> Maybe DatabaseIdentifier

-- | These key-value pairs define parameters and properties of the
--   database.
--   
--   These key-value pairs define parameters and properties of the
--   database.
[$sel:parameters:DatabaseInput'] :: DatabaseInput -> Maybe (HashMap Text Text)

-- | A description of the database.
[$sel:description:DatabaseInput'] :: DatabaseInput -> Maybe Text

-- | Creates a set of default permissions on the table for principals.
[$sel:createTableDefaultPermissions:DatabaseInput'] :: DatabaseInput -> Maybe [PrincipalPermissions]

-- | The name of the database. For Hive compatibility, this is folded to
--   lowercase when it is stored.
[$sel:name:DatabaseInput'] :: DatabaseInput -> Text

-- | Create a value of <a>DatabaseInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locationUri:DatabaseInput'</a>,
--   <a>databaseInput_locationUri</a> - The location of the database (for
--   example, an HDFS path).
--   
--   <a>$sel:targetDatabase:DatabaseInput'</a>,
--   <a>databaseInput_targetDatabase</a> - A <tt>DatabaseIdentifier</tt>
--   structure that describes a target database for resource linking.
--   
--   <a>$sel:parameters:DatabaseInput'</a>, <a>databaseInput_parameters</a>
--   - These key-value pairs define parameters and properties of the
--   database.
--   
--   These key-value pairs define parameters and properties of the
--   database.
--   
--   <a>$sel:description:DatabaseInput'</a>,
--   <a>databaseInput_description</a> - A description of the database.
--   
--   <a>$sel:createTableDefaultPermissions:DatabaseInput'</a>,
--   <a>databaseInput_createTableDefaultPermissions</a> - Creates a set of
--   default permissions on the table for principals.
--   
--   <a>$sel:name:DatabaseInput'</a>, <a>databaseInput_name</a> - The name
--   of the database. For Hive compatibility, this is folded to lowercase
--   when it is stored.
newDatabaseInput :: Text -> DatabaseInput

-- | The location of the database (for example, an HDFS path).
databaseInput_locationUri :: Lens' DatabaseInput (Maybe Text)

-- | A <tt>DatabaseIdentifier</tt> structure that describes a target
--   database for resource linking.
databaseInput_targetDatabase :: Lens' DatabaseInput (Maybe DatabaseIdentifier)

-- | These key-value pairs define parameters and properties of the
--   database.
--   
--   These key-value pairs define parameters and properties of the
--   database.
databaseInput_parameters :: Lens' DatabaseInput (Maybe (HashMap Text Text))

-- | A description of the database.
databaseInput_description :: Lens' DatabaseInput (Maybe Text)

-- | Creates a set of default permissions on the table for principals.
databaseInput_createTableDefaultPermissions :: Lens' DatabaseInput (Maybe [PrincipalPermissions])

-- | The name of the database. For Hive compatibility, this is folded to
--   lowercase when it is stored.
databaseInput_name :: Lens' DatabaseInput Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.DatabaseInput.DatabaseInput
instance GHC.Show.Show Network.AWS.Glue.Types.DatabaseInput.DatabaseInput
instance GHC.Read.Read Network.AWS.Glue.Types.DatabaseInput.DatabaseInput
instance GHC.Classes.Eq Network.AWS.Glue.Types.DatabaseInput.DatabaseInput
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.DatabaseInput.DatabaseInput
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.DatabaseInput.DatabaseInput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.DatabaseInput.DatabaseInput


module Network.AWS.Glue.Types.Database

-- | The <tt>Database</tt> object represents a logical grouping of tables
--   that might reside in a Hive metastore or an RDBMS.
--   
--   <i>See:</i> <a>newDatabase</a> smart constructor.
data Database
Database' :: Maybe Text -> Maybe Text -> Maybe DatabaseIdentifier -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe POSIX -> Maybe [PrincipalPermissions] -> Text -> Database

-- | The location of the database (for example, an HDFS path).
[$sel:locationUri:Database'] :: Database -> Maybe Text

-- | The ID of the Data Catalog in which the database resides.
[$sel:catalogId:Database'] :: Database -> Maybe Text

-- | A <tt>DatabaseIdentifier</tt> structure that describes a target
--   database for resource linking.
[$sel:targetDatabase:Database'] :: Database -> Maybe DatabaseIdentifier

-- | These key-value pairs define parameters and properties of the
--   database.
[$sel:parameters:Database'] :: Database -> Maybe (HashMap Text Text)

-- | A description of the database.
[$sel:description:Database'] :: Database -> Maybe Text

-- | The time at which the metadata database was created in the catalog.
[$sel:createTime:Database'] :: Database -> Maybe POSIX

-- | Creates a set of default permissions on the table for principals.
[$sel:createTableDefaultPermissions:Database'] :: Database -> Maybe [PrincipalPermissions]

-- | The name of the database. For Hive compatibility, this is folded to
--   lowercase when it is stored.
[$sel:name:Database'] :: Database -> Text

-- | Create a value of <a>Database</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locationUri:Database'</a>, <a>database_locationUri</a> - The
--   location of the database (for example, an HDFS path).
--   
--   <a>$sel:catalogId:Database'</a>, <a>database_catalogId</a> - The ID of
--   the Data Catalog in which the database resides.
--   
--   <a>$sel:targetDatabase:Database'</a>, <a>database_targetDatabase</a> -
--   A <tt>DatabaseIdentifier</tt> structure that describes a target
--   database for resource linking.
--   
--   <a>$sel:parameters:Database'</a>, <a>database_parameters</a> - These
--   key-value pairs define parameters and properties of the database.
--   
--   <a>$sel:description:Database'</a>, <a>database_description</a> - A
--   description of the database.
--   
--   <a>$sel:createTime:Database'</a>, <a>database_createTime</a> - The
--   time at which the metadata database was created in the catalog.
--   
--   <a>$sel:createTableDefaultPermissions:Database'</a>,
--   <a>database_createTableDefaultPermissions</a> - Creates a set of
--   default permissions on the table for principals.
--   
--   <a>$sel:name:Database'</a>, <a>database_name</a> - The name of the
--   database. For Hive compatibility, this is folded to lowercase when it
--   is stored.
newDatabase :: Text -> Database

-- | The location of the database (for example, an HDFS path).
database_locationUri :: Lens' Database (Maybe Text)

-- | The ID of the Data Catalog in which the database resides.
database_catalogId :: Lens' Database (Maybe Text)

-- | A <tt>DatabaseIdentifier</tt> structure that describes a target
--   database for resource linking.
database_targetDatabase :: Lens' Database (Maybe DatabaseIdentifier)

-- | These key-value pairs define parameters and properties of the
--   database.
database_parameters :: Lens' Database (Maybe (HashMap Text Text))

-- | A description of the database.
database_description :: Lens' Database (Maybe Text)

-- | The time at which the metadata database was created in the catalog.
database_createTime :: Lens' Database (Maybe UTCTime)

-- | Creates a set of default permissions on the table for principals.
database_createTableDefaultPermissions :: Lens' Database (Maybe [PrincipalPermissions])

-- | The name of the database. For Hive compatibility, this is folded to
--   lowercase when it is stored.
database_name :: Lens' Database Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.Database.Database
instance GHC.Show.Show Network.AWS.Glue.Types.Database.Database
instance GHC.Read.Read Network.AWS.Glue.Types.Database.Database
instance GHC.Classes.Eq Network.AWS.Glue.Types.Database.Database
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Database.Database
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Database.Database
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Database.Database


module Network.AWS.Glue.Types.PrincipalType
newtype PrincipalType
PrincipalType' :: Text -> PrincipalType
[fromPrincipalType] :: PrincipalType -> Text
pattern PrincipalType_GROUP :: PrincipalType
pattern PrincipalType_ROLE :: PrincipalType
pattern PrincipalType_USER :: PrincipalType
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.PrincipalType.PrincipalType
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.PrincipalType.PrincipalType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.PrincipalType.PrincipalType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.PrincipalType.PrincipalType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.PrincipalType.PrincipalType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.PrincipalType.PrincipalType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.PrincipalType.PrincipalType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.PrincipalType.PrincipalType
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.PrincipalType.PrincipalType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.PrincipalType.PrincipalType
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.PrincipalType.PrincipalType
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.PrincipalType.PrincipalType
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.PrincipalType.PrincipalType
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.PrincipalType.PrincipalType
instance GHC.Generics.Generic Network.AWS.Glue.Types.PrincipalType.PrincipalType
instance GHC.Classes.Ord Network.AWS.Glue.Types.PrincipalType.PrincipalType
instance GHC.Classes.Eq Network.AWS.Glue.Types.PrincipalType.PrincipalType
instance GHC.Read.Read Network.AWS.Glue.Types.PrincipalType.PrincipalType
instance GHC.Show.Show Network.AWS.Glue.Types.PrincipalType.PrincipalType


module Network.AWS.Glue.Types.PropertyPredicate

-- | Defines a property predicate.
--   
--   <i>See:</i> <a>newPropertyPredicate</a> smart constructor.
data PropertyPredicate
PropertyPredicate' :: Maybe Text -> Maybe Text -> Maybe Comparator -> PropertyPredicate

-- | The value of the property.
[$sel:value:PropertyPredicate'] :: PropertyPredicate -> Maybe Text

-- | The key of the property.
[$sel:key:PropertyPredicate'] :: PropertyPredicate -> Maybe Text

-- | The comparator used to compare this property to others.
[$sel:comparator:PropertyPredicate'] :: PropertyPredicate -> Maybe Comparator

-- | Create a value of <a>PropertyPredicate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:PropertyPredicate'</a>, <a>propertyPredicate_value</a> -
--   The value of the property.
--   
--   <a>$sel:key:PropertyPredicate'</a>, <a>propertyPredicate_key</a> - The
--   key of the property.
--   
--   <a>$sel:comparator:PropertyPredicate'</a>,
--   <a>propertyPredicate_comparator</a> - The comparator used to compare
--   this property to others.
newPropertyPredicate :: PropertyPredicate

-- | The value of the property.
propertyPredicate_value :: Lens' PropertyPredicate (Maybe Text)

-- | The key of the property.
propertyPredicate_key :: Lens' PropertyPredicate (Maybe Text)

-- | The comparator used to compare this property to others.
propertyPredicate_comparator :: Lens' PropertyPredicate (Maybe Comparator)
instance GHC.Generics.Generic Network.AWS.Glue.Types.PropertyPredicate.PropertyPredicate
instance GHC.Show.Show Network.AWS.Glue.Types.PropertyPredicate.PropertyPredicate
instance GHC.Read.Read Network.AWS.Glue.Types.PropertyPredicate.PropertyPredicate
instance GHC.Classes.Eq Network.AWS.Glue.Types.PropertyPredicate.PropertyPredicate
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.PropertyPredicate.PropertyPredicate
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.PropertyPredicate.PropertyPredicate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.PropertyPredicate.PropertyPredicate


module Network.AWS.Glue.Types.RecrawlBehavior
newtype RecrawlBehavior
RecrawlBehavior' :: Text -> RecrawlBehavior
[fromRecrawlBehavior] :: RecrawlBehavior -> Text
pattern RecrawlBehavior_CRAWL_EVENT_MODE :: RecrawlBehavior
pattern RecrawlBehavior_CRAWL_EVERYTHING :: RecrawlBehavior
pattern RecrawlBehavior_CRAWL_NEW_FOLDERS_ONLY :: RecrawlBehavior
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.RecrawlBehavior.RecrawlBehavior
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.RecrawlBehavior.RecrawlBehavior
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.RecrawlBehavior.RecrawlBehavior
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.RecrawlBehavior.RecrawlBehavior
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.RecrawlBehavior.RecrawlBehavior
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.RecrawlBehavior.RecrawlBehavior
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.RecrawlBehavior.RecrawlBehavior
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.RecrawlBehavior.RecrawlBehavior
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.RecrawlBehavior.RecrawlBehavior
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.RecrawlBehavior.RecrawlBehavior
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.RecrawlBehavior.RecrawlBehavior
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.RecrawlBehavior.RecrawlBehavior
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.RecrawlBehavior.RecrawlBehavior
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.RecrawlBehavior.RecrawlBehavior
instance GHC.Generics.Generic Network.AWS.Glue.Types.RecrawlBehavior.RecrawlBehavior
instance GHC.Classes.Ord Network.AWS.Glue.Types.RecrawlBehavior.RecrawlBehavior
instance GHC.Classes.Eq Network.AWS.Glue.Types.RecrawlBehavior.RecrawlBehavior
instance GHC.Read.Read Network.AWS.Glue.Types.RecrawlBehavior.RecrawlBehavior
instance GHC.Show.Show Network.AWS.Glue.Types.RecrawlBehavior.RecrawlBehavior


module Network.AWS.Glue.Types.RecrawlPolicy

-- | When crawling an Amazon S3 data source after the first crawl is
--   complete, specifies whether to crawl the entire dataset again or to
--   crawl only folders that were added since the last crawler run. For
--   more information, see <a>Incremental Crawls in Glue</a> in the
--   developer guide.
--   
--   <i>See:</i> <a>newRecrawlPolicy</a> smart constructor.
data RecrawlPolicy
RecrawlPolicy' :: Maybe RecrawlBehavior -> RecrawlPolicy

-- | Specifies whether to crawl the entire dataset again or to crawl only
--   folders that were added since the last crawler run.
--   
--   A value of <tt>CRAWL_EVERYTHING</tt> specifies crawling the entire
--   dataset again.
--   
--   A value of <tt>CRAWL_NEW_FOLDERS_ONLY</tt> specifies crawling only
--   folders that were added since the last crawler run.
--   
--   A value of <tt>CRAWL_EVENT_MODE</tt> specifies crawling only the
--   changes identified by Amazon S3 events.
[$sel:recrawlBehavior:RecrawlPolicy'] :: RecrawlPolicy -> Maybe RecrawlBehavior

-- | Create a value of <a>RecrawlPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recrawlBehavior:RecrawlPolicy'</a>,
--   <a>recrawlPolicy_recrawlBehavior</a> - Specifies whether to crawl the
--   entire dataset again or to crawl only folders that were added since
--   the last crawler run.
--   
--   A value of <tt>CRAWL_EVERYTHING</tt> specifies crawling the entire
--   dataset again.
--   
--   A value of <tt>CRAWL_NEW_FOLDERS_ONLY</tt> specifies crawling only
--   folders that were added since the last crawler run.
--   
--   A value of <tt>CRAWL_EVENT_MODE</tt> specifies crawling only the
--   changes identified by Amazon S3 events.
newRecrawlPolicy :: RecrawlPolicy

-- | Specifies whether to crawl the entire dataset again or to crawl only
--   folders that were added since the last crawler run.
--   
--   A value of <tt>CRAWL_EVERYTHING</tt> specifies crawling the entire
--   dataset again.
--   
--   A value of <tt>CRAWL_NEW_FOLDERS_ONLY</tt> specifies crawling only
--   folders that were added since the last crawler run.
--   
--   A value of <tt>CRAWL_EVENT_MODE</tt> specifies crawling only the
--   changes identified by Amazon S3 events.
recrawlPolicy_recrawlBehavior :: Lens' RecrawlPolicy (Maybe RecrawlBehavior)
instance GHC.Generics.Generic Network.AWS.Glue.Types.RecrawlPolicy.RecrawlPolicy
instance GHC.Show.Show Network.AWS.Glue.Types.RecrawlPolicy.RecrawlPolicy
instance GHC.Read.Read Network.AWS.Glue.Types.RecrawlPolicy.RecrawlPolicy
instance GHC.Classes.Eq Network.AWS.Glue.Types.RecrawlPolicy.RecrawlPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.RecrawlPolicy.RecrawlPolicy
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.RecrawlPolicy.RecrawlPolicy
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.RecrawlPolicy.RecrawlPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.RecrawlPolicy.RecrawlPolicy


module Network.AWS.Glue.Types.RegistryId

-- | A wrapper structure that may contain the registry name and Amazon
--   Resource Name (ARN).
--   
--   <i>See:</i> <a>newRegistryId</a> smart constructor.
data RegistryId
RegistryId' :: Maybe Text -> Maybe Text -> RegistryId

-- | Name of the registry. Used only for lookup. One of
--   <tt>RegistryArn</tt> or <tt>RegistryName</tt> has to be provided.
[$sel:registryName:RegistryId'] :: RegistryId -> Maybe Text

-- | Arn of the registry to be updated. One of <tt>RegistryArn</tt> or
--   <tt>RegistryName</tt> has to be provided.
[$sel:registryArn:RegistryId'] :: RegistryId -> Maybe Text

-- | Create a value of <a>RegistryId</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:RegistryId'</a>, <a>registryId_registryName</a> -
--   Name of the registry. Used only for lookup. One of
--   <tt>RegistryArn</tt> or <tt>RegistryName</tt> has to be provided.
--   
--   <a>$sel:registryArn:RegistryId'</a>, <a>registryId_registryArn</a> -
--   Arn of the registry to be updated. One of <tt>RegistryArn</tt> or
--   <tt>RegistryName</tt> has to be provided.
newRegistryId :: RegistryId

-- | Name of the registry. Used only for lookup. One of
--   <tt>RegistryArn</tt> or <tt>RegistryName</tt> has to be provided.
registryId_registryName :: Lens' RegistryId (Maybe Text)

-- | Arn of the registry to be updated. One of <tt>RegistryArn</tt> or
--   <tt>RegistryName</tt> has to be provided.
registryId_registryArn :: Lens' RegistryId (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.RegistryId.RegistryId
instance GHC.Show.Show Network.AWS.Glue.Types.RegistryId.RegistryId
instance GHC.Read.Read Network.AWS.Glue.Types.RegistryId.RegistryId
instance GHC.Classes.Eq Network.AWS.Glue.Types.RegistryId.RegistryId
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.RegistryId.RegistryId
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.RegistryId.RegistryId
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.RegistryId.RegistryId


module Network.AWS.Glue.Types.RegistryStatus
newtype RegistryStatus
RegistryStatus' :: Text -> RegistryStatus
[fromRegistryStatus] :: RegistryStatus -> Text
pattern RegistryStatus_AVAILABLE :: RegistryStatus
pattern RegistryStatus_DELETING :: RegistryStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.RegistryStatus.RegistryStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.RegistryStatus.RegistryStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.RegistryStatus.RegistryStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.RegistryStatus.RegistryStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.RegistryStatus.RegistryStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.RegistryStatus.RegistryStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.RegistryStatus.RegistryStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.RegistryStatus.RegistryStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.RegistryStatus.RegistryStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.RegistryStatus.RegistryStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.RegistryStatus.RegistryStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.RegistryStatus.RegistryStatus
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.RegistryStatus.RegistryStatus
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.RegistryStatus.RegistryStatus
instance GHC.Generics.Generic Network.AWS.Glue.Types.RegistryStatus.RegistryStatus
instance GHC.Classes.Ord Network.AWS.Glue.Types.RegistryStatus.RegistryStatus
instance GHC.Classes.Eq Network.AWS.Glue.Types.RegistryStatus.RegistryStatus
instance GHC.Read.Read Network.AWS.Glue.Types.RegistryStatus.RegistryStatus
instance GHC.Show.Show Network.AWS.Glue.Types.RegistryStatus.RegistryStatus


module Network.AWS.Glue.Types.RegistryListItem

-- | A structure containing the details for a registry.
--   
--   <i>See:</i> <a>newRegistryListItem</a> smart constructor.
data RegistryListItem
RegistryListItem' :: Maybe RegistryStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> RegistryListItem

-- | The status of the registry.
[$sel:status:RegistryListItem'] :: RegistryListItem -> Maybe RegistryStatus

-- | The name of the registry.
[$sel:registryName:RegistryListItem'] :: RegistryListItem -> Maybe Text

-- | The data the registry was created.
[$sel:createdTime:RegistryListItem'] :: RegistryListItem -> Maybe Text

-- | The Amazon Resource Name (ARN) of the registry.
[$sel:registryArn:RegistryListItem'] :: RegistryListItem -> Maybe Text

-- | The date the registry was updated.
[$sel:updatedTime:RegistryListItem'] :: RegistryListItem -> Maybe Text

-- | A description of the registry.
[$sel:description:RegistryListItem'] :: RegistryListItem -> Maybe Text

-- | Create a value of <a>RegistryListItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:RegistryListItem'</a>, <a>registryListItem_status</a> -
--   The status of the registry.
--   
--   <a>$sel:registryName:RegistryListItem'</a>,
--   <a>registryListItem_registryName</a> - The name of the registry.
--   
--   <a>$sel:createdTime:RegistryListItem'</a>,
--   <a>registryListItem_createdTime</a> - The data the registry was
--   created.
--   
--   <a>$sel:registryArn:RegistryListItem'</a>,
--   <a>registryListItem_registryArn</a> - The Amazon Resource Name (ARN)
--   of the registry.
--   
--   <a>$sel:updatedTime:RegistryListItem'</a>,
--   <a>registryListItem_updatedTime</a> - The date the registry was
--   updated.
--   
--   <a>$sel:description:RegistryListItem'</a>,
--   <a>registryListItem_description</a> - A description of the registry.
newRegistryListItem :: RegistryListItem

-- | The status of the registry.
registryListItem_status :: Lens' RegistryListItem (Maybe RegistryStatus)

-- | The name of the registry.
registryListItem_registryName :: Lens' RegistryListItem (Maybe Text)

-- | The data the registry was created.
registryListItem_createdTime :: Lens' RegistryListItem (Maybe Text)

-- | The Amazon Resource Name (ARN) of the registry.
registryListItem_registryArn :: Lens' RegistryListItem (Maybe Text)

-- | The date the registry was updated.
registryListItem_updatedTime :: Lens' RegistryListItem (Maybe Text)

-- | A description of the registry.
registryListItem_description :: Lens' RegistryListItem (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.RegistryListItem.RegistryListItem
instance GHC.Show.Show Network.AWS.Glue.Types.RegistryListItem.RegistryListItem
instance GHC.Read.Read Network.AWS.Glue.Types.RegistryListItem.RegistryListItem
instance GHC.Classes.Eq Network.AWS.Glue.Types.RegistryListItem.RegistryListItem
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.RegistryListItem.RegistryListItem
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.RegistryListItem.RegistryListItem
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.RegistryListItem.RegistryListItem


module Network.AWS.Glue.Types.ResourceShareType
newtype ResourceShareType
ResourceShareType' :: Text -> ResourceShareType
[fromResourceShareType] :: ResourceShareType -> Text
pattern ResourceShareType_ALL :: ResourceShareType
pattern ResourceShareType_FOREIGN :: ResourceShareType
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.ResourceShareType.ResourceShareType
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.ResourceShareType.ResourceShareType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.ResourceShareType.ResourceShareType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.ResourceShareType.ResourceShareType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.ResourceShareType.ResourceShareType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ResourceShareType.ResourceShareType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.ResourceShareType.ResourceShareType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.ResourceShareType.ResourceShareType
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.ResourceShareType.ResourceShareType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.ResourceShareType.ResourceShareType
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.ResourceShareType.ResourceShareType
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.ResourceShareType.ResourceShareType
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ResourceShareType.ResourceShareType
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ResourceShareType.ResourceShareType
instance GHC.Generics.Generic Network.AWS.Glue.Types.ResourceShareType.ResourceShareType
instance GHC.Classes.Ord Network.AWS.Glue.Types.ResourceShareType.ResourceShareType
instance GHC.Classes.Eq Network.AWS.Glue.Types.ResourceShareType.ResourceShareType
instance GHC.Read.Read Network.AWS.Glue.Types.ResourceShareType.ResourceShareType
instance GHC.Show.Show Network.AWS.Glue.Types.ResourceShareType.ResourceShareType


module Network.AWS.Glue.Types.ResourceType
newtype ResourceType
ResourceType' :: Text -> ResourceType
[fromResourceType] :: ResourceType -> Text
pattern ResourceType_ARCHIVE :: ResourceType
pattern ResourceType_FILE :: ResourceType
pattern ResourceType_JAR :: ResourceType
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.ResourceType.ResourceType
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.ResourceType.ResourceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.ResourceType.ResourceType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.ResourceType.ResourceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.ResourceType.ResourceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ResourceType.ResourceType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.ResourceType.ResourceType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.ResourceType.ResourceType
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.ResourceType.ResourceType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.ResourceType.ResourceType
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.ResourceType.ResourceType
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.ResourceType.ResourceType
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ResourceType.ResourceType
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ResourceType.ResourceType
instance GHC.Generics.Generic Network.AWS.Glue.Types.ResourceType.ResourceType
instance GHC.Classes.Ord Network.AWS.Glue.Types.ResourceType.ResourceType
instance GHC.Classes.Eq Network.AWS.Glue.Types.ResourceType.ResourceType
instance GHC.Read.Read Network.AWS.Glue.Types.ResourceType.ResourceType
instance GHC.Show.Show Network.AWS.Glue.Types.ResourceType.ResourceType


module Network.AWS.Glue.Types.ResourceUri

-- | The URIs for function resources.
--   
--   <i>See:</i> <a>newResourceUri</a> smart constructor.
data ResourceUri
ResourceUri' :: Maybe ResourceType -> Maybe Text -> ResourceUri

-- | The type of the resource.
[$sel:resourceType:ResourceUri'] :: ResourceUri -> Maybe ResourceType

-- | The URI for accessing the resource.
[$sel:uri:ResourceUri'] :: ResourceUri -> Maybe Text

-- | Create a value of <a>ResourceUri</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ResourceUri'</a>, <a>resourceUri_resourceType</a>
--   - The type of the resource.
--   
--   <a>$sel:uri:ResourceUri'</a>, <a>resourceUri_uri</a> - The URI for
--   accessing the resource.
newResourceUri :: ResourceUri

-- | The type of the resource.
resourceUri_resourceType :: Lens' ResourceUri (Maybe ResourceType)

-- | The URI for accessing the resource.
resourceUri_uri :: Lens' ResourceUri (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.ResourceUri.ResourceUri
instance GHC.Show.Show Network.AWS.Glue.Types.ResourceUri.ResourceUri
instance GHC.Read.Read Network.AWS.Glue.Types.ResourceUri.ResourceUri
instance GHC.Classes.Eq Network.AWS.Glue.Types.ResourceUri.ResourceUri
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ResourceUri.ResourceUri
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ResourceUri.ResourceUri
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ResourceUri.ResourceUri
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.ResourceUri.ResourceUri


module Network.AWS.Glue.Types.S3EncryptionMode
newtype S3EncryptionMode
S3EncryptionMode' :: Text -> S3EncryptionMode
[fromS3EncryptionMode] :: S3EncryptionMode -> Text
pattern S3EncryptionMode_DISABLED :: S3EncryptionMode
pattern S3EncryptionMode_SSE_KMS :: S3EncryptionMode
pattern S3EncryptionMode_SSE_S3 :: S3EncryptionMode
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.S3EncryptionMode.S3EncryptionMode
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.S3EncryptionMode.S3EncryptionMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.S3EncryptionMode.S3EncryptionMode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.S3EncryptionMode.S3EncryptionMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.S3EncryptionMode.S3EncryptionMode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.S3EncryptionMode.S3EncryptionMode
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.S3EncryptionMode.S3EncryptionMode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.S3EncryptionMode.S3EncryptionMode
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.S3EncryptionMode.S3EncryptionMode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.S3EncryptionMode.S3EncryptionMode
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.S3EncryptionMode.S3EncryptionMode
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.S3EncryptionMode.S3EncryptionMode
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.S3EncryptionMode.S3EncryptionMode
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.S3EncryptionMode.S3EncryptionMode
instance GHC.Generics.Generic Network.AWS.Glue.Types.S3EncryptionMode.S3EncryptionMode
instance GHC.Classes.Ord Network.AWS.Glue.Types.S3EncryptionMode.S3EncryptionMode
instance GHC.Classes.Eq Network.AWS.Glue.Types.S3EncryptionMode.S3EncryptionMode
instance GHC.Read.Read Network.AWS.Glue.Types.S3EncryptionMode.S3EncryptionMode
instance GHC.Show.Show Network.AWS.Glue.Types.S3EncryptionMode.S3EncryptionMode


module Network.AWS.Glue.Types.S3Encryption

-- | Specifies how Amazon Simple Storage Service (Amazon S3) data should be
--   encrypted.
--   
--   <i>See:</i> <a>newS3Encryption</a> smart constructor.
data S3Encryption
S3Encryption' :: Maybe S3EncryptionMode -> Maybe Text -> S3Encryption

-- | The encryption mode to use for Amazon S3 data.
[$sel:s3EncryptionMode:S3Encryption'] :: S3Encryption -> Maybe S3EncryptionMode

-- | The Amazon Resource Name (ARN) of the KMS key to be used to encrypt
--   the data.
[$sel:kmsKeyArn:S3Encryption'] :: S3Encryption -> Maybe Text

-- | Create a value of <a>S3Encryption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3EncryptionMode:S3Encryption'</a>,
--   <a>s3Encryption_s3EncryptionMode</a> - The encryption mode to use for
--   Amazon S3 data.
--   
--   <a>$sel:kmsKeyArn:S3Encryption'</a>, <a>s3Encryption_kmsKeyArn</a> -
--   The Amazon Resource Name (ARN) of the KMS key to be used to encrypt
--   the data.
newS3Encryption :: S3Encryption

-- | The encryption mode to use for Amazon S3 data.
s3Encryption_s3EncryptionMode :: Lens' S3Encryption (Maybe S3EncryptionMode)

-- | The Amazon Resource Name (ARN) of the KMS key to be used to encrypt
--   the data.
s3Encryption_kmsKeyArn :: Lens' S3Encryption (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.S3Encryption.S3Encryption
instance GHC.Show.Show Network.AWS.Glue.Types.S3Encryption.S3Encryption
instance GHC.Read.Read Network.AWS.Glue.Types.S3Encryption.S3Encryption
instance GHC.Classes.Eq Network.AWS.Glue.Types.S3Encryption.S3Encryption
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.S3Encryption.S3Encryption
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.S3Encryption.S3Encryption
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.S3Encryption.S3Encryption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.S3Encryption.S3Encryption


module Network.AWS.Glue.Types.EncryptionConfiguration

-- | Specifies an encryption configuration.
--   
--   <i>See:</i> <a>newEncryptionConfiguration</a> smart constructor.
data EncryptionConfiguration
EncryptionConfiguration' :: Maybe [S3Encryption] -> Maybe JobBookmarksEncryption -> Maybe CloudWatchEncryption -> EncryptionConfiguration

-- | The encryption configuration for Amazon Simple Storage Service (Amazon
--   S3) data.
[$sel:s3Encryption:EncryptionConfiguration'] :: EncryptionConfiguration -> Maybe [S3Encryption]

-- | The encryption configuration for job bookmarks.
[$sel:jobBookmarksEncryption:EncryptionConfiguration'] :: EncryptionConfiguration -> Maybe JobBookmarksEncryption

-- | The encryption configuration for Amazon CloudWatch.
[$sel:cloudWatchEncryption:EncryptionConfiguration'] :: EncryptionConfiguration -> Maybe CloudWatchEncryption

-- | Create a value of <a>EncryptionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Encryption:EncryptionConfiguration'</a>,
--   <a>encryptionConfiguration_s3Encryption</a> - The encryption
--   configuration for Amazon Simple Storage Service (Amazon S3) data.
--   
--   <a>$sel:jobBookmarksEncryption:EncryptionConfiguration'</a>,
--   <a>encryptionConfiguration_jobBookmarksEncryption</a> - The encryption
--   configuration for job bookmarks.
--   
--   <a>$sel:cloudWatchEncryption:EncryptionConfiguration'</a>,
--   <a>encryptionConfiguration_cloudWatchEncryption</a> - The encryption
--   configuration for Amazon CloudWatch.
newEncryptionConfiguration :: EncryptionConfiguration

-- | The encryption configuration for Amazon Simple Storage Service (Amazon
--   S3) data.
encryptionConfiguration_s3Encryption :: Lens' EncryptionConfiguration (Maybe [S3Encryption])

-- | The encryption configuration for job bookmarks.
encryptionConfiguration_jobBookmarksEncryption :: Lens' EncryptionConfiguration (Maybe JobBookmarksEncryption)

-- | The encryption configuration for Amazon CloudWatch.
encryptionConfiguration_cloudWatchEncryption :: Lens' EncryptionConfiguration (Maybe CloudWatchEncryption)
instance GHC.Generics.Generic Network.AWS.Glue.Types.EncryptionConfiguration.EncryptionConfiguration
instance GHC.Show.Show Network.AWS.Glue.Types.EncryptionConfiguration.EncryptionConfiguration
instance GHC.Read.Read Network.AWS.Glue.Types.EncryptionConfiguration.EncryptionConfiguration
instance GHC.Classes.Eq Network.AWS.Glue.Types.EncryptionConfiguration.EncryptionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.EncryptionConfiguration.EncryptionConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.EncryptionConfiguration.EncryptionConfiguration
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.EncryptionConfiguration.EncryptionConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.EncryptionConfiguration.EncryptionConfiguration


module Network.AWS.Glue.Types.S3Target

-- | Specifies a data store in Amazon Simple Storage Service (Amazon S3).
--   
--   <i>See:</i> <a>newS3Target</a> smart constructor.
data S3Target
S3Target' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> S3Target

-- | The path to the Amazon S3 target.
[$sel:path:S3Target'] :: S3Target -> Maybe Text

-- | Sets the number of files in each leaf folder to be crawled when
--   crawling sample files in a dataset. If not set, all the files are
--   crawled. A valid value is an integer between 1 and 249.
[$sel:sampleSize:S3Target'] :: S3Target -> Maybe Int

-- | The name of a connection which allows a job or crawler to access data
--   in Amazon S3 within an Amazon Virtual Private Cloud environment
--   (Amazon VPC).
[$sel:connectionName:S3Target'] :: S3Target -> Maybe Text

-- | A list of glob patterns used to exclude from the crawl. For more
--   information, see <a>Catalog Tables with a Crawler</a>.
[$sel:exclusions:S3Target'] :: S3Target -> Maybe [Text]

-- | A valid Amazon SQS ARN. For example,
--   <tt>arn:aws:sqs:region:account:sqs</tt>.
[$sel:eventQueueArn:S3Target'] :: S3Target -> Maybe Text

-- | A valid Amazon dead-letter SQS ARN. For example,
--   <tt>arn:aws:sqs:region:account:deadLetterQueue</tt>.
[$sel:dlqEventQueueArn:S3Target'] :: S3Target -> Maybe Text

-- | Create a value of <a>S3Target</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:S3Target'</a>, <a>s3Target_path</a> - The path to the
--   Amazon S3 target.
--   
--   <a>$sel:sampleSize:S3Target'</a>, <a>s3Target_sampleSize</a> - Sets
--   the number of files in each leaf folder to be crawled when crawling
--   sample files in a dataset. If not set, all the files are crawled. A
--   valid value is an integer between 1 and 249.
--   
--   <a>$sel:connectionName:S3Target'</a>, <a>s3Target_connectionName</a> -
--   The name of a connection which allows a job or crawler to access data
--   in Amazon S3 within an Amazon Virtual Private Cloud environment
--   (Amazon VPC).
--   
--   <a>$sel:exclusions:S3Target'</a>, <a>s3Target_exclusions</a> - A list
--   of glob patterns used to exclude from the crawl. For more information,
--   see <a>Catalog Tables with a Crawler</a>.
--   
--   <a>$sel:eventQueueArn:S3Target'</a>, <a>s3Target_eventQueueArn</a> - A
--   valid Amazon SQS ARN. For example,
--   <tt>arn:aws:sqs:region:account:sqs</tt>.
--   
--   <a>$sel:dlqEventQueueArn:S3Target'</a>,
--   <a>s3Target_dlqEventQueueArn</a> - A valid Amazon dead-letter SQS ARN.
--   For example, <tt>arn:aws:sqs:region:account:deadLetterQueue</tt>.
newS3Target :: S3Target

-- | The path to the Amazon S3 target.
s3Target_path :: Lens' S3Target (Maybe Text)

-- | Sets the number of files in each leaf folder to be crawled when
--   crawling sample files in a dataset. If not set, all the files are
--   crawled. A valid value is an integer between 1 and 249.
s3Target_sampleSize :: Lens' S3Target (Maybe Int)

-- | The name of a connection which allows a job or crawler to access data
--   in Amazon S3 within an Amazon Virtual Private Cloud environment
--   (Amazon VPC).
s3Target_connectionName :: Lens' S3Target (Maybe Text)

-- | A list of glob patterns used to exclude from the crawl. For more
--   information, see <a>Catalog Tables with a Crawler</a>.
s3Target_exclusions :: Lens' S3Target (Maybe [Text])

-- | A valid Amazon SQS ARN. For example,
--   <tt>arn:aws:sqs:region:account:sqs</tt>.
s3Target_eventQueueArn :: Lens' S3Target (Maybe Text)

-- | A valid Amazon dead-letter SQS ARN. For example,
--   <tt>arn:aws:sqs:region:account:deadLetterQueue</tt>.
s3Target_dlqEventQueueArn :: Lens' S3Target (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.S3Target.S3Target
instance GHC.Show.Show Network.AWS.Glue.Types.S3Target.S3Target
instance GHC.Read.Read Network.AWS.Glue.Types.S3Target.S3Target
instance GHC.Classes.Eq Network.AWS.Glue.Types.S3Target.S3Target
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.S3Target.S3Target
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.S3Target.S3Target
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.S3Target.S3Target
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.S3Target.S3Target


module Network.AWS.Glue.Types.CrawlerTargets

-- | Specifies data stores to crawl.
--   
--   <i>See:</i> <a>newCrawlerTargets</a> smart constructor.
data CrawlerTargets
CrawlerTargets' :: Maybe [DynamoDBTarget] -> Maybe [S3Target] -> Maybe [MongoDBTarget] -> Maybe [CatalogTarget] -> Maybe [JdbcTarget] -> CrawlerTargets

-- | Specifies Amazon DynamoDB targets.
[$sel:dynamoDBTargets:CrawlerTargets'] :: CrawlerTargets -> Maybe [DynamoDBTarget]

-- | Specifies Amazon Simple Storage Service (Amazon S3) targets.
[$sel:s3Targets:CrawlerTargets'] :: CrawlerTargets -> Maybe [S3Target]

-- | Specifies Amazon DocumentDB or MongoDB targets.
[$sel:mongoDBTargets:CrawlerTargets'] :: CrawlerTargets -> Maybe [MongoDBTarget]

-- | Specifies Glue Data Catalog targets.
[$sel:catalogTargets:CrawlerTargets'] :: CrawlerTargets -> Maybe [CatalogTarget]

-- | Specifies JDBC targets.
[$sel:jdbcTargets:CrawlerTargets'] :: CrawlerTargets -> Maybe [JdbcTarget]

-- | Create a value of <a>CrawlerTargets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dynamoDBTargets:CrawlerTargets'</a>,
--   <a>crawlerTargets_dynamoDBTargets</a> - Specifies Amazon DynamoDB
--   targets.
--   
--   <a>$sel:s3Targets:CrawlerTargets'</a>, <a>crawlerTargets_s3Targets</a>
--   - Specifies Amazon Simple Storage Service (Amazon S3) targets.
--   
--   <a>$sel:mongoDBTargets:CrawlerTargets'</a>,
--   <a>crawlerTargets_mongoDBTargets</a> - Specifies Amazon DocumentDB or
--   MongoDB targets.
--   
--   <a>$sel:catalogTargets:CrawlerTargets'</a>,
--   <a>crawlerTargets_catalogTargets</a> - Specifies Glue Data Catalog
--   targets.
--   
--   <a>$sel:jdbcTargets:CrawlerTargets'</a>,
--   <a>crawlerTargets_jdbcTargets</a> - Specifies JDBC targets.
newCrawlerTargets :: CrawlerTargets

-- | Specifies Amazon DynamoDB targets.
crawlerTargets_dynamoDBTargets :: Lens' CrawlerTargets (Maybe [DynamoDBTarget])

-- | Specifies Amazon Simple Storage Service (Amazon S3) targets.
crawlerTargets_s3Targets :: Lens' CrawlerTargets (Maybe [S3Target])

-- | Specifies Amazon DocumentDB or MongoDB targets.
crawlerTargets_mongoDBTargets :: Lens' CrawlerTargets (Maybe [MongoDBTarget])

-- | Specifies Glue Data Catalog targets.
crawlerTargets_catalogTargets :: Lens' CrawlerTargets (Maybe [CatalogTarget])

-- | Specifies JDBC targets.
crawlerTargets_jdbcTargets :: Lens' CrawlerTargets (Maybe [JdbcTarget])
instance GHC.Generics.Generic Network.AWS.Glue.Types.CrawlerTargets.CrawlerTargets
instance GHC.Show.Show Network.AWS.Glue.Types.CrawlerTargets.CrawlerTargets
instance GHC.Read.Read Network.AWS.Glue.Types.CrawlerTargets.CrawlerTargets
instance GHC.Classes.Eq Network.AWS.Glue.Types.CrawlerTargets.CrawlerTargets
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.CrawlerTargets.CrawlerTargets
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.CrawlerTargets.CrawlerTargets
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.CrawlerTargets.CrawlerTargets
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.CrawlerTargets.CrawlerTargets


module Network.AWS.Glue.Types.ScheduleState
newtype ScheduleState
ScheduleState' :: Text -> ScheduleState
[fromScheduleState] :: ScheduleState -> Text
pattern ScheduleState_NOT_SCHEDULED :: ScheduleState
pattern ScheduleState_SCHEDULED :: ScheduleState
pattern ScheduleState_TRANSITIONING :: ScheduleState
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.ScheduleState.ScheduleState
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.ScheduleState.ScheduleState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.ScheduleState.ScheduleState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.ScheduleState.ScheduleState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.ScheduleState.ScheduleState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ScheduleState.ScheduleState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.ScheduleState.ScheduleState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.ScheduleState.ScheduleState
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.ScheduleState.ScheduleState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.ScheduleState.ScheduleState
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.ScheduleState.ScheduleState
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.ScheduleState.ScheduleState
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ScheduleState.ScheduleState
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ScheduleState.ScheduleState
instance GHC.Generics.Generic Network.AWS.Glue.Types.ScheduleState.ScheduleState
instance GHC.Classes.Ord Network.AWS.Glue.Types.ScheduleState.ScheduleState
instance GHC.Classes.Eq Network.AWS.Glue.Types.ScheduleState.ScheduleState
instance GHC.Read.Read Network.AWS.Glue.Types.ScheduleState.ScheduleState
instance GHC.Show.Show Network.AWS.Glue.Types.ScheduleState.ScheduleState


module Network.AWS.Glue.Types.Schedule

-- | A scheduling object using a <tt>cron</tt> statement to schedule an
--   event.
--   
--   <i>See:</i> <a>newSchedule</a> smart constructor.
data Schedule
Schedule' :: Maybe ScheduleState -> Maybe Text -> Schedule

-- | The state of the schedule.
[$sel:state:Schedule'] :: Schedule -> Maybe ScheduleState

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
[$sel:scheduleExpression:Schedule'] :: Schedule -> Maybe Text

-- | Create a value of <a>Schedule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:Schedule'</a>, <a>schedule_state</a> - The state of the
--   schedule.
--   
--   <a>$sel:scheduleExpression:Schedule'</a>,
--   <a>schedule_scheduleExpression</a> - A <tt>cron</tt> expression used
--   to specify the schedule (see <a>Time-Based Schedules for Jobs and
--   Crawlers</a>. For example, to run something every day at 12:15 UTC,
--   you would specify: <tt>cron(15 12 * * ? *)</tt>.
newSchedule :: Schedule

-- | The state of the schedule.
schedule_state :: Lens' Schedule (Maybe ScheduleState)

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
schedule_scheduleExpression :: Lens' Schedule (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.Schedule.Schedule
instance GHC.Show.Show Network.AWS.Glue.Types.Schedule.Schedule
instance GHC.Read.Read Network.AWS.Glue.Types.Schedule.Schedule
instance GHC.Classes.Eq Network.AWS.Glue.Types.Schedule.Schedule
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Schedule.Schedule
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Schedule.Schedule
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Schedule.Schedule


module Network.AWS.Glue.Types.SchemaColumn

-- | A key-value pair representing a column and data type that this
--   transform can run against. The <tt>Schema</tt> parameter of the
--   <tt>MLTransform</tt> may contain up to 100 of these structures.
--   
--   <i>See:</i> <a>newSchemaColumn</a> smart constructor.
data SchemaColumn
SchemaColumn' :: Maybe Text -> Maybe Text -> SchemaColumn

-- | The name of the column.
[$sel:name:SchemaColumn'] :: SchemaColumn -> Maybe Text

-- | The type of data in the column.
[$sel:dataType:SchemaColumn'] :: SchemaColumn -> Maybe Text

-- | Create a value of <a>SchemaColumn</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:SchemaColumn'</a>, <a>schemaColumn_name</a> - The name of
--   the column.
--   
--   <a>$sel:dataType:SchemaColumn'</a>, <a>schemaColumn_dataType</a> - The
--   type of data in the column.
newSchemaColumn :: SchemaColumn

-- | The name of the column.
schemaColumn_name :: Lens' SchemaColumn (Maybe Text)

-- | The type of data in the column.
schemaColumn_dataType :: Lens' SchemaColumn (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.SchemaColumn.SchemaColumn
instance GHC.Show.Show Network.AWS.Glue.Types.SchemaColumn.SchemaColumn
instance GHC.Read.Read Network.AWS.Glue.Types.SchemaColumn.SchemaColumn
instance GHC.Classes.Eq Network.AWS.Glue.Types.SchemaColumn.SchemaColumn
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.SchemaColumn.SchemaColumn
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.SchemaColumn.SchemaColumn
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.SchemaColumn.SchemaColumn
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.SchemaColumn.SchemaColumn


module Network.AWS.Glue.Types.SchemaDiffType
newtype SchemaDiffType
SchemaDiffType' :: Text -> SchemaDiffType
[fromSchemaDiffType] :: SchemaDiffType -> Text
pattern SchemaDiffType_SYNTAX_DIFF :: SchemaDiffType
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.SchemaDiffType.SchemaDiffType
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.SchemaDiffType.SchemaDiffType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.SchemaDiffType.SchemaDiffType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.SchemaDiffType.SchemaDiffType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.SchemaDiffType.SchemaDiffType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.SchemaDiffType.SchemaDiffType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.SchemaDiffType.SchemaDiffType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.SchemaDiffType.SchemaDiffType
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.SchemaDiffType.SchemaDiffType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.SchemaDiffType.SchemaDiffType
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.SchemaDiffType.SchemaDiffType
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.SchemaDiffType.SchemaDiffType
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.SchemaDiffType.SchemaDiffType
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.SchemaDiffType.SchemaDiffType
instance GHC.Generics.Generic Network.AWS.Glue.Types.SchemaDiffType.SchemaDiffType
instance GHC.Classes.Ord Network.AWS.Glue.Types.SchemaDiffType.SchemaDiffType
instance GHC.Classes.Eq Network.AWS.Glue.Types.SchemaDiffType.SchemaDiffType
instance GHC.Read.Read Network.AWS.Glue.Types.SchemaDiffType.SchemaDiffType
instance GHC.Show.Show Network.AWS.Glue.Types.SchemaDiffType.SchemaDiffType


module Network.AWS.Glue.Types.SchemaId

-- | The unique ID of the schema in the Glue schema registry.
--   
--   <i>See:</i> <a>newSchemaId</a> smart constructor.
data SchemaId
SchemaId' :: Maybe Text -> Maybe Text -> Maybe Text -> SchemaId

-- | The name of the schema registry that contains the schema.
[$sel:registryName:SchemaId'] :: SchemaId -> Maybe Text

-- | The name of the schema. One of <tt>SchemaArn</tt> or
--   <tt>SchemaName</tt> has to be provided.
[$sel:schemaName:SchemaId'] :: SchemaId -> Maybe Text

-- | The Amazon Resource Name (ARN) of the schema. One of
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be provided.
[$sel:schemaArn:SchemaId'] :: SchemaId -> Maybe Text

-- | Create a value of <a>SchemaId</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:SchemaId'</a>, <a>schemaId_registryName</a> - The
--   name of the schema registry that contains the schema.
--   
--   <a>$sel:schemaName:SchemaId'</a>, <a>schemaId_schemaName</a> - The
--   name of the schema. One of <tt>SchemaArn</tt> or <tt>SchemaName</tt>
--   has to be provided.
--   
--   <a>$sel:schemaArn:SchemaId'</a>, <a>schemaId_schemaArn</a> - The
--   Amazon Resource Name (ARN) of the schema. One of <tt>SchemaArn</tt> or
--   <tt>SchemaName</tt> has to be provided.
newSchemaId :: SchemaId

-- | The name of the schema registry that contains the schema.
schemaId_registryName :: Lens' SchemaId (Maybe Text)

-- | The name of the schema. One of <tt>SchemaArn</tt> or
--   <tt>SchemaName</tt> has to be provided.
schemaId_schemaName :: Lens' SchemaId (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schema. One of
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be provided.
schemaId_schemaArn :: Lens' SchemaId (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.SchemaId.SchemaId
instance GHC.Show.Show Network.AWS.Glue.Types.SchemaId.SchemaId
instance GHC.Read.Read Network.AWS.Glue.Types.SchemaId.SchemaId
instance GHC.Classes.Eq Network.AWS.Glue.Types.SchemaId.SchemaId
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.SchemaId.SchemaId
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.SchemaId.SchemaId
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.SchemaId.SchemaId
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.SchemaId.SchemaId


module Network.AWS.Glue.Types.SchemaReference

-- | An object that references a schema stored in the Glue Schema Registry.
--   
--   <i>See:</i> <a>newSchemaReference</a> smart constructor.
data SchemaReference
SchemaReference' :: Maybe Text -> Maybe SchemaId -> Maybe Natural -> SchemaReference

-- | The unique ID assigned to a version of the schema. Either this or the
--   <tt>SchemaId</tt> has to be provided.
[$sel:schemaVersionId:SchemaReference'] :: SchemaReference -> Maybe Text

-- | A structure that contains schema identity fields. Either this or the
--   <tt>SchemaVersionId</tt> has to be provided.
[$sel:schemaId:SchemaReference'] :: SchemaReference -> Maybe SchemaId

-- | The version number of the schema.
[$sel:schemaVersionNumber:SchemaReference'] :: SchemaReference -> Maybe Natural

-- | Create a value of <a>SchemaReference</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaVersionId:SchemaReference'</a>,
--   <a>schemaReference_schemaVersionId</a> - The unique ID assigned to a
--   version of the schema. Either this or the <tt>SchemaId</tt> has to be
--   provided.
--   
--   <a>$sel:schemaId:SchemaReference'</a>, <a>schemaReference_schemaId</a>
--   - A structure that contains schema identity fields. Either this or the
--   <tt>SchemaVersionId</tt> has to be provided.
--   
--   <a>$sel:schemaVersionNumber:SchemaReference'</a>,
--   <a>schemaReference_schemaVersionNumber</a> - The version number of the
--   schema.
newSchemaReference :: SchemaReference

-- | The unique ID assigned to a version of the schema. Either this or the
--   <tt>SchemaId</tt> has to be provided.
schemaReference_schemaVersionId :: Lens' SchemaReference (Maybe Text)

-- | A structure that contains schema identity fields. Either this or the
--   <tt>SchemaVersionId</tt> has to be provided.
schemaReference_schemaId :: Lens' SchemaReference (Maybe SchemaId)

-- | The version number of the schema.
schemaReference_schemaVersionNumber :: Lens' SchemaReference (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.Glue.Types.SchemaReference.SchemaReference
instance GHC.Show.Show Network.AWS.Glue.Types.SchemaReference.SchemaReference
instance GHC.Read.Read Network.AWS.Glue.Types.SchemaReference.SchemaReference
instance GHC.Classes.Eq Network.AWS.Glue.Types.SchemaReference.SchemaReference
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.SchemaReference.SchemaReference
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.SchemaReference.SchemaReference
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.SchemaReference.SchemaReference
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.SchemaReference.SchemaReference


module Network.AWS.Glue.Types.SchemaStatus
newtype SchemaStatus
SchemaStatus' :: Text -> SchemaStatus
[fromSchemaStatus] :: SchemaStatus -> Text
pattern SchemaStatus_AVAILABLE :: SchemaStatus
pattern SchemaStatus_DELETING :: SchemaStatus
pattern SchemaStatus_PENDING :: SchemaStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.SchemaStatus.SchemaStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.SchemaStatus.SchemaStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.SchemaStatus.SchemaStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.SchemaStatus.SchemaStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.SchemaStatus.SchemaStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.SchemaStatus.SchemaStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.SchemaStatus.SchemaStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.SchemaStatus.SchemaStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.SchemaStatus.SchemaStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.SchemaStatus.SchemaStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.SchemaStatus.SchemaStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.SchemaStatus.SchemaStatus
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.SchemaStatus.SchemaStatus
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.SchemaStatus.SchemaStatus
instance GHC.Generics.Generic Network.AWS.Glue.Types.SchemaStatus.SchemaStatus
instance GHC.Classes.Ord Network.AWS.Glue.Types.SchemaStatus.SchemaStatus
instance GHC.Classes.Eq Network.AWS.Glue.Types.SchemaStatus.SchemaStatus
instance GHC.Read.Read Network.AWS.Glue.Types.SchemaStatus.SchemaStatus
instance GHC.Show.Show Network.AWS.Glue.Types.SchemaStatus.SchemaStatus


module Network.AWS.Glue.Types.SchemaListItem

-- | An object that contains minimal details for a schema.
--   
--   <i>See:</i> <a>newSchemaListItem</a> smart constructor.
data SchemaListItem
SchemaListItem' :: Maybe Text -> Maybe Text -> Maybe SchemaStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> SchemaListItem

-- | the name of the registry where the schema resides.
[$sel:registryName:SchemaListItem'] :: SchemaListItem -> Maybe Text

-- | The date and time that a schema was created.
[$sel:createdTime:SchemaListItem'] :: SchemaListItem -> Maybe Text

-- | The status of the schema.
[$sel:schemaStatus:SchemaListItem'] :: SchemaListItem -> Maybe SchemaStatus

-- | The name of the schema.
[$sel:schemaName:SchemaListItem'] :: SchemaListItem -> Maybe Text

-- | The Amazon Resource Name (ARN) for the schema.
[$sel:schemaArn:SchemaListItem'] :: SchemaListItem -> Maybe Text

-- | The date and time that a schema was updated.
[$sel:updatedTime:SchemaListItem'] :: SchemaListItem -> Maybe Text

-- | A description for the schema.
[$sel:description:SchemaListItem'] :: SchemaListItem -> Maybe Text

-- | Create a value of <a>SchemaListItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:SchemaListItem'</a>,
--   <a>schemaListItem_registryName</a> - the name of the registry where
--   the schema resides.
--   
--   <a>$sel:createdTime:SchemaListItem'</a>,
--   <a>schemaListItem_createdTime</a> - The date and time that a schema
--   was created.
--   
--   <a>$sel:schemaStatus:SchemaListItem'</a>,
--   <a>schemaListItem_schemaStatus</a> - The status of the schema.
--   
--   <a>$sel:schemaName:SchemaListItem'</a>,
--   <a>schemaListItem_schemaName</a> - The name of the schema.
--   
--   <a>$sel:schemaArn:SchemaListItem'</a>, <a>schemaListItem_schemaArn</a>
--   - The Amazon Resource Name (ARN) for the schema.
--   
--   <a>$sel:updatedTime:SchemaListItem'</a>,
--   <a>schemaListItem_updatedTime</a> - The date and time that a schema
--   was updated.
--   
--   <a>$sel:description:SchemaListItem'</a>,
--   <a>schemaListItem_description</a> - A description for the schema.
newSchemaListItem :: SchemaListItem

-- | the name of the registry where the schema resides.
schemaListItem_registryName :: Lens' SchemaListItem (Maybe Text)

-- | The date and time that a schema was created.
schemaListItem_createdTime :: Lens' SchemaListItem (Maybe Text)

-- | The status of the schema.
schemaListItem_schemaStatus :: Lens' SchemaListItem (Maybe SchemaStatus)

-- | The name of the schema.
schemaListItem_schemaName :: Lens' SchemaListItem (Maybe Text)

-- | The Amazon Resource Name (ARN) for the schema.
schemaListItem_schemaArn :: Lens' SchemaListItem (Maybe Text)

-- | The date and time that a schema was updated.
schemaListItem_updatedTime :: Lens' SchemaListItem (Maybe Text)

-- | A description for the schema.
schemaListItem_description :: Lens' SchemaListItem (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.SchemaListItem.SchemaListItem
instance GHC.Show.Show Network.AWS.Glue.Types.SchemaListItem.SchemaListItem
instance GHC.Read.Read Network.AWS.Glue.Types.SchemaListItem.SchemaListItem
instance GHC.Classes.Eq Network.AWS.Glue.Types.SchemaListItem.SchemaListItem
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.SchemaListItem.SchemaListItem
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.SchemaListItem.SchemaListItem
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.SchemaListItem.SchemaListItem


module Network.AWS.Glue.Types.SchemaVersionErrorItem

-- | An object that contains the error details for an operation on a schema
--   version.
--   
--   <i>See:</i> <a>newSchemaVersionErrorItem</a> smart constructor.
data SchemaVersionErrorItem
SchemaVersionErrorItem' :: Maybe Natural -> Maybe ErrorDetails -> SchemaVersionErrorItem

-- | The version number of the schema.
[$sel:versionNumber:SchemaVersionErrorItem'] :: SchemaVersionErrorItem -> Maybe Natural

-- | The details of the error for the schema version.
[$sel:errorDetails:SchemaVersionErrorItem'] :: SchemaVersionErrorItem -> Maybe ErrorDetails

-- | Create a value of <a>SchemaVersionErrorItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionNumber:SchemaVersionErrorItem'</a>,
--   <a>schemaVersionErrorItem_versionNumber</a> - The version number of
--   the schema.
--   
--   <a>$sel:errorDetails:SchemaVersionErrorItem'</a>,
--   <a>schemaVersionErrorItem_errorDetails</a> - The details of the error
--   for the schema version.
newSchemaVersionErrorItem :: SchemaVersionErrorItem

-- | The version number of the schema.
schemaVersionErrorItem_versionNumber :: Lens' SchemaVersionErrorItem (Maybe Natural)

-- | The details of the error for the schema version.
schemaVersionErrorItem_errorDetails :: Lens' SchemaVersionErrorItem (Maybe ErrorDetails)
instance GHC.Generics.Generic Network.AWS.Glue.Types.SchemaVersionErrorItem.SchemaVersionErrorItem
instance GHC.Show.Show Network.AWS.Glue.Types.SchemaVersionErrorItem.SchemaVersionErrorItem
instance GHC.Read.Read Network.AWS.Glue.Types.SchemaVersionErrorItem.SchemaVersionErrorItem
instance GHC.Classes.Eq Network.AWS.Glue.Types.SchemaVersionErrorItem.SchemaVersionErrorItem
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.SchemaVersionErrorItem.SchemaVersionErrorItem
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.SchemaVersionErrorItem.SchemaVersionErrorItem
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.SchemaVersionErrorItem.SchemaVersionErrorItem


module Network.AWS.Glue.Types.SchemaVersionNumber

-- | A structure containing the schema version information.
--   
--   <i>See:</i> <a>newSchemaVersionNumber</a> smart constructor.
data SchemaVersionNumber
SchemaVersionNumber' :: Maybe Natural -> Maybe Bool -> SchemaVersionNumber

-- | The version number of the schema.
[$sel:versionNumber:SchemaVersionNumber'] :: SchemaVersionNumber -> Maybe Natural

-- | The latest version available for the schema.
[$sel:latestVersion:SchemaVersionNumber'] :: SchemaVersionNumber -> Maybe Bool

-- | Create a value of <a>SchemaVersionNumber</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionNumber:SchemaVersionNumber'</a>,
--   <a>schemaVersionNumber_versionNumber</a> - The version number of the
--   schema.
--   
--   <a>$sel:latestVersion:SchemaVersionNumber'</a>,
--   <a>schemaVersionNumber_latestVersion</a> - The latest version
--   available for the schema.
newSchemaVersionNumber :: SchemaVersionNumber

-- | The version number of the schema.
schemaVersionNumber_versionNumber :: Lens' SchemaVersionNumber (Maybe Natural)

-- | The latest version available for the schema.
schemaVersionNumber_latestVersion :: Lens' SchemaVersionNumber (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.Glue.Types.SchemaVersionNumber.SchemaVersionNumber
instance GHC.Show.Show Network.AWS.Glue.Types.SchemaVersionNumber.SchemaVersionNumber
instance GHC.Read.Read Network.AWS.Glue.Types.SchemaVersionNumber.SchemaVersionNumber
instance GHC.Classes.Eq Network.AWS.Glue.Types.SchemaVersionNumber.SchemaVersionNumber
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.SchemaVersionNumber.SchemaVersionNumber
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.SchemaVersionNumber.SchemaVersionNumber
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.SchemaVersionNumber.SchemaVersionNumber


module Network.AWS.Glue.Types.SchemaVersionStatus
newtype SchemaVersionStatus
SchemaVersionStatus' :: Text -> SchemaVersionStatus
[fromSchemaVersionStatus] :: SchemaVersionStatus -> Text
pattern SchemaVersionStatus_AVAILABLE :: SchemaVersionStatus
pattern SchemaVersionStatus_DELETING :: SchemaVersionStatus
pattern SchemaVersionStatus_FAILURE :: SchemaVersionStatus
pattern SchemaVersionStatus_PENDING :: SchemaVersionStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.SchemaVersionStatus.SchemaVersionStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.SchemaVersionStatus.SchemaVersionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.SchemaVersionStatus.SchemaVersionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.SchemaVersionStatus.SchemaVersionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.SchemaVersionStatus.SchemaVersionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.SchemaVersionStatus.SchemaVersionStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.SchemaVersionStatus.SchemaVersionStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.SchemaVersionStatus.SchemaVersionStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.SchemaVersionStatus.SchemaVersionStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.SchemaVersionStatus.SchemaVersionStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.SchemaVersionStatus.SchemaVersionStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.SchemaVersionStatus.SchemaVersionStatus
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.SchemaVersionStatus.SchemaVersionStatus
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.SchemaVersionStatus.SchemaVersionStatus
instance GHC.Generics.Generic Network.AWS.Glue.Types.SchemaVersionStatus.SchemaVersionStatus
instance GHC.Classes.Ord Network.AWS.Glue.Types.SchemaVersionStatus.SchemaVersionStatus
instance GHC.Classes.Eq Network.AWS.Glue.Types.SchemaVersionStatus.SchemaVersionStatus
instance GHC.Read.Read Network.AWS.Glue.Types.SchemaVersionStatus.SchemaVersionStatus
instance GHC.Show.Show Network.AWS.Glue.Types.SchemaVersionStatus.SchemaVersionStatus


module Network.AWS.Glue.Types.SchemaVersionListItem

-- | An object containing the details about a schema version.
--   
--   <i>See:</i> <a>newSchemaVersionListItem</a> smart constructor.
data SchemaVersionListItem
SchemaVersionListItem' :: Maybe SchemaVersionStatus -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> SchemaVersionListItem

-- | The status of the schema version.
[$sel:status:SchemaVersionListItem'] :: SchemaVersionListItem -> Maybe SchemaVersionStatus

-- | The date and time the schema version was created.
[$sel:createdTime:SchemaVersionListItem'] :: SchemaVersionListItem -> Maybe Text

-- | The unique identifier of the schema version.
[$sel:schemaVersionId:SchemaVersionListItem'] :: SchemaVersionListItem -> Maybe Text

-- | The version number of the schema.
[$sel:versionNumber:SchemaVersionListItem'] :: SchemaVersionListItem -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the schema.
[$sel:schemaArn:SchemaVersionListItem'] :: SchemaVersionListItem -> Maybe Text

-- | Create a value of <a>SchemaVersionListItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SchemaVersionListItem'</a>,
--   <a>schemaVersionListItem_status</a> - The status of the schema
--   version.
--   
--   <a>$sel:createdTime:SchemaVersionListItem'</a>,
--   <a>schemaVersionListItem_createdTime</a> - The date and time the
--   schema version was created.
--   
--   <a>$sel:schemaVersionId:SchemaVersionListItem'</a>,
--   <a>schemaVersionListItem_schemaVersionId</a> - The unique identifier
--   of the schema version.
--   
--   <a>$sel:versionNumber:SchemaVersionListItem'</a>,
--   <a>schemaVersionListItem_versionNumber</a> - The version number of the
--   schema.
--   
--   <a>$sel:schemaArn:SchemaVersionListItem'</a>,
--   <a>schemaVersionListItem_schemaArn</a> - The Amazon Resource Name
--   (ARN) of the schema.
newSchemaVersionListItem :: SchemaVersionListItem

-- | The status of the schema version.
schemaVersionListItem_status :: Lens' SchemaVersionListItem (Maybe SchemaVersionStatus)

-- | The date and time the schema version was created.
schemaVersionListItem_createdTime :: Lens' SchemaVersionListItem (Maybe Text)

-- | The unique identifier of the schema version.
schemaVersionListItem_schemaVersionId :: Lens' SchemaVersionListItem (Maybe Text)

-- | The version number of the schema.
schemaVersionListItem_versionNumber :: Lens' SchemaVersionListItem (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the schema.
schemaVersionListItem_schemaArn :: Lens' SchemaVersionListItem (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.SchemaVersionListItem.SchemaVersionListItem
instance GHC.Show.Show Network.AWS.Glue.Types.SchemaVersionListItem.SchemaVersionListItem
instance GHC.Read.Read Network.AWS.Glue.Types.SchemaVersionListItem.SchemaVersionListItem
instance GHC.Classes.Eq Network.AWS.Glue.Types.SchemaVersionListItem.SchemaVersionListItem
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.SchemaVersionListItem.SchemaVersionListItem
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.SchemaVersionListItem.SchemaVersionListItem
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.SchemaVersionListItem.SchemaVersionListItem


module Network.AWS.Glue.Types.SecurityConfiguration

-- | Specifies a security configuration.
--   
--   <i>See:</i> <a>newSecurityConfiguration</a> smart constructor.
data SecurityConfiguration
SecurityConfiguration' :: Maybe Text -> Maybe EncryptionConfiguration -> Maybe POSIX -> SecurityConfiguration

-- | The name of the security configuration.
[$sel:name:SecurityConfiguration'] :: SecurityConfiguration -> Maybe Text

-- | The encryption configuration associated with this security
--   configuration.
[$sel:encryptionConfiguration:SecurityConfiguration'] :: SecurityConfiguration -> Maybe EncryptionConfiguration

-- | The time at which this security configuration was created.
[$sel:createdTimeStamp:SecurityConfiguration'] :: SecurityConfiguration -> Maybe POSIX

-- | Create a value of <a>SecurityConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:SecurityConfiguration'</a>,
--   <a>securityConfiguration_name</a> - The name of the security
--   configuration.
--   
--   <a>$sel:encryptionConfiguration:SecurityConfiguration'</a>,
--   <a>securityConfiguration_encryptionConfiguration</a> - The encryption
--   configuration associated with this security configuration.
--   
--   <a>$sel:createdTimeStamp:SecurityConfiguration'</a>,
--   <a>securityConfiguration_createdTimeStamp</a> - The time at which this
--   security configuration was created.
newSecurityConfiguration :: SecurityConfiguration

-- | The name of the security configuration.
securityConfiguration_name :: Lens' SecurityConfiguration (Maybe Text)

-- | The encryption configuration associated with this security
--   configuration.
securityConfiguration_encryptionConfiguration :: Lens' SecurityConfiguration (Maybe EncryptionConfiguration)

-- | The time at which this security configuration was created.
securityConfiguration_createdTimeStamp :: Lens' SecurityConfiguration (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.Glue.Types.SecurityConfiguration.SecurityConfiguration
instance GHC.Show.Show Network.AWS.Glue.Types.SecurityConfiguration.SecurityConfiguration
instance GHC.Read.Read Network.AWS.Glue.Types.SecurityConfiguration.SecurityConfiguration
instance GHC.Classes.Eq Network.AWS.Glue.Types.SecurityConfiguration.SecurityConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.SecurityConfiguration.SecurityConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.SecurityConfiguration.SecurityConfiguration
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.SecurityConfiguration.SecurityConfiguration


module Network.AWS.Glue.Types.Segment

-- | Defines a non-overlapping region of a table's partitions, allowing
--   multiple requests to be run in parallel.
--   
--   <i>See:</i> <a>newSegment</a> smart constructor.
data Segment
Segment' :: Natural -> Natural -> Segment

-- | The zero-based index number of the segment. For example, if the total
--   number of segments is 4, <tt>SegmentNumber</tt> values range from 0
--   through 3.
[$sel:segmentNumber:Segment'] :: Segment -> Natural

-- | The total number of segments.
[$sel:totalSegments:Segment'] :: Segment -> Natural

-- | Create a value of <a>Segment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:segmentNumber:Segment'</a>, <a>segment_segmentNumber</a> - The
--   zero-based index number of the segment. For example, if the total
--   number of segments is 4, <tt>SegmentNumber</tt> values range from 0
--   through 3.
--   
--   <a>$sel:totalSegments:Segment'</a>, <a>segment_totalSegments</a> - The
--   total number of segments.
newSegment :: Natural -> Natural -> Segment

-- | The zero-based index number of the segment. For example, if the total
--   number of segments is 4, <tt>SegmentNumber</tt> values range from 0
--   through 3.
segment_segmentNumber :: Lens' Segment Natural

-- | The total number of segments.
segment_totalSegments :: Lens' Segment Natural
instance GHC.Generics.Generic Network.AWS.Glue.Types.Segment.Segment
instance GHC.Show.Show Network.AWS.Glue.Types.Segment.Segment
instance GHC.Read.Read Network.AWS.Glue.Types.Segment.Segment
instance GHC.Classes.Eq Network.AWS.Glue.Types.Segment.Segment
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Segment.Segment
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Segment.Segment
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.Segment.Segment


module Network.AWS.Glue.Types.SerDeInfo

-- | Information about a serialization/deserialization program (SerDe) that
--   serves as an extractor and loader.
--   
--   <i>See:</i> <a>newSerDeInfo</a> smart constructor.
data SerDeInfo
SerDeInfo' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> SerDeInfo

-- | Usually the class that implements the SerDe. An example is
--   <tt>org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe</tt>.
[$sel:serializationLibrary:SerDeInfo'] :: SerDeInfo -> Maybe Text

-- | Name of the SerDe.
[$sel:name:SerDeInfo'] :: SerDeInfo -> Maybe Text

-- | These key-value pairs define initialization parameters for the SerDe.
[$sel:parameters:SerDeInfo'] :: SerDeInfo -> Maybe (HashMap Text Text)

-- | Create a value of <a>SerDeInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serializationLibrary:SerDeInfo'</a>,
--   <a>serDeInfo_serializationLibrary</a> - Usually the class that
--   implements the SerDe. An example is
--   <tt>org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe</tt>.
--   
--   <a>$sel:name:SerDeInfo'</a>, <a>serDeInfo_name</a> - Name of the
--   SerDe.
--   
--   <a>$sel:parameters:SerDeInfo'</a>, <a>serDeInfo_parameters</a> - These
--   key-value pairs define initialization parameters for the SerDe.
newSerDeInfo :: SerDeInfo

-- | Usually the class that implements the SerDe. An example is
--   <tt>org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe</tt>.
serDeInfo_serializationLibrary :: Lens' SerDeInfo (Maybe Text)

-- | Name of the SerDe.
serDeInfo_name :: Lens' SerDeInfo (Maybe Text)

-- | These key-value pairs define initialization parameters for the SerDe.
serDeInfo_parameters :: Lens' SerDeInfo (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.Glue.Types.SerDeInfo.SerDeInfo
instance GHC.Show.Show Network.AWS.Glue.Types.SerDeInfo.SerDeInfo
instance GHC.Read.Read Network.AWS.Glue.Types.SerDeInfo.SerDeInfo
instance GHC.Classes.Eq Network.AWS.Glue.Types.SerDeInfo.SerDeInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.SerDeInfo.SerDeInfo
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.SerDeInfo.SerDeInfo
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.SerDeInfo.SerDeInfo
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.SerDeInfo.SerDeInfo


module Network.AWS.Glue.Types.SkewedInfo

-- | Specifies skewed values in a table. Skewed values are those that occur
--   with very high frequency.
--   
--   <i>See:</i> <a>newSkewedInfo</a> smart constructor.
data SkewedInfo
SkewedInfo' :: Maybe (HashMap Text Text) -> Maybe [Text] -> Maybe [Text] -> SkewedInfo

-- | A mapping of skewed values to the columns that contain them.
[$sel:skewedColumnValueLocationMaps:SkewedInfo'] :: SkewedInfo -> Maybe (HashMap Text Text)

-- | A list of values that appear so frequently as to be considered skewed.
[$sel:skewedColumnValues:SkewedInfo'] :: SkewedInfo -> Maybe [Text]

-- | A list of names of columns that contain skewed values.
[$sel:skewedColumnNames:SkewedInfo'] :: SkewedInfo -> Maybe [Text]

-- | Create a value of <a>SkewedInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:skewedColumnValueLocationMaps:SkewedInfo'</a>,
--   <a>skewedInfo_skewedColumnValueLocationMaps</a> - A mapping of skewed
--   values to the columns that contain them.
--   
--   <a>$sel:skewedColumnValues:SkewedInfo'</a>,
--   <a>skewedInfo_skewedColumnValues</a> - A list of values that appear so
--   frequently as to be considered skewed.
--   
--   <a>$sel:skewedColumnNames:SkewedInfo'</a>,
--   <a>skewedInfo_skewedColumnNames</a> - A list of names of columns that
--   contain skewed values.
newSkewedInfo :: SkewedInfo

-- | A mapping of skewed values to the columns that contain them.
skewedInfo_skewedColumnValueLocationMaps :: Lens' SkewedInfo (Maybe (HashMap Text Text))

-- | A list of values that appear so frequently as to be considered skewed.
skewedInfo_skewedColumnValues :: Lens' SkewedInfo (Maybe [Text])

-- | A list of names of columns that contain skewed values.
skewedInfo_skewedColumnNames :: Lens' SkewedInfo (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.Glue.Types.SkewedInfo.SkewedInfo
instance GHC.Show.Show Network.AWS.Glue.Types.SkewedInfo.SkewedInfo
instance GHC.Read.Read Network.AWS.Glue.Types.SkewedInfo.SkewedInfo
instance GHC.Classes.Eq Network.AWS.Glue.Types.SkewedInfo.SkewedInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.SkewedInfo.SkewedInfo
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.SkewedInfo.SkewedInfo
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.SkewedInfo.SkewedInfo
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.SkewedInfo.SkewedInfo


module Network.AWS.Glue.Types.Sort
newtype Sort
Sort' :: Text -> Sort
[fromSort] :: Sort -> Text
pattern Sort_ASC :: Sort
pattern Sort_DESC :: Sort
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.Sort.Sort
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.Sort.Sort
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.Sort.Sort
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.Sort.Sort
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.Sort.Sort
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Sort.Sort
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.Sort.Sort
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.Sort.Sort
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.Sort.Sort
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.Sort.Sort
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.Sort.Sort
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.Sort.Sort
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Sort.Sort
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Sort.Sort
instance GHC.Generics.Generic Network.AWS.Glue.Types.Sort.Sort
instance GHC.Classes.Ord Network.AWS.Glue.Types.Sort.Sort
instance GHC.Classes.Eq Network.AWS.Glue.Types.Sort.Sort
instance GHC.Read.Read Network.AWS.Glue.Types.Sort.Sort
instance GHC.Show.Show Network.AWS.Glue.Types.Sort.Sort


module Network.AWS.Glue.Types.SortCriterion

-- | Specifies a field to sort by and a sort order.
--   
--   <i>See:</i> <a>newSortCriterion</a> smart constructor.
data SortCriterion
SortCriterion' :: Maybe Sort -> Maybe Text -> SortCriterion

-- | An ascending or descending sort.
[$sel:sort:SortCriterion'] :: SortCriterion -> Maybe Sort

-- | The name of the field on which to sort.
[$sel:fieldName:SortCriterion'] :: SortCriterion -> Maybe Text

-- | Create a value of <a>SortCriterion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sort:SortCriterion'</a>, <a>sortCriterion_sort</a> - An
--   ascending or descending sort.
--   
--   <a>$sel:fieldName:SortCriterion'</a>, <a>sortCriterion_fieldName</a> -
--   The name of the field on which to sort.
newSortCriterion :: SortCriterion

-- | An ascending or descending sort.
sortCriterion_sort :: Lens' SortCriterion (Maybe Sort)

-- | The name of the field on which to sort.
sortCriterion_fieldName :: Lens' SortCriterion (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.SortCriterion.SortCriterion
instance GHC.Show.Show Network.AWS.Glue.Types.SortCriterion.SortCriterion
instance GHC.Read.Read Network.AWS.Glue.Types.SortCriterion.SortCriterion
instance GHC.Classes.Eq Network.AWS.Glue.Types.SortCriterion.SortCriterion
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.SortCriterion.SortCriterion
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.SortCriterion.SortCriterion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.SortCriterion.SortCriterion


module Network.AWS.Glue.Types.SortDirectionType
newtype SortDirectionType
SortDirectionType' :: Text -> SortDirectionType
[fromSortDirectionType] :: SortDirectionType -> Text
pattern SortDirectionType_ASCENDING :: SortDirectionType
pattern SortDirectionType_DESCENDING :: SortDirectionType
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.SortDirectionType.SortDirectionType
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.SortDirectionType.SortDirectionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.SortDirectionType.SortDirectionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.SortDirectionType.SortDirectionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.SortDirectionType.SortDirectionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.SortDirectionType.SortDirectionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.SortDirectionType.SortDirectionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.SortDirectionType.SortDirectionType
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.SortDirectionType.SortDirectionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.SortDirectionType.SortDirectionType
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.SortDirectionType.SortDirectionType
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.SortDirectionType.SortDirectionType
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.SortDirectionType.SortDirectionType
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.SortDirectionType.SortDirectionType
instance GHC.Generics.Generic Network.AWS.Glue.Types.SortDirectionType.SortDirectionType
instance GHC.Classes.Ord Network.AWS.Glue.Types.SortDirectionType.SortDirectionType
instance GHC.Classes.Eq Network.AWS.Glue.Types.SortDirectionType.SortDirectionType
instance GHC.Read.Read Network.AWS.Glue.Types.SortDirectionType.SortDirectionType
instance GHC.Show.Show Network.AWS.Glue.Types.SortDirectionType.SortDirectionType


module Network.AWS.Glue.Types.StartingEventBatchCondition

-- | The batch condition that started the workflow run. Either the number
--   of events in the batch size arrived, in which case the BatchSize
--   member is non-zero, or the batch window expired, in which case the
--   BatchWindow member is non-zero.
--   
--   <i>See:</i> <a>newStartingEventBatchCondition</a> smart constructor.
data StartingEventBatchCondition
StartingEventBatchCondition' :: Maybe Int -> Maybe Int -> StartingEventBatchCondition

-- | Duration of the batch window in seconds.
[$sel:batchWindow:StartingEventBatchCondition'] :: StartingEventBatchCondition -> Maybe Int

-- | Number of events in the batch.
[$sel:batchSize:StartingEventBatchCondition'] :: StartingEventBatchCondition -> Maybe Int

-- | Create a value of <a>StartingEventBatchCondition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchWindow:StartingEventBatchCondition'</a>,
--   <a>startingEventBatchCondition_batchWindow</a> - Duration of the batch
--   window in seconds.
--   
--   <a>$sel:batchSize:StartingEventBatchCondition'</a>,
--   <a>startingEventBatchCondition_batchSize</a> - Number of events in the
--   batch.
newStartingEventBatchCondition :: StartingEventBatchCondition

-- | Duration of the batch window in seconds.
startingEventBatchCondition_batchWindow :: Lens' StartingEventBatchCondition (Maybe Int)

-- | Number of events in the batch.
startingEventBatchCondition_batchSize :: Lens' StartingEventBatchCondition (Maybe Int)
instance GHC.Generics.Generic Network.AWS.Glue.Types.StartingEventBatchCondition.StartingEventBatchCondition
instance GHC.Show.Show Network.AWS.Glue.Types.StartingEventBatchCondition.StartingEventBatchCondition
instance GHC.Read.Read Network.AWS.Glue.Types.StartingEventBatchCondition.StartingEventBatchCondition
instance GHC.Classes.Eq Network.AWS.Glue.Types.StartingEventBatchCondition.StartingEventBatchCondition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.StartingEventBatchCondition.StartingEventBatchCondition
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.StartingEventBatchCondition.StartingEventBatchCondition
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.StartingEventBatchCondition.StartingEventBatchCondition


module Network.AWS.Glue.Types.StorageDescriptor

-- | Describes the physical storage of table data.
--   
--   <i>See:</i> <a>newStorageDescriptor</a> smart constructor.
data StorageDescriptor
StorageDescriptor' :: Maybe [Order] -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe SerDeInfo -> Maybe Text -> Maybe Int -> Maybe SchemaReference -> Maybe Bool -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe SkewedInfo -> Maybe [Column] -> StorageDescriptor

-- | A list specifying the sort order of each bucket in the table.
[$sel:sortColumns:StorageDescriptor'] :: StorageDescriptor -> Maybe [Order]

-- | <tt>True</tt> if the data in the table is compressed, or
--   <tt>False</tt> if not.
[$sel:compressed:StorageDescriptor'] :: StorageDescriptor -> Maybe Bool

-- | The physical location of the table. By default, this takes the form of
--   the warehouse location, followed by the database location in the
--   warehouse, followed by the table name.
[$sel:location:StorageDescriptor'] :: StorageDescriptor -> Maybe Text

-- | A list of reducer grouping columns, clustering columns, and bucketing
--   columns in the table.
[$sel:bucketColumns:StorageDescriptor'] :: StorageDescriptor -> Maybe [Text]

-- | The serialization/deserialization (SerDe) information.
[$sel:serdeInfo:StorageDescriptor'] :: StorageDescriptor -> Maybe SerDeInfo

-- | The output format: <tt>SequenceFileOutputFormat</tt> (binary), or
--   <tt>IgnoreKeyTextOutputFormat</tt>, or a custom format.
[$sel:outputFormat:StorageDescriptor'] :: StorageDescriptor -> Maybe Text

-- | Must be specified if the table contains any dimension columns.
[$sel:numberOfBuckets:StorageDescriptor'] :: StorageDescriptor -> Maybe Int

-- | An object that references a schema stored in the Glue Schema Registry.
--   
--   When creating a table, you can pass an empty list of columns for the
--   schema, and instead use a schema reference.
[$sel:schemaReference:StorageDescriptor'] :: StorageDescriptor -> Maybe SchemaReference

-- | <tt>True</tt> if the table data is stored in subdirectories, or
--   <tt>False</tt> if not.
[$sel:storedAsSubDirectories:StorageDescriptor'] :: StorageDescriptor -> Maybe Bool

-- | The user-supplied properties in key-value form.
[$sel:parameters:StorageDescriptor'] :: StorageDescriptor -> Maybe (HashMap Text Text)

-- | The input format: <tt>SequenceFileInputFormat</tt> (binary), or
--   <tt>TextInputFormat</tt>, or a custom format.
[$sel:inputFormat:StorageDescriptor'] :: StorageDescriptor -> Maybe Text

-- | The information about values that appear frequently in a column
--   (skewed values).
[$sel:skewedInfo:StorageDescriptor'] :: StorageDescriptor -> Maybe SkewedInfo

-- | A list of the <tt>Columns</tt> in the table.
[$sel:columns:StorageDescriptor'] :: StorageDescriptor -> Maybe [Column]

-- | Create a value of <a>StorageDescriptor</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortColumns:StorageDescriptor'</a>,
--   <a>storageDescriptor_sortColumns</a> - A list specifying the sort
--   order of each bucket in the table.
--   
--   <a>$sel:compressed:StorageDescriptor'</a>,
--   <a>storageDescriptor_compressed</a> - <tt>True</tt> if the data in the
--   table is compressed, or <tt>False</tt> if not.
--   
--   <a>$sel:location:StorageDescriptor'</a>,
--   <a>storageDescriptor_location</a> - The physical location of the
--   table. By default, this takes the form of the warehouse location,
--   followed by the database location in the warehouse, followed by the
--   table name.
--   
--   <a>$sel:bucketColumns:StorageDescriptor'</a>,
--   <a>storageDescriptor_bucketColumns</a> - A list of reducer grouping
--   columns, clustering columns, and bucketing columns in the table.
--   
--   <a>$sel:serdeInfo:StorageDescriptor'</a>,
--   <a>storageDescriptor_serdeInfo</a> - The serialization/deserialization
--   (SerDe) information.
--   
--   <a>$sel:outputFormat:StorageDescriptor'</a>,
--   <a>storageDescriptor_outputFormat</a> - The output format:
--   <tt>SequenceFileOutputFormat</tt> (binary), or
--   <tt>IgnoreKeyTextOutputFormat</tt>, or a custom format.
--   
--   <a>$sel:numberOfBuckets:StorageDescriptor'</a>,
--   <a>storageDescriptor_numberOfBuckets</a> - Must be specified if the
--   table contains any dimension columns.
--   
--   <a>$sel:schemaReference:StorageDescriptor'</a>,
--   <a>storageDescriptor_schemaReference</a> - An object that references a
--   schema stored in the Glue Schema Registry.
--   
--   When creating a table, you can pass an empty list of columns for the
--   schema, and instead use a schema reference.
--   
--   <a>$sel:storedAsSubDirectories:StorageDescriptor'</a>,
--   <a>storageDescriptor_storedAsSubDirectories</a> - <tt>True</tt> if the
--   table data is stored in subdirectories, or <tt>False</tt> if not.
--   
--   <a>$sel:parameters:StorageDescriptor'</a>,
--   <a>storageDescriptor_parameters</a> - The user-supplied properties in
--   key-value form.
--   
--   <a>$sel:inputFormat:StorageDescriptor'</a>,
--   <a>storageDescriptor_inputFormat</a> - The input format:
--   <tt>SequenceFileInputFormat</tt> (binary), or
--   <tt>TextInputFormat</tt>, or a custom format.
--   
--   <a>$sel:skewedInfo:StorageDescriptor'</a>,
--   <a>storageDescriptor_skewedInfo</a> - The information about values
--   that appear frequently in a column (skewed values).
--   
--   <a>$sel:columns:StorageDescriptor'</a>,
--   <a>storageDescriptor_columns</a> - A list of the <tt>Columns</tt> in
--   the table.
newStorageDescriptor :: StorageDescriptor

-- | A list specifying the sort order of each bucket in the table.
storageDescriptor_sortColumns :: Lens' StorageDescriptor (Maybe [Order])

-- | <tt>True</tt> if the data in the table is compressed, or
--   <tt>False</tt> if not.
storageDescriptor_compressed :: Lens' StorageDescriptor (Maybe Bool)

-- | The physical location of the table. By default, this takes the form of
--   the warehouse location, followed by the database location in the
--   warehouse, followed by the table name.
storageDescriptor_location :: Lens' StorageDescriptor (Maybe Text)

-- | A list of reducer grouping columns, clustering columns, and bucketing
--   columns in the table.
storageDescriptor_bucketColumns :: Lens' StorageDescriptor (Maybe [Text])

-- | The serialization/deserialization (SerDe) information.
storageDescriptor_serdeInfo :: Lens' StorageDescriptor (Maybe SerDeInfo)

-- | The output format: <tt>SequenceFileOutputFormat</tt> (binary), or
--   <tt>IgnoreKeyTextOutputFormat</tt>, or a custom format.
storageDescriptor_outputFormat :: Lens' StorageDescriptor (Maybe Text)

-- | Must be specified if the table contains any dimension columns.
storageDescriptor_numberOfBuckets :: Lens' StorageDescriptor (Maybe Int)

-- | An object that references a schema stored in the Glue Schema Registry.
--   
--   When creating a table, you can pass an empty list of columns for the
--   schema, and instead use a schema reference.
storageDescriptor_schemaReference :: Lens' StorageDescriptor (Maybe SchemaReference)

-- | <tt>True</tt> if the table data is stored in subdirectories, or
--   <tt>False</tt> if not.
storageDescriptor_storedAsSubDirectories :: Lens' StorageDescriptor (Maybe Bool)

-- | The user-supplied properties in key-value form.
storageDescriptor_parameters :: Lens' StorageDescriptor (Maybe (HashMap Text Text))

-- | The input format: <tt>SequenceFileInputFormat</tt> (binary), or
--   <tt>TextInputFormat</tt>, or a custom format.
storageDescriptor_inputFormat :: Lens' StorageDescriptor (Maybe Text)

-- | The information about values that appear frequently in a column
--   (skewed values).
storageDescriptor_skewedInfo :: Lens' StorageDescriptor (Maybe SkewedInfo)

-- | A list of the <tt>Columns</tt> in the table.
storageDescriptor_columns :: Lens' StorageDescriptor (Maybe [Column])
instance GHC.Generics.Generic Network.AWS.Glue.Types.StorageDescriptor.StorageDescriptor
instance GHC.Show.Show Network.AWS.Glue.Types.StorageDescriptor.StorageDescriptor
instance GHC.Read.Read Network.AWS.Glue.Types.StorageDescriptor.StorageDescriptor
instance GHC.Classes.Eq Network.AWS.Glue.Types.StorageDescriptor.StorageDescriptor
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.StorageDescriptor.StorageDescriptor
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.StorageDescriptor.StorageDescriptor
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.StorageDescriptor.StorageDescriptor
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.StorageDescriptor.StorageDescriptor


module Network.AWS.Glue.Types.PartitionInput

-- | The structure used to create and update a partition.
--   
--   <i>See:</i> <a>newPartitionInput</a> smart constructor.
data PartitionInput
PartitionInput' :: Maybe [Text] -> Maybe POSIX -> Maybe StorageDescriptor -> Maybe (HashMap Text Text) -> Maybe POSIX -> PartitionInput

-- | The values of the partition. Although this parameter is not required
--   by the SDK, you must specify this parameter for a valid input.
--   
--   The values for the keys for the new partition must be passed as an
--   array of String objects that must be ordered in the same order as the
--   partition keys appearing in the Amazon S3 prefix. Otherwise Glue will
--   add the values to the wrong keys.
[$sel:values:PartitionInput'] :: PartitionInput -> Maybe [Text]

-- | The last time at which column statistics were computed for this
--   partition.
[$sel:lastAnalyzedTime:PartitionInput'] :: PartitionInput -> Maybe POSIX

-- | Provides information about the physical location where the partition
--   is stored.
[$sel:storageDescriptor:PartitionInput'] :: PartitionInput -> Maybe StorageDescriptor

-- | These key-value pairs define partition parameters.
[$sel:parameters:PartitionInput'] :: PartitionInput -> Maybe (HashMap Text Text)

-- | The last time at which the partition was accessed.
[$sel:lastAccessTime:PartitionInput'] :: PartitionInput -> Maybe POSIX

-- | Create a value of <a>PartitionInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:PartitionInput'</a>, <a>partitionInput_values</a> - The
--   values of the partition. Although this parameter is not required by
--   the SDK, you must specify this parameter for a valid input.
--   
--   The values for the keys for the new partition must be passed as an
--   array of String objects that must be ordered in the same order as the
--   partition keys appearing in the Amazon S3 prefix. Otherwise Glue will
--   add the values to the wrong keys.
--   
--   <a>$sel:lastAnalyzedTime:PartitionInput'</a>,
--   <a>partitionInput_lastAnalyzedTime</a> - The last time at which column
--   statistics were computed for this partition.
--   
--   <a>$sel:storageDescriptor:PartitionInput'</a>,
--   <a>partitionInput_storageDescriptor</a> - Provides information about
--   the physical location where the partition is stored.
--   
--   <a>$sel:parameters:PartitionInput'</a>,
--   <a>partitionInput_parameters</a> - These key-value pairs define
--   partition parameters.
--   
--   <a>$sel:lastAccessTime:PartitionInput'</a>,
--   <a>partitionInput_lastAccessTime</a> - The last time at which the
--   partition was accessed.
newPartitionInput :: PartitionInput

-- | The values of the partition. Although this parameter is not required
--   by the SDK, you must specify this parameter for a valid input.
--   
--   The values for the keys for the new partition must be passed as an
--   array of String objects that must be ordered in the same order as the
--   partition keys appearing in the Amazon S3 prefix. Otherwise Glue will
--   add the values to the wrong keys.
partitionInput_values :: Lens' PartitionInput (Maybe [Text])

-- | The last time at which column statistics were computed for this
--   partition.
partitionInput_lastAnalyzedTime :: Lens' PartitionInput (Maybe UTCTime)

-- | Provides information about the physical location where the partition
--   is stored.
partitionInput_storageDescriptor :: Lens' PartitionInput (Maybe StorageDescriptor)

-- | These key-value pairs define partition parameters.
partitionInput_parameters :: Lens' PartitionInput (Maybe (HashMap Text Text))

-- | The last time at which the partition was accessed.
partitionInput_lastAccessTime :: Lens' PartitionInput (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.Glue.Types.PartitionInput.PartitionInput
instance GHC.Show.Show Network.AWS.Glue.Types.PartitionInput.PartitionInput
instance GHC.Read.Read Network.AWS.Glue.Types.PartitionInput.PartitionInput
instance GHC.Classes.Eq Network.AWS.Glue.Types.PartitionInput.PartitionInput
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.PartitionInput.PartitionInput
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.PartitionInput.PartitionInput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.PartitionInput.PartitionInput


module Network.AWS.Glue.Types.BatchUpdatePartitionRequestEntry

-- | A structure that contains the values and structure used to update a
--   partition.
--   
--   <i>See:</i> <a>newBatchUpdatePartitionRequestEntry</a> smart
--   constructor.
data BatchUpdatePartitionRequestEntry
BatchUpdatePartitionRequestEntry' :: [Text] -> PartitionInput -> BatchUpdatePartitionRequestEntry

-- | A list of values defining the partitions.
[$sel:partitionValueList:BatchUpdatePartitionRequestEntry'] :: BatchUpdatePartitionRequestEntry -> [Text]

-- | The structure used to update a partition.
[$sel:partitionInput:BatchUpdatePartitionRequestEntry'] :: BatchUpdatePartitionRequestEntry -> PartitionInput

-- | Create a value of <a>BatchUpdatePartitionRequestEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitionValueList:BatchUpdatePartitionRequestEntry'</a>,
--   <a>batchUpdatePartitionRequestEntry_partitionValueList</a> - A list of
--   values defining the partitions.
--   
--   <a>$sel:partitionInput:BatchUpdatePartitionRequestEntry'</a>,
--   <a>batchUpdatePartitionRequestEntry_partitionInput</a> - The structure
--   used to update a partition.
newBatchUpdatePartitionRequestEntry :: PartitionInput -> BatchUpdatePartitionRequestEntry

-- | A list of values defining the partitions.
batchUpdatePartitionRequestEntry_partitionValueList :: Lens' BatchUpdatePartitionRequestEntry [Text]

-- | The structure used to update a partition.
batchUpdatePartitionRequestEntry_partitionInput :: Lens' BatchUpdatePartitionRequestEntry PartitionInput
instance GHC.Generics.Generic Network.AWS.Glue.Types.BatchUpdatePartitionRequestEntry.BatchUpdatePartitionRequestEntry
instance GHC.Show.Show Network.AWS.Glue.Types.BatchUpdatePartitionRequestEntry.BatchUpdatePartitionRequestEntry
instance GHC.Read.Read Network.AWS.Glue.Types.BatchUpdatePartitionRequestEntry.BatchUpdatePartitionRequestEntry
instance GHC.Classes.Eq Network.AWS.Glue.Types.BatchUpdatePartitionRequestEntry.BatchUpdatePartitionRequestEntry
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.BatchUpdatePartitionRequestEntry.BatchUpdatePartitionRequestEntry
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.BatchUpdatePartitionRequestEntry.BatchUpdatePartitionRequestEntry
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.BatchUpdatePartitionRequestEntry.BatchUpdatePartitionRequestEntry


module Network.AWS.Glue.Types.Partition

-- | Represents a slice of table data.
--   
--   <i>See:</i> <a>newPartition</a> smart constructor.
data Partition
Partition' :: Maybe POSIX -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe StorageDescriptor -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe POSIX -> Maybe Text -> Partition

-- | The time at which the partition was created.
[$sel:creationTime:Partition'] :: Partition -> Maybe POSIX

-- | The values of the partition.
[$sel:values:Partition'] :: Partition -> Maybe [Text]

-- | The ID of the Data Catalog in which the partition resides.
[$sel:catalogId:Partition'] :: Partition -> Maybe Text

-- | The last time at which column statistics were computed for this
--   partition.
[$sel:lastAnalyzedTime:Partition'] :: Partition -> Maybe POSIX

-- | Provides information about the physical location where the partition
--   is stored.
[$sel:storageDescriptor:Partition'] :: Partition -> Maybe StorageDescriptor

-- | The name of the catalog database in which to create the partition.
[$sel:databaseName:Partition'] :: Partition -> Maybe Text

-- | These key-value pairs define partition parameters.
[$sel:parameters:Partition'] :: Partition -> Maybe (HashMap Text Text)

-- | The last time at which the partition was accessed.
[$sel:lastAccessTime:Partition'] :: Partition -> Maybe POSIX

-- | The name of the database table in which to create the partition.
[$sel:tableName:Partition'] :: Partition -> Maybe Text

-- | Create a value of <a>Partition</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Partition'</a>, <a>partition_creationTime</a> -
--   The time at which the partition was created.
--   
--   <a>$sel:values:Partition'</a>, <a>partition_values</a> - The values of
--   the partition.
--   
--   <a>$sel:catalogId:Partition'</a>, <a>partition_catalogId</a> - The ID
--   of the Data Catalog in which the partition resides.
--   
--   <a>$sel:lastAnalyzedTime:Partition'</a>,
--   <a>partition_lastAnalyzedTime</a> - The last time at which column
--   statistics were computed for this partition.
--   
--   <a>$sel:storageDescriptor:Partition'</a>,
--   <a>partition_storageDescriptor</a> - Provides information about the
--   physical location where the partition is stored.
--   
--   <a>$sel:databaseName:Partition'</a>, <a>partition_databaseName</a> -
--   The name of the catalog database in which to create the partition.
--   
--   <a>$sel:parameters:Partition'</a>, <a>partition_parameters</a> - These
--   key-value pairs define partition parameters.
--   
--   <a>$sel:lastAccessTime:Partition'</a>, <a>partition_lastAccessTime</a>
--   - The last time at which the partition was accessed.
--   
--   <a>$sel:tableName:Partition'</a>, <a>partition_tableName</a> - The
--   name of the database table in which to create the partition.
newPartition :: Partition

-- | The time at which the partition was created.
partition_creationTime :: Lens' Partition (Maybe UTCTime)

-- | The values of the partition.
partition_values :: Lens' Partition (Maybe [Text])

-- | The ID of the Data Catalog in which the partition resides.
partition_catalogId :: Lens' Partition (Maybe Text)

-- | The last time at which column statistics were computed for this
--   partition.
partition_lastAnalyzedTime :: Lens' Partition (Maybe UTCTime)

-- | Provides information about the physical location where the partition
--   is stored.
partition_storageDescriptor :: Lens' Partition (Maybe StorageDescriptor)

-- | The name of the catalog database in which to create the partition.
partition_databaseName :: Lens' Partition (Maybe Text)

-- | These key-value pairs define partition parameters.
partition_parameters :: Lens' Partition (Maybe (HashMap Text Text))

-- | The last time at which the partition was accessed.
partition_lastAccessTime :: Lens' Partition (Maybe UTCTime)

-- | The name of the database table in which to create the partition.
partition_tableName :: Lens' Partition (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.Partition.Partition
instance GHC.Show.Show Network.AWS.Glue.Types.Partition.Partition
instance GHC.Read.Read Network.AWS.Glue.Types.Partition.Partition
instance GHC.Classes.Eq Network.AWS.Glue.Types.Partition.Partition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Partition.Partition
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Partition.Partition
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Partition.Partition


module Network.AWS.Glue.Types.StringColumnStatisticsData

-- | Defines column statistics supported for character sequence data
--   values.
--   
--   <i>See:</i> <a>newStringColumnStatisticsData</a> smart constructor.
data StringColumnStatisticsData
StringColumnStatisticsData' :: Natural -> Double -> Natural -> Natural -> StringColumnStatisticsData

-- | The size of the longest string in the column.
[$sel:maximumLength:StringColumnStatisticsData'] :: StringColumnStatisticsData -> Natural

-- | The average string length in the column.
[$sel:averageLength:StringColumnStatisticsData'] :: StringColumnStatisticsData -> Double

-- | The number of null values in the column.
[$sel:numberOfNulls:StringColumnStatisticsData'] :: StringColumnStatisticsData -> Natural

-- | The number of distinct values in a column.
[$sel:numberOfDistinctValues:StringColumnStatisticsData'] :: StringColumnStatisticsData -> Natural

-- | Create a value of <a>StringColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumLength:StringColumnStatisticsData'</a>,
--   <a>stringColumnStatisticsData_maximumLength</a> - The size of the
--   longest string in the column.
--   
--   <a>$sel:averageLength:StringColumnStatisticsData'</a>,
--   <a>stringColumnStatisticsData_averageLength</a> - The average string
--   length in the column.
--   
--   <a>$sel:numberOfNulls:StringColumnStatisticsData'</a>,
--   <a>stringColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
--   
--   <a>$sel:numberOfDistinctValues:StringColumnStatisticsData'</a>,
--   <a>stringColumnStatisticsData_numberOfDistinctValues</a> - The number
--   of distinct values in a column.
newStringColumnStatisticsData :: Natural -> Double -> Natural -> Natural -> StringColumnStatisticsData

-- | The size of the longest string in the column.
stringColumnStatisticsData_maximumLength :: Lens' StringColumnStatisticsData Natural

-- | The average string length in the column.
stringColumnStatisticsData_averageLength :: Lens' StringColumnStatisticsData Double

-- | The number of null values in the column.
stringColumnStatisticsData_numberOfNulls :: Lens' StringColumnStatisticsData Natural

-- | The number of distinct values in a column.
stringColumnStatisticsData_numberOfDistinctValues :: Lens' StringColumnStatisticsData Natural
instance GHC.Generics.Generic Network.AWS.Glue.Types.StringColumnStatisticsData.StringColumnStatisticsData
instance GHC.Show.Show Network.AWS.Glue.Types.StringColumnStatisticsData.StringColumnStatisticsData
instance GHC.Read.Read Network.AWS.Glue.Types.StringColumnStatisticsData.StringColumnStatisticsData
instance GHC.Classes.Eq Network.AWS.Glue.Types.StringColumnStatisticsData.StringColumnStatisticsData
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.StringColumnStatisticsData.StringColumnStatisticsData
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.StringColumnStatisticsData.StringColumnStatisticsData
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.StringColumnStatisticsData.StringColumnStatisticsData
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.StringColumnStatisticsData.StringColumnStatisticsData


module Network.AWS.Glue.Types.ColumnStatisticsData

-- | Contains the individual types of column statistics data. Only one data
--   object should be set and indicated by the <tt>Type</tt> attribute.
--   
--   <i>See:</i> <a>newColumnStatisticsData</a> smart constructor.
data ColumnStatisticsData
ColumnStatisticsData' :: Maybe BinaryColumnStatisticsData -> Maybe DateColumnStatisticsData -> Maybe BooleanColumnStatisticsData -> Maybe DecimalColumnStatisticsData -> Maybe DoubleColumnStatisticsData -> Maybe StringColumnStatisticsData -> Maybe LongColumnStatisticsData -> ColumnStatisticsType -> ColumnStatisticsData

-- | Binary column statistics data.
[$sel:binaryColumnStatisticsData:ColumnStatisticsData'] :: ColumnStatisticsData -> Maybe BinaryColumnStatisticsData

-- | Date column statistics data.
[$sel:dateColumnStatisticsData:ColumnStatisticsData'] :: ColumnStatisticsData -> Maybe DateColumnStatisticsData

-- | Boolean column statistics data.
[$sel:booleanColumnStatisticsData:ColumnStatisticsData'] :: ColumnStatisticsData -> Maybe BooleanColumnStatisticsData

-- | Decimal column statistics data.
[$sel:decimalColumnStatisticsData:ColumnStatisticsData'] :: ColumnStatisticsData -> Maybe DecimalColumnStatisticsData

-- | Double column statistics data.
[$sel:doubleColumnStatisticsData:ColumnStatisticsData'] :: ColumnStatisticsData -> Maybe DoubleColumnStatisticsData

-- | String column statistics data.
[$sel:stringColumnStatisticsData:ColumnStatisticsData'] :: ColumnStatisticsData -> Maybe StringColumnStatisticsData

-- | Long column statistics data.
[$sel:longColumnStatisticsData:ColumnStatisticsData'] :: ColumnStatisticsData -> Maybe LongColumnStatisticsData

-- | The type of column statistics data.
[$sel:type':ColumnStatisticsData'] :: ColumnStatisticsData -> ColumnStatisticsType

-- | Create a value of <a>ColumnStatisticsData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:binaryColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_binaryColumnStatisticsData</a> - Binary column
--   statistics data.
--   
--   <a>$sel:dateColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_dateColumnStatisticsData</a> - Date column
--   statistics data.
--   
--   <a>$sel:booleanColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_booleanColumnStatisticsData</a> - Boolean
--   column statistics data.
--   
--   <a>$sel:decimalColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_decimalColumnStatisticsData</a> - Decimal
--   column statistics data.
--   
--   <a>$sel:doubleColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_doubleColumnStatisticsData</a> - Double column
--   statistics data.
--   
--   <a>$sel:stringColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_stringColumnStatisticsData</a> - String column
--   statistics data.
--   
--   <a>$sel:longColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_longColumnStatisticsData</a> - Long column
--   statistics data.
--   
--   <a>$sel:type':ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_type</a> - The type of column statistics data.
newColumnStatisticsData :: ColumnStatisticsType -> ColumnStatisticsData

-- | Binary column statistics data.
columnStatisticsData_binaryColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe BinaryColumnStatisticsData)

-- | Date column statistics data.
columnStatisticsData_dateColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe DateColumnStatisticsData)

-- | Boolean column statistics data.
columnStatisticsData_booleanColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe BooleanColumnStatisticsData)

-- | Decimal column statistics data.
columnStatisticsData_decimalColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe DecimalColumnStatisticsData)

-- | Double column statistics data.
columnStatisticsData_doubleColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe DoubleColumnStatisticsData)

-- | String column statistics data.
columnStatisticsData_stringColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe StringColumnStatisticsData)

-- | Long column statistics data.
columnStatisticsData_longColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe LongColumnStatisticsData)

-- | The type of column statistics data.
columnStatisticsData_type :: Lens' ColumnStatisticsData ColumnStatisticsType
instance GHC.Generics.Generic Network.AWS.Glue.Types.ColumnStatisticsData.ColumnStatisticsData
instance GHC.Show.Show Network.AWS.Glue.Types.ColumnStatisticsData.ColumnStatisticsData
instance GHC.Read.Read Network.AWS.Glue.Types.ColumnStatisticsData.ColumnStatisticsData
instance GHC.Classes.Eq Network.AWS.Glue.Types.ColumnStatisticsData.ColumnStatisticsData
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ColumnStatisticsData.ColumnStatisticsData
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ColumnStatisticsData.ColumnStatisticsData
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ColumnStatisticsData.ColumnStatisticsData
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.ColumnStatisticsData.ColumnStatisticsData


module Network.AWS.Glue.Types.ColumnStatistics

-- | Represents the generated column-level statistics for a table or
--   partition.
--   
--   <i>See:</i> <a>newColumnStatistics</a> smart constructor.
data ColumnStatistics
ColumnStatistics' :: Text -> Text -> POSIX -> ColumnStatisticsData -> ColumnStatistics

-- | Name of column which statistics belong to.
[$sel:columnName:ColumnStatistics'] :: ColumnStatistics -> Text

-- | The data type of the column.
[$sel:columnType:ColumnStatistics'] :: ColumnStatistics -> Text

-- | The timestamp of when column statistics were generated.
[$sel:analyzedTime:ColumnStatistics'] :: ColumnStatistics -> POSIX

-- | A <tt>ColumnStatisticData</tt> object that contains the statistics
--   data values.
[$sel:statisticsData:ColumnStatistics'] :: ColumnStatistics -> ColumnStatisticsData

-- | Create a value of <a>ColumnStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:columnName:ColumnStatistics'</a>,
--   <a>columnStatistics_columnName</a> - Name of column which statistics
--   belong to.
--   
--   <a>$sel:columnType:ColumnStatistics'</a>,
--   <a>columnStatistics_columnType</a> - The data type of the column.
--   
--   <a>$sel:analyzedTime:ColumnStatistics'</a>,
--   <a>columnStatistics_analyzedTime</a> - The timestamp of when column
--   statistics were generated.
--   
--   <a>$sel:statisticsData:ColumnStatistics'</a>,
--   <a>columnStatistics_statisticsData</a> - A
--   <tt>ColumnStatisticData</tt> object that contains the statistics data
--   values.
newColumnStatistics :: Text -> Text -> UTCTime -> ColumnStatisticsData -> ColumnStatistics

-- | Name of column which statistics belong to.
columnStatistics_columnName :: Lens' ColumnStatistics Text

-- | The data type of the column.
columnStatistics_columnType :: Lens' ColumnStatistics Text

-- | The timestamp of when column statistics were generated.
columnStatistics_analyzedTime :: Lens' ColumnStatistics UTCTime

-- | A <tt>ColumnStatisticData</tt> object that contains the statistics
--   data values.
columnStatistics_statisticsData :: Lens' ColumnStatistics ColumnStatisticsData
instance GHC.Generics.Generic Network.AWS.Glue.Types.ColumnStatistics.ColumnStatistics
instance GHC.Show.Show Network.AWS.Glue.Types.ColumnStatistics.ColumnStatistics
instance GHC.Read.Read Network.AWS.Glue.Types.ColumnStatistics.ColumnStatistics
instance GHC.Classes.Eq Network.AWS.Glue.Types.ColumnStatistics.ColumnStatistics
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ColumnStatistics.ColumnStatistics
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ColumnStatistics.ColumnStatistics
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ColumnStatistics.ColumnStatistics
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.ColumnStatistics.ColumnStatistics


module Network.AWS.Glue.Types.ColumnStatisticsError

-- | Encapsulates a <tt>ColumnStatistics</tt> object that failed and the
--   reason for failure.
--   
--   <i>See:</i> <a>newColumnStatisticsError</a> smart constructor.
data ColumnStatisticsError
ColumnStatisticsError' :: Maybe ErrorDetail -> Maybe ColumnStatistics -> ColumnStatisticsError

-- | An error message with the reason for the failure of an operation.
[$sel:error:ColumnStatisticsError'] :: ColumnStatisticsError -> Maybe ErrorDetail

-- | The <tt>ColumnStatistics</tt> of the column.
[$sel:columnStatistics:ColumnStatisticsError'] :: ColumnStatisticsError -> Maybe ColumnStatistics

-- | Create a value of <a>ColumnStatisticsError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:error:ColumnStatisticsError'</a>,
--   <a>columnStatisticsError_error</a> - An error message with the reason
--   for the failure of an operation.
--   
--   <a>$sel:columnStatistics:ColumnStatisticsError'</a>,
--   <a>columnStatisticsError_columnStatistics</a> - The
--   <tt>ColumnStatistics</tt> of the column.
newColumnStatisticsError :: ColumnStatisticsError

-- | An error message with the reason for the failure of an operation.
columnStatisticsError_error :: Lens' ColumnStatisticsError (Maybe ErrorDetail)

-- | The <tt>ColumnStatistics</tt> of the column.
columnStatisticsError_columnStatistics :: Lens' ColumnStatisticsError (Maybe ColumnStatistics)
instance GHC.Generics.Generic Network.AWS.Glue.Types.ColumnStatisticsError.ColumnStatisticsError
instance GHC.Show.Show Network.AWS.Glue.Types.ColumnStatisticsError.ColumnStatisticsError
instance GHC.Read.Read Network.AWS.Glue.Types.ColumnStatisticsError.ColumnStatisticsError
instance GHC.Classes.Eq Network.AWS.Glue.Types.ColumnStatisticsError.ColumnStatisticsError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.ColumnStatisticsError.ColumnStatisticsError
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.ColumnStatisticsError.ColumnStatisticsError
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.ColumnStatisticsError.ColumnStatisticsError


module Network.AWS.Glue.Types.TableError

-- | An error record for table operations.
--   
--   <i>See:</i> <a>newTableError</a> smart constructor.
data TableError
TableError' :: Maybe Text -> Maybe ErrorDetail -> TableError

-- | The name of the table. For Hive compatibility, this must be entirely
--   lowercase.
[$sel:tableName:TableError'] :: TableError -> Maybe Text

-- | The details about the error.
[$sel:errorDetail:TableError'] :: TableError -> Maybe ErrorDetail

-- | Create a value of <a>TableError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tableName:TableError'</a>, <a>tableError_tableName</a> - The
--   name of the table. For Hive compatibility, this must be entirely
--   lowercase.
--   
--   <a>$sel:errorDetail:TableError'</a>, <a>tableError_errorDetail</a> -
--   The details about the error.
newTableError :: TableError

-- | The name of the table. For Hive compatibility, this must be entirely
--   lowercase.
tableError_tableName :: Lens' TableError (Maybe Text)

-- | The details about the error.
tableError_errorDetail :: Lens' TableError (Maybe ErrorDetail)
instance GHC.Generics.Generic Network.AWS.Glue.Types.TableError.TableError
instance GHC.Show.Show Network.AWS.Glue.Types.TableError.TableError
instance GHC.Read.Read Network.AWS.Glue.Types.TableError.TableError
instance GHC.Classes.Eq Network.AWS.Glue.Types.TableError.TableError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.TableError.TableError
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TableError.TableError
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TableError.TableError


module Network.AWS.Glue.Types.TableIdentifier

-- | A structure that describes a target table for resource linking.
--   
--   <i>See:</i> <a>newTableIdentifier</a> smart constructor.
data TableIdentifier
TableIdentifier' :: Maybe Text -> Maybe Text -> Maybe Text -> TableIdentifier

-- | The ID of the Data Catalog in which the table resides.
[$sel:catalogId:TableIdentifier'] :: TableIdentifier -> Maybe Text

-- | The name of the target table.
[$sel:name:TableIdentifier'] :: TableIdentifier -> Maybe Text

-- | The name of the catalog database that contains the target table.
[$sel:databaseName:TableIdentifier'] :: TableIdentifier -> Maybe Text

-- | Create a value of <a>TableIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:TableIdentifier'</a>,
--   <a>tableIdentifier_catalogId</a> - The ID of the Data Catalog in which
--   the table resides.
--   
--   <a>$sel:name:TableIdentifier'</a>, <a>tableIdentifier_name</a> - The
--   name of the target table.
--   
--   <a>$sel:databaseName:TableIdentifier'</a>,
--   <a>tableIdentifier_databaseName</a> - The name of the catalog database
--   that contains the target table.
newTableIdentifier :: TableIdentifier

-- | The ID of the Data Catalog in which the table resides.
tableIdentifier_catalogId :: Lens' TableIdentifier (Maybe Text)

-- | The name of the target table.
tableIdentifier_name :: Lens' TableIdentifier (Maybe Text)

-- | The name of the catalog database that contains the target table.
tableIdentifier_databaseName :: Lens' TableIdentifier (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.TableIdentifier.TableIdentifier
instance GHC.Show.Show Network.AWS.Glue.Types.TableIdentifier.TableIdentifier
instance GHC.Read.Read Network.AWS.Glue.Types.TableIdentifier.TableIdentifier
instance GHC.Classes.Eq Network.AWS.Glue.Types.TableIdentifier.TableIdentifier
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.TableIdentifier.TableIdentifier
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TableIdentifier.TableIdentifier
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TableIdentifier.TableIdentifier
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.TableIdentifier.TableIdentifier


module Network.AWS.Glue.Types.Table

-- | Represents a collection of related data organized in columns and rows.
--   
--   <i>See:</i> <a>newTable</a> smart constructor.
data Table
Table' :: Maybe Natural -> Maybe TableIdentifier -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe StorageDescriptor -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe POSIX -> Maybe Text -> Maybe [Column] -> Maybe POSIX -> Text -> Table

-- | The retention time for this table.
[$sel:retention:Table'] :: Table -> Maybe Natural

-- | A <tt>TableIdentifier</tt> structure that describes a target table for
--   resource linking.
[$sel:targetTable:Table'] :: Table -> Maybe TableIdentifier

-- | Indicates whether the table has been registered with Lake Formation.
[$sel:isRegisteredWithLakeFormation:Table'] :: Table -> Maybe Bool

-- | The person or entity who created the table.
[$sel:createdBy:Table'] :: Table -> Maybe Text

-- | The type of this table (<tt>EXTERNAL_TABLE</tt>,
--   <tt>VIRTUAL_VIEW</tt>, etc.).
[$sel:tableType:Table'] :: Table -> Maybe Text

-- | The ID of the Data Catalog in which the table resides.
[$sel:catalogId:Table'] :: Table -> Maybe Text

-- | The owner of the table.
[$sel:owner:Table'] :: Table -> Maybe Text

-- | If the table is a view, the original text of the view; otherwise
--   <tt>null</tt>.
[$sel:viewOriginalText:Table'] :: Table -> Maybe Text

-- | The last time that the table was updated.
[$sel:updateTime:Table'] :: Table -> Maybe POSIX

-- | If the table is a view, the expanded text of the view; otherwise
--   <tt>null</tt>.
[$sel:viewExpandedText:Table'] :: Table -> Maybe Text

-- | The last time that column statistics were computed for this table.
[$sel:lastAnalyzedTime:Table'] :: Table -> Maybe POSIX

-- | A storage descriptor containing information about the physical storage
--   of this table.
[$sel:storageDescriptor:Table'] :: Table -> Maybe StorageDescriptor

-- | The name of the database where the table metadata resides. For Hive
--   compatibility, this must be all lowercase.
[$sel:databaseName:Table'] :: Table -> Maybe Text

-- | These key-value pairs define properties associated with the table.
[$sel:parameters:Table'] :: Table -> Maybe (HashMap Text Text)

-- | The last time that the table was accessed. This is usually taken from
--   HDFS, and might not be reliable.
[$sel:lastAccessTime:Table'] :: Table -> Maybe POSIX

-- | A description of the table.
[$sel:description:Table'] :: Table -> Maybe Text

-- | A list of columns by which the table is partitioned. Only primitive
--   types are supported as partition keys.
--   
--   When you create a table used by Amazon Athena, and you do not specify
--   any <tt>partitionKeys</tt>, you must at least set the value of
--   <tt>partitionKeys</tt> to an empty list. For example:
--   
--   <pre>
--   "PartitionKeys": []
--   </pre>
[$sel:partitionKeys:Table'] :: Table -> Maybe [Column]

-- | The time when the table definition was created in the Data Catalog.
[$sel:createTime:Table'] :: Table -> Maybe POSIX

-- | The table name. For Hive compatibility, this must be entirely
--   lowercase.
[$sel:name:Table'] :: Table -> Text

-- | Create a value of <a>Table</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retention:Table'</a>, <a>table_retention</a> - The retention
--   time for this table.
--   
--   <a>$sel:targetTable:Table'</a>, <a>table_targetTable</a> - A
--   <tt>TableIdentifier</tt> structure that describes a target table for
--   resource linking.
--   
--   <a>$sel:isRegisteredWithLakeFormation:Table'</a>,
--   <a>table_isRegisteredWithLakeFormation</a> - Indicates whether the
--   table has been registered with Lake Formation.
--   
--   <a>$sel:createdBy:Table'</a>, <a>table_createdBy</a> - The person or
--   entity who created the table.
--   
--   <a>$sel:tableType:Table'</a>, <a>table_tableType</a> - The type of
--   this table (<tt>EXTERNAL_TABLE</tt>, <tt>VIRTUAL_VIEW</tt>, etc.).
--   
--   <a>$sel:catalogId:Table'</a>, <a>table_catalogId</a> - The ID of the
--   Data Catalog in which the table resides.
--   
--   <a>$sel:owner:Table'</a>, <a>table_owner</a> - The owner of the table.
--   
--   <a>$sel:viewOriginalText:Table'</a>, <a>table_viewOriginalText</a> -
--   If the table is a view, the original text of the view; otherwise
--   <tt>null</tt>.
--   
--   <a>$sel:updateTime:Table'</a>, <a>table_updateTime</a> - The last time
--   that the table was updated.
--   
--   <a>$sel:viewExpandedText:Table'</a>, <a>table_viewExpandedText</a> -
--   If the table is a view, the expanded text of the view; otherwise
--   <tt>null</tt>.
--   
--   <a>$sel:lastAnalyzedTime:Table'</a>, <a>table_lastAnalyzedTime</a> -
--   The last time that column statistics were computed for this table.
--   
--   <a>$sel:storageDescriptor:Table'</a>, <a>table_storageDescriptor</a> -
--   A storage descriptor containing information about the physical storage
--   of this table.
--   
--   <a>$sel:databaseName:Table'</a>, <a>table_databaseName</a> - The name
--   of the database where the table metadata resides. For Hive
--   compatibility, this must be all lowercase.
--   
--   <a>$sel:parameters:Table'</a>, <a>table_parameters</a> - These
--   key-value pairs define properties associated with the table.
--   
--   <a>$sel:lastAccessTime:Table'</a>, <a>table_lastAccessTime</a> - The
--   last time that the table was accessed. This is usually taken from
--   HDFS, and might not be reliable.
--   
--   <a>$sel:description:Table'</a>, <a>table_description</a> - A
--   description of the table.
--   
--   <a>$sel:partitionKeys:Table'</a>, <a>table_partitionKeys</a> - A list
--   of columns by which the table is partitioned. Only primitive types are
--   supported as partition keys.
--   
--   When you create a table used by Amazon Athena, and you do not specify
--   any <tt>partitionKeys</tt>, you must at least set the value of
--   <tt>partitionKeys</tt> to an empty list. For example:
--   
--   <pre>
--   "PartitionKeys": []
--   </pre>
--   
--   <a>$sel:createTime:Table'</a>, <a>table_createTime</a> - The time when
--   the table definition was created in the Data Catalog.
--   
--   <a>$sel:name:Table'</a>, <a>table_name</a> - The table name. For Hive
--   compatibility, this must be entirely lowercase.
newTable :: Text -> Table

-- | The retention time for this table.
table_retention :: Lens' Table (Maybe Natural)

-- | A <tt>TableIdentifier</tt> structure that describes a target table for
--   resource linking.
table_targetTable :: Lens' Table (Maybe TableIdentifier)

-- | Indicates whether the table has been registered with Lake Formation.
table_isRegisteredWithLakeFormation :: Lens' Table (Maybe Bool)

-- | The person or entity who created the table.
table_createdBy :: Lens' Table (Maybe Text)

-- | The type of this table (<tt>EXTERNAL_TABLE</tt>,
--   <tt>VIRTUAL_VIEW</tt>, etc.).
table_tableType :: Lens' Table (Maybe Text)

-- | The ID of the Data Catalog in which the table resides.
table_catalogId :: Lens' Table (Maybe Text)

-- | The owner of the table.
table_owner :: Lens' Table (Maybe Text)

-- | If the table is a view, the original text of the view; otherwise
--   <tt>null</tt>.
table_viewOriginalText :: Lens' Table (Maybe Text)

-- | The last time that the table was updated.
table_updateTime :: Lens' Table (Maybe UTCTime)

-- | If the table is a view, the expanded text of the view; otherwise
--   <tt>null</tt>.
table_viewExpandedText :: Lens' Table (Maybe Text)

-- | The last time that column statistics were computed for this table.
table_lastAnalyzedTime :: Lens' Table (Maybe UTCTime)

-- | A storage descriptor containing information about the physical storage
--   of this table.
table_storageDescriptor :: Lens' Table (Maybe StorageDescriptor)

-- | The name of the database where the table metadata resides. For Hive
--   compatibility, this must be all lowercase.
table_databaseName :: Lens' Table (Maybe Text)

-- | These key-value pairs define properties associated with the table.
table_parameters :: Lens' Table (Maybe (HashMap Text Text))

-- | The last time that the table was accessed. This is usually taken from
--   HDFS, and might not be reliable.
table_lastAccessTime :: Lens' Table (Maybe UTCTime)

-- | A description of the table.
table_description :: Lens' Table (Maybe Text)

-- | A list of columns by which the table is partitioned. Only primitive
--   types are supported as partition keys.
--   
--   When you create a table used by Amazon Athena, and you do not specify
--   any <tt>partitionKeys</tt>, you must at least set the value of
--   <tt>partitionKeys</tt> to an empty list. For example:
--   
--   <pre>
--   "PartitionKeys": []
--   </pre>
table_partitionKeys :: Lens' Table (Maybe [Column])

-- | The time when the table definition was created in the Data Catalog.
table_createTime :: Lens' Table (Maybe UTCTime)

-- | The table name. For Hive compatibility, this must be entirely
--   lowercase.
table_name :: Lens' Table Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.Table.Table
instance GHC.Show.Show Network.AWS.Glue.Types.Table.Table
instance GHC.Read.Read Network.AWS.Glue.Types.Table.Table
instance GHC.Classes.Eq Network.AWS.Glue.Types.Table.Table
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Table.Table
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Table.Table
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Table.Table


module Network.AWS.Glue.Types.TableInput

-- | A structure used to define a table.
--   
--   <i>See:</i> <a>newTableInput</a> smart constructor.
data TableInput
TableInput' :: Maybe Natural -> Maybe TableIdentifier -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe StorageDescriptor -> Maybe (HashMap Text Text) -> Maybe POSIX -> Maybe Text -> Maybe [Column] -> Text -> TableInput

-- | The retention time for this table.
[$sel:retention:TableInput'] :: TableInput -> Maybe Natural

-- | A <tt>TableIdentifier</tt> structure that describes a target table for
--   resource linking.
[$sel:targetTable:TableInput'] :: TableInput -> Maybe TableIdentifier

-- | The type of this table (<tt>EXTERNAL_TABLE</tt>,
--   <tt>VIRTUAL_VIEW</tt>, etc.).
[$sel:tableType:TableInput'] :: TableInput -> Maybe Text

-- | The table owner.
[$sel:owner:TableInput'] :: TableInput -> Maybe Text

-- | If the table is a view, the original text of the view; otherwise
--   <tt>null</tt>.
[$sel:viewOriginalText:TableInput'] :: TableInput -> Maybe Text

-- | If the table is a view, the expanded text of the view; otherwise
--   <tt>null</tt>.
[$sel:viewExpandedText:TableInput'] :: TableInput -> Maybe Text

-- | The last time that column statistics were computed for this table.
[$sel:lastAnalyzedTime:TableInput'] :: TableInput -> Maybe POSIX

-- | A storage descriptor containing information about the physical storage
--   of this table.
[$sel:storageDescriptor:TableInput'] :: TableInput -> Maybe StorageDescriptor

-- | These key-value pairs define properties associated with the table.
[$sel:parameters:TableInput'] :: TableInput -> Maybe (HashMap Text Text)

-- | The last time that the table was accessed.
[$sel:lastAccessTime:TableInput'] :: TableInput -> Maybe POSIX

-- | A description of the table.
[$sel:description:TableInput'] :: TableInput -> Maybe Text

-- | A list of columns by which the table is partitioned. Only primitive
--   types are supported as partition keys.
--   
--   When you create a table used by Amazon Athena, and you do not specify
--   any <tt>partitionKeys</tt>, you must at least set the value of
--   <tt>partitionKeys</tt> to an empty list. For example:
--   
--   <pre>
--   "PartitionKeys": []
--   </pre>
[$sel:partitionKeys:TableInput'] :: TableInput -> Maybe [Column]

-- | The table name. For Hive compatibility, this is folded to lowercase
--   when it is stored.
[$sel:name:TableInput'] :: TableInput -> Text

-- | Create a value of <a>TableInput</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retention:TableInput'</a>, <a>tableInput_retention</a> - The
--   retention time for this table.
--   
--   <a>$sel:targetTable:TableInput'</a>, <a>tableInput_targetTable</a> - A
--   <tt>TableIdentifier</tt> structure that describes a target table for
--   resource linking.
--   
--   <a>$sel:tableType:TableInput'</a>, <a>tableInput_tableType</a> - The
--   type of this table (<tt>EXTERNAL_TABLE</tt>, <tt>VIRTUAL_VIEW</tt>,
--   etc.).
--   
--   <a>$sel:owner:TableInput'</a>, <a>tableInput_owner</a> - The table
--   owner.
--   
--   <a>$sel:viewOriginalText:TableInput'</a>,
--   <a>tableInput_viewOriginalText</a> - If the table is a view, the
--   original text of the view; otherwise <tt>null</tt>.
--   
--   <a>$sel:viewExpandedText:TableInput'</a>,
--   <a>tableInput_viewExpandedText</a> - If the table is a view, the
--   expanded text of the view; otherwise <tt>null</tt>.
--   
--   <a>$sel:lastAnalyzedTime:TableInput'</a>,
--   <a>tableInput_lastAnalyzedTime</a> - The last time that column
--   statistics were computed for this table.
--   
--   <a>$sel:storageDescriptor:TableInput'</a>,
--   <a>tableInput_storageDescriptor</a> - A storage descriptor containing
--   information about the physical storage of this table.
--   
--   <a>$sel:parameters:TableInput'</a>, <a>tableInput_parameters</a> -
--   These key-value pairs define properties associated with the table.
--   
--   <a>$sel:lastAccessTime:TableInput'</a>,
--   <a>tableInput_lastAccessTime</a> - The last time that the table was
--   accessed.
--   
--   <a>$sel:description:TableInput'</a>, <a>tableInput_description</a> - A
--   description of the table.
--   
--   <a>$sel:partitionKeys:TableInput'</a>, <a>tableInput_partitionKeys</a>
--   - A list of columns by which the table is partitioned. Only primitive
--   types are supported as partition keys.
--   
--   When you create a table used by Amazon Athena, and you do not specify
--   any <tt>partitionKeys</tt>, you must at least set the value of
--   <tt>partitionKeys</tt> to an empty list. For example:
--   
--   <pre>
--   "PartitionKeys": []
--   </pre>
--   
--   <a>$sel:name:TableInput'</a>, <a>tableInput_name</a> - The table name.
--   For Hive compatibility, this is folded to lowercase when it is stored.
newTableInput :: Text -> TableInput

-- | The retention time for this table.
tableInput_retention :: Lens' TableInput (Maybe Natural)

-- | A <tt>TableIdentifier</tt> structure that describes a target table for
--   resource linking.
tableInput_targetTable :: Lens' TableInput (Maybe TableIdentifier)

-- | The type of this table (<tt>EXTERNAL_TABLE</tt>,
--   <tt>VIRTUAL_VIEW</tt>, etc.).
tableInput_tableType :: Lens' TableInput (Maybe Text)

-- | The table owner.
tableInput_owner :: Lens' TableInput (Maybe Text)

-- | If the table is a view, the original text of the view; otherwise
--   <tt>null</tt>.
tableInput_viewOriginalText :: Lens' TableInput (Maybe Text)

-- | If the table is a view, the expanded text of the view; otherwise
--   <tt>null</tt>.
tableInput_viewExpandedText :: Lens' TableInput (Maybe Text)

-- | The last time that column statistics were computed for this table.
tableInput_lastAnalyzedTime :: Lens' TableInput (Maybe UTCTime)

-- | A storage descriptor containing information about the physical storage
--   of this table.
tableInput_storageDescriptor :: Lens' TableInput (Maybe StorageDescriptor)

-- | These key-value pairs define properties associated with the table.
tableInput_parameters :: Lens' TableInput (Maybe (HashMap Text Text))

-- | The last time that the table was accessed.
tableInput_lastAccessTime :: Lens' TableInput (Maybe UTCTime)

-- | A description of the table.
tableInput_description :: Lens' TableInput (Maybe Text)

-- | A list of columns by which the table is partitioned. Only primitive
--   types are supported as partition keys.
--   
--   When you create a table used by Amazon Athena, and you do not specify
--   any <tt>partitionKeys</tt>, you must at least set the value of
--   <tt>partitionKeys</tt> to an empty list. For example:
--   
--   <pre>
--   "PartitionKeys": []
--   </pre>
tableInput_partitionKeys :: Lens' TableInput (Maybe [Column])

-- | The table name. For Hive compatibility, this is folded to lowercase
--   when it is stored.
tableInput_name :: Lens' TableInput Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.TableInput.TableInput
instance GHC.Show.Show Network.AWS.Glue.Types.TableInput.TableInput
instance GHC.Read.Read Network.AWS.Glue.Types.TableInput.TableInput
instance GHC.Classes.Eq Network.AWS.Glue.Types.TableInput.TableInput
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TableInput.TableInput
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TableInput.TableInput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.TableInput.TableInput


module Network.AWS.Glue.Types.TableVersion

-- | Specifies a version of a table.
--   
--   <i>See:</i> <a>newTableVersion</a> smart constructor.
data TableVersion
TableVersion' :: Maybe Text -> Maybe Table -> TableVersion

-- | The ID value that identifies this table version. A <tt>VersionId</tt>
--   is a string representation of an integer. Each version is incremented
--   by 1.
[$sel:versionId:TableVersion'] :: TableVersion -> Maybe Text

-- | The table in question.
[$sel:table:TableVersion'] :: TableVersion -> Maybe Table

-- | Create a value of <a>TableVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:TableVersion'</a>, <a>tableVersion_versionId</a> -
--   The ID value that identifies this table version. A <tt>VersionId</tt>
--   is a string representation of an integer. Each version is incremented
--   by 1.
--   
--   <a>$sel:table:TableVersion'</a>, <a>tableVersion_table</a> - The table
--   in question.
newTableVersion :: TableVersion

-- | The ID value that identifies this table version. A <tt>VersionId</tt>
--   is a string representation of an integer. Each version is incremented
--   by 1.
tableVersion_versionId :: Lens' TableVersion (Maybe Text)

-- | The table in question.
tableVersion_table :: Lens' TableVersion (Maybe Table)
instance GHC.Generics.Generic Network.AWS.Glue.Types.TableVersion.TableVersion
instance GHC.Show.Show Network.AWS.Glue.Types.TableVersion.TableVersion
instance GHC.Read.Read Network.AWS.Glue.Types.TableVersion.TableVersion
instance GHC.Classes.Eq Network.AWS.Glue.Types.TableVersion.TableVersion
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.TableVersion.TableVersion
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TableVersion.TableVersion
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TableVersion.TableVersion


module Network.AWS.Glue.Types.TableVersionError

-- | An error record for table-version operations.
--   
--   <i>See:</i> <a>newTableVersionError</a> smart constructor.
data TableVersionError
TableVersionError' :: Maybe Text -> Maybe Text -> Maybe ErrorDetail -> TableVersionError

-- | The ID value of the version in question. A <tt>VersionID</tt> is a
--   string representation of an integer. Each version is incremented by 1.
[$sel:versionId:TableVersionError'] :: TableVersionError -> Maybe Text

-- | The name of the table in question.
[$sel:tableName:TableVersionError'] :: TableVersionError -> Maybe Text

-- | The details about the error.
[$sel:errorDetail:TableVersionError'] :: TableVersionError -> Maybe ErrorDetail

-- | Create a value of <a>TableVersionError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:TableVersionError'</a>,
--   <a>tableVersionError_versionId</a> - The ID value of the version in
--   question. A <tt>VersionID</tt> is a string representation of an
--   integer. Each version is incremented by 1.
--   
--   <a>$sel:tableName:TableVersionError'</a>,
--   <a>tableVersionError_tableName</a> - The name of the table in
--   question.
--   
--   <a>$sel:errorDetail:TableVersionError'</a>,
--   <a>tableVersionError_errorDetail</a> - The details about the error.
newTableVersionError :: TableVersionError

-- | The ID value of the version in question. A <tt>VersionID</tt> is a
--   string representation of an integer. Each version is incremented by 1.
tableVersionError_versionId :: Lens' TableVersionError (Maybe Text)

-- | The name of the table in question.
tableVersionError_tableName :: Lens' TableVersionError (Maybe Text)

-- | The details about the error.
tableVersionError_errorDetail :: Lens' TableVersionError (Maybe ErrorDetail)
instance GHC.Generics.Generic Network.AWS.Glue.Types.TableVersionError.TableVersionError
instance GHC.Show.Show Network.AWS.Glue.Types.TableVersionError.TableVersionError
instance GHC.Read.Read Network.AWS.Glue.Types.TableVersionError.TableVersionError
instance GHC.Classes.Eq Network.AWS.Glue.Types.TableVersionError.TableVersionError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.TableVersionError.TableVersionError
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TableVersionError.TableVersionError
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TableVersionError.TableVersionError


module Network.AWS.Glue.Types.TaskRunSortColumnType
newtype TaskRunSortColumnType
TaskRunSortColumnType' :: Text -> TaskRunSortColumnType
[fromTaskRunSortColumnType] :: TaskRunSortColumnType -> Text
pattern TaskRunSortColumnType_STARTED :: TaskRunSortColumnType
pattern TaskRunSortColumnType_STATUS :: TaskRunSortColumnType
pattern TaskRunSortColumnType_TASK_RUN_TYPE :: TaskRunSortColumnType
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.TaskRunSortColumnType.TaskRunSortColumnType
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.TaskRunSortColumnType.TaskRunSortColumnType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.TaskRunSortColumnType.TaskRunSortColumnType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.TaskRunSortColumnType.TaskRunSortColumnType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.TaskRunSortColumnType.TaskRunSortColumnType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.TaskRunSortColumnType.TaskRunSortColumnType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.TaskRunSortColumnType.TaskRunSortColumnType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.TaskRunSortColumnType.TaskRunSortColumnType
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.TaskRunSortColumnType.TaskRunSortColumnType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.TaskRunSortColumnType.TaskRunSortColumnType
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.TaskRunSortColumnType.TaskRunSortColumnType
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.TaskRunSortColumnType.TaskRunSortColumnType
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TaskRunSortColumnType.TaskRunSortColumnType
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TaskRunSortColumnType.TaskRunSortColumnType
instance GHC.Generics.Generic Network.AWS.Glue.Types.TaskRunSortColumnType.TaskRunSortColumnType
instance GHC.Classes.Ord Network.AWS.Glue.Types.TaskRunSortColumnType.TaskRunSortColumnType
instance GHC.Classes.Eq Network.AWS.Glue.Types.TaskRunSortColumnType.TaskRunSortColumnType
instance GHC.Read.Read Network.AWS.Glue.Types.TaskRunSortColumnType.TaskRunSortColumnType
instance GHC.Show.Show Network.AWS.Glue.Types.TaskRunSortColumnType.TaskRunSortColumnType


module Network.AWS.Glue.Types.TaskRunSortCriteria

-- | The sorting criteria that are used to sort the list of task runs for
--   the machine learning transform.
--   
--   <i>See:</i> <a>newTaskRunSortCriteria</a> smart constructor.
data TaskRunSortCriteria
TaskRunSortCriteria' :: TaskRunSortColumnType -> SortDirectionType -> TaskRunSortCriteria

-- | The column to be used to sort the list of task runs for the machine
--   learning transform.
[$sel:column:TaskRunSortCriteria'] :: TaskRunSortCriteria -> TaskRunSortColumnType

-- | The sort direction to be used to sort the list of task runs for the
--   machine learning transform.
[$sel:sortDirection:TaskRunSortCriteria'] :: TaskRunSortCriteria -> SortDirectionType

-- | Create a value of <a>TaskRunSortCriteria</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:column:TaskRunSortCriteria'</a>,
--   <a>taskRunSortCriteria_column</a> - The column to be used to sort the
--   list of task runs for the machine learning transform.
--   
--   <a>$sel:sortDirection:TaskRunSortCriteria'</a>,
--   <a>taskRunSortCriteria_sortDirection</a> - The sort direction to be
--   used to sort the list of task runs for the machine learning transform.
newTaskRunSortCriteria :: TaskRunSortColumnType -> SortDirectionType -> TaskRunSortCriteria

-- | The column to be used to sort the list of task runs for the machine
--   learning transform.
taskRunSortCriteria_column :: Lens' TaskRunSortCriteria TaskRunSortColumnType

-- | The sort direction to be used to sort the list of task runs for the
--   machine learning transform.
taskRunSortCriteria_sortDirection :: Lens' TaskRunSortCriteria SortDirectionType
instance GHC.Generics.Generic Network.AWS.Glue.Types.TaskRunSortCriteria.TaskRunSortCriteria
instance GHC.Show.Show Network.AWS.Glue.Types.TaskRunSortCriteria.TaskRunSortCriteria
instance GHC.Read.Read Network.AWS.Glue.Types.TaskRunSortCriteria.TaskRunSortCriteria
instance GHC.Classes.Eq Network.AWS.Glue.Types.TaskRunSortCriteria.TaskRunSortCriteria
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TaskRunSortCriteria.TaskRunSortCriteria
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TaskRunSortCriteria.TaskRunSortCriteria
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.TaskRunSortCriteria.TaskRunSortCriteria


module Network.AWS.Glue.Types.TaskStatusType
newtype TaskStatusType
TaskStatusType' :: Text -> TaskStatusType
[fromTaskStatusType] :: TaskStatusType -> Text
pattern TaskStatusType_FAILED :: TaskStatusType
pattern TaskStatusType_RUNNING :: TaskStatusType
pattern TaskStatusType_STARTING :: TaskStatusType
pattern TaskStatusType_STOPPED :: TaskStatusType
pattern TaskStatusType_STOPPING :: TaskStatusType
pattern TaskStatusType_SUCCEEDED :: TaskStatusType
pattern TaskStatusType_TIMEOUT :: TaskStatusType
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.TaskStatusType.TaskStatusType
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.TaskStatusType.TaskStatusType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.TaskStatusType.TaskStatusType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.TaskStatusType.TaskStatusType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.TaskStatusType.TaskStatusType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.TaskStatusType.TaskStatusType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.TaskStatusType.TaskStatusType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.TaskStatusType.TaskStatusType
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.TaskStatusType.TaskStatusType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.TaskStatusType.TaskStatusType
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.TaskStatusType.TaskStatusType
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.TaskStatusType.TaskStatusType
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TaskStatusType.TaskStatusType
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TaskStatusType.TaskStatusType
instance GHC.Generics.Generic Network.AWS.Glue.Types.TaskStatusType.TaskStatusType
instance GHC.Classes.Ord Network.AWS.Glue.Types.TaskStatusType.TaskStatusType
instance GHC.Classes.Eq Network.AWS.Glue.Types.TaskStatusType.TaskStatusType
instance GHC.Read.Read Network.AWS.Glue.Types.TaskStatusType.TaskStatusType
instance GHC.Show.Show Network.AWS.Glue.Types.TaskStatusType.TaskStatusType


module Network.AWS.Glue.Types.TaskType
newtype TaskType
TaskType' :: Text -> TaskType
[fromTaskType] :: TaskType -> Text
pattern TaskType_EVALUATION :: TaskType
pattern TaskType_EXPORT_LABELS :: TaskType
pattern TaskType_FIND_MATCHES :: TaskType
pattern TaskType_IMPORT_LABELS :: TaskType
pattern TaskType_LABELING_SET_GENERATION :: TaskType
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.TaskType.TaskType
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.TaskType.TaskType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.TaskType.TaskType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.TaskType.TaskType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.TaskType.TaskType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.TaskType.TaskType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.TaskType.TaskType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.TaskType.TaskType
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.TaskType.TaskType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.TaskType.TaskType
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.TaskType.TaskType
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.TaskType.TaskType
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TaskType.TaskType
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TaskType.TaskType
instance GHC.Generics.Generic Network.AWS.Glue.Types.TaskType.TaskType
instance GHC.Classes.Ord Network.AWS.Glue.Types.TaskType.TaskType
instance GHC.Classes.Eq Network.AWS.Glue.Types.TaskType.TaskType
instance GHC.Read.Read Network.AWS.Glue.Types.TaskType.TaskType
instance GHC.Show.Show Network.AWS.Glue.Types.TaskType.TaskType


module Network.AWS.Glue.Types.TaskRunProperties

-- | The configuration properties for the task run.
--   
--   <i>See:</i> <a>newTaskRunProperties</a> smart constructor.
data TaskRunProperties
TaskRunProperties' :: Maybe TaskType -> Maybe ExportLabelsTaskRunProperties -> Maybe LabelingSetGenerationTaskRunProperties -> Maybe FindMatchesTaskRunProperties -> Maybe ImportLabelsTaskRunProperties -> TaskRunProperties

-- | The type of task run.
[$sel:taskType:TaskRunProperties'] :: TaskRunProperties -> Maybe TaskType

-- | The configuration properties for an exporting labels task run.
[$sel:exportLabelsTaskRunProperties:TaskRunProperties'] :: TaskRunProperties -> Maybe ExportLabelsTaskRunProperties

-- | The configuration properties for a labeling set generation task run.
[$sel:labelingSetGenerationTaskRunProperties:TaskRunProperties'] :: TaskRunProperties -> Maybe LabelingSetGenerationTaskRunProperties

-- | The configuration properties for a find matches task run.
[$sel:findMatchesTaskRunProperties:TaskRunProperties'] :: TaskRunProperties -> Maybe FindMatchesTaskRunProperties

-- | The configuration properties for an importing labels task run.
[$sel:importLabelsTaskRunProperties:TaskRunProperties'] :: TaskRunProperties -> Maybe ImportLabelsTaskRunProperties

-- | Create a value of <a>TaskRunProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskType:TaskRunProperties'</a>,
--   <a>taskRunProperties_taskType</a> - The type of task run.
--   
--   <a>$sel:exportLabelsTaskRunProperties:TaskRunProperties'</a>,
--   <a>taskRunProperties_exportLabelsTaskRunProperties</a> - The
--   configuration properties for an exporting labels task run.
--   
--   <a>$sel:labelingSetGenerationTaskRunProperties:TaskRunProperties'</a>,
--   <a>taskRunProperties_labelingSetGenerationTaskRunProperties</a> - The
--   configuration properties for a labeling set generation task run.
--   
--   <a>$sel:findMatchesTaskRunProperties:TaskRunProperties'</a>,
--   <a>taskRunProperties_findMatchesTaskRunProperties</a> - The
--   configuration properties for a find matches task run.
--   
--   <a>$sel:importLabelsTaskRunProperties:TaskRunProperties'</a>,
--   <a>taskRunProperties_importLabelsTaskRunProperties</a> - The
--   configuration properties for an importing labels task run.
newTaskRunProperties :: TaskRunProperties

-- | The type of task run.
taskRunProperties_taskType :: Lens' TaskRunProperties (Maybe TaskType)

-- | The configuration properties for an exporting labels task run.
taskRunProperties_exportLabelsTaskRunProperties :: Lens' TaskRunProperties (Maybe ExportLabelsTaskRunProperties)

-- | The configuration properties for a labeling set generation task run.
taskRunProperties_labelingSetGenerationTaskRunProperties :: Lens' TaskRunProperties (Maybe LabelingSetGenerationTaskRunProperties)

-- | The configuration properties for a find matches task run.
taskRunProperties_findMatchesTaskRunProperties :: Lens' TaskRunProperties (Maybe FindMatchesTaskRunProperties)

-- | The configuration properties for an importing labels task run.
taskRunProperties_importLabelsTaskRunProperties :: Lens' TaskRunProperties (Maybe ImportLabelsTaskRunProperties)
instance GHC.Generics.Generic Network.AWS.Glue.Types.TaskRunProperties.TaskRunProperties
instance GHC.Show.Show Network.AWS.Glue.Types.TaskRunProperties.TaskRunProperties
instance GHC.Read.Read Network.AWS.Glue.Types.TaskRunProperties.TaskRunProperties
instance GHC.Classes.Eq Network.AWS.Glue.Types.TaskRunProperties.TaskRunProperties
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.TaskRunProperties.TaskRunProperties
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TaskRunProperties.TaskRunProperties
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TaskRunProperties.TaskRunProperties


module Network.AWS.Glue.Types.TaskRun

-- | The sampling parameters that are associated with the machine learning
--   transform.
--   
--   <i>See:</i> <a>newTaskRun</a> smart constructor.
data TaskRun
TaskRun' :: Maybe POSIX -> Maybe TaskStatusType -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Int -> Maybe TaskRunProperties -> Maybe Text -> Maybe Text -> TaskRun

-- | The last point in time that the requested task run was completed.
[$sel:completedOn:TaskRun'] :: TaskRun -> Maybe POSIX

-- | The current status of the requested task run.
[$sel:status:TaskRun'] :: TaskRun -> Maybe TaskStatusType

-- | The last point in time that the requested task run was updated.
[$sel:lastModifiedOn:TaskRun'] :: TaskRun -> Maybe POSIX

-- | The list of error strings associated with this task run.
[$sel:errorString:TaskRun'] :: TaskRun -> Maybe Text

-- | The date and time that this task run started.
[$sel:startedOn:TaskRun'] :: TaskRun -> Maybe POSIX

-- | The names of the log group for secure logging, associated with this
--   task run.
[$sel:logGroupName:TaskRun'] :: TaskRun -> Maybe Text

-- | The amount of time (in seconds) that the task run consumed resources.
[$sel:executionTime:TaskRun'] :: TaskRun -> Maybe Int

-- | Specifies configuration properties associated with this task run.
[$sel:properties:TaskRun'] :: TaskRun -> Maybe TaskRunProperties

-- | The unique identifier for the transform.
[$sel:transformId:TaskRun'] :: TaskRun -> Maybe Text

-- | The unique identifier for this task run.
[$sel:taskRunId:TaskRun'] :: TaskRun -> Maybe Text

-- | Create a value of <a>TaskRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completedOn:TaskRun'</a>, <a>taskRun_completedOn</a> - The
--   last point in time that the requested task run was completed.
--   
--   <a>$sel:status:TaskRun'</a>, <a>taskRun_status</a> - The current
--   status of the requested task run.
--   
--   <a>$sel:lastModifiedOn:TaskRun'</a>, <a>taskRun_lastModifiedOn</a> -
--   The last point in time that the requested task run was updated.
--   
--   <a>$sel:errorString:TaskRun'</a>, <a>taskRun_errorString</a> - The
--   list of error strings associated with this task run.
--   
--   <a>$sel:startedOn:TaskRun'</a>, <a>taskRun_startedOn</a> - The date
--   and time that this task run started.
--   
--   <a>$sel:logGroupName:TaskRun'</a>, <a>taskRun_logGroupName</a> - The
--   names of the log group for secure logging, associated with this task
--   run.
--   
--   <a>$sel:executionTime:TaskRun'</a>, <a>taskRun_executionTime</a> - The
--   amount of time (in seconds) that the task run consumed resources.
--   
--   <a>$sel:properties:TaskRun'</a>, <a>taskRun_properties</a> - Specifies
--   configuration properties associated with this task run.
--   
--   <a>$sel:transformId:TaskRun'</a>, <a>taskRun_transformId</a> - The
--   unique identifier for the transform.
--   
--   <a>$sel:taskRunId:TaskRun'</a>, <a>taskRun_taskRunId</a> - The unique
--   identifier for this task run.
newTaskRun :: TaskRun

-- | The last point in time that the requested task run was completed.
taskRun_completedOn :: Lens' TaskRun (Maybe UTCTime)

-- | The current status of the requested task run.
taskRun_status :: Lens' TaskRun (Maybe TaskStatusType)

-- | The last point in time that the requested task run was updated.
taskRun_lastModifiedOn :: Lens' TaskRun (Maybe UTCTime)

-- | The list of error strings associated with this task run.
taskRun_errorString :: Lens' TaskRun (Maybe Text)

-- | The date and time that this task run started.
taskRun_startedOn :: Lens' TaskRun (Maybe UTCTime)

-- | The names of the log group for secure logging, associated with this
--   task run.
taskRun_logGroupName :: Lens' TaskRun (Maybe Text)

-- | The amount of time (in seconds) that the task run consumed resources.
taskRun_executionTime :: Lens' TaskRun (Maybe Int)

-- | Specifies configuration properties associated with this task run.
taskRun_properties :: Lens' TaskRun (Maybe TaskRunProperties)

-- | The unique identifier for the transform.
taskRun_transformId :: Lens' TaskRun (Maybe Text)

-- | The unique identifier for this task run.
taskRun_taskRunId :: Lens' TaskRun (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.TaskRun.TaskRun
instance GHC.Show.Show Network.AWS.Glue.Types.TaskRun.TaskRun
instance GHC.Read.Read Network.AWS.Glue.Types.TaskRun.TaskRun
instance GHC.Classes.Eq Network.AWS.Glue.Types.TaskRun.TaskRun
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.TaskRun.TaskRun
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TaskRun.TaskRun
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TaskRun.TaskRun


module Network.AWS.Glue.Types.TaskRunFilterCriteria

-- | The criteria that are used to filter the task runs for the machine
--   learning transform.
--   
--   <i>See:</i> <a>newTaskRunFilterCriteria</a> smart constructor.
data TaskRunFilterCriteria
TaskRunFilterCriteria' :: Maybe TaskStatusType -> Maybe POSIX -> Maybe POSIX -> Maybe TaskType -> TaskRunFilterCriteria

-- | The current status of the task run.
[$sel:status:TaskRunFilterCriteria'] :: TaskRunFilterCriteria -> Maybe TaskStatusType

-- | Filter on task runs started after this date.
[$sel:startedAfter:TaskRunFilterCriteria'] :: TaskRunFilterCriteria -> Maybe POSIX

-- | Filter on task runs started before this date.
[$sel:startedBefore:TaskRunFilterCriteria'] :: TaskRunFilterCriteria -> Maybe POSIX

-- | The type of task run.
[$sel:taskRunType:TaskRunFilterCriteria'] :: TaskRunFilterCriteria -> Maybe TaskType

-- | Create a value of <a>TaskRunFilterCriteria</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:TaskRunFilterCriteria'</a>,
--   <a>taskRunFilterCriteria_status</a> - The current status of the task
--   run.
--   
--   <a>$sel:startedAfter:TaskRunFilterCriteria'</a>,
--   <a>taskRunFilterCriteria_startedAfter</a> - Filter on task runs
--   started after this date.
--   
--   <a>$sel:startedBefore:TaskRunFilterCriteria'</a>,
--   <a>taskRunFilterCriteria_startedBefore</a> - Filter on task runs
--   started before this date.
--   
--   <a>$sel:taskRunType:TaskRunFilterCriteria'</a>,
--   <a>taskRunFilterCriteria_taskRunType</a> - The type of task run.
newTaskRunFilterCriteria :: TaskRunFilterCriteria

-- | The current status of the task run.
taskRunFilterCriteria_status :: Lens' TaskRunFilterCriteria (Maybe TaskStatusType)

-- | Filter on task runs started after this date.
taskRunFilterCriteria_startedAfter :: Lens' TaskRunFilterCriteria (Maybe UTCTime)

-- | Filter on task runs started before this date.
taskRunFilterCriteria_startedBefore :: Lens' TaskRunFilterCriteria (Maybe UTCTime)

-- | The type of task run.
taskRunFilterCriteria_taskRunType :: Lens' TaskRunFilterCriteria (Maybe TaskType)
instance GHC.Generics.Generic Network.AWS.Glue.Types.TaskRunFilterCriteria.TaskRunFilterCriteria
instance GHC.Show.Show Network.AWS.Glue.Types.TaskRunFilterCriteria.TaskRunFilterCriteria
instance GHC.Read.Read Network.AWS.Glue.Types.TaskRunFilterCriteria.TaskRunFilterCriteria
instance GHC.Classes.Eq Network.AWS.Glue.Types.TaskRunFilterCriteria.TaskRunFilterCriteria
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TaskRunFilterCriteria.TaskRunFilterCriteria
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TaskRunFilterCriteria.TaskRunFilterCriteria
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.TaskRunFilterCriteria.TaskRunFilterCriteria


module Network.AWS.Glue.Types.TransformEncryption

-- | The encryption-at-rest settings of the transform that apply to
--   accessing user data. Machine learning transforms can access user data
--   encrypted in Amazon S3 using KMS.
--   
--   Additionally, imported labels and trained transforms can now be
--   encrypted using a customer provided KMS key.
--   
--   <i>See:</i> <a>newTransformEncryption</a> smart constructor.
data TransformEncryption
TransformEncryption' :: Maybe MLUserDataEncryption -> Maybe Text -> TransformEncryption

-- | An <tt>MLUserDataEncryption</tt> object containing the encryption mode
--   and customer-provided KMS key ID.
[$sel:mlUserDataEncryption:TransformEncryption'] :: TransformEncryption -> Maybe MLUserDataEncryption

-- | The name of the security configuration.
[$sel:taskRunSecurityConfigurationName:TransformEncryption'] :: TransformEncryption -> Maybe Text

-- | Create a value of <a>TransformEncryption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mlUserDataEncryption:TransformEncryption'</a>,
--   <a>transformEncryption_mlUserDataEncryption</a> - An
--   <tt>MLUserDataEncryption</tt> object containing the encryption mode
--   and customer-provided KMS key ID.
--   
--   <a>$sel:taskRunSecurityConfigurationName:TransformEncryption'</a>,
--   <a>transformEncryption_taskRunSecurityConfigurationName</a> - The name
--   of the security configuration.
newTransformEncryption :: TransformEncryption

-- | An <tt>MLUserDataEncryption</tt> object containing the encryption mode
--   and customer-provided KMS key ID.
transformEncryption_mlUserDataEncryption :: Lens' TransformEncryption (Maybe MLUserDataEncryption)

-- | The name of the security configuration.
transformEncryption_taskRunSecurityConfigurationName :: Lens' TransformEncryption (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.TransformEncryption.TransformEncryption
instance GHC.Show.Show Network.AWS.Glue.Types.TransformEncryption.TransformEncryption
instance GHC.Read.Read Network.AWS.Glue.Types.TransformEncryption.TransformEncryption
instance GHC.Classes.Eq Network.AWS.Glue.Types.TransformEncryption.TransformEncryption
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.TransformEncryption.TransformEncryption
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TransformEncryption.TransformEncryption
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TransformEncryption.TransformEncryption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.TransformEncryption.TransformEncryption


module Network.AWS.Glue.Types.TransformSortColumnType
newtype TransformSortColumnType
TransformSortColumnType' :: Text -> TransformSortColumnType
[fromTransformSortColumnType] :: TransformSortColumnType -> Text
pattern TransformSortColumnType_CREATED :: TransformSortColumnType
pattern TransformSortColumnType_LAST_MODIFIED :: TransformSortColumnType
pattern TransformSortColumnType_NAME :: TransformSortColumnType
pattern TransformSortColumnType_STATUS :: TransformSortColumnType
pattern TransformSortColumnType_TRANSFORM_TYPE :: TransformSortColumnType
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.TransformSortColumnType.TransformSortColumnType
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.TransformSortColumnType.TransformSortColumnType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.TransformSortColumnType.TransformSortColumnType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.TransformSortColumnType.TransformSortColumnType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.TransformSortColumnType.TransformSortColumnType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.TransformSortColumnType.TransformSortColumnType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.TransformSortColumnType.TransformSortColumnType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.TransformSortColumnType.TransformSortColumnType
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.TransformSortColumnType.TransformSortColumnType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.TransformSortColumnType.TransformSortColumnType
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.TransformSortColumnType.TransformSortColumnType
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.TransformSortColumnType.TransformSortColumnType
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TransformSortColumnType.TransformSortColumnType
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TransformSortColumnType.TransformSortColumnType
instance GHC.Generics.Generic Network.AWS.Glue.Types.TransformSortColumnType.TransformSortColumnType
instance GHC.Classes.Ord Network.AWS.Glue.Types.TransformSortColumnType.TransformSortColumnType
instance GHC.Classes.Eq Network.AWS.Glue.Types.TransformSortColumnType.TransformSortColumnType
instance GHC.Read.Read Network.AWS.Glue.Types.TransformSortColumnType.TransformSortColumnType
instance GHC.Show.Show Network.AWS.Glue.Types.TransformSortColumnType.TransformSortColumnType


module Network.AWS.Glue.Types.TransformSortCriteria

-- | The sorting criteria that are associated with the machine learning
--   transform.
--   
--   <i>See:</i> <a>newTransformSortCriteria</a> smart constructor.
data TransformSortCriteria
TransformSortCriteria' :: TransformSortColumnType -> SortDirectionType -> TransformSortCriteria

-- | The column to be used in the sorting criteria that are associated with
--   the machine learning transform.
[$sel:column:TransformSortCriteria'] :: TransformSortCriteria -> TransformSortColumnType

-- | The sort direction to be used in the sorting criteria that are
--   associated with the machine learning transform.
[$sel:sortDirection:TransformSortCriteria'] :: TransformSortCriteria -> SortDirectionType

-- | Create a value of <a>TransformSortCriteria</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:column:TransformSortCriteria'</a>,
--   <a>transformSortCriteria_column</a> - The column to be used in the
--   sorting criteria that are associated with the machine learning
--   transform.
--   
--   <a>$sel:sortDirection:TransformSortCriteria'</a>,
--   <a>transformSortCriteria_sortDirection</a> - The sort direction to be
--   used in the sorting criteria that are associated with the machine
--   learning transform.
newTransformSortCriteria :: TransformSortColumnType -> SortDirectionType -> TransformSortCriteria

-- | The column to be used in the sorting criteria that are associated with
--   the machine learning transform.
transformSortCriteria_column :: Lens' TransformSortCriteria TransformSortColumnType

-- | The sort direction to be used in the sorting criteria that are
--   associated with the machine learning transform.
transformSortCriteria_sortDirection :: Lens' TransformSortCriteria SortDirectionType
instance GHC.Generics.Generic Network.AWS.Glue.Types.TransformSortCriteria.TransformSortCriteria
instance GHC.Show.Show Network.AWS.Glue.Types.TransformSortCriteria.TransformSortCriteria
instance GHC.Read.Read Network.AWS.Glue.Types.TransformSortCriteria.TransformSortCriteria
instance GHC.Classes.Eq Network.AWS.Glue.Types.TransformSortCriteria.TransformSortCriteria
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TransformSortCriteria.TransformSortCriteria
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TransformSortCriteria.TransformSortCriteria
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.TransformSortCriteria.TransformSortCriteria


module Network.AWS.Glue.Types.TransformStatusType
newtype TransformStatusType
TransformStatusType' :: Text -> TransformStatusType
[fromTransformStatusType] :: TransformStatusType -> Text
pattern TransformStatusType_DELETING :: TransformStatusType
pattern TransformStatusType_NOT_READY :: TransformStatusType
pattern TransformStatusType_READY :: TransformStatusType
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.TransformStatusType.TransformStatusType
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.TransformStatusType.TransformStatusType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.TransformStatusType.TransformStatusType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.TransformStatusType.TransformStatusType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.TransformStatusType.TransformStatusType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.TransformStatusType.TransformStatusType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.TransformStatusType.TransformStatusType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.TransformStatusType.TransformStatusType
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.TransformStatusType.TransformStatusType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.TransformStatusType.TransformStatusType
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.TransformStatusType.TransformStatusType
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.TransformStatusType.TransformStatusType
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TransformStatusType.TransformStatusType
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TransformStatusType.TransformStatusType
instance GHC.Generics.Generic Network.AWS.Glue.Types.TransformStatusType.TransformStatusType
instance GHC.Classes.Ord Network.AWS.Glue.Types.TransformStatusType.TransformStatusType
instance GHC.Classes.Eq Network.AWS.Glue.Types.TransformStatusType.TransformStatusType
instance GHC.Read.Read Network.AWS.Glue.Types.TransformStatusType.TransformStatusType
instance GHC.Show.Show Network.AWS.Glue.Types.TransformStatusType.TransformStatusType


module Network.AWS.Glue.Types.TransformType
newtype TransformType
TransformType' :: Text -> TransformType
[fromTransformType] :: TransformType -> Text
pattern TransformType_FIND_MATCHES :: TransformType
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.TransformType.TransformType
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.TransformType.TransformType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.TransformType.TransformType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.TransformType.TransformType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.TransformType.TransformType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.TransformType.TransformType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.TransformType.TransformType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.TransformType.TransformType
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.TransformType.TransformType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.TransformType.TransformType
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.TransformType.TransformType
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.TransformType.TransformType
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TransformType.TransformType
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TransformType.TransformType
instance GHC.Generics.Generic Network.AWS.Glue.Types.TransformType.TransformType
instance GHC.Classes.Ord Network.AWS.Glue.Types.TransformType.TransformType
instance GHC.Classes.Eq Network.AWS.Glue.Types.TransformType.TransformType
instance GHC.Read.Read Network.AWS.Glue.Types.TransformType.TransformType
instance GHC.Show.Show Network.AWS.Glue.Types.TransformType.TransformType


module Network.AWS.Glue.Types.TransformParameters

-- | The algorithm-specific parameters that are associated with the machine
--   learning transform.
--   
--   <i>See:</i> <a>newTransformParameters</a> smart constructor.
data TransformParameters
TransformParameters' :: Maybe FindMatchesParameters -> TransformType -> TransformParameters

-- | The parameters for the find matches algorithm.
[$sel:findMatchesParameters:TransformParameters'] :: TransformParameters -> Maybe FindMatchesParameters

-- | The type of machine learning transform.
--   
--   For information about the types of machine learning transforms, see
--   <a>Creating Machine Learning Transforms</a>.
[$sel:transformType:TransformParameters'] :: TransformParameters -> TransformType

-- | Create a value of <a>TransformParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:findMatchesParameters:TransformParameters'</a>,
--   <a>transformParameters_findMatchesParameters</a> - The parameters for
--   the find matches algorithm.
--   
--   <a>$sel:transformType:TransformParameters'</a>,
--   <a>transformParameters_transformType</a> - The type of machine
--   learning transform.
--   
--   For information about the types of machine learning transforms, see
--   <a>Creating Machine Learning Transforms</a>.
newTransformParameters :: TransformType -> TransformParameters

-- | The parameters for the find matches algorithm.
transformParameters_findMatchesParameters :: Lens' TransformParameters (Maybe FindMatchesParameters)

-- | The type of machine learning transform.
--   
--   For information about the types of machine learning transforms, see
--   <a>Creating Machine Learning Transforms</a>.
transformParameters_transformType :: Lens' TransformParameters TransformType
instance GHC.Generics.Generic Network.AWS.Glue.Types.TransformParameters.TransformParameters
instance GHC.Show.Show Network.AWS.Glue.Types.TransformParameters.TransformParameters
instance GHC.Read.Read Network.AWS.Glue.Types.TransformParameters.TransformParameters
instance GHC.Classes.Eq Network.AWS.Glue.Types.TransformParameters.TransformParameters
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.TransformParameters.TransformParameters
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TransformParameters.TransformParameters
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TransformParameters.TransformParameters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.TransformParameters.TransformParameters


module Network.AWS.Glue.Types.TransformFilterCriteria

-- | The criteria used to filter the machine learning transforms.
--   
--   <i>See:</i> <a>newTransformFilterCriteria</a> smart constructor.
data TransformFilterCriteria
TransformFilterCriteria' :: Maybe POSIX -> Maybe TransformStatusType -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe [SchemaColumn] -> Maybe TransformType -> Maybe Text -> Maybe POSIX -> TransformFilterCriteria

-- | The time and date after which the transforms were created.
[$sel:createdAfter:TransformFilterCriteria'] :: TransformFilterCriteria -> Maybe POSIX

-- | Filters the list of machine learning transforms by the last known
--   status of the transforms (to indicate whether a transform can be used
--   or not). One of "NOT_READY", "READY", or "DELETING".
[$sel:status:TransformFilterCriteria'] :: TransformFilterCriteria -> Maybe TransformStatusType

-- | Filter on transforms last modified after this date.
[$sel:lastModifiedAfter:TransformFilterCriteria'] :: TransformFilterCriteria -> Maybe POSIX

-- | Filter on transforms last modified before this date.
[$sel:lastModifiedBefore:TransformFilterCriteria'] :: TransformFilterCriteria -> Maybe POSIX

-- | This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
[$sel:glueVersion:TransformFilterCriteria'] :: TransformFilterCriteria -> Maybe Text

-- | Filters on datasets with a specific schema. The <tt>Map&lt;Column,
--   Type&gt;</tt> object is an array of key-value pairs representing the
--   schema this transform accepts, where <tt>Column</tt> is the name of a
--   column, and <tt>Type</tt> is the type of the data such as an integer
--   or string. Has an upper bound of 100 columns.
[$sel:schema:TransformFilterCriteria'] :: TransformFilterCriteria -> Maybe [SchemaColumn]

-- | The type of machine learning transform that is used to filter the
--   machine learning transforms.
[$sel:transformType:TransformFilterCriteria'] :: TransformFilterCriteria -> Maybe TransformType

-- | A unique transform name that is used to filter the machine learning
--   transforms.
[$sel:name:TransformFilterCriteria'] :: TransformFilterCriteria -> Maybe Text

-- | The time and date before which the transforms were created.
[$sel:createdBefore:TransformFilterCriteria'] :: TransformFilterCriteria -> Maybe POSIX

-- | Create a value of <a>TransformFilterCriteria</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAfter:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_createdAfter</a> - The time and date after
--   which the transforms were created.
--   
--   <a>$sel:status:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_status</a> - Filters the list of machine
--   learning transforms by the last known status of the transforms (to
--   indicate whether a transform can be used or not). One of "NOT_READY",
--   "READY", or "DELETING".
--   
--   <a>$sel:lastModifiedAfter:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_lastModifiedAfter</a> - Filter on
--   transforms last modified after this date.
--   
--   <a>$sel:lastModifiedBefore:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_lastModifiedBefore</a> - Filter on
--   transforms last modified before this date.
--   
--   <a>$sel:glueVersion:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_glueVersion</a> - This value determines
--   which version of Glue this machine learning transform is compatible
--   with. Glue 1.0 is recommended for most customers. If the value is not
--   set, the Glue compatibility defaults to Glue 0.9. For more
--   information, see <a>Glue Versions</a> in the developer guide.
--   
--   <a>$sel:schema:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_schema</a> - Filters on datasets with a
--   specific schema. The <tt>Map&lt;Column, Type&gt;</tt> object is an
--   array of key-value pairs representing the schema this transform
--   accepts, where <tt>Column</tt> is the name of a column, and
--   <tt>Type</tt> is the type of the data such as an integer or string.
--   Has an upper bound of 100 columns.
--   
--   <a>$sel:transformType:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_transformType</a> - The type of machine
--   learning transform that is used to filter the machine learning
--   transforms.
--   
--   <a>$sel:name:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_name</a> - A unique transform name that is
--   used to filter the machine learning transforms.
--   
--   <a>$sel:createdBefore:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_createdBefore</a> - The time and date
--   before which the transforms were created.
newTransformFilterCriteria :: TransformFilterCriteria

-- | The time and date after which the transforms were created.
transformFilterCriteria_createdAfter :: Lens' TransformFilterCriteria (Maybe UTCTime)

-- | Filters the list of machine learning transforms by the last known
--   status of the transforms (to indicate whether a transform can be used
--   or not). One of "NOT_READY", "READY", or "DELETING".
transformFilterCriteria_status :: Lens' TransformFilterCriteria (Maybe TransformStatusType)

-- | Filter on transforms last modified after this date.
transformFilterCriteria_lastModifiedAfter :: Lens' TransformFilterCriteria (Maybe UTCTime)

-- | Filter on transforms last modified before this date.
transformFilterCriteria_lastModifiedBefore :: Lens' TransformFilterCriteria (Maybe UTCTime)

-- | This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
transformFilterCriteria_glueVersion :: Lens' TransformFilterCriteria (Maybe Text)

-- | Filters on datasets with a specific schema. The <tt>Map&lt;Column,
--   Type&gt;</tt> object is an array of key-value pairs representing the
--   schema this transform accepts, where <tt>Column</tt> is the name of a
--   column, and <tt>Type</tt> is the type of the data such as an integer
--   or string. Has an upper bound of 100 columns.
transformFilterCriteria_schema :: Lens' TransformFilterCriteria (Maybe [SchemaColumn])

-- | The type of machine learning transform that is used to filter the
--   machine learning transforms.
transformFilterCriteria_transformType :: Lens' TransformFilterCriteria (Maybe TransformType)

-- | A unique transform name that is used to filter the machine learning
--   transforms.
transformFilterCriteria_name :: Lens' TransformFilterCriteria (Maybe Text)

-- | The time and date before which the transforms were created.
transformFilterCriteria_createdBefore :: Lens' TransformFilterCriteria (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.Glue.Types.TransformFilterCriteria.TransformFilterCriteria
instance GHC.Show.Show Network.AWS.Glue.Types.TransformFilterCriteria.TransformFilterCriteria
instance GHC.Read.Read Network.AWS.Glue.Types.TransformFilterCriteria.TransformFilterCriteria
instance GHC.Classes.Eq Network.AWS.Glue.Types.TransformFilterCriteria.TransformFilterCriteria
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TransformFilterCriteria.TransformFilterCriteria
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TransformFilterCriteria.TransformFilterCriteria
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.TransformFilterCriteria.TransformFilterCriteria


module Network.AWS.Glue.Types.EvaluationMetrics

-- | Evaluation metrics provide an estimate of the quality of your machine
--   learning transform.
--   
--   <i>See:</i> <a>newEvaluationMetrics</a> smart constructor.
data EvaluationMetrics
EvaluationMetrics' :: Maybe FindMatchesMetrics -> TransformType -> EvaluationMetrics

-- | The evaluation metrics for the find matches algorithm.
[$sel:findMatchesMetrics:EvaluationMetrics'] :: EvaluationMetrics -> Maybe FindMatchesMetrics

-- | The type of machine learning transform.
[$sel:transformType:EvaluationMetrics'] :: EvaluationMetrics -> TransformType

-- | Create a value of <a>EvaluationMetrics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:findMatchesMetrics:EvaluationMetrics'</a>,
--   <a>evaluationMetrics_findMatchesMetrics</a> - The evaluation metrics
--   for the find matches algorithm.
--   
--   <a>$sel:transformType:EvaluationMetrics'</a>,
--   <a>evaluationMetrics_transformType</a> - The type of machine learning
--   transform.
newEvaluationMetrics :: TransformType -> EvaluationMetrics

-- | The evaluation metrics for the find matches algorithm.
evaluationMetrics_findMatchesMetrics :: Lens' EvaluationMetrics (Maybe FindMatchesMetrics)

-- | The type of machine learning transform.
evaluationMetrics_transformType :: Lens' EvaluationMetrics TransformType
instance GHC.Generics.Generic Network.AWS.Glue.Types.EvaluationMetrics.EvaluationMetrics
instance GHC.Show.Show Network.AWS.Glue.Types.EvaluationMetrics.EvaluationMetrics
instance GHC.Read.Read Network.AWS.Glue.Types.EvaluationMetrics.EvaluationMetrics
instance GHC.Classes.Eq Network.AWS.Glue.Types.EvaluationMetrics.EvaluationMetrics
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.EvaluationMetrics.EvaluationMetrics
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.EvaluationMetrics.EvaluationMetrics
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.EvaluationMetrics.EvaluationMetrics


module Network.AWS.Glue.Types.TriggerState
newtype TriggerState
TriggerState' :: Text -> TriggerState
[fromTriggerState] :: TriggerState -> Text
pattern TriggerState_ACTIVATED :: TriggerState
pattern TriggerState_ACTIVATING :: TriggerState
pattern TriggerState_CREATED :: TriggerState
pattern TriggerState_CREATING :: TriggerState
pattern TriggerState_DEACTIVATED :: TriggerState
pattern TriggerState_DEACTIVATING :: TriggerState
pattern TriggerState_DELETING :: TriggerState
pattern TriggerState_UPDATING :: TriggerState
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.TriggerState.TriggerState
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.TriggerState.TriggerState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.TriggerState.TriggerState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.TriggerState.TriggerState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.TriggerState.TriggerState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.TriggerState.TriggerState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.TriggerState.TriggerState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.TriggerState.TriggerState
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.TriggerState.TriggerState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.TriggerState.TriggerState
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.TriggerState.TriggerState
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.TriggerState.TriggerState
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TriggerState.TriggerState
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TriggerState.TriggerState
instance GHC.Generics.Generic Network.AWS.Glue.Types.TriggerState.TriggerState
instance GHC.Classes.Ord Network.AWS.Glue.Types.TriggerState.TriggerState
instance GHC.Classes.Eq Network.AWS.Glue.Types.TriggerState.TriggerState
instance GHC.Read.Read Network.AWS.Glue.Types.TriggerState.TriggerState
instance GHC.Show.Show Network.AWS.Glue.Types.TriggerState.TriggerState


module Network.AWS.Glue.Types.TriggerType
newtype TriggerType
TriggerType' :: Text -> TriggerType
[fromTriggerType] :: TriggerType -> Text
pattern TriggerType_CONDITIONAL :: TriggerType
pattern TriggerType_EVENT :: TriggerType
pattern TriggerType_ON_DEMAND :: TriggerType
pattern TriggerType_SCHEDULED :: TriggerType
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.TriggerType.TriggerType
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.TriggerType.TriggerType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.TriggerType.TriggerType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.TriggerType.TriggerType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.TriggerType.TriggerType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.TriggerType.TriggerType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.TriggerType.TriggerType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.TriggerType.TriggerType
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.TriggerType.TriggerType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.TriggerType.TriggerType
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.TriggerType.TriggerType
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.TriggerType.TriggerType
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TriggerType.TriggerType
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TriggerType.TriggerType
instance GHC.Generics.Generic Network.AWS.Glue.Types.TriggerType.TriggerType
instance GHC.Classes.Ord Network.AWS.Glue.Types.TriggerType.TriggerType
instance GHC.Classes.Eq Network.AWS.Glue.Types.TriggerType.TriggerType
instance GHC.Read.Read Network.AWS.Glue.Types.TriggerType.TriggerType
instance GHC.Show.Show Network.AWS.Glue.Types.TriggerType.TriggerType


module Network.AWS.Glue.Types.Trigger

-- | Information about a specific trigger.
--   
--   <i>See:</i> <a>newTrigger</a> smart constructor.
data Trigger
Trigger' :: Maybe Text -> Maybe TriggerState -> Maybe [Action] -> Maybe Text -> Maybe Predicate -> Maybe Text -> Maybe Text -> Maybe TriggerType -> Maybe EventBatchingCondition -> Maybe Text -> Trigger

-- | The name of the workflow associated with the trigger.
[$sel:workflowName:Trigger'] :: Trigger -> Maybe Text

-- | The current state of the trigger.
[$sel:state:Trigger'] :: Trigger -> Maybe TriggerState

-- | The actions initiated by this trigger.
[$sel:actions:Trigger'] :: Trigger -> Maybe [Action]

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
[$sel:schedule:Trigger'] :: Trigger -> Maybe Text

-- | The predicate of this trigger, which defines when it will fire.
[$sel:predicate:Trigger'] :: Trigger -> Maybe Predicate

-- | The name of the trigger.
[$sel:name:Trigger'] :: Trigger -> Maybe Text

-- | Reserved for future use.
[$sel:id:Trigger'] :: Trigger -> Maybe Text

-- | The type of trigger that this is.
[$sel:type':Trigger'] :: Trigger -> Maybe TriggerType

-- | Batch condition that must be met (specified number of events received
--   or batch time window expired) before EventBridge event trigger fires.
[$sel:eventBatchingCondition:Trigger'] :: Trigger -> Maybe EventBatchingCondition

-- | A description of this trigger.
[$sel:description:Trigger'] :: Trigger -> Maybe Text

-- | Create a value of <a>Trigger</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workflowName:Trigger'</a>, <a>trigger_workflowName</a> - The
--   name of the workflow associated with the trigger.
--   
--   <a>$sel:state:Trigger'</a>, <a>trigger_state</a> - The current state
--   of the trigger.
--   
--   <a>$sel:actions:Trigger'</a>, <a>trigger_actions</a> - The actions
--   initiated by this trigger.
--   
--   <a>$sel:schedule:Trigger'</a>, <a>trigger_schedule</a> - A
--   <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
--   
--   <a>$sel:predicate:Trigger'</a>, <a>trigger_predicate</a> - The
--   predicate of this trigger, which defines when it will fire.
--   
--   <a>$sel:name:Trigger'</a>, <a>trigger_name</a> - The name of the
--   trigger.
--   
--   <a>$sel:id:Trigger'</a>, <a>trigger_id</a> - Reserved for future use.
--   
--   <a>$sel:type':Trigger'</a>, <a>trigger_type</a> - The type of trigger
--   that this is.
--   
--   <a>$sel:eventBatchingCondition:Trigger'</a>,
--   <a>trigger_eventBatchingCondition</a> - Batch condition that must be
--   met (specified number of events received or batch time window expired)
--   before EventBridge event trigger fires.
--   
--   <a>$sel:description:Trigger'</a>, <a>trigger_description</a> - A
--   description of this trigger.
newTrigger :: Trigger

-- | The name of the workflow associated with the trigger.
trigger_workflowName :: Lens' Trigger (Maybe Text)

-- | The current state of the trigger.
trigger_state :: Lens' Trigger (Maybe TriggerState)

-- | The actions initiated by this trigger.
trigger_actions :: Lens' Trigger (Maybe [Action])

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
trigger_schedule :: Lens' Trigger (Maybe Text)

-- | The predicate of this trigger, which defines when it will fire.
trigger_predicate :: Lens' Trigger (Maybe Predicate)

-- | The name of the trigger.
trigger_name :: Lens' Trigger (Maybe Text)

-- | Reserved for future use.
trigger_id :: Lens' Trigger (Maybe Text)

-- | The type of trigger that this is.
trigger_type :: Lens' Trigger (Maybe TriggerType)

-- | Batch condition that must be met (specified number of events received
--   or batch time window expired) before EventBridge event trigger fires.
trigger_eventBatchingCondition :: Lens' Trigger (Maybe EventBatchingCondition)

-- | A description of this trigger.
trigger_description :: Lens' Trigger (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.Trigger.Trigger
instance GHC.Show.Show Network.AWS.Glue.Types.Trigger.Trigger
instance GHC.Read.Read Network.AWS.Glue.Types.Trigger.Trigger
instance GHC.Classes.Eq Network.AWS.Glue.Types.Trigger.Trigger
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Trigger.Trigger
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Trigger.Trigger
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Trigger.Trigger


module Network.AWS.Glue.Types.TriggerNodeDetails

-- | The details of a Trigger node present in the workflow.
--   
--   <i>See:</i> <a>newTriggerNodeDetails</a> smart constructor.
data TriggerNodeDetails
TriggerNodeDetails' :: Maybe Trigger -> TriggerNodeDetails

-- | The information of the trigger represented by the trigger node.
[$sel:trigger:TriggerNodeDetails'] :: TriggerNodeDetails -> Maybe Trigger

-- | Create a value of <a>TriggerNodeDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trigger:TriggerNodeDetails'</a>,
--   <a>triggerNodeDetails_trigger</a> - The information of the trigger
--   represented by the trigger node.
newTriggerNodeDetails :: TriggerNodeDetails

-- | The information of the trigger represented by the trigger node.
triggerNodeDetails_trigger :: Lens' TriggerNodeDetails (Maybe Trigger)
instance GHC.Generics.Generic Network.AWS.Glue.Types.TriggerNodeDetails.TriggerNodeDetails
instance GHC.Show.Show Network.AWS.Glue.Types.TriggerNodeDetails.TriggerNodeDetails
instance GHC.Read.Read Network.AWS.Glue.Types.TriggerNodeDetails.TriggerNodeDetails
instance GHC.Classes.Eq Network.AWS.Glue.Types.TriggerNodeDetails.TriggerNodeDetails
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.TriggerNodeDetails.TriggerNodeDetails
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TriggerNodeDetails.TriggerNodeDetails
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TriggerNodeDetails.TriggerNodeDetails


module Network.AWS.Glue.Types.TriggerUpdate

-- | A structure used to provide information used to update a trigger. This
--   object updates the previous trigger definition by overwriting it
--   completely.
--   
--   <i>See:</i> <a>newTriggerUpdate</a> smart constructor.
data TriggerUpdate
TriggerUpdate' :: Maybe [Action] -> Maybe Text -> Maybe Predicate -> Maybe Text -> Maybe EventBatchingCondition -> Maybe Text -> TriggerUpdate

-- | The actions initiated by this trigger.
[$sel:actions:TriggerUpdate'] :: TriggerUpdate -> Maybe [Action]

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
[$sel:schedule:TriggerUpdate'] :: TriggerUpdate -> Maybe Text

-- | The predicate of this trigger, which defines when it will fire.
[$sel:predicate:TriggerUpdate'] :: TriggerUpdate -> Maybe Predicate

-- | Reserved for future use.
[$sel:name:TriggerUpdate'] :: TriggerUpdate -> Maybe Text

-- | Batch condition that must be met (specified number of events received
--   or batch time window expired) before EventBridge event trigger fires.
[$sel:eventBatchingCondition:TriggerUpdate'] :: TriggerUpdate -> Maybe EventBatchingCondition

-- | A description of this trigger.
[$sel:description:TriggerUpdate'] :: TriggerUpdate -> Maybe Text

-- | Create a value of <a>TriggerUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actions:TriggerUpdate'</a>, <a>triggerUpdate_actions</a> - The
--   actions initiated by this trigger.
--   
--   <a>$sel:schedule:TriggerUpdate'</a>, <a>triggerUpdate_schedule</a> - A
--   <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
--   
--   <a>$sel:predicate:TriggerUpdate'</a>, <a>triggerUpdate_predicate</a> -
--   The predicate of this trigger, which defines when it will fire.
--   
--   <a>$sel:name:TriggerUpdate'</a>, <a>triggerUpdate_name</a> - Reserved
--   for future use.
--   
--   <a>$sel:eventBatchingCondition:TriggerUpdate'</a>,
--   <a>triggerUpdate_eventBatchingCondition</a> - Batch condition that
--   must be met (specified number of events received or batch time window
--   expired) before EventBridge event trigger fires.
--   
--   <a>$sel:description:TriggerUpdate'</a>,
--   <a>triggerUpdate_description</a> - A description of this trigger.
newTriggerUpdate :: TriggerUpdate

-- | The actions initiated by this trigger.
triggerUpdate_actions :: Lens' TriggerUpdate (Maybe [Action])

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
triggerUpdate_schedule :: Lens' TriggerUpdate (Maybe Text)

-- | The predicate of this trigger, which defines when it will fire.
triggerUpdate_predicate :: Lens' TriggerUpdate (Maybe Predicate)

-- | Reserved for future use.
triggerUpdate_name :: Lens' TriggerUpdate (Maybe Text)

-- | Batch condition that must be met (specified number of events received
--   or batch time window expired) before EventBridge event trigger fires.
triggerUpdate_eventBatchingCondition :: Lens' TriggerUpdate (Maybe EventBatchingCondition)

-- | A description of this trigger.
triggerUpdate_description :: Lens' TriggerUpdate (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.TriggerUpdate.TriggerUpdate
instance GHC.Show.Show Network.AWS.Glue.Types.TriggerUpdate.TriggerUpdate
instance GHC.Read.Read Network.AWS.Glue.Types.TriggerUpdate.TriggerUpdate
instance GHC.Classes.Eq Network.AWS.Glue.Types.TriggerUpdate.TriggerUpdate
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.TriggerUpdate.TriggerUpdate
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.TriggerUpdate.TriggerUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.TriggerUpdate.TriggerUpdate


module Network.AWS.Glue.Types.UpdateBehavior
newtype UpdateBehavior
UpdateBehavior' :: Text -> UpdateBehavior
[fromUpdateBehavior] :: UpdateBehavior -> Text
pattern UpdateBehavior_LOG :: UpdateBehavior
pattern UpdateBehavior_UPDATE_IN_DATABASE :: UpdateBehavior
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.UpdateBehavior.UpdateBehavior
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.UpdateBehavior.UpdateBehavior
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.UpdateBehavior.UpdateBehavior
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.UpdateBehavior.UpdateBehavior
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.UpdateBehavior.UpdateBehavior
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.UpdateBehavior.UpdateBehavior
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.UpdateBehavior.UpdateBehavior
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.UpdateBehavior.UpdateBehavior
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.UpdateBehavior.UpdateBehavior
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.UpdateBehavior.UpdateBehavior
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.UpdateBehavior.UpdateBehavior
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.UpdateBehavior.UpdateBehavior
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.UpdateBehavior.UpdateBehavior
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.UpdateBehavior.UpdateBehavior
instance GHC.Generics.Generic Network.AWS.Glue.Types.UpdateBehavior.UpdateBehavior
instance GHC.Classes.Ord Network.AWS.Glue.Types.UpdateBehavior.UpdateBehavior
instance GHC.Classes.Eq Network.AWS.Glue.Types.UpdateBehavior.UpdateBehavior
instance GHC.Read.Read Network.AWS.Glue.Types.UpdateBehavior.UpdateBehavior
instance GHC.Show.Show Network.AWS.Glue.Types.UpdateBehavior.UpdateBehavior


module Network.AWS.Glue.Types.SchemaChangePolicy

-- | A policy that specifies update and deletion behaviors for the crawler.
--   
--   <i>See:</i> <a>newSchemaChangePolicy</a> smart constructor.
data SchemaChangePolicy
SchemaChangePolicy' :: Maybe DeleteBehavior -> Maybe UpdateBehavior -> SchemaChangePolicy

-- | The deletion behavior when the crawler finds a deleted object.
[$sel:deleteBehavior:SchemaChangePolicy'] :: SchemaChangePolicy -> Maybe DeleteBehavior

-- | The update behavior when the crawler finds a changed schema.
[$sel:updateBehavior:SchemaChangePolicy'] :: SchemaChangePolicy -> Maybe UpdateBehavior

-- | Create a value of <a>SchemaChangePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deleteBehavior:SchemaChangePolicy'</a>,
--   <a>schemaChangePolicy_deleteBehavior</a> - The deletion behavior when
--   the crawler finds a deleted object.
--   
--   <a>$sel:updateBehavior:SchemaChangePolicy'</a>,
--   <a>schemaChangePolicy_updateBehavior</a> - The update behavior when
--   the crawler finds a changed schema.
newSchemaChangePolicy :: SchemaChangePolicy

-- | The deletion behavior when the crawler finds a deleted object.
schemaChangePolicy_deleteBehavior :: Lens' SchemaChangePolicy (Maybe DeleteBehavior)

-- | The update behavior when the crawler finds a changed schema.
schemaChangePolicy_updateBehavior :: Lens' SchemaChangePolicy (Maybe UpdateBehavior)
instance GHC.Generics.Generic Network.AWS.Glue.Types.SchemaChangePolicy.SchemaChangePolicy
instance GHC.Show.Show Network.AWS.Glue.Types.SchemaChangePolicy.SchemaChangePolicy
instance GHC.Read.Read Network.AWS.Glue.Types.SchemaChangePolicy.SchemaChangePolicy
instance GHC.Classes.Eq Network.AWS.Glue.Types.SchemaChangePolicy.SchemaChangePolicy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.SchemaChangePolicy.SchemaChangePolicy
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.SchemaChangePolicy.SchemaChangePolicy
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.SchemaChangePolicy.SchemaChangePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.SchemaChangePolicy.SchemaChangePolicy


module Network.AWS.Glue.Types.Crawler

-- | Specifies a crawler program that examines a data source and uses
--   classifiers to try to determine its schema. If successful, the crawler
--   records metadata concerning the data source in the Glue Data Catalog.
--   
--   <i>See:</i> <a>newCrawler</a> smart constructor.
data Crawler
Crawler' :: Maybe POSIX -> Maybe CrawlerState -> Maybe SchemaChangePolicy -> Maybe POSIX -> Maybe Schedule -> Maybe LastCrawlInfo -> Maybe Integer -> Maybe RecrawlPolicy -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe CrawlerTargets -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe LineageConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Crawler

-- | The time that the crawler was created.
[$sel:creationTime:Crawler'] :: Crawler -> Maybe POSIX

-- | Indicates whether the crawler is running, or whether a run is pending.
[$sel:state:Crawler'] :: Crawler -> Maybe CrawlerState

-- | The policy that specifies update and delete behaviors for the crawler.
[$sel:schemaChangePolicy:Crawler'] :: Crawler -> Maybe SchemaChangePolicy

-- | The time that the crawler was last updated.
[$sel:lastUpdated:Crawler'] :: Crawler -> Maybe POSIX

-- | For scheduled crawlers, the schedule when the crawler runs.
[$sel:schedule:Crawler'] :: Crawler -> Maybe Schedule

-- | The status of the last crawl, and potentially error information if an
--   error occurred.
[$sel:lastCrawl:Crawler'] :: Crawler -> Maybe LastCrawlInfo

-- | If the crawler is running, contains the total time elapsed since the
--   last crawl began.
[$sel:crawlElapsedTime:Crawler'] :: Crawler -> Maybe Integer

-- | A policy that specifies whether to crawl the entire dataset again, or
--   to crawl only folders that were added since the last crawler run.
[$sel:recrawlPolicy:Crawler'] :: Crawler -> Maybe RecrawlPolicy

-- | A list of UTF-8 strings that specify the custom classifiers that are
--   associated with the crawler.
[$sel:classifiers:Crawler'] :: Crawler -> Maybe [Text]

-- | The Amazon Resource Name (ARN) of an IAM role that's used to access
--   customer resources, such as Amazon Simple Storage Service (Amazon S3)
--   data.
[$sel:role':Crawler'] :: Crawler -> Maybe Text

-- | The name of the crawler.
[$sel:name:Crawler'] :: Crawler -> Maybe Text

-- | A collection of targets to crawl.
[$sel:targets:Crawler'] :: Crawler -> Maybe CrawlerTargets

-- | The version of the crawler.
[$sel:version:Crawler'] :: Crawler -> Maybe Integer

-- | The name of the database in which the crawler's output is stored.
[$sel:databaseName:Crawler'] :: Crawler -> Maybe Text

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used by
--   this crawler.
[$sel:crawlerSecurityConfiguration:Crawler'] :: Crawler -> Maybe Text

-- | A configuration that specifies whether data lineage is enabled for the
--   crawler.
[$sel:lineageConfiguration:Crawler'] :: Crawler -> Maybe LineageConfiguration

-- | Crawler configuration information. This versioned JSON string allows
--   users to specify aspects of a crawler's behavior. For more
--   information, see <a>Include and Exclude Patterns</a>.
[$sel:configuration:Crawler'] :: Crawler -> Maybe Text

-- | The prefix added to the names of tables that are created.
[$sel:tablePrefix:Crawler'] :: Crawler -> Maybe Text

-- | A description of the crawler.
[$sel:description:Crawler'] :: Crawler -> Maybe Text

-- | Create a value of <a>Crawler</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Crawler'</a>, <a>crawler_creationTime</a> - The
--   time that the crawler was created.
--   
--   <a>$sel:state:Crawler'</a>, <a>crawler_state</a> - Indicates whether
--   the crawler is running, or whether a run is pending.
--   
--   <a>$sel:schemaChangePolicy:Crawler'</a>,
--   <a>crawler_schemaChangePolicy</a> - The policy that specifies update
--   and delete behaviors for the crawler.
--   
--   <a>$sel:lastUpdated:Crawler'</a>, <a>crawler_lastUpdated</a> - The
--   time that the crawler was last updated.
--   
--   <a>$sel:schedule:Crawler'</a>, <a>crawler_schedule</a> - For scheduled
--   crawlers, the schedule when the crawler runs.
--   
--   <a>$sel:lastCrawl:Crawler'</a>, <a>crawler_lastCrawl</a> - The status
--   of the last crawl, and potentially error information if an error
--   occurred.
--   
--   <a>$sel:crawlElapsedTime:Crawler'</a>, <a>crawler_crawlElapsedTime</a>
--   - If the crawler is running, contains the total time elapsed since the
--   last crawl began.
--   
--   <a>$sel:recrawlPolicy:Crawler'</a>, <a>crawler_recrawlPolicy</a> - A
--   policy that specifies whether to crawl the entire dataset again, or to
--   crawl only folders that were added since the last crawler run.
--   
--   <a>$sel:classifiers:Crawler'</a>, <a>crawler_classifiers</a> - A list
--   of UTF-8 strings that specify the custom classifiers that are
--   associated with the crawler.
--   
--   <a>$sel:role':Crawler'</a>, <a>crawler_role</a> - The Amazon Resource
--   Name (ARN) of an IAM role that's used to access customer resources,
--   such as Amazon Simple Storage Service (Amazon S3) data.
--   
--   <a>$sel:name:Crawler'</a>, <a>crawler_name</a> - The name of the
--   crawler.
--   
--   <a>$sel:targets:Crawler'</a>, <a>crawler_targets</a> - A collection of
--   targets to crawl.
--   
--   <a>$sel:version:Crawler'</a>, <a>crawler_version</a> - The version of
--   the crawler.
--   
--   <a>$sel:databaseName:Crawler'</a>, <a>crawler_databaseName</a> - The
--   name of the database in which the crawler's output is stored.
--   
--   <a>$sel:crawlerSecurityConfiguration:Crawler'</a>,
--   <a>crawler_crawlerSecurityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used by this crawler.
--   
--   <a>$sel:lineageConfiguration:Crawler'</a>,
--   <a>crawler_lineageConfiguration</a> - A configuration that specifies
--   whether data lineage is enabled for the crawler.
--   
--   <a>$sel:configuration:Crawler'</a>, <a>crawler_configuration</a> -
--   Crawler configuration information. This versioned JSON string allows
--   users to specify aspects of a crawler's behavior. For more
--   information, see <a>Include and Exclude Patterns</a>.
--   
--   <a>$sel:tablePrefix:Crawler'</a>, <a>crawler_tablePrefix</a> - The
--   prefix added to the names of tables that are created.
--   
--   <a>$sel:description:Crawler'</a>, <a>crawler_description</a> - A
--   description of the crawler.
newCrawler :: Crawler

-- | The time that the crawler was created.
crawler_creationTime :: Lens' Crawler (Maybe UTCTime)

-- | Indicates whether the crawler is running, or whether a run is pending.
crawler_state :: Lens' Crawler (Maybe CrawlerState)

-- | The policy that specifies update and delete behaviors for the crawler.
crawler_schemaChangePolicy :: Lens' Crawler (Maybe SchemaChangePolicy)

-- | The time that the crawler was last updated.
crawler_lastUpdated :: Lens' Crawler (Maybe UTCTime)

-- | For scheduled crawlers, the schedule when the crawler runs.
crawler_schedule :: Lens' Crawler (Maybe Schedule)

-- | The status of the last crawl, and potentially error information if an
--   error occurred.
crawler_lastCrawl :: Lens' Crawler (Maybe LastCrawlInfo)

-- | If the crawler is running, contains the total time elapsed since the
--   last crawl began.
crawler_crawlElapsedTime :: Lens' Crawler (Maybe Integer)

-- | A policy that specifies whether to crawl the entire dataset again, or
--   to crawl only folders that were added since the last crawler run.
crawler_recrawlPolicy :: Lens' Crawler (Maybe RecrawlPolicy)

-- | A list of UTF-8 strings that specify the custom classifiers that are
--   associated with the crawler.
crawler_classifiers :: Lens' Crawler (Maybe [Text])

-- | The Amazon Resource Name (ARN) of an IAM role that's used to access
--   customer resources, such as Amazon Simple Storage Service (Amazon S3)
--   data.
crawler_role :: Lens' Crawler (Maybe Text)

-- | The name of the crawler.
crawler_name :: Lens' Crawler (Maybe Text)

-- | A collection of targets to crawl.
crawler_targets :: Lens' Crawler (Maybe CrawlerTargets)

-- | The version of the crawler.
crawler_version :: Lens' Crawler (Maybe Integer)

-- | The name of the database in which the crawler's output is stored.
crawler_databaseName :: Lens' Crawler (Maybe Text)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used by
--   this crawler.
crawler_crawlerSecurityConfiguration :: Lens' Crawler (Maybe Text)

-- | A configuration that specifies whether data lineage is enabled for the
--   crawler.
crawler_lineageConfiguration :: Lens' Crawler (Maybe LineageConfiguration)

-- | Crawler configuration information. This versioned JSON string allows
--   users to specify aspects of a crawler's behavior. For more
--   information, see <a>Include and Exclude Patterns</a>.
crawler_configuration :: Lens' Crawler (Maybe Text)

-- | The prefix added to the names of tables that are created.
crawler_tablePrefix :: Lens' Crawler (Maybe Text)

-- | A description of the crawler.
crawler_description :: Lens' Crawler (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.Crawler.Crawler
instance GHC.Show.Show Network.AWS.Glue.Types.Crawler.Crawler
instance GHC.Read.Read Network.AWS.Glue.Types.Crawler.Crawler
instance GHC.Classes.Eq Network.AWS.Glue.Types.Crawler.Crawler
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Crawler.Crawler
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Crawler.Crawler
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Crawler.Crawler


module Network.AWS.Glue.Types.UpdateCsvClassifierRequest

-- | Specifies a custom CSV classifier to be updated.
--   
--   <i>See:</i> <a>newUpdateCsvClassifierRequest</a> smart constructor.
data UpdateCsvClassifierRequest
UpdateCsvClassifierRequest' :: Maybe Text -> Maybe CsvHeaderOption -> Maybe Bool -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Text -> UpdateCsvClassifierRequest

-- | A custom symbol to denote what combines content into a single column
--   value. It must be different from the column delimiter.
[$sel:quoteSymbol:UpdateCsvClassifierRequest'] :: UpdateCsvClassifierRequest -> Maybe Text

-- | Indicates whether the CSV file contains a header.
[$sel:containsHeader:UpdateCsvClassifierRequest'] :: UpdateCsvClassifierRequest -> Maybe CsvHeaderOption

-- | Specifies not to trim values before identifying the type of column
--   values. The default value is true.
[$sel:disableValueTrimming:UpdateCsvClassifierRequest'] :: UpdateCsvClassifierRequest -> Maybe Bool

-- | A list of strings representing column names.
[$sel:header:UpdateCsvClassifierRequest'] :: UpdateCsvClassifierRequest -> Maybe [Text]

-- | Enables the processing of files that contain only one column.
[$sel:allowSingleColumn:UpdateCsvClassifierRequest'] :: UpdateCsvClassifierRequest -> Maybe Bool

-- | A custom symbol to denote what separates each column entry in the row.
[$sel:delimiter:UpdateCsvClassifierRequest'] :: UpdateCsvClassifierRequest -> Maybe Text

-- | The name of the classifier.
[$sel:name:UpdateCsvClassifierRequest'] :: UpdateCsvClassifierRequest -> Text

-- | Create a value of <a>UpdateCsvClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:quoteSymbol:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_quoteSymbol</a> - A custom symbol to
--   denote what combines content into a single column value. It must be
--   different from the column delimiter.
--   
--   <a>$sel:containsHeader:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_containsHeader</a> - Indicates whether
--   the CSV file contains a header.
--   
--   <a>$sel:disableValueTrimming:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_disableValueTrimming</a> - Specifies not
--   to trim values before identifying the type of column values. The
--   default value is true.
--   
--   <a>$sel:header:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_header</a> - A list of strings
--   representing column names.
--   
--   <a>$sel:allowSingleColumn:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_allowSingleColumn</a> - Enables the
--   processing of files that contain only one column.
--   
--   <a>$sel:delimiter:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_delimiter</a> - A custom symbol to
--   denote what separates each column entry in the row.
--   
--   <a>$sel:name:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_name</a> - The name of the classifier.
newUpdateCsvClassifierRequest :: Text -> UpdateCsvClassifierRequest

-- | A custom symbol to denote what combines content into a single column
--   value. It must be different from the column delimiter.
updateCsvClassifierRequest_quoteSymbol :: Lens' UpdateCsvClassifierRequest (Maybe Text)

-- | Indicates whether the CSV file contains a header.
updateCsvClassifierRequest_containsHeader :: Lens' UpdateCsvClassifierRequest (Maybe CsvHeaderOption)

-- | Specifies not to trim values before identifying the type of column
--   values. The default value is true.
updateCsvClassifierRequest_disableValueTrimming :: Lens' UpdateCsvClassifierRequest (Maybe Bool)

-- | A list of strings representing column names.
updateCsvClassifierRequest_header :: Lens' UpdateCsvClassifierRequest (Maybe [Text])

-- | Enables the processing of files that contain only one column.
updateCsvClassifierRequest_allowSingleColumn :: Lens' UpdateCsvClassifierRequest (Maybe Bool)

-- | A custom symbol to denote what separates each column entry in the row.
updateCsvClassifierRequest_delimiter :: Lens' UpdateCsvClassifierRequest (Maybe Text)

-- | The name of the classifier.
updateCsvClassifierRequest_name :: Lens' UpdateCsvClassifierRequest Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.UpdateCsvClassifierRequest.UpdateCsvClassifierRequest
instance GHC.Show.Show Network.AWS.Glue.Types.UpdateCsvClassifierRequest.UpdateCsvClassifierRequest
instance GHC.Read.Read Network.AWS.Glue.Types.UpdateCsvClassifierRequest.UpdateCsvClassifierRequest
instance GHC.Classes.Eq Network.AWS.Glue.Types.UpdateCsvClassifierRequest.UpdateCsvClassifierRequest
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.UpdateCsvClassifierRequest.UpdateCsvClassifierRequest
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.UpdateCsvClassifierRequest.UpdateCsvClassifierRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.UpdateCsvClassifierRequest.UpdateCsvClassifierRequest


module Network.AWS.Glue.Types.UpdateGrokClassifierRequest

-- | Specifies a grok classifier to update when passed to
--   <tt>UpdateClassifier</tt>.
--   
--   <i>See:</i> <a>newUpdateGrokClassifierRequest</a> smart constructor.
data UpdateGrokClassifierRequest
UpdateGrokClassifierRequest' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> UpdateGrokClassifierRequest

-- | An identifier of the data format that the classifier matches, such as
--   Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.
[$sel:classification:UpdateGrokClassifierRequest'] :: UpdateGrokClassifierRequest -> Maybe Text

-- | Optional custom grok patterns used by this classifier.
[$sel:customPatterns:UpdateGrokClassifierRequest'] :: UpdateGrokClassifierRequest -> Maybe Text

-- | The grok pattern used by this classifier.
[$sel:grokPattern:UpdateGrokClassifierRequest'] :: UpdateGrokClassifierRequest -> Maybe Text

-- | The name of the <tt>GrokClassifier</tt>.
[$sel:name:UpdateGrokClassifierRequest'] :: UpdateGrokClassifierRequest -> Text

-- | Create a value of <a>UpdateGrokClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:classification:UpdateGrokClassifierRequest'</a>,
--   <a>updateGrokClassifierRequest_classification</a> - An identifier of
--   the data format that the classifier matches, such as Twitter, JSON,
--   Omniture logs, Amazon CloudWatch Logs, and so on.
--   
--   <a>$sel:customPatterns:UpdateGrokClassifierRequest'</a>,
--   <a>updateGrokClassifierRequest_customPatterns</a> - Optional custom
--   grok patterns used by this classifier.
--   
--   <a>$sel:grokPattern:UpdateGrokClassifierRequest'</a>,
--   <a>updateGrokClassifierRequest_grokPattern</a> - The grok pattern used
--   by this classifier.
--   
--   <a>$sel:name:UpdateGrokClassifierRequest'</a>,
--   <a>updateGrokClassifierRequest_name</a> - The name of the
--   <tt>GrokClassifier</tt>.
newUpdateGrokClassifierRequest :: Text -> UpdateGrokClassifierRequest

-- | An identifier of the data format that the classifier matches, such as
--   Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.
updateGrokClassifierRequest_classification :: Lens' UpdateGrokClassifierRequest (Maybe Text)

-- | Optional custom grok patterns used by this classifier.
updateGrokClassifierRequest_customPatterns :: Lens' UpdateGrokClassifierRequest (Maybe Text)

-- | The grok pattern used by this classifier.
updateGrokClassifierRequest_grokPattern :: Lens' UpdateGrokClassifierRequest (Maybe Text)

-- | The name of the <tt>GrokClassifier</tt>.
updateGrokClassifierRequest_name :: Lens' UpdateGrokClassifierRequest Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.UpdateGrokClassifierRequest.UpdateGrokClassifierRequest
instance GHC.Show.Show Network.AWS.Glue.Types.UpdateGrokClassifierRequest.UpdateGrokClassifierRequest
instance GHC.Read.Read Network.AWS.Glue.Types.UpdateGrokClassifierRequest.UpdateGrokClassifierRequest
instance GHC.Classes.Eq Network.AWS.Glue.Types.UpdateGrokClassifierRequest.UpdateGrokClassifierRequest
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.UpdateGrokClassifierRequest.UpdateGrokClassifierRequest
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.UpdateGrokClassifierRequest.UpdateGrokClassifierRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.UpdateGrokClassifierRequest.UpdateGrokClassifierRequest


module Network.AWS.Glue.Types.UpdateJsonClassifierRequest

-- | Specifies a JSON classifier to be updated.
--   
--   <i>See:</i> <a>newUpdateJsonClassifierRequest</a> smart constructor.
data UpdateJsonClassifierRequest
UpdateJsonClassifierRequest' :: Maybe Text -> Text -> UpdateJsonClassifierRequest

-- | A <tt>JsonPath</tt> string defining the JSON data for the classifier
--   to classify. Glue supports a subset of JsonPath, as described in
--   <a>Writing JsonPath Custom Classifiers</a>.
[$sel:jsonPath:UpdateJsonClassifierRequest'] :: UpdateJsonClassifierRequest -> Maybe Text

-- | The name of the classifier.
[$sel:name:UpdateJsonClassifierRequest'] :: UpdateJsonClassifierRequest -> Text

-- | Create a value of <a>UpdateJsonClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jsonPath:UpdateJsonClassifierRequest'</a>,
--   <a>updateJsonClassifierRequest_jsonPath</a> - A <tt>JsonPath</tt>
--   string defining the JSON data for the classifier to classify. Glue
--   supports a subset of JsonPath, as described in <a>Writing JsonPath
--   Custom Classifiers</a>.
--   
--   <a>$sel:name:UpdateJsonClassifierRequest'</a>,
--   <a>updateJsonClassifierRequest_name</a> - The name of the classifier.
newUpdateJsonClassifierRequest :: Text -> UpdateJsonClassifierRequest

-- | A <tt>JsonPath</tt> string defining the JSON data for the classifier
--   to classify. Glue supports a subset of JsonPath, as described in
--   <a>Writing JsonPath Custom Classifiers</a>.
updateJsonClassifierRequest_jsonPath :: Lens' UpdateJsonClassifierRequest (Maybe Text)

-- | The name of the classifier.
updateJsonClassifierRequest_name :: Lens' UpdateJsonClassifierRequest Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.UpdateJsonClassifierRequest.UpdateJsonClassifierRequest
instance GHC.Show.Show Network.AWS.Glue.Types.UpdateJsonClassifierRequest.UpdateJsonClassifierRequest
instance GHC.Read.Read Network.AWS.Glue.Types.UpdateJsonClassifierRequest.UpdateJsonClassifierRequest
instance GHC.Classes.Eq Network.AWS.Glue.Types.UpdateJsonClassifierRequest.UpdateJsonClassifierRequest
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.UpdateJsonClassifierRequest.UpdateJsonClassifierRequest
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.UpdateJsonClassifierRequest.UpdateJsonClassifierRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.UpdateJsonClassifierRequest.UpdateJsonClassifierRequest


module Network.AWS.Glue.Types.UpdateXMLClassifierRequest

-- | Specifies an XML classifier to be updated.
--   
--   <i>See:</i> <a>newUpdateXMLClassifierRequest</a> smart constructor.
data UpdateXMLClassifierRequest
UpdateXMLClassifierRequest' :: Maybe Text -> Maybe Text -> Text -> UpdateXMLClassifierRequest

-- | An identifier of the data format that the classifier matches.
[$sel:classification:UpdateXMLClassifierRequest'] :: UpdateXMLClassifierRequest -> Maybe Text

-- | The XML tag designating the element that contains each record in an
--   XML document being parsed. This cannot identify a self-closing element
--   (closed by <tt>/&gt;</tt>). An empty row element that contains only
--   attributes can be parsed as long as it ends with a closing tag (for
--   example, <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is
--   okay, but <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
[$sel:rowTag:UpdateXMLClassifierRequest'] :: UpdateXMLClassifierRequest -> Maybe Text

-- | The name of the classifier.
[$sel:name:UpdateXMLClassifierRequest'] :: UpdateXMLClassifierRequest -> Text

-- | Create a value of <a>UpdateXMLClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:classification:UpdateXMLClassifierRequest'</a>,
--   <a>updateXMLClassifierRequest_classification</a> - An identifier of
--   the data format that the classifier matches.
--   
--   <a>$sel:rowTag:UpdateXMLClassifierRequest'</a>,
--   <a>updateXMLClassifierRequest_rowTag</a> - The XML tag designating the
--   element that contains each record in an XML document being parsed.
--   This cannot identify a self-closing element (closed by
--   <tt>/&gt;</tt>). An empty row element that contains only attributes
--   can be parsed as long as it ends with a closing tag (for example,
--   <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is okay, but
--   <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
--   
--   <a>$sel:name:UpdateXMLClassifierRequest'</a>,
--   <a>updateXMLClassifierRequest_name</a> - The name of the classifier.
newUpdateXMLClassifierRequest :: Text -> UpdateXMLClassifierRequest

-- | An identifier of the data format that the classifier matches.
updateXMLClassifierRequest_classification :: Lens' UpdateXMLClassifierRequest (Maybe Text)

-- | The XML tag designating the element that contains each record in an
--   XML document being parsed. This cannot identify a self-closing element
--   (closed by <tt>/&gt;</tt>). An empty row element that contains only
--   attributes can be parsed as long as it ends with a closing tag (for
--   example, <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is
--   okay, but <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
updateXMLClassifierRequest_rowTag :: Lens' UpdateXMLClassifierRequest (Maybe Text)

-- | The name of the classifier.
updateXMLClassifierRequest_name :: Lens' UpdateXMLClassifierRequest Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.UpdateXMLClassifierRequest.UpdateXMLClassifierRequest
instance GHC.Show.Show Network.AWS.Glue.Types.UpdateXMLClassifierRequest.UpdateXMLClassifierRequest
instance GHC.Read.Read Network.AWS.Glue.Types.UpdateXMLClassifierRequest.UpdateXMLClassifierRequest
instance GHC.Classes.Eq Network.AWS.Glue.Types.UpdateXMLClassifierRequest.UpdateXMLClassifierRequest
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.UpdateXMLClassifierRequest.UpdateXMLClassifierRequest
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.UpdateXMLClassifierRequest.UpdateXMLClassifierRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.UpdateXMLClassifierRequest.UpdateXMLClassifierRequest


module Network.AWS.Glue.Types.UserDefinedFunction

-- | Represents the equivalent of a Hive user-defined function
--   (<tt>UDF</tt>) definition.
--   
--   <i>See:</i> <a>newUserDefinedFunction</a> smart constructor.
data UserDefinedFunction
UserDefinedFunction' :: Maybe Text -> Maybe Text -> Maybe [ResourceUri] -> Maybe Text -> Maybe Text -> Maybe PrincipalType -> Maybe POSIX -> Maybe Text -> UserDefinedFunction

-- | The owner of the function.
[$sel:ownerName:UserDefinedFunction'] :: UserDefinedFunction -> Maybe Text

-- | The ID of the Data Catalog in which the function resides.
[$sel:catalogId:UserDefinedFunction'] :: UserDefinedFunction -> Maybe Text

-- | The resource URIs for the function.
[$sel:resourceUris:UserDefinedFunction'] :: UserDefinedFunction -> Maybe [ResourceUri]

-- | The name of the catalog database that contains the function.
[$sel:databaseName:UserDefinedFunction'] :: UserDefinedFunction -> Maybe Text

-- | The name of the function.
[$sel:functionName:UserDefinedFunction'] :: UserDefinedFunction -> Maybe Text

-- | The owner type.
[$sel:ownerType:UserDefinedFunction'] :: UserDefinedFunction -> Maybe PrincipalType

-- | The time at which the function was created.
[$sel:createTime:UserDefinedFunction'] :: UserDefinedFunction -> Maybe POSIX

-- | The Java class that contains the function code.
[$sel:className:UserDefinedFunction'] :: UserDefinedFunction -> Maybe Text

-- | Create a value of <a>UserDefinedFunction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownerName:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_ownerName</a> - The owner of the function.
--   
--   <a>$sel:catalogId:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_catalogId</a> - The ID of the Data Catalog in
--   which the function resides.
--   
--   <a>$sel:resourceUris:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_resourceUris</a> - The resource URIs for the
--   function.
--   
--   <a>$sel:databaseName:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_databaseName</a> - The name of the catalog
--   database that contains the function.
--   
--   <a>$sel:functionName:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_functionName</a> - The name of the function.
--   
--   <a>$sel:ownerType:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_ownerType</a> - The owner type.
--   
--   <a>$sel:createTime:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_createTime</a> - The time at which the function
--   was created.
--   
--   <a>$sel:className:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_className</a> - The Java class that contains
--   the function code.
newUserDefinedFunction :: UserDefinedFunction

-- | The owner of the function.
userDefinedFunction_ownerName :: Lens' UserDefinedFunction (Maybe Text)

-- | The ID of the Data Catalog in which the function resides.
userDefinedFunction_catalogId :: Lens' UserDefinedFunction (Maybe Text)

-- | The resource URIs for the function.
userDefinedFunction_resourceUris :: Lens' UserDefinedFunction (Maybe [ResourceUri])

-- | The name of the catalog database that contains the function.
userDefinedFunction_databaseName :: Lens' UserDefinedFunction (Maybe Text)

-- | The name of the function.
userDefinedFunction_functionName :: Lens' UserDefinedFunction (Maybe Text)

-- | The owner type.
userDefinedFunction_ownerType :: Lens' UserDefinedFunction (Maybe PrincipalType)

-- | The time at which the function was created.
userDefinedFunction_createTime :: Lens' UserDefinedFunction (Maybe UTCTime)

-- | The Java class that contains the function code.
userDefinedFunction_className :: Lens' UserDefinedFunction (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.UserDefinedFunction.UserDefinedFunction
instance GHC.Show.Show Network.AWS.Glue.Types.UserDefinedFunction.UserDefinedFunction
instance GHC.Read.Read Network.AWS.Glue.Types.UserDefinedFunction.UserDefinedFunction
instance GHC.Classes.Eq Network.AWS.Glue.Types.UserDefinedFunction.UserDefinedFunction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.UserDefinedFunction.UserDefinedFunction
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.UserDefinedFunction.UserDefinedFunction
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.UserDefinedFunction.UserDefinedFunction


module Network.AWS.Glue.Types.UserDefinedFunctionInput

-- | A structure used to create or update a user-defined function.
--   
--   <i>See:</i> <a>newUserDefinedFunctionInput</a> smart constructor.
data UserDefinedFunctionInput
UserDefinedFunctionInput' :: Maybe Text -> Maybe [ResourceUri] -> Maybe Text -> Maybe PrincipalType -> Maybe Text -> UserDefinedFunctionInput

-- | The owner of the function.
[$sel:ownerName:UserDefinedFunctionInput'] :: UserDefinedFunctionInput -> Maybe Text

-- | The resource URIs for the function.
[$sel:resourceUris:UserDefinedFunctionInput'] :: UserDefinedFunctionInput -> Maybe [ResourceUri]

-- | The name of the function.
[$sel:functionName:UserDefinedFunctionInput'] :: UserDefinedFunctionInput -> Maybe Text

-- | The owner type.
[$sel:ownerType:UserDefinedFunctionInput'] :: UserDefinedFunctionInput -> Maybe PrincipalType

-- | The Java class that contains the function code.
[$sel:className:UserDefinedFunctionInput'] :: UserDefinedFunctionInput -> Maybe Text

-- | Create a value of <a>UserDefinedFunctionInput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownerName:UserDefinedFunctionInput'</a>,
--   <a>userDefinedFunctionInput_ownerName</a> - The owner of the function.
--   
--   <a>$sel:resourceUris:UserDefinedFunctionInput'</a>,
--   <a>userDefinedFunctionInput_resourceUris</a> - The resource URIs for
--   the function.
--   
--   <a>$sel:functionName:UserDefinedFunctionInput'</a>,
--   <a>userDefinedFunctionInput_functionName</a> - The name of the
--   function.
--   
--   <a>$sel:ownerType:UserDefinedFunctionInput'</a>,
--   <a>userDefinedFunctionInput_ownerType</a> - The owner type.
--   
--   <a>$sel:className:UserDefinedFunctionInput'</a>,
--   <a>userDefinedFunctionInput_className</a> - The Java class that
--   contains the function code.
newUserDefinedFunctionInput :: UserDefinedFunctionInput

-- | The owner of the function.
userDefinedFunctionInput_ownerName :: Lens' UserDefinedFunctionInput (Maybe Text)

-- | The resource URIs for the function.
userDefinedFunctionInput_resourceUris :: Lens' UserDefinedFunctionInput (Maybe [ResourceUri])

-- | The name of the function.
userDefinedFunctionInput_functionName :: Lens' UserDefinedFunctionInput (Maybe Text)

-- | The owner type.
userDefinedFunctionInput_ownerType :: Lens' UserDefinedFunctionInput (Maybe PrincipalType)

-- | The Java class that contains the function code.
userDefinedFunctionInput_className :: Lens' UserDefinedFunctionInput (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.UserDefinedFunctionInput.UserDefinedFunctionInput
instance GHC.Show.Show Network.AWS.Glue.Types.UserDefinedFunctionInput.UserDefinedFunctionInput
instance GHC.Read.Read Network.AWS.Glue.Types.UserDefinedFunctionInput.UserDefinedFunctionInput
instance GHC.Classes.Eq Network.AWS.Glue.Types.UserDefinedFunctionInput.UserDefinedFunctionInput
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.UserDefinedFunctionInput.UserDefinedFunctionInput
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.UserDefinedFunctionInput.UserDefinedFunctionInput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.UserDefinedFunctionInput.UserDefinedFunctionInput


module Network.AWS.Glue.Types.WorkerType
newtype WorkerType
WorkerType' :: Text -> WorkerType
[fromWorkerType] :: WorkerType -> Text
pattern WorkerType_G_1X :: WorkerType
pattern WorkerType_G_2X :: WorkerType
pattern WorkerType_Standard :: WorkerType
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.WorkerType.WorkerType
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.WorkerType.WorkerType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.WorkerType.WorkerType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.WorkerType.WorkerType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.WorkerType.WorkerType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.WorkerType.WorkerType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.WorkerType.WorkerType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.WorkerType.WorkerType
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.WorkerType.WorkerType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.WorkerType.WorkerType
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.WorkerType.WorkerType
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.WorkerType.WorkerType
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.WorkerType.WorkerType
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.WorkerType.WorkerType
instance GHC.Generics.Generic Network.AWS.Glue.Types.WorkerType.WorkerType
instance GHC.Classes.Ord Network.AWS.Glue.Types.WorkerType.WorkerType
instance GHC.Classes.Eq Network.AWS.Glue.Types.WorkerType.WorkerType
instance GHC.Read.Read Network.AWS.Glue.Types.WorkerType.WorkerType
instance GHC.Show.Show Network.AWS.Glue.Types.WorkerType.WorkerType


module Network.AWS.Glue.Types.MLTransform

-- | A structure for a machine learning transform.
--   
--   <i>See:</i> <a>newMLTransform</a> smart constructor.
data MLTransform
MLTransform' :: Maybe TransformStatusType -> Maybe Int -> Maybe POSIX -> Maybe Int -> Maybe WorkerType -> Maybe [GlueTable] -> Maybe Text -> Maybe EvaluationMetrics -> Maybe [SchemaColumn] -> Maybe Text -> Maybe Text -> Maybe TransformParameters -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe TransformEncryption -> Maybe Text -> Maybe POSIX -> Maybe Text -> MLTransform

-- | The current status of the machine learning transform.
[$sel:status:MLTransform'] :: MLTransform -> Maybe TransformStatusType

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a task of the transform runs.
--   
--   If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).
[$sel:numberOfWorkers:MLTransform'] :: MLTransform -> Maybe Int

-- | A timestamp. The last point in time when this machine learning
--   transform was modified.
[$sel:lastModifiedOn:MLTransform'] :: MLTransform -> Maybe POSIX

-- | A count identifier for the labeling files generated by Glue for this
--   transform. As you create a better transform, you can iteratively
--   download, label, and upload the labeling file.
[$sel:labelCount:MLTransform'] :: MLTransform -> Maybe Int

-- | The type of predefined worker that is allocated when a task of this
--   transform runs. Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
[$sel:workerType:MLTransform'] :: MLTransform -> Maybe WorkerType

-- | A list of Glue table definitions used by the transform.
[$sel:inputRecordTables:MLTransform'] :: MLTransform -> Maybe [GlueTable]

-- | This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
[$sel:glueVersion:MLTransform'] :: MLTransform -> Maybe Text

-- | An <tt>EvaluationMetrics</tt> object. Evaluation metrics provide an
--   estimate of the quality of your machine learning transform.
[$sel:evaluationMetrics:MLTransform'] :: MLTransform -> Maybe EvaluationMetrics

-- | A map of key-value pairs representing the columns and data types that
--   this transform can run against. Has an upper bound of 100 columns.
[$sel:schema:MLTransform'] :: MLTransform -> Maybe [SchemaColumn]

-- | The name or Amazon Resource Name (ARN) of the IAM role with the
--   required permissions. The required permissions include both Glue
--   service role permissions to Glue resources, and Amazon S3 permissions
--   required by the transform.
--   
--   <ul>
--   <li>This role needs Glue service role permissions to allow access to
--   resources in Glue. See <a>Attach a Policy to IAM Users That Access
--   Glue</a>.</li>
--   <li>This role needs permission to your Amazon Simple Storage Service
--   (Amazon S3) sources, targets, temporary directory, scripts, and any
--   libraries used by the task run for this transform.</li>
--   </ul>
[$sel:role':MLTransform'] :: MLTransform -> Maybe Text

-- | A user-defined name for the machine learning transform. Names are not
--   guaranteed unique and can be changed at any time.
[$sel:name:MLTransform'] :: MLTransform -> Maybe Text

-- | A <tt>TransformParameters</tt> object. You can use parameters to tune
--   (customize) the behavior of the machine learning transform by
--   specifying what data it learns from and your preference on various
--   tradeoffs (such as precious vs. recall, or accuracy vs. cost).
[$sel:parameters:MLTransform'] :: MLTransform -> Maybe TransformParameters

-- | The maximum number of times to retry after an <tt>MLTaskRun</tt> of
--   the machine learning transform fails.
[$sel:maxRetries:MLTransform'] :: MLTransform -> Maybe Int

-- | The number of Glue data processing units (DPUs) that are allocated to
--   task runs for this transform. You can allocate from 2 to 100 DPUs; the
--   default is 10. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
[$sel:maxCapacity:MLTransform'] :: MLTransform -> Maybe Double

-- | The timeout in minutes of the machine learning transform.
[$sel:timeout:MLTransform'] :: MLTransform -> Maybe Natural

-- | The encryption-at-rest settings of the transform that apply to
--   accessing user data. Machine learning transforms can access user data
--   encrypted in Amazon S3 using KMS.
[$sel:transformEncryption:MLTransform'] :: MLTransform -> Maybe TransformEncryption

-- | A user-defined, long-form description text for the machine learning
--   transform. Descriptions are not guaranteed to be unique and can be
--   changed at any time.
[$sel:description:MLTransform'] :: MLTransform -> Maybe Text

-- | A timestamp. The time and date that this machine learning transform
--   was created.
[$sel:createdOn:MLTransform'] :: MLTransform -> Maybe POSIX

-- | The unique transform ID that is generated for the machine learning
--   transform. The ID is guaranteed to be unique and does not change.
[$sel:transformId:MLTransform'] :: MLTransform -> Maybe Text

-- | Create a value of <a>MLTransform</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:MLTransform'</a>, <a>mLTransform_status</a> - The
--   current status of the machine learning transform.
--   
--   <a>$sel:numberOfWorkers:MLTransform'</a>,
--   <a>mLTransform_numberOfWorkers</a> - The number of workers of a
--   defined <tt>workerType</tt> that are allocated when a task of the
--   transform runs.
--   
--   If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).
--   
--   <a>$sel:lastModifiedOn:MLTransform'</a>,
--   <a>mLTransform_lastModifiedOn</a> - A timestamp. The last point in
--   time when this machine learning transform was modified.
--   
--   <a>$sel:labelCount:MLTransform'</a>, <a>mLTransform_labelCount</a> - A
--   count identifier for the labeling files generated by Glue for this
--   transform. As you create a better transform, you can iteratively
--   download, label, and upload the labeling file.
--   
--   <a>$sel:workerType:MLTransform'</a>, <a>mLTransform_workerType</a> -
--   The type of predefined worker that is allocated when a task of this
--   transform runs. Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
--   
--   <a>$sel:inputRecordTables:MLTransform'</a>,
--   <a>mLTransform_inputRecordTables</a> - A list of Glue table
--   definitions used by the transform.
--   
--   <a>$sel:glueVersion:MLTransform'</a>, <a>mLTransform_glueVersion</a> -
--   This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
--   
--   <a>$sel:evaluationMetrics:MLTransform'</a>,
--   <a>mLTransform_evaluationMetrics</a> - An <tt>EvaluationMetrics</tt>
--   object. Evaluation metrics provide an estimate of the quality of your
--   machine learning transform.
--   
--   <a>$sel:schema:MLTransform'</a>, <a>mLTransform_schema</a> - A map of
--   key-value pairs representing the columns and data types that this
--   transform can run against. Has an upper bound of 100 columns.
--   
--   <a>$sel:role':MLTransform'</a>, <a>mLTransform_role</a> - The name or
--   Amazon Resource Name (ARN) of the IAM role with the required
--   permissions. The required permissions include both Glue service role
--   permissions to Glue resources, and Amazon S3 permissions required by
--   the transform.
--   
--   <ul>
--   <li>This role needs Glue service role permissions to allow access to
--   resources in Glue. See <a>Attach a Policy to IAM Users That Access
--   Glue</a>.</li>
--   <li>This role needs permission to your Amazon Simple Storage Service
--   (Amazon S3) sources, targets, temporary directory, scripts, and any
--   libraries used by the task run for this transform.</li>
--   </ul>
--   
--   <a>$sel:name:MLTransform'</a>, <a>mLTransform_name</a> - A
--   user-defined name for the machine learning transform. Names are not
--   guaranteed unique and can be changed at any time.
--   
--   <a>$sel:parameters:MLTransform'</a>, <a>mLTransform_parameters</a> - A
--   <tt>TransformParameters</tt> object. You can use parameters to tune
--   (customize) the behavior of the machine learning transform by
--   specifying what data it learns from and your preference on various
--   tradeoffs (such as precious vs. recall, or accuracy vs. cost).
--   
--   <a>$sel:maxRetries:MLTransform'</a>, <a>mLTransform_maxRetries</a> -
--   The maximum number of times to retry after an <tt>MLTaskRun</tt> of
--   the machine learning transform fails.
--   
--   <a>$sel:maxCapacity:MLTransform'</a>, <a>mLTransform_maxCapacity</a> -
--   The number of Glue data processing units (DPUs) that are allocated to
--   task runs for this transform. You can allocate from 2 to 100 DPUs; the
--   default is 10. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
--   
--   <a>$sel:timeout:MLTransform'</a>, <a>mLTransform_timeout</a> - The
--   timeout in minutes of the machine learning transform.
--   
--   <a>$sel:transformEncryption:MLTransform'</a>,
--   <a>mLTransform_transformEncryption</a> - The encryption-at-rest
--   settings of the transform that apply to accessing user data. Machine
--   learning transforms can access user data encrypted in Amazon S3 using
--   KMS.
--   
--   <a>$sel:description:MLTransform'</a>, <a>mLTransform_description</a> -
--   A user-defined, long-form description text for the machine learning
--   transform. Descriptions are not guaranteed to be unique and can be
--   changed at any time.
--   
--   <a>$sel:createdOn:MLTransform'</a>, <a>mLTransform_createdOn</a> - A
--   timestamp. The time and date that this machine learning transform was
--   created.
--   
--   <a>$sel:transformId:MLTransform'</a>, <a>mLTransform_transformId</a> -
--   The unique transform ID that is generated for the machine learning
--   transform. The ID is guaranteed to be unique and does not change.
newMLTransform :: MLTransform

-- | The current status of the machine learning transform.
mLTransform_status :: Lens' MLTransform (Maybe TransformStatusType)

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a task of the transform runs.
--   
--   If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).
mLTransform_numberOfWorkers :: Lens' MLTransform (Maybe Int)

-- | A timestamp. The last point in time when this machine learning
--   transform was modified.
mLTransform_lastModifiedOn :: Lens' MLTransform (Maybe UTCTime)

-- | A count identifier for the labeling files generated by Glue for this
--   transform. As you create a better transform, you can iteratively
--   download, label, and upload the labeling file.
mLTransform_labelCount :: Lens' MLTransform (Maybe Int)

-- | The type of predefined worker that is allocated when a task of this
--   transform runs. Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
mLTransform_workerType :: Lens' MLTransform (Maybe WorkerType)

-- | A list of Glue table definitions used by the transform.
mLTransform_inputRecordTables :: Lens' MLTransform (Maybe [GlueTable])

-- | This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
mLTransform_glueVersion :: Lens' MLTransform (Maybe Text)

-- | An <tt>EvaluationMetrics</tt> object. Evaluation metrics provide an
--   estimate of the quality of your machine learning transform.
mLTransform_evaluationMetrics :: Lens' MLTransform (Maybe EvaluationMetrics)

-- | A map of key-value pairs representing the columns and data types that
--   this transform can run against. Has an upper bound of 100 columns.
mLTransform_schema :: Lens' MLTransform (Maybe [SchemaColumn])

-- | The name or Amazon Resource Name (ARN) of the IAM role with the
--   required permissions. The required permissions include both Glue
--   service role permissions to Glue resources, and Amazon S3 permissions
--   required by the transform.
--   
--   <ul>
--   <li>This role needs Glue service role permissions to allow access to
--   resources in Glue. See <a>Attach a Policy to IAM Users That Access
--   Glue</a>.</li>
--   <li>This role needs permission to your Amazon Simple Storage Service
--   (Amazon S3) sources, targets, temporary directory, scripts, and any
--   libraries used by the task run for this transform.</li>
--   </ul>
mLTransform_role :: Lens' MLTransform (Maybe Text)

-- | A user-defined name for the machine learning transform. Names are not
--   guaranteed unique and can be changed at any time.
mLTransform_name :: Lens' MLTransform (Maybe Text)

-- | A <tt>TransformParameters</tt> object. You can use parameters to tune
--   (customize) the behavior of the machine learning transform by
--   specifying what data it learns from and your preference on various
--   tradeoffs (such as precious vs. recall, or accuracy vs. cost).
mLTransform_parameters :: Lens' MLTransform (Maybe TransformParameters)

-- | The maximum number of times to retry after an <tt>MLTaskRun</tt> of
--   the machine learning transform fails.
mLTransform_maxRetries :: Lens' MLTransform (Maybe Int)

-- | The number of Glue data processing units (DPUs) that are allocated to
--   task runs for this transform. You can allocate from 2 to 100 DPUs; the
--   default is 10. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
mLTransform_maxCapacity :: Lens' MLTransform (Maybe Double)

-- | The timeout in minutes of the machine learning transform.
mLTransform_timeout :: Lens' MLTransform (Maybe Natural)

-- | The encryption-at-rest settings of the transform that apply to
--   accessing user data. Machine learning transforms can access user data
--   encrypted in Amazon S3 using KMS.
mLTransform_transformEncryption :: Lens' MLTransform (Maybe TransformEncryption)

-- | A user-defined, long-form description text for the machine learning
--   transform. Descriptions are not guaranteed to be unique and can be
--   changed at any time.
mLTransform_description :: Lens' MLTransform (Maybe Text)

-- | A timestamp. The time and date that this machine learning transform
--   was created.
mLTransform_createdOn :: Lens' MLTransform (Maybe UTCTime)

-- | The unique transform ID that is generated for the machine learning
--   transform. The ID is guaranteed to be unique and does not change.
mLTransform_transformId :: Lens' MLTransform (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.MLTransform.MLTransform
instance GHC.Show.Show Network.AWS.Glue.Types.MLTransform.MLTransform
instance GHC.Read.Read Network.AWS.Glue.Types.MLTransform.MLTransform
instance GHC.Classes.Eq Network.AWS.Glue.Types.MLTransform.MLTransform
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.MLTransform.MLTransform
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.MLTransform.MLTransform
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.MLTransform.MLTransform


module Network.AWS.Glue.Types.JobUpdate

-- | Specifies information used to update an existing job definition. The
--   previous job definition is completely overwritten by this information.
--   
--   <i>See:</i> <a>newJobUpdate</a> smart constructor.
data JobUpdate
JobUpdate' :: Maybe Int -> Maybe JobCommand -> Maybe NotificationProperty -> Maybe ConnectionsList -> Maybe WorkerType -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe ExecutionProperty -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe (HashMap Text Text) -> Maybe Text -> JobUpdate

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
[$sel:numberOfWorkers:JobUpdate'] :: JobUpdate -> Maybe Int

-- | The <tt>JobCommand</tt> that runs this job (required).
[$sel:command:JobUpdate'] :: JobUpdate -> Maybe JobCommand

-- | Specifies the configuration properties of a job notification.
[$sel:notificationProperty:JobUpdate'] :: JobUpdate -> Maybe NotificationProperty

-- | The connections used for this job.
[$sel:connections:JobUpdate'] :: JobUpdate -> Maybe ConnectionsList

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
[$sel:workerType:JobUpdate'] :: JobUpdate -> Maybe WorkerType

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job.
[$sel:securityConfiguration:JobUpdate'] :: JobUpdate -> Maybe Text

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
[$sel:glueVersion:JobUpdate'] :: JobUpdate -> Maybe Text

-- | Non-overridable arguments for this job, specified as name-value pairs.
[$sel:nonOverridableArguments:JobUpdate'] :: JobUpdate -> Maybe (HashMap Text Text)

-- | The name or Amazon Resource Name (ARN) of the IAM role associated with
--   this job (required).
[$sel:role':JobUpdate'] :: JobUpdate -> Maybe Text

-- | This field is reserved for future use.
[$sel:logUri:JobUpdate'] :: JobUpdate -> Maybe Text

-- | The maximum number of times to retry this job if it fails.
[$sel:maxRetries:JobUpdate'] :: JobUpdate -> Maybe Int

-- | An <tt>ExecutionProperty</tt> specifying the maximum number of
--   concurrent runs allowed for this job.
[$sel:executionProperty:JobUpdate'] :: JobUpdate -> Maybe ExecutionProperty

-- | This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) to allocate to this
--   job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is
--   a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
[$sel:allocatedCapacity:JobUpdate'] :: JobUpdate -> Maybe Int

-- | For Glue version 1.0 or earlier jobs, using the standard worker type,
--   the number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
[$sel:maxCapacity:JobUpdate'] :: JobUpdate -> Maybe Double

-- | The job timeout in minutes. This is the maximum time that a job run
--   can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours).
[$sel:timeout:JobUpdate'] :: JobUpdate -> Maybe Natural

-- | The default arguments for this job.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
[$sel:defaultArguments:JobUpdate'] :: JobUpdate -> Maybe (HashMap Text Text)

-- | Description of the job being defined.
[$sel:description:JobUpdate'] :: JobUpdate -> Maybe Text

-- | Create a value of <a>JobUpdate</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfWorkers:JobUpdate'</a>,
--   <a>jobUpdate_numberOfWorkers</a> - The number of workers of a defined
--   <tt>workerType</tt> that are allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
--   
--   <a>$sel:command:JobUpdate'</a>, <a>jobUpdate_command</a> - The
--   <tt>JobCommand</tt> that runs this job (required).
--   
--   <a>$sel:notificationProperty:JobUpdate'</a>,
--   <a>jobUpdate_notificationProperty</a> - Specifies the configuration
--   properties of a job notification.
--   
--   <a>$sel:connections:JobUpdate'</a>, <a>jobUpdate_connections</a> - The
--   connections used for this job.
--   
--   <a>$sel:workerType:JobUpdate'</a>, <a>jobUpdate_workerType</a> - The
--   type of predefined worker that is allocated when a job runs. Accepts a
--   value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   <a>$sel:securityConfiguration:JobUpdate'</a>,
--   <a>jobUpdate_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this job.
--   
--   <a>$sel:glueVersion:JobUpdate'</a>, <a>jobUpdate_glueVersion</a> -
--   Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   <a>$sel:nonOverridableArguments:JobUpdate'</a>,
--   <a>jobUpdate_nonOverridableArguments</a> - Non-overridable arguments
--   for this job, specified as name-value pairs.
--   
--   <a>$sel:role':JobUpdate'</a>, <a>jobUpdate_role</a> - The name or
--   Amazon Resource Name (ARN) of the IAM role associated with this job
--   (required).
--   
--   <a>$sel:logUri:JobUpdate'</a>, <a>jobUpdate_logUri</a> - This field is
--   reserved for future use.
--   
--   <a>$sel:maxRetries:JobUpdate'</a>, <a>jobUpdate_maxRetries</a> - The
--   maximum number of times to retry this job if it fails.
--   
--   <a>$sel:executionProperty:JobUpdate'</a>,
--   <a>jobUpdate_executionProperty</a> - An <tt>ExecutionProperty</tt>
--   specifying the maximum number of concurrent runs allowed for this job.
--   
--   <a>$sel:allocatedCapacity:JobUpdate'</a>,
--   <a>jobUpdate_allocatedCapacity</a> - This field is deprecated. Use
--   <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) to allocate to this
--   job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is
--   a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
--   
--   <a>$sel:maxCapacity:JobUpdate'</a>, <a>jobUpdate_maxCapacity</a> - For
--   Glue version 1.0 or earlier jobs, using the standard worker type, the
--   number of Glue data processing units (DPUs) that can be allocated when
--   this job runs. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
--   
--   <a>$sel:timeout:JobUpdate'</a>, <a>jobUpdate_timeout</a> - The job
--   timeout in minutes. This is the maximum time that a job run can
--   consume resources before it is terminated and enters <tt>TIMEOUT</tt>
--   status. The default is 2,880 minutes (48 hours).
--   
--   <a>$sel:defaultArguments:JobUpdate'</a>,
--   <a>jobUpdate_defaultArguments</a> - The default arguments for this
--   job.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
--   
--   <a>$sel:description:JobUpdate'</a>, <a>jobUpdate_description</a> -
--   Description of the job being defined.
newJobUpdate :: JobUpdate

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
jobUpdate_numberOfWorkers :: Lens' JobUpdate (Maybe Int)

-- | The <tt>JobCommand</tt> that runs this job (required).
jobUpdate_command :: Lens' JobUpdate (Maybe JobCommand)

-- | Specifies the configuration properties of a job notification.
jobUpdate_notificationProperty :: Lens' JobUpdate (Maybe NotificationProperty)

-- | The connections used for this job.
jobUpdate_connections :: Lens' JobUpdate (Maybe ConnectionsList)

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
jobUpdate_workerType :: Lens' JobUpdate (Maybe WorkerType)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job.
jobUpdate_securityConfiguration :: Lens' JobUpdate (Maybe Text)

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
jobUpdate_glueVersion :: Lens' JobUpdate (Maybe Text)

-- | Non-overridable arguments for this job, specified as name-value pairs.
jobUpdate_nonOverridableArguments :: Lens' JobUpdate (Maybe (HashMap Text Text))

-- | The name or Amazon Resource Name (ARN) of the IAM role associated with
--   this job (required).
jobUpdate_role :: Lens' JobUpdate (Maybe Text)

-- | This field is reserved for future use.
jobUpdate_logUri :: Lens' JobUpdate (Maybe Text)

-- | The maximum number of times to retry this job if it fails.
jobUpdate_maxRetries :: Lens' JobUpdate (Maybe Int)

-- | An <tt>ExecutionProperty</tt> specifying the maximum number of
--   concurrent runs allowed for this job.
jobUpdate_executionProperty :: Lens' JobUpdate (Maybe ExecutionProperty)

-- | This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) to allocate to this
--   job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is
--   a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
jobUpdate_allocatedCapacity :: Lens' JobUpdate (Maybe Int)

-- | For Glue version 1.0 or earlier jobs, using the standard worker type,
--   the number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
jobUpdate_maxCapacity :: Lens' JobUpdate (Maybe Double)

-- | The job timeout in minutes. This is the maximum time that a job run
--   can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours).
jobUpdate_timeout :: Lens' JobUpdate (Maybe Natural)

-- | The default arguments for this job.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
jobUpdate_defaultArguments :: Lens' JobUpdate (Maybe (HashMap Text Text))

-- | Description of the job being defined.
jobUpdate_description :: Lens' JobUpdate (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.JobUpdate.JobUpdate
instance GHC.Show.Show Network.AWS.Glue.Types.JobUpdate.JobUpdate
instance GHC.Read.Read Network.AWS.Glue.Types.JobUpdate.JobUpdate
instance GHC.Classes.Eq Network.AWS.Glue.Types.JobUpdate.JobUpdate
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.JobUpdate.JobUpdate
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.JobUpdate.JobUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.JobUpdate.JobUpdate


module Network.AWS.Glue.Types.JobRun

-- | Contains information about a job run.
--   
--   <i>See:</i> <a>newJobRun</a> smart constructor.
data JobRun
JobRun' :: Maybe POSIX -> Maybe Int -> Maybe Text -> Maybe NotificationProperty -> Maybe POSIX -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe POSIX -> Maybe WorkerType -> Maybe Text -> Maybe Text -> Maybe JobRunState -> Maybe Text -> Maybe Int -> Maybe [Predecessor] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe Text -> JobRun

-- | The date and time that this job run completed.
[$sel:completedOn:JobRun'] :: JobRun -> Maybe POSIX

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
[$sel:numberOfWorkers:JobRun'] :: JobRun -> Maybe Int

-- | The name of the trigger that started this job run.
[$sel:triggerName:JobRun'] :: JobRun -> Maybe Text

-- | Specifies configuration properties of a job run notification.
[$sel:notificationProperty:JobRun'] :: JobRun -> Maybe NotificationProperty

-- | The last time that this job run was modified.
[$sel:lastModifiedOn:JobRun'] :: JobRun -> Maybe POSIX

-- | The job arguments associated with this run. For this job run, they
--   replace the default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
[$sel:arguments:JobRun'] :: JobRun -> Maybe (HashMap Text Text)

-- | The name of the job definition being used in this run.
[$sel:jobName:JobRun'] :: JobRun -> Maybe Text

-- | The date and time at which this job run was started.
[$sel:startedOn:JobRun'] :: JobRun -> Maybe POSIX

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
[$sel:workerType:JobRun'] :: JobRun -> Maybe WorkerType

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job run.
[$sel:securityConfiguration:JobRun'] :: JobRun -> Maybe Text

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
[$sel:glueVersion:JobRun'] :: JobRun -> Maybe Text

-- | The current state of the job run. For more information about the
--   statuses of jobs that have terminated abnormally, see <a>Glue Job Run
--   Statuses</a>.
[$sel:jobRunState:JobRun'] :: JobRun -> Maybe JobRunState

-- | The name of the log group for secure logging that can be server-side
--   encrypted in Amazon CloudWatch using KMS. This name can be
--   <tt>/aws-glue/jobs/</tt>, in which case the default encryption is
--   <tt>NONE</tt>. If you add a role name and
--   <tt>SecurityConfiguration</tt> name (in other words,
--   <tt>/aws-glue/jobs-yourRoleName-yourSecurityConfigurationName/</tt>),
--   then that security configuration is used to encrypt the log group.
[$sel:logGroupName:JobRun'] :: JobRun -> Maybe Text

-- | The amount of time (in seconds) that the job run consumed resources.
[$sel:executionTime:JobRun'] :: JobRun -> Maybe Int

-- | A list of predecessors to this job run.
[$sel:predecessorRuns:JobRun'] :: JobRun -> Maybe [Predecessor]

-- | The ID of the previous run of this job. For example, the
--   <tt>JobRunId</tt> specified in the <tt>StartJobRun</tt> action.
[$sel:previousRunId:JobRun'] :: JobRun -> Maybe Text

-- | The ID of this job run.
[$sel:id:JobRun'] :: JobRun -> Maybe Text

-- | The number of the attempt to run this job.
[$sel:attempt:JobRun'] :: JobRun -> Maybe Int

-- | This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) allocated to this
--   JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU
--   is a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
[$sel:allocatedCapacity:JobRun'] :: JobRun -> Maybe Int

-- | The number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl"), you can allocate from 2 to 100
--   DPUs. The default is 10 DPUs. This job type cannot have a fractional
--   DPU allocation.</li>
--   </ul>
[$sel:maxCapacity:JobRun'] :: JobRun -> Maybe Double

-- | The <tt>JobRun</tt> timeout in minutes. This is the maximum time that
--   a job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
[$sel:timeout:JobRun'] :: JobRun -> Maybe Natural

-- | An error message associated with this job run.
[$sel:errorMessage:JobRun'] :: JobRun -> Maybe Text

-- | Create a value of <a>JobRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completedOn:JobRun'</a>, <a>jobRun_completedOn</a> - The date
--   and time that this job run completed.
--   
--   <a>$sel:numberOfWorkers:JobRun'</a>, <a>jobRun_numberOfWorkers</a> -
--   The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
--   
--   <a>$sel:triggerName:JobRun'</a>, <a>jobRun_triggerName</a> - The name
--   of the trigger that started this job run.
--   
--   <a>$sel:notificationProperty:JobRun'</a>,
--   <a>jobRun_notificationProperty</a> - Specifies configuration
--   properties of a job run notification.
--   
--   <a>$sel:lastModifiedOn:JobRun'</a>, <a>jobRun_lastModifiedOn</a> - The
--   last time that this job run was modified.
--   
--   <a>$sel:arguments:JobRun'</a>, <a>jobRun_arguments</a> - The job
--   arguments associated with this run. For this job run, they replace the
--   default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
--   
--   <a>$sel:jobName:JobRun'</a>, <a>jobRun_jobName</a> - The name of the
--   job definition being used in this run.
--   
--   <a>$sel:startedOn:JobRun'</a>, <a>jobRun_startedOn</a> - The date and
--   time at which this job run was started.
--   
--   <a>$sel:workerType:JobRun'</a>, <a>jobRun_workerType</a> - The type of
--   predefined worker that is allocated when a job runs. Accepts a value
--   of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <a>$sel:securityConfiguration:JobRun'</a>,
--   <a>jobRun_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this job run.
--   
--   <a>$sel:glueVersion:JobRun'</a>, <a>jobRun_glueVersion</a> - Glue
--   version determines the versions of Apache Spark and Python that Glue
--   supports. The Python version indicates the version supported for jobs
--   of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
--   
--   <a>$sel:jobRunState:JobRun'</a>, <a>jobRun_jobRunState</a> - The
--   current state of the job run. For more information about the statuses
--   of jobs that have terminated abnormally, see <a>Glue Job Run
--   Statuses</a>.
--   
--   <a>$sel:logGroupName:JobRun'</a>, <a>jobRun_logGroupName</a> - The
--   name of the log group for secure logging that can be server-side
--   encrypted in Amazon CloudWatch using KMS. This name can be
--   <tt>/aws-glue/jobs/</tt>, in which case the default encryption is
--   <tt>NONE</tt>. If you add a role name and
--   <tt>SecurityConfiguration</tt> name (in other words,
--   <tt>/aws-glue/jobs-yourRoleName-yourSecurityConfigurationName/</tt>),
--   then that security configuration is used to encrypt the log group.
--   
--   <a>$sel:executionTime:JobRun'</a>, <a>jobRun_executionTime</a> - The
--   amount of time (in seconds) that the job run consumed resources.
--   
--   <a>$sel:predecessorRuns:JobRun'</a>, <a>jobRun_predecessorRuns</a> - A
--   list of predecessors to this job run.
--   
--   <a>$sel:previousRunId:JobRun'</a>, <a>jobRun_previousRunId</a> - The
--   ID of the previous run of this job. For example, the <tt>JobRunId</tt>
--   specified in the <tt>StartJobRun</tt> action.
--   
--   <a>$sel:id:JobRun'</a>, <a>jobRun_id</a> - The ID of this job run.
--   
--   <a>$sel:attempt:JobRun'</a>, <a>jobRun_attempt</a> - The number of the
--   attempt to run this job.
--   
--   <a>$sel:allocatedCapacity:JobRun'</a>, <a>jobRun_allocatedCapacity</a>
--   - This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) allocated to this
--   JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU
--   is a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
--   
--   <a>$sel:maxCapacity:JobRun'</a>, <a>jobRun_maxCapacity</a> - The
--   number of Glue data processing units (DPUs) that can be allocated when
--   this job runs. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl"), you can allocate from 2 to 100
--   DPUs. The default is 10 DPUs. This job type cannot have a fractional
--   DPU allocation.</li>
--   </ul>
--   
--   <a>$sel:timeout:JobRun'</a>, <a>jobRun_timeout</a> - The
--   <tt>JobRun</tt> timeout in minutes. This is the maximum time that a
--   job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
--   
--   <a>$sel:errorMessage:JobRun'</a>, <a>jobRun_errorMessage</a> - An
--   error message associated with this job run.
newJobRun :: JobRun

-- | The date and time that this job run completed.
jobRun_completedOn :: Lens' JobRun (Maybe UTCTime)

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
jobRun_numberOfWorkers :: Lens' JobRun (Maybe Int)

-- | The name of the trigger that started this job run.
jobRun_triggerName :: Lens' JobRun (Maybe Text)

-- | Specifies configuration properties of a job run notification.
jobRun_notificationProperty :: Lens' JobRun (Maybe NotificationProperty)

-- | The last time that this job run was modified.
jobRun_lastModifiedOn :: Lens' JobRun (Maybe UTCTime)

-- | The job arguments associated with this run. For this job run, they
--   replace the default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
jobRun_arguments :: Lens' JobRun (Maybe (HashMap Text Text))

-- | The name of the job definition being used in this run.
jobRun_jobName :: Lens' JobRun (Maybe Text)

-- | The date and time at which this job run was started.
jobRun_startedOn :: Lens' JobRun (Maybe UTCTime)

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
jobRun_workerType :: Lens' JobRun (Maybe WorkerType)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job run.
jobRun_securityConfiguration :: Lens' JobRun (Maybe Text)

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
jobRun_glueVersion :: Lens' JobRun (Maybe Text)

-- | The current state of the job run. For more information about the
--   statuses of jobs that have terminated abnormally, see <a>Glue Job Run
--   Statuses</a>.
jobRun_jobRunState :: Lens' JobRun (Maybe JobRunState)

-- | The name of the log group for secure logging that can be server-side
--   encrypted in Amazon CloudWatch using KMS. This name can be
--   <tt>/aws-glue/jobs/</tt>, in which case the default encryption is
--   <tt>NONE</tt>. If you add a role name and
--   <tt>SecurityConfiguration</tt> name (in other words,
--   <tt>/aws-glue/jobs-yourRoleName-yourSecurityConfigurationName/</tt>),
--   then that security configuration is used to encrypt the log group.
jobRun_logGroupName :: Lens' JobRun (Maybe Text)

-- | The amount of time (in seconds) that the job run consumed resources.
jobRun_executionTime :: Lens' JobRun (Maybe Int)

-- | A list of predecessors to this job run.
jobRun_predecessorRuns :: Lens' JobRun (Maybe [Predecessor])

-- | The ID of the previous run of this job. For example, the
--   <tt>JobRunId</tt> specified in the <tt>StartJobRun</tt> action.
jobRun_previousRunId :: Lens' JobRun (Maybe Text)

-- | The ID of this job run.
jobRun_id :: Lens' JobRun (Maybe Text)

-- | The number of the attempt to run this job.
jobRun_attempt :: Lens' JobRun (Maybe Int)

-- | This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) allocated to this
--   JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU
--   is a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
jobRun_allocatedCapacity :: Lens' JobRun (Maybe Int)

-- | The number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl"), you can allocate from 2 to 100
--   DPUs. The default is 10 DPUs. This job type cannot have a fractional
--   DPU allocation.</li>
--   </ul>
jobRun_maxCapacity :: Lens' JobRun (Maybe Double)

-- | The <tt>JobRun</tt> timeout in minutes. This is the maximum time that
--   a job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
jobRun_timeout :: Lens' JobRun (Maybe Natural)

-- | An error message associated with this job run.
jobRun_errorMessage :: Lens' JobRun (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.JobRun.JobRun
instance GHC.Show.Show Network.AWS.Glue.Types.JobRun.JobRun
instance GHC.Read.Read Network.AWS.Glue.Types.JobRun.JobRun
instance GHC.Classes.Eq Network.AWS.Glue.Types.JobRun.JobRun
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.JobRun.JobRun
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.JobRun.JobRun
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.JobRun.JobRun


module Network.AWS.Glue.Types.JobNodeDetails

-- | The details of a Job node present in the workflow.
--   
--   <i>See:</i> <a>newJobNodeDetails</a> smart constructor.
data JobNodeDetails
JobNodeDetails' :: Maybe [JobRun] -> JobNodeDetails

-- | The information for the job runs represented by the job node.
[$sel:jobRuns:JobNodeDetails'] :: JobNodeDetails -> Maybe [JobRun]

-- | Create a value of <a>JobNodeDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobRuns:JobNodeDetails'</a>, <a>jobNodeDetails_jobRuns</a> -
--   The information for the job runs represented by the job node.
newJobNodeDetails :: JobNodeDetails

-- | The information for the job runs represented by the job node.
jobNodeDetails_jobRuns :: Lens' JobNodeDetails (Maybe [JobRun])
instance GHC.Generics.Generic Network.AWS.Glue.Types.JobNodeDetails.JobNodeDetails
instance GHC.Show.Show Network.AWS.Glue.Types.JobNodeDetails.JobNodeDetails
instance GHC.Read.Read Network.AWS.Glue.Types.JobNodeDetails.JobNodeDetails
instance GHC.Classes.Eq Network.AWS.Glue.Types.JobNodeDetails.JobNodeDetails
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.JobNodeDetails.JobNodeDetails
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.JobNodeDetails.JobNodeDetails
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.JobNodeDetails.JobNodeDetails


module Network.AWS.Glue.Types.Node

-- | A node represents an Glue component (trigger, crawler, or job) on a
--   workflow graph.
--   
--   <i>See:</i> <a>newNode</a> smart constructor.
data Node
Node' :: Maybe TriggerNodeDetails -> Maybe Text -> Maybe CrawlerNodeDetails -> Maybe Text -> Maybe JobNodeDetails -> Maybe NodeType -> Node

-- | Details of the Trigger when the node represents a Trigger.
[$sel:triggerDetails:Node'] :: Node -> Maybe TriggerNodeDetails

-- | The unique Id assigned to the node within the workflow.
[$sel:uniqueId:Node'] :: Node -> Maybe Text

-- | Details of the crawler when the node represents a crawler.
[$sel:crawlerDetails:Node'] :: Node -> Maybe CrawlerNodeDetails

-- | The name of the Glue component represented by the node.
[$sel:name:Node'] :: Node -> Maybe Text

-- | Details of the Job when the node represents a Job.
[$sel:jobDetails:Node'] :: Node -> Maybe JobNodeDetails

-- | The type of Glue component represented by the node.
[$sel:type':Node'] :: Node -> Maybe NodeType

-- | Create a value of <a>Node</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggerDetails:Node'</a>, <a>node_triggerDetails</a> - Details
--   of the Trigger when the node represents a Trigger.
--   
--   <a>$sel:uniqueId:Node'</a>, <a>node_uniqueId</a> - The unique Id
--   assigned to the node within the workflow.
--   
--   <a>$sel:crawlerDetails:Node'</a>, <a>node_crawlerDetails</a> - Details
--   of the crawler when the node represents a crawler.
--   
--   <a>$sel:name:Node'</a>, <a>node_name</a> - The name of the Glue
--   component represented by the node.
--   
--   <a>$sel:jobDetails:Node'</a>, <a>node_jobDetails</a> - Details of the
--   Job when the node represents a Job.
--   
--   <a>$sel:type':Node'</a>, <a>node_type</a> - The type of Glue component
--   represented by the node.
newNode :: Node

-- | Details of the Trigger when the node represents a Trigger.
node_triggerDetails :: Lens' Node (Maybe TriggerNodeDetails)

-- | The unique Id assigned to the node within the workflow.
node_uniqueId :: Lens' Node (Maybe Text)

-- | Details of the crawler when the node represents a crawler.
node_crawlerDetails :: Lens' Node (Maybe CrawlerNodeDetails)

-- | The name of the Glue component represented by the node.
node_name :: Lens' Node (Maybe Text)

-- | Details of the Job when the node represents a Job.
node_jobDetails :: Lens' Node (Maybe JobNodeDetails)

-- | The type of Glue component represented by the node.
node_type :: Lens' Node (Maybe NodeType)
instance GHC.Generics.Generic Network.AWS.Glue.Types.Node.Node
instance GHC.Show.Show Network.AWS.Glue.Types.Node.Node
instance GHC.Read.Read Network.AWS.Glue.Types.Node.Node
instance GHC.Classes.Eq Network.AWS.Glue.Types.Node.Node
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Node.Node
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Node.Node
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Node.Node


module Network.AWS.Glue.Types.Job

-- | Specifies a job definition.
--   
--   <i>See:</i> <a>newJob</a> smart constructor.
data Job
Job' :: Maybe Int -> Maybe JobCommand -> Maybe NotificationProperty -> Maybe POSIX -> Maybe ConnectionsList -> Maybe WorkerType -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe ExecutionProperty -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe POSIX -> Job

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
[$sel:numberOfWorkers:Job'] :: Job -> Maybe Int

-- | The <tt>JobCommand</tt> that runs this job.
[$sel:command:Job'] :: Job -> Maybe JobCommand

-- | Specifies configuration properties of a job notification.
[$sel:notificationProperty:Job'] :: Job -> Maybe NotificationProperty

-- | The last point in time when this job definition was modified.
[$sel:lastModifiedOn:Job'] :: Job -> Maybe POSIX

-- | The connections used for this job.
[$sel:connections:Job'] :: Job -> Maybe ConnectionsList

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
[$sel:workerType:Job'] :: Job -> Maybe WorkerType

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job.
[$sel:securityConfiguration:Job'] :: Job -> Maybe Text

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
[$sel:glueVersion:Job'] :: Job -> Maybe Text

-- | Non-overridable arguments for this job, specified as name-value pairs.
[$sel:nonOverridableArguments:Job'] :: Job -> Maybe (HashMap Text Text)

-- | The name or Amazon Resource Name (ARN) of the IAM role associated with
--   this job.
[$sel:role':Job'] :: Job -> Maybe Text

-- | The name you assign to this job definition.
[$sel:name:Job'] :: Job -> Maybe Text

-- | This field is reserved for future use.
[$sel:logUri:Job'] :: Job -> Maybe Text

-- | The maximum number of times to retry this job after a JobRun fails.
[$sel:maxRetries:Job'] :: Job -> Maybe Int

-- | An <tt>ExecutionProperty</tt> specifying the maximum number of
--   concurrent runs allowed for this job.
[$sel:executionProperty:Job'] :: Job -> Maybe ExecutionProperty

-- | This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) allocated to runs of
--   this job. You can allocate from 2 to 100 DPUs; the default is 10. A
--   DPU is a relative measure of processing power that consists of 4 vCPUs
--   of compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
[$sel:allocatedCapacity:Job'] :: Job -> Maybe Int

-- | For Glue version 1.0 or earlier jobs, using the standard worker type,
--   the number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job, an Apache Spark ETL job,
--   or an Apache Spark streaming ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
[$sel:maxCapacity:Job'] :: Job -> Maybe Double

-- | The job timeout in minutes. This is the maximum time that a job run
--   can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours).
[$sel:timeout:Job'] :: Job -> Maybe Natural

-- | The default arguments for this job, specified as name-value pairs.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
[$sel:defaultArguments:Job'] :: Job -> Maybe (HashMap Text Text)

-- | A description of the job.
[$sel:description:Job'] :: Job -> Maybe Text

-- | The time and date that this job definition was created.
[$sel:createdOn:Job'] :: Job -> Maybe POSIX

-- | Create a value of <a>Job</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfWorkers:Job'</a>, <a>job_numberOfWorkers</a> - The
--   number of workers of a defined <tt>workerType</tt> that are allocated
--   when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
--   
--   <a>$sel:command:Job'</a>, <a>job_command</a> - The <tt>JobCommand</tt>
--   that runs this job.
--   
--   <a>$sel:notificationProperty:Job'</a>, <a>job_notificationProperty</a>
--   - Specifies configuration properties of a job notification.
--   
--   <a>$sel:lastModifiedOn:Job'</a>, <a>job_lastModifiedOn</a> - The last
--   point in time when this job definition was modified.
--   
--   <a>$sel:connections:Job'</a>, <a>job_connections</a> - The connections
--   used for this job.
--   
--   <a>$sel:workerType:Job'</a>, <a>job_workerType</a> - The type of
--   predefined worker that is allocated when a job runs. Accepts a value
--   of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   <a>$sel:securityConfiguration:Job'</a>,
--   <a>job_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this job.
--   
--   <a>$sel:glueVersion:Job'</a>, <a>job_glueVersion</a> - Glue version
--   determines the versions of Apache Spark and Python that Glue supports.
--   The Python version indicates the version supported for jobs of type
--   Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
--   
--   <a>$sel:nonOverridableArguments:Job'</a>,
--   <a>job_nonOverridableArguments</a> - Non-overridable arguments for
--   this job, specified as name-value pairs.
--   
--   <a>$sel:role':Job'</a>, <a>job_role</a> - The name or Amazon Resource
--   Name (ARN) of the IAM role associated with this job.
--   
--   <a>$sel:name:Job'</a>, <a>job_name</a> - The name you assign to this
--   job definition.
--   
--   <a>$sel:logUri:Job'</a>, <a>job_logUri</a> - This field is reserved
--   for future use.
--   
--   <a>$sel:maxRetries:Job'</a>, <a>job_maxRetries</a> - The maximum
--   number of times to retry this job after a JobRun fails.
--   
--   <a>$sel:executionProperty:Job'</a>, <a>job_executionProperty</a> - An
--   <tt>ExecutionProperty</tt> specifying the maximum number of concurrent
--   runs allowed for this job.
--   
--   <a>$sel:allocatedCapacity:Job'</a>, <a>job_allocatedCapacity</a> -
--   This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) allocated to runs of
--   this job. You can allocate from 2 to 100 DPUs; the default is 10. A
--   DPU is a relative measure of processing power that consists of 4 vCPUs
--   of compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
--   
--   <a>$sel:maxCapacity:Job'</a>, <a>job_maxCapacity</a> - For Glue
--   version 1.0 or earlier jobs, using the standard worker type, the
--   number of Glue data processing units (DPUs) that can be allocated when
--   this job runs. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job, an Apache Spark ETL job,
--   or an Apache Spark streaming ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
--   
--   <a>$sel:timeout:Job'</a>, <a>job_timeout</a> - The job timeout in
--   minutes. This is the maximum time that a job run can consume resources
--   before it is terminated and enters <tt>TIMEOUT</tt> status. The
--   default is 2,880 minutes (48 hours).
--   
--   <a>$sel:defaultArguments:Job'</a>, <a>job_defaultArguments</a> - The
--   default arguments for this job, specified as name-value pairs.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
--   
--   <a>$sel:description:Job'</a>, <a>job_description</a> - A description
--   of the job.
--   
--   <a>$sel:createdOn:Job'</a>, <a>job_createdOn</a> - The time and date
--   that this job definition was created.
newJob :: Job

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
job_numberOfWorkers :: Lens' Job (Maybe Int)

-- | The <tt>JobCommand</tt> that runs this job.
job_command :: Lens' Job (Maybe JobCommand)

-- | Specifies configuration properties of a job notification.
job_notificationProperty :: Lens' Job (Maybe NotificationProperty)

-- | The last point in time when this job definition was modified.
job_lastModifiedOn :: Lens' Job (Maybe UTCTime)

-- | The connections used for this job.
job_connections :: Lens' Job (Maybe ConnectionsList)

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
job_workerType :: Lens' Job (Maybe WorkerType)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job.
job_securityConfiguration :: Lens' Job (Maybe Text)

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
job_glueVersion :: Lens' Job (Maybe Text)

-- | Non-overridable arguments for this job, specified as name-value pairs.
job_nonOverridableArguments :: Lens' Job (Maybe (HashMap Text Text))

-- | The name or Amazon Resource Name (ARN) of the IAM role associated with
--   this job.
job_role :: Lens' Job (Maybe Text)

-- | The name you assign to this job definition.
job_name :: Lens' Job (Maybe Text)

-- | This field is reserved for future use.
job_logUri :: Lens' Job (Maybe Text)

-- | The maximum number of times to retry this job after a JobRun fails.
job_maxRetries :: Lens' Job (Maybe Int)

-- | An <tt>ExecutionProperty</tt> specifying the maximum number of
--   concurrent runs allowed for this job.
job_executionProperty :: Lens' Job (Maybe ExecutionProperty)

-- | This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) allocated to runs of
--   this job. You can allocate from 2 to 100 DPUs; the default is 10. A
--   DPU is a relative measure of processing power that consists of 4 vCPUs
--   of compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
job_allocatedCapacity :: Lens' Job (Maybe Int)

-- | For Glue version 1.0 or earlier jobs, using the standard worker type,
--   the number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job, an Apache Spark ETL job,
--   or an Apache Spark streaming ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
job_maxCapacity :: Lens' Job (Maybe Double)

-- | The job timeout in minutes. This is the maximum time that a job run
--   can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours).
job_timeout :: Lens' Job (Maybe Natural)

-- | The default arguments for this job, specified as name-value pairs.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
job_defaultArguments :: Lens' Job (Maybe (HashMap Text Text))

-- | A description of the job.
job_description :: Lens' Job (Maybe Text)

-- | The time and date that this job definition was created.
job_createdOn :: Lens' Job (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.Glue.Types.Job.Job
instance GHC.Show.Show Network.AWS.Glue.Types.Job.Job
instance GHC.Read.Read Network.AWS.Glue.Types.Job.Job
instance GHC.Classes.Eq Network.AWS.Glue.Types.Job.Job
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Job.Job
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Job.Job
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Job.Job


module Network.AWS.Glue.Types.DevEndpoint

-- | A development endpoint where a developer can remotely debug extract,
--   transform, and load (ETL) scripts.
--   
--   <i>See:</i> <a>newDevEndpoint</a> smart constructor.
data DevEndpoint
DevEndpoint' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe WorkerType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> DevEndpoint

-- | The current status of this <tt>DevEndpoint</tt>.
[$sel:status:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The reason for a current failure in this <tt>DevEndpoint</tt>.
[$sel:failureReason:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The name of the <tt>DevEndpoint</tt>.
[$sel:endpointName:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated to the development endpoint.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
[$sel:numberOfWorkers:DevEndpoint'] :: DevEndpoint -> Maybe Int

-- | The paths to one or more Python libraries in an Amazon S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>. Multiple values must be
--   complete paths separated by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not currently supported.
[$sel:extraPythonLibsS3Path:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The status of the last update.
[$sel:lastUpdateStatus:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | A list of security group identifiers used in this
--   <tt>DevEndpoint</tt>.
[$sel:securityGroupIds:DevEndpoint'] :: DevEndpoint -> Maybe [Text]

-- | The point in time at which this <tt>DevEndpoint</tt> was last
--   modified.
[$sel:lastModifiedTimestamp:DevEndpoint'] :: DevEndpoint -> Maybe POSIX

-- | A list of public keys to be used by the <tt>DevEndpoints</tt> for
--   authentication. Using this attribute is preferred over a single public
--   key because the public keys allow you to have a different private key
--   per client.
--   
--   If you previously created an endpoint with a public key, you must
--   remove that key to be able to set a list of public keys. Call the
--   <tt>UpdateDevEndpoint</tt> API operation with the public key content
--   in the <tt>deletePublicKeys</tt> attribute, and the list of new keys
--   in the <tt>addPublicKeys</tt> attribute.
[$sel:publicKeys:DevEndpoint'] :: DevEndpoint -> Maybe [Text]

-- | The ID of the virtual private cloud (VPC) used by this
--   <tt>DevEndpoint</tt>.
[$sel:vpcId:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | A map of arguments used to configure the <tt>DevEndpoint</tt>.
--   
--   Valid arguments are:
--   
--   <ul>
--   <li><pre>"--enable-glue-datacatalog": ""</pre></li>
--   </ul>
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
[$sel:arguments:DevEndpoint'] :: DevEndpoint -> Maybe (HashMap Text Text)

-- | A private IP address to access the <tt>DevEndpoint</tt> within a VPC
--   if the <tt>DevEndpoint</tt> is created within one. The
--   <tt>PrivateAddress</tt> field is present only when you create the
--   <tt>DevEndpoint</tt> within your VPC.
[$sel:privateAddress:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The type of predefined worker that is allocated to the development
--   endpoint. Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   Known issue: when a development endpoint is created with the
--   <tt>G.2X</tt> <tt>WorkerType</tt> configuration, the Spark drivers for
--   the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64
--   GB disk.
[$sel:workerType:DevEndpoint'] :: DevEndpoint -> Maybe WorkerType

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this <tt>DevEndpoint</tt>.
[$sel:securityConfiguration:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The public key to be used by this <tt>DevEndpoint</tt> for
--   authentication. This attribute is provided for backward compatibility
--   because the recommended attribute to use is public keys.
[$sel:publicKey:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The subnet ID for this <tt>DevEndpoint</tt>.
[$sel:subnetId:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   running your ETL scripts on development endpoints.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Development endpoints that are created without specifying a Glue
--   version default to Glue 0.9.
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
[$sel:glueVersion:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The number of Glue Data Processing Units (DPUs) allocated to this
--   <tt>DevEndpoint</tt>.
[$sel:numberOfNodes:DevEndpoint'] :: DevEndpoint -> Maybe Int

-- | The public IP address used by this <tt>DevEndpoint</tt>. The
--   <tt>PublicAddress</tt> field is present only when you create a
--   non-virtual private cloud (VPC) <tt>DevEndpoint</tt>.
[$sel:publicAddress:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The AWS Availability Zone where this <tt>DevEndpoint</tt> is located.
[$sel:availabilityZone:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The Apache Zeppelin port for the remote Apache Spark interpreter.
[$sel:zeppelinRemoteSparkInterpreterPort:DevEndpoint'] :: DevEndpoint -> Maybe Int

-- | The path to one or more Java <tt>.jar</tt> files in an S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>.
--   
--   You can only use pure Java/Scala libraries with a
--   <tt>DevEndpoint</tt>.
[$sel:extraJarsS3Path:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The point in time at which this DevEndpoint was created.
[$sel:createdTimestamp:DevEndpoint'] :: DevEndpoint -> Maybe POSIX

-- | The YARN endpoint address used by this <tt>DevEndpoint</tt>.
[$sel:yarnEndpointAddress:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The Amazon Resource Name (ARN) of the IAM role used in this
--   <tt>DevEndpoint</tt>.
[$sel:roleArn:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | Create a value of <a>DevEndpoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DevEndpoint'</a>, <a>devEndpoint_status</a> - The
--   current status of this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:failureReason:DevEndpoint'</a>,
--   <a>devEndpoint_failureReason</a> - The reason for a current failure in
--   this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:endpointName:DevEndpoint'</a>, <a>devEndpoint_endpointName</a>
--   - The name of the <tt>DevEndpoint</tt>.
--   
--   <a>$sel:numberOfWorkers:DevEndpoint'</a>,
--   <a>devEndpoint_numberOfWorkers</a> - The number of workers of a
--   defined <tt>workerType</tt> that are allocated to the development
--   endpoint.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
--   
--   <a>$sel:extraPythonLibsS3Path:DevEndpoint'</a>,
--   <a>devEndpoint_extraPythonLibsS3Path</a> - The paths to one or more
--   Python libraries in an Amazon S3 bucket that should be loaded in your
--   <tt>DevEndpoint</tt>. Multiple values must be complete paths separated
--   by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not currently supported.
--   
--   <a>$sel:lastUpdateStatus:DevEndpoint'</a>,
--   <a>devEndpoint_lastUpdateStatus</a> - The status of the last update.
--   
--   <a>$sel:securityGroupIds:DevEndpoint'</a>,
--   <a>devEndpoint_securityGroupIds</a> - A list of security group
--   identifiers used in this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:lastModifiedTimestamp:DevEndpoint'</a>,
--   <a>devEndpoint_lastModifiedTimestamp</a> - The point in time at which
--   this <tt>DevEndpoint</tt> was last modified.
--   
--   <a>$sel:publicKeys:DevEndpoint'</a>, <a>devEndpoint_publicKeys</a> - A
--   list of public keys to be used by the <tt>DevEndpoints</tt> for
--   authentication. Using this attribute is preferred over a single public
--   key because the public keys allow you to have a different private key
--   per client.
--   
--   If you previously created an endpoint with a public key, you must
--   remove that key to be able to set a list of public keys. Call the
--   <tt>UpdateDevEndpoint</tt> API operation with the public key content
--   in the <tt>deletePublicKeys</tt> attribute, and the list of new keys
--   in the <tt>addPublicKeys</tt> attribute.
--   
--   <a>$sel:vpcId:DevEndpoint'</a>, <a>devEndpoint_vpcId</a> - The ID of
--   the virtual private cloud (VPC) used by this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:arguments:DevEndpoint'</a>, <a>devEndpoint_arguments</a> - A
--   map of arguments used to configure the <tt>DevEndpoint</tt>.
--   
--   Valid arguments are:
--   
--   <ul>
--   <li><pre>"--enable-glue-datacatalog": ""</pre></li>
--   </ul>
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
--   
--   <a>$sel:privateAddress:DevEndpoint'</a>,
--   <a>devEndpoint_privateAddress</a> - A private IP address to access the
--   <tt>DevEndpoint</tt> within a VPC if the <tt>DevEndpoint</tt> is
--   created within one. The <tt>PrivateAddress</tt> field is present only
--   when you create the <tt>DevEndpoint</tt> within your VPC.
--   
--   <a>$sel:workerType:DevEndpoint'</a>, <a>devEndpoint_workerType</a> -
--   The type of predefined worker that is allocated to the development
--   endpoint. Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   Known issue: when a development endpoint is created with the
--   <tt>G.2X</tt> <tt>WorkerType</tt> configuration, the Spark drivers for
--   the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64
--   GB disk.
--   
--   <a>$sel:securityConfiguration:DevEndpoint'</a>,
--   <a>devEndpoint_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this
--   <tt>DevEndpoint</tt>.
--   
--   <a>$sel:publicKey:DevEndpoint'</a>, <a>devEndpoint_publicKey</a> - The
--   public key to be used by this <tt>DevEndpoint</tt> for authentication.
--   This attribute is provided for backward compatibility because the
--   recommended attribute to use is public keys.
--   
--   <a>$sel:subnetId:DevEndpoint'</a>, <a>devEndpoint_subnetId</a> - The
--   subnet ID for this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:glueVersion:DevEndpoint'</a>, <a>devEndpoint_glueVersion</a> -
--   Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   running your ETL scripts on development endpoints.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Development endpoints that are created without specifying a Glue
--   version default to Glue 0.9.
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
--   
--   <a>$sel:numberOfNodes:DevEndpoint'</a>,
--   <a>devEndpoint_numberOfNodes</a> - The number of Glue Data Processing
--   Units (DPUs) allocated to this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:publicAddress:DevEndpoint'</a>,
--   <a>devEndpoint_publicAddress</a> - The public IP address used by this
--   <tt>DevEndpoint</tt>. The <tt>PublicAddress</tt> field is present only
--   when you create a non-virtual private cloud (VPC)
--   <tt>DevEndpoint</tt>.
--   
--   <a>$sel:availabilityZone:DevEndpoint'</a>,
--   <a>devEndpoint_availabilityZone</a> - The AWS Availability Zone where
--   this <tt>DevEndpoint</tt> is located.
--   
--   <a>$sel:zeppelinRemoteSparkInterpreterPort:DevEndpoint'</a>,
--   <a>devEndpoint_zeppelinRemoteSparkInterpreterPort</a> - The Apache
--   Zeppelin port for the remote Apache Spark interpreter.
--   
--   <a>$sel:extraJarsS3Path:DevEndpoint'</a>,
--   <a>devEndpoint_extraJarsS3Path</a> - The path to one or more Java
--   <tt>.jar</tt> files in an S3 bucket that should be loaded in your
--   <tt>DevEndpoint</tt>.
--   
--   You can only use pure Java/Scala libraries with a
--   <tt>DevEndpoint</tt>.
--   
--   <a>$sel:createdTimestamp:DevEndpoint'</a>,
--   <a>devEndpoint_createdTimestamp</a> - The point in time at which this
--   DevEndpoint was created.
--   
--   <a>$sel:yarnEndpointAddress:DevEndpoint'</a>,
--   <a>devEndpoint_yarnEndpointAddress</a> - The YARN endpoint address
--   used by this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:roleArn:DevEndpoint'</a>, <a>devEndpoint_roleArn</a> - The
--   Amazon Resource Name (ARN) of the IAM role used in this
--   <tt>DevEndpoint</tt>.
newDevEndpoint :: DevEndpoint

-- | The current status of this <tt>DevEndpoint</tt>.
devEndpoint_status :: Lens' DevEndpoint (Maybe Text)

-- | The reason for a current failure in this <tt>DevEndpoint</tt>.
devEndpoint_failureReason :: Lens' DevEndpoint (Maybe Text)

-- | The name of the <tt>DevEndpoint</tt>.
devEndpoint_endpointName :: Lens' DevEndpoint (Maybe Text)

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated to the development endpoint.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
devEndpoint_numberOfWorkers :: Lens' DevEndpoint (Maybe Int)

-- | The paths to one or more Python libraries in an Amazon S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>. Multiple values must be
--   complete paths separated by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not currently supported.
devEndpoint_extraPythonLibsS3Path :: Lens' DevEndpoint (Maybe Text)

-- | The status of the last update.
devEndpoint_lastUpdateStatus :: Lens' DevEndpoint (Maybe Text)

-- | A list of security group identifiers used in this
--   <tt>DevEndpoint</tt>.
devEndpoint_securityGroupIds :: Lens' DevEndpoint (Maybe [Text])

-- | The point in time at which this <tt>DevEndpoint</tt> was last
--   modified.
devEndpoint_lastModifiedTimestamp :: Lens' DevEndpoint (Maybe UTCTime)

-- | A list of public keys to be used by the <tt>DevEndpoints</tt> for
--   authentication. Using this attribute is preferred over a single public
--   key because the public keys allow you to have a different private key
--   per client.
--   
--   If you previously created an endpoint with a public key, you must
--   remove that key to be able to set a list of public keys. Call the
--   <tt>UpdateDevEndpoint</tt> API operation with the public key content
--   in the <tt>deletePublicKeys</tt> attribute, and the list of new keys
--   in the <tt>addPublicKeys</tt> attribute.
devEndpoint_publicKeys :: Lens' DevEndpoint (Maybe [Text])

-- | The ID of the virtual private cloud (VPC) used by this
--   <tt>DevEndpoint</tt>.
devEndpoint_vpcId :: Lens' DevEndpoint (Maybe Text)

-- | A map of arguments used to configure the <tt>DevEndpoint</tt>.
--   
--   Valid arguments are:
--   
--   <ul>
--   <li><pre>"--enable-glue-datacatalog": ""</pre></li>
--   </ul>
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
devEndpoint_arguments :: Lens' DevEndpoint (Maybe (HashMap Text Text))

-- | A private IP address to access the <tt>DevEndpoint</tt> within a VPC
--   if the <tt>DevEndpoint</tt> is created within one. The
--   <tt>PrivateAddress</tt> field is present only when you create the
--   <tt>DevEndpoint</tt> within your VPC.
devEndpoint_privateAddress :: Lens' DevEndpoint (Maybe Text)

-- | The type of predefined worker that is allocated to the development
--   endpoint. Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   Known issue: when a development endpoint is created with the
--   <tt>G.2X</tt> <tt>WorkerType</tt> configuration, the Spark drivers for
--   the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64
--   GB disk.
devEndpoint_workerType :: Lens' DevEndpoint (Maybe WorkerType)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this <tt>DevEndpoint</tt>.
devEndpoint_securityConfiguration :: Lens' DevEndpoint (Maybe Text)

-- | The public key to be used by this <tt>DevEndpoint</tt> for
--   authentication. This attribute is provided for backward compatibility
--   because the recommended attribute to use is public keys.
devEndpoint_publicKey :: Lens' DevEndpoint (Maybe Text)

-- | The subnet ID for this <tt>DevEndpoint</tt>.
devEndpoint_subnetId :: Lens' DevEndpoint (Maybe Text)

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   running your ETL scripts on development endpoints.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Development endpoints that are created without specifying a Glue
--   version default to Glue 0.9.
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
devEndpoint_glueVersion :: Lens' DevEndpoint (Maybe Text)

-- | The number of Glue Data Processing Units (DPUs) allocated to this
--   <tt>DevEndpoint</tt>.
devEndpoint_numberOfNodes :: Lens' DevEndpoint (Maybe Int)

-- | The public IP address used by this <tt>DevEndpoint</tt>. The
--   <tt>PublicAddress</tt> field is present only when you create a
--   non-virtual private cloud (VPC) <tt>DevEndpoint</tt>.
devEndpoint_publicAddress :: Lens' DevEndpoint (Maybe Text)

-- | The AWS Availability Zone where this <tt>DevEndpoint</tt> is located.
devEndpoint_availabilityZone :: Lens' DevEndpoint (Maybe Text)

-- | The Apache Zeppelin port for the remote Apache Spark interpreter.
devEndpoint_zeppelinRemoteSparkInterpreterPort :: Lens' DevEndpoint (Maybe Int)

-- | The path to one or more Java <tt>.jar</tt> files in an S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>.
--   
--   You can only use pure Java/Scala libraries with a
--   <tt>DevEndpoint</tt>.
devEndpoint_extraJarsS3Path :: Lens' DevEndpoint (Maybe Text)

-- | The point in time at which this DevEndpoint was created.
devEndpoint_createdTimestamp :: Lens' DevEndpoint (Maybe UTCTime)

-- | The YARN endpoint address used by this <tt>DevEndpoint</tt>.
devEndpoint_yarnEndpointAddress :: Lens' DevEndpoint (Maybe Text)

-- | The Amazon Resource Name (ARN) of the IAM role used in this
--   <tt>DevEndpoint</tt>.
devEndpoint_roleArn :: Lens' DevEndpoint (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Glue.Types.DevEndpoint.DevEndpoint
instance GHC.Show.Show Network.AWS.Glue.Types.DevEndpoint.DevEndpoint
instance GHC.Read.Read Network.AWS.Glue.Types.DevEndpoint.DevEndpoint
instance GHC.Classes.Eq Network.AWS.Glue.Types.DevEndpoint.DevEndpoint
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.DevEndpoint.DevEndpoint
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.DevEndpoint.DevEndpoint
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.DevEndpoint.DevEndpoint


module Network.AWS.Glue.Types.WorkflowGraph

-- | A workflow graph represents the complete workflow containing all the
--   Glue components present in the workflow and all the directed
--   connections between them.
--   
--   <i>See:</i> <a>newWorkflowGraph</a> smart constructor.
data WorkflowGraph
WorkflowGraph' :: Maybe [Edge] -> Maybe [Node] -> WorkflowGraph

-- | A list of all the directed connections between the nodes belonging to
--   the workflow.
[$sel:edges:WorkflowGraph'] :: WorkflowGraph -> Maybe [Edge]

-- | A list of the the Glue components belong to the workflow represented
--   as nodes.
[$sel:nodes:WorkflowGraph'] :: WorkflowGraph -> Maybe [Node]

-- | Create a value of <a>WorkflowGraph</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:edges:WorkflowGraph'</a>, <a>workflowGraph_edges</a> - A list
--   of all the directed connections between the nodes belonging to the
--   workflow.
--   
--   <a>$sel:nodes:WorkflowGraph'</a>, <a>workflowGraph_nodes</a> - A list
--   of the the Glue components belong to the workflow represented as
--   nodes.
newWorkflowGraph :: WorkflowGraph

-- | A list of all the directed connections between the nodes belonging to
--   the workflow.
workflowGraph_edges :: Lens' WorkflowGraph (Maybe [Edge])

-- | A list of the the Glue components belong to the workflow represented
--   as nodes.
workflowGraph_nodes :: Lens' WorkflowGraph (Maybe [Node])
instance GHC.Generics.Generic Network.AWS.Glue.Types.WorkflowGraph.WorkflowGraph
instance GHC.Show.Show Network.AWS.Glue.Types.WorkflowGraph.WorkflowGraph
instance GHC.Read.Read Network.AWS.Glue.Types.WorkflowGraph.WorkflowGraph
instance GHC.Classes.Eq Network.AWS.Glue.Types.WorkflowGraph.WorkflowGraph
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.WorkflowGraph.WorkflowGraph
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.WorkflowGraph.WorkflowGraph
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.WorkflowGraph.WorkflowGraph


module Network.AWS.Glue.Types.WorkflowRunStatistics

-- | Workflow run statistics provides statistics about the workflow run.
--   
--   <i>See:</i> <a>newWorkflowRunStatistics</a> smart constructor.
data WorkflowRunStatistics
WorkflowRunStatistics' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> WorkflowRunStatistics

-- | Total number Actions in running state.
[$sel:runningActions:WorkflowRunStatistics'] :: WorkflowRunStatistics -> Maybe Int

-- | Total number of Actions that have stopped.
[$sel:stoppedActions:WorkflowRunStatistics'] :: WorkflowRunStatistics -> Maybe Int

-- | Total number of Actions in the workflow run.
[$sel:totalActions:WorkflowRunStatistics'] :: WorkflowRunStatistics -> Maybe Int

-- | Total number of Actions that have failed.
[$sel:failedActions:WorkflowRunStatistics'] :: WorkflowRunStatistics -> Maybe Int

-- | Total number of Actions that timed out.
[$sel:timeoutActions:WorkflowRunStatistics'] :: WorkflowRunStatistics -> Maybe Int

-- | Total number of Actions that have succeeded.
[$sel:succeededActions:WorkflowRunStatistics'] :: WorkflowRunStatistics -> Maybe Int

-- | Create a value of <a>WorkflowRunStatistics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runningActions:WorkflowRunStatistics'</a>,
--   <a>workflowRunStatistics_runningActions</a> - Total number Actions in
--   running state.
--   
--   <a>$sel:stoppedActions:WorkflowRunStatistics'</a>,
--   <a>workflowRunStatistics_stoppedActions</a> - Total number of Actions
--   that have stopped.
--   
--   <a>$sel:totalActions:WorkflowRunStatistics'</a>,
--   <a>workflowRunStatistics_totalActions</a> - Total number of Actions in
--   the workflow run.
--   
--   <a>$sel:failedActions:WorkflowRunStatistics'</a>,
--   <a>workflowRunStatistics_failedActions</a> - Total number of Actions
--   that have failed.
--   
--   <a>$sel:timeoutActions:WorkflowRunStatistics'</a>,
--   <a>workflowRunStatistics_timeoutActions</a> - Total number of Actions
--   that timed out.
--   
--   <a>$sel:succeededActions:WorkflowRunStatistics'</a>,
--   <a>workflowRunStatistics_succeededActions</a> - Total number of
--   Actions that have succeeded.
newWorkflowRunStatistics :: WorkflowRunStatistics

-- | Total number Actions in running state.
workflowRunStatistics_runningActions :: Lens' WorkflowRunStatistics (Maybe Int)

-- | Total number of Actions that have stopped.
workflowRunStatistics_stoppedActions :: Lens' WorkflowRunStatistics (Maybe Int)

-- | Total number of Actions in the workflow run.
workflowRunStatistics_totalActions :: Lens' WorkflowRunStatistics (Maybe Int)

-- | Total number of Actions that have failed.
workflowRunStatistics_failedActions :: Lens' WorkflowRunStatistics (Maybe Int)

-- | Total number of Actions that timed out.
workflowRunStatistics_timeoutActions :: Lens' WorkflowRunStatistics (Maybe Int)

-- | Total number of Actions that have succeeded.
workflowRunStatistics_succeededActions :: Lens' WorkflowRunStatistics (Maybe Int)
instance GHC.Generics.Generic Network.AWS.Glue.Types.WorkflowRunStatistics.WorkflowRunStatistics
instance GHC.Show.Show Network.AWS.Glue.Types.WorkflowRunStatistics.WorkflowRunStatistics
instance GHC.Read.Read Network.AWS.Glue.Types.WorkflowRunStatistics.WorkflowRunStatistics
instance GHC.Classes.Eq Network.AWS.Glue.Types.WorkflowRunStatistics.WorkflowRunStatistics
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.WorkflowRunStatistics.WorkflowRunStatistics
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.WorkflowRunStatistics.WorkflowRunStatistics
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.WorkflowRunStatistics.WorkflowRunStatistics


module Network.AWS.Glue.Types.WorkflowRunStatus
newtype WorkflowRunStatus
WorkflowRunStatus' :: Text -> WorkflowRunStatus
[fromWorkflowRunStatus] :: WorkflowRunStatus -> Text
pattern WorkflowRunStatus_COMPLETED :: WorkflowRunStatus
pattern WorkflowRunStatus_ERROR :: WorkflowRunStatus
pattern WorkflowRunStatus_RUNNING :: WorkflowRunStatus
pattern WorkflowRunStatus_STOPPED :: WorkflowRunStatus
pattern WorkflowRunStatus_STOPPING :: WorkflowRunStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Glue.Types.WorkflowRunStatus.WorkflowRunStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Glue.Types.WorkflowRunStatus.WorkflowRunStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Glue.Types.WorkflowRunStatus.WorkflowRunStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.Types.WorkflowRunStatus.WorkflowRunStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Glue.Types.WorkflowRunStatus.WorkflowRunStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.WorkflowRunStatus.WorkflowRunStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.Types.WorkflowRunStatus.WorkflowRunStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Glue.Types.WorkflowRunStatus.WorkflowRunStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Glue.Types.WorkflowRunStatus.WorkflowRunStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Glue.Types.WorkflowRunStatus.WorkflowRunStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Glue.Types.WorkflowRunStatus.WorkflowRunStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Glue.Types.WorkflowRunStatus.WorkflowRunStatus
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.WorkflowRunStatus.WorkflowRunStatus
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.WorkflowRunStatus.WorkflowRunStatus
instance GHC.Generics.Generic Network.AWS.Glue.Types.WorkflowRunStatus.WorkflowRunStatus
instance GHC.Classes.Ord Network.AWS.Glue.Types.WorkflowRunStatus.WorkflowRunStatus
instance GHC.Classes.Eq Network.AWS.Glue.Types.WorkflowRunStatus.WorkflowRunStatus
instance GHC.Read.Read Network.AWS.Glue.Types.WorkflowRunStatus.WorkflowRunStatus
instance GHC.Show.Show Network.AWS.Glue.Types.WorkflowRunStatus.WorkflowRunStatus


module Network.AWS.Glue.Types.WorkflowRun

-- | A workflow run is an execution of a workflow providing all the runtime
--   information.
--   
--   <i>See:</i> <a>newWorkflowRun</a> smart constructor.
data WorkflowRun
WorkflowRun' :: Maybe POSIX -> Maybe WorkflowRunStatus -> Maybe WorkflowGraph -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe WorkflowRunStatistics -> Maybe StartingEventBatchCondition -> Maybe Text -> Maybe (HashMap Text Text) -> WorkflowRun

-- | The date and time when the workflow run completed.
[$sel:completedOn:WorkflowRun'] :: WorkflowRun -> Maybe POSIX

-- | The status of the workflow run.
[$sel:status:WorkflowRun'] :: WorkflowRun -> Maybe WorkflowRunStatus

-- | The graph representing all the Glue components that belong to the
--   workflow as nodes and directed connections between them as edges.
[$sel:graph:WorkflowRun'] :: WorkflowRun -> Maybe WorkflowGraph

-- | The date and time when the workflow run was started.
[$sel:startedOn:WorkflowRun'] :: WorkflowRun -> Maybe POSIX

-- | The ID of this workflow run.
[$sel:workflowRunId:WorkflowRun'] :: WorkflowRun -> Maybe Text

-- | Name of the workflow that was run.
[$sel:name:WorkflowRun'] :: WorkflowRun -> Maybe Text

-- | The ID of the previous workflow run.
[$sel:previousRunId:WorkflowRun'] :: WorkflowRun -> Maybe Text

-- | The statistics of the run.
[$sel:statistics:WorkflowRun'] :: WorkflowRun -> Maybe WorkflowRunStatistics

-- | The batch condition that started the workflow run.
[$sel:startingEventBatchCondition:WorkflowRun'] :: WorkflowRun -> Maybe StartingEventBatchCondition

-- | This error message describes any error that may have occurred in
--   starting the workflow run. Currently the only error message is
--   "Concurrent runs exceeded for workflow: <tt>foo</tt>."
[$sel:errorMessage:WorkflowRun'] :: WorkflowRun -> Maybe Text

-- | The workflow run properties which were set during the run.
[$sel:workflowRunProperties:WorkflowRun'] :: WorkflowRun -> Maybe (HashMap Text Text)

-- | Create a value of <a>WorkflowRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completedOn:WorkflowRun'</a>, <a>workflowRun_completedOn</a> -
--   The date and time when the workflow run completed.
--   
--   <a>$sel:status:WorkflowRun'</a>, <a>workflowRun_status</a> - The
--   status of the workflow run.
--   
--   <a>$sel:graph:WorkflowRun'</a>, <a>workflowRun_graph</a> - The graph
--   representing all the Glue components that belong to the workflow as
--   nodes and directed connections between them as edges.
--   
--   <a>$sel:startedOn:WorkflowRun'</a>, <a>workflowRun_startedOn</a> - The
--   date and time when the workflow run was started.
--   
--   <a>$sel:workflowRunId:WorkflowRun'</a>,
--   <a>workflowRun_workflowRunId</a> - The ID of this workflow run.
--   
--   <a>$sel:name:WorkflowRun'</a>, <a>workflowRun_name</a> - Name of the
--   workflow that was run.
--   
--   <a>$sel:previousRunId:WorkflowRun'</a>,
--   <a>workflowRun_previousRunId</a> - The ID of the previous workflow
--   run.
--   
--   <a>$sel:statistics:WorkflowRun'</a>, <a>workflowRun_statistics</a> -
--   The statistics of the run.
--   
--   <a>$sel:startingEventBatchCondition:WorkflowRun'</a>,
--   <a>workflowRun_startingEventBatchCondition</a> - The batch condition
--   that started the workflow run.
--   
--   <a>$sel:errorMessage:WorkflowRun'</a>, <a>workflowRun_errorMessage</a>
--   - This error message describes any error that may have occurred in
--   starting the workflow run. Currently the only error message is
--   "Concurrent runs exceeded for workflow: <tt>foo</tt>."
--   
--   <a>$sel:workflowRunProperties:WorkflowRun'</a>,
--   <a>workflowRun_workflowRunProperties</a> - The workflow run properties
--   which were set during the run.
newWorkflowRun :: WorkflowRun

-- | The date and time when the workflow run completed.
workflowRun_completedOn :: Lens' WorkflowRun (Maybe UTCTime)

-- | The status of the workflow run.
workflowRun_status :: Lens' WorkflowRun (Maybe WorkflowRunStatus)

-- | The graph representing all the Glue components that belong to the
--   workflow as nodes and directed connections between them as edges.
workflowRun_graph :: Lens' WorkflowRun (Maybe WorkflowGraph)

-- | The date and time when the workflow run was started.
workflowRun_startedOn :: Lens' WorkflowRun (Maybe UTCTime)

-- | The ID of this workflow run.
workflowRun_workflowRunId :: Lens' WorkflowRun (Maybe Text)

-- | Name of the workflow that was run.
workflowRun_name :: Lens' WorkflowRun (Maybe Text)

-- | The ID of the previous workflow run.
workflowRun_previousRunId :: Lens' WorkflowRun (Maybe Text)

-- | The statistics of the run.
workflowRun_statistics :: Lens' WorkflowRun (Maybe WorkflowRunStatistics)

-- | The batch condition that started the workflow run.
workflowRun_startingEventBatchCondition :: Lens' WorkflowRun (Maybe StartingEventBatchCondition)

-- | This error message describes any error that may have occurred in
--   starting the workflow run. Currently the only error message is
--   "Concurrent runs exceeded for workflow: <tt>foo</tt>."
workflowRun_errorMessage :: Lens' WorkflowRun (Maybe Text)

-- | The workflow run properties which were set during the run.
workflowRun_workflowRunProperties :: Lens' WorkflowRun (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.Glue.Types.WorkflowRun.WorkflowRun
instance GHC.Show.Show Network.AWS.Glue.Types.WorkflowRun.WorkflowRun
instance GHC.Read.Read Network.AWS.Glue.Types.WorkflowRun.WorkflowRun
instance GHC.Classes.Eq Network.AWS.Glue.Types.WorkflowRun.WorkflowRun
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.WorkflowRun.WorkflowRun
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.WorkflowRun.WorkflowRun
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.WorkflowRun.WorkflowRun


module Network.AWS.Glue.Types.Workflow

-- | A workflow is a collection of multiple dependent Glue jobs and
--   crawlers that are run to complete a complex ETL task. A workflow
--   manages the execution and monitoring of all its jobs and crawlers.
--   
--   <i>See:</i> <a>newWorkflow</a> smart constructor.
data Workflow
Workflow' :: Maybe WorkflowGraph -> Maybe POSIX -> Maybe BlueprintDetails -> Maybe Int -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe WorkflowRun -> Maybe Text -> Maybe POSIX -> Workflow

-- | The graph representing all the Glue components that belong to the
--   workflow as nodes and directed connections between them as edges.
[$sel:graph:Workflow'] :: Workflow -> Maybe WorkflowGraph

-- | The date and time when the workflow was last modified.
[$sel:lastModifiedOn:Workflow'] :: Workflow -> Maybe POSIX

-- | This structure indicates the details of the blueprint that this
--   particular workflow is created from.
[$sel:blueprintDetails:Workflow'] :: Workflow -> Maybe BlueprintDetails

-- | You can use this parameter to prevent unwanted multiple updates to
--   data, to control costs, or in some cases, to prevent exceeding the
--   maximum number of concurrent runs of any of the component jobs. If you
--   leave this parameter blank, there is no limit to the number of
--   concurrent workflow runs.
[$sel:maxConcurrentRuns:Workflow'] :: Workflow -> Maybe Int

-- | A collection of properties to be used as part of each execution of the
--   workflow. The run properties are made available to each job in the
--   workflow. A job can modify the properties for the next jobs in the
--   flow.
[$sel:defaultRunProperties:Workflow'] :: Workflow -> Maybe (HashMap Text Text)

-- | The name of the workflow.
[$sel:name:Workflow'] :: Workflow -> Maybe Text

-- | The information about the last execution of the workflow.
[$sel:lastRun:Workflow'] :: Workflow -> Maybe WorkflowRun

-- | A description of the workflow.
[$sel:description:Workflow'] :: Workflow -> Maybe Text

-- | The date and time when the workflow was created.
[$sel:createdOn:Workflow'] :: Workflow -> Maybe POSIX

-- | Create a value of <a>Workflow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:graph:Workflow'</a>, <a>workflow_graph</a> - The graph
--   representing all the Glue components that belong to the workflow as
--   nodes and directed connections between them as edges.
--   
--   <a>$sel:lastModifiedOn:Workflow'</a>, <a>workflow_lastModifiedOn</a> -
--   The date and time when the workflow was last modified.
--   
--   <a>$sel:blueprintDetails:Workflow'</a>,
--   <a>workflow_blueprintDetails</a> - This structure indicates the
--   details of the blueprint that this particular workflow is created
--   from.
--   
--   <a>$sel:maxConcurrentRuns:Workflow'</a>,
--   <a>workflow_maxConcurrentRuns</a> - You can use this parameter to
--   prevent unwanted multiple updates to data, to control costs, or in
--   some cases, to prevent exceeding the maximum number of concurrent runs
--   of any of the component jobs. If you leave this parameter blank, there
--   is no limit to the number of concurrent workflow runs.
--   
--   <a>$sel:defaultRunProperties:Workflow'</a>,
--   <a>workflow_defaultRunProperties</a> - A collection of properties to
--   be used as part of each execution of the workflow. The run properties
--   are made available to each job in the workflow. A job can modify the
--   properties for the next jobs in the flow.
--   
--   <a>$sel:name:Workflow'</a>, <a>workflow_name</a> - The name of the
--   workflow.
--   
--   <a>$sel:lastRun:Workflow'</a>, <a>workflow_lastRun</a> - The
--   information about the last execution of the workflow.
--   
--   <a>$sel:description:Workflow'</a>, <a>workflow_description</a> - A
--   description of the workflow.
--   
--   <a>$sel:createdOn:Workflow'</a>, <a>workflow_createdOn</a> - The date
--   and time when the workflow was created.
newWorkflow :: Workflow

-- | The graph representing all the Glue components that belong to the
--   workflow as nodes and directed connections between them as edges.
workflow_graph :: Lens' Workflow (Maybe WorkflowGraph)

-- | The date and time when the workflow was last modified.
workflow_lastModifiedOn :: Lens' Workflow (Maybe UTCTime)

-- | This structure indicates the details of the blueprint that this
--   particular workflow is created from.
workflow_blueprintDetails :: Lens' Workflow (Maybe BlueprintDetails)

-- | You can use this parameter to prevent unwanted multiple updates to
--   data, to control costs, or in some cases, to prevent exceeding the
--   maximum number of concurrent runs of any of the component jobs. If you
--   leave this parameter blank, there is no limit to the number of
--   concurrent workflow runs.
workflow_maxConcurrentRuns :: Lens' Workflow (Maybe Int)

-- | A collection of properties to be used as part of each execution of the
--   workflow. The run properties are made available to each job in the
--   workflow. A job can modify the properties for the next jobs in the
--   flow.
workflow_defaultRunProperties :: Lens' Workflow (Maybe (HashMap Text Text))

-- | The name of the workflow.
workflow_name :: Lens' Workflow (Maybe Text)

-- | The information about the last execution of the workflow.
workflow_lastRun :: Lens' Workflow (Maybe WorkflowRun)

-- | A description of the workflow.
workflow_description :: Lens' Workflow (Maybe Text)

-- | The date and time when the workflow was created.
workflow_createdOn :: Lens' Workflow (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.Glue.Types.Workflow.Workflow
instance GHC.Show.Show Network.AWS.Glue.Types.Workflow.Workflow
instance GHC.Read.Read Network.AWS.Glue.Types.Workflow.Workflow
instance GHC.Classes.Eq Network.AWS.Glue.Types.Workflow.Workflow
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Workflow.Workflow
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Workflow.Workflow
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Workflow.Workflow


module Network.AWS.Glue.Types.XMLClassifier

-- | A classifier for <tt>XML</tt> content.
--   
--   <i>See:</i> <a>newXMLClassifier</a> smart constructor.
data XMLClassifier
XMLClassifier' :: Maybe POSIX -> Maybe POSIX -> Maybe Integer -> Maybe Text -> Text -> Text -> XMLClassifier

-- | The time that this classifier was registered.
[$sel:creationTime:XMLClassifier'] :: XMLClassifier -> Maybe POSIX

-- | The time that this classifier was last updated.
[$sel:lastUpdated:XMLClassifier'] :: XMLClassifier -> Maybe POSIX

-- | The version of this classifier.
[$sel:version:XMLClassifier'] :: XMLClassifier -> Maybe Integer

-- | The XML tag designating the element that contains each record in an
--   XML document being parsed. This can't identify a self-closing element
--   (closed by <tt>/&gt;</tt>). An empty row element that contains only
--   attributes can be parsed as long as it ends with a closing tag (for
--   example, <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is
--   okay, but <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
[$sel:rowTag:XMLClassifier'] :: XMLClassifier -> Maybe Text

-- | The name of the classifier.
[$sel:name:XMLClassifier'] :: XMLClassifier -> Text

-- | An identifier of the data format that the classifier matches.
[$sel:classification:XMLClassifier'] :: XMLClassifier -> Text

-- | Create a value of <a>XMLClassifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:XMLClassifier'</a>,
--   <a>xMLClassifier_creationTime</a> - The time that this classifier was
--   registered.
--   
--   <a>$sel:lastUpdated:XMLClassifier'</a>,
--   <a>xMLClassifier_lastUpdated</a> - The time that this classifier was
--   last updated.
--   
--   <a>$sel:version:XMLClassifier'</a>, <a>xMLClassifier_version</a> - The
--   version of this classifier.
--   
--   <a>$sel:rowTag:XMLClassifier'</a>, <a>xMLClassifier_rowTag</a> - The
--   XML tag designating the element that contains each record in an XML
--   document being parsed. This can't identify a self-closing element
--   (closed by <tt>/&gt;</tt>). An empty row element that contains only
--   attributes can be parsed as long as it ends with a closing tag (for
--   example, <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is
--   okay, but <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
--   
--   <a>$sel:name:XMLClassifier'</a>, <a>xMLClassifier_name</a> - The name
--   of the classifier.
--   
--   <a>$sel:classification:XMLClassifier'</a>,
--   <a>xMLClassifier_classification</a> - An identifier of the data format
--   that the classifier matches.
newXMLClassifier :: Text -> Text -> XMLClassifier

-- | The time that this classifier was registered.
xMLClassifier_creationTime :: Lens' XMLClassifier (Maybe UTCTime)

-- | The time that this classifier was last updated.
xMLClassifier_lastUpdated :: Lens' XMLClassifier (Maybe UTCTime)

-- | The version of this classifier.
xMLClassifier_version :: Lens' XMLClassifier (Maybe Integer)

-- | The XML tag designating the element that contains each record in an
--   XML document being parsed. This can't identify a self-closing element
--   (closed by <tt>/&gt;</tt>). An empty row element that contains only
--   attributes can be parsed as long as it ends with a closing tag (for
--   example, <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is
--   okay, but <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
xMLClassifier_rowTag :: Lens' XMLClassifier (Maybe Text)

-- | The name of the classifier.
xMLClassifier_name :: Lens' XMLClassifier Text

-- | An identifier of the data format that the classifier matches.
xMLClassifier_classification :: Lens' XMLClassifier Text
instance GHC.Generics.Generic Network.AWS.Glue.Types.XMLClassifier.XMLClassifier
instance GHC.Show.Show Network.AWS.Glue.Types.XMLClassifier.XMLClassifier
instance GHC.Read.Read Network.AWS.Glue.Types.XMLClassifier.XMLClassifier
instance GHC.Classes.Eq Network.AWS.Glue.Types.XMLClassifier.XMLClassifier
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.XMLClassifier.XMLClassifier
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.XMLClassifier.XMLClassifier
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.XMLClassifier.XMLClassifier


module Network.AWS.Glue.Types.Classifier

-- | Classifiers are triggered during a crawl task. A classifier checks
--   whether a given file is in a format it can handle. If it is, the
--   classifier creates a schema in the form of a <tt>StructType</tt>
--   object that matches that data format.
--   
--   You can use the standard classifiers that Glue provides, or you can
--   write your own classifiers to best categorize your data sources and
--   specify the appropriate schemas to use for them. A classifier can be a
--   <tt>grok</tt> classifier, an <tt>XML</tt> classifier, a <tt>JSON</tt>
--   classifier, or a custom <tt>CSV</tt> classifier, as specified in one
--   of the fields in the <tt>Classifier</tt> object.
--   
--   <i>See:</i> <a>newClassifier</a> smart constructor.
data Classifier
Classifier' :: Maybe GrokClassifier -> Maybe XMLClassifier -> Maybe CsvClassifier -> Maybe JsonClassifier -> Classifier

-- | A classifier that uses <tt>grok</tt>.
[$sel:grokClassifier:Classifier'] :: Classifier -> Maybe GrokClassifier

-- | A classifier for XML content.
[$sel:xMLClassifier:Classifier'] :: Classifier -> Maybe XMLClassifier

-- | A classifier for comma-separated values (CSV).
[$sel:csvClassifier:Classifier'] :: Classifier -> Maybe CsvClassifier

-- | A classifier for JSON content.
[$sel:jsonClassifier:Classifier'] :: Classifier -> Maybe JsonClassifier

-- | Create a value of <a>Classifier</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:grokClassifier:Classifier'</a>,
--   <a>classifier_grokClassifier</a> - A classifier that uses
--   <tt>grok</tt>.
--   
--   <a>$sel:xMLClassifier:Classifier'</a>, <a>classifier_xMLClassifier</a>
--   - A classifier for XML content.
--   
--   <a>$sel:csvClassifier:Classifier'</a>, <a>classifier_csvClassifier</a>
--   - A classifier for comma-separated values (CSV).
--   
--   <a>$sel:jsonClassifier:Classifier'</a>,
--   <a>classifier_jsonClassifier</a> - A classifier for JSON content.
newClassifier :: Classifier

-- | A classifier that uses <tt>grok</tt>.
classifier_grokClassifier :: Lens' Classifier (Maybe GrokClassifier)

-- | A classifier for XML content.
classifier_xMLClassifier :: Lens' Classifier (Maybe XMLClassifier)

-- | A classifier for comma-separated values (CSV).
classifier_csvClassifier :: Lens' Classifier (Maybe CsvClassifier)

-- | A classifier for JSON content.
classifier_jsonClassifier :: Lens' Classifier (Maybe JsonClassifier)
instance GHC.Generics.Generic Network.AWS.Glue.Types.Classifier.Classifier
instance GHC.Show.Show Network.AWS.Glue.Types.Classifier.Classifier
instance GHC.Read.Read Network.AWS.Glue.Types.Classifier.Classifier
instance GHC.Classes.Eq Network.AWS.Glue.Types.Classifier.Classifier
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Glue.Types.Classifier.Classifier
instance Data.Hashable.Class.Hashable Network.AWS.Glue.Types.Classifier.Classifier
instance Control.DeepSeq.NFData Network.AWS.Glue.Types.Classifier.Classifier


module Network.AWS.Glue.Types

-- | API version <tt>2017-03-31</tt> of the Amazon Glue SDK configuration.
defaultService :: Service

-- | A value could not be validated.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Access to a resource was denied.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation cannot be performed because the crawler is already
--   running.
_CrawlerRunningException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified scheduler is transitioning.
_SchedulerTransitioningException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified scheduler is already running.
_SchedulerRunningException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A specified condition was not satisfied.
_ConditionCheckFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Too many jobs are being run concurrently.
_ConcurrentRunsExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The workflow is in an invalid state to perform a requested operation.
_IllegalWorkflowStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There is no applicable schedule.
_NoScheduleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation timed out.
_OperationTimeoutException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The <tt>CreatePartitions</tt> API was called on a table that has
--   indexes enabled.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified crawler is not running.
_CrawlerNotRunningException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There was a version conflict.
_VersionMismatchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The machine learning transform is not ready to run.
_MLTransformNotReadyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A specified entity does not exist
_EntityNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Two processes are trying to modify a resource simultaneously.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified scheduler is not running.
_SchedulerNotRunningException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal service error occurred.
_InternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The input provided was not valid.
_InvalidInputException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource numerical limit was exceeded.
_ResourceNumberLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An encryption operation failed.
_GlueEncryptionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The same unique identifier was associated with two different records.
_IdempotentParameterMismatchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified crawler is stopping.
_CrawlerStoppingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Prism for IllegalBlueprintStateException' errors.
_IllegalBlueprintStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource to be created or added already exists.
_AlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError
newtype BackfillErrorCode
BackfillErrorCode' :: Text -> BackfillErrorCode
[fromBackfillErrorCode] :: BackfillErrorCode -> Text
pattern BackfillErrorCode_ENCRYPTED_PARTITION_ERROR :: BackfillErrorCode
pattern BackfillErrorCode_INTERNAL_ERROR :: BackfillErrorCode
pattern BackfillErrorCode_INVALID_PARTITION_TYPE_DATA_ERROR :: BackfillErrorCode
pattern BackfillErrorCode_MISSING_PARTITION_VALUE_ERROR :: BackfillErrorCode
pattern BackfillErrorCode_UNSUPPORTED_PARTITION_CHARACTER_ERROR :: BackfillErrorCode
newtype BlueprintRunState
BlueprintRunState' :: Text -> BlueprintRunState
[fromBlueprintRunState] :: BlueprintRunState -> Text
pattern BlueprintRunState_FAILED :: BlueprintRunState
pattern BlueprintRunState_ROLLING_BACK :: BlueprintRunState
pattern BlueprintRunState_RUNNING :: BlueprintRunState
pattern BlueprintRunState_SUCCEEDED :: BlueprintRunState
newtype BlueprintStatus
BlueprintStatus' :: Text -> BlueprintStatus
[fromBlueprintStatus] :: BlueprintStatus -> Text
pattern BlueprintStatus_ACTIVE :: BlueprintStatus
pattern BlueprintStatus_CREATING :: BlueprintStatus
pattern BlueprintStatus_FAILED :: BlueprintStatus
pattern BlueprintStatus_UPDATING :: BlueprintStatus
newtype CatalogEncryptionMode
CatalogEncryptionMode' :: Text -> CatalogEncryptionMode
[fromCatalogEncryptionMode] :: CatalogEncryptionMode -> Text
pattern CatalogEncryptionMode_DISABLED :: CatalogEncryptionMode
pattern CatalogEncryptionMode_SSE_KMS :: CatalogEncryptionMode
newtype CloudWatchEncryptionMode
CloudWatchEncryptionMode' :: Text -> CloudWatchEncryptionMode
[fromCloudWatchEncryptionMode] :: CloudWatchEncryptionMode -> Text
pattern CloudWatchEncryptionMode_DISABLED :: CloudWatchEncryptionMode
pattern CloudWatchEncryptionMode_SSE_KMS :: CloudWatchEncryptionMode
newtype ColumnStatisticsType
ColumnStatisticsType' :: Text -> ColumnStatisticsType
[fromColumnStatisticsType] :: ColumnStatisticsType -> Text
pattern ColumnStatisticsType_BINARY :: ColumnStatisticsType
pattern ColumnStatisticsType_BOOLEAN :: ColumnStatisticsType
pattern ColumnStatisticsType_DATE :: ColumnStatisticsType
pattern ColumnStatisticsType_DECIMAL :: ColumnStatisticsType
pattern ColumnStatisticsType_DOUBLE :: ColumnStatisticsType
pattern ColumnStatisticsType_LONG :: ColumnStatisticsType
pattern ColumnStatisticsType_STRING :: ColumnStatisticsType
newtype Comparator
Comparator' :: Text -> Comparator
[fromComparator] :: Comparator -> Text
pattern Comparator_EQUALS :: Comparator
pattern Comparator_GREATER_THAN :: Comparator
pattern Comparator_GREATER_THAN_EQUALS :: Comparator
pattern Comparator_LESS_THAN :: Comparator
pattern Comparator_LESS_THAN_EQUALS :: Comparator
newtype Compatibility
Compatibility' :: Text -> Compatibility
[fromCompatibility] :: Compatibility -> Text
pattern Compatibility_BACKWARD :: Compatibility
pattern Compatibility_BACKWARD_ALL :: Compatibility
pattern Compatibility_DISABLED :: Compatibility
pattern Compatibility_FORWARD :: Compatibility
pattern Compatibility_FORWARD_ALL :: Compatibility
pattern Compatibility_FULL :: Compatibility
pattern Compatibility_FULL_ALL :: Compatibility
pattern Compatibility_NONE :: Compatibility
newtype ConnectionPropertyKey
ConnectionPropertyKey' :: Text -> ConnectionPropertyKey
[fromConnectionPropertyKey] :: ConnectionPropertyKey -> Text
pattern ConnectionPropertyKey_CONFIG_FILES :: ConnectionPropertyKey
pattern ConnectionPropertyKey_CONNECTION_URL :: ConnectionPropertyKey
pattern ConnectionPropertyKey_CONNECTOR_CLASS_NAME :: ConnectionPropertyKey
pattern ConnectionPropertyKey_CONNECTOR_TYPE :: ConnectionPropertyKey
pattern ConnectionPropertyKey_CONNECTOR_URL :: ConnectionPropertyKey
pattern ConnectionPropertyKey_CUSTOM_JDBC_CERT :: ConnectionPropertyKey
pattern ConnectionPropertyKey_CUSTOM_JDBC_CERT_STRING :: ConnectionPropertyKey
pattern ConnectionPropertyKey_ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD :: ConnectionPropertyKey
pattern ConnectionPropertyKey_ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD :: ConnectionPropertyKey
pattern ConnectionPropertyKey_ENCRYPTED_PASSWORD :: ConnectionPropertyKey
pattern ConnectionPropertyKey_HOST :: ConnectionPropertyKey
pattern ConnectionPropertyKey_INSTANCE_ID :: ConnectionPropertyKey
pattern ConnectionPropertyKey_JDBC_CONNECTION_URL :: ConnectionPropertyKey
pattern ConnectionPropertyKey_JDBC_DRIVER_CLASS_NAME :: ConnectionPropertyKey
pattern ConnectionPropertyKey_JDBC_DRIVER_JAR_URI :: ConnectionPropertyKey
pattern ConnectionPropertyKey_JDBC_ENFORCE_SSL :: ConnectionPropertyKey
pattern ConnectionPropertyKey_JDBC_ENGINE :: ConnectionPropertyKey
pattern ConnectionPropertyKey_JDBC_ENGINE_VERSION :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_BOOTSTRAP_SERVERS :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_CLIENT_KEYSTORE :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_CLIENT_KEYSTORE_PASSWORD :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_CLIENT_KEY_PASSWORD :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_CUSTOM_CERT :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_SKIP_CUSTOM_CERT_VALIDATION :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_SSL_ENABLED :: ConnectionPropertyKey
pattern ConnectionPropertyKey_PASSWORD :: ConnectionPropertyKey
pattern ConnectionPropertyKey_PORT :: ConnectionPropertyKey
pattern ConnectionPropertyKey_SECRET_ID :: ConnectionPropertyKey
pattern ConnectionPropertyKey_SKIP_CUSTOM_JDBC_CERT_VALIDATION :: ConnectionPropertyKey
pattern ConnectionPropertyKey_USERNAME :: ConnectionPropertyKey
newtype ConnectionType
ConnectionType' :: Text -> ConnectionType
[fromConnectionType] :: ConnectionType -> Text
pattern ConnectionType_CUSTOM :: ConnectionType
pattern ConnectionType_JDBC :: ConnectionType
pattern ConnectionType_KAFKA :: ConnectionType
pattern ConnectionType_MARKETPLACE :: ConnectionType
pattern ConnectionType_MONGODB :: ConnectionType
pattern ConnectionType_NETWORK :: ConnectionType
pattern ConnectionType_SFTP :: ConnectionType
newtype CrawlState
CrawlState' :: Text -> CrawlState
[fromCrawlState] :: CrawlState -> Text
pattern CrawlState_CANCELLED :: CrawlState
pattern CrawlState_CANCELLING :: CrawlState
pattern CrawlState_FAILED :: CrawlState
pattern CrawlState_RUNNING :: CrawlState
pattern CrawlState_SUCCEEDED :: CrawlState
newtype CrawlerLineageSettings
CrawlerLineageSettings' :: Text -> CrawlerLineageSettings
[fromCrawlerLineageSettings] :: CrawlerLineageSettings -> Text
pattern CrawlerLineageSettings_DISABLE :: CrawlerLineageSettings
pattern CrawlerLineageSettings_ENABLE :: CrawlerLineageSettings
newtype CrawlerState
CrawlerState' :: Text -> CrawlerState
[fromCrawlerState] :: CrawlerState -> Text
pattern CrawlerState_READY :: CrawlerState
pattern CrawlerState_RUNNING :: CrawlerState
pattern CrawlerState_STOPPING :: CrawlerState
newtype CsvHeaderOption
CsvHeaderOption' :: Text -> CsvHeaderOption
[fromCsvHeaderOption] :: CsvHeaderOption -> Text
pattern CsvHeaderOption_ABSENT :: CsvHeaderOption
pattern CsvHeaderOption_PRESENT :: CsvHeaderOption
pattern CsvHeaderOption_UNKNOWN :: CsvHeaderOption
newtype DataFormat
DataFormat' :: Text -> DataFormat
[fromDataFormat] :: DataFormat -> Text
pattern DataFormat_AVRO :: DataFormat
pattern DataFormat_JSON :: DataFormat
newtype DeleteBehavior
DeleteBehavior' :: Text -> DeleteBehavior
[fromDeleteBehavior] :: DeleteBehavior -> Text
pattern DeleteBehavior_DELETE_FROM_DATABASE :: DeleteBehavior
pattern DeleteBehavior_DEPRECATE_IN_DATABASE :: DeleteBehavior
pattern DeleteBehavior_LOG :: DeleteBehavior
newtype EnableHybridValues
EnableHybridValues' :: Text -> EnableHybridValues
[fromEnableHybridValues] :: EnableHybridValues -> Text
pattern EnableHybridValues_FALSE :: EnableHybridValues
pattern EnableHybridValues_TRUE :: EnableHybridValues
newtype ExistCondition
ExistCondition' :: Text -> ExistCondition
[fromExistCondition] :: ExistCondition -> Text
pattern ExistCondition_MUST_EXIST :: ExistCondition
pattern ExistCondition_NONE :: ExistCondition
pattern ExistCondition_NOT_EXIST :: ExistCondition
newtype JobBookmarksEncryptionMode
JobBookmarksEncryptionMode' :: Text -> JobBookmarksEncryptionMode
[fromJobBookmarksEncryptionMode] :: JobBookmarksEncryptionMode -> Text
pattern JobBookmarksEncryptionMode_CSE_KMS :: JobBookmarksEncryptionMode
pattern JobBookmarksEncryptionMode_DISABLED :: JobBookmarksEncryptionMode
newtype JobRunState
JobRunState' :: Text -> JobRunState
[fromJobRunState] :: JobRunState -> Text
pattern JobRunState_FAILED :: JobRunState
pattern JobRunState_RUNNING :: JobRunState
pattern JobRunState_STARTING :: JobRunState
pattern JobRunState_STOPPED :: JobRunState
pattern JobRunState_STOPPING :: JobRunState
pattern JobRunState_SUCCEEDED :: JobRunState
pattern JobRunState_TIMEOUT :: JobRunState
newtype Language
Language' :: Text -> Language
[fromLanguage] :: Language -> Text
pattern Language_PYTHON :: Language
pattern Language_SCALA :: Language
newtype LastCrawlStatus
LastCrawlStatus' :: Text -> LastCrawlStatus
[fromLastCrawlStatus] :: LastCrawlStatus -> Text
pattern LastCrawlStatus_CANCELLED :: LastCrawlStatus
pattern LastCrawlStatus_FAILED :: LastCrawlStatus
pattern LastCrawlStatus_SUCCEEDED :: LastCrawlStatus
newtype Logical
Logical' :: Text -> Logical
[fromLogical] :: Logical -> Text
pattern Logical_AND :: Logical
pattern Logical_ANY :: Logical
newtype LogicalOperator
LogicalOperator' :: Text -> LogicalOperator
[fromLogicalOperator] :: LogicalOperator -> Text
pattern LogicalOperator_EQUALS :: LogicalOperator
newtype MLUserDataEncryptionModeString
MLUserDataEncryptionModeString' :: Text -> MLUserDataEncryptionModeString
[fromMLUserDataEncryptionModeString] :: MLUserDataEncryptionModeString -> Text
pattern MLUserDataEncryptionModeString_DISABLED :: MLUserDataEncryptionModeString
pattern MLUserDataEncryptionModeString_SSE_KMS :: MLUserDataEncryptionModeString
newtype NodeType
NodeType' :: Text -> NodeType
[fromNodeType] :: NodeType -> Text
pattern NodeType_CRAWLER :: NodeType
pattern NodeType_JOB :: NodeType
pattern NodeType_TRIGGER :: NodeType
newtype PartitionIndexStatus
PartitionIndexStatus' :: Text -> PartitionIndexStatus
[fromPartitionIndexStatus] :: PartitionIndexStatus -> Text
pattern PartitionIndexStatus_ACTIVE :: PartitionIndexStatus
pattern PartitionIndexStatus_CREATING :: PartitionIndexStatus
pattern PartitionIndexStatus_DELETING :: PartitionIndexStatus
pattern PartitionIndexStatus_FAILED :: PartitionIndexStatus
newtype Permission
Permission' :: Text -> Permission
[fromPermission] :: Permission -> Text
pattern Permission_ALL :: Permission
pattern Permission_ALTER :: Permission
pattern Permission_CREATE_DATABASE :: Permission
pattern Permission_CREATE_TABLE :: Permission
pattern Permission_DATA_LOCATION_ACCESS :: Permission
pattern Permission_DELETE :: Permission
pattern Permission_DROP :: Permission
pattern Permission_INSERT :: Permission
pattern Permission_SELECT :: Permission
newtype PrincipalType
PrincipalType' :: Text -> PrincipalType
[fromPrincipalType] :: PrincipalType -> Text
pattern PrincipalType_GROUP :: PrincipalType
pattern PrincipalType_ROLE :: PrincipalType
pattern PrincipalType_USER :: PrincipalType
newtype RecrawlBehavior
RecrawlBehavior' :: Text -> RecrawlBehavior
[fromRecrawlBehavior] :: RecrawlBehavior -> Text
pattern RecrawlBehavior_CRAWL_EVENT_MODE :: RecrawlBehavior
pattern RecrawlBehavior_CRAWL_EVERYTHING :: RecrawlBehavior
pattern RecrawlBehavior_CRAWL_NEW_FOLDERS_ONLY :: RecrawlBehavior
newtype RegistryStatus
RegistryStatus' :: Text -> RegistryStatus
[fromRegistryStatus] :: RegistryStatus -> Text
pattern RegistryStatus_AVAILABLE :: RegistryStatus
pattern RegistryStatus_DELETING :: RegistryStatus
newtype ResourceShareType
ResourceShareType' :: Text -> ResourceShareType
[fromResourceShareType] :: ResourceShareType -> Text
pattern ResourceShareType_ALL :: ResourceShareType
pattern ResourceShareType_FOREIGN :: ResourceShareType
newtype ResourceType
ResourceType' :: Text -> ResourceType
[fromResourceType] :: ResourceType -> Text
pattern ResourceType_ARCHIVE :: ResourceType
pattern ResourceType_FILE :: ResourceType
pattern ResourceType_JAR :: ResourceType
newtype S3EncryptionMode
S3EncryptionMode' :: Text -> S3EncryptionMode
[fromS3EncryptionMode] :: S3EncryptionMode -> Text
pattern S3EncryptionMode_DISABLED :: S3EncryptionMode
pattern S3EncryptionMode_SSE_KMS :: S3EncryptionMode
pattern S3EncryptionMode_SSE_S3 :: S3EncryptionMode
newtype ScheduleState
ScheduleState' :: Text -> ScheduleState
[fromScheduleState] :: ScheduleState -> Text
pattern ScheduleState_NOT_SCHEDULED :: ScheduleState
pattern ScheduleState_SCHEDULED :: ScheduleState
pattern ScheduleState_TRANSITIONING :: ScheduleState
newtype SchemaDiffType
SchemaDiffType' :: Text -> SchemaDiffType
[fromSchemaDiffType] :: SchemaDiffType -> Text
pattern SchemaDiffType_SYNTAX_DIFF :: SchemaDiffType
newtype SchemaStatus
SchemaStatus' :: Text -> SchemaStatus
[fromSchemaStatus] :: SchemaStatus -> Text
pattern SchemaStatus_AVAILABLE :: SchemaStatus
pattern SchemaStatus_DELETING :: SchemaStatus
pattern SchemaStatus_PENDING :: SchemaStatus
newtype SchemaVersionStatus
SchemaVersionStatus' :: Text -> SchemaVersionStatus
[fromSchemaVersionStatus] :: SchemaVersionStatus -> Text
pattern SchemaVersionStatus_AVAILABLE :: SchemaVersionStatus
pattern SchemaVersionStatus_DELETING :: SchemaVersionStatus
pattern SchemaVersionStatus_FAILURE :: SchemaVersionStatus
pattern SchemaVersionStatus_PENDING :: SchemaVersionStatus
newtype Sort
Sort' :: Text -> Sort
[fromSort] :: Sort -> Text
pattern Sort_ASC :: Sort
pattern Sort_DESC :: Sort
newtype SortDirectionType
SortDirectionType' :: Text -> SortDirectionType
[fromSortDirectionType] :: SortDirectionType -> Text
pattern SortDirectionType_ASCENDING :: SortDirectionType
pattern SortDirectionType_DESCENDING :: SortDirectionType
newtype TaskRunSortColumnType
TaskRunSortColumnType' :: Text -> TaskRunSortColumnType
[fromTaskRunSortColumnType] :: TaskRunSortColumnType -> Text
pattern TaskRunSortColumnType_STARTED :: TaskRunSortColumnType
pattern TaskRunSortColumnType_STATUS :: TaskRunSortColumnType
pattern TaskRunSortColumnType_TASK_RUN_TYPE :: TaskRunSortColumnType
newtype TaskStatusType
TaskStatusType' :: Text -> TaskStatusType
[fromTaskStatusType] :: TaskStatusType -> Text
pattern TaskStatusType_FAILED :: TaskStatusType
pattern TaskStatusType_RUNNING :: TaskStatusType
pattern TaskStatusType_STARTING :: TaskStatusType
pattern TaskStatusType_STOPPED :: TaskStatusType
pattern TaskStatusType_STOPPING :: TaskStatusType
pattern TaskStatusType_SUCCEEDED :: TaskStatusType
pattern TaskStatusType_TIMEOUT :: TaskStatusType
newtype TaskType
TaskType' :: Text -> TaskType
[fromTaskType] :: TaskType -> Text
pattern TaskType_EVALUATION :: TaskType
pattern TaskType_EXPORT_LABELS :: TaskType
pattern TaskType_FIND_MATCHES :: TaskType
pattern TaskType_IMPORT_LABELS :: TaskType
pattern TaskType_LABELING_SET_GENERATION :: TaskType
newtype TransformSortColumnType
TransformSortColumnType' :: Text -> TransformSortColumnType
[fromTransformSortColumnType] :: TransformSortColumnType -> Text
pattern TransformSortColumnType_CREATED :: TransformSortColumnType
pattern TransformSortColumnType_LAST_MODIFIED :: TransformSortColumnType
pattern TransformSortColumnType_NAME :: TransformSortColumnType
pattern TransformSortColumnType_STATUS :: TransformSortColumnType
pattern TransformSortColumnType_TRANSFORM_TYPE :: TransformSortColumnType
newtype TransformStatusType
TransformStatusType' :: Text -> TransformStatusType
[fromTransformStatusType] :: TransformStatusType -> Text
pattern TransformStatusType_DELETING :: TransformStatusType
pattern TransformStatusType_NOT_READY :: TransformStatusType
pattern TransformStatusType_READY :: TransformStatusType
newtype TransformType
TransformType' :: Text -> TransformType
[fromTransformType] :: TransformType -> Text
pattern TransformType_FIND_MATCHES :: TransformType
newtype TriggerState
TriggerState' :: Text -> TriggerState
[fromTriggerState] :: TriggerState -> Text
pattern TriggerState_ACTIVATED :: TriggerState
pattern TriggerState_ACTIVATING :: TriggerState
pattern TriggerState_CREATED :: TriggerState
pattern TriggerState_CREATING :: TriggerState
pattern TriggerState_DEACTIVATED :: TriggerState
pattern TriggerState_DEACTIVATING :: TriggerState
pattern TriggerState_DELETING :: TriggerState
pattern TriggerState_UPDATING :: TriggerState
newtype TriggerType
TriggerType' :: Text -> TriggerType
[fromTriggerType] :: TriggerType -> Text
pattern TriggerType_CONDITIONAL :: TriggerType
pattern TriggerType_EVENT :: TriggerType
pattern TriggerType_ON_DEMAND :: TriggerType
pattern TriggerType_SCHEDULED :: TriggerType
newtype UpdateBehavior
UpdateBehavior' :: Text -> UpdateBehavior
[fromUpdateBehavior] :: UpdateBehavior -> Text
pattern UpdateBehavior_LOG :: UpdateBehavior
pattern UpdateBehavior_UPDATE_IN_DATABASE :: UpdateBehavior
newtype WorkerType
WorkerType' :: Text -> WorkerType
[fromWorkerType] :: WorkerType -> Text
pattern WorkerType_G_1X :: WorkerType
pattern WorkerType_G_2X :: WorkerType
pattern WorkerType_Standard :: WorkerType
newtype WorkflowRunStatus
WorkflowRunStatus' :: Text -> WorkflowRunStatus
[fromWorkflowRunStatus] :: WorkflowRunStatus -> Text
pattern WorkflowRunStatus_COMPLETED :: WorkflowRunStatus
pattern WorkflowRunStatus_ERROR :: WorkflowRunStatus
pattern WorkflowRunStatus_RUNNING :: WorkflowRunStatus
pattern WorkflowRunStatus_STOPPED :: WorkflowRunStatus
pattern WorkflowRunStatus_STOPPING :: WorkflowRunStatus

-- | Defines an action to be initiated by a trigger.
--   
--   <i>See:</i> <a>newAction</a> smart constructor.
data Action
Action' :: Maybe NotificationProperty -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Action

-- | Specifies configuration properties of a job run notification.
[$sel:notificationProperty:Action'] :: Action -> Maybe NotificationProperty

-- | The job arguments used when this trigger fires. For this job run, they
--   replace the default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
[$sel:arguments:Action'] :: Action -> Maybe (HashMap Text Text)

-- | The name of a job to be run.
[$sel:jobName:Action'] :: Action -> Maybe Text

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this action.
[$sel:securityConfiguration:Action'] :: Action -> Maybe Text

-- | The <tt>JobRun</tt> timeout in minutes. This is the maximum time that
--   a job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
[$sel:timeout:Action'] :: Action -> Maybe Natural

-- | The name of the crawler to be used with this action.
[$sel:crawlerName:Action'] :: Action -> Maybe Text

-- | Create a value of <a>Action</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationProperty:Action'</a>,
--   <a>action_notificationProperty</a> - Specifies configuration
--   properties of a job run notification.
--   
--   <a>$sel:arguments:Action'</a>, <a>action_arguments</a> - The job
--   arguments used when this trigger fires. For this job run, they replace
--   the default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
--   
--   <a>$sel:jobName:Action'</a>, <a>action_jobName</a> - The name of a job
--   to be run.
--   
--   <a>$sel:securityConfiguration:Action'</a>,
--   <a>action_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this action.
--   
--   <a>$sel:timeout:Action'</a>, <a>action_timeout</a> - The
--   <tt>JobRun</tt> timeout in minutes. This is the maximum time that a
--   job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
--   
--   <a>$sel:crawlerName:Action'</a>, <a>action_crawlerName</a> - The name
--   of the crawler to be used with this action.
newAction :: Action

-- | Specifies configuration properties of a job run notification.
action_notificationProperty :: Lens' Action (Maybe NotificationProperty)

-- | The job arguments used when this trigger fires. For this job run, they
--   replace the default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
action_arguments :: Lens' Action (Maybe (HashMap Text Text))

-- | The name of a job to be run.
action_jobName :: Lens' Action (Maybe Text)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this action.
action_securityConfiguration :: Lens' Action (Maybe Text)

-- | The <tt>JobRun</tt> timeout in minutes. This is the maximum time that
--   a job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
action_timeout :: Lens' Action (Maybe Natural)

-- | The name of the crawler to be used with this action.
action_crawlerName :: Lens' Action (Maybe Text)

-- | A list of errors that can occur when registering partition indexes for
--   an existing table.
--   
--   These errors give the details about why an index registration failed
--   and provide a limited number of partitions in the response, so that
--   you can fix the partitions at fault and try registering the index
--   again. The most common set of errors that can occur are categorized as
--   follows:
--   
--   <ul>
--   <li>EncryptedPartitionError: The partitions are encrypted.</li>
--   <li>InvalidPartitionTypeDataError: The partition value doesn't match
--   the data type for that partition column.</li>
--   <li>MissingPartitionValueError: The partitions are encrypted.</li>
--   <li>UnsupportedPartitionCharacterError: Characters inside the
--   partition value are not supported. For example: U+0000 , U+0001,
--   U+0002.</li>
--   <li>InternalError: Any error which does not belong to other error
--   codes.</li>
--   </ul>
--   
--   <i>See:</i> <a>newBackfillError</a> smart constructor.
data BackfillError
BackfillError' :: Maybe [PartitionValueList] -> Maybe BackfillErrorCode -> BackfillError

-- | A list of a limited number of partitions in the response.
[$sel:partitions:BackfillError'] :: BackfillError -> Maybe [PartitionValueList]

-- | The error code for an error that occurred when registering partition
--   indexes for an existing table.
[$sel:code:BackfillError'] :: BackfillError -> Maybe BackfillErrorCode

-- | Create a value of <a>BackfillError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitions:BackfillError'</a>, <a>backfillError_partitions</a>
--   - A list of a limited number of partitions in the response.
--   
--   <a>$sel:code:BackfillError'</a>, <a>backfillError_code</a> - The error
--   code for an error that occurred when registering partition indexes for
--   an existing table.
newBackfillError :: BackfillError

-- | A list of a limited number of partitions in the response.
backfillError_partitions :: Lens' BackfillError (Maybe [PartitionValueList])

-- | The error code for an error that occurred when registering partition
--   indexes for an existing table.
backfillError_code :: Lens' BackfillError (Maybe BackfillErrorCode)

-- | Records an error that occurred when attempting to stop a specified job
--   run.
--   
--   <i>See:</i> <a>newBatchStopJobRunError</a> smart constructor.
data BatchStopJobRunError
BatchStopJobRunError' :: Maybe Text -> Maybe Text -> Maybe ErrorDetail -> BatchStopJobRunError

-- | The name of the job definition that is used in the job run in
--   question.
[$sel:jobName:BatchStopJobRunError'] :: BatchStopJobRunError -> Maybe Text

-- | The <tt>JobRunId</tt> of the job run in question.
[$sel:jobRunId:BatchStopJobRunError'] :: BatchStopJobRunError -> Maybe Text

-- | Specifies details about the error that was encountered.
[$sel:errorDetail:BatchStopJobRunError'] :: BatchStopJobRunError -> Maybe ErrorDetail

-- | Create a value of <a>BatchStopJobRunError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:BatchStopJobRunError'</a>,
--   <a>batchStopJobRunError_jobName</a> - The name of the job definition
--   that is used in the job run in question.
--   
--   <a>$sel:jobRunId:BatchStopJobRunError'</a>,
--   <a>batchStopJobRunError_jobRunId</a> - The <tt>JobRunId</tt> of the
--   job run in question.
--   
--   <a>$sel:errorDetail:BatchStopJobRunError'</a>,
--   <a>batchStopJobRunError_errorDetail</a> - Specifies details about the
--   error that was encountered.
newBatchStopJobRunError :: BatchStopJobRunError

-- | The name of the job definition that is used in the job run in
--   question.
batchStopJobRunError_jobName :: Lens' BatchStopJobRunError (Maybe Text)

-- | The <tt>JobRunId</tt> of the job run in question.
batchStopJobRunError_jobRunId :: Lens' BatchStopJobRunError (Maybe Text)

-- | Specifies details about the error that was encountered.
batchStopJobRunError_errorDetail :: Lens' BatchStopJobRunError (Maybe ErrorDetail)

-- | Records a successful request to stop a specified <tt>JobRun</tt>.
--   
--   <i>See:</i> <a>newBatchStopJobRunSuccessfulSubmission</a> smart
--   constructor.
data BatchStopJobRunSuccessfulSubmission
BatchStopJobRunSuccessfulSubmission' :: Maybe Text -> Maybe Text -> BatchStopJobRunSuccessfulSubmission

-- | The name of the job definition used in the job run that was stopped.
[$sel:jobName:BatchStopJobRunSuccessfulSubmission'] :: BatchStopJobRunSuccessfulSubmission -> Maybe Text

-- | The <tt>JobRunId</tt> of the job run that was stopped.
[$sel:jobRunId:BatchStopJobRunSuccessfulSubmission'] :: BatchStopJobRunSuccessfulSubmission -> Maybe Text

-- | Create a value of <a>BatchStopJobRunSuccessfulSubmission</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:BatchStopJobRunSuccessfulSubmission'</a>,
--   <a>batchStopJobRunSuccessfulSubmission_jobName</a> - The name of the
--   job definition used in the job run that was stopped.
--   
--   <a>$sel:jobRunId:BatchStopJobRunSuccessfulSubmission'</a>,
--   <a>batchStopJobRunSuccessfulSubmission_jobRunId</a> - The
--   <tt>JobRunId</tt> of the job run that was stopped.
newBatchStopJobRunSuccessfulSubmission :: BatchStopJobRunSuccessfulSubmission

-- | The name of the job definition used in the job run that was stopped.
batchStopJobRunSuccessfulSubmission_jobName :: Lens' BatchStopJobRunSuccessfulSubmission (Maybe Text)

-- | The <tt>JobRunId</tt> of the job run that was stopped.
batchStopJobRunSuccessfulSubmission_jobRunId :: Lens' BatchStopJobRunSuccessfulSubmission (Maybe Text)

-- | Contains information about a batch update partition error.
--   
--   <i>See:</i> <a>newBatchUpdatePartitionFailureEntry</a> smart
--   constructor.
data BatchUpdatePartitionFailureEntry
BatchUpdatePartitionFailureEntry' :: Maybe [Text] -> Maybe ErrorDetail -> BatchUpdatePartitionFailureEntry

-- | A list of values defining the partitions.
[$sel:partitionValueList:BatchUpdatePartitionFailureEntry'] :: BatchUpdatePartitionFailureEntry -> Maybe [Text]

-- | The details about the batch update partition error.
[$sel:errorDetail:BatchUpdatePartitionFailureEntry'] :: BatchUpdatePartitionFailureEntry -> Maybe ErrorDetail

-- | Create a value of <a>BatchUpdatePartitionFailureEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitionValueList:BatchUpdatePartitionFailureEntry'</a>,
--   <a>batchUpdatePartitionFailureEntry_partitionValueList</a> - A list of
--   values defining the partitions.
--   
--   <a>$sel:errorDetail:BatchUpdatePartitionFailureEntry'</a>,
--   <a>batchUpdatePartitionFailureEntry_errorDetail</a> - The details
--   about the batch update partition error.
newBatchUpdatePartitionFailureEntry :: BatchUpdatePartitionFailureEntry

-- | A list of values defining the partitions.
batchUpdatePartitionFailureEntry_partitionValueList :: Lens' BatchUpdatePartitionFailureEntry (Maybe [Text])

-- | The details about the batch update partition error.
batchUpdatePartitionFailureEntry_errorDetail :: Lens' BatchUpdatePartitionFailureEntry (Maybe ErrorDetail)

-- | A structure that contains the values and structure used to update a
--   partition.
--   
--   <i>See:</i> <a>newBatchUpdatePartitionRequestEntry</a> smart
--   constructor.
data BatchUpdatePartitionRequestEntry
BatchUpdatePartitionRequestEntry' :: [Text] -> PartitionInput -> BatchUpdatePartitionRequestEntry

-- | A list of values defining the partitions.
[$sel:partitionValueList:BatchUpdatePartitionRequestEntry'] :: BatchUpdatePartitionRequestEntry -> [Text]

-- | The structure used to update a partition.
[$sel:partitionInput:BatchUpdatePartitionRequestEntry'] :: BatchUpdatePartitionRequestEntry -> PartitionInput

-- | Create a value of <a>BatchUpdatePartitionRequestEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitionValueList:BatchUpdatePartitionRequestEntry'</a>,
--   <a>batchUpdatePartitionRequestEntry_partitionValueList</a> - A list of
--   values defining the partitions.
--   
--   <a>$sel:partitionInput:BatchUpdatePartitionRequestEntry'</a>,
--   <a>batchUpdatePartitionRequestEntry_partitionInput</a> - The structure
--   used to update a partition.
newBatchUpdatePartitionRequestEntry :: PartitionInput -> BatchUpdatePartitionRequestEntry

-- | A list of values defining the partitions.
batchUpdatePartitionRequestEntry_partitionValueList :: Lens' BatchUpdatePartitionRequestEntry [Text]

-- | The structure used to update a partition.
batchUpdatePartitionRequestEntry_partitionInput :: Lens' BatchUpdatePartitionRequestEntry PartitionInput

-- | Defines column statistics supported for bit sequence data values.
--   
--   <i>See:</i> <a>newBinaryColumnStatisticsData</a> smart constructor.
data BinaryColumnStatisticsData
BinaryColumnStatisticsData' :: Natural -> Double -> Natural -> BinaryColumnStatisticsData

-- | The size of the longest bit sequence in the column.
[$sel:maximumLength:BinaryColumnStatisticsData'] :: BinaryColumnStatisticsData -> Natural

-- | The average bit sequence length in the column.
[$sel:averageLength:BinaryColumnStatisticsData'] :: BinaryColumnStatisticsData -> Double

-- | The number of null values in the column.
[$sel:numberOfNulls:BinaryColumnStatisticsData'] :: BinaryColumnStatisticsData -> Natural

-- | Create a value of <a>BinaryColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumLength:BinaryColumnStatisticsData'</a>,
--   <a>binaryColumnStatisticsData_maximumLength</a> - The size of the
--   longest bit sequence in the column.
--   
--   <a>$sel:averageLength:BinaryColumnStatisticsData'</a>,
--   <a>binaryColumnStatisticsData_averageLength</a> - The average bit
--   sequence length in the column.
--   
--   <a>$sel:numberOfNulls:BinaryColumnStatisticsData'</a>,
--   <a>binaryColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
newBinaryColumnStatisticsData :: Natural -> Double -> Natural -> BinaryColumnStatisticsData

-- | The size of the longest bit sequence in the column.
binaryColumnStatisticsData_maximumLength :: Lens' BinaryColumnStatisticsData Natural

-- | The average bit sequence length in the column.
binaryColumnStatisticsData_averageLength :: Lens' BinaryColumnStatisticsData Double

-- | The number of null values in the column.
binaryColumnStatisticsData_numberOfNulls :: Lens' BinaryColumnStatisticsData Natural

-- | The details of a blueprint.
--   
--   <i>See:</i> <a>newBlueprint</a> smart constructor.
data Blueprint
Blueprint' :: Maybe BlueprintStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe LastActiveDefinition -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Blueprint

-- | The status of the blueprint registration.
--   
--   <ul>
--   <li>Creating — The blueprint registration is in progress.</li>
--   <li>Active — The blueprint has been successfully registered.</li>
--   <li>Updating — An update to the blueprint registration is in
--   progress.</li>
--   <li>Failed — The blueprint registration failed.</li>
--   </ul>
[$sel:status:Blueprint'] :: Blueprint -> Maybe BlueprintStatus

-- | A JSON string that indicates the list of parameter specifications for
--   the blueprint.
[$sel:parameterSpec:Blueprint'] :: Blueprint -> Maybe Text

-- | Specifies the path in Amazon S3 where the blueprint is published.
[$sel:blueprintLocation:Blueprint'] :: Blueprint -> Maybe Text

-- | The date and time the blueprint was last modified.
[$sel:lastModifiedOn:Blueprint'] :: Blueprint -> Maybe POSIX

-- | When there are multiple versions of a blueprint and the latest version
--   has some errors, this attribute indicates the last successful
--   blueprint definition that is available with the service.
[$sel:lastActiveDefinition:Blueprint'] :: Blueprint -> Maybe LastActiveDefinition

-- | The name of the blueprint.
[$sel:name:Blueprint'] :: Blueprint -> Maybe Text

-- | Specifies a path in Amazon S3 where the blueprint is copied when you
--   call <tt>CreateBlueprint/UpdateBlueprint</tt> to register the
--   blueprint in Glue.
[$sel:blueprintServiceLocation:Blueprint'] :: Blueprint -> Maybe Text

-- | An error message.
[$sel:errorMessage:Blueprint'] :: Blueprint -> Maybe Text

-- | The description of the blueprint.
[$sel:description:Blueprint'] :: Blueprint -> Maybe Text

-- | The date and time the blueprint was registered.
[$sel:createdOn:Blueprint'] :: Blueprint -> Maybe POSIX

-- | Create a value of <a>Blueprint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Blueprint'</a>, <a>blueprint_status</a> - The status of
--   the blueprint registration.
--   
--   <ul>
--   <li>Creating — The blueprint registration is in progress.</li>
--   <li>Active — The blueprint has been successfully registered.</li>
--   <li>Updating — An update to the blueprint registration is in
--   progress.</li>
--   <li>Failed — The blueprint registration failed.</li>
--   </ul>
--   
--   <a>$sel:parameterSpec:Blueprint'</a>, <a>blueprint_parameterSpec</a> -
--   A JSON string that indicates the list of parameter specifications for
--   the blueprint.
--   
--   <a>$sel:blueprintLocation:Blueprint'</a>,
--   <a>blueprint_blueprintLocation</a> - Specifies the path in Amazon S3
--   where the blueprint is published.
--   
--   <a>$sel:lastModifiedOn:Blueprint'</a>, <a>blueprint_lastModifiedOn</a>
--   - The date and time the blueprint was last modified.
--   
--   <a>$sel:lastActiveDefinition:Blueprint'</a>,
--   <a>blueprint_lastActiveDefinition</a> - When there are multiple
--   versions of a blueprint and the latest version has some errors, this
--   attribute indicates the last successful blueprint definition that is
--   available with the service.
--   
--   <a>$sel:name:Blueprint'</a>, <a>blueprint_name</a> - The name of the
--   blueprint.
--   
--   <a>$sel:blueprintServiceLocation:Blueprint'</a>,
--   <a>blueprint_blueprintServiceLocation</a> - Specifies a path in Amazon
--   S3 where the blueprint is copied when you call
--   <tt>CreateBlueprint/UpdateBlueprint</tt> to register the blueprint in
--   Glue.
--   
--   <a>$sel:errorMessage:Blueprint'</a>, <a>blueprint_errorMessage</a> -
--   An error message.
--   
--   <a>$sel:description:Blueprint'</a>, <a>blueprint_description</a> - The
--   description of the blueprint.
--   
--   <a>$sel:createdOn:Blueprint'</a>, <a>blueprint_createdOn</a> - The
--   date and time the blueprint was registered.
newBlueprint :: Blueprint

-- | The status of the blueprint registration.
--   
--   <ul>
--   <li>Creating — The blueprint registration is in progress.</li>
--   <li>Active — The blueprint has been successfully registered.</li>
--   <li>Updating — An update to the blueprint registration is in
--   progress.</li>
--   <li>Failed — The blueprint registration failed.</li>
--   </ul>
blueprint_status :: Lens' Blueprint (Maybe BlueprintStatus)

-- | A JSON string that indicates the list of parameter specifications for
--   the blueprint.
blueprint_parameterSpec :: Lens' Blueprint (Maybe Text)

-- | Specifies the path in Amazon S3 where the blueprint is published.
blueprint_blueprintLocation :: Lens' Blueprint (Maybe Text)

-- | The date and time the blueprint was last modified.
blueprint_lastModifiedOn :: Lens' Blueprint (Maybe UTCTime)

-- | When there are multiple versions of a blueprint and the latest version
--   has some errors, this attribute indicates the last successful
--   blueprint definition that is available with the service.
blueprint_lastActiveDefinition :: Lens' Blueprint (Maybe LastActiveDefinition)

-- | The name of the blueprint.
blueprint_name :: Lens' Blueprint (Maybe Text)

-- | Specifies a path in Amazon S3 where the blueprint is copied when you
--   call <tt>CreateBlueprint/UpdateBlueprint</tt> to register the
--   blueprint in Glue.
blueprint_blueprintServiceLocation :: Lens' Blueprint (Maybe Text)

-- | An error message.
blueprint_errorMessage :: Lens' Blueprint (Maybe Text)

-- | The description of the blueprint.
blueprint_description :: Lens' Blueprint (Maybe Text)

-- | The date and time the blueprint was registered.
blueprint_createdOn :: Lens' Blueprint (Maybe UTCTime)

-- | The details of a blueprint.
--   
--   <i>See:</i> <a>newBlueprintDetails</a> smart constructor.
data BlueprintDetails
BlueprintDetails' :: Maybe Text -> Maybe Text -> BlueprintDetails

-- | The run ID for this blueprint.
[$sel:runId:BlueprintDetails'] :: BlueprintDetails -> Maybe Text

-- | The name of the blueprint.
[$sel:blueprintName:BlueprintDetails'] :: BlueprintDetails -> Maybe Text

-- | Create a value of <a>BlueprintDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runId:BlueprintDetails'</a>, <a>blueprintDetails_runId</a> -
--   The run ID for this blueprint.
--   
--   <a>$sel:blueprintName:BlueprintDetails'</a>,
--   <a>blueprintDetails_blueprintName</a> - The name of the blueprint.
newBlueprintDetails :: BlueprintDetails

-- | The run ID for this blueprint.
blueprintDetails_runId :: Lens' BlueprintDetails (Maybe Text)

-- | The name of the blueprint.
blueprintDetails_blueprintName :: Lens' BlueprintDetails (Maybe Text)

-- | The details of a blueprint run.
--   
--   <i>See:</i> <a>newBlueprintRun</a> smart constructor.
data BlueprintRun
BlueprintRun' :: Maybe Text -> Maybe POSIX -> Maybe BlueprintRunState -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> BlueprintRun

-- | The name of a workflow that is created as a result of a successful
--   blueprint run. If a blueprint run has an error, there will not be a
--   workflow created.
[$sel:workflowName:BlueprintRun'] :: BlueprintRun -> Maybe Text

-- | The date and time that the blueprint run completed.
[$sel:completedOn:BlueprintRun'] :: BlueprintRun -> Maybe POSIX

-- | The state of the blueprint run. Possible values are:
--   
--   <ul>
--   <li>Running — The blueprint run is in progress.</li>
--   <li>Succeeded — The blueprint run completed successfully.</li>
--   <li>Failed — The blueprint run failed and rollback is complete.</li>
--   <li>Rolling Back — The blueprint run failed and rollback is in
--   progress.</li>
--   </ul>
[$sel:state:BlueprintRun'] :: BlueprintRun -> Maybe BlueprintRunState

-- | If there are any errors while creating the entities of a workflow, we
--   try to roll back the created entities until that point and delete
--   them. This attribute indicates the errors seen while trying to delete
--   the entities that are created.
[$sel:rollbackErrorMessage:BlueprintRun'] :: BlueprintRun -> Maybe Text

-- | The date and time that the blueprint run started.
[$sel:startedOn:BlueprintRun'] :: BlueprintRun -> Maybe POSIX

-- | The run ID for this blueprint run.
[$sel:runId:BlueprintRun'] :: BlueprintRun -> Maybe Text

-- | The blueprint parameters as a string. You will have to provide a value
--   for each key that is required from the parameter spec that is defined
--   in the <tt>Blueprint$ParameterSpec</tt>.
[$sel:parameters:BlueprintRun'] :: BlueprintRun -> Maybe Text

-- | The name of the blueprint.
[$sel:blueprintName:BlueprintRun'] :: BlueprintRun -> Maybe Text

-- | Indicates any errors that are seen while running the blueprint.
[$sel:errorMessage:BlueprintRun'] :: BlueprintRun -> Maybe Text

-- | The role ARN. This role will be assumed by the Glue service and will
--   be used to create the workflow and other entities of a workflow.
[$sel:roleArn:BlueprintRun'] :: BlueprintRun -> Maybe Text

-- | Create a value of <a>BlueprintRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workflowName:BlueprintRun'</a>,
--   <a>blueprintRun_workflowName</a> - The name of a workflow that is
--   created as a result of a successful blueprint run. If a blueprint run
--   has an error, there will not be a workflow created.
--   
--   <a>$sel:completedOn:BlueprintRun'</a>, <a>blueprintRun_completedOn</a>
--   - The date and time that the blueprint run completed.
--   
--   <a>$sel:state:BlueprintRun'</a>, <a>blueprintRun_state</a> - The state
--   of the blueprint run. Possible values are:
--   
--   <ul>
--   <li>Running — The blueprint run is in progress.</li>
--   <li>Succeeded — The blueprint run completed successfully.</li>
--   <li>Failed — The blueprint run failed and rollback is complete.</li>
--   <li>Rolling Back — The blueprint run failed and rollback is in
--   progress.</li>
--   </ul>
--   
--   <a>$sel:rollbackErrorMessage:BlueprintRun'</a>,
--   <a>blueprintRun_rollbackErrorMessage</a> - If there are any errors
--   while creating the entities of a workflow, we try to roll back the
--   created entities until that point and delete them. This attribute
--   indicates the errors seen while trying to delete the entities that are
--   created.
--   
--   <a>$sel:startedOn:BlueprintRun'</a>, <a>blueprintRun_startedOn</a> -
--   The date and time that the blueprint run started.
--   
--   <a>$sel:runId:BlueprintRun'</a>, <a>blueprintRun_runId</a> - The run
--   ID for this blueprint run.
--   
--   <a>$sel:parameters:BlueprintRun'</a>, <a>blueprintRun_parameters</a> -
--   The blueprint parameters as a string. You will have to provide a value
--   for each key that is required from the parameter spec that is defined
--   in the <tt>Blueprint$ParameterSpec</tt>.
--   
--   <a>$sel:blueprintName:BlueprintRun'</a>,
--   <a>blueprintRun_blueprintName</a> - The name of the blueprint.
--   
--   <a>$sel:errorMessage:BlueprintRun'</a>,
--   <a>blueprintRun_errorMessage</a> - Indicates any errors that are seen
--   while running the blueprint.
--   
--   <a>$sel:roleArn:BlueprintRun'</a>, <a>blueprintRun_roleArn</a> - The
--   role ARN. This role will be assumed by the Glue service and will be
--   used to create the workflow and other entities of a workflow.
newBlueprintRun :: BlueprintRun

-- | The name of a workflow that is created as a result of a successful
--   blueprint run. If a blueprint run has an error, there will not be a
--   workflow created.
blueprintRun_workflowName :: Lens' BlueprintRun (Maybe Text)

-- | The date and time that the blueprint run completed.
blueprintRun_completedOn :: Lens' BlueprintRun (Maybe UTCTime)

-- | The state of the blueprint run. Possible values are:
--   
--   <ul>
--   <li>Running — The blueprint run is in progress.</li>
--   <li>Succeeded — The blueprint run completed successfully.</li>
--   <li>Failed — The blueprint run failed and rollback is complete.</li>
--   <li>Rolling Back — The blueprint run failed and rollback is in
--   progress.</li>
--   </ul>
blueprintRun_state :: Lens' BlueprintRun (Maybe BlueprintRunState)

-- | If there are any errors while creating the entities of a workflow, we
--   try to roll back the created entities until that point and delete
--   them. This attribute indicates the errors seen while trying to delete
--   the entities that are created.
blueprintRun_rollbackErrorMessage :: Lens' BlueprintRun (Maybe Text)

-- | The date and time that the blueprint run started.
blueprintRun_startedOn :: Lens' BlueprintRun (Maybe UTCTime)

-- | The run ID for this blueprint run.
blueprintRun_runId :: Lens' BlueprintRun (Maybe Text)

-- | The blueprint parameters as a string. You will have to provide a value
--   for each key that is required from the parameter spec that is defined
--   in the <tt>Blueprint$ParameterSpec</tt>.
blueprintRun_parameters :: Lens' BlueprintRun (Maybe Text)

-- | The name of the blueprint.
blueprintRun_blueprintName :: Lens' BlueprintRun (Maybe Text)

-- | Indicates any errors that are seen while running the blueprint.
blueprintRun_errorMessage :: Lens' BlueprintRun (Maybe Text)

-- | The role ARN. This role will be assumed by the Glue service and will
--   be used to create the workflow and other entities of a workflow.
blueprintRun_roleArn :: Lens' BlueprintRun (Maybe Text)

-- | Defines column statistics supported for Boolean data columns.
--   
--   <i>See:</i> <a>newBooleanColumnStatisticsData</a> smart constructor.
data BooleanColumnStatisticsData
BooleanColumnStatisticsData' :: Natural -> Natural -> Natural -> BooleanColumnStatisticsData

-- | The number of true values in the column.
[$sel:numberOfTrues:BooleanColumnStatisticsData'] :: BooleanColumnStatisticsData -> Natural

-- | The number of false values in the column.
[$sel:numberOfFalses:BooleanColumnStatisticsData'] :: BooleanColumnStatisticsData -> Natural

-- | The number of null values in the column.
[$sel:numberOfNulls:BooleanColumnStatisticsData'] :: BooleanColumnStatisticsData -> Natural

-- | Create a value of <a>BooleanColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfTrues:BooleanColumnStatisticsData'</a>,
--   <a>booleanColumnStatisticsData_numberOfTrues</a> - The number of true
--   values in the column.
--   
--   <a>$sel:numberOfFalses:BooleanColumnStatisticsData'</a>,
--   <a>booleanColumnStatisticsData_numberOfFalses</a> - The number of
--   false values in the column.
--   
--   <a>$sel:numberOfNulls:BooleanColumnStatisticsData'</a>,
--   <a>booleanColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
newBooleanColumnStatisticsData :: Natural -> Natural -> Natural -> BooleanColumnStatisticsData

-- | The number of true values in the column.
booleanColumnStatisticsData_numberOfTrues :: Lens' BooleanColumnStatisticsData Natural

-- | The number of false values in the column.
booleanColumnStatisticsData_numberOfFalses :: Lens' BooleanColumnStatisticsData Natural

-- | The number of null values in the column.
booleanColumnStatisticsData_numberOfNulls :: Lens' BooleanColumnStatisticsData Natural

-- | Specifies a table definition in the Glue Data Catalog.
--   
--   <i>See:</i> <a>newCatalogEntry</a> smart constructor.
data CatalogEntry
CatalogEntry' :: Text -> Text -> CatalogEntry

-- | The database in which the table metadata resides.
[$sel:databaseName:CatalogEntry'] :: CatalogEntry -> Text

-- | The name of the table in question.
[$sel:tableName:CatalogEntry'] :: CatalogEntry -> Text

-- | Create a value of <a>CatalogEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:databaseName:CatalogEntry'</a>,
--   <a>catalogEntry_databaseName</a> - The database in which the table
--   metadata resides.
--   
--   <a>$sel:tableName:CatalogEntry'</a>, <a>catalogEntry_tableName</a> -
--   The name of the table in question.
newCatalogEntry :: Text -> Text -> CatalogEntry

-- | The database in which the table metadata resides.
catalogEntry_databaseName :: Lens' CatalogEntry Text

-- | The name of the table in question.
catalogEntry_tableName :: Lens' CatalogEntry Text

-- | A structure containing migration status information.
--   
--   <i>See:</i> <a>newCatalogImportStatus</a> smart constructor.
data CatalogImportStatus
CatalogImportStatus' :: Maybe Text -> Maybe POSIX -> Maybe Bool -> CatalogImportStatus

-- | The name of the person who initiated the migration.
[$sel:importedBy:CatalogImportStatus'] :: CatalogImportStatus -> Maybe Text

-- | The time that the migration was started.
[$sel:importTime:CatalogImportStatus'] :: CatalogImportStatus -> Maybe POSIX

-- | <tt>True</tt> if the migration has completed, or <tt>False</tt>
--   otherwise.
[$sel:importCompleted:CatalogImportStatus'] :: CatalogImportStatus -> Maybe Bool

-- | Create a value of <a>CatalogImportStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:importedBy:CatalogImportStatus'</a>,
--   <a>catalogImportStatus_importedBy</a> - The name of the person who
--   initiated the migration.
--   
--   <a>$sel:importTime:CatalogImportStatus'</a>,
--   <a>catalogImportStatus_importTime</a> - The time that the migration
--   was started.
--   
--   <a>$sel:importCompleted:CatalogImportStatus'</a>,
--   <a>catalogImportStatus_importCompleted</a> - <tt>True</tt> if the
--   migration has completed, or <tt>False</tt> otherwise.
newCatalogImportStatus :: CatalogImportStatus

-- | The name of the person who initiated the migration.
catalogImportStatus_importedBy :: Lens' CatalogImportStatus (Maybe Text)

-- | The time that the migration was started.
catalogImportStatus_importTime :: Lens' CatalogImportStatus (Maybe UTCTime)

-- | <tt>True</tt> if the migration has completed, or <tt>False</tt>
--   otherwise.
catalogImportStatus_importCompleted :: Lens' CatalogImportStatus (Maybe Bool)

-- | Specifies an Glue Data Catalog target.
--   
--   <i>See:</i> <a>newCatalogTarget</a> smart constructor.
data CatalogTarget
CatalogTarget' :: Text -> NonEmpty Text -> CatalogTarget

-- | The name of the database to be synchronized.
[$sel:databaseName:CatalogTarget'] :: CatalogTarget -> Text

-- | A list of the tables to be synchronized.
[$sel:tables:CatalogTarget'] :: CatalogTarget -> NonEmpty Text

-- | Create a value of <a>CatalogTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:databaseName:CatalogTarget'</a>,
--   <a>catalogTarget_databaseName</a> - The name of the database to be
--   synchronized.
--   
--   <a>$sel:tables:CatalogTarget'</a>, <a>catalogTarget_tables</a> - A
--   list of the tables to be synchronized.
newCatalogTarget :: Text -> NonEmpty Text -> CatalogTarget

-- | The name of the database to be synchronized.
catalogTarget_databaseName :: Lens' CatalogTarget Text

-- | A list of the tables to be synchronized.
catalogTarget_tables :: Lens' CatalogTarget (NonEmpty Text)

-- | Classifiers are triggered during a crawl task. A classifier checks
--   whether a given file is in a format it can handle. If it is, the
--   classifier creates a schema in the form of a <tt>StructType</tt>
--   object that matches that data format.
--   
--   You can use the standard classifiers that Glue provides, or you can
--   write your own classifiers to best categorize your data sources and
--   specify the appropriate schemas to use for them. A classifier can be a
--   <tt>grok</tt> classifier, an <tt>XML</tt> classifier, a <tt>JSON</tt>
--   classifier, or a custom <tt>CSV</tt> classifier, as specified in one
--   of the fields in the <tt>Classifier</tt> object.
--   
--   <i>See:</i> <a>newClassifier</a> smart constructor.
data Classifier
Classifier' :: Maybe GrokClassifier -> Maybe XMLClassifier -> Maybe CsvClassifier -> Maybe JsonClassifier -> Classifier

-- | A classifier that uses <tt>grok</tt>.
[$sel:grokClassifier:Classifier'] :: Classifier -> Maybe GrokClassifier

-- | A classifier for XML content.
[$sel:xMLClassifier:Classifier'] :: Classifier -> Maybe XMLClassifier

-- | A classifier for comma-separated values (CSV).
[$sel:csvClassifier:Classifier'] :: Classifier -> Maybe CsvClassifier

-- | A classifier for JSON content.
[$sel:jsonClassifier:Classifier'] :: Classifier -> Maybe JsonClassifier

-- | Create a value of <a>Classifier</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:grokClassifier:Classifier'</a>,
--   <a>classifier_grokClassifier</a> - A classifier that uses
--   <tt>grok</tt>.
--   
--   <a>$sel:xMLClassifier:Classifier'</a>, <a>classifier_xMLClassifier</a>
--   - A classifier for XML content.
--   
--   <a>$sel:csvClassifier:Classifier'</a>, <a>classifier_csvClassifier</a>
--   - A classifier for comma-separated values (CSV).
--   
--   <a>$sel:jsonClassifier:Classifier'</a>,
--   <a>classifier_jsonClassifier</a> - A classifier for JSON content.
newClassifier :: Classifier

-- | A classifier that uses <tt>grok</tt>.
classifier_grokClassifier :: Lens' Classifier (Maybe GrokClassifier)

-- | A classifier for XML content.
classifier_xMLClassifier :: Lens' Classifier (Maybe XMLClassifier)

-- | A classifier for comma-separated values (CSV).
classifier_csvClassifier :: Lens' Classifier (Maybe CsvClassifier)

-- | A classifier for JSON content.
classifier_jsonClassifier :: Lens' Classifier (Maybe JsonClassifier)

-- | Specifies how Amazon CloudWatch data should be encrypted.
--   
--   <i>See:</i> <a>newCloudWatchEncryption</a> smart constructor.
data CloudWatchEncryption
CloudWatchEncryption' :: Maybe CloudWatchEncryptionMode -> Maybe Text -> CloudWatchEncryption

-- | The encryption mode to use for CloudWatch data.
[$sel:cloudWatchEncryptionMode:CloudWatchEncryption'] :: CloudWatchEncryption -> Maybe CloudWatchEncryptionMode

-- | The Amazon Resource Name (ARN) of the KMS key to be used to encrypt
--   the data.
[$sel:kmsKeyArn:CloudWatchEncryption'] :: CloudWatchEncryption -> Maybe Text

-- | Create a value of <a>CloudWatchEncryption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cloudWatchEncryptionMode:CloudWatchEncryption'</a>,
--   <a>cloudWatchEncryption_cloudWatchEncryptionMode</a> - The encryption
--   mode to use for CloudWatch data.
--   
--   <a>$sel:kmsKeyArn:CloudWatchEncryption'</a>,
--   <a>cloudWatchEncryption_kmsKeyArn</a> - The Amazon Resource Name (ARN)
--   of the KMS key to be used to encrypt the data.
newCloudWatchEncryption :: CloudWatchEncryption

-- | The encryption mode to use for CloudWatch data.
cloudWatchEncryption_cloudWatchEncryptionMode :: Lens' CloudWatchEncryption (Maybe CloudWatchEncryptionMode)

-- | The Amazon Resource Name (ARN) of the KMS key to be used to encrypt
--   the data.
cloudWatchEncryption_kmsKeyArn :: Lens' CloudWatchEncryption (Maybe Text)

-- | Represents a directional edge in a directed acyclic graph (DAG).
--   
--   <i>See:</i> <a>newCodeGenEdge</a> smart constructor.
data CodeGenEdge
CodeGenEdge' :: Maybe Text -> Text -> Text -> CodeGenEdge

-- | The target of the edge.
[$sel:targetParameter:CodeGenEdge'] :: CodeGenEdge -> Maybe Text

-- | The ID of the node at which the edge starts.
[$sel:source:CodeGenEdge'] :: CodeGenEdge -> Text

-- | The ID of the node at which the edge ends.
[$sel:target:CodeGenEdge'] :: CodeGenEdge -> Text

-- | Create a value of <a>CodeGenEdge</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetParameter:CodeGenEdge'</a>,
--   <a>codeGenEdge_targetParameter</a> - The target of the edge.
--   
--   <a>$sel:source:CodeGenEdge'</a>, <a>codeGenEdge_source</a> - The ID of
--   the node at which the edge starts.
--   
--   <a>$sel:target:CodeGenEdge'</a>, <a>codeGenEdge_target</a> - The ID of
--   the node at which the edge ends.
newCodeGenEdge :: Text -> Text -> CodeGenEdge

-- | The target of the edge.
codeGenEdge_targetParameter :: Lens' CodeGenEdge (Maybe Text)

-- | The ID of the node at which the edge starts.
codeGenEdge_source :: Lens' CodeGenEdge Text

-- | The ID of the node at which the edge ends.
codeGenEdge_target :: Lens' CodeGenEdge Text

-- | Represents a node in a directed acyclic graph (DAG)
--   
--   <i>See:</i> <a>newCodeGenNode</a> smart constructor.
data CodeGenNode
CodeGenNode' :: Maybe Int -> Text -> Text -> [CodeGenNodeArg] -> CodeGenNode

-- | The line number of the node.
[$sel:lineNumber:CodeGenNode'] :: CodeGenNode -> Maybe Int

-- | A node identifier that is unique within the node's graph.
[$sel:id:CodeGenNode'] :: CodeGenNode -> Text

-- | The type of node that this is.
[$sel:nodeType:CodeGenNode'] :: CodeGenNode -> Text

-- | Properties of the node, in the form of name-value pairs.
[$sel:args:CodeGenNode'] :: CodeGenNode -> [CodeGenNodeArg]

-- | Create a value of <a>CodeGenNode</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lineNumber:CodeGenNode'</a>, <a>codeGenNode_lineNumber</a> -
--   The line number of the node.
--   
--   <a>$sel:id:CodeGenNode'</a>, <a>codeGenNode_id</a> - A node identifier
--   that is unique within the node's graph.
--   
--   <a>$sel:nodeType:CodeGenNode'</a>, <a>codeGenNode_nodeType</a> - The
--   type of node that this is.
--   
--   <a>$sel:args:CodeGenNode'</a>, <a>codeGenNode_args</a> - Properties of
--   the node, in the form of name-value pairs.
newCodeGenNode :: Text -> Text -> CodeGenNode

-- | The line number of the node.
codeGenNode_lineNumber :: Lens' CodeGenNode (Maybe Int)

-- | A node identifier that is unique within the node's graph.
codeGenNode_id :: Lens' CodeGenNode Text

-- | The type of node that this is.
codeGenNode_nodeType :: Lens' CodeGenNode Text

-- | Properties of the node, in the form of name-value pairs.
codeGenNode_args :: Lens' CodeGenNode [CodeGenNodeArg]

-- | An argument or property of a node.
--   
--   <i>See:</i> <a>newCodeGenNodeArg</a> smart constructor.
data CodeGenNodeArg
CodeGenNodeArg' :: Maybe Bool -> Text -> Text -> CodeGenNodeArg

-- | True if the value is used as a parameter.
[$sel:param:CodeGenNodeArg'] :: CodeGenNodeArg -> Maybe Bool

-- | The name of the argument or property.
[$sel:name:CodeGenNodeArg'] :: CodeGenNodeArg -> Text

-- | The value of the argument or property.
[$sel:value:CodeGenNodeArg'] :: CodeGenNodeArg -> Text

-- | Create a value of <a>CodeGenNodeArg</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:param:CodeGenNodeArg'</a>, <a>codeGenNodeArg_param</a> - True
--   if the value is used as a parameter.
--   
--   <a>$sel:name:CodeGenNodeArg'</a>, <a>codeGenNodeArg_name</a> - The
--   name of the argument or property.
--   
--   <a>$sel:value:CodeGenNodeArg'</a>, <a>codeGenNodeArg_value</a> - The
--   value of the argument or property.
newCodeGenNodeArg :: Text -> Text -> CodeGenNodeArg

-- | True if the value is used as a parameter.
codeGenNodeArg_param :: Lens' CodeGenNodeArg (Maybe Bool)

-- | The name of the argument or property.
codeGenNodeArg_name :: Lens' CodeGenNodeArg Text

-- | The value of the argument or property.
codeGenNodeArg_value :: Lens' CodeGenNodeArg Text

-- | A column in a <tt>Table</tt>.
--   
--   <i>See:</i> <a>newColumn</a> smart constructor.
data Column
Column' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Text -> Column

-- | These key-value pairs define properties associated with the column.
[$sel:parameters:Column'] :: Column -> Maybe (HashMap Text Text)

-- | The data type of the <tt>Column</tt>.
[$sel:type':Column'] :: Column -> Maybe Text

-- | A free-form text comment.
[$sel:comment:Column'] :: Column -> Maybe Text

-- | The name of the <tt>Column</tt>.
[$sel:name:Column'] :: Column -> Text

-- | Create a value of <a>Column</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:Column'</a>, <a>column_parameters</a> - These
--   key-value pairs define properties associated with the column.
--   
--   <a>$sel:type':Column'</a>, <a>column_type</a> - The data type of the
--   <tt>Column</tt>.
--   
--   <a>$sel:comment:Column'</a>, <a>column_comment</a> - A free-form text
--   comment.
--   
--   <a>$sel:name:Column'</a>, <a>column_name</a> - The name of the
--   <tt>Column</tt>.
newColumn :: Text -> Column

-- | These key-value pairs define properties associated with the column.
column_parameters :: Lens' Column (Maybe (HashMap Text Text))

-- | The data type of the <tt>Column</tt>.
column_type :: Lens' Column (Maybe Text)

-- | A free-form text comment.
column_comment :: Lens' Column (Maybe Text)

-- | The name of the <tt>Column</tt>.
column_name :: Lens' Column Text

-- | Encapsulates a column name that failed and the reason for failure.
--   
--   <i>See:</i> <a>newColumnError</a> smart constructor.
data ColumnError
ColumnError' :: Maybe ErrorDetail -> Maybe Text -> ColumnError

-- | An error message with the reason for the failure of an operation.
[$sel:error:ColumnError'] :: ColumnError -> Maybe ErrorDetail

-- | The name of the column that failed.
[$sel:columnName:ColumnError'] :: ColumnError -> Maybe Text

-- | Create a value of <a>ColumnError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:error:ColumnError'</a>, <a>columnError_error</a> - An error
--   message with the reason for the failure of an operation.
--   
--   <a>$sel:columnName:ColumnError'</a>, <a>columnError_columnName</a> -
--   The name of the column that failed.
newColumnError :: ColumnError

-- | An error message with the reason for the failure of an operation.
columnError_error :: Lens' ColumnError (Maybe ErrorDetail)

-- | The name of the column that failed.
columnError_columnName :: Lens' ColumnError (Maybe Text)

-- | A structure containing the column name and column importance score for
--   a column.
--   
--   Column importance helps you understand how columns contribute to your
--   model, by identifying which columns in your records are more important
--   than others.
--   
--   <i>See:</i> <a>newColumnImportance</a> smart constructor.
data ColumnImportance
ColumnImportance' :: Maybe Double -> Maybe Text -> ColumnImportance

-- | The column importance score for the column, as a decimal.
[$sel:importance:ColumnImportance'] :: ColumnImportance -> Maybe Double

-- | The name of a column.
[$sel:columnName:ColumnImportance'] :: ColumnImportance -> Maybe Text

-- | Create a value of <a>ColumnImportance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:importance:ColumnImportance'</a>,
--   <a>columnImportance_importance</a> - The column importance score for
--   the column, as a decimal.
--   
--   <a>$sel:columnName:ColumnImportance'</a>,
--   <a>columnImportance_columnName</a> - The name of a column.
newColumnImportance :: ColumnImportance

-- | The column importance score for the column, as a decimal.
columnImportance_importance :: Lens' ColumnImportance (Maybe Double)

-- | The name of a column.
columnImportance_columnName :: Lens' ColumnImportance (Maybe Text)

-- | Represents the generated column-level statistics for a table or
--   partition.
--   
--   <i>See:</i> <a>newColumnStatistics</a> smart constructor.
data ColumnStatistics
ColumnStatistics' :: Text -> Text -> POSIX -> ColumnStatisticsData -> ColumnStatistics

-- | Name of column which statistics belong to.
[$sel:columnName:ColumnStatistics'] :: ColumnStatistics -> Text

-- | The data type of the column.
[$sel:columnType:ColumnStatistics'] :: ColumnStatistics -> Text

-- | The timestamp of when column statistics were generated.
[$sel:analyzedTime:ColumnStatistics'] :: ColumnStatistics -> POSIX

-- | A <tt>ColumnStatisticData</tt> object that contains the statistics
--   data values.
[$sel:statisticsData:ColumnStatistics'] :: ColumnStatistics -> ColumnStatisticsData

-- | Create a value of <a>ColumnStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:columnName:ColumnStatistics'</a>,
--   <a>columnStatistics_columnName</a> - Name of column which statistics
--   belong to.
--   
--   <a>$sel:columnType:ColumnStatistics'</a>,
--   <a>columnStatistics_columnType</a> - The data type of the column.
--   
--   <a>$sel:analyzedTime:ColumnStatistics'</a>,
--   <a>columnStatistics_analyzedTime</a> - The timestamp of when column
--   statistics were generated.
--   
--   <a>$sel:statisticsData:ColumnStatistics'</a>,
--   <a>columnStatistics_statisticsData</a> - A
--   <tt>ColumnStatisticData</tt> object that contains the statistics data
--   values.
newColumnStatistics :: Text -> Text -> UTCTime -> ColumnStatisticsData -> ColumnStatistics

-- | Name of column which statistics belong to.
columnStatistics_columnName :: Lens' ColumnStatistics Text

-- | The data type of the column.
columnStatistics_columnType :: Lens' ColumnStatistics Text

-- | The timestamp of when column statistics were generated.
columnStatistics_analyzedTime :: Lens' ColumnStatistics UTCTime

-- | A <tt>ColumnStatisticData</tt> object that contains the statistics
--   data values.
columnStatistics_statisticsData :: Lens' ColumnStatistics ColumnStatisticsData

-- | Contains the individual types of column statistics data. Only one data
--   object should be set and indicated by the <tt>Type</tt> attribute.
--   
--   <i>See:</i> <a>newColumnStatisticsData</a> smart constructor.
data ColumnStatisticsData
ColumnStatisticsData' :: Maybe BinaryColumnStatisticsData -> Maybe DateColumnStatisticsData -> Maybe BooleanColumnStatisticsData -> Maybe DecimalColumnStatisticsData -> Maybe DoubleColumnStatisticsData -> Maybe StringColumnStatisticsData -> Maybe LongColumnStatisticsData -> ColumnStatisticsType -> ColumnStatisticsData

-- | Binary column statistics data.
[$sel:binaryColumnStatisticsData:ColumnStatisticsData'] :: ColumnStatisticsData -> Maybe BinaryColumnStatisticsData

-- | Date column statistics data.
[$sel:dateColumnStatisticsData:ColumnStatisticsData'] :: ColumnStatisticsData -> Maybe DateColumnStatisticsData

-- | Boolean column statistics data.
[$sel:booleanColumnStatisticsData:ColumnStatisticsData'] :: ColumnStatisticsData -> Maybe BooleanColumnStatisticsData

-- | Decimal column statistics data.
[$sel:decimalColumnStatisticsData:ColumnStatisticsData'] :: ColumnStatisticsData -> Maybe DecimalColumnStatisticsData

-- | Double column statistics data.
[$sel:doubleColumnStatisticsData:ColumnStatisticsData'] :: ColumnStatisticsData -> Maybe DoubleColumnStatisticsData

-- | String column statistics data.
[$sel:stringColumnStatisticsData:ColumnStatisticsData'] :: ColumnStatisticsData -> Maybe StringColumnStatisticsData

-- | Long column statistics data.
[$sel:longColumnStatisticsData:ColumnStatisticsData'] :: ColumnStatisticsData -> Maybe LongColumnStatisticsData

-- | The type of column statistics data.
[$sel:type':ColumnStatisticsData'] :: ColumnStatisticsData -> ColumnStatisticsType

-- | Create a value of <a>ColumnStatisticsData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:binaryColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_binaryColumnStatisticsData</a> - Binary column
--   statistics data.
--   
--   <a>$sel:dateColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_dateColumnStatisticsData</a> - Date column
--   statistics data.
--   
--   <a>$sel:booleanColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_booleanColumnStatisticsData</a> - Boolean
--   column statistics data.
--   
--   <a>$sel:decimalColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_decimalColumnStatisticsData</a> - Decimal
--   column statistics data.
--   
--   <a>$sel:doubleColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_doubleColumnStatisticsData</a> - Double column
--   statistics data.
--   
--   <a>$sel:stringColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_stringColumnStatisticsData</a> - String column
--   statistics data.
--   
--   <a>$sel:longColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_longColumnStatisticsData</a> - Long column
--   statistics data.
--   
--   <a>$sel:type':ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_type</a> - The type of column statistics data.
newColumnStatisticsData :: ColumnStatisticsType -> ColumnStatisticsData

-- | Binary column statistics data.
columnStatisticsData_binaryColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe BinaryColumnStatisticsData)

-- | Date column statistics data.
columnStatisticsData_dateColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe DateColumnStatisticsData)

-- | Boolean column statistics data.
columnStatisticsData_booleanColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe BooleanColumnStatisticsData)

-- | Decimal column statistics data.
columnStatisticsData_decimalColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe DecimalColumnStatisticsData)

-- | Double column statistics data.
columnStatisticsData_doubleColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe DoubleColumnStatisticsData)

-- | String column statistics data.
columnStatisticsData_stringColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe StringColumnStatisticsData)

-- | Long column statistics data.
columnStatisticsData_longColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe LongColumnStatisticsData)

-- | The type of column statistics data.
columnStatisticsData_type :: Lens' ColumnStatisticsData ColumnStatisticsType

-- | Encapsulates a <tt>ColumnStatistics</tt> object that failed and the
--   reason for failure.
--   
--   <i>See:</i> <a>newColumnStatisticsError</a> smart constructor.
data ColumnStatisticsError
ColumnStatisticsError' :: Maybe ErrorDetail -> Maybe ColumnStatistics -> ColumnStatisticsError

-- | An error message with the reason for the failure of an operation.
[$sel:error:ColumnStatisticsError'] :: ColumnStatisticsError -> Maybe ErrorDetail

-- | The <tt>ColumnStatistics</tt> of the column.
[$sel:columnStatistics:ColumnStatisticsError'] :: ColumnStatisticsError -> Maybe ColumnStatistics

-- | Create a value of <a>ColumnStatisticsError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:error:ColumnStatisticsError'</a>,
--   <a>columnStatisticsError_error</a> - An error message with the reason
--   for the failure of an operation.
--   
--   <a>$sel:columnStatistics:ColumnStatisticsError'</a>,
--   <a>columnStatisticsError_columnStatistics</a> - The
--   <tt>ColumnStatistics</tt> of the column.
newColumnStatisticsError :: ColumnStatisticsError

-- | An error message with the reason for the failure of an operation.
columnStatisticsError_error :: Lens' ColumnStatisticsError (Maybe ErrorDetail)

-- | The <tt>ColumnStatistics</tt> of the column.
columnStatisticsError_columnStatistics :: Lens' ColumnStatisticsError (Maybe ColumnStatistics)

-- | Defines a condition under which a trigger fires.
--   
--   <i>See:</i> <a>newCondition</a> smart constructor.
data Condition
Condition' :: Maybe CrawlState -> Maybe JobRunState -> Maybe Text -> Maybe LogicalOperator -> Maybe Text -> Condition

-- | The state of the crawler to which this condition applies.
[$sel:crawlState:Condition'] :: Condition -> Maybe CrawlState

-- | The condition state. Currently, the only job states that a trigger can
--   listen for are <tt>SUCCEEDED</tt>, <tt>STOPPED</tt>, <tt>FAILED</tt>,
--   and <tt>TIMEOUT</tt>. The only crawler states that a trigger can
--   listen for are <tt>SUCCEEDED</tt>, <tt>FAILED</tt>, and
--   <tt>CANCELLED</tt>.
[$sel:state:Condition'] :: Condition -> Maybe JobRunState

-- | The name of the job whose <tt>JobRuns</tt> this condition applies to,
--   and on which this trigger waits.
[$sel:jobName:Condition'] :: Condition -> Maybe Text

-- | A logical operator.
[$sel:logicalOperator:Condition'] :: Condition -> Maybe LogicalOperator

-- | The name of the crawler to which this condition applies.
[$sel:crawlerName:Condition'] :: Condition -> Maybe Text

-- | Create a value of <a>Condition</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawlState:Condition'</a>, <a>condition_crawlState</a> - The
--   state of the crawler to which this condition applies.
--   
--   <a>$sel:state:Condition'</a>, <a>condition_state</a> - The condition
--   state. Currently, the only job states that a trigger can listen for
--   are <tt>SUCCEEDED</tt>, <tt>STOPPED</tt>, <tt>FAILED</tt>, and
--   <tt>TIMEOUT</tt>. The only crawler states that a trigger can listen
--   for are <tt>SUCCEEDED</tt>, <tt>FAILED</tt>, and <tt>CANCELLED</tt>.
--   
--   <a>$sel:jobName:Condition'</a>, <a>condition_jobName</a> - The name of
--   the job whose <tt>JobRuns</tt> this condition applies to, and on which
--   this trigger waits.
--   
--   <a>$sel:logicalOperator:Condition'</a>,
--   <a>condition_logicalOperator</a> - A logical operator.
--   
--   <a>$sel:crawlerName:Condition'</a>, <a>condition_crawlerName</a> - The
--   name of the crawler to which this condition applies.
newCondition :: Condition

-- | The state of the crawler to which this condition applies.
condition_crawlState :: Lens' Condition (Maybe CrawlState)

-- | The condition state. Currently, the only job states that a trigger can
--   listen for are <tt>SUCCEEDED</tt>, <tt>STOPPED</tt>, <tt>FAILED</tt>,
--   and <tt>TIMEOUT</tt>. The only crawler states that a trigger can
--   listen for are <tt>SUCCEEDED</tt>, <tt>FAILED</tt>, and
--   <tt>CANCELLED</tt>.
condition_state :: Lens' Condition (Maybe JobRunState)

-- | The name of the job whose <tt>JobRuns</tt> this condition applies to,
--   and on which this trigger waits.
condition_jobName :: Lens' Condition (Maybe Text)

-- | A logical operator.
condition_logicalOperator :: Lens' Condition (Maybe LogicalOperator)

-- | The name of the crawler to which this condition applies.
condition_crawlerName :: Lens' Condition (Maybe Text)

-- | The confusion matrix shows you what your transform is predicting
--   accurately and what types of errors it is making.
--   
--   For more information, see <a>Confusion matrix</a> in Wikipedia.
--   
--   <i>See:</i> <a>newConfusionMatrix</a> smart constructor.
data ConfusionMatrix
ConfusionMatrix' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> ConfusionMatrix

-- | The number of nonmatches in the data that the transform correctly
--   rejected, in the confusion matrix for your transform.
[$sel:numTrueNegatives:ConfusionMatrix'] :: ConfusionMatrix -> Maybe Integer

-- | The number of matches in the data that the transform didn't find, in
--   the confusion matrix for your transform.
[$sel:numFalseNegatives:ConfusionMatrix'] :: ConfusionMatrix -> Maybe Integer

-- | The number of matches in the data that the transform correctly found,
--   in the confusion matrix for your transform.
[$sel:numTruePositives:ConfusionMatrix'] :: ConfusionMatrix -> Maybe Integer

-- | The number of nonmatches in the data that the transform incorrectly
--   classified as a match, in the confusion matrix for your transform.
[$sel:numFalsePositives:ConfusionMatrix'] :: ConfusionMatrix -> Maybe Integer

-- | Create a value of <a>ConfusionMatrix</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numTrueNegatives:ConfusionMatrix'</a>,
--   <a>confusionMatrix_numTrueNegatives</a> - The number of nonmatches in
--   the data that the transform correctly rejected, in the confusion
--   matrix for your transform.
--   
--   <a>$sel:numFalseNegatives:ConfusionMatrix'</a>,
--   <a>confusionMatrix_numFalseNegatives</a> - The number of matches in
--   the data that the transform didn't find, in the confusion matrix for
--   your transform.
--   
--   <a>$sel:numTruePositives:ConfusionMatrix'</a>,
--   <a>confusionMatrix_numTruePositives</a> - The number of matches in the
--   data that the transform correctly found, in the confusion matrix for
--   your transform.
--   
--   <a>$sel:numFalsePositives:ConfusionMatrix'</a>,
--   <a>confusionMatrix_numFalsePositives</a> - The number of nonmatches in
--   the data that the transform incorrectly classified as a match, in the
--   confusion matrix for your transform.
newConfusionMatrix :: ConfusionMatrix

-- | The number of nonmatches in the data that the transform correctly
--   rejected, in the confusion matrix for your transform.
confusionMatrix_numTrueNegatives :: Lens' ConfusionMatrix (Maybe Integer)

-- | The number of matches in the data that the transform didn't find, in
--   the confusion matrix for your transform.
confusionMatrix_numFalseNegatives :: Lens' ConfusionMatrix (Maybe Integer)

-- | The number of matches in the data that the transform correctly found,
--   in the confusion matrix for your transform.
confusionMatrix_numTruePositives :: Lens' ConfusionMatrix (Maybe Integer)

-- | The number of nonmatches in the data that the transform incorrectly
--   classified as a match, in the confusion matrix for your transform.
confusionMatrix_numFalsePositives :: Lens' ConfusionMatrix (Maybe Integer)

-- | Defines a connection to a data source.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe POSIX -> Maybe Text -> Maybe (HashMap ConnectionPropertyKey Text) -> Maybe POSIX -> Maybe [Text] -> Maybe PhysicalConnectionRequirements -> Maybe Text -> Maybe Text -> Maybe ConnectionType -> Connection

-- | The time that this connection definition was created.
[$sel:creationTime:Connection'] :: Connection -> Maybe POSIX

-- | The user, group, or role that last updated this connection definition.
[$sel:lastUpdatedBy:Connection'] :: Connection -> Maybe Text

-- | These key-value pairs define parameters for the connection:
--   
--   <ul>
--   <li><tt>HOST</tt> - The host URI: either the fully qualified domain
--   name (FQDN) or the IPv4 address of the database host.</li>
--   <li><tt>PORT</tt> - The port number, between 1024 and 65535, of the
--   port on which the database host is listening for database
--   connections.</li>
--   <li><tt>USER_NAME</tt> - The name under which to log in to the
--   database. The value string for <tt>USER_NAME</tt> is
--   "<tt>USERNAME</tt>".</li>
--   <li><tt>PASSWORD</tt> - A password, if one is used, for the user
--   name.</li>
--   <li><tt>ENCRYPTED_PASSWORD</tt> - When you enable connection password
--   protection by setting <tt>ConnectionPasswordEncryption</tt> in the
--   Data Catalog encryption settings, this field stores the encrypted
--   password.</li>
--   <li><tt>JDBC_DRIVER_JAR_URI</tt> - The Amazon Simple Storage Service
--   (Amazon S3) path of the JAR file that contains the JDBC driver to
--   use.</li>
--   <li><tt>JDBC_DRIVER_CLASS_NAME</tt> - The class name of the JDBC
--   driver to use.</li>
--   <li><tt>JDBC_ENGINE</tt> - The name of the JDBC engine to use.</li>
--   <li><tt>JDBC_ENGINE_VERSION</tt> - The version of the JDBC engine to
--   use.</li>
--   <li><tt>CONFIG_FILES</tt> - (Reserved for future use.)</li>
--   <li><tt>INSTANCE_ID</tt> - The instance ID to use.</li>
--   <li><tt>JDBC_CONNECTION_URL</tt> - The URL for connecting to a JDBC
--   data source.</li>
--   <li><tt>JDBC_ENFORCE_SSL</tt> - A Boolean string (true, false)
--   specifying whether Secure Sockets Layer (SSL) with hostname matching
--   is enforced for the JDBC connection on the client. The default is
--   false.</li>
--   <li><tt>CUSTOM_JDBC_CERT</tt> - An Amazon S3 location specifying the
--   customer's root certificate. Glue uses this root certificate to
--   validate the customer’s certificate when connecting to the customer
--   database. Glue only handles X.509 certificates. The certificate
--   provided must be DER-encoded and supplied in Base64 encoding PEM
--   format.</li>
--   <li><tt>SKIP_CUSTOM_JDBC_CERT_VALIDATION</tt> - By default, this is
--   <tt>false</tt>. Glue validates the Signature algorithm and Subject
--   Public Key Algorithm for the customer certificate. The only permitted
--   algorithms for the Signature algorithm are SHA256withRSA,
--   SHA384withRSA or SHA512withRSA. For the Subject Public Key Algorithm,
--   the key length must be at least 2048. You can set the value of this
--   property to <tt>true</tt> to skip Glue’s validation of the customer
--   certificate.</li>
--   <li><tt>CUSTOM_JDBC_CERT_STRING</tt> - A custom JDBC certificate
--   string which is used for domain match or distinguished name match to
--   prevent a man-in-the-middle attack. In Oracle database, this is used
--   as the <tt>SSL_SERVER_CERT_DN</tt>; in Microsoft SQL Server, this is
--   used as the <tt>hostNameInCertificate</tt>.</li>
--   <li><tt>CONNECTION_URL</tt> - The URL for connecting to a general
--   (non-JDBC) data source.</li>
--   <li><tt>KAFKA_BOOTSTRAP_SERVERS</tt> - A comma-separated list of host
--   and port pairs that are the addresses of the Apache Kafka brokers in a
--   Kafka cluster to which a Kafka client will connect to and bootstrap
--   itself.</li>
--   <li><tt>KAFKA_SSL_ENABLED</tt> - Whether to enable or disable SSL on
--   an Apache Kafka connection. Default value is "true".</li>
--   <li><tt>KAFKA_CUSTOM_CERT</tt> - The Amazon S3 URL for the private CA
--   cert file (.pem format). The default is an empty string.</li>
--   <li><tt>KAFKA_SKIP_CUSTOM_CERT_VALIDATION</tt> - Whether to skip the
--   validation of the CA cert file or not. Glue validates for three
--   algorithms: SHA256withRSA, SHA384withRSA and SHA512withRSA. Default
--   value is "false".</li>
--   <li><tt>SECRET_ID</tt> - The secret ID used for the secret manager of
--   credentials.</li>
--   <li><tt>CONNECTOR_URL</tt> - The connector URL for a MARKETPLACE or
--   CUSTOM connection.</li>
--   <li><tt>CONNECTOR_TYPE</tt> - The connector type for a MARKETPLACE or
--   CUSTOM connection.</li>
--   <li><tt>CONNECTOR_CLASS_NAME</tt> - The connector class name for a
--   MARKETPLACE or CUSTOM connection.</li>
--   <li><tt>KAFKA_CLIENT_KEYSTORE</tt> - The Amazon S3 location of the
--   client keystore file for Kafka client side authentication
--   (Optional).</li>
--   <li><tt>KAFKA_CLIENT_KEYSTORE_PASSWORD</tt> - The password to access
--   the provided keystore (Optional).</li>
--   <li><tt>KAFKA_CLIENT_KEY_PASSWORD</tt> - A keystore can consist of
--   multiple keys, so this is the password to access the client key to be
--   used with the Kafka server side key (Optional).</li>
--   <li><tt>ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD</tt> - The encrypted
--   version of the Kafka client keystore password (if the user has the
--   Glue encrypt passwords setting selected).</li>
--   <li><tt>ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD</tt> - The encrypted
--   version of the Kafka client key password (if the user has the Glue
--   encrypt passwords setting selected).</li>
--   </ul>
[$sel:connectionProperties:Connection'] :: Connection -> Maybe (HashMap ConnectionPropertyKey Text)

-- | The last time that this connection definition was updated.
[$sel:lastUpdatedTime:Connection'] :: Connection -> Maybe POSIX

-- | A list of criteria that can be used in selecting this connection.
[$sel:matchCriteria:Connection'] :: Connection -> Maybe [Text]

-- | A map of physical connection requirements, such as virtual private
--   cloud (VPC) and <tt>SecurityGroup</tt>, that are needed to make this
--   connection successfully.
[$sel:physicalConnectionRequirements:Connection'] :: Connection -> Maybe PhysicalConnectionRequirements

-- | The name of the connection definition.
[$sel:name:Connection'] :: Connection -> Maybe Text

-- | The description of the connection.
[$sel:description:Connection'] :: Connection -> Maybe Text

-- | The type of the connection. Currently, SFTP is not supported.
[$sel:connectionType:Connection'] :: Connection -> Maybe ConnectionType

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Connection'</a>, <a>connection_creationTime</a> -
--   The time that this connection definition was created.
--   
--   <a>$sel:lastUpdatedBy:Connection'</a>, <a>connection_lastUpdatedBy</a>
--   - The user, group, or role that last updated this connection
--   definition.
--   
--   <a>$sel:connectionProperties:Connection'</a>,
--   <a>connection_connectionProperties</a> - These key-value pairs define
--   parameters for the connection:
--   
--   <ul>
--   <li><tt>HOST</tt> - The host URI: either the fully qualified domain
--   name (FQDN) or the IPv4 address of the database host.</li>
--   <li><tt>PORT</tt> - The port number, between 1024 and 65535, of the
--   port on which the database host is listening for database
--   connections.</li>
--   <li><tt>USER_NAME</tt> - The name under which to log in to the
--   database. The value string for <tt>USER_NAME</tt> is
--   "<tt>USERNAME</tt>".</li>
--   <li><tt>PASSWORD</tt> - A password, if one is used, for the user
--   name.</li>
--   <li><tt>ENCRYPTED_PASSWORD</tt> - When you enable connection password
--   protection by setting <tt>ConnectionPasswordEncryption</tt> in the
--   Data Catalog encryption settings, this field stores the encrypted
--   password.</li>
--   <li><tt>JDBC_DRIVER_JAR_URI</tt> - The Amazon Simple Storage Service
--   (Amazon S3) path of the JAR file that contains the JDBC driver to
--   use.</li>
--   <li><tt>JDBC_DRIVER_CLASS_NAME</tt> - The class name of the JDBC
--   driver to use.</li>
--   <li><tt>JDBC_ENGINE</tt> - The name of the JDBC engine to use.</li>
--   <li><tt>JDBC_ENGINE_VERSION</tt> - The version of the JDBC engine to
--   use.</li>
--   <li><tt>CONFIG_FILES</tt> - (Reserved for future use.)</li>
--   <li><tt>INSTANCE_ID</tt> - The instance ID to use.</li>
--   <li><tt>JDBC_CONNECTION_URL</tt> - The URL for connecting to a JDBC
--   data source.</li>
--   <li><tt>JDBC_ENFORCE_SSL</tt> - A Boolean string (true, false)
--   specifying whether Secure Sockets Layer (SSL) with hostname matching
--   is enforced for the JDBC connection on the client. The default is
--   false.</li>
--   <li><tt>CUSTOM_JDBC_CERT</tt> - An Amazon S3 location specifying the
--   customer's root certificate. Glue uses this root certificate to
--   validate the customer’s certificate when connecting to the customer
--   database. Glue only handles X.509 certificates. The certificate
--   provided must be DER-encoded and supplied in Base64 encoding PEM
--   format.</li>
--   <li><tt>SKIP_CUSTOM_JDBC_CERT_VALIDATION</tt> - By default, this is
--   <tt>false</tt>. Glue validates the Signature algorithm and Subject
--   Public Key Algorithm for the customer certificate. The only permitted
--   algorithms for the Signature algorithm are SHA256withRSA,
--   SHA384withRSA or SHA512withRSA. For the Subject Public Key Algorithm,
--   the key length must be at least 2048. You can set the value of this
--   property to <tt>true</tt> to skip Glue’s validation of the customer
--   certificate.</li>
--   <li><tt>CUSTOM_JDBC_CERT_STRING</tt> - A custom JDBC certificate
--   string which is used for domain match or distinguished name match to
--   prevent a man-in-the-middle attack. In Oracle database, this is used
--   as the <tt>SSL_SERVER_CERT_DN</tt>; in Microsoft SQL Server, this is
--   used as the <tt>hostNameInCertificate</tt>.</li>
--   <li><tt>CONNECTION_URL</tt> - The URL for connecting to a general
--   (non-JDBC) data source.</li>
--   <li><tt>KAFKA_BOOTSTRAP_SERVERS</tt> - A comma-separated list of host
--   and port pairs that are the addresses of the Apache Kafka brokers in a
--   Kafka cluster to which a Kafka client will connect to and bootstrap
--   itself.</li>
--   <li><tt>KAFKA_SSL_ENABLED</tt> - Whether to enable or disable SSL on
--   an Apache Kafka connection. Default value is "true".</li>
--   <li><tt>KAFKA_CUSTOM_CERT</tt> - The Amazon S3 URL for the private CA
--   cert file (.pem format). The default is an empty string.</li>
--   <li><tt>KAFKA_SKIP_CUSTOM_CERT_VALIDATION</tt> - Whether to skip the
--   validation of the CA cert file or not. Glue validates for three
--   algorithms: SHA256withRSA, SHA384withRSA and SHA512withRSA. Default
--   value is "false".</li>
--   <li><tt>SECRET_ID</tt> - The secret ID used for the secret manager of
--   credentials.</li>
--   <li><tt>CONNECTOR_URL</tt> - The connector URL for a MARKETPLACE or
--   CUSTOM connection.</li>
--   <li><tt>CONNECTOR_TYPE</tt> - The connector type for a MARKETPLACE or
--   CUSTOM connection.</li>
--   <li><tt>CONNECTOR_CLASS_NAME</tt> - The connector class name for a
--   MARKETPLACE or CUSTOM connection.</li>
--   <li><tt>KAFKA_CLIENT_KEYSTORE</tt> - The Amazon S3 location of the
--   client keystore file for Kafka client side authentication
--   (Optional).</li>
--   <li><tt>KAFKA_CLIENT_KEYSTORE_PASSWORD</tt> - The password to access
--   the provided keystore (Optional).</li>
--   <li><tt>KAFKA_CLIENT_KEY_PASSWORD</tt> - A keystore can consist of
--   multiple keys, so this is the password to access the client key to be
--   used with the Kafka server side key (Optional).</li>
--   <li><tt>ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD</tt> - The encrypted
--   version of the Kafka client keystore password (if the user has the
--   Glue encrypt passwords setting selected).</li>
--   <li><tt>ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD</tt> - The encrypted
--   version of the Kafka client key password (if the user has the Glue
--   encrypt passwords setting selected).</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedTime:Connection'</a>,
--   <a>connection_lastUpdatedTime</a> - The last time that this connection
--   definition was updated.
--   
--   <a>$sel:matchCriteria:Connection'</a>, <a>connection_matchCriteria</a>
--   - A list of criteria that can be used in selecting this connection.
--   
--   <a>$sel:physicalConnectionRequirements:Connection'</a>,
--   <a>connection_physicalConnectionRequirements</a> - A map of physical
--   connection requirements, such as virtual private cloud (VPC) and
--   <tt>SecurityGroup</tt>, that are needed to make this connection
--   successfully.
--   
--   <a>$sel:name:Connection'</a>, <a>connection_name</a> - The name of the
--   connection definition.
--   
--   <a>$sel:description:Connection'</a>, <a>connection_description</a> -
--   The description of the connection.
--   
--   <a>$sel:connectionType:Connection'</a>,
--   <a>connection_connectionType</a> - The type of the connection.
--   Currently, SFTP is not supported.
newConnection :: Connection

-- | The time that this connection definition was created.
connection_creationTime :: Lens' Connection (Maybe UTCTime)

-- | The user, group, or role that last updated this connection definition.
connection_lastUpdatedBy :: Lens' Connection (Maybe Text)

-- | These key-value pairs define parameters for the connection:
--   
--   <ul>
--   <li><tt>HOST</tt> - The host URI: either the fully qualified domain
--   name (FQDN) or the IPv4 address of the database host.</li>
--   <li><tt>PORT</tt> - The port number, between 1024 and 65535, of the
--   port on which the database host is listening for database
--   connections.</li>
--   <li><tt>USER_NAME</tt> - The name under which to log in to the
--   database. The value string for <tt>USER_NAME</tt> is
--   "<tt>USERNAME</tt>".</li>
--   <li><tt>PASSWORD</tt> - A password, if one is used, for the user
--   name.</li>
--   <li><tt>ENCRYPTED_PASSWORD</tt> - When you enable connection password
--   protection by setting <tt>ConnectionPasswordEncryption</tt> in the
--   Data Catalog encryption settings, this field stores the encrypted
--   password.</li>
--   <li><tt>JDBC_DRIVER_JAR_URI</tt> - The Amazon Simple Storage Service
--   (Amazon S3) path of the JAR file that contains the JDBC driver to
--   use.</li>
--   <li><tt>JDBC_DRIVER_CLASS_NAME</tt> - The class name of the JDBC
--   driver to use.</li>
--   <li><tt>JDBC_ENGINE</tt> - The name of the JDBC engine to use.</li>
--   <li><tt>JDBC_ENGINE_VERSION</tt> - The version of the JDBC engine to
--   use.</li>
--   <li><tt>CONFIG_FILES</tt> - (Reserved for future use.)</li>
--   <li><tt>INSTANCE_ID</tt> - The instance ID to use.</li>
--   <li><tt>JDBC_CONNECTION_URL</tt> - The URL for connecting to a JDBC
--   data source.</li>
--   <li><tt>JDBC_ENFORCE_SSL</tt> - A Boolean string (true, false)
--   specifying whether Secure Sockets Layer (SSL) with hostname matching
--   is enforced for the JDBC connection on the client. The default is
--   false.</li>
--   <li><tt>CUSTOM_JDBC_CERT</tt> - An Amazon S3 location specifying the
--   customer's root certificate. Glue uses this root certificate to
--   validate the customer’s certificate when connecting to the customer
--   database. Glue only handles X.509 certificates. The certificate
--   provided must be DER-encoded and supplied in Base64 encoding PEM
--   format.</li>
--   <li><tt>SKIP_CUSTOM_JDBC_CERT_VALIDATION</tt> - By default, this is
--   <tt>false</tt>. Glue validates the Signature algorithm and Subject
--   Public Key Algorithm for the customer certificate. The only permitted
--   algorithms for the Signature algorithm are SHA256withRSA,
--   SHA384withRSA or SHA512withRSA. For the Subject Public Key Algorithm,
--   the key length must be at least 2048. You can set the value of this
--   property to <tt>true</tt> to skip Glue’s validation of the customer
--   certificate.</li>
--   <li><tt>CUSTOM_JDBC_CERT_STRING</tt> - A custom JDBC certificate
--   string which is used for domain match or distinguished name match to
--   prevent a man-in-the-middle attack. In Oracle database, this is used
--   as the <tt>SSL_SERVER_CERT_DN</tt>; in Microsoft SQL Server, this is
--   used as the <tt>hostNameInCertificate</tt>.</li>
--   <li><tt>CONNECTION_URL</tt> - The URL for connecting to a general
--   (non-JDBC) data source.</li>
--   <li><tt>KAFKA_BOOTSTRAP_SERVERS</tt> - A comma-separated list of host
--   and port pairs that are the addresses of the Apache Kafka brokers in a
--   Kafka cluster to which a Kafka client will connect to and bootstrap
--   itself.</li>
--   <li><tt>KAFKA_SSL_ENABLED</tt> - Whether to enable or disable SSL on
--   an Apache Kafka connection. Default value is "true".</li>
--   <li><tt>KAFKA_CUSTOM_CERT</tt> - The Amazon S3 URL for the private CA
--   cert file (.pem format). The default is an empty string.</li>
--   <li><tt>KAFKA_SKIP_CUSTOM_CERT_VALIDATION</tt> - Whether to skip the
--   validation of the CA cert file or not. Glue validates for three
--   algorithms: SHA256withRSA, SHA384withRSA and SHA512withRSA. Default
--   value is "false".</li>
--   <li><tt>SECRET_ID</tt> - The secret ID used for the secret manager of
--   credentials.</li>
--   <li><tt>CONNECTOR_URL</tt> - The connector URL for a MARKETPLACE or
--   CUSTOM connection.</li>
--   <li><tt>CONNECTOR_TYPE</tt> - The connector type for a MARKETPLACE or
--   CUSTOM connection.</li>
--   <li><tt>CONNECTOR_CLASS_NAME</tt> - The connector class name for a
--   MARKETPLACE or CUSTOM connection.</li>
--   <li><tt>KAFKA_CLIENT_KEYSTORE</tt> - The Amazon S3 location of the
--   client keystore file for Kafka client side authentication
--   (Optional).</li>
--   <li><tt>KAFKA_CLIENT_KEYSTORE_PASSWORD</tt> - The password to access
--   the provided keystore (Optional).</li>
--   <li><tt>KAFKA_CLIENT_KEY_PASSWORD</tt> - A keystore can consist of
--   multiple keys, so this is the password to access the client key to be
--   used with the Kafka server side key (Optional).</li>
--   <li><tt>ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD</tt> - The encrypted
--   version of the Kafka client keystore password (if the user has the
--   Glue encrypt passwords setting selected).</li>
--   <li><tt>ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD</tt> - The encrypted
--   version of the Kafka client key password (if the user has the Glue
--   encrypt passwords setting selected).</li>
--   </ul>
connection_connectionProperties :: Lens' Connection (Maybe (HashMap ConnectionPropertyKey Text))

-- | The last time that this connection definition was updated.
connection_lastUpdatedTime :: Lens' Connection (Maybe UTCTime)

-- | A list of criteria that can be used in selecting this connection.
connection_matchCriteria :: Lens' Connection (Maybe [Text])

-- | A map of physical connection requirements, such as virtual private
--   cloud (VPC) and <tt>SecurityGroup</tt>, that are needed to make this
--   connection successfully.
connection_physicalConnectionRequirements :: Lens' Connection (Maybe PhysicalConnectionRequirements)

-- | The name of the connection definition.
connection_name :: Lens' Connection (Maybe Text)

-- | The description of the connection.
connection_description :: Lens' Connection (Maybe Text)

-- | The type of the connection. Currently, SFTP is not supported.
connection_connectionType :: Lens' Connection (Maybe ConnectionType)

-- | A structure that is used to specify a connection to create or update.
--   
--   <i>See:</i> <a>newConnectionInput</a> smart constructor.
data ConnectionInput
ConnectionInput' :: Maybe [Text] -> Maybe PhysicalConnectionRequirements -> Maybe Text -> Text -> ConnectionType -> HashMap ConnectionPropertyKey Text -> ConnectionInput

-- | A list of criteria that can be used in selecting this connection.
[$sel:matchCriteria:ConnectionInput'] :: ConnectionInput -> Maybe [Text]

-- | A map of physical connection requirements, such as virtual private
--   cloud (VPC) and <tt>SecurityGroup</tt>, that are needed to
--   successfully make this connection.
[$sel:physicalConnectionRequirements:ConnectionInput'] :: ConnectionInput -> Maybe PhysicalConnectionRequirements

-- | The description of the connection.
[$sel:description:ConnectionInput'] :: ConnectionInput -> Maybe Text

-- | The name of the connection.
[$sel:name:ConnectionInput'] :: ConnectionInput -> Text

-- | The type of the connection. Currently, these types are supported:
--   
--   <ul>
--   <li><tt>JDBC</tt> - Designates a connection to a database through Java
--   Database Connectivity (JDBC).</li>
--   <li><tt>KAFKA</tt> - Designates a connection to an Apache Kafka
--   streaming platform.</li>
--   <li><tt>MONGODB</tt> - Designates a connection to a MongoDB document
--   database.</li>
--   <li><tt>NETWORK</tt> - Designates a network connection to a data
--   source within an Amazon Virtual Private Cloud environment (Amazon
--   VPC).</li>
--   <li><tt>MARKETPLACE</tt> - Uses configuration settings contained in a
--   connector purchased from Amazon Web Services Marketplace to read from
--   and write to data stores that are not natively supported by Glue.</li>
--   <li><tt>CUSTOM</tt> - Uses configuration settings contained in a
--   custom connector to read from and write to data stores that are not
--   natively supported by Glue.</li>
--   </ul>
--   
--   SFTP is not supported.
[$sel:connectionType:ConnectionInput'] :: ConnectionInput -> ConnectionType

-- | These key-value pairs define parameters for the connection.
[$sel:connectionProperties:ConnectionInput'] :: ConnectionInput -> HashMap ConnectionPropertyKey Text

-- | Create a value of <a>ConnectionInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:matchCriteria:ConnectionInput'</a>,
--   <a>connectionInput_matchCriteria</a> - A list of criteria that can be
--   used in selecting this connection.
--   
--   <a>$sel:physicalConnectionRequirements:ConnectionInput'</a>,
--   <a>connectionInput_physicalConnectionRequirements</a> - A map of
--   physical connection requirements, such as virtual private cloud (VPC)
--   and <tt>SecurityGroup</tt>, that are needed to successfully make this
--   connection.
--   
--   <a>$sel:description:ConnectionInput'</a>,
--   <a>connectionInput_description</a> - The description of the
--   connection.
--   
--   <a>$sel:name:ConnectionInput'</a>, <a>connectionInput_name</a> - The
--   name of the connection.
--   
--   <a>$sel:connectionType:ConnectionInput'</a>,
--   <a>connectionInput_connectionType</a> - The type of the connection.
--   Currently, these types are supported:
--   
--   <ul>
--   <li><tt>JDBC</tt> - Designates a connection to a database through Java
--   Database Connectivity (JDBC).</li>
--   <li><tt>KAFKA</tt> - Designates a connection to an Apache Kafka
--   streaming platform.</li>
--   <li><tt>MONGODB</tt> - Designates a connection to a MongoDB document
--   database.</li>
--   <li><tt>NETWORK</tt> - Designates a network connection to a data
--   source within an Amazon Virtual Private Cloud environment (Amazon
--   VPC).</li>
--   <li><tt>MARKETPLACE</tt> - Uses configuration settings contained in a
--   connector purchased from Amazon Web Services Marketplace to read from
--   and write to data stores that are not natively supported by Glue.</li>
--   <li><tt>CUSTOM</tt> - Uses configuration settings contained in a
--   custom connector to read from and write to data stores that are not
--   natively supported by Glue.</li>
--   </ul>
--   
--   SFTP is not supported.
--   
--   <a>$sel:connectionProperties:ConnectionInput'</a>,
--   <a>connectionInput_connectionProperties</a> - These key-value pairs
--   define parameters for the connection.
newConnectionInput :: Text -> ConnectionType -> ConnectionInput

-- | A list of criteria that can be used in selecting this connection.
connectionInput_matchCriteria :: Lens' ConnectionInput (Maybe [Text])

-- | A map of physical connection requirements, such as virtual private
--   cloud (VPC) and <tt>SecurityGroup</tt>, that are needed to
--   successfully make this connection.
connectionInput_physicalConnectionRequirements :: Lens' ConnectionInput (Maybe PhysicalConnectionRequirements)

-- | The description of the connection.
connectionInput_description :: Lens' ConnectionInput (Maybe Text)

-- | The name of the connection.
connectionInput_name :: Lens' ConnectionInput Text

-- | The type of the connection. Currently, these types are supported:
--   
--   <ul>
--   <li><tt>JDBC</tt> - Designates a connection to a database through Java
--   Database Connectivity (JDBC).</li>
--   <li><tt>KAFKA</tt> - Designates a connection to an Apache Kafka
--   streaming platform.</li>
--   <li><tt>MONGODB</tt> - Designates a connection to a MongoDB document
--   database.</li>
--   <li><tt>NETWORK</tt> - Designates a network connection to a data
--   source within an Amazon Virtual Private Cloud environment (Amazon
--   VPC).</li>
--   <li><tt>MARKETPLACE</tt> - Uses configuration settings contained in a
--   connector purchased from Amazon Web Services Marketplace to read from
--   and write to data stores that are not natively supported by Glue.</li>
--   <li><tt>CUSTOM</tt> - Uses configuration settings contained in a
--   custom connector to read from and write to data stores that are not
--   natively supported by Glue.</li>
--   </ul>
--   
--   SFTP is not supported.
connectionInput_connectionType :: Lens' ConnectionInput ConnectionType

-- | These key-value pairs define parameters for the connection.
connectionInput_connectionProperties :: Lens' ConnectionInput (HashMap ConnectionPropertyKey Text)

-- | The data structure used by the Data Catalog to encrypt the password as
--   part of <tt>CreateConnection</tt> or <tt>UpdateConnection</tt> and
--   store it in the <tt>ENCRYPTED_PASSWORD</tt> field in the connection
--   properties. You can enable catalog encryption or only password
--   encryption.
--   
--   When a <tt>CreationConnection</tt> request arrives containing a
--   password, the Data Catalog first encrypts the password using your KMS
--   key. It then encrypts the whole connection object again if catalog
--   encryption is also enabled.
--   
--   This encryption requires that you set KMS key permissions to enable or
--   restrict access on the password key according to your security
--   requirements. For example, you might want only administrators to have
--   decrypt permission on the password key.
--   
--   <i>See:</i> <a>newConnectionPasswordEncryption</a> smart constructor.
data ConnectionPasswordEncryption
ConnectionPasswordEncryption' :: Maybe Text -> Bool -> ConnectionPasswordEncryption

-- | An KMS key that is used to encrypt the connection password.
--   
--   If connection password protection is enabled, the caller of
--   <tt>CreateConnection</tt> and <tt>UpdateConnection</tt> needs at least
--   <tt>kms:Encrypt</tt> permission on the specified KMS key, to encrypt
--   passwords before storing them in the Data Catalog.
--   
--   You can set the decrypt permission to enable or restrict access on the
--   password key according to your security requirements.
[$sel:awsKmsKeyId:ConnectionPasswordEncryption'] :: ConnectionPasswordEncryption -> Maybe Text

-- | When the <tt>ReturnConnectionPasswordEncrypted</tt> flag is set to
--   "true", passwords remain encrypted in the responses of
--   <tt>GetConnection</tt> and <tt>GetConnections</tt>. This encryption
--   takes effect independently from catalog encryption.
[$sel:returnConnectionPasswordEncrypted:ConnectionPasswordEncryption'] :: ConnectionPasswordEncryption -> Bool

-- | Create a value of <a>ConnectionPasswordEncryption</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:awsKmsKeyId:ConnectionPasswordEncryption'</a>,
--   <a>connectionPasswordEncryption_awsKmsKeyId</a> - An KMS key that is
--   used to encrypt the connection password.
--   
--   If connection password protection is enabled, the caller of
--   <tt>CreateConnection</tt> and <tt>UpdateConnection</tt> needs at least
--   <tt>kms:Encrypt</tt> permission on the specified KMS key, to encrypt
--   passwords before storing them in the Data Catalog.
--   
--   You can set the decrypt permission to enable or restrict access on the
--   password key according to your security requirements.
--   
--   
--   <a>$sel:returnConnectionPasswordEncrypted:ConnectionPasswordEncryption'</a>,
--   <a>connectionPasswordEncryption_returnConnectionPasswordEncrypted</a>
--   - When the <tt>ReturnConnectionPasswordEncrypted</tt> flag is set to
--   "true", passwords remain encrypted in the responses of
--   <tt>GetConnection</tt> and <tt>GetConnections</tt>. This encryption
--   takes effect independently from catalog encryption.
newConnectionPasswordEncryption :: Bool -> ConnectionPasswordEncryption

-- | An KMS key that is used to encrypt the connection password.
--   
--   If connection password protection is enabled, the caller of
--   <tt>CreateConnection</tt> and <tt>UpdateConnection</tt> needs at least
--   <tt>kms:Encrypt</tt> permission on the specified KMS key, to encrypt
--   passwords before storing them in the Data Catalog.
--   
--   You can set the decrypt permission to enable or restrict access on the
--   password key according to your security requirements.
connectionPasswordEncryption_awsKmsKeyId :: Lens' ConnectionPasswordEncryption (Maybe Text)

-- | When the <tt>ReturnConnectionPasswordEncrypted</tt> flag is set to
--   "true", passwords remain encrypted in the responses of
--   <tt>GetConnection</tt> and <tt>GetConnections</tt>. This encryption
--   takes effect independently from catalog encryption.
connectionPasswordEncryption_returnConnectionPasswordEncrypted :: Lens' ConnectionPasswordEncryption Bool

-- | Specifies the connections used by a job.
--   
--   <i>See:</i> <a>newConnectionsList</a> smart constructor.
data ConnectionsList
ConnectionsList' :: Maybe [Text] -> ConnectionsList

-- | A list of connections used by the job.
[$sel:connections:ConnectionsList'] :: ConnectionsList -> Maybe [Text]

-- | Create a value of <a>ConnectionsList</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connections:ConnectionsList'</a>,
--   <a>connectionsList_connections</a> - A list of connections used by the
--   job.
newConnectionsList :: ConnectionsList

-- | A list of connections used by the job.
connectionsList_connections :: Lens' ConnectionsList (Maybe [Text])

-- | The details of a crawl in the workflow.
--   
--   <i>See:</i> <a>newCrawl</a> smart constructor.
data Crawl
Crawl' :: Maybe POSIX -> Maybe CrawlState -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Crawl

-- | The date and time on which the crawl completed.
[$sel:completedOn:Crawl'] :: Crawl -> Maybe POSIX

-- | The state of the crawler.
[$sel:state:Crawl'] :: Crawl -> Maybe CrawlState

-- | The date and time on which the crawl started.
[$sel:startedOn:Crawl'] :: Crawl -> Maybe POSIX

-- | The log stream associated with the crawl.
[$sel:logStream:Crawl'] :: Crawl -> Maybe Text

-- | The log group associated with the crawl.
[$sel:logGroup:Crawl'] :: Crawl -> Maybe Text

-- | The error message associated with the crawl.
[$sel:errorMessage:Crawl'] :: Crawl -> Maybe Text

-- | Create a value of <a>Crawl</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completedOn:Crawl'</a>, <a>crawl_completedOn</a> - The date
--   and time on which the crawl completed.
--   
--   <a>$sel:state:Crawl'</a>, <a>crawl_state</a> - The state of the
--   crawler.
--   
--   <a>$sel:startedOn:Crawl'</a>, <a>crawl_startedOn</a> - The date and
--   time on which the crawl started.
--   
--   <a>$sel:logStream:Crawl'</a>, <a>crawl_logStream</a> - The log stream
--   associated with the crawl.
--   
--   <a>$sel:logGroup:Crawl'</a>, <a>crawl_logGroup</a> - The log group
--   associated with the crawl.
--   
--   <a>$sel:errorMessage:Crawl'</a>, <a>crawl_errorMessage</a> - The error
--   message associated with the crawl.
newCrawl :: Crawl

-- | The date and time on which the crawl completed.
crawl_completedOn :: Lens' Crawl (Maybe UTCTime)

-- | The state of the crawler.
crawl_state :: Lens' Crawl (Maybe CrawlState)

-- | The date and time on which the crawl started.
crawl_startedOn :: Lens' Crawl (Maybe UTCTime)

-- | The log stream associated with the crawl.
crawl_logStream :: Lens' Crawl (Maybe Text)

-- | The log group associated with the crawl.
crawl_logGroup :: Lens' Crawl (Maybe Text)

-- | The error message associated with the crawl.
crawl_errorMessage :: Lens' Crawl (Maybe Text)

-- | Specifies a crawler program that examines a data source and uses
--   classifiers to try to determine its schema. If successful, the crawler
--   records metadata concerning the data source in the Glue Data Catalog.
--   
--   <i>See:</i> <a>newCrawler</a> smart constructor.
data Crawler
Crawler' :: Maybe POSIX -> Maybe CrawlerState -> Maybe SchemaChangePolicy -> Maybe POSIX -> Maybe Schedule -> Maybe LastCrawlInfo -> Maybe Integer -> Maybe RecrawlPolicy -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe CrawlerTargets -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe LineageConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Crawler

-- | The time that the crawler was created.
[$sel:creationTime:Crawler'] :: Crawler -> Maybe POSIX

-- | Indicates whether the crawler is running, or whether a run is pending.
[$sel:state:Crawler'] :: Crawler -> Maybe CrawlerState

-- | The policy that specifies update and delete behaviors for the crawler.
[$sel:schemaChangePolicy:Crawler'] :: Crawler -> Maybe SchemaChangePolicy

-- | The time that the crawler was last updated.
[$sel:lastUpdated:Crawler'] :: Crawler -> Maybe POSIX

-- | For scheduled crawlers, the schedule when the crawler runs.
[$sel:schedule:Crawler'] :: Crawler -> Maybe Schedule

-- | The status of the last crawl, and potentially error information if an
--   error occurred.
[$sel:lastCrawl:Crawler'] :: Crawler -> Maybe LastCrawlInfo

-- | If the crawler is running, contains the total time elapsed since the
--   last crawl began.
[$sel:crawlElapsedTime:Crawler'] :: Crawler -> Maybe Integer

-- | A policy that specifies whether to crawl the entire dataset again, or
--   to crawl only folders that were added since the last crawler run.
[$sel:recrawlPolicy:Crawler'] :: Crawler -> Maybe RecrawlPolicy

-- | A list of UTF-8 strings that specify the custom classifiers that are
--   associated with the crawler.
[$sel:classifiers:Crawler'] :: Crawler -> Maybe [Text]

-- | The Amazon Resource Name (ARN) of an IAM role that's used to access
--   customer resources, such as Amazon Simple Storage Service (Amazon S3)
--   data.
[$sel:role':Crawler'] :: Crawler -> Maybe Text

-- | The name of the crawler.
[$sel:name:Crawler'] :: Crawler -> Maybe Text

-- | A collection of targets to crawl.
[$sel:targets:Crawler'] :: Crawler -> Maybe CrawlerTargets

-- | The version of the crawler.
[$sel:version:Crawler'] :: Crawler -> Maybe Integer

-- | The name of the database in which the crawler's output is stored.
[$sel:databaseName:Crawler'] :: Crawler -> Maybe Text

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used by
--   this crawler.
[$sel:crawlerSecurityConfiguration:Crawler'] :: Crawler -> Maybe Text

-- | A configuration that specifies whether data lineage is enabled for the
--   crawler.
[$sel:lineageConfiguration:Crawler'] :: Crawler -> Maybe LineageConfiguration

-- | Crawler configuration information. This versioned JSON string allows
--   users to specify aspects of a crawler's behavior. For more
--   information, see <a>Include and Exclude Patterns</a>.
[$sel:configuration:Crawler'] :: Crawler -> Maybe Text

-- | The prefix added to the names of tables that are created.
[$sel:tablePrefix:Crawler'] :: Crawler -> Maybe Text

-- | A description of the crawler.
[$sel:description:Crawler'] :: Crawler -> Maybe Text

-- | Create a value of <a>Crawler</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Crawler'</a>, <a>crawler_creationTime</a> - The
--   time that the crawler was created.
--   
--   <a>$sel:state:Crawler'</a>, <a>crawler_state</a> - Indicates whether
--   the crawler is running, or whether a run is pending.
--   
--   <a>$sel:schemaChangePolicy:Crawler'</a>,
--   <a>crawler_schemaChangePolicy</a> - The policy that specifies update
--   and delete behaviors for the crawler.
--   
--   <a>$sel:lastUpdated:Crawler'</a>, <a>crawler_lastUpdated</a> - The
--   time that the crawler was last updated.
--   
--   <a>$sel:schedule:Crawler'</a>, <a>crawler_schedule</a> - For scheduled
--   crawlers, the schedule when the crawler runs.
--   
--   <a>$sel:lastCrawl:Crawler'</a>, <a>crawler_lastCrawl</a> - The status
--   of the last crawl, and potentially error information if an error
--   occurred.
--   
--   <a>$sel:crawlElapsedTime:Crawler'</a>, <a>crawler_crawlElapsedTime</a>
--   - If the crawler is running, contains the total time elapsed since the
--   last crawl began.
--   
--   <a>$sel:recrawlPolicy:Crawler'</a>, <a>crawler_recrawlPolicy</a> - A
--   policy that specifies whether to crawl the entire dataset again, or to
--   crawl only folders that were added since the last crawler run.
--   
--   <a>$sel:classifiers:Crawler'</a>, <a>crawler_classifiers</a> - A list
--   of UTF-8 strings that specify the custom classifiers that are
--   associated with the crawler.
--   
--   <a>$sel:role':Crawler'</a>, <a>crawler_role</a> - The Amazon Resource
--   Name (ARN) of an IAM role that's used to access customer resources,
--   such as Amazon Simple Storage Service (Amazon S3) data.
--   
--   <a>$sel:name:Crawler'</a>, <a>crawler_name</a> - The name of the
--   crawler.
--   
--   <a>$sel:targets:Crawler'</a>, <a>crawler_targets</a> - A collection of
--   targets to crawl.
--   
--   <a>$sel:version:Crawler'</a>, <a>crawler_version</a> - The version of
--   the crawler.
--   
--   <a>$sel:databaseName:Crawler'</a>, <a>crawler_databaseName</a> - The
--   name of the database in which the crawler's output is stored.
--   
--   <a>$sel:crawlerSecurityConfiguration:Crawler'</a>,
--   <a>crawler_crawlerSecurityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used by this crawler.
--   
--   <a>$sel:lineageConfiguration:Crawler'</a>,
--   <a>crawler_lineageConfiguration</a> - A configuration that specifies
--   whether data lineage is enabled for the crawler.
--   
--   <a>$sel:configuration:Crawler'</a>, <a>crawler_configuration</a> -
--   Crawler configuration information. This versioned JSON string allows
--   users to specify aspects of a crawler's behavior. For more
--   information, see <a>Include and Exclude Patterns</a>.
--   
--   <a>$sel:tablePrefix:Crawler'</a>, <a>crawler_tablePrefix</a> - The
--   prefix added to the names of tables that are created.
--   
--   <a>$sel:description:Crawler'</a>, <a>crawler_description</a> - A
--   description of the crawler.
newCrawler :: Crawler

-- | The time that the crawler was created.
crawler_creationTime :: Lens' Crawler (Maybe UTCTime)

-- | Indicates whether the crawler is running, or whether a run is pending.
crawler_state :: Lens' Crawler (Maybe CrawlerState)

-- | The policy that specifies update and delete behaviors for the crawler.
crawler_schemaChangePolicy :: Lens' Crawler (Maybe SchemaChangePolicy)

-- | The time that the crawler was last updated.
crawler_lastUpdated :: Lens' Crawler (Maybe UTCTime)

-- | For scheduled crawlers, the schedule when the crawler runs.
crawler_schedule :: Lens' Crawler (Maybe Schedule)

-- | The status of the last crawl, and potentially error information if an
--   error occurred.
crawler_lastCrawl :: Lens' Crawler (Maybe LastCrawlInfo)

-- | If the crawler is running, contains the total time elapsed since the
--   last crawl began.
crawler_crawlElapsedTime :: Lens' Crawler (Maybe Integer)

-- | A policy that specifies whether to crawl the entire dataset again, or
--   to crawl only folders that were added since the last crawler run.
crawler_recrawlPolicy :: Lens' Crawler (Maybe RecrawlPolicy)

-- | A list of UTF-8 strings that specify the custom classifiers that are
--   associated with the crawler.
crawler_classifiers :: Lens' Crawler (Maybe [Text])

-- | The Amazon Resource Name (ARN) of an IAM role that's used to access
--   customer resources, such as Amazon Simple Storage Service (Amazon S3)
--   data.
crawler_role :: Lens' Crawler (Maybe Text)

-- | The name of the crawler.
crawler_name :: Lens' Crawler (Maybe Text)

-- | A collection of targets to crawl.
crawler_targets :: Lens' Crawler (Maybe CrawlerTargets)

-- | The version of the crawler.
crawler_version :: Lens' Crawler (Maybe Integer)

-- | The name of the database in which the crawler's output is stored.
crawler_databaseName :: Lens' Crawler (Maybe Text)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used by
--   this crawler.
crawler_crawlerSecurityConfiguration :: Lens' Crawler (Maybe Text)

-- | A configuration that specifies whether data lineage is enabled for the
--   crawler.
crawler_lineageConfiguration :: Lens' Crawler (Maybe LineageConfiguration)

-- | Crawler configuration information. This versioned JSON string allows
--   users to specify aspects of a crawler's behavior. For more
--   information, see <a>Include and Exclude Patterns</a>.
crawler_configuration :: Lens' Crawler (Maybe Text)

-- | The prefix added to the names of tables that are created.
crawler_tablePrefix :: Lens' Crawler (Maybe Text)

-- | A description of the crawler.
crawler_description :: Lens' Crawler (Maybe Text)

-- | Metrics for a specified crawler.
--   
--   <i>See:</i> <a>newCrawlerMetrics</a> smart constructor.
data CrawlerMetrics
CrawlerMetrics' :: Maybe Double -> Maybe Natural -> Maybe Bool -> Maybe Double -> Maybe Double -> Maybe Natural -> Maybe Natural -> Maybe Text -> CrawlerMetrics

-- | The duration of the crawler's most recent run, in seconds.
[$sel:lastRuntimeSeconds:CrawlerMetrics'] :: CrawlerMetrics -> Maybe Double

-- | The number of tables created by this crawler.
[$sel:tablesCreated:CrawlerMetrics'] :: CrawlerMetrics -> Maybe Natural

-- | True if the crawler is still estimating how long it will take to
--   complete this run.
[$sel:stillEstimating:CrawlerMetrics'] :: CrawlerMetrics -> Maybe Bool

-- | The median duration of this crawler's runs, in seconds.
[$sel:medianRuntimeSeconds:CrawlerMetrics'] :: CrawlerMetrics -> Maybe Double

-- | The estimated time left to complete a running crawl.
[$sel:timeLeftSeconds:CrawlerMetrics'] :: CrawlerMetrics -> Maybe Double

-- | The number of tables deleted by this crawler.
[$sel:tablesDeleted:CrawlerMetrics'] :: CrawlerMetrics -> Maybe Natural

-- | The number of tables updated by this crawler.
[$sel:tablesUpdated:CrawlerMetrics'] :: CrawlerMetrics -> Maybe Natural

-- | The name of the crawler.
[$sel:crawlerName:CrawlerMetrics'] :: CrawlerMetrics -> Maybe Text

-- | Create a value of <a>CrawlerMetrics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastRuntimeSeconds:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_lastRuntimeSeconds</a> - The duration of the
--   crawler's most recent run, in seconds.
--   
--   <a>$sel:tablesCreated:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_tablesCreated</a> - The number of tables created by
--   this crawler.
--   
--   <a>$sel:stillEstimating:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_stillEstimating</a> - True if the crawler is still
--   estimating how long it will take to complete this run.
--   
--   <a>$sel:medianRuntimeSeconds:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_medianRuntimeSeconds</a> - The median duration of
--   this crawler's runs, in seconds.
--   
--   <a>$sel:timeLeftSeconds:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_timeLeftSeconds</a> - The estimated time left to
--   complete a running crawl.
--   
--   <a>$sel:tablesDeleted:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_tablesDeleted</a> - The number of tables deleted by
--   this crawler.
--   
--   <a>$sel:tablesUpdated:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_tablesUpdated</a> - The number of tables updated by
--   this crawler.
--   
--   <a>$sel:crawlerName:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_crawlerName</a> - The name of the crawler.
newCrawlerMetrics :: CrawlerMetrics

-- | The duration of the crawler's most recent run, in seconds.
crawlerMetrics_lastRuntimeSeconds :: Lens' CrawlerMetrics (Maybe Double)

-- | The number of tables created by this crawler.
crawlerMetrics_tablesCreated :: Lens' CrawlerMetrics (Maybe Natural)

-- | True if the crawler is still estimating how long it will take to
--   complete this run.
crawlerMetrics_stillEstimating :: Lens' CrawlerMetrics (Maybe Bool)

-- | The median duration of this crawler's runs, in seconds.
crawlerMetrics_medianRuntimeSeconds :: Lens' CrawlerMetrics (Maybe Double)

-- | The estimated time left to complete a running crawl.
crawlerMetrics_timeLeftSeconds :: Lens' CrawlerMetrics (Maybe Double)

-- | The number of tables deleted by this crawler.
crawlerMetrics_tablesDeleted :: Lens' CrawlerMetrics (Maybe Natural)

-- | The number of tables updated by this crawler.
crawlerMetrics_tablesUpdated :: Lens' CrawlerMetrics (Maybe Natural)

-- | The name of the crawler.
crawlerMetrics_crawlerName :: Lens' CrawlerMetrics (Maybe Text)

-- | The details of a Crawler node present in the workflow.
--   
--   <i>See:</i> <a>newCrawlerNodeDetails</a> smart constructor.
data CrawlerNodeDetails
CrawlerNodeDetails' :: Maybe [Crawl] -> CrawlerNodeDetails

-- | A list of crawls represented by the crawl node.
[$sel:crawls:CrawlerNodeDetails'] :: CrawlerNodeDetails -> Maybe [Crawl]

-- | Create a value of <a>CrawlerNodeDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawls:CrawlerNodeDetails'</a>,
--   <a>crawlerNodeDetails_crawls</a> - A list of crawls represented by the
--   crawl node.
newCrawlerNodeDetails :: CrawlerNodeDetails

-- | A list of crawls represented by the crawl node.
crawlerNodeDetails_crawls :: Lens' CrawlerNodeDetails (Maybe [Crawl])

-- | Specifies data stores to crawl.
--   
--   <i>See:</i> <a>newCrawlerTargets</a> smart constructor.
data CrawlerTargets
CrawlerTargets' :: Maybe [DynamoDBTarget] -> Maybe [S3Target] -> Maybe [MongoDBTarget] -> Maybe [CatalogTarget] -> Maybe [JdbcTarget] -> CrawlerTargets

-- | Specifies Amazon DynamoDB targets.
[$sel:dynamoDBTargets:CrawlerTargets'] :: CrawlerTargets -> Maybe [DynamoDBTarget]

-- | Specifies Amazon Simple Storage Service (Amazon S3) targets.
[$sel:s3Targets:CrawlerTargets'] :: CrawlerTargets -> Maybe [S3Target]

-- | Specifies Amazon DocumentDB or MongoDB targets.
[$sel:mongoDBTargets:CrawlerTargets'] :: CrawlerTargets -> Maybe [MongoDBTarget]

-- | Specifies Glue Data Catalog targets.
[$sel:catalogTargets:CrawlerTargets'] :: CrawlerTargets -> Maybe [CatalogTarget]

-- | Specifies JDBC targets.
[$sel:jdbcTargets:CrawlerTargets'] :: CrawlerTargets -> Maybe [JdbcTarget]

-- | Create a value of <a>CrawlerTargets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dynamoDBTargets:CrawlerTargets'</a>,
--   <a>crawlerTargets_dynamoDBTargets</a> - Specifies Amazon DynamoDB
--   targets.
--   
--   <a>$sel:s3Targets:CrawlerTargets'</a>, <a>crawlerTargets_s3Targets</a>
--   - Specifies Amazon Simple Storage Service (Amazon S3) targets.
--   
--   <a>$sel:mongoDBTargets:CrawlerTargets'</a>,
--   <a>crawlerTargets_mongoDBTargets</a> - Specifies Amazon DocumentDB or
--   MongoDB targets.
--   
--   <a>$sel:catalogTargets:CrawlerTargets'</a>,
--   <a>crawlerTargets_catalogTargets</a> - Specifies Glue Data Catalog
--   targets.
--   
--   <a>$sel:jdbcTargets:CrawlerTargets'</a>,
--   <a>crawlerTargets_jdbcTargets</a> - Specifies JDBC targets.
newCrawlerTargets :: CrawlerTargets

-- | Specifies Amazon DynamoDB targets.
crawlerTargets_dynamoDBTargets :: Lens' CrawlerTargets (Maybe [DynamoDBTarget])

-- | Specifies Amazon Simple Storage Service (Amazon S3) targets.
crawlerTargets_s3Targets :: Lens' CrawlerTargets (Maybe [S3Target])

-- | Specifies Amazon DocumentDB or MongoDB targets.
crawlerTargets_mongoDBTargets :: Lens' CrawlerTargets (Maybe [MongoDBTarget])

-- | Specifies Glue Data Catalog targets.
crawlerTargets_catalogTargets :: Lens' CrawlerTargets (Maybe [CatalogTarget])

-- | Specifies JDBC targets.
crawlerTargets_jdbcTargets :: Lens' CrawlerTargets (Maybe [JdbcTarget])

-- | Specifies a custom CSV classifier for <tt>CreateClassifier</tt> to
--   create.
--   
--   <i>See:</i> <a>newCreateCsvClassifierRequest</a> smart constructor.
data CreateCsvClassifierRequest
CreateCsvClassifierRequest' :: Maybe Text -> Maybe CsvHeaderOption -> Maybe Bool -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Text -> CreateCsvClassifierRequest

-- | A custom symbol to denote what combines content into a single column
--   value. Must be different from the column delimiter.
[$sel:quoteSymbol:CreateCsvClassifierRequest'] :: CreateCsvClassifierRequest -> Maybe Text

-- | Indicates whether the CSV file contains a header.
[$sel:containsHeader:CreateCsvClassifierRequest'] :: CreateCsvClassifierRequest -> Maybe CsvHeaderOption

-- | Specifies not to trim values before identifying the type of column
--   values. The default value is true.
[$sel:disableValueTrimming:CreateCsvClassifierRequest'] :: CreateCsvClassifierRequest -> Maybe Bool

-- | A list of strings representing column names.
[$sel:header:CreateCsvClassifierRequest'] :: CreateCsvClassifierRequest -> Maybe [Text]

-- | Enables the processing of files that contain only one column.
[$sel:allowSingleColumn:CreateCsvClassifierRequest'] :: CreateCsvClassifierRequest -> Maybe Bool

-- | A custom symbol to denote what separates each column entry in the row.
[$sel:delimiter:CreateCsvClassifierRequest'] :: CreateCsvClassifierRequest -> Maybe Text

-- | The name of the classifier.
[$sel:name:CreateCsvClassifierRequest'] :: CreateCsvClassifierRequest -> Text

-- | Create a value of <a>CreateCsvClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:quoteSymbol:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_quoteSymbol</a> - A custom symbol to
--   denote what combines content into a single column value. Must be
--   different from the column delimiter.
--   
--   <a>$sel:containsHeader:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_containsHeader</a> - Indicates whether
--   the CSV file contains a header.
--   
--   <a>$sel:disableValueTrimming:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_disableValueTrimming</a> - Specifies not
--   to trim values before identifying the type of column values. The
--   default value is true.
--   
--   <a>$sel:header:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_header</a> - A list of strings
--   representing column names.
--   
--   <a>$sel:allowSingleColumn:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_allowSingleColumn</a> - Enables the
--   processing of files that contain only one column.
--   
--   <a>$sel:delimiter:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_delimiter</a> - A custom symbol to
--   denote what separates each column entry in the row.
--   
--   <a>$sel:name:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_name</a> - The name of the classifier.
newCreateCsvClassifierRequest :: Text -> CreateCsvClassifierRequest

-- | A custom symbol to denote what combines content into a single column
--   value. Must be different from the column delimiter.
createCsvClassifierRequest_quoteSymbol :: Lens' CreateCsvClassifierRequest (Maybe Text)

-- | Indicates whether the CSV file contains a header.
createCsvClassifierRequest_containsHeader :: Lens' CreateCsvClassifierRequest (Maybe CsvHeaderOption)

-- | Specifies not to trim values before identifying the type of column
--   values. The default value is true.
createCsvClassifierRequest_disableValueTrimming :: Lens' CreateCsvClassifierRequest (Maybe Bool)

-- | A list of strings representing column names.
createCsvClassifierRequest_header :: Lens' CreateCsvClassifierRequest (Maybe [Text])

-- | Enables the processing of files that contain only one column.
createCsvClassifierRequest_allowSingleColumn :: Lens' CreateCsvClassifierRequest (Maybe Bool)

-- | A custom symbol to denote what separates each column entry in the row.
createCsvClassifierRequest_delimiter :: Lens' CreateCsvClassifierRequest (Maybe Text)

-- | The name of the classifier.
createCsvClassifierRequest_name :: Lens' CreateCsvClassifierRequest Text

-- | Specifies a <tt>grok</tt> classifier for <tt>CreateClassifier</tt> to
--   create.
--   
--   <i>See:</i> <a>newCreateGrokClassifierRequest</a> smart constructor.
data CreateGrokClassifierRequest
CreateGrokClassifierRequest' :: Maybe Text -> Text -> Text -> Text -> CreateGrokClassifierRequest

-- | Optional custom grok patterns used by this classifier.
[$sel:customPatterns:CreateGrokClassifierRequest'] :: CreateGrokClassifierRequest -> Maybe Text

-- | An identifier of the data format that the classifier matches, such as
--   Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.
[$sel:classification:CreateGrokClassifierRequest'] :: CreateGrokClassifierRequest -> Text

-- | The name of the new classifier.
[$sel:name:CreateGrokClassifierRequest'] :: CreateGrokClassifierRequest -> Text

-- | The grok pattern used by this classifier.
[$sel:grokPattern:CreateGrokClassifierRequest'] :: CreateGrokClassifierRequest -> Text

-- | Create a value of <a>CreateGrokClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customPatterns:CreateGrokClassifierRequest'</a>,
--   <a>createGrokClassifierRequest_customPatterns</a> - Optional custom
--   grok patterns used by this classifier.
--   
--   <a>$sel:classification:CreateGrokClassifierRequest'</a>,
--   <a>createGrokClassifierRequest_classification</a> - An identifier of
--   the data format that the classifier matches, such as Twitter, JSON,
--   Omniture logs, Amazon CloudWatch Logs, and so on.
--   
--   <a>$sel:name:CreateGrokClassifierRequest'</a>,
--   <a>createGrokClassifierRequest_name</a> - The name of the new
--   classifier.
--   
--   <a>$sel:grokPattern:CreateGrokClassifierRequest'</a>,
--   <a>createGrokClassifierRequest_grokPattern</a> - The grok pattern used
--   by this classifier.
newCreateGrokClassifierRequest :: Text -> Text -> Text -> CreateGrokClassifierRequest

-- | Optional custom grok patterns used by this classifier.
createGrokClassifierRequest_customPatterns :: Lens' CreateGrokClassifierRequest (Maybe Text)

-- | An identifier of the data format that the classifier matches, such as
--   Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.
createGrokClassifierRequest_classification :: Lens' CreateGrokClassifierRequest Text

-- | The name of the new classifier.
createGrokClassifierRequest_name :: Lens' CreateGrokClassifierRequest Text

-- | The grok pattern used by this classifier.
createGrokClassifierRequest_grokPattern :: Lens' CreateGrokClassifierRequest Text

-- | Specifies a JSON classifier for <tt>CreateClassifier</tt> to create.
--   
--   <i>See:</i> <a>newCreateJsonClassifierRequest</a> smart constructor.
data CreateJsonClassifierRequest
CreateJsonClassifierRequest' :: Text -> Text -> CreateJsonClassifierRequest

-- | The name of the classifier.
[$sel:name:CreateJsonClassifierRequest'] :: CreateJsonClassifierRequest -> Text

-- | A <tt>JsonPath</tt> string defining the JSON data for the classifier
--   to classify. Glue supports a subset of JsonPath, as described in
--   <a>Writing JsonPath Custom Classifiers</a>.
[$sel:jsonPath:CreateJsonClassifierRequest'] :: CreateJsonClassifierRequest -> Text

-- | Create a value of <a>CreateJsonClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateJsonClassifierRequest'</a>,
--   <a>createJsonClassifierRequest_name</a> - The name of the classifier.
--   
--   <a>$sel:jsonPath:CreateJsonClassifierRequest'</a>,
--   <a>createJsonClassifierRequest_jsonPath</a> - A <tt>JsonPath</tt>
--   string defining the JSON data for the classifier to classify. Glue
--   supports a subset of JsonPath, as described in <a>Writing JsonPath
--   Custom Classifiers</a>.
newCreateJsonClassifierRequest :: Text -> Text -> CreateJsonClassifierRequest

-- | The name of the classifier.
createJsonClassifierRequest_name :: Lens' CreateJsonClassifierRequest Text

-- | A <tt>JsonPath</tt> string defining the JSON data for the classifier
--   to classify. Glue supports a subset of JsonPath, as described in
--   <a>Writing JsonPath Custom Classifiers</a>.
createJsonClassifierRequest_jsonPath :: Lens' CreateJsonClassifierRequest Text

-- | Specifies an XML classifier for <tt>CreateClassifier</tt> to create.
--   
--   <i>See:</i> <a>newCreateXMLClassifierRequest</a> smart constructor.
data CreateXMLClassifierRequest
CreateXMLClassifierRequest' :: Maybe Text -> Text -> Text -> CreateXMLClassifierRequest

-- | The XML tag designating the element that contains each record in an
--   XML document being parsed. This can't identify a self-closing element
--   (closed by <tt>/&gt;</tt>). An empty row element that contains only
--   attributes can be parsed as long as it ends with a closing tag (for
--   example, <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is
--   okay, but <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
[$sel:rowTag:CreateXMLClassifierRequest'] :: CreateXMLClassifierRequest -> Maybe Text

-- | An identifier of the data format that the classifier matches.
[$sel:classification:CreateXMLClassifierRequest'] :: CreateXMLClassifierRequest -> Text

-- | The name of the classifier.
[$sel:name:CreateXMLClassifierRequest'] :: CreateXMLClassifierRequest -> Text

-- | Create a value of <a>CreateXMLClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rowTag:CreateXMLClassifierRequest'</a>,
--   <a>createXMLClassifierRequest_rowTag</a> - The XML tag designating the
--   element that contains each record in an XML document being parsed.
--   This can't identify a self-closing element (closed by <tt>/&gt;</tt>).
--   An empty row element that contains only attributes can be parsed as
--   long as it ends with a closing tag (for example, <tt>&lt;row
--   item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is okay, but <tt>&lt;row
--   item_a="A" item_b="B" /&gt;</tt> is not).
--   
--   <a>$sel:classification:CreateXMLClassifierRequest'</a>,
--   <a>createXMLClassifierRequest_classification</a> - An identifier of
--   the data format that the classifier matches.
--   
--   <a>$sel:name:CreateXMLClassifierRequest'</a>,
--   <a>createXMLClassifierRequest_name</a> - The name of the classifier.
newCreateXMLClassifierRequest :: Text -> Text -> CreateXMLClassifierRequest

-- | The XML tag designating the element that contains each record in an
--   XML document being parsed. This can't identify a self-closing element
--   (closed by <tt>/&gt;</tt>). An empty row element that contains only
--   attributes can be parsed as long as it ends with a closing tag (for
--   example, <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is
--   okay, but <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
createXMLClassifierRequest_rowTag :: Lens' CreateXMLClassifierRequest (Maybe Text)

-- | An identifier of the data format that the classifier matches.
createXMLClassifierRequest_classification :: Lens' CreateXMLClassifierRequest Text

-- | The name of the classifier.
createXMLClassifierRequest_name :: Lens' CreateXMLClassifierRequest Text

-- | A classifier for custom <tt>CSV</tt> content.
--   
--   <i>See:</i> <a>newCsvClassifier</a> smart constructor.
data CsvClassifier
CsvClassifier' :: Maybe POSIX -> Maybe Text -> Maybe CsvHeaderOption -> Maybe POSIX -> Maybe Bool -> Maybe [Text] -> Maybe Integer -> Maybe Bool -> Maybe Text -> Text -> CsvClassifier

-- | The time that this classifier was registered.
[$sel:creationTime:CsvClassifier'] :: CsvClassifier -> Maybe POSIX

-- | A custom symbol to denote what combines content into a single column
--   value. It must be different from the column delimiter.
[$sel:quoteSymbol:CsvClassifier'] :: CsvClassifier -> Maybe Text

-- | Indicates whether the CSV file contains a header.
[$sel:containsHeader:CsvClassifier'] :: CsvClassifier -> Maybe CsvHeaderOption

-- | The time that this classifier was last updated.
[$sel:lastUpdated:CsvClassifier'] :: CsvClassifier -> Maybe POSIX

-- | Specifies not to trim values before identifying the type of column
--   values. The default value is <tt>true</tt>.
[$sel:disableValueTrimming:CsvClassifier'] :: CsvClassifier -> Maybe Bool

-- | A list of strings representing column names.
[$sel:header:CsvClassifier'] :: CsvClassifier -> Maybe [Text]

-- | The version of this classifier.
[$sel:version:CsvClassifier'] :: CsvClassifier -> Maybe Integer

-- | Enables the processing of files that contain only one column.
[$sel:allowSingleColumn:CsvClassifier'] :: CsvClassifier -> Maybe Bool

-- | A custom symbol to denote what separates each column entry in the row.
[$sel:delimiter:CsvClassifier'] :: CsvClassifier -> Maybe Text

-- | The name of the classifier.
[$sel:name:CsvClassifier'] :: CsvClassifier -> Text

-- | Create a value of <a>CsvClassifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CsvClassifier'</a>,
--   <a>csvClassifier_creationTime</a> - The time that this classifier was
--   registered.
--   
--   <a>$sel:quoteSymbol:CsvClassifier'</a>,
--   <a>csvClassifier_quoteSymbol</a> - A custom symbol to denote what
--   combines content into a single column value. It must be different from
--   the column delimiter.
--   
--   <a>$sel:containsHeader:CsvClassifier'</a>,
--   <a>csvClassifier_containsHeader</a> - Indicates whether the CSV file
--   contains a header.
--   
--   <a>$sel:lastUpdated:CsvClassifier'</a>,
--   <a>csvClassifier_lastUpdated</a> - The time that this classifier was
--   last updated.
--   
--   <a>$sel:disableValueTrimming:CsvClassifier'</a>,
--   <a>csvClassifier_disableValueTrimming</a> - Specifies not to trim
--   values before identifying the type of column values. The default value
--   is <tt>true</tt>.
--   
--   <a>$sel:header:CsvClassifier'</a>, <a>csvClassifier_header</a> - A
--   list of strings representing column names.
--   
--   <a>$sel:version:CsvClassifier'</a>, <a>csvClassifier_version</a> - The
--   version of this classifier.
--   
--   <a>$sel:allowSingleColumn:CsvClassifier'</a>,
--   <a>csvClassifier_allowSingleColumn</a> - Enables the processing of
--   files that contain only one column.
--   
--   <a>$sel:delimiter:CsvClassifier'</a>, <a>csvClassifier_delimiter</a> -
--   A custom symbol to denote what separates each column entry in the row.
--   
--   <a>$sel:name:CsvClassifier'</a>, <a>csvClassifier_name</a> - The name
--   of the classifier.
newCsvClassifier :: Text -> CsvClassifier

-- | The time that this classifier was registered.
csvClassifier_creationTime :: Lens' CsvClassifier (Maybe UTCTime)

-- | A custom symbol to denote what combines content into a single column
--   value. It must be different from the column delimiter.
csvClassifier_quoteSymbol :: Lens' CsvClassifier (Maybe Text)

-- | Indicates whether the CSV file contains a header.
csvClassifier_containsHeader :: Lens' CsvClassifier (Maybe CsvHeaderOption)

-- | The time that this classifier was last updated.
csvClassifier_lastUpdated :: Lens' CsvClassifier (Maybe UTCTime)

-- | Specifies not to trim values before identifying the type of column
--   values. The default value is <tt>true</tt>.
csvClassifier_disableValueTrimming :: Lens' CsvClassifier (Maybe Bool)

-- | A list of strings representing column names.
csvClassifier_header :: Lens' CsvClassifier (Maybe [Text])

-- | The version of this classifier.
csvClassifier_version :: Lens' CsvClassifier (Maybe Integer)

-- | Enables the processing of files that contain only one column.
csvClassifier_allowSingleColumn :: Lens' CsvClassifier (Maybe Bool)

-- | A custom symbol to denote what separates each column entry in the row.
csvClassifier_delimiter :: Lens' CsvClassifier (Maybe Text)

-- | The name of the classifier.
csvClassifier_name :: Lens' CsvClassifier Text

-- | Contains configuration information for maintaining Data Catalog
--   security.
--   
--   <i>See:</i> <a>newDataCatalogEncryptionSettings</a> smart constructor.
data DataCatalogEncryptionSettings
DataCatalogEncryptionSettings' :: Maybe EncryptionAtRest -> Maybe ConnectionPasswordEncryption -> DataCatalogEncryptionSettings

-- | Specifies the encryption-at-rest configuration for the Data Catalog.
[$sel:encryptionAtRest:DataCatalogEncryptionSettings'] :: DataCatalogEncryptionSettings -> Maybe EncryptionAtRest

-- | When connection password protection is enabled, the Data Catalog uses
--   a customer-provided key to encrypt the password as part of
--   <tt>CreateConnection</tt> or <tt>UpdateConnection</tt> and store it in
--   the <tt>ENCRYPTED_PASSWORD</tt> field in the connection properties.
--   You can enable catalog encryption or only password encryption.
[$sel:connectionPasswordEncryption:DataCatalogEncryptionSettings'] :: DataCatalogEncryptionSettings -> Maybe ConnectionPasswordEncryption

-- | Create a value of <a>DataCatalogEncryptionSettings</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionAtRest:DataCatalogEncryptionSettings'</a>,
--   <a>dataCatalogEncryptionSettings_encryptionAtRest</a> - Specifies the
--   encryption-at-rest configuration for the Data Catalog.
--   
--   
--   <a>$sel:connectionPasswordEncryption:DataCatalogEncryptionSettings'</a>,
--   <a>dataCatalogEncryptionSettings_connectionPasswordEncryption</a> -
--   When connection password protection is enabled, the Data Catalog uses
--   a customer-provided key to encrypt the password as part of
--   <tt>CreateConnection</tt> or <tt>UpdateConnection</tt> and store it in
--   the <tt>ENCRYPTED_PASSWORD</tt> field in the connection properties.
--   You can enable catalog encryption or only password encryption.
newDataCatalogEncryptionSettings :: DataCatalogEncryptionSettings

-- | Specifies the encryption-at-rest configuration for the Data Catalog.
dataCatalogEncryptionSettings_encryptionAtRest :: Lens' DataCatalogEncryptionSettings (Maybe EncryptionAtRest)

-- | When connection password protection is enabled, the Data Catalog uses
--   a customer-provided key to encrypt the password as part of
--   <tt>CreateConnection</tt> or <tt>UpdateConnection</tt> and store it in
--   the <tt>ENCRYPTED_PASSWORD</tt> field in the connection properties.
--   You can enable catalog encryption or only password encryption.
dataCatalogEncryptionSettings_connectionPasswordEncryption :: Lens' DataCatalogEncryptionSettings (Maybe ConnectionPasswordEncryption)

-- | The Lake Formation principal.
--   
--   <i>See:</i> <a>newDataLakePrincipal</a> smart constructor.
data DataLakePrincipal
DataLakePrincipal' :: Maybe Text -> DataLakePrincipal

-- | An identifier for the Lake Formation principal.
[$sel:dataLakePrincipalIdentifier:DataLakePrincipal'] :: DataLakePrincipal -> Maybe Text

-- | Create a value of <a>DataLakePrincipal</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLakePrincipalIdentifier:DataLakePrincipal'</a>,
--   <a>dataLakePrincipal_dataLakePrincipalIdentifier</a> - An identifier
--   for the Lake Formation principal.
newDataLakePrincipal :: DataLakePrincipal

-- | An identifier for the Lake Formation principal.
dataLakePrincipal_dataLakePrincipalIdentifier :: Lens' DataLakePrincipal (Maybe Text)

-- | The <tt>Database</tt> object represents a logical grouping of tables
--   that might reside in a Hive metastore or an RDBMS.
--   
--   <i>See:</i> <a>newDatabase</a> smart constructor.
data Database
Database' :: Maybe Text -> Maybe Text -> Maybe DatabaseIdentifier -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe POSIX -> Maybe [PrincipalPermissions] -> Text -> Database

-- | The location of the database (for example, an HDFS path).
[$sel:locationUri:Database'] :: Database -> Maybe Text

-- | The ID of the Data Catalog in which the database resides.
[$sel:catalogId:Database'] :: Database -> Maybe Text

-- | A <tt>DatabaseIdentifier</tt> structure that describes a target
--   database for resource linking.
[$sel:targetDatabase:Database'] :: Database -> Maybe DatabaseIdentifier

-- | These key-value pairs define parameters and properties of the
--   database.
[$sel:parameters:Database'] :: Database -> Maybe (HashMap Text Text)

-- | A description of the database.
[$sel:description:Database'] :: Database -> Maybe Text

-- | The time at which the metadata database was created in the catalog.
[$sel:createTime:Database'] :: Database -> Maybe POSIX

-- | Creates a set of default permissions on the table for principals.
[$sel:createTableDefaultPermissions:Database'] :: Database -> Maybe [PrincipalPermissions]

-- | The name of the database. For Hive compatibility, this is folded to
--   lowercase when it is stored.
[$sel:name:Database'] :: Database -> Text

-- | Create a value of <a>Database</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locationUri:Database'</a>, <a>database_locationUri</a> - The
--   location of the database (for example, an HDFS path).
--   
--   <a>$sel:catalogId:Database'</a>, <a>database_catalogId</a> - The ID of
--   the Data Catalog in which the database resides.
--   
--   <a>$sel:targetDatabase:Database'</a>, <a>database_targetDatabase</a> -
--   A <tt>DatabaseIdentifier</tt> structure that describes a target
--   database for resource linking.
--   
--   <a>$sel:parameters:Database'</a>, <a>database_parameters</a> - These
--   key-value pairs define parameters and properties of the database.
--   
--   <a>$sel:description:Database'</a>, <a>database_description</a> - A
--   description of the database.
--   
--   <a>$sel:createTime:Database'</a>, <a>database_createTime</a> - The
--   time at which the metadata database was created in the catalog.
--   
--   <a>$sel:createTableDefaultPermissions:Database'</a>,
--   <a>database_createTableDefaultPermissions</a> - Creates a set of
--   default permissions on the table for principals.
--   
--   <a>$sel:name:Database'</a>, <a>database_name</a> - The name of the
--   database. For Hive compatibility, this is folded to lowercase when it
--   is stored.
newDatabase :: Text -> Database

-- | The location of the database (for example, an HDFS path).
database_locationUri :: Lens' Database (Maybe Text)

-- | The ID of the Data Catalog in which the database resides.
database_catalogId :: Lens' Database (Maybe Text)

-- | A <tt>DatabaseIdentifier</tt> structure that describes a target
--   database for resource linking.
database_targetDatabase :: Lens' Database (Maybe DatabaseIdentifier)

-- | These key-value pairs define parameters and properties of the
--   database.
database_parameters :: Lens' Database (Maybe (HashMap Text Text))

-- | A description of the database.
database_description :: Lens' Database (Maybe Text)

-- | The time at which the metadata database was created in the catalog.
database_createTime :: Lens' Database (Maybe UTCTime)

-- | Creates a set of default permissions on the table for principals.
database_createTableDefaultPermissions :: Lens' Database (Maybe [PrincipalPermissions])

-- | The name of the database. For Hive compatibility, this is folded to
--   lowercase when it is stored.
database_name :: Lens' Database Text

-- | A structure that describes a target database for resource linking.
--   
--   <i>See:</i> <a>newDatabaseIdentifier</a> smart constructor.
data DatabaseIdentifier
DatabaseIdentifier' :: Maybe Text -> Maybe Text -> DatabaseIdentifier

-- | The ID of the Data Catalog in which the database resides.
[$sel:catalogId:DatabaseIdentifier'] :: DatabaseIdentifier -> Maybe Text

-- | The name of the catalog database.
[$sel:databaseName:DatabaseIdentifier'] :: DatabaseIdentifier -> Maybe Text

-- | Create a value of <a>DatabaseIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DatabaseIdentifier'</a>,
--   <a>databaseIdentifier_catalogId</a> - The ID of the Data Catalog in
--   which the database resides.
--   
--   <a>$sel:databaseName:DatabaseIdentifier'</a>,
--   <a>databaseIdentifier_databaseName</a> - The name of the catalog
--   database.
newDatabaseIdentifier :: DatabaseIdentifier

-- | The ID of the Data Catalog in which the database resides.
databaseIdentifier_catalogId :: Lens' DatabaseIdentifier (Maybe Text)

-- | The name of the catalog database.
databaseIdentifier_databaseName :: Lens' DatabaseIdentifier (Maybe Text)

-- | The structure used to create or update a database.
--   
--   <i>See:</i> <a>newDatabaseInput</a> smart constructor.
data DatabaseInput
DatabaseInput' :: Maybe Text -> Maybe DatabaseIdentifier -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe [PrincipalPermissions] -> Text -> DatabaseInput

-- | The location of the database (for example, an HDFS path).
[$sel:locationUri:DatabaseInput'] :: DatabaseInput -> Maybe Text

-- | A <tt>DatabaseIdentifier</tt> structure that describes a target
--   database for resource linking.
[$sel:targetDatabase:DatabaseInput'] :: DatabaseInput -> Maybe DatabaseIdentifier

-- | These key-value pairs define parameters and properties of the
--   database.
--   
--   These key-value pairs define parameters and properties of the
--   database.
[$sel:parameters:DatabaseInput'] :: DatabaseInput -> Maybe (HashMap Text Text)

-- | A description of the database.
[$sel:description:DatabaseInput'] :: DatabaseInput -> Maybe Text

-- | Creates a set of default permissions on the table for principals.
[$sel:createTableDefaultPermissions:DatabaseInput'] :: DatabaseInput -> Maybe [PrincipalPermissions]

-- | The name of the database. For Hive compatibility, this is folded to
--   lowercase when it is stored.
[$sel:name:DatabaseInput'] :: DatabaseInput -> Text

-- | Create a value of <a>DatabaseInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locationUri:DatabaseInput'</a>,
--   <a>databaseInput_locationUri</a> - The location of the database (for
--   example, an HDFS path).
--   
--   <a>$sel:targetDatabase:DatabaseInput'</a>,
--   <a>databaseInput_targetDatabase</a> - A <tt>DatabaseIdentifier</tt>
--   structure that describes a target database for resource linking.
--   
--   <a>$sel:parameters:DatabaseInput'</a>, <a>databaseInput_parameters</a>
--   - These key-value pairs define parameters and properties of the
--   database.
--   
--   These key-value pairs define parameters and properties of the
--   database.
--   
--   <a>$sel:description:DatabaseInput'</a>,
--   <a>databaseInput_description</a> - A description of the database.
--   
--   <a>$sel:createTableDefaultPermissions:DatabaseInput'</a>,
--   <a>databaseInput_createTableDefaultPermissions</a> - Creates a set of
--   default permissions on the table for principals.
--   
--   <a>$sel:name:DatabaseInput'</a>, <a>databaseInput_name</a> - The name
--   of the database. For Hive compatibility, this is folded to lowercase
--   when it is stored.
newDatabaseInput :: Text -> DatabaseInput

-- | The location of the database (for example, an HDFS path).
databaseInput_locationUri :: Lens' DatabaseInput (Maybe Text)

-- | A <tt>DatabaseIdentifier</tt> structure that describes a target
--   database for resource linking.
databaseInput_targetDatabase :: Lens' DatabaseInput (Maybe DatabaseIdentifier)

-- | These key-value pairs define parameters and properties of the
--   database.
--   
--   These key-value pairs define parameters and properties of the
--   database.
databaseInput_parameters :: Lens' DatabaseInput (Maybe (HashMap Text Text))

-- | A description of the database.
databaseInput_description :: Lens' DatabaseInput (Maybe Text)

-- | Creates a set of default permissions on the table for principals.
databaseInput_createTableDefaultPermissions :: Lens' DatabaseInput (Maybe [PrincipalPermissions])

-- | The name of the database. For Hive compatibility, this is folded to
--   lowercase when it is stored.
databaseInput_name :: Lens' DatabaseInput Text

-- | Defines column statistics supported for timestamp data columns.
--   
--   <i>See:</i> <a>newDateColumnStatisticsData</a> smart constructor.
data DateColumnStatisticsData
DateColumnStatisticsData' :: Maybe POSIX -> Maybe POSIX -> Natural -> Natural -> DateColumnStatisticsData

-- | The highest value in the column.
[$sel:maximumValue:DateColumnStatisticsData'] :: DateColumnStatisticsData -> Maybe POSIX

-- | The lowest value in the column.
[$sel:minimumValue:DateColumnStatisticsData'] :: DateColumnStatisticsData -> Maybe POSIX

-- | The number of null values in the column.
[$sel:numberOfNulls:DateColumnStatisticsData'] :: DateColumnStatisticsData -> Natural

-- | The number of distinct values in a column.
[$sel:numberOfDistinctValues:DateColumnStatisticsData'] :: DateColumnStatisticsData -> Natural

-- | Create a value of <a>DateColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumValue:DateColumnStatisticsData'</a>,
--   <a>dateColumnStatisticsData_maximumValue</a> - The highest value in
--   the column.
--   
--   <a>$sel:minimumValue:DateColumnStatisticsData'</a>,
--   <a>dateColumnStatisticsData_minimumValue</a> - The lowest value in the
--   column.
--   
--   <a>$sel:numberOfNulls:DateColumnStatisticsData'</a>,
--   <a>dateColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
--   
--   <a>$sel:numberOfDistinctValues:DateColumnStatisticsData'</a>,
--   <a>dateColumnStatisticsData_numberOfDistinctValues</a> - The number of
--   distinct values in a column.
newDateColumnStatisticsData :: Natural -> Natural -> DateColumnStatisticsData

-- | The highest value in the column.
dateColumnStatisticsData_maximumValue :: Lens' DateColumnStatisticsData (Maybe UTCTime)

-- | The lowest value in the column.
dateColumnStatisticsData_minimumValue :: Lens' DateColumnStatisticsData (Maybe UTCTime)

-- | The number of null values in the column.
dateColumnStatisticsData_numberOfNulls :: Lens' DateColumnStatisticsData Natural

-- | The number of distinct values in a column.
dateColumnStatisticsData_numberOfDistinctValues :: Lens' DateColumnStatisticsData Natural

-- | Defines column statistics supported for fixed-point number data
--   columns.
--   
--   <i>See:</i> <a>newDecimalColumnStatisticsData</a> smart constructor.
data DecimalColumnStatisticsData
DecimalColumnStatisticsData' :: Maybe DecimalNumber -> Maybe DecimalNumber -> Natural -> Natural -> DecimalColumnStatisticsData

-- | The highest value in the column.
[$sel:maximumValue:DecimalColumnStatisticsData'] :: DecimalColumnStatisticsData -> Maybe DecimalNumber

-- | The lowest value in the column.
[$sel:minimumValue:DecimalColumnStatisticsData'] :: DecimalColumnStatisticsData -> Maybe DecimalNumber

-- | The number of null values in the column.
[$sel:numberOfNulls:DecimalColumnStatisticsData'] :: DecimalColumnStatisticsData -> Natural

-- | The number of distinct values in a column.
[$sel:numberOfDistinctValues:DecimalColumnStatisticsData'] :: DecimalColumnStatisticsData -> Natural

-- | Create a value of <a>DecimalColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumValue:DecimalColumnStatisticsData'</a>,
--   <a>decimalColumnStatisticsData_maximumValue</a> - The highest value in
--   the column.
--   
--   <a>$sel:minimumValue:DecimalColumnStatisticsData'</a>,
--   <a>decimalColumnStatisticsData_minimumValue</a> - The lowest value in
--   the column.
--   
--   <a>$sel:numberOfNulls:DecimalColumnStatisticsData'</a>,
--   <a>decimalColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
--   
--   <a>$sel:numberOfDistinctValues:DecimalColumnStatisticsData'</a>,
--   <a>decimalColumnStatisticsData_numberOfDistinctValues</a> - The number
--   of distinct values in a column.
newDecimalColumnStatisticsData :: Natural -> Natural -> DecimalColumnStatisticsData

-- | The highest value in the column.
decimalColumnStatisticsData_maximumValue :: Lens' DecimalColumnStatisticsData (Maybe DecimalNumber)

-- | The lowest value in the column.
decimalColumnStatisticsData_minimumValue :: Lens' DecimalColumnStatisticsData (Maybe DecimalNumber)

-- | The number of null values in the column.
decimalColumnStatisticsData_numberOfNulls :: Lens' DecimalColumnStatisticsData Natural

-- | The number of distinct values in a column.
decimalColumnStatisticsData_numberOfDistinctValues :: Lens' DecimalColumnStatisticsData Natural

-- | Contains a numeric value in decimal format.
--   
--   <i>See:</i> <a>newDecimalNumber</a> smart constructor.
data DecimalNumber
DecimalNumber' :: Base64 -> Int -> DecimalNumber

-- | The unscaled numeric value.
[$sel:unscaledValue:DecimalNumber'] :: DecimalNumber -> Base64

-- | The scale that determines where the decimal point falls in the
--   unscaled value.
[$sel:scale:DecimalNumber'] :: DecimalNumber -> Int

-- | Create a value of <a>DecimalNumber</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unscaledValue:DecimalNumber'</a>,
--   <a>decimalNumber_unscaledValue</a> - The unscaled numeric value.-- --
--   <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:scale:DecimalNumber'</a>, <a>decimalNumber_scale</a> - The
--   scale that determines where the decimal point falls in the unscaled
--   value.
newDecimalNumber :: ByteString -> Int -> DecimalNumber

-- | The unscaled numeric value.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
decimalNumber_unscaledValue :: Lens' DecimalNumber ByteString

-- | The scale that determines where the decimal point falls in the
--   unscaled value.
decimalNumber_scale :: Lens' DecimalNumber Int

-- | A development endpoint where a developer can remotely debug extract,
--   transform, and load (ETL) scripts.
--   
--   <i>See:</i> <a>newDevEndpoint</a> smart constructor.
data DevEndpoint
DevEndpoint' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe WorkerType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> DevEndpoint

-- | The current status of this <tt>DevEndpoint</tt>.
[$sel:status:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The reason for a current failure in this <tt>DevEndpoint</tt>.
[$sel:failureReason:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The name of the <tt>DevEndpoint</tt>.
[$sel:endpointName:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated to the development endpoint.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
[$sel:numberOfWorkers:DevEndpoint'] :: DevEndpoint -> Maybe Int

-- | The paths to one or more Python libraries in an Amazon S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>. Multiple values must be
--   complete paths separated by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not currently supported.
[$sel:extraPythonLibsS3Path:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The status of the last update.
[$sel:lastUpdateStatus:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | A list of security group identifiers used in this
--   <tt>DevEndpoint</tt>.
[$sel:securityGroupIds:DevEndpoint'] :: DevEndpoint -> Maybe [Text]

-- | The point in time at which this <tt>DevEndpoint</tt> was last
--   modified.
[$sel:lastModifiedTimestamp:DevEndpoint'] :: DevEndpoint -> Maybe POSIX

-- | A list of public keys to be used by the <tt>DevEndpoints</tt> for
--   authentication. Using this attribute is preferred over a single public
--   key because the public keys allow you to have a different private key
--   per client.
--   
--   If you previously created an endpoint with a public key, you must
--   remove that key to be able to set a list of public keys. Call the
--   <tt>UpdateDevEndpoint</tt> API operation with the public key content
--   in the <tt>deletePublicKeys</tt> attribute, and the list of new keys
--   in the <tt>addPublicKeys</tt> attribute.
[$sel:publicKeys:DevEndpoint'] :: DevEndpoint -> Maybe [Text]

-- | The ID of the virtual private cloud (VPC) used by this
--   <tt>DevEndpoint</tt>.
[$sel:vpcId:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | A map of arguments used to configure the <tt>DevEndpoint</tt>.
--   
--   Valid arguments are:
--   
--   <ul>
--   <li><pre>"--enable-glue-datacatalog": ""</pre></li>
--   </ul>
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
[$sel:arguments:DevEndpoint'] :: DevEndpoint -> Maybe (HashMap Text Text)

-- | A private IP address to access the <tt>DevEndpoint</tt> within a VPC
--   if the <tt>DevEndpoint</tt> is created within one. The
--   <tt>PrivateAddress</tt> field is present only when you create the
--   <tt>DevEndpoint</tt> within your VPC.
[$sel:privateAddress:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The type of predefined worker that is allocated to the development
--   endpoint. Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   Known issue: when a development endpoint is created with the
--   <tt>G.2X</tt> <tt>WorkerType</tt> configuration, the Spark drivers for
--   the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64
--   GB disk.
[$sel:workerType:DevEndpoint'] :: DevEndpoint -> Maybe WorkerType

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this <tt>DevEndpoint</tt>.
[$sel:securityConfiguration:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The public key to be used by this <tt>DevEndpoint</tt> for
--   authentication. This attribute is provided for backward compatibility
--   because the recommended attribute to use is public keys.
[$sel:publicKey:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The subnet ID for this <tt>DevEndpoint</tt>.
[$sel:subnetId:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   running your ETL scripts on development endpoints.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Development endpoints that are created without specifying a Glue
--   version default to Glue 0.9.
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
[$sel:glueVersion:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The number of Glue Data Processing Units (DPUs) allocated to this
--   <tt>DevEndpoint</tt>.
[$sel:numberOfNodes:DevEndpoint'] :: DevEndpoint -> Maybe Int

-- | The public IP address used by this <tt>DevEndpoint</tt>. The
--   <tt>PublicAddress</tt> field is present only when you create a
--   non-virtual private cloud (VPC) <tt>DevEndpoint</tt>.
[$sel:publicAddress:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The AWS Availability Zone where this <tt>DevEndpoint</tt> is located.
[$sel:availabilityZone:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The Apache Zeppelin port for the remote Apache Spark interpreter.
[$sel:zeppelinRemoteSparkInterpreterPort:DevEndpoint'] :: DevEndpoint -> Maybe Int

-- | The path to one or more Java <tt>.jar</tt> files in an S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>.
--   
--   You can only use pure Java/Scala libraries with a
--   <tt>DevEndpoint</tt>.
[$sel:extraJarsS3Path:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The point in time at which this DevEndpoint was created.
[$sel:createdTimestamp:DevEndpoint'] :: DevEndpoint -> Maybe POSIX

-- | The YARN endpoint address used by this <tt>DevEndpoint</tt>.
[$sel:yarnEndpointAddress:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | The Amazon Resource Name (ARN) of the IAM role used in this
--   <tt>DevEndpoint</tt>.
[$sel:roleArn:DevEndpoint'] :: DevEndpoint -> Maybe Text

-- | Create a value of <a>DevEndpoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DevEndpoint'</a>, <a>devEndpoint_status</a> - The
--   current status of this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:failureReason:DevEndpoint'</a>,
--   <a>devEndpoint_failureReason</a> - The reason for a current failure in
--   this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:endpointName:DevEndpoint'</a>, <a>devEndpoint_endpointName</a>
--   - The name of the <tt>DevEndpoint</tt>.
--   
--   <a>$sel:numberOfWorkers:DevEndpoint'</a>,
--   <a>devEndpoint_numberOfWorkers</a> - The number of workers of a
--   defined <tt>workerType</tt> that are allocated to the development
--   endpoint.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
--   
--   <a>$sel:extraPythonLibsS3Path:DevEndpoint'</a>,
--   <a>devEndpoint_extraPythonLibsS3Path</a> - The paths to one or more
--   Python libraries in an Amazon S3 bucket that should be loaded in your
--   <tt>DevEndpoint</tt>. Multiple values must be complete paths separated
--   by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not currently supported.
--   
--   <a>$sel:lastUpdateStatus:DevEndpoint'</a>,
--   <a>devEndpoint_lastUpdateStatus</a> - The status of the last update.
--   
--   <a>$sel:securityGroupIds:DevEndpoint'</a>,
--   <a>devEndpoint_securityGroupIds</a> - A list of security group
--   identifiers used in this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:lastModifiedTimestamp:DevEndpoint'</a>,
--   <a>devEndpoint_lastModifiedTimestamp</a> - The point in time at which
--   this <tt>DevEndpoint</tt> was last modified.
--   
--   <a>$sel:publicKeys:DevEndpoint'</a>, <a>devEndpoint_publicKeys</a> - A
--   list of public keys to be used by the <tt>DevEndpoints</tt> for
--   authentication. Using this attribute is preferred over a single public
--   key because the public keys allow you to have a different private key
--   per client.
--   
--   If you previously created an endpoint with a public key, you must
--   remove that key to be able to set a list of public keys. Call the
--   <tt>UpdateDevEndpoint</tt> API operation with the public key content
--   in the <tt>deletePublicKeys</tt> attribute, and the list of new keys
--   in the <tt>addPublicKeys</tt> attribute.
--   
--   <a>$sel:vpcId:DevEndpoint'</a>, <a>devEndpoint_vpcId</a> - The ID of
--   the virtual private cloud (VPC) used by this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:arguments:DevEndpoint'</a>, <a>devEndpoint_arguments</a> - A
--   map of arguments used to configure the <tt>DevEndpoint</tt>.
--   
--   Valid arguments are:
--   
--   <ul>
--   <li><pre>"--enable-glue-datacatalog": ""</pre></li>
--   </ul>
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
--   
--   <a>$sel:privateAddress:DevEndpoint'</a>,
--   <a>devEndpoint_privateAddress</a> - A private IP address to access the
--   <tt>DevEndpoint</tt> within a VPC if the <tt>DevEndpoint</tt> is
--   created within one. The <tt>PrivateAddress</tt> field is present only
--   when you create the <tt>DevEndpoint</tt> within your VPC.
--   
--   <a>$sel:workerType:DevEndpoint'</a>, <a>devEndpoint_workerType</a> -
--   The type of predefined worker that is allocated to the development
--   endpoint. Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   Known issue: when a development endpoint is created with the
--   <tt>G.2X</tt> <tt>WorkerType</tt> configuration, the Spark drivers for
--   the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64
--   GB disk.
--   
--   <a>$sel:securityConfiguration:DevEndpoint'</a>,
--   <a>devEndpoint_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this
--   <tt>DevEndpoint</tt>.
--   
--   <a>$sel:publicKey:DevEndpoint'</a>, <a>devEndpoint_publicKey</a> - The
--   public key to be used by this <tt>DevEndpoint</tt> for authentication.
--   This attribute is provided for backward compatibility because the
--   recommended attribute to use is public keys.
--   
--   <a>$sel:subnetId:DevEndpoint'</a>, <a>devEndpoint_subnetId</a> - The
--   subnet ID for this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:glueVersion:DevEndpoint'</a>, <a>devEndpoint_glueVersion</a> -
--   Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   running your ETL scripts on development endpoints.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Development endpoints that are created without specifying a Glue
--   version default to Glue 0.9.
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
--   
--   <a>$sel:numberOfNodes:DevEndpoint'</a>,
--   <a>devEndpoint_numberOfNodes</a> - The number of Glue Data Processing
--   Units (DPUs) allocated to this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:publicAddress:DevEndpoint'</a>,
--   <a>devEndpoint_publicAddress</a> - The public IP address used by this
--   <tt>DevEndpoint</tt>. The <tt>PublicAddress</tt> field is present only
--   when you create a non-virtual private cloud (VPC)
--   <tt>DevEndpoint</tt>.
--   
--   <a>$sel:availabilityZone:DevEndpoint'</a>,
--   <a>devEndpoint_availabilityZone</a> - The AWS Availability Zone where
--   this <tt>DevEndpoint</tt> is located.
--   
--   <a>$sel:zeppelinRemoteSparkInterpreterPort:DevEndpoint'</a>,
--   <a>devEndpoint_zeppelinRemoteSparkInterpreterPort</a> - The Apache
--   Zeppelin port for the remote Apache Spark interpreter.
--   
--   <a>$sel:extraJarsS3Path:DevEndpoint'</a>,
--   <a>devEndpoint_extraJarsS3Path</a> - The path to one or more Java
--   <tt>.jar</tt> files in an S3 bucket that should be loaded in your
--   <tt>DevEndpoint</tt>.
--   
--   You can only use pure Java/Scala libraries with a
--   <tt>DevEndpoint</tt>.
--   
--   <a>$sel:createdTimestamp:DevEndpoint'</a>,
--   <a>devEndpoint_createdTimestamp</a> - The point in time at which this
--   DevEndpoint was created.
--   
--   <a>$sel:yarnEndpointAddress:DevEndpoint'</a>,
--   <a>devEndpoint_yarnEndpointAddress</a> - The YARN endpoint address
--   used by this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:roleArn:DevEndpoint'</a>, <a>devEndpoint_roleArn</a> - The
--   Amazon Resource Name (ARN) of the IAM role used in this
--   <tt>DevEndpoint</tt>.
newDevEndpoint :: DevEndpoint

-- | The current status of this <tt>DevEndpoint</tt>.
devEndpoint_status :: Lens' DevEndpoint (Maybe Text)

-- | The reason for a current failure in this <tt>DevEndpoint</tt>.
devEndpoint_failureReason :: Lens' DevEndpoint (Maybe Text)

-- | The name of the <tt>DevEndpoint</tt>.
devEndpoint_endpointName :: Lens' DevEndpoint (Maybe Text)

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated to the development endpoint.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
devEndpoint_numberOfWorkers :: Lens' DevEndpoint (Maybe Int)

-- | The paths to one or more Python libraries in an Amazon S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>. Multiple values must be
--   complete paths separated by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not currently supported.
devEndpoint_extraPythonLibsS3Path :: Lens' DevEndpoint (Maybe Text)

-- | The status of the last update.
devEndpoint_lastUpdateStatus :: Lens' DevEndpoint (Maybe Text)

-- | A list of security group identifiers used in this
--   <tt>DevEndpoint</tt>.
devEndpoint_securityGroupIds :: Lens' DevEndpoint (Maybe [Text])

-- | The point in time at which this <tt>DevEndpoint</tt> was last
--   modified.
devEndpoint_lastModifiedTimestamp :: Lens' DevEndpoint (Maybe UTCTime)

-- | A list of public keys to be used by the <tt>DevEndpoints</tt> for
--   authentication. Using this attribute is preferred over a single public
--   key because the public keys allow you to have a different private key
--   per client.
--   
--   If you previously created an endpoint with a public key, you must
--   remove that key to be able to set a list of public keys. Call the
--   <tt>UpdateDevEndpoint</tt> API operation with the public key content
--   in the <tt>deletePublicKeys</tt> attribute, and the list of new keys
--   in the <tt>addPublicKeys</tt> attribute.
devEndpoint_publicKeys :: Lens' DevEndpoint (Maybe [Text])

-- | The ID of the virtual private cloud (VPC) used by this
--   <tt>DevEndpoint</tt>.
devEndpoint_vpcId :: Lens' DevEndpoint (Maybe Text)

-- | A map of arguments used to configure the <tt>DevEndpoint</tt>.
--   
--   Valid arguments are:
--   
--   <ul>
--   <li><pre>"--enable-glue-datacatalog": ""</pre></li>
--   </ul>
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
devEndpoint_arguments :: Lens' DevEndpoint (Maybe (HashMap Text Text))

-- | A private IP address to access the <tt>DevEndpoint</tt> within a VPC
--   if the <tt>DevEndpoint</tt> is created within one. The
--   <tt>PrivateAddress</tt> field is present only when you create the
--   <tt>DevEndpoint</tt> within your VPC.
devEndpoint_privateAddress :: Lens' DevEndpoint (Maybe Text)

-- | The type of predefined worker that is allocated to the development
--   endpoint. Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   Known issue: when a development endpoint is created with the
--   <tt>G.2X</tt> <tt>WorkerType</tt> configuration, the Spark drivers for
--   the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64
--   GB disk.
devEndpoint_workerType :: Lens' DevEndpoint (Maybe WorkerType)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this <tt>DevEndpoint</tt>.
devEndpoint_securityConfiguration :: Lens' DevEndpoint (Maybe Text)

-- | The public key to be used by this <tt>DevEndpoint</tt> for
--   authentication. This attribute is provided for backward compatibility
--   because the recommended attribute to use is public keys.
devEndpoint_publicKey :: Lens' DevEndpoint (Maybe Text)

-- | The subnet ID for this <tt>DevEndpoint</tt>.
devEndpoint_subnetId :: Lens' DevEndpoint (Maybe Text)

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   running your ETL scripts on development endpoints.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Development endpoints that are created without specifying a Glue
--   version default to Glue 0.9.
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
devEndpoint_glueVersion :: Lens' DevEndpoint (Maybe Text)

-- | The number of Glue Data Processing Units (DPUs) allocated to this
--   <tt>DevEndpoint</tt>.
devEndpoint_numberOfNodes :: Lens' DevEndpoint (Maybe Int)

-- | The public IP address used by this <tt>DevEndpoint</tt>. The
--   <tt>PublicAddress</tt> field is present only when you create a
--   non-virtual private cloud (VPC) <tt>DevEndpoint</tt>.
devEndpoint_publicAddress :: Lens' DevEndpoint (Maybe Text)

-- | The AWS Availability Zone where this <tt>DevEndpoint</tt> is located.
devEndpoint_availabilityZone :: Lens' DevEndpoint (Maybe Text)

-- | The Apache Zeppelin port for the remote Apache Spark interpreter.
devEndpoint_zeppelinRemoteSparkInterpreterPort :: Lens' DevEndpoint (Maybe Int)

-- | The path to one or more Java <tt>.jar</tt> files in an S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>.
--   
--   You can only use pure Java/Scala libraries with a
--   <tt>DevEndpoint</tt>.
devEndpoint_extraJarsS3Path :: Lens' DevEndpoint (Maybe Text)

-- | The point in time at which this DevEndpoint was created.
devEndpoint_createdTimestamp :: Lens' DevEndpoint (Maybe UTCTime)

-- | The YARN endpoint address used by this <tt>DevEndpoint</tt>.
devEndpoint_yarnEndpointAddress :: Lens' DevEndpoint (Maybe Text)

-- | The Amazon Resource Name (ARN) of the IAM role used in this
--   <tt>DevEndpoint</tt>.
devEndpoint_roleArn :: Lens' DevEndpoint (Maybe Text)

-- | Custom libraries to be loaded into a development endpoint.
--   
--   <i>See:</i> <a>newDevEndpointCustomLibraries</a> smart constructor.
data DevEndpointCustomLibraries
DevEndpointCustomLibraries' :: Maybe Text -> Maybe Text -> DevEndpointCustomLibraries

-- | The paths to one or more Python libraries in an Amazon Simple Storage
--   Service (Amazon S3) bucket that should be loaded in your
--   <tt>DevEndpoint</tt>. Multiple values must be complete paths separated
--   by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not currently supported.
[$sel:extraPythonLibsS3Path:DevEndpointCustomLibraries'] :: DevEndpointCustomLibraries -> Maybe Text

-- | The path to one or more Java <tt>.jar</tt> files in an S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>.
--   
--   You can only use pure Java/Scala libraries with a
--   <tt>DevEndpoint</tt>.
[$sel:extraJarsS3Path:DevEndpointCustomLibraries'] :: DevEndpointCustomLibraries -> Maybe Text

-- | Create a value of <a>DevEndpointCustomLibraries</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:extraPythonLibsS3Path:DevEndpointCustomLibraries'</a>,
--   <a>devEndpointCustomLibraries_extraPythonLibsS3Path</a> - The paths to
--   one or more Python libraries in an Amazon Simple Storage Service
--   (Amazon S3) bucket that should be loaded in your <tt>DevEndpoint</tt>.
--   Multiple values must be complete paths separated by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not currently supported.
--   
--   <a>$sel:extraJarsS3Path:DevEndpointCustomLibraries'</a>,
--   <a>devEndpointCustomLibraries_extraJarsS3Path</a> - The path to one or
--   more Java <tt>.jar</tt> files in an S3 bucket that should be loaded in
--   your <tt>DevEndpoint</tt>.
--   
--   You can only use pure Java/Scala libraries with a
--   <tt>DevEndpoint</tt>.
newDevEndpointCustomLibraries :: DevEndpointCustomLibraries

-- | The paths to one or more Python libraries in an Amazon Simple Storage
--   Service (Amazon S3) bucket that should be loaded in your
--   <tt>DevEndpoint</tt>. Multiple values must be complete paths separated
--   by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not currently supported.
devEndpointCustomLibraries_extraPythonLibsS3Path :: Lens' DevEndpointCustomLibraries (Maybe Text)

-- | The path to one or more Java <tt>.jar</tt> files in an S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>.
--   
--   You can only use pure Java/Scala libraries with a
--   <tt>DevEndpoint</tt>.
devEndpointCustomLibraries_extraJarsS3Path :: Lens' DevEndpointCustomLibraries (Maybe Text)

-- | Defines column statistics supported for floating-point number data
--   columns.
--   
--   <i>See:</i> <a>newDoubleColumnStatisticsData</a> smart constructor.
data DoubleColumnStatisticsData
DoubleColumnStatisticsData' :: Maybe Double -> Maybe Double -> Natural -> Natural -> DoubleColumnStatisticsData

-- | The highest value in the column.
[$sel:maximumValue:DoubleColumnStatisticsData'] :: DoubleColumnStatisticsData -> Maybe Double

-- | The lowest value in the column.
[$sel:minimumValue:DoubleColumnStatisticsData'] :: DoubleColumnStatisticsData -> Maybe Double

-- | The number of null values in the column.
[$sel:numberOfNulls:DoubleColumnStatisticsData'] :: DoubleColumnStatisticsData -> Natural

-- | The number of distinct values in a column.
[$sel:numberOfDistinctValues:DoubleColumnStatisticsData'] :: DoubleColumnStatisticsData -> Natural

-- | Create a value of <a>DoubleColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumValue:DoubleColumnStatisticsData'</a>,
--   <a>doubleColumnStatisticsData_maximumValue</a> - The highest value in
--   the column.
--   
--   <a>$sel:minimumValue:DoubleColumnStatisticsData'</a>,
--   <a>doubleColumnStatisticsData_minimumValue</a> - The lowest value in
--   the column.
--   
--   <a>$sel:numberOfNulls:DoubleColumnStatisticsData'</a>,
--   <a>doubleColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
--   
--   <a>$sel:numberOfDistinctValues:DoubleColumnStatisticsData'</a>,
--   <a>doubleColumnStatisticsData_numberOfDistinctValues</a> - The number
--   of distinct values in a column.
newDoubleColumnStatisticsData :: Natural -> Natural -> DoubleColumnStatisticsData

-- | The highest value in the column.
doubleColumnStatisticsData_maximumValue :: Lens' DoubleColumnStatisticsData (Maybe Double)

-- | The lowest value in the column.
doubleColumnStatisticsData_minimumValue :: Lens' DoubleColumnStatisticsData (Maybe Double)

-- | The number of null values in the column.
doubleColumnStatisticsData_numberOfNulls :: Lens' DoubleColumnStatisticsData Natural

-- | The number of distinct values in a column.
doubleColumnStatisticsData_numberOfDistinctValues :: Lens' DoubleColumnStatisticsData Natural

-- | Specifies an Amazon DynamoDB table to crawl.
--   
--   <i>See:</i> <a>newDynamoDBTarget</a> smart constructor.
data DynamoDBTarget
DynamoDBTarget' :: Maybe Text -> Maybe Double -> Maybe Bool -> DynamoDBTarget

-- | The name of the DynamoDB table to crawl.
[$sel:path:DynamoDBTarget'] :: DynamoDBTarget -> Maybe Text

-- | The percentage of the configured read capacity units to use by the
--   Glue crawler. Read capacity units is a term defined by DynamoDB, and
--   is a numeric value that acts as rate limiter for the number of reads
--   that can be performed on that table per second.
--   
--   The valid values are null or a value between 0.1 to 1.5. A null value
--   is used when user does not provide a value, and defaults to 0.5 of the
--   configured Read Capacity Unit (for provisioned tables), or 0.25 of the
--   max configured Read Capacity Unit (for tables using on-demand mode).
[$sel:scanRate:DynamoDBTarget'] :: DynamoDBTarget -> Maybe Double

-- | Indicates whether to scan all the records, or to sample rows from the
--   table. Scanning all the records can take a long time when the table is
--   not a high throughput table.
--   
--   A value of <tt>true</tt> means to scan all records, while a value of
--   <tt>false</tt> means to sample the records. If no value is specified,
--   the value defaults to <tt>true</tt>.
[$sel:scanAll:DynamoDBTarget'] :: DynamoDBTarget -> Maybe Bool

-- | Create a value of <a>DynamoDBTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:DynamoDBTarget'</a>, <a>dynamoDBTarget_path</a> - The
--   name of the DynamoDB table to crawl.
--   
--   <a>$sel:scanRate:DynamoDBTarget'</a>, <a>dynamoDBTarget_scanRate</a> -
--   The percentage of the configured read capacity units to use by the
--   Glue crawler. Read capacity units is a term defined by DynamoDB, and
--   is a numeric value that acts as rate limiter for the number of reads
--   that can be performed on that table per second.
--   
--   The valid values are null or a value between 0.1 to 1.5. A null value
--   is used when user does not provide a value, and defaults to 0.5 of the
--   configured Read Capacity Unit (for provisioned tables), or 0.25 of the
--   max configured Read Capacity Unit (for tables using on-demand mode).
--   
--   <a>$sel:scanAll:DynamoDBTarget'</a>, <a>dynamoDBTarget_scanAll</a> -
--   Indicates whether to scan all the records, or to sample rows from the
--   table. Scanning all the records can take a long time when the table is
--   not a high throughput table.
--   
--   A value of <tt>true</tt> means to scan all records, while a value of
--   <tt>false</tt> means to sample the records. If no value is specified,
--   the value defaults to <tt>true</tt>.
newDynamoDBTarget :: DynamoDBTarget

-- | The name of the DynamoDB table to crawl.
dynamoDBTarget_path :: Lens' DynamoDBTarget (Maybe Text)

-- | The percentage of the configured read capacity units to use by the
--   Glue crawler. Read capacity units is a term defined by DynamoDB, and
--   is a numeric value that acts as rate limiter for the number of reads
--   that can be performed on that table per second.
--   
--   The valid values are null or a value between 0.1 to 1.5. A null value
--   is used when user does not provide a value, and defaults to 0.5 of the
--   configured Read Capacity Unit (for provisioned tables), or 0.25 of the
--   max configured Read Capacity Unit (for tables using on-demand mode).
dynamoDBTarget_scanRate :: Lens' DynamoDBTarget (Maybe Double)

-- | Indicates whether to scan all the records, or to sample rows from the
--   table. Scanning all the records can take a long time when the table is
--   not a high throughput table.
--   
--   A value of <tt>true</tt> means to scan all records, while a value of
--   <tt>false</tt> means to sample the records. If no value is specified,
--   the value defaults to <tt>true</tt>.
dynamoDBTarget_scanAll :: Lens' DynamoDBTarget (Maybe Bool)

-- | An edge represents a directed connection between two components on a
--   workflow graph.
--   
--   <i>See:</i> <a>newEdge</a> smart constructor.
data Edge
Edge' :: Maybe Text -> Maybe Text -> Edge

-- | The unique of the node within the workflow where the edge starts.
[$sel:sourceId:Edge'] :: Edge -> Maybe Text

-- | The unique of the node within the workflow where the edge ends.
[$sel:destinationId:Edge'] :: Edge -> Maybe Text

-- | Create a value of <a>Edge</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceId:Edge'</a>, <a>edge_sourceId</a> - The unique of the
--   node within the workflow where the edge starts.
--   
--   <a>$sel:destinationId:Edge'</a>, <a>edge_destinationId</a> - The
--   unique of the node within the workflow where the edge ends.
newEdge :: Edge

-- | The unique of the node within the workflow where the edge starts.
edge_sourceId :: Lens' Edge (Maybe Text)

-- | The unique of the node within the workflow where the edge ends.
edge_destinationId :: Lens' Edge (Maybe Text)

-- | Specifies the encryption-at-rest configuration for the Data Catalog.
--   
--   <i>See:</i> <a>newEncryptionAtRest</a> smart constructor.
data EncryptionAtRest
EncryptionAtRest' :: Maybe Text -> CatalogEncryptionMode -> EncryptionAtRest

-- | The ID of the KMS key to use for encryption at rest.
[$sel:sseAwsKmsKeyId:EncryptionAtRest'] :: EncryptionAtRest -> Maybe Text

-- | The encryption-at-rest mode for encrypting Data Catalog data.
[$sel:catalogEncryptionMode:EncryptionAtRest'] :: EncryptionAtRest -> CatalogEncryptionMode

-- | Create a value of <a>EncryptionAtRest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sseAwsKmsKeyId:EncryptionAtRest'</a>,
--   <a>encryptionAtRest_sseAwsKmsKeyId</a> - The ID of the KMS key to use
--   for encryption at rest.
--   
--   <a>$sel:catalogEncryptionMode:EncryptionAtRest'</a>,
--   <a>encryptionAtRest_catalogEncryptionMode</a> - The encryption-at-rest
--   mode for encrypting Data Catalog data.
newEncryptionAtRest :: CatalogEncryptionMode -> EncryptionAtRest

-- | The ID of the KMS key to use for encryption at rest.
encryptionAtRest_sseAwsKmsKeyId :: Lens' EncryptionAtRest (Maybe Text)

-- | The encryption-at-rest mode for encrypting Data Catalog data.
encryptionAtRest_catalogEncryptionMode :: Lens' EncryptionAtRest CatalogEncryptionMode

-- | Specifies an encryption configuration.
--   
--   <i>See:</i> <a>newEncryptionConfiguration</a> smart constructor.
data EncryptionConfiguration
EncryptionConfiguration' :: Maybe [S3Encryption] -> Maybe JobBookmarksEncryption -> Maybe CloudWatchEncryption -> EncryptionConfiguration

-- | The encryption configuration for Amazon Simple Storage Service (Amazon
--   S3) data.
[$sel:s3Encryption:EncryptionConfiguration'] :: EncryptionConfiguration -> Maybe [S3Encryption]

-- | The encryption configuration for job bookmarks.
[$sel:jobBookmarksEncryption:EncryptionConfiguration'] :: EncryptionConfiguration -> Maybe JobBookmarksEncryption

-- | The encryption configuration for Amazon CloudWatch.
[$sel:cloudWatchEncryption:EncryptionConfiguration'] :: EncryptionConfiguration -> Maybe CloudWatchEncryption

-- | Create a value of <a>EncryptionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Encryption:EncryptionConfiguration'</a>,
--   <a>encryptionConfiguration_s3Encryption</a> - The encryption
--   configuration for Amazon Simple Storage Service (Amazon S3) data.
--   
--   <a>$sel:jobBookmarksEncryption:EncryptionConfiguration'</a>,
--   <a>encryptionConfiguration_jobBookmarksEncryption</a> - The encryption
--   configuration for job bookmarks.
--   
--   <a>$sel:cloudWatchEncryption:EncryptionConfiguration'</a>,
--   <a>encryptionConfiguration_cloudWatchEncryption</a> - The encryption
--   configuration for Amazon CloudWatch.
newEncryptionConfiguration :: EncryptionConfiguration

-- | The encryption configuration for Amazon Simple Storage Service (Amazon
--   S3) data.
encryptionConfiguration_s3Encryption :: Lens' EncryptionConfiguration (Maybe [S3Encryption])

-- | The encryption configuration for job bookmarks.
encryptionConfiguration_jobBookmarksEncryption :: Lens' EncryptionConfiguration (Maybe JobBookmarksEncryption)

-- | The encryption configuration for Amazon CloudWatch.
encryptionConfiguration_cloudWatchEncryption :: Lens' EncryptionConfiguration (Maybe CloudWatchEncryption)

-- | Contains details about an error.
--   
--   <i>See:</i> <a>newErrorDetail</a> smart constructor.
data ErrorDetail
ErrorDetail' :: Maybe Text -> Maybe Text -> ErrorDetail

-- | The code associated with this error.
[$sel:errorCode:ErrorDetail'] :: ErrorDetail -> Maybe Text

-- | A message describing the error.
[$sel:errorMessage:ErrorDetail'] :: ErrorDetail -> Maybe Text

-- | Create a value of <a>ErrorDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:ErrorDetail'</a>, <a>errorDetail_errorCode</a> - The
--   code associated with this error.
--   
--   <a>$sel:errorMessage:ErrorDetail'</a>, <a>errorDetail_errorMessage</a>
--   - A message describing the error.
newErrorDetail :: ErrorDetail

-- | The code associated with this error.
errorDetail_errorCode :: Lens' ErrorDetail (Maybe Text)

-- | A message describing the error.
errorDetail_errorMessage :: Lens' ErrorDetail (Maybe Text)

-- | An object containing error details.
--   
--   <i>See:</i> <a>newErrorDetails</a> smart constructor.
data ErrorDetails
ErrorDetails' :: Maybe Text -> Maybe Text -> ErrorDetails

-- | The error code for an error.
[$sel:errorCode:ErrorDetails'] :: ErrorDetails -> Maybe Text

-- | The error message for an error.
[$sel:errorMessage:ErrorDetails'] :: ErrorDetails -> Maybe Text

-- | Create a value of <a>ErrorDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:ErrorDetails'</a>, <a>errorDetails_errorCode</a> -
--   The error code for an error.
--   
--   <a>$sel:errorMessage:ErrorDetails'</a>,
--   <a>errorDetails_errorMessage</a> - The error message for an error.
newErrorDetails :: ErrorDetails

-- | The error code for an error.
errorDetails_errorCode :: Lens' ErrorDetails (Maybe Text)

-- | The error message for an error.
errorDetails_errorMessage :: Lens' ErrorDetails (Maybe Text)

-- | Evaluation metrics provide an estimate of the quality of your machine
--   learning transform.
--   
--   <i>See:</i> <a>newEvaluationMetrics</a> smart constructor.
data EvaluationMetrics
EvaluationMetrics' :: Maybe FindMatchesMetrics -> TransformType -> EvaluationMetrics

-- | The evaluation metrics for the find matches algorithm.
[$sel:findMatchesMetrics:EvaluationMetrics'] :: EvaluationMetrics -> Maybe FindMatchesMetrics

-- | The type of machine learning transform.
[$sel:transformType:EvaluationMetrics'] :: EvaluationMetrics -> TransformType

-- | Create a value of <a>EvaluationMetrics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:findMatchesMetrics:EvaluationMetrics'</a>,
--   <a>evaluationMetrics_findMatchesMetrics</a> - The evaluation metrics
--   for the find matches algorithm.
--   
--   <a>$sel:transformType:EvaluationMetrics'</a>,
--   <a>evaluationMetrics_transformType</a> - The type of machine learning
--   transform.
newEvaluationMetrics :: TransformType -> EvaluationMetrics

-- | The evaluation metrics for the find matches algorithm.
evaluationMetrics_findMatchesMetrics :: Lens' EvaluationMetrics (Maybe FindMatchesMetrics)

-- | The type of machine learning transform.
evaluationMetrics_transformType :: Lens' EvaluationMetrics TransformType

-- | Batch condition that must be met (specified number of events received
--   or batch time window expired) before EventBridge event trigger fires.
--   
--   <i>See:</i> <a>newEventBatchingCondition</a> smart constructor.
data EventBatchingCondition
EventBatchingCondition' :: Maybe Natural -> Natural -> EventBatchingCondition

-- | Window of time in seconds after which EventBridge event trigger fires.
--   Window starts when first event is received.
[$sel:batchWindow:EventBatchingCondition'] :: EventBatchingCondition -> Maybe Natural

-- | Number of events that must be received from Amazon EventBridge before
--   EventBridge event trigger fires.
[$sel:batchSize:EventBatchingCondition'] :: EventBatchingCondition -> Natural

-- | Create a value of <a>EventBatchingCondition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchWindow:EventBatchingCondition'</a>,
--   <a>eventBatchingCondition_batchWindow</a> - Window of time in seconds
--   after which EventBridge event trigger fires. Window starts when first
--   event is received.
--   
--   <a>$sel:batchSize:EventBatchingCondition'</a>,
--   <a>eventBatchingCondition_batchSize</a> - Number of events that must
--   be received from Amazon EventBridge before EventBridge event trigger
--   fires.
newEventBatchingCondition :: Natural -> EventBatchingCondition

-- | Window of time in seconds after which EventBridge event trigger fires.
--   Window starts when first event is received.
eventBatchingCondition_batchWindow :: Lens' EventBatchingCondition (Maybe Natural)

-- | Number of events that must be received from Amazon EventBridge before
--   EventBridge event trigger fires.
eventBatchingCondition_batchSize :: Lens' EventBatchingCondition Natural

-- | An execution property of a job.
--   
--   <i>See:</i> <a>newExecutionProperty</a> smart constructor.
data ExecutionProperty
ExecutionProperty' :: Maybe Int -> ExecutionProperty

-- | The maximum number of concurrent runs allowed for the job. The default
--   is 1. An error is returned when this threshold is reached. The maximum
--   value you can specify is controlled by a service limit.
[$sel:maxConcurrentRuns:ExecutionProperty'] :: ExecutionProperty -> Maybe Int

-- | Create a value of <a>ExecutionProperty</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxConcurrentRuns:ExecutionProperty'</a>,
--   <a>executionProperty_maxConcurrentRuns</a> - The maximum number of
--   concurrent runs allowed for the job. The default is 1. An error is
--   returned when this threshold is reached. The maximum value you can
--   specify is controlled by a service limit.
newExecutionProperty :: ExecutionProperty

-- | The maximum number of concurrent runs allowed for the job. The default
--   is 1. An error is returned when this threshold is reached. The maximum
--   value you can specify is controlled by a service limit.
executionProperty_maxConcurrentRuns :: Lens' ExecutionProperty (Maybe Int)

-- | Specifies configuration properties for an exporting labels task run.
--   
--   <i>See:</i> <a>newExportLabelsTaskRunProperties</a> smart constructor.
data ExportLabelsTaskRunProperties
ExportLabelsTaskRunProperties' :: Maybe Text -> ExportLabelsTaskRunProperties

-- | The Amazon Simple Storage Service (Amazon S3) path where you will
--   export the labels.
[$sel:outputS3Path:ExportLabelsTaskRunProperties'] :: ExportLabelsTaskRunProperties -> Maybe Text

-- | Create a value of <a>ExportLabelsTaskRunProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputS3Path:ExportLabelsTaskRunProperties'</a>,
--   <a>exportLabelsTaskRunProperties_outputS3Path</a> - The Amazon Simple
--   Storage Service (Amazon S3) path where you will export the labels.
newExportLabelsTaskRunProperties :: ExportLabelsTaskRunProperties

-- | The Amazon Simple Storage Service (Amazon S3) path where you will
--   export the labels.
exportLabelsTaskRunProperties_outputS3Path :: Lens' ExportLabelsTaskRunProperties (Maybe Text)

-- | The evaluation metrics for the find matches algorithm. The quality of
--   your machine learning transform is measured by getting your transform
--   to predict some matches and comparing the results to known matches
--   from the same dataset. The quality metrics are based on a subset of
--   your data, so they are not precise.
--   
--   <i>See:</i> <a>newFindMatchesMetrics</a> smart constructor.
data FindMatchesMetrics
FindMatchesMetrics' :: Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> Maybe [ColumnImportance] -> Maybe ConfusionMatrix -> FindMatchesMetrics

-- | The maximum F1 metric indicates the transform's accuracy between 0 and
--   1, where 1 is the best accuracy.
--   
--   For more information, see <a>F1 score</a> in Wikipedia.
[$sel:f1:FindMatchesMetrics'] :: FindMatchesMetrics -> Maybe Double

-- | The area under the precision/recall curve (AUPRC) is a single number
--   measuring the overall quality of the transform, that is independent of
--   the choice made for precision vs. recall. Higher values indicate that
--   you have a more attractive precision vs. recall tradeoff.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
[$sel:areaUnderPRCurve:FindMatchesMetrics'] :: FindMatchesMetrics -> Maybe Double

-- | The recall metric indicates that for an actual match, how often your
--   transform predicts the match. Specifically, it measures how well the
--   transform finds true positives from the total records in the source
--   data.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
[$sel:recall:FindMatchesMetrics'] :: FindMatchesMetrics -> Maybe Double

-- | The precision metric indicates when often your transform is correct
--   when it predicts a match. Specifically, it measures how well the
--   transform finds true positives from the total true positives possible.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
[$sel:precision:FindMatchesMetrics'] :: FindMatchesMetrics -> Maybe Double

-- | A list of <tt>ColumnImportance</tt> structures containing column
--   importance metrics, sorted in order of descending importance.
[$sel:columnImportances:FindMatchesMetrics'] :: FindMatchesMetrics -> Maybe [ColumnImportance]

-- | The confusion matrix shows you what your transform is predicting
--   accurately and what types of errors it is making.
--   
--   For more information, see <a>Confusion matrix</a> in Wikipedia.
[$sel:confusionMatrix:FindMatchesMetrics'] :: FindMatchesMetrics -> Maybe ConfusionMatrix

-- | Create a value of <a>FindMatchesMetrics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:f1:FindMatchesMetrics'</a>, <a>findMatchesMetrics_f1</a> - The
--   maximum F1 metric indicates the transform's accuracy between 0 and 1,
--   where 1 is the best accuracy.
--   
--   For more information, see <a>F1 score</a> in Wikipedia.
--   
--   <a>$sel:areaUnderPRCurve:FindMatchesMetrics'</a>,
--   <a>findMatchesMetrics_areaUnderPRCurve</a> - The area under the
--   precision/recall curve (AUPRC) is a single number measuring the
--   overall quality of the transform, that is independent of the choice
--   made for precision vs. recall. Higher values indicate that you have a
--   more attractive precision vs. recall tradeoff.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
--   
--   <a>$sel:recall:FindMatchesMetrics'</a>,
--   <a>findMatchesMetrics_recall</a> - The recall metric indicates that
--   for an actual match, how often your transform predicts the match.
--   Specifically, it measures how well the transform finds true positives
--   from the total records in the source data.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
--   
--   <a>$sel:precision:FindMatchesMetrics'</a>,
--   <a>findMatchesMetrics_precision</a> - The precision metric indicates
--   when often your transform is correct when it predicts a match.
--   Specifically, it measures how well the transform finds true positives
--   from the total true positives possible.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
--   
--   <a>$sel:columnImportances:FindMatchesMetrics'</a>,
--   <a>findMatchesMetrics_columnImportances</a> - A list of
--   <tt>ColumnImportance</tt> structures containing column importance
--   metrics, sorted in order of descending importance.
--   
--   <a>$sel:confusionMatrix:FindMatchesMetrics'</a>,
--   <a>findMatchesMetrics_confusionMatrix</a> - The confusion matrix shows
--   you what your transform is predicting accurately and what types of
--   errors it is making.
--   
--   For more information, see <a>Confusion matrix</a> in Wikipedia.
newFindMatchesMetrics :: FindMatchesMetrics

-- | The maximum F1 metric indicates the transform's accuracy between 0 and
--   1, where 1 is the best accuracy.
--   
--   For more information, see <a>F1 score</a> in Wikipedia.
findMatchesMetrics_f1 :: Lens' FindMatchesMetrics (Maybe Double)

-- | The area under the precision/recall curve (AUPRC) is a single number
--   measuring the overall quality of the transform, that is independent of
--   the choice made for precision vs. recall. Higher values indicate that
--   you have a more attractive precision vs. recall tradeoff.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
findMatchesMetrics_areaUnderPRCurve :: Lens' FindMatchesMetrics (Maybe Double)

-- | The recall metric indicates that for an actual match, how often your
--   transform predicts the match. Specifically, it measures how well the
--   transform finds true positives from the total records in the source
--   data.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
findMatchesMetrics_recall :: Lens' FindMatchesMetrics (Maybe Double)

-- | The precision metric indicates when often your transform is correct
--   when it predicts a match. Specifically, it measures how well the
--   transform finds true positives from the total true positives possible.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
findMatchesMetrics_precision :: Lens' FindMatchesMetrics (Maybe Double)

-- | A list of <tt>ColumnImportance</tt> structures containing column
--   importance metrics, sorted in order of descending importance.
findMatchesMetrics_columnImportances :: Lens' FindMatchesMetrics (Maybe [ColumnImportance])

-- | The confusion matrix shows you what your transform is predicting
--   accurately and what types of errors it is making.
--   
--   For more information, see <a>Confusion matrix</a> in Wikipedia.
findMatchesMetrics_confusionMatrix :: Lens' FindMatchesMetrics (Maybe ConfusionMatrix)

-- | The parameters to configure the find matches transform.
--   
--   <i>See:</i> <a>newFindMatchesParameters</a> smart constructor.
data FindMatchesParameters
FindMatchesParameters' :: Maybe Bool -> Maybe Double -> Maybe Double -> Maybe Text -> FindMatchesParameters

-- | The value to switch on or off to force the output to match the
--   provided labels from users. If the value is <tt>True</tt>, the
--   <tt>find matches</tt> transform forces the output to match the
--   provided labels. The results override the normal conflation results.
--   If the value is <tt>False</tt>, the <tt>find matches</tt> transform
--   does not ensure all the labels provided are respected, and the results
--   rely on the trained model.
--   
--   Note that setting this value to true may increase the conflation
--   execution time.
[$sel:enforceProvidedLabels:FindMatchesParameters'] :: FindMatchesParameters -> Maybe Bool

-- | The value that is selected when tuning your transform for a balance
--   between accuracy and cost. A value of 0.5 means that the system
--   balances accuracy and cost concerns. A value of 1.0 means a bias
--   purely for accuracy, which typically results in a higher cost,
--   sometimes substantially higher. A value of 0.0 means a bias purely for
--   cost, which results in a less accurate <tt>FindMatches</tt> transform,
--   sometimes with unacceptable accuracy.
--   
--   Accuracy measures how well the transform finds true positives and true
--   negatives. Increasing accuracy requires more machine resources and
--   cost. But it also results in increased recall.
--   
--   Cost measures how many compute resources, and thus money, are consumed
--   to run the transform.
[$sel:accuracyCostTradeoff:FindMatchesParameters'] :: FindMatchesParameters -> Maybe Double

-- | The value selected when tuning your transform for a balance between
--   precision and recall. A value of 0.5 means no preference; a value of
--   1.0 means a bias purely for precision, and a value of 0.0 means a bias
--   for recall. Because this is a tradeoff, choosing values close to 1.0
--   means very low recall, and choosing values close to 0.0 results in
--   very low precision.
--   
--   The precision metric indicates how often your model is correct when it
--   predicts a match.
--   
--   The recall metric indicates that for an actual match, how often your
--   model predicts the match.
[$sel:precisionRecallTradeoff:FindMatchesParameters'] :: FindMatchesParameters -> Maybe Double

-- | The name of a column that uniquely identifies rows in the source
--   table. Used to help identify matching records.
[$sel:primaryKeyColumnName:FindMatchesParameters'] :: FindMatchesParameters -> Maybe Text

-- | Create a value of <a>FindMatchesParameters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enforceProvidedLabels:FindMatchesParameters'</a>,
--   <a>findMatchesParameters_enforceProvidedLabels</a> - The value to
--   switch on or off to force the output to match the provided labels from
--   users. If the value is <tt>True</tt>, the <tt>find matches</tt>
--   transform forces the output to match the provided labels. The results
--   override the normal conflation results. If the value is
--   <tt>False</tt>, the <tt>find matches</tt> transform does not ensure
--   all the labels provided are respected, and the results rely on the
--   trained model.
--   
--   Note that setting this value to true may increase the conflation
--   execution time.
--   
--   <a>$sel:accuracyCostTradeoff:FindMatchesParameters'</a>,
--   <a>findMatchesParameters_accuracyCostTradeoff</a> - The value that is
--   selected when tuning your transform for a balance between accuracy and
--   cost. A value of 0.5 means that the system balances accuracy and cost
--   concerns. A value of 1.0 means a bias purely for accuracy, which
--   typically results in a higher cost, sometimes substantially higher. A
--   value of 0.0 means a bias purely for cost, which results in a less
--   accurate <tt>FindMatches</tt> transform, sometimes with unacceptable
--   accuracy.
--   
--   Accuracy measures how well the transform finds true positives and true
--   negatives. Increasing accuracy requires more machine resources and
--   cost. But it also results in increased recall.
--   
--   Cost measures how many compute resources, and thus money, are consumed
--   to run the transform.
--   
--   <a>$sel:precisionRecallTradeoff:FindMatchesParameters'</a>,
--   <a>findMatchesParameters_precisionRecallTradeoff</a> - The value
--   selected when tuning your transform for a balance between precision
--   and recall. A value of 0.5 means no preference; a value of 1.0 means a
--   bias purely for precision, and a value of 0.0 means a bias for recall.
--   Because this is a tradeoff, choosing values close to 1.0 means very
--   low recall, and choosing values close to 0.0 results in very low
--   precision.
--   
--   The precision metric indicates how often your model is correct when it
--   predicts a match.
--   
--   The recall metric indicates that for an actual match, how often your
--   model predicts the match.
--   
--   <a>$sel:primaryKeyColumnName:FindMatchesParameters'</a>,
--   <a>findMatchesParameters_primaryKeyColumnName</a> - The name of a
--   column that uniquely identifies rows in the source table. Used to help
--   identify matching records.
newFindMatchesParameters :: FindMatchesParameters

-- | The value to switch on or off to force the output to match the
--   provided labels from users. If the value is <tt>True</tt>, the
--   <tt>find matches</tt> transform forces the output to match the
--   provided labels. The results override the normal conflation results.
--   If the value is <tt>False</tt>, the <tt>find matches</tt> transform
--   does not ensure all the labels provided are respected, and the results
--   rely on the trained model.
--   
--   Note that setting this value to true may increase the conflation
--   execution time.
findMatchesParameters_enforceProvidedLabels :: Lens' FindMatchesParameters (Maybe Bool)

-- | The value that is selected when tuning your transform for a balance
--   between accuracy and cost. A value of 0.5 means that the system
--   balances accuracy and cost concerns. A value of 1.0 means a bias
--   purely for accuracy, which typically results in a higher cost,
--   sometimes substantially higher. A value of 0.0 means a bias purely for
--   cost, which results in a less accurate <tt>FindMatches</tt> transform,
--   sometimes with unacceptable accuracy.
--   
--   Accuracy measures how well the transform finds true positives and true
--   negatives. Increasing accuracy requires more machine resources and
--   cost. But it also results in increased recall.
--   
--   Cost measures how many compute resources, and thus money, are consumed
--   to run the transform.
findMatchesParameters_accuracyCostTradeoff :: Lens' FindMatchesParameters (Maybe Double)

-- | The value selected when tuning your transform for a balance between
--   precision and recall. A value of 0.5 means no preference; a value of
--   1.0 means a bias purely for precision, and a value of 0.0 means a bias
--   for recall. Because this is a tradeoff, choosing values close to 1.0
--   means very low recall, and choosing values close to 0.0 results in
--   very low precision.
--   
--   The precision metric indicates how often your model is correct when it
--   predicts a match.
--   
--   The recall metric indicates that for an actual match, how often your
--   model predicts the match.
findMatchesParameters_precisionRecallTradeoff :: Lens' FindMatchesParameters (Maybe Double)

-- | The name of a column that uniquely identifies rows in the source
--   table. Used to help identify matching records.
findMatchesParameters_primaryKeyColumnName :: Lens' FindMatchesParameters (Maybe Text)

-- | Specifies configuration properties for a Find Matches task run.
--   
--   <i>See:</i> <a>newFindMatchesTaskRunProperties</a> smart constructor.
data FindMatchesTaskRunProperties
FindMatchesTaskRunProperties' :: Maybe Text -> Maybe Text -> Maybe Text -> FindMatchesTaskRunProperties

-- | The job ID for the Find Matches task run.
[$sel:jobId:FindMatchesTaskRunProperties'] :: FindMatchesTaskRunProperties -> Maybe Text

-- | The name assigned to the job for the Find Matches task run.
[$sel:jobName:FindMatchesTaskRunProperties'] :: FindMatchesTaskRunProperties -> Maybe Text

-- | The job run ID for the Find Matches task run.
[$sel:jobRunId:FindMatchesTaskRunProperties'] :: FindMatchesTaskRunProperties -> Maybe Text

-- | Create a value of <a>FindMatchesTaskRunProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:FindMatchesTaskRunProperties'</a>,
--   <a>findMatchesTaskRunProperties_jobId</a> - The job ID for the Find
--   Matches task run.
--   
--   <a>$sel:jobName:FindMatchesTaskRunProperties'</a>,
--   <a>findMatchesTaskRunProperties_jobName</a> - The name assigned to the
--   job for the Find Matches task run.
--   
--   <a>$sel:jobRunId:FindMatchesTaskRunProperties'</a>,
--   <a>findMatchesTaskRunProperties_jobRunId</a> - The job run ID for the
--   Find Matches task run.
newFindMatchesTaskRunProperties :: FindMatchesTaskRunProperties

-- | The job ID for the Find Matches task run.
findMatchesTaskRunProperties_jobId :: Lens' FindMatchesTaskRunProperties (Maybe Text)

-- | The name assigned to the job for the Find Matches task run.
findMatchesTaskRunProperties_jobName :: Lens' FindMatchesTaskRunProperties (Maybe Text)

-- | The job run ID for the Find Matches task run.
findMatchesTaskRunProperties_jobRunId :: Lens' FindMatchesTaskRunProperties (Maybe Text)

-- | Filters the connection definitions that are returned by the
--   <tt>GetConnections</tt> API operation.
--   
--   <i>See:</i> <a>newGetConnectionsFilter</a> smart constructor.
data GetConnectionsFilter
GetConnectionsFilter' :: Maybe [Text] -> Maybe ConnectionType -> GetConnectionsFilter

-- | A criteria string that must match the criteria recorded in the
--   connection definition for that connection definition to be returned.
[$sel:matchCriteria:GetConnectionsFilter'] :: GetConnectionsFilter -> Maybe [Text]

-- | The type of connections to return. Currently, SFTP is not supported.
[$sel:connectionType:GetConnectionsFilter'] :: GetConnectionsFilter -> Maybe ConnectionType

-- | Create a value of <a>GetConnectionsFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:matchCriteria:GetConnectionsFilter'</a>,
--   <a>getConnectionsFilter_matchCriteria</a> - A criteria string that
--   must match the criteria recorded in the connection definition for that
--   connection definition to be returned.
--   
--   <a>$sel:connectionType:GetConnectionsFilter'</a>,
--   <a>getConnectionsFilter_connectionType</a> - The type of connections
--   to return. Currently, SFTP is not supported.
newGetConnectionsFilter :: GetConnectionsFilter

-- | A criteria string that must match the criteria recorded in the
--   connection definition for that connection definition to be returned.
getConnectionsFilter_matchCriteria :: Lens' GetConnectionsFilter (Maybe [Text])

-- | The type of connections to return. Currently, SFTP is not supported.
getConnectionsFilter_connectionType :: Lens' GetConnectionsFilter (Maybe ConnectionType)

-- | A structure for returning a resource policy.
--   
--   <i>See:</i> <a>newGluePolicy</a> smart constructor.
data GluePolicy
GluePolicy' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> GluePolicy

-- | Contains the requested policy document, in JSON format.
[$sel:policyInJson:GluePolicy'] :: GluePolicy -> Maybe Text

-- | The date and time at which the policy was last updated.
[$sel:updateTime:GluePolicy'] :: GluePolicy -> Maybe POSIX

-- | Contains the hash value associated with this policy.
[$sel:policyHash:GluePolicy'] :: GluePolicy -> Maybe Text

-- | The date and time at which the policy was created.
[$sel:createTime:GluePolicy'] :: GluePolicy -> Maybe POSIX

-- | Create a value of <a>GluePolicy</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyInJson:GluePolicy'</a>, <a>gluePolicy_policyInJson</a> -
--   Contains the requested policy document, in JSON format.
--   
--   <a>$sel:updateTime:GluePolicy'</a>, <a>gluePolicy_updateTime</a> - The
--   date and time at which the policy was last updated.
--   
--   <a>$sel:policyHash:GluePolicy'</a>, <a>gluePolicy_policyHash</a> -
--   Contains the hash value associated with this policy.
--   
--   <a>$sel:createTime:GluePolicy'</a>, <a>gluePolicy_createTime</a> - The
--   date and time at which the policy was created.
newGluePolicy :: GluePolicy

-- | Contains the requested policy document, in JSON format.
gluePolicy_policyInJson :: Lens' GluePolicy (Maybe Text)

-- | The date and time at which the policy was last updated.
gluePolicy_updateTime :: Lens' GluePolicy (Maybe UTCTime)

-- | Contains the hash value associated with this policy.
gluePolicy_policyHash :: Lens' GluePolicy (Maybe Text)

-- | The date and time at which the policy was created.
gluePolicy_createTime :: Lens' GluePolicy (Maybe UTCTime)

-- | The database and table in the Glue Data Catalog that is used for input
--   or output data.
--   
--   <i>See:</i> <a>newGlueTable</a> smart constructor.
data GlueTable
GlueTable' :: Maybe Text -> Maybe Text -> Text -> Text -> GlueTable

-- | A unique identifier for the Glue Data Catalog.
[$sel:catalogId:GlueTable'] :: GlueTable -> Maybe Text

-- | The name of the connection to the Glue Data Catalog.
[$sel:connectionName:GlueTable'] :: GlueTable -> Maybe Text

-- | A database name in the Glue Data Catalog.
[$sel:databaseName:GlueTable'] :: GlueTable -> Text

-- | A table name in the Glue Data Catalog.
[$sel:tableName:GlueTable'] :: GlueTable -> Text

-- | Create a value of <a>GlueTable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GlueTable'</a>, <a>glueTable_catalogId</a> - A
--   unique identifier for the Glue Data Catalog.
--   
--   <a>$sel:connectionName:GlueTable'</a>, <a>glueTable_connectionName</a>
--   - The name of the connection to the Glue Data Catalog.
--   
--   <a>$sel:databaseName:GlueTable'</a>, <a>glueTable_databaseName</a> - A
--   database name in the Glue Data Catalog.
--   
--   <a>$sel:tableName:GlueTable'</a>, <a>glueTable_tableName</a> - A table
--   name in the Glue Data Catalog.
newGlueTable :: Text -> Text -> GlueTable

-- | A unique identifier for the Glue Data Catalog.
glueTable_catalogId :: Lens' GlueTable (Maybe Text)

-- | The name of the connection to the Glue Data Catalog.
glueTable_connectionName :: Lens' GlueTable (Maybe Text)

-- | A database name in the Glue Data Catalog.
glueTable_databaseName :: Lens' GlueTable Text

-- | A table name in the Glue Data Catalog.
glueTable_tableName :: Lens' GlueTable Text

-- | A classifier that uses <tt>grok</tt> patterns.
--   
--   <i>See:</i> <a>newGrokClassifier</a> smart constructor.
data GrokClassifier
GrokClassifier' :: Maybe POSIX -> Maybe POSIX -> Maybe Integer -> Maybe Text -> Text -> Text -> Text -> GrokClassifier

-- | The time that this classifier was registered.
[$sel:creationTime:GrokClassifier'] :: GrokClassifier -> Maybe POSIX

-- | The time that this classifier was last updated.
[$sel:lastUpdated:GrokClassifier'] :: GrokClassifier -> Maybe POSIX

-- | The version of this classifier.
[$sel:version:GrokClassifier'] :: GrokClassifier -> Maybe Integer

-- | Optional custom grok patterns defined by this classifier. For more
--   information, see custom patterns in <a>Writing Custom Classifiers</a>.
[$sel:customPatterns:GrokClassifier'] :: GrokClassifier -> Maybe Text

-- | The name of the classifier.
[$sel:name:GrokClassifier'] :: GrokClassifier -> Text

-- | An identifier of the data format that the classifier matches, such as
--   Twitter, JSON, Omniture logs, and so on.
[$sel:classification:GrokClassifier'] :: GrokClassifier -> Text

-- | The grok pattern applied to a data store by this classifier. For more
--   information, see built-in patterns in <a>Writing Custom
--   Classifiers</a>.
[$sel:grokPattern:GrokClassifier'] :: GrokClassifier -> Text

-- | Create a value of <a>GrokClassifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:GrokClassifier'</a>,
--   <a>grokClassifier_creationTime</a> - The time that this classifier was
--   registered.
--   
--   <a>$sel:lastUpdated:GrokClassifier'</a>,
--   <a>grokClassifier_lastUpdated</a> - The time that this classifier was
--   last updated.
--   
--   <a>$sel:version:GrokClassifier'</a>, <a>grokClassifier_version</a> -
--   The version of this classifier.
--   
--   <a>$sel:customPatterns:GrokClassifier'</a>,
--   <a>grokClassifier_customPatterns</a> - Optional custom grok patterns
--   defined by this classifier. For more information, see custom patterns
--   in <a>Writing Custom Classifiers</a>.
--   
--   <a>$sel:name:GrokClassifier'</a>, <a>grokClassifier_name</a> - The
--   name of the classifier.
--   
--   <a>$sel:classification:GrokClassifier'</a>,
--   <a>grokClassifier_classification</a> - An identifier of the data
--   format that the classifier matches, such as Twitter, JSON, Omniture
--   logs, and so on.
--   
--   <a>$sel:grokPattern:GrokClassifier'</a>,
--   <a>grokClassifier_grokPattern</a> - The grok pattern applied to a data
--   store by this classifier. For more information, see built-in patterns
--   in <a>Writing Custom Classifiers</a>.
newGrokClassifier :: Text -> Text -> Text -> GrokClassifier

-- | The time that this classifier was registered.
grokClassifier_creationTime :: Lens' GrokClassifier (Maybe UTCTime)

-- | The time that this classifier was last updated.
grokClassifier_lastUpdated :: Lens' GrokClassifier (Maybe UTCTime)

-- | The version of this classifier.
grokClassifier_version :: Lens' GrokClassifier (Maybe Integer)

-- | Optional custom grok patterns defined by this classifier. For more
--   information, see custom patterns in <a>Writing Custom Classifiers</a>.
grokClassifier_customPatterns :: Lens' GrokClassifier (Maybe Text)

-- | The name of the classifier.
grokClassifier_name :: Lens' GrokClassifier Text

-- | An identifier of the data format that the classifier matches, such as
--   Twitter, JSON, Omniture logs, and so on.
grokClassifier_classification :: Lens' GrokClassifier Text

-- | The grok pattern applied to a data store by this classifier. For more
--   information, see built-in patterns in <a>Writing Custom
--   Classifiers</a>.
grokClassifier_grokPattern :: Lens' GrokClassifier Text

-- | Specifies configuration properties for an importing labels task run.
--   
--   <i>See:</i> <a>newImportLabelsTaskRunProperties</a> smart constructor.
data ImportLabelsTaskRunProperties
ImportLabelsTaskRunProperties' :: Maybe Bool -> Maybe Text -> ImportLabelsTaskRunProperties

-- | Indicates whether to overwrite your existing labels.
[$sel:replace:ImportLabelsTaskRunProperties'] :: ImportLabelsTaskRunProperties -> Maybe Bool

-- | The Amazon Simple Storage Service (Amazon S3) path from where you will
--   import the labels.
[$sel:inputS3Path:ImportLabelsTaskRunProperties'] :: ImportLabelsTaskRunProperties -> Maybe Text

-- | Create a value of <a>ImportLabelsTaskRunProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replace:ImportLabelsTaskRunProperties'</a>,
--   <a>importLabelsTaskRunProperties_replace</a> - Indicates whether to
--   overwrite your existing labels.
--   
--   <a>$sel:inputS3Path:ImportLabelsTaskRunProperties'</a>,
--   <a>importLabelsTaskRunProperties_inputS3Path</a> - The Amazon Simple
--   Storage Service (Amazon S3) path from where you will import the
--   labels.
newImportLabelsTaskRunProperties :: ImportLabelsTaskRunProperties

-- | Indicates whether to overwrite your existing labels.
importLabelsTaskRunProperties_replace :: Lens' ImportLabelsTaskRunProperties (Maybe Bool)

-- | The Amazon Simple Storage Service (Amazon S3) path from where you will
--   import the labels.
importLabelsTaskRunProperties_inputS3Path :: Lens' ImportLabelsTaskRunProperties (Maybe Text)

-- | Specifies a JDBC data store to crawl.
--   
--   <i>See:</i> <a>newJdbcTarget</a> smart constructor.
data JdbcTarget
JdbcTarget' :: Maybe Text -> Maybe Text -> Maybe [Text] -> JdbcTarget

-- | The path of the JDBC target.
[$sel:path:JdbcTarget'] :: JdbcTarget -> Maybe Text

-- | The name of the connection to use to connect to the JDBC target.
[$sel:connectionName:JdbcTarget'] :: JdbcTarget -> Maybe Text

-- | A list of glob patterns used to exclude from the crawl. For more
--   information, see <a>Catalog Tables with a Crawler</a>.
[$sel:exclusions:JdbcTarget'] :: JdbcTarget -> Maybe [Text]

-- | Create a value of <a>JdbcTarget</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:JdbcTarget'</a>, <a>jdbcTarget_path</a> - The path of the
--   JDBC target.
--   
--   <a>$sel:connectionName:JdbcTarget'</a>,
--   <a>jdbcTarget_connectionName</a> - The name of the connection to use
--   to connect to the JDBC target.
--   
--   <a>$sel:exclusions:JdbcTarget'</a>, <a>jdbcTarget_exclusions</a> - A
--   list of glob patterns used to exclude from the crawl. For more
--   information, see <a>Catalog Tables with a Crawler</a>.
newJdbcTarget :: JdbcTarget

-- | The path of the JDBC target.
jdbcTarget_path :: Lens' JdbcTarget (Maybe Text)

-- | The name of the connection to use to connect to the JDBC target.
jdbcTarget_connectionName :: Lens' JdbcTarget (Maybe Text)

-- | A list of glob patterns used to exclude from the crawl. For more
--   information, see <a>Catalog Tables with a Crawler</a>.
jdbcTarget_exclusions :: Lens' JdbcTarget (Maybe [Text])

-- | Specifies a job definition.
--   
--   <i>See:</i> <a>newJob</a> smart constructor.
data Job
Job' :: Maybe Int -> Maybe JobCommand -> Maybe NotificationProperty -> Maybe POSIX -> Maybe ConnectionsList -> Maybe WorkerType -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe ExecutionProperty -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe POSIX -> Job

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
[$sel:numberOfWorkers:Job'] :: Job -> Maybe Int

-- | The <tt>JobCommand</tt> that runs this job.
[$sel:command:Job'] :: Job -> Maybe JobCommand

-- | Specifies configuration properties of a job notification.
[$sel:notificationProperty:Job'] :: Job -> Maybe NotificationProperty

-- | The last point in time when this job definition was modified.
[$sel:lastModifiedOn:Job'] :: Job -> Maybe POSIX

-- | The connections used for this job.
[$sel:connections:Job'] :: Job -> Maybe ConnectionsList

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
[$sel:workerType:Job'] :: Job -> Maybe WorkerType

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job.
[$sel:securityConfiguration:Job'] :: Job -> Maybe Text

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
[$sel:glueVersion:Job'] :: Job -> Maybe Text

-- | Non-overridable arguments for this job, specified as name-value pairs.
[$sel:nonOverridableArguments:Job'] :: Job -> Maybe (HashMap Text Text)

-- | The name or Amazon Resource Name (ARN) of the IAM role associated with
--   this job.
[$sel:role':Job'] :: Job -> Maybe Text

-- | The name you assign to this job definition.
[$sel:name:Job'] :: Job -> Maybe Text

-- | This field is reserved for future use.
[$sel:logUri:Job'] :: Job -> Maybe Text

-- | The maximum number of times to retry this job after a JobRun fails.
[$sel:maxRetries:Job'] :: Job -> Maybe Int

-- | An <tt>ExecutionProperty</tt> specifying the maximum number of
--   concurrent runs allowed for this job.
[$sel:executionProperty:Job'] :: Job -> Maybe ExecutionProperty

-- | This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) allocated to runs of
--   this job. You can allocate from 2 to 100 DPUs; the default is 10. A
--   DPU is a relative measure of processing power that consists of 4 vCPUs
--   of compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
[$sel:allocatedCapacity:Job'] :: Job -> Maybe Int

-- | For Glue version 1.0 or earlier jobs, using the standard worker type,
--   the number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job, an Apache Spark ETL job,
--   or an Apache Spark streaming ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
[$sel:maxCapacity:Job'] :: Job -> Maybe Double

-- | The job timeout in minutes. This is the maximum time that a job run
--   can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours).
[$sel:timeout:Job'] :: Job -> Maybe Natural

-- | The default arguments for this job, specified as name-value pairs.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
[$sel:defaultArguments:Job'] :: Job -> Maybe (HashMap Text Text)

-- | A description of the job.
[$sel:description:Job'] :: Job -> Maybe Text

-- | The time and date that this job definition was created.
[$sel:createdOn:Job'] :: Job -> Maybe POSIX

-- | Create a value of <a>Job</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfWorkers:Job'</a>, <a>job_numberOfWorkers</a> - The
--   number of workers of a defined <tt>workerType</tt> that are allocated
--   when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
--   
--   <a>$sel:command:Job'</a>, <a>job_command</a> - The <tt>JobCommand</tt>
--   that runs this job.
--   
--   <a>$sel:notificationProperty:Job'</a>, <a>job_notificationProperty</a>
--   - Specifies configuration properties of a job notification.
--   
--   <a>$sel:lastModifiedOn:Job'</a>, <a>job_lastModifiedOn</a> - The last
--   point in time when this job definition was modified.
--   
--   <a>$sel:connections:Job'</a>, <a>job_connections</a> - The connections
--   used for this job.
--   
--   <a>$sel:workerType:Job'</a>, <a>job_workerType</a> - The type of
--   predefined worker that is allocated when a job runs. Accepts a value
--   of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   <a>$sel:securityConfiguration:Job'</a>,
--   <a>job_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this job.
--   
--   <a>$sel:glueVersion:Job'</a>, <a>job_glueVersion</a> - Glue version
--   determines the versions of Apache Spark and Python that Glue supports.
--   The Python version indicates the version supported for jobs of type
--   Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
--   
--   <a>$sel:nonOverridableArguments:Job'</a>,
--   <a>job_nonOverridableArguments</a> - Non-overridable arguments for
--   this job, specified as name-value pairs.
--   
--   <a>$sel:role':Job'</a>, <a>job_role</a> - The name or Amazon Resource
--   Name (ARN) of the IAM role associated with this job.
--   
--   <a>$sel:name:Job'</a>, <a>job_name</a> - The name you assign to this
--   job definition.
--   
--   <a>$sel:logUri:Job'</a>, <a>job_logUri</a> - This field is reserved
--   for future use.
--   
--   <a>$sel:maxRetries:Job'</a>, <a>job_maxRetries</a> - The maximum
--   number of times to retry this job after a JobRun fails.
--   
--   <a>$sel:executionProperty:Job'</a>, <a>job_executionProperty</a> - An
--   <tt>ExecutionProperty</tt> specifying the maximum number of concurrent
--   runs allowed for this job.
--   
--   <a>$sel:allocatedCapacity:Job'</a>, <a>job_allocatedCapacity</a> -
--   This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) allocated to runs of
--   this job. You can allocate from 2 to 100 DPUs; the default is 10. A
--   DPU is a relative measure of processing power that consists of 4 vCPUs
--   of compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
--   
--   <a>$sel:maxCapacity:Job'</a>, <a>job_maxCapacity</a> - For Glue
--   version 1.0 or earlier jobs, using the standard worker type, the
--   number of Glue data processing units (DPUs) that can be allocated when
--   this job runs. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job, an Apache Spark ETL job,
--   or an Apache Spark streaming ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
--   
--   <a>$sel:timeout:Job'</a>, <a>job_timeout</a> - The job timeout in
--   minutes. This is the maximum time that a job run can consume resources
--   before it is terminated and enters <tt>TIMEOUT</tt> status. The
--   default is 2,880 minutes (48 hours).
--   
--   <a>$sel:defaultArguments:Job'</a>, <a>job_defaultArguments</a> - The
--   default arguments for this job, specified as name-value pairs.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
--   
--   <a>$sel:description:Job'</a>, <a>job_description</a> - A description
--   of the job.
--   
--   <a>$sel:createdOn:Job'</a>, <a>job_createdOn</a> - The time and date
--   that this job definition was created.
newJob :: Job

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
job_numberOfWorkers :: Lens' Job (Maybe Int)

-- | The <tt>JobCommand</tt> that runs this job.
job_command :: Lens' Job (Maybe JobCommand)

-- | Specifies configuration properties of a job notification.
job_notificationProperty :: Lens' Job (Maybe NotificationProperty)

-- | The last point in time when this job definition was modified.
job_lastModifiedOn :: Lens' Job (Maybe UTCTime)

-- | The connections used for this job.
job_connections :: Lens' Job (Maybe ConnectionsList)

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
job_workerType :: Lens' Job (Maybe WorkerType)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job.
job_securityConfiguration :: Lens' Job (Maybe Text)

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
job_glueVersion :: Lens' Job (Maybe Text)

-- | Non-overridable arguments for this job, specified as name-value pairs.
job_nonOverridableArguments :: Lens' Job (Maybe (HashMap Text Text))

-- | The name or Amazon Resource Name (ARN) of the IAM role associated with
--   this job.
job_role :: Lens' Job (Maybe Text)

-- | The name you assign to this job definition.
job_name :: Lens' Job (Maybe Text)

-- | This field is reserved for future use.
job_logUri :: Lens' Job (Maybe Text)

-- | The maximum number of times to retry this job after a JobRun fails.
job_maxRetries :: Lens' Job (Maybe Int)

-- | An <tt>ExecutionProperty</tt> specifying the maximum number of
--   concurrent runs allowed for this job.
job_executionProperty :: Lens' Job (Maybe ExecutionProperty)

-- | This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) allocated to runs of
--   this job. You can allocate from 2 to 100 DPUs; the default is 10. A
--   DPU is a relative measure of processing power that consists of 4 vCPUs
--   of compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
job_allocatedCapacity :: Lens' Job (Maybe Int)

-- | For Glue version 1.0 or earlier jobs, using the standard worker type,
--   the number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job, an Apache Spark ETL job,
--   or an Apache Spark streaming ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
job_maxCapacity :: Lens' Job (Maybe Double)

-- | The job timeout in minutes. This is the maximum time that a job run
--   can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours).
job_timeout :: Lens' Job (Maybe Natural)

-- | The default arguments for this job, specified as name-value pairs.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
job_defaultArguments :: Lens' Job (Maybe (HashMap Text Text))

-- | A description of the job.
job_description :: Lens' Job (Maybe Text)

-- | The time and date that this job definition was created.
job_createdOn :: Lens' Job (Maybe UTCTime)

-- | Defines a point that a job can resume processing.
--   
--   <i>See:</i> <a>newJobBookmarkEntry</a> smart constructor.
data JobBookmarkEntry
JobBookmarkEntry' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Text -> JobBookmarkEntry

-- | The name of the job in question.
[$sel:jobName:JobBookmarkEntry'] :: JobBookmarkEntry -> Maybe Text

-- | The run ID number.
[$sel:run:JobBookmarkEntry'] :: JobBookmarkEntry -> Maybe Int

-- | The run ID number.
[$sel:runId:JobBookmarkEntry'] :: JobBookmarkEntry -> Maybe Text

-- | The version of the job.
[$sel:version:JobBookmarkEntry'] :: JobBookmarkEntry -> Maybe Int

-- | The unique run identifier associated with the previous job run.
[$sel:previousRunId:JobBookmarkEntry'] :: JobBookmarkEntry -> Maybe Text

-- | The attempt ID number.
[$sel:attempt:JobBookmarkEntry'] :: JobBookmarkEntry -> Maybe Int

-- | The bookmark itself.
[$sel:jobBookmark:JobBookmarkEntry'] :: JobBookmarkEntry -> Maybe Text

-- | Create a value of <a>JobBookmarkEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:JobBookmarkEntry'</a>, <a>jobBookmarkEntry_jobName</a>
--   - The name of the job in question.
--   
--   <a>$sel:run:JobBookmarkEntry'</a>, <a>jobBookmarkEntry_run</a> - The
--   run ID number.
--   
--   <a>$sel:runId:JobBookmarkEntry'</a>, <a>jobBookmarkEntry_runId</a> -
--   The run ID number.
--   
--   <a>$sel:version:JobBookmarkEntry'</a>, <a>jobBookmarkEntry_version</a>
--   - The version of the job.
--   
--   <a>$sel:previousRunId:JobBookmarkEntry'</a>,
--   <a>jobBookmarkEntry_previousRunId</a> - The unique run identifier
--   associated with the previous job run.
--   
--   <a>$sel:attempt:JobBookmarkEntry'</a>, <a>jobBookmarkEntry_attempt</a>
--   - The attempt ID number.
--   
--   <a>$sel:jobBookmark:JobBookmarkEntry'</a>,
--   <a>jobBookmarkEntry_jobBookmark</a> - The bookmark itself.
newJobBookmarkEntry :: JobBookmarkEntry

-- | The name of the job in question.
jobBookmarkEntry_jobName :: Lens' JobBookmarkEntry (Maybe Text)

-- | The run ID number.
jobBookmarkEntry_run :: Lens' JobBookmarkEntry (Maybe Int)

-- | The run ID number.
jobBookmarkEntry_runId :: Lens' JobBookmarkEntry (Maybe Text)

-- | The version of the job.
jobBookmarkEntry_version :: Lens' JobBookmarkEntry (Maybe Int)

-- | The unique run identifier associated with the previous job run.
jobBookmarkEntry_previousRunId :: Lens' JobBookmarkEntry (Maybe Text)

-- | The attempt ID number.
jobBookmarkEntry_attempt :: Lens' JobBookmarkEntry (Maybe Int)

-- | The bookmark itself.
jobBookmarkEntry_jobBookmark :: Lens' JobBookmarkEntry (Maybe Text)

-- | Specifies how job bookmark data should be encrypted.
--   
--   <i>See:</i> <a>newJobBookmarksEncryption</a> smart constructor.
data JobBookmarksEncryption
JobBookmarksEncryption' :: Maybe JobBookmarksEncryptionMode -> Maybe Text -> JobBookmarksEncryption

-- | The encryption mode to use for job bookmarks data.
[$sel:jobBookmarksEncryptionMode:JobBookmarksEncryption'] :: JobBookmarksEncryption -> Maybe JobBookmarksEncryptionMode

-- | The Amazon Resource Name (ARN) of the KMS key to be used to encrypt
--   the data.
[$sel:kmsKeyArn:JobBookmarksEncryption'] :: JobBookmarksEncryption -> Maybe Text

-- | Create a value of <a>JobBookmarksEncryption</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobBookmarksEncryptionMode:JobBookmarksEncryption'</a>,
--   <a>jobBookmarksEncryption_jobBookmarksEncryptionMode</a> - The
--   encryption mode to use for job bookmarks data.
--   
--   <a>$sel:kmsKeyArn:JobBookmarksEncryption'</a>,
--   <a>jobBookmarksEncryption_kmsKeyArn</a> - The Amazon Resource Name
--   (ARN) of the KMS key to be used to encrypt the data.
newJobBookmarksEncryption :: JobBookmarksEncryption

-- | The encryption mode to use for job bookmarks data.
jobBookmarksEncryption_jobBookmarksEncryptionMode :: Lens' JobBookmarksEncryption (Maybe JobBookmarksEncryptionMode)

-- | The Amazon Resource Name (ARN) of the KMS key to be used to encrypt
--   the data.
jobBookmarksEncryption_kmsKeyArn :: Lens' JobBookmarksEncryption (Maybe Text)

-- | Specifies code that runs when a job is run.
--   
--   <i>See:</i> <a>newJobCommand</a> smart constructor.
data JobCommand
JobCommand' :: Maybe Text -> Maybe Text -> Maybe Text -> JobCommand

-- | Specifies the Amazon Simple Storage Service (Amazon S3) path to a
--   script that runs a job.
[$sel:scriptLocation:JobCommand'] :: JobCommand -> Maybe Text

-- | The Python version being used to run a Python shell job. Allowed
--   values are 2 or 3.
[$sel:pythonVersion:JobCommand'] :: JobCommand -> Maybe Text

-- | The name of the job command. For an Apache Spark ETL job, this must be
--   <tt>glueetl</tt>. For a Python shell job, it must be
--   <tt>pythonshell</tt>. For an Apache Spark streaming ETL job, this must
--   be <tt>gluestreaming</tt>.
[$sel:name:JobCommand'] :: JobCommand -> Maybe Text

-- | Create a value of <a>JobCommand</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scriptLocation:JobCommand'</a>,
--   <a>jobCommand_scriptLocation</a> - Specifies the Amazon Simple Storage
--   Service (Amazon S3) path to a script that runs a job.
--   
--   <a>$sel:pythonVersion:JobCommand'</a>, <a>jobCommand_pythonVersion</a>
--   - The Python version being used to run a Python shell job. Allowed
--   values are 2 or 3.
--   
--   <a>$sel:name:JobCommand'</a>, <a>jobCommand_name</a> - The name of the
--   job command. For an Apache Spark ETL job, this must be
--   <tt>glueetl</tt>. For a Python shell job, it must be
--   <tt>pythonshell</tt>. For an Apache Spark streaming ETL job, this must
--   be <tt>gluestreaming</tt>.
newJobCommand :: JobCommand

-- | Specifies the Amazon Simple Storage Service (Amazon S3) path to a
--   script that runs a job.
jobCommand_scriptLocation :: Lens' JobCommand (Maybe Text)

-- | The Python version being used to run a Python shell job. Allowed
--   values are 2 or 3.
jobCommand_pythonVersion :: Lens' JobCommand (Maybe Text)

-- | The name of the job command. For an Apache Spark ETL job, this must be
--   <tt>glueetl</tt>. For a Python shell job, it must be
--   <tt>pythonshell</tt>. For an Apache Spark streaming ETL job, this must
--   be <tt>gluestreaming</tt>.
jobCommand_name :: Lens' JobCommand (Maybe Text)

-- | The details of a Job node present in the workflow.
--   
--   <i>See:</i> <a>newJobNodeDetails</a> smart constructor.
data JobNodeDetails
JobNodeDetails' :: Maybe [JobRun] -> JobNodeDetails

-- | The information for the job runs represented by the job node.
[$sel:jobRuns:JobNodeDetails'] :: JobNodeDetails -> Maybe [JobRun]

-- | Create a value of <a>JobNodeDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobRuns:JobNodeDetails'</a>, <a>jobNodeDetails_jobRuns</a> -
--   The information for the job runs represented by the job node.
newJobNodeDetails :: JobNodeDetails

-- | The information for the job runs represented by the job node.
jobNodeDetails_jobRuns :: Lens' JobNodeDetails (Maybe [JobRun])

-- | Contains information about a job run.
--   
--   <i>See:</i> <a>newJobRun</a> smart constructor.
data JobRun
JobRun' :: Maybe POSIX -> Maybe Int -> Maybe Text -> Maybe NotificationProperty -> Maybe POSIX -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe POSIX -> Maybe WorkerType -> Maybe Text -> Maybe Text -> Maybe JobRunState -> Maybe Text -> Maybe Int -> Maybe [Predecessor] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe Text -> JobRun

-- | The date and time that this job run completed.
[$sel:completedOn:JobRun'] :: JobRun -> Maybe POSIX

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
[$sel:numberOfWorkers:JobRun'] :: JobRun -> Maybe Int

-- | The name of the trigger that started this job run.
[$sel:triggerName:JobRun'] :: JobRun -> Maybe Text

-- | Specifies configuration properties of a job run notification.
[$sel:notificationProperty:JobRun'] :: JobRun -> Maybe NotificationProperty

-- | The last time that this job run was modified.
[$sel:lastModifiedOn:JobRun'] :: JobRun -> Maybe POSIX

-- | The job arguments associated with this run. For this job run, they
--   replace the default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
[$sel:arguments:JobRun'] :: JobRun -> Maybe (HashMap Text Text)

-- | The name of the job definition being used in this run.
[$sel:jobName:JobRun'] :: JobRun -> Maybe Text

-- | The date and time at which this job run was started.
[$sel:startedOn:JobRun'] :: JobRun -> Maybe POSIX

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
[$sel:workerType:JobRun'] :: JobRun -> Maybe WorkerType

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job run.
[$sel:securityConfiguration:JobRun'] :: JobRun -> Maybe Text

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
[$sel:glueVersion:JobRun'] :: JobRun -> Maybe Text

-- | The current state of the job run. For more information about the
--   statuses of jobs that have terminated abnormally, see <a>Glue Job Run
--   Statuses</a>.
[$sel:jobRunState:JobRun'] :: JobRun -> Maybe JobRunState

-- | The name of the log group for secure logging that can be server-side
--   encrypted in Amazon CloudWatch using KMS. This name can be
--   <tt>/aws-glue/jobs/</tt>, in which case the default encryption is
--   <tt>NONE</tt>. If you add a role name and
--   <tt>SecurityConfiguration</tt> name (in other words,
--   <tt>/aws-glue/jobs-yourRoleName-yourSecurityConfigurationName/</tt>),
--   then that security configuration is used to encrypt the log group.
[$sel:logGroupName:JobRun'] :: JobRun -> Maybe Text

-- | The amount of time (in seconds) that the job run consumed resources.
[$sel:executionTime:JobRun'] :: JobRun -> Maybe Int

-- | A list of predecessors to this job run.
[$sel:predecessorRuns:JobRun'] :: JobRun -> Maybe [Predecessor]

-- | The ID of the previous run of this job. For example, the
--   <tt>JobRunId</tt> specified in the <tt>StartJobRun</tt> action.
[$sel:previousRunId:JobRun'] :: JobRun -> Maybe Text

-- | The ID of this job run.
[$sel:id:JobRun'] :: JobRun -> Maybe Text

-- | The number of the attempt to run this job.
[$sel:attempt:JobRun'] :: JobRun -> Maybe Int

-- | This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) allocated to this
--   JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU
--   is a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
[$sel:allocatedCapacity:JobRun'] :: JobRun -> Maybe Int

-- | The number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl"), you can allocate from 2 to 100
--   DPUs. The default is 10 DPUs. This job type cannot have a fractional
--   DPU allocation.</li>
--   </ul>
[$sel:maxCapacity:JobRun'] :: JobRun -> Maybe Double

-- | The <tt>JobRun</tt> timeout in minutes. This is the maximum time that
--   a job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
[$sel:timeout:JobRun'] :: JobRun -> Maybe Natural

-- | An error message associated with this job run.
[$sel:errorMessage:JobRun'] :: JobRun -> Maybe Text

-- | Create a value of <a>JobRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completedOn:JobRun'</a>, <a>jobRun_completedOn</a> - The date
--   and time that this job run completed.
--   
--   <a>$sel:numberOfWorkers:JobRun'</a>, <a>jobRun_numberOfWorkers</a> -
--   The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
--   
--   <a>$sel:triggerName:JobRun'</a>, <a>jobRun_triggerName</a> - The name
--   of the trigger that started this job run.
--   
--   <a>$sel:notificationProperty:JobRun'</a>,
--   <a>jobRun_notificationProperty</a> - Specifies configuration
--   properties of a job run notification.
--   
--   <a>$sel:lastModifiedOn:JobRun'</a>, <a>jobRun_lastModifiedOn</a> - The
--   last time that this job run was modified.
--   
--   <a>$sel:arguments:JobRun'</a>, <a>jobRun_arguments</a> - The job
--   arguments associated with this run. For this job run, they replace the
--   default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
--   
--   <a>$sel:jobName:JobRun'</a>, <a>jobRun_jobName</a> - The name of the
--   job definition being used in this run.
--   
--   <a>$sel:startedOn:JobRun'</a>, <a>jobRun_startedOn</a> - The date and
--   time at which this job run was started.
--   
--   <a>$sel:workerType:JobRun'</a>, <a>jobRun_workerType</a> - The type of
--   predefined worker that is allocated when a job runs. Accepts a value
--   of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <a>$sel:securityConfiguration:JobRun'</a>,
--   <a>jobRun_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this job run.
--   
--   <a>$sel:glueVersion:JobRun'</a>, <a>jobRun_glueVersion</a> - Glue
--   version determines the versions of Apache Spark and Python that Glue
--   supports. The Python version indicates the version supported for jobs
--   of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
--   
--   <a>$sel:jobRunState:JobRun'</a>, <a>jobRun_jobRunState</a> - The
--   current state of the job run. For more information about the statuses
--   of jobs that have terminated abnormally, see <a>Glue Job Run
--   Statuses</a>.
--   
--   <a>$sel:logGroupName:JobRun'</a>, <a>jobRun_logGroupName</a> - The
--   name of the log group for secure logging that can be server-side
--   encrypted in Amazon CloudWatch using KMS. This name can be
--   <tt>/aws-glue/jobs/</tt>, in which case the default encryption is
--   <tt>NONE</tt>. If you add a role name and
--   <tt>SecurityConfiguration</tt> name (in other words,
--   <tt>/aws-glue/jobs-yourRoleName-yourSecurityConfigurationName/</tt>),
--   then that security configuration is used to encrypt the log group.
--   
--   <a>$sel:executionTime:JobRun'</a>, <a>jobRun_executionTime</a> - The
--   amount of time (in seconds) that the job run consumed resources.
--   
--   <a>$sel:predecessorRuns:JobRun'</a>, <a>jobRun_predecessorRuns</a> - A
--   list of predecessors to this job run.
--   
--   <a>$sel:previousRunId:JobRun'</a>, <a>jobRun_previousRunId</a> - The
--   ID of the previous run of this job. For example, the <tt>JobRunId</tt>
--   specified in the <tt>StartJobRun</tt> action.
--   
--   <a>$sel:id:JobRun'</a>, <a>jobRun_id</a> - The ID of this job run.
--   
--   <a>$sel:attempt:JobRun'</a>, <a>jobRun_attempt</a> - The number of the
--   attempt to run this job.
--   
--   <a>$sel:allocatedCapacity:JobRun'</a>, <a>jobRun_allocatedCapacity</a>
--   - This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) allocated to this
--   JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU
--   is a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
--   
--   <a>$sel:maxCapacity:JobRun'</a>, <a>jobRun_maxCapacity</a> - The
--   number of Glue data processing units (DPUs) that can be allocated when
--   this job runs. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl"), you can allocate from 2 to 100
--   DPUs. The default is 10 DPUs. This job type cannot have a fractional
--   DPU allocation.</li>
--   </ul>
--   
--   <a>$sel:timeout:JobRun'</a>, <a>jobRun_timeout</a> - The
--   <tt>JobRun</tt> timeout in minutes. This is the maximum time that a
--   job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
--   
--   <a>$sel:errorMessage:JobRun'</a>, <a>jobRun_errorMessage</a> - An
--   error message associated with this job run.
newJobRun :: JobRun

-- | The date and time that this job run completed.
jobRun_completedOn :: Lens' JobRun (Maybe UTCTime)

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
jobRun_numberOfWorkers :: Lens' JobRun (Maybe Int)

-- | The name of the trigger that started this job run.
jobRun_triggerName :: Lens' JobRun (Maybe Text)

-- | Specifies configuration properties of a job run notification.
jobRun_notificationProperty :: Lens' JobRun (Maybe NotificationProperty)

-- | The last time that this job run was modified.
jobRun_lastModifiedOn :: Lens' JobRun (Maybe UTCTime)

-- | The job arguments associated with this run. For this job run, they
--   replace the default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
jobRun_arguments :: Lens' JobRun (Maybe (HashMap Text Text))

-- | The name of the job definition being used in this run.
jobRun_jobName :: Lens' JobRun (Maybe Text)

-- | The date and time at which this job run was started.
jobRun_startedOn :: Lens' JobRun (Maybe UTCTime)

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
jobRun_workerType :: Lens' JobRun (Maybe WorkerType)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job run.
jobRun_securityConfiguration :: Lens' JobRun (Maybe Text)

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
jobRun_glueVersion :: Lens' JobRun (Maybe Text)

-- | The current state of the job run. For more information about the
--   statuses of jobs that have terminated abnormally, see <a>Glue Job Run
--   Statuses</a>.
jobRun_jobRunState :: Lens' JobRun (Maybe JobRunState)

-- | The name of the log group for secure logging that can be server-side
--   encrypted in Amazon CloudWatch using KMS. This name can be
--   <tt>/aws-glue/jobs/</tt>, in which case the default encryption is
--   <tt>NONE</tt>. If you add a role name and
--   <tt>SecurityConfiguration</tt> name (in other words,
--   <tt>/aws-glue/jobs-yourRoleName-yourSecurityConfigurationName/</tt>),
--   then that security configuration is used to encrypt the log group.
jobRun_logGroupName :: Lens' JobRun (Maybe Text)

-- | The amount of time (in seconds) that the job run consumed resources.
jobRun_executionTime :: Lens' JobRun (Maybe Int)

-- | A list of predecessors to this job run.
jobRun_predecessorRuns :: Lens' JobRun (Maybe [Predecessor])

-- | The ID of the previous run of this job. For example, the
--   <tt>JobRunId</tt> specified in the <tt>StartJobRun</tt> action.
jobRun_previousRunId :: Lens' JobRun (Maybe Text)

-- | The ID of this job run.
jobRun_id :: Lens' JobRun (Maybe Text)

-- | The number of the attempt to run this job.
jobRun_attempt :: Lens' JobRun (Maybe Int)

-- | This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) allocated to this
--   JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU
--   is a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
jobRun_allocatedCapacity :: Lens' JobRun (Maybe Int)

-- | The number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl"), you can allocate from 2 to 100
--   DPUs. The default is 10 DPUs. This job type cannot have a fractional
--   DPU allocation.</li>
--   </ul>
jobRun_maxCapacity :: Lens' JobRun (Maybe Double)

-- | The <tt>JobRun</tt> timeout in minutes. This is the maximum time that
--   a job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
jobRun_timeout :: Lens' JobRun (Maybe Natural)

-- | An error message associated with this job run.
jobRun_errorMessage :: Lens' JobRun (Maybe Text)

-- | Specifies information used to update an existing job definition. The
--   previous job definition is completely overwritten by this information.
--   
--   <i>See:</i> <a>newJobUpdate</a> smart constructor.
data JobUpdate
JobUpdate' :: Maybe Int -> Maybe JobCommand -> Maybe NotificationProperty -> Maybe ConnectionsList -> Maybe WorkerType -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe ExecutionProperty -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe (HashMap Text Text) -> Maybe Text -> JobUpdate

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
[$sel:numberOfWorkers:JobUpdate'] :: JobUpdate -> Maybe Int

-- | The <tt>JobCommand</tt> that runs this job (required).
[$sel:command:JobUpdate'] :: JobUpdate -> Maybe JobCommand

-- | Specifies the configuration properties of a job notification.
[$sel:notificationProperty:JobUpdate'] :: JobUpdate -> Maybe NotificationProperty

-- | The connections used for this job.
[$sel:connections:JobUpdate'] :: JobUpdate -> Maybe ConnectionsList

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
[$sel:workerType:JobUpdate'] :: JobUpdate -> Maybe WorkerType

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job.
[$sel:securityConfiguration:JobUpdate'] :: JobUpdate -> Maybe Text

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
[$sel:glueVersion:JobUpdate'] :: JobUpdate -> Maybe Text

-- | Non-overridable arguments for this job, specified as name-value pairs.
[$sel:nonOverridableArguments:JobUpdate'] :: JobUpdate -> Maybe (HashMap Text Text)

-- | The name or Amazon Resource Name (ARN) of the IAM role associated with
--   this job (required).
[$sel:role':JobUpdate'] :: JobUpdate -> Maybe Text

-- | This field is reserved for future use.
[$sel:logUri:JobUpdate'] :: JobUpdate -> Maybe Text

-- | The maximum number of times to retry this job if it fails.
[$sel:maxRetries:JobUpdate'] :: JobUpdate -> Maybe Int

-- | An <tt>ExecutionProperty</tt> specifying the maximum number of
--   concurrent runs allowed for this job.
[$sel:executionProperty:JobUpdate'] :: JobUpdate -> Maybe ExecutionProperty

-- | This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) to allocate to this
--   job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is
--   a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
[$sel:allocatedCapacity:JobUpdate'] :: JobUpdate -> Maybe Int

-- | For Glue version 1.0 or earlier jobs, using the standard worker type,
--   the number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
[$sel:maxCapacity:JobUpdate'] :: JobUpdate -> Maybe Double

-- | The job timeout in minutes. This is the maximum time that a job run
--   can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours).
[$sel:timeout:JobUpdate'] :: JobUpdate -> Maybe Natural

-- | The default arguments for this job.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
[$sel:defaultArguments:JobUpdate'] :: JobUpdate -> Maybe (HashMap Text Text)

-- | Description of the job being defined.
[$sel:description:JobUpdate'] :: JobUpdate -> Maybe Text

-- | Create a value of <a>JobUpdate</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfWorkers:JobUpdate'</a>,
--   <a>jobUpdate_numberOfWorkers</a> - The number of workers of a defined
--   <tt>workerType</tt> that are allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
--   
--   <a>$sel:command:JobUpdate'</a>, <a>jobUpdate_command</a> - The
--   <tt>JobCommand</tt> that runs this job (required).
--   
--   <a>$sel:notificationProperty:JobUpdate'</a>,
--   <a>jobUpdate_notificationProperty</a> - Specifies the configuration
--   properties of a job notification.
--   
--   <a>$sel:connections:JobUpdate'</a>, <a>jobUpdate_connections</a> - The
--   connections used for this job.
--   
--   <a>$sel:workerType:JobUpdate'</a>, <a>jobUpdate_workerType</a> - The
--   type of predefined worker that is allocated when a job runs. Accepts a
--   value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   <a>$sel:securityConfiguration:JobUpdate'</a>,
--   <a>jobUpdate_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this job.
--   
--   <a>$sel:glueVersion:JobUpdate'</a>, <a>jobUpdate_glueVersion</a> -
--   Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   <a>$sel:nonOverridableArguments:JobUpdate'</a>,
--   <a>jobUpdate_nonOverridableArguments</a> - Non-overridable arguments
--   for this job, specified as name-value pairs.
--   
--   <a>$sel:role':JobUpdate'</a>, <a>jobUpdate_role</a> - The name or
--   Amazon Resource Name (ARN) of the IAM role associated with this job
--   (required).
--   
--   <a>$sel:logUri:JobUpdate'</a>, <a>jobUpdate_logUri</a> - This field is
--   reserved for future use.
--   
--   <a>$sel:maxRetries:JobUpdate'</a>, <a>jobUpdate_maxRetries</a> - The
--   maximum number of times to retry this job if it fails.
--   
--   <a>$sel:executionProperty:JobUpdate'</a>,
--   <a>jobUpdate_executionProperty</a> - An <tt>ExecutionProperty</tt>
--   specifying the maximum number of concurrent runs allowed for this job.
--   
--   <a>$sel:allocatedCapacity:JobUpdate'</a>,
--   <a>jobUpdate_allocatedCapacity</a> - This field is deprecated. Use
--   <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) to allocate to this
--   job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is
--   a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
--   
--   <a>$sel:maxCapacity:JobUpdate'</a>, <a>jobUpdate_maxCapacity</a> - For
--   Glue version 1.0 or earlier jobs, using the standard worker type, the
--   number of Glue data processing units (DPUs) that can be allocated when
--   this job runs. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
--   
--   <a>$sel:timeout:JobUpdate'</a>, <a>jobUpdate_timeout</a> - The job
--   timeout in minutes. This is the maximum time that a job run can
--   consume resources before it is terminated and enters <tt>TIMEOUT</tt>
--   status. The default is 2,880 minutes (48 hours).
--   
--   <a>$sel:defaultArguments:JobUpdate'</a>,
--   <a>jobUpdate_defaultArguments</a> - The default arguments for this
--   job.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
--   
--   <a>$sel:description:JobUpdate'</a>, <a>jobUpdate_description</a> -
--   Description of the job being defined.
newJobUpdate :: JobUpdate

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
jobUpdate_numberOfWorkers :: Lens' JobUpdate (Maybe Int)

-- | The <tt>JobCommand</tt> that runs this job (required).
jobUpdate_command :: Lens' JobUpdate (Maybe JobCommand)

-- | Specifies the configuration properties of a job notification.
jobUpdate_notificationProperty :: Lens' JobUpdate (Maybe NotificationProperty)

-- | The connections used for this job.
jobUpdate_connections :: Lens' JobUpdate (Maybe ConnectionsList)

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
jobUpdate_workerType :: Lens' JobUpdate (Maybe WorkerType)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job.
jobUpdate_securityConfiguration :: Lens' JobUpdate (Maybe Text)

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
jobUpdate_glueVersion :: Lens' JobUpdate (Maybe Text)

-- | Non-overridable arguments for this job, specified as name-value pairs.
jobUpdate_nonOverridableArguments :: Lens' JobUpdate (Maybe (HashMap Text Text))

-- | The name or Amazon Resource Name (ARN) of the IAM role associated with
--   this job (required).
jobUpdate_role :: Lens' JobUpdate (Maybe Text)

-- | This field is reserved for future use.
jobUpdate_logUri :: Lens' JobUpdate (Maybe Text)

-- | The maximum number of times to retry this job if it fails.
jobUpdate_maxRetries :: Lens' JobUpdate (Maybe Int)

-- | An <tt>ExecutionProperty</tt> specifying the maximum number of
--   concurrent runs allowed for this job.
jobUpdate_executionProperty :: Lens' JobUpdate (Maybe ExecutionProperty)

-- | This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) to allocate to this
--   job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is
--   a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
jobUpdate_allocatedCapacity :: Lens' JobUpdate (Maybe Int)

-- | For Glue version 1.0 or earlier jobs, using the standard worker type,
--   the number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
jobUpdate_maxCapacity :: Lens' JobUpdate (Maybe Double)

-- | The job timeout in minutes. This is the maximum time that a job run
--   can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours).
jobUpdate_timeout :: Lens' JobUpdate (Maybe Natural)

-- | The default arguments for this job.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
jobUpdate_defaultArguments :: Lens' JobUpdate (Maybe (HashMap Text Text))

-- | Description of the job being defined.
jobUpdate_description :: Lens' JobUpdate (Maybe Text)

-- | A classifier for <tt>JSON</tt> content.
--   
--   <i>See:</i> <a>newJsonClassifier</a> smart constructor.
data JsonClassifier
JsonClassifier' :: Maybe POSIX -> Maybe POSIX -> Maybe Integer -> Text -> Text -> JsonClassifier

-- | The time that this classifier was registered.
[$sel:creationTime:JsonClassifier'] :: JsonClassifier -> Maybe POSIX

-- | The time that this classifier was last updated.
[$sel:lastUpdated:JsonClassifier'] :: JsonClassifier -> Maybe POSIX

-- | The version of this classifier.
[$sel:version:JsonClassifier'] :: JsonClassifier -> Maybe Integer

-- | The name of the classifier.
[$sel:name:JsonClassifier'] :: JsonClassifier -> Text

-- | A <tt>JsonPath</tt> string defining the JSON data for the classifier
--   to classify. Glue supports a subset of JsonPath, as described in
--   <a>Writing JsonPath Custom Classifiers</a>.
[$sel:jsonPath:JsonClassifier'] :: JsonClassifier -> Text

-- | Create a value of <a>JsonClassifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:JsonClassifier'</a>,
--   <a>jsonClassifier_creationTime</a> - The time that this classifier was
--   registered.
--   
--   <a>$sel:lastUpdated:JsonClassifier'</a>,
--   <a>jsonClassifier_lastUpdated</a> - The time that this classifier was
--   last updated.
--   
--   <a>$sel:version:JsonClassifier'</a>, <a>jsonClassifier_version</a> -
--   The version of this classifier.
--   
--   <a>$sel:name:JsonClassifier'</a>, <a>jsonClassifier_name</a> - The
--   name of the classifier.
--   
--   <a>$sel:jsonPath:JsonClassifier'</a>, <a>jsonClassifier_jsonPath</a> -
--   A <tt>JsonPath</tt> string defining the JSON data for the classifier
--   to classify. Glue supports a subset of JsonPath, as described in
--   <a>Writing JsonPath Custom Classifiers</a>.
newJsonClassifier :: Text -> Text -> JsonClassifier

-- | The time that this classifier was registered.
jsonClassifier_creationTime :: Lens' JsonClassifier (Maybe UTCTime)

-- | The time that this classifier was last updated.
jsonClassifier_lastUpdated :: Lens' JsonClassifier (Maybe UTCTime)

-- | The version of this classifier.
jsonClassifier_version :: Lens' JsonClassifier (Maybe Integer)

-- | The name of the classifier.
jsonClassifier_name :: Lens' JsonClassifier Text

-- | A <tt>JsonPath</tt> string defining the JSON data for the classifier
--   to classify. Glue supports a subset of JsonPath, as described in
--   <a>Writing JsonPath Custom Classifiers</a>.
jsonClassifier_jsonPath :: Lens' JsonClassifier Text

-- | A partition key pair consisting of a name and a type.
--   
--   <i>See:</i> <a>newKeySchemaElement</a> smart constructor.
data KeySchemaElement
KeySchemaElement' :: Text -> Text -> KeySchemaElement

-- | The name of a partition key.
[$sel:name:KeySchemaElement'] :: KeySchemaElement -> Text

-- | The type of a partition key.
[$sel:type':KeySchemaElement'] :: KeySchemaElement -> Text

-- | Create a value of <a>KeySchemaElement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:KeySchemaElement'</a>, <a>keySchemaElement_name</a> - The
--   name of a partition key.
--   
--   <a>$sel:type':KeySchemaElement'</a>, <a>keySchemaElement_type</a> -
--   The type of a partition key.
newKeySchemaElement :: Text -> Text -> KeySchemaElement

-- | The name of a partition key.
keySchemaElement_name :: Lens' KeySchemaElement Text

-- | The type of a partition key.
keySchemaElement_type :: Lens' KeySchemaElement Text

-- | Specifies configuration properties for a labeling set generation task
--   run.
--   
--   <i>See:</i> <a>newLabelingSetGenerationTaskRunProperties</a> smart
--   constructor.
data LabelingSetGenerationTaskRunProperties
LabelingSetGenerationTaskRunProperties' :: Maybe Text -> LabelingSetGenerationTaskRunProperties

-- | The Amazon Simple Storage Service (Amazon S3) path where you will
--   generate the labeling set.
[$sel:outputS3Path:LabelingSetGenerationTaskRunProperties'] :: LabelingSetGenerationTaskRunProperties -> Maybe Text

-- | Create a value of <a>LabelingSetGenerationTaskRunProperties</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputS3Path:LabelingSetGenerationTaskRunProperties'</a>,
--   <a>labelingSetGenerationTaskRunProperties_outputS3Path</a> - The
--   Amazon Simple Storage Service (Amazon S3) path where you will generate
--   the labeling set.
newLabelingSetGenerationTaskRunProperties :: LabelingSetGenerationTaskRunProperties

-- | The Amazon Simple Storage Service (Amazon S3) path where you will
--   generate the labeling set.
labelingSetGenerationTaskRunProperties_outputS3Path :: Lens' LabelingSetGenerationTaskRunProperties (Maybe Text)

-- | When there are multiple versions of a blueprint and the latest version
--   has some errors, this attribute indicates the last successful
--   blueprint definition that is available with the service.
--   
--   <i>See:</i> <a>newLastActiveDefinition</a> smart constructor.
data LastActiveDefinition
LastActiveDefinition' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> LastActiveDefinition

-- | A JSON string specifying the parameters for the blueprint.
[$sel:parameterSpec:LastActiveDefinition'] :: LastActiveDefinition -> Maybe Text

-- | Specifies a path in Amazon S3 where the blueprint is published by the
--   Glue developer.
[$sel:blueprintLocation:LastActiveDefinition'] :: LastActiveDefinition -> Maybe Text

-- | The date and time the blueprint was last modified.
[$sel:lastModifiedOn:LastActiveDefinition'] :: LastActiveDefinition -> Maybe POSIX

-- | Specifies a path in Amazon S3 where the blueprint is copied when you
--   create or update the blueprint.
[$sel:blueprintServiceLocation:LastActiveDefinition'] :: LastActiveDefinition -> Maybe Text

-- | The description of the blueprint.
[$sel:description:LastActiveDefinition'] :: LastActiveDefinition -> Maybe Text

-- | Create a value of <a>LastActiveDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterSpec:LastActiveDefinition'</a>,
--   <a>lastActiveDefinition_parameterSpec</a> - A JSON string specifying
--   the parameters for the blueprint.
--   
--   <a>$sel:blueprintLocation:LastActiveDefinition'</a>,
--   <a>lastActiveDefinition_blueprintLocation</a> - Specifies a path in
--   Amazon S3 where the blueprint is published by the Glue developer.
--   
--   <a>$sel:lastModifiedOn:LastActiveDefinition'</a>,
--   <a>lastActiveDefinition_lastModifiedOn</a> - The date and time the
--   blueprint was last modified.
--   
--   <a>$sel:blueprintServiceLocation:LastActiveDefinition'</a>,
--   <a>lastActiveDefinition_blueprintServiceLocation</a> - Specifies a
--   path in Amazon S3 where the blueprint is copied when you create or
--   update the blueprint.
--   
--   <a>$sel:description:LastActiveDefinition'</a>,
--   <a>lastActiveDefinition_description</a> - The description of the
--   blueprint.
newLastActiveDefinition :: LastActiveDefinition

-- | A JSON string specifying the parameters for the blueprint.
lastActiveDefinition_parameterSpec :: Lens' LastActiveDefinition (Maybe Text)

-- | Specifies a path in Amazon S3 where the blueprint is published by the
--   Glue developer.
lastActiveDefinition_blueprintLocation :: Lens' LastActiveDefinition (Maybe Text)

-- | The date and time the blueprint was last modified.
lastActiveDefinition_lastModifiedOn :: Lens' LastActiveDefinition (Maybe UTCTime)

-- | Specifies a path in Amazon S3 where the blueprint is copied when you
--   create or update the blueprint.
lastActiveDefinition_blueprintServiceLocation :: Lens' LastActiveDefinition (Maybe Text)

-- | The description of the blueprint.
lastActiveDefinition_description :: Lens' LastActiveDefinition (Maybe Text)

-- | Status and error information about the most recent crawl.
--   
--   <i>See:</i> <a>newLastCrawlInfo</a> smart constructor.
data LastCrawlInfo
LastCrawlInfo' :: Maybe LastCrawlStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> LastCrawlInfo

-- | Status of the last crawl.
[$sel:status:LastCrawlInfo'] :: LastCrawlInfo -> Maybe LastCrawlStatus

-- | The time at which the crawl started.
[$sel:startTime:LastCrawlInfo'] :: LastCrawlInfo -> Maybe POSIX

-- | The log stream for the last crawl.
[$sel:logStream:LastCrawlInfo'] :: LastCrawlInfo -> Maybe Text

-- | The log group for the last crawl.
[$sel:logGroup:LastCrawlInfo'] :: LastCrawlInfo -> Maybe Text

-- | The prefix for a message about this crawl.
[$sel:messagePrefix:LastCrawlInfo'] :: LastCrawlInfo -> Maybe Text

-- | If an error occurred, the error information about the last crawl.
[$sel:errorMessage:LastCrawlInfo'] :: LastCrawlInfo -> Maybe Text

-- | Create a value of <a>LastCrawlInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:LastCrawlInfo'</a>, <a>lastCrawlInfo_status</a> -
--   Status of the last crawl.
--   
--   <a>$sel:startTime:LastCrawlInfo'</a>, <a>lastCrawlInfo_startTime</a> -
--   The time at which the crawl started.
--   
--   <a>$sel:logStream:LastCrawlInfo'</a>, <a>lastCrawlInfo_logStream</a> -
--   The log stream for the last crawl.
--   
--   <a>$sel:logGroup:LastCrawlInfo'</a>, <a>lastCrawlInfo_logGroup</a> -
--   The log group for the last crawl.
--   
--   <a>$sel:messagePrefix:LastCrawlInfo'</a>,
--   <a>lastCrawlInfo_messagePrefix</a> - The prefix for a message about
--   this crawl.
--   
--   <a>$sel:errorMessage:LastCrawlInfo'</a>,
--   <a>lastCrawlInfo_errorMessage</a> - If an error occurred, the error
--   information about the last crawl.
newLastCrawlInfo :: LastCrawlInfo

-- | Status of the last crawl.
lastCrawlInfo_status :: Lens' LastCrawlInfo (Maybe LastCrawlStatus)

-- | The time at which the crawl started.
lastCrawlInfo_startTime :: Lens' LastCrawlInfo (Maybe UTCTime)

-- | The log stream for the last crawl.
lastCrawlInfo_logStream :: Lens' LastCrawlInfo (Maybe Text)

-- | The log group for the last crawl.
lastCrawlInfo_logGroup :: Lens' LastCrawlInfo (Maybe Text)

-- | The prefix for a message about this crawl.
lastCrawlInfo_messagePrefix :: Lens' LastCrawlInfo (Maybe Text)

-- | If an error occurred, the error information about the last crawl.
lastCrawlInfo_errorMessage :: Lens' LastCrawlInfo (Maybe Text)

-- | Specifies data lineage configuration settings for the crawler.
--   
--   <i>See:</i> <a>newLineageConfiguration</a> smart constructor.
data LineageConfiguration
LineageConfiguration' :: Maybe CrawlerLineageSettings -> LineageConfiguration

-- | Specifies whether data lineage is enabled for the crawler. Valid
--   values are:
--   
--   <ul>
--   <li>ENABLE: enables data lineage for the crawler</li>
--   <li>DISABLE: disables data lineage for the crawler</li>
--   </ul>
[$sel:crawlerLineageSettings:LineageConfiguration'] :: LineageConfiguration -> Maybe CrawlerLineageSettings

-- | Create a value of <a>LineageConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawlerLineageSettings:LineageConfiguration'</a>,
--   <a>lineageConfiguration_crawlerLineageSettings</a> - Specifies whether
--   data lineage is enabled for the crawler. Valid values are:
--   
--   <ul>
--   <li>ENABLE: enables data lineage for the crawler</li>
--   <li>DISABLE: disables data lineage for the crawler</li>
--   </ul>
newLineageConfiguration :: LineageConfiguration

-- | Specifies whether data lineage is enabled for the crawler. Valid
--   values are:
--   
--   <ul>
--   <li>ENABLE: enables data lineage for the crawler</li>
--   <li>DISABLE: disables data lineage for the crawler</li>
--   </ul>
lineageConfiguration_crawlerLineageSettings :: Lens' LineageConfiguration (Maybe CrawlerLineageSettings)

-- | The location of resources.
--   
--   <i>See:</i> <a>newLocation</a> smart constructor.
data Location
Location' :: Maybe [CodeGenNodeArg] -> Maybe [CodeGenNodeArg] -> Maybe [CodeGenNodeArg] -> Location

-- | An Amazon DynamoDB table location.
[$sel:dynamoDB:Location'] :: Location -> Maybe [CodeGenNodeArg]

-- | A JDBC location.
[$sel:jdbc:Location'] :: Location -> Maybe [CodeGenNodeArg]

-- | An Amazon Simple Storage Service (Amazon S3) location.
[$sel:s3:Location'] :: Location -> Maybe [CodeGenNodeArg]

-- | Create a value of <a>Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dynamoDB:Location'</a>, <a>location_dynamoDB</a> - An Amazon
--   DynamoDB table location.
--   
--   <a>$sel:jdbc:Location'</a>, <a>location_jdbc</a> - A JDBC location.
--   
--   <a>$sel:s3:Location'</a>, <a>location_s3</a> - An Amazon Simple
--   Storage Service (Amazon S3) location.
newLocation :: Location

-- | An Amazon DynamoDB table location.
location_dynamoDB :: Lens' Location (Maybe [CodeGenNodeArg])

-- | A JDBC location.
location_jdbc :: Lens' Location (Maybe [CodeGenNodeArg])

-- | An Amazon Simple Storage Service (Amazon S3) location.
location_s3 :: Lens' Location (Maybe [CodeGenNodeArg])

-- | Defines column statistics supported for integer data columns.
--   
--   <i>See:</i> <a>newLongColumnStatisticsData</a> smart constructor.
data LongColumnStatisticsData
LongColumnStatisticsData' :: Maybe Integer -> Maybe Integer -> Natural -> Natural -> LongColumnStatisticsData

-- | The highest value in the column.
[$sel:maximumValue:LongColumnStatisticsData'] :: LongColumnStatisticsData -> Maybe Integer

-- | The lowest value in the column.
[$sel:minimumValue:LongColumnStatisticsData'] :: LongColumnStatisticsData -> Maybe Integer

-- | The number of null values in the column.
[$sel:numberOfNulls:LongColumnStatisticsData'] :: LongColumnStatisticsData -> Natural

-- | The number of distinct values in a column.
[$sel:numberOfDistinctValues:LongColumnStatisticsData'] :: LongColumnStatisticsData -> Natural

-- | Create a value of <a>LongColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumValue:LongColumnStatisticsData'</a>,
--   <a>longColumnStatisticsData_maximumValue</a> - The highest value in
--   the column.
--   
--   <a>$sel:minimumValue:LongColumnStatisticsData'</a>,
--   <a>longColumnStatisticsData_minimumValue</a> - The lowest value in the
--   column.
--   
--   <a>$sel:numberOfNulls:LongColumnStatisticsData'</a>,
--   <a>longColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
--   
--   <a>$sel:numberOfDistinctValues:LongColumnStatisticsData'</a>,
--   <a>longColumnStatisticsData_numberOfDistinctValues</a> - The number of
--   distinct values in a column.
newLongColumnStatisticsData :: Natural -> Natural -> LongColumnStatisticsData

-- | The highest value in the column.
longColumnStatisticsData_maximumValue :: Lens' LongColumnStatisticsData (Maybe Integer)

-- | The lowest value in the column.
longColumnStatisticsData_minimumValue :: Lens' LongColumnStatisticsData (Maybe Integer)

-- | The number of null values in the column.
longColumnStatisticsData_numberOfNulls :: Lens' LongColumnStatisticsData Natural

-- | The number of distinct values in a column.
longColumnStatisticsData_numberOfDistinctValues :: Lens' LongColumnStatisticsData Natural

-- | A structure for a machine learning transform.
--   
--   <i>See:</i> <a>newMLTransform</a> smart constructor.
data MLTransform
MLTransform' :: Maybe TransformStatusType -> Maybe Int -> Maybe POSIX -> Maybe Int -> Maybe WorkerType -> Maybe [GlueTable] -> Maybe Text -> Maybe EvaluationMetrics -> Maybe [SchemaColumn] -> Maybe Text -> Maybe Text -> Maybe TransformParameters -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe TransformEncryption -> Maybe Text -> Maybe POSIX -> Maybe Text -> MLTransform

-- | The current status of the machine learning transform.
[$sel:status:MLTransform'] :: MLTransform -> Maybe TransformStatusType

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a task of the transform runs.
--   
--   If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).
[$sel:numberOfWorkers:MLTransform'] :: MLTransform -> Maybe Int

-- | A timestamp. The last point in time when this machine learning
--   transform was modified.
[$sel:lastModifiedOn:MLTransform'] :: MLTransform -> Maybe POSIX

-- | A count identifier for the labeling files generated by Glue for this
--   transform. As you create a better transform, you can iteratively
--   download, label, and upload the labeling file.
[$sel:labelCount:MLTransform'] :: MLTransform -> Maybe Int

-- | The type of predefined worker that is allocated when a task of this
--   transform runs. Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
[$sel:workerType:MLTransform'] :: MLTransform -> Maybe WorkerType

-- | A list of Glue table definitions used by the transform.
[$sel:inputRecordTables:MLTransform'] :: MLTransform -> Maybe [GlueTable]

-- | This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
[$sel:glueVersion:MLTransform'] :: MLTransform -> Maybe Text

-- | An <tt>EvaluationMetrics</tt> object. Evaluation metrics provide an
--   estimate of the quality of your machine learning transform.
[$sel:evaluationMetrics:MLTransform'] :: MLTransform -> Maybe EvaluationMetrics

-- | A map of key-value pairs representing the columns and data types that
--   this transform can run against. Has an upper bound of 100 columns.
[$sel:schema:MLTransform'] :: MLTransform -> Maybe [SchemaColumn]

-- | The name or Amazon Resource Name (ARN) of the IAM role with the
--   required permissions. The required permissions include both Glue
--   service role permissions to Glue resources, and Amazon S3 permissions
--   required by the transform.
--   
--   <ul>
--   <li>This role needs Glue service role permissions to allow access to
--   resources in Glue. See <a>Attach a Policy to IAM Users That Access
--   Glue</a>.</li>
--   <li>This role needs permission to your Amazon Simple Storage Service
--   (Amazon S3) sources, targets, temporary directory, scripts, and any
--   libraries used by the task run for this transform.</li>
--   </ul>
[$sel:role':MLTransform'] :: MLTransform -> Maybe Text

-- | A user-defined name for the machine learning transform. Names are not
--   guaranteed unique and can be changed at any time.
[$sel:name:MLTransform'] :: MLTransform -> Maybe Text

-- | A <tt>TransformParameters</tt> object. You can use parameters to tune
--   (customize) the behavior of the machine learning transform by
--   specifying what data it learns from and your preference on various
--   tradeoffs (such as precious vs. recall, or accuracy vs. cost).
[$sel:parameters:MLTransform'] :: MLTransform -> Maybe TransformParameters

-- | The maximum number of times to retry after an <tt>MLTaskRun</tt> of
--   the machine learning transform fails.
[$sel:maxRetries:MLTransform'] :: MLTransform -> Maybe Int

-- | The number of Glue data processing units (DPUs) that are allocated to
--   task runs for this transform. You can allocate from 2 to 100 DPUs; the
--   default is 10. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
[$sel:maxCapacity:MLTransform'] :: MLTransform -> Maybe Double

-- | The timeout in minutes of the machine learning transform.
[$sel:timeout:MLTransform'] :: MLTransform -> Maybe Natural

-- | The encryption-at-rest settings of the transform that apply to
--   accessing user data. Machine learning transforms can access user data
--   encrypted in Amazon S3 using KMS.
[$sel:transformEncryption:MLTransform'] :: MLTransform -> Maybe TransformEncryption

-- | A user-defined, long-form description text for the machine learning
--   transform. Descriptions are not guaranteed to be unique and can be
--   changed at any time.
[$sel:description:MLTransform'] :: MLTransform -> Maybe Text

-- | A timestamp. The time and date that this machine learning transform
--   was created.
[$sel:createdOn:MLTransform'] :: MLTransform -> Maybe POSIX

-- | The unique transform ID that is generated for the machine learning
--   transform. The ID is guaranteed to be unique and does not change.
[$sel:transformId:MLTransform'] :: MLTransform -> Maybe Text

-- | Create a value of <a>MLTransform</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:MLTransform'</a>, <a>mLTransform_status</a> - The
--   current status of the machine learning transform.
--   
--   <a>$sel:numberOfWorkers:MLTransform'</a>,
--   <a>mLTransform_numberOfWorkers</a> - The number of workers of a
--   defined <tt>workerType</tt> that are allocated when a task of the
--   transform runs.
--   
--   If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).
--   
--   <a>$sel:lastModifiedOn:MLTransform'</a>,
--   <a>mLTransform_lastModifiedOn</a> - A timestamp. The last point in
--   time when this machine learning transform was modified.
--   
--   <a>$sel:labelCount:MLTransform'</a>, <a>mLTransform_labelCount</a> - A
--   count identifier for the labeling files generated by Glue for this
--   transform. As you create a better transform, you can iteratively
--   download, label, and upload the labeling file.
--   
--   <a>$sel:workerType:MLTransform'</a>, <a>mLTransform_workerType</a> -
--   The type of predefined worker that is allocated when a task of this
--   transform runs. Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
--   
--   <a>$sel:inputRecordTables:MLTransform'</a>,
--   <a>mLTransform_inputRecordTables</a> - A list of Glue table
--   definitions used by the transform.
--   
--   <a>$sel:glueVersion:MLTransform'</a>, <a>mLTransform_glueVersion</a> -
--   This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
--   
--   <a>$sel:evaluationMetrics:MLTransform'</a>,
--   <a>mLTransform_evaluationMetrics</a> - An <tt>EvaluationMetrics</tt>
--   object. Evaluation metrics provide an estimate of the quality of your
--   machine learning transform.
--   
--   <a>$sel:schema:MLTransform'</a>, <a>mLTransform_schema</a> - A map of
--   key-value pairs representing the columns and data types that this
--   transform can run against. Has an upper bound of 100 columns.
--   
--   <a>$sel:role':MLTransform'</a>, <a>mLTransform_role</a> - The name or
--   Amazon Resource Name (ARN) of the IAM role with the required
--   permissions. The required permissions include both Glue service role
--   permissions to Glue resources, and Amazon S3 permissions required by
--   the transform.
--   
--   <ul>
--   <li>This role needs Glue service role permissions to allow access to
--   resources in Glue. See <a>Attach a Policy to IAM Users That Access
--   Glue</a>.</li>
--   <li>This role needs permission to your Amazon Simple Storage Service
--   (Amazon S3) sources, targets, temporary directory, scripts, and any
--   libraries used by the task run for this transform.</li>
--   </ul>
--   
--   <a>$sel:name:MLTransform'</a>, <a>mLTransform_name</a> - A
--   user-defined name for the machine learning transform. Names are not
--   guaranteed unique and can be changed at any time.
--   
--   <a>$sel:parameters:MLTransform'</a>, <a>mLTransform_parameters</a> - A
--   <tt>TransformParameters</tt> object. You can use parameters to tune
--   (customize) the behavior of the machine learning transform by
--   specifying what data it learns from and your preference on various
--   tradeoffs (such as precious vs. recall, or accuracy vs. cost).
--   
--   <a>$sel:maxRetries:MLTransform'</a>, <a>mLTransform_maxRetries</a> -
--   The maximum number of times to retry after an <tt>MLTaskRun</tt> of
--   the machine learning transform fails.
--   
--   <a>$sel:maxCapacity:MLTransform'</a>, <a>mLTransform_maxCapacity</a> -
--   The number of Glue data processing units (DPUs) that are allocated to
--   task runs for this transform. You can allocate from 2 to 100 DPUs; the
--   default is 10. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
--   
--   <a>$sel:timeout:MLTransform'</a>, <a>mLTransform_timeout</a> - The
--   timeout in minutes of the machine learning transform.
--   
--   <a>$sel:transformEncryption:MLTransform'</a>,
--   <a>mLTransform_transformEncryption</a> - The encryption-at-rest
--   settings of the transform that apply to accessing user data. Machine
--   learning transforms can access user data encrypted in Amazon S3 using
--   KMS.
--   
--   <a>$sel:description:MLTransform'</a>, <a>mLTransform_description</a> -
--   A user-defined, long-form description text for the machine learning
--   transform. Descriptions are not guaranteed to be unique and can be
--   changed at any time.
--   
--   <a>$sel:createdOn:MLTransform'</a>, <a>mLTransform_createdOn</a> - A
--   timestamp. The time and date that this machine learning transform was
--   created.
--   
--   <a>$sel:transformId:MLTransform'</a>, <a>mLTransform_transformId</a> -
--   The unique transform ID that is generated for the machine learning
--   transform. The ID is guaranteed to be unique and does not change.
newMLTransform :: MLTransform

-- | The current status of the machine learning transform.
mLTransform_status :: Lens' MLTransform (Maybe TransformStatusType)

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a task of the transform runs.
--   
--   If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).
mLTransform_numberOfWorkers :: Lens' MLTransform (Maybe Int)

-- | A timestamp. The last point in time when this machine learning
--   transform was modified.
mLTransform_lastModifiedOn :: Lens' MLTransform (Maybe UTCTime)

-- | A count identifier for the labeling files generated by Glue for this
--   transform. As you create a better transform, you can iteratively
--   download, label, and upload the labeling file.
mLTransform_labelCount :: Lens' MLTransform (Maybe Int)

-- | The type of predefined worker that is allocated when a task of this
--   transform runs. Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
mLTransform_workerType :: Lens' MLTransform (Maybe WorkerType)

-- | A list of Glue table definitions used by the transform.
mLTransform_inputRecordTables :: Lens' MLTransform (Maybe [GlueTable])

-- | This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
mLTransform_glueVersion :: Lens' MLTransform (Maybe Text)

-- | An <tt>EvaluationMetrics</tt> object. Evaluation metrics provide an
--   estimate of the quality of your machine learning transform.
mLTransform_evaluationMetrics :: Lens' MLTransform (Maybe EvaluationMetrics)

-- | A map of key-value pairs representing the columns and data types that
--   this transform can run against. Has an upper bound of 100 columns.
mLTransform_schema :: Lens' MLTransform (Maybe [SchemaColumn])

-- | The name or Amazon Resource Name (ARN) of the IAM role with the
--   required permissions. The required permissions include both Glue
--   service role permissions to Glue resources, and Amazon S3 permissions
--   required by the transform.
--   
--   <ul>
--   <li>This role needs Glue service role permissions to allow access to
--   resources in Glue. See <a>Attach a Policy to IAM Users That Access
--   Glue</a>.</li>
--   <li>This role needs permission to your Amazon Simple Storage Service
--   (Amazon S3) sources, targets, temporary directory, scripts, and any
--   libraries used by the task run for this transform.</li>
--   </ul>
mLTransform_role :: Lens' MLTransform (Maybe Text)

-- | A user-defined name for the machine learning transform. Names are not
--   guaranteed unique and can be changed at any time.
mLTransform_name :: Lens' MLTransform (Maybe Text)

-- | A <tt>TransformParameters</tt> object. You can use parameters to tune
--   (customize) the behavior of the machine learning transform by
--   specifying what data it learns from and your preference on various
--   tradeoffs (such as precious vs. recall, or accuracy vs. cost).
mLTransform_parameters :: Lens' MLTransform (Maybe TransformParameters)

-- | The maximum number of times to retry after an <tt>MLTaskRun</tt> of
--   the machine learning transform fails.
mLTransform_maxRetries :: Lens' MLTransform (Maybe Int)

-- | The number of Glue data processing units (DPUs) that are allocated to
--   task runs for this transform. You can allocate from 2 to 100 DPUs; the
--   default is 10. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
mLTransform_maxCapacity :: Lens' MLTransform (Maybe Double)

-- | The timeout in minutes of the machine learning transform.
mLTransform_timeout :: Lens' MLTransform (Maybe Natural)

-- | The encryption-at-rest settings of the transform that apply to
--   accessing user data. Machine learning transforms can access user data
--   encrypted in Amazon S3 using KMS.
mLTransform_transformEncryption :: Lens' MLTransform (Maybe TransformEncryption)

-- | A user-defined, long-form description text for the machine learning
--   transform. Descriptions are not guaranteed to be unique and can be
--   changed at any time.
mLTransform_description :: Lens' MLTransform (Maybe Text)

-- | A timestamp. The time and date that this machine learning transform
--   was created.
mLTransform_createdOn :: Lens' MLTransform (Maybe UTCTime)

-- | The unique transform ID that is generated for the machine learning
--   transform. The ID is guaranteed to be unique and does not change.
mLTransform_transformId :: Lens' MLTransform (Maybe Text)

-- | The encryption-at-rest settings of the transform that apply to
--   accessing user data.
--   
--   <i>See:</i> <a>newMLUserDataEncryption</a> smart constructor.
data MLUserDataEncryption
MLUserDataEncryption' :: Maybe Text -> MLUserDataEncryptionModeString -> MLUserDataEncryption

-- | The ID for the customer-provided KMS key.
[$sel:kmsKeyId:MLUserDataEncryption'] :: MLUserDataEncryption -> Maybe Text

-- | The encryption mode applied to user data. Valid values are:
--   
--   <ul>
--   <li>DISABLED: encryption is disabled</li>
--   <li>SSEKMS: use of server-side encryption with Key Management Service
--   (SSE-KMS) for user data stored in Amazon S3.</li>
--   </ul>
[$sel:mlUserDataEncryptionMode:MLUserDataEncryption'] :: MLUserDataEncryption -> MLUserDataEncryptionModeString

-- | Create a value of <a>MLUserDataEncryption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:MLUserDataEncryption'</a>,
--   <a>mLUserDataEncryption_kmsKeyId</a> - The ID for the
--   customer-provided KMS key.
--   
--   <a>$sel:mlUserDataEncryptionMode:MLUserDataEncryption'</a>,
--   <a>mLUserDataEncryption_mlUserDataEncryptionMode</a> - The encryption
--   mode applied to user data. Valid values are:
--   
--   <ul>
--   <li>DISABLED: encryption is disabled</li>
--   <li>SSEKMS: use of server-side encryption with Key Management Service
--   (SSE-KMS) for user data stored in Amazon S3.</li>
--   </ul>
newMLUserDataEncryption :: MLUserDataEncryptionModeString -> MLUserDataEncryption

-- | The ID for the customer-provided KMS key.
mLUserDataEncryption_kmsKeyId :: Lens' MLUserDataEncryption (Maybe Text)

-- | The encryption mode applied to user data. Valid values are:
--   
--   <ul>
--   <li>DISABLED: encryption is disabled</li>
--   <li>SSEKMS: use of server-side encryption with Key Management Service
--   (SSE-KMS) for user data stored in Amazon S3.</li>
--   </ul>
mLUserDataEncryption_mlUserDataEncryptionMode :: Lens' MLUserDataEncryption MLUserDataEncryptionModeString

-- | Defines a mapping.
--   
--   <i>See:</i> <a>newMappingEntry</a> smart constructor.
data MappingEntry
MappingEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> MappingEntry

-- | The target table.
[$sel:targetTable:MappingEntry'] :: MappingEntry -> Maybe Text

-- | The source type.
[$sel:sourceType:MappingEntry'] :: MappingEntry -> Maybe Text

-- | The name of the source table.
[$sel:sourceTable:MappingEntry'] :: MappingEntry -> Maybe Text

-- | The target type.
[$sel:targetType:MappingEntry'] :: MappingEntry -> Maybe Text

-- | The target path.
[$sel:targetPath:MappingEntry'] :: MappingEntry -> Maybe Text

-- | The source path.
[$sel:sourcePath:MappingEntry'] :: MappingEntry -> Maybe Text

-- | Create a value of <a>MappingEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetTable:MappingEntry'</a>, <a>mappingEntry_targetTable</a>
--   - The target table.
--   
--   <a>$sel:sourceType:MappingEntry'</a>, <a>mappingEntry_sourceType</a> -
--   The source type.
--   
--   <a>$sel:sourceTable:MappingEntry'</a>, <a>mappingEntry_sourceTable</a>
--   - The name of the source table.
--   
--   <a>$sel:targetType:MappingEntry'</a>, <a>mappingEntry_targetType</a> -
--   The target type.
--   
--   <a>$sel:targetPath:MappingEntry'</a>, <a>mappingEntry_targetPath</a> -
--   The target path.
--   
--   <a>$sel:sourcePath:MappingEntry'</a>, <a>mappingEntry_sourcePath</a> -
--   The source path.
newMappingEntry :: MappingEntry

-- | The target table.
mappingEntry_targetTable :: Lens' MappingEntry (Maybe Text)

-- | The source type.
mappingEntry_sourceType :: Lens' MappingEntry (Maybe Text)

-- | The name of the source table.
mappingEntry_sourceTable :: Lens' MappingEntry (Maybe Text)

-- | The target type.
mappingEntry_targetType :: Lens' MappingEntry (Maybe Text)

-- | The target path.
mappingEntry_targetPath :: Lens' MappingEntry (Maybe Text)

-- | The source path.
mappingEntry_sourcePath :: Lens' MappingEntry (Maybe Text)

-- | A structure containing metadata information for a schema version.
--   
--   <i>See:</i> <a>newMetadataInfo</a> smart constructor.
data MetadataInfo
MetadataInfo' :: Maybe Text -> Maybe [OtherMetadataValueListItem] -> Maybe Text -> MetadataInfo

-- | The time at which the entry was created.
[$sel:createdTime:MetadataInfo'] :: MetadataInfo -> Maybe Text

-- | Other metadata belonging to the same metadata key.
[$sel:otherMetadataValueList:MetadataInfo'] :: MetadataInfo -> Maybe [OtherMetadataValueListItem]

-- | The metadata key’s corresponding value.
[$sel:metadataValue:MetadataInfo'] :: MetadataInfo -> Maybe Text

-- | Create a value of <a>MetadataInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdTime:MetadataInfo'</a>, <a>metadataInfo_createdTime</a>
--   - The time at which the entry was created.
--   
--   <a>$sel:otherMetadataValueList:MetadataInfo'</a>,
--   <a>metadataInfo_otherMetadataValueList</a> - Other metadata belonging
--   to the same metadata key.
--   
--   <a>$sel:metadataValue:MetadataInfo'</a>,
--   <a>metadataInfo_metadataValue</a> - The metadata key’s corresponding
--   value.
newMetadataInfo :: MetadataInfo

-- | The time at which the entry was created.
metadataInfo_createdTime :: Lens' MetadataInfo (Maybe Text)

-- | Other metadata belonging to the same metadata key.
metadataInfo_otherMetadataValueList :: Lens' MetadataInfo (Maybe [OtherMetadataValueListItem])

-- | The metadata key’s corresponding value.
metadataInfo_metadataValue :: Lens' MetadataInfo (Maybe Text)

-- | A structure containing a key value pair for metadata.
--   
--   <i>See:</i> <a>newMetadataKeyValuePair</a> smart constructor.
data MetadataKeyValuePair
MetadataKeyValuePair' :: Maybe Text -> Maybe Text -> MetadataKeyValuePair

-- | A metadata key.
[$sel:metadataKey:MetadataKeyValuePair'] :: MetadataKeyValuePair -> Maybe Text

-- | A metadata key’s corresponding value.
[$sel:metadataValue:MetadataKeyValuePair'] :: MetadataKeyValuePair -> Maybe Text

-- | Create a value of <a>MetadataKeyValuePair</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metadataKey:MetadataKeyValuePair'</a>,
--   <a>metadataKeyValuePair_metadataKey</a> - A metadata key.
--   
--   <a>$sel:metadataValue:MetadataKeyValuePair'</a>,
--   <a>metadataKeyValuePair_metadataValue</a> - A metadata key’s
--   corresponding value.
newMetadataKeyValuePair :: MetadataKeyValuePair

-- | A metadata key.
metadataKeyValuePair_metadataKey :: Lens' MetadataKeyValuePair (Maybe Text)

-- | A metadata key’s corresponding value.
metadataKeyValuePair_metadataValue :: Lens' MetadataKeyValuePair (Maybe Text)

-- | Specifies an Amazon DocumentDB or MongoDB data store to crawl.
--   
--   <i>See:</i> <a>newMongoDBTarget</a> smart constructor.
data MongoDBTarget
MongoDBTarget' :: Maybe Text -> Maybe Text -> Maybe Bool -> MongoDBTarget

-- | The path of the Amazon DocumentDB or MongoDB target
--   (database/collection).
[$sel:path:MongoDBTarget'] :: MongoDBTarget -> Maybe Text

-- | The name of the connection to use to connect to the Amazon DocumentDB
--   or MongoDB target.
[$sel:connectionName:MongoDBTarget'] :: MongoDBTarget -> Maybe Text

-- | Indicates whether to scan all the records, or to sample rows from the
--   table. Scanning all the records can take a long time when the table is
--   not a high throughput table.
--   
--   A value of <tt>true</tt> means to scan all records, while a value of
--   <tt>false</tt> means to sample the records. If no value is specified,
--   the value defaults to <tt>true</tt>.
[$sel:scanAll:MongoDBTarget'] :: MongoDBTarget -> Maybe Bool

-- | Create a value of <a>MongoDBTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:MongoDBTarget'</a>, <a>mongoDBTarget_path</a> - The path
--   of the Amazon DocumentDB or MongoDB target (database/collection).
--   
--   <a>$sel:connectionName:MongoDBTarget'</a>,
--   <a>mongoDBTarget_connectionName</a> - The name of the connection to
--   use to connect to the Amazon DocumentDB or MongoDB target.
--   
--   <a>$sel:scanAll:MongoDBTarget'</a>, <a>mongoDBTarget_scanAll</a> -
--   Indicates whether to scan all the records, or to sample rows from the
--   table. Scanning all the records can take a long time when the table is
--   not a high throughput table.
--   
--   A value of <tt>true</tt> means to scan all records, while a value of
--   <tt>false</tt> means to sample the records. If no value is specified,
--   the value defaults to <tt>true</tt>.
newMongoDBTarget :: MongoDBTarget

-- | The path of the Amazon DocumentDB or MongoDB target
--   (database/collection).
mongoDBTarget_path :: Lens' MongoDBTarget (Maybe Text)

-- | The name of the connection to use to connect to the Amazon DocumentDB
--   or MongoDB target.
mongoDBTarget_connectionName :: Lens' MongoDBTarget (Maybe Text)

-- | Indicates whether to scan all the records, or to sample rows from the
--   table. Scanning all the records can take a long time when the table is
--   not a high throughput table.
--   
--   A value of <tt>true</tt> means to scan all records, while a value of
--   <tt>false</tt> means to sample the records. If no value is specified,
--   the value defaults to <tt>true</tt>.
mongoDBTarget_scanAll :: Lens' MongoDBTarget (Maybe Bool)

-- | A node represents an Glue component (trigger, crawler, or job) on a
--   workflow graph.
--   
--   <i>See:</i> <a>newNode</a> smart constructor.
data Node
Node' :: Maybe TriggerNodeDetails -> Maybe Text -> Maybe CrawlerNodeDetails -> Maybe Text -> Maybe JobNodeDetails -> Maybe NodeType -> Node

-- | Details of the Trigger when the node represents a Trigger.
[$sel:triggerDetails:Node'] :: Node -> Maybe TriggerNodeDetails

-- | The unique Id assigned to the node within the workflow.
[$sel:uniqueId:Node'] :: Node -> Maybe Text

-- | Details of the crawler when the node represents a crawler.
[$sel:crawlerDetails:Node'] :: Node -> Maybe CrawlerNodeDetails

-- | The name of the Glue component represented by the node.
[$sel:name:Node'] :: Node -> Maybe Text

-- | Details of the Job when the node represents a Job.
[$sel:jobDetails:Node'] :: Node -> Maybe JobNodeDetails

-- | The type of Glue component represented by the node.
[$sel:type':Node'] :: Node -> Maybe NodeType

-- | Create a value of <a>Node</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggerDetails:Node'</a>, <a>node_triggerDetails</a> - Details
--   of the Trigger when the node represents a Trigger.
--   
--   <a>$sel:uniqueId:Node'</a>, <a>node_uniqueId</a> - The unique Id
--   assigned to the node within the workflow.
--   
--   <a>$sel:crawlerDetails:Node'</a>, <a>node_crawlerDetails</a> - Details
--   of the crawler when the node represents a crawler.
--   
--   <a>$sel:name:Node'</a>, <a>node_name</a> - The name of the Glue
--   component represented by the node.
--   
--   <a>$sel:jobDetails:Node'</a>, <a>node_jobDetails</a> - Details of the
--   Job when the node represents a Job.
--   
--   <a>$sel:type':Node'</a>, <a>node_type</a> - The type of Glue component
--   represented by the node.
newNode :: Node

-- | Details of the Trigger when the node represents a Trigger.
node_triggerDetails :: Lens' Node (Maybe TriggerNodeDetails)

-- | The unique Id assigned to the node within the workflow.
node_uniqueId :: Lens' Node (Maybe Text)

-- | Details of the crawler when the node represents a crawler.
node_crawlerDetails :: Lens' Node (Maybe CrawlerNodeDetails)

-- | The name of the Glue component represented by the node.
node_name :: Lens' Node (Maybe Text)

-- | Details of the Job when the node represents a Job.
node_jobDetails :: Lens' Node (Maybe JobNodeDetails)

-- | The type of Glue component represented by the node.
node_type :: Lens' Node (Maybe NodeType)

-- | Specifies configuration properties of a notification.
--   
--   <i>See:</i> <a>newNotificationProperty</a> smart constructor.
data NotificationProperty
NotificationProperty' :: Maybe Natural -> NotificationProperty

-- | After a job run starts, the number of minutes to wait before sending a
--   job run delay notification.
[$sel:notifyDelayAfter:NotificationProperty'] :: NotificationProperty -> Maybe Natural

-- | Create a value of <a>NotificationProperty</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notifyDelayAfter:NotificationProperty'</a>,
--   <a>notificationProperty_notifyDelayAfter</a> - After a job run starts,
--   the number of minutes to wait before sending a job run delay
--   notification.
newNotificationProperty :: NotificationProperty

-- | After a job run starts, the number of minutes to wait before sending a
--   job run delay notification.
notificationProperty_notifyDelayAfter :: Lens' NotificationProperty (Maybe Natural)

-- | Specifies the sort order of a sorted column.
--   
--   <i>See:</i> <a>newOrder</a> smart constructor.
data Order
Order' :: Text -> Natural -> Order

-- | The name of the column.
[$sel:column:Order'] :: Order -> Text

-- | Indicates that the column is sorted in ascending order (<tt>==
--   1</tt>), or in descending order (<tt>==0</tt>).
[$sel:sortOrder:Order'] :: Order -> Natural

-- | Create a value of <a>Order</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:column:Order'</a>, <a>order_column</a> - The name of the
--   column.
--   
--   <a>$sel:sortOrder:Order'</a>, <a>order_sortOrder</a> - Indicates that
--   the column is sorted in ascending order (<tt>== 1</tt>), or in
--   descending order (<tt>==0</tt>).
newOrder :: Text -> Natural -> Order

-- | The name of the column.
order_column :: Lens' Order Text

-- | Indicates that the column is sorted in ascending order (<tt>==
--   1</tt>), or in descending order (<tt>==0</tt>).
order_sortOrder :: Lens' Order Natural

-- | A structure containing other metadata for a schema version belonging
--   to the same metadata key.
--   
--   <i>See:</i> <a>newOtherMetadataValueListItem</a> smart constructor.
data OtherMetadataValueListItem
OtherMetadataValueListItem' :: Maybe Text -> Maybe Text -> OtherMetadataValueListItem

-- | The time at which the entry was created.
[$sel:createdTime:OtherMetadataValueListItem'] :: OtherMetadataValueListItem -> Maybe Text

-- | The metadata key’s corresponding value for the other metadata
--   belonging to the same metadata key.
[$sel:metadataValue:OtherMetadataValueListItem'] :: OtherMetadataValueListItem -> Maybe Text

-- | Create a value of <a>OtherMetadataValueListItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdTime:OtherMetadataValueListItem'</a>,
--   <a>otherMetadataValueListItem_createdTime</a> - The time at which the
--   entry was created.
--   
--   <a>$sel:metadataValue:OtherMetadataValueListItem'</a>,
--   <a>otherMetadataValueListItem_metadataValue</a> - The metadata key’s
--   corresponding value for the other metadata belonging to the same
--   metadata key.
newOtherMetadataValueListItem :: OtherMetadataValueListItem

-- | The time at which the entry was created.
otherMetadataValueListItem_createdTime :: Lens' OtherMetadataValueListItem (Maybe Text)

-- | The metadata key’s corresponding value for the other metadata
--   belonging to the same metadata key.
otherMetadataValueListItem_metadataValue :: Lens' OtherMetadataValueListItem (Maybe Text)

-- | Represents a slice of table data.
--   
--   <i>See:</i> <a>newPartition</a> smart constructor.
data Partition
Partition' :: Maybe POSIX -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe StorageDescriptor -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe POSIX -> Maybe Text -> Partition

-- | The time at which the partition was created.
[$sel:creationTime:Partition'] :: Partition -> Maybe POSIX

-- | The values of the partition.
[$sel:values:Partition'] :: Partition -> Maybe [Text]

-- | The ID of the Data Catalog in which the partition resides.
[$sel:catalogId:Partition'] :: Partition -> Maybe Text

-- | The last time at which column statistics were computed for this
--   partition.
[$sel:lastAnalyzedTime:Partition'] :: Partition -> Maybe POSIX

-- | Provides information about the physical location where the partition
--   is stored.
[$sel:storageDescriptor:Partition'] :: Partition -> Maybe StorageDescriptor

-- | The name of the catalog database in which to create the partition.
[$sel:databaseName:Partition'] :: Partition -> Maybe Text

-- | These key-value pairs define partition parameters.
[$sel:parameters:Partition'] :: Partition -> Maybe (HashMap Text Text)

-- | The last time at which the partition was accessed.
[$sel:lastAccessTime:Partition'] :: Partition -> Maybe POSIX

-- | The name of the database table in which to create the partition.
[$sel:tableName:Partition'] :: Partition -> Maybe Text

-- | Create a value of <a>Partition</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Partition'</a>, <a>partition_creationTime</a> -
--   The time at which the partition was created.
--   
--   <a>$sel:values:Partition'</a>, <a>partition_values</a> - The values of
--   the partition.
--   
--   <a>$sel:catalogId:Partition'</a>, <a>partition_catalogId</a> - The ID
--   of the Data Catalog in which the partition resides.
--   
--   <a>$sel:lastAnalyzedTime:Partition'</a>,
--   <a>partition_lastAnalyzedTime</a> - The last time at which column
--   statistics were computed for this partition.
--   
--   <a>$sel:storageDescriptor:Partition'</a>,
--   <a>partition_storageDescriptor</a> - Provides information about the
--   physical location where the partition is stored.
--   
--   <a>$sel:databaseName:Partition'</a>, <a>partition_databaseName</a> -
--   The name of the catalog database in which to create the partition.
--   
--   <a>$sel:parameters:Partition'</a>, <a>partition_parameters</a> - These
--   key-value pairs define partition parameters.
--   
--   <a>$sel:lastAccessTime:Partition'</a>, <a>partition_lastAccessTime</a>
--   - The last time at which the partition was accessed.
--   
--   <a>$sel:tableName:Partition'</a>, <a>partition_tableName</a> - The
--   name of the database table in which to create the partition.
newPartition :: Partition

-- | The time at which the partition was created.
partition_creationTime :: Lens' Partition (Maybe UTCTime)

-- | The values of the partition.
partition_values :: Lens' Partition (Maybe [Text])

-- | The ID of the Data Catalog in which the partition resides.
partition_catalogId :: Lens' Partition (Maybe Text)

-- | The last time at which column statistics were computed for this
--   partition.
partition_lastAnalyzedTime :: Lens' Partition (Maybe UTCTime)

-- | Provides information about the physical location where the partition
--   is stored.
partition_storageDescriptor :: Lens' Partition (Maybe StorageDescriptor)

-- | The name of the catalog database in which to create the partition.
partition_databaseName :: Lens' Partition (Maybe Text)

-- | These key-value pairs define partition parameters.
partition_parameters :: Lens' Partition (Maybe (HashMap Text Text))

-- | The last time at which the partition was accessed.
partition_lastAccessTime :: Lens' Partition (Maybe UTCTime)

-- | The name of the database table in which to create the partition.
partition_tableName :: Lens' Partition (Maybe Text)

-- | Contains information about a partition error.
--   
--   <i>See:</i> <a>newPartitionError</a> smart constructor.
data PartitionError
PartitionError' :: Maybe [Text] -> Maybe ErrorDetail -> PartitionError

-- | The values that define the partition.
[$sel:partitionValues:PartitionError'] :: PartitionError -> Maybe [Text]

-- | The details about the partition error.
[$sel:errorDetail:PartitionError'] :: PartitionError -> Maybe ErrorDetail

-- | Create a value of <a>PartitionError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitionValues:PartitionError'</a>,
--   <a>partitionError_partitionValues</a> - The values that define the
--   partition.
--   
--   <a>$sel:errorDetail:PartitionError'</a>,
--   <a>partitionError_errorDetail</a> - The details about the partition
--   error.
newPartitionError :: PartitionError

-- | The values that define the partition.
partitionError_partitionValues :: Lens' PartitionError (Maybe [Text])

-- | The details about the partition error.
partitionError_errorDetail :: Lens' PartitionError (Maybe ErrorDetail)

-- | A structure for a partition index.
--   
--   <i>See:</i> <a>newPartitionIndex</a> smart constructor.
data PartitionIndex
PartitionIndex' :: NonEmpty Text -> Text -> PartitionIndex

-- | The keys for the partition index.
[$sel:keys:PartitionIndex'] :: PartitionIndex -> NonEmpty Text

-- | The name of the partition index.
[$sel:indexName:PartitionIndex'] :: PartitionIndex -> Text

-- | Create a value of <a>PartitionIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keys:PartitionIndex'</a>, <a>partitionIndex_keys</a> - The
--   keys for the partition index.
--   
--   <a>$sel:indexName:PartitionIndex'</a>, <a>partitionIndex_indexName</a>
--   - The name of the partition index.
newPartitionIndex :: NonEmpty Text -> Text -> PartitionIndex

-- | The keys for the partition index.
partitionIndex_keys :: Lens' PartitionIndex (NonEmpty Text)

-- | The name of the partition index.
partitionIndex_indexName :: Lens' PartitionIndex Text

-- | A descriptor for a partition index in a table.
--   
--   <i>See:</i> <a>newPartitionIndexDescriptor</a> smart constructor.
data PartitionIndexDescriptor
PartitionIndexDescriptor' :: Maybe [BackfillError] -> Text -> NonEmpty KeySchemaElement -> PartitionIndexStatus -> PartitionIndexDescriptor

-- | A list of errors that can occur when registering partition indexes for
--   an existing table.
[$sel:backfillErrors:PartitionIndexDescriptor'] :: PartitionIndexDescriptor -> Maybe [BackfillError]

-- | The name of the partition index.
[$sel:indexName:PartitionIndexDescriptor'] :: PartitionIndexDescriptor -> Text

-- | A list of one or more keys, as <tt>KeySchemaElement</tt> structures,
--   for the partition index.
[$sel:keys:PartitionIndexDescriptor'] :: PartitionIndexDescriptor -> NonEmpty KeySchemaElement

-- | The status of the partition index.
--   
--   The possible statuses are:
--   
--   <ul>
--   <li>CREATING: The index is being created. When an index is in a
--   CREATING state, the index or its table cannot be deleted.</li>
--   <li>ACTIVE: The index creation succeeds.</li>
--   <li>FAILED: The index creation fails.</li>
--   <li>DELETING: The index is deleted from the list of indexes.</li>
--   </ul>
[$sel:indexStatus:PartitionIndexDescriptor'] :: PartitionIndexDescriptor -> PartitionIndexStatus

-- | Create a value of <a>PartitionIndexDescriptor</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backfillErrors:PartitionIndexDescriptor'</a>,
--   <a>partitionIndexDescriptor_backfillErrors</a> - A list of errors that
--   can occur when registering partition indexes for an existing table.
--   
--   <a>$sel:indexName:PartitionIndexDescriptor'</a>,
--   <a>partitionIndexDescriptor_indexName</a> - The name of the partition
--   index.
--   
--   <a>$sel:keys:PartitionIndexDescriptor'</a>,
--   <a>partitionIndexDescriptor_keys</a> - A list of one or more keys, as
--   <tt>KeySchemaElement</tt> structures, for the partition index.
--   
--   <a>$sel:indexStatus:PartitionIndexDescriptor'</a>,
--   <a>partitionIndexDescriptor_indexStatus</a> - The status of the
--   partition index.
--   
--   The possible statuses are:
--   
--   <ul>
--   <li>CREATING: The index is being created. When an index is in a
--   CREATING state, the index or its table cannot be deleted.</li>
--   <li>ACTIVE: The index creation succeeds.</li>
--   <li>FAILED: The index creation fails.</li>
--   <li>DELETING: The index is deleted from the list of indexes.</li>
--   </ul>
newPartitionIndexDescriptor :: Text -> NonEmpty KeySchemaElement -> PartitionIndexStatus -> PartitionIndexDescriptor

-- | A list of errors that can occur when registering partition indexes for
--   an existing table.
partitionIndexDescriptor_backfillErrors :: Lens' PartitionIndexDescriptor (Maybe [BackfillError])

-- | The name of the partition index.
partitionIndexDescriptor_indexName :: Lens' PartitionIndexDescriptor Text

-- | A list of one or more keys, as <tt>KeySchemaElement</tt> structures,
--   for the partition index.
partitionIndexDescriptor_keys :: Lens' PartitionIndexDescriptor (NonEmpty KeySchemaElement)

-- | The status of the partition index.
--   
--   The possible statuses are:
--   
--   <ul>
--   <li>CREATING: The index is being created. When an index is in a
--   CREATING state, the index or its table cannot be deleted.</li>
--   <li>ACTIVE: The index creation succeeds.</li>
--   <li>FAILED: The index creation fails.</li>
--   <li>DELETING: The index is deleted from the list of indexes.</li>
--   </ul>
partitionIndexDescriptor_indexStatus :: Lens' PartitionIndexDescriptor PartitionIndexStatus

-- | The structure used to create and update a partition.
--   
--   <i>See:</i> <a>newPartitionInput</a> smart constructor.
data PartitionInput
PartitionInput' :: Maybe [Text] -> Maybe POSIX -> Maybe StorageDescriptor -> Maybe (HashMap Text Text) -> Maybe POSIX -> PartitionInput

-- | The values of the partition. Although this parameter is not required
--   by the SDK, you must specify this parameter for a valid input.
--   
--   The values for the keys for the new partition must be passed as an
--   array of String objects that must be ordered in the same order as the
--   partition keys appearing in the Amazon S3 prefix. Otherwise Glue will
--   add the values to the wrong keys.
[$sel:values:PartitionInput'] :: PartitionInput -> Maybe [Text]

-- | The last time at which column statistics were computed for this
--   partition.
[$sel:lastAnalyzedTime:PartitionInput'] :: PartitionInput -> Maybe POSIX

-- | Provides information about the physical location where the partition
--   is stored.
[$sel:storageDescriptor:PartitionInput'] :: PartitionInput -> Maybe StorageDescriptor

-- | These key-value pairs define partition parameters.
[$sel:parameters:PartitionInput'] :: PartitionInput -> Maybe (HashMap Text Text)

-- | The last time at which the partition was accessed.
[$sel:lastAccessTime:PartitionInput'] :: PartitionInput -> Maybe POSIX

-- | Create a value of <a>PartitionInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:PartitionInput'</a>, <a>partitionInput_values</a> - The
--   values of the partition. Although this parameter is not required by
--   the SDK, you must specify this parameter for a valid input.
--   
--   The values for the keys for the new partition must be passed as an
--   array of String objects that must be ordered in the same order as the
--   partition keys appearing in the Amazon S3 prefix. Otherwise Glue will
--   add the values to the wrong keys.
--   
--   <a>$sel:lastAnalyzedTime:PartitionInput'</a>,
--   <a>partitionInput_lastAnalyzedTime</a> - The last time at which column
--   statistics were computed for this partition.
--   
--   <a>$sel:storageDescriptor:PartitionInput'</a>,
--   <a>partitionInput_storageDescriptor</a> - Provides information about
--   the physical location where the partition is stored.
--   
--   <a>$sel:parameters:PartitionInput'</a>,
--   <a>partitionInput_parameters</a> - These key-value pairs define
--   partition parameters.
--   
--   <a>$sel:lastAccessTime:PartitionInput'</a>,
--   <a>partitionInput_lastAccessTime</a> - The last time at which the
--   partition was accessed.
newPartitionInput :: PartitionInput

-- | The values of the partition. Although this parameter is not required
--   by the SDK, you must specify this parameter for a valid input.
--   
--   The values for the keys for the new partition must be passed as an
--   array of String objects that must be ordered in the same order as the
--   partition keys appearing in the Amazon S3 prefix. Otherwise Glue will
--   add the values to the wrong keys.
partitionInput_values :: Lens' PartitionInput (Maybe [Text])

-- | The last time at which column statistics were computed for this
--   partition.
partitionInput_lastAnalyzedTime :: Lens' PartitionInput (Maybe UTCTime)

-- | Provides information about the physical location where the partition
--   is stored.
partitionInput_storageDescriptor :: Lens' PartitionInput (Maybe StorageDescriptor)

-- | These key-value pairs define partition parameters.
partitionInput_parameters :: Lens' PartitionInput (Maybe (HashMap Text Text))

-- | The last time at which the partition was accessed.
partitionInput_lastAccessTime :: Lens' PartitionInput (Maybe UTCTime)

-- | Contains a list of values defining partitions.
--   
--   <i>See:</i> <a>newPartitionValueList</a> smart constructor.
data PartitionValueList
PartitionValueList' :: [Text] -> PartitionValueList

-- | The list of values.
[$sel:values:PartitionValueList'] :: PartitionValueList -> [Text]

-- | Create a value of <a>PartitionValueList</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:PartitionValueList'</a>,
--   <a>partitionValueList_values</a> - The list of values.
newPartitionValueList :: PartitionValueList

-- | The list of values.
partitionValueList_values :: Lens' PartitionValueList [Text]

-- | Specifies the physical requirements for a connection.
--   
--   <i>See:</i> <a>newPhysicalConnectionRequirements</a> smart
--   constructor.
data PhysicalConnectionRequirements
PhysicalConnectionRequirements' :: Maybe [Text] -> Maybe Text -> Maybe Text -> PhysicalConnectionRequirements

-- | The security group ID list used by the connection.
[$sel:securityGroupIdList:PhysicalConnectionRequirements'] :: PhysicalConnectionRequirements -> Maybe [Text]

-- | The subnet ID used by the connection.
[$sel:subnetId:PhysicalConnectionRequirements'] :: PhysicalConnectionRequirements -> Maybe Text

-- | The connection's Availability Zone. This field is redundant because
--   the specified subnet implies the Availability Zone to be used.
--   Currently the field must be populated, but it will be deprecated in
--   the future.
[$sel:availabilityZone:PhysicalConnectionRequirements'] :: PhysicalConnectionRequirements -> Maybe Text

-- | Create a value of <a>PhysicalConnectionRequirements</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIdList:PhysicalConnectionRequirements'</a>,
--   <a>physicalConnectionRequirements_securityGroupIdList</a> - The
--   security group ID list used by the connection.
--   
--   <a>$sel:subnetId:PhysicalConnectionRequirements'</a>,
--   <a>physicalConnectionRequirements_subnetId</a> - The subnet ID used by
--   the connection.
--   
--   <a>$sel:availabilityZone:PhysicalConnectionRequirements'</a>,
--   <a>physicalConnectionRequirements_availabilityZone</a> - The
--   connection's Availability Zone. This field is redundant because the
--   specified subnet implies the Availability Zone to be used. Currently
--   the field must be populated, but it will be deprecated in the future.
newPhysicalConnectionRequirements :: PhysicalConnectionRequirements

-- | The security group ID list used by the connection.
physicalConnectionRequirements_securityGroupIdList :: Lens' PhysicalConnectionRequirements (Maybe [Text])

-- | The subnet ID used by the connection.
physicalConnectionRequirements_subnetId :: Lens' PhysicalConnectionRequirements (Maybe Text)

-- | The connection's Availability Zone. This field is redundant because
--   the specified subnet implies the Availability Zone to be used.
--   Currently the field must be populated, but it will be deprecated in
--   the future.
physicalConnectionRequirements_availabilityZone :: Lens' PhysicalConnectionRequirements (Maybe Text)

-- | A job run that was used in the predicate of a conditional trigger that
--   triggered this job run.
--   
--   <i>See:</i> <a>newPredecessor</a> smart constructor.
data Predecessor
Predecessor' :: Maybe Text -> Maybe Text -> Predecessor

-- | The name of the job definition used by the predecessor job run.
[$sel:jobName:Predecessor'] :: Predecessor -> Maybe Text

-- | The job-run ID of the predecessor job run.
[$sel:runId:Predecessor'] :: Predecessor -> Maybe Text

-- | Create a value of <a>Predecessor</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:Predecessor'</a>, <a>predecessor_jobName</a> - The
--   name of the job definition used by the predecessor job run.
--   
--   <a>$sel:runId:Predecessor'</a>, <a>predecessor_runId</a> - The job-run
--   ID of the predecessor job run.
newPredecessor :: Predecessor

-- | The name of the job definition used by the predecessor job run.
predecessor_jobName :: Lens' Predecessor (Maybe Text)

-- | The job-run ID of the predecessor job run.
predecessor_runId :: Lens' Predecessor (Maybe Text)

-- | Defines the predicate of the trigger, which determines when it fires.
--   
--   <i>See:</i> <a>newPredicate</a> smart constructor.
data Predicate
Predicate' :: Maybe Logical -> Maybe [Condition] -> Predicate

-- | An optional field if only one condition is listed. If multiple
--   conditions are listed, then this field is required.
[$sel:logical:Predicate'] :: Predicate -> Maybe Logical

-- | A list of the conditions that determine when the trigger will fire.
[$sel:conditions:Predicate'] :: Predicate -> Maybe [Condition]

-- | Create a value of <a>Predicate</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logical:Predicate'</a>, <a>predicate_logical</a> - An optional
--   field if only one condition is listed. If multiple conditions are
--   listed, then this field is required.
--   
--   <a>$sel:conditions:Predicate'</a>, <a>predicate_conditions</a> - A
--   list of the conditions that determine when the trigger will fire.
newPredicate :: Predicate

-- | An optional field if only one condition is listed. If multiple
--   conditions are listed, then this field is required.
predicate_logical :: Lens' Predicate (Maybe Logical)

-- | A list of the conditions that determine when the trigger will fire.
predicate_conditions :: Lens' Predicate (Maybe [Condition])

-- | Permissions granted to a principal.
--   
--   <i>See:</i> <a>newPrincipalPermissions</a> smart constructor.
data PrincipalPermissions
PrincipalPermissions' :: Maybe DataLakePrincipal -> Maybe [Permission] -> PrincipalPermissions

-- | The principal who is granted permissions.
[$sel:principal:PrincipalPermissions'] :: PrincipalPermissions -> Maybe DataLakePrincipal

-- | The permissions that are granted to the principal.
[$sel:permissions:PrincipalPermissions'] :: PrincipalPermissions -> Maybe [Permission]

-- | Create a value of <a>PrincipalPermissions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:principal:PrincipalPermissions'</a>,
--   <a>principalPermissions_principal</a> - The principal who is granted
--   permissions.
--   
--   <a>$sel:permissions:PrincipalPermissions'</a>,
--   <a>principalPermissions_permissions</a> - The permissions that are
--   granted to the principal.
newPrincipalPermissions :: PrincipalPermissions

-- | The principal who is granted permissions.
principalPermissions_principal :: Lens' PrincipalPermissions (Maybe DataLakePrincipal)

-- | The permissions that are granted to the principal.
principalPermissions_permissions :: Lens' PrincipalPermissions (Maybe [Permission])

-- | Defines a property predicate.
--   
--   <i>See:</i> <a>newPropertyPredicate</a> smart constructor.
data PropertyPredicate
PropertyPredicate' :: Maybe Text -> Maybe Text -> Maybe Comparator -> PropertyPredicate

-- | The value of the property.
[$sel:value:PropertyPredicate'] :: PropertyPredicate -> Maybe Text

-- | The key of the property.
[$sel:key:PropertyPredicate'] :: PropertyPredicate -> Maybe Text

-- | The comparator used to compare this property to others.
[$sel:comparator:PropertyPredicate'] :: PropertyPredicate -> Maybe Comparator

-- | Create a value of <a>PropertyPredicate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:PropertyPredicate'</a>, <a>propertyPredicate_value</a> -
--   The value of the property.
--   
--   <a>$sel:key:PropertyPredicate'</a>, <a>propertyPredicate_key</a> - The
--   key of the property.
--   
--   <a>$sel:comparator:PropertyPredicate'</a>,
--   <a>propertyPredicate_comparator</a> - The comparator used to compare
--   this property to others.
newPropertyPredicate :: PropertyPredicate

-- | The value of the property.
propertyPredicate_value :: Lens' PropertyPredicate (Maybe Text)

-- | The key of the property.
propertyPredicate_key :: Lens' PropertyPredicate (Maybe Text)

-- | The comparator used to compare this property to others.
propertyPredicate_comparator :: Lens' PropertyPredicate (Maybe Comparator)

-- | When crawling an Amazon S3 data source after the first crawl is
--   complete, specifies whether to crawl the entire dataset again or to
--   crawl only folders that were added since the last crawler run. For
--   more information, see <a>Incremental Crawls in Glue</a> in the
--   developer guide.
--   
--   <i>See:</i> <a>newRecrawlPolicy</a> smart constructor.
data RecrawlPolicy
RecrawlPolicy' :: Maybe RecrawlBehavior -> RecrawlPolicy

-- | Specifies whether to crawl the entire dataset again or to crawl only
--   folders that were added since the last crawler run.
--   
--   A value of <tt>CRAWL_EVERYTHING</tt> specifies crawling the entire
--   dataset again.
--   
--   A value of <tt>CRAWL_NEW_FOLDERS_ONLY</tt> specifies crawling only
--   folders that were added since the last crawler run.
--   
--   A value of <tt>CRAWL_EVENT_MODE</tt> specifies crawling only the
--   changes identified by Amazon S3 events.
[$sel:recrawlBehavior:RecrawlPolicy'] :: RecrawlPolicy -> Maybe RecrawlBehavior

-- | Create a value of <a>RecrawlPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recrawlBehavior:RecrawlPolicy'</a>,
--   <a>recrawlPolicy_recrawlBehavior</a> - Specifies whether to crawl the
--   entire dataset again or to crawl only folders that were added since
--   the last crawler run.
--   
--   A value of <tt>CRAWL_EVERYTHING</tt> specifies crawling the entire
--   dataset again.
--   
--   A value of <tt>CRAWL_NEW_FOLDERS_ONLY</tt> specifies crawling only
--   folders that were added since the last crawler run.
--   
--   A value of <tt>CRAWL_EVENT_MODE</tt> specifies crawling only the
--   changes identified by Amazon S3 events.
newRecrawlPolicy :: RecrawlPolicy

-- | Specifies whether to crawl the entire dataset again or to crawl only
--   folders that were added since the last crawler run.
--   
--   A value of <tt>CRAWL_EVERYTHING</tt> specifies crawling the entire
--   dataset again.
--   
--   A value of <tt>CRAWL_NEW_FOLDERS_ONLY</tt> specifies crawling only
--   folders that were added since the last crawler run.
--   
--   A value of <tt>CRAWL_EVENT_MODE</tt> specifies crawling only the
--   changes identified by Amazon S3 events.
recrawlPolicy_recrawlBehavior :: Lens' RecrawlPolicy (Maybe RecrawlBehavior)

-- | A wrapper structure that may contain the registry name and Amazon
--   Resource Name (ARN).
--   
--   <i>See:</i> <a>newRegistryId</a> smart constructor.
data RegistryId
RegistryId' :: Maybe Text -> Maybe Text -> RegistryId

-- | Name of the registry. Used only for lookup. One of
--   <tt>RegistryArn</tt> or <tt>RegistryName</tt> has to be provided.
[$sel:registryName:RegistryId'] :: RegistryId -> Maybe Text

-- | Arn of the registry to be updated. One of <tt>RegistryArn</tt> or
--   <tt>RegistryName</tt> has to be provided.
[$sel:registryArn:RegistryId'] :: RegistryId -> Maybe Text

-- | Create a value of <a>RegistryId</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:RegistryId'</a>, <a>registryId_registryName</a> -
--   Name of the registry. Used only for lookup. One of
--   <tt>RegistryArn</tt> or <tt>RegistryName</tt> has to be provided.
--   
--   <a>$sel:registryArn:RegistryId'</a>, <a>registryId_registryArn</a> -
--   Arn of the registry to be updated. One of <tt>RegistryArn</tt> or
--   <tt>RegistryName</tt> has to be provided.
newRegistryId :: RegistryId

-- | Name of the registry. Used only for lookup. One of
--   <tt>RegistryArn</tt> or <tt>RegistryName</tt> has to be provided.
registryId_registryName :: Lens' RegistryId (Maybe Text)

-- | Arn of the registry to be updated. One of <tt>RegistryArn</tt> or
--   <tt>RegistryName</tt> has to be provided.
registryId_registryArn :: Lens' RegistryId (Maybe Text)

-- | A structure containing the details for a registry.
--   
--   <i>See:</i> <a>newRegistryListItem</a> smart constructor.
data RegistryListItem
RegistryListItem' :: Maybe RegistryStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> RegistryListItem

-- | The status of the registry.
[$sel:status:RegistryListItem'] :: RegistryListItem -> Maybe RegistryStatus

-- | The name of the registry.
[$sel:registryName:RegistryListItem'] :: RegistryListItem -> Maybe Text

-- | The data the registry was created.
[$sel:createdTime:RegistryListItem'] :: RegistryListItem -> Maybe Text

-- | The Amazon Resource Name (ARN) of the registry.
[$sel:registryArn:RegistryListItem'] :: RegistryListItem -> Maybe Text

-- | The date the registry was updated.
[$sel:updatedTime:RegistryListItem'] :: RegistryListItem -> Maybe Text

-- | A description of the registry.
[$sel:description:RegistryListItem'] :: RegistryListItem -> Maybe Text

-- | Create a value of <a>RegistryListItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:RegistryListItem'</a>, <a>registryListItem_status</a> -
--   The status of the registry.
--   
--   <a>$sel:registryName:RegistryListItem'</a>,
--   <a>registryListItem_registryName</a> - The name of the registry.
--   
--   <a>$sel:createdTime:RegistryListItem'</a>,
--   <a>registryListItem_createdTime</a> - The data the registry was
--   created.
--   
--   <a>$sel:registryArn:RegistryListItem'</a>,
--   <a>registryListItem_registryArn</a> - The Amazon Resource Name (ARN)
--   of the registry.
--   
--   <a>$sel:updatedTime:RegistryListItem'</a>,
--   <a>registryListItem_updatedTime</a> - The date the registry was
--   updated.
--   
--   <a>$sel:description:RegistryListItem'</a>,
--   <a>registryListItem_description</a> - A description of the registry.
newRegistryListItem :: RegistryListItem

-- | The status of the registry.
registryListItem_status :: Lens' RegistryListItem (Maybe RegistryStatus)

-- | The name of the registry.
registryListItem_registryName :: Lens' RegistryListItem (Maybe Text)

-- | The data the registry was created.
registryListItem_createdTime :: Lens' RegistryListItem (Maybe Text)

-- | The Amazon Resource Name (ARN) of the registry.
registryListItem_registryArn :: Lens' RegistryListItem (Maybe Text)

-- | The date the registry was updated.
registryListItem_updatedTime :: Lens' RegistryListItem (Maybe Text)

-- | A description of the registry.
registryListItem_description :: Lens' RegistryListItem (Maybe Text)

-- | The URIs for function resources.
--   
--   <i>See:</i> <a>newResourceUri</a> smart constructor.
data ResourceUri
ResourceUri' :: Maybe ResourceType -> Maybe Text -> ResourceUri

-- | The type of the resource.
[$sel:resourceType:ResourceUri'] :: ResourceUri -> Maybe ResourceType

-- | The URI for accessing the resource.
[$sel:uri:ResourceUri'] :: ResourceUri -> Maybe Text

-- | Create a value of <a>ResourceUri</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ResourceUri'</a>, <a>resourceUri_resourceType</a>
--   - The type of the resource.
--   
--   <a>$sel:uri:ResourceUri'</a>, <a>resourceUri_uri</a> - The URI for
--   accessing the resource.
newResourceUri :: ResourceUri

-- | The type of the resource.
resourceUri_resourceType :: Lens' ResourceUri (Maybe ResourceType)

-- | The URI for accessing the resource.
resourceUri_uri :: Lens' ResourceUri (Maybe Text)

-- | Specifies how Amazon Simple Storage Service (Amazon S3) data should be
--   encrypted.
--   
--   <i>See:</i> <a>newS3Encryption</a> smart constructor.
data S3Encryption
S3Encryption' :: Maybe S3EncryptionMode -> Maybe Text -> S3Encryption

-- | The encryption mode to use for Amazon S3 data.
[$sel:s3EncryptionMode:S3Encryption'] :: S3Encryption -> Maybe S3EncryptionMode

-- | The Amazon Resource Name (ARN) of the KMS key to be used to encrypt
--   the data.
[$sel:kmsKeyArn:S3Encryption'] :: S3Encryption -> Maybe Text

-- | Create a value of <a>S3Encryption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3EncryptionMode:S3Encryption'</a>,
--   <a>s3Encryption_s3EncryptionMode</a> - The encryption mode to use for
--   Amazon S3 data.
--   
--   <a>$sel:kmsKeyArn:S3Encryption'</a>, <a>s3Encryption_kmsKeyArn</a> -
--   The Amazon Resource Name (ARN) of the KMS key to be used to encrypt
--   the data.
newS3Encryption :: S3Encryption

-- | The encryption mode to use for Amazon S3 data.
s3Encryption_s3EncryptionMode :: Lens' S3Encryption (Maybe S3EncryptionMode)

-- | The Amazon Resource Name (ARN) of the KMS key to be used to encrypt
--   the data.
s3Encryption_kmsKeyArn :: Lens' S3Encryption (Maybe Text)

-- | Specifies a data store in Amazon Simple Storage Service (Amazon S3).
--   
--   <i>See:</i> <a>newS3Target</a> smart constructor.
data S3Target
S3Target' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> S3Target

-- | The path to the Amazon S3 target.
[$sel:path:S3Target'] :: S3Target -> Maybe Text

-- | Sets the number of files in each leaf folder to be crawled when
--   crawling sample files in a dataset. If not set, all the files are
--   crawled. A valid value is an integer between 1 and 249.
[$sel:sampleSize:S3Target'] :: S3Target -> Maybe Int

-- | The name of a connection which allows a job or crawler to access data
--   in Amazon S3 within an Amazon Virtual Private Cloud environment
--   (Amazon VPC).
[$sel:connectionName:S3Target'] :: S3Target -> Maybe Text

-- | A list of glob patterns used to exclude from the crawl. For more
--   information, see <a>Catalog Tables with a Crawler</a>.
[$sel:exclusions:S3Target'] :: S3Target -> Maybe [Text]

-- | A valid Amazon SQS ARN. For example,
--   <tt>arn:aws:sqs:region:account:sqs</tt>.
[$sel:eventQueueArn:S3Target'] :: S3Target -> Maybe Text

-- | A valid Amazon dead-letter SQS ARN. For example,
--   <tt>arn:aws:sqs:region:account:deadLetterQueue</tt>.
[$sel:dlqEventQueueArn:S3Target'] :: S3Target -> Maybe Text

-- | Create a value of <a>S3Target</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:S3Target'</a>, <a>s3Target_path</a> - The path to the
--   Amazon S3 target.
--   
--   <a>$sel:sampleSize:S3Target'</a>, <a>s3Target_sampleSize</a> - Sets
--   the number of files in each leaf folder to be crawled when crawling
--   sample files in a dataset. If not set, all the files are crawled. A
--   valid value is an integer between 1 and 249.
--   
--   <a>$sel:connectionName:S3Target'</a>, <a>s3Target_connectionName</a> -
--   The name of a connection which allows a job or crawler to access data
--   in Amazon S3 within an Amazon Virtual Private Cloud environment
--   (Amazon VPC).
--   
--   <a>$sel:exclusions:S3Target'</a>, <a>s3Target_exclusions</a> - A list
--   of glob patterns used to exclude from the crawl. For more information,
--   see <a>Catalog Tables with a Crawler</a>.
--   
--   <a>$sel:eventQueueArn:S3Target'</a>, <a>s3Target_eventQueueArn</a> - A
--   valid Amazon SQS ARN. For example,
--   <tt>arn:aws:sqs:region:account:sqs</tt>.
--   
--   <a>$sel:dlqEventQueueArn:S3Target'</a>,
--   <a>s3Target_dlqEventQueueArn</a> - A valid Amazon dead-letter SQS ARN.
--   For example, <tt>arn:aws:sqs:region:account:deadLetterQueue</tt>.
newS3Target :: S3Target

-- | The path to the Amazon S3 target.
s3Target_path :: Lens' S3Target (Maybe Text)

-- | Sets the number of files in each leaf folder to be crawled when
--   crawling sample files in a dataset. If not set, all the files are
--   crawled. A valid value is an integer between 1 and 249.
s3Target_sampleSize :: Lens' S3Target (Maybe Int)

-- | The name of a connection which allows a job or crawler to access data
--   in Amazon S3 within an Amazon Virtual Private Cloud environment
--   (Amazon VPC).
s3Target_connectionName :: Lens' S3Target (Maybe Text)

-- | A list of glob patterns used to exclude from the crawl. For more
--   information, see <a>Catalog Tables with a Crawler</a>.
s3Target_exclusions :: Lens' S3Target (Maybe [Text])

-- | A valid Amazon SQS ARN. For example,
--   <tt>arn:aws:sqs:region:account:sqs</tt>.
s3Target_eventQueueArn :: Lens' S3Target (Maybe Text)

-- | A valid Amazon dead-letter SQS ARN. For example,
--   <tt>arn:aws:sqs:region:account:deadLetterQueue</tt>.
s3Target_dlqEventQueueArn :: Lens' S3Target (Maybe Text)

-- | A scheduling object using a <tt>cron</tt> statement to schedule an
--   event.
--   
--   <i>See:</i> <a>newSchedule</a> smart constructor.
data Schedule
Schedule' :: Maybe ScheduleState -> Maybe Text -> Schedule

-- | The state of the schedule.
[$sel:state:Schedule'] :: Schedule -> Maybe ScheduleState

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
[$sel:scheduleExpression:Schedule'] :: Schedule -> Maybe Text

-- | Create a value of <a>Schedule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:Schedule'</a>, <a>schedule_state</a> - The state of the
--   schedule.
--   
--   <a>$sel:scheduleExpression:Schedule'</a>,
--   <a>schedule_scheduleExpression</a> - A <tt>cron</tt> expression used
--   to specify the schedule (see <a>Time-Based Schedules for Jobs and
--   Crawlers</a>. For example, to run something every day at 12:15 UTC,
--   you would specify: <tt>cron(15 12 * * ? *)</tt>.
newSchedule :: Schedule

-- | The state of the schedule.
schedule_state :: Lens' Schedule (Maybe ScheduleState)

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
schedule_scheduleExpression :: Lens' Schedule (Maybe Text)

-- | A policy that specifies update and deletion behaviors for the crawler.
--   
--   <i>See:</i> <a>newSchemaChangePolicy</a> smart constructor.
data SchemaChangePolicy
SchemaChangePolicy' :: Maybe DeleteBehavior -> Maybe UpdateBehavior -> SchemaChangePolicy

-- | The deletion behavior when the crawler finds a deleted object.
[$sel:deleteBehavior:SchemaChangePolicy'] :: SchemaChangePolicy -> Maybe DeleteBehavior

-- | The update behavior when the crawler finds a changed schema.
[$sel:updateBehavior:SchemaChangePolicy'] :: SchemaChangePolicy -> Maybe UpdateBehavior

-- | Create a value of <a>SchemaChangePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deleteBehavior:SchemaChangePolicy'</a>,
--   <a>schemaChangePolicy_deleteBehavior</a> - The deletion behavior when
--   the crawler finds a deleted object.
--   
--   <a>$sel:updateBehavior:SchemaChangePolicy'</a>,
--   <a>schemaChangePolicy_updateBehavior</a> - The update behavior when
--   the crawler finds a changed schema.
newSchemaChangePolicy :: SchemaChangePolicy

-- | The deletion behavior when the crawler finds a deleted object.
schemaChangePolicy_deleteBehavior :: Lens' SchemaChangePolicy (Maybe DeleteBehavior)

-- | The update behavior when the crawler finds a changed schema.
schemaChangePolicy_updateBehavior :: Lens' SchemaChangePolicy (Maybe UpdateBehavior)

-- | A key-value pair representing a column and data type that this
--   transform can run against. The <tt>Schema</tt> parameter of the
--   <tt>MLTransform</tt> may contain up to 100 of these structures.
--   
--   <i>See:</i> <a>newSchemaColumn</a> smart constructor.
data SchemaColumn
SchemaColumn' :: Maybe Text -> Maybe Text -> SchemaColumn

-- | The name of the column.
[$sel:name:SchemaColumn'] :: SchemaColumn -> Maybe Text

-- | The type of data in the column.
[$sel:dataType:SchemaColumn'] :: SchemaColumn -> Maybe Text

-- | Create a value of <a>SchemaColumn</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:SchemaColumn'</a>, <a>schemaColumn_name</a> - The name of
--   the column.
--   
--   <a>$sel:dataType:SchemaColumn'</a>, <a>schemaColumn_dataType</a> - The
--   type of data in the column.
newSchemaColumn :: SchemaColumn

-- | The name of the column.
schemaColumn_name :: Lens' SchemaColumn (Maybe Text)

-- | The type of data in the column.
schemaColumn_dataType :: Lens' SchemaColumn (Maybe Text)

-- | The unique ID of the schema in the Glue schema registry.
--   
--   <i>See:</i> <a>newSchemaId</a> smart constructor.
data SchemaId
SchemaId' :: Maybe Text -> Maybe Text -> Maybe Text -> SchemaId

-- | The name of the schema registry that contains the schema.
[$sel:registryName:SchemaId'] :: SchemaId -> Maybe Text

-- | The name of the schema. One of <tt>SchemaArn</tt> or
--   <tt>SchemaName</tt> has to be provided.
[$sel:schemaName:SchemaId'] :: SchemaId -> Maybe Text

-- | The Amazon Resource Name (ARN) of the schema. One of
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be provided.
[$sel:schemaArn:SchemaId'] :: SchemaId -> Maybe Text

-- | Create a value of <a>SchemaId</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:SchemaId'</a>, <a>schemaId_registryName</a> - The
--   name of the schema registry that contains the schema.
--   
--   <a>$sel:schemaName:SchemaId'</a>, <a>schemaId_schemaName</a> - The
--   name of the schema. One of <tt>SchemaArn</tt> or <tt>SchemaName</tt>
--   has to be provided.
--   
--   <a>$sel:schemaArn:SchemaId'</a>, <a>schemaId_schemaArn</a> - The
--   Amazon Resource Name (ARN) of the schema. One of <tt>SchemaArn</tt> or
--   <tt>SchemaName</tt> has to be provided.
newSchemaId :: SchemaId

-- | The name of the schema registry that contains the schema.
schemaId_registryName :: Lens' SchemaId (Maybe Text)

-- | The name of the schema. One of <tt>SchemaArn</tt> or
--   <tt>SchemaName</tt> has to be provided.
schemaId_schemaName :: Lens' SchemaId (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schema. One of
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be provided.
schemaId_schemaArn :: Lens' SchemaId (Maybe Text)

-- | An object that contains minimal details for a schema.
--   
--   <i>See:</i> <a>newSchemaListItem</a> smart constructor.
data SchemaListItem
SchemaListItem' :: Maybe Text -> Maybe Text -> Maybe SchemaStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> SchemaListItem

-- | the name of the registry where the schema resides.
[$sel:registryName:SchemaListItem'] :: SchemaListItem -> Maybe Text

-- | The date and time that a schema was created.
[$sel:createdTime:SchemaListItem'] :: SchemaListItem -> Maybe Text

-- | The status of the schema.
[$sel:schemaStatus:SchemaListItem'] :: SchemaListItem -> Maybe SchemaStatus

-- | The name of the schema.
[$sel:schemaName:SchemaListItem'] :: SchemaListItem -> Maybe Text

-- | The Amazon Resource Name (ARN) for the schema.
[$sel:schemaArn:SchemaListItem'] :: SchemaListItem -> Maybe Text

-- | The date and time that a schema was updated.
[$sel:updatedTime:SchemaListItem'] :: SchemaListItem -> Maybe Text

-- | A description for the schema.
[$sel:description:SchemaListItem'] :: SchemaListItem -> Maybe Text

-- | Create a value of <a>SchemaListItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:SchemaListItem'</a>,
--   <a>schemaListItem_registryName</a> - the name of the registry where
--   the schema resides.
--   
--   <a>$sel:createdTime:SchemaListItem'</a>,
--   <a>schemaListItem_createdTime</a> - The date and time that a schema
--   was created.
--   
--   <a>$sel:schemaStatus:SchemaListItem'</a>,
--   <a>schemaListItem_schemaStatus</a> - The status of the schema.
--   
--   <a>$sel:schemaName:SchemaListItem'</a>,
--   <a>schemaListItem_schemaName</a> - The name of the schema.
--   
--   <a>$sel:schemaArn:SchemaListItem'</a>, <a>schemaListItem_schemaArn</a>
--   - The Amazon Resource Name (ARN) for the schema.
--   
--   <a>$sel:updatedTime:SchemaListItem'</a>,
--   <a>schemaListItem_updatedTime</a> - The date and time that a schema
--   was updated.
--   
--   <a>$sel:description:SchemaListItem'</a>,
--   <a>schemaListItem_description</a> - A description for the schema.
newSchemaListItem :: SchemaListItem

-- | the name of the registry where the schema resides.
schemaListItem_registryName :: Lens' SchemaListItem (Maybe Text)

-- | The date and time that a schema was created.
schemaListItem_createdTime :: Lens' SchemaListItem (Maybe Text)

-- | The status of the schema.
schemaListItem_schemaStatus :: Lens' SchemaListItem (Maybe SchemaStatus)

-- | The name of the schema.
schemaListItem_schemaName :: Lens' SchemaListItem (Maybe Text)

-- | The Amazon Resource Name (ARN) for the schema.
schemaListItem_schemaArn :: Lens' SchemaListItem (Maybe Text)

-- | The date and time that a schema was updated.
schemaListItem_updatedTime :: Lens' SchemaListItem (Maybe Text)

-- | A description for the schema.
schemaListItem_description :: Lens' SchemaListItem (Maybe Text)

-- | An object that references a schema stored in the Glue Schema Registry.
--   
--   <i>See:</i> <a>newSchemaReference</a> smart constructor.
data SchemaReference
SchemaReference' :: Maybe Text -> Maybe SchemaId -> Maybe Natural -> SchemaReference

-- | The unique ID assigned to a version of the schema. Either this or the
--   <tt>SchemaId</tt> has to be provided.
[$sel:schemaVersionId:SchemaReference'] :: SchemaReference -> Maybe Text

-- | A structure that contains schema identity fields. Either this or the
--   <tt>SchemaVersionId</tt> has to be provided.
[$sel:schemaId:SchemaReference'] :: SchemaReference -> Maybe SchemaId

-- | The version number of the schema.
[$sel:schemaVersionNumber:SchemaReference'] :: SchemaReference -> Maybe Natural

-- | Create a value of <a>SchemaReference</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaVersionId:SchemaReference'</a>,
--   <a>schemaReference_schemaVersionId</a> - The unique ID assigned to a
--   version of the schema. Either this or the <tt>SchemaId</tt> has to be
--   provided.
--   
--   <a>$sel:schemaId:SchemaReference'</a>, <a>schemaReference_schemaId</a>
--   - A structure that contains schema identity fields. Either this or the
--   <tt>SchemaVersionId</tt> has to be provided.
--   
--   <a>$sel:schemaVersionNumber:SchemaReference'</a>,
--   <a>schemaReference_schemaVersionNumber</a> - The version number of the
--   schema.
newSchemaReference :: SchemaReference

-- | The unique ID assigned to a version of the schema. Either this or the
--   <tt>SchemaId</tt> has to be provided.
schemaReference_schemaVersionId :: Lens' SchemaReference (Maybe Text)

-- | A structure that contains schema identity fields. Either this or the
--   <tt>SchemaVersionId</tt> has to be provided.
schemaReference_schemaId :: Lens' SchemaReference (Maybe SchemaId)

-- | The version number of the schema.
schemaReference_schemaVersionNumber :: Lens' SchemaReference (Maybe Natural)

-- | An object that contains the error details for an operation on a schema
--   version.
--   
--   <i>See:</i> <a>newSchemaVersionErrorItem</a> smart constructor.
data SchemaVersionErrorItem
SchemaVersionErrorItem' :: Maybe Natural -> Maybe ErrorDetails -> SchemaVersionErrorItem

-- | The version number of the schema.
[$sel:versionNumber:SchemaVersionErrorItem'] :: SchemaVersionErrorItem -> Maybe Natural

-- | The details of the error for the schema version.
[$sel:errorDetails:SchemaVersionErrorItem'] :: SchemaVersionErrorItem -> Maybe ErrorDetails

-- | Create a value of <a>SchemaVersionErrorItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionNumber:SchemaVersionErrorItem'</a>,
--   <a>schemaVersionErrorItem_versionNumber</a> - The version number of
--   the schema.
--   
--   <a>$sel:errorDetails:SchemaVersionErrorItem'</a>,
--   <a>schemaVersionErrorItem_errorDetails</a> - The details of the error
--   for the schema version.
newSchemaVersionErrorItem :: SchemaVersionErrorItem

-- | The version number of the schema.
schemaVersionErrorItem_versionNumber :: Lens' SchemaVersionErrorItem (Maybe Natural)

-- | The details of the error for the schema version.
schemaVersionErrorItem_errorDetails :: Lens' SchemaVersionErrorItem (Maybe ErrorDetails)

-- | An object containing the details about a schema version.
--   
--   <i>See:</i> <a>newSchemaVersionListItem</a> smart constructor.
data SchemaVersionListItem
SchemaVersionListItem' :: Maybe SchemaVersionStatus -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> SchemaVersionListItem

-- | The status of the schema version.
[$sel:status:SchemaVersionListItem'] :: SchemaVersionListItem -> Maybe SchemaVersionStatus

-- | The date and time the schema version was created.
[$sel:createdTime:SchemaVersionListItem'] :: SchemaVersionListItem -> Maybe Text

-- | The unique identifier of the schema version.
[$sel:schemaVersionId:SchemaVersionListItem'] :: SchemaVersionListItem -> Maybe Text

-- | The version number of the schema.
[$sel:versionNumber:SchemaVersionListItem'] :: SchemaVersionListItem -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the schema.
[$sel:schemaArn:SchemaVersionListItem'] :: SchemaVersionListItem -> Maybe Text

-- | Create a value of <a>SchemaVersionListItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SchemaVersionListItem'</a>,
--   <a>schemaVersionListItem_status</a> - The status of the schema
--   version.
--   
--   <a>$sel:createdTime:SchemaVersionListItem'</a>,
--   <a>schemaVersionListItem_createdTime</a> - The date and time the
--   schema version was created.
--   
--   <a>$sel:schemaVersionId:SchemaVersionListItem'</a>,
--   <a>schemaVersionListItem_schemaVersionId</a> - The unique identifier
--   of the schema version.
--   
--   <a>$sel:versionNumber:SchemaVersionListItem'</a>,
--   <a>schemaVersionListItem_versionNumber</a> - The version number of the
--   schema.
--   
--   <a>$sel:schemaArn:SchemaVersionListItem'</a>,
--   <a>schemaVersionListItem_schemaArn</a> - The Amazon Resource Name
--   (ARN) of the schema.
newSchemaVersionListItem :: SchemaVersionListItem

-- | The status of the schema version.
schemaVersionListItem_status :: Lens' SchemaVersionListItem (Maybe SchemaVersionStatus)

-- | The date and time the schema version was created.
schemaVersionListItem_createdTime :: Lens' SchemaVersionListItem (Maybe Text)

-- | The unique identifier of the schema version.
schemaVersionListItem_schemaVersionId :: Lens' SchemaVersionListItem (Maybe Text)

-- | The version number of the schema.
schemaVersionListItem_versionNumber :: Lens' SchemaVersionListItem (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the schema.
schemaVersionListItem_schemaArn :: Lens' SchemaVersionListItem (Maybe Text)

-- | A structure containing the schema version information.
--   
--   <i>See:</i> <a>newSchemaVersionNumber</a> smart constructor.
data SchemaVersionNumber
SchemaVersionNumber' :: Maybe Natural -> Maybe Bool -> SchemaVersionNumber

-- | The version number of the schema.
[$sel:versionNumber:SchemaVersionNumber'] :: SchemaVersionNumber -> Maybe Natural

-- | The latest version available for the schema.
[$sel:latestVersion:SchemaVersionNumber'] :: SchemaVersionNumber -> Maybe Bool

-- | Create a value of <a>SchemaVersionNumber</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionNumber:SchemaVersionNumber'</a>,
--   <a>schemaVersionNumber_versionNumber</a> - The version number of the
--   schema.
--   
--   <a>$sel:latestVersion:SchemaVersionNumber'</a>,
--   <a>schemaVersionNumber_latestVersion</a> - The latest version
--   available for the schema.
newSchemaVersionNumber :: SchemaVersionNumber

-- | The version number of the schema.
schemaVersionNumber_versionNumber :: Lens' SchemaVersionNumber (Maybe Natural)

-- | The latest version available for the schema.
schemaVersionNumber_latestVersion :: Lens' SchemaVersionNumber (Maybe Bool)

-- | Specifies a security configuration.
--   
--   <i>See:</i> <a>newSecurityConfiguration</a> smart constructor.
data SecurityConfiguration
SecurityConfiguration' :: Maybe Text -> Maybe EncryptionConfiguration -> Maybe POSIX -> SecurityConfiguration

-- | The name of the security configuration.
[$sel:name:SecurityConfiguration'] :: SecurityConfiguration -> Maybe Text

-- | The encryption configuration associated with this security
--   configuration.
[$sel:encryptionConfiguration:SecurityConfiguration'] :: SecurityConfiguration -> Maybe EncryptionConfiguration

-- | The time at which this security configuration was created.
[$sel:createdTimeStamp:SecurityConfiguration'] :: SecurityConfiguration -> Maybe POSIX

-- | Create a value of <a>SecurityConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:SecurityConfiguration'</a>,
--   <a>securityConfiguration_name</a> - The name of the security
--   configuration.
--   
--   <a>$sel:encryptionConfiguration:SecurityConfiguration'</a>,
--   <a>securityConfiguration_encryptionConfiguration</a> - The encryption
--   configuration associated with this security configuration.
--   
--   <a>$sel:createdTimeStamp:SecurityConfiguration'</a>,
--   <a>securityConfiguration_createdTimeStamp</a> - The time at which this
--   security configuration was created.
newSecurityConfiguration :: SecurityConfiguration

-- | The name of the security configuration.
securityConfiguration_name :: Lens' SecurityConfiguration (Maybe Text)

-- | The encryption configuration associated with this security
--   configuration.
securityConfiguration_encryptionConfiguration :: Lens' SecurityConfiguration (Maybe EncryptionConfiguration)

-- | The time at which this security configuration was created.
securityConfiguration_createdTimeStamp :: Lens' SecurityConfiguration (Maybe UTCTime)

-- | Defines a non-overlapping region of a table's partitions, allowing
--   multiple requests to be run in parallel.
--   
--   <i>See:</i> <a>newSegment</a> smart constructor.
data Segment
Segment' :: Natural -> Natural -> Segment

-- | The zero-based index number of the segment. For example, if the total
--   number of segments is 4, <tt>SegmentNumber</tt> values range from 0
--   through 3.
[$sel:segmentNumber:Segment'] :: Segment -> Natural

-- | The total number of segments.
[$sel:totalSegments:Segment'] :: Segment -> Natural

-- | Create a value of <a>Segment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:segmentNumber:Segment'</a>, <a>segment_segmentNumber</a> - The
--   zero-based index number of the segment. For example, if the total
--   number of segments is 4, <tt>SegmentNumber</tt> values range from 0
--   through 3.
--   
--   <a>$sel:totalSegments:Segment'</a>, <a>segment_totalSegments</a> - The
--   total number of segments.
newSegment :: Natural -> Natural -> Segment

-- | The zero-based index number of the segment. For example, if the total
--   number of segments is 4, <tt>SegmentNumber</tt> values range from 0
--   through 3.
segment_segmentNumber :: Lens' Segment Natural

-- | The total number of segments.
segment_totalSegments :: Lens' Segment Natural

-- | Information about a serialization/deserialization program (SerDe) that
--   serves as an extractor and loader.
--   
--   <i>See:</i> <a>newSerDeInfo</a> smart constructor.
data SerDeInfo
SerDeInfo' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> SerDeInfo

-- | Usually the class that implements the SerDe. An example is
--   <tt>org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe</tt>.
[$sel:serializationLibrary:SerDeInfo'] :: SerDeInfo -> Maybe Text

-- | Name of the SerDe.
[$sel:name:SerDeInfo'] :: SerDeInfo -> Maybe Text

-- | These key-value pairs define initialization parameters for the SerDe.
[$sel:parameters:SerDeInfo'] :: SerDeInfo -> Maybe (HashMap Text Text)

-- | Create a value of <a>SerDeInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serializationLibrary:SerDeInfo'</a>,
--   <a>serDeInfo_serializationLibrary</a> - Usually the class that
--   implements the SerDe. An example is
--   <tt>org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe</tt>.
--   
--   <a>$sel:name:SerDeInfo'</a>, <a>serDeInfo_name</a> - Name of the
--   SerDe.
--   
--   <a>$sel:parameters:SerDeInfo'</a>, <a>serDeInfo_parameters</a> - These
--   key-value pairs define initialization parameters for the SerDe.
newSerDeInfo :: SerDeInfo

-- | Usually the class that implements the SerDe. An example is
--   <tt>org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe</tt>.
serDeInfo_serializationLibrary :: Lens' SerDeInfo (Maybe Text)

-- | Name of the SerDe.
serDeInfo_name :: Lens' SerDeInfo (Maybe Text)

-- | These key-value pairs define initialization parameters for the SerDe.
serDeInfo_parameters :: Lens' SerDeInfo (Maybe (HashMap Text Text))

-- | Specifies skewed values in a table. Skewed values are those that occur
--   with very high frequency.
--   
--   <i>See:</i> <a>newSkewedInfo</a> smart constructor.
data SkewedInfo
SkewedInfo' :: Maybe (HashMap Text Text) -> Maybe [Text] -> Maybe [Text] -> SkewedInfo

-- | A mapping of skewed values to the columns that contain them.
[$sel:skewedColumnValueLocationMaps:SkewedInfo'] :: SkewedInfo -> Maybe (HashMap Text Text)

-- | A list of values that appear so frequently as to be considered skewed.
[$sel:skewedColumnValues:SkewedInfo'] :: SkewedInfo -> Maybe [Text]

-- | A list of names of columns that contain skewed values.
[$sel:skewedColumnNames:SkewedInfo'] :: SkewedInfo -> Maybe [Text]

-- | Create a value of <a>SkewedInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:skewedColumnValueLocationMaps:SkewedInfo'</a>,
--   <a>skewedInfo_skewedColumnValueLocationMaps</a> - A mapping of skewed
--   values to the columns that contain them.
--   
--   <a>$sel:skewedColumnValues:SkewedInfo'</a>,
--   <a>skewedInfo_skewedColumnValues</a> - A list of values that appear so
--   frequently as to be considered skewed.
--   
--   <a>$sel:skewedColumnNames:SkewedInfo'</a>,
--   <a>skewedInfo_skewedColumnNames</a> - A list of names of columns that
--   contain skewed values.
newSkewedInfo :: SkewedInfo

-- | A mapping of skewed values to the columns that contain them.
skewedInfo_skewedColumnValueLocationMaps :: Lens' SkewedInfo (Maybe (HashMap Text Text))

-- | A list of values that appear so frequently as to be considered skewed.
skewedInfo_skewedColumnValues :: Lens' SkewedInfo (Maybe [Text])

-- | A list of names of columns that contain skewed values.
skewedInfo_skewedColumnNames :: Lens' SkewedInfo (Maybe [Text])

-- | Specifies a field to sort by and a sort order.
--   
--   <i>See:</i> <a>newSortCriterion</a> smart constructor.
data SortCriterion
SortCriterion' :: Maybe Sort -> Maybe Text -> SortCriterion

-- | An ascending or descending sort.
[$sel:sort:SortCriterion'] :: SortCriterion -> Maybe Sort

-- | The name of the field on which to sort.
[$sel:fieldName:SortCriterion'] :: SortCriterion -> Maybe Text

-- | Create a value of <a>SortCriterion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sort:SortCriterion'</a>, <a>sortCriterion_sort</a> - An
--   ascending or descending sort.
--   
--   <a>$sel:fieldName:SortCriterion'</a>, <a>sortCriterion_fieldName</a> -
--   The name of the field on which to sort.
newSortCriterion :: SortCriterion

-- | An ascending or descending sort.
sortCriterion_sort :: Lens' SortCriterion (Maybe Sort)

-- | The name of the field on which to sort.
sortCriterion_fieldName :: Lens' SortCriterion (Maybe Text)

-- | The batch condition that started the workflow run. Either the number
--   of events in the batch size arrived, in which case the BatchSize
--   member is non-zero, or the batch window expired, in which case the
--   BatchWindow member is non-zero.
--   
--   <i>See:</i> <a>newStartingEventBatchCondition</a> smart constructor.
data StartingEventBatchCondition
StartingEventBatchCondition' :: Maybe Int -> Maybe Int -> StartingEventBatchCondition

-- | Duration of the batch window in seconds.
[$sel:batchWindow:StartingEventBatchCondition'] :: StartingEventBatchCondition -> Maybe Int

-- | Number of events in the batch.
[$sel:batchSize:StartingEventBatchCondition'] :: StartingEventBatchCondition -> Maybe Int

-- | Create a value of <a>StartingEventBatchCondition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchWindow:StartingEventBatchCondition'</a>,
--   <a>startingEventBatchCondition_batchWindow</a> - Duration of the batch
--   window in seconds.
--   
--   <a>$sel:batchSize:StartingEventBatchCondition'</a>,
--   <a>startingEventBatchCondition_batchSize</a> - Number of events in the
--   batch.
newStartingEventBatchCondition :: StartingEventBatchCondition

-- | Duration of the batch window in seconds.
startingEventBatchCondition_batchWindow :: Lens' StartingEventBatchCondition (Maybe Int)

-- | Number of events in the batch.
startingEventBatchCondition_batchSize :: Lens' StartingEventBatchCondition (Maybe Int)

-- | Describes the physical storage of table data.
--   
--   <i>See:</i> <a>newStorageDescriptor</a> smart constructor.
data StorageDescriptor
StorageDescriptor' :: Maybe [Order] -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe SerDeInfo -> Maybe Text -> Maybe Int -> Maybe SchemaReference -> Maybe Bool -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe SkewedInfo -> Maybe [Column] -> StorageDescriptor

-- | A list specifying the sort order of each bucket in the table.
[$sel:sortColumns:StorageDescriptor'] :: StorageDescriptor -> Maybe [Order]

-- | <tt>True</tt> if the data in the table is compressed, or
--   <tt>False</tt> if not.
[$sel:compressed:StorageDescriptor'] :: StorageDescriptor -> Maybe Bool

-- | The physical location of the table. By default, this takes the form of
--   the warehouse location, followed by the database location in the
--   warehouse, followed by the table name.
[$sel:location:StorageDescriptor'] :: StorageDescriptor -> Maybe Text

-- | A list of reducer grouping columns, clustering columns, and bucketing
--   columns in the table.
[$sel:bucketColumns:StorageDescriptor'] :: StorageDescriptor -> Maybe [Text]

-- | The serialization/deserialization (SerDe) information.
[$sel:serdeInfo:StorageDescriptor'] :: StorageDescriptor -> Maybe SerDeInfo

-- | The output format: <tt>SequenceFileOutputFormat</tt> (binary), or
--   <tt>IgnoreKeyTextOutputFormat</tt>, or a custom format.
[$sel:outputFormat:StorageDescriptor'] :: StorageDescriptor -> Maybe Text

-- | Must be specified if the table contains any dimension columns.
[$sel:numberOfBuckets:StorageDescriptor'] :: StorageDescriptor -> Maybe Int

-- | An object that references a schema stored in the Glue Schema Registry.
--   
--   When creating a table, you can pass an empty list of columns for the
--   schema, and instead use a schema reference.
[$sel:schemaReference:StorageDescriptor'] :: StorageDescriptor -> Maybe SchemaReference

-- | <tt>True</tt> if the table data is stored in subdirectories, or
--   <tt>False</tt> if not.
[$sel:storedAsSubDirectories:StorageDescriptor'] :: StorageDescriptor -> Maybe Bool

-- | The user-supplied properties in key-value form.
[$sel:parameters:StorageDescriptor'] :: StorageDescriptor -> Maybe (HashMap Text Text)

-- | The input format: <tt>SequenceFileInputFormat</tt> (binary), or
--   <tt>TextInputFormat</tt>, or a custom format.
[$sel:inputFormat:StorageDescriptor'] :: StorageDescriptor -> Maybe Text

-- | The information about values that appear frequently in a column
--   (skewed values).
[$sel:skewedInfo:StorageDescriptor'] :: StorageDescriptor -> Maybe SkewedInfo

-- | A list of the <tt>Columns</tt> in the table.
[$sel:columns:StorageDescriptor'] :: StorageDescriptor -> Maybe [Column]

-- | Create a value of <a>StorageDescriptor</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortColumns:StorageDescriptor'</a>,
--   <a>storageDescriptor_sortColumns</a> - A list specifying the sort
--   order of each bucket in the table.
--   
--   <a>$sel:compressed:StorageDescriptor'</a>,
--   <a>storageDescriptor_compressed</a> - <tt>True</tt> if the data in the
--   table is compressed, or <tt>False</tt> if not.
--   
--   <a>$sel:location:StorageDescriptor'</a>,
--   <a>storageDescriptor_location</a> - The physical location of the
--   table. By default, this takes the form of the warehouse location,
--   followed by the database location in the warehouse, followed by the
--   table name.
--   
--   <a>$sel:bucketColumns:StorageDescriptor'</a>,
--   <a>storageDescriptor_bucketColumns</a> - A list of reducer grouping
--   columns, clustering columns, and bucketing columns in the table.
--   
--   <a>$sel:serdeInfo:StorageDescriptor'</a>,
--   <a>storageDescriptor_serdeInfo</a> - The serialization/deserialization
--   (SerDe) information.
--   
--   <a>$sel:outputFormat:StorageDescriptor'</a>,
--   <a>storageDescriptor_outputFormat</a> - The output format:
--   <tt>SequenceFileOutputFormat</tt> (binary), or
--   <tt>IgnoreKeyTextOutputFormat</tt>, or a custom format.
--   
--   <a>$sel:numberOfBuckets:StorageDescriptor'</a>,
--   <a>storageDescriptor_numberOfBuckets</a> - Must be specified if the
--   table contains any dimension columns.
--   
--   <a>$sel:schemaReference:StorageDescriptor'</a>,
--   <a>storageDescriptor_schemaReference</a> - An object that references a
--   schema stored in the Glue Schema Registry.
--   
--   When creating a table, you can pass an empty list of columns for the
--   schema, and instead use a schema reference.
--   
--   <a>$sel:storedAsSubDirectories:StorageDescriptor'</a>,
--   <a>storageDescriptor_storedAsSubDirectories</a> - <tt>True</tt> if the
--   table data is stored in subdirectories, or <tt>False</tt> if not.
--   
--   <a>$sel:parameters:StorageDescriptor'</a>,
--   <a>storageDescriptor_parameters</a> - The user-supplied properties in
--   key-value form.
--   
--   <a>$sel:inputFormat:StorageDescriptor'</a>,
--   <a>storageDescriptor_inputFormat</a> - The input format:
--   <tt>SequenceFileInputFormat</tt> (binary), or
--   <tt>TextInputFormat</tt>, or a custom format.
--   
--   <a>$sel:skewedInfo:StorageDescriptor'</a>,
--   <a>storageDescriptor_skewedInfo</a> - The information about values
--   that appear frequently in a column (skewed values).
--   
--   <a>$sel:columns:StorageDescriptor'</a>,
--   <a>storageDescriptor_columns</a> - A list of the <tt>Columns</tt> in
--   the table.
newStorageDescriptor :: StorageDescriptor

-- | A list specifying the sort order of each bucket in the table.
storageDescriptor_sortColumns :: Lens' StorageDescriptor (Maybe [Order])

-- | <tt>True</tt> if the data in the table is compressed, or
--   <tt>False</tt> if not.
storageDescriptor_compressed :: Lens' StorageDescriptor (Maybe Bool)

-- | The physical location of the table. By default, this takes the form of
--   the warehouse location, followed by the database location in the
--   warehouse, followed by the table name.
storageDescriptor_location :: Lens' StorageDescriptor (Maybe Text)

-- | A list of reducer grouping columns, clustering columns, and bucketing
--   columns in the table.
storageDescriptor_bucketColumns :: Lens' StorageDescriptor (Maybe [Text])

-- | The serialization/deserialization (SerDe) information.
storageDescriptor_serdeInfo :: Lens' StorageDescriptor (Maybe SerDeInfo)

-- | The output format: <tt>SequenceFileOutputFormat</tt> (binary), or
--   <tt>IgnoreKeyTextOutputFormat</tt>, or a custom format.
storageDescriptor_outputFormat :: Lens' StorageDescriptor (Maybe Text)

-- | Must be specified if the table contains any dimension columns.
storageDescriptor_numberOfBuckets :: Lens' StorageDescriptor (Maybe Int)

-- | An object that references a schema stored in the Glue Schema Registry.
--   
--   When creating a table, you can pass an empty list of columns for the
--   schema, and instead use a schema reference.
storageDescriptor_schemaReference :: Lens' StorageDescriptor (Maybe SchemaReference)

-- | <tt>True</tt> if the table data is stored in subdirectories, or
--   <tt>False</tt> if not.
storageDescriptor_storedAsSubDirectories :: Lens' StorageDescriptor (Maybe Bool)

-- | The user-supplied properties in key-value form.
storageDescriptor_parameters :: Lens' StorageDescriptor (Maybe (HashMap Text Text))

-- | The input format: <tt>SequenceFileInputFormat</tt> (binary), or
--   <tt>TextInputFormat</tt>, or a custom format.
storageDescriptor_inputFormat :: Lens' StorageDescriptor (Maybe Text)

-- | The information about values that appear frequently in a column
--   (skewed values).
storageDescriptor_skewedInfo :: Lens' StorageDescriptor (Maybe SkewedInfo)

-- | A list of the <tt>Columns</tt> in the table.
storageDescriptor_columns :: Lens' StorageDescriptor (Maybe [Column])

-- | Defines column statistics supported for character sequence data
--   values.
--   
--   <i>See:</i> <a>newStringColumnStatisticsData</a> smart constructor.
data StringColumnStatisticsData
StringColumnStatisticsData' :: Natural -> Double -> Natural -> Natural -> StringColumnStatisticsData

-- | The size of the longest string in the column.
[$sel:maximumLength:StringColumnStatisticsData'] :: StringColumnStatisticsData -> Natural

-- | The average string length in the column.
[$sel:averageLength:StringColumnStatisticsData'] :: StringColumnStatisticsData -> Double

-- | The number of null values in the column.
[$sel:numberOfNulls:StringColumnStatisticsData'] :: StringColumnStatisticsData -> Natural

-- | The number of distinct values in a column.
[$sel:numberOfDistinctValues:StringColumnStatisticsData'] :: StringColumnStatisticsData -> Natural

-- | Create a value of <a>StringColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumLength:StringColumnStatisticsData'</a>,
--   <a>stringColumnStatisticsData_maximumLength</a> - The size of the
--   longest string in the column.
--   
--   <a>$sel:averageLength:StringColumnStatisticsData'</a>,
--   <a>stringColumnStatisticsData_averageLength</a> - The average string
--   length in the column.
--   
--   <a>$sel:numberOfNulls:StringColumnStatisticsData'</a>,
--   <a>stringColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
--   
--   <a>$sel:numberOfDistinctValues:StringColumnStatisticsData'</a>,
--   <a>stringColumnStatisticsData_numberOfDistinctValues</a> - The number
--   of distinct values in a column.
newStringColumnStatisticsData :: Natural -> Double -> Natural -> Natural -> StringColumnStatisticsData

-- | The size of the longest string in the column.
stringColumnStatisticsData_maximumLength :: Lens' StringColumnStatisticsData Natural

-- | The average string length in the column.
stringColumnStatisticsData_averageLength :: Lens' StringColumnStatisticsData Double

-- | The number of null values in the column.
stringColumnStatisticsData_numberOfNulls :: Lens' StringColumnStatisticsData Natural

-- | The number of distinct values in a column.
stringColumnStatisticsData_numberOfDistinctValues :: Lens' StringColumnStatisticsData Natural

-- | Represents a collection of related data organized in columns and rows.
--   
--   <i>See:</i> <a>newTable</a> smart constructor.
data Table
Table' :: Maybe Natural -> Maybe TableIdentifier -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe StorageDescriptor -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe POSIX -> Maybe Text -> Maybe [Column] -> Maybe POSIX -> Text -> Table

-- | The retention time for this table.
[$sel:retention:Table'] :: Table -> Maybe Natural

-- | A <tt>TableIdentifier</tt> structure that describes a target table for
--   resource linking.
[$sel:targetTable:Table'] :: Table -> Maybe TableIdentifier

-- | Indicates whether the table has been registered with Lake Formation.
[$sel:isRegisteredWithLakeFormation:Table'] :: Table -> Maybe Bool

-- | The person or entity who created the table.
[$sel:createdBy:Table'] :: Table -> Maybe Text

-- | The type of this table (<tt>EXTERNAL_TABLE</tt>,
--   <tt>VIRTUAL_VIEW</tt>, etc.).
[$sel:tableType:Table'] :: Table -> Maybe Text

-- | The ID of the Data Catalog in which the table resides.
[$sel:catalogId:Table'] :: Table -> Maybe Text

-- | The owner of the table.
[$sel:owner:Table'] :: Table -> Maybe Text

-- | If the table is a view, the original text of the view; otherwise
--   <tt>null</tt>.
[$sel:viewOriginalText:Table'] :: Table -> Maybe Text

-- | The last time that the table was updated.
[$sel:updateTime:Table'] :: Table -> Maybe POSIX

-- | If the table is a view, the expanded text of the view; otherwise
--   <tt>null</tt>.
[$sel:viewExpandedText:Table'] :: Table -> Maybe Text

-- | The last time that column statistics were computed for this table.
[$sel:lastAnalyzedTime:Table'] :: Table -> Maybe POSIX

-- | A storage descriptor containing information about the physical storage
--   of this table.
[$sel:storageDescriptor:Table'] :: Table -> Maybe StorageDescriptor

-- | The name of the database where the table metadata resides. For Hive
--   compatibility, this must be all lowercase.
[$sel:databaseName:Table'] :: Table -> Maybe Text

-- | These key-value pairs define properties associated with the table.
[$sel:parameters:Table'] :: Table -> Maybe (HashMap Text Text)

-- | The last time that the table was accessed. This is usually taken from
--   HDFS, and might not be reliable.
[$sel:lastAccessTime:Table'] :: Table -> Maybe POSIX

-- | A description of the table.
[$sel:description:Table'] :: Table -> Maybe Text

-- | A list of columns by which the table is partitioned. Only primitive
--   types are supported as partition keys.
--   
--   When you create a table used by Amazon Athena, and you do not specify
--   any <tt>partitionKeys</tt>, you must at least set the value of
--   <tt>partitionKeys</tt> to an empty list. For example:
--   
--   <pre>
--   "PartitionKeys": []
--   </pre>
[$sel:partitionKeys:Table'] :: Table -> Maybe [Column]

-- | The time when the table definition was created in the Data Catalog.
[$sel:createTime:Table'] :: Table -> Maybe POSIX

-- | The table name. For Hive compatibility, this must be entirely
--   lowercase.
[$sel:name:Table'] :: Table -> Text

-- | Create a value of <a>Table</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retention:Table'</a>, <a>table_retention</a> - The retention
--   time for this table.
--   
--   <a>$sel:targetTable:Table'</a>, <a>table_targetTable</a> - A
--   <tt>TableIdentifier</tt> structure that describes a target table for
--   resource linking.
--   
--   <a>$sel:isRegisteredWithLakeFormation:Table'</a>,
--   <a>table_isRegisteredWithLakeFormation</a> - Indicates whether the
--   table has been registered with Lake Formation.
--   
--   <a>$sel:createdBy:Table'</a>, <a>table_createdBy</a> - The person or
--   entity who created the table.
--   
--   <a>$sel:tableType:Table'</a>, <a>table_tableType</a> - The type of
--   this table (<tt>EXTERNAL_TABLE</tt>, <tt>VIRTUAL_VIEW</tt>, etc.).
--   
--   <a>$sel:catalogId:Table'</a>, <a>table_catalogId</a> - The ID of the
--   Data Catalog in which the table resides.
--   
--   <a>$sel:owner:Table'</a>, <a>table_owner</a> - The owner of the table.
--   
--   <a>$sel:viewOriginalText:Table'</a>, <a>table_viewOriginalText</a> -
--   If the table is a view, the original text of the view; otherwise
--   <tt>null</tt>.
--   
--   <a>$sel:updateTime:Table'</a>, <a>table_updateTime</a> - The last time
--   that the table was updated.
--   
--   <a>$sel:viewExpandedText:Table'</a>, <a>table_viewExpandedText</a> -
--   If the table is a view, the expanded text of the view; otherwise
--   <tt>null</tt>.
--   
--   <a>$sel:lastAnalyzedTime:Table'</a>, <a>table_lastAnalyzedTime</a> -
--   The last time that column statistics were computed for this table.
--   
--   <a>$sel:storageDescriptor:Table'</a>, <a>table_storageDescriptor</a> -
--   A storage descriptor containing information about the physical storage
--   of this table.
--   
--   <a>$sel:databaseName:Table'</a>, <a>table_databaseName</a> - The name
--   of the database where the table metadata resides. For Hive
--   compatibility, this must be all lowercase.
--   
--   <a>$sel:parameters:Table'</a>, <a>table_parameters</a> - These
--   key-value pairs define properties associated with the table.
--   
--   <a>$sel:lastAccessTime:Table'</a>, <a>table_lastAccessTime</a> - The
--   last time that the table was accessed. This is usually taken from
--   HDFS, and might not be reliable.
--   
--   <a>$sel:description:Table'</a>, <a>table_description</a> - A
--   description of the table.
--   
--   <a>$sel:partitionKeys:Table'</a>, <a>table_partitionKeys</a> - A list
--   of columns by which the table is partitioned. Only primitive types are
--   supported as partition keys.
--   
--   When you create a table used by Amazon Athena, and you do not specify
--   any <tt>partitionKeys</tt>, you must at least set the value of
--   <tt>partitionKeys</tt> to an empty list. For example:
--   
--   <pre>
--   "PartitionKeys": []
--   </pre>
--   
--   <a>$sel:createTime:Table'</a>, <a>table_createTime</a> - The time when
--   the table definition was created in the Data Catalog.
--   
--   <a>$sel:name:Table'</a>, <a>table_name</a> - The table name. For Hive
--   compatibility, this must be entirely lowercase.
newTable :: Text -> Table

-- | The retention time for this table.
table_retention :: Lens' Table (Maybe Natural)

-- | A <tt>TableIdentifier</tt> structure that describes a target table for
--   resource linking.
table_targetTable :: Lens' Table (Maybe TableIdentifier)

-- | Indicates whether the table has been registered with Lake Formation.
table_isRegisteredWithLakeFormation :: Lens' Table (Maybe Bool)

-- | The person or entity who created the table.
table_createdBy :: Lens' Table (Maybe Text)

-- | The type of this table (<tt>EXTERNAL_TABLE</tt>,
--   <tt>VIRTUAL_VIEW</tt>, etc.).
table_tableType :: Lens' Table (Maybe Text)

-- | The ID of the Data Catalog in which the table resides.
table_catalogId :: Lens' Table (Maybe Text)

-- | The owner of the table.
table_owner :: Lens' Table (Maybe Text)

-- | If the table is a view, the original text of the view; otherwise
--   <tt>null</tt>.
table_viewOriginalText :: Lens' Table (Maybe Text)

-- | The last time that the table was updated.
table_updateTime :: Lens' Table (Maybe UTCTime)

-- | If the table is a view, the expanded text of the view; otherwise
--   <tt>null</tt>.
table_viewExpandedText :: Lens' Table (Maybe Text)

-- | The last time that column statistics were computed for this table.
table_lastAnalyzedTime :: Lens' Table (Maybe UTCTime)

-- | A storage descriptor containing information about the physical storage
--   of this table.
table_storageDescriptor :: Lens' Table (Maybe StorageDescriptor)

-- | The name of the database where the table metadata resides. For Hive
--   compatibility, this must be all lowercase.
table_databaseName :: Lens' Table (Maybe Text)

-- | These key-value pairs define properties associated with the table.
table_parameters :: Lens' Table (Maybe (HashMap Text Text))

-- | The last time that the table was accessed. This is usually taken from
--   HDFS, and might not be reliable.
table_lastAccessTime :: Lens' Table (Maybe UTCTime)

-- | A description of the table.
table_description :: Lens' Table (Maybe Text)

-- | A list of columns by which the table is partitioned. Only primitive
--   types are supported as partition keys.
--   
--   When you create a table used by Amazon Athena, and you do not specify
--   any <tt>partitionKeys</tt>, you must at least set the value of
--   <tt>partitionKeys</tt> to an empty list. For example:
--   
--   <pre>
--   "PartitionKeys": []
--   </pre>
table_partitionKeys :: Lens' Table (Maybe [Column])

-- | The time when the table definition was created in the Data Catalog.
table_createTime :: Lens' Table (Maybe UTCTime)

-- | The table name. For Hive compatibility, this must be entirely
--   lowercase.
table_name :: Lens' Table Text

-- | An error record for table operations.
--   
--   <i>See:</i> <a>newTableError</a> smart constructor.
data TableError
TableError' :: Maybe Text -> Maybe ErrorDetail -> TableError

-- | The name of the table. For Hive compatibility, this must be entirely
--   lowercase.
[$sel:tableName:TableError'] :: TableError -> Maybe Text

-- | The details about the error.
[$sel:errorDetail:TableError'] :: TableError -> Maybe ErrorDetail

-- | Create a value of <a>TableError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tableName:TableError'</a>, <a>tableError_tableName</a> - The
--   name of the table. For Hive compatibility, this must be entirely
--   lowercase.
--   
--   <a>$sel:errorDetail:TableError'</a>, <a>tableError_errorDetail</a> -
--   The details about the error.
newTableError :: TableError

-- | The name of the table. For Hive compatibility, this must be entirely
--   lowercase.
tableError_tableName :: Lens' TableError (Maybe Text)

-- | The details about the error.
tableError_errorDetail :: Lens' TableError (Maybe ErrorDetail)

-- | A structure that describes a target table for resource linking.
--   
--   <i>See:</i> <a>newTableIdentifier</a> smart constructor.
data TableIdentifier
TableIdentifier' :: Maybe Text -> Maybe Text -> Maybe Text -> TableIdentifier

-- | The ID of the Data Catalog in which the table resides.
[$sel:catalogId:TableIdentifier'] :: TableIdentifier -> Maybe Text

-- | The name of the target table.
[$sel:name:TableIdentifier'] :: TableIdentifier -> Maybe Text

-- | The name of the catalog database that contains the target table.
[$sel:databaseName:TableIdentifier'] :: TableIdentifier -> Maybe Text

-- | Create a value of <a>TableIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:TableIdentifier'</a>,
--   <a>tableIdentifier_catalogId</a> - The ID of the Data Catalog in which
--   the table resides.
--   
--   <a>$sel:name:TableIdentifier'</a>, <a>tableIdentifier_name</a> - The
--   name of the target table.
--   
--   <a>$sel:databaseName:TableIdentifier'</a>,
--   <a>tableIdentifier_databaseName</a> - The name of the catalog database
--   that contains the target table.
newTableIdentifier :: TableIdentifier

-- | The ID of the Data Catalog in which the table resides.
tableIdentifier_catalogId :: Lens' TableIdentifier (Maybe Text)

-- | The name of the target table.
tableIdentifier_name :: Lens' TableIdentifier (Maybe Text)

-- | The name of the catalog database that contains the target table.
tableIdentifier_databaseName :: Lens' TableIdentifier (Maybe Text)

-- | A structure used to define a table.
--   
--   <i>See:</i> <a>newTableInput</a> smart constructor.
data TableInput
TableInput' :: Maybe Natural -> Maybe TableIdentifier -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe StorageDescriptor -> Maybe (HashMap Text Text) -> Maybe POSIX -> Maybe Text -> Maybe [Column] -> Text -> TableInput

-- | The retention time for this table.
[$sel:retention:TableInput'] :: TableInput -> Maybe Natural

-- | A <tt>TableIdentifier</tt> structure that describes a target table for
--   resource linking.
[$sel:targetTable:TableInput'] :: TableInput -> Maybe TableIdentifier

-- | The type of this table (<tt>EXTERNAL_TABLE</tt>,
--   <tt>VIRTUAL_VIEW</tt>, etc.).
[$sel:tableType:TableInput'] :: TableInput -> Maybe Text

-- | The table owner.
[$sel:owner:TableInput'] :: TableInput -> Maybe Text

-- | If the table is a view, the original text of the view; otherwise
--   <tt>null</tt>.
[$sel:viewOriginalText:TableInput'] :: TableInput -> Maybe Text

-- | If the table is a view, the expanded text of the view; otherwise
--   <tt>null</tt>.
[$sel:viewExpandedText:TableInput'] :: TableInput -> Maybe Text

-- | The last time that column statistics were computed for this table.
[$sel:lastAnalyzedTime:TableInput'] :: TableInput -> Maybe POSIX

-- | A storage descriptor containing information about the physical storage
--   of this table.
[$sel:storageDescriptor:TableInput'] :: TableInput -> Maybe StorageDescriptor

-- | These key-value pairs define properties associated with the table.
[$sel:parameters:TableInput'] :: TableInput -> Maybe (HashMap Text Text)

-- | The last time that the table was accessed.
[$sel:lastAccessTime:TableInput'] :: TableInput -> Maybe POSIX

-- | A description of the table.
[$sel:description:TableInput'] :: TableInput -> Maybe Text

-- | A list of columns by which the table is partitioned. Only primitive
--   types are supported as partition keys.
--   
--   When you create a table used by Amazon Athena, and you do not specify
--   any <tt>partitionKeys</tt>, you must at least set the value of
--   <tt>partitionKeys</tt> to an empty list. For example:
--   
--   <pre>
--   "PartitionKeys": []
--   </pre>
[$sel:partitionKeys:TableInput'] :: TableInput -> Maybe [Column]

-- | The table name. For Hive compatibility, this is folded to lowercase
--   when it is stored.
[$sel:name:TableInput'] :: TableInput -> Text

-- | Create a value of <a>TableInput</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retention:TableInput'</a>, <a>tableInput_retention</a> - The
--   retention time for this table.
--   
--   <a>$sel:targetTable:TableInput'</a>, <a>tableInput_targetTable</a> - A
--   <tt>TableIdentifier</tt> structure that describes a target table for
--   resource linking.
--   
--   <a>$sel:tableType:TableInput'</a>, <a>tableInput_tableType</a> - The
--   type of this table (<tt>EXTERNAL_TABLE</tt>, <tt>VIRTUAL_VIEW</tt>,
--   etc.).
--   
--   <a>$sel:owner:TableInput'</a>, <a>tableInput_owner</a> - The table
--   owner.
--   
--   <a>$sel:viewOriginalText:TableInput'</a>,
--   <a>tableInput_viewOriginalText</a> - If the table is a view, the
--   original text of the view; otherwise <tt>null</tt>.
--   
--   <a>$sel:viewExpandedText:TableInput'</a>,
--   <a>tableInput_viewExpandedText</a> - If the table is a view, the
--   expanded text of the view; otherwise <tt>null</tt>.
--   
--   <a>$sel:lastAnalyzedTime:TableInput'</a>,
--   <a>tableInput_lastAnalyzedTime</a> - The last time that column
--   statistics were computed for this table.
--   
--   <a>$sel:storageDescriptor:TableInput'</a>,
--   <a>tableInput_storageDescriptor</a> - A storage descriptor containing
--   information about the physical storage of this table.
--   
--   <a>$sel:parameters:TableInput'</a>, <a>tableInput_parameters</a> -
--   These key-value pairs define properties associated with the table.
--   
--   <a>$sel:lastAccessTime:TableInput'</a>,
--   <a>tableInput_lastAccessTime</a> - The last time that the table was
--   accessed.
--   
--   <a>$sel:description:TableInput'</a>, <a>tableInput_description</a> - A
--   description of the table.
--   
--   <a>$sel:partitionKeys:TableInput'</a>, <a>tableInput_partitionKeys</a>
--   - A list of columns by which the table is partitioned. Only primitive
--   types are supported as partition keys.
--   
--   When you create a table used by Amazon Athena, and you do not specify
--   any <tt>partitionKeys</tt>, you must at least set the value of
--   <tt>partitionKeys</tt> to an empty list. For example:
--   
--   <pre>
--   "PartitionKeys": []
--   </pre>
--   
--   <a>$sel:name:TableInput'</a>, <a>tableInput_name</a> - The table name.
--   For Hive compatibility, this is folded to lowercase when it is stored.
newTableInput :: Text -> TableInput

-- | The retention time for this table.
tableInput_retention :: Lens' TableInput (Maybe Natural)

-- | A <tt>TableIdentifier</tt> structure that describes a target table for
--   resource linking.
tableInput_targetTable :: Lens' TableInput (Maybe TableIdentifier)

-- | The type of this table (<tt>EXTERNAL_TABLE</tt>,
--   <tt>VIRTUAL_VIEW</tt>, etc.).
tableInput_tableType :: Lens' TableInput (Maybe Text)

-- | The table owner.
tableInput_owner :: Lens' TableInput (Maybe Text)

-- | If the table is a view, the original text of the view; otherwise
--   <tt>null</tt>.
tableInput_viewOriginalText :: Lens' TableInput (Maybe Text)

-- | If the table is a view, the expanded text of the view; otherwise
--   <tt>null</tt>.
tableInput_viewExpandedText :: Lens' TableInput (Maybe Text)

-- | The last time that column statistics were computed for this table.
tableInput_lastAnalyzedTime :: Lens' TableInput (Maybe UTCTime)

-- | A storage descriptor containing information about the physical storage
--   of this table.
tableInput_storageDescriptor :: Lens' TableInput (Maybe StorageDescriptor)

-- | These key-value pairs define properties associated with the table.
tableInput_parameters :: Lens' TableInput (Maybe (HashMap Text Text))

-- | The last time that the table was accessed.
tableInput_lastAccessTime :: Lens' TableInput (Maybe UTCTime)

-- | A description of the table.
tableInput_description :: Lens' TableInput (Maybe Text)

-- | A list of columns by which the table is partitioned. Only primitive
--   types are supported as partition keys.
--   
--   When you create a table used by Amazon Athena, and you do not specify
--   any <tt>partitionKeys</tt>, you must at least set the value of
--   <tt>partitionKeys</tt> to an empty list. For example:
--   
--   <pre>
--   "PartitionKeys": []
--   </pre>
tableInput_partitionKeys :: Lens' TableInput (Maybe [Column])

-- | The table name. For Hive compatibility, this is folded to lowercase
--   when it is stored.
tableInput_name :: Lens' TableInput Text

-- | Specifies a version of a table.
--   
--   <i>See:</i> <a>newTableVersion</a> smart constructor.
data TableVersion
TableVersion' :: Maybe Text -> Maybe Table -> TableVersion

-- | The ID value that identifies this table version. A <tt>VersionId</tt>
--   is a string representation of an integer. Each version is incremented
--   by 1.
[$sel:versionId:TableVersion'] :: TableVersion -> Maybe Text

-- | The table in question.
[$sel:table:TableVersion'] :: TableVersion -> Maybe Table

-- | Create a value of <a>TableVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:TableVersion'</a>, <a>tableVersion_versionId</a> -
--   The ID value that identifies this table version. A <tt>VersionId</tt>
--   is a string representation of an integer. Each version is incremented
--   by 1.
--   
--   <a>$sel:table:TableVersion'</a>, <a>tableVersion_table</a> - The table
--   in question.
newTableVersion :: TableVersion

-- | The ID value that identifies this table version. A <tt>VersionId</tt>
--   is a string representation of an integer. Each version is incremented
--   by 1.
tableVersion_versionId :: Lens' TableVersion (Maybe Text)

-- | The table in question.
tableVersion_table :: Lens' TableVersion (Maybe Table)

-- | An error record for table-version operations.
--   
--   <i>See:</i> <a>newTableVersionError</a> smart constructor.
data TableVersionError
TableVersionError' :: Maybe Text -> Maybe Text -> Maybe ErrorDetail -> TableVersionError

-- | The ID value of the version in question. A <tt>VersionID</tt> is a
--   string representation of an integer. Each version is incremented by 1.
[$sel:versionId:TableVersionError'] :: TableVersionError -> Maybe Text

-- | The name of the table in question.
[$sel:tableName:TableVersionError'] :: TableVersionError -> Maybe Text

-- | The details about the error.
[$sel:errorDetail:TableVersionError'] :: TableVersionError -> Maybe ErrorDetail

-- | Create a value of <a>TableVersionError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:TableVersionError'</a>,
--   <a>tableVersionError_versionId</a> - The ID value of the version in
--   question. A <tt>VersionID</tt> is a string representation of an
--   integer. Each version is incremented by 1.
--   
--   <a>$sel:tableName:TableVersionError'</a>,
--   <a>tableVersionError_tableName</a> - The name of the table in
--   question.
--   
--   <a>$sel:errorDetail:TableVersionError'</a>,
--   <a>tableVersionError_errorDetail</a> - The details about the error.
newTableVersionError :: TableVersionError

-- | The ID value of the version in question. A <tt>VersionID</tt> is a
--   string representation of an integer. Each version is incremented by 1.
tableVersionError_versionId :: Lens' TableVersionError (Maybe Text)

-- | The name of the table in question.
tableVersionError_tableName :: Lens' TableVersionError (Maybe Text)

-- | The details about the error.
tableVersionError_errorDetail :: Lens' TableVersionError (Maybe ErrorDetail)

-- | The sampling parameters that are associated with the machine learning
--   transform.
--   
--   <i>See:</i> <a>newTaskRun</a> smart constructor.
data TaskRun
TaskRun' :: Maybe POSIX -> Maybe TaskStatusType -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Int -> Maybe TaskRunProperties -> Maybe Text -> Maybe Text -> TaskRun

-- | The last point in time that the requested task run was completed.
[$sel:completedOn:TaskRun'] :: TaskRun -> Maybe POSIX

-- | The current status of the requested task run.
[$sel:status:TaskRun'] :: TaskRun -> Maybe TaskStatusType

-- | The last point in time that the requested task run was updated.
[$sel:lastModifiedOn:TaskRun'] :: TaskRun -> Maybe POSIX

-- | The list of error strings associated with this task run.
[$sel:errorString:TaskRun'] :: TaskRun -> Maybe Text

-- | The date and time that this task run started.
[$sel:startedOn:TaskRun'] :: TaskRun -> Maybe POSIX

-- | The names of the log group for secure logging, associated with this
--   task run.
[$sel:logGroupName:TaskRun'] :: TaskRun -> Maybe Text

-- | The amount of time (in seconds) that the task run consumed resources.
[$sel:executionTime:TaskRun'] :: TaskRun -> Maybe Int

-- | Specifies configuration properties associated with this task run.
[$sel:properties:TaskRun'] :: TaskRun -> Maybe TaskRunProperties

-- | The unique identifier for the transform.
[$sel:transformId:TaskRun'] :: TaskRun -> Maybe Text

-- | The unique identifier for this task run.
[$sel:taskRunId:TaskRun'] :: TaskRun -> Maybe Text

-- | Create a value of <a>TaskRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completedOn:TaskRun'</a>, <a>taskRun_completedOn</a> - The
--   last point in time that the requested task run was completed.
--   
--   <a>$sel:status:TaskRun'</a>, <a>taskRun_status</a> - The current
--   status of the requested task run.
--   
--   <a>$sel:lastModifiedOn:TaskRun'</a>, <a>taskRun_lastModifiedOn</a> -
--   The last point in time that the requested task run was updated.
--   
--   <a>$sel:errorString:TaskRun'</a>, <a>taskRun_errorString</a> - The
--   list of error strings associated with this task run.
--   
--   <a>$sel:startedOn:TaskRun'</a>, <a>taskRun_startedOn</a> - The date
--   and time that this task run started.
--   
--   <a>$sel:logGroupName:TaskRun'</a>, <a>taskRun_logGroupName</a> - The
--   names of the log group for secure logging, associated with this task
--   run.
--   
--   <a>$sel:executionTime:TaskRun'</a>, <a>taskRun_executionTime</a> - The
--   amount of time (in seconds) that the task run consumed resources.
--   
--   <a>$sel:properties:TaskRun'</a>, <a>taskRun_properties</a> - Specifies
--   configuration properties associated with this task run.
--   
--   <a>$sel:transformId:TaskRun'</a>, <a>taskRun_transformId</a> - The
--   unique identifier for the transform.
--   
--   <a>$sel:taskRunId:TaskRun'</a>, <a>taskRun_taskRunId</a> - The unique
--   identifier for this task run.
newTaskRun :: TaskRun

-- | The last point in time that the requested task run was completed.
taskRun_completedOn :: Lens' TaskRun (Maybe UTCTime)

-- | The current status of the requested task run.
taskRun_status :: Lens' TaskRun (Maybe TaskStatusType)

-- | The last point in time that the requested task run was updated.
taskRun_lastModifiedOn :: Lens' TaskRun (Maybe UTCTime)

-- | The list of error strings associated with this task run.
taskRun_errorString :: Lens' TaskRun (Maybe Text)

-- | The date and time that this task run started.
taskRun_startedOn :: Lens' TaskRun (Maybe UTCTime)

-- | The names of the log group for secure logging, associated with this
--   task run.
taskRun_logGroupName :: Lens' TaskRun (Maybe Text)

-- | The amount of time (in seconds) that the task run consumed resources.
taskRun_executionTime :: Lens' TaskRun (Maybe Int)

-- | Specifies configuration properties associated with this task run.
taskRun_properties :: Lens' TaskRun (Maybe TaskRunProperties)

-- | The unique identifier for the transform.
taskRun_transformId :: Lens' TaskRun (Maybe Text)

-- | The unique identifier for this task run.
taskRun_taskRunId :: Lens' TaskRun (Maybe Text)

-- | The criteria that are used to filter the task runs for the machine
--   learning transform.
--   
--   <i>See:</i> <a>newTaskRunFilterCriteria</a> smart constructor.
data TaskRunFilterCriteria
TaskRunFilterCriteria' :: Maybe TaskStatusType -> Maybe POSIX -> Maybe POSIX -> Maybe TaskType -> TaskRunFilterCriteria

-- | The current status of the task run.
[$sel:status:TaskRunFilterCriteria'] :: TaskRunFilterCriteria -> Maybe TaskStatusType

-- | Filter on task runs started after this date.
[$sel:startedAfter:TaskRunFilterCriteria'] :: TaskRunFilterCriteria -> Maybe POSIX

-- | Filter on task runs started before this date.
[$sel:startedBefore:TaskRunFilterCriteria'] :: TaskRunFilterCriteria -> Maybe POSIX

-- | The type of task run.
[$sel:taskRunType:TaskRunFilterCriteria'] :: TaskRunFilterCriteria -> Maybe TaskType

-- | Create a value of <a>TaskRunFilterCriteria</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:TaskRunFilterCriteria'</a>,
--   <a>taskRunFilterCriteria_status</a> - The current status of the task
--   run.
--   
--   <a>$sel:startedAfter:TaskRunFilterCriteria'</a>,
--   <a>taskRunFilterCriteria_startedAfter</a> - Filter on task runs
--   started after this date.
--   
--   <a>$sel:startedBefore:TaskRunFilterCriteria'</a>,
--   <a>taskRunFilterCriteria_startedBefore</a> - Filter on task runs
--   started before this date.
--   
--   <a>$sel:taskRunType:TaskRunFilterCriteria'</a>,
--   <a>taskRunFilterCriteria_taskRunType</a> - The type of task run.
newTaskRunFilterCriteria :: TaskRunFilterCriteria

-- | The current status of the task run.
taskRunFilterCriteria_status :: Lens' TaskRunFilterCriteria (Maybe TaskStatusType)

-- | Filter on task runs started after this date.
taskRunFilterCriteria_startedAfter :: Lens' TaskRunFilterCriteria (Maybe UTCTime)

-- | Filter on task runs started before this date.
taskRunFilterCriteria_startedBefore :: Lens' TaskRunFilterCriteria (Maybe UTCTime)

-- | The type of task run.
taskRunFilterCriteria_taskRunType :: Lens' TaskRunFilterCriteria (Maybe TaskType)

-- | The configuration properties for the task run.
--   
--   <i>See:</i> <a>newTaskRunProperties</a> smart constructor.
data TaskRunProperties
TaskRunProperties' :: Maybe TaskType -> Maybe ExportLabelsTaskRunProperties -> Maybe LabelingSetGenerationTaskRunProperties -> Maybe FindMatchesTaskRunProperties -> Maybe ImportLabelsTaskRunProperties -> TaskRunProperties

-- | The type of task run.
[$sel:taskType:TaskRunProperties'] :: TaskRunProperties -> Maybe TaskType

-- | The configuration properties for an exporting labels task run.
[$sel:exportLabelsTaskRunProperties:TaskRunProperties'] :: TaskRunProperties -> Maybe ExportLabelsTaskRunProperties

-- | The configuration properties for a labeling set generation task run.
[$sel:labelingSetGenerationTaskRunProperties:TaskRunProperties'] :: TaskRunProperties -> Maybe LabelingSetGenerationTaskRunProperties

-- | The configuration properties for a find matches task run.
[$sel:findMatchesTaskRunProperties:TaskRunProperties'] :: TaskRunProperties -> Maybe FindMatchesTaskRunProperties

-- | The configuration properties for an importing labels task run.
[$sel:importLabelsTaskRunProperties:TaskRunProperties'] :: TaskRunProperties -> Maybe ImportLabelsTaskRunProperties

-- | Create a value of <a>TaskRunProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskType:TaskRunProperties'</a>,
--   <a>taskRunProperties_taskType</a> - The type of task run.
--   
--   <a>$sel:exportLabelsTaskRunProperties:TaskRunProperties'</a>,
--   <a>taskRunProperties_exportLabelsTaskRunProperties</a> - The
--   configuration properties for an exporting labels task run.
--   
--   <a>$sel:labelingSetGenerationTaskRunProperties:TaskRunProperties'</a>,
--   <a>taskRunProperties_labelingSetGenerationTaskRunProperties</a> - The
--   configuration properties for a labeling set generation task run.
--   
--   <a>$sel:findMatchesTaskRunProperties:TaskRunProperties'</a>,
--   <a>taskRunProperties_findMatchesTaskRunProperties</a> - The
--   configuration properties for a find matches task run.
--   
--   <a>$sel:importLabelsTaskRunProperties:TaskRunProperties'</a>,
--   <a>taskRunProperties_importLabelsTaskRunProperties</a> - The
--   configuration properties for an importing labels task run.
newTaskRunProperties :: TaskRunProperties

-- | The type of task run.
taskRunProperties_taskType :: Lens' TaskRunProperties (Maybe TaskType)

-- | The configuration properties for an exporting labels task run.
taskRunProperties_exportLabelsTaskRunProperties :: Lens' TaskRunProperties (Maybe ExportLabelsTaskRunProperties)

-- | The configuration properties for a labeling set generation task run.
taskRunProperties_labelingSetGenerationTaskRunProperties :: Lens' TaskRunProperties (Maybe LabelingSetGenerationTaskRunProperties)

-- | The configuration properties for a find matches task run.
taskRunProperties_findMatchesTaskRunProperties :: Lens' TaskRunProperties (Maybe FindMatchesTaskRunProperties)

-- | The configuration properties for an importing labels task run.
taskRunProperties_importLabelsTaskRunProperties :: Lens' TaskRunProperties (Maybe ImportLabelsTaskRunProperties)

-- | The sorting criteria that are used to sort the list of task runs for
--   the machine learning transform.
--   
--   <i>See:</i> <a>newTaskRunSortCriteria</a> smart constructor.
data TaskRunSortCriteria
TaskRunSortCriteria' :: TaskRunSortColumnType -> SortDirectionType -> TaskRunSortCriteria

-- | The column to be used to sort the list of task runs for the machine
--   learning transform.
[$sel:column:TaskRunSortCriteria'] :: TaskRunSortCriteria -> TaskRunSortColumnType

-- | The sort direction to be used to sort the list of task runs for the
--   machine learning transform.
[$sel:sortDirection:TaskRunSortCriteria'] :: TaskRunSortCriteria -> SortDirectionType

-- | Create a value of <a>TaskRunSortCriteria</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:column:TaskRunSortCriteria'</a>,
--   <a>taskRunSortCriteria_column</a> - The column to be used to sort the
--   list of task runs for the machine learning transform.
--   
--   <a>$sel:sortDirection:TaskRunSortCriteria'</a>,
--   <a>taskRunSortCriteria_sortDirection</a> - The sort direction to be
--   used to sort the list of task runs for the machine learning transform.
newTaskRunSortCriteria :: TaskRunSortColumnType -> SortDirectionType -> TaskRunSortCriteria

-- | The column to be used to sort the list of task runs for the machine
--   learning transform.
taskRunSortCriteria_column :: Lens' TaskRunSortCriteria TaskRunSortColumnType

-- | The sort direction to be used to sort the list of task runs for the
--   machine learning transform.
taskRunSortCriteria_sortDirection :: Lens' TaskRunSortCriteria SortDirectionType

-- | The encryption-at-rest settings of the transform that apply to
--   accessing user data. Machine learning transforms can access user data
--   encrypted in Amazon S3 using KMS.
--   
--   Additionally, imported labels and trained transforms can now be
--   encrypted using a customer provided KMS key.
--   
--   <i>See:</i> <a>newTransformEncryption</a> smart constructor.
data TransformEncryption
TransformEncryption' :: Maybe MLUserDataEncryption -> Maybe Text -> TransformEncryption

-- | An <tt>MLUserDataEncryption</tt> object containing the encryption mode
--   and customer-provided KMS key ID.
[$sel:mlUserDataEncryption:TransformEncryption'] :: TransformEncryption -> Maybe MLUserDataEncryption

-- | The name of the security configuration.
[$sel:taskRunSecurityConfigurationName:TransformEncryption'] :: TransformEncryption -> Maybe Text

-- | Create a value of <a>TransformEncryption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mlUserDataEncryption:TransformEncryption'</a>,
--   <a>transformEncryption_mlUserDataEncryption</a> - An
--   <tt>MLUserDataEncryption</tt> object containing the encryption mode
--   and customer-provided KMS key ID.
--   
--   <a>$sel:taskRunSecurityConfigurationName:TransformEncryption'</a>,
--   <a>transformEncryption_taskRunSecurityConfigurationName</a> - The name
--   of the security configuration.
newTransformEncryption :: TransformEncryption

-- | An <tt>MLUserDataEncryption</tt> object containing the encryption mode
--   and customer-provided KMS key ID.
transformEncryption_mlUserDataEncryption :: Lens' TransformEncryption (Maybe MLUserDataEncryption)

-- | The name of the security configuration.
transformEncryption_taskRunSecurityConfigurationName :: Lens' TransformEncryption (Maybe Text)

-- | The criteria used to filter the machine learning transforms.
--   
--   <i>See:</i> <a>newTransformFilterCriteria</a> smart constructor.
data TransformFilterCriteria
TransformFilterCriteria' :: Maybe POSIX -> Maybe TransformStatusType -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe [SchemaColumn] -> Maybe TransformType -> Maybe Text -> Maybe POSIX -> TransformFilterCriteria

-- | The time and date after which the transforms were created.
[$sel:createdAfter:TransformFilterCriteria'] :: TransformFilterCriteria -> Maybe POSIX

-- | Filters the list of machine learning transforms by the last known
--   status of the transforms (to indicate whether a transform can be used
--   or not). One of "NOT_READY", "READY", or "DELETING".
[$sel:status:TransformFilterCriteria'] :: TransformFilterCriteria -> Maybe TransformStatusType

-- | Filter on transforms last modified after this date.
[$sel:lastModifiedAfter:TransformFilterCriteria'] :: TransformFilterCriteria -> Maybe POSIX

-- | Filter on transforms last modified before this date.
[$sel:lastModifiedBefore:TransformFilterCriteria'] :: TransformFilterCriteria -> Maybe POSIX

-- | This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
[$sel:glueVersion:TransformFilterCriteria'] :: TransformFilterCriteria -> Maybe Text

-- | Filters on datasets with a specific schema. The <tt>Map&lt;Column,
--   Type&gt;</tt> object is an array of key-value pairs representing the
--   schema this transform accepts, where <tt>Column</tt> is the name of a
--   column, and <tt>Type</tt> is the type of the data such as an integer
--   or string. Has an upper bound of 100 columns.
[$sel:schema:TransformFilterCriteria'] :: TransformFilterCriteria -> Maybe [SchemaColumn]

-- | The type of machine learning transform that is used to filter the
--   machine learning transforms.
[$sel:transformType:TransformFilterCriteria'] :: TransformFilterCriteria -> Maybe TransformType

-- | A unique transform name that is used to filter the machine learning
--   transforms.
[$sel:name:TransformFilterCriteria'] :: TransformFilterCriteria -> Maybe Text

-- | The time and date before which the transforms were created.
[$sel:createdBefore:TransformFilterCriteria'] :: TransformFilterCriteria -> Maybe POSIX

-- | Create a value of <a>TransformFilterCriteria</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAfter:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_createdAfter</a> - The time and date after
--   which the transforms were created.
--   
--   <a>$sel:status:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_status</a> - Filters the list of machine
--   learning transforms by the last known status of the transforms (to
--   indicate whether a transform can be used or not). One of "NOT_READY",
--   "READY", or "DELETING".
--   
--   <a>$sel:lastModifiedAfter:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_lastModifiedAfter</a> - Filter on
--   transforms last modified after this date.
--   
--   <a>$sel:lastModifiedBefore:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_lastModifiedBefore</a> - Filter on
--   transforms last modified before this date.
--   
--   <a>$sel:glueVersion:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_glueVersion</a> - This value determines
--   which version of Glue this machine learning transform is compatible
--   with. Glue 1.0 is recommended for most customers. If the value is not
--   set, the Glue compatibility defaults to Glue 0.9. For more
--   information, see <a>Glue Versions</a> in the developer guide.
--   
--   <a>$sel:schema:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_schema</a> - Filters on datasets with a
--   specific schema. The <tt>Map&lt;Column, Type&gt;</tt> object is an
--   array of key-value pairs representing the schema this transform
--   accepts, where <tt>Column</tt> is the name of a column, and
--   <tt>Type</tt> is the type of the data such as an integer or string.
--   Has an upper bound of 100 columns.
--   
--   <a>$sel:transformType:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_transformType</a> - The type of machine
--   learning transform that is used to filter the machine learning
--   transforms.
--   
--   <a>$sel:name:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_name</a> - A unique transform name that is
--   used to filter the machine learning transforms.
--   
--   <a>$sel:createdBefore:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_createdBefore</a> - The time and date
--   before which the transforms were created.
newTransformFilterCriteria :: TransformFilterCriteria

-- | The time and date after which the transforms were created.
transformFilterCriteria_createdAfter :: Lens' TransformFilterCriteria (Maybe UTCTime)

-- | Filters the list of machine learning transforms by the last known
--   status of the transforms (to indicate whether a transform can be used
--   or not). One of "NOT_READY", "READY", or "DELETING".
transformFilterCriteria_status :: Lens' TransformFilterCriteria (Maybe TransformStatusType)

-- | Filter on transforms last modified after this date.
transformFilterCriteria_lastModifiedAfter :: Lens' TransformFilterCriteria (Maybe UTCTime)

-- | Filter on transforms last modified before this date.
transformFilterCriteria_lastModifiedBefore :: Lens' TransformFilterCriteria (Maybe UTCTime)

-- | This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
transformFilterCriteria_glueVersion :: Lens' TransformFilterCriteria (Maybe Text)

-- | Filters on datasets with a specific schema. The <tt>Map&lt;Column,
--   Type&gt;</tt> object is an array of key-value pairs representing the
--   schema this transform accepts, where <tt>Column</tt> is the name of a
--   column, and <tt>Type</tt> is the type of the data such as an integer
--   or string. Has an upper bound of 100 columns.
transformFilterCriteria_schema :: Lens' TransformFilterCriteria (Maybe [SchemaColumn])

-- | The type of machine learning transform that is used to filter the
--   machine learning transforms.
transformFilterCriteria_transformType :: Lens' TransformFilterCriteria (Maybe TransformType)

-- | A unique transform name that is used to filter the machine learning
--   transforms.
transformFilterCriteria_name :: Lens' TransformFilterCriteria (Maybe Text)

-- | The time and date before which the transforms were created.
transformFilterCriteria_createdBefore :: Lens' TransformFilterCriteria (Maybe UTCTime)

-- | The algorithm-specific parameters that are associated with the machine
--   learning transform.
--   
--   <i>See:</i> <a>newTransformParameters</a> smart constructor.
data TransformParameters
TransformParameters' :: Maybe FindMatchesParameters -> TransformType -> TransformParameters

-- | The parameters for the find matches algorithm.
[$sel:findMatchesParameters:TransformParameters'] :: TransformParameters -> Maybe FindMatchesParameters

-- | The type of machine learning transform.
--   
--   For information about the types of machine learning transforms, see
--   <a>Creating Machine Learning Transforms</a>.
[$sel:transformType:TransformParameters'] :: TransformParameters -> TransformType

-- | Create a value of <a>TransformParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:findMatchesParameters:TransformParameters'</a>,
--   <a>transformParameters_findMatchesParameters</a> - The parameters for
--   the find matches algorithm.
--   
--   <a>$sel:transformType:TransformParameters'</a>,
--   <a>transformParameters_transformType</a> - The type of machine
--   learning transform.
--   
--   For information about the types of machine learning transforms, see
--   <a>Creating Machine Learning Transforms</a>.
newTransformParameters :: TransformType -> TransformParameters

-- | The parameters for the find matches algorithm.
transformParameters_findMatchesParameters :: Lens' TransformParameters (Maybe FindMatchesParameters)

-- | The type of machine learning transform.
--   
--   For information about the types of machine learning transforms, see
--   <a>Creating Machine Learning Transforms</a>.
transformParameters_transformType :: Lens' TransformParameters TransformType

-- | The sorting criteria that are associated with the machine learning
--   transform.
--   
--   <i>See:</i> <a>newTransformSortCriteria</a> smart constructor.
data TransformSortCriteria
TransformSortCriteria' :: TransformSortColumnType -> SortDirectionType -> TransformSortCriteria

-- | The column to be used in the sorting criteria that are associated with
--   the machine learning transform.
[$sel:column:TransformSortCriteria'] :: TransformSortCriteria -> TransformSortColumnType

-- | The sort direction to be used in the sorting criteria that are
--   associated with the machine learning transform.
[$sel:sortDirection:TransformSortCriteria'] :: TransformSortCriteria -> SortDirectionType

-- | Create a value of <a>TransformSortCriteria</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:column:TransformSortCriteria'</a>,
--   <a>transformSortCriteria_column</a> - The column to be used in the
--   sorting criteria that are associated with the machine learning
--   transform.
--   
--   <a>$sel:sortDirection:TransformSortCriteria'</a>,
--   <a>transformSortCriteria_sortDirection</a> - The sort direction to be
--   used in the sorting criteria that are associated with the machine
--   learning transform.
newTransformSortCriteria :: TransformSortColumnType -> SortDirectionType -> TransformSortCriteria

-- | The column to be used in the sorting criteria that are associated with
--   the machine learning transform.
transformSortCriteria_column :: Lens' TransformSortCriteria TransformSortColumnType

-- | The sort direction to be used in the sorting criteria that are
--   associated with the machine learning transform.
transformSortCriteria_sortDirection :: Lens' TransformSortCriteria SortDirectionType

-- | Information about a specific trigger.
--   
--   <i>See:</i> <a>newTrigger</a> smart constructor.
data Trigger
Trigger' :: Maybe Text -> Maybe TriggerState -> Maybe [Action] -> Maybe Text -> Maybe Predicate -> Maybe Text -> Maybe Text -> Maybe TriggerType -> Maybe EventBatchingCondition -> Maybe Text -> Trigger

-- | The name of the workflow associated with the trigger.
[$sel:workflowName:Trigger'] :: Trigger -> Maybe Text

-- | The current state of the trigger.
[$sel:state:Trigger'] :: Trigger -> Maybe TriggerState

-- | The actions initiated by this trigger.
[$sel:actions:Trigger'] :: Trigger -> Maybe [Action]

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
[$sel:schedule:Trigger'] :: Trigger -> Maybe Text

-- | The predicate of this trigger, which defines when it will fire.
[$sel:predicate:Trigger'] :: Trigger -> Maybe Predicate

-- | The name of the trigger.
[$sel:name:Trigger'] :: Trigger -> Maybe Text

-- | Reserved for future use.
[$sel:id:Trigger'] :: Trigger -> Maybe Text

-- | The type of trigger that this is.
[$sel:type':Trigger'] :: Trigger -> Maybe TriggerType

-- | Batch condition that must be met (specified number of events received
--   or batch time window expired) before EventBridge event trigger fires.
[$sel:eventBatchingCondition:Trigger'] :: Trigger -> Maybe EventBatchingCondition

-- | A description of this trigger.
[$sel:description:Trigger'] :: Trigger -> Maybe Text

-- | Create a value of <a>Trigger</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workflowName:Trigger'</a>, <a>trigger_workflowName</a> - The
--   name of the workflow associated with the trigger.
--   
--   <a>$sel:state:Trigger'</a>, <a>trigger_state</a> - The current state
--   of the trigger.
--   
--   <a>$sel:actions:Trigger'</a>, <a>trigger_actions</a> - The actions
--   initiated by this trigger.
--   
--   <a>$sel:schedule:Trigger'</a>, <a>trigger_schedule</a> - A
--   <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
--   
--   <a>$sel:predicate:Trigger'</a>, <a>trigger_predicate</a> - The
--   predicate of this trigger, which defines when it will fire.
--   
--   <a>$sel:name:Trigger'</a>, <a>trigger_name</a> - The name of the
--   trigger.
--   
--   <a>$sel:id:Trigger'</a>, <a>trigger_id</a> - Reserved for future use.
--   
--   <a>$sel:type':Trigger'</a>, <a>trigger_type</a> - The type of trigger
--   that this is.
--   
--   <a>$sel:eventBatchingCondition:Trigger'</a>,
--   <a>trigger_eventBatchingCondition</a> - Batch condition that must be
--   met (specified number of events received or batch time window expired)
--   before EventBridge event trigger fires.
--   
--   <a>$sel:description:Trigger'</a>, <a>trigger_description</a> - A
--   description of this trigger.
newTrigger :: Trigger

-- | The name of the workflow associated with the trigger.
trigger_workflowName :: Lens' Trigger (Maybe Text)

-- | The current state of the trigger.
trigger_state :: Lens' Trigger (Maybe TriggerState)

-- | The actions initiated by this trigger.
trigger_actions :: Lens' Trigger (Maybe [Action])

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
trigger_schedule :: Lens' Trigger (Maybe Text)

-- | The predicate of this trigger, which defines when it will fire.
trigger_predicate :: Lens' Trigger (Maybe Predicate)

-- | The name of the trigger.
trigger_name :: Lens' Trigger (Maybe Text)

-- | Reserved for future use.
trigger_id :: Lens' Trigger (Maybe Text)

-- | The type of trigger that this is.
trigger_type :: Lens' Trigger (Maybe TriggerType)

-- | Batch condition that must be met (specified number of events received
--   or batch time window expired) before EventBridge event trigger fires.
trigger_eventBatchingCondition :: Lens' Trigger (Maybe EventBatchingCondition)

-- | A description of this trigger.
trigger_description :: Lens' Trigger (Maybe Text)

-- | The details of a Trigger node present in the workflow.
--   
--   <i>See:</i> <a>newTriggerNodeDetails</a> smart constructor.
data TriggerNodeDetails
TriggerNodeDetails' :: Maybe Trigger -> TriggerNodeDetails

-- | The information of the trigger represented by the trigger node.
[$sel:trigger:TriggerNodeDetails'] :: TriggerNodeDetails -> Maybe Trigger

-- | Create a value of <a>TriggerNodeDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trigger:TriggerNodeDetails'</a>,
--   <a>triggerNodeDetails_trigger</a> - The information of the trigger
--   represented by the trigger node.
newTriggerNodeDetails :: TriggerNodeDetails

-- | The information of the trigger represented by the trigger node.
triggerNodeDetails_trigger :: Lens' TriggerNodeDetails (Maybe Trigger)

-- | A structure used to provide information used to update a trigger. This
--   object updates the previous trigger definition by overwriting it
--   completely.
--   
--   <i>See:</i> <a>newTriggerUpdate</a> smart constructor.
data TriggerUpdate
TriggerUpdate' :: Maybe [Action] -> Maybe Text -> Maybe Predicate -> Maybe Text -> Maybe EventBatchingCondition -> Maybe Text -> TriggerUpdate

-- | The actions initiated by this trigger.
[$sel:actions:TriggerUpdate'] :: TriggerUpdate -> Maybe [Action]

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
[$sel:schedule:TriggerUpdate'] :: TriggerUpdate -> Maybe Text

-- | The predicate of this trigger, which defines when it will fire.
[$sel:predicate:TriggerUpdate'] :: TriggerUpdate -> Maybe Predicate

-- | Reserved for future use.
[$sel:name:TriggerUpdate'] :: TriggerUpdate -> Maybe Text

-- | Batch condition that must be met (specified number of events received
--   or batch time window expired) before EventBridge event trigger fires.
[$sel:eventBatchingCondition:TriggerUpdate'] :: TriggerUpdate -> Maybe EventBatchingCondition

-- | A description of this trigger.
[$sel:description:TriggerUpdate'] :: TriggerUpdate -> Maybe Text

-- | Create a value of <a>TriggerUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actions:TriggerUpdate'</a>, <a>triggerUpdate_actions</a> - The
--   actions initiated by this trigger.
--   
--   <a>$sel:schedule:TriggerUpdate'</a>, <a>triggerUpdate_schedule</a> - A
--   <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
--   
--   <a>$sel:predicate:TriggerUpdate'</a>, <a>triggerUpdate_predicate</a> -
--   The predicate of this trigger, which defines when it will fire.
--   
--   <a>$sel:name:TriggerUpdate'</a>, <a>triggerUpdate_name</a> - Reserved
--   for future use.
--   
--   <a>$sel:eventBatchingCondition:TriggerUpdate'</a>,
--   <a>triggerUpdate_eventBatchingCondition</a> - Batch condition that
--   must be met (specified number of events received or batch time window
--   expired) before EventBridge event trigger fires.
--   
--   <a>$sel:description:TriggerUpdate'</a>,
--   <a>triggerUpdate_description</a> - A description of this trigger.
newTriggerUpdate :: TriggerUpdate

-- | The actions initiated by this trigger.
triggerUpdate_actions :: Lens' TriggerUpdate (Maybe [Action])

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
triggerUpdate_schedule :: Lens' TriggerUpdate (Maybe Text)

-- | The predicate of this trigger, which defines when it will fire.
triggerUpdate_predicate :: Lens' TriggerUpdate (Maybe Predicate)

-- | Reserved for future use.
triggerUpdate_name :: Lens' TriggerUpdate (Maybe Text)

-- | Batch condition that must be met (specified number of events received
--   or batch time window expired) before EventBridge event trigger fires.
triggerUpdate_eventBatchingCondition :: Lens' TriggerUpdate (Maybe EventBatchingCondition)

-- | A description of this trigger.
triggerUpdate_description :: Lens' TriggerUpdate (Maybe Text)

-- | Specifies a custom CSV classifier to be updated.
--   
--   <i>See:</i> <a>newUpdateCsvClassifierRequest</a> smart constructor.
data UpdateCsvClassifierRequest
UpdateCsvClassifierRequest' :: Maybe Text -> Maybe CsvHeaderOption -> Maybe Bool -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Text -> UpdateCsvClassifierRequest

-- | A custom symbol to denote what combines content into a single column
--   value. It must be different from the column delimiter.
[$sel:quoteSymbol:UpdateCsvClassifierRequest'] :: UpdateCsvClassifierRequest -> Maybe Text

-- | Indicates whether the CSV file contains a header.
[$sel:containsHeader:UpdateCsvClassifierRequest'] :: UpdateCsvClassifierRequest -> Maybe CsvHeaderOption

-- | Specifies not to trim values before identifying the type of column
--   values. The default value is true.
[$sel:disableValueTrimming:UpdateCsvClassifierRequest'] :: UpdateCsvClassifierRequest -> Maybe Bool

-- | A list of strings representing column names.
[$sel:header:UpdateCsvClassifierRequest'] :: UpdateCsvClassifierRequest -> Maybe [Text]

-- | Enables the processing of files that contain only one column.
[$sel:allowSingleColumn:UpdateCsvClassifierRequest'] :: UpdateCsvClassifierRequest -> Maybe Bool

-- | A custom symbol to denote what separates each column entry in the row.
[$sel:delimiter:UpdateCsvClassifierRequest'] :: UpdateCsvClassifierRequest -> Maybe Text

-- | The name of the classifier.
[$sel:name:UpdateCsvClassifierRequest'] :: UpdateCsvClassifierRequest -> Text

-- | Create a value of <a>UpdateCsvClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:quoteSymbol:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_quoteSymbol</a> - A custom symbol to
--   denote what combines content into a single column value. It must be
--   different from the column delimiter.
--   
--   <a>$sel:containsHeader:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_containsHeader</a> - Indicates whether
--   the CSV file contains a header.
--   
--   <a>$sel:disableValueTrimming:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_disableValueTrimming</a> - Specifies not
--   to trim values before identifying the type of column values. The
--   default value is true.
--   
--   <a>$sel:header:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_header</a> - A list of strings
--   representing column names.
--   
--   <a>$sel:allowSingleColumn:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_allowSingleColumn</a> - Enables the
--   processing of files that contain only one column.
--   
--   <a>$sel:delimiter:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_delimiter</a> - A custom symbol to
--   denote what separates each column entry in the row.
--   
--   <a>$sel:name:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_name</a> - The name of the classifier.
newUpdateCsvClassifierRequest :: Text -> UpdateCsvClassifierRequest

-- | A custom symbol to denote what combines content into a single column
--   value. It must be different from the column delimiter.
updateCsvClassifierRequest_quoteSymbol :: Lens' UpdateCsvClassifierRequest (Maybe Text)

-- | Indicates whether the CSV file contains a header.
updateCsvClassifierRequest_containsHeader :: Lens' UpdateCsvClassifierRequest (Maybe CsvHeaderOption)

-- | Specifies not to trim values before identifying the type of column
--   values. The default value is true.
updateCsvClassifierRequest_disableValueTrimming :: Lens' UpdateCsvClassifierRequest (Maybe Bool)

-- | A list of strings representing column names.
updateCsvClassifierRequest_header :: Lens' UpdateCsvClassifierRequest (Maybe [Text])

-- | Enables the processing of files that contain only one column.
updateCsvClassifierRequest_allowSingleColumn :: Lens' UpdateCsvClassifierRequest (Maybe Bool)

-- | A custom symbol to denote what separates each column entry in the row.
updateCsvClassifierRequest_delimiter :: Lens' UpdateCsvClassifierRequest (Maybe Text)

-- | The name of the classifier.
updateCsvClassifierRequest_name :: Lens' UpdateCsvClassifierRequest Text

-- | Specifies a grok classifier to update when passed to
--   <tt>UpdateClassifier</tt>.
--   
--   <i>See:</i> <a>newUpdateGrokClassifierRequest</a> smart constructor.
data UpdateGrokClassifierRequest
UpdateGrokClassifierRequest' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> UpdateGrokClassifierRequest

-- | An identifier of the data format that the classifier matches, such as
--   Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.
[$sel:classification:UpdateGrokClassifierRequest'] :: UpdateGrokClassifierRequest -> Maybe Text

-- | Optional custom grok patterns used by this classifier.
[$sel:customPatterns:UpdateGrokClassifierRequest'] :: UpdateGrokClassifierRequest -> Maybe Text

-- | The grok pattern used by this classifier.
[$sel:grokPattern:UpdateGrokClassifierRequest'] :: UpdateGrokClassifierRequest -> Maybe Text

-- | The name of the <tt>GrokClassifier</tt>.
[$sel:name:UpdateGrokClassifierRequest'] :: UpdateGrokClassifierRequest -> Text

-- | Create a value of <a>UpdateGrokClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:classification:UpdateGrokClassifierRequest'</a>,
--   <a>updateGrokClassifierRequest_classification</a> - An identifier of
--   the data format that the classifier matches, such as Twitter, JSON,
--   Omniture logs, Amazon CloudWatch Logs, and so on.
--   
--   <a>$sel:customPatterns:UpdateGrokClassifierRequest'</a>,
--   <a>updateGrokClassifierRequest_customPatterns</a> - Optional custom
--   grok patterns used by this classifier.
--   
--   <a>$sel:grokPattern:UpdateGrokClassifierRequest'</a>,
--   <a>updateGrokClassifierRequest_grokPattern</a> - The grok pattern used
--   by this classifier.
--   
--   <a>$sel:name:UpdateGrokClassifierRequest'</a>,
--   <a>updateGrokClassifierRequest_name</a> - The name of the
--   <tt>GrokClassifier</tt>.
newUpdateGrokClassifierRequest :: Text -> UpdateGrokClassifierRequest

-- | An identifier of the data format that the classifier matches, such as
--   Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.
updateGrokClassifierRequest_classification :: Lens' UpdateGrokClassifierRequest (Maybe Text)

-- | Optional custom grok patterns used by this classifier.
updateGrokClassifierRequest_customPatterns :: Lens' UpdateGrokClassifierRequest (Maybe Text)

-- | The grok pattern used by this classifier.
updateGrokClassifierRequest_grokPattern :: Lens' UpdateGrokClassifierRequest (Maybe Text)

-- | The name of the <tt>GrokClassifier</tt>.
updateGrokClassifierRequest_name :: Lens' UpdateGrokClassifierRequest Text

-- | Specifies a JSON classifier to be updated.
--   
--   <i>See:</i> <a>newUpdateJsonClassifierRequest</a> smart constructor.
data UpdateJsonClassifierRequest
UpdateJsonClassifierRequest' :: Maybe Text -> Text -> UpdateJsonClassifierRequest

-- | A <tt>JsonPath</tt> string defining the JSON data for the classifier
--   to classify. Glue supports a subset of JsonPath, as described in
--   <a>Writing JsonPath Custom Classifiers</a>.
[$sel:jsonPath:UpdateJsonClassifierRequest'] :: UpdateJsonClassifierRequest -> Maybe Text

-- | The name of the classifier.
[$sel:name:UpdateJsonClassifierRequest'] :: UpdateJsonClassifierRequest -> Text

-- | Create a value of <a>UpdateJsonClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jsonPath:UpdateJsonClassifierRequest'</a>,
--   <a>updateJsonClassifierRequest_jsonPath</a> - A <tt>JsonPath</tt>
--   string defining the JSON data for the classifier to classify. Glue
--   supports a subset of JsonPath, as described in <a>Writing JsonPath
--   Custom Classifiers</a>.
--   
--   <a>$sel:name:UpdateJsonClassifierRequest'</a>,
--   <a>updateJsonClassifierRequest_name</a> - The name of the classifier.
newUpdateJsonClassifierRequest :: Text -> UpdateJsonClassifierRequest

-- | A <tt>JsonPath</tt> string defining the JSON data for the classifier
--   to classify. Glue supports a subset of JsonPath, as described in
--   <a>Writing JsonPath Custom Classifiers</a>.
updateJsonClassifierRequest_jsonPath :: Lens' UpdateJsonClassifierRequest (Maybe Text)

-- | The name of the classifier.
updateJsonClassifierRequest_name :: Lens' UpdateJsonClassifierRequest Text

-- | Specifies an XML classifier to be updated.
--   
--   <i>See:</i> <a>newUpdateXMLClassifierRequest</a> smart constructor.
data UpdateXMLClassifierRequest
UpdateXMLClassifierRequest' :: Maybe Text -> Maybe Text -> Text -> UpdateXMLClassifierRequest

-- | An identifier of the data format that the classifier matches.
[$sel:classification:UpdateXMLClassifierRequest'] :: UpdateXMLClassifierRequest -> Maybe Text

-- | The XML tag designating the element that contains each record in an
--   XML document being parsed. This cannot identify a self-closing element
--   (closed by <tt>/&gt;</tt>). An empty row element that contains only
--   attributes can be parsed as long as it ends with a closing tag (for
--   example, <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is
--   okay, but <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
[$sel:rowTag:UpdateXMLClassifierRequest'] :: UpdateXMLClassifierRequest -> Maybe Text

-- | The name of the classifier.
[$sel:name:UpdateXMLClassifierRequest'] :: UpdateXMLClassifierRequest -> Text

-- | Create a value of <a>UpdateXMLClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:classification:UpdateXMLClassifierRequest'</a>,
--   <a>updateXMLClassifierRequest_classification</a> - An identifier of
--   the data format that the classifier matches.
--   
--   <a>$sel:rowTag:UpdateXMLClassifierRequest'</a>,
--   <a>updateXMLClassifierRequest_rowTag</a> - The XML tag designating the
--   element that contains each record in an XML document being parsed.
--   This cannot identify a self-closing element (closed by
--   <tt>/&gt;</tt>). An empty row element that contains only attributes
--   can be parsed as long as it ends with a closing tag (for example,
--   <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is okay, but
--   <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
--   
--   <a>$sel:name:UpdateXMLClassifierRequest'</a>,
--   <a>updateXMLClassifierRequest_name</a> - The name of the classifier.
newUpdateXMLClassifierRequest :: Text -> UpdateXMLClassifierRequest

-- | An identifier of the data format that the classifier matches.
updateXMLClassifierRequest_classification :: Lens' UpdateXMLClassifierRequest (Maybe Text)

-- | The XML tag designating the element that contains each record in an
--   XML document being parsed. This cannot identify a self-closing element
--   (closed by <tt>/&gt;</tt>). An empty row element that contains only
--   attributes can be parsed as long as it ends with a closing tag (for
--   example, <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is
--   okay, but <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
updateXMLClassifierRequest_rowTag :: Lens' UpdateXMLClassifierRequest (Maybe Text)

-- | The name of the classifier.
updateXMLClassifierRequest_name :: Lens' UpdateXMLClassifierRequest Text

-- | Represents the equivalent of a Hive user-defined function
--   (<tt>UDF</tt>) definition.
--   
--   <i>See:</i> <a>newUserDefinedFunction</a> smart constructor.
data UserDefinedFunction
UserDefinedFunction' :: Maybe Text -> Maybe Text -> Maybe [ResourceUri] -> Maybe Text -> Maybe Text -> Maybe PrincipalType -> Maybe POSIX -> Maybe Text -> UserDefinedFunction

-- | The owner of the function.
[$sel:ownerName:UserDefinedFunction'] :: UserDefinedFunction -> Maybe Text

-- | The ID of the Data Catalog in which the function resides.
[$sel:catalogId:UserDefinedFunction'] :: UserDefinedFunction -> Maybe Text

-- | The resource URIs for the function.
[$sel:resourceUris:UserDefinedFunction'] :: UserDefinedFunction -> Maybe [ResourceUri]

-- | The name of the catalog database that contains the function.
[$sel:databaseName:UserDefinedFunction'] :: UserDefinedFunction -> Maybe Text

-- | The name of the function.
[$sel:functionName:UserDefinedFunction'] :: UserDefinedFunction -> Maybe Text

-- | The owner type.
[$sel:ownerType:UserDefinedFunction'] :: UserDefinedFunction -> Maybe PrincipalType

-- | The time at which the function was created.
[$sel:createTime:UserDefinedFunction'] :: UserDefinedFunction -> Maybe POSIX

-- | The Java class that contains the function code.
[$sel:className:UserDefinedFunction'] :: UserDefinedFunction -> Maybe Text

-- | Create a value of <a>UserDefinedFunction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownerName:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_ownerName</a> - The owner of the function.
--   
--   <a>$sel:catalogId:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_catalogId</a> - The ID of the Data Catalog in
--   which the function resides.
--   
--   <a>$sel:resourceUris:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_resourceUris</a> - The resource URIs for the
--   function.
--   
--   <a>$sel:databaseName:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_databaseName</a> - The name of the catalog
--   database that contains the function.
--   
--   <a>$sel:functionName:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_functionName</a> - The name of the function.
--   
--   <a>$sel:ownerType:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_ownerType</a> - The owner type.
--   
--   <a>$sel:createTime:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_createTime</a> - The time at which the function
--   was created.
--   
--   <a>$sel:className:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_className</a> - The Java class that contains
--   the function code.
newUserDefinedFunction :: UserDefinedFunction

-- | The owner of the function.
userDefinedFunction_ownerName :: Lens' UserDefinedFunction (Maybe Text)

-- | The ID of the Data Catalog in which the function resides.
userDefinedFunction_catalogId :: Lens' UserDefinedFunction (Maybe Text)

-- | The resource URIs for the function.
userDefinedFunction_resourceUris :: Lens' UserDefinedFunction (Maybe [ResourceUri])

-- | The name of the catalog database that contains the function.
userDefinedFunction_databaseName :: Lens' UserDefinedFunction (Maybe Text)

-- | The name of the function.
userDefinedFunction_functionName :: Lens' UserDefinedFunction (Maybe Text)

-- | The owner type.
userDefinedFunction_ownerType :: Lens' UserDefinedFunction (Maybe PrincipalType)

-- | The time at which the function was created.
userDefinedFunction_createTime :: Lens' UserDefinedFunction (Maybe UTCTime)

-- | The Java class that contains the function code.
userDefinedFunction_className :: Lens' UserDefinedFunction (Maybe Text)

-- | A structure used to create or update a user-defined function.
--   
--   <i>See:</i> <a>newUserDefinedFunctionInput</a> smart constructor.
data UserDefinedFunctionInput
UserDefinedFunctionInput' :: Maybe Text -> Maybe [ResourceUri] -> Maybe Text -> Maybe PrincipalType -> Maybe Text -> UserDefinedFunctionInput

-- | The owner of the function.
[$sel:ownerName:UserDefinedFunctionInput'] :: UserDefinedFunctionInput -> Maybe Text

-- | The resource URIs for the function.
[$sel:resourceUris:UserDefinedFunctionInput'] :: UserDefinedFunctionInput -> Maybe [ResourceUri]

-- | The name of the function.
[$sel:functionName:UserDefinedFunctionInput'] :: UserDefinedFunctionInput -> Maybe Text

-- | The owner type.
[$sel:ownerType:UserDefinedFunctionInput'] :: UserDefinedFunctionInput -> Maybe PrincipalType

-- | The Java class that contains the function code.
[$sel:className:UserDefinedFunctionInput'] :: UserDefinedFunctionInput -> Maybe Text

-- | Create a value of <a>UserDefinedFunctionInput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownerName:UserDefinedFunctionInput'</a>,
--   <a>userDefinedFunctionInput_ownerName</a> - The owner of the function.
--   
--   <a>$sel:resourceUris:UserDefinedFunctionInput'</a>,
--   <a>userDefinedFunctionInput_resourceUris</a> - The resource URIs for
--   the function.
--   
--   <a>$sel:functionName:UserDefinedFunctionInput'</a>,
--   <a>userDefinedFunctionInput_functionName</a> - The name of the
--   function.
--   
--   <a>$sel:ownerType:UserDefinedFunctionInput'</a>,
--   <a>userDefinedFunctionInput_ownerType</a> - The owner type.
--   
--   <a>$sel:className:UserDefinedFunctionInput'</a>,
--   <a>userDefinedFunctionInput_className</a> - The Java class that
--   contains the function code.
newUserDefinedFunctionInput :: UserDefinedFunctionInput

-- | The owner of the function.
userDefinedFunctionInput_ownerName :: Lens' UserDefinedFunctionInput (Maybe Text)

-- | The resource URIs for the function.
userDefinedFunctionInput_resourceUris :: Lens' UserDefinedFunctionInput (Maybe [ResourceUri])

-- | The name of the function.
userDefinedFunctionInput_functionName :: Lens' UserDefinedFunctionInput (Maybe Text)

-- | The owner type.
userDefinedFunctionInput_ownerType :: Lens' UserDefinedFunctionInput (Maybe PrincipalType)

-- | The Java class that contains the function code.
userDefinedFunctionInput_className :: Lens' UserDefinedFunctionInput (Maybe Text)

-- | A workflow is a collection of multiple dependent Glue jobs and
--   crawlers that are run to complete a complex ETL task. A workflow
--   manages the execution and monitoring of all its jobs and crawlers.
--   
--   <i>See:</i> <a>newWorkflow</a> smart constructor.
data Workflow
Workflow' :: Maybe WorkflowGraph -> Maybe POSIX -> Maybe BlueprintDetails -> Maybe Int -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe WorkflowRun -> Maybe Text -> Maybe POSIX -> Workflow

-- | The graph representing all the Glue components that belong to the
--   workflow as nodes and directed connections between them as edges.
[$sel:graph:Workflow'] :: Workflow -> Maybe WorkflowGraph

-- | The date and time when the workflow was last modified.
[$sel:lastModifiedOn:Workflow'] :: Workflow -> Maybe POSIX

-- | This structure indicates the details of the blueprint that this
--   particular workflow is created from.
[$sel:blueprintDetails:Workflow'] :: Workflow -> Maybe BlueprintDetails

-- | You can use this parameter to prevent unwanted multiple updates to
--   data, to control costs, or in some cases, to prevent exceeding the
--   maximum number of concurrent runs of any of the component jobs. If you
--   leave this parameter blank, there is no limit to the number of
--   concurrent workflow runs.
[$sel:maxConcurrentRuns:Workflow'] :: Workflow -> Maybe Int

-- | A collection of properties to be used as part of each execution of the
--   workflow. The run properties are made available to each job in the
--   workflow. A job can modify the properties for the next jobs in the
--   flow.
[$sel:defaultRunProperties:Workflow'] :: Workflow -> Maybe (HashMap Text Text)

-- | The name of the workflow.
[$sel:name:Workflow'] :: Workflow -> Maybe Text

-- | The information about the last execution of the workflow.
[$sel:lastRun:Workflow'] :: Workflow -> Maybe WorkflowRun

-- | A description of the workflow.
[$sel:description:Workflow'] :: Workflow -> Maybe Text

-- | The date and time when the workflow was created.
[$sel:createdOn:Workflow'] :: Workflow -> Maybe POSIX

-- | Create a value of <a>Workflow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:graph:Workflow'</a>, <a>workflow_graph</a> - The graph
--   representing all the Glue components that belong to the workflow as
--   nodes and directed connections between them as edges.
--   
--   <a>$sel:lastModifiedOn:Workflow'</a>, <a>workflow_lastModifiedOn</a> -
--   The date and time when the workflow was last modified.
--   
--   <a>$sel:blueprintDetails:Workflow'</a>,
--   <a>workflow_blueprintDetails</a> - This structure indicates the
--   details of the blueprint that this particular workflow is created
--   from.
--   
--   <a>$sel:maxConcurrentRuns:Workflow'</a>,
--   <a>workflow_maxConcurrentRuns</a> - You can use this parameter to
--   prevent unwanted multiple updates to data, to control costs, or in
--   some cases, to prevent exceeding the maximum number of concurrent runs
--   of any of the component jobs. If you leave this parameter blank, there
--   is no limit to the number of concurrent workflow runs.
--   
--   <a>$sel:defaultRunProperties:Workflow'</a>,
--   <a>workflow_defaultRunProperties</a> - A collection of properties to
--   be used as part of each execution of the workflow. The run properties
--   are made available to each job in the workflow. A job can modify the
--   properties for the next jobs in the flow.
--   
--   <a>$sel:name:Workflow'</a>, <a>workflow_name</a> - The name of the
--   workflow.
--   
--   <a>$sel:lastRun:Workflow'</a>, <a>workflow_lastRun</a> - The
--   information about the last execution of the workflow.
--   
--   <a>$sel:description:Workflow'</a>, <a>workflow_description</a> - A
--   description of the workflow.
--   
--   <a>$sel:createdOn:Workflow'</a>, <a>workflow_createdOn</a> - The date
--   and time when the workflow was created.
newWorkflow :: Workflow

-- | The graph representing all the Glue components that belong to the
--   workflow as nodes and directed connections between them as edges.
workflow_graph :: Lens' Workflow (Maybe WorkflowGraph)

-- | The date and time when the workflow was last modified.
workflow_lastModifiedOn :: Lens' Workflow (Maybe UTCTime)

-- | This structure indicates the details of the blueprint that this
--   particular workflow is created from.
workflow_blueprintDetails :: Lens' Workflow (Maybe BlueprintDetails)

-- | You can use this parameter to prevent unwanted multiple updates to
--   data, to control costs, or in some cases, to prevent exceeding the
--   maximum number of concurrent runs of any of the component jobs. If you
--   leave this parameter blank, there is no limit to the number of
--   concurrent workflow runs.
workflow_maxConcurrentRuns :: Lens' Workflow (Maybe Int)

-- | A collection of properties to be used as part of each execution of the
--   workflow. The run properties are made available to each job in the
--   workflow. A job can modify the properties for the next jobs in the
--   flow.
workflow_defaultRunProperties :: Lens' Workflow (Maybe (HashMap Text Text))

-- | The name of the workflow.
workflow_name :: Lens' Workflow (Maybe Text)

-- | The information about the last execution of the workflow.
workflow_lastRun :: Lens' Workflow (Maybe WorkflowRun)

-- | A description of the workflow.
workflow_description :: Lens' Workflow (Maybe Text)

-- | The date and time when the workflow was created.
workflow_createdOn :: Lens' Workflow (Maybe UTCTime)

-- | A workflow graph represents the complete workflow containing all the
--   Glue components present in the workflow and all the directed
--   connections between them.
--   
--   <i>See:</i> <a>newWorkflowGraph</a> smart constructor.
data WorkflowGraph
WorkflowGraph' :: Maybe [Edge] -> Maybe [Node] -> WorkflowGraph

-- | A list of all the directed connections between the nodes belonging to
--   the workflow.
[$sel:edges:WorkflowGraph'] :: WorkflowGraph -> Maybe [Edge]

-- | A list of the the Glue components belong to the workflow represented
--   as nodes.
[$sel:nodes:WorkflowGraph'] :: WorkflowGraph -> Maybe [Node]

-- | Create a value of <a>WorkflowGraph</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:edges:WorkflowGraph'</a>, <a>workflowGraph_edges</a> - A list
--   of all the directed connections between the nodes belonging to the
--   workflow.
--   
--   <a>$sel:nodes:WorkflowGraph'</a>, <a>workflowGraph_nodes</a> - A list
--   of the the Glue components belong to the workflow represented as
--   nodes.
newWorkflowGraph :: WorkflowGraph

-- | A list of all the directed connections between the nodes belonging to
--   the workflow.
workflowGraph_edges :: Lens' WorkflowGraph (Maybe [Edge])

-- | A list of the the Glue components belong to the workflow represented
--   as nodes.
workflowGraph_nodes :: Lens' WorkflowGraph (Maybe [Node])

-- | A workflow run is an execution of a workflow providing all the runtime
--   information.
--   
--   <i>See:</i> <a>newWorkflowRun</a> smart constructor.
data WorkflowRun
WorkflowRun' :: Maybe POSIX -> Maybe WorkflowRunStatus -> Maybe WorkflowGraph -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe WorkflowRunStatistics -> Maybe StartingEventBatchCondition -> Maybe Text -> Maybe (HashMap Text Text) -> WorkflowRun

-- | The date and time when the workflow run completed.
[$sel:completedOn:WorkflowRun'] :: WorkflowRun -> Maybe POSIX

-- | The status of the workflow run.
[$sel:status:WorkflowRun'] :: WorkflowRun -> Maybe WorkflowRunStatus

-- | The graph representing all the Glue components that belong to the
--   workflow as nodes and directed connections between them as edges.
[$sel:graph:WorkflowRun'] :: WorkflowRun -> Maybe WorkflowGraph

-- | The date and time when the workflow run was started.
[$sel:startedOn:WorkflowRun'] :: WorkflowRun -> Maybe POSIX

-- | The ID of this workflow run.
[$sel:workflowRunId:WorkflowRun'] :: WorkflowRun -> Maybe Text

-- | Name of the workflow that was run.
[$sel:name:WorkflowRun'] :: WorkflowRun -> Maybe Text

-- | The ID of the previous workflow run.
[$sel:previousRunId:WorkflowRun'] :: WorkflowRun -> Maybe Text

-- | The statistics of the run.
[$sel:statistics:WorkflowRun'] :: WorkflowRun -> Maybe WorkflowRunStatistics

-- | The batch condition that started the workflow run.
[$sel:startingEventBatchCondition:WorkflowRun'] :: WorkflowRun -> Maybe StartingEventBatchCondition

-- | This error message describes any error that may have occurred in
--   starting the workflow run. Currently the only error message is
--   "Concurrent runs exceeded for workflow: <tt>foo</tt>."
[$sel:errorMessage:WorkflowRun'] :: WorkflowRun -> Maybe Text

-- | The workflow run properties which were set during the run.
[$sel:workflowRunProperties:WorkflowRun'] :: WorkflowRun -> Maybe (HashMap Text Text)

-- | Create a value of <a>WorkflowRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completedOn:WorkflowRun'</a>, <a>workflowRun_completedOn</a> -
--   The date and time when the workflow run completed.
--   
--   <a>$sel:status:WorkflowRun'</a>, <a>workflowRun_status</a> - The
--   status of the workflow run.
--   
--   <a>$sel:graph:WorkflowRun'</a>, <a>workflowRun_graph</a> - The graph
--   representing all the Glue components that belong to the workflow as
--   nodes and directed connections between them as edges.
--   
--   <a>$sel:startedOn:WorkflowRun'</a>, <a>workflowRun_startedOn</a> - The
--   date and time when the workflow run was started.
--   
--   <a>$sel:workflowRunId:WorkflowRun'</a>,
--   <a>workflowRun_workflowRunId</a> - The ID of this workflow run.
--   
--   <a>$sel:name:WorkflowRun'</a>, <a>workflowRun_name</a> - Name of the
--   workflow that was run.
--   
--   <a>$sel:previousRunId:WorkflowRun'</a>,
--   <a>workflowRun_previousRunId</a> - The ID of the previous workflow
--   run.
--   
--   <a>$sel:statistics:WorkflowRun'</a>, <a>workflowRun_statistics</a> -
--   The statistics of the run.
--   
--   <a>$sel:startingEventBatchCondition:WorkflowRun'</a>,
--   <a>workflowRun_startingEventBatchCondition</a> - The batch condition
--   that started the workflow run.
--   
--   <a>$sel:errorMessage:WorkflowRun'</a>, <a>workflowRun_errorMessage</a>
--   - This error message describes any error that may have occurred in
--   starting the workflow run. Currently the only error message is
--   "Concurrent runs exceeded for workflow: <tt>foo</tt>."
--   
--   <a>$sel:workflowRunProperties:WorkflowRun'</a>,
--   <a>workflowRun_workflowRunProperties</a> - The workflow run properties
--   which were set during the run.
newWorkflowRun :: WorkflowRun

-- | The date and time when the workflow run completed.
workflowRun_completedOn :: Lens' WorkflowRun (Maybe UTCTime)

-- | The status of the workflow run.
workflowRun_status :: Lens' WorkflowRun (Maybe WorkflowRunStatus)

-- | The graph representing all the Glue components that belong to the
--   workflow as nodes and directed connections between them as edges.
workflowRun_graph :: Lens' WorkflowRun (Maybe WorkflowGraph)

-- | The date and time when the workflow run was started.
workflowRun_startedOn :: Lens' WorkflowRun (Maybe UTCTime)

-- | The ID of this workflow run.
workflowRun_workflowRunId :: Lens' WorkflowRun (Maybe Text)

-- | Name of the workflow that was run.
workflowRun_name :: Lens' WorkflowRun (Maybe Text)

-- | The ID of the previous workflow run.
workflowRun_previousRunId :: Lens' WorkflowRun (Maybe Text)

-- | The statistics of the run.
workflowRun_statistics :: Lens' WorkflowRun (Maybe WorkflowRunStatistics)

-- | The batch condition that started the workflow run.
workflowRun_startingEventBatchCondition :: Lens' WorkflowRun (Maybe StartingEventBatchCondition)

-- | This error message describes any error that may have occurred in
--   starting the workflow run. Currently the only error message is
--   "Concurrent runs exceeded for workflow: <tt>foo</tt>."
workflowRun_errorMessage :: Lens' WorkflowRun (Maybe Text)

-- | The workflow run properties which were set during the run.
workflowRun_workflowRunProperties :: Lens' WorkflowRun (Maybe (HashMap Text Text))

-- | Workflow run statistics provides statistics about the workflow run.
--   
--   <i>See:</i> <a>newWorkflowRunStatistics</a> smart constructor.
data WorkflowRunStatistics
WorkflowRunStatistics' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> WorkflowRunStatistics

-- | Total number Actions in running state.
[$sel:runningActions:WorkflowRunStatistics'] :: WorkflowRunStatistics -> Maybe Int

-- | Total number of Actions that have stopped.
[$sel:stoppedActions:WorkflowRunStatistics'] :: WorkflowRunStatistics -> Maybe Int

-- | Total number of Actions in the workflow run.
[$sel:totalActions:WorkflowRunStatistics'] :: WorkflowRunStatistics -> Maybe Int

-- | Total number of Actions that have failed.
[$sel:failedActions:WorkflowRunStatistics'] :: WorkflowRunStatistics -> Maybe Int

-- | Total number of Actions that timed out.
[$sel:timeoutActions:WorkflowRunStatistics'] :: WorkflowRunStatistics -> Maybe Int

-- | Total number of Actions that have succeeded.
[$sel:succeededActions:WorkflowRunStatistics'] :: WorkflowRunStatistics -> Maybe Int

-- | Create a value of <a>WorkflowRunStatistics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runningActions:WorkflowRunStatistics'</a>,
--   <a>workflowRunStatistics_runningActions</a> - Total number Actions in
--   running state.
--   
--   <a>$sel:stoppedActions:WorkflowRunStatistics'</a>,
--   <a>workflowRunStatistics_stoppedActions</a> - Total number of Actions
--   that have stopped.
--   
--   <a>$sel:totalActions:WorkflowRunStatistics'</a>,
--   <a>workflowRunStatistics_totalActions</a> - Total number of Actions in
--   the workflow run.
--   
--   <a>$sel:failedActions:WorkflowRunStatistics'</a>,
--   <a>workflowRunStatistics_failedActions</a> - Total number of Actions
--   that have failed.
--   
--   <a>$sel:timeoutActions:WorkflowRunStatistics'</a>,
--   <a>workflowRunStatistics_timeoutActions</a> - Total number of Actions
--   that timed out.
--   
--   <a>$sel:succeededActions:WorkflowRunStatistics'</a>,
--   <a>workflowRunStatistics_succeededActions</a> - Total number of
--   Actions that have succeeded.
newWorkflowRunStatistics :: WorkflowRunStatistics

-- | Total number Actions in running state.
workflowRunStatistics_runningActions :: Lens' WorkflowRunStatistics (Maybe Int)

-- | Total number of Actions that have stopped.
workflowRunStatistics_stoppedActions :: Lens' WorkflowRunStatistics (Maybe Int)

-- | Total number of Actions in the workflow run.
workflowRunStatistics_totalActions :: Lens' WorkflowRunStatistics (Maybe Int)

-- | Total number of Actions that have failed.
workflowRunStatistics_failedActions :: Lens' WorkflowRunStatistics (Maybe Int)

-- | Total number of Actions that timed out.
workflowRunStatistics_timeoutActions :: Lens' WorkflowRunStatistics (Maybe Int)

-- | Total number of Actions that have succeeded.
workflowRunStatistics_succeededActions :: Lens' WorkflowRunStatistics (Maybe Int)

-- | A classifier for <tt>XML</tt> content.
--   
--   <i>See:</i> <a>newXMLClassifier</a> smart constructor.
data XMLClassifier
XMLClassifier' :: Maybe POSIX -> Maybe POSIX -> Maybe Integer -> Maybe Text -> Text -> Text -> XMLClassifier

-- | The time that this classifier was registered.
[$sel:creationTime:XMLClassifier'] :: XMLClassifier -> Maybe POSIX

-- | The time that this classifier was last updated.
[$sel:lastUpdated:XMLClassifier'] :: XMLClassifier -> Maybe POSIX

-- | The version of this classifier.
[$sel:version:XMLClassifier'] :: XMLClassifier -> Maybe Integer

-- | The XML tag designating the element that contains each record in an
--   XML document being parsed. This can't identify a self-closing element
--   (closed by <tt>/&gt;</tt>). An empty row element that contains only
--   attributes can be parsed as long as it ends with a closing tag (for
--   example, <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is
--   okay, but <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
[$sel:rowTag:XMLClassifier'] :: XMLClassifier -> Maybe Text

-- | The name of the classifier.
[$sel:name:XMLClassifier'] :: XMLClassifier -> Text

-- | An identifier of the data format that the classifier matches.
[$sel:classification:XMLClassifier'] :: XMLClassifier -> Text

-- | Create a value of <a>XMLClassifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:XMLClassifier'</a>,
--   <a>xMLClassifier_creationTime</a> - The time that this classifier was
--   registered.
--   
--   <a>$sel:lastUpdated:XMLClassifier'</a>,
--   <a>xMLClassifier_lastUpdated</a> - The time that this classifier was
--   last updated.
--   
--   <a>$sel:version:XMLClassifier'</a>, <a>xMLClassifier_version</a> - The
--   version of this classifier.
--   
--   <a>$sel:rowTag:XMLClassifier'</a>, <a>xMLClassifier_rowTag</a> - The
--   XML tag designating the element that contains each record in an XML
--   document being parsed. This can't identify a self-closing element
--   (closed by <tt>/&gt;</tt>). An empty row element that contains only
--   attributes can be parsed as long as it ends with a closing tag (for
--   example, <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is
--   okay, but <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
--   
--   <a>$sel:name:XMLClassifier'</a>, <a>xMLClassifier_name</a> - The name
--   of the classifier.
--   
--   <a>$sel:classification:XMLClassifier'</a>,
--   <a>xMLClassifier_classification</a> - An identifier of the data format
--   that the classifier matches.
newXMLClassifier :: Text -> Text -> XMLClassifier

-- | The time that this classifier was registered.
xMLClassifier_creationTime :: Lens' XMLClassifier (Maybe UTCTime)

-- | The time that this classifier was last updated.
xMLClassifier_lastUpdated :: Lens' XMLClassifier (Maybe UTCTime)

-- | The version of this classifier.
xMLClassifier_version :: Lens' XMLClassifier (Maybe Integer)

-- | The XML tag designating the element that contains each record in an
--   XML document being parsed. This can't identify a self-closing element
--   (closed by <tt>/&gt;</tt>). An empty row element that contains only
--   attributes can be parsed as long as it ends with a closing tag (for
--   example, <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is
--   okay, but <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
xMLClassifier_rowTag :: Lens' XMLClassifier (Maybe Text)

-- | The name of the classifier.
xMLClassifier_name :: Lens' XMLClassifier Text

-- | An identifier of the data format that the classifier matches.
xMLClassifier_classification :: Lens' XMLClassifier Text


-- | Adds tags to a resource. A tag is a label you can assign to an Amazon
--   Web Services resource. In Glue, you can tag only certain resources.
--   For information about what resources you can tag, see <a>Amazon Web
--   Services Tags in Glue</a>.
module Network.AWS.Glue.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The ARN of the Glue resource to which to add the tags. For more
--   information about Glue resource ARNs, see the <a>Glue ARN string
--   pattern</a>.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | Tags to add to this resource.
[$sel:tagsToAdd:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of the Glue resource to which to add the tags. For more
--   information about Glue resource ARNs, see the <a>Glue ARN string
--   pattern</a>.
--   
--   <a>$sel:tagsToAdd:TagResource'</a>, <a>tagResource_tagsToAdd</a> -
--   Tags to add to this resource.
newTagResource :: Text -> TagResource

-- | The ARN of the Glue resource to which to add the tags. For more
--   information about Glue resource ARNs, see the <a>Glue ARN string
--   pattern</a>.
tagResource_resourceArn :: Lens' TagResource Text

-- | Tags to add to this resource.
tagResource_tagsToAdd :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.TagResource.TagResource
instance GHC.Show.Show Network.AWS.Glue.TagResource.TagResource
instance GHC.Read.Read Network.AWS.Glue.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.Glue.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.Glue.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.Glue.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.Glue.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.Glue.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.Glue.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.Glue.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.TagResource.TagResource


-- | Stops the execution of the specified workflow run.
module Network.AWS.Glue.StopWorkflowRun

-- | <i>See:</i> <a>newStopWorkflowRun</a> smart constructor.
data StopWorkflowRun
StopWorkflowRun' :: Text -> Text -> StopWorkflowRun

-- | The name of the workflow to stop.
[$sel:name:StopWorkflowRun'] :: StopWorkflowRun -> Text

-- | The ID of the workflow run to stop.
[$sel:runId:StopWorkflowRun'] :: StopWorkflowRun -> Text

-- | Create a value of <a>StopWorkflowRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StopWorkflowRun'</a>, <a>stopWorkflowRun_name</a> - The
--   name of the workflow to stop.
--   
--   <a>$sel:runId:StopWorkflowRun'</a>, <a>stopWorkflowRun_runId</a> - The
--   ID of the workflow run to stop.
newStopWorkflowRun :: Text -> Text -> StopWorkflowRun

-- | The name of the workflow to stop.
stopWorkflowRun_name :: Lens' StopWorkflowRun Text

-- | The ID of the workflow run to stop.
stopWorkflowRun_runId :: Lens' StopWorkflowRun Text

-- | <i>See:</i> <a>newStopWorkflowRunResponse</a> smart constructor.
data StopWorkflowRunResponse
StopWorkflowRunResponse' :: Int -> StopWorkflowRunResponse

-- | The response's http status code.
[$sel:httpStatus:StopWorkflowRunResponse'] :: StopWorkflowRunResponse -> Int

-- | Create a value of <a>StopWorkflowRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopWorkflowRunResponse'</a>,
--   <a>stopWorkflowRunResponse_httpStatus</a> - The response's http status
--   code.
newStopWorkflowRunResponse :: Int -> StopWorkflowRunResponse

-- | The response's http status code.
stopWorkflowRunResponse_httpStatus :: Lens' StopWorkflowRunResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.StopWorkflowRun.StopWorkflowRun
instance GHC.Show.Show Network.AWS.Glue.StopWorkflowRun.StopWorkflowRun
instance GHC.Read.Read Network.AWS.Glue.StopWorkflowRun.StopWorkflowRun
instance GHC.Classes.Eq Network.AWS.Glue.StopWorkflowRun.StopWorkflowRun
instance GHC.Generics.Generic Network.AWS.Glue.StopWorkflowRun.StopWorkflowRunResponse
instance GHC.Show.Show Network.AWS.Glue.StopWorkflowRun.StopWorkflowRunResponse
instance GHC.Read.Read Network.AWS.Glue.StopWorkflowRun.StopWorkflowRunResponse
instance GHC.Classes.Eq Network.AWS.Glue.StopWorkflowRun.StopWorkflowRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.StopWorkflowRun.StopWorkflowRun
instance Control.DeepSeq.NFData Network.AWS.Glue.StopWorkflowRun.StopWorkflowRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.StopWorkflowRun.StopWorkflowRun
instance Control.DeepSeq.NFData Network.AWS.Glue.StopWorkflowRun.StopWorkflowRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.StopWorkflowRun.StopWorkflowRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.StopWorkflowRun.StopWorkflowRun
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.StopWorkflowRun.StopWorkflowRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.StopWorkflowRun.StopWorkflowRun


-- | Stops a specified trigger.
module Network.AWS.Glue.StopTrigger

-- | <i>See:</i> <a>newStopTrigger</a> smart constructor.
data StopTrigger
StopTrigger' :: Text -> StopTrigger

-- | The name of the trigger to stop.
[$sel:name:StopTrigger'] :: StopTrigger -> Text

-- | Create a value of <a>StopTrigger</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StopTrigger'</a>, <a>stopTrigger_name</a> - The name of
--   the trigger to stop.
newStopTrigger :: Text -> StopTrigger

-- | The name of the trigger to stop.
stopTrigger_name :: Lens' StopTrigger Text

-- | <i>See:</i> <a>newStopTriggerResponse</a> smart constructor.
data StopTriggerResponse
StopTriggerResponse' :: Maybe Text -> Int -> StopTriggerResponse

-- | The name of the trigger that was stopped.
[$sel:name:StopTriggerResponse'] :: StopTriggerResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StopTriggerResponse'] :: StopTriggerResponse -> Int

-- | Create a value of <a>StopTriggerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StopTrigger'</a>, <a>stopTriggerResponse_name</a> - The
--   name of the trigger that was stopped.
--   
--   <a>$sel:httpStatus:StopTriggerResponse'</a>,
--   <a>stopTriggerResponse_httpStatus</a> - The response's http status
--   code.
newStopTriggerResponse :: Int -> StopTriggerResponse

-- | The name of the trigger that was stopped.
stopTriggerResponse_name :: Lens' StopTriggerResponse (Maybe Text)

-- | The response's http status code.
stopTriggerResponse_httpStatus :: Lens' StopTriggerResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.StopTrigger.StopTrigger
instance GHC.Show.Show Network.AWS.Glue.StopTrigger.StopTrigger
instance GHC.Read.Read Network.AWS.Glue.StopTrigger.StopTrigger
instance GHC.Classes.Eq Network.AWS.Glue.StopTrigger.StopTrigger
instance GHC.Generics.Generic Network.AWS.Glue.StopTrigger.StopTriggerResponse
instance GHC.Show.Show Network.AWS.Glue.StopTrigger.StopTriggerResponse
instance GHC.Read.Read Network.AWS.Glue.StopTrigger.StopTriggerResponse
instance GHC.Classes.Eq Network.AWS.Glue.StopTrigger.StopTriggerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.StopTrigger.StopTrigger
instance Control.DeepSeq.NFData Network.AWS.Glue.StopTrigger.StopTriggerResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.StopTrigger.StopTrigger
instance Control.DeepSeq.NFData Network.AWS.Glue.StopTrigger.StopTrigger
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.StopTrigger.StopTrigger
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.StopTrigger.StopTrigger
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.StopTrigger.StopTrigger
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.StopTrigger.StopTrigger


-- | Sets the schedule state of the specified crawler to
--   <tt>NOT_SCHEDULED</tt>, but does not stop the crawler if it is already
--   running.
module Network.AWS.Glue.StopCrawlerSchedule

-- | <i>See:</i> <a>newStopCrawlerSchedule</a> smart constructor.
data StopCrawlerSchedule
StopCrawlerSchedule' :: Text -> StopCrawlerSchedule

-- | Name of the crawler whose schedule state to set.
[$sel:crawlerName:StopCrawlerSchedule'] :: StopCrawlerSchedule -> Text

-- | Create a value of <a>StopCrawlerSchedule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawlerName:StopCrawlerSchedule'</a>,
--   <a>stopCrawlerSchedule_crawlerName</a> - Name of the crawler whose
--   schedule state to set.
newStopCrawlerSchedule :: Text -> StopCrawlerSchedule

-- | Name of the crawler whose schedule state to set.
stopCrawlerSchedule_crawlerName :: Lens' StopCrawlerSchedule Text

-- | <i>See:</i> <a>newStopCrawlerScheduleResponse</a> smart constructor.
data StopCrawlerScheduleResponse
StopCrawlerScheduleResponse' :: Int -> StopCrawlerScheduleResponse

-- | The response's http status code.
[$sel:httpStatus:StopCrawlerScheduleResponse'] :: StopCrawlerScheduleResponse -> Int

-- | Create a value of <a>StopCrawlerScheduleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopCrawlerScheduleResponse'</a>,
--   <a>stopCrawlerScheduleResponse_httpStatus</a> - The response's http
--   status code.
newStopCrawlerScheduleResponse :: Int -> StopCrawlerScheduleResponse

-- | The response's http status code.
stopCrawlerScheduleResponse_httpStatus :: Lens' StopCrawlerScheduleResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.StopCrawlerSchedule.StopCrawlerSchedule
instance GHC.Show.Show Network.AWS.Glue.StopCrawlerSchedule.StopCrawlerSchedule
instance GHC.Read.Read Network.AWS.Glue.StopCrawlerSchedule.StopCrawlerSchedule
instance GHC.Classes.Eq Network.AWS.Glue.StopCrawlerSchedule.StopCrawlerSchedule
instance GHC.Generics.Generic Network.AWS.Glue.StopCrawlerSchedule.StopCrawlerScheduleResponse
instance GHC.Show.Show Network.AWS.Glue.StopCrawlerSchedule.StopCrawlerScheduleResponse
instance GHC.Read.Read Network.AWS.Glue.StopCrawlerSchedule.StopCrawlerScheduleResponse
instance GHC.Classes.Eq Network.AWS.Glue.StopCrawlerSchedule.StopCrawlerScheduleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.StopCrawlerSchedule.StopCrawlerSchedule
instance Control.DeepSeq.NFData Network.AWS.Glue.StopCrawlerSchedule.StopCrawlerScheduleResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.StopCrawlerSchedule.StopCrawlerSchedule
instance Control.DeepSeq.NFData Network.AWS.Glue.StopCrawlerSchedule.StopCrawlerSchedule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.StopCrawlerSchedule.StopCrawlerSchedule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.StopCrawlerSchedule.StopCrawlerSchedule
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.StopCrawlerSchedule.StopCrawlerSchedule
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.StopCrawlerSchedule.StopCrawlerSchedule


-- | If the specified crawler is running, stops the crawl.
module Network.AWS.Glue.StopCrawler

-- | <i>See:</i> <a>newStopCrawler</a> smart constructor.
data StopCrawler
StopCrawler' :: Text -> StopCrawler

-- | Name of the crawler to stop.
[$sel:name:StopCrawler'] :: StopCrawler -> Text

-- | Create a value of <a>StopCrawler</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StopCrawler'</a>, <a>stopCrawler_name</a> - Name of the
--   crawler to stop.
newStopCrawler :: Text -> StopCrawler

-- | Name of the crawler to stop.
stopCrawler_name :: Lens' StopCrawler Text

-- | <i>See:</i> <a>newStopCrawlerResponse</a> smart constructor.
data StopCrawlerResponse
StopCrawlerResponse' :: Int -> StopCrawlerResponse

-- | The response's http status code.
[$sel:httpStatus:StopCrawlerResponse'] :: StopCrawlerResponse -> Int

-- | Create a value of <a>StopCrawlerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopCrawlerResponse'</a>,
--   <a>stopCrawlerResponse_httpStatus</a> - The response's http status
--   code.
newStopCrawlerResponse :: Int -> StopCrawlerResponse

-- | The response's http status code.
stopCrawlerResponse_httpStatus :: Lens' StopCrawlerResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.StopCrawler.StopCrawler
instance GHC.Show.Show Network.AWS.Glue.StopCrawler.StopCrawler
instance GHC.Read.Read Network.AWS.Glue.StopCrawler.StopCrawler
instance GHC.Classes.Eq Network.AWS.Glue.StopCrawler.StopCrawler
instance GHC.Generics.Generic Network.AWS.Glue.StopCrawler.StopCrawlerResponse
instance GHC.Show.Show Network.AWS.Glue.StopCrawler.StopCrawlerResponse
instance GHC.Read.Read Network.AWS.Glue.StopCrawler.StopCrawlerResponse
instance GHC.Classes.Eq Network.AWS.Glue.StopCrawler.StopCrawlerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.StopCrawler.StopCrawler
instance Control.DeepSeq.NFData Network.AWS.Glue.StopCrawler.StopCrawlerResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.StopCrawler.StopCrawler
instance Control.DeepSeq.NFData Network.AWS.Glue.StopCrawler.StopCrawler
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.StopCrawler.StopCrawler
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.StopCrawler.StopCrawler
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.StopCrawler.StopCrawler
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.StopCrawler.StopCrawler


-- | Starts a new run of the specified workflow.
module Network.AWS.Glue.StartWorkflowRun

-- | <i>See:</i> <a>newStartWorkflowRun</a> smart constructor.
data StartWorkflowRun
StartWorkflowRun' :: Text -> StartWorkflowRun

-- | The name of the workflow to start.
[$sel:name:StartWorkflowRun'] :: StartWorkflowRun -> Text

-- | Create a value of <a>StartWorkflowRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StartWorkflowRun'</a>, <a>startWorkflowRun_name</a> - The
--   name of the workflow to start.
newStartWorkflowRun :: Text -> StartWorkflowRun

-- | The name of the workflow to start.
startWorkflowRun_name :: Lens' StartWorkflowRun Text

-- | <i>See:</i> <a>newStartWorkflowRunResponse</a> smart constructor.
data StartWorkflowRunResponse
StartWorkflowRunResponse' :: Maybe Text -> Int -> StartWorkflowRunResponse

-- | An Id for the new run.
[$sel:runId:StartWorkflowRunResponse'] :: StartWorkflowRunResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartWorkflowRunResponse'] :: StartWorkflowRunResponse -> Int

-- | Create a value of <a>StartWorkflowRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runId:StartWorkflowRunResponse'</a>,
--   <a>startWorkflowRunResponse_runId</a> - An Id for the new run.
--   
--   <a>$sel:httpStatus:StartWorkflowRunResponse'</a>,
--   <a>startWorkflowRunResponse_httpStatus</a> - The response's http
--   status code.
newStartWorkflowRunResponse :: Int -> StartWorkflowRunResponse

-- | An Id for the new run.
startWorkflowRunResponse_runId :: Lens' StartWorkflowRunResponse (Maybe Text)

-- | The response's http status code.
startWorkflowRunResponse_httpStatus :: Lens' StartWorkflowRunResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.StartWorkflowRun.StartWorkflowRun
instance GHC.Show.Show Network.AWS.Glue.StartWorkflowRun.StartWorkflowRun
instance GHC.Read.Read Network.AWS.Glue.StartWorkflowRun.StartWorkflowRun
instance GHC.Classes.Eq Network.AWS.Glue.StartWorkflowRun.StartWorkflowRun
instance GHC.Generics.Generic Network.AWS.Glue.StartWorkflowRun.StartWorkflowRunResponse
instance GHC.Show.Show Network.AWS.Glue.StartWorkflowRun.StartWorkflowRunResponse
instance GHC.Read.Read Network.AWS.Glue.StartWorkflowRun.StartWorkflowRunResponse
instance GHC.Classes.Eq Network.AWS.Glue.StartWorkflowRun.StartWorkflowRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.StartWorkflowRun.StartWorkflowRun
instance Control.DeepSeq.NFData Network.AWS.Glue.StartWorkflowRun.StartWorkflowRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.StartWorkflowRun.StartWorkflowRun
instance Control.DeepSeq.NFData Network.AWS.Glue.StartWorkflowRun.StartWorkflowRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.StartWorkflowRun.StartWorkflowRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.StartWorkflowRun.StartWorkflowRun
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.StartWorkflowRun.StartWorkflowRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.StartWorkflowRun.StartWorkflowRun


-- | Starts an existing trigger. See <a>Triggering Jobs</a> for information
--   about how different types of trigger are started.
module Network.AWS.Glue.StartTrigger

-- | <i>See:</i> <a>newStartTrigger</a> smart constructor.
data StartTrigger
StartTrigger' :: Text -> StartTrigger

-- | The name of the trigger to start.
[$sel:name:StartTrigger'] :: StartTrigger -> Text

-- | Create a value of <a>StartTrigger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StartTrigger'</a>, <a>startTrigger_name</a> - The name of
--   the trigger to start.
newStartTrigger :: Text -> StartTrigger

-- | The name of the trigger to start.
startTrigger_name :: Lens' StartTrigger Text

-- | <i>See:</i> <a>newStartTriggerResponse</a> smart constructor.
data StartTriggerResponse
StartTriggerResponse' :: Maybe Text -> Int -> StartTriggerResponse

-- | The name of the trigger that was started.
[$sel:name:StartTriggerResponse'] :: StartTriggerResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartTriggerResponse'] :: StartTriggerResponse -> Int

-- | Create a value of <a>StartTriggerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StartTrigger'</a>, <a>startTriggerResponse_name</a> - The
--   name of the trigger that was started.
--   
--   <a>$sel:httpStatus:StartTriggerResponse'</a>,
--   <a>startTriggerResponse_httpStatus</a> - The response's http status
--   code.
newStartTriggerResponse :: Int -> StartTriggerResponse

-- | The name of the trigger that was started.
startTriggerResponse_name :: Lens' StartTriggerResponse (Maybe Text)

-- | The response's http status code.
startTriggerResponse_httpStatus :: Lens' StartTriggerResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.StartTrigger.StartTrigger
instance GHC.Show.Show Network.AWS.Glue.StartTrigger.StartTrigger
instance GHC.Read.Read Network.AWS.Glue.StartTrigger.StartTrigger
instance GHC.Classes.Eq Network.AWS.Glue.StartTrigger.StartTrigger
instance GHC.Generics.Generic Network.AWS.Glue.StartTrigger.StartTriggerResponse
instance GHC.Show.Show Network.AWS.Glue.StartTrigger.StartTriggerResponse
instance GHC.Read.Read Network.AWS.Glue.StartTrigger.StartTriggerResponse
instance GHC.Classes.Eq Network.AWS.Glue.StartTrigger.StartTriggerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.StartTrigger.StartTrigger
instance Control.DeepSeq.NFData Network.AWS.Glue.StartTrigger.StartTriggerResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.StartTrigger.StartTrigger
instance Control.DeepSeq.NFData Network.AWS.Glue.StartTrigger.StartTrigger
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.StartTrigger.StartTrigger
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.StartTrigger.StartTrigger
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.StartTrigger.StartTrigger
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.StartTrigger.StartTrigger


-- | Starts the active learning workflow for your machine learning
--   transform to improve the transform's quality by generating label sets
--   and adding labels.
--   
--   When the <tt>StartMLLabelingSetGenerationTaskRun</tt> finishes, Glue
--   will have generated a "labeling set" or a set of questions for humans
--   to answer.
--   
--   In the case of the <tt>FindMatches</tt> transform, these questions are
--   of the form, “What is the correct way to group these rows together
--   into groups composed entirely of matching records?”
--   
--   After the labeling process is finished, you can upload your labels
--   with a call to <tt>StartImportLabelsTaskRun</tt>. After
--   <tt>StartImportLabelsTaskRun</tt> finishes, all future runs of the
--   machine learning transform will use the new and improved labels and
--   perform a higher-quality transformation.
module Network.AWS.Glue.StartMLLabelingSetGenerationTaskRun

-- | <i>See:</i> <a>newStartMLLabelingSetGenerationTaskRun</a> smart
--   constructor.
data StartMLLabelingSetGenerationTaskRun
StartMLLabelingSetGenerationTaskRun' :: Text -> Text -> StartMLLabelingSetGenerationTaskRun

-- | The unique identifier of the machine learning transform.
[$sel:transformId:StartMLLabelingSetGenerationTaskRun'] :: StartMLLabelingSetGenerationTaskRun -> Text

-- | The Amazon Simple Storage Service (Amazon S3) path where you generate
--   the labeling set.
[$sel:outputS3Path:StartMLLabelingSetGenerationTaskRun'] :: StartMLLabelingSetGenerationTaskRun -> Text

-- | Create a value of <a>StartMLLabelingSetGenerationTaskRun</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transformId:StartMLLabelingSetGenerationTaskRun'</a>,
--   <a>startMLLabelingSetGenerationTaskRun_transformId</a> - The unique
--   identifier of the machine learning transform.
--   
--   <a>$sel:outputS3Path:StartMLLabelingSetGenerationTaskRun'</a>,
--   <a>startMLLabelingSetGenerationTaskRun_outputS3Path</a> - The Amazon
--   Simple Storage Service (Amazon S3) path where you generate the
--   labeling set.
newStartMLLabelingSetGenerationTaskRun :: Text -> Text -> StartMLLabelingSetGenerationTaskRun

-- | The unique identifier of the machine learning transform.
startMLLabelingSetGenerationTaskRun_transformId :: Lens' StartMLLabelingSetGenerationTaskRun Text

-- | The Amazon Simple Storage Service (Amazon S3) path where you generate
--   the labeling set.
startMLLabelingSetGenerationTaskRun_outputS3Path :: Lens' StartMLLabelingSetGenerationTaskRun Text

-- | <i>See:</i> <a>newStartMLLabelingSetGenerationTaskRunResponse</a>
--   smart constructor.
data StartMLLabelingSetGenerationTaskRunResponse
StartMLLabelingSetGenerationTaskRunResponse' :: Maybe Text -> Int -> StartMLLabelingSetGenerationTaskRunResponse

-- | The unique run identifier that is associated with this task run.
[$sel:taskRunId:StartMLLabelingSetGenerationTaskRunResponse'] :: StartMLLabelingSetGenerationTaskRunResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartMLLabelingSetGenerationTaskRunResponse'] :: StartMLLabelingSetGenerationTaskRunResponse -> Int

-- | Create a value of <a>StartMLLabelingSetGenerationTaskRunResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskRunId:StartMLLabelingSetGenerationTaskRunResponse'</a>,
--   <a>startMLLabelingSetGenerationTaskRunResponse_taskRunId</a> - The
--   unique run identifier that is associated with this task run.
--   
--   <a>$sel:httpStatus:StartMLLabelingSetGenerationTaskRunResponse'</a>,
--   <a>startMLLabelingSetGenerationTaskRunResponse_httpStatus</a> - The
--   response's http status code.
newStartMLLabelingSetGenerationTaskRunResponse :: Int -> StartMLLabelingSetGenerationTaskRunResponse

-- | The unique run identifier that is associated with this task run.
startMLLabelingSetGenerationTaskRunResponse_taskRunId :: Lens' StartMLLabelingSetGenerationTaskRunResponse (Maybe Text)

-- | The response's http status code.
startMLLabelingSetGenerationTaskRunResponse_httpStatus :: Lens' StartMLLabelingSetGenerationTaskRunResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.StartMLLabelingSetGenerationTaskRun.StartMLLabelingSetGenerationTaskRun
instance GHC.Show.Show Network.AWS.Glue.StartMLLabelingSetGenerationTaskRun.StartMLLabelingSetGenerationTaskRun
instance GHC.Read.Read Network.AWS.Glue.StartMLLabelingSetGenerationTaskRun.StartMLLabelingSetGenerationTaskRun
instance GHC.Classes.Eq Network.AWS.Glue.StartMLLabelingSetGenerationTaskRun.StartMLLabelingSetGenerationTaskRun
instance GHC.Generics.Generic Network.AWS.Glue.StartMLLabelingSetGenerationTaskRun.StartMLLabelingSetGenerationTaskRunResponse
instance GHC.Show.Show Network.AWS.Glue.StartMLLabelingSetGenerationTaskRun.StartMLLabelingSetGenerationTaskRunResponse
instance GHC.Read.Read Network.AWS.Glue.StartMLLabelingSetGenerationTaskRun.StartMLLabelingSetGenerationTaskRunResponse
instance GHC.Classes.Eq Network.AWS.Glue.StartMLLabelingSetGenerationTaskRun.StartMLLabelingSetGenerationTaskRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.StartMLLabelingSetGenerationTaskRun.StartMLLabelingSetGenerationTaskRun
instance Control.DeepSeq.NFData Network.AWS.Glue.StartMLLabelingSetGenerationTaskRun.StartMLLabelingSetGenerationTaskRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.StartMLLabelingSetGenerationTaskRun.StartMLLabelingSetGenerationTaskRun
instance Control.DeepSeq.NFData Network.AWS.Glue.StartMLLabelingSetGenerationTaskRun.StartMLLabelingSetGenerationTaskRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.StartMLLabelingSetGenerationTaskRun.StartMLLabelingSetGenerationTaskRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.StartMLLabelingSetGenerationTaskRun.StartMLLabelingSetGenerationTaskRun
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.StartMLLabelingSetGenerationTaskRun.StartMLLabelingSetGenerationTaskRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.StartMLLabelingSetGenerationTaskRun.StartMLLabelingSetGenerationTaskRun


-- | Starts a task to estimate the quality of the transform.
--   
--   When you provide label sets as examples of truth, Glue machine
--   learning uses some of those examples to learn from them. The rest of
--   the labels are used as a test to estimate quality.
--   
--   Returns a unique identifier for the run. You can call
--   <tt>GetMLTaskRun</tt> to get more information about the stats of the
--   <tt>EvaluationTaskRun</tt>.
module Network.AWS.Glue.StartMLEvaluationTaskRun

-- | <i>See:</i> <a>newStartMLEvaluationTaskRun</a> smart constructor.
data StartMLEvaluationTaskRun
StartMLEvaluationTaskRun' :: Text -> StartMLEvaluationTaskRun

-- | The unique identifier of the machine learning transform.
[$sel:transformId:StartMLEvaluationTaskRun'] :: StartMLEvaluationTaskRun -> Text

-- | Create a value of <a>StartMLEvaluationTaskRun</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transformId:StartMLEvaluationTaskRun'</a>,
--   <a>startMLEvaluationTaskRun_transformId</a> - The unique identifier of
--   the machine learning transform.
newStartMLEvaluationTaskRun :: Text -> StartMLEvaluationTaskRun

-- | The unique identifier of the machine learning transform.
startMLEvaluationTaskRun_transformId :: Lens' StartMLEvaluationTaskRun Text

-- | <i>See:</i> <a>newStartMLEvaluationTaskRunResponse</a> smart
--   constructor.
data StartMLEvaluationTaskRunResponse
StartMLEvaluationTaskRunResponse' :: Maybe Text -> Int -> StartMLEvaluationTaskRunResponse

-- | The unique identifier associated with this run.
[$sel:taskRunId:StartMLEvaluationTaskRunResponse'] :: StartMLEvaluationTaskRunResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartMLEvaluationTaskRunResponse'] :: StartMLEvaluationTaskRunResponse -> Int

-- | Create a value of <a>StartMLEvaluationTaskRunResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskRunId:StartMLEvaluationTaskRunResponse'</a>,
--   <a>startMLEvaluationTaskRunResponse_taskRunId</a> - The unique
--   identifier associated with this run.
--   
--   <a>$sel:httpStatus:StartMLEvaluationTaskRunResponse'</a>,
--   <a>startMLEvaluationTaskRunResponse_httpStatus</a> - The response's
--   http status code.
newStartMLEvaluationTaskRunResponse :: Int -> StartMLEvaluationTaskRunResponse

-- | The unique identifier associated with this run.
startMLEvaluationTaskRunResponse_taskRunId :: Lens' StartMLEvaluationTaskRunResponse (Maybe Text)

-- | The response's http status code.
startMLEvaluationTaskRunResponse_httpStatus :: Lens' StartMLEvaluationTaskRunResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.StartMLEvaluationTaskRun.StartMLEvaluationTaskRun
instance GHC.Show.Show Network.AWS.Glue.StartMLEvaluationTaskRun.StartMLEvaluationTaskRun
instance GHC.Read.Read Network.AWS.Glue.StartMLEvaluationTaskRun.StartMLEvaluationTaskRun
instance GHC.Classes.Eq Network.AWS.Glue.StartMLEvaluationTaskRun.StartMLEvaluationTaskRun
instance GHC.Generics.Generic Network.AWS.Glue.StartMLEvaluationTaskRun.StartMLEvaluationTaskRunResponse
instance GHC.Show.Show Network.AWS.Glue.StartMLEvaluationTaskRun.StartMLEvaluationTaskRunResponse
instance GHC.Read.Read Network.AWS.Glue.StartMLEvaluationTaskRun.StartMLEvaluationTaskRunResponse
instance GHC.Classes.Eq Network.AWS.Glue.StartMLEvaluationTaskRun.StartMLEvaluationTaskRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.StartMLEvaluationTaskRun.StartMLEvaluationTaskRun
instance Control.DeepSeq.NFData Network.AWS.Glue.StartMLEvaluationTaskRun.StartMLEvaluationTaskRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.StartMLEvaluationTaskRun.StartMLEvaluationTaskRun
instance Control.DeepSeq.NFData Network.AWS.Glue.StartMLEvaluationTaskRun.StartMLEvaluationTaskRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.StartMLEvaluationTaskRun.StartMLEvaluationTaskRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.StartMLEvaluationTaskRun.StartMLEvaluationTaskRun
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.StartMLEvaluationTaskRun.StartMLEvaluationTaskRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.StartMLEvaluationTaskRun.StartMLEvaluationTaskRun


-- | Starts a job run using a job definition.
module Network.AWS.Glue.StartJobRun

-- | <i>See:</i> <a>newStartJobRun</a> smart constructor.
data StartJobRun
StartJobRun' :: Maybe Int -> Maybe NotificationProperty -> Maybe (HashMap Text Text) -> Maybe WorkerType -> Maybe Text -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe Text -> Text -> StartJobRun

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
[$sel:numberOfWorkers:StartJobRun'] :: StartJobRun -> Maybe Int

-- | Specifies configuration properties of a job run notification.
[$sel:notificationProperty:StartJobRun'] :: StartJobRun -> Maybe NotificationProperty

-- | The job arguments specifically for this run. For this job run, they
--   replace the default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
[$sel:arguments:StartJobRun'] :: StartJobRun -> Maybe (HashMap Text Text)

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
[$sel:workerType:StartJobRun'] :: StartJobRun -> Maybe WorkerType

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job run.
[$sel:securityConfiguration:StartJobRun'] :: StartJobRun -> Maybe Text

-- | This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) to allocate to this
--   JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU
--   is a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
[$sel:allocatedCapacity:StartJobRun'] :: StartJobRun -> Maybe Int

-- | The number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job, or an Apache Spark ETL
--   job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl"), you can allocate from 2 to 100
--   DPUs. The default is 10 DPUs. This job type cannot have a fractional
--   DPU allocation.</li>
--   </ul>
[$sel:maxCapacity:StartJobRun'] :: StartJobRun -> Maybe Double

-- | The <tt>JobRun</tt> timeout in minutes. This is the maximum time that
--   a job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
[$sel:timeout:StartJobRun'] :: StartJobRun -> Maybe Natural

-- | The ID of a previous <tt>JobRun</tt> to retry.
[$sel:jobRunId:StartJobRun'] :: StartJobRun -> Maybe Text

-- | The name of the job definition to use.
[$sel:jobName:StartJobRun'] :: StartJobRun -> Text

-- | Create a value of <a>StartJobRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfWorkers:StartJobRun'</a>,
--   <a>startJobRun_numberOfWorkers</a> - The number of workers of a
--   defined <tt>workerType</tt> that are allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
--   
--   <a>$sel:notificationProperty:StartJobRun'</a>,
--   <a>startJobRun_notificationProperty</a> - Specifies configuration
--   properties of a job run notification.
--   
--   <a>$sel:arguments:StartJobRun'</a>, <a>startJobRun_arguments</a> - The
--   job arguments specifically for this run. For this job run, they
--   replace the default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
--   
--   <a>$sel:workerType:StartJobRun'</a>, <a>startJobRun_workerType</a> -
--   The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <a>$sel:securityConfiguration:StartJobRun'</a>,
--   <a>startJobRun_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this job run.
--   
--   <a>$sel:allocatedCapacity:StartJobRun'</a>,
--   <a>startJobRun_allocatedCapacity</a> - This field is deprecated. Use
--   <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) to allocate to this
--   JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU
--   is a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
--   
--   <a>$sel:maxCapacity:StartJobRun'</a>, <a>startJobRun_maxCapacity</a> -
--   The number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job, or an Apache Spark ETL
--   job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl"), you can allocate from 2 to 100
--   DPUs. The default is 10 DPUs. This job type cannot have a fractional
--   DPU allocation.</li>
--   </ul>
--   
--   <a>$sel:timeout:StartJobRun'</a>, <a>startJobRun_timeout</a> - The
--   <tt>JobRun</tt> timeout in minutes. This is the maximum time that a
--   job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
--   
--   <a>$sel:jobRunId:StartJobRun'</a>, <a>startJobRun_jobRunId</a> - The
--   ID of a previous <tt>JobRun</tt> to retry.
--   
--   <a>$sel:jobName:StartJobRun'</a>, <a>startJobRun_jobName</a> - The
--   name of the job definition to use.
newStartJobRun :: Text -> StartJobRun

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
startJobRun_numberOfWorkers :: Lens' StartJobRun (Maybe Int)

-- | Specifies configuration properties of a job run notification.
startJobRun_notificationProperty :: Lens' StartJobRun (Maybe NotificationProperty)

-- | The job arguments specifically for this run. For this job run, they
--   replace the default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
startJobRun_arguments :: Lens' StartJobRun (Maybe (HashMap Text Text))

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
startJobRun_workerType :: Lens' StartJobRun (Maybe WorkerType)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job run.
startJobRun_securityConfiguration :: Lens' StartJobRun (Maybe Text)

-- | This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) to allocate to this
--   JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU
--   is a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
startJobRun_allocatedCapacity :: Lens' StartJobRun (Maybe Int)

-- | The number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job, or an Apache Spark ETL
--   job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl"), you can allocate from 2 to 100
--   DPUs. The default is 10 DPUs. This job type cannot have a fractional
--   DPU allocation.</li>
--   </ul>
startJobRun_maxCapacity :: Lens' StartJobRun (Maybe Double)

-- | The <tt>JobRun</tt> timeout in minutes. This is the maximum time that
--   a job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
startJobRun_timeout :: Lens' StartJobRun (Maybe Natural)

-- | The ID of a previous <tt>JobRun</tt> to retry.
startJobRun_jobRunId :: Lens' StartJobRun (Maybe Text)

-- | The name of the job definition to use.
startJobRun_jobName :: Lens' StartJobRun Text

-- | <i>See:</i> <a>newStartJobRunResponse</a> smart constructor.
data StartJobRunResponse
StartJobRunResponse' :: Maybe Text -> Int -> StartJobRunResponse

-- | The ID assigned to this job run.
[$sel:jobRunId:StartJobRunResponse'] :: StartJobRunResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartJobRunResponse'] :: StartJobRunResponse -> Int

-- | Create a value of <a>StartJobRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobRunId:StartJobRun'</a>, <a>startJobRunResponse_jobRunId</a>
--   - The ID assigned to this job run.
--   
--   <a>$sel:httpStatus:StartJobRunResponse'</a>,
--   <a>startJobRunResponse_httpStatus</a> - The response's http status
--   code.
newStartJobRunResponse :: Int -> StartJobRunResponse

-- | The ID assigned to this job run.
startJobRunResponse_jobRunId :: Lens' StartJobRunResponse (Maybe Text)

-- | The response's http status code.
startJobRunResponse_httpStatus :: Lens' StartJobRunResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.StartJobRun.StartJobRun
instance GHC.Show.Show Network.AWS.Glue.StartJobRun.StartJobRun
instance GHC.Read.Read Network.AWS.Glue.StartJobRun.StartJobRun
instance GHC.Classes.Eq Network.AWS.Glue.StartJobRun.StartJobRun
instance GHC.Generics.Generic Network.AWS.Glue.StartJobRun.StartJobRunResponse
instance GHC.Show.Show Network.AWS.Glue.StartJobRun.StartJobRunResponse
instance GHC.Read.Read Network.AWS.Glue.StartJobRun.StartJobRunResponse
instance GHC.Classes.Eq Network.AWS.Glue.StartJobRun.StartJobRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.StartJobRun.StartJobRun
instance Control.DeepSeq.NFData Network.AWS.Glue.StartJobRun.StartJobRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.StartJobRun.StartJobRun
instance Control.DeepSeq.NFData Network.AWS.Glue.StartJobRun.StartJobRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.StartJobRun.StartJobRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.StartJobRun.StartJobRun
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.StartJobRun.StartJobRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.StartJobRun.StartJobRun


-- | Enables you to provide additional labels (examples of truth) to be
--   used to teach the machine learning transform and improve its quality.
--   This API operation is generally used as part of the active learning
--   workflow that starts with the
--   <tt>StartMLLabelingSetGenerationTaskRun</tt> call and that ultimately
--   results in improving the quality of your machine learning transform.
--   
--   After the <tt>StartMLLabelingSetGenerationTaskRun</tt> finishes, Glue
--   machine learning will have generated a series of questions for humans
--   to answer. (Answering these questions is often called 'labeling' in
--   the machine learning workflows). In the case of the
--   <tt>FindMatches</tt> transform, these questions are of the form, “What
--   is the correct way to group these rows together into groups composed
--   entirely of matching records?” After the labeling process is finished,
--   users upload their answers/labels with a call to
--   <tt>StartImportLabelsTaskRun</tt>. After
--   <tt>StartImportLabelsTaskRun</tt> finishes, all future runs of the
--   machine learning transform use the new and improved labels and perform
--   a higher-quality transformation.
--   
--   By default, <tt>StartMLLabelingSetGenerationTaskRun</tt> continually
--   learns from and combines all labels that you upload unless you set
--   <tt>Replace</tt> to true. If you set <tt>Replace</tt> to true,
--   <tt>StartImportLabelsTaskRun</tt> deletes and forgets all previously
--   uploaded labels and learns only from the exact set that you upload.
--   Replacing labels can be helpful if you realize that you previously
--   uploaded incorrect labels, and you believe that they are having a
--   negative effect on your transform quality.
--   
--   You can check on the status of your task run by calling the
--   <tt>GetMLTaskRun</tt> operation.
module Network.AWS.Glue.StartImportLabelsTaskRun

-- | <i>See:</i> <a>newStartImportLabelsTaskRun</a> smart constructor.
data StartImportLabelsTaskRun
StartImportLabelsTaskRun' :: Maybe Bool -> Text -> Text -> StartImportLabelsTaskRun

-- | Indicates whether to overwrite your existing labels.
[$sel:replaceAllLabels:StartImportLabelsTaskRun'] :: StartImportLabelsTaskRun -> Maybe Bool

-- | The unique identifier of the machine learning transform.
[$sel:transformId:StartImportLabelsTaskRun'] :: StartImportLabelsTaskRun -> Text

-- | The Amazon Simple Storage Service (Amazon S3) path from where you
--   import the labels.
[$sel:inputS3Path:StartImportLabelsTaskRun'] :: StartImportLabelsTaskRun -> Text

-- | Create a value of <a>StartImportLabelsTaskRun</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replaceAllLabels:StartImportLabelsTaskRun'</a>,
--   <a>startImportLabelsTaskRun_replaceAllLabels</a> - Indicates whether
--   to overwrite your existing labels.
--   
--   <a>$sel:transformId:StartImportLabelsTaskRun'</a>,
--   <a>startImportLabelsTaskRun_transformId</a> - The unique identifier of
--   the machine learning transform.
--   
--   <a>$sel:inputS3Path:StartImportLabelsTaskRun'</a>,
--   <a>startImportLabelsTaskRun_inputS3Path</a> - The Amazon Simple
--   Storage Service (Amazon S3) path from where you import the labels.
newStartImportLabelsTaskRun :: Text -> Text -> StartImportLabelsTaskRun

-- | Indicates whether to overwrite your existing labels.
startImportLabelsTaskRun_replaceAllLabels :: Lens' StartImportLabelsTaskRun (Maybe Bool)

-- | The unique identifier of the machine learning transform.
startImportLabelsTaskRun_transformId :: Lens' StartImportLabelsTaskRun Text

-- | The Amazon Simple Storage Service (Amazon S3) path from where you
--   import the labels.
startImportLabelsTaskRun_inputS3Path :: Lens' StartImportLabelsTaskRun Text

-- | <i>See:</i> <a>newStartImportLabelsTaskRunResponse</a> smart
--   constructor.
data StartImportLabelsTaskRunResponse
StartImportLabelsTaskRunResponse' :: Maybe Text -> Int -> StartImportLabelsTaskRunResponse

-- | The unique identifier for the task run.
[$sel:taskRunId:StartImportLabelsTaskRunResponse'] :: StartImportLabelsTaskRunResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartImportLabelsTaskRunResponse'] :: StartImportLabelsTaskRunResponse -> Int

-- | Create a value of <a>StartImportLabelsTaskRunResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskRunId:StartImportLabelsTaskRunResponse'</a>,
--   <a>startImportLabelsTaskRunResponse_taskRunId</a> - The unique
--   identifier for the task run.
--   
--   <a>$sel:httpStatus:StartImportLabelsTaskRunResponse'</a>,
--   <a>startImportLabelsTaskRunResponse_httpStatus</a> - The response's
--   http status code.
newStartImportLabelsTaskRunResponse :: Int -> StartImportLabelsTaskRunResponse

-- | The unique identifier for the task run.
startImportLabelsTaskRunResponse_taskRunId :: Lens' StartImportLabelsTaskRunResponse (Maybe Text)

-- | The response's http status code.
startImportLabelsTaskRunResponse_httpStatus :: Lens' StartImportLabelsTaskRunResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.StartImportLabelsTaskRun.StartImportLabelsTaskRun
instance GHC.Show.Show Network.AWS.Glue.StartImportLabelsTaskRun.StartImportLabelsTaskRun
instance GHC.Read.Read Network.AWS.Glue.StartImportLabelsTaskRun.StartImportLabelsTaskRun
instance GHC.Classes.Eq Network.AWS.Glue.StartImportLabelsTaskRun.StartImportLabelsTaskRun
instance GHC.Generics.Generic Network.AWS.Glue.StartImportLabelsTaskRun.StartImportLabelsTaskRunResponse
instance GHC.Show.Show Network.AWS.Glue.StartImportLabelsTaskRun.StartImportLabelsTaskRunResponse
instance GHC.Read.Read Network.AWS.Glue.StartImportLabelsTaskRun.StartImportLabelsTaskRunResponse
instance GHC.Classes.Eq Network.AWS.Glue.StartImportLabelsTaskRun.StartImportLabelsTaskRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.StartImportLabelsTaskRun.StartImportLabelsTaskRun
instance Control.DeepSeq.NFData Network.AWS.Glue.StartImportLabelsTaskRun.StartImportLabelsTaskRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.StartImportLabelsTaskRun.StartImportLabelsTaskRun
instance Control.DeepSeq.NFData Network.AWS.Glue.StartImportLabelsTaskRun.StartImportLabelsTaskRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.StartImportLabelsTaskRun.StartImportLabelsTaskRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.StartImportLabelsTaskRun.StartImportLabelsTaskRun
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.StartImportLabelsTaskRun.StartImportLabelsTaskRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.StartImportLabelsTaskRun.StartImportLabelsTaskRun


-- | Begins an asynchronous task to export all labeled data for a
--   particular transform. This task is the only label-related API call
--   that is not part of the typical active learning workflow. You
--   typically use <tt>StartExportLabelsTaskRun</tt> when you want to work
--   with all of your existing labels at the same time, such as when you
--   want to remove or change labels that were previously submitted as
--   truth. This API operation accepts the <tt>TransformId</tt> whose
--   labels you want to export and an Amazon Simple Storage Service (Amazon
--   S3) path to export the labels to. The operation returns a
--   <tt>TaskRunId</tt>. You can check on the status of your task run by
--   calling the <tt>GetMLTaskRun</tt> API.
module Network.AWS.Glue.StartExportLabelsTaskRun

-- | <i>See:</i> <a>newStartExportLabelsTaskRun</a> smart constructor.
data StartExportLabelsTaskRun
StartExportLabelsTaskRun' :: Text -> Text -> StartExportLabelsTaskRun

-- | The unique identifier of the machine learning transform.
[$sel:transformId:StartExportLabelsTaskRun'] :: StartExportLabelsTaskRun -> Text

-- | The Amazon S3 path where you export the labels.
[$sel:outputS3Path:StartExportLabelsTaskRun'] :: StartExportLabelsTaskRun -> Text

-- | Create a value of <a>StartExportLabelsTaskRun</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transformId:StartExportLabelsTaskRun'</a>,
--   <a>startExportLabelsTaskRun_transformId</a> - The unique identifier of
--   the machine learning transform.
--   
--   <a>$sel:outputS3Path:StartExportLabelsTaskRun'</a>,
--   <a>startExportLabelsTaskRun_outputS3Path</a> - The Amazon S3 path
--   where you export the labels.
newStartExportLabelsTaskRun :: Text -> Text -> StartExportLabelsTaskRun

-- | The unique identifier of the machine learning transform.
startExportLabelsTaskRun_transformId :: Lens' StartExportLabelsTaskRun Text

-- | The Amazon S3 path where you export the labels.
startExportLabelsTaskRun_outputS3Path :: Lens' StartExportLabelsTaskRun Text

-- | <i>See:</i> <a>newStartExportLabelsTaskRunResponse</a> smart
--   constructor.
data StartExportLabelsTaskRunResponse
StartExportLabelsTaskRunResponse' :: Maybe Text -> Int -> StartExportLabelsTaskRunResponse

-- | The unique identifier for the task run.
[$sel:taskRunId:StartExportLabelsTaskRunResponse'] :: StartExportLabelsTaskRunResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartExportLabelsTaskRunResponse'] :: StartExportLabelsTaskRunResponse -> Int

-- | Create a value of <a>StartExportLabelsTaskRunResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskRunId:StartExportLabelsTaskRunResponse'</a>,
--   <a>startExportLabelsTaskRunResponse_taskRunId</a> - The unique
--   identifier for the task run.
--   
--   <a>$sel:httpStatus:StartExportLabelsTaskRunResponse'</a>,
--   <a>startExportLabelsTaskRunResponse_httpStatus</a> - The response's
--   http status code.
newStartExportLabelsTaskRunResponse :: Int -> StartExportLabelsTaskRunResponse

-- | The unique identifier for the task run.
startExportLabelsTaskRunResponse_taskRunId :: Lens' StartExportLabelsTaskRunResponse (Maybe Text)

-- | The response's http status code.
startExportLabelsTaskRunResponse_httpStatus :: Lens' StartExportLabelsTaskRunResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.StartExportLabelsTaskRun.StartExportLabelsTaskRun
instance GHC.Show.Show Network.AWS.Glue.StartExportLabelsTaskRun.StartExportLabelsTaskRun
instance GHC.Read.Read Network.AWS.Glue.StartExportLabelsTaskRun.StartExportLabelsTaskRun
instance GHC.Classes.Eq Network.AWS.Glue.StartExportLabelsTaskRun.StartExportLabelsTaskRun
instance GHC.Generics.Generic Network.AWS.Glue.StartExportLabelsTaskRun.StartExportLabelsTaskRunResponse
instance GHC.Show.Show Network.AWS.Glue.StartExportLabelsTaskRun.StartExportLabelsTaskRunResponse
instance GHC.Read.Read Network.AWS.Glue.StartExportLabelsTaskRun.StartExportLabelsTaskRunResponse
instance GHC.Classes.Eq Network.AWS.Glue.StartExportLabelsTaskRun.StartExportLabelsTaskRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.StartExportLabelsTaskRun.StartExportLabelsTaskRun
instance Control.DeepSeq.NFData Network.AWS.Glue.StartExportLabelsTaskRun.StartExportLabelsTaskRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.StartExportLabelsTaskRun.StartExportLabelsTaskRun
instance Control.DeepSeq.NFData Network.AWS.Glue.StartExportLabelsTaskRun.StartExportLabelsTaskRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.StartExportLabelsTaskRun.StartExportLabelsTaskRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.StartExportLabelsTaskRun.StartExportLabelsTaskRun
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.StartExportLabelsTaskRun.StartExportLabelsTaskRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.StartExportLabelsTaskRun.StartExportLabelsTaskRun


-- | Changes the schedule state of the specified crawler to
--   <tt>SCHEDULED</tt>, unless the crawler is already running or the
--   schedule state is already <tt>SCHEDULED</tt>.
module Network.AWS.Glue.StartCrawlerSchedule

-- | <i>See:</i> <a>newStartCrawlerSchedule</a> smart constructor.
data StartCrawlerSchedule
StartCrawlerSchedule' :: Text -> StartCrawlerSchedule

-- | Name of the crawler to schedule.
[$sel:crawlerName:StartCrawlerSchedule'] :: StartCrawlerSchedule -> Text

-- | Create a value of <a>StartCrawlerSchedule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawlerName:StartCrawlerSchedule'</a>,
--   <a>startCrawlerSchedule_crawlerName</a> - Name of the crawler to
--   schedule.
newStartCrawlerSchedule :: Text -> StartCrawlerSchedule

-- | Name of the crawler to schedule.
startCrawlerSchedule_crawlerName :: Lens' StartCrawlerSchedule Text

-- | <i>See:</i> <a>newStartCrawlerScheduleResponse</a> smart constructor.
data StartCrawlerScheduleResponse
StartCrawlerScheduleResponse' :: Int -> StartCrawlerScheduleResponse

-- | The response's http status code.
[$sel:httpStatus:StartCrawlerScheduleResponse'] :: StartCrawlerScheduleResponse -> Int

-- | Create a value of <a>StartCrawlerScheduleResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartCrawlerScheduleResponse'</a>,
--   <a>startCrawlerScheduleResponse_httpStatus</a> - The response's http
--   status code.
newStartCrawlerScheduleResponse :: Int -> StartCrawlerScheduleResponse

-- | The response's http status code.
startCrawlerScheduleResponse_httpStatus :: Lens' StartCrawlerScheduleResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.StartCrawlerSchedule.StartCrawlerSchedule
instance GHC.Show.Show Network.AWS.Glue.StartCrawlerSchedule.StartCrawlerSchedule
instance GHC.Read.Read Network.AWS.Glue.StartCrawlerSchedule.StartCrawlerSchedule
instance GHC.Classes.Eq Network.AWS.Glue.StartCrawlerSchedule.StartCrawlerSchedule
instance GHC.Generics.Generic Network.AWS.Glue.StartCrawlerSchedule.StartCrawlerScheduleResponse
instance GHC.Show.Show Network.AWS.Glue.StartCrawlerSchedule.StartCrawlerScheduleResponse
instance GHC.Read.Read Network.AWS.Glue.StartCrawlerSchedule.StartCrawlerScheduleResponse
instance GHC.Classes.Eq Network.AWS.Glue.StartCrawlerSchedule.StartCrawlerScheduleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.StartCrawlerSchedule.StartCrawlerSchedule
instance Control.DeepSeq.NFData Network.AWS.Glue.StartCrawlerSchedule.StartCrawlerScheduleResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.StartCrawlerSchedule.StartCrawlerSchedule
instance Control.DeepSeq.NFData Network.AWS.Glue.StartCrawlerSchedule.StartCrawlerSchedule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.StartCrawlerSchedule.StartCrawlerSchedule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.StartCrawlerSchedule.StartCrawlerSchedule
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.StartCrawlerSchedule.StartCrawlerSchedule
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.StartCrawlerSchedule.StartCrawlerSchedule


-- | Starts a crawl using the specified crawler, regardless of what is
--   scheduled. If the crawler is already running, returns a
--   <a>CrawlerRunningException</a>.
module Network.AWS.Glue.StartCrawler

-- | <i>See:</i> <a>newStartCrawler</a> smart constructor.
data StartCrawler
StartCrawler' :: Text -> StartCrawler

-- | Name of the crawler to start.
[$sel:name:StartCrawler'] :: StartCrawler -> Text

-- | Create a value of <a>StartCrawler</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StartCrawler'</a>, <a>startCrawler_name</a> - Name of the
--   crawler to start.
newStartCrawler :: Text -> StartCrawler

-- | Name of the crawler to start.
startCrawler_name :: Lens' StartCrawler Text

-- | <i>See:</i> <a>newStartCrawlerResponse</a> smart constructor.
data StartCrawlerResponse
StartCrawlerResponse' :: Int -> StartCrawlerResponse

-- | The response's http status code.
[$sel:httpStatus:StartCrawlerResponse'] :: StartCrawlerResponse -> Int

-- | Create a value of <a>StartCrawlerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartCrawlerResponse'</a>,
--   <a>startCrawlerResponse_httpStatus</a> - The response's http status
--   code.
newStartCrawlerResponse :: Int -> StartCrawlerResponse

-- | The response's http status code.
startCrawlerResponse_httpStatus :: Lens' StartCrawlerResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.StartCrawler.StartCrawler
instance GHC.Show.Show Network.AWS.Glue.StartCrawler.StartCrawler
instance GHC.Read.Read Network.AWS.Glue.StartCrawler.StartCrawler
instance GHC.Classes.Eq Network.AWS.Glue.StartCrawler.StartCrawler
instance GHC.Generics.Generic Network.AWS.Glue.StartCrawler.StartCrawlerResponse
instance GHC.Show.Show Network.AWS.Glue.StartCrawler.StartCrawlerResponse
instance GHC.Read.Read Network.AWS.Glue.StartCrawler.StartCrawlerResponse
instance GHC.Classes.Eq Network.AWS.Glue.StartCrawler.StartCrawlerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.StartCrawler.StartCrawler
instance Control.DeepSeq.NFData Network.AWS.Glue.StartCrawler.StartCrawlerResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.StartCrawler.StartCrawler
instance Control.DeepSeq.NFData Network.AWS.Glue.StartCrawler.StartCrawler
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.StartCrawler.StartCrawler
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.StartCrawler.StartCrawler
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.StartCrawler.StartCrawler
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.StartCrawler.StartCrawler


-- | Starts a new run of the specified blueprint.
module Network.AWS.Glue.StartBlueprintRun

-- | <i>See:</i> <a>newStartBlueprintRun</a> smart constructor.
data StartBlueprintRun
StartBlueprintRun' :: Maybe Text -> Text -> Text -> StartBlueprintRun

-- | Specifies the parameters as a <tt>BlueprintParameters</tt> object.
[$sel:parameters:StartBlueprintRun'] :: StartBlueprintRun -> Maybe Text

-- | The name of the blueprint.
[$sel:blueprintName:StartBlueprintRun'] :: StartBlueprintRun -> Text

-- | Specifies the IAM role used to create the workflow.
[$sel:roleArn:StartBlueprintRun'] :: StartBlueprintRun -> Text

-- | Create a value of <a>StartBlueprintRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:StartBlueprintRun'</a>,
--   <a>startBlueprintRun_parameters</a> - Specifies the parameters as a
--   <tt>BlueprintParameters</tt> object.
--   
--   <a>$sel:blueprintName:StartBlueprintRun'</a>,
--   <a>startBlueprintRun_blueprintName</a> - The name of the blueprint.
--   
--   <a>$sel:roleArn:StartBlueprintRun'</a>,
--   <a>startBlueprintRun_roleArn</a> - Specifies the IAM role used to
--   create the workflow.
newStartBlueprintRun :: Text -> Text -> StartBlueprintRun

-- | Specifies the parameters as a <tt>BlueprintParameters</tt> object.
startBlueprintRun_parameters :: Lens' StartBlueprintRun (Maybe Text)

-- | The name of the blueprint.
startBlueprintRun_blueprintName :: Lens' StartBlueprintRun Text

-- | Specifies the IAM role used to create the workflow.
startBlueprintRun_roleArn :: Lens' StartBlueprintRun Text

-- | <i>See:</i> <a>newStartBlueprintRunResponse</a> smart constructor.
data StartBlueprintRunResponse
StartBlueprintRunResponse' :: Maybe Text -> Int -> StartBlueprintRunResponse

-- | The run ID for this blueprint run.
[$sel:runId:StartBlueprintRunResponse'] :: StartBlueprintRunResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartBlueprintRunResponse'] :: StartBlueprintRunResponse -> Int

-- | Create a value of <a>StartBlueprintRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runId:StartBlueprintRunResponse'</a>,
--   <a>startBlueprintRunResponse_runId</a> - The run ID for this blueprint
--   run.
--   
--   <a>$sel:httpStatus:StartBlueprintRunResponse'</a>,
--   <a>startBlueprintRunResponse_httpStatus</a> - The response's http
--   status code.
newStartBlueprintRunResponse :: Int -> StartBlueprintRunResponse

-- | The run ID for this blueprint run.
startBlueprintRunResponse_runId :: Lens' StartBlueprintRunResponse (Maybe Text)

-- | The response's http status code.
startBlueprintRunResponse_httpStatus :: Lens' StartBlueprintRunResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.StartBlueprintRun.StartBlueprintRun
instance GHC.Show.Show Network.AWS.Glue.StartBlueprintRun.StartBlueprintRun
instance GHC.Read.Read Network.AWS.Glue.StartBlueprintRun.StartBlueprintRun
instance GHC.Classes.Eq Network.AWS.Glue.StartBlueprintRun.StartBlueprintRun
instance GHC.Generics.Generic Network.AWS.Glue.StartBlueprintRun.StartBlueprintRunResponse
instance GHC.Show.Show Network.AWS.Glue.StartBlueprintRun.StartBlueprintRunResponse
instance GHC.Read.Read Network.AWS.Glue.StartBlueprintRun.StartBlueprintRunResponse
instance GHC.Classes.Eq Network.AWS.Glue.StartBlueprintRun.StartBlueprintRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.StartBlueprintRun.StartBlueprintRun
instance Control.DeepSeq.NFData Network.AWS.Glue.StartBlueprintRun.StartBlueprintRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.StartBlueprintRun.StartBlueprintRun
instance Control.DeepSeq.NFData Network.AWS.Glue.StartBlueprintRun.StartBlueprintRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.StartBlueprintRun.StartBlueprintRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.StartBlueprintRun.StartBlueprintRun
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.StartBlueprintRun.StartBlueprintRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.StartBlueprintRun.StartBlueprintRun


-- | Searches a set of tables based on properties in the table metadata as
--   well as on the parent database. You can search against text or filter
--   conditions.
--   
--   You can only get tables that you have access to based on the security
--   policies defined in Lake Formation. You need at least a read-only
--   access to the table for it to be returned. If you do not have access
--   to all the columns in the table, these columns will not be searched
--   against when returning the list of tables back to you. If you have
--   access to the columns but not the data in the columns, those columns
--   and the associated metadata for those columns will be included in the
--   search.
module Network.AWS.Glue.SearchTables

-- | <i>See:</i> <a>newSearchTables</a> smart constructor.
data SearchTables
SearchTables' :: Maybe ResourceShareType -> Maybe Text -> Maybe [PropertyPredicate] -> Maybe Text -> Maybe [SortCriterion] -> Maybe Text -> Maybe Natural -> SearchTables

-- | Allows you to specify that you want to search the tables shared with
--   your account. The allowable values are <tt>FOREIGN</tt> or
--   <tt>ALL</tt>.
--   
--   <ul>
--   <li>If set to <tt>FOREIGN</tt>, will search the tables shared with
--   your account.</li>
--   <li>If set to <tt>ALL</tt>, will search the tables shared with your
--   account, as well as the tables in yor local account.</li>
--   </ul>
[$sel:resourceShareType:SearchTables'] :: SearchTables -> Maybe ResourceShareType

-- | A string used for a text search.
--   
--   Specifying a value in quotes filters based on an exact match to the
--   value.
[$sel:searchText:SearchTables'] :: SearchTables -> Maybe Text

-- | A list of key-value pairs, and a comparator used to filter the search
--   results. Returns all entities matching the predicate.
--   
--   The <tt>Comparator</tt> member of the <tt>PropertyPredicate</tt>
--   struct is used only for time fields, and can be omitted for other
--   field types. Also, when comparing string values, such as when
--   <tt>Key=Name</tt>, a fuzzy match algorithm is used. The <tt>Key</tt>
--   field (for example, the value of the <tt>Name</tt> field) is split on
--   certain punctuation characters, for example, -, :, #, etc. into
--   tokens. Then each token is exact-match compared with the
--   <tt>Value</tt> member of <tt>PropertyPredicate</tt>. For example, if
--   <tt>Key=Name</tt> and <tt>Value=link</tt>, tables named
--   <tt>customer-link</tt> and <tt>xx-link-yy</tt> are returned, but
--   <tt>xxlinkyy</tt> is not returned.
[$sel:filters:SearchTables'] :: SearchTables -> Maybe [PropertyPredicate]

-- | A unique identifier, consisting of <tt> account_id </tt>.
[$sel:catalogId:SearchTables'] :: SearchTables -> Maybe Text

-- | A list of criteria for sorting the results by a field name, in an
--   ascending or descending order.
[$sel:sortCriteria:SearchTables'] :: SearchTables -> Maybe [SortCriterion]

-- | A continuation token, included if this is a continuation call.
[$sel:nextToken:SearchTables'] :: SearchTables -> Maybe Text

-- | The maximum number of tables to return in a single response.
[$sel:maxResults:SearchTables'] :: SearchTables -> Maybe Natural

-- | Create a value of <a>SearchTables</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceShareType:SearchTables'</a>,
--   <a>searchTables_resourceShareType</a> - Allows you to specify that you
--   want to search the tables shared with your account. The allowable
--   values are <tt>FOREIGN</tt> or <tt>ALL</tt>.
--   
--   <ul>
--   <li>If set to <tt>FOREIGN</tt>, will search the tables shared with
--   your account.</li>
--   <li>If set to <tt>ALL</tt>, will search the tables shared with your
--   account, as well as the tables in yor local account.</li>
--   </ul>
--   
--   <a>$sel:searchText:SearchTables'</a>, <a>searchTables_searchText</a> -
--   A string used for a text search.
--   
--   Specifying a value in quotes filters based on an exact match to the
--   value.
--   
--   <a>$sel:filters:SearchTables'</a>, <a>searchTables_filters</a> - A
--   list of key-value pairs, and a comparator used to filter the search
--   results. Returns all entities matching the predicate.
--   
--   The <tt>Comparator</tt> member of the <tt>PropertyPredicate</tt>
--   struct is used only for time fields, and can be omitted for other
--   field types. Also, when comparing string values, such as when
--   <tt>Key=Name</tt>, a fuzzy match algorithm is used. The <tt>Key</tt>
--   field (for example, the value of the <tt>Name</tt> field) is split on
--   certain punctuation characters, for example, -, :, #, etc. into
--   tokens. Then each token is exact-match compared with the
--   <tt>Value</tt> member of <tt>PropertyPredicate</tt>. For example, if
--   <tt>Key=Name</tt> and <tt>Value=link</tt>, tables named
--   <tt>customer-link</tt> and <tt>xx-link-yy</tt> are returned, but
--   <tt>xxlinkyy</tt> is not returned.
--   
--   <a>$sel:catalogId:SearchTables'</a>, <a>searchTables_catalogId</a> - A
--   unique identifier, consisting of <tt> account_id </tt>.
--   
--   <a>$sel:sortCriteria:SearchTables'</a>,
--   <a>searchTables_sortCriteria</a> - A list of criteria for sorting the
--   results by a field name, in an ascending or descending order.
--   
--   <a>$sel:nextToken:SearchTables'</a>, <a>searchTables_nextToken</a> - A
--   continuation token, included if this is a continuation call.
--   
--   <a>$sel:maxResults:SearchTables'</a>, <a>searchTables_maxResults</a> -
--   The maximum number of tables to return in a single response.
newSearchTables :: SearchTables

-- | Allows you to specify that you want to search the tables shared with
--   your account. The allowable values are <tt>FOREIGN</tt> or
--   <tt>ALL</tt>.
--   
--   <ul>
--   <li>If set to <tt>FOREIGN</tt>, will search the tables shared with
--   your account.</li>
--   <li>If set to <tt>ALL</tt>, will search the tables shared with your
--   account, as well as the tables in yor local account.</li>
--   </ul>
searchTables_resourceShareType :: Lens' SearchTables (Maybe ResourceShareType)

-- | A string used for a text search.
--   
--   Specifying a value in quotes filters based on an exact match to the
--   value.
searchTables_searchText :: Lens' SearchTables (Maybe Text)

-- | A list of key-value pairs, and a comparator used to filter the search
--   results. Returns all entities matching the predicate.
--   
--   The <tt>Comparator</tt> member of the <tt>PropertyPredicate</tt>
--   struct is used only for time fields, and can be omitted for other
--   field types. Also, when comparing string values, such as when
--   <tt>Key=Name</tt>, a fuzzy match algorithm is used. The <tt>Key</tt>
--   field (for example, the value of the <tt>Name</tt> field) is split on
--   certain punctuation characters, for example, -, :, #, etc. into
--   tokens. Then each token is exact-match compared with the
--   <tt>Value</tt> member of <tt>PropertyPredicate</tt>. For example, if
--   <tt>Key=Name</tt> and <tt>Value=link</tt>, tables named
--   <tt>customer-link</tt> and <tt>xx-link-yy</tt> are returned, but
--   <tt>xxlinkyy</tt> is not returned.
searchTables_filters :: Lens' SearchTables (Maybe [PropertyPredicate])

-- | A unique identifier, consisting of <tt> account_id </tt>.
searchTables_catalogId :: Lens' SearchTables (Maybe Text)

-- | A list of criteria for sorting the results by a field name, in an
--   ascending or descending order.
searchTables_sortCriteria :: Lens' SearchTables (Maybe [SortCriterion])

-- | A continuation token, included if this is a continuation call.
searchTables_nextToken :: Lens' SearchTables (Maybe Text)

-- | The maximum number of tables to return in a single response.
searchTables_maxResults :: Lens' SearchTables (Maybe Natural)

-- | <i>See:</i> <a>newSearchTablesResponse</a> smart constructor.
data SearchTablesResponse
SearchTablesResponse' :: Maybe [Table] -> Maybe Text -> Int -> SearchTablesResponse

-- | A list of the requested <tt>Table</tt> objects. The
--   <tt>SearchTables</tt> response returns only the tables that you have
--   access to.
[$sel:tableList:SearchTablesResponse'] :: SearchTablesResponse -> Maybe [Table]

-- | A continuation token, present if the current list segment is not the
--   last.
[$sel:nextToken:SearchTablesResponse'] :: SearchTablesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:SearchTablesResponse'] :: SearchTablesResponse -> Int

-- | Create a value of <a>SearchTablesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tableList:SearchTablesResponse'</a>,
--   <a>searchTablesResponse_tableList</a> - A list of the requested
--   <tt>Table</tt> objects. The <tt>SearchTables</tt> response returns
--   only the tables that you have access to.
--   
--   <a>$sel:nextToken:SearchTables'</a>,
--   <a>searchTablesResponse_nextToken</a> - A continuation token, present
--   if the current list segment is not the last.
--   
--   <a>$sel:httpStatus:SearchTablesResponse'</a>,
--   <a>searchTablesResponse_httpStatus</a> - The response's http status
--   code.
newSearchTablesResponse :: Int -> SearchTablesResponse

-- | A list of the requested <tt>Table</tt> objects. The
--   <tt>SearchTables</tt> response returns only the tables that you have
--   access to.
searchTablesResponse_tableList :: Lens' SearchTablesResponse (Maybe [Table])

-- | A continuation token, present if the current list segment is not the
--   last.
searchTablesResponse_nextToken :: Lens' SearchTablesResponse (Maybe Text)

-- | The response's http status code.
searchTablesResponse_httpStatus :: Lens' SearchTablesResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.SearchTables.SearchTables
instance GHC.Show.Show Network.AWS.Glue.SearchTables.SearchTables
instance GHC.Read.Read Network.AWS.Glue.SearchTables.SearchTables
instance GHC.Classes.Eq Network.AWS.Glue.SearchTables.SearchTables
instance GHC.Generics.Generic Network.AWS.Glue.SearchTables.SearchTablesResponse
instance GHC.Show.Show Network.AWS.Glue.SearchTables.SearchTablesResponse
instance GHC.Read.Read Network.AWS.Glue.SearchTables.SearchTablesResponse
instance GHC.Classes.Eq Network.AWS.Glue.SearchTables.SearchTablesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.SearchTables.SearchTables
instance Control.DeepSeq.NFData Network.AWS.Glue.SearchTables.SearchTablesResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.SearchTables.SearchTables
instance Control.DeepSeq.NFData Network.AWS.Glue.SearchTables.SearchTables
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.SearchTables.SearchTables
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.SearchTables.SearchTables
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.SearchTables.SearchTables
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.SearchTables.SearchTables


-- | Restarts selected nodes of a previous partially completed workflow run
--   and resumes the workflow run. The selected nodes and all nodes that
--   are downstream from the selected nodes are run.
module Network.AWS.Glue.ResumeWorkflowRun

-- | <i>See:</i> <a>newResumeWorkflowRun</a> smart constructor.
data ResumeWorkflowRun
ResumeWorkflowRun' :: Text -> Text -> [Text] -> ResumeWorkflowRun

-- | The name of the workflow to resume.
[$sel:name:ResumeWorkflowRun'] :: ResumeWorkflowRun -> Text

-- | The ID of the workflow run to resume.
[$sel:runId:ResumeWorkflowRun'] :: ResumeWorkflowRun -> Text

-- | A list of the node IDs for the nodes you want to restart. The nodes
--   that are to be restarted must have a run attempt in the original run.
[$sel:nodeIds:ResumeWorkflowRun'] :: ResumeWorkflowRun -> [Text]

-- | Create a value of <a>ResumeWorkflowRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ResumeWorkflowRun'</a>, <a>resumeWorkflowRun_name</a> -
--   The name of the workflow to resume.
--   
--   <a>$sel:runId:ResumeWorkflowRun'</a>, <a>resumeWorkflowRun_runId</a> -
--   The ID of the workflow run to resume.
--   
--   <a>$sel:nodeIds:ResumeWorkflowRun'</a>,
--   <a>resumeWorkflowRun_nodeIds</a> - A list of the node IDs for the
--   nodes you want to restart. The nodes that are to be restarted must
--   have a run attempt in the original run.
newResumeWorkflowRun :: Text -> Text -> ResumeWorkflowRun

-- | The name of the workflow to resume.
resumeWorkflowRun_name :: Lens' ResumeWorkflowRun Text

-- | The ID of the workflow run to resume.
resumeWorkflowRun_runId :: Lens' ResumeWorkflowRun Text

-- | A list of the node IDs for the nodes you want to restart. The nodes
--   that are to be restarted must have a run attempt in the original run.
resumeWorkflowRun_nodeIds :: Lens' ResumeWorkflowRun [Text]

-- | <i>See:</i> <a>newResumeWorkflowRunResponse</a> smart constructor.
data ResumeWorkflowRunResponse
ResumeWorkflowRunResponse' :: Maybe [Text] -> Maybe Text -> Int -> ResumeWorkflowRunResponse

-- | A list of the node IDs for the nodes that were actually restarted.
[$sel:nodeIds:ResumeWorkflowRunResponse'] :: ResumeWorkflowRunResponse -> Maybe [Text]

-- | The new ID assigned to the resumed workflow run. Each resume of a
--   workflow run will have a new run ID.
[$sel:runId:ResumeWorkflowRunResponse'] :: ResumeWorkflowRunResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ResumeWorkflowRunResponse'] :: ResumeWorkflowRunResponse -> Int

-- | Create a value of <a>ResumeWorkflowRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeIds:ResumeWorkflowRun'</a>,
--   <a>resumeWorkflowRunResponse_nodeIds</a> - A list of the node IDs for
--   the nodes that were actually restarted.
--   
--   <a>$sel:runId:ResumeWorkflowRun'</a>,
--   <a>resumeWorkflowRunResponse_runId</a> - The new ID assigned to the
--   resumed workflow run. Each resume of a workflow run will have a new
--   run ID.
--   
--   <a>$sel:httpStatus:ResumeWorkflowRunResponse'</a>,
--   <a>resumeWorkflowRunResponse_httpStatus</a> - The response's http
--   status code.
newResumeWorkflowRunResponse :: Int -> ResumeWorkflowRunResponse

-- | A list of the node IDs for the nodes that were actually restarted.
resumeWorkflowRunResponse_nodeIds :: Lens' ResumeWorkflowRunResponse (Maybe [Text])

-- | The new ID assigned to the resumed workflow run. Each resume of a
--   workflow run will have a new run ID.
resumeWorkflowRunResponse_runId :: Lens' ResumeWorkflowRunResponse (Maybe Text)

-- | The response's http status code.
resumeWorkflowRunResponse_httpStatus :: Lens' ResumeWorkflowRunResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.ResumeWorkflowRun.ResumeWorkflowRun
instance GHC.Show.Show Network.AWS.Glue.ResumeWorkflowRun.ResumeWorkflowRun
instance GHC.Read.Read Network.AWS.Glue.ResumeWorkflowRun.ResumeWorkflowRun
instance GHC.Classes.Eq Network.AWS.Glue.ResumeWorkflowRun.ResumeWorkflowRun
instance GHC.Generics.Generic Network.AWS.Glue.ResumeWorkflowRun.ResumeWorkflowRunResponse
instance GHC.Show.Show Network.AWS.Glue.ResumeWorkflowRun.ResumeWorkflowRunResponse
instance GHC.Read.Read Network.AWS.Glue.ResumeWorkflowRun.ResumeWorkflowRunResponse
instance GHC.Classes.Eq Network.AWS.Glue.ResumeWorkflowRun.ResumeWorkflowRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.ResumeWorkflowRun.ResumeWorkflowRun
instance Control.DeepSeq.NFData Network.AWS.Glue.ResumeWorkflowRun.ResumeWorkflowRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.ResumeWorkflowRun.ResumeWorkflowRun
instance Control.DeepSeq.NFData Network.AWS.Glue.ResumeWorkflowRun.ResumeWorkflowRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.ResumeWorkflowRun.ResumeWorkflowRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.ResumeWorkflowRun.ResumeWorkflowRun
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.ResumeWorkflowRun.ResumeWorkflowRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.ResumeWorkflowRun.ResumeWorkflowRun


-- | Resets a bookmark entry.
module Network.AWS.Glue.ResetJobBookmark

-- | <i>See:</i> <a>newResetJobBookmark</a> smart constructor.
data ResetJobBookmark
ResetJobBookmark' :: Maybe Text -> Text -> ResetJobBookmark

-- | The unique run identifier associated with this job run.
[$sel:runId:ResetJobBookmark'] :: ResetJobBookmark -> Maybe Text

-- | The name of the job in question.
[$sel:jobName:ResetJobBookmark'] :: ResetJobBookmark -> Text

-- | Create a value of <a>ResetJobBookmark</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runId:ResetJobBookmark'</a>, <a>resetJobBookmark_runId</a> -
--   The unique run identifier associated with this job run.
--   
--   <a>$sel:jobName:ResetJobBookmark'</a>, <a>resetJobBookmark_jobName</a>
--   - The name of the job in question.
newResetJobBookmark :: Text -> ResetJobBookmark

-- | The unique run identifier associated with this job run.
resetJobBookmark_runId :: Lens' ResetJobBookmark (Maybe Text)

-- | The name of the job in question.
resetJobBookmark_jobName :: Lens' ResetJobBookmark Text

-- | <i>See:</i> <a>newResetJobBookmarkResponse</a> smart constructor.
data ResetJobBookmarkResponse
ResetJobBookmarkResponse' :: Maybe JobBookmarkEntry -> Int -> ResetJobBookmarkResponse

-- | The reset bookmark entry.
[$sel:jobBookmarkEntry:ResetJobBookmarkResponse'] :: ResetJobBookmarkResponse -> Maybe JobBookmarkEntry

-- | The response's http status code.
[$sel:httpStatus:ResetJobBookmarkResponse'] :: ResetJobBookmarkResponse -> Int

-- | Create a value of <a>ResetJobBookmarkResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobBookmarkEntry:ResetJobBookmarkResponse'</a>,
--   <a>resetJobBookmarkResponse_jobBookmarkEntry</a> - The reset bookmark
--   entry.
--   
--   <a>$sel:httpStatus:ResetJobBookmarkResponse'</a>,
--   <a>resetJobBookmarkResponse_httpStatus</a> - The response's http
--   status code.
newResetJobBookmarkResponse :: Int -> ResetJobBookmarkResponse

-- | The reset bookmark entry.
resetJobBookmarkResponse_jobBookmarkEntry :: Lens' ResetJobBookmarkResponse (Maybe JobBookmarkEntry)

-- | The response's http status code.
resetJobBookmarkResponse_httpStatus :: Lens' ResetJobBookmarkResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.ResetJobBookmark.ResetJobBookmark
instance GHC.Show.Show Network.AWS.Glue.ResetJobBookmark.ResetJobBookmark
instance GHC.Read.Read Network.AWS.Glue.ResetJobBookmark.ResetJobBookmark
instance GHC.Classes.Eq Network.AWS.Glue.ResetJobBookmark.ResetJobBookmark
instance GHC.Generics.Generic Network.AWS.Glue.ResetJobBookmark.ResetJobBookmarkResponse
instance GHC.Show.Show Network.AWS.Glue.ResetJobBookmark.ResetJobBookmarkResponse
instance GHC.Read.Read Network.AWS.Glue.ResetJobBookmark.ResetJobBookmarkResponse
instance GHC.Classes.Eq Network.AWS.Glue.ResetJobBookmark.ResetJobBookmarkResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.ResetJobBookmark.ResetJobBookmark
instance Control.DeepSeq.NFData Network.AWS.Glue.ResetJobBookmark.ResetJobBookmarkResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.ResetJobBookmark.ResetJobBookmark
instance Control.DeepSeq.NFData Network.AWS.Glue.ResetJobBookmark.ResetJobBookmark
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.ResetJobBookmark.ResetJobBookmark
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.ResetJobBookmark.ResetJobBookmark
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.ResetJobBookmark.ResetJobBookmark
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.ResetJobBookmark.ResetJobBookmark


-- | Removes a key value pair from the schema version metadata for the
--   specified schema version ID.
module Network.AWS.Glue.RemoveSchemaVersionMetadata

-- | <i>See:</i> <a>newRemoveSchemaVersionMetadata</a> smart constructor.
data RemoveSchemaVersionMetadata
RemoveSchemaVersionMetadata' :: Maybe Text -> Maybe SchemaId -> Maybe SchemaVersionNumber -> MetadataKeyValuePair -> RemoveSchemaVersionMetadata

-- | The unique version ID of the schema version.
[$sel:schemaVersionId:RemoveSchemaVersionMetadata'] :: RemoveSchemaVersionMetadata -> Maybe Text

-- | A wrapper structure that may contain the schema name and Amazon
--   Resource Name (ARN).
[$sel:schemaId:RemoveSchemaVersionMetadata'] :: RemoveSchemaVersionMetadata -> Maybe SchemaId

-- | The version number of the schema.
[$sel:schemaVersionNumber:RemoveSchemaVersionMetadata'] :: RemoveSchemaVersionMetadata -> Maybe SchemaVersionNumber

-- | The value of the metadata key.
[$sel:metadataKeyValue:RemoveSchemaVersionMetadata'] :: RemoveSchemaVersionMetadata -> MetadataKeyValuePair

-- | Create a value of <a>RemoveSchemaVersionMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaVersionId:RemoveSchemaVersionMetadata'</a>,
--   <a>removeSchemaVersionMetadata_schemaVersionId</a> - The unique
--   version ID of the schema version.
--   
--   <a>$sel:schemaId:RemoveSchemaVersionMetadata'</a>,
--   <a>removeSchemaVersionMetadata_schemaId</a> - A wrapper structure that
--   may contain the schema name and Amazon Resource Name (ARN).
--   
--   <a>$sel:schemaVersionNumber:RemoveSchemaVersionMetadata'</a>,
--   <a>removeSchemaVersionMetadata_schemaVersionNumber</a> - The version
--   number of the schema.
--   
--   <a>$sel:metadataKeyValue:RemoveSchemaVersionMetadata'</a>,
--   <a>removeSchemaVersionMetadata_metadataKeyValue</a> - The value of the
--   metadata key.
newRemoveSchemaVersionMetadata :: MetadataKeyValuePair -> RemoveSchemaVersionMetadata

-- | The unique version ID of the schema version.
removeSchemaVersionMetadata_schemaVersionId :: Lens' RemoveSchemaVersionMetadata (Maybe Text)

-- | A wrapper structure that may contain the schema name and Amazon
--   Resource Name (ARN).
removeSchemaVersionMetadata_schemaId :: Lens' RemoveSchemaVersionMetadata (Maybe SchemaId)

-- | The version number of the schema.
removeSchemaVersionMetadata_schemaVersionNumber :: Lens' RemoveSchemaVersionMetadata (Maybe SchemaVersionNumber)

-- | The value of the metadata key.
removeSchemaVersionMetadata_metadataKeyValue :: Lens' RemoveSchemaVersionMetadata MetadataKeyValuePair

-- | <i>See:</i> <a>newRemoveSchemaVersionMetadataResponse</a> smart
--   constructor.
data RemoveSchemaVersionMetadataResponse
RemoveSchemaVersionMetadataResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Int -> RemoveSchemaVersionMetadataResponse

-- | The name of the registry.
[$sel:registryName:RemoveSchemaVersionMetadataResponse'] :: RemoveSchemaVersionMetadataResponse -> Maybe Text

-- | The name of the schema.
[$sel:schemaName:RemoveSchemaVersionMetadataResponse'] :: RemoveSchemaVersionMetadataResponse -> Maybe Text

-- | The version ID for the schema version.
[$sel:schemaVersionId:RemoveSchemaVersionMetadataResponse'] :: RemoveSchemaVersionMetadataResponse -> Maybe Text

-- | The version number of the schema.
[$sel:versionNumber:RemoveSchemaVersionMetadataResponse'] :: RemoveSchemaVersionMetadataResponse -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the schema.
[$sel:schemaArn:RemoveSchemaVersionMetadataResponse'] :: RemoveSchemaVersionMetadataResponse -> Maybe Text

-- | The metadata key.
[$sel:metadataKey:RemoveSchemaVersionMetadataResponse'] :: RemoveSchemaVersionMetadataResponse -> Maybe Text

-- | The value of the metadata key.
[$sel:metadataValue:RemoveSchemaVersionMetadataResponse'] :: RemoveSchemaVersionMetadataResponse -> Maybe Text

-- | The latest version of the schema.
[$sel:latestVersion:RemoveSchemaVersionMetadataResponse'] :: RemoveSchemaVersionMetadataResponse -> Maybe Bool

-- | The response's http status code.
[$sel:httpStatus:RemoveSchemaVersionMetadataResponse'] :: RemoveSchemaVersionMetadataResponse -> Int

-- | Create a value of <a>RemoveSchemaVersionMetadataResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:RemoveSchemaVersionMetadataResponse'</a>,
--   <a>removeSchemaVersionMetadataResponse_registryName</a> - The name of
--   the registry.
--   
--   <a>$sel:schemaName:RemoveSchemaVersionMetadataResponse'</a>,
--   <a>removeSchemaVersionMetadataResponse_schemaName</a> - The name of
--   the schema.
--   
--   <a>$sel:schemaVersionId:RemoveSchemaVersionMetadata'</a>,
--   <a>removeSchemaVersionMetadataResponse_schemaVersionId</a> - The
--   version ID for the schema version.
--   
--   <a>$sel:versionNumber:RemoveSchemaVersionMetadataResponse'</a>,
--   <a>removeSchemaVersionMetadataResponse_versionNumber</a> - The version
--   number of the schema.
--   
--   <a>$sel:schemaArn:RemoveSchemaVersionMetadataResponse'</a>,
--   <a>removeSchemaVersionMetadataResponse_schemaArn</a> - The Amazon
--   Resource Name (ARN) of the schema.
--   
--   <a>$sel:metadataKey:RemoveSchemaVersionMetadataResponse'</a>,
--   <a>removeSchemaVersionMetadataResponse_metadataKey</a> - The metadata
--   key.
--   
--   <a>$sel:metadataValue:RemoveSchemaVersionMetadataResponse'</a>,
--   <a>removeSchemaVersionMetadataResponse_metadataValue</a> - The value
--   of the metadata key.
--   
--   <a>$sel:latestVersion:RemoveSchemaVersionMetadataResponse'</a>,
--   <a>removeSchemaVersionMetadataResponse_latestVersion</a> - The latest
--   version of the schema.
--   
--   <a>$sel:httpStatus:RemoveSchemaVersionMetadataResponse'</a>,
--   <a>removeSchemaVersionMetadataResponse_httpStatus</a> - The response's
--   http status code.
newRemoveSchemaVersionMetadataResponse :: Int -> RemoveSchemaVersionMetadataResponse

-- | The name of the registry.
removeSchemaVersionMetadataResponse_registryName :: Lens' RemoveSchemaVersionMetadataResponse (Maybe Text)

-- | The name of the schema.
removeSchemaVersionMetadataResponse_schemaName :: Lens' RemoveSchemaVersionMetadataResponse (Maybe Text)

-- | The version ID for the schema version.
removeSchemaVersionMetadataResponse_schemaVersionId :: Lens' RemoveSchemaVersionMetadataResponse (Maybe Text)

-- | The version number of the schema.
removeSchemaVersionMetadataResponse_versionNumber :: Lens' RemoveSchemaVersionMetadataResponse (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the schema.
removeSchemaVersionMetadataResponse_schemaArn :: Lens' RemoveSchemaVersionMetadataResponse (Maybe Text)

-- | The metadata key.
removeSchemaVersionMetadataResponse_metadataKey :: Lens' RemoveSchemaVersionMetadataResponse (Maybe Text)

-- | The value of the metadata key.
removeSchemaVersionMetadataResponse_metadataValue :: Lens' RemoveSchemaVersionMetadataResponse (Maybe Text)

-- | The latest version of the schema.
removeSchemaVersionMetadataResponse_latestVersion :: Lens' RemoveSchemaVersionMetadataResponse (Maybe Bool)

-- | The response's http status code.
removeSchemaVersionMetadataResponse_httpStatus :: Lens' RemoveSchemaVersionMetadataResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.RemoveSchemaVersionMetadata.RemoveSchemaVersionMetadata
instance GHC.Show.Show Network.AWS.Glue.RemoveSchemaVersionMetadata.RemoveSchemaVersionMetadata
instance GHC.Read.Read Network.AWS.Glue.RemoveSchemaVersionMetadata.RemoveSchemaVersionMetadata
instance GHC.Classes.Eq Network.AWS.Glue.RemoveSchemaVersionMetadata.RemoveSchemaVersionMetadata
instance GHC.Generics.Generic Network.AWS.Glue.RemoveSchemaVersionMetadata.RemoveSchemaVersionMetadataResponse
instance GHC.Show.Show Network.AWS.Glue.RemoveSchemaVersionMetadata.RemoveSchemaVersionMetadataResponse
instance GHC.Read.Read Network.AWS.Glue.RemoveSchemaVersionMetadata.RemoveSchemaVersionMetadataResponse
instance GHC.Classes.Eq Network.AWS.Glue.RemoveSchemaVersionMetadata.RemoveSchemaVersionMetadataResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.RemoveSchemaVersionMetadata.RemoveSchemaVersionMetadata
instance Control.DeepSeq.NFData Network.AWS.Glue.RemoveSchemaVersionMetadata.RemoveSchemaVersionMetadataResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.RemoveSchemaVersionMetadata.RemoveSchemaVersionMetadata
instance Control.DeepSeq.NFData Network.AWS.Glue.RemoveSchemaVersionMetadata.RemoveSchemaVersionMetadata
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.RemoveSchemaVersionMetadata.RemoveSchemaVersionMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.RemoveSchemaVersionMetadata.RemoveSchemaVersionMetadata
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.RemoveSchemaVersionMetadata.RemoveSchemaVersionMetadata
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.RemoveSchemaVersionMetadata.RemoveSchemaVersionMetadata


-- | Adds a new version to the existing schema. Returns an error if new
--   version of schema does not meet the compatibility requirements of the
--   schema set. This API will not create a new schema set and will return
--   a 404 error if the schema set is not already present in the Schema
--   Registry.
--   
--   If this is the first schema definition to be registered in the Schema
--   Registry, this API will store the schema version and return
--   immediately. Otherwise, this call has the potential to run longer than
--   other operations due to compatibility modes. You can call the
--   <tt>GetSchemaVersion</tt> API with the <tt>SchemaVersionId</tt> to
--   check compatibility modes.
--   
--   If the same schema definition is already stored in Schema Registry as
--   a version, the schema ID of the existing schema is returned to the
--   caller.
module Network.AWS.Glue.RegisterSchemaVersion

-- | <i>See:</i> <a>newRegisterSchemaVersion</a> smart constructor.
data RegisterSchemaVersion
RegisterSchemaVersion' :: SchemaId -> Text -> RegisterSchemaVersion

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   Either <tt>SchemaArn</tt> or <tt>SchemaName</tt> and
--   <tt>RegistryName</tt> has to be provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. Either
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> and <tt>RegistryName</tt>
--   has to be provided.</li>
--   </ul>
[$sel:schemaId:RegisterSchemaVersion'] :: RegisterSchemaVersion -> SchemaId

-- | The schema definition using the <tt>DataFormat</tt> setting for the
--   <tt>SchemaName</tt>.
[$sel:schemaDefinition:RegisterSchemaVersion'] :: RegisterSchemaVersion -> Text

-- | Create a value of <a>RegisterSchemaVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaId:RegisterSchemaVersion'</a>,
--   <a>registerSchemaVersion_schemaId</a> - This is a wrapper structure to
--   contain schema identity fields. The structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   Either <tt>SchemaArn</tt> or <tt>SchemaName</tt> and
--   <tt>RegistryName</tt> has to be provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. Either
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> and <tt>RegistryName</tt>
--   has to be provided.</li>
--   </ul>
--   
--   <a>$sel:schemaDefinition:RegisterSchemaVersion'</a>,
--   <a>registerSchemaVersion_schemaDefinition</a> - The schema definition
--   using the <tt>DataFormat</tt> setting for the <tt>SchemaName</tt>.
newRegisterSchemaVersion :: SchemaId -> Text -> RegisterSchemaVersion

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   Either <tt>SchemaArn</tt> or <tt>SchemaName</tt> and
--   <tt>RegistryName</tt> has to be provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. Either
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> and <tt>RegistryName</tt>
--   has to be provided.</li>
--   </ul>
registerSchemaVersion_schemaId :: Lens' RegisterSchemaVersion SchemaId

-- | The schema definition using the <tt>DataFormat</tt> setting for the
--   <tt>SchemaName</tt>.
registerSchemaVersion_schemaDefinition :: Lens' RegisterSchemaVersion Text

-- | <i>See:</i> <a>newRegisterSchemaVersionResponse</a> smart constructor.
data RegisterSchemaVersionResponse
RegisterSchemaVersionResponse' :: Maybe SchemaVersionStatus -> Maybe Text -> Maybe Natural -> Int -> RegisterSchemaVersionResponse

-- | The status of the schema version.
[$sel:status:RegisterSchemaVersionResponse'] :: RegisterSchemaVersionResponse -> Maybe SchemaVersionStatus

-- | The unique ID that represents the version of this schema.
[$sel:schemaVersionId:RegisterSchemaVersionResponse'] :: RegisterSchemaVersionResponse -> Maybe Text

-- | The version of this schema (for sync flow only, in case this is the
--   first version).
[$sel:versionNumber:RegisterSchemaVersionResponse'] :: RegisterSchemaVersionResponse -> Maybe Natural

-- | The response's http status code.
[$sel:httpStatus:RegisterSchemaVersionResponse'] :: RegisterSchemaVersionResponse -> Int

-- | Create a value of <a>RegisterSchemaVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:RegisterSchemaVersionResponse'</a>,
--   <a>registerSchemaVersionResponse_status</a> - The status of the schema
--   version.
--   
--   <a>$sel:schemaVersionId:RegisterSchemaVersionResponse'</a>,
--   <a>registerSchemaVersionResponse_schemaVersionId</a> - The unique ID
--   that represents the version of this schema.
--   
--   <a>$sel:versionNumber:RegisterSchemaVersionResponse'</a>,
--   <a>registerSchemaVersionResponse_versionNumber</a> - The version of
--   this schema (for sync flow only, in case this is the first version).
--   
--   <a>$sel:httpStatus:RegisterSchemaVersionResponse'</a>,
--   <a>registerSchemaVersionResponse_httpStatus</a> - The response's http
--   status code.
newRegisterSchemaVersionResponse :: Int -> RegisterSchemaVersionResponse

-- | The status of the schema version.
registerSchemaVersionResponse_status :: Lens' RegisterSchemaVersionResponse (Maybe SchemaVersionStatus)

-- | The unique ID that represents the version of this schema.
registerSchemaVersionResponse_schemaVersionId :: Lens' RegisterSchemaVersionResponse (Maybe Text)

-- | The version of this schema (for sync flow only, in case this is the
--   first version).
registerSchemaVersionResponse_versionNumber :: Lens' RegisterSchemaVersionResponse (Maybe Natural)

-- | The response's http status code.
registerSchemaVersionResponse_httpStatus :: Lens' RegisterSchemaVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.RegisterSchemaVersion.RegisterSchemaVersion
instance GHC.Show.Show Network.AWS.Glue.RegisterSchemaVersion.RegisterSchemaVersion
instance GHC.Read.Read Network.AWS.Glue.RegisterSchemaVersion.RegisterSchemaVersion
instance GHC.Classes.Eq Network.AWS.Glue.RegisterSchemaVersion.RegisterSchemaVersion
instance GHC.Generics.Generic Network.AWS.Glue.RegisterSchemaVersion.RegisterSchemaVersionResponse
instance GHC.Show.Show Network.AWS.Glue.RegisterSchemaVersion.RegisterSchemaVersionResponse
instance GHC.Read.Read Network.AWS.Glue.RegisterSchemaVersion.RegisterSchemaVersionResponse
instance GHC.Classes.Eq Network.AWS.Glue.RegisterSchemaVersion.RegisterSchemaVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.RegisterSchemaVersion.RegisterSchemaVersion
instance Control.DeepSeq.NFData Network.AWS.Glue.RegisterSchemaVersion.RegisterSchemaVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.RegisterSchemaVersion.RegisterSchemaVersion
instance Control.DeepSeq.NFData Network.AWS.Glue.RegisterSchemaVersion.RegisterSchemaVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.RegisterSchemaVersion.RegisterSchemaVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.RegisterSchemaVersion.RegisterSchemaVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.RegisterSchemaVersion.RegisterSchemaVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.RegisterSchemaVersion.RegisterSchemaVersion


-- | Queries for the schema version metadata information.
module Network.AWS.Glue.QuerySchemaVersionMetadata

-- | <i>See:</i> <a>newQuerySchemaVersionMetadata</a> smart constructor.
data QuerySchemaVersionMetadata
QuerySchemaVersionMetadata' :: Maybe Text -> Maybe SchemaId -> Maybe Text -> Maybe [MetadataKeyValuePair] -> Maybe SchemaVersionNumber -> Maybe Natural -> QuerySchemaVersionMetadata

-- | The unique version ID of the schema version.
[$sel:schemaVersionId:QuerySchemaVersionMetadata'] :: QuerySchemaVersionMetadata -> Maybe Text

-- | A wrapper structure that may contain the schema name and Amazon
--   Resource Name (ARN).
[$sel:schemaId:QuerySchemaVersionMetadata'] :: QuerySchemaVersionMetadata -> Maybe SchemaId

-- | A continuation token, if this is a continuation call.
[$sel:nextToken:QuerySchemaVersionMetadata'] :: QuerySchemaVersionMetadata -> Maybe Text

-- | Search key-value pairs for metadata, if they are not provided all the
--   metadata information will be fetched.
[$sel:metadataList:QuerySchemaVersionMetadata'] :: QuerySchemaVersionMetadata -> Maybe [MetadataKeyValuePair]

-- | The version number of the schema.
[$sel:schemaVersionNumber:QuerySchemaVersionMetadata'] :: QuerySchemaVersionMetadata -> Maybe SchemaVersionNumber

-- | Maximum number of results required per page. If the value is not
--   supplied, this will be defaulted to 25 per page.
[$sel:maxResults:QuerySchemaVersionMetadata'] :: QuerySchemaVersionMetadata -> Maybe Natural

-- | Create a value of <a>QuerySchemaVersionMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaVersionId:QuerySchemaVersionMetadata'</a>,
--   <a>querySchemaVersionMetadata_schemaVersionId</a> - The unique version
--   ID of the schema version.
--   
--   <a>$sel:schemaId:QuerySchemaVersionMetadata'</a>,
--   <a>querySchemaVersionMetadata_schemaId</a> - A wrapper structure that
--   may contain the schema name and Amazon Resource Name (ARN).
--   
--   <a>$sel:nextToken:QuerySchemaVersionMetadata'</a>,
--   <a>querySchemaVersionMetadata_nextToken</a> - A continuation token, if
--   this is a continuation call.
--   
--   <a>$sel:metadataList:QuerySchemaVersionMetadata'</a>,
--   <a>querySchemaVersionMetadata_metadataList</a> - Search key-value
--   pairs for metadata, if they are not provided all the metadata
--   information will be fetched.
--   
--   <a>$sel:schemaVersionNumber:QuerySchemaVersionMetadata'</a>,
--   <a>querySchemaVersionMetadata_schemaVersionNumber</a> - The version
--   number of the schema.
--   
--   <a>$sel:maxResults:QuerySchemaVersionMetadata'</a>,
--   <a>querySchemaVersionMetadata_maxResults</a> - Maximum number of
--   results required per page. If the value is not supplied, this will be
--   defaulted to 25 per page.
newQuerySchemaVersionMetadata :: QuerySchemaVersionMetadata

-- | The unique version ID of the schema version.
querySchemaVersionMetadata_schemaVersionId :: Lens' QuerySchemaVersionMetadata (Maybe Text)

-- | A wrapper structure that may contain the schema name and Amazon
--   Resource Name (ARN).
querySchemaVersionMetadata_schemaId :: Lens' QuerySchemaVersionMetadata (Maybe SchemaId)

-- | A continuation token, if this is a continuation call.
querySchemaVersionMetadata_nextToken :: Lens' QuerySchemaVersionMetadata (Maybe Text)

-- | Search key-value pairs for metadata, if they are not provided all the
--   metadata information will be fetched.
querySchemaVersionMetadata_metadataList :: Lens' QuerySchemaVersionMetadata (Maybe [MetadataKeyValuePair])

-- | The version number of the schema.
querySchemaVersionMetadata_schemaVersionNumber :: Lens' QuerySchemaVersionMetadata (Maybe SchemaVersionNumber)

-- | Maximum number of results required per page. If the value is not
--   supplied, this will be defaulted to 25 per page.
querySchemaVersionMetadata_maxResults :: Lens' QuerySchemaVersionMetadata (Maybe Natural)

-- | <i>See:</i> <a>newQuerySchemaVersionMetadataResponse</a> smart
--   constructor.
data QuerySchemaVersionMetadataResponse
QuerySchemaVersionMetadataResponse' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text MetadataInfo) -> Int -> QuerySchemaVersionMetadataResponse

-- | The unique version ID of the schema version.
[$sel:schemaVersionId:QuerySchemaVersionMetadataResponse'] :: QuerySchemaVersionMetadataResponse -> Maybe Text

-- | A continuation token for paginating the returned list of tokens,
--   returned if the current segment of the list is not the last.
[$sel:nextToken:QuerySchemaVersionMetadataResponse'] :: QuerySchemaVersionMetadataResponse -> Maybe Text

-- | A map of a metadata key and associated values.
[$sel:metadataInfoMap:QuerySchemaVersionMetadataResponse'] :: QuerySchemaVersionMetadataResponse -> Maybe (HashMap Text MetadataInfo)

-- | The response's http status code.
[$sel:httpStatus:QuerySchemaVersionMetadataResponse'] :: QuerySchemaVersionMetadataResponse -> Int

-- | Create a value of <a>QuerySchemaVersionMetadataResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaVersionId:QuerySchemaVersionMetadata'</a>,
--   <a>querySchemaVersionMetadataResponse_schemaVersionId</a> - The unique
--   version ID of the schema version.
--   
--   <a>$sel:nextToken:QuerySchemaVersionMetadata'</a>,
--   <a>querySchemaVersionMetadataResponse_nextToken</a> - A continuation
--   token for paginating the returned list of tokens, returned if the
--   current segment of the list is not the last.
--   
--   <a>$sel:metadataInfoMap:QuerySchemaVersionMetadataResponse'</a>,
--   <a>querySchemaVersionMetadataResponse_metadataInfoMap</a> - A map of a
--   metadata key and associated values.
--   
--   <a>$sel:httpStatus:QuerySchemaVersionMetadataResponse'</a>,
--   <a>querySchemaVersionMetadataResponse_httpStatus</a> - The response's
--   http status code.
newQuerySchemaVersionMetadataResponse :: Int -> QuerySchemaVersionMetadataResponse

-- | The unique version ID of the schema version.
querySchemaVersionMetadataResponse_schemaVersionId :: Lens' QuerySchemaVersionMetadataResponse (Maybe Text)

-- | A continuation token for paginating the returned list of tokens,
--   returned if the current segment of the list is not the last.
querySchemaVersionMetadataResponse_nextToken :: Lens' QuerySchemaVersionMetadataResponse (Maybe Text)

-- | A map of a metadata key and associated values.
querySchemaVersionMetadataResponse_metadataInfoMap :: Lens' QuerySchemaVersionMetadataResponse (Maybe (HashMap Text MetadataInfo))

-- | The response's http status code.
querySchemaVersionMetadataResponse_httpStatus :: Lens' QuerySchemaVersionMetadataResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.QuerySchemaVersionMetadata.QuerySchemaVersionMetadata
instance GHC.Show.Show Network.AWS.Glue.QuerySchemaVersionMetadata.QuerySchemaVersionMetadata
instance GHC.Read.Read Network.AWS.Glue.QuerySchemaVersionMetadata.QuerySchemaVersionMetadata
instance GHC.Classes.Eq Network.AWS.Glue.QuerySchemaVersionMetadata.QuerySchemaVersionMetadata
instance GHC.Generics.Generic Network.AWS.Glue.QuerySchemaVersionMetadata.QuerySchemaVersionMetadataResponse
instance GHC.Show.Show Network.AWS.Glue.QuerySchemaVersionMetadata.QuerySchemaVersionMetadataResponse
instance GHC.Read.Read Network.AWS.Glue.QuerySchemaVersionMetadata.QuerySchemaVersionMetadataResponse
instance GHC.Classes.Eq Network.AWS.Glue.QuerySchemaVersionMetadata.QuerySchemaVersionMetadataResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.QuerySchemaVersionMetadata.QuerySchemaVersionMetadata
instance Control.DeepSeq.NFData Network.AWS.Glue.QuerySchemaVersionMetadata.QuerySchemaVersionMetadataResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.QuerySchemaVersionMetadata.QuerySchemaVersionMetadata
instance Control.DeepSeq.NFData Network.AWS.Glue.QuerySchemaVersionMetadata.QuerySchemaVersionMetadata
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.QuerySchemaVersionMetadata.QuerySchemaVersionMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.QuerySchemaVersionMetadata.QuerySchemaVersionMetadata
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.QuerySchemaVersionMetadata.QuerySchemaVersionMetadata
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.QuerySchemaVersionMetadata.QuerySchemaVersionMetadata


-- | Puts the specified workflow run properties for the given workflow run.
--   If a property already exists for the specified run, then it overrides
--   the value otherwise adds the property to existing properties.
module Network.AWS.Glue.PutWorkflowRunProperties

-- | <i>See:</i> <a>newPutWorkflowRunProperties</a> smart constructor.
data PutWorkflowRunProperties
PutWorkflowRunProperties' :: Text -> Text -> HashMap Text Text -> PutWorkflowRunProperties

-- | Name of the workflow which was run.
[$sel:name:PutWorkflowRunProperties'] :: PutWorkflowRunProperties -> Text

-- | The ID of the workflow run for which the run properties should be
--   updated.
[$sel:runId:PutWorkflowRunProperties'] :: PutWorkflowRunProperties -> Text

-- | The properties to put for the specified run.
[$sel:runProperties:PutWorkflowRunProperties'] :: PutWorkflowRunProperties -> HashMap Text Text

-- | Create a value of <a>PutWorkflowRunProperties</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:PutWorkflowRunProperties'</a>,
--   <a>putWorkflowRunProperties_name</a> - Name of the workflow which was
--   run.
--   
--   <a>$sel:runId:PutWorkflowRunProperties'</a>,
--   <a>putWorkflowRunProperties_runId</a> - The ID of the workflow run for
--   which the run properties should be updated.
--   
--   <a>$sel:runProperties:PutWorkflowRunProperties'</a>,
--   <a>putWorkflowRunProperties_runProperties</a> - The properties to put
--   for the specified run.
newPutWorkflowRunProperties :: Text -> Text -> PutWorkflowRunProperties

-- | Name of the workflow which was run.
putWorkflowRunProperties_name :: Lens' PutWorkflowRunProperties Text

-- | The ID of the workflow run for which the run properties should be
--   updated.
putWorkflowRunProperties_runId :: Lens' PutWorkflowRunProperties Text

-- | The properties to put for the specified run.
putWorkflowRunProperties_runProperties :: Lens' PutWorkflowRunProperties (HashMap Text Text)

-- | <i>See:</i> <a>newPutWorkflowRunPropertiesResponse</a> smart
--   constructor.
data PutWorkflowRunPropertiesResponse
PutWorkflowRunPropertiesResponse' :: Int -> PutWorkflowRunPropertiesResponse

-- | The response's http status code.
[$sel:httpStatus:PutWorkflowRunPropertiesResponse'] :: PutWorkflowRunPropertiesResponse -> Int

-- | Create a value of <a>PutWorkflowRunPropertiesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutWorkflowRunPropertiesResponse'</a>,
--   <a>putWorkflowRunPropertiesResponse_httpStatus</a> - The response's
--   http status code.
newPutWorkflowRunPropertiesResponse :: Int -> PutWorkflowRunPropertiesResponse

-- | The response's http status code.
putWorkflowRunPropertiesResponse_httpStatus :: Lens' PutWorkflowRunPropertiesResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.PutWorkflowRunProperties.PutWorkflowRunProperties
instance GHC.Show.Show Network.AWS.Glue.PutWorkflowRunProperties.PutWorkflowRunProperties
instance GHC.Read.Read Network.AWS.Glue.PutWorkflowRunProperties.PutWorkflowRunProperties
instance GHC.Classes.Eq Network.AWS.Glue.PutWorkflowRunProperties.PutWorkflowRunProperties
instance GHC.Generics.Generic Network.AWS.Glue.PutWorkflowRunProperties.PutWorkflowRunPropertiesResponse
instance GHC.Show.Show Network.AWS.Glue.PutWorkflowRunProperties.PutWorkflowRunPropertiesResponse
instance GHC.Read.Read Network.AWS.Glue.PutWorkflowRunProperties.PutWorkflowRunPropertiesResponse
instance GHC.Classes.Eq Network.AWS.Glue.PutWorkflowRunProperties.PutWorkflowRunPropertiesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.PutWorkflowRunProperties.PutWorkflowRunProperties
instance Control.DeepSeq.NFData Network.AWS.Glue.PutWorkflowRunProperties.PutWorkflowRunPropertiesResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.PutWorkflowRunProperties.PutWorkflowRunProperties
instance Control.DeepSeq.NFData Network.AWS.Glue.PutWorkflowRunProperties.PutWorkflowRunProperties
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.PutWorkflowRunProperties.PutWorkflowRunProperties
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.PutWorkflowRunProperties.PutWorkflowRunProperties
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.PutWorkflowRunProperties.PutWorkflowRunProperties
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.PutWorkflowRunProperties.PutWorkflowRunProperties


-- | Puts the metadata key value pair for a specified schema version ID. A
--   maximum of 10 key value pairs will be allowed per schema version. They
--   can be added over one or more calls.
module Network.AWS.Glue.PutSchemaVersionMetadata

-- | <i>See:</i> <a>newPutSchemaVersionMetadata</a> smart constructor.
data PutSchemaVersionMetadata
PutSchemaVersionMetadata' :: Maybe Text -> Maybe SchemaId -> Maybe SchemaVersionNumber -> MetadataKeyValuePair -> PutSchemaVersionMetadata

-- | The unique version ID of the schema version.
[$sel:schemaVersionId:PutSchemaVersionMetadata'] :: PutSchemaVersionMetadata -> Maybe Text

-- | The unique ID for the schema.
[$sel:schemaId:PutSchemaVersionMetadata'] :: PutSchemaVersionMetadata -> Maybe SchemaId

-- | The version number of the schema.
[$sel:schemaVersionNumber:PutSchemaVersionMetadata'] :: PutSchemaVersionMetadata -> Maybe SchemaVersionNumber

-- | The metadata key's corresponding value.
[$sel:metadataKeyValue:PutSchemaVersionMetadata'] :: PutSchemaVersionMetadata -> MetadataKeyValuePair

-- | Create a value of <a>PutSchemaVersionMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaVersionId:PutSchemaVersionMetadata'</a>,
--   <a>putSchemaVersionMetadata_schemaVersionId</a> - The unique version
--   ID of the schema version.
--   
--   <a>$sel:schemaId:PutSchemaVersionMetadata'</a>,
--   <a>putSchemaVersionMetadata_schemaId</a> - The unique ID for the
--   schema.
--   
--   <a>$sel:schemaVersionNumber:PutSchemaVersionMetadata'</a>,
--   <a>putSchemaVersionMetadata_schemaVersionNumber</a> - The version
--   number of the schema.
--   
--   <a>$sel:metadataKeyValue:PutSchemaVersionMetadata'</a>,
--   <a>putSchemaVersionMetadata_metadataKeyValue</a> - The metadata key's
--   corresponding value.
newPutSchemaVersionMetadata :: MetadataKeyValuePair -> PutSchemaVersionMetadata

-- | The unique version ID of the schema version.
putSchemaVersionMetadata_schemaVersionId :: Lens' PutSchemaVersionMetadata (Maybe Text)

-- | The unique ID for the schema.
putSchemaVersionMetadata_schemaId :: Lens' PutSchemaVersionMetadata (Maybe SchemaId)

-- | The version number of the schema.
putSchemaVersionMetadata_schemaVersionNumber :: Lens' PutSchemaVersionMetadata (Maybe SchemaVersionNumber)

-- | The metadata key's corresponding value.
putSchemaVersionMetadata_metadataKeyValue :: Lens' PutSchemaVersionMetadata MetadataKeyValuePair

-- | <i>See:</i> <a>newPutSchemaVersionMetadataResponse</a> smart
--   constructor.
data PutSchemaVersionMetadataResponse
PutSchemaVersionMetadataResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Int -> PutSchemaVersionMetadataResponse

-- | The name for the registry.
[$sel:registryName:PutSchemaVersionMetadataResponse'] :: PutSchemaVersionMetadataResponse -> Maybe Text

-- | The name for the schema.
[$sel:schemaName:PutSchemaVersionMetadataResponse'] :: PutSchemaVersionMetadataResponse -> Maybe Text

-- | The unique version ID of the schema version.
[$sel:schemaVersionId:PutSchemaVersionMetadataResponse'] :: PutSchemaVersionMetadataResponse -> Maybe Text

-- | The version number of the schema.
[$sel:versionNumber:PutSchemaVersionMetadataResponse'] :: PutSchemaVersionMetadataResponse -> Maybe Natural

-- | The Amazon Resource Name (ARN) for the schema.
[$sel:schemaArn:PutSchemaVersionMetadataResponse'] :: PutSchemaVersionMetadataResponse -> Maybe Text

-- | The metadata key.
[$sel:metadataKey:PutSchemaVersionMetadataResponse'] :: PutSchemaVersionMetadataResponse -> Maybe Text

-- | The value of the metadata key.
[$sel:metadataValue:PutSchemaVersionMetadataResponse'] :: PutSchemaVersionMetadataResponse -> Maybe Text

-- | The latest version of the schema.
[$sel:latestVersion:PutSchemaVersionMetadataResponse'] :: PutSchemaVersionMetadataResponse -> Maybe Bool

-- | The response's http status code.
[$sel:httpStatus:PutSchemaVersionMetadataResponse'] :: PutSchemaVersionMetadataResponse -> Int

-- | Create a value of <a>PutSchemaVersionMetadataResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:PutSchemaVersionMetadataResponse'</a>,
--   <a>putSchemaVersionMetadataResponse_registryName</a> - The name for
--   the registry.
--   
--   <a>$sel:schemaName:PutSchemaVersionMetadataResponse'</a>,
--   <a>putSchemaVersionMetadataResponse_schemaName</a> - The name for the
--   schema.
--   
--   <a>$sel:schemaVersionId:PutSchemaVersionMetadata'</a>,
--   <a>putSchemaVersionMetadataResponse_schemaVersionId</a> - The unique
--   version ID of the schema version.
--   
--   <a>$sel:versionNumber:PutSchemaVersionMetadataResponse'</a>,
--   <a>putSchemaVersionMetadataResponse_versionNumber</a> - The version
--   number of the schema.
--   
--   <a>$sel:schemaArn:PutSchemaVersionMetadataResponse'</a>,
--   <a>putSchemaVersionMetadataResponse_schemaArn</a> - The Amazon
--   Resource Name (ARN) for the schema.
--   
--   <a>$sel:metadataKey:PutSchemaVersionMetadataResponse'</a>,
--   <a>putSchemaVersionMetadataResponse_metadataKey</a> - The metadata
--   key.
--   
--   <a>$sel:metadataValue:PutSchemaVersionMetadataResponse'</a>,
--   <a>putSchemaVersionMetadataResponse_metadataValue</a> - The value of
--   the metadata key.
--   
--   <a>$sel:latestVersion:PutSchemaVersionMetadataResponse'</a>,
--   <a>putSchemaVersionMetadataResponse_latestVersion</a> - The latest
--   version of the schema.
--   
--   <a>$sel:httpStatus:PutSchemaVersionMetadataResponse'</a>,
--   <a>putSchemaVersionMetadataResponse_httpStatus</a> - The response's
--   http status code.
newPutSchemaVersionMetadataResponse :: Int -> PutSchemaVersionMetadataResponse

-- | The name for the registry.
putSchemaVersionMetadataResponse_registryName :: Lens' PutSchemaVersionMetadataResponse (Maybe Text)

-- | The name for the schema.
putSchemaVersionMetadataResponse_schemaName :: Lens' PutSchemaVersionMetadataResponse (Maybe Text)

-- | The unique version ID of the schema version.
putSchemaVersionMetadataResponse_schemaVersionId :: Lens' PutSchemaVersionMetadataResponse (Maybe Text)

-- | The version number of the schema.
putSchemaVersionMetadataResponse_versionNumber :: Lens' PutSchemaVersionMetadataResponse (Maybe Natural)

-- | The Amazon Resource Name (ARN) for the schema.
putSchemaVersionMetadataResponse_schemaArn :: Lens' PutSchemaVersionMetadataResponse (Maybe Text)

-- | The metadata key.
putSchemaVersionMetadataResponse_metadataKey :: Lens' PutSchemaVersionMetadataResponse (Maybe Text)

-- | The value of the metadata key.
putSchemaVersionMetadataResponse_metadataValue :: Lens' PutSchemaVersionMetadataResponse (Maybe Text)

-- | The latest version of the schema.
putSchemaVersionMetadataResponse_latestVersion :: Lens' PutSchemaVersionMetadataResponse (Maybe Bool)

-- | The response's http status code.
putSchemaVersionMetadataResponse_httpStatus :: Lens' PutSchemaVersionMetadataResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.PutSchemaVersionMetadata.PutSchemaVersionMetadata
instance GHC.Show.Show Network.AWS.Glue.PutSchemaVersionMetadata.PutSchemaVersionMetadata
instance GHC.Read.Read Network.AWS.Glue.PutSchemaVersionMetadata.PutSchemaVersionMetadata
instance GHC.Classes.Eq Network.AWS.Glue.PutSchemaVersionMetadata.PutSchemaVersionMetadata
instance GHC.Generics.Generic Network.AWS.Glue.PutSchemaVersionMetadata.PutSchemaVersionMetadataResponse
instance GHC.Show.Show Network.AWS.Glue.PutSchemaVersionMetadata.PutSchemaVersionMetadataResponse
instance GHC.Read.Read Network.AWS.Glue.PutSchemaVersionMetadata.PutSchemaVersionMetadataResponse
instance GHC.Classes.Eq Network.AWS.Glue.PutSchemaVersionMetadata.PutSchemaVersionMetadataResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.PutSchemaVersionMetadata.PutSchemaVersionMetadata
instance Control.DeepSeq.NFData Network.AWS.Glue.PutSchemaVersionMetadata.PutSchemaVersionMetadataResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.PutSchemaVersionMetadata.PutSchemaVersionMetadata
instance Control.DeepSeq.NFData Network.AWS.Glue.PutSchemaVersionMetadata.PutSchemaVersionMetadata
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.PutSchemaVersionMetadata.PutSchemaVersionMetadata
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.PutSchemaVersionMetadata.PutSchemaVersionMetadata
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.PutSchemaVersionMetadata.PutSchemaVersionMetadata
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.PutSchemaVersionMetadata.PutSchemaVersionMetadata


-- | Sets the Data Catalog resource policy for access control.
module Network.AWS.Glue.PutResourcePolicy

-- | <i>See:</i> <a>newPutResourcePolicy</a> smart constructor.
data PutResourcePolicy
PutResourcePolicy' :: Maybe ExistCondition -> Maybe Text -> Maybe Text -> Maybe EnableHybridValues -> Text -> PutResourcePolicy

-- | A value of <tt>MUST_EXIST</tt> is used to update a policy. A value of
--   <tt>NOT_EXIST</tt> is used to create a new policy. If a value of
--   <tt>NONE</tt> or a null value is used, the call does not depend on the
--   existence of a policy.
[$sel:policyExistsCondition:PutResourcePolicy'] :: PutResourcePolicy -> Maybe ExistCondition

-- | The hash value returned when the previous policy was set using
--   <tt>PutResourcePolicy</tt>. Its purpose is to prevent concurrent
--   modifications of a policy. Do not use this parameter if no previous
--   policy has been set.
[$sel:policyHashCondition:PutResourcePolicy'] :: PutResourcePolicy -> Maybe Text

-- | Do not use. For internal use only.
[$sel:resourceArn:PutResourcePolicy'] :: PutResourcePolicy -> Maybe Text

-- | If <tt>'TRUE'</tt>, indicates that you are using both methods to grant
--   cross-account access to Data Catalog resources:
--   
--   <ul>
--   <li>By directly updating the resource policy with
--   <tt>PutResourePolicy</tt></li>
--   <li>By using the <b>Grant permissions</b> command on the Amazon Web
--   Services Management Console.</li>
--   </ul>
--   
--   Must be set to <tt>'TRUE'</tt> if you have already used the Management
--   Console to grant cross-account access, otherwise the call fails.
--   Default is 'FALSE'.
[$sel:enableHybrid:PutResourcePolicy'] :: PutResourcePolicy -> Maybe EnableHybridValues

-- | Contains the policy document to set, in JSON format.
[$sel:policyInJson:PutResourcePolicy'] :: PutResourcePolicy -> Text

-- | Create a value of <a>PutResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyExistsCondition:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_policyExistsCondition</a> - A value of
--   <tt>MUST_EXIST</tt> is used to update a policy. A value of
--   <tt>NOT_EXIST</tt> is used to create a new policy. If a value of
--   <tt>NONE</tt> or a null value is used, the call does not depend on the
--   existence of a policy.
--   
--   <a>$sel:policyHashCondition:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_policyHashCondition</a> - The hash value returned
--   when the previous policy was set using <tt>PutResourcePolicy</tt>. Its
--   purpose is to prevent concurrent modifications of a policy. Do not use
--   this parameter if no previous policy has been set.
--   
--   <a>$sel:resourceArn:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_resourceArn</a> - Do not use. For internal use
--   only.
--   
--   <a>$sel:enableHybrid:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_enableHybrid</a> - If <tt>'TRUE'</tt>, indicates
--   that you are using both methods to grant cross-account access to Data
--   Catalog resources:
--   
--   <ul>
--   <li>By directly updating the resource policy with
--   <tt>PutResourePolicy</tt></li>
--   <li>By using the <b>Grant permissions</b> command on the Amazon Web
--   Services Management Console.</li>
--   </ul>
--   
--   Must be set to <tt>'TRUE'</tt> if you have already used the Management
--   Console to grant cross-account access, otherwise the call fails.
--   Default is 'FALSE'.
--   
--   <a>$sel:policyInJson:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_policyInJson</a> - Contains the policy document
--   to set, in JSON format.
newPutResourcePolicy :: Text -> PutResourcePolicy

-- | A value of <tt>MUST_EXIST</tt> is used to update a policy. A value of
--   <tt>NOT_EXIST</tt> is used to create a new policy. If a value of
--   <tt>NONE</tt> or a null value is used, the call does not depend on the
--   existence of a policy.
putResourcePolicy_policyExistsCondition :: Lens' PutResourcePolicy (Maybe ExistCondition)

-- | The hash value returned when the previous policy was set using
--   <tt>PutResourcePolicy</tt>. Its purpose is to prevent concurrent
--   modifications of a policy. Do not use this parameter if no previous
--   policy has been set.
putResourcePolicy_policyHashCondition :: Lens' PutResourcePolicy (Maybe Text)

-- | Do not use. For internal use only.
putResourcePolicy_resourceArn :: Lens' PutResourcePolicy (Maybe Text)

-- | If <tt>'TRUE'</tt>, indicates that you are using both methods to grant
--   cross-account access to Data Catalog resources:
--   
--   <ul>
--   <li>By directly updating the resource policy with
--   <tt>PutResourePolicy</tt></li>
--   <li>By using the <b>Grant permissions</b> command on the Amazon Web
--   Services Management Console.</li>
--   </ul>
--   
--   Must be set to <tt>'TRUE'</tt> if you have already used the Management
--   Console to grant cross-account access, otherwise the call fails.
--   Default is 'FALSE'.
putResourcePolicy_enableHybrid :: Lens' PutResourcePolicy (Maybe EnableHybridValues)

-- | Contains the policy document to set, in JSON format.
putResourcePolicy_policyInJson :: Lens' PutResourcePolicy Text

-- | <i>See:</i> <a>newPutResourcePolicyResponse</a> smart constructor.
data PutResourcePolicyResponse
PutResourcePolicyResponse' :: Maybe Text -> Int -> PutResourcePolicyResponse

-- | A hash of the policy that has just been set. This must be included in
--   a subsequent call that overwrites or updates this policy.
[$sel:policyHash:PutResourcePolicyResponse'] :: PutResourcePolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutResourcePolicyResponse'] :: PutResourcePolicyResponse -> Int

-- | Create a value of <a>PutResourcePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyHash:PutResourcePolicyResponse'</a>,
--   <a>putResourcePolicyResponse_policyHash</a> - A hash of the policy
--   that has just been set. This must be included in a subsequent call
--   that overwrites or updates this policy.
--   
--   <a>$sel:httpStatus:PutResourcePolicyResponse'</a>,
--   <a>putResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newPutResourcePolicyResponse :: Int -> PutResourcePolicyResponse

-- | A hash of the policy that has just been set. This must be included in
--   a subsequent call that overwrites or updates this policy.
putResourcePolicyResponse_policyHash :: Lens' PutResourcePolicyResponse (Maybe Text)

-- | The response's http status code.
putResourcePolicyResponse_httpStatus :: Lens' PutResourcePolicyResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.PutResourcePolicy.PutResourcePolicy
instance GHC.Show.Show Network.AWS.Glue.PutResourcePolicy.PutResourcePolicy
instance GHC.Read.Read Network.AWS.Glue.PutResourcePolicy.PutResourcePolicy
instance GHC.Classes.Eq Network.AWS.Glue.PutResourcePolicy.PutResourcePolicy
instance GHC.Generics.Generic Network.AWS.Glue.PutResourcePolicy.PutResourcePolicyResponse
instance GHC.Show.Show Network.AWS.Glue.PutResourcePolicy.PutResourcePolicyResponse
instance GHC.Read.Read Network.AWS.Glue.PutResourcePolicy.PutResourcePolicyResponse
instance GHC.Classes.Eq Network.AWS.Glue.PutResourcePolicy.PutResourcePolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.PutResourcePolicy.PutResourcePolicy
instance Control.DeepSeq.NFData Network.AWS.Glue.PutResourcePolicy.PutResourcePolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.PutResourcePolicy.PutResourcePolicy
instance Control.DeepSeq.NFData Network.AWS.Glue.PutResourcePolicy.PutResourcePolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.PutResourcePolicy.PutResourcePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.PutResourcePolicy.PutResourcePolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.PutResourcePolicy.PutResourcePolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.PutResourcePolicy.PutResourcePolicy


-- | Sets the security configuration for a specified catalog. After the
--   configuration has been set, the specified encryption is applied to
--   every catalog write thereafter.
module Network.AWS.Glue.PutDataCatalogEncryptionSettings

-- | <i>See:</i> <a>newPutDataCatalogEncryptionSettings</a> smart
--   constructor.
data PutDataCatalogEncryptionSettings
PutDataCatalogEncryptionSettings' :: Maybe Text -> DataCatalogEncryptionSettings -> PutDataCatalogEncryptionSettings

-- | The ID of the Data Catalog to set the security configuration for. If
--   none is provided, the Amazon Web Services account ID is used by
--   default.
[$sel:catalogId:PutDataCatalogEncryptionSettings'] :: PutDataCatalogEncryptionSettings -> Maybe Text

-- | The security configuration to set.
[$sel:dataCatalogEncryptionSettings:PutDataCatalogEncryptionSettings'] :: PutDataCatalogEncryptionSettings -> DataCatalogEncryptionSettings

-- | Create a value of <a>PutDataCatalogEncryptionSettings</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:PutDataCatalogEncryptionSettings'</a>,
--   <a>putDataCatalogEncryptionSettings_catalogId</a> - The ID of the Data
--   Catalog to set the security configuration for. If none is provided,
--   the Amazon Web Services account ID is used by default.
--   
--   
--   <a>$sel:dataCatalogEncryptionSettings:PutDataCatalogEncryptionSettings'</a>,
--   <a>putDataCatalogEncryptionSettings_dataCatalogEncryptionSettings</a>
--   - The security configuration to set.
newPutDataCatalogEncryptionSettings :: DataCatalogEncryptionSettings -> PutDataCatalogEncryptionSettings

-- | The ID of the Data Catalog to set the security configuration for. If
--   none is provided, the Amazon Web Services account ID is used by
--   default.
putDataCatalogEncryptionSettings_catalogId :: Lens' PutDataCatalogEncryptionSettings (Maybe Text)

-- | The security configuration to set.
putDataCatalogEncryptionSettings_dataCatalogEncryptionSettings :: Lens' PutDataCatalogEncryptionSettings DataCatalogEncryptionSettings

-- | <i>See:</i> <a>newPutDataCatalogEncryptionSettingsResponse</a> smart
--   constructor.
data PutDataCatalogEncryptionSettingsResponse
PutDataCatalogEncryptionSettingsResponse' :: Int -> PutDataCatalogEncryptionSettingsResponse

-- | The response's http status code.
[$sel:httpStatus:PutDataCatalogEncryptionSettingsResponse'] :: PutDataCatalogEncryptionSettingsResponse -> Int

-- | Create a value of <a>PutDataCatalogEncryptionSettingsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutDataCatalogEncryptionSettingsResponse'</a>,
--   <a>putDataCatalogEncryptionSettingsResponse_httpStatus</a> - The
--   response's http status code.
newPutDataCatalogEncryptionSettingsResponse :: Int -> PutDataCatalogEncryptionSettingsResponse

-- | The response's http status code.
putDataCatalogEncryptionSettingsResponse_httpStatus :: Lens' PutDataCatalogEncryptionSettingsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.PutDataCatalogEncryptionSettings.PutDataCatalogEncryptionSettings
instance GHC.Show.Show Network.AWS.Glue.PutDataCatalogEncryptionSettings.PutDataCatalogEncryptionSettings
instance GHC.Read.Read Network.AWS.Glue.PutDataCatalogEncryptionSettings.PutDataCatalogEncryptionSettings
instance GHC.Classes.Eq Network.AWS.Glue.PutDataCatalogEncryptionSettings.PutDataCatalogEncryptionSettings
instance GHC.Generics.Generic Network.AWS.Glue.PutDataCatalogEncryptionSettings.PutDataCatalogEncryptionSettingsResponse
instance GHC.Show.Show Network.AWS.Glue.PutDataCatalogEncryptionSettings.PutDataCatalogEncryptionSettingsResponse
instance GHC.Read.Read Network.AWS.Glue.PutDataCatalogEncryptionSettings.PutDataCatalogEncryptionSettingsResponse
instance GHC.Classes.Eq Network.AWS.Glue.PutDataCatalogEncryptionSettings.PutDataCatalogEncryptionSettingsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.PutDataCatalogEncryptionSettings.PutDataCatalogEncryptionSettings
instance Control.DeepSeq.NFData Network.AWS.Glue.PutDataCatalogEncryptionSettings.PutDataCatalogEncryptionSettingsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.PutDataCatalogEncryptionSettings.PutDataCatalogEncryptionSettings
instance Control.DeepSeq.NFData Network.AWS.Glue.PutDataCatalogEncryptionSettings.PutDataCatalogEncryptionSettings
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.PutDataCatalogEncryptionSettings.PutDataCatalogEncryptionSettings
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.PutDataCatalogEncryptionSettings.PutDataCatalogEncryptionSettings
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.PutDataCatalogEncryptionSettings.PutDataCatalogEncryptionSettings
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.PutDataCatalogEncryptionSettings.PutDataCatalogEncryptionSettings


-- | Lists names of workflows created in the account.
module Network.AWS.Glue.ListWorkflows

-- | <i>See:</i> <a>newListWorkflows</a> smart constructor.
data ListWorkflows
ListWorkflows' :: Maybe Text -> Maybe Natural -> ListWorkflows

-- | A continuation token, if this is a continuation request.
[$sel:nextToken:ListWorkflows'] :: ListWorkflows -> Maybe Text

-- | The maximum size of a list to return.
[$sel:maxResults:ListWorkflows'] :: ListWorkflows -> Maybe Natural

-- | Create a value of <a>ListWorkflows</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWorkflows'</a>, <a>listWorkflows_nextToken</a> -
--   A continuation token, if this is a continuation request.
--   
--   <a>$sel:maxResults:ListWorkflows'</a>, <a>listWorkflows_maxResults</a>
--   - The maximum size of a list to return.
newListWorkflows :: ListWorkflows

-- | A continuation token, if this is a continuation request.
listWorkflows_nextToken :: Lens' ListWorkflows (Maybe Text)

-- | The maximum size of a list to return.
listWorkflows_maxResults :: Lens' ListWorkflows (Maybe Natural)

-- | <i>See:</i> <a>newListWorkflowsResponse</a> smart constructor.
data ListWorkflowsResponse
ListWorkflowsResponse' :: Maybe Text -> Maybe (NonEmpty Text) -> Int -> ListWorkflowsResponse

-- | A continuation token, if not all workflow names have been returned.
[$sel:nextToken:ListWorkflowsResponse'] :: ListWorkflowsResponse -> Maybe Text

-- | List of names of workflows in the account.
[$sel:workflows:ListWorkflowsResponse'] :: ListWorkflowsResponse -> Maybe (NonEmpty Text)

-- | The response's http status code.
[$sel:httpStatus:ListWorkflowsResponse'] :: ListWorkflowsResponse -> Int

-- | Create a value of <a>ListWorkflowsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWorkflows'</a>,
--   <a>listWorkflowsResponse_nextToken</a> - A continuation token, if not
--   all workflow names have been returned.
--   
--   <a>$sel:workflows:ListWorkflowsResponse'</a>,
--   <a>listWorkflowsResponse_workflows</a> - List of names of workflows in
--   the account.
--   
--   <a>$sel:httpStatus:ListWorkflowsResponse'</a>,
--   <a>listWorkflowsResponse_httpStatus</a> - The response's http status
--   code.
newListWorkflowsResponse :: Int -> ListWorkflowsResponse

-- | A continuation token, if not all workflow names have been returned.
listWorkflowsResponse_nextToken :: Lens' ListWorkflowsResponse (Maybe Text)

-- | List of names of workflows in the account.
listWorkflowsResponse_workflows :: Lens' ListWorkflowsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
listWorkflowsResponse_httpStatus :: Lens' ListWorkflowsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.ListWorkflows.ListWorkflows
instance GHC.Show.Show Network.AWS.Glue.ListWorkflows.ListWorkflows
instance GHC.Read.Read Network.AWS.Glue.ListWorkflows.ListWorkflows
instance GHC.Classes.Eq Network.AWS.Glue.ListWorkflows.ListWorkflows
instance GHC.Generics.Generic Network.AWS.Glue.ListWorkflows.ListWorkflowsResponse
instance GHC.Show.Show Network.AWS.Glue.ListWorkflows.ListWorkflowsResponse
instance GHC.Read.Read Network.AWS.Glue.ListWorkflows.ListWorkflowsResponse
instance GHC.Classes.Eq Network.AWS.Glue.ListWorkflows.ListWorkflowsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.ListWorkflows.ListWorkflows
instance Control.DeepSeq.NFData Network.AWS.Glue.ListWorkflows.ListWorkflowsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.ListWorkflows.ListWorkflows
instance Control.DeepSeq.NFData Network.AWS.Glue.ListWorkflows.ListWorkflows
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.ListWorkflows.ListWorkflows
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.ListWorkflows.ListWorkflows
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.ListWorkflows.ListWorkflows
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.ListWorkflows.ListWorkflows


-- | Retrieves the names of all trigger resources in this Amazon Web
--   Services account, or the resources with the specified tag. This
--   operation allows you to see which resources are available in your
--   account, and their names.
--   
--   This operation takes the optional <tt>Tags</tt> field, which you can
--   use as a filter on the response so that tagged resources can be
--   retrieved as a group. If you choose to use tags filtering, only
--   resources with the tag are retrieved.
module Network.AWS.Glue.ListTriggers

-- | <i>See:</i> <a>newListTriggers</a> smart constructor.
data ListTriggers
ListTriggers' :: Maybe Text -> Maybe Natural -> Maybe (HashMap Text Text) -> Maybe Text -> ListTriggers

-- | A continuation token, if this is a continuation request.
[$sel:nextToken:ListTriggers'] :: ListTriggers -> Maybe Text

-- | The maximum size of a list to return.
[$sel:maxResults:ListTriggers'] :: ListTriggers -> Maybe Natural

-- | Specifies to return only these tagged resources.
[$sel:tags:ListTriggers'] :: ListTriggers -> Maybe (HashMap Text Text)

-- | The name of the job for which to retrieve triggers. The trigger that
--   can start this job is returned. If there is no such trigger, all
--   triggers are returned.
[$sel:dependentJobName:ListTriggers'] :: ListTriggers -> Maybe Text

-- | Create a value of <a>ListTriggers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTriggers'</a>, <a>listTriggers_nextToken</a> - A
--   continuation token, if this is a continuation request.
--   
--   <a>$sel:maxResults:ListTriggers'</a>, <a>listTriggers_maxResults</a> -
--   The maximum size of a list to return.
--   
--   <a>$sel:tags:ListTriggers'</a>, <a>listTriggers_tags</a> - Specifies
--   to return only these tagged resources.
--   
--   <a>$sel:dependentJobName:ListTriggers'</a>,
--   <a>listTriggers_dependentJobName</a> - The name of the job for which
--   to retrieve triggers. The trigger that can start this job is returned.
--   If there is no such trigger, all triggers are returned.
newListTriggers :: ListTriggers

-- | A continuation token, if this is a continuation request.
listTriggers_nextToken :: Lens' ListTriggers (Maybe Text)

-- | The maximum size of a list to return.
listTriggers_maxResults :: Lens' ListTriggers (Maybe Natural)

-- | Specifies to return only these tagged resources.
listTriggers_tags :: Lens' ListTriggers (Maybe (HashMap Text Text))

-- | The name of the job for which to retrieve triggers. The trigger that
--   can start this job is returned. If there is no such trigger, all
--   triggers are returned.
listTriggers_dependentJobName :: Lens' ListTriggers (Maybe Text)

-- | <i>See:</i> <a>newListTriggersResponse</a> smart constructor.
data ListTriggersResponse
ListTriggersResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListTriggersResponse

-- | The names of all triggers in the account, or the triggers with the
--   specified tags.
[$sel:triggerNames:ListTriggersResponse'] :: ListTriggersResponse -> Maybe [Text]

-- | A continuation token, if the returned list does not contain the last
--   metric available.
[$sel:nextToken:ListTriggersResponse'] :: ListTriggersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListTriggersResponse'] :: ListTriggersResponse -> Int

-- | Create a value of <a>ListTriggersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggerNames:ListTriggersResponse'</a>,
--   <a>listTriggersResponse_triggerNames</a> - The names of all triggers
--   in the account, or the triggers with the specified tags.
--   
--   <a>$sel:nextToken:ListTriggers'</a>,
--   <a>listTriggersResponse_nextToken</a> - A continuation token, if the
--   returned list does not contain the last metric available.
--   
--   <a>$sel:httpStatus:ListTriggersResponse'</a>,
--   <a>listTriggersResponse_httpStatus</a> - The response's http status
--   code.
newListTriggersResponse :: Int -> ListTriggersResponse

-- | The names of all triggers in the account, or the triggers with the
--   specified tags.
listTriggersResponse_triggerNames :: Lens' ListTriggersResponse (Maybe [Text])

-- | A continuation token, if the returned list does not contain the last
--   metric available.
listTriggersResponse_nextToken :: Lens' ListTriggersResponse (Maybe Text)

-- | The response's http status code.
listTriggersResponse_httpStatus :: Lens' ListTriggersResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.ListTriggers.ListTriggers
instance GHC.Show.Show Network.AWS.Glue.ListTriggers.ListTriggers
instance GHC.Read.Read Network.AWS.Glue.ListTriggers.ListTriggers
instance GHC.Classes.Eq Network.AWS.Glue.ListTriggers.ListTriggers
instance GHC.Generics.Generic Network.AWS.Glue.ListTriggers.ListTriggersResponse
instance GHC.Show.Show Network.AWS.Glue.ListTriggers.ListTriggersResponse
instance GHC.Read.Read Network.AWS.Glue.ListTriggers.ListTriggersResponse
instance GHC.Classes.Eq Network.AWS.Glue.ListTriggers.ListTriggersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.ListTriggers.ListTriggers
instance Control.DeepSeq.NFData Network.AWS.Glue.ListTriggers.ListTriggersResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.ListTriggers.ListTriggers
instance Control.DeepSeq.NFData Network.AWS.Glue.ListTriggers.ListTriggers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.ListTriggers.ListTriggers
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.ListTriggers.ListTriggers
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.ListTriggers.ListTriggers
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.ListTriggers.ListTriggers


-- | Returns a list of schemas with minimal details. Schemas in Deleting
--   status will not be included in the results. Empty results will be
--   returned if there are no schemas available.
--   
--   When the <tt>RegistryId</tt> is not provided, all the schemas across
--   registries will be part of the API response.
--   
--   This operation returns paginated results.
module Network.AWS.Glue.ListSchemas

-- | <i>See:</i> <a>newListSchemas</a> smart constructor.
data ListSchemas
ListSchemas' :: Maybe RegistryId -> Maybe Text -> Maybe Natural -> ListSchemas

-- | A wrapper structure that may contain the registry name and Amazon
--   Resource Name (ARN).
[$sel:registryId:ListSchemas'] :: ListSchemas -> Maybe RegistryId

-- | A continuation token, if this is a continuation call.
[$sel:nextToken:ListSchemas'] :: ListSchemas -> Maybe Text

-- | Maximum number of results required per page. If the value is not
--   supplied, this will be defaulted to 25 per page.
[$sel:maxResults:ListSchemas'] :: ListSchemas -> Maybe Natural

-- | Create a value of <a>ListSchemas</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryId:ListSchemas'</a>, <a>listSchemas_registryId</a> - A
--   wrapper structure that may contain the registry name and Amazon
--   Resource Name (ARN).
--   
--   <a>$sel:nextToken:ListSchemas'</a>, <a>listSchemas_nextToken</a> - A
--   continuation token, if this is a continuation call.
--   
--   <a>$sel:maxResults:ListSchemas'</a>, <a>listSchemas_maxResults</a> -
--   Maximum number of results required per page. If the value is not
--   supplied, this will be defaulted to 25 per page.
newListSchemas :: ListSchemas

-- | A wrapper structure that may contain the registry name and Amazon
--   Resource Name (ARN).
listSchemas_registryId :: Lens' ListSchemas (Maybe RegistryId)

-- | A continuation token, if this is a continuation call.
listSchemas_nextToken :: Lens' ListSchemas (Maybe Text)

-- | Maximum number of results required per page. If the value is not
--   supplied, this will be defaulted to 25 per page.
listSchemas_maxResults :: Lens' ListSchemas (Maybe Natural)

-- | <i>See:</i> <a>newListSchemasResponse</a> smart constructor.
data ListSchemasResponse
ListSchemasResponse' :: Maybe [SchemaListItem] -> Maybe Text -> Int -> ListSchemasResponse

-- | An array of <tt>SchemaListItem</tt> objects containing details of each
--   schema.
[$sel:schemas:ListSchemasResponse'] :: ListSchemasResponse -> Maybe [SchemaListItem]

-- | A continuation token for paginating the returned list of tokens,
--   returned if the current segment of the list is not the last.
[$sel:nextToken:ListSchemasResponse'] :: ListSchemasResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListSchemasResponse'] :: ListSchemasResponse -> Int

-- | Create a value of <a>ListSchemasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemas:ListSchemasResponse'</a>,
--   <a>listSchemasResponse_schemas</a> - An array of
--   <tt>SchemaListItem</tt> objects containing details of each schema.
--   
--   <a>$sel:nextToken:ListSchemas'</a>,
--   <a>listSchemasResponse_nextToken</a> - A continuation token for
--   paginating the returned list of tokens, returned if the current
--   segment of the list is not the last.
--   
--   <a>$sel:httpStatus:ListSchemasResponse'</a>,
--   <a>listSchemasResponse_httpStatus</a> - The response's http status
--   code.
newListSchemasResponse :: Int -> ListSchemasResponse

-- | An array of <tt>SchemaListItem</tt> objects containing details of each
--   schema.
listSchemasResponse_schemas :: Lens' ListSchemasResponse (Maybe [SchemaListItem])

-- | A continuation token for paginating the returned list of tokens,
--   returned if the current segment of the list is not the last.
listSchemasResponse_nextToken :: Lens' ListSchemasResponse (Maybe Text)

-- | The response's http status code.
listSchemasResponse_httpStatus :: Lens' ListSchemasResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.ListSchemas.ListSchemas
instance GHC.Show.Show Network.AWS.Glue.ListSchemas.ListSchemas
instance GHC.Read.Read Network.AWS.Glue.ListSchemas.ListSchemas
instance GHC.Classes.Eq Network.AWS.Glue.ListSchemas.ListSchemas
instance GHC.Generics.Generic Network.AWS.Glue.ListSchemas.ListSchemasResponse
instance GHC.Show.Show Network.AWS.Glue.ListSchemas.ListSchemasResponse
instance GHC.Read.Read Network.AWS.Glue.ListSchemas.ListSchemasResponse
instance GHC.Classes.Eq Network.AWS.Glue.ListSchemas.ListSchemasResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.ListSchemas.ListSchemas
instance Control.DeepSeq.NFData Network.AWS.Glue.ListSchemas.ListSchemasResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Glue.ListSchemas.ListSchemas
instance Data.Hashable.Class.Hashable Network.AWS.Glue.ListSchemas.ListSchemas
instance Control.DeepSeq.NFData Network.AWS.Glue.ListSchemas.ListSchemas
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.ListSchemas.ListSchemas
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.ListSchemas.ListSchemas
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.ListSchemas.ListSchemas
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.ListSchemas.ListSchemas


-- | Returns a list of schema versions that you have created, with minimal
--   information. Schema versions in Deleted status will not be included in
--   the results. Empty results will be returned if there are no schema
--   versions available.
--   
--   This operation returns paginated results.
module Network.AWS.Glue.ListSchemaVersions

-- | <i>See:</i> <a>newListSchemaVersions</a> smart constructor.
data ListSchemaVersions
ListSchemaVersions' :: Maybe Text -> Maybe Natural -> SchemaId -> ListSchemaVersions

-- | A continuation token, if this is a continuation call.
[$sel:nextToken:ListSchemaVersions'] :: ListSchemaVersions -> Maybe Text

-- | Maximum number of results required per page. If the value is not
--   supplied, this will be defaulted to 25 per page.
[$sel:maxResults:ListSchemaVersions'] :: ListSchemaVersions -> Maybe Natural

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   Either <tt>SchemaArn</tt> or <tt>SchemaName</tt> and
--   <tt>RegistryName</tt> has to be provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. Either
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> and <tt>RegistryName</tt>
--   has to be provided.</li>
--   </ul>
[$sel:schemaId:ListSchemaVersions'] :: ListSchemaVersions -> SchemaId

-- | Create a value of <a>ListSchemaVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSchemaVersions'</a>,
--   <a>listSchemaVersions_nextToken</a> - A continuation token, if this is
--   a continuation call.
--   
--   <a>$sel:maxResults:ListSchemaVersions'</a>,
--   <a>listSchemaVersions_maxResults</a> - Maximum number of results
--   required per page. If the value is not supplied, this will be
--   defaulted to 25 per page.
--   
--   <a>$sel:schemaId:ListSchemaVersions'</a>,
--   <a>listSchemaVersions_schemaId</a> - This is a wrapper structure to
--   contain schema identity fields. The structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   Either <tt>SchemaArn</tt> or <tt>SchemaName</tt> and
--   <tt>RegistryName</tt> has to be provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. Either
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> and <tt>RegistryName</tt>
--   has to be provided.</li>
--   </ul>
newListSchemaVersions :: SchemaId -> ListSchemaVersions

-- | A continuation token, if this is a continuation call.
listSchemaVersions_nextToken :: Lens' ListSchemaVersions (Maybe Text)

-- | Maximum number of results required per page. If the value is not
--   supplied, this will be defaulted to 25 per page.
listSchemaVersions_maxResults :: Lens' ListSchemaVersions (Maybe Natural)

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   Either <tt>SchemaArn</tt> or <tt>SchemaName</tt> and
--   <tt>RegistryName</tt> has to be provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. Either
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> and <tt>RegistryName</tt>
--   has to be provided.</li>
--   </ul>
listSchemaVersions_schemaId :: Lens' ListSchemaVersions SchemaId

-- | <i>See:</i> <a>newListSchemaVersionsResponse</a> smart constructor.
data ListSchemaVersionsResponse
ListSchemaVersionsResponse' :: Maybe [SchemaVersionListItem] -> Maybe Text -> Int -> ListSchemaVersionsResponse

-- | An array of <tt>SchemaVersionList</tt> objects containing details of
--   each schema version.
[$sel:schemas:ListSchemaVersionsResponse'] :: ListSchemaVersionsResponse -> Maybe [SchemaVersionListItem]

-- | A continuation token for paginating the returned list of tokens,
--   returned if the current segment of the list is not the last.
[$sel:nextToken:ListSchemaVersionsResponse'] :: ListSchemaVersionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListSchemaVersionsResponse'] :: ListSchemaVersionsResponse -> Int

-- | Create a value of <a>ListSchemaVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemas:ListSchemaVersionsResponse'</a>,
--   <a>listSchemaVersionsResponse_schemas</a> - An array of
--   <tt>SchemaVersionList</tt> objects containing details of each schema
--   version.
--   
--   <a>$sel:nextToken:ListSchemaVersions'</a>,
--   <a>listSchemaVersionsResponse_nextToken</a> - A continuation token for
--   paginating the returned list of tokens, returned if the current
--   segment of the list is not the last.
--   
--   <a>$sel:httpStatus:ListSchemaVersionsResponse'</a>,
--   <a>listSchemaVersionsResponse_httpStatus</a> - The response's http
--   status code.
newListSchemaVersionsResponse :: Int -> ListSchemaVersionsResponse

-- | An array of <tt>SchemaVersionList</tt> objects containing details of
--   each schema version.
listSchemaVersionsResponse_schemas :: Lens' ListSchemaVersionsResponse (Maybe [SchemaVersionListItem])

-- | A continuation token for paginating the returned list of tokens,
--   returned if the current segment of the list is not the last.
listSchemaVersionsResponse_nextToken :: Lens' ListSchemaVersionsResponse (Maybe Text)

-- | The response's http status code.
listSchemaVersionsResponse_httpStatus :: Lens' ListSchemaVersionsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.ListSchemaVersions.ListSchemaVersions
instance GHC.Show.Show Network.AWS.Glue.ListSchemaVersions.ListSchemaVersions
instance GHC.Read.Read Network.AWS.Glue.ListSchemaVersions.ListSchemaVersions
instance GHC.Classes.Eq Network.AWS.Glue.ListSchemaVersions.ListSchemaVersions
instance GHC.Generics.Generic Network.AWS.Glue.ListSchemaVersions.ListSchemaVersionsResponse
instance GHC.Show.Show Network.AWS.Glue.ListSchemaVersions.ListSchemaVersionsResponse
instance GHC.Read.Read Network.AWS.Glue.ListSchemaVersions.ListSchemaVersionsResponse
instance GHC.Classes.Eq Network.AWS.Glue.ListSchemaVersions.ListSchemaVersionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.ListSchemaVersions.ListSchemaVersions
instance Control.DeepSeq.NFData Network.AWS.Glue.ListSchemaVersions.ListSchemaVersionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Glue.ListSchemaVersions.ListSchemaVersions
instance Data.Hashable.Class.Hashable Network.AWS.Glue.ListSchemaVersions.ListSchemaVersions
instance Control.DeepSeq.NFData Network.AWS.Glue.ListSchemaVersions.ListSchemaVersions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.ListSchemaVersions.ListSchemaVersions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.ListSchemaVersions.ListSchemaVersions
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.ListSchemaVersions.ListSchemaVersions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.ListSchemaVersions.ListSchemaVersions


-- | Returns a list of registries that you have created, with minimal
--   registry information. Registries in the <tt>Deleting</tt> status will
--   not be included in the results. Empty results will be returned if
--   there are no registries available.
--   
--   This operation returns paginated results.
module Network.AWS.Glue.ListRegistries

-- | <i>See:</i> <a>newListRegistries</a> smart constructor.
data ListRegistries
ListRegistries' :: Maybe Text -> Maybe Natural -> ListRegistries

-- | A continuation token, if this is a continuation call.
[$sel:nextToken:ListRegistries'] :: ListRegistries -> Maybe Text

-- | Maximum number of results required per page. If the value is not
--   supplied, this will be defaulted to 25 per page.
[$sel:maxResults:ListRegistries'] :: ListRegistries -> Maybe Natural

-- | Create a value of <a>ListRegistries</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRegistries'</a>, <a>listRegistries_nextToken</a>
--   - A continuation token, if this is a continuation call.
--   
--   <a>$sel:maxResults:ListRegistries'</a>,
--   <a>listRegistries_maxResults</a> - Maximum number of results required
--   per page. If the value is not supplied, this will be defaulted to 25
--   per page.
newListRegistries :: ListRegistries

-- | A continuation token, if this is a continuation call.
listRegistries_nextToken :: Lens' ListRegistries (Maybe Text)

-- | Maximum number of results required per page. If the value is not
--   supplied, this will be defaulted to 25 per page.
listRegistries_maxResults :: Lens' ListRegistries (Maybe Natural)

-- | <i>See:</i> <a>newListRegistriesResponse</a> smart constructor.
data ListRegistriesResponse
ListRegistriesResponse' :: Maybe [RegistryListItem] -> Maybe Text -> Int -> ListRegistriesResponse

-- | An array of <tt>RegistryDetailedListItem</tt> objects containing
--   minimal details of each registry.
[$sel:registries:ListRegistriesResponse'] :: ListRegistriesResponse -> Maybe [RegistryListItem]

-- | A continuation token for paginating the returned list of tokens,
--   returned if the current segment of the list is not the last.
[$sel:nextToken:ListRegistriesResponse'] :: ListRegistriesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListRegistriesResponse'] :: ListRegistriesResponse -> Int

-- | Create a value of <a>ListRegistriesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registries:ListRegistriesResponse'</a>,
--   <a>listRegistriesResponse_registries</a> - An array of
--   <tt>RegistryDetailedListItem</tt> objects containing minimal details
--   of each registry.
--   
--   <a>$sel:nextToken:ListRegistries'</a>,
--   <a>listRegistriesResponse_nextToken</a> - A continuation token for
--   paginating the returned list of tokens, returned if the current
--   segment of the list is not the last.
--   
--   <a>$sel:httpStatus:ListRegistriesResponse'</a>,
--   <a>listRegistriesResponse_httpStatus</a> - The response's http status
--   code.
newListRegistriesResponse :: Int -> ListRegistriesResponse

-- | An array of <tt>RegistryDetailedListItem</tt> objects containing
--   minimal details of each registry.
listRegistriesResponse_registries :: Lens' ListRegistriesResponse (Maybe [RegistryListItem])

-- | A continuation token for paginating the returned list of tokens,
--   returned if the current segment of the list is not the last.
listRegistriesResponse_nextToken :: Lens' ListRegistriesResponse (Maybe Text)

-- | The response's http status code.
listRegistriesResponse_httpStatus :: Lens' ListRegistriesResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.ListRegistries.ListRegistries
instance GHC.Show.Show Network.AWS.Glue.ListRegistries.ListRegistries
instance GHC.Read.Read Network.AWS.Glue.ListRegistries.ListRegistries
instance GHC.Classes.Eq Network.AWS.Glue.ListRegistries.ListRegistries
instance GHC.Generics.Generic Network.AWS.Glue.ListRegistries.ListRegistriesResponse
instance GHC.Show.Show Network.AWS.Glue.ListRegistries.ListRegistriesResponse
instance GHC.Read.Read Network.AWS.Glue.ListRegistries.ListRegistriesResponse
instance GHC.Classes.Eq Network.AWS.Glue.ListRegistries.ListRegistriesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.ListRegistries.ListRegistries
instance Control.DeepSeq.NFData Network.AWS.Glue.ListRegistries.ListRegistriesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Glue.ListRegistries.ListRegistries
instance Data.Hashable.Class.Hashable Network.AWS.Glue.ListRegistries.ListRegistries
instance Control.DeepSeq.NFData Network.AWS.Glue.ListRegistries.ListRegistries
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.ListRegistries.ListRegistries
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.ListRegistries.ListRegistries
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.ListRegistries.ListRegistries
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.ListRegistries.ListRegistries


-- | Retrieves a sortable, filterable list of existing Glue machine
--   learning transforms in this Amazon Web Services account, or the
--   resources with the specified tag. This operation takes the optional
--   <tt>Tags</tt> field, which you can use as a filter of the responses so
--   that tagged resources can be retrieved as a group. If you choose to
--   use tag filtering, only resources with the tags are retrieved.
module Network.AWS.Glue.ListMLTransforms

-- | <i>See:</i> <a>newListMLTransforms</a> smart constructor.
data ListMLTransforms
ListMLTransforms' :: Maybe Text -> Maybe TransformSortCriteria -> Maybe TransformFilterCriteria -> Maybe Natural -> Maybe (HashMap Text Text) -> ListMLTransforms

-- | A continuation token, if this is a continuation request.
[$sel:nextToken:ListMLTransforms'] :: ListMLTransforms -> Maybe Text

-- | A <tt>TransformSortCriteria</tt> used to sort the machine learning
--   transforms.
[$sel:sort:ListMLTransforms'] :: ListMLTransforms -> Maybe TransformSortCriteria

-- | A <tt>TransformFilterCriteria</tt> used to filter the machine learning
--   transforms.
[$sel:filter':ListMLTransforms'] :: ListMLTransforms -> Maybe TransformFilterCriteria

-- | The maximum size of a list to return.
[$sel:maxResults:ListMLTransforms'] :: ListMLTransforms -> Maybe Natural

-- | Specifies to return only these tagged resources.
[$sel:tags:ListMLTransforms'] :: ListMLTransforms -> Maybe (HashMap Text Text)

-- | Create a value of <a>ListMLTransforms</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMLTransforms'</a>,
--   <a>listMLTransforms_nextToken</a> - A continuation token, if this is a
--   continuation request.
--   
--   <a>$sel:sort:ListMLTransforms'</a>, <a>listMLTransforms_sort</a> - A
--   <tt>TransformSortCriteria</tt> used to sort the machine learning
--   transforms.
--   
--   <a>$sel:filter':ListMLTransforms'</a>, <a>listMLTransforms_filter</a>
--   - A <tt>TransformFilterCriteria</tt> used to filter the machine
--   learning transforms.
--   
--   <a>$sel:maxResults:ListMLTransforms'</a>,
--   <a>listMLTransforms_maxResults</a> - The maximum size of a list to
--   return.
--   
--   <a>$sel:tags:ListMLTransforms'</a>, <a>listMLTransforms_tags</a> -
--   Specifies to return only these tagged resources.
newListMLTransforms :: ListMLTransforms

-- | A continuation token, if this is a continuation request.
listMLTransforms_nextToken :: Lens' ListMLTransforms (Maybe Text)

-- | A <tt>TransformSortCriteria</tt> used to sort the machine learning
--   transforms.
listMLTransforms_sort :: Lens' ListMLTransforms (Maybe TransformSortCriteria)

-- | A <tt>TransformFilterCriteria</tt> used to filter the machine learning
--   transforms.
listMLTransforms_filter :: Lens' ListMLTransforms (Maybe TransformFilterCriteria)

-- | The maximum size of a list to return.
listMLTransforms_maxResults :: Lens' ListMLTransforms (Maybe Natural)

-- | Specifies to return only these tagged resources.
listMLTransforms_tags :: Lens' ListMLTransforms (Maybe (HashMap Text Text))

-- | <i>See:</i> <a>newListMLTransformsResponse</a> smart constructor.
data ListMLTransformsResponse
ListMLTransformsResponse' :: Maybe Text -> Int -> [Text] -> ListMLTransformsResponse

-- | A continuation token, if the returned list does not contain the last
--   metric available.
[$sel:nextToken:ListMLTransformsResponse'] :: ListMLTransformsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListMLTransformsResponse'] :: ListMLTransformsResponse -> Int

-- | The identifiers of all the machine learning transforms in the account,
--   or the machine learning transforms with the specified tags.
[$sel:transformIds:ListMLTransformsResponse'] :: ListMLTransformsResponse -> [Text]

-- | Create a value of <a>ListMLTransformsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMLTransforms'</a>,
--   <a>listMLTransformsResponse_nextToken</a> - A continuation token, if
--   the returned list does not contain the last metric available.
--   
--   <a>$sel:httpStatus:ListMLTransformsResponse'</a>,
--   <a>listMLTransformsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:transformIds:ListMLTransformsResponse'</a>,
--   <a>listMLTransformsResponse_transformIds</a> - The identifiers of all
--   the machine learning transforms in the account, or the machine
--   learning transforms with the specified tags.
newListMLTransformsResponse :: Int -> ListMLTransformsResponse

-- | A continuation token, if the returned list does not contain the last
--   metric available.
listMLTransformsResponse_nextToken :: Lens' ListMLTransformsResponse (Maybe Text)

-- | The response's http status code.
listMLTransformsResponse_httpStatus :: Lens' ListMLTransformsResponse Int

-- | The identifiers of all the machine learning transforms in the account,
--   or the machine learning transforms with the specified tags.
listMLTransformsResponse_transformIds :: Lens' ListMLTransformsResponse [Text]
instance GHC.Generics.Generic Network.AWS.Glue.ListMLTransforms.ListMLTransforms
instance GHC.Show.Show Network.AWS.Glue.ListMLTransforms.ListMLTransforms
instance GHC.Read.Read Network.AWS.Glue.ListMLTransforms.ListMLTransforms
instance GHC.Classes.Eq Network.AWS.Glue.ListMLTransforms.ListMLTransforms
instance GHC.Generics.Generic Network.AWS.Glue.ListMLTransforms.ListMLTransformsResponse
instance GHC.Show.Show Network.AWS.Glue.ListMLTransforms.ListMLTransformsResponse
instance GHC.Read.Read Network.AWS.Glue.ListMLTransforms.ListMLTransformsResponse
instance GHC.Classes.Eq Network.AWS.Glue.ListMLTransforms.ListMLTransformsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.ListMLTransforms.ListMLTransforms
instance Control.DeepSeq.NFData Network.AWS.Glue.ListMLTransforms.ListMLTransformsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.ListMLTransforms.ListMLTransforms
instance Control.DeepSeq.NFData Network.AWS.Glue.ListMLTransforms.ListMLTransforms
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.ListMLTransforms.ListMLTransforms
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.ListMLTransforms.ListMLTransforms
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.ListMLTransforms.ListMLTransforms
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.ListMLTransforms.ListMLTransforms


-- | Retrieves the names of all job resources in this Amazon Web Services
--   account, or the resources with the specified tag. This operation
--   allows you to see which resources are available in your account, and
--   their names.
--   
--   This operation takes the optional <tt>Tags</tt> field, which you can
--   use as a filter on the response so that tagged resources can be
--   retrieved as a group. If you choose to use tags filtering, only
--   resources with the tag are retrieved.
module Network.AWS.Glue.ListJobs

-- | <i>See:</i> <a>newListJobs</a> smart constructor.
data ListJobs
ListJobs' :: Maybe Text -> Maybe Natural -> Maybe (HashMap Text Text) -> ListJobs

-- | A continuation token, if this is a continuation request.
[$sel:nextToken:ListJobs'] :: ListJobs -> Maybe Text

-- | The maximum size of a list to return.
[$sel:maxResults:ListJobs'] :: ListJobs -> Maybe Natural

-- | Specifies to return only these tagged resources.
[$sel:tags:ListJobs'] :: ListJobs -> Maybe (HashMap Text Text)

-- | Create a value of <a>ListJobs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobs_nextToken</a> - A
--   continuation token, if this is a continuation request.
--   
--   <a>$sel:maxResults:ListJobs'</a>, <a>listJobs_maxResults</a> - The
--   maximum size of a list to return.
--   
--   <a>$sel:tags:ListJobs'</a>, <a>listJobs_tags</a> - Specifies to return
--   only these tagged resources.
newListJobs :: ListJobs

-- | A continuation token, if this is a continuation request.
listJobs_nextToken :: Lens' ListJobs (Maybe Text)

-- | The maximum size of a list to return.
listJobs_maxResults :: Lens' ListJobs (Maybe Natural)

-- | Specifies to return only these tagged resources.
listJobs_tags :: Lens' ListJobs (Maybe (HashMap Text Text))

-- | <i>See:</i> <a>newListJobsResponse</a> smart constructor.
data ListJobsResponse
ListJobsResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListJobsResponse

-- | A continuation token, if the returned list does not contain the last
--   metric available.
[$sel:nextToken:ListJobsResponse'] :: ListJobsResponse -> Maybe Text

-- | The names of all jobs in the account, or the jobs with the specified
--   tags.
[$sel:jobNames:ListJobsResponse'] :: ListJobsResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListJobsResponse'] :: ListJobsResponse -> Int

-- | Create a value of <a>ListJobsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobsResponse_nextToken</a> - A
--   continuation token, if the returned list does not contain the last
--   metric available.
--   
--   <a>$sel:jobNames:ListJobsResponse'</a>,
--   <a>listJobsResponse_jobNames</a> - The names of all jobs in the
--   account, or the jobs with the specified tags.
--   
--   <a>$sel:httpStatus:ListJobsResponse'</a>,
--   <a>listJobsResponse_httpStatus</a> - The response's http status code.
newListJobsResponse :: Int -> ListJobsResponse

-- | A continuation token, if the returned list does not contain the last
--   metric available.
listJobsResponse_nextToken :: Lens' ListJobsResponse (Maybe Text)

-- | The names of all jobs in the account, or the jobs with the specified
--   tags.
listJobsResponse_jobNames :: Lens' ListJobsResponse (Maybe [Text])

-- | The response's http status code.
listJobsResponse_httpStatus :: Lens' ListJobsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.ListJobs.ListJobs
instance GHC.Show.Show Network.AWS.Glue.ListJobs.ListJobs
instance GHC.Read.Read Network.AWS.Glue.ListJobs.ListJobs
instance GHC.Classes.Eq Network.AWS.Glue.ListJobs.ListJobs
instance GHC.Generics.Generic Network.AWS.Glue.ListJobs.ListJobsResponse
instance GHC.Show.Show Network.AWS.Glue.ListJobs.ListJobsResponse
instance GHC.Read.Read Network.AWS.Glue.ListJobs.ListJobsResponse
instance GHC.Classes.Eq Network.AWS.Glue.ListJobs.ListJobsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.ListJobs.ListJobs
instance Control.DeepSeq.NFData Network.AWS.Glue.ListJobs.ListJobsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.ListJobs.ListJobs
instance Control.DeepSeq.NFData Network.AWS.Glue.ListJobs.ListJobs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.ListJobs.ListJobs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.ListJobs.ListJobs
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.ListJobs.ListJobs
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.ListJobs.ListJobs


-- | Retrieves the names of all <tt>DevEndpoint</tt> resources in this
--   Amazon Web Services account, or the resources with the specified tag.
--   This operation allows you to see which resources are available in your
--   account, and their names.
--   
--   This operation takes the optional <tt>Tags</tt> field, which you can
--   use as a filter on the response so that tagged resources can be
--   retrieved as a group. If you choose to use tags filtering, only
--   resources with the tag are retrieved.
module Network.AWS.Glue.ListDevEndpoints

-- | <i>See:</i> <a>newListDevEndpoints</a> smart constructor.
data ListDevEndpoints
ListDevEndpoints' :: Maybe Text -> Maybe Natural -> Maybe (HashMap Text Text) -> ListDevEndpoints

-- | A continuation token, if this is a continuation request.
[$sel:nextToken:ListDevEndpoints'] :: ListDevEndpoints -> Maybe Text

-- | The maximum size of a list to return.
[$sel:maxResults:ListDevEndpoints'] :: ListDevEndpoints -> Maybe Natural

-- | Specifies to return only these tagged resources.
[$sel:tags:ListDevEndpoints'] :: ListDevEndpoints -> Maybe (HashMap Text Text)

-- | Create a value of <a>ListDevEndpoints</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevEndpoints'</a>,
--   <a>listDevEndpoints_nextToken</a> - A continuation token, if this is a
--   continuation request.
--   
--   <a>$sel:maxResults:ListDevEndpoints'</a>,
--   <a>listDevEndpoints_maxResults</a> - The maximum size of a list to
--   return.
--   
--   <a>$sel:tags:ListDevEndpoints'</a>, <a>listDevEndpoints_tags</a> -
--   Specifies to return only these tagged resources.
newListDevEndpoints :: ListDevEndpoints

-- | A continuation token, if this is a continuation request.
listDevEndpoints_nextToken :: Lens' ListDevEndpoints (Maybe Text)

-- | The maximum size of a list to return.
listDevEndpoints_maxResults :: Lens' ListDevEndpoints (Maybe Natural)

-- | Specifies to return only these tagged resources.
listDevEndpoints_tags :: Lens' ListDevEndpoints (Maybe (HashMap Text Text))

-- | <i>See:</i> <a>newListDevEndpointsResponse</a> smart constructor.
data ListDevEndpointsResponse
ListDevEndpointsResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListDevEndpointsResponse

-- | A continuation token, if the returned list does not contain the last
--   metric available.
[$sel:nextToken:ListDevEndpointsResponse'] :: ListDevEndpointsResponse -> Maybe Text

-- | The names of all the <tt>DevEndpoint</tt>s in the account, or the
--   <tt>DevEndpoint</tt>s with the specified tags.
[$sel:devEndpointNames:ListDevEndpointsResponse'] :: ListDevEndpointsResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListDevEndpointsResponse'] :: ListDevEndpointsResponse -> Int

-- | Create a value of <a>ListDevEndpointsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevEndpoints'</a>,
--   <a>listDevEndpointsResponse_nextToken</a> - A continuation token, if
--   the returned list does not contain the last metric available.
--   
--   <a>$sel:devEndpointNames:ListDevEndpointsResponse'</a>,
--   <a>listDevEndpointsResponse_devEndpointNames</a> - The names of all
--   the <tt>DevEndpoint</tt>s in the account, or the <tt>DevEndpoint</tt>s
--   with the specified tags.
--   
--   <a>$sel:httpStatus:ListDevEndpointsResponse'</a>,
--   <a>listDevEndpointsResponse_httpStatus</a> - The response's http
--   status code.
newListDevEndpointsResponse :: Int -> ListDevEndpointsResponse

-- | A continuation token, if the returned list does not contain the last
--   metric available.
listDevEndpointsResponse_nextToken :: Lens' ListDevEndpointsResponse (Maybe Text)

-- | The names of all the <tt>DevEndpoint</tt>s in the account, or the
--   <tt>DevEndpoint</tt>s with the specified tags.
listDevEndpointsResponse_devEndpointNames :: Lens' ListDevEndpointsResponse (Maybe [Text])

-- | The response's http status code.
listDevEndpointsResponse_httpStatus :: Lens' ListDevEndpointsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.ListDevEndpoints.ListDevEndpoints
instance GHC.Show.Show Network.AWS.Glue.ListDevEndpoints.ListDevEndpoints
instance GHC.Read.Read Network.AWS.Glue.ListDevEndpoints.ListDevEndpoints
instance GHC.Classes.Eq Network.AWS.Glue.ListDevEndpoints.ListDevEndpoints
instance GHC.Generics.Generic Network.AWS.Glue.ListDevEndpoints.ListDevEndpointsResponse
instance GHC.Show.Show Network.AWS.Glue.ListDevEndpoints.ListDevEndpointsResponse
instance GHC.Read.Read Network.AWS.Glue.ListDevEndpoints.ListDevEndpointsResponse
instance GHC.Classes.Eq Network.AWS.Glue.ListDevEndpoints.ListDevEndpointsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.ListDevEndpoints.ListDevEndpoints
instance Control.DeepSeq.NFData Network.AWS.Glue.ListDevEndpoints.ListDevEndpointsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.ListDevEndpoints.ListDevEndpoints
instance Control.DeepSeq.NFData Network.AWS.Glue.ListDevEndpoints.ListDevEndpoints
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.ListDevEndpoints.ListDevEndpoints
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.ListDevEndpoints.ListDevEndpoints
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.ListDevEndpoints.ListDevEndpoints
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.ListDevEndpoints.ListDevEndpoints


-- | Retrieves the names of all crawler resources in this Amazon Web
--   Services account, or the resources with the specified tag. This
--   operation allows you to see which resources are available in your
--   account, and their names.
--   
--   This operation takes the optional <tt>Tags</tt> field, which you can
--   use as a filter on the response so that tagged resources can be
--   retrieved as a group. If you choose to use tags filtering, only
--   resources with the tag are retrieved.
module Network.AWS.Glue.ListCrawlers

-- | <i>See:</i> <a>newListCrawlers</a> smart constructor.
data ListCrawlers
ListCrawlers' :: Maybe Text -> Maybe Natural -> Maybe (HashMap Text Text) -> ListCrawlers

-- | A continuation token, if this is a continuation request.
[$sel:nextToken:ListCrawlers'] :: ListCrawlers -> Maybe Text

-- | The maximum size of a list to return.
[$sel:maxResults:ListCrawlers'] :: ListCrawlers -> Maybe Natural

-- | Specifies to return only these tagged resources.
[$sel:tags:ListCrawlers'] :: ListCrawlers -> Maybe (HashMap Text Text)

-- | Create a value of <a>ListCrawlers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListCrawlers'</a>, <a>listCrawlers_nextToken</a> - A
--   continuation token, if this is a continuation request.
--   
--   <a>$sel:maxResults:ListCrawlers'</a>, <a>listCrawlers_maxResults</a> -
--   The maximum size of a list to return.
--   
--   <a>$sel:tags:ListCrawlers'</a>, <a>listCrawlers_tags</a> - Specifies
--   to return only these tagged resources.
newListCrawlers :: ListCrawlers

-- | A continuation token, if this is a continuation request.
listCrawlers_nextToken :: Lens' ListCrawlers (Maybe Text)

-- | The maximum size of a list to return.
listCrawlers_maxResults :: Lens' ListCrawlers (Maybe Natural)

-- | Specifies to return only these tagged resources.
listCrawlers_tags :: Lens' ListCrawlers (Maybe (HashMap Text Text))

-- | <i>See:</i> <a>newListCrawlersResponse</a> smart constructor.
data ListCrawlersResponse
ListCrawlersResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListCrawlersResponse

-- | A continuation token, if the returned list does not contain the last
--   metric available.
[$sel:nextToken:ListCrawlersResponse'] :: ListCrawlersResponse -> Maybe Text

-- | The names of all crawlers in the account, or the crawlers with the
--   specified tags.
[$sel:crawlerNames:ListCrawlersResponse'] :: ListCrawlersResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListCrawlersResponse'] :: ListCrawlersResponse -> Int

-- | Create a value of <a>ListCrawlersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListCrawlers'</a>,
--   <a>listCrawlersResponse_nextToken</a> - A continuation token, if the
--   returned list does not contain the last metric available.
--   
--   <a>$sel:crawlerNames:ListCrawlersResponse'</a>,
--   <a>listCrawlersResponse_crawlerNames</a> - The names of all crawlers
--   in the account, or the crawlers with the specified tags.
--   
--   <a>$sel:httpStatus:ListCrawlersResponse'</a>,
--   <a>listCrawlersResponse_httpStatus</a> - The response's http status
--   code.
newListCrawlersResponse :: Int -> ListCrawlersResponse

-- | A continuation token, if the returned list does not contain the last
--   metric available.
listCrawlersResponse_nextToken :: Lens' ListCrawlersResponse (Maybe Text)

-- | The names of all crawlers in the account, or the crawlers with the
--   specified tags.
listCrawlersResponse_crawlerNames :: Lens' ListCrawlersResponse (Maybe [Text])

-- | The response's http status code.
listCrawlersResponse_httpStatus :: Lens' ListCrawlersResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.ListCrawlers.ListCrawlers
instance GHC.Show.Show Network.AWS.Glue.ListCrawlers.ListCrawlers
instance GHC.Read.Read Network.AWS.Glue.ListCrawlers.ListCrawlers
instance GHC.Classes.Eq Network.AWS.Glue.ListCrawlers.ListCrawlers
instance GHC.Generics.Generic Network.AWS.Glue.ListCrawlers.ListCrawlersResponse
instance GHC.Show.Show Network.AWS.Glue.ListCrawlers.ListCrawlersResponse
instance GHC.Read.Read Network.AWS.Glue.ListCrawlers.ListCrawlersResponse
instance GHC.Classes.Eq Network.AWS.Glue.ListCrawlers.ListCrawlersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.ListCrawlers.ListCrawlers
instance Control.DeepSeq.NFData Network.AWS.Glue.ListCrawlers.ListCrawlersResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.ListCrawlers.ListCrawlers
instance Control.DeepSeq.NFData Network.AWS.Glue.ListCrawlers.ListCrawlers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.ListCrawlers.ListCrawlers
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.ListCrawlers.ListCrawlers
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.ListCrawlers.ListCrawlers
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.ListCrawlers.ListCrawlers


-- | Lists all the blueprint names in an account.
module Network.AWS.Glue.ListBlueprints

-- | <i>See:</i> <a>newListBlueprints</a> smart constructor.
data ListBlueprints
ListBlueprints' :: Maybe Text -> Maybe Natural -> Maybe (HashMap Text Text) -> ListBlueprints

-- | A continuation token, if this is a continuation request.
[$sel:nextToken:ListBlueprints'] :: ListBlueprints -> Maybe Text

-- | The maximum size of a list to return.
[$sel:maxResults:ListBlueprints'] :: ListBlueprints -> Maybe Natural

-- | Filters the list by an Amazon Web Services resource tag.
[$sel:tags:ListBlueprints'] :: ListBlueprints -> Maybe (HashMap Text Text)

-- | Create a value of <a>ListBlueprints</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListBlueprints'</a>, <a>listBlueprints_nextToken</a>
--   - A continuation token, if this is a continuation request.
--   
--   <a>$sel:maxResults:ListBlueprints'</a>,
--   <a>listBlueprints_maxResults</a> - The maximum size of a list to
--   return.
--   
--   <a>$sel:tags:ListBlueprints'</a>, <a>listBlueprints_tags</a> - Filters
--   the list by an Amazon Web Services resource tag.
newListBlueprints :: ListBlueprints

-- | A continuation token, if this is a continuation request.
listBlueprints_nextToken :: Lens' ListBlueprints (Maybe Text)

-- | The maximum size of a list to return.
listBlueprints_maxResults :: Lens' ListBlueprints (Maybe Natural)

-- | Filters the list by an Amazon Web Services resource tag.
listBlueprints_tags :: Lens' ListBlueprints (Maybe (HashMap Text Text))

-- | <i>See:</i> <a>newListBlueprintsResponse</a> smart constructor.
data ListBlueprintsResponse
ListBlueprintsResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListBlueprintsResponse

-- | List of names of blueprints in the account.
[$sel:blueprints:ListBlueprintsResponse'] :: ListBlueprintsResponse -> Maybe [Text]

-- | A continuation token, if not all blueprint names have been returned.
[$sel:nextToken:ListBlueprintsResponse'] :: ListBlueprintsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListBlueprintsResponse'] :: ListBlueprintsResponse -> Int

-- | Create a value of <a>ListBlueprintsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blueprints:ListBlueprintsResponse'</a>,
--   <a>listBlueprintsResponse_blueprints</a> - List of names of blueprints
--   in the account.
--   
--   <a>$sel:nextToken:ListBlueprints'</a>,
--   <a>listBlueprintsResponse_nextToken</a> - A continuation token, if not
--   all blueprint names have been returned.
--   
--   <a>$sel:httpStatus:ListBlueprintsResponse'</a>,
--   <a>listBlueprintsResponse_httpStatus</a> - The response's http status
--   code.
newListBlueprintsResponse :: Int -> ListBlueprintsResponse

-- | List of names of blueprints in the account.
listBlueprintsResponse_blueprints :: Lens' ListBlueprintsResponse (Maybe [Text])

-- | A continuation token, if not all blueprint names have been returned.
listBlueprintsResponse_nextToken :: Lens' ListBlueprintsResponse (Maybe Text)

-- | The response's http status code.
listBlueprintsResponse_httpStatus :: Lens' ListBlueprintsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.ListBlueprints.ListBlueprints
instance GHC.Show.Show Network.AWS.Glue.ListBlueprints.ListBlueprints
instance GHC.Read.Read Network.AWS.Glue.ListBlueprints.ListBlueprints
instance GHC.Classes.Eq Network.AWS.Glue.ListBlueprints.ListBlueprints
instance GHC.Generics.Generic Network.AWS.Glue.ListBlueprints.ListBlueprintsResponse
instance GHC.Show.Show Network.AWS.Glue.ListBlueprints.ListBlueprintsResponse
instance GHC.Read.Read Network.AWS.Glue.ListBlueprints.ListBlueprintsResponse
instance GHC.Classes.Eq Network.AWS.Glue.ListBlueprints.ListBlueprintsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.ListBlueprints.ListBlueprints
instance Control.DeepSeq.NFData Network.AWS.Glue.ListBlueprints.ListBlueprintsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.ListBlueprints.ListBlueprints
instance Control.DeepSeq.NFData Network.AWS.Glue.ListBlueprints.ListBlueprints
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.ListBlueprints.ListBlueprints
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.ListBlueprints.ListBlueprints
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.ListBlueprints.ListBlueprints
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.ListBlueprints.ListBlueprints


-- | Imports an existing Amazon Athena Data Catalog to Glue.
module Network.AWS.Glue.ImportCatalogToGlue

-- | <i>See:</i> <a>newImportCatalogToGlue</a> smart constructor.
data ImportCatalogToGlue
ImportCatalogToGlue' :: Maybe Text -> ImportCatalogToGlue

-- | The ID of the catalog to import. Currently, this should be the Amazon
--   Web Services account ID.
[$sel:catalogId:ImportCatalogToGlue'] :: ImportCatalogToGlue -> Maybe Text

-- | Create a value of <a>ImportCatalogToGlue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:ImportCatalogToGlue'</a>,
--   <a>importCatalogToGlue_catalogId</a> - The ID of the catalog to
--   import. Currently, this should be the Amazon Web Services account ID.
newImportCatalogToGlue :: ImportCatalogToGlue

-- | The ID of the catalog to import. Currently, this should be the Amazon
--   Web Services account ID.
importCatalogToGlue_catalogId :: Lens' ImportCatalogToGlue (Maybe Text)

-- | <i>See:</i> <a>newImportCatalogToGlueResponse</a> smart constructor.
data ImportCatalogToGlueResponse
ImportCatalogToGlueResponse' :: Int -> ImportCatalogToGlueResponse

-- | The response's http status code.
[$sel:httpStatus:ImportCatalogToGlueResponse'] :: ImportCatalogToGlueResponse -> Int

-- | Create a value of <a>ImportCatalogToGlueResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ImportCatalogToGlueResponse'</a>,
--   <a>importCatalogToGlueResponse_httpStatus</a> - The response's http
--   status code.
newImportCatalogToGlueResponse :: Int -> ImportCatalogToGlueResponse

-- | The response's http status code.
importCatalogToGlueResponse_httpStatus :: Lens' ImportCatalogToGlueResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.ImportCatalogToGlue.ImportCatalogToGlue
instance GHC.Show.Show Network.AWS.Glue.ImportCatalogToGlue.ImportCatalogToGlue
instance GHC.Read.Read Network.AWS.Glue.ImportCatalogToGlue.ImportCatalogToGlue
instance GHC.Classes.Eq Network.AWS.Glue.ImportCatalogToGlue.ImportCatalogToGlue
instance GHC.Generics.Generic Network.AWS.Glue.ImportCatalogToGlue.ImportCatalogToGlueResponse
instance GHC.Show.Show Network.AWS.Glue.ImportCatalogToGlue.ImportCatalogToGlueResponse
instance GHC.Read.Read Network.AWS.Glue.ImportCatalogToGlue.ImportCatalogToGlueResponse
instance GHC.Classes.Eq Network.AWS.Glue.ImportCatalogToGlue.ImportCatalogToGlueResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.ImportCatalogToGlue.ImportCatalogToGlue
instance Control.DeepSeq.NFData Network.AWS.Glue.ImportCatalogToGlue.ImportCatalogToGlueResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.ImportCatalogToGlue.ImportCatalogToGlue
instance Control.DeepSeq.NFData Network.AWS.Glue.ImportCatalogToGlue.ImportCatalogToGlue
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.ImportCatalogToGlue.ImportCatalogToGlue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.ImportCatalogToGlue.ImportCatalogToGlue
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.ImportCatalogToGlue.ImportCatalogToGlue
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.ImportCatalogToGlue.ImportCatalogToGlue


-- | Retrieves metadata for all runs of a given workflow.
module Network.AWS.Glue.GetWorkflowRuns

-- | <i>See:</i> <a>newGetWorkflowRuns</a> smart constructor.
data GetWorkflowRuns
GetWorkflowRuns' :: Maybe Bool -> Maybe Text -> Maybe Natural -> Text -> GetWorkflowRuns

-- | Specifies whether to include the workflow graph in response or not.
[$sel:includeGraph:GetWorkflowRuns'] :: GetWorkflowRuns -> Maybe Bool

-- | The maximum size of the response.
[$sel:nextToken:GetWorkflowRuns'] :: GetWorkflowRuns -> Maybe Text

-- | The maximum number of workflow runs to be included in the response.
[$sel:maxResults:GetWorkflowRuns'] :: GetWorkflowRuns -> Maybe Natural

-- | Name of the workflow whose metadata of runs should be returned.
[$sel:name:GetWorkflowRuns'] :: GetWorkflowRuns -> Text

-- | Create a value of <a>GetWorkflowRuns</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeGraph:GetWorkflowRuns'</a>,
--   <a>getWorkflowRuns_includeGraph</a> - Specifies whether to include the
--   workflow graph in response or not.
--   
--   <a>$sel:nextToken:GetWorkflowRuns'</a>,
--   <a>getWorkflowRuns_nextToken</a> - The maximum size of the response.
--   
--   <a>$sel:maxResults:GetWorkflowRuns'</a>,
--   <a>getWorkflowRuns_maxResults</a> - The maximum number of workflow
--   runs to be included in the response.
--   
--   <a>$sel:name:GetWorkflowRuns'</a>, <a>getWorkflowRuns_name</a> - Name
--   of the workflow whose metadata of runs should be returned.
newGetWorkflowRuns :: Text -> GetWorkflowRuns

-- | Specifies whether to include the workflow graph in response or not.
getWorkflowRuns_includeGraph :: Lens' GetWorkflowRuns (Maybe Bool)

-- | The maximum size of the response.
getWorkflowRuns_nextToken :: Lens' GetWorkflowRuns (Maybe Text)

-- | The maximum number of workflow runs to be included in the response.
getWorkflowRuns_maxResults :: Lens' GetWorkflowRuns (Maybe Natural)

-- | Name of the workflow whose metadata of runs should be returned.
getWorkflowRuns_name :: Lens' GetWorkflowRuns Text

-- | <i>See:</i> <a>newGetWorkflowRunsResponse</a> smart constructor.
data GetWorkflowRunsResponse
GetWorkflowRunsResponse' :: Maybe (NonEmpty WorkflowRun) -> Maybe Text -> Int -> GetWorkflowRunsResponse

-- | A list of workflow run metadata objects.
[$sel:runs:GetWorkflowRunsResponse'] :: GetWorkflowRunsResponse -> Maybe (NonEmpty WorkflowRun)

-- | A continuation token, if not all requested workflow runs have been
--   returned.
[$sel:nextToken:GetWorkflowRunsResponse'] :: GetWorkflowRunsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetWorkflowRunsResponse'] :: GetWorkflowRunsResponse -> Int

-- | Create a value of <a>GetWorkflowRunsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runs:GetWorkflowRunsResponse'</a>,
--   <a>getWorkflowRunsResponse_runs</a> - A list of workflow run metadata
--   objects.
--   
--   <a>$sel:nextToken:GetWorkflowRuns'</a>,
--   <a>getWorkflowRunsResponse_nextToken</a> - A continuation token, if
--   not all requested workflow runs have been returned.
--   
--   <a>$sel:httpStatus:GetWorkflowRunsResponse'</a>,
--   <a>getWorkflowRunsResponse_httpStatus</a> - The response's http status
--   code.
newGetWorkflowRunsResponse :: Int -> GetWorkflowRunsResponse

-- | A list of workflow run metadata objects.
getWorkflowRunsResponse_runs :: Lens' GetWorkflowRunsResponse (Maybe (NonEmpty WorkflowRun))

-- | A continuation token, if not all requested workflow runs have been
--   returned.
getWorkflowRunsResponse_nextToken :: Lens' GetWorkflowRunsResponse (Maybe Text)

-- | The response's http status code.
getWorkflowRunsResponse_httpStatus :: Lens' GetWorkflowRunsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetWorkflowRuns.GetWorkflowRuns
instance GHC.Show.Show Network.AWS.Glue.GetWorkflowRuns.GetWorkflowRuns
instance GHC.Read.Read Network.AWS.Glue.GetWorkflowRuns.GetWorkflowRuns
instance GHC.Classes.Eq Network.AWS.Glue.GetWorkflowRuns.GetWorkflowRuns
instance GHC.Generics.Generic Network.AWS.Glue.GetWorkflowRuns.GetWorkflowRunsResponse
instance GHC.Show.Show Network.AWS.Glue.GetWorkflowRuns.GetWorkflowRunsResponse
instance GHC.Read.Read Network.AWS.Glue.GetWorkflowRuns.GetWorkflowRunsResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetWorkflowRuns.GetWorkflowRunsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetWorkflowRuns.GetWorkflowRuns
instance Control.DeepSeq.NFData Network.AWS.Glue.GetWorkflowRuns.GetWorkflowRunsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetWorkflowRuns.GetWorkflowRuns
instance Control.DeepSeq.NFData Network.AWS.Glue.GetWorkflowRuns.GetWorkflowRuns
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetWorkflowRuns.GetWorkflowRuns
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetWorkflowRuns.GetWorkflowRuns
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetWorkflowRuns.GetWorkflowRuns
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetWorkflowRuns.GetWorkflowRuns


-- | Retrieves the workflow run properties which were set during the run.
module Network.AWS.Glue.GetWorkflowRunProperties

-- | <i>See:</i> <a>newGetWorkflowRunProperties</a> smart constructor.
data GetWorkflowRunProperties
GetWorkflowRunProperties' :: Text -> Text -> GetWorkflowRunProperties

-- | Name of the workflow which was run.
[$sel:name:GetWorkflowRunProperties'] :: GetWorkflowRunProperties -> Text

-- | The ID of the workflow run whose run properties should be returned.
[$sel:runId:GetWorkflowRunProperties'] :: GetWorkflowRunProperties -> Text

-- | Create a value of <a>GetWorkflowRunProperties</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetWorkflowRunProperties'</a>,
--   <a>getWorkflowRunProperties_name</a> - Name of the workflow which was
--   run.
--   
--   <a>$sel:runId:GetWorkflowRunProperties'</a>,
--   <a>getWorkflowRunProperties_runId</a> - The ID of the workflow run
--   whose run properties should be returned.
newGetWorkflowRunProperties :: Text -> Text -> GetWorkflowRunProperties

-- | Name of the workflow which was run.
getWorkflowRunProperties_name :: Lens' GetWorkflowRunProperties Text

-- | The ID of the workflow run whose run properties should be returned.
getWorkflowRunProperties_runId :: Lens' GetWorkflowRunProperties Text

-- | <i>See:</i> <a>newGetWorkflowRunPropertiesResponse</a> smart
--   constructor.
data GetWorkflowRunPropertiesResponse
GetWorkflowRunPropertiesResponse' :: Maybe (HashMap Text Text) -> Int -> GetWorkflowRunPropertiesResponse

-- | The workflow run properties which were set during the specified run.
[$sel:runProperties:GetWorkflowRunPropertiesResponse'] :: GetWorkflowRunPropertiesResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetWorkflowRunPropertiesResponse'] :: GetWorkflowRunPropertiesResponse -> Int

-- | Create a value of <a>GetWorkflowRunPropertiesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runProperties:GetWorkflowRunPropertiesResponse'</a>,
--   <a>getWorkflowRunPropertiesResponse_runProperties</a> - The workflow
--   run properties which were set during the specified run.
--   
--   <a>$sel:httpStatus:GetWorkflowRunPropertiesResponse'</a>,
--   <a>getWorkflowRunPropertiesResponse_httpStatus</a> - The response's
--   http status code.
newGetWorkflowRunPropertiesResponse :: Int -> GetWorkflowRunPropertiesResponse

-- | The workflow run properties which were set during the specified run.
getWorkflowRunPropertiesResponse_runProperties :: Lens' GetWorkflowRunPropertiesResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getWorkflowRunPropertiesResponse_httpStatus :: Lens' GetWorkflowRunPropertiesResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetWorkflowRunProperties.GetWorkflowRunProperties
instance GHC.Show.Show Network.AWS.Glue.GetWorkflowRunProperties.GetWorkflowRunProperties
instance GHC.Read.Read Network.AWS.Glue.GetWorkflowRunProperties.GetWorkflowRunProperties
instance GHC.Classes.Eq Network.AWS.Glue.GetWorkflowRunProperties.GetWorkflowRunProperties
instance GHC.Generics.Generic Network.AWS.Glue.GetWorkflowRunProperties.GetWorkflowRunPropertiesResponse
instance GHC.Show.Show Network.AWS.Glue.GetWorkflowRunProperties.GetWorkflowRunPropertiesResponse
instance GHC.Read.Read Network.AWS.Glue.GetWorkflowRunProperties.GetWorkflowRunPropertiesResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetWorkflowRunProperties.GetWorkflowRunPropertiesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetWorkflowRunProperties.GetWorkflowRunProperties
instance Control.DeepSeq.NFData Network.AWS.Glue.GetWorkflowRunProperties.GetWorkflowRunPropertiesResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetWorkflowRunProperties.GetWorkflowRunProperties
instance Control.DeepSeq.NFData Network.AWS.Glue.GetWorkflowRunProperties.GetWorkflowRunProperties
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetWorkflowRunProperties.GetWorkflowRunProperties
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetWorkflowRunProperties.GetWorkflowRunProperties
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetWorkflowRunProperties.GetWorkflowRunProperties
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetWorkflowRunProperties.GetWorkflowRunProperties


-- | Retrieves the metadata for a given workflow run.
module Network.AWS.Glue.GetWorkflowRun

-- | <i>See:</i> <a>newGetWorkflowRun</a> smart constructor.
data GetWorkflowRun
GetWorkflowRun' :: Maybe Bool -> Text -> Text -> GetWorkflowRun

-- | Specifies whether to include the workflow graph in response or not.
[$sel:includeGraph:GetWorkflowRun'] :: GetWorkflowRun -> Maybe Bool

-- | Name of the workflow being run.
[$sel:name:GetWorkflowRun'] :: GetWorkflowRun -> Text

-- | The ID of the workflow run.
[$sel:runId:GetWorkflowRun'] :: GetWorkflowRun -> Text

-- | Create a value of <a>GetWorkflowRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeGraph:GetWorkflowRun'</a>,
--   <a>getWorkflowRun_includeGraph</a> - Specifies whether to include the
--   workflow graph in response or not.
--   
--   <a>$sel:name:GetWorkflowRun'</a>, <a>getWorkflowRun_name</a> - Name of
--   the workflow being run.
--   
--   <a>$sel:runId:GetWorkflowRun'</a>, <a>getWorkflowRun_runId</a> - The
--   ID of the workflow run.
newGetWorkflowRun :: Text -> Text -> GetWorkflowRun

-- | Specifies whether to include the workflow graph in response or not.
getWorkflowRun_includeGraph :: Lens' GetWorkflowRun (Maybe Bool)

-- | Name of the workflow being run.
getWorkflowRun_name :: Lens' GetWorkflowRun Text

-- | The ID of the workflow run.
getWorkflowRun_runId :: Lens' GetWorkflowRun Text

-- | <i>See:</i> <a>newGetWorkflowRunResponse</a> smart constructor.
data GetWorkflowRunResponse
GetWorkflowRunResponse' :: Maybe WorkflowRun -> Int -> GetWorkflowRunResponse

-- | The requested workflow run metadata.
[$sel:run:GetWorkflowRunResponse'] :: GetWorkflowRunResponse -> Maybe WorkflowRun

-- | The response's http status code.
[$sel:httpStatus:GetWorkflowRunResponse'] :: GetWorkflowRunResponse -> Int

-- | Create a value of <a>GetWorkflowRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:run:GetWorkflowRunResponse'</a>,
--   <a>getWorkflowRunResponse_run</a> - The requested workflow run
--   metadata.
--   
--   <a>$sel:httpStatus:GetWorkflowRunResponse'</a>,
--   <a>getWorkflowRunResponse_httpStatus</a> - The response's http status
--   code.
newGetWorkflowRunResponse :: Int -> GetWorkflowRunResponse

-- | The requested workflow run metadata.
getWorkflowRunResponse_run :: Lens' GetWorkflowRunResponse (Maybe WorkflowRun)

-- | The response's http status code.
getWorkflowRunResponse_httpStatus :: Lens' GetWorkflowRunResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetWorkflowRun.GetWorkflowRun
instance GHC.Show.Show Network.AWS.Glue.GetWorkflowRun.GetWorkflowRun
instance GHC.Read.Read Network.AWS.Glue.GetWorkflowRun.GetWorkflowRun
instance GHC.Classes.Eq Network.AWS.Glue.GetWorkflowRun.GetWorkflowRun
instance GHC.Generics.Generic Network.AWS.Glue.GetWorkflowRun.GetWorkflowRunResponse
instance GHC.Show.Show Network.AWS.Glue.GetWorkflowRun.GetWorkflowRunResponse
instance GHC.Read.Read Network.AWS.Glue.GetWorkflowRun.GetWorkflowRunResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetWorkflowRun.GetWorkflowRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetWorkflowRun.GetWorkflowRun
instance Control.DeepSeq.NFData Network.AWS.Glue.GetWorkflowRun.GetWorkflowRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetWorkflowRun.GetWorkflowRun
instance Control.DeepSeq.NFData Network.AWS.Glue.GetWorkflowRun.GetWorkflowRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetWorkflowRun.GetWorkflowRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetWorkflowRun.GetWorkflowRun
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetWorkflowRun.GetWorkflowRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetWorkflowRun.GetWorkflowRun


-- | Retrieves resource metadata for a workflow.
module Network.AWS.Glue.GetWorkflow

-- | <i>See:</i> <a>newGetWorkflow</a> smart constructor.
data GetWorkflow
GetWorkflow' :: Maybe Bool -> Text -> GetWorkflow

-- | Specifies whether to include a graph when returning the workflow
--   resource metadata.
[$sel:includeGraph:GetWorkflow'] :: GetWorkflow -> Maybe Bool

-- | The name of the workflow to retrieve.
[$sel:name:GetWorkflow'] :: GetWorkflow -> Text

-- | Create a value of <a>GetWorkflow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeGraph:GetWorkflow'</a>, <a>getWorkflow_includeGraph</a>
--   - Specifies whether to include a graph when returning the workflow
--   resource metadata.
--   
--   <a>$sel:name:GetWorkflow'</a>, <a>getWorkflow_name</a> - The name of
--   the workflow to retrieve.
newGetWorkflow :: Text -> GetWorkflow

-- | Specifies whether to include a graph when returning the workflow
--   resource metadata.
getWorkflow_includeGraph :: Lens' GetWorkflow (Maybe Bool)

-- | The name of the workflow to retrieve.
getWorkflow_name :: Lens' GetWorkflow Text

-- | <i>See:</i> <a>newGetWorkflowResponse</a> smart constructor.
data GetWorkflowResponse
GetWorkflowResponse' :: Maybe Workflow -> Int -> GetWorkflowResponse

-- | The resource metadata for the workflow.
[$sel:workflow:GetWorkflowResponse'] :: GetWorkflowResponse -> Maybe Workflow

-- | The response's http status code.
[$sel:httpStatus:GetWorkflowResponse'] :: GetWorkflowResponse -> Int

-- | Create a value of <a>GetWorkflowResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workflow:GetWorkflowResponse'</a>,
--   <a>getWorkflowResponse_workflow</a> - The resource metadata for the
--   workflow.
--   
--   <a>$sel:httpStatus:GetWorkflowResponse'</a>,
--   <a>getWorkflowResponse_httpStatus</a> - The response's http status
--   code.
newGetWorkflowResponse :: Int -> GetWorkflowResponse

-- | The resource metadata for the workflow.
getWorkflowResponse_workflow :: Lens' GetWorkflowResponse (Maybe Workflow)

-- | The response's http status code.
getWorkflowResponse_httpStatus :: Lens' GetWorkflowResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetWorkflow.GetWorkflow
instance GHC.Show.Show Network.AWS.Glue.GetWorkflow.GetWorkflow
instance GHC.Read.Read Network.AWS.Glue.GetWorkflow.GetWorkflow
instance GHC.Classes.Eq Network.AWS.Glue.GetWorkflow.GetWorkflow
instance GHC.Generics.Generic Network.AWS.Glue.GetWorkflow.GetWorkflowResponse
instance GHC.Show.Show Network.AWS.Glue.GetWorkflow.GetWorkflowResponse
instance GHC.Read.Read Network.AWS.Glue.GetWorkflow.GetWorkflowResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetWorkflow.GetWorkflowResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetWorkflow.GetWorkflow
instance Control.DeepSeq.NFData Network.AWS.Glue.GetWorkflow.GetWorkflowResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetWorkflow.GetWorkflow
instance Control.DeepSeq.NFData Network.AWS.Glue.GetWorkflow.GetWorkflow
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetWorkflow.GetWorkflow
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetWorkflow.GetWorkflow
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetWorkflow.GetWorkflow
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetWorkflow.GetWorkflow


-- | Retrieves multiple function definitions from the Data Catalog.
--   
--   This operation returns paginated results.
module Network.AWS.Glue.GetUserDefinedFunctions

-- | <i>See:</i> <a>newGetUserDefinedFunctions</a> smart constructor.
data GetUserDefinedFunctions
GetUserDefinedFunctions' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> GetUserDefinedFunctions

-- | The ID of the Data Catalog where the functions to be retrieved are
--   located. If none is provided, the Amazon Web Services account ID is
--   used by default.
[$sel:catalogId:GetUserDefinedFunctions'] :: GetUserDefinedFunctions -> Maybe Text

-- | A continuation token, if this is a continuation call.
[$sel:nextToken:GetUserDefinedFunctions'] :: GetUserDefinedFunctions -> Maybe Text

-- | The name of the catalog database where the functions are located. If
--   none is provided, functions from all the databases across the catalog
--   will be returned.
[$sel:databaseName:GetUserDefinedFunctions'] :: GetUserDefinedFunctions -> Maybe Text

-- | The maximum number of functions to return in one response.
[$sel:maxResults:GetUserDefinedFunctions'] :: GetUserDefinedFunctions -> Maybe Natural

-- | An optional function-name pattern string that filters the function
--   definitions returned.
[$sel:pattern':GetUserDefinedFunctions'] :: GetUserDefinedFunctions -> Text

-- | Create a value of <a>GetUserDefinedFunctions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetUserDefinedFunctions'</a>,
--   <a>getUserDefinedFunctions_catalogId</a> - The ID of the Data Catalog
--   where the functions to be retrieved are located. If none is provided,
--   the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:nextToken:GetUserDefinedFunctions'</a>,
--   <a>getUserDefinedFunctions_nextToken</a> - A continuation token, if
--   this is a continuation call.
--   
--   <a>$sel:databaseName:GetUserDefinedFunctions'</a>,
--   <a>getUserDefinedFunctions_databaseName</a> - The name of the catalog
--   database where the functions are located. If none is provided,
--   functions from all the databases across the catalog will be returned.
--   
--   <a>$sel:maxResults:GetUserDefinedFunctions'</a>,
--   <a>getUserDefinedFunctions_maxResults</a> - The maximum number of
--   functions to return in one response.
--   
--   <a>$sel:pattern':GetUserDefinedFunctions'</a>,
--   <a>getUserDefinedFunctions_pattern</a> - An optional function-name
--   pattern string that filters the function definitions returned.
newGetUserDefinedFunctions :: Text -> GetUserDefinedFunctions

-- | The ID of the Data Catalog where the functions to be retrieved are
--   located. If none is provided, the Amazon Web Services account ID is
--   used by default.
getUserDefinedFunctions_catalogId :: Lens' GetUserDefinedFunctions (Maybe Text)

-- | A continuation token, if this is a continuation call.
getUserDefinedFunctions_nextToken :: Lens' GetUserDefinedFunctions (Maybe Text)

-- | The name of the catalog database where the functions are located. If
--   none is provided, functions from all the databases across the catalog
--   will be returned.
getUserDefinedFunctions_databaseName :: Lens' GetUserDefinedFunctions (Maybe Text)

-- | The maximum number of functions to return in one response.
getUserDefinedFunctions_maxResults :: Lens' GetUserDefinedFunctions (Maybe Natural)

-- | An optional function-name pattern string that filters the function
--   definitions returned.
getUserDefinedFunctions_pattern :: Lens' GetUserDefinedFunctions Text

-- | <i>See:</i> <a>newGetUserDefinedFunctionsResponse</a> smart
--   constructor.
data GetUserDefinedFunctionsResponse
GetUserDefinedFunctionsResponse' :: Maybe Text -> Maybe [UserDefinedFunction] -> Int -> GetUserDefinedFunctionsResponse

-- | A continuation token, if the list of functions returned does not
--   include the last requested function.
[$sel:nextToken:GetUserDefinedFunctionsResponse'] :: GetUserDefinedFunctionsResponse -> Maybe Text

-- | A list of requested function definitions.
[$sel:userDefinedFunctions:GetUserDefinedFunctionsResponse'] :: GetUserDefinedFunctionsResponse -> Maybe [UserDefinedFunction]

-- | The response's http status code.
[$sel:httpStatus:GetUserDefinedFunctionsResponse'] :: GetUserDefinedFunctionsResponse -> Int

-- | Create a value of <a>GetUserDefinedFunctionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetUserDefinedFunctions'</a>,
--   <a>getUserDefinedFunctionsResponse_nextToken</a> - A continuation
--   token, if the list of functions returned does not include the last
--   requested function.
--   
--   <a>$sel:userDefinedFunctions:GetUserDefinedFunctionsResponse'</a>,
--   <a>getUserDefinedFunctionsResponse_userDefinedFunctions</a> - A list
--   of requested function definitions.
--   
--   <a>$sel:httpStatus:GetUserDefinedFunctionsResponse'</a>,
--   <a>getUserDefinedFunctionsResponse_httpStatus</a> - The response's
--   http status code.
newGetUserDefinedFunctionsResponse :: Int -> GetUserDefinedFunctionsResponse

-- | A continuation token, if the list of functions returned does not
--   include the last requested function.
getUserDefinedFunctionsResponse_nextToken :: Lens' GetUserDefinedFunctionsResponse (Maybe Text)

-- | A list of requested function definitions.
getUserDefinedFunctionsResponse_userDefinedFunctions :: Lens' GetUserDefinedFunctionsResponse (Maybe [UserDefinedFunction])

-- | The response's http status code.
getUserDefinedFunctionsResponse_httpStatus :: Lens' GetUserDefinedFunctionsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetUserDefinedFunctions.GetUserDefinedFunctions
instance GHC.Show.Show Network.AWS.Glue.GetUserDefinedFunctions.GetUserDefinedFunctions
instance GHC.Read.Read Network.AWS.Glue.GetUserDefinedFunctions.GetUserDefinedFunctions
instance GHC.Classes.Eq Network.AWS.Glue.GetUserDefinedFunctions.GetUserDefinedFunctions
instance GHC.Generics.Generic Network.AWS.Glue.GetUserDefinedFunctions.GetUserDefinedFunctionsResponse
instance GHC.Show.Show Network.AWS.Glue.GetUserDefinedFunctions.GetUserDefinedFunctionsResponse
instance GHC.Read.Read Network.AWS.Glue.GetUserDefinedFunctions.GetUserDefinedFunctionsResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetUserDefinedFunctions.GetUserDefinedFunctionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetUserDefinedFunctions.GetUserDefinedFunctions
instance Control.DeepSeq.NFData Network.AWS.Glue.GetUserDefinedFunctions.GetUserDefinedFunctionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Glue.GetUserDefinedFunctions.GetUserDefinedFunctions
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetUserDefinedFunctions.GetUserDefinedFunctions
instance Control.DeepSeq.NFData Network.AWS.Glue.GetUserDefinedFunctions.GetUserDefinedFunctions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetUserDefinedFunctions.GetUserDefinedFunctions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetUserDefinedFunctions.GetUserDefinedFunctions
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetUserDefinedFunctions.GetUserDefinedFunctions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetUserDefinedFunctions.GetUserDefinedFunctions


-- | Retrieves a specified function definition from the Data Catalog.
module Network.AWS.Glue.GetUserDefinedFunction

-- | <i>See:</i> <a>newGetUserDefinedFunction</a> smart constructor.
data GetUserDefinedFunction
GetUserDefinedFunction' :: Maybe Text -> Text -> Text -> GetUserDefinedFunction

-- | The ID of the Data Catalog where the function to be retrieved is
--   located. If none is provided, the Amazon Web Services account ID is
--   used by default.
[$sel:catalogId:GetUserDefinedFunction'] :: GetUserDefinedFunction -> Maybe Text

-- | The name of the catalog database where the function is located.
[$sel:databaseName:GetUserDefinedFunction'] :: GetUserDefinedFunction -> Text

-- | The name of the function.
[$sel:functionName:GetUserDefinedFunction'] :: GetUserDefinedFunction -> Text

-- | Create a value of <a>GetUserDefinedFunction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetUserDefinedFunction'</a>,
--   <a>getUserDefinedFunction_catalogId</a> - The ID of the Data Catalog
--   where the function to be retrieved is located. If none is provided,
--   the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:GetUserDefinedFunction'</a>,
--   <a>getUserDefinedFunction_databaseName</a> - The name of the catalog
--   database where the function is located.
--   
--   <a>$sel:functionName:GetUserDefinedFunction'</a>,
--   <a>getUserDefinedFunction_functionName</a> - The name of the function.
newGetUserDefinedFunction :: Text -> Text -> GetUserDefinedFunction

-- | The ID of the Data Catalog where the function to be retrieved is
--   located. If none is provided, the Amazon Web Services account ID is
--   used by default.
getUserDefinedFunction_catalogId :: Lens' GetUserDefinedFunction (Maybe Text)

-- | The name of the catalog database where the function is located.
getUserDefinedFunction_databaseName :: Lens' GetUserDefinedFunction Text

-- | The name of the function.
getUserDefinedFunction_functionName :: Lens' GetUserDefinedFunction Text

-- | <i>See:</i> <a>newGetUserDefinedFunctionResponse</a> smart
--   constructor.
data GetUserDefinedFunctionResponse
GetUserDefinedFunctionResponse' :: Maybe UserDefinedFunction -> Int -> GetUserDefinedFunctionResponse

-- | The requested function definition.
[$sel:userDefinedFunction:GetUserDefinedFunctionResponse'] :: GetUserDefinedFunctionResponse -> Maybe UserDefinedFunction

-- | The response's http status code.
[$sel:httpStatus:GetUserDefinedFunctionResponse'] :: GetUserDefinedFunctionResponse -> Int

-- | Create a value of <a>GetUserDefinedFunctionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userDefinedFunction:GetUserDefinedFunctionResponse'</a>,
--   <a>getUserDefinedFunctionResponse_userDefinedFunction</a> - The
--   requested function definition.
--   
--   <a>$sel:httpStatus:GetUserDefinedFunctionResponse'</a>,
--   <a>getUserDefinedFunctionResponse_httpStatus</a> - The response's http
--   status code.
newGetUserDefinedFunctionResponse :: Int -> GetUserDefinedFunctionResponse

-- | The requested function definition.
getUserDefinedFunctionResponse_userDefinedFunction :: Lens' GetUserDefinedFunctionResponse (Maybe UserDefinedFunction)

-- | The response's http status code.
getUserDefinedFunctionResponse_httpStatus :: Lens' GetUserDefinedFunctionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetUserDefinedFunction.GetUserDefinedFunction
instance GHC.Show.Show Network.AWS.Glue.GetUserDefinedFunction.GetUserDefinedFunction
instance GHC.Read.Read Network.AWS.Glue.GetUserDefinedFunction.GetUserDefinedFunction
instance GHC.Classes.Eq Network.AWS.Glue.GetUserDefinedFunction.GetUserDefinedFunction
instance GHC.Generics.Generic Network.AWS.Glue.GetUserDefinedFunction.GetUserDefinedFunctionResponse
instance GHC.Show.Show Network.AWS.Glue.GetUserDefinedFunction.GetUserDefinedFunctionResponse
instance GHC.Read.Read Network.AWS.Glue.GetUserDefinedFunction.GetUserDefinedFunctionResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetUserDefinedFunction.GetUserDefinedFunctionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetUserDefinedFunction.GetUserDefinedFunction
instance Control.DeepSeq.NFData Network.AWS.Glue.GetUserDefinedFunction.GetUserDefinedFunctionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetUserDefinedFunction.GetUserDefinedFunction
instance Control.DeepSeq.NFData Network.AWS.Glue.GetUserDefinedFunction.GetUserDefinedFunction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetUserDefinedFunction.GetUserDefinedFunction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetUserDefinedFunction.GetUserDefinedFunction
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetUserDefinedFunction.GetUserDefinedFunction
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetUserDefinedFunction.GetUserDefinedFunction


-- | Gets all the triggers associated with a job.
--   
--   This operation returns paginated results.
module Network.AWS.Glue.GetTriggers

-- | <i>See:</i> <a>newGetTriggers</a> smart constructor.
data GetTriggers
GetTriggers' :: Maybe Text -> Maybe Natural -> Maybe Text -> GetTriggers

-- | A continuation token, if this is a continuation call.
[$sel:nextToken:GetTriggers'] :: GetTriggers -> Maybe Text

-- | The maximum size of the response.
[$sel:maxResults:GetTriggers'] :: GetTriggers -> Maybe Natural

-- | The name of the job to retrieve triggers for. The trigger that can
--   start this job is returned, and if there is no such trigger, all
--   triggers are returned.
[$sel:dependentJobName:GetTriggers'] :: GetTriggers -> Maybe Text

-- | Create a value of <a>GetTriggers</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetTriggers'</a>, <a>getTriggers_nextToken</a> - A
--   continuation token, if this is a continuation call.
--   
--   <a>$sel:maxResults:GetTriggers'</a>, <a>getTriggers_maxResults</a> -
--   The maximum size of the response.
--   
--   <a>$sel:dependentJobName:GetTriggers'</a>,
--   <a>getTriggers_dependentJobName</a> - The name of the job to retrieve
--   triggers for. The trigger that can start this job is returned, and if
--   there is no such trigger, all triggers are returned.
newGetTriggers :: GetTriggers

-- | A continuation token, if this is a continuation call.
getTriggers_nextToken :: Lens' GetTriggers (Maybe Text)

-- | The maximum size of the response.
getTriggers_maxResults :: Lens' GetTriggers (Maybe Natural)

-- | The name of the job to retrieve triggers for. The trigger that can
--   start this job is returned, and if there is no such trigger, all
--   triggers are returned.
getTriggers_dependentJobName :: Lens' GetTriggers (Maybe Text)

-- | <i>See:</i> <a>newGetTriggersResponse</a> smart constructor.
data GetTriggersResponse
GetTriggersResponse' :: Maybe [Trigger] -> Maybe Text -> Int -> GetTriggersResponse

-- | A list of triggers for the specified job.
[$sel:triggers:GetTriggersResponse'] :: GetTriggersResponse -> Maybe [Trigger]

-- | A continuation token, if not all the requested triggers have yet been
--   returned.
[$sel:nextToken:GetTriggersResponse'] :: GetTriggersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetTriggersResponse'] :: GetTriggersResponse -> Int

-- | Create a value of <a>GetTriggersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggers:GetTriggersResponse'</a>,
--   <a>getTriggersResponse_triggers</a> - A list of triggers for the
--   specified job.
--   
--   <a>$sel:nextToken:GetTriggers'</a>,
--   <a>getTriggersResponse_nextToken</a> - A continuation token, if not
--   all the requested triggers have yet been returned.
--   
--   <a>$sel:httpStatus:GetTriggersResponse'</a>,
--   <a>getTriggersResponse_httpStatus</a> - The response's http status
--   code.
newGetTriggersResponse :: Int -> GetTriggersResponse

-- | A list of triggers for the specified job.
getTriggersResponse_triggers :: Lens' GetTriggersResponse (Maybe [Trigger])

-- | A continuation token, if not all the requested triggers have yet been
--   returned.
getTriggersResponse_nextToken :: Lens' GetTriggersResponse (Maybe Text)

-- | The response's http status code.
getTriggersResponse_httpStatus :: Lens' GetTriggersResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetTriggers.GetTriggers
instance GHC.Show.Show Network.AWS.Glue.GetTriggers.GetTriggers
instance GHC.Read.Read Network.AWS.Glue.GetTriggers.GetTriggers
instance GHC.Classes.Eq Network.AWS.Glue.GetTriggers.GetTriggers
instance GHC.Generics.Generic Network.AWS.Glue.GetTriggers.GetTriggersResponse
instance GHC.Show.Show Network.AWS.Glue.GetTriggers.GetTriggersResponse
instance GHC.Read.Read Network.AWS.Glue.GetTriggers.GetTriggersResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetTriggers.GetTriggersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetTriggers.GetTriggers
instance Control.DeepSeq.NFData Network.AWS.Glue.GetTriggers.GetTriggersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Glue.GetTriggers.GetTriggers
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetTriggers.GetTriggers
instance Control.DeepSeq.NFData Network.AWS.Glue.GetTriggers.GetTriggers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetTriggers.GetTriggers
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetTriggers.GetTriggers
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetTriggers.GetTriggers
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetTriggers.GetTriggers


-- | Retrieves the definition of a trigger.
module Network.AWS.Glue.GetTrigger

-- | <i>See:</i> <a>newGetTrigger</a> smart constructor.
data GetTrigger
GetTrigger' :: Text -> GetTrigger

-- | The name of the trigger to retrieve.
[$sel:name:GetTrigger'] :: GetTrigger -> Text

-- | Create a value of <a>GetTrigger</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetTrigger'</a>, <a>getTrigger_name</a> - The name of the
--   trigger to retrieve.
newGetTrigger :: Text -> GetTrigger

-- | The name of the trigger to retrieve.
getTrigger_name :: Lens' GetTrigger Text

-- | <i>See:</i> <a>newGetTriggerResponse</a> smart constructor.
data GetTriggerResponse
GetTriggerResponse' :: Maybe Trigger -> Int -> GetTriggerResponse

-- | The requested trigger definition.
[$sel:trigger:GetTriggerResponse'] :: GetTriggerResponse -> Maybe Trigger

-- | The response's http status code.
[$sel:httpStatus:GetTriggerResponse'] :: GetTriggerResponse -> Int

-- | Create a value of <a>GetTriggerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trigger:GetTriggerResponse'</a>,
--   <a>getTriggerResponse_trigger</a> - The requested trigger definition.
--   
--   <a>$sel:httpStatus:GetTriggerResponse'</a>,
--   <a>getTriggerResponse_httpStatus</a> - The response's http status
--   code.
newGetTriggerResponse :: Int -> GetTriggerResponse

-- | The requested trigger definition.
getTriggerResponse_trigger :: Lens' GetTriggerResponse (Maybe Trigger)

-- | The response's http status code.
getTriggerResponse_httpStatus :: Lens' GetTriggerResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetTrigger.GetTrigger
instance GHC.Show.Show Network.AWS.Glue.GetTrigger.GetTrigger
instance GHC.Read.Read Network.AWS.Glue.GetTrigger.GetTrigger
instance GHC.Classes.Eq Network.AWS.Glue.GetTrigger.GetTrigger
instance GHC.Generics.Generic Network.AWS.Glue.GetTrigger.GetTriggerResponse
instance GHC.Show.Show Network.AWS.Glue.GetTrigger.GetTriggerResponse
instance GHC.Read.Read Network.AWS.Glue.GetTrigger.GetTriggerResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetTrigger.GetTriggerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetTrigger.GetTrigger
instance Control.DeepSeq.NFData Network.AWS.Glue.GetTrigger.GetTriggerResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetTrigger.GetTrigger
instance Control.DeepSeq.NFData Network.AWS.Glue.GetTrigger.GetTrigger
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetTrigger.GetTrigger
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetTrigger.GetTrigger
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetTrigger.GetTrigger
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetTrigger.GetTrigger


-- | Retrieves a list of tags associated with a resource.
module Network.AWS.Glue.GetTags

-- | <i>See:</i> <a>newGetTags</a> smart constructor.
data GetTags
GetTags' :: Text -> GetTags

-- | The Amazon Resource Name (ARN) of the resource for which to retrieve
--   tags.
[$sel:resourceArn:GetTags'] :: GetTags -> Text

-- | Create a value of <a>GetTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:GetTags'</a>, <a>getTags_resourceArn</a> - The
--   Amazon Resource Name (ARN) of the resource for which to retrieve tags.
newGetTags :: Text -> GetTags

-- | The Amazon Resource Name (ARN) of the resource for which to retrieve
--   tags.
getTags_resourceArn :: Lens' GetTags Text

-- | <i>See:</i> <a>newGetTagsResponse</a> smart constructor.
data GetTagsResponse
GetTagsResponse' :: Maybe (HashMap Text Text) -> Int -> GetTagsResponse

-- | The requested tags.
[$sel:tags:GetTagsResponse'] :: GetTagsResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetTagsResponse'] :: GetTagsResponse -> Int

-- | Create a value of <a>GetTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:GetTagsResponse'</a>, <a>getTagsResponse_tags</a> - The
--   requested tags.
--   
--   <a>$sel:httpStatus:GetTagsResponse'</a>,
--   <a>getTagsResponse_httpStatus</a> - The response's http status code.
newGetTagsResponse :: Int -> GetTagsResponse

-- | The requested tags.
getTagsResponse_tags :: Lens' GetTagsResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getTagsResponse_httpStatus :: Lens' GetTagsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetTags.GetTags
instance GHC.Show.Show Network.AWS.Glue.GetTags.GetTags
instance GHC.Read.Read Network.AWS.Glue.GetTags.GetTags
instance GHC.Classes.Eq Network.AWS.Glue.GetTags.GetTags
instance GHC.Generics.Generic Network.AWS.Glue.GetTags.GetTagsResponse
instance GHC.Show.Show Network.AWS.Glue.GetTags.GetTagsResponse
instance GHC.Read.Read Network.AWS.Glue.GetTags.GetTagsResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetTags.GetTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetTags.GetTags
instance Control.DeepSeq.NFData Network.AWS.Glue.GetTags.GetTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetTags.GetTags
instance Control.DeepSeq.NFData Network.AWS.Glue.GetTags.GetTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetTags.GetTags
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetTags.GetTags
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetTags.GetTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetTags.GetTags


-- | Retrieves the definitions of some or all of the tables in a given
--   <tt>Database</tt>.
--   
--   This operation returns paginated results.
module Network.AWS.Glue.GetTables

-- | <i>See:</i> <a>newGetTables</a> smart constructor.
data GetTables
GetTables' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> GetTables

-- | The ID of the Data Catalog where the tables reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
[$sel:catalogId:GetTables'] :: GetTables -> Maybe Text

-- | A continuation token, included if this is a continuation call.
[$sel:nextToken:GetTables'] :: GetTables -> Maybe Text

-- | A regular expression pattern. If present, only those tables whose
--   names match the pattern are returned.
[$sel:expression:GetTables'] :: GetTables -> Maybe Text

-- | The maximum number of tables to return in a single response.
[$sel:maxResults:GetTables'] :: GetTables -> Maybe Natural

-- | The database in the catalog whose tables to list. For Hive
--   compatibility, this name is entirely lowercase.
[$sel:databaseName:GetTables'] :: GetTables -> Text

-- | Create a value of <a>GetTables</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetTables'</a>, <a>getTables_catalogId</a> - The ID
--   of the Data Catalog where the tables reside. If none is provided, the
--   Amazon Web Services account ID is used by default.
--   
--   <a>$sel:nextToken:GetTables'</a>, <a>getTables_nextToken</a> - A
--   continuation token, included if this is a continuation call.
--   
--   <a>$sel:expression:GetTables'</a>, <a>getTables_expression</a> - A
--   regular expression pattern. If present, only those tables whose names
--   match the pattern are returned.
--   
--   <a>$sel:maxResults:GetTables'</a>, <a>getTables_maxResults</a> - The
--   maximum number of tables to return in a single response.
--   
--   <a>$sel:databaseName:GetTables'</a>, <a>getTables_databaseName</a> -
--   The database in the catalog whose tables to list. For Hive
--   compatibility, this name is entirely lowercase.
newGetTables :: Text -> GetTables

-- | The ID of the Data Catalog where the tables reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
getTables_catalogId :: Lens' GetTables (Maybe Text)

-- | A continuation token, included if this is a continuation call.
getTables_nextToken :: Lens' GetTables (Maybe Text)

-- | A regular expression pattern. If present, only those tables whose
--   names match the pattern are returned.
getTables_expression :: Lens' GetTables (Maybe Text)

-- | The maximum number of tables to return in a single response.
getTables_maxResults :: Lens' GetTables (Maybe Natural)

-- | The database in the catalog whose tables to list. For Hive
--   compatibility, this name is entirely lowercase.
getTables_databaseName :: Lens' GetTables Text

-- | <i>See:</i> <a>newGetTablesResponse</a> smart constructor.
data GetTablesResponse
GetTablesResponse' :: Maybe [Table] -> Maybe Text -> Int -> GetTablesResponse

-- | A list of the requested <tt>Table</tt> objects.
[$sel:tableList:GetTablesResponse'] :: GetTablesResponse -> Maybe [Table]

-- | A continuation token, present if the current list segment is not the
--   last.
[$sel:nextToken:GetTablesResponse'] :: GetTablesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetTablesResponse'] :: GetTablesResponse -> Int

-- | Create a value of <a>GetTablesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tableList:GetTablesResponse'</a>,
--   <a>getTablesResponse_tableList</a> - A list of the requested
--   <tt>Table</tt> objects.
--   
--   <a>$sel:nextToken:GetTables'</a>, <a>getTablesResponse_nextToken</a> -
--   A continuation token, present if the current list segment is not the
--   last.
--   
--   <a>$sel:httpStatus:GetTablesResponse'</a>,
--   <a>getTablesResponse_httpStatus</a> - The response's http status code.
newGetTablesResponse :: Int -> GetTablesResponse

-- | A list of the requested <tt>Table</tt> objects.
getTablesResponse_tableList :: Lens' GetTablesResponse (Maybe [Table])

-- | A continuation token, present if the current list segment is not the
--   last.
getTablesResponse_nextToken :: Lens' GetTablesResponse (Maybe Text)

-- | The response's http status code.
getTablesResponse_httpStatus :: Lens' GetTablesResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetTables.GetTables
instance GHC.Show.Show Network.AWS.Glue.GetTables.GetTables
instance GHC.Read.Read Network.AWS.Glue.GetTables.GetTables
instance GHC.Classes.Eq Network.AWS.Glue.GetTables.GetTables
instance GHC.Generics.Generic Network.AWS.Glue.GetTables.GetTablesResponse
instance GHC.Show.Show Network.AWS.Glue.GetTables.GetTablesResponse
instance GHC.Read.Read Network.AWS.Glue.GetTables.GetTablesResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetTables.GetTablesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetTables.GetTables
instance Control.DeepSeq.NFData Network.AWS.Glue.GetTables.GetTablesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Glue.GetTables.GetTables
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetTables.GetTables
instance Control.DeepSeq.NFData Network.AWS.Glue.GetTables.GetTables
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetTables.GetTables
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetTables.GetTables
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetTables.GetTables
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetTables.GetTables


-- | Retrieves a list of strings that identify available versions of a
--   specified table.
--   
--   This operation returns paginated results.
module Network.AWS.Glue.GetTableVersions

-- | <i>See:</i> <a>newGetTableVersions</a> smart constructor.
data GetTableVersions
GetTableVersions' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> Text -> GetTableVersions

-- | The ID of the Data Catalog where the tables reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
[$sel:catalogId:GetTableVersions'] :: GetTableVersions -> Maybe Text

-- | A continuation token, if this is not the first call.
[$sel:nextToken:GetTableVersions'] :: GetTableVersions -> Maybe Text

-- | The maximum number of table versions to return in one response.
[$sel:maxResults:GetTableVersions'] :: GetTableVersions -> Maybe Natural

-- | The database in the catalog in which the table resides. For Hive
--   compatibility, this name is entirely lowercase.
[$sel:databaseName:GetTableVersions'] :: GetTableVersions -> Text

-- | The name of the table. For Hive compatibility, this name is entirely
--   lowercase.
[$sel:tableName:GetTableVersions'] :: GetTableVersions -> Text

-- | Create a value of <a>GetTableVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetTableVersions'</a>,
--   <a>getTableVersions_catalogId</a> - The ID of the Data Catalog where
--   the tables reside. If none is provided, the Amazon Web Services
--   account ID is used by default.
--   
--   <a>$sel:nextToken:GetTableVersions'</a>,
--   <a>getTableVersions_nextToken</a> - A continuation token, if this is
--   not the first call.
--   
--   <a>$sel:maxResults:GetTableVersions'</a>,
--   <a>getTableVersions_maxResults</a> - The maximum number of table
--   versions to return in one response.
--   
--   <a>$sel:databaseName:GetTableVersions'</a>,
--   <a>getTableVersions_databaseName</a> - The database in the catalog in
--   which the table resides. For Hive compatibility, this name is entirely
--   lowercase.
--   
--   <a>$sel:tableName:GetTableVersions'</a>,
--   <a>getTableVersions_tableName</a> - The name of the table. For Hive
--   compatibility, this name is entirely lowercase.
newGetTableVersions :: Text -> Text -> GetTableVersions

-- | The ID of the Data Catalog where the tables reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
getTableVersions_catalogId :: Lens' GetTableVersions (Maybe Text)

-- | A continuation token, if this is not the first call.
getTableVersions_nextToken :: Lens' GetTableVersions (Maybe Text)

-- | The maximum number of table versions to return in one response.
getTableVersions_maxResults :: Lens' GetTableVersions (Maybe Natural)

-- | The database in the catalog in which the table resides. For Hive
--   compatibility, this name is entirely lowercase.
getTableVersions_databaseName :: Lens' GetTableVersions Text

-- | The name of the table. For Hive compatibility, this name is entirely
--   lowercase.
getTableVersions_tableName :: Lens' GetTableVersions Text

-- | <i>See:</i> <a>newGetTableVersionsResponse</a> smart constructor.
data GetTableVersionsResponse
GetTableVersionsResponse' :: Maybe [TableVersion] -> Maybe Text -> Int -> GetTableVersionsResponse

-- | A list of strings identifying available versions of the specified
--   table.
[$sel:tableVersions:GetTableVersionsResponse'] :: GetTableVersionsResponse -> Maybe [TableVersion]

-- | A continuation token, if the list of available versions does not
--   include the last one.
[$sel:nextToken:GetTableVersionsResponse'] :: GetTableVersionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetTableVersionsResponse'] :: GetTableVersionsResponse -> Int

-- | Create a value of <a>GetTableVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tableVersions:GetTableVersionsResponse'</a>,
--   <a>getTableVersionsResponse_tableVersions</a> - A list of strings
--   identifying available versions of the specified table.
--   
--   <a>$sel:nextToken:GetTableVersions'</a>,
--   <a>getTableVersionsResponse_nextToken</a> - A continuation token, if
--   the list of available versions does not include the last one.
--   
--   <a>$sel:httpStatus:GetTableVersionsResponse'</a>,
--   <a>getTableVersionsResponse_httpStatus</a> - The response's http
--   status code.
newGetTableVersionsResponse :: Int -> GetTableVersionsResponse

-- | A list of strings identifying available versions of the specified
--   table.
getTableVersionsResponse_tableVersions :: Lens' GetTableVersionsResponse (Maybe [TableVersion])

-- | A continuation token, if the list of available versions does not
--   include the last one.
getTableVersionsResponse_nextToken :: Lens' GetTableVersionsResponse (Maybe Text)

-- | The response's http status code.
getTableVersionsResponse_httpStatus :: Lens' GetTableVersionsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetTableVersions.GetTableVersions
instance GHC.Show.Show Network.AWS.Glue.GetTableVersions.GetTableVersions
instance GHC.Read.Read Network.AWS.Glue.GetTableVersions.GetTableVersions
instance GHC.Classes.Eq Network.AWS.Glue.GetTableVersions.GetTableVersions
instance GHC.Generics.Generic Network.AWS.Glue.GetTableVersions.GetTableVersionsResponse
instance GHC.Show.Show Network.AWS.Glue.GetTableVersions.GetTableVersionsResponse
instance GHC.Read.Read Network.AWS.Glue.GetTableVersions.GetTableVersionsResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetTableVersions.GetTableVersionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetTableVersions.GetTableVersions
instance Control.DeepSeq.NFData Network.AWS.Glue.GetTableVersions.GetTableVersionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Glue.GetTableVersions.GetTableVersions
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetTableVersions.GetTableVersions
instance Control.DeepSeq.NFData Network.AWS.Glue.GetTableVersions.GetTableVersions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetTableVersions.GetTableVersions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetTableVersions.GetTableVersions
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetTableVersions.GetTableVersions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetTableVersions.GetTableVersions


-- | Retrieves a specified version of a table.
module Network.AWS.Glue.GetTableVersion

-- | <i>See:</i> <a>newGetTableVersion</a> smart constructor.
data GetTableVersion
GetTableVersion' :: Maybe Text -> Maybe Text -> Text -> Text -> GetTableVersion

-- | The ID value of the table version to be retrieved. A
--   <tt>VersionID</tt> is a string representation of an integer. Each
--   version is incremented by 1.
[$sel:versionId:GetTableVersion'] :: GetTableVersion -> Maybe Text

-- | The ID of the Data Catalog where the tables reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
[$sel:catalogId:GetTableVersion'] :: GetTableVersion -> Maybe Text

-- | The database in the catalog in which the table resides. For Hive
--   compatibility, this name is entirely lowercase.
[$sel:databaseName:GetTableVersion'] :: GetTableVersion -> Text

-- | The name of the table. For Hive compatibility, this name is entirely
--   lowercase.
[$sel:tableName:GetTableVersion'] :: GetTableVersion -> Text

-- | Create a value of <a>GetTableVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:GetTableVersion'</a>,
--   <a>getTableVersion_versionId</a> - The ID value of the table version
--   to be retrieved. A <tt>VersionID</tt> is a string representation of an
--   integer. Each version is incremented by 1.
--   
--   <a>$sel:catalogId:GetTableVersion'</a>,
--   <a>getTableVersion_catalogId</a> - The ID of the Data Catalog where
--   the tables reside. If none is provided, the Amazon Web Services
--   account ID is used by default.
--   
--   <a>$sel:databaseName:GetTableVersion'</a>,
--   <a>getTableVersion_databaseName</a> - The database in the catalog in
--   which the table resides. For Hive compatibility, this name is entirely
--   lowercase.
--   
--   <a>$sel:tableName:GetTableVersion'</a>,
--   <a>getTableVersion_tableName</a> - The name of the table. For Hive
--   compatibility, this name is entirely lowercase.
newGetTableVersion :: Text -> Text -> GetTableVersion

-- | The ID value of the table version to be retrieved. A
--   <tt>VersionID</tt> is a string representation of an integer. Each
--   version is incremented by 1.
getTableVersion_versionId :: Lens' GetTableVersion (Maybe Text)

-- | The ID of the Data Catalog where the tables reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
getTableVersion_catalogId :: Lens' GetTableVersion (Maybe Text)

-- | The database in the catalog in which the table resides. For Hive
--   compatibility, this name is entirely lowercase.
getTableVersion_databaseName :: Lens' GetTableVersion Text

-- | The name of the table. For Hive compatibility, this name is entirely
--   lowercase.
getTableVersion_tableName :: Lens' GetTableVersion Text

-- | <i>See:</i> <a>newGetTableVersionResponse</a> smart constructor.
data GetTableVersionResponse
GetTableVersionResponse' :: Maybe TableVersion -> Int -> GetTableVersionResponse

-- | The requested table version.
[$sel:tableVersion:GetTableVersionResponse'] :: GetTableVersionResponse -> Maybe TableVersion

-- | The response's http status code.
[$sel:httpStatus:GetTableVersionResponse'] :: GetTableVersionResponse -> Int

-- | Create a value of <a>GetTableVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tableVersion:GetTableVersionResponse'</a>,
--   <a>getTableVersionResponse_tableVersion</a> - The requested table
--   version.
--   
--   <a>$sel:httpStatus:GetTableVersionResponse'</a>,
--   <a>getTableVersionResponse_httpStatus</a> - The response's http status
--   code.
newGetTableVersionResponse :: Int -> GetTableVersionResponse

-- | The requested table version.
getTableVersionResponse_tableVersion :: Lens' GetTableVersionResponse (Maybe TableVersion)

-- | The response's http status code.
getTableVersionResponse_httpStatus :: Lens' GetTableVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetTableVersion.GetTableVersion
instance GHC.Show.Show Network.AWS.Glue.GetTableVersion.GetTableVersion
instance GHC.Read.Read Network.AWS.Glue.GetTableVersion.GetTableVersion
instance GHC.Classes.Eq Network.AWS.Glue.GetTableVersion.GetTableVersion
instance GHC.Generics.Generic Network.AWS.Glue.GetTableVersion.GetTableVersionResponse
instance GHC.Show.Show Network.AWS.Glue.GetTableVersion.GetTableVersionResponse
instance GHC.Read.Read Network.AWS.Glue.GetTableVersion.GetTableVersionResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetTableVersion.GetTableVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetTableVersion.GetTableVersion
instance Control.DeepSeq.NFData Network.AWS.Glue.GetTableVersion.GetTableVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetTableVersion.GetTableVersion
instance Control.DeepSeq.NFData Network.AWS.Glue.GetTableVersion.GetTableVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetTableVersion.GetTableVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetTableVersion.GetTableVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetTableVersion.GetTableVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetTableVersion.GetTableVersion


-- | Retrieves the <tt>Table</tt> definition in a Data Catalog for a
--   specified table.
module Network.AWS.Glue.GetTable

-- | <i>See:</i> <a>newGetTable</a> smart constructor.
data GetTable
GetTable' :: Maybe Text -> Text -> Text -> GetTable

-- | The ID of the Data Catalog where the table resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
[$sel:catalogId:GetTable'] :: GetTable -> Maybe Text

-- | The name of the database in the catalog in which the table resides.
--   For Hive compatibility, this name is entirely lowercase.
[$sel:databaseName:GetTable'] :: GetTable -> Text

-- | The name of the table for which to retrieve the definition. For Hive
--   compatibility, this name is entirely lowercase.
[$sel:name:GetTable'] :: GetTable -> Text

-- | Create a value of <a>GetTable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetTable'</a>, <a>getTable_catalogId</a> - The ID of
--   the Data Catalog where the table resides. If none is provided, the
--   Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:GetTable'</a>, <a>getTable_databaseName</a> - The
--   name of the database in the catalog in which the table resides. For
--   Hive compatibility, this name is entirely lowercase.
--   
--   <a>$sel:name:GetTable'</a>, <a>getTable_name</a> - The name of the
--   table for which to retrieve the definition. For Hive compatibility,
--   this name is entirely lowercase.
newGetTable :: Text -> Text -> GetTable

-- | The ID of the Data Catalog where the table resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
getTable_catalogId :: Lens' GetTable (Maybe Text)

-- | The name of the database in the catalog in which the table resides.
--   For Hive compatibility, this name is entirely lowercase.
getTable_databaseName :: Lens' GetTable Text

-- | The name of the table for which to retrieve the definition. For Hive
--   compatibility, this name is entirely lowercase.
getTable_name :: Lens' GetTable Text

-- | <i>See:</i> <a>newGetTableResponse</a> smart constructor.
data GetTableResponse
GetTableResponse' :: Maybe Table -> Int -> GetTableResponse

-- | The <tt>Table</tt> object that defines the specified table.
[$sel:table:GetTableResponse'] :: GetTableResponse -> Maybe Table

-- | The response's http status code.
[$sel:httpStatus:GetTableResponse'] :: GetTableResponse -> Int

-- | Create a value of <a>GetTableResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:table:GetTableResponse'</a>, <a>getTableResponse_table</a> -
--   The <tt>Table</tt> object that defines the specified table.
--   
--   <a>$sel:httpStatus:GetTableResponse'</a>,
--   <a>getTableResponse_httpStatus</a> - The response's http status code.
newGetTableResponse :: Int -> GetTableResponse

-- | The <tt>Table</tt> object that defines the specified table.
getTableResponse_table :: Lens' GetTableResponse (Maybe Table)

-- | The response's http status code.
getTableResponse_httpStatus :: Lens' GetTableResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetTable.GetTable
instance GHC.Show.Show Network.AWS.Glue.GetTable.GetTable
instance GHC.Read.Read Network.AWS.Glue.GetTable.GetTable
instance GHC.Classes.Eq Network.AWS.Glue.GetTable.GetTable
instance GHC.Generics.Generic Network.AWS.Glue.GetTable.GetTableResponse
instance GHC.Show.Show Network.AWS.Glue.GetTable.GetTableResponse
instance GHC.Read.Read Network.AWS.Glue.GetTable.GetTableResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetTable.GetTableResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetTable.GetTable
instance Control.DeepSeq.NFData Network.AWS.Glue.GetTable.GetTableResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetTable.GetTable
instance Control.DeepSeq.NFData Network.AWS.Glue.GetTable.GetTable
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetTable.GetTable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetTable.GetTable
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetTable.GetTable
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetTable.GetTable


-- | Retrieves a list of all security configurations.
--   
--   This operation returns paginated results.
module Network.AWS.Glue.GetSecurityConfigurations

-- | <i>See:</i> <a>newGetSecurityConfigurations</a> smart constructor.
data GetSecurityConfigurations
GetSecurityConfigurations' :: Maybe Text -> Maybe Natural -> GetSecurityConfigurations

-- | A continuation token, if this is a continuation call.
[$sel:nextToken:GetSecurityConfigurations'] :: GetSecurityConfigurations -> Maybe Text

-- | The maximum number of results to return.
[$sel:maxResults:GetSecurityConfigurations'] :: GetSecurityConfigurations -> Maybe Natural

-- | Create a value of <a>GetSecurityConfigurations</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetSecurityConfigurations'</a>,
--   <a>getSecurityConfigurations_nextToken</a> - A continuation token, if
--   this is a continuation call.
--   
--   <a>$sel:maxResults:GetSecurityConfigurations'</a>,
--   <a>getSecurityConfigurations_maxResults</a> - The maximum number of
--   results to return.
newGetSecurityConfigurations :: GetSecurityConfigurations

-- | A continuation token, if this is a continuation call.
getSecurityConfigurations_nextToken :: Lens' GetSecurityConfigurations (Maybe Text)

-- | The maximum number of results to return.
getSecurityConfigurations_maxResults :: Lens' GetSecurityConfigurations (Maybe Natural)

-- | <i>See:</i> <a>newGetSecurityConfigurationsResponse</a> smart
--   constructor.
data GetSecurityConfigurationsResponse
GetSecurityConfigurationsResponse' :: Maybe [SecurityConfiguration] -> Maybe Text -> Int -> GetSecurityConfigurationsResponse

-- | A list of security configurations.
[$sel:securityConfigurations:GetSecurityConfigurationsResponse'] :: GetSecurityConfigurationsResponse -> Maybe [SecurityConfiguration]

-- | A continuation token, if there are more security configurations to
--   return.
[$sel:nextToken:GetSecurityConfigurationsResponse'] :: GetSecurityConfigurationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetSecurityConfigurationsResponse'] :: GetSecurityConfigurationsResponse -> Int

-- | Create a value of <a>GetSecurityConfigurationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityConfigurations:GetSecurityConfigurationsResponse'</a>,
--   <a>getSecurityConfigurationsResponse_securityConfigurations</a> - A
--   list of security configurations.
--   
--   <a>$sel:nextToken:GetSecurityConfigurations'</a>,
--   <a>getSecurityConfigurationsResponse_nextToken</a> - A continuation
--   token, if there are more security configurations to return.
--   
--   <a>$sel:httpStatus:GetSecurityConfigurationsResponse'</a>,
--   <a>getSecurityConfigurationsResponse_httpStatus</a> - The response's
--   http status code.
newGetSecurityConfigurationsResponse :: Int -> GetSecurityConfigurationsResponse

-- | A list of security configurations.
getSecurityConfigurationsResponse_securityConfigurations :: Lens' GetSecurityConfigurationsResponse (Maybe [SecurityConfiguration])

-- | A continuation token, if there are more security configurations to
--   return.
getSecurityConfigurationsResponse_nextToken :: Lens' GetSecurityConfigurationsResponse (Maybe Text)

-- | The response's http status code.
getSecurityConfigurationsResponse_httpStatus :: Lens' GetSecurityConfigurationsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetSecurityConfigurations.GetSecurityConfigurations
instance GHC.Show.Show Network.AWS.Glue.GetSecurityConfigurations.GetSecurityConfigurations
instance GHC.Read.Read Network.AWS.Glue.GetSecurityConfigurations.GetSecurityConfigurations
instance GHC.Classes.Eq Network.AWS.Glue.GetSecurityConfigurations.GetSecurityConfigurations
instance GHC.Generics.Generic Network.AWS.Glue.GetSecurityConfigurations.GetSecurityConfigurationsResponse
instance GHC.Show.Show Network.AWS.Glue.GetSecurityConfigurations.GetSecurityConfigurationsResponse
instance GHC.Read.Read Network.AWS.Glue.GetSecurityConfigurations.GetSecurityConfigurationsResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetSecurityConfigurations.GetSecurityConfigurationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetSecurityConfigurations.GetSecurityConfigurations
instance Control.DeepSeq.NFData Network.AWS.Glue.GetSecurityConfigurations.GetSecurityConfigurationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Glue.GetSecurityConfigurations.GetSecurityConfigurations
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetSecurityConfigurations.GetSecurityConfigurations
instance Control.DeepSeq.NFData Network.AWS.Glue.GetSecurityConfigurations.GetSecurityConfigurations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetSecurityConfigurations.GetSecurityConfigurations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetSecurityConfigurations.GetSecurityConfigurations
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetSecurityConfigurations.GetSecurityConfigurations
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetSecurityConfigurations.GetSecurityConfigurations


-- | Retrieves a specified security configuration.
module Network.AWS.Glue.GetSecurityConfiguration

-- | <i>See:</i> <a>newGetSecurityConfiguration</a> smart constructor.
data GetSecurityConfiguration
GetSecurityConfiguration' :: Text -> GetSecurityConfiguration

-- | The name of the security configuration to retrieve.
[$sel:name:GetSecurityConfiguration'] :: GetSecurityConfiguration -> Text

-- | Create a value of <a>GetSecurityConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetSecurityConfiguration'</a>,
--   <a>getSecurityConfiguration_name</a> - The name of the security
--   configuration to retrieve.
newGetSecurityConfiguration :: Text -> GetSecurityConfiguration

-- | The name of the security configuration to retrieve.
getSecurityConfiguration_name :: Lens' GetSecurityConfiguration Text

-- | <i>See:</i> <a>newGetSecurityConfigurationResponse</a> smart
--   constructor.
data GetSecurityConfigurationResponse
GetSecurityConfigurationResponse' :: Maybe SecurityConfiguration -> Int -> GetSecurityConfigurationResponse

-- | The requested security configuration.
[$sel:securityConfiguration:GetSecurityConfigurationResponse'] :: GetSecurityConfigurationResponse -> Maybe SecurityConfiguration

-- | The response's http status code.
[$sel:httpStatus:GetSecurityConfigurationResponse'] :: GetSecurityConfigurationResponse -> Int

-- | Create a value of <a>GetSecurityConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityConfiguration:GetSecurityConfigurationResponse'</a>,
--   <a>getSecurityConfigurationResponse_securityConfiguration</a> - The
--   requested security configuration.
--   
--   <a>$sel:httpStatus:GetSecurityConfigurationResponse'</a>,
--   <a>getSecurityConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newGetSecurityConfigurationResponse :: Int -> GetSecurityConfigurationResponse

-- | The requested security configuration.
getSecurityConfigurationResponse_securityConfiguration :: Lens' GetSecurityConfigurationResponse (Maybe SecurityConfiguration)

-- | The response's http status code.
getSecurityConfigurationResponse_httpStatus :: Lens' GetSecurityConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetSecurityConfiguration.GetSecurityConfiguration
instance GHC.Show.Show Network.AWS.Glue.GetSecurityConfiguration.GetSecurityConfiguration
instance GHC.Read.Read Network.AWS.Glue.GetSecurityConfiguration.GetSecurityConfiguration
instance GHC.Classes.Eq Network.AWS.Glue.GetSecurityConfiguration.GetSecurityConfiguration
instance GHC.Generics.Generic Network.AWS.Glue.GetSecurityConfiguration.GetSecurityConfigurationResponse
instance GHC.Show.Show Network.AWS.Glue.GetSecurityConfiguration.GetSecurityConfigurationResponse
instance GHC.Read.Read Network.AWS.Glue.GetSecurityConfiguration.GetSecurityConfigurationResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetSecurityConfiguration.GetSecurityConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetSecurityConfiguration.GetSecurityConfiguration
instance Control.DeepSeq.NFData Network.AWS.Glue.GetSecurityConfiguration.GetSecurityConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetSecurityConfiguration.GetSecurityConfiguration
instance Control.DeepSeq.NFData Network.AWS.Glue.GetSecurityConfiguration.GetSecurityConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetSecurityConfiguration.GetSecurityConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetSecurityConfiguration.GetSecurityConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetSecurityConfiguration.GetSecurityConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetSecurityConfiguration.GetSecurityConfiguration


-- | Fetches the schema version difference in the specified difference type
--   between two stored schema versions in the Schema Registry.
--   
--   This API allows you to compare two schema versions between two schema
--   definitions under the same schema.
module Network.AWS.Glue.GetSchemaVersionsDiff

-- | <i>See:</i> <a>newGetSchemaVersionsDiff</a> smart constructor.
data GetSchemaVersionsDiff
GetSchemaVersionsDiff' :: SchemaId -> SchemaVersionNumber -> SchemaVersionNumber -> SchemaDiffType -> GetSchemaVersionsDiff

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   One of <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be
--   provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. One of
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be provided.</li>
--   </ul>
[$sel:schemaId:GetSchemaVersionsDiff'] :: GetSchemaVersionsDiff -> SchemaId

-- | The first of the two schema versions to be compared.
[$sel:firstSchemaVersionNumber:GetSchemaVersionsDiff'] :: GetSchemaVersionsDiff -> SchemaVersionNumber

-- | The second of the two schema versions to be compared.
[$sel:secondSchemaVersionNumber:GetSchemaVersionsDiff'] :: GetSchemaVersionsDiff -> SchemaVersionNumber

-- | Refers to <tt>SYNTAX_DIFF</tt>, which is the currently supported diff
--   type.
[$sel:schemaDiffType:GetSchemaVersionsDiff'] :: GetSchemaVersionsDiff -> SchemaDiffType

-- | Create a value of <a>GetSchemaVersionsDiff</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaId:GetSchemaVersionsDiff'</a>,
--   <a>getSchemaVersionsDiff_schemaId</a> - This is a wrapper structure to
--   contain schema identity fields. The structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   One of <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be
--   provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. One of
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be provided.</li>
--   </ul>
--   
--   <a>$sel:firstSchemaVersionNumber:GetSchemaVersionsDiff'</a>,
--   <a>getSchemaVersionsDiff_firstSchemaVersionNumber</a> - The first of
--   the two schema versions to be compared.
--   
--   <a>$sel:secondSchemaVersionNumber:GetSchemaVersionsDiff'</a>,
--   <a>getSchemaVersionsDiff_secondSchemaVersionNumber</a> - The second of
--   the two schema versions to be compared.
--   
--   <a>$sel:schemaDiffType:GetSchemaVersionsDiff'</a>,
--   <a>getSchemaVersionsDiff_schemaDiffType</a> - Refers to
--   <tt>SYNTAX_DIFF</tt>, which is the currently supported diff type.
newGetSchemaVersionsDiff :: SchemaId -> SchemaVersionNumber -> SchemaVersionNumber -> SchemaDiffType -> GetSchemaVersionsDiff

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   One of <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be
--   provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. One of
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be provided.</li>
--   </ul>
getSchemaVersionsDiff_schemaId :: Lens' GetSchemaVersionsDiff SchemaId

-- | The first of the two schema versions to be compared.
getSchemaVersionsDiff_firstSchemaVersionNumber :: Lens' GetSchemaVersionsDiff SchemaVersionNumber

-- | The second of the two schema versions to be compared.
getSchemaVersionsDiff_secondSchemaVersionNumber :: Lens' GetSchemaVersionsDiff SchemaVersionNumber

-- | Refers to <tt>SYNTAX_DIFF</tt>, which is the currently supported diff
--   type.
getSchemaVersionsDiff_schemaDiffType :: Lens' GetSchemaVersionsDiff SchemaDiffType

-- | <i>See:</i> <a>newGetSchemaVersionsDiffResponse</a> smart constructor.
data GetSchemaVersionsDiffResponse
GetSchemaVersionsDiffResponse' :: Maybe Text -> Int -> GetSchemaVersionsDiffResponse

-- | The difference between schemas as a string in JsonPatch format.
[$sel:diff:GetSchemaVersionsDiffResponse'] :: GetSchemaVersionsDiffResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetSchemaVersionsDiffResponse'] :: GetSchemaVersionsDiffResponse -> Int

-- | Create a value of <a>GetSchemaVersionsDiffResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:diff:GetSchemaVersionsDiffResponse'</a>,
--   <a>getSchemaVersionsDiffResponse_diff</a> - The difference between
--   schemas as a string in JsonPatch format.
--   
--   <a>$sel:httpStatus:GetSchemaVersionsDiffResponse'</a>,
--   <a>getSchemaVersionsDiffResponse_httpStatus</a> - The response's http
--   status code.
newGetSchemaVersionsDiffResponse :: Int -> GetSchemaVersionsDiffResponse

-- | The difference between schemas as a string in JsonPatch format.
getSchemaVersionsDiffResponse_diff :: Lens' GetSchemaVersionsDiffResponse (Maybe Text)

-- | The response's http status code.
getSchemaVersionsDiffResponse_httpStatus :: Lens' GetSchemaVersionsDiffResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetSchemaVersionsDiff.GetSchemaVersionsDiff
instance GHC.Show.Show Network.AWS.Glue.GetSchemaVersionsDiff.GetSchemaVersionsDiff
instance GHC.Read.Read Network.AWS.Glue.GetSchemaVersionsDiff.GetSchemaVersionsDiff
instance GHC.Classes.Eq Network.AWS.Glue.GetSchemaVersionsDiff.GetSchemaVersionsDiff
instance GHC.Generics.Generic Network.AWS.Glue.GetSchemaVersionsDiff.GetSchemaVersionsDiffResponse
instance GHC.Show.Show Network.AWS.Glue.GetSchemaVersionsDiff.GetSchemaVersionsDiffResponse
instance GHC.Read.Read Network.AWS.Glue.GetSchemaVersionsDiff.GetSchemaVersionsDiffResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetSchemaVersionsDiff.GetSchemaVersionsDiffResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetSchemaVersionsDiff.GetSchemaVersionsDiff
instance Control.DeepSeq.NFData Network.AWS.Glue.GetSchemaVersionsDiff.GetSchemaVersionsDiffResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetSchemaVersionsDiff.GetSchemaVersionsDiff
instance Control.DeepSeq.NFData Network.AWS.Glue.GetSchemaVersionsDiff.GetSchemaVersionsDiff
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetSchemaVersionsDiff.GetSchemaVersionsDiff
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetSchemaVersionsDiff.GetSchemaVersionsDiff
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetSchemaVersionsDiff.GetSchemaVersionsDiff
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetSchemaVersionsDiff.GetSchemaVersionsDiff


-- | Get the specified schema by its unique ID assigned when a version of
--   the schema is created or registered. Schema versions in Deleted status
--   will not be included in the results.
module Network.AWS.Glue.GetSchemaVersion

-- | <i>See:</i> <a>newGetSchemaVersion</a> smart constructor.
data GetSchemaVersion
GetSchemaVersion' :: Maybe Text -> Maybe SchemaId -> Maybe SchemaVersionNumber -> GetSchemaVersion

-- | The <tt>SchemaVersionId</tt> of the schema version. This field is
--   required for fetching by schema ID. Either this or the
--   <tt>SchemaId</tt> wrapper has to be provided.
[$sel:schemaVersionId:GetSchemaVersion'] :: GetSchemaVersion -> Maybe Text

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   Either <tt>SchemaArn</tt> or <tt>SchemaName</tt> and
--   <tt>RegistryName</tt> has to be provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. Either
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> and <tt>RegistryName</tt>
--   has to be provided.</li>
--   </ul>
[$sel:schemaId:GetSchemaVersion'] :: GetSchemaVersion -> Maybe SchemaId

-- | The version number of the schema.
[$sel:schemaVersionNumber:GetSchemaVersion'] :: GetSchemaVersion -> Maybe SchemaVersionNumber

-- | Create a value of <a>GetSchemaVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaVersionId:GetSchemaVersion'</a>,
--   <a>getSchemaVersion_schemaVersionId</a> - The <tt>SchemaVersionId</tt>
--   of the schema version. This field is required for fetching by schema
--   ID. Either this or the <tt>SchemaId</tt> wrapper has to be provided.
--   
--   <a>$sel:schemaId:GetSchemaVersion'</a>,
--   <a>getSchemaVersion_schemaId</a> - This is a wrapper structure to
--   contain schema identity fields. The structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   Either <tt>SchemaArn</tt> or <tt>SchemaName</tt> and
--   <tt>RegistryName</tt> has to be provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. Either
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> and <tt>RegistryName</tt>
--   has to be provided.</li>
--   </ul>
--   
--   <a>$sel:schemaVersionNumber:GetSchemaVersion'</a>,
--   <a>getSchemaVersion_schemaVersionNumber</a> - The version number of
--   the schema.
newGetSchemaVersion :: GetSchemaVersion

-- | The <tt>SchemaVersionId</tt> of the schema version. This field is
--   required for fetching by schema ID. Either this or the
--   <tt>SchemaId</tt> wrapper has to be provided.
getSchemaVersion_schemaVersionId :: Lens' GetSchemaVersion (Maybe Text)

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   Either <tt>SchemaArn</tt> or <tt>SchemaName</tt> and
--   <tt>RegistryName</tt> has to be provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. Either
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> and <tt>RegistryName</tt>
--   has to be provided.</li>
--   </ul>
getSchemaVersion_schemaId :: Lens' GetSchemaVersion (Maybe SchemaId)

-- | The version number of the schema.
getSchemaVersion_schemaVersionNumber :: Lens' GetSchemaVersion (Maybe SchemaVersionNumber)

-- | <i>See:</i> <a>newGetSchemaVersionResponse</a> smart constructor.
data GetSchemaVersionResponse
GetSchemaVersionResponse' :: Maybe SchemaVersionStatus -> Maybe Text -> Maybe Text -> Maybe DataFormat -> Maybe Text -> Maybe Natural -> Maybe Text -> Int -> GetSchemaVersionResponse

-- | The status of the schema version.
[$sel:status:GetSchemaVersionResponse'] :: GetSchemaVersionResponse -> Maybe SchemaVersionStatus

-- | The schema definition for the schema ID.
[$sel:schemaDefinition:GetSchemaVersionResponse'] :: GetSchemaVersionResponse -> Maybe Text

-- | The date and time the schema version was created.
[$sel:createdTime:GetSchemaVersionResponse'] :: GetSchemaVersionResponse -> Maybe Text

-- | The data format of the schema definition. Currently <tt>AVRO</tt> and
--   <tt>JSON</tt> are supported.
[$sel:dataFormat:GetSchemaVersionResponse'] :: GetSchemaVersionResponse -> Maybe DataFormat

-- | The <tt>SchemaVersionId</tt> of the schema version.
[$sel:schemaVersionId:GetSchemaVersionResponse'] :: GetSchemaVersionResponse -> Maybe Text

-- | The version number of the schema.
[$sel:versionNumber:GetSchemaVersionResponse'] :: GetSchemaVersionResponse -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the schema.
[$sel:schemaArn:GetSchemaVersionResponse'] :: GetSchemaVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetSchemaVersionResponse'] :: GetSchemaVersionResponse -> Int

-- | Create a value of <a>GetSchemaVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetSchemaVersionResponse'</a>,
--   <a>getSchemaVersionResponse_status</a> - The status of the schema
--   version.
--   
--   <a>$sel:schemaDefinition:GetSchemaVersionResponse'</a>,
--   <a>getSchemaVersionResponse_schemaDefinition</a> - The schema
--   definition for the schema ID.
--   
--   <a>$sel:createdTime:GetSchemaVersionResponse'</a>,
--   <a>getSchemaVersionResponse_createdTime</a> - The date and time the
--   schema version was created.
--   
--   <a>$sel:dataFormat:GetSchemaVersionResponse'</a>,
--   <a>getSchemaVersionResponse_dataFormat</a> - The data format of the
--   schema definition. Currently <tt>AVRO</tt> and <tt>JSON</tt> are
--   supported.
--   
--   <a>$sel:schemaVersionId:GetSchemaVersion'</a>,
--   <a>getSchemaVersionResponse_schemaVersionId</a> - The
--   <tt>SchemaVersionId</tt> of the schema version.
--   
--   <a>$sel:versionNumber:GetSchemaVersionResponse'</a>,
--   <a>getSchemaVersionResponse_versionNumber</a> - The version number of
--   the schema.
--   
--   <a>$sel:schemaArn:GetSchemaVersionResponse'</a>,
--   <a>getSchemaVersionResponse_schemaArn</a> - The Amazon Resource Name
--   (ARN) of the schema.
--   
--   <a>$sel:httpStatus:GetSchemaVersionResponse'</a>,
--   <a>getSchemaVersionResponse_httpStatus</a> - The response's http
--   status code.
newGetSchemaVersionResponse :: Int -> GetSchemaVersionResponse

-- | The status of the schema version.
getSchemaVersionResponse_status :: Lens' GetSchemaVersionResponse (Maybe SchemaVersionStatus)

-- | The schema definition for the schema ID.
getSchemaVersionResponse_schemaDefinition :: Lens' GetSchemaVersionResponse (Maybe Text)

-- | The date and time the schema version was created.
getSchemaVersionResponse_createdTime :: Lens' GetSchemaVersionResponse (Maybe Text)

-- | The data format of the schema definition. Currently <tt>AVRO</tt> and
--   <tt>JSON</tt> are supported.
getSchemaVersionResponse_dataFormat :: Lens' GetSchemaVersionResponse (Maybe DataFormat)

-- | The <tt>SchemaVersionId</tt> of the schema version.
getSchemaVersionResponse_schemaVersionId :: Lens' GetSchemaVersionResponse (Maybe Text)

-- | The version number of the schema.
getSchemaVersionResponse_versionNumber :: Lens' GetSchemaVersionResponse (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the schema.
getSchemaVersionResponse_schemaArn :: Lens' GetSchemaVersionResponse (Maybe Text)

-- | The response's http status code.
getSchemaVersionResponse_httpStatus :: Lens' GetSchemaVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetSchemaVersion.GetSchemaVersion
instance GHC.Show.Show Network.AWS.Glue.GetSchemaVersion.GetSchemaVersion
instance GHC.Read.Read Network.AWS.Glue.GetSchemaVersion.GetSchemaVersion
instance GHC.Classes.Eq Network.AWS.Glue.GetSchemaVersion.GetSchemaVersion
instance GHC.Generics.Generic Network.AWS.Glue.GetSchemaVersion.GetSchemaVersionResponse
instance GHC.Show.Show Network.AWS.Glue.GetSchemaVersion.GetSchemaVersionResponse
instance GHC.Read.Read Network.AWS.Glue.GetSchemaVersion.GetSchemaVersionResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetSchemaVersion.GetSchemaVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetSchemaVersion.GetSchemaVersion
instance Control.DeepSeq.NFData Network.AWS.Glue.GetSchemaVersion.GetSchemaVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetSchemaVersion.GetSchemaVersion
instance Control.DeepSeq.NFData Network.AWS.Glue.GetSchemaVersion.GetSchemaVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetSchemaVersion.GetSchemaVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetSchemaVersion.GetSchemaVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetSchemaVersion.GetSchemaVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetSchemaVersion.GetSchemaVersion


-- | Retrieves a schema by the <tt>SchemaDefinition</tt>. The schema
--   definition is sent to the Schema Registry, canonicalized, and hashed.
--   If the hash is matched within the scope of the <tt>SchemaName</tt> or
--   ARN (or the default registry, if none is supplied), that schema’s
--   metadata is returned. Otherwise, a 404 or NotFound error is returned.
--   Schema versions in <tt>Deleted</tt> statuses will not be included in
--   the results.
module Network.AWS.Glue.GetSchemaByDefinition

-- | <i>See:</i> <a>newGetSchemaByDefinition</a> smart constructor.
data GetSchemaByDefinition
GetSchemaByDefinition' :: SchemaId -> Text -> GetSchemaByDefinition

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   One of <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be
--   provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. One of
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be provided.</li>
--   </ul>
[$sel:schemaId:GetSchemaByDefinition'] :: GetSchemaByDefinition -> SchemaId

-- | The definition of the schema for which schema details are required.
[$sel:schemaDefinition:GetSchemaByDefinition'] :: GetSchemaByDefinition -> Text

-- | Create a value of <a>GetSchemaByDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaId:GetSchemaByDefinition'</a>,
--   <a>getSchemaByDefinition_schemaId</a> - This is a wrapper structure to
--   contain schema identity fields. The structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   One of <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be
--   provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. One of
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be provided.</li>
--   </ul>
--   
--   <a>$sel:schemaDefinition:GetSchemaByDefinition'</a>,
--   <a>getSchemaByDefinition_schemaDefinition</a> - The definition of the
--   schema for which schema details are required.
newGetSchemaByDefinition :: SchemaId -> Text -> GetSchemaByDefinition

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   One of <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be
--   provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. One of
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be provided.</li>
--   </ul>
getSchemaByDefinition_schemaId :: Lens' GetSchemaByDefinition SchemaId

-- | The definition of the schema for which schema details are required.
getSchemaByDefinition_schemaDefinition :: Lens' GetSchemaByDefinition Text

-- | <i>See:</i> <a>newGetSchemaByDefinitionResponse</a> smart constructor.
data GetSchemaByDefinitionResponse
GetSchemaByDefinitionResponse' :: Maybe SchemaVersionStatus -> Maybe Text -> Maybe DataFormat -> Maybe Text -> Maybe Text -> Int -> GetSchemaByDefinitionResponse

-- | The status of the schema version.
[$sel:status:GetSchemaByDefinitionResponse'] :: GetSchemaByDefinitionResponse -> Maybe SchemaVersionStatus

-- | The date and time the schema was created.
[$sel:createdTime:GetSchemaByDefinitionResponse'] :: GetSchemaByDefinitionResponse -> Maybe Text

-- | The data format of the schema definition. Currently only <tt>AVRO</tt>
--   and <tt>JSON</tt> are supported.
[$sel:dataFormat:GetSchemaByDefinitionResponse'] :: GetSchemaByDefinitionResponse -> Maybe DataFormat

-- | The schema ID of the schema version.
[$sel:schemaVersionId:GetSchemaByDefinitionResponse'] :: GetSchemaByDefinitionResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the schema.
[$sel:schemaArn:GetSchemaByDefinitionResponse'] :: GetSchemaByDefinitionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetSchemaByDefinitionResponse'] :: GetSchemaByDefinitionResponse -> Int

-- | Create a value of <a>GetSchemaByDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetSchemaByDefinitionResponse'</a>,
--   <a>getSchemaByDefinitionResponse_status</a> - The status of the schema
--   version.
--   
--   <a>$sel:createdTime:GetSchemaByDefinitionResponse'</a>,
--   <a>getSchemaByDefinitionResponse_createdTime</a> - The date and time
--   the schema was created.
--   
--   <a>$sel:dataFormat:GetSchemaByDefinitionResponse'</a>,
--   <a>getSchemaByDefinitionResponse_dataFormat</a> - The data format of
--   the schema definition. Currently only <tt>AVRO</tt> and <tt>JSON</tt>
--   are supported.
--   
--   <a>$sel:schemaVersionId:GetSchemaByDefinitionResponse'</a>,
--   <a>getSchemaByDefinitionResponse_schemaVersionId</a> - The schema ID
--   of the schema version.
--   
--   <a>$sel:schemaArn:GetSchemaByDefinitionResponse'</a>,
--   <a>getSchemaByDefinitionResponse_schemaArn</a> - The Amazon Resource
--   Name (ARN) of the schema.
--   
--   <a>$sel:httpStatus:GetSchemaByDefinitionResponse'</a>,
--   <a>getSchemaByDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newGetSchemaByDefinitionResponse :: Int -> GetSchemaByDefinitionResponse

-- | The status of the schema version.
getSchemaByDefinitionResponse_status :: Lens' GetSchemaByDefinitionResponse (Maybe SchemaVersionStatus)

-- | The date and time the schema was created.
getSchemaByDefinitionResponse_createdTime :: Lens' GetSchemaByDefinitionResponse (Maybe Text)

-- | The data format of the schema definition. Currently only <tt>AVRO</tt>
--   and <tt>JSON</tt> are supported.
getSchemaByDefinitionResponse_dataFormat :: Lens' GetSchemaByDefinitionResponse (Maybe DataFormat)

-- | The schema ID of the schema version.
getSchemaByDefinitionResponse_schemaVersionId :: Lens' GetSchemaByDefinitionResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schema.
getSchemaByDefinitionResponse_schemaArn :: Lens' GetSchemaByDefinitionResponse (Maybe Text)

-- | The response's http status code.
getSchemaByDefinitionResponse_httpStatus :: Lens' GetSchemaByDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetSchemaByDefinition.GetSchemaByDefinition
instance GHC.Show.Show Network.AWS.Glue.GetSchemaByDefinition.GetSchemaByDefinition
instance GHC.Read.Read Network.AWS.Glue.GetSchemaByDefinition.GetSchemaByDefinition
instance GHC.Classes.Eq Network.AWS.Glue.GetSchemaByDefinition.GetSchemaByDefinition
instance GHC.Generics.Generic Network.AWS.Glue.GetSchemaByDefinition.GetSchemaByDefinitionResponse
instance GHC.Show.Show Network.AWS.Glue.GetSchemaByDefinition.GetSchemaByDefinitionResponse
instance GHC.Read.Read Network.AWS.Glue.GetSchemaByDefinition.GetSchemaByDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetSchemaByDefinition.GetSchemaByDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetSchemaByDefinition.GetSchemaByDefinition
instance Control.DeepSeq.NFData Network.AWS.Glue.GetSchemaByDefinition.GetSchemaByDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetSchemaByDefinition.GetSchemaByDefinition
instance Control.DeepSeq.NFData Network.AWS.Glue.GetSchemaByDefinition.GetSchemaByDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetSchemaByDefinition.GetSchemaByDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetSchemaByDefinition.GetSchemaByDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetSchemaByDefinition.GetSchemaByDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetSchemaByDefinition.GetSchemaByDefinition


-- | Describes the specified schema in detail.
module Network.AWS.Glue.GetSchema

-- | <i>See:</i> <a>newGetSchema</a> smart constructor.
data GetSchema
GetSchema' :: SchemaId -> GetSchema

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   Either <tt>SchemaArn</tt> or <tt>SchemaName</tt> and
--   <tt>RegistryName</tt> has to be provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. Either
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> and <tt>RegistryName</tt>
--   has to be provided.</li>
--   </ul>
[$sel:schemaId:GetSchema'] :: GetSchema -> SchemaId

-- | Create a value of <a>GetSchema</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaId:GetSchema'</a>, <a>getSchema_schemaId</a> - This is a
--   wrapper structure to contain schema identity fields. The structure
--   contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   Either <tt>SchemaArn</tt> or <tt>SchemaName</tt> and
--   <tt>RegistryName</tt> has to be provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. Either
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> and <tt>RegistryName</tt>
--   has to be provided.</li>
--   </ul>
newGetSchema :: SchemaId -> GetSchema

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   Either <tt>SchemaArn</tt> or <tt>SchemaName</tt> and
--   <tt>RegistryName</tt> has to be provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. Either
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> and <tt>RegistryName</tt>
--   has to be provided.</li>
--   </ul>
getSchema_schemaId :: Lens' GetSchema SchemaId

-- | <i>See:</i> <a>newGetSchemaResponse</a> smart constructor.
data GetSchemaResponse
GetSchemaResponse' :: Maybe Text -> Maybe Text -> Maybe SchemaStatus -> Maybe Text -> Maybe Natural -> Maybe DataFormat -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Compatibility -> Int -> GetSchemaResponse

-- | The name of the registry.
[$sel:registryName:GetSchemaResponse'] :: GetSchemaResponse -> Maybe Text

-- | The date and time the schema was created.
[$sel:createdTime:GetSchemaResponse'] :: GetSchemaResponse -> Maybe Text

-- | The status of the schema.
[$sel:schemaStatus:GetSchemaResponse'] :: GetSchemaResponse -> Maybe SchemaStatus

-- | The Amazon Resource Name (ARN) of the registry.
[$sel:registryArn:GetSchemaResponse'] :: GetSchemaResponse -> Maybe Text

-- | The latest version of the schema associated with the returned schema
--   definition.
[$sel:latestSchemaVersion:GetSchemaResponse'] :: GetSchemaResponse -> Maybe Natural

-- | The data format of the schema definition. Currently <tt>AVRO</tt> and
--   <tt>JSON</tt> are supported.
[$sel:dataFormat:GetSchemaResponse'] :: GetSchemaResponse -> Maybe DataFormat

-- | The version number of the checkpoint (the last time the compatibility
--   mode was changed).
[$sel:schemaCheckpoint:GetSchemaResponse'] :: GetSchemaResponse -> Maybe Natural

-- | The name of the schema.
[$sel:schemaName:GetSchemaResponse'] :: GetSchemaResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the schema.
[$sel:schemaArn:GetSchemaResponse'] :: GetSchemaResponse -> Maybe Text

-- | The next version of the schema associated with the returned schema
--   definition.
[$sel:nextSchemaVersion:GetSchemaResponse'] :: GetSchemaResponse -> Maybe Natural

-- | The date and time the schema was updated.
[$sel:updatedTime:GetSchemaResponse'] :: GetSchemaResponse -> Maybe Text

-- | A description of schema if specified when created
[$sel:description:GetSchemaResponse'] :: GetSchemaResponse -> Maybe Text

-- | The compatibility mode of the schema.
[$sel:compatibility:GetSchemaResponse'] :: GetSchemaResponse -> Maybe Compatibility

-- | The response's http status code.
[$sel:httpStatus:GetSchemaResponse'] :: GetSchemaResponse -> Int

-- | Create a value of <a>GetSchemaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_registryName</a> - The name of the registry.
--   
--   <a>$sel:createdTime:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_createdTime</a> - The date and time the schema
--   was created.
--   
--   <a>$sel:schemaStatus:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_schemaStatus</a> - The status of the schema.
--   
--   <a>$sel:registryArn:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_registryArn</a> - The Amazon Resource Name (ARN)
--   of the registry.
--   
--   <a>$sel:latestSchemaVersion:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_latestSchemaVersion</a> - The latest version of
--   the schema associated with the returned schema definition.
--   
--   <a>$sel:dataFormat:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_dataFormat</a> - The data format of the schema
--   definition. Currently <tt>AVRO</tt> and <tt>JSON</tt> are supported.
--   
--   <a>$sel:schemaCheckpoint:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_schemaCheckpoint</a> - The version number of the
--   checkpoint (the last time the compatibility mode was changed).
--   
--   <a>$sel:schemaName:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_schemaName</a> - The name of the schema.
--   
--   <a>$sel:schemaArn:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_schemaArn</a> - The Amazon Resource Name (ARN) of
--   the schema.
--   
--   <a>$sel:nextSchemaVersion:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_nextSchemaVersion</a> - The next version of the
--   schema associated with the returned schema definition.
--   
--   <a>$sel:updatedTime:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_updatedTime</a> - The date and time the schema
--   was updated.
--   
--   <a>$sel:description:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_description</a> - A description of schema if
--   specified when created
--   
--   <a>$sel:compatibility:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_compatibility</a> - The compatibility mode of the
--   schema.
--   
--   <a>$sel:httpStatus:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_httpStatus</a> - The response's http status code.
newGetSchemaResponse :: Int -> GetSchemaResponse

-- | The name of the registry.
getSchemaResponse_registryName :: Lens' GetSchemaResponse (Maybe Text)

-- | The date and time the schema was created.
getSchemaResponse_createdTime :: Lens' GetSchemaResponse (Maybe Text)

-- | The status of the schema.
getSchemaResponse_schemaStatus :: Lens' GetSchemaResponse (Maybe SchemaStatus)

-- | The Amazon Resource Name (ARN) of the registry.
getSchemaResponse_registryArn :: Lens' GetSchemaResponse (Maybe Text)

-- | The latest version of the schema associated with the returned schema
--   definition.
getSchemaResponse_latestSchemaVersion :: Lens' GetSchemaResponse (Maybe Natural)

-- | The data format of the schema definition. Currently <tt>AVRO</tt> and
--   <tt>JSON</tt> are supported.
getSchemaResponse_dataFormat :: Lens' GetSchemaResponse (Maybe DataFormat)

-- | The version number of the checkpoint (the last time the compatibility
--   mode was changed).
getSchemaResponse_schemaCheckpoint :: Lens' GetSchemaResponse (Maybe Natural)

-- | The name of the schema.
getSchemaResponse_schemaName :: Lens' GetSchemaResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schema.
getSchemaResponse_schemaArn :: Lens' GetSchemaResponse (Maybe Text)

-- | The next version of the schema associated with the returned schema
--   definition.
getSchemaResponse_nextSchemaVersion :: Lens' GetSchemaResponse (Maybe Natural)

-- | The date and time the schema was updated.
getSchemaResponse_updatedTime :: Lens' GetSchemaResponse (Maybe Text)

-- | A description of schema if specified when created
getSchemaResponse_description :: Lens' GetSchemaResponse (Maybe Text)

-- | The compatibility mode of the schema.
getSchemaResponse_compatibility :: Lens' GetSchemaResponse (Maybe Compatibility)

-- | The response's http status code.
getSchemaResponse_httpStatus :: Lens' GetSchemaResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetSchema.GetSchema
instance GHC.Show.Show Network.AWS.Glue.GetSchema.GetSchema
instance GHC.Read.Read Network.AWS.Glue.GetSchema.GetSchema
instance GHC.Classes.Eq Network.AWS.Glue.GetSchema.GetSchema
instance GHC.Generics.Generic Network.AWS.Glue.GetSchema.GetSchemaResponse
instance GHC.Show.Show Network.AWS.Glue.GetSchema.GetSchemaResponse
instance GHC.Read.Read Network.AWS.Glue.GetSchema.GetSchemaResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetSchema.GetSchemaResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetSchema.GetSchema
instance Control.DeepSeq.NFData Network.AWS.Glue.GetSchema.GetSchemaResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetSchema.GetSchema
instance Control.DeepSeq.NFData Network.AWS.Glue.GetSchema.GetSchema
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetSchema.GetSchema
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetSchema.GetSchema
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetSchema.GetSchema
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetSchema.GetSchema


-- | Retrieves a specified resource policy.
module Network.AWS.Glue.GetResourcePolicy

-- | <i>See:</i> <a>newGetResourcePolicy</a> smart constructor.
data GetResourcePolicy
GetResourcePolicy' :: Maybe Text -> GetResourcePolicy

-- | The ARN of the Glue resource for which to retrieve the resource
--   policy. If not supplied, the Data Catalog resource policy is returned.
--   Use <tt>GetResourcePolicies</tt> to view all existing resource
--   policies. For more information see <a>Specifying Glue Resource
--   ARNs</a>.
[$sel:resourceArn:GetResourcePolicy'] :: GetResourcePolicy -> Maybe Text

-- | Create a value of <a>GetResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:GetResourcePolicy'</a>,
--   <a>getResourcePolicy_resourceArn</a> - The ARN of the Glue resource
--   for which to retrieve the resource policy. If not supplied, the Data
--   Catalog resource policy is returned. Use <tt>GetResourcePolicies</tt>
--   to view all existing resource policies. For more information see
--   <a>Specifying Glue Resource ARNs</a>.
newGetResourcePolicy :: GetResourcePolicy

-- | The ARN of the Glue resource for which to retrieve the resource
--   policy. If not supplied, the Data Catalog resource policy is returned.
--   Use <tt>GetResourcePolicies</tt> to view all existing resource
--   policies. For more information see <a>Specifying Glue Resource
--   ARNs</a>.
getResourcePolicy_resourceArn :: Lens' GetResourcePolicy (Maybe Text)

-- | <i>See:</i> <a>newGetResourcePolicyResponse</a> smart constructor.
data GetResourcePolicyResponse
GetResourcePolicyResponse' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Int -> GetResourcePolicyResponse

-- | Contains the requested policy document, in JSON format.
[$sel:policyInJson:GetResourcePolicyResponse'] :: GetResourcePolicyResponse -> Maybe Text

-- | The date and time at which the policy was last updated.
[$sel:updateTime:GetResourcePolicyResponse'] :: GetResourcePolicyResponse -> Maybe POSIX

-- | Contains the hash value associated with this policy.
[$sel:policyHash:GetResourcePolicyResponse'] :: GetResourcePolicyResponse -> Maybe Text

-- | The date and time at which the policy was created.
[$sel:createTime:GetResourcePolicyResponse'] :: GetResourcePolicyResponse -> Maybe POSIX

-- | The response's http status code.
[$sel:httpStatus:GetResourcePolicyResponse'] :: GetResourcePolicyResponse -> Int

-- | Create a value of <a>GetResourcePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyInJson:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_policyInJson</a> - Contains the requested
--   policy document, in JSON format.
--   
--   <a>$sel:updateTime:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_updateTime</a> - The date and time at
--   which the policy was last updated.
--   
--   <a>$sel:policyHash:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_policyHash</a> - Contains the hash value
--   associated with this policy.
--   
--   <a>$sel:createTime:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_createTime</a> - The date and time at
--   which the policy was created.
--   
--   <a>$sel:httpStatus:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newGetResourcePolicyResponse :: Int -> GetResourcePolicyResponse

-- | Contains the requested policy document, in JSON format.
getResourcePolicyResponse_policyInJson :: Lens' GetResourcePolicyResponse (Maybe Text)

-- | The date and time at which the policy was last updated.
getResourcePolicyResponse_updateTime :: Lens' GetResourcePolicyResponse (Maybe UTCTime)

-- | Contains the hash value associated with this policy.
getResourcePolicyResponse_policyHash :: Lens' GetResourcePolicyResponse (Maybe Text)

-- | The date and time at which the policy was created.
getResourcePolicyResponse_createTime :: Lens' GetResourcePolicyResponse (Maybe UTCTime)

-- | The response's http status code.
getResourcePolicyResponse_httpStatus :: Lens' GetResourcePolicyResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetResourcePolicy.GetResourcePolicy
instance GHC.Show.Show Network.AWS.Glue.GetResourcePolicy.GetResourcePolicy
instance GHC.Read.Read Network.AWS.Glue.GetResourcePolicy.GetResourcePolicy
instance GHC.Classes.Eq Network.AWS.Glue.GetResourcePolicy.GetResourcePolicy
instance GHC.Generics.Generic Network.AWS.Glue.GetResourcePolicy.GetResourcePolicyResponse
instance GHC.Show.Show Network.AWS.Glue.GetResourcePolicy.GetResourcePolicyResponse
instance GHC.Read.Read Network.AWS.Glue.GetResourcePolicy.GetResourcePolicyResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetResourcePolicy.GetResourcePolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetResourcePolicy.GetResourcePolicy
instance Control.DeepSeq.NFData Network.AWS.Glue.GetResourcePolicy.GetResourcePolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetResourcePolicy.GetResourcePolicy
instance Control.DeepSeq.NFData Network.AWS.Glue.GetResourcePolicy.GetResourcePolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetResourcePolicy.GetResourcePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetResourcePolicy.GetResourcePolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetResourcePolicy.GetResourcePolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetResourcePolicy.GetResourcePolicy


-- | Retrieves the resource policies set on individual resources by
--   Resource Access Manager during cross-account permission grants. Also
--   retrieves the Data Catalog resource policy.
--   
--   If you enabled metadata encryption in Data Catalog settings, and you
--   do not have permission on the KMS key, the operation can't return the
--   Data Catalog resource policy.
--   
--   This operation returns paginated results.
module Network.AWS.Glue.GetResourcePolicies

-- | <i>See:</i> <a>newGetResourcePolicies</a> smart constructor.
data GetResourcePolicies
GetResourcePolicies' :: Maybe Text -> Maybe Natural -> GetResourcePolicies

-- | A continuation token, if this is a continuation request.
[$sel:nextToken:GetResourcePolicies'] :: GetResourcePolicies -> Maybe Text

-- | The maximum size of a list to return.
[$sel:maxResults:GetResourcePolicies'] :: GetResourcePolicies -> Maybe Natural

-- | Create a value of <a>GetResourcePolicies</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetResourcePolicies'</a>,
--   <a>getResourcePolicies_nextToken</a> - A continuation token, if this
--   is a continuation request.
--   
--   <a>$sel:maxResults:GetResourcePolicies'</a>,
--   <a>getResourcePolicies_maxResults</a> - The maximum size of a list to
--   return.
newGetResourcePolicies :: GetResourcePolicies

-- | A continuation token, if this is a continuation request.
getResourcePolicies_nextToken :: Lens' GetResourcePolicies (Maybe Text)

-- | The maximum size of a list to return.
getResourcePolicies_maxResults :: Lens' GetResourcePolicies (Maybe Natural)

-- | <i>See:</i> <a>newGetResourcePoliciesResponse</a> smart constructor.
data GetResourcePoliciesResponse
GetResourcePoliciesResponse' :: Maybe [GluePolicy] -> Maybe Text -> Int -> GetResourcePoliciesResponse

-- | A list of the individual resource policies and the account-level
--   resource policy.
[$sel:getResourcePoliciesResponseList:GetResourcePoliciesResponse'] :: GetResourcePoliciesResponse -> Maybe [GluePolicy]

-- | A continuation token, if the returned list does not contain the last
--   resource policy available.
[$sel:nextToken:GetResourcePoliciesResponse'] :: GetResourcePoliciesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetResourcePoliciesResponse'] :: GetResourcePoliciesResponse -> Int

-- | Create a value of <a>GetResourcePoliciesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:getResourcePoliciesResponseList:GetResourcePoliciesResponse'</a>,
--   <a>getResourcePoliciesResponse_getResourcePoliciesResponseList</a> - A
--   list of the individual resource policies and the account-level
--   resource policy.
--   
--   <a>$sel:nextToken:GetResourcePolicies'</a>,
--   <a>getResourcePoliciesResponse_nextToken</a> - A continuation token,
--   if the returned list does not contain the last resource policy
--   available.
--   
--   <a>$sel:httpStatus:GetResourcePoliciesResponse'</a>,
--   <a>getResourcePoliciesResponse_httpStatus</a> - The response's http
--   status code.
newGetResourcePoliciesResponse :: Int -> GetResourcePoliciesResponse

-- | A list of the individual resource policies and the account-level
--   resource policy.
getResourcePoliciesResponse_getResourcePoliciesResponseList :: Lens' GetResourcePoliciesResponse (Maybe [GluePolicy])

-- | A continuation token, if the returned list does not contain the last
--   resource policy available.
getResourcePoliciesResponse_nextToken :: Lens' GetResourcePoliciesResponse (Maybe Text)

-- | The response's http status code.
getResourcePoliciesResponse_httpStatus :: Lens' GetResourcePoliciesResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetResourcePolicies.GetResourcePolicies
instance GHC.Show.Show Network.AWS.Glue.GetResourcePolicies.GetResourcePolicies
instance GHC.Read.Read Network.AWS.Glue.GetResourcePolicies.GetResourcePolicies
instance GHC.Classes.Eq Network.AWS.Glue.GetResourcePolicies.GetResourcePolicies
instance GHC.Generics.Generic Network.AWS.Glue.GetResourcePolicies.GetResourcePoliciesResponse
instance GHC.Show.Show Network.AWS.Glue.GetResourcePolicies.GetResourcePoliciesResponse
instance GHC.Read.Read Network.AWS.Glue.GetResourcePolicies.GetResourcePoliciesResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetResourcePolicies.GetResourcePoliciesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetResourcePolicies.GetResourcePolicies
instance Control.DeepSeq.NFData Network.AWS.Glue.GetResourcePolicies.GetResourcePoliciesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Glue.GetResourcePolicies.GetResourcePolicies
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetResourcePolicies.GetResourcePolicies
instance Control.DeepSeq.NFData Network.AWS.Glue.GetResourcePolicies.GetResourcePolicies
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetResourcePolicies.GetResourcePolicies
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetResourcePolicies.GetResourcePolicies
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetResourcePolicies.GetResourcePolicies
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetResourcePolicies.GetResourcePolicies


-- | Describes the specified registry in detail.
module Network.AWS.Glue.GetRegistry

-- | <i>See:</i> <a>newGetRegistry</a> smart constructor.
data GetRegistry
GetRegistry' :: RegistryId -> GetRegistry

-- | This is a wrapper structure that may contain the registry name and
--   Amazon Resource Name (ARN).
[$sel:registryId:GetRegistry'] :: GetRegistry -> RegistryId

-- | Create a value of <a>GetRegistry</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryId:GetRegistry'</a>, <a>getRegistry_registryId</a> -
--   This is a wrapper structure that may contain the registry name and
--   Amazon Resource Name (ARN).
newGetRegistry :: RegistryId -> GetRegistry

-- | This is a wrapper structure that may contain the registry name and
--   Amazon Resource Name (ARN).
getRegistry_registryId :: Lens' GetRegistry RegistryId

-- | <i>See:</i> <a>newGetRegistryResponse</a> smart constructor.
data GetRegistryResponse
GetRegistryResponse' :: Maybe RegistryStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetRegistryResponse

-- | The status of the registry.
[$sel:status:GetRegistryResponse'] :: GetRegistryResponse -> Maybe RegistryStatus

-- | The name of the registry.
[$sel:registryName:GetRegistryResponse'] :: GetRegistryResponse -> Maybe Text

-- | The date and time the registry was created.
[$sel:createdTime:GetRegistryResponse'] :: GetRegistryResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the registry.
[$sel:registryArn:GetRegistryResponse'] :: GetRegistryResponse -> Maybe Text

-- | The date and time the registry was updated.
[$sel:updatedTime:GetRegistryResponse'] :: GetRegistryResponse -> Maybe Text

-- | A description of the registry.
[$sel:description:GetRegistryResponse'] :: GetRegistryResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetRegistryResponse'] :: GetRegistryResponse -> Int

-- | Create a value of <a>GetRegistryResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetRegistryResponse'</a>,
--   <a>getRegistryResponse_status</a> - The status of the registry.
--   
--   <a>$sel:registryName:GetRegistryResponse'</a>,
--   <a>getRegistryResponse_registryName</a> - The name of the registry.
--   
--   <a>$sel:createdTime:GetRegistryResponse'</a>,
--   <a>getRegistryResponse_createdTime</a> - The date and time the
--   registry was created.
--   
--   <a>$sel:registryArn:GetRegistryResponse'</a>,
--   <a>getRegistryResponse_registryArn</a> - The Amazon Resource Name
--   (ARN) of the registry.
--   
--   <a>$sel:updatedTime:GetRegistryResponse'</a>,
--   <a>getRegistryResponse_updatedTime</a> - The date and time the
--   registry was updated.
--   
--   <a>$sel:description:GetRegistryResponse'</a>,
--   <a>getRegistryResponse_description</a> - A description of the
--   registry.
--   
--   <a>$sel:httpStatus:GetRegistryResponse'</a>,
--   <a>getRegistryResponse_httpStatus</a> - The response's http status
--   code.
newGetRegistryResponse :: Int -> GetRegistryResponse

-- | The status of the registry.
getRegistryResponse_status :: Lens' GetRegistryResponse (Maybe RegistryStatus)

-- | The name of the registry.
getRegistryResponse_registryName :: Lens' GetRegistryResponse (Maybe Text)

-- | The date and time the registry was created.
getRegistryResponse_createdTime :: Lens' GetRegistryResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the registry.
getRegistryResponse_registryArn :: Lens' GetRegistryResponse (Maybe Text)

-- | The date and time the registry was updated.
getRegistryResponse_updatedTime :: Lens' GetRegistryResponse (Maybe Text)

-- | A description of the registry.
getRegistryResponse_description :: Lens' GetRegistryResponse (Maybe Text)

-- | The response's http status code.
getRegistryResponse_httpStatus :: Lens' GetRegistryResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetRegistry.GetRegistry
instance GHC.Show.Show Network.AWS.Glue.GetRegistry.GetRegistry
instance GHC.Read.Read Network.AWS.Glue.GetRegistry.GetRegistry
instance GHC.Classes.Eq Network.AWS.Glue.GetRegistry.GetRegistry
instance GHC.Generics.Generic Network.AWS.Glue.GetRegistry.GetRegistryResponse
instance GHC.Show.Show Network.AWS.Glue.GetRegistry.GetRegistryResponse
instance GHC.Read.Read Network.AWS.Glue.GetRegistry.GetRegistryResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetRegistry.GetRegistryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetRegistry.GetRegistry
instance Control.DeepSeq.NFData Network.AWS.Glue.GetRegistry.GetRegistryResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetRegistry.GetRegistry
instance Control.DeepSeq.NFData Network.AWS.Glue.GetRegistry.GetRegistry
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetRegistry.GetRegistry
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetRegistry.GetRegistry
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetRegistry.GetRegistry
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetRegistry.GetRegistry


-- | Gets code to perform a specified mapping.
module Network.AWS.Glue.GetPlan

-- | <i>See:</i> <a>newGetPlan</a> smart constructor.
data GetPlan
GetPlan' :: Maybe [CatalogEntry] -> Maybe Location -> Maybe Language -> Maybe (HashMap Text Text) -> [MappingEntry] -> CatalogEntry -> GetPlan

-- | The target tables.
[$sel:sinks:GetPlan'] :: GetPlan -> Maybe [CatalogEntry]

-- | The parameters for the mapping.
[$sel:location:GetPlan'] :: GetPlan -> Maybe Location

-- | The programming language of the code to perform the mapping.
[$sel:language:GetPlan'] :: GetPlan -> Maybe Language

-- | A map to hold additional optional key-value parameters.
--   
--   Currently, these key-value pairs are supported:
--   
--   <ul>
--   <li><tt>inferSchema</tt> — Specifies whether to set
--   <tt>inferSchema</tt> to true or false for the default script generated
--   by an Glue job. For example, to set <tt>inferSchema</tt> to true, pass
--   the following key value pair:<pre>--additional-plan-options-map
--   '{"inferSchema":"true"}'</pre></li>
--   </ul>
[$sel:additionalPlanOptionsMap:GetPlan'] :: GetPlan -> Maybe (HashMap Text Text)

-- | The list of mappings from a source table to target tables.
[$sel:mapping:GetPlan'] :: GetPlan -> [MappingEntry]

-- | The source table.
[$sel:source:GetPlan'] :: GetPlan -> CatalogEntry

-- | Create a value of <a>GetPlan</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sinks:GetPlan'</a>, <a>getPlan_sinks</a> - The target tables.
--   
--   <a>$sel:location:GetPlan'</a>, <a>getPlan_location</a> - The
--   parameters for the mapping.
--   
--   <a>$sel:language:GetPlan'</a>, <a>getPlan_language</a> - The
--   programming language of the code to perform the mapping.
--   
--   <a>$sel:additionalPlanOptionsMap:GetPlan'</a>,
--   <a>getPlan_additionalPlanOptionsMap</a> - A map to hold additional
--   optional key-value parameters.
--   
--   Currently, these key-value pairs are supported:
--   
--   <ul>
--   <li><tt>inferSchema</tt> — Specifies whether to set
--   <tt>inferSchema</tt> to true or false for the default script generated
--   by an Glue job. For example, to set <tt>inferSchema</tt> to true, pass
--   the following key value pair:<pre>--additional-plan-options-map
--   '{"inferSchema":"true"}'</pre></li>
--   </ul>
--   
--   <a>$sel:mapping:GetPlan'</a>, <a>getPlan_mapping</a> - The list of
--   mappings from a source table to target tables.
--   
--   <a>$sel:source:GetPlan'</a>, <a>getPlan_source</a> - The source table.
newGetPlan :: CatalogEntry -> GetPlan

-- | The target tables.
getPlan_sinks :: Lens' GetPlan (Maybe [CatalogEntry])

-- | The parameters for the mapping.
getPlan_location :: Lens' GetPlan (Maybe Location)

-- | The programming language of the code to perform the mapping.
getPlan_language :: Lens' GetPlan (Maybe Language)

-- | A map to hold additional optional key-value parameters.
--   
--   Currently, these key-value pairs are supported:
--   
--   <ul>
--   <li><tt>inferSchema</tt> — Specifies whether to set
--   <tt>inferSchema</tt> to true or false for the default script generated
--   by an Glue job. For example, to set <tt>inferSchema</tt> to true, pass
--   the following key value pair:<pre>--additional-plan-options-map
--   '{"inferSchema":"true"}'</pre></li>
--   </ul>
getPlan_additionalPlanOptionsMap :: Lens' GetPlan (Maybe (HashMap Text Text))

-- | The list of mappings from a source table to target tables.
getPlan_mapping :: Lens' GetPlan [MappingEntry]

-- | The source table.
getPlan_source :: Lens' GetPlan CatalogEntry

-- | <i>See:</i> <a>newGetPlanResponse</a> smart constructor.
data GetPlanResponse
GetPlanResponse' :: Maybe Text -> Maybe Text -> Int -> GetPlanResponse

-- | A Python script to perform the mapping.
[$sel:pythonScript:GetPlanResponse'] :: GetPlanResponse -> Maybe Text

-- | The Scala code to perform the mapping.
[$sel:scalaCode:GetPlanResponse'] :: GetPlanResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetPlanResponse'] :: GetPlanResponse -> Int

-- | Create a value of <a>GetPlanResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pythonScript:GetPlanResponse'</a>,
--   <a>getPlanResponse_pythonScript</a> - A Python script to perform the
--   mapping.
--   
--   <a>$sel:scalaCode:GetPlanResponse'</a>,
--   <a>getPlanResponse_scalaCode</a> - The Scala code to perform the
--   mapping.
--   
--   <a>$sel:httpStatus:GetPlanResponse'</a>,
--   <a>getPlanResponse_httpStatus</a> - The response's http status code.
newGetPlanResponse :: Int -> GetPlanResponse

-- | A Python script to perform the mapping.
getPlanResponse_pythonScript :: Lens' GetPlanResponse (Maybe Text)

-- | The Scala code to perform the mapping.
getPlanResponse_scalaCode :: Lens' GetPlanResponse (Maybe Text)

-- | The response's http status code.
getPlanResponse_httpStatus :: Lens' GetPlanResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetPlan.GetPlan
instance GHC.Show.Show Network.AWS.Glue.GetPlan.GetPlan
instance GHC.Read.Read Network.AWS.Glue.GetPlan.GetPlan
instance GHC.Classes.Eq Network.AWS.Glue.GetPlan.GetPlan
instance GHC.Generics.Generic Network.AWS.Glue.GetPlan.GetPlanResponse
instance GHC.Show.Show Network.AWS.Glue.GetPlan.GetPlanResponse
instance GHC.Read.Read Network.AWS.Glue.GetPlan.GetPlanResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetPlan.GetPlanResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetPlan.GetPlan
instance Control.DeepSeq.NFData Network.AWS.Glue.GetPlan.GetPlanResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetPlan.GetPlan
instance Control.DeepSeq.NFData Network.AWS.Glue.GetPlan.GetPlan
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetPlan.GetPlan
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetPlan.GetPlan
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetPlan.GetPlan
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetPlan.GetPlan


-- | Retrieves information about the partitions in a table.
--   
--   This operation returns paginated results.
module Network.AWS.Glue.GetPartitions

-- | <i>See:</i> <a>newGetPartitions</a> smart constructor.
data GetPartitions
GetPartitions' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Segment -> Maybe Natural -> Text -> Text -> GetPartitions

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is provided, the Amazon Web Services account ID is used by
--   default.
[$sel:catalogId:GetPartitions'] :: GetPartitions -> Maybe Text

-- | When true, specifies not returning the partition column schema. Useful
--   when you are interested only in other partition attributes such as
--   partition values or location. This approach avoids the problem of a
--   large response by not returning duplicate data.
[$sel:excludeColumnSchema:GetPartitions'] :: GetPartitions -> Maybe Bool

-- | A continuation token, if this is not the first call to retrieve these
--   partitions.
[$sel:nextToken:GetPartitions'] :: GetPartitions -> Maybe Text

-- | An expression that filters the partitions to be returned.
--   
--   The expression uses SQL syntax similar to the SQL <tt>WHERE</tt>
--   filter clause. The SQL statement parser <a>JSQLParser</a> parses the
--   expression.
--   
--   <i>Operators</i>: The following are the operators that you can use in
--   the <tt>Expression</tt> API call:
--   
--   <ul>
--   <li><i>=</i> Checks whether the values of the two operands are equal;
--   if yes, then the condition becomes true.Example: Assume 'variable a'
--   holds 10 and 'variable b' holds 20.(a = b) is not true.</li>
--   <li><i>&lt; &gt;</i> Checks whether the values of two operands are
--   equal; if the values are not equal, then the condition becomes
--   true.Example: (a &lt; &gt; b) is true.</li>
--   <li><i>&gt;</i> Checks whether the value of the left operand is
--   greater than the value of the right operand; if yes, then the
--   condition becomes true.Example: (a &gt; b) is not true.</li>
--   <li><i>&lt;</i> Checks whether the value of the left operand is less
--   than the value of the right operand; if yes, then the condition
--   becomes true.Example: (a &lt; b) is true.</li>
--   <li><i>&gt;=</i> Checks whether the value of the left operand is
--   greater than or equal to the value of the right operand; if yes, then
--   the condition becomes true.Example: (a &gt;= b) is not true.</li>
--   <li><i>&lt;=</i> Checks whether the value of the left operand is less
--   than or equal to the value of the right operand; if yes, then the
--   condition becomes true.Example: (a &lt;= b) is true.</li>
--   <li><i>AND, OR, IN, BETWEEN, LIKE, NOT, IS NULL</i> Logical
--   operators.</li>
--   </ul>
--   
--   <i>Supported Partition Key Types</i>: The following are the supported
--   partition keys.
--   
--   <ul>
--   <li><pre>string</pre></li>
--   <li><pre>date</pre></li>
--   <li><pre>timestamp</pre></li>
--   <li><pre>int</pre></li>
--   <li><pre>bigint</pre></li>
--   <li><pre>long</pre></li>
--   <li><pre>tinyint</pre></li>
--   <li><pre>smallint</pre></li>
--   <li><pre>decimal</pre></li>
--   </ul>
--   
--   If an type is encountered that is not valid, an exception is thrown.
--   
--   The following list shows the valid operators on each type. When you
--   define a crawler, the <tt>partitionKey</tt> type is created as a
--   <tt>STRING</tt>, to be compatible with the catalog partitions.
--   
--   <i>Sample API Call</i>:
[$sel:expression:GetPartitions'] :: GetPartitions -> Maybe Text

-- | The segment of the table's partitions to scan in this request.
[$sel:segment:GetPartitions'] :: GetPartitions -> Maybe Segment

-- | The maximum number of partitions to return in a single response.
[$sel:maxResults:GetPartitions'] :: GetPartitions -> Maybe Natural

-- | The name of the catalog database where the partitions reside.
[$sel:databaseName:GetPartitions'] :: GetPartitions -> Text

-- | The name of the partitions' table.
[$sel:tableName:GetPartitions'] :: GetPartitions -> Text

-- | Create a value of <a>GetPartitions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetPartitions'</a>, <a>getPartitions_catalogId</a> -
--   The ID of the Data Catalog where the partitions in question reside. If
--   none is provided, the Amazon Web Services account ID is used by
--   default.
--   
--   <a>$sel:excludeColumnSchema:GetPartitions'</a>,
--   <a>getPartitions_excludeColumnSchema</a> - When true, specifies not
--   returning the partition column schema. Useful when you are interested
--   only in other partition attributes such as partition values or
--   location. This approach avoids the problem of a large response by not
--   returning duplicate data.
--   
--   <a>$sel:nextToken:GetPartitions'</a>, <a>getPartitions_nextToken</a> -
--   A continuation token, if this is not the first call to retrieve these
--   partitions.
--   
--   <a>$sel:expression:GetPartitions'</a>, <a>getPartitions_expression</a>
--   - An expression that filters the partitions to be returned.
--   
--   The expression uses SQL syntax similar to the SQL <tt>WHERE</tt>
--   filter clause. The SQL statement parser <a>JSQLParser</a> parses the
--   expression.
--   
--   <i>Operators</i>: The following are the operators that you can use in
--   the <tt>Expression</tt> API call:
--   
--   <ul>
--   <li><i>=</i> Checks whether the values of the two operands are equal;
--   if yes, then the condition becomes true.Example: Assume 'variable a'
--   holds 10 and 'variable b' holds 20.(a = b) is not true.</li>
--   <li><i>&lt; &gt;</i> Checks whether the values of two operands are
--   equal; if the values are not equal, then the condition becomes
--   true.Example: (a &lt; &gt; b) is true.</li>
--   <li><i>&gt;</i> Checks whether the value of the left operand is
--   greater than the value of the right operand; if yes, then the
--   condition becomes true.Example: (a &gt; b) is not true.</li>
--   <li><i>&lt;</i> Checks whether the value of the left operand is less
--   than the value of the right operand; if yes, then the condition
--   becomes true.Example: (a &lt; b) is true.</li>
--   <li><i>&gt;=</i> Checks whether the value of the left operand is
--   greater than or equal to the value of the right operand; if yes, then
--   the condition becomes true.Example: (a &gt;= b) is not true.</li>
--   <li><i>&lt;=</i> Checks whether the value of the left operand is less
--   than or equal to the value of the right operand; if yes, then the
--   condition becomes true.Example: (a &lt;= b) is true.</li>
--   <li><i>AND, OR, IN, BETWEEN, LIKE, NOT, IS NULL</i> Logical
--   operators.</li>
--   </ul>
--   
--   <i>Supported Partition Key Types</i>: The following are the supported
--   partition keys.
--   
--   <ul>
--   <li><pre>string</pre></li>
--   <li><pre>date</pre></li>
--   <li><pre>timestamp</pre></li>
--   <li><pre>int</pre></li>
--   <li><pre>bigint</pre></li>
--   <li><pre>long</pre></li>
--   <li><pre>tinyint</pre></li>
--   <li><pre>smallint</pre></li>
--   <li><pre>decimal</pre></li>
--   </ul>
--   
--   If an type is encountered that is not valid, an exception is thrown.
--   
--   The following list shows the valid operators on each type. When you
--   define a crawler, the <tt>partitionKey</tt> type is created as a
--   <tt>STRING</tt>, to be compatible with the catalog partitions.
--   
--   <i>Sample API Call</i>:
--   
--   <a>$sel:segment:GetPartitions'</a>, <a>getPartitions_segment</a> - The
--   segment of the table's partitions to scan in this request.
--   
--   <a>$sel:maxResults:GetPartitions'</a>, <a>getPartitions_maxResults</a>
--   - The maximum number of partitions to return in a single response.
--   
--   <a>$sel:databaseName:GetPartitions'</a>,
--   <a>getPartitions_databaseName</a> - The name of the catalog database
--   where the partitions reside.
--   
--   <a>$sel:tableName:GetPartitions'</a>, <a>getPartitions_tableName</a> -
--   The name of the partitions' table.
newGetPartitions :: Text -> Text -> GetPartitions

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is provided, the Amazon Web Services account ID is used by
--   default.
getPartitions_catalogId :: Lens' GetPartitions (Maybe Text)

-- | When true, specifies not returning the partition column schema. Useful
--   when you are interested only in other partition attributes such as
--   partition values or location. This approach avoids the problem of a
--   large response by not returning duplicate data.
getPartitions_excludeColumnSchema :: Lens' GetPartitions (Maybe Bool)

-- | A continuation token, if this is not the first call to retrieve these
--   partitions.
getPartitions_nextToken :: Lens' GetPartitions (Maybe Text)

-- | An expression that filters the partitions to be returned.
--   
--   The expression uses SQL syntax similar to the SQL <tt>WHERE</tt>
--   filter clause. The SQL statement parser <a>JSQLParser</a> parses the
--   expression.
--   
--   <i>Operators</i>: The following are the operators that you can use in
--   the <tt>Expression</tt> API call:
--   
--   <ul>
--   <li><i>=</i> Checks whether the values of the two operands are equal;
--   if yes, then the condition becomes true.Example: Assume 'variable a'
--   holds 10 and 'variable b' holds 20.(a = b) is not true.</li>
--   <li><i>&lt; &gt;</i> Checks whether the values of two operands are
--   equal; if the values are not equal, then the condition becomes
--   true.Example: (a &lt; &gt; b) is true.</li>
--   <li><i>&gt;</i> Checks whether the value of the left operand is
--   greater than the value of the right operand; if yes, then the
--   condition becomes true.Example: (a &gt; b) is not true.</li>
--   <li><i>&lt;</i> Checks whether the value of the left operand is less
--   than the value of the right operand; if yes, then the condition
--   becomes true.Example: (a &lt; b) is true.</li>
--   <li><i>&gt;=</i> Checks whether the value of the left operand is
--   greater than or equal to the value of the right operand; if yes, then
--   the condition becomes true.Example: (a &gt;= b) is not true.</li>
--   <li><i>&lt;=</i> Checks whether the value of the left operand is less
--   than or equal to the value of the right operand; if yes, then the
--   condition becomes true.Example: (a &lt;= b) is true.</li>
--   <li><i>AND, OR, IN, BETWEEN, LIKE, NOT, IS NULL</i> Logical
--   operators.</li>
--   </ul>
--   
--   <i>Supported Partition Key Types</i>: The following are the supported
--   partition keys.
--   
--   <ul>
--   <li><pre>string</pre></li>
--   <li><pre>date</pre></li>
--   <li><pre>timestamp</pre></li>
--   <li><pre>int</pre></li>
--   <li><pre>bigint</pre></li>
--   <li><pre>long</pre></li>
--   <li><pre>tinyint</pre></li>
--   <li><pre>smallint</pre></li>
--   <li><pre>decimal</pre></li>
--   </ul>
--   
--   If an type is encountered that is not valid, an exception is thrown.
--   
--   The following list shows the valid operators on each type. When you
--   define a crawler, the <tt>partitionKey</tt> type is created as a
--   <tt>STRING</tt>, to be compatible with the catalog partitions.
--   
--   <i>Sample API Call</i>:
getPartitions_expression :: Lens' GetPartitions (Maybe Text)

-- | The segment of the table's partitions to scan in this request.
getPartitions_segment :: Lens' GetPartitions (Maybe Segment)

-- | The maximum number of partitions to return in a single response.
getPartitions_maxResults :: Lens' GetPartitions (Maybe Natural)

-- | The name of the catalog database where the partitions reside.
getPartitions_databaseName :: Lens' GetPartitions Text

-- | The name of the partitions' table.
getPartitions_tableName :: Lens' GetPartitions Text

-- | <i>See:</i> <a>newGetPartitionsResponse</a> smart constructor.
data GetPartitionsResponse
GetPartitionsResponse' :: Maybe [Partition] -> Maybe Text -> Int -> GetPartitionsResponse

-- | A list of requested partitions.
[$sel:partitions:GetPartitionsResponse'] :: GetPartitionsResponse -> Maybe [Partition]

-- | A continuation token, if the returned list of partitions does not
--   include the last one.
[$sel:nextToken:GetPartitionsResponse'] :: GetPartitionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetPartitionsResponse'] :: GetPartitionsResponse -> Int

-- | Create a value of <a>GetPartitionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitions:GetPartitionsResponse'</a>,
--   <a>getPartitionsResponse_partitions</a> - A list of requested
--   partitions.
--   
--   <a>$sel:nextToken:GetPartitions'</a>,
--   <a>getPartitionsResponse_nextToken</a> - A continuation token, if the
--   returned list of partitions does not include the last one.
--   
--   <a>$sel:httpStatus:GetPartitionsResponse'</a>,
--   <a>getPartitionsResponse_httpStatus</a> - The response's http status
--   code.
newGetPartitionsResponse :: Int -> GetPartitionsResponse

-- | A list of requested partitions.
getPartitionsResponse_partitions :: Lens' GetPartitionsResponse (Maybe [Partition])

-- | A continuation token, if the returned list of partitions does not
--   include the last one.
getPartitionsResponse_nextToken :: Lens' GetPartitionsResponse (Maybe Text)

-- | The response's http status code.
getPartitionsResponse_httpStatus :: Lens' GetPartitionsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetPartitions.GetPartitions
instance GHC.Show.Show Network.AWS.Glue.GetPartitions.GetPartitions
instance GHC.Read.Read Network.AWS.Glue.GetPartitions.GetPartitions
instance GHC.Classes.Eq Network.AWS.Glue.GetPartitions.GetPartitions
instance GHC.Generics.Generic Network.AWS.Glue.GetPartitions.GetPartitionsResponse
instance GHC.Show.Show Network.AWS.Glue.GetPartitions.GetPartitionsResponse
instance GHC.Read.Read Network.AWS.Glue.GetPartitions.GetPartitionsResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetPartitions.GetPartitionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetPartitions.GetPartitions
instance Control.DeepSeq.NFData Network.AWS.Glue.GetPartitions.GetPartitionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Glue.GetPartitions.GetPartitions
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetPartitions.GetPartitions
instance Control.DeepSeq.NFData Network.AWS.Glue.GetPartitions.GetPartitions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetPartitions.GetPartitions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetPartitions.GetPartitions
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetPartitions.GetPartitions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetPartitions.GetPartitions


-- | Retrieves the partition indexes associated with a table.
--   
--   This operation returns paginated results.
module Network.AWS.Glue.GetPartitionIndexes

-- | <i>See:</i> <a>newGetPartitionIndexes</a> smart constructor.
data GetPartitionIndexes
GetPartitionIndexes' :: Maybe Text -> Maybe Text -> Text -> Text -> GetPartitionIndexes

-- | The catalog ID where the table resides.
[$sel:catalogId:GetPartitionIndexes'] :: GetPartitionIndexes -> Maybe Text

-- | A continuation token, included if this is a continuation call.
[$sel:nextToken:GetPartitionIndexes'] :: GetPartitionIndexes -> Maybe Text

-- | Specifies the name of a database from which you want to retrieve
--   partition indexes.
[$sel:databaseName:GetPartitionIndexes'] :: GetPartitionIndexes -> Text

-- | Specifies the name of a table for which you want to retrieve the
--   partition indexes.
[$sel:tableName:GetPartitionIndexes'] :: GetPartitionIndexes -> Text

-- | Create a value of <a>GetPartitionIndexes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetPartitionIndexes'</a>,
--   <a>getPartitionIndexes_catalogId</a> - The catalog ID where the table
--   resides.
--   
--   <a>$sel:nextToken:GetPartitionIndexes'</a>,
--   <a>getPartitionIndexes_nextToken</a> - A continuation token, included
--   if this is a continuation call.
--   
--   <a>$sel:databaseName:GetPartitionIndexes'</a>,
--   <a>getPartitionIndexes_databaseName</a> - Specifies the name of a
--   database from which you want to retrieve partition indexes.
--   
--   <a>$sel:tableName:GetPartitionIndexes'</a>,
--   <a>getPartitionIndexes_tableName</a> - Specifies the name of a table
--   for which you want to retrieve the partition indexes.
newGetPartitionIndexes :: Text -> Text -> GetPartitionIndexes

-- | The catalog ID where the table resides.
getPartitionIndexes_catalogId :: Lens' GetPartitionIndexes (Maybe Text)

-- | A continuation token, included if this is a continuation call.
getPartitionIndexes_nextToken :: Lens' GetPartitionIndexes (Maybe Text)

-- | Specifies the name of a database from which you want to retrieve
--   partition indexes.
getPartitionIndexes_databaseName :: Lens' GetPartitionIndexes Text

-- | Specifies the name of a table for which you want to retrieve the
--   partition indexes.
getPartitionIndexes_tableName :: Lens' GetPartitionIndexes Text

-- | <i>See:</i> <a>newGetPartitionIndexesResponse</a> smart constructor.
data GetPartitionIndexesResponse
GetPartitionIndexesResponse' :: Maybe [PartitionIndexDescriptor] -> Maybe Text -> Int -> GetPartitionIndexesResponse

-- | A list of index descriptors.
[$sel:partitionIndexDescriptorList:GetPartitionIndexesResponse'] :: GetPartitionIndexesResponse -> Maybe [PartitionIndexDescriptor]

-- | A continuation token, present if the current list segment is not the
--   last.
[$sel:nextToken:GetPartitionIndexesResponse'] :: GetPartitionIndexesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetPartitionIndexesResponse'] :: GetPartitionIndexesResponse -> Int

-- | Create a value of <a>GetPartitionIndexesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitionIndexDescriptorList:GetPartitionIndexesResponse'</a>,
--   <a>getPartitionIndexesResponse_partitionIndexDescriptorList</a> - A
--   list of index descriptors.
--   
--   <a>$sel:nextToken:GetPartitionIndexes'</a>,
--   <a>getPartitionIndexesResponse_nextToken</a> - A continuation token,
--   present if the current list segment is not the last.
--   
--   <a>$sel:httpStatus:GetPartitionIndexesResponse'</a>,
--   <a>getPartitionIndexesResponse_httpStatus</a> - The response's http
--   status code.
newGetPartitionIndexesResponse :: Int -> GetPartitionIndexesResponse

-- | A list of index descriptors.
getPartitionIndexesResponse_partitionIndexDescriptorList :: Lens' GetPartitionIndexesResponse (Maybe [PartitionIndexDescriptor])

-- | A continuation token, present if the current list segment is not the
--   last.
getPartitionIndexesResponse_nextToken :: Lens' GetPartitionIndexesResponse (Maybe Text)

-- | The response's http status code.
getPartitionIndexesResponse_httpStatus :: Lens' GetPartitionIndexesResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetPartitionIndexes.GetPartitionIndexes
instance GHC.Show.Show Network.AWS.Glue.GetPartitionIndexes.GetPartitionIndexes
instance GHC.Read.Read Network.AWS.Glue.GetPartitionIndexes.GetPartitionIndexes
instance GHC.Classes.Eq Network.AWS.Glue.GetPartitionIndexes.GetPartitionIndexes
instance GHC.Generics.Generic Network.AWS.Glue.GetPartitionIndexes.GetPartitionIndexesResponse
instance GHC.Show.Show Network.AWS.Glue.GetPartitionIndexes.GetPartitionIndexesResponse
instance GHC.Read.Read Network.AWS.Glue.GetPartitionIndexes.GetPartitionIndexesResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetPartitionIndexes.GetPartitionIndexesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetPartitionIndexes.GetPartitionIndexes
instance Control.DeepSeq.NFData Network.AWS.Glue.GetPartitionIndexes.GetPartitionIndexesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Glue.GetPartitionIndexes.GetPartitionIndexes
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetPartitionIndexes.GetPartitionIndexes
instance Control.DeepSeq.NFData Network.AWS.Glue.GetPartitionIndexes.GetPartitionIndexes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetPartitionIndexes.GetPartitionIndexes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetPartitionIndexes.GetPartitionIndexes
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetPartitionIndexes.GetPartitionIndexes
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetPartitionIndexes.GetPartitionIndexes


-- | Retrieves information about a specified partition.
module Network.AWS.Glue.GetPartition

-- | <i>See:</i> <a>newGetPartition</a> smart constructor.
data GetPartition
GetPartition' :: Maybe Text -> Text -> Text -> [Text] -> GetPartition

-- | The ID of the Data Catalog where the partition in question resides. If
--   none is provided, the Amazon Web Services account ID is used by
--   default.
[$sel:catalogId:GetPartition'] :: GetPartition -> Maybe Text

-- | The name of the catalog database where the partition resides.
[$sel:databaseName:GetPartition'] :: GetPartition -> Text

-- | The name of the partition's table.
[$sel:tableName:GetPartition'] :: GetPartition -> Text

-- | The values that define the partition.
[$sel:partitionValues:GetPartition'] :: GetPartition -> [Text]

-- | Create a value of <a>GetPartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetPartition'</a>, <a>getPartition_catalogId</a> -
--   The ID of the Data Catalog where the partition in question resides. If
--   none is provided, the Amazon Web Services account ID is used by
--   default.
--   
--   <a>$sel:databaseName:GetPartition'</a>,
--   <a>getPartition_databaseName</a> - The name of the catalog database
--   where the partition resides.
--   
--   <a>$sel:tableName:GetPartition'</a>, <a>getPartition_tableName</a> -
--   The name of the partition's table.
--   
--   <a>$sel:partitionValues:GetPartition'</a>,
--   <a>getPartition_partitionValues</a> - The values that define the
--   partition.
newGetPartition :: Text -> Text -> GetPartition

-- | The ID of the Data Catalog where the partition in question resides. If
--   none is provided, the Amazon Web Services account ID is used by
--   default.
getPartition_catalogId :: Lens' GetPartition (Maybe Text)

-- | The name of the catalog database where the partition resides.
getPartition_databaseName :: Lens' GetPartition Text

-- | The name of the partition's table.
getPartition_tableName :: Lens' GetPartition Text

-- | The values that define the partition.
getPartition_partitionValues :: Lens' GetPartition [Text]

-- | <i>See:</i> <a>newGetPartitionResponse</a> smart constructor.
data GetPartitionResponse
GetPartitionResponse' :: Maybe Partition -> Int -> GetPartitionResponse

-- | The requested information, in the form of a <tt>Partition</tt> object.
[$sel:partition:GetPartitionResponse'] :: GetPartitionResponse -> Maybe Partition

-- | The response's http status code.
[$sel:httpStatus:GetPartitionResponse'] :: GetPartitionResponse -> Int

-- | Create a value of <a>GetPartitionResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partition:GetPartitionResponse'</a>,
--   <a>getPartitionResponse_partition</a> - The requested information, in
--   the form of a <tt>Partition</tt> object.
--   
--   <a>$sel:httpStatus:GetPartitionResponse'</a>,
--   <a>getPartitionResponse_httpStatus</a> - The response's http status
--   code.
newGetPartitionResponse :: Int -> GetPartitionResponse

-- | The requested information, in the form of a <tt>Partition</tt> object.
getPartitionResponse_partition :: Lens' GetPartitionResponse (Maybe Partition)

-- | The response's http status code.
getPartitionResponse_httpStatus :: Lens' GetPartitionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetPartition.GetPartition
instance GHC.Show.Show Network.AWS.Glue.GetPartition.GetPartition
instance GHC.Read.Read Network.AWS.Glue.GetPartition.GetPartition
instance GHC.Classes.Eq Network.AWS.Glue.GetPartition.GetPartition
instance GHC.Generics.Generic Network.AWS.Glue.GetPartition.GetPartitionResponse
instance GHC.Show.Show Network.AWS.Glue.GetPartition.GetPartitionResponse
instance GHC.Read.Read Network.AWS.Glue.GetPartition.GetPartitionResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetPartition.GetPartitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetPartition.GetPartition
instance Control.DeepSeq.NFData Network.AWS.Glue.GetPartition.GetPartitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetPartition.GetPartition
instance Control.DeepSeq.NFData Network.AWS.Glue.GetPartition.GetPartition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetPartition.GetPartition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetPartition.GetPartition
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetPartition.GetPartition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetPartition.GetPartition


-- | Creates mappings.
module Network.AWS.Glue.GetMapping

-- | <i>See:</i> <a>newGetMapping</a> smart constructor.
data GetMapping
GetMapping' :: Maybe [CatalogEntry] -> Maybe Location -> CatalogEntry -> GetMapping

-- | A list of target tables.
[$sel:sinks:GetMapping'] :: GetMapping -> Maybe [CatalogEntry]

-- | Parameters for the mapping.
[$sel:location:GetMapping'] :: GetMapping -> Maybe Location

-- | Specifies the source table.
[$sel:source:GetMapping'] :: GetMapping -> CatalogEntry

-- | Create a value of <a>GetMapping</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sinks:GetMapping'</a>, <a>getMapping_sinks</a> - A list of
--   target tables.
--   
--   <a>$sel:location:GetMapping'</a>, <a>getMapping_location</a> -
--   Parameters for the mapping.
--   
--   <a>$sel:source:GetMapping'</a>, <a>getMapping_source</a> - Specifies
--   the source table.
newGetMapping :: CatalogEntry -> GetMapping

-- | A list of target tables.
getMapping_sinks :: Lens' GetMapping (Maybe [CatalogEntry])

-- | Parameters for the mapping.
getMapping_location :: Lens' GetMapping (Maybe Location)

-- | Specifies the source table.
getMapping_source :: Lens' GetMapping CatalogEntry

-- | <i>See:</i> <a>newGetMappingResponse</a> smart constructor.
data GetMappingResponse
GetMappingResponse' :: Int -> [MappingEntry] -> GetMappingResponse

-- | The response's http status code.
[$sel:httpStatus:GetMappingResponse'] :: GetMappingResponse -> Int

-- | A list of mappings to the specified targets.
[$sel:mapping:GetMappingResponse'] :: GetMappingResponse -> [MappingEntry]

-- | Create a value of <a>GetMappingResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetMappingResponse'</a>,
--   <a>getMappingResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:mapping:GetMappingResponse'</a>,
--   <a>getMappingResponse_mapping</a> - A list of mappings to the
--   specified targets.
newGetMappingResponse :: Int -> GetMappingResponse

-- | The response's http status code.
getMappingResponse_httpStatus :: Lens' GetMappingResponse Int

-- | A list of mappings to the specified targets.
getMappingResponse_mapping :: Lens' GetMappingResponse [MappingEntry]
instance GHC.Generics.Generic Network.AWS.Glue.GetMapping.GetMapping
instance GHC.Show.Show Network.AWS.Glue.GetMapping.GetMapping
instance GHC.Read.Read Network.AWS.Glue.GetMapping.GetMapping
instance GHC.Classes.Eq Network.AWS.Glue.GetMapping.GetMapping
instance GHC.Generics.Generic Network.AWS.Glue.GetMapping.GetMappingResponse
instance GHC.Show.Show Network.AWS.Glue.GetMapping.GetMappingResponse
instance GHC.Read.Read Network.AWS.Glue.GetMapping.GetMappingResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetMapping.GetMappingResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetMapping.GetMapping
instance Control.DeepSeq.NFData Network.AWS.Glue.GetMapping.GetMappingResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetMapping.GetMapping
instance Control.DeepSeq.NFData Network.AWS.Glue.GetMapping.GetMapping
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetMapping.GetMapping
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetMapping.GetMapping
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetMapping.GetMapping
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetMapping.GetMapping


-- | Gets a sortable, filterable list of existing Glue machine learning
--   transforms. Machine learning transforms are a special type of
--   transform that use machine learning to learn the details of the
--   transformation to be performed by learning from examples provided by
--   humans. These transformations are then saved by Glue, and you can
--   retrieve their metadata by calling <tt>GetMLTransforms</tt>.
module Network.AWS.Glue.GetMLTransforms

-- | <i>See:</i> <a>newGetMLTransforms</a> smart constructor.
data GetMLTransforms
GetMLTransforms' :: Maybe Text -> Maybe TransformSortCriteria -> Maybe TransformFilterCriteria -> Maybe Natural -> GetMLTransforms

-- | A paginated token to offset the results.
[$sel:nextToken:GetMLTransforms'] :: GetMLTransforms -> Maybe Text

-- | The sorting criteria.
[$sel:sort:GetMLTransforms'] :: GetMLTransforms -> Maybe TransformSortCriteria

-- | The filter transformation criteria.
[$sel:filter':GetMLTransforms'] :: GetMLTransforms -> Maybe TransformFilterCriteria

-- | The maximum number of results to return.
[$sel:maxResults:GetMLTransforms'] :: GetMLTransforms -> Maybe Natural

-- | Create a value of <a>GetMLTransforms</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetMLTransforms'</a>,
--   <a>getMLTransforms_nextToken</a> - A paginated token to offset the
--   results.
--   
--   <a>$sel:sort:GetMLTransforms'</a>, <a>getMLTransforms_sort</a> - The
--   sorting criteria.
--   
--   <a>$sel:filter':GetMLTransforms'</a>, <a>getMLTransforms_filter</a> -
--   The filter transformation criteria.
--   
--   <a>$sel:maxResults:GetMLTransforms'</a>,
--   <a>getMLTransforms_maxResults</a> - The maximum number of results to
--   return.
newGetMLTransforms :: GetMLTransforms

-- | A paginated token to offset the results.
getMLTransforms_nextToken :: Lens' GetMLTransforms (Maybe Text)

-- | The sorting criteria.
getMLTransforms_sort :: Lens' GetMLTransforms (Maybe TransformSortCriteria)

-- | The filter transformation criteria.
getMLTransforms_filter :: Lens' GetMLTransforms (Maybe TransformFilterCriteria)

-- | The maximum number of results to return.
getMLTransforms_maxResults :: Lens' GetMLTransforms (Maybe Natural)

-- | <i>See:</i> <a>newGetMLTransformsResponse</a> smart constructor.
data GetMLTransformsResponse
GetMLTransformsResponse' :: Maybe Text -> Int -> [MLTransform] -> GetMLTransformsResponse

-- | A pagination token, if more results are available.
[$sel:nextToken:GetMLTransformsResponse'] :: GetMLTransformsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetMLTransformsResponse'] :: GetMLTransformsResponse -> Int

-- | A list of machine learning transforms.
[$sel:transforms:GetMLTransformsResponse'] :: GetMLTransformsResponse -> [MLTransform]

-- | Create a value of <a>GetMLTransformsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetMLTransforms'</a>,
--   <a>getMLTransformsResponse_nextToken</a> - A pagination token, if more
--   results are available.
--   
--   <a>$sel:httpStatus:GetMLTransformsResponse'</a>,
--   <a>getMLTransformsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:transforms:GetMLTransformsResponse'</a>,
--   <a>getMLTransformsResponse_transforms</a> - A list of machine learning
--   transforms.
newGetMLTransformsResponse :: Int -> GetMLTransformsResponse

-- | A pagination token, if more results are available.
getMLTransformsResponse_nextToken :: Lens' GetMLTransformsResponse (Maybe Text)

-- | The response's http status code.
getMLTransformsResponse_httpStatus :: Lens' GetMLTransformsResponse Int

-- | A list of machine learning transforms.
getMLTransformsResponse_transforms :: Lens' GetMLTransformsResponse [MLTransform]
instance GHC.Generics.Generic Network.AWS.Glue.GetMLTransforms.GetMLTransforms
instance GHC.Show.Show Network.AWS.Glue.GetMLTransforms.GetMLTransforms
instance GHC.Read.Read Network.AWS.Glue.GetMLTransforms.GetMLTransforms
instance GHC.Classes.Eq Network.AWS.Glue.GetMLTransforms.GetMLTransforms
instance GHC.Generics.Generic Network.AWS.Glue.GetMLTransforms.GetMLTransformsResponse
instance GHC.Show.Show Network.AWS.Glue.GetMLTransforms.GetMLTransformsResponse
instance GHC.Read.Read Network.AWS.Glue.GetMLTransforms.GetMLTransformsResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetMLTransforms.GetMLTransformsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetMLTransforms.GetMLTransforms
instance Control.DeepSeq.NFData Network.AWS.Glue.GetMLTransforms.GetMLTransformsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetMLTransforms.GetMLTransforms
instance Control.DeepSeq.NFData Network.AWS.Glue.GetMLTransforms.GetMLTransforms
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetMLTransforms.GetMLTransforms
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetMLTransforms.GetMLTransforms
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetMLTransforms.GetMLTransforms
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetMLTransforms.GetMLTransforms


-- | Gets an Glue machine learning transform artifact and all its
--   corresponding metadata. Machine learning transforms are a special type
--   of transform that use machine learning to learn the details of the
--   transformation to be performed by learning from examples provided by
--   humans. These transformations are then saved by Glue. You can retrieve
--   their metadata by calling <tt>GetMLTransform</tt>.
module Network.AWS.Glue.GetMLTransform

-- | <i>See:</i> <a>newGetMLTransform</a> smart constructor.
data GetMLTransform
GetMLTransform' :: Text -> GetMLTransform

-- | The unique identifier of the transform, generated at the time that the
--   transform was created.
[$sel:transformId:GetMLTransform'] :: GetMLTransform -> Text

-- | Create a value of <a>GetMLTransform</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transformId:GetMLTransform'</a>,
--   <a>getMLTransform_transformId</a> - The unique identifier of the
--   transform, generated at the time that the transform was created.
newGetMLTransform :: Text -> GetMLTransform

-- | The unique identifier of the transform, generated at the time that the
--   transform was created.
getMLTransform_transformId :: Lens' GetMLTransform Text

-- | <i>See:</i> <a>newGetMLTransformResponse</a> smart constructor.
data GetMLTransformResponse
GetMLTransformResponse' :: Maybe TransformStatusType -> Maybe Int -> Maybe POSIX -> Maybe Int -> Maybe WorkerType -> Maybe [GlueTable] -> Maybe Text -> Maybe EvaluationMetrics -> Maybe [SchemaColumn] -> Maybe Text -> Maybe Text -> Maybe TransformParameters -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe TransformEncryption -> Maybe Text -> Maybe POSIX -> Maybe Text -> Int -> GetMLTransformResponse

-- | The last known status of the transform (to indicate whether it can be
--   used or not). One of "NOT_READY", "READY", or "DELETING".
[$sel:status:GetMLTransformResponse'] :: GetMLTransformResponse -> Maybe TransformStatusType

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when this task runs.
[$sel:numberOfWorkers:GetMLTransformResponse'] :: GetMLTransformResponse -> Maybe Int

-- | The date and time when the transform was last modified.
[$sel:lastModifiedOn:GetMLTransformResponse'] :: GetMLTransformResponse -> Maybe POSIX

-- | The number of labels available for this transform.
[$sel:labelCount:GetMLTransformResponse'] :: GetMLTransformResponse -> Maybe Int

-- | The type of predefined worker that is allocated when this task runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
[$sel:workerType:GetMLTransformResponse'] :: GetMLTransformResponse -> Maybe WorkerType

-- | A list of Glue table definitions used by the transform.
[$sel:inputRecordTables:GetMLTransformResponse'] :: GetMLTransformResponse -> Maybe [GlueTable]

-- | This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
[$sel:glueVersion:GetMLTransformResponse'] :: GetMLTransformResponse -> Maybe Text

-- | The latest evaluation metrics.
[$sel:evaluationMetrics:GetMLTransformResponse'] :: GetMLTransformResponse -> Maybe EvaluationMetrics

-- | The <tt>Map&lt;Column, Type&gt;</tt> object that represents the schema
--   that this transform accepts. Has an upper bound of 100 columns.
[$sel:schema:GetMLTransformResponse'] :: GetMLTransformResponse -> Maybe [SchemaColumn]

-- | The name or Amazon Resource Name (ARN) of the IAM role with the
--   required permissions.
[$sel:role':GetMLTransformResponse'] :: GetMLTransformResponse -> Maybe Text

-- | The unique name given to the transform when it was created.
[$sel:name:GetMLTransformResponse'] :: GetMLTransformResponse -> Maybe Text

-- | The configuration parameters that are specific to the algorithm used.
[$sel:parameters:GetMLTransformResponse'] :: GetMLTransformResponse -> Maybe TransformParameters

-- | The maximum number of times to retry a task for this transform after a
--   task run fails.
[$sel:maxRetries:GetMLTransformResponse'] :: GetMLTransformResponse -> Maybe Int

-- | The number of Glue data processing units (DPUs) that are allocated to
--   task runs for this transform. You can allocate from 2 to 100 DPUs; the
--   default is 10. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
[$sel:maxCapacity:GetMLTransformResponse'] :: GetMLTransformResponse -> Maybe Double

-- | The timeout for a task run for this transform in minutes. This is the
--   maximum time that a task run for this transform can consume resources
--   before it is terminated and enters <tt>TIMEOUT</tt> status. The
--   default is 2,880 minutes (48 hours).
[$sel:timeout:GetMLTransformResponse'] :: GetMLTransformResponse -> Maybe Natural

-- | The encryption-at-rest settings of the transform that apply to
--   accessing user data. Machine learning transforms can access user data
--   encrypted in Amazon S3 using KMS.
[$sel:transformEncryption:GetMLTransformResponse'] :: GetMLTransformResponse -> Maybe TransformEncryption

-- | A description of the transform.
[$sel:description:GetMLTransformResponse'] :: GetMLTransformResponse -> Maybe Text

-- | The date and time when the transform was created.
[$sel:createdOn:GetMLTransformResponse'] :: GetMLTransformResponse -> Maybe POSIX

-- | The unique identifier of the transform, generated at the time that the
--   transform was created.
[$sel:transformId:GetMLTransformResponse'] :: GetMLTransformResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetMLTransformResponse'] :: GetMLTransformResponse -> Int

-- | Create a value of <a>GetMLTransformResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_status</a> - The last known status of the
--   transform (to indicate whether it can be used or not). One of
--   "NOT_READY", "READY", or "DELETING".
--   
--   <a>$sel:numberOfWorkers:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_numberOfWorkers</a> - The number of workers
--   of a defined <tt>workerType</tt> that are allocated when this task
--   runs.
--   
--   <a>$sel:lastModifiedOn:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_lastModifiedOn</a> - The date and time when
--   the transform was last modified.
--   
--   <a>$sel:labelCount:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_labelCount</a> - The number of labels
--   available for this transform.
--   
--   <a>$sel:workerType:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_workerType</a> - The type of predefined
--   worker that is allocated when this task runs. Accepts a value of
--   Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <a>$sel:inputRecordTables:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_inputRecordTables</a> - A list of Glue table
--   definitions used by the transform.
--   
--   <a>$sel:glueVersion:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_glueVersion</a> - This value determines
--   which version of Glue this machine learning transform is compatible
--   with. Glue 1.0 is recommended for most customers. If the value is not
--   set, the Glue compatibility defaults to Glue 0.9. For more
--   information, see <a>Glue Versions</a> in the developer guide.
--   
--   <a>$sel:evaluationMetrics:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_evaluationMetrics</a> - The latest
--   evaluation metrics.
--   
--   <a>$sel:schema:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_schema</a> - The <tt>Map&lt;Column,
--   Type&gt;</tt> object that represents the schema that this transform
--   accepts. Has an upper bound of 100 columns.
--   
--   <a>$sel:role':GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_role</a> - The name or Amazon Resource Name
--   (ARN) of the IAM role with the required permissions.
--   
--   <a>$sel:name:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_name</a> - The unique name given to the
--   transform when it was created.
--   
--   <a>$sel:parameters:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_parameters</a> - The configuration
--   parameters that are specific to the algorithm used.
--   
--   <a>$sel:maxRetries:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_maxRetries</a> - The maximum number of times
--   to retry a task for this transform after a task run fails.
--   
--   <a>$sel:maxCapacity:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_maxCapacity</a> - The number of Glue data
--   processing units (DPUs) that are allocated to task runs for this
--   transform. You can allocate from 2 to 100 DPUs; the default is 10. A
--   DPU is a relative measure of processing power that consists of 4 vCPUs
--   of compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
--   
--   <a>$sel:timeout:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_timeout</a> - The timeout for a task run for
--   this transform in minutes. This is the maximum time that a task run
--   for this transform can consume resources before it is terminated and
--   enters <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48
--   hours).
--   
--   <a>$sel:transformEncryption:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_transformEncryption</a> - The
--   encryption-at-rest settings of the transform that apply to accessing
--   user data. Machine learning transforms can access user data encrypted
--   in Amazon S3 using KMS.
--   
--   <a>$sel:description:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_description</a> - A description of the
--   transform.
--   
--   <a>$sel:createdOn:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_createdOn</a> - The date and time when the
--   transform was created.
--   
--   <a>$sel:transformId:GetMLTransform'</a>,
--   <a>getMLTransformResponse_transformId</a> - The unique identifier of
--   the transform, generated at the time that the transform was created.
--   
--   <a>$sel:httpStatus:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_httpStatus</a> - The response's http status
--   code.
newGetMLTransformResponse :: Int -> GetMLTransformResponse

-- | The last known status of the transform (to indicate whether it can be
--   used or not). One of "NOT_READY", "READY", or "DELETING".
getMLTransformResponse_status :: Lens' GetMLTransformResponse (Maybe TransformStatusType)

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when this task runs.
getMLTransformResponse_numberOfWorkers :: Lens' GetMLTransformResponse (Maybe Int)

-- | The date and time when the transform was last modified.
getMLTransformResponse_lastModifiedOn :: Lens' GetMLTransformResponse (Maybe UTCTime)

-- | The number of labels available for this transform.
getMLTransformResponse_labelCount :: Lens' GetMLTransformResponse (Maybe Int)

-- | The type of predefined worker that is allocated when this task runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
getMLTransformResponse_workerType :: Lens' GetMLTransformResponse (Maybe WorkerType)

-- | A list of Glue table definitions used by the transform.
getMLTransformResponse_inputRecordTables :: Lens' GetMLTransformResponse (Maybe [GlueTable])

-- | This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
getMLTransformResponse_glueVersion :: Lens' GetMLTransformResponse (Maybe Text)

-- | The latest evaluation metrics.
getMLTransformResponse_evaluationMetrics :: Lens' GetMLTransformResponse (Maybe EvaluationMetrics)

-- | The <tt>Map&lt;Column, Type&gt;</tt> object that represents the schema
--   that this transform accepts. Has an upper bound of 100 columns.
getMLTransformResponse_schema :: Lens' GetMLTransformResponse (Maybe [SchemaColumn])

-- | The name or Amazon Resource Name (ARN) of the IAM role with the
--   required permissions.
getMLTransformResponse_role :: Lens' GetMLTransformResponse (Maybe Text)

-- | The unique name given to the transform when it was created.
getMLTransformResponse_name :: Lens' GetMLTransformResponse (Maybe Text)

-- | The configuration parameters that are specific to the algorithm used.
getMLTransformResponse_parameters :: Lens' GetMLTransformResponse (Maybe TransformParameters)

-- | The maximum number of times to retry a task for this transform after a
--   task run fails.
getMLTransformResponse_maxRetries :: Lens' GetMLTransformResponse (Maybe Int)

-- | The number of Glue data processing units (DPUs) that are allocated to
--   task runs for this transform. You can allocate from 2 to 100 DPUs; the
--   default is 10. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
getMLTransformResponse_maxCapacity :: Lens' GetMLTransformResponse (Maybe Double)

-- | The timeout for a task run for this transform in minutes. This is the
--   maximum time that a task run for this transform can consume resources
--   before it is terminated and enters <tt>TIMEOUT</tt> status. The
--   default is 2,880 minutes (48 hours).
getMLTransformResponse_timeout :: Lens' GetMLTransformResponse (Maybe Natural)

-- | The encryption-at-rest settings of the transform that apply to
--   accessing user data. Machine learning transforms can access user data
--   encrypted in Amazon S3 using KMS.
getMLTransformResponse_transformEncryption :: Lens' GetMLTransformResponse (Maybe TransformEncryption)

-- | A description of the transform.
getMLTransformResponse_description :: Lens' GetMLTransformResponse (Maybe Text)

-- | The date and time when the transform was created.
getMLTransformResponse_createdOn :: Lens' GetMLTransformResponse (Maybe UTCTime)

-- | The unique identifier of the transform, generated at the time that the
--   transform was created.
getMLTransformResponse_transformId :: Lens' GetMLTransformResponse (Maybe Text)

-- | The response's http status code.
getMLTransformResponse_httpStatus :: Lens' GetMLTransformResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetMLTransform.GetMLTransform
instance GHC.Show.Show Network.AWS.Glue.GetMLTransform.GetMLTransform
instance GHC.Read.Read Network.AWS.Glue.GetMLTransform.GetMLTransform
instance GHC.Classes.Eq Network.AWS.Glue.GetMLTransform.GetMLTransform
instance GHC.Generics.Generic Network.AWS.Glue.GetMLTransform.GetMLTransformResponse
instance GHC.Show.Show Network.AWS.Glue.GetMLTransform.GetMLTransformResponse
instance GHC.Read.Read Network.AWS.Glue.GetMLTransform.GetMLTransformResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetMLTransform.GetMLTransformResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetMLTransform.GetMLTransform
instance Control.DeepSeq.NFData Network.AWS.Glue.GetMLTransform.GetMLTransformResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetMLTransform.GetMLTransform
instance Control.DeepSeq.NFData Network.AWS.Glue.GetMLTransform.GetMLTransform
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetMLTransform.GetMLTransform
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetMLTransform.GetMLTransform
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetMLTransform.GetMLTransform
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetMLTransform.GetMLTransform


-- | Gets a list of runs for a machine learning transform. Machine learning
--   task runs are asynchronous tasks that Glue runs on your behalf as part
--   of various machine learning workflows. You can get a sortable,
--   filterable list of machine learning task runs by calling
--   <tt>GetMLTaskRuns</tt> with their parent transform's
--   <tt>TransformID</tt> and other optional parameters as documented in
--   this section.
--   
--   This operation returns a list of historic runs and must be paginated.
module Network.AWS.Glue.GetMLTaskRuns

-- | <i>See:</i> <a>newGetMLTaskRuns</a> smart constructor.
data GetMLTaskRuns
GetMLTaskRuns' :: Maybe Text -> Maybe TaskRunSortCriteria -> Maybe TaskRunFilterCriteria -> Maybe Natural -> Text -> GetMLTaskRuns

-- | A token for pagination of the results. The default is empty.
[$sel:nextToken:GetMLTaskRuns'] :: GetMLTaskRuns -> Maybe Text

-- | The sorting criteria, in the <tt>TaskRunSortCriteria</tt> structure,
--   for the task run.
[$sel:sort:GetMLTaskRuns'] :: GetMLTaskRuns -> Maybe TaskRunSortCriteria

-- | The filter criteria, in the <tt>TaskRunFilterCriteria</tt> structure,
--   for the task run.
[$sel:filter':GetMLTaskRuns'] :: GetMLTaskRuns -> Maybe TaskRunFilterCriteria

-- | The maximum number of results to return.
[$sel:maxResults:GetMLTaskRuns'] :: GetMLTaskRuns -> Maybe Natural

-- | The unique identifier of the machine learning transform.
[$sel:transformId:GetMLTaskRuns'] :: GetMLTaskRuns -> Text

-- | Create a value of <a>GetMLTaskRuns</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetMLTaskRuns'</a>, <a>getMLTaskRuns_nextToken</a> -
--   A token for pagination of the results. The default is empty.
--   
--   <a>$sel:sort:GetMLTaskRuns'</a>, <a>getMLTaskRuns_sort</a> - The
--   sorting criteria, in the <tt>TaskRunSortCriteria</tt> structure, for
--   the task run.
--   
--   <a>$sel:filter':GetMLTaskRuns'</a>, <a>getMLTaskRuns_filter</a> - The
--   filter criteria, in the <tt>TaskRunFilterCriteria</tt> structure, for
--   the task run.
--   
--   <a>$sel:maxResults:GetMLTaskRuns'</a>, <a>getMLTaskRuns_maxResults</a>
--   - The maximum number of results to return.
--   
--   <a>$sel:transformId:GetMLTaskRuns'</a>,
--   <a>getMLTaskRuns_transformId</a> - The unique identifier of the
--   machine learning transform.
newGetMLTaskRuns :: Text -> GetMLTaskRuns

-- | A token for pagination of the results. The default is empty.
getMLTaskRuns_nextToken :: Lens' GetMLTaskRuns (Maybe Text)

-- | The sorting criteria, in the <tt>TaskRunSortCriteria</tt> structure,
--   for the task run.
getMLTaskRuns_sort :: Lens' GetMLTaskRuns (Maybe TaskRunSortCriteria)

-- | The filter criteria, in the <tt>TaskRunFilterCriteria</tt> structure,
--   for the task run.
getMLTaskRuns_filter :: Lens' GetMLTaskRuns (Maybe TaskRunFilterCriteria)

-- | The maximum number of results to return.
getMLTaskRuns_maxResults :: Lens' GetMLTaskRuns (Maybe Natural)

-- | The unique identifier of the machine learning transform.
getMLTaskRuns_transformId :: Lens' GetMLTaskRuns Text

-- | <i>See:</i> <a>newGetMLTaskRunsResponse</a> smart constructor.
data GetMLTaskRunsResponse
GetMLTaskRunsResponse' :: Maybe Text -> Maybe [TaskRun] -> Int -> GetMLTaskRunsResponse

-- | A pagination token, if more results are available.
[$sel:nextToken:GetMLTaskRunsResponse'] :: GetMLTaskRunsResponse -> Maybe Text

-- | A list of task runs that are associated with the transform.
[$sel:taskRuns:GetMLTaskRunsResponse'] :: GetMLTaskRunsResponse -> Maybe [TaskRun]

-- | The response's http status code.
[$sel:httpStatus:GetMLTaskRunsResponse'] :: GetMLTaskRunsResponse -> Int

-- | Create a value of <a>GetMLTaskRunsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetMLTaskRuns'</a>,
--   <a>getMLTaskRunsResponse_nextToken</a> - A pagination token, if more
--   results are available.
--   
--   <a>$sel:taskRuns:GetMLTaskRunsResponse'</a>,
--   <a>getMLTaskRunsResponse_taskRuns</a> - A list of task runs that are
--   associated with the transform.
--   
--   <a>$sel:httpStatus:GetMLTaskRunsResponse'</a>,
--   <a>getMLTaskRunsResponse_httpStatus</a> - The response's http status
--   code.
newGetMLTaskRunsResponse :: Int -> GetMLTaskRunsResponse

-- | A pagination token, if more results are available.
getMLTaskRunsResponse_nextToken :: Lens' GetMLTaskRunsResponse (Maybe Text)

-- | A list of task runs that are associated with the transform.
getMLTaskRunsResponse_taskRuns :: Lens' GetMLTaskRunsResponse (Maybe [TaskRun])

-- | The response's http status code.
getMLTaskRunsResponse_httpStatus :: Lens' GetMLTaskRunsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetMLTaskRuns.GetMLTaskRuns
instance GHC.Show.Show Network.AWS.Glue.GetMLTaskRuns.GetMLTaskRuns
instance GHC.Read.Read Network.AWS.Glue.GetMLTaskRuns.GetMLTaskRuns
instance GHC.Classes.Eq Network.AWS.Glue.GetMLTaskRuns.GetMLTaskRuns
instance GHC.Generics.Generic Network.AWS.Glue.GetMLTaskRuns.GetMLTaskRunsResponse
instance GHC.Show.Show Network.AWS.Glue.GetMLTaskRuns.GetMLTaskRunsResponse
instance GHC.Read.Read Network.AWS.Glue.GetMLTaskRuns.GetMLTaskRunsResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetMLTaskRuns.GetMLTaskRunsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetMLTaskRuns.GetMLTaskRuns
instance Control.DeepSeq.NFData Network.AWS.Glue.GetMLTaskRuns.GetMLTaskRunsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetMLTaskRuns.GetMLTaskRuns
instance Control.DeepSeq.NFData Network.AWS.Glue.GetMLTaskRuns.GetMLTaskRuns
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetMLTaskRuns.GetMLTaskRuns
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetMLTaskRuns.GetMLTaskRuns
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetMLTaskRuns.GetMLTaskRuns
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetMLTaskRuns.GetMLTaskRuns


-- | Gets details for a specific task run on a machine learning transform.
--   Machine learning task runs are asynchronous tasks that Glue runs on
--   your behalf as part of various machine learning workflows. You can
--   check the stats of any task run by calling <tt>GetMLTaskRun</tt> with
--   the <tt>TaskRunID</tt> and its parent transform's
--   <tt>TransformID</tt>.
module Network.AWS.Glue.GetMLTaskRun

-- | <i>See:</i> <a>newGetMLTaskRun</a> smart constructor.
data GetMLTaskRun
GetMLTaskRun' :: Text -> Text -> GetMLTaskRun

-- | The unique identifier of the machine learning transform.
[$sel:transformId:GetMLTaskRun'] :: GetMLTaskRun -> Text

-- | The unique identifier of the task run.
[$sel:taskRunId:GetMLTaskRun'] :: GetMLTaskRun -> Text

-- | Create a value of <a>GetMLTaskRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transformId:GetMLTaskRun'</a>, <a>getMLTaskRun_transformId</a>
--   - The unique identifier of the machine learning transform.
--   
--   <a>$sel:taskRunId:GetMLTaskRun'</a>, <a>getMLTaskRun_taskRunId</a> -
--   The unique identifier of the task run.
newGetMLTaskRun :: Text -> Text -> GetMLTaskRun

-- | The unique identifier of the machine learning transform.
getMLTaskRun_transformId :: Lens' GetMLTaskRun Text

-- | The unique identifier of the task run.
getMLTaskRun_taskRunId :: Lens' GetMLTaskRun Text

-- | <i>See:</i> <a>newGetMLTaskRunResponse</a> smart constructor.
data GetMLTaskRunResponse
GetMLTaskRunResponse' :: Maybe POSIX -> Maybe TaskStatusType -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Int -> Maybe TaskRunProperties -> Maybe Text -> Maybe Text -> Int -> GetMLTaskRunResponse

-- | The date and time when this task run was completed.
[$sel:completedOn:GetMLTaskRunResponse'] :: GetMLTaskRunResponse -> Maybe POSIX

-- | The status for this task run.
[$sel:status:GetMLTaskRunResponse'] :: GetMLTaskRunResponse -> Maybe TaskStatusType

-- | The date and time when this task run was last modified.
[$sel:lastModifiedOn:GetMLTaskRunResponse'] :: GetMLTaskRunResponse -> Maybe POSIX

-- | The error strings that are associated with the task run.
[$sel:errorString:GetMLTaskRunResponse'] :: GetMLTaskRunResponse -> Maybe Text

-- | The date and time when this task run started.
[$sel:startedOn:GetMLTaskRunResponse'] :: GetMLTaskRunResponse -> Maybe POSIX

-- | The names of the log groups that are associated with the task run.
[$sel:logGroupName:GetMLTaskRunResponse'] :: GetMLTaskRunResponse -> Maybe Text

-- | The amount of time (in seconds) that the task run consumed resources.
[$sel:executionTime:GetMLTaskRunResponse'] :: GetMLTaskRunResponse -> Maybe Int

-- | The list of properties that are associated with the task run.
[$sel:properties:GetMLTaskRunResponse'] :: GetMLTaskRunResponse -> Maybe TaskRunProperties

-- | The unique identifier of the task run.
[$sel:transformId:GetMLTaskRunResponse'] :: GetMLTaskRunResponse -> Maybe Text

-- | The unique run identifier associated with this run.
[$sel:taskRunId:GetMLTaskRunResponse'] :: GetMLTaskRunResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetMLTaskRunResponse'] :: GetMLTaskRunResponse -> Int

-- | Create a value of <a>GetMLTaskRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completedOn:GetMLTaskRunResponse'</a>,
--   <a>getMLTaskRunResponse_completedOn</a> - The date and time when this
--   task run was completed.
--   
--   <a>$sel:status:GetMLTaskRunResponse'</a>,
--   <a>getMLTaskRunResponse_status</a> - The status for this task run.
--   
--   <a>$sel:lastModifiedOn:GetMLTaskRunResponse'</a>,
--   <a>getMLTaskRunResponse_lastModifiedOn</a> - The date and time when
--   this task run was last modified.
--   
--   <a>$sel:errorString:GetMLTaskRunResponse'</a>,
--   <a>getMLTaskRunResponse_errorString</a> - The error strings that are
--   associated with the task run.
--   
--   <a>$sel:startedOn:GetMLTaskRunResponse'</a>,
--   <a>getMLTaskRunResponse_startedOn</a> - The date and time when this
--   task run started.
--   
--   <a>$sel:logGroupName:GetMLTaskRunResponse'</a>,
--   <a>getMLTaskRunResponse_logGroupName</a> - The names of the log groups
--   that are associated with the task run.
--   
--   <a>$sel:executionTime:GetMLTaskRunResponse'</a>,
--   <a>getMLTaskRunResponse_executionTime</a> - The amount of time (in
--   seconds) that the task run consumed resources.
--   
--   <a>$sel:properties:GetMLTaskRunResponse'</a>,
--   <a>getMLTaskRunResponse_properties</a> - The list of properties that
--   are associated with the task run.
--   
--   <a>$sel:transformId:GetMLTaskRun'</a>,
--   <a>getMLTaskRunResponse_transformId</a> - The unique identifier of the
--   task run.
--   
--   <a>$sel:taskRunId:GetMLTaskRun'</a>,
--   <a>getMLTaskRunResponse_taskRunId</a> - The unique run identifier
--   associated with this run.
--   
--   <a>$sel:httpStatus:GetMLTaskRunResponse'</a>,
--   <a>getMLTaskRunResponse_httpStatus</a> - The response's http status
--   code.
newGetMLTaskRunResponse :: Int -> GetMLTaskRunResponse

-- | The date and time when this task run was completed.
getMLTaskRunResponse_completedOn :: Lens' GetMLTaskRunResponse (Maybe UTCTime)

-- | The status for this task run.
getMLTaskRunResponse_status :: Lens' GetMLTaskRunResponse (Maybe TaskStatusType)

-- | The date and time when this task run was last modified.
getMLTaskRunResponse_lastModifiedOn :: Lens' GetMLTaskRunResponse (Maybe UTCTime)

-- | The error strings that are associated with the task run.
getMLTaskRunResponse_errorString :: Lens' GetMLTaskRunResponse (Maybe Text)

-- | The date and time when this task run started.
getMLTaskRunResponse_startedOn :: Lens' GetMLTaskRunResponse (Maybe UTCTime)

-- | The names of the log groups that are associated with the task run.
getMLTaskRunResponse_logGroupName :: Lens' GetMLTaskRunResponse (Maybe Text)

-- | The amount of time (in seconds) that the task run consumed resources.
getMLTaskRunResponse_executionTime :: Lens' GetMLTaskRunResponse (Maybe Int)

-- | The list of properties that are associated with the task run.
getMLTaskRunResponse_properties :: Lens' GetMLTaskRunResponse (Maybe TaskRunProperties)

-- | The unique identifier of the task run.
getMLTaskRunResponse_transformId :: Lens' GetMLTaskRunResponse (Maybe Text)

-- | The unique run identifier associated with this run.
getMLTaskRunResponse_taskRunId :: Lens' GetMLTaskRunResponse (Maybe Text)

-- | The response's http status code.
getMLTaskRunResponse_httpStatus :: Lens' GetMLTaskRunResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetMLTaskRun.GetMLTaskRun
instance GHC.Show.Show Network.AWS.Glue.GetMLTaskRun.GetMLTaskRun
instance GHC.Read.Read Network.AWS.Glue.GetMLTaskRun.GetMLTaskRun
instance GHC.Classes.Eq Network.AWS.Glue.GetMLTaskRun.GetMLTaskRun
instance GHC.Generics.Generic Network.AWS.Glue.GetMLTaskRun.GetMLTaskRunResponse
instance GHC.Show.Show Network.AWS.Glue.GetMLTaskRun.GetMLTaskRunResponse
instance GHC.Read.Read Network.AWS.Glue.GetMLTaskRun.GetMLTaskRunResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetMLTaskRun.GetMLTaskRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetMLTaskRun.GetMLTaskRun
instance Control.DeepSeq.NFData Network.AWS.Glue.GetMLTaskRun.GetMLTaskRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetMLTaskRun.GetMLTaskRun
instance Control.DeepSeq.NFData Network.AWS.Glue.GetMLTaskRun.GetMLTaskRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetMLTaskRun.GetMLTaskRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetMLTaskRun.GetMLTaskRun
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetMLTaskRun.GetMLTaskRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetMLTaskRun.GetMLTaskRun


-- | Retrieves all current job definitions.
--   
--   This operation returns paginated results.
module Network.AWS.Glue.GetJobs

-- | <i>See:</i> <a>newGetJobs</a> smart constructor.
data GetJobs
GetJobs' :: Maybe Text -> Maybe Natural -> GetJobs

-- | A continuation token, if this is a continuation call.
[$sel:nextToken:GetJobs'] :: GetJobs -> Maybe Text

-- | The maximum size of the response.
[$sel:maxResults:GetJobs'] :: GetJobs -> Maybe Natural

-- | Create a value of <a>GetJobs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetJobs'</a>, <a>getJobs_nextToken</a> - A
--   continuation token, if this is a continuation call.
--   
--   <a>$sel:maxResults:GetJobs'</a>, <a>getJobs_maxResults</a> - The
--   maximum size of the response.
newGetJobs :: GetJobs

-- | A continuation token, if this is a continuation call.
getJobs_nextToken :: Lens' GetJobs (Maybe Text)

-- | The maximum size of the response.
getJobs_maxResults :: Lens' GetJobs (Maybe Natural)

-- | <i>See:</i> <a>newGetJobsResponse</a> smart constructor.
data GetJobsResponse
GetJobsResponse' :: Maybe Text -> Maybe [Job] -> Int -> GetJobsResponse

-- | A continuation token, if not all job definitions have yet been
--   returned.
[$sel:nextToken:GetJobsResponse'] :: GetJobsResponse -> Maybe Text

-- | A list of job definitions.
[$sel:jobs:GetJobsResponse'] :: GetJobsResponse -> Maybe [Job]

-- | The response's http status code.
[$sel:httpStatus:GetJobsResponse'] :: GetJobsResponse -> Int

-- | Create a value of <a>GetJobsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetJobs'</a>, <a>getJobsResponse_nextToken</a> - A
--   continuation token, if not all job definitions have yet been returned.
--   
--   <a>$sel:jobs:GetJobsResponse'</a>, <a>getJobsResponse_jobs</a> - A
--   list of job definitions.
--   
--   <a>$sel:httpStatus:GetJobsResponse'</a>,
--   <a>getJobsResponse_httpStatus</a> - The response's http status code.
newGetJobsResponse :: Int -> GetJobsResponse

-- | A continuation token, if not all job definitions have yet been
--   returned.
getJobsResponse_nextToken :: Lens' GetJobsResponse (Maybe Text)

-- | A list of job definitions.
getJobsResponse_jobs :: Lens' GetJobsResponse (Maybe [Job])

-- | The response's http status code.
getJobsResponse_httpStatus :: Lens' GetJobsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetJobs.GetJobs
instance GHC.Show.Show Network.AWS.Glue.GetJobs.GetJobs
instance GHC.Read.Read Network.AWS.Glue.GetJobs.GetJobs
instance GHC.Classes.Eq Network.AWS.Glue.GetJobs.GetJobs
instance GHC.Generics.Generic Network.AWS.Glue.GetJobs.GetJobsResponse
instance GHC.Show.Show Network.AWS.Glue.GetJobs.GetJobsResponse
instance GHC.Read.Read Network.AWS.Glue.GetJobs.GetJobsResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetJobs.GetJobsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetJobs.GetJobs
instance Control.DeepSeq.NFData Network.AWS.Glue.GetJobs.GetJobsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Glue.GetJobs.GetJobs
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetJobs.GetJobs
instance Control.DeepSeq.NFData Network.AWS.Glue.GetJobs.GetJobs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetJobs.GetJobs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetJobs.GetJobs
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetJobs.GetJobs
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetJobs.GetJobs


-- | Retrieves metadata for all runs of a given job definition.
--   
--   This operation returns paginated results.
module Network.AWS.Glue.GetJobRuns

-- | <i>See:</i> <a>newGetJobRuns</a> smart constructor.
data GetJobRuns
GetJobRuns' :: Maybe Text -> Maybe Natural -> Text -> GetJobRuns

-- | A continuation token, if this is a continuation call.
[$sel:nextToken:GetJobRuns'] :: GetJobRuns -> Maybe Text

-- | The maximum size of the response.
[$sel:maxResults:GetJobRuns'] :: GetJobRuns -> Maybe Natural

-- | The name of the job definition for which to retrieve all job runs.
[$sel:jobName:GetJobRuns'] :: GetJobRuns -> Text

-- | Create a value of <a>GetJobRuns</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetJobRuns'</a>, <a>getJobRuns_nextToken</a> - A
--   continuation token, if this is a continuation call.
--   
--   <a>$sel:maxResults:GetJobRuns'</a>, <a>getJobRuns_maxResults</a> - The
--   maximum size of the response.
--   
--   <a>$sel:jobName:GetJobRuns'</a>, <a>getJobRuns_jobName</a> - The name
--   of the job definition for which to retrieve all job runs.
newGetJobRuns :: Text -> GetJobRuns

-- | A continuation token, if this is a continuation call.
getJobRuns_nextToken :: Lens' GetJobRuns (Maybe Text)

-- | The maximum size of the response.
getJobRuns_maxResults :: Lens' GetJobRuns (Maybe Natural)

-- | The name of the job definition for which to retrieve all job runs.
getJobRuns_jobName :: Lens' GetJobRuns Text

-- | <i>See:</i> <a>newGetJobRunsResponse</a> smart constructor.
data GetJobRunsResponse
GetJobRunsResponse' :: Maybe Text -> Maybe [JobRun] -> Int -> GetJobRunsResponse

-- | A continuation token, if not all requested job runs have been
--   returned.
[$sel:nextToken:GetJobRunsResponse'] :: GetJobRunsResponse -> Maybe Text

-- | A list of job-run metadata objects.
[$sel:jobRuns:GetJobRunsResponse'] :: GetJobRunsResponse -> Maybe [JobRun]

-- | The response's http status code.
[$sel:httpStatus:GetJobRunsResponse'] :: GetJobRunsResponse -> Int

-- | Create a value of <a>GetJobRunsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetJobRuns'</a>, <a>getJobRunsResponse_nextToken</a>
--   - A continuation token, if not all requested job runs have been
--   returned.
--   
--   <a>$sel:jobRuns:GetJobRunsResponse'</a>,
--   <a>getJobRunsResponse_jobRuns</a> - A list of job-run metadata
--   objects.
--   
--   <a>$sel:httpStatus:GetJobRunsResponse'</a>,
--   <a>getJobRunsResponse_httpStatus</a> - The response's http status
--   code.
newGetJobRunsResponse :: Int -> GetJobRunsResponse

-- | A continuation token, if not all requested job runs have been
--   returned.
getJobRunsResponse_nextToken :: Lens' GetJobRunsResponse (Maybe Text)

-- | A list of job-run metadata objects.
getJobRunsResponse_jobRuns :: Lens' GetJobRunsResponse (Maybe [JobRun])

-- | The response's http status code.
getJobRunsResponse_httpStatus :: Lens' GetJobRunsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetJobRuns.GetJobRuns
instance GHC.Show.Show Network.AWS.Glue.GetJobRuns.GetJobRuns
instance GHC.Read.Read Network.AWS.Glue.GetJobRuns.GetJobRuns
instance GHC.Classes.Eq Network.AWS.Glue.GetJobRuns.GetJobRuns
instance GHC.Generics.Generic Network.AWS.Glue.GetJobRuns.GetJobRunsResponse
instance GHC.Show.Show Network.AWS.Glue.GetJobRuns.GetJobRunsResponse
instance GHC.Read.Read Network.AWS.Glue.GetJobRuns.GetJobRunsResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetJobRuns.GetJobRunsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetJobRuns.GetJobRuns
instance Control.DeepSeq.NFData Network.AWS.Glue.GetJobRuns.GetJobRunsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Glue.GetJobRuns.GetJobRuns
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetJobRuns.GetJobRuns
instance Control.DeepSeq.NFData Network.AWS.Glue.GetJobRuns.GetJobRuns
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetJobRuns.GetJobRuns
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetJobRuns.GetJobRuns
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetJobRuns.GetJobRuns
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetJobRuns.GetJobRuns


-- | Retrieves the metadata for a given job run.
module Network.AWS.Glue.GetJobRun

-- | <i>See:</i> <a>newGetJobRun</a> smart constructor.
data GetJobRun
GetJobRun' :: Maybe Bool -> Text -> Text -> GetJobRun

-- | True if a list of predecessor runs should be returned.
[$sel:predecessorsIncluded:GetJobRun'] :: GetJobRun -> Maybe Bool

-- | Name of the job definition being run.
[$sel:jobName:GetJobRun'] :: GetJobRun -> Text

-- | The ID of the job run.
[$sel:runId:GetJobRun'] :: GetJobRun -> Text

-- | Create a value of <a>GetJobRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:predecessorsIncluded:GetJobRun'</a>,
--   <a>getJobRun_predecessorsIncluded</a> - True if a list of predecessor
--   runs should be returned.
--   
--   <a>$sel:jobName:GetJobRun'</a>, <a>getJobRun_jobName</a> - Name of the
--   job definition being run.
--   
--   <a>$sel:runId:GetJobRun'</a>, <a>getJobRun_runId</a> - The ID of the
--   job run.
newGetJobRun :: Text -> Text -> GetJobRun

-- | True if a list of predecessor runs should be returned.
getJobRun_predecessorsIncluded :: Lens' GetJobRun (Maybe Bool)

-- | Name of the job definition being run.
getJobRun_jobName :: Lens' GetJobRun Text

-- | The ID of the job run.
getJobRun_runId :: Lens' GetJobRun Text

-- | <i>See:</i> <a>newGetJobRunResponse</a> smart constructor.
data GetJobRunResponse
GetJobRunResponse' :: Maybe JobRun -> Int -> GetJobRunResponse

-- | The requested job-run metadata.
[$sel:jobRun:GetJobRunResponse'] :: GetJobRunResponse -> Maybe JobRun

-- | The response's http status code.
[$sel:httpStatus:GetJobRunResponse'] :: GetJobRunResponse -> Int

-- | Create a value of <a>GetJobRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobRun:GetJobRunResponse'</a>, <a>getJobRunResponse_jobRun</a>
--   - The requested job-run metadata.
--   
--   <a>$sel:httpStatus:GetJobRunResponse'</a>,
--   <a>getJobRunResponse_httpStatus</a> - The response's http status code.
newGetJobRunResponse :: Int -> GetJobRunResponse

-- | The requested job-run metadata.
getJobRunResponse_jobRun :: Lens' GetJobRunResponse (Maybe JobRun)

-- | The response's http status code.
getJobRunResponse_httpStatus :: Lens' GetJobRunResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetJobRun.GetJobRun
instance GHC.Show.Show Network.AWS.Glue.GetJobRun.GetJobRun
instance GHC.Read.Read Network.AWS.Glue.GetJobRun.GetJobRun
instance GHC.Classes.Eq Network.AWS.Glue.GetJobRun.GetJobRun
instance GHC.Generics.Generic Network.AWS.Glue.GetJobRun.GetJobRunResponse
instance GHC.Show.Show Network.AWS.Glue.GetJobRun.GetJobRunResponse
instance GHC.Read.Read Network.AWS.Glue.GetJobRun.GetJobRunResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetJobRun.GetJobRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetJobRun.GetJobRun
instance Control.DeepSeq.NFData Network.AWS.Glue.GetJobRun.GetJobRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetJobRun.GetJobRun
instance Control.DeepSeq.NFData Network.AWS.Glue.GetJobRun.GetJobRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetJobRun.GetJobRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetJobRun.GetJobRun
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetJobRun.GetJobRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetJobRun.GetJobRun


-- | Returns information on a job bookmark entry.
module Network.AWS.Glue.GetJobBookmark

-- | <i>See:</i> <a>newGetJobBookmark</a> smart constructor.
data GetJobBookmark
GetJobBookmark' :: Maybe Text -> Text -> GetJobBookmark

-- | The unique run identifier associated with this job run.
[$sel:runId:GetJobBookmark'] :: GetJobBookmark -> Maybe Text

-- | The name of the job in question.
[$sel:jobName:GetJobBookmark'] :: GetJobBookmark -> Text

-- | Create a value of <a>GetJobBookmark</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runId:GetJobBookmark'</a>, <a>getJobBookmark_runId</a> - The
--   unique run identifier associated with this job run.
--   
--   <a>$sel:jobName:GetJobBookmark'</a>, <a>getJobBookmark_jobName</a> -
--   The name of the job in question.
newGetJobBookmark :: Text -> GetJobBookmark

-- | The unique run identifier associated with this job run.
getJobBookmark_runId :: Lens' GetJobBookmark (Maybe Text)

-- | The name of the job in question.
getJobBookmark_jobName :: Lens' GetJobBookmark Text

-- | <i>See:</i> <a>newGetJobBookmarkResponse</a> smart constructor.
data GetJobBookmarkResponse
GetJobBookmarkResponse' :: Maybe JobBookmarkEntry -> Int -> GetJobBookmarkResponse

-- | A structure that defines a point that a job can resume processing.
[$sel:jobBookmarkEntry:GetJobBookmarkResponse'] :: GetJobBookmarkResponse -> Maybe JobBookmarkEntry

-- | The response's http status code.
[$sel:httpStatus:GetJobBookmarkResponse'] :: GetJobBookmarkResponse -> Int

-- | Create a value of <a>GetJobBookmarkResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobBookmarkEntry:GetJobBookmarkResponse'</a>,
--   <a>getJobBookmarkResponse_jobBookmarkEntry</a> - A structure that
--   defines a point that a job can resume processing.
--   
--   <a>$sel:httpStatus:GetJobBookmarkResponse'</a>,
--   <a>getJobBookmarkResponse_httpStatus</a> - The response's http status
--   code.
newGetJobBookmarkResponse :: Int -> GetJobBookmarkResponse

-- | A structure that defines a point that a job can resume processing.
getJobBookmarkResponse_jobBookmarkEntry :: Lens' GetJobBookmarkResponse (Maybe JobBookmarkEntry)

-- | The response's http status code.
getJobBookmarkResponse_httpStatus :: Lens' GetJobBookmarkResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetJobBookmark.GetJobBookmark
instance GHC.Show.Show Network.AWS.Glue.GetJobBookmark.GetJobBookmark
instance GHC.Read.Read Network.AWS.Glue.GetJobBookmark.GetJobBookmark
instance GHC.Classes.Eq Network.AWS.Glue.GetJobBookmark.GetJobBookmark
instance GHC.Generics.Generic Network.AWS.Glue.GetJobBookmark.GetJobBookmarkResponse
instance GHC.Show.Show Network.AWS.Glue.GetJobBookmark.GetJobBookmarkResponse
instance GHC.Read.Read Network.AWS.Glue.GetJobBookmark.GetJobBookmarkResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetJobBookmark.GetJobBookmarkResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetJobBookmark.GetJobBookmark
instance Control.DeepSeq.NFData Network.AWS.Glue.GetJobBookmark.GetJobBookmarkResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetJobBookmark.GetJobBookmark
instance Control.DeepSeq.NFData Network.AWS.Glue.GetJobBookmark.GetJobBookmark
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetJobBookmark.GetJobBookmark
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetJobBookmark.GetJobBookmark
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetJobBookmark.GetJobBookmark
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetJobBookmark.GetJobBookmark


-- | Retrieves an existing job definition.
module Network.AWS.Glue.GetJob

-- | <i>See:</i> <a>newGetJob</a> smart constructor.
data GetJob
GetJob' :: Text -> GetJob

-- | The name of the job definition to retrieve.
[$sel:jobName:GetJob'] :: GetJob -> Text

-- | Create a value of <a>GetJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:GetJob'</a>, <a>getJob_jobName</a> - The name of the
--   job definition to retrieve.
newGetJob :: Text -> GetJob

-- | The name of the job definition to retrieve.
getJob_jobName :: Lens' GetJob Text

-- | <i>See:</i> <a>newGetJobResponse</a> smart constructor.
data GetJobResponse
GetJobResponse' :: Maybe Job -> Int -> GetJobResponse

-- | The requested job definition.
[$sel:job:GetJobResponse'] :: GetJobResponse -> Maybe Job

-- | The response's http status code.
[$sel:httpStatus:GetJobResponse'] :: GetJobResponse -> Int

-- | Create a value of <a>GetJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:GetJobResponse'</a>, <a>getJobResponse_job</a> - The
--   requested job definition.
--   
--   <a>$sel:httpStatus:GetJobResponse'</a>,
--   <a>getJobResponse_httpStatus</a> - The response's http status code.
newGetJobResponse :: Int -> GetJobResponse

-- | The requested job definition.
getJobResponse_job :: Lens' GetJobResponse (Maybe Job)

-- | The response's http status code.
getJobResponse_httpStatus :: Lens' GetJobResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetJob.GetJob
instance GHC.Show.Show Network.AWS.Glue.GetJob.GetJob
instance GHC.Read.Read Network.AWS.Glue.GetJob.GetJob
instance GHC.Classes.Eq Network.AWS.Glue.GetJob.GetJob
instance GHC.Generics.Generic Network.AWS.Glue.GetJob.GetJobResponse
instance GHC.Show.Show Network.AWS.Glue.GetJob.GetJobResponse
instance GHC.Read.Read Network.AWS.Glue.GetJob.GetJobResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetJob.GetJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetJob.GetJob
instance Control.DeepSeq.NFData Network.AWS.Glue.GetJob.GetJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetJob.GetJob
instance Control.DeepSeq.NFData Network.AWS.Glue.GetJob.GetJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetJob.GetJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetJob.GetJob
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetJob.GetJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetJob.GetJob


-- | Retrieves all the development endpoints in this AWS account.
--   
--   When you create a development endpoint in a virtual private cloud
--   (VPC), Glue returns only a private IP address and the public IP
--   address field is not populated. When you create a non-VPC development
--   endpoint, Glue returns only a public IP address.
--   
--   This operation returns paginated results.
module Network.AWS.Glue.GetDevEndpoints

-- | <i>See:</i> <a>newGetDevEndpoints</a> smart constructor.
data GetDevEndpoints
GetDevEndpoints' :: Maybe Text -> Maybe Natural -> GetDevEndpoints

-- | A continuation token, if this is a continuation call.
[$sel:nextToken:GetDevEndpoints'] :: GetDevEndpoints -> Maybe Text

-- | The maximum size of information to return.
[$sel:maxResults:GetDevEndpoints'] :: GetDevEndpoints -> Maybe Natural

-- | Create a value of <a>GetDevEndpoints</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDevEndpoints'</a>,
--   <a>getDevEndpoints_nextToken</a> - A continuation token, if this is a
--   continuation call.
--   
--   <a>$sel:maxResults:GetDevEndpoints'</a>,
--   <a>getDevEndpoints_maxResults</a> - The maximum size of information to
--   return.
newGetDevEndpoints :: GetDevEndpoints

-- | A continuation token, if this is a continuation call.
getDevEndpoints_nextToken :: Lens' GetDevEndpoints (Maybe Text)

-- | The maximum size of information to return.
getDevEndpoints_maxResults :: Lens' GetDevEndpoints (Maybe Natural)

-- | <i>See:</i> <a>newGetDevEndpointsResponse</a> smart constructor.
data GetDevEndpointsResponse
GetDevEndpointsResponse' :: Maybe Text -> Maybe [DevEndpoint] -> Int -> GetDevEndpointsResponse

-- | A continuation token, if not all <tt>DevEndpoint</tt> definitions have
--   yet been returned.
[$sel:nextToken:GetDevEndpointsResponse'] :: GetDevEndpointsResponse -> Maybe Text

-- | A list of <tt>DevEndpoint</tt> definitions.
[$sel:devEndpoints:GetDevEndpointsResponse'] :: GetDevEndpointsResponse -> Maybe [DevEndpoint]

-- | The response's http status code.
[$sel:httpStatus:GetDevEndpointsResponse'] :: GetDevEndpointsResponse -> Int

-- | Create a value of <a>GetDevEndpointsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDevEndpoints'</a>,
--   <a>getDevEndpointsResponse_nextToken</a> - A continuation token, if
--   not all <tt>DevEndpoint</tt> definitions have yet been returned.
--   
--   <a>$sel:devEndpoints:GetDevEndpointsResponse'</a>,
--   <a>getDevEndpointsResponse_devEndpoints</a> - A list of
--   <tt>DevEndpoint</tt> definitions.
--   
--   <a>$sel:httpStatus:GetDevEndpointsResponse'</a>,
--   <a>getDevEndpointsResponse_httpStatus</a> - The response's http status
--   code.
newGetDevEndpointsResponse :: Int -> GetDevEndpointsResponse

-- | A continuation token, if not all <tt>DevEndpoint</tt> definitions have
--   yet been returned.
getDevEndpointsResponse_nextToken :: Lens' GetDevEndpointsResponse (Maybe Text)

-- | A list of <tt>DevEndpoint</tt> definitions.
getDevEndpointsResponse_devEndpoints :: Lens' GetDevEndpointsResponse (Maybe [DevEndpoint])

-- | The response's http status code.
getDevEndpointsResponse_httpStatus :: Lens' GetDevEndpointsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetDevEndpoints.GetDevEndpoints
instance GHC.Show.Show Network.AWS.Glue.GetDevEndpoints.GetDevEndpoints
instance GHC.Read.Read Network.AWS.Glue.GetDevEndpoints.GetDevEndpoints
instance GHC.Classes.Eq Network.AWS.Glue.GetDevEndpoints.GetDevEndpoints
instance GHC.Generics.Generic Network.AWS.Glue.GetDevEndpoints.GetDevEndpointsResponse
instance GHC.Show.Show Network.AWS.Glue.GetDevEndpoints.GetDevEndpointsResponse
instance GHC.Read.Read Network.AWS.Glue.GetDevEndpoints.GetDevEndpointsResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetDevEndpoints.GetDevEndpointsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetDevEndpoints.GetDevEndpoints
instance Control.DeepSeq.NFData Network.AWS.Glue.GetDevEndpoints.GetDevEndpointsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Glue.GetDevEndpoints.GetDevEndpoints
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetDevEndpoints.GetDevEndpoints
instance Control.DeepSeq.NFData Network.AWS.Glue.GetDevEndpoints.GetDevEndpoints
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetDevEndpoints.GetDevEndpoints
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetDevEndpoints.GetDevEndpoints
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetDevEndpoints.GetDevEndpoints
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetDevEndpoints.GetDevEndpoints


-- | Retrieves information about a specified development endpoint.
--   
--   When you create a development endpoint in a virtual private cloud
--   (VPC), Glue returns only a private IP address, and the public IP
--   address field is not populated. When you create a non-VPC development
--   endpoint, Glue returns only a public IP address.
module Network.AWS.Glue.GetDevEndpoint

-- | <i>See:</i> <a>newGetDevEndpoint</a> smart constructor.
data GetDevEndpoint
GetDevEndpoint' :: Text -> GetDevEndpoint

-- | Name of the <tt>DevEndpoint</tt> to retrieve information for.
[$sel:endpointName:GetDevEndpoint'] :: GetDevEndpoint -> Text

-- | Create a value of <a>GetDevEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpointName:GetDevEndpoint'</a>,
--   <a>getDevEndpoint_endpointName</a> - Name of the <tt>DevEndpoint</tt>
--   to retrieve information for.
newGetDevEndpoint :: Text -> GetDevEndpoint

-- | Name of the <tt>DevEndpoint</tt> to retrieve information for.
getDevEndpoint_endpointName :: Lens' GetDevEndpoint Text

-- | <i>See:</i> <a>newGetDevEndpointResponse</a> smart constructor.
data GetDevEndpointResponse
GetDevEndpointResponse' :: Maybe DevEndpoint -> Int -> GetDevEndpointResponse

-- | A <tt>DevEndpoint</tt> definition.
[$sel:devEndpoint:GetDevEndpointResponse'] :: GetDevEndpointResponse -> Maybe DevEndpoint

-- | The response's http status code.
[$sel:httpStatus:GetDevEndpointResponse'] :: GetDevEndpointResponse -> Int

-- | Create a value of <a>GetDevEndpointResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:devEndpoint:GetDevEndpointResponse'</a>,
--   <a>getDevEndpointResponse_devEndpoint</a> - A <tt>DevEndpoint</tt>
--   definition.
--   
--   <a>$sel:httpStatus:GetDevEndpointResponse'</a>,
--   <a>getDevEndpointResponse_httpStatus</a> - The response's http status
--   code.
newGetDevEndpointResponse :: Int -> GetDevEndpointResponse

-- | A <tt>DevEndpoint</tt> definition.
getDevEndpointResponse_devEndpoint :: Lens' GetDevEndpointResponse (Maybe DevEndpoint)

-- | The response's http status code.
getDevEndpointResponse_httpStatus :: Lens' GetDevEndpointResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetDevEndpoint.GetDevEndpoint
instance GHC.Show.Show Network.AWS.Glue.GetDevEndpoint.GetDevEndpoint
instance GHC.Read.Read Network.AWS.Glue.GetDevEndpoint.GetDevEndpoint
instance GHC.Classes.Eq Network.AWS.Glue.GetDevEndpoint.GetDevEndpoint
instance GHC.Generics.Generic Network.AWS.Glue.GetDevEndpoint.GetDevEndpointResponse
instance GHC.Show.Show Network.AWS.Glue.GetDevEndpoint.GetDevEndpointResponse
instance GHC.Read.Read Network.AWS.Glue.GetDevEndpoint.GetDevEndpointResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetDevEndpoint.GetDevEndpointResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetDevEndpoint.GetDevEndpoint
instance Control.DeepSeq.NFData Network.AWS.Glue.GetDevEndpoint.GetDevEndpointResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetDevEndpoint.GetDevEndpoint
instance Control.DeepSeq.NFData Network.AWS.Glue.GetDevEndpoint.GetDevEndpoint
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetDevEndpoint.GetDevEndpoint
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetDevEndpoint.GetDevEndpoint
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetDevEndpoint.GetDevEndpoint
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetDevEndpoint.GetDevEndpoint


-- | Transforms a Python script into a directed acyclic graph (DAG).
module Network.AWS.Glue.GetDataflowGraph

-- | <i>See:</i> <a>newGetDataflowGraph</a> smart constructor.
data GetDataflowGraph
GetDataflowGraph' :: Maybe Text -> GetDataflowGraph

-- | The Python script to transform.
[$sel:pythonScript:GetDataflowGraph'] :: GetDataflowGraph -> Maybe Text

-- | Create a value of <a>GetDataflowGraph</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pythonScript:GetDataflowGraph'</a>,
--   <a>getDataflowGraph_pythonScript</a> - The Python script to transform.
newGetDataflowGraph :: GetDataflowGraph

-- | The Python script to transform.
getDataflowGraph_pythonScript :: Lens' GetDataflowGraph (Maybe Text)

-- | <i>See:</i> <a>newGetDataflowGraphResponse</a> smart constructor.
data GetDataflowGraphResponse
GetDataflowGraphResponse' :: Maybe [CodeGenEdge] -> Maybe [CodeGenNode] -> Int -> GetDataflowGraphResponse

-- | A list of the edges in the resulting DAG.
[$sel:dagEdges:GetDataflowGraphResponse'] :: GetDataflowGraphResponse -> Maybe [CodeGenEdge]

-- | A list of the nodes in the resulting DAG.
[$sel:dagNodes:GetDataflowGraphResponse'] :: GetDataflowGraphResponse -> Maybe [CodeGenNode]

-- | The response's http status code.
[$sel:httpStatus:GetDataflowGraphResponse'] :: GetDataflowGraphResponse -> Int

-- | Create a value of <a>GetDataflowGraphResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dagEdges:GetDataflowGraphResponse'</a>,
--   <a>getDataflowGraphResponse_dagEdges</a> - A list of the edges in the
--   resulting DAG.
--   
--   <a>$sel:dagNodes:GetDataflowGraphResponse'</a>,
--   <a>getDataflowGraphResponse_dagNodes</a> - A list of the nodes in the
--   resulting DAG.
--   
--   <a>$sel:httpStatus:GetDataflowGraphResponse'</a>,
--   <a>getDataflowGraphResponse_httpStatus</a> - The response's http
--   status code.
newGetDataflowGraphResponse :: Int -> GetDataflowGraphResponse

-- | A list of the edges in the resulting DAG.
getDataflowGraphResponse_dagEdges :: Lens' GetDataflowGraphResponse (Maybe [CodeGenEdge])

-- | A list of the nodes in the resulting DAG.
getDataflowGraphResponse_dagNodes :: Lens' GetDataflowGraphResponse (Maybe [CodeGenNode])

-- | The response's http status code.
getDataflowGraphResponse_httpStatus :: Lens' GetDataflowGraphResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetDataflowGraph.GetDataflowGraph
instance GHC.Show.Show Network.AWS.Glue.GetDataflowGraph.GetDataflowGraph
instance GHC.Read.Read Network.AWS.Glue.GetDataflowGraph.GetDataflowGraph
instance GHC.Classes.Eq Network.AWS.Glue.GetDataflowGraph.GetDataflowGraph
instance GHC.Generics.Generic Network.AWS.Glue.GetDataflowGraph.GetDataflowGraphResponse
instance GHC.Show.Show Network.AWS.Glue.GetDataflowGraph.GetDataflowGraphResponse
instance GHC.Read.Read Network.AWS.Glue.GetDataflowGraph.GetDataflowGraphResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetDataflowGraph.GetDataflowGraphResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetDataflowGraph.GetDataflowGraph
instance Control.DeepSeq.NFData Network.AWS.Glue.GetDataflowGraph.GetDataflowGraphResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetDataflowGraph.GetDataflowGraph
instance Control.DeepSeq.NFData Network.AWS.Glue.GetDataflowGraph.GetDataflowGraph
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetDataflowGraph.GetDataflowGraph
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetDataflowGraph.GetDataflowGraph
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetDataflowGraph.GetDataflowGraph
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetDataflowGraph.GetDataflowGraph


-- | Retrieves all databases defined in a given Data Catalog.
--   
--   This operation returns paginated results.
module Network.AWS.Glue.GetDatabases

-- | <i>See:</i> <a>newGetDatabases</a> smart constructor.
data GetDatabases
GetDatabases' :: Maybe ResourceShareType -> Maybe Text -> Maybe Text -> Maybe Natural -> GetDatabases

-- | Allows you to specify that you want to list the databases shared with
--   your account. The allowable values are <tt>FOREIGN</tt> or
--   <tt>ALL</tt>.
--   
--   <ul>
--   <li>If set to <tt>FOREIGN</tt>, will list the databases shared with
--   your account.</li>
--   <li>If set to <tt>ALL</tt>, will list the databases shared with your
--   account, as well as the databases in yor local account.</li>
--   </ul>
[$sel:resourceShareType:GetDatabases'] :: GetDatabases -> Maybe ResourceShareType

-- | The ID of the Data Catalog from which to retrieve <tt>Databases</tt>.
--   If none is provided, the Amazon Web Services account ID is used by
--   default.
[$sel:catalogId:GetDatabases'] :: GetDatabases -> Maybe Text

-- | A continuation token, if this is a continuation call.
[$sel:nextToken:GetDatabases'] :: GetDatabases -> Maybe Text

-- | The maximum number of databases to return in one response.
[$sel:maxResults:GetDatabases'] :: GetDatabases -> Maybe Natural

-- | Create a value of <a>GetDatabases</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceShareType:GetDatabases'</a>,
--   <a>getDatabases_resourceShareType</a> - Allows you to specify that you
--   want to list the databases shared with your account. The allowable
--   values are <tt>FOREIGN</tt> or <tt>ALL</tt>.
--   
--   <ul>
--   <li>If set to <tt>FOREIGN</tt>, will list the databases shared with
--   your account.</li>
--   <li>If set to <tt>ALL</tt>, will list the databases shared with your
--   account, as well as the databases in yor local account.</li>
--   </ul>
--   
--   <a>$sel:catalogId:GetDatabases'</a>, <a>getDatabases_catalogId</a> -
--   The ID of the Data Catalog from which to retrieve <tt>Databases</tt>.
--   If none is provided, the Amazon Web Services account ID is used by
--   default.
--   
--   <a>$sel:nextToken:GetDatabases'</a>, <a>getDatabases_nextToken</a> - A
--   continuation token, if this is a continuation call.
--   
--   <a>$sel:maxResults:GetDatabases'</a>, <a>getDatabases_maxResults</a> -
--   The maximum number of databases to return in one response.
newGetDatabases :: GetDatabases

-- | Allows you to specify that you want to list the databases shared with
--   your account. The allowable values are <tt>FOREIGN</tt> or
--   <tt>ALL</tt>.
--   
--   <ul>
--   <li>If set to <tt>FOREIGN</tt>, will list the databases shared with
--   your account.</li>
--   <li>If set to <tt>ALL</tt>, will list the databases shared with your
--   account, as well as the databases in yor local account.</li>
--   </ul>
getDatabases_resourceShareType :: Lens' GetDatabases (Maybe ResourceShareType)

-- | The ID of the Data Catalog from which to retrieve <tt>Databases</tt>.
--   If none is provided, the Amazon Web Services account ID is used by
--   default.
getDatabases_catalogId :: Lens' GetDatabases (Maybe Text)

-- | A continuation token, if this is a continuation call.
getDatabases_nextToken :: Lens' GetDatabases (Maybe Text)

-- | The maximum number of databases to return in one response.
getDatabases_maxResults :: Lens' GetDatabases (Maybe Natural)

-- | <i>See:</i> <a>newGetDatabasesResponse</a> smart constructor.
data GetDatabasesResponse
GetDatabasesResponse' :: Maybe Text -> Int -> [Database] -> GetDatabasesResponse

-- | A continuation token for paginating the returned list of tokens,
--   returned if the current segment of the list is not the last.
[$sel:nextToken:GetDatabasesResponse'] :: GetDatabasesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetDatabasesResponse'] :: GetDatabasesResponse -> Int

-- | A list of <tt>Database</tt> objects from the specified catalog.
[$sel:databaseList:GetDatabasesResponse'] :: GetDatabasesResponse -> [Database]

-- | Create a value of <a>GetDatabasesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDatabases'</a>,
--   <a>getDatabasesResponse_nextToken</a> - A continuation token for
--   paginating the returned list of tokens, returned if the current
--   segment of the list is not the last.
--   
--   <a>$sel:httpStatus:GetDatabasesResponse'</a>,
--   <a>getDatabasesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:databaseList:GetDatabasesResponse'</a>,
--   <a>getDatabasesResponse_databaseList</a> - A list of <tt>Database</tt>
--   objects from the specified catalog.
newGetDatabasesResponse :: Int -> GetDatabasesResponse

-- | A continuation token for paginating the returned list of tokens,
--   returned if the current segment of the list is not the last.
getDatabasesResponse_nextToken :: Lens' GetDatabasesResponse (Maybe Text)

-- | The response's http status code.
getDatabasesResponse_httpStatus :: Lens' GetDatabasesResponse Int

-- | A list of <tt>Database</tt> objects from the specified catalog.
getDatabasesResponse_databaseList :: Lens' GetDatabasesResponse [Database]
instance GHC.Generics.Generic Network.AWS.Glue.GetDatabases.GetDatabases
instance GHC.Show.Show Network.AWS.Glue.GetDatabases.GetDatabases
instance GHC.Read.Read Network.AWS.Glue.GetDatabases.GetDatabases
instance GHC.Classes.Eq Network.AWS.Glue.GetDatabases.GetDatabases
instance GHC.Generics.Generic Network.AWS.Glue.GetDatabases.GetDatabasesResponse
instance GHC.Show.Show Network.AWS.Glue.GetDatabases.GetDatabasesResponse
instance GHC.Read.Read Network.AWS.Glue.GetDatabases.GetDatabasesResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetDatabases.GetDatabasesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetDatabases.GetDatabases
instance Control.DeepSeq.NFData Network.AWS.Glue.GetDatabases.GetDatabasesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Glue.GetDatabases.GetDatabases
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetDatabases.GetDatabases
instance Control.DeepSeq.NFData Network.AWS.Glue.GetDatabases.GetDatabases
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetDatabases.GetDatabases
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetDatabases.GetDatabases
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetDatabases.GetDatabases
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetDatabases.GetDatabases


-- | Retrieves the definition of a specified database.
module Network.AWS.Glue.GetDatabase

-- | <i>See:</i> <a>newGetDatabase</a> smart constructor.
data GetDatabase
GetDatabase' :: Maybe Text -> Text -> GetDatabase

-- | The ID of the Data Catalog in which the database resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
[$sel:catalogId:GetDatabase'] :: GetDatabase -> Maybe Text

-- | The name of the database to retrieve. For Hive compatibility, this
--   should be all lowercase.
[$sel:name:GetDatabase'] :: GetDatabase -> Text

-- | Create a value of <a>GetDatabase</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetDatabase'</a>, <a>getDatabase_catalogId</a> - The
--   ID of the Data Catalog in which the database resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:name:GetDatabase'</a>, <a>getDatabase_name</a> - The name of
--   the database to retrieve. For Hive compatibility, this should be all
--   lowercase.
newGetDatabase :: Text -> GetDatabase

-- | The ID of the Data Catalog in which the database resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
getDatabase_catalogId :: Lens' GetDatabase (Maybe Text)

-- | The name of the database to retrieve. For Hive compatibility, this
--   should be all lowercase.
getDatabase_name :: Lens' GetDatabase Text

-- | <i>See:</i> <a>newGetDatabaseResponse</a> smart constructor.
data GetDatabaseResponse
GetDatabaseResponse' :: Maybe Database -> Int -> GetDatabaseResponse

-- | The definition of the specified database in the Data Catalog.
[$sel:database:GetDatabaseResponse'] :: GetDatabaseResponse -> Maybe Database

-- | The response's http status code.
[$sel:httpStatus:GetDatabaseResponse'] :: GetDatabaseResponse -> Int

-- | Create a value of <a>GetDatabaseResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:database:GetDatabaseResponse'</a>,
--   <a>getDatabaseResponse_database</a> - The definition of the specified
--   database in the Data Catalog.
--   
--   <a>$sel:httpStatus:GetDatabaseResponse'</a>,
--   <a>getDatabaseResponse_httpStatus</a> - The response's http status
--   code.
newGetDatabaseResponse :: Int -> GetDatabaseResponse

-- | The definition of the specified database in the Data Catalog.
getDatabaseResponse_database :: Lens' GetDatabaseResponse (Maybe Database)

-- | The response's http status code.
getDatabaseResponse_httpStatus :: Lens' GetDatabaseResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetDatabase.GetDatabase
instance GHC.Show.Show Network.AWS.Glue.GetDatabase.GetDatabase
instance GHC.Read.Read Network.AWS.Glue.GetDatabase.GetDatabase
instance GHC.Classes.Eq Network.AWS.Glue.GetDatabase.GetDatabase
instance GHC.Generics.Generic Network.AWS.Glue.GetDatabase.GetDatabaseResponse
instance GHC.Show.Show Network.AWS.Glue.GetDatabase.GetDatabaseResponse
instance GHC.Read.Read Network.AWS.Glue.GetDatabase.GetDatabaseResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetDatabase.GetDatabaseResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetDatabase.GetDatabase
instance Control.DeepSeq.NFData Network.AWS.Glue.GetDatabase.GetDatabaseResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetDatabase.GetDatabase
instance Control.DeepSeq.NFData Network.AWS.Glue.GetDatabase.GetDatabase
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetDatabase.GetDatabase
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetDatabase.GetDatabase
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetDatabase.GetDatabase
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetDatabase.GetDatabase


-- | Retrieves the security configuration for a specified catalog.
module Network.AWS.Glue.GetDataCatalogEncryptionSettings

-- | <i>See:</i> <a>newGetDataCatalogEncryptionSettings</a> smart
--   constructor.
data GetDataCatalogEncryptionSettings
GetDataCatalogEncryptionSettings' :: Maybe Text -> GetDataCatalogEncryptionSettings

-- | The ID of the Data Catalog to retrieve the security configuration for.
--   If none is provided, the Amazon Web Services account ID is used by
--   default.
[$sel:catalogId:GetDataCatalogEncryptionSettings'] :: GetDataCatalogEncryptionSettings -> Maybe Text

-- | Create a value of <a>GetDataCatalogEncryptionSettings</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetDataCatalogEncryptionSettings'</a>,
--   <a>getDataCatalogEncryptionSettings_catalogId</a> - The ID of the Data
--   Catalog to retrieve the security configuration for. If none is
--   provided, the Amazon Web Services account ID is used by default.
newGetDataCatalogEncryptionSettings :: GetDataCatalogEncryptionSettings

-- | The ID of the Data Catalog to retrieve the security configuration for.
--   If none is provided, the Amazon Web Services account ID is used by
--   default.
getDataCatalogEncryptionSettings_catalogId :: Lens' GetDataCatalogEncryptionSettings (Maybe Text)

-- | <i>See:</i> <a>newGetDataCatalogEncryptionSettingsResponse</a> smart
--   constructor.
data GetDataCatalogEncryptionSettingsResponse
GetDataCatalogEncryptionSettingsResponse' :: Maybe DataCatalogEncryptionSettings -> Int -> GetDataCatalogEncryptionSettingsResponse

-- | The requested security configuration.
[$sel:dataCatalogEncryptionSettings:GetDataCatalogEncryptionSettingsResponse'] :: GetDataCatalogEncryptionSettingsResponse -> Maybe DataCatalogEncryptionSettings

-- | The response's http status code.
[$sel:httpStatus:GetDataCatalogEncryptionSettingsResponse'] :: GetDataCatalogEncryptionSettingsResponse -> Int

-- | Create a value of <a>GetDataCatalogEncryptionSettingsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:dataCatalogEncryptionSettings:GetDataCatalogEncryptionSettingsResponse'</a>,
--   <a>getDataCatalogEncryptionSettingsResponse_dataCatalogEncryptionSettings</a>
--   - The requested security configuration.
--   
--   <a>$sel:httpStatus:GetDataCatalogEncryptionSettingsResponse'</a>,
--   <a>getDataCatalogEncryptionSettingsResponse_httpStatus</a> - The
--   response's http status code.
newGetDataCatalogEncryptionSettingsResponse :: Int -> GetDataCatalogEncryptionSettingsResponse

-- | The requested security configuration.
getDataCatalogEncryptionSettingsResponse_dataCatalogEncryptionSettings :: Lens' GetDataCatalogEncryptionSettingsResponse (Maybe DataCatalogEncryptionSettings)

-- | The response's http status code.
getDataCatalogEncryptionSettingsResponse_httpStatus :: Lens' GetDataCatalogEncryptionSettingsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetDataCatalogEncryptionSettings.GetDataCatalogEncryptionSettings
instance GHC.Show.Show Network.AWS.Glue.GetDataCatalogEncryptionSettings.GetDataCatalogEncryptionSettings
instance GHC.Read.Read Network.AWS.Glue.GetDataCatalogEncryptionSettings.GetDataCatalogEncryptionSettings
instance GHC.Classes.Eq Network.AWS.Glue.GetDataCatalogEncryptionSettings.GetDataCatalogEncryptionSettings
instance GHC.Generics.Generic Network.AWS.Glue.GetDataCatalogEncryptionSettings.GetDataCatalogEncryptionSettingsResponse
instance GHC.Show.Show Network.AWS.Glue.GetDataCatalogEncryptionSettings.GetDataCatalogEncryptionSettingsResponse
instance GHC.Read.Read Network.AWS.Glue.GetDataCatalogEncryptionSettings.GetDataCatalogEncryptionSettingsResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetDataCatalogEncryptionSettings.GetDataCatalogEncryptionSettingsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetDataCatalogEncryptionSettings.GetDataCatalogEncryptionSettings
instance Control.DeepSeq.NFData Network.AWS.Glue.GetDataCatalogEncryptionSettings.GetDataCatalogEncryptionSettingsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetDataCatalogEncryptionSettings.GetDataCatalogEncryptionSettings
instance Control.DeepSeq.NFData Network.AWS.Glue.GetDataCatalogEncryptionSettings.GetDataCatalogEncryptionSettings
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetDataCatalogEncryptionSettings.GetDataCatalogEncryptionSettings
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetDataCatalogEncryptionSettings.GetDataCatalogEncryptionSettings
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetDataCatalogEncryptionSettings.GetDataCatalogEncryptionSettings
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetDataCatalogEncryptionSettings.GetDataCatalogEncryptionSettings


-- | Retrieves metadata for all crawlers defined in the customer account.
--   
--   This operation returns paginated results.
module Network.AWS.Glue.GetCrawlers

-- | <i>See:</i> <a>newGetCrawlers</a> smart constructor.
data GetCrawlers
GetCrawlers' :: Maybe Text -> Maybe Natural -> GetCrawlers

-- | A continuation token, if this is a continuation request.
[$sel:nextToken:GetCrawlers'] :: GetCrawlers -> Maybe Text

-- | The number of crawlers to return on each call.
[$sel:maxResults:GetCrawlers'] :: GetCrawlers -> Maybe Natural

-- | Create a value of <a>GetCrawlers</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetCrawlers'</a>, <a>getCrawlers_nextToken</a> - A
--   continuation token, if this is a continuation request.
--   
--   <a>$sel:maxResults:GetCrawlers'</a>, <a>getCrawlers_maxResults</a> -
--   The number of crawlers to return on each call.
newGetCrawlers :: GetCrawlers

-- | A continuation token, if this is a continuation request.
getCrawlers_nextToken :: Lens' GetCrawlers (Maybe Text)

-- | The number of crawlers to return on each call.
getCrawlers_maxResults :: Lens' GetCrawlers (Maybe Natural)

-- | <i>See:</i> <a>newGetCrawlersResponse</a> smart constructor.
data GetCrawlersResponse
GetCrawlersResponse' :: Maybe Text -> Maybe [Crawler] -> Int -> GetCrawlersResponse

-- | A continuation token, if the returned list has not reached the end of
--   those defined in this customer account.
[$sel:nextToken:GetCrawlersResponse'] :: GetCrawlersResponse -> Maybe Text

-- | A list of crawler metadata.
[$sel:crawlers:GetCrawlersResponse'] :: GetCrawlersResponse -> Maybe [Crawler]

-- | The response's http status code.
[$sel:httpStatus:GetCrawlersResponse'] :: GetCrawlersResponse -> Int

-- | Create a value of <a>GetCrawlersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetCrawlers'</a>,
--   <a>getCrawlersResponse_nextToken</a> - A continuation token, if the
--   returned list has not reached the end of those defined in this
--   customer account.
--   
--   <a>$sel:crawlers:GetCrawlersResponse'</a>,
--   <a>getCrawlersResponse_crawlers</a> - A list of crawler metadata.
--   
--   <a>$sel:httpStatus:GetCrawlersResponse'</a>,
--   <a>getCrawlersResponse_httpStatus</a> - The response's http status
--   code.
newGetCrawlersResponse :: Int -> GetCrawlersResponse

-- | A continuation token, if the returned list has not reached the end of
--   those defined in this customer account.
getCrawlersResponse_nextToken :: Lens' GetCrawlersResponse (Maybe Text)

-- | A list of crawler metadata.
getCrawlersResponse_crawlers :: Lens' GetCrawlersResponse (Maybe [Crawler])

-- | The response's http status code.
getCrawlersResponse_httpStatus :: Lens' GetCrawlersResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetCrawlers.GetCrawlers
instance GHC.Show.Show Network.AWS.Glue.GetCrawlers.GetCrawlers
instance GHC.Read.Read Network.AWS.Glue.GetCrawlers.GetCrawlers
instance GHC.Classes.Eq Network.AWS.Glue.GetCrawlers.GetCrawlers
instance GHC.Generics.Generic Network.AWS.Glue.GetCrawlers.GetCrawlersResponse
instance GHC.Show.Show Network.AWS.Glue.GetCrawlers.GetCrawlersResponse
instance GHC.Read.Read Network.AWS.Glue.GetCrawlers.GetCrawlersResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetCrawlers.GetCrawlersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetCrawlers.GetCrawlers
instance Control.DeepSeq.NFData Network.AWS.Glue.GetCrawlers.GetCrawlersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Glue.GetCrawlers.GetCrawlers
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetCrawlers.GetCrawlers
instance Control.DeepSeq.NFData Network.AWS.Glue.GetCrawlers.GetCrawlers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetCrawlers.GetCrawlers
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetCrawlers.GetCrawlers
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetCrawlers.GetCrawlers
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetCrawlers.GetCrawlers


-- | Retrieves metrics about specified crawlers.
--   
--   This operation returns paginated results.
module Network.AWS.Glue.GetCrawlerMetrics

-- | <i>See:</i> <a>newGetCrawlerMetrics</a> smart constructor.
data GetCrawlerMetrics
GetCrawlerMetrics' :: Maybe Text -> Maybe Natural -> Maybe [Text] -> GetCrawlerMetrics

-- | A continuation token, if this is a continuation call.
[$sel:nextToken:GetCrawlerMetrics'] :: GetCrawlerMetrics -> Maybe Text

-- | The maximum size of a list to return.
[$sel:maxResults:GetCrawlerMetrics'] :: GetCrawlerMetrics -> Maybe Natural

-- | A list of the names of crawlers about which to retrieve metrics.
[$sel:crawlerNameList:GetCrawlerMetrics'] :: GetCrawlerMetrics -> Maybe [Text]

-- | Create a value of <a>GetCrawlerMetrics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetCrawlerMetrics'</a>,
--   <a>getCrawlerMetrics_nextToken</a> - A continuation token, if this is
--   a continuation call.
--   
--   <a>$sel:maxResults:GetCrawlerMetrics'</a>,
--   <a>getCrawlerMetrics_maxResults</a> - The maximum size of a list to
--   return.
--   
--   <a>$sel:crawlerNameList:GetCrawlerMetrics'</a>,
--   <a>getCrawlerMetrics_crawlerNameList</a> - A list of the names of
--   crawlers about which to retrieve metrics.
newGetCrawlerMetrics :: GetCrawlerMetrics

-- | A continuation token, if this is a continuation call.
getCrawlerMetrics_nextToken :: Lens' GetCrawlerMetrics (Maybe Text)

-- | The maximum size of a list to return.
getCrawlerMetrics_maxResults :: Lens' GetCrawlerMetrics (Maybe Natural)

-- | A list of the names of crawlers about which to retrieve metrics.
getCrawlerMetrics_crawlerNameList :: Lens' GetCrawlerMetrics (Maybe [Text])

-- | <i>See:</i> <a>newGetCrawlerMetricsResponse</a> smart constructor.
data GetCrawlerMetricsResponse
GetCrawlerMetricsResponse' :: Maybe [CrawlerMetrics] -> Maybe Text -> Int -> GetCrawlerMetricsResponse

-- | A list of metrics for the specified crawler.
[$sel:crawlerMetricsList:GetCrawlerMetricsResponse'] :: GetCrawlerMetricsResponse -> Maybe [CrawlerMetrics]

-- | A continuation token, if the returned list does not contain the last
--   metric available.
[$sel:nextToken:GetCrawlerMetricsResponse'] :: GetCrawlerMetricsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetCrawlerMetricsResponse'] :: GetCrawlerMetricsResponse -> Int

-- | Create a value of <a>GetCrawlerMetricsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawlerMetricsList:GetCrawlerMetricsResponse'</a>,
--   <a>getCrawlerMetricsResponse_crawlerMetricsList</a> - A list of
--   metrics for the specified crawler.
--   
--   <a>$sel:nextToken:GetCrawlerMetrics'</a>,
--   <a>getCrawlerMetricsResponse_nextToken</a> - A continuation token, if
--   the returned list does not contain the last metric available.
--   
--   <a>$sel:httpStatus:GetCrawlerMetricsResponse'</a>,
--   <a>getCrawlerMetricsResponse_httpStatus</a> - The response's http
--   status code.
newGetCrawlerMetricsResponse :: Int -> GetCrawlerMetricsResponse

-- | A list of metrics for the specified crawler.
getCrawlerMetricsResponse_crawlerMetricsList :: Lens' GetCrawlerMetricsResponse (Maybe [CrawlerMetrics])

-- | A continuation token, if the returned list does not contain the last
--   metric available.
getCrawlerMetricsResponse_nextToken :: Lens' GetCrawlerMetricsResponse (Maybe Text)

-- | The response's http status code.
getCrawlerMetricsResponse_httpStatus :: Lens' GetCrawlerMetricsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetCrawlerMetrics.GetCrawlerMetrics
instance GHC.Show.Show Network.AWS.Glue.GetCrawlerMetrics.GetCrawlerMetrics
instance GHC.Read.Read Network.AWS.Glue.GetCrawlerMetrics.GetCrawlerMetrics
instance GHC.Classes.Eq Network.AWS.Glue.GetCrawlerMetrics.GetCrawlerMetrics
instance GHC.Generics.Generic Network.AWS.Glue.GetCrawlerMetrics.GetCrawlerMetricsResponse
instance GHC.Show.Show Network.AWS.Glue.GetCrawlerMetrics.GetCrawlerMetricsResponse
instance GHC.Read.Read Network.AWS.Glue.GetCrawlerMetrics.GetCrawlerMetricsResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetCrawlerMetrics.GetCrawlerMetricsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetCrawlerMetrics.GetCrawlerMetrics
instance Control.DeepSeq.NFData Network.AWS.Glue.GetCrawlerMetrics.GetCrawlerMetricsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Glue.GetCrawlerMetrics.GetCrawlerMetrics
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetCrawlerMetrics.GetCrawlerMetrics
instance Control.DeepSeq.NFData Network.AWS.Glue.GetCrawlerMetrics.GetCrawlerMetrics
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetCrawlerMetrics.GetCrawlerMetrics
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetCrawlerMetrics.GetCrawlerMetrics
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetCrawlerMetrics.GetCrawlerMetrics
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetCrawlerMetrics.GetCrawlerMetrics


-- | Retrieves metadata for a specified crawler.
module Network.AWS.Glue.GetCrawler

-- | <i>See:</i> <a>newGetCrawler</a> smart constructor.
data GetCrawler
GetCrawler' :: Text -> GetCrawler

-- | The name of the crawler to retrieve metadata for.
[$sel:name:GetCrawler'] :: GetCrawler -> Text

-- | Create a value of <a>GetCrawler</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetCrawler'</a>, <a>getCrawler_name</a> - The name of the
--   crawler to retrieve metadata for.
newGetCrawler :: Text -> GetCrawler

-- | The name of the crawler to retrieve metadata for.
getCrawler_name :: Lens' GetCrawler Text

-- | <i>See:</i> <a>newGetCrawlerResponse</a> smart constructor.
data GetCrawlerResponse
GetCrawlerResponse' :: Maybe Crawler -> Int -> GetCrawlerResponse

-- | The metadata for the specified crawler.
[$sel:crawler:GetCrawlerResponse'] :: GetCrawlerResponse -> Maybe Crawler

-- | The response's http status code.
[$sel:httpStatus:GetCrawlerResponse'] :: GetCrawlerResponse -> Int

-- | Create a value of <a>GetCrawlerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawler:GetCrawlerResponse'</a>,
--   <a>getCrawlerResponse_crawler</a> - The metadata for the specified
--   crawler.
--   
--   <a>$sel:httpStatus:GetCrawlerResponse'</a>,
--   <a>getCrawlerResponse_httpStatus</a> - The response's http status
--   code.
newGetCrawlerResponse :: Int -> GetCrawlerResponse

-- | The metadata for the specified crawler.
getCrawlerResponse_crawler :: Lens' GetCrawlerResponse (Maybe Crawler)

-- | The response's http status code.
getCrawlerResponse_httpStatus :: Lens' GetCrawlerResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetCrawler.GetCrawler
instance GHC.Show.Show Network.AWS.Glue.GetCrawler.GetCrawler
instance GHC.Read.Read Network.AWS.Glue.GetCrawler.GetCrawler
instance GHC.Classes.Eq Network.AWS.Glue.GetCrawler.GetCrawler
instance GHC.Generics.Generic Network.AWS.Glue.GetCrawler.GetCrawlerResponse
instance GHC.Show.Show Network.AWS.Glue.GetCrawler.GetCrawlerResponse
instance GHC.Read.Read Network.AWS.Glue.GetCrawler.GetCrawlerResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetCrawler.GetCrawlerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetCrawler.GetCrawler
instance Control.DeepSeq.NFData Network.AWS.Glue.GetCrawler.GetCrawlerResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetCrawler.GetCrawler
instance Control.DeepSeq.NFData Network.AWS.Glue.GetCrawler.GetCrawler
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetCrawler.GetCrawler
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetCrawler.GetCrawler
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetCrawler.GetCrawler
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetCrawler.GetCrawler


-- | Retrieves a list of connection definitions from the Data Catalog.
--   
--   This operation returns paginated results.
module Network.AWS.Glue.GetConnections

-- | <i>See:</i> <a>newGetConnections</a> smart constructor.
data GetConnections
GetConnections' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe GetConnectionsFilter -> Maybe Natural -> GetConnections

-- | The ID of the Data Catalog in which the connections reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
[$sel:catalogId:GetConnections'] :: GetConnections -> Maybe Text

-- | A continuation token, if this is a continuation call.
[$sel:nextToken:GetConnections'] :: GetConnections -> Maybe Text

-- | Allows you to retrieve the connection metadata without returning the
--   password. For instance, the AWS Glue console uses this flag to
--   retrieve the connection, and does not display the password. Set this
--   parameter when the caller might not have permission to use the KMS key
--   to decrypt the password, but it does have permission to access the
--   rest of the connection properties.
[$sel:hidePassword:GetConnections'] :: GetConnections -> Maybe Bool

-- | A filter that controls which connections are returned.
[$sel:filter':GetConnections'] :: GetConnections -> Maybe GetConnectionsFilter

-- | The maximum number of connections to return in one response.
[$sel:maxResults:GetConnections'] :: GetConnections -> Maybe Natural

-- | Create a value of <a>GetConnections</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetConnections'</a>, <a>getConnections_catalogId</a>
--   - The ID of the Data Catalog in which the connections reside. If none
--   is provided, the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:nextToken:GetConnections'</a>, <a>getConnections_nextToken</a>
--   - A continuation token, if this is a continuation call.
--   
--   <a>$sel:hidePassword:GetConnections'</a>,
--   <a>getConnections_hidePassword</a> - Allows you to retrieve the
--   connection metadata without returning the password. For instance, the
--   AWS Glue console uses this flag to retrieve the connection, and does
--   not display the password. Set this parameter when the caller might not
--   have permission to use the KMS key to decrypt the password, but it
--   does have permission to access the rest of the connection properties.
--   
--   <a>$sel:filter':GetConnections'</a>, <a>getConnections_filter</a> - A
--   filter that controls which connections are returned.
--   
--   <a>$sel:maxResults:GetConnections'</a>,
--   <a>getConnections_maxResults</a> - The maximum number of connections
--   to return in one response.
newGetConnections :: GetConnections

-- | The ID of the Data Catalog in which the connections reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
getConnections_catalogId :: Lens' GetConnections (Maybe Text)

-- | A continuation token, if this is a continuation call.
getConnections_nextToken :: Lens' GetConnections (Maybe Text)

-- | Allows you to retrieve the connection metadata without returning the
--   password. For instance, the AWS Glue console uses this flag to
--   retrieve the connection, and does not display the password. Set this
--   parameter when the caller might not have permission to use the KMS key
--   to decrypt the password, but it does have permission to access the
--   rest of the connection properties.
getConnections_hidePassword :: Lens' GetConnections (Maybe Bool)

-- | A filter that controls which connections are returned.
getConnections_filter :: Lens' GetConnections (Maybe GetConnectionsFilter)

-- | The maximum number of connections to return in one response.
getConnections_maxResults :: Lens' GetConnections (Maybe Natural)

-- | <i>See:</i> <a>newGetConnectionsResponse</a> smart constructor.
data GetConnectionsResponse
GetConnectionsResponse' :: Maybe Text -> Maybe [Connection] -> Int -> GetConnectionsResponse

-- | A continuation token, if the list of connections returned does not
--   include the last of the filtered connections.
[$sel:nextToken:GetConnectionsResponse'] :: GetConnectionsResponse -> Maybe Text

-- | A list of requested connection definitions.
[$sel:connectionList:GetConnectionsResponse'] :: GetConnectionsResponse -> Maybe [Connection]

-- | The response's http status code.
[$sel:httpStatus:GetConnectionsResponse'] :: GetConnectionsResponse -> Int

-- | Create a value of <a>GetConnectionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetConnections'</a>,
--   <a>getConnectionsResponse_nextToken</a> - A continuation token, if the
--   list of connections returned does not include the last of the filtered
--   connections.
--   
--   <a>$sel:connectionList:GetConnectionsResponse'</a>,
--   <a>getConnectionsResponse_connectionList</a> - A list of requested
--   connection definitions.
--   
--   <a>$sel:httpStatus:GetConnectionsResponse'</a>,
--   <a>getConnectionsResponse_httpStatus</a> - The response's http status
--   code.
newGetConnectionsResponse :: Int -> GetConnectionsResponse

-- | A continuation token, if the list of connections returned does not
--   include the last of the filtered connections.
getConnectionsResponse_nextToken :: Lens' GetConnectionsResponse (Maybe Text)

-- | A list of requested connection definitions.
getConnectionsResponse_connectionList :: Lens' GetConnectionsResponse (Maybe [Connection])

-- | The response's http status code.
getConnectionsResponse_httpStatus :: Lens' GetConnectionsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetConnections.GetConnections
instance GHC.Show.Show Network.AWS.Glue.GetConnections.GetConnections
instance GHC.Read.Read Network.AWS.Glue.GetConnections.GetConnections
instance GHC.Classes.Eq Network.AWS.Glue.GetConnections.GetConnections
instance GHC.Generics.Generic Network.AWS.Glue.GetConnections.GetConnectionsResponse
instance GHC.Show.Show Network.AWS.Glue.GetConnections.GetConnectionsResponse
instance GHC.Read.Read Network.AWS.Glue.GetConnections.GetConnectionsResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetConnections.GetConnectionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetConnections.GetConnections
instance Control.DeepSeq.NFData Network.AWS.Glue.GetConnections.GetConnectionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Glue.GetConnections.GetConnections
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetConnections.GetConnections
instance Control.DeepSeq.NFData Network.AWS.Glue.GetConnections.GetConnections
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetConnections.GetConnections
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetConnections.GetConnections
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetConnections.GetConnections
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetConnections.GetConnections


-- | Retrieves a connection definition from the Data Catalog.
module Network.AWS.Glue.GetConnection

-- | <i>See:</i> <a>newGetConnection</a> smart constructor.
data GetConnection
GetConnection' :: Maybe Text -> Maybe Bool -> Text -> GetConnection

-- | The ID of the Data Catalog in which the connection resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
[$sel:catalogId:GetConnection'] :: GetConnection -> Maybe Text

-- | Allows you to retrieve the connection metadata without returning the
--   password. For instance, the AWS Glue console uses this flag to
--   retrieve the connection, and does not display the password. Set this
--   parameter when the caller might not have permission to use the KMS key
--   to decrypt the password, but it does have permission to access the
--   rest of the connection properties.
[$sel:hidePassword:GetConnection'] :: GetConnection -> Maybe Bool

-- | The name of the connection definition to retrieve.
[$sel:name:GetConnection'] :: GetConnection -> Text

-- | Create a value of <a>GetConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetConnection'</a>, <a>getConnection_catalogId</a> -
--   The ID of the Data Catalog in which the connection resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:hidePassword:GetConnection'</a>,
--   <a>getConnection_hidePassword</a> - Allows you to retrieve the
--   connection metadata without returning the password. For instance, the
--   AWS Glue console uses this flag to retrieve the connection, and does
--   not display the password. Set this parameter when the caller might not
--   have permission to use the KMS key to decrypt the password, but it
--   does have permission to access the rest of the connection properties.
--   
--   <a>$sel:name:GetConnection'</a>, <a>getConnection_name</a> - The name
--   of the connection definition to retrieve.
newGetConnection :: Text -> GetConnection

-- | The ID of the Data Catalog in which the connection resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
getConnection_catalogId :: Lens' GetConnection (Maybe Text)

-- | Allows you to retrieve the connection metadata without returning the
--   password. For instance, the AWS Glue console uses this flag to
--   retrieve the connection, and does not display the password. Set this
--   parameter when the caller might not have permission to use the KMS key
--   to decrypt the password, but it does have permission to access the
--   rest of the connection properties.
getConnection_hidePassword :: Lens' GetConnection (Maybe Bool)

-- | The name of the connection definition to retrieve.
getConnection_name :: Lens' GetConnection Text

-- | <i>See:</i> <a>newGetConnectionResponse</a> smart constructor.
data GetConnectionResponse
GetConnectionResponse' :: Maybe Connection -> Int -> GetConnectionResponse

-- | The requested connection definition.
[$sel:connection:GetConnectionResponse'] :: GetConnectionResponse -> Maybe Connection

-- | The response's http status code.
[$sel:httpStatus:GetConnectionResponse'] :: GetConnectionResponse -> Int

-- | Create a value of <a>GetConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connection:GetConnectionResponse'</a>,
--   <a>getConnectionResponse_connection</a> - The requested connection
--   definition.
--   
--   <a>$sel:httpStatus:GetConnectionResponse'</a>,
--   <a>getConnectionResponse_httpStatus</a> - The response's http status
--   code.
newGetConnectionResponse :: Int -> GetConnectionResponse

-- | The requested connection definition.
getConnectionResponse_connection :: Lens' GetConnectionResponse (Maybe Connection)

-- | The response's http status code.
getConnectionResponse_httpStatus :: Lens' GetConnectionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetConnection.GetConnection
instance GHC.Show.Show Network.AWS.Glue.GetConnection.GetConnection
instance GHC.Read.Read Network.AWS.Glue.GetConnection.GetConnection
instance GHC.Classes.Eq Network.AWS.Glue.GetConnection.GetConnection
instance GHC.Generics.Generic Network.AWS.Glue.GetConnection.GetConnectionResponse
instance GHC.Show.Show Network.AWS.Glue.GetConnection.GetConnectionResponse
instance GHC.Read.Read Network.AWS.Glue.GetConnection.GetConnectionResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetConnection.GetConnectionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetConnection.GetConnection
instance Control.DeepSeq.NFData Network.AWS.Glue.GetConnection.GetConnectionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetConnection.GetConnection
instance Control.DeepSeq.NFData Network.AWS.Glue.GetConnection.GetConnection
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetConnection.GetConnection
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetConnection.GetConnection
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetConnection.GetConnection
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetConnection.GetConnection


-- | Retrieves table statistics of columns.
--   
--   The Identity and Access Management (IAM) permission required for this
--   operation is <tt>GetTable</tt>.
module Network.AWS.Glue.GetColumnStatisticsForTable

-- | <i>See:</i> <a>newGetColumnStatisticsForTable</a> smart constructor.
data GetColumnStatisticsForTable
GetColumnStatisticsForTable' :: Maybe Text -> Text -> Text -> [Text] -> GetColumnStatisticsForTable

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
[$sel:catalogId:GetColumnStatisticsForTable'] :: GetColumnStatisticsForTable -> Maybe Text

-- | The name of the catalog database where the partitions reside.
[$sel:databaseName:GetColumnStatisticsForTable'] :: GetColumnStatisticsForTable -> Text

-- | The name of the partitions' table.
[$sel:tableName:GetColumnStatisticsForTable'] :: GetColumnStatisticsForTable -> Text

-- | A list of the column names.
[$sel:columnNames:GetColumnStatisticsForTable'] :: GetColumnStatisticsForTable -> [Text]

-- | Create a value of <a>GetColumnStatisticsForTable</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetColumnStatisticsForTable'</a>,
--   <a>getColumnStatisticsForTable_catalogId</a> - The ID of the Data
--   Catalog where the partitions in question reside. If none is supplied,
--   the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:GetColumnStatisticsForTable'</a>,
--   <a>getColumnStatisticsForTable_databaseName</a> - The name of the
--   catalog database where the partitions reside.
--   
--   <a>$sel:tableName:GetColumnStatisticsForTable'</a>,
--   <a>getColumnStatisticsForTable_tableName</a> - The name of the
--   partitions' table.
--   
--   <a>$sel:columnNames:GetColumnStatisticsForTable'</a>,
--   <a>getColumnStatisticsForTable_columnNames</a> - A list of the column
--   names.
newGetColumnStatisticsForTable :: Text -> Text -> GetColumnStatisticsForTable

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
getColumnStatisticsForTable_catalogId :: Lens' GetColumnStatisticsForTable (Maybe Text)

-- | The name of the catalog database where the partitions reside.
getColumnStatisticsForTable_databaseName :: Lens' GetColumnStatisticsForTable Text

-- | The name of the partitions' table.
getColumnStatisticsForTable_tableName :: Lens' GetColumnStatisticsForTable Text

-- | A list of the column names.
getColumnStatisticsForTable_columnNames :: Lens' GetColumnStatisticsForTable [Text]

-- | <i>See:</i> <a>newGetColumnStatisticsForTableResponse</a> smart
--   constructor.
data GetColumnStatisticsForTableResponse
GetColumnStatisticsForTableResponse' :: Maybe [ColumnError] -> Maybe [ColumnStatistics] -> Int -> GetColumnStatisticsForTableResponse

-- | List of ColumnStatistics that failed to be retrieved.
[$sel:errors:GetColumnStatisticsForTableResponse'] :: GetColumnStatisticsForTableResponse -> Maybe [ColumnError]

-- | List of ColumnStatistics that failed to be retrieved.
[$sel:columnStatisticsList:GetColumnStatisticsForTableResponse'] :: GetColumnStatisticsForTableResponse -> Maybe [ColumnStatistics]

-- | The response's http status code.
[$sel:httpStatus:GetColumnStatisticsForTableResponse'] :: GetColumnStatisticsForTableResponse -> Int

-- | Create a value of <a>GetColumnStatisticsForTableResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:GetColumnStatisticsForTableResponse'</a>,
--   <a>getColumnStatisticsForTableResponse_errors</a> - List of
--   ColumnStatistics that failed to be retrieved.
--   
--   <a>$sel:columnStatisticsList:GetColumnStatisticsForTableResponse'</a>,
--   <a>getColumnStatisticsForTableResponse_columnStatisticsList</a> - List
--   of ColumnStatistics that failed to be retrieved.
--   
--   <a>$sel:httpStatus:GetColumnStatisticsForTableResponse'</a>,
--   <a>getColumnStatisticsForTableResponse_httpStatus</a> - The response's
--   http status code.
newGetColumnStatisticsForTableResponse :: Int -> GetColumnStatisticsForTableResponse

-- | List of ColumnStatistics that failed to be retrieved.
getColumnStatisticsForTableResponse_errors :: Lens' GetColumnStatisticsForTableResponse (Maybe [ColumnError])

-- | List of ColumnStatistics that failed to be retrieved.
getColumnStatisticsForTableResponse_columnStatisticsList :: Lens' GetColumnStatisticsForTableResponse (Maybe [ColumnStatistics])

-- | The response's http status code.
getColumnStatisticsForTableResponse_httpStatus :: Lens' GetColumnStatisticsForTableResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetColumnStatisticsForTable.GetColumnStatisticsForTable
instance GHC.Show.Show Network.AWS.Glue.GetColumnStatisticsForTable.GetColumnStatisticsForTable
instance GHC.Read.Read Network.AWS.Glue.GetColumnStatisticsForTable.GetColumnStatisticsForTable
instance GHC.Classes.Eq Network.AWS.Glue.GetColumnStatisticsForTable.GetColumnStatisticsForTable
instance GHC.Generics.Generic Network.AWS.Glue.GetColumnStatisticsForTable.GetColumnStatisticsForTableResponse
instance GHC.Show.Show Network.AWS.Glue.GetColumnStatisticsForTable.GetColumnStatisticsForTableResponse
instance GHC.Read.Read Network.AWS.Glue.GetColumnStatisticsForTable.GetColumnStatisticsForTableResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetColumnStatisticsForTable.GetColumnStatisticsForTableResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetColumnStatisticsForTable.GetColumnStatisticsForTable
instance Control.DeepSeq.NFData Network.AWS.Glue.GetColumnStatisticsForTable.GetColumnStatisticsForTableResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetColumnStatisticsForTable.GetColumnStatisticsForTable
instance Control.DeepSeq.NFData Network.AWS.Glue.GetColumnStatisticsForTable.GetColumnStatisticsForTable
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetColumnStatisticsForTable.GetColumnStatisticsForTable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetColumnStatisticsForTable.GetColumnStatisticsForTable
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetColumnStatisticsForTable.GetColumnStatisticsForTable
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetColumnStatisticsForTable.GetColumnStatisticsForTable


-- | Retrieves partition statistics of columns.
--   
--   The Identity and Access Management (IAM) permission required for this
--   operation is <tt>GetPartition</tt>.
module Network.AWS.Glue.GetColumnStatisticsForPartition

-- | <i>See:</i> <a>newGetColumnStatisticsForPartition</a> smart
--   constructor.
data GetColumnStatisticsForPartition
GetColumnStatisticsForPartition' :: Maybe Text -> Text -> Text -> [Text] -> [Text] -> GetColumnStatisticsForPartition

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
[$sel:catalogId:GetColumnStatisticsForPartition'] :: GetColumnStatisticsForPartition -> Maybe Text

-- | The name of the catalog database where the partitions reside.
[$sel:databaseName:GetColumnStatisticsForPartition'] :: GetColumnStatisticsForPartition -> Text

-- | The name of the partitions' table.
[$sel:tableName:GetColumnStatisticsForPartition'] :: GetColumnStatisticsForPartition -> Text

-- | A list of partition values identifying the partition.
[$sel:partitionValues:GetColumnStatisticsForPartition'] :: GetColumnStatisticsForPartition -> [Text]

-- | A list of the column names.
[$sel:columnNames:GetColumnStatisticsForPartition'] :: GetColumnStatisticsForPartition -> [Text]

-- | Create a value of <a>GetColumnStatisticsForPartition</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetColumnStatisticsForPartition'</a>,
--   <a>getColumnStatisticsForPartition_catalogId</a> - The ID of the Data
--   Catalog where the partitions in question reside. If none is supplied,
--   the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:GetColumnStatisticsForPartition'</a>,
--   <a>getColumnStatisticsForPartition_databaseName</a> - The name of the
--   catalog database where the partitions reside.
--   
--   <a>$sel:tableName:GetColumnStatisticsForPartition'</a>,
--   <a>getColumnStatisticsForPartition_tableName</a> - The name of the
--   partitions' table.
--   
--   <a>$sel:partitionValues:GetColumnStatisticsForPartition'</a>,
--   <a>getColumnStatisticsForPartition_partitionValues</a> - A list of
--   partition values identifying the partition.
--   
--   <a>$sel:columnNames:GetColumnStatisticsForPartition'</a>,
--   <a>getColumnStatisticsForPartition_columnNames</a> - A list of the
--   column names.
newGetColumnStatisticsForPartition :: Text -> Text -> GetColumnStatisticsForPartition

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
getColumnStatisticsForPartition_catalogId :: Lens' GetColumnStatisticsForPartition (Maybe Text)

-- | The name of the catalog database where the partitions reside.
getColumnStatisticsForPartition_databaseName :: Lens' GetColumnStatisticsForPartition Text

-- | The name of the partitions' table.
getColumnStatisticsForPartition_tableName :: Lens' GetColumnStatisticsForPartition Text

-- | A list of partition values identifying the partition.
getColumnStatisticsForPartition_partitionValues :: Lens' GetColumnStatisticsForPartition [Text]

-- | A list of the column names.
getColumnStatisticsForPartition_columnNames :: Lens' GetColumnStatisticsForPartition [Text]

-- | <i>See:</i> <a>newGetColumnStatisticsForPartitionResponse</a> smart
--   constructor.
data GetColumnStatisticsForPartitionResponse
GetColumnStatisticsForPartitionResponse' :: Maybe [ColumnError] -> Maybe [ColumnStatistics] -> Int -> GetColumnStatisticsForPartitionResponse

-- | Error occurred during retrieving column statistics data.
[$sel:errors:GetColumnStatisticsForPartitionResponse'] :: GetColumnStatisticsForPartitionResponse -> Maybe [ColumnError]

-- | List of ColumnStatistics that failed to be retrieved.
[$sel:columnStatisticsList:GetColumnStatisticsForPartitionResponse'] :: GetColumnStatisticsForPartitionResponse -> Maybe [ColumnStatistics]

-- | The response's http status code.
[$sel:httpStatus:GetColumnStatisticsForPartitionResponse'] :: GetColumnStatisticsForPartitionResponse -> Int

-- | Create a value of <a>GetColumnStatisticsForPartitionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:GetColumnStatisticsForPartitionResponse'</a>,
--   <a>getColumnStatisticsForPartitionResponse_errors</a> - Error occurred
--   during retrieving column statistics data.
--   
--   
--   <a>$sel:columnStatisticsList:GetColumnStatisticsForPartitionResponse'</a>,
--   <a>getColumnStatisticsForPartitionResponse_columnStatisticsList</a> -
--   List of ColumnStatistics that failed to be retrieved.
--   
--   <a>$sel:httpStatus:GetColumnStatisticsForPartitionResponse'</a>,
--   <a>getColumnStatisticsForPartitionResponse_httpStatus</a> - The
--   response's http status code.
newGetColumnStatisticsForPartitionResponse :: Int -> GetColumnStatisticsForPartitionResponse

-- | Error occurred during retrieving column statistics data.
getColumnStatisticsForPartitionResponse_errors :: Lens' GetColumnStatisticsForPartitionResponse (Maybe [ColumnError])

-- | List of ColumnStatistics that failed to be retrieved.
getColumnStatisticsForPartitionResponse_columnStatisticsList :: Lens' GetColumnStatisticsForPartitionResponse (Maybe [ColumnStatistics])

-- | The response's http status code.
getColumnStatisticsForPartitionResponse_httpStatus :: Lens' GetColumnStatisticsForPartitionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetColumnStatisticsForPartition.GetColumnStatisticsForPartition
instance GHC.Show.Show Network.AWS.Glue.GetColumnStatisticsForPartition.GetColumnStatisticsForPartition
instance GHC.Read.Read Network.AWS.Glue.GetColumnStatisticsForPartition.GetColumnStatisticsForPartition
instance GHC.Classes.Eq Network.AWS.Glue.GetColumnStatisticsForPartition.GetColumnStatisticsForPartition
instance GHC.Generics.Generic Network.AWS.Glue.GetColumnStatisticsForPartition.GetColumnStatisticsForPartitionResponse
instance GHC.Show.Show Network.AWS.Glue.GetColumnStatisticsForPartition.GetColumnStatisticsForPartitionResponse
instance GHC.Read.Read Network.AWS.Glue.GetColumnStatisticsForPartition.GetColumnStatisticsForPartitionResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetColumnStatisticsForPartition.GetColumnStatisticsForPartitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetColumnStatisticsForPartition.GetColumnStatisticsForPartition
instance Control.DeepSeq.NFData Network.AWS.Glue.GetColumnStatisticsForPartition.GetColumnStatisticsForPartitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetColumnStatisticsForPartition.GetColumnStatisticsForPartition
instance Control.DeepSeq.NFData Network.AWS.Glue.GetColumnStatisticsForPartition.GetColumnStatisticsForPartition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetColumnStatisticsForPartition.GetColumnStatisticsForPartition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetColumnStatisticsForPartition.GetColumnStatisticsForPartition
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetColumnStatisticsForPartition.GetColumnStatisticsForPartition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetColumnStatisticsForPartition.GetColumnStatisticsForPartition


-- | Lists all classifier objects in the Data Catalog.
--   
--   This operation returns paginated results.
module Network.AWS.Glue.GetClassifiers

-- | <i>See:</i> <a>newGetClassifiers</a> smart constructor.
data GetClassifiers
GetClassifiers' :: Maybe Text -> Maybe Natural -> GetClassifiers

-- | An optional continuation token.
[$sel:nextToken:GetClassifiers'] :: GetClassifiers -> Maybe Text

-- | The size of the list to return (optional).
[$sel:maxResults:GetClassifiers'] :: GetClassifiers -> Maybe Natural

-- | Create a value of <a>GetClassifiers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetClassifiers'</a>, <a>getClassifiers_nextToken</a>
--   - An optional continuation token.
--   
--   <a>$sel:maxResults:GetClassifiers'</a>,
--   <a>getClassifiers_maxResults</a> - The size of the list to return
--   (optional).
newGetClassifiers :: GetClassifiers

-- | An optional continuation token.
getClassifiers_nextToken :: Lens' GetClassifiers (Maybe Text)

-- | The size of the list to return (optional).
getClassifiers_maxResults :: Lens' GetClassifiers (Maybe Natural)

-- | <i>See:</i> <a>newGetClassifiersResponse</a> smart constructor.
data GetClassifiersResponse
GetClassifiersResponse' :: Maybe Text -> Maybe [Classifier] -> Int -> GetClassifiersResponse

-- | A continuation token.
[$sel:nextToken:GetClassifiersResponse'] :: GetClassifiersResponse -> Maybe Text

-- | The requested list of classifier objects.
[$sel:classifiers:GetClassifiersResponse'] :: GetClassifiersResponse -> Maybe [Classifier]

-- | The response's http status code.
[$sel:httpStatus:GetClassifiersResponse'] :: GetClassifiersResponse -> Int

-- | Create a value of <a>GetClassifiersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetClassifiers'</a>,
--   <a>getClassifiersResponse_nextToken</a> - A continuation token.
--   
--   <a>$sel:classifiers:GetClassifiersResponse'</a>,
--   <a>getClassifiersResponse_classifiers</a> - The requested list of
--   classifier objects.
--   
--   <a>$sel:httpStatus:GetClassifiersResponse'</a>,
--   <a>getClassifiersResponse_httpStatus</a> - The response's http status
--   code.
newGetClassifiersResponse :: Int -> GetClassifiersResponse

-- | A continuation token.
getClassifiersResponse_nextToken :: Lens' GetClassifiersResponse (Maybe Text)

-- | The requested list of classifier objects.
getClassifiersResponse_classifiers :: Lens' GetClassifiersResponse (Maybe [Classifier])

-- | The response's http status code.
getClassifiersResponse_httpStatus :: Lens' GetClassifiersResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetClassifiers.GetClassifiers
instance GHC.Show.Show Network.AWS.Glue.GetClassifiers.GetClassifiers
instance GHC.Read.Read Network.AWS.Glue.GetClassifiers.GetClassifiers
instance GHC.Classes.Eq Network.AWS.Glue.GetClassifiers.GetClassifiers
instance GHC.Generics.Generic Network.AWS.Glue.GetClassifiers.GetClassifiersResponse
instance GHC.Show.Show Network.AWS.Glue.GetClassifiers.GetClassifiersResponse
instance GHC.Read.Read Network.AWS.Glue.GetClassifiers.GetClassifiersResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetClassifiers.GetClassifiersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetClassifiers.GetClassifiers
instance Control.DeepSeq.NFData Network.AWS.Glue.GetClassifiers.GetClassifiersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Glue.GetClassifiers.GetClassifiers
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetClassifiers.GetClassifiers
instance Control.DeepSeq.NFData Network.AWS.Glue.GetClassifiers.GetClassifiers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetClassifiers.GetClassifiers
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetClassifiers.GetClassifiers
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetClassifiers.GetClassifiers
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetClassifiers.GetClassifiers


-- | Retrieve a classifier by name.
module Network.AWS.Glue.GetClassifier

-- | <i>See:</i> <a>newGetClassifier</a> smart constructor.
data GetClassifier
GetClassifier' :: Text -> GetClassifier

-- | Name of the classifier to retrieve.
[$sel:name:GetClassifier'] :: GetClassifier -> Text

-- | Create a value of <a>GetClassifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetClassifier'</a>, <a>getClassifier_name</a> - Name of
--   the classifier to retrieve.
newGetClassifier :: Text -> GetClassifier

-- | Name of the classifier to retrieve.
getClassifier_name :: Lens' GetClassifier Text

-- | <i>See:</i> <a>newGetClassifierResponse</a> smart constructor.
data GetClassifierResponse
GetClassifierResponse' :: Maybe Classifier -> Int -> GetClassifierResponse

-- | The requested classifier.
[$sel:classifier:GetClassifierResponse'] :: GetClassifierResponse -> Maybe Classifier

-- | The response's http status code.
[$sel:httpStatus:GetClassifierResponse'] :: GetClassifierResponse -> Int

-- | Create a value of <a>GetClassifierResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:classifier:GetClassifierResponse'</a>,
--   <a>getClassifierResponse_classifier</a> - The requested classifier.
--   
--   <a>$sel:httpStatus:GetClassifierResponse'</a>,
--   <a>getClassifierResponse_httpStatus</a> - The response's http status
--   code.
newGetClassifierResponse :: Int -> GetClassifierResponse

-- | The requested classifier.
getClassifierResponse_classifier :: Lens' GetClassifierResponse (Maybe Classifier)

-- | The response's http status code.
getClassifierResponse_httpStatus :: Lens' GetClassifierResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetClassifier.GetClassifier
instance GHC.Show.Show Network.AWS.Glue.GetClassifier.GetClassifier
instance GHC.Read.Read Network.AWS.Glue.GetClassifier.GetClassifier
instance GHC.Classes.Eq Network.AWS.Glue.GetClassifier.GetClassifier
instance GHC.Generics.Generic Network.AWS.Glue.GetClassifier.GetClassifierResponse
instance GHC.Show.Show Network.AWS.Glue.GetClassifier.GetClassifierResponse
instance GHC.Read.Read Network.AWS.Glue.GetClassifier.GetClassifierResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetClassifier.GetClassifierResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetClassifier.GetClassifier
instance Control.DeepSeq.NFData Network.AWS.Glue.GetClassifier.GetClassifierResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetClassifier.GetClassifier
instance Control.DeepSeq.NFData Network.AWS.Glue.GetClassifier.GetClassifier
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetClassifier.GetClassifier
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetClassifier.GetClassifier
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetClassifier.GetClassifier
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetClassifier.GetClassifier


-- | Retrieves the status of a migration operation.
module Network.AWS.Glue.GetCatalogImportStatus

-- | <i>See:</i> <a>newGetCatalogImportStatus</a> smart constructor.
data GetCatalogImportStatus
GetCatalogImportStatus' :: Maybe Text -> GetCatalogImportStatus

-- | The ID of the catalog to migrate. Currently, this should be the Amazon
--   Web Services account ID.
[$sel:catalogId:GetCatalogImportStatus'] :: GetCatalogImportStatus -> Maybe Text

-- | Create a value of <a>GetCatalogImportStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetCatalogImportStatus'</a>,
--   <a>getCatalogImportStatus_catalogId</a> - The ID of the catalog to
--   migrate. Currently, this should be the Amazon Web Services account ID.
newGetCatalogImportStatus :: GetCatalogImportStatus

-- | The ID of the catalog to migrate. Currently, this should be the Amazon
--   Web Services account ID.
getCatalogImportStatus_catalogId :: Lens' GetCatalogImportStatus (Maybe Text)

-- | <i>See:</i> <a>newGetCatalogImportStatusResponse</a> smart
--   constructor.
data GetCatalogImportStatusResponse
GetCatalogImportStatusResponse' :: Maybe CatalogImportStatus -> Int -> GetCatalogImportStatusResponse

-- | The status of the specified catalog migration.
[$sel:importStatus:GetCatalogImportStatusResponse'] :: GetCatalogImportStatusResponse -> Maybe CatalogImportStatus

-- | The response's http status code.
[$sel:httpStatus:GetCatalogImportStatusResponse'] :: GetCatalogImportStatusResponse -> Int

-- | Create a value of <a>GetCatalogImportStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:importStatus:GetCatalogImportStatusResponse'</a>,
--   <a>getCatalogImportStatusResponse_importStatus</a> - The status of the
--   specified catalog migration.
--   
--   <a>$sel:httpStatus:GetCatalogImportStatusResponse'</a>,
--   <a>getCatalogImportStatusResponse_httpStatus</a> - The response's http
--   status code.
newGetCatalogImportStatusResponse :: Int -> GetCatalogImportStatusResponse

-- | The status of the specified catalog migration.
getCatalogImportStatusResponse_importStatus :: Lens' GetCatalogImportStatusResponse (Maybe CatalogImportStatus)

-- | The response's http status code.
getCatalogImportStatusResponse_httpStatus :: Lens' GetCatalogImportStatusResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetCatalogImportStatus.GetCatalogImportStatus
instance GHC.Show.Show Network.AWS.Glue.GetCatalogImportStatus.GetCatalogImportStatus
instance GHC.Read.Read Network.AWS.Glue.GetCatalogImportStatus.GetCatalogImportStatus
instance GHC.Classes.Eq Network.AWS.Glue.GetCatalogImportStatus.GetCatalogImportStatus
instance GHC.Generics.Generic Network.AWS.Glue.GetCatalogImportStatus.GetCatalogImportStatusResponse
instance GHC.Show.Show Network.AWS.Glue.GetCatalogImportStatus.GetCatalogImportStatusResponse
instance GHC.Read.Read Network.AWS.Glue.GetCatalogImportStatus.GetCatalogImportStatusResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetCatalogImportStatus.GetCatalogImportStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetCatalogImportStatus.GetCatalogImportStatus
instance Control.DeepSeq.NFData Network.AWS.Glue.GetCatalogImportStatus.GetCatalogImportStatusResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetCatalogImportStatus.GetCatalogImportStatus
instance Control.DeepSeq.NFData Network.AWS.Glue.GetCatalogImportStatus.GetCatalogImportStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetCatalogImportStatus.GetCatalogImportStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetCatalogImportStatus.GetCatalogImportStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetCatalogImportStatus.GetCatalogImportStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetCatalogImportStatus.GetCatalogImportStatus


-- | Retrieves the details of blueprint runs for a specified blueprint.
module Network.AWS.Glue.GetBlueprintRuns

-- | <i>See:</i> <a>newGetBlueprintRuns</a> smart constructor.
data GetBlueprintRuns
GetBlueprintRuns' :: Maybe Text -> Maybe Natural -> Text -> GetBlueprintRuns

-- | A continuation token, if this is a continuation request.
[$sel:nextToken:GetBlueprintRuns'] :: GetBlueprintRuns -> Maybe Text

-- | The maximum size of a list to return.
[$sel:maxResults:GetBlueprintRuns'] :: GetBlueprintRuns -> Maybe Natural

-- | The name of the blueprint.
[$sel:blueprintName:GetBlueprintRuns'] :: GetBlueprintRuns -> Text

-- | Create a value of <a>GetBlueprintRuns</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetBlueprintRuns'</a>,
--   <a>getBlueprintRuns_nextToken</a> - A continuation token, if this is a
--   continuation request.
--   
--   <a>$sel:maxResults:GetBlueprintRuns'</a>,
--   <a>getBlueprintRuns_maxResults</a> - The maximum size of a list to
--   return.
--   
--   <a>$sel:blueprintName:GetBlueprintRuns'</a>,
--   <a>getBlueprintRuns_blueprintName</a> - The name of the blueprint.
newGetBlueprintRuns :: Text -> GetBlueprintRuns

-- | A continuation token, if this is a continuation request.
getBlueprintRuns_nextToken :: Lens' GetBlueprintRuns (Maybe Text)

-- | The maximum size of a list to return.
getBlueprintRuns_maxResults :: Lens' GetBlueprintRuns (Maybe Natural)

-- | The name of the blueprint.
getBlueprintRuns_blueprintName :: Lens' GetBlueprintRuns Text

-- | <i>See:</i> <a>newGetBlueprintRunsResponse</a> smart constructor.
data GetBlueprintRunsResponse
GetBlueprintRunsResponse' :: Maybe [BlueprintRun] -> Maybe Text -> Int -> GetBlueprintRunsResponse

-- | Returns a list of <tt>BlueprintRun</tt> objects.
[$sel:blueprintRuns:GetBlueprintRunsResponse'] :: GetBlueprintRunsResponse -> Maybe [BlueprintRun]

-- | A continuation token, if not all blueprint runs have been returned.
[$sel:nextToken:GetBlueprintRunsResponse'] :: GetBlueprintRunsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetBlueprintRunsResponse'] :: GetBlueprintRunsResponse -> Int

-- | Create a value of <a>GetBlueprintRunsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blueprintRuns:GetBlueprintRunsResponse'</a>,
--   <a>getBlueprintRunsResponse_blueprintRuns</a> - Returns a list of
--   <tt>BlueprintRun</tt> objects.
--   
--   <a>$sel:nextToken:GetBlueprintRuns'</a>,
--   <a>getBlueprintRunsResponse_nextToken</a> - A continuation token, if
--   not all blueprint runs have been returned.
--   
--   <a>$sel:httpStatus:GetBlueprintRunsResponse'</a>,
--   <a>getBlueprintRunsResponse_httpStatus</a> - The response's http
--   status code.
newGetBlueprintRunsResponse :: Int -> GetBlueprintRunsResponse

-- | Returns a list of <tt>BlueprintRun</tt> objects.
getBlueprintRunsResponse_blueprintRuns :: Lens' GetBlueprintRunsResponse (Maybe [BlueprintRun])

-- | A continuation token, if not all blueprint runs have been returned.
getBlueprintRunsResponse_nextToken :: Lens' GetBlueprintRunsResponse (Maybe Text)

-- | The response's http status code.
getBlueprintRunsResponse_httpStatus :: Lens' GetBlueprintRunsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetBlueprintRuns.GetBlueprintRuns
instance GHC.Show.Show Network.AWS.Glue.GetBlueprintRuns.GetBlueprintRuns
instance GHC.Read.Read Network.AWS.Glue.GetBlueprintRuns.GetBlueprintRuns
instance GHC.Classes.Eq Network.AWS.Glue.GetBlueprintRuns.GetBlueprintRuns
instance GHC.Generics.Generic Network.AWS.Glue.GetBlueprintRuns.GetBlueprintRunsResponse
instance GHC.Show.Show Network.AWS.Glue.GetBlueprintRuns.GetBlueprintRunsResponse
instance GHC.Read.Read Network.AWS.Glue.GetBlueprintRuns.GetBlueprintRunsResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetBlueprintRuns.GetBlueprintRunsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetBlueprintRuns.GetBlueprintRuns
instance Control.DeepSeq.NFData Network.AWS.Glue.GetBlueprintRuns.GetBlueprintRunsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetBlueprintRuns.GetBlueprintRuns
instance Control.DeepSeq.NFData Network.AWS.Glue.GetBlueprintRuns.GetBlueprintRuns
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetBlueprintRuns.GetBlueprintRuns
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetBlueprintRuns.GetBlueprintRuns
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetBlueprintRuns.GetBlueprintRuns
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetBlueprintRuns.GetBlueprintRuns


-- | Retrieves the details of a blueprint run.
module Network.AWS.Glue.GetBlueprintRun

-- | <i>See:</i> <a>newGetBlueprintRun</a> smart constructor.
data GetBlueprintRun
GetBlueprintRun' :: Text -> Text -> GetBlueprintRun

-- | The name of the blueprint.
[$sel:blueprintName:GetBlueprintRun'] :: GetBlueprintRun -> Text

-- | The run ID for the blueprint run you want to retrieve.
[$sel:runId:GetBlueprintRun'] :: GetBlueprintRun -> Text

-- | Create a value of <a>GetBlueprintRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blueprintName:GetBlueprintRun'</a>,
--   <a>getBlueprintRun_blueprintName</a> - The name of the blueprint.
--   
--   <a>$sel:runId:GetBlueprintRun'</a>, <a>getBlueprintRun_runId</a> - The
--   run ID for the blueprint run you want to retrieve.
newGetBlueprintRun :: Text -> Text -> GetBlueprintRun

-- | The name of the blueprint.
getBlueprintRun_blueprintName :: Lens' GetBlueprintRun Text

-- | The run ID for the blueprint run you want to retrieve.
getBlueprintRun_runId :: Lens' GetBlueprintRun Text

-- | <i>See:</i> <a>newGetBlueprintRunResponse</a> smart constructor.
data GetBlueprintRunResponse
GetBlueprintRunResponse' :: Maybe BlueprintRun -> Int -> GetBlueprintRunResponse

-- | Returns a <tt>BlueprintRun</tt> object.
[$sel:blueprintRun:GetBlueprintRunResponse'] :: GetBlueprintRunResponse -> Maybe BlueprintRun

-- | The response's http status code.
[$sel:httpStatus:GetBlueprintRunResponse'] :: GetBlueprintRunResponse -> Int

-- | Create a value of <a>GetBlueprintRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blueprintRun:GetBlueprintRunResponse'</a>,
--   <a>getBlueprintRunResponse_blueprintRun</a> - Returns a
--   <tt>BlueprintRun</tt> object.
--   
--   <a>$sel:httpStatus:GetBlueprintRunResponse'</a>,
--   <a>getBlueprintRunResponse_httpStatus</a> - The response's http status
--   code.
newGetBlueprintRunResponse :: Int -> GetBlueprintRunResponse

-- | Returns a <tt>BlueprintRun</tt> object.
getBlueprintRunResponse_blueprintRun :: Lens' GetBlueprintRunResponse (Maybe BlueprintRun)

-- | The response's http status code.
getBlueprintRunResponse_httpStatus :: Lens' GetBlueprintRunResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetBlueprintRun.GetBlueprintRun
instance GHC.Show.Show Network.AWS.Glue.GetBlueprintRun.GetBlueprintRun
instance GHC.Read.Read Network.AWS.Glue.GetBlueprintRun.GetBlueprintRun
instance GHC.Classes.Eq Network.AWS.Glue.GetBlueprintRun.GetBlueprintRun
instance GHC.Generics.Generic Network.AWS.Glue.GetBlueprintRun.GetBlueprintRunResponse
instance GHC.Show.Show Network.AWS.Glue.GetBlueprintRun.GetBlueprintRunResponse
instance GHC.Read.Read Network.AWS.Glue.GetBlueprintRun.GetBlueprintRunResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetBlueprintRun.GetBlueprintRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetBlueprintRun.GetBlueprintRun
instance Control.DeepSeq.NFData Network.AWS.Glue.GetBlueprintRun.GetBlueprintRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetBlueprintRun.GetBlueprintRun
instance Control.DeepSeq.NFData Network.AWS.Glue.GetBlueprintRun.GetBlueprintRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetBlueprintRun.GetBlueprintRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetBlueprintRun.GetBlueprintRun
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetBlueprintRun.GetBlueprintRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetBlueprintRun.GetBlueprintRun


-- | Retrieves the details of a blueprint.
module Network.AWS.Glue.GetBlueprint

-- | <i>See:</i> <a>newGetBlueprint</a> smart constructor.
data GetBlueprint
GetBlueprint' :: Maybe Bool -> Maybe Bool -> Text -> GetBlueprint

-- | Specifies whether or not to include the parameter specification.
[$sel:includeParameterSpec:GetBlueprint'] :: GetBlueprint -> Maybe Bool

-- | Specifies whether or not to include the blueprint in the response.
[$sel:includeBlueprint:GetBlueprint'] :: GetBlueprint -> Maybe Bool

-- | The name of the blueprint.
[$sel:name:GetBlueprint'] :: GetBlueprint -> Text

-- | Create a value of <a>GetBlueprint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeParameterSpec:GetBlueprint'</a>,
--   <a>getBlueprint_includeParameterSpec</a> - Specifies whether or not to
--   include the parameter specification.
--   
--   <a>$sel:includeBlueprint:GetBlueprint'</a>,
--   <a>getBlueprint_includeBlueprint</a> - Specifies whether or not to
--   include the blueprint in the response.
--   
--   <a>$sel:name:GetBlueprint'</a>, <a>getBlueprint_name</a> - The name of
--   the blueprint.
newGetBlueprint :: Text -> GetBlueprint

-- | Specifies whether or not to include the parameter specification.
getBlueprint_includeParameterSpec :: Lens' GetBlueprint (Maybe Bool)

-- | Specifies whether or not to include the blueprint in the response.
getBlueprint_includeBlueprint :: Lens' GetBlueprint (Maybe Bool)

-- | The name of the blueprint.
getBlueprint_name :: Lens' GetBlueprint Text

-- | <i>See:</i> <a>newGetBlueprintResponse</a> smart constructor.
data GetBlueprintResponse
GetBlueprintResponse' :: Maybe Blueprint -> Int -> GetBlueprintResponse

-- | Returns a <tt>Blueprint</tt> object.
[$sel:blueprint:GetBlueprintResponse'] :: GetBlueprintResponse -> Maybe Blueprint

-- | The response's http status code.
[$sel:httpStatus:GetBlueprintResponse'] :: GetBlueprintResponse -> Int

-- | Create a value of <a>GetBlueprintResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blueprint:GetBlueprintResponse'</a>,
--   <a>getBlueprintResponse_blueprint</a> - Returns a <tt>Blueprint</tt>
--   object.
--   
--   <a>$sel:httpStatus:GetBlueprintResponse'</a>,
--   <a>getBlueprintResponse_httpStatus</a> - The response's http status
--   code.
newGetBlueprintResponse :: Int -> GetBlueprintResponse

-- | Returns a <tt>Blueprint</tt> object.
getBlueprintResponse_blueprint :: Lens' GetBlueprintResponse (Maybe Blueprint)

-- | The response's http status code.
getBlueprintResponse_httpStatus :: Lens' GetBlueprintResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.GetBlueprint.GetBlueprint
instance GHC.Show.Show Network.AWS.Glue.GetBlueprint.GetBlueprint
instance GHC.Read.Read Network.AWS.Glue.GetBlueprint.GetBlueprint
instance GHC.Classes.Eq Network.AWS.Glue.GetBlueprint.GetBlueprint
instance GHC.Generics.Generic Network.AWS.Glue.GetBlueprint.GetBlueprintResponse
instance GHC.Show.Show Network.AWS.Glue.GetBlueprint.GetBlueprintResponse
instance GHC.Read.Read Network.AWS.Glue.GetBlueprint.GetBlueprintResponse
instance GHC.Classes.Eq Network.AWS.Glue.GetBlueprint.GetBlueprintResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.GetBlueprint.GetBlueprint
instance Control.DeepSeq.NFData Network.AWS.Glue.GetBlueprint.GetBlueprintResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.GetBlueprint.GetBlueprint
instance Control.DeepSeq.NFData Network.AWS.Glue.GetBlueprint.GetBlueprint
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.GetBlueprint.GetBlueprint
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.GetBlueprint.GetBlueprint
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.GetBlueprint.GetBlueprint
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.GetBlueprint.GetBlueprint


-- | Deletes a workflow.
module Network.AWS.Glue.DeleteWorkflow

-- | <i>See:</i> <a>newDeleteWorkflow</a> smart constructor.
data DeleteWorkflow
DeleteWorkflow' :: Text -> DeleteWorkflow

-- | Name of the workflow to be deleted.
[$sel:name:DeleteWorkflow'] :: DeleteWorkflow -> Text

-- | Create a value of <a>DeleteWorkflow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteWorkflow'</a>, <a>deleteWorkflow_name</a> - Name of
--   the workflow to be deleted.
newDeleteWorkflow :: Text -> DeleteWorkflow

-- | Name of the workflow to be deleted.
deleteWorkflow_name :: Lens' DeleteWorkflow Text

-- | <i>See:</i> <a>newDeleteWorkflowResponse</a> smart constructor.
data DeleteWorkflowResponse
DeleteWorkflowResponse' :: Maybe Text -> Int -> DeleteWorkflowResponse

-- | Name of the workflow specified in input.
[$sel:name:DeleteWorkflowResponse'] :: DeleteWorkflowResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteWorkflowResponse'] :: DeleteWorkflowResponse -> Int

-- | Create a value of <a>DeleteWorkflowResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteWorkflow'</a>, <a>deleteWorkflowResponse_name</a> -
--   Name of the workflow specified in input.
--   
--   <a>$sel:httpStatus:DeleteWorkflowResponse'</a>,
--   <a>deleteWorkflowResponse_httpStatus</a> - The response's http status
--   code.
newDeleteWorkflowResponse :: Int -> DeleteWorkflowResponse

-- | Name of the workflow specified in input.
deleteWorkflowResponse_name :: Lens' DeleteWorkflowResponse (Maybe Text)

-- | The response's http status code.
deleteWorkflowResponse_httpStatus :: Lens' DeleteWorkflowResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeleteWorkflow.DeleteWorkflow
instance GHC.Show.Show Network.AWS.Glue.DeleteWorkflow.DeleteWorkflow
instance GHC.Read.Read Network.AWS.Glue.DeleteWorkflow.DeleteWorkflow
instance GHC.Classes.Eq Network.AWS.Glue.DeleteWorkflow.DeleteWorkflow
instance GHC.Generics.Generic Network.AWS.Glue.DeleteWorkflow.DeleteWorkflowResponse
instance GHC.Show.Show Network.AWS.Glue.DeleteWorkflow.DeleteWorkflowResponse
instance GHC.Read.Read Network.AWS.Glue.DeleteWorkflow.DeleteWorkflowResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeleteWorkflow.DeleteWorkflowResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeleteWorkflow.DeleteWorkflow
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteWorkflow.DeleteWorkflowResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeleteWorkflow.DeleteWorkflow
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteWorkflow.DeleteWorkflow
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeleteWorkflow.DeleteWorkflow
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeleteWorkflow.DeleteWorkflow
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeleteWorkflow.DeleteWorkflow
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeleteWorkflow.DeleteWorkflow


-- | Deletes an existing function definition from the Data Catalog.
module Network.AWS.Glue.DeleteUserDefinedFunction

-- | <i>See:</i> <a>newDeleteUserDefinedFunction</a> smart constructor.
data DeleteUserDefinedFunction
DeleteUserDefinedFunction' :: Maybe Text -> Text -> Text -> DeleteUserDefinedFunction

-- | The ID of the Data Catalog where the function to be deleted is
--   located. If none is supplied, the Amazon Web Services account ID is
--   used by default.
[$sel:catalogId:DeleteUserDefinedFunction'] :: DeleteUserDefinedFunction -> Maybe Text

-- | The name of the catalog database where the function is located.
[$sel:databaseName:DeleteUserDefinedFunction'] :: DeleteUserDefinedFunction -> Text

-- | The name of the function definition to be deleted.
[$sel:functionName:DeleteUserDefinedFunction'] :: DeleteUserDefinedFunction -> Text

-- | Create a value of <a>DeleteUserDefinedFunction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DeleteUserDefinedFunction'</a>,
--   <a>deleteUserDefinedFunction_catalogId</a> - The ID of the Data
--   Catalog where the function to be deleted is located. If none is
--   supplied, the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:DeleteUserDefinedFunction'</a>,
--   <a>deleteUserDefinedFunction_databaseName</a> - The name of the
--   catalog database where the function is located.
--   
--   <a>$sel:functionName:DeleteUserDefinedFunction'</a>,
--   <a>deleteUserDefinedFunction_functionName</a> - The name of the
--   function definition to be deleted.
newDeleteUserDefinedFunction :: Text -> Text -> DeleteUserDefinedFunction

-- | The ID of the Data Catalog where the function to be deleted is
--   located. If none is supplied, the Amazon Web Services account ID is
--   used by default.
deleteUserDefinedFunction_catalogId :: Lens' DeleteUserDefinedFunction (Maybe Text)

-- | The name of the catalog database where the function is located.
deleteUserDefinedFunction_databaseName :: Lens' DeleteUserDefinedFunction Text

-- | The name of the function definition to be deleted.
deleteUserDefinedFunction_functionName :: Lens' DeleteUserDefinedFunction Text

-- | <i>See:</i> <a>newDeleteUserDefinedFunctionResponse</a> smart
--   constructor.
data DeleteUserDefinedFunctionResponse
DeleteUserDefinedFunctionResponse' :: Int -> DeleteUserDefinedFunctionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteUserDefinedFunctionResponse'] :: DeleteUserDefinedFunctionResponse -> Int

-- | Create a value of <a>DeleteUserDefinedFunctionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteUserDefinedFunctionResponse'</a>,
--   <a>deleteUserDefinedFunctionResponse_httpStatus</a> - The response's
--   http status code.
newDeleteUserDefinedFunctionResponse :: Int -> DeleteUserDefinedFunctionResponse

-- | The response's http status code.
deleteUserDefinedFunctionResponse_httpStatus :: Lens' DeleteUserDefinedFunctionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeleteUserDefinedFunction.DeleteUserDefinedFunction
instance GHC.Show.Show Network.AWS.Glue.DeleteUserDefinedFunction.DeleteUserDefinedFunction
instance GHC.Read.Read Network.AWS.Glue.DeleteUserDefinedFunction.DeleteUserDefinedFunction
instance GHC.Classes.Eq Network.AWS.Glue.DeleteUserDefinedFunction.DeleteUserDefinedFunction
instance GHC.Generics.Generic Network.AWS.Glue.DeleteUserDefinedFunction.DeleteUserDefinedFunctionResponse
instance GHC.Show.Show Network.AWS.Glue.DeleteUserDefinedFunction.DeleteUserDefinedFunctionResponse
instance GHC.Read.Read Network.AWS.Glue.DeleteUserDefinedFunction.DeleteUserDefinedFunctionResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeleteUserDefinedFunction.DeleteUserDefinedFunctionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeleteUserDefinedFunction.DeleteUserDefinedFunction
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteUserDefinedFunction.DeleteUserDefinedFunctionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeleteUserDefinedFunction.DeleteUserDefinedFunction
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteUserDefinedFunction.DeleteUserDefinedFunction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeleteUserDefinedFunction.DeleteUserDefinedFunction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeleteUserDefinedFunction.DeleteUserDefinedFunction
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeleteUserDefinedFunction.DeleteUserDefinedFunction
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeleteUserDefinedFunction.DeleteUserDefinedFunction


-- | Deletes a specified trigger. If the trigger is not found, no exception
--   is thrown.
module Network.AWS.Glue.DeleteTrigger

-- | <i>See:</i> <a>newDeleteTrigger</a> smart constructor.
data DeleteTrigger
DeleteTrigger' :: Text -> DeleteTrigger

-- | The name of the trigger to delete.
[$sel:name:DeleteTrigger'] :: DeleteTrigger -> Text

-- | Create a value of <a>DeleteTrigger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteTrigger'</a>, <a>deleteTrigger_name</a> - The name
--   of the trigger to delete.
newDeleteTrigger :: Text -> DeleteTrigger

-- | The name of the trigger to delete.
deleteTrigger_name :: Lens' DeleteTrigger Text

-- | <i>See:</i> <a>newDeleteTriggerResponse</a> smart constructor.
data DeleteTriggerResponse
DeleteTriggerResponse' :: Maybe Text -> Int -> DeleteTriggerResponse

-- | The name of the trigger that was deleted.
[$sel:name:DeleteTriggerResponse'] :: DeleteTriggerResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteTriggerResponse'] :: DeleteTriggerResponse -> Int

-- | Create a value of <a>DeleteTriggerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteTrigger'</a>, <a>deleteTriggerResponse_name</a> -
--   The name of the trigger that was deleted.
--   
--   <a>$sel:httpStatus:DeleteTriggerResponse'</a>,
--   <a>deleteTriggerResponse_httpStatus</a> - The response's http status
--   code.
newDeleteTriggerResponse :: Int -> DeleteTriggerResponse

-- | The name of the trigger that was deleted.
deleteTriggerResponse_name :: Lens' DeleteTriggerResponse (Maybe Text)

-- | The response's http status code.
deleteTriggerResponse_httpStatus :: Lens' DeleteTriggerResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeleteTrigger.DeleteTrigger
instance GHC.Show.Show Network.AWS.Glue.DeleteTrigger.DeleteTrigger
instance GHC.Read.Read Network.AWS.Glue.DeleteTrigger.DeleteTrigger
instance GHC.Classes.Eq Network.AWS.Glue.DeleteTrigger.DeleteTrigger
instance GHC.Generics.Generic Network.AWS.Glue.DeleteTrigger.DeleteTriggerResponse
instance GHC.Show.Show Network.AWS.Glue.DeleteTrigger.DeleteTriggerResponse
instance GHC.Read.Read Network.AWS.Glue.DeleteTrigger.DeleteTriggerResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeleteTrigger.DeleteTriggerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeleteTrigger.DeleteTrigger
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteTrigger.DeleteTriggerResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeleteTrigger.DeleteTrigger
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteTrigger.DeleteTrigger
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeleteTrigger.DeleteTrigger
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeleteTrigger.DeleteTrigger
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeleteTrigger.DeleteTrigger
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeleteTrigger.DeleteTrigger


-- | Deletes a specified version of a table.
module Network.AWS.Glue.DeleteTableVersion

-- | <i>See:</i> <a>newDeleteTableVersion</a> smart constructor.
data DeleteTableVersion
DeleteTableVersion' :: Maybe Text -> Text -> Text -> Text -> DeleteTableVersion

-- | The ID of the Data Catalog where the tables reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
[$sel:catalogId:DeleteTableVersion'] :: DeleteTableVersion -> Maybe Text

-- | The database in the catalog in which the table resides. For Hive
--   compatibility, this name is entirely lowercase.
[$sel:databaseName:DeleteTableVersion'] :: DeleteTableVersion -> Text

-- | The name of the table. For Hive compatibility, this name is entirely
--   lowercase.
[$sel:tableName:DeleteTableVersion'] :: DeleteTableVersion -> Text

-- | The ID of the table version to be deleted. A <tt>VersionID</tt> is a
--   string representation of an integer. Each version is incremented by 1.
[$sel:versionId:DeleteTableVersion'] :: DeleteTableVersion -> Text

-- | Create a value of <a>DeleteTableVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DeleteTableVersion'</a>,
--   <a>deleteTableVersion_catalogId</a> - The ID of the Data Catalog where
--   the tables reside. If none is provided, the Amazon Web Services
--   account ID is used by default.
--   
--   <a>$sel:databaseName:DeleteTableVersion'</a>,
--   <a>deleteTableVersion_databaseName</a> - The database in the catalog
--   in which the table resides. For Hive compatibility, this name is
--   entirely lowercase.
--   
--   <a>$sel:tableName:DeleteTableVersion'</a>,
--   <a>deleteTableVersion_tableName</a> - The name of the table. For Hive
--   compatibility, this name is entirely lowercase.
--   
--   <a>$sel:versionId:DeleteTableVersion'</a>,
--   <a>deleteTableVersion_versionId</a> - The ID of the table version to
--   be deleted. A <tt>VersionID</tt> is a string representation of an
--   integer. Each version is incremented by 1.
newDeleteTableVersion :: Text -> Text -> Text -> DeleteTableVersion

-- | The ID of the Data Catalog where the tables reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
deleteTableVersion_catalogId :: Lens' DeleteTableVersion (Maybe Text)

-- | The database in the catalog in which the table resides. For Hive
--   compatibility, this name is entirely lowercase.
deleteTableVersion_databaseName :: Lens' DeleteTableVersion Text

-- | The name of the table. For Hive compatibility, this name is entirely
--   lowercase.
deleteTableVersion_tableName :: Lens' DeleteTableVersion Text

-- | The ID of the table version to be deleted. A <tt>VersionID</tt> is a
--   string representation of an integer. Each version is incremented by 1.
deleteTableVersion_versionId :: Lens' DeleteTableVersion Text

-- | <i>See:</i> <a>newDeleteTableVersionResponse</a> smart constructor.
data DeleteTableVersionResponse
DeleteTableVersionResponse' :: Int -> DeleteTableVersionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteTableVersionResponse'] :: DeleteTableVersionResponse -> Int

-- | Create a value of <a>DeleteTableVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteTableVersionResponse'</a>,
--   <a>deleteTableVersionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteTableVersionResponse :: Int -> DeleteTableVersionResponse

-- | The response's http status code.
deleteTableVersionResponse_httpStatus :: Lens' DeleteTableVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeleteTableVersion.DeleteTableVersion
instance GHC.Show.Show Network.AWS.Glue.DeleteTableVersion.DeleteTableVersion
instance GHC.Read.Read Network.AWS.Glue.DeleteTableVersion.DeleteTableVersion
instance GHC.Classes.Eq Network.AWS.Glue.DeleteTableVersion.DeleteTableVersion
instance GHC.Generics.Generic Network.AWS.Glue.DeleteTableVersion.DeleteTableVersionResponse
instance GHC.Show.Show Network.AWS.Glue.DeleteTableVersion.DeleteTableVersionResponse
instance GHC.Read.Read Network.AWS.Glue.DeleteTableVersion.DeleteTableVersionResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeleteTableVersion.DeleteTableVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeleteTableVersion.DeleteTableVersion
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteTableVersion.DeleteTableVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeleteTableVersion.DeleteTableVersion
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteTableVersion.DeleteTableVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeleteTableVersion.DeleteTableVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeleteTableVersion.DeleteTableVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeleteTableVersion.DeleteTableVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeleteTableVersion.DeleteTableVersion


-- | Removes a table definition from the Data Catalog.
--   
--   After completing this operation, you no longer have access to the
--   table versions and partitions that belong to the deleted table. Glue
--   deletes these "orphaned" resources asynchronously in a timely manner,
--   at the discretion of the service.
--   
--   To ensure the immediate deletion of all related resources, before
--   calling <tt>DeleteTable</tt>, use <tt>DeleteTableVersion</tt> or
--   <tt>BatchDeleteTableVersion</tt>, and <tt>DeletePartition</tt> or
--   <tt>BatchDeletePartition</tt>, to delete any resources that belong to
--   the table.
module Network.AWS.Glue.DeleteTable

-- | <i>See:</i> <a>newDeleteTable</a> smart constructor.
data DeleteTable
DeleteTable' :: Maybe Text -> Text -> Text -> DeleteTable

-- | The ID of the Data Catalog where the table resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
[$sel:catalogId:DeleteTable'] :: DeleteTable -> Maybe Text

-- | The name of the catalog database in which the table resides. For Hive
--   compatibility, this name is entirely lowercase.
[$sel:databaseName:DeleteTable'] :: DeleteTable -> Text

-- | The name of the table to be deleted. For Hive compatibility, this name
--   is entirely lowercase.
[$sel:name:DeleteTable'] :: DeleteTable -> Text

-- | Create a value of <a>DeleteTable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DeleteTable'</a>, <a>deleteTable_catalogId</a> - The
--   ID of the Data Catalog where the table resides. If none is provided,
--   the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:DeleteTable'</a>, <a>deleteTable_databaseName</a>
--   - The name of the catalog database in which the table resides. For
--   Hive compatibility, this name is entirely lowercase.
--   
--   <a>$sel:name:DeleteTable'</a>, <a>deleteTable_name</a> - The name of
--   the table to be deleted. For Hive compatibility, this name is entirely
--   lowercase.
newDeleteTable :: Text -> Text -> DeleteTable

-- | The ID of the Data Catalog where the table resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
deleteTable_catalogId :: Lens' DeleteTable (Maybe Text)

-- | The name of the catalog database in which the table resides. For Hive
--   compatibility, this name is entirely lowercase.
deleteTable_databaseName :: Lens' DeleteTable Text

-- | The name of the table to be deleted. For Hive compatibility, this name
--   is entirely lowercase.
deleteTable_name :: Lens' DeleteTable Text

-- | <i>See:</i> <a>newDeleteTableResponse</a> smart constructor.
data DeleteTableResponse
DeleteTableResponse' :: Int -> DeleteTableResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteTableResponse'] :: DeleteTableResponse -> Int

-- | Create a value of <a>DeleteTableResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteTableResponse'</a>,
--   <a>deleteTableResponse_httpStatus</a> - The response's http status
--   code.
newDeleteTableResponse :: Int -> DeleteTableResponse

-- | The response's http status code.
deleteTableResponse_httpStatus :: Lens' DeleteTableResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeleteTable.DeleteTable
instance GHC.Show.Show Network.AWS.Glue.DeleteTable.DeleteTable
instance GHC.Read.Read Network.AWS.Glue.DeleteTable.DeleteTable
instance GHC.Classes.Eq Network.AWS.Glue.DeleteTable.DeleteTable
instance GHC.Generics.Generic Network.AWS.Glue.DeleteTable.DeleteTableResponse
instance GHC.Show.Show Network.AWS.Glue.DeleteTable.DeleteTableResponse
instance GHC.Read.Read Network.AWS.Glue.DeleteTable.DeleteTableResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeleteTable.DeleteTableResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeleteTable.DeleteTable
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteTable.DeleteTableResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeleteTable.DeleteTable
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteTable.DeleteTable
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeleteTable.DeleteTable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeleteTable.DeleteTable
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeleteTable.DeleteTable
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeleteTable.DeleteTable


-- | Deletes a specified security configuration.
module Network.AWS.Glue.DeleteSecurityConfiguration

-- | <i>See:</i> <a>newDeleteSecurityConfiguration</a> smart constructor.
data DeleteSecurityConfiguration
DeleteSecurityConfiguration' :: Text -> DeleteSecurityConfiguration

-- | The name of the security configuration to delete.
[$sel:name:DeleteSecurityConfiguration'] :: DeleteSecurityConfiguration -> Text

-- | Create a value of <a>DeleteSecurityConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteSecurityConfiguration'</a>,
--   <a>deleteSecurityConfiguration_name</a> - The name of the security
--   configuration to delete.
newDeleteSecurityConfiguration :: Text -> DeleteSecurityConfiguration

-- | The name of the security configuration to delete.
deleteSecurityConfiguration_name :: Lens' DeleteSecurityConfiguration Text

-- | <i>See:</i> <a>newDeleteSecurityConfigurationResponse</a> smart
--   constructor.
data DeleteSecurityConfigurationResponse
DeleteSecurityConfigurationResponse' :: Int -> DeleteSecurityConfigurationResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteSecurityConfigurationResponse'] :: DeleteSecurityConfigurationResponse -> Int

-- | Create a value of <a>DeleteSecurityConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteSecurityConfigurationResponse'</a>,
--   <a>deleteSecurityConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newDeleteSecurityConfigurationResponse :: Int -> DeleteSecurityConfigurationResponse

-- | The response's http status code.
deleteSecurityConfigurationResponse_httpStatus :: Lens' DeleteSecurityConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeleteSecurityConfiguration.DeleteSecurityConfiguration
instance GHC.Show.Show Network.AWS.Glue.DeleteSecurityConfiguration.DeleteSecurityConfiguration
instance GHC.Read.Read Network.AWS.Glue.DeleteSecurityConfiguration.DeleteSecurityConfiguration
instance GHC.Classes.Eq Network.AWS.Glue.DeleteSecurityConfiguration.DeleteSecurityConfiguration
instance GHC.Generics.Generic Network.AWS.Glue.DeleteSecurityConfiguration.DeleteSecurityConfigurationResponse
instance GHC.Show.Show Network.AWS.Glue.DeleteSecurityConfiguration.DeleteSecurityConfigurationResponse
instance GHC.Read.Read Network.AWS.Glue.DeleteSecurityConfiguration.DeleteSecurityConfigurationResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeleteSecurityConfiguration.DeleteSecurityConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeleteSecurityConfiguration.DeleteSecurityConfiguration
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteSecurityConfiguration.DeleteSecurityConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeleteSecurityConfiguration.DeleteSecurityConfiguration
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteSecurityConfiguration.DeleteSecurityConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeleteSecurityConfiguration.DeleteSecurityConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeleteSecurityConfiguration.DeleteSecurityConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeleteSecurityConfiguration.DeleteSecurityConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeleteSecurityConfiguration.DeleteSecurityConfiguration


-- | Remove versions from the specified schema. A version number or range
--   may be supplied. If the compatibility mode forbids deleting of a
--   version that is necessary, such as BACKWARDS_FULL, an error is
--   returned. Calling the <tt>GetSchemaVersions</tt> API after this call
--   will list the status of the deleted versions.
--   
--   When the range of version numbers contain check pointed version, the
--   API will return a 409 conflict and will not proceed with the deletion.
--   You have to remove the checkpoint first using the
--   <tt>DeleteSchemaCheckpoint</tt> API before using this API.
--   
--   You cannot use the <tt>DeleteSchemaVersions</tt> API to delete the
--   first schema version in the schema set. The first schema version can
--   only be deleted by the <tt>DeleteSchema</tt> API. This operation will
--   also delete the attached <tt>SchemaVersionMetadata</tt> under the
--   schema versions. Hard deletes will be enforced on the database.
--   
--   If the compatibility mode forbids deleting of a version that is
--   necessary, such as BACKWARDS_FULL, an error is returned.
module Network.AWS.Glue.DeleteSchemaVersions

-- | <i>See:</i> <a>newDeleteSchemaVersions</a> smart constructor.
data DeleteSchemaVersions
DeleteSchemaVersions' :: SchemaId -> Text -> DeleteSchemaVersions

-- | This is a wrapper structure that may contain the schema name and
--   Amazon Resource Name (ARN).
[$sel:schemaId:DeleteSchemaVersions'] :: DeleteSchemaVersions -> SchemaId

-- | A version range may be supplied which may be of the format:
--   
--   <ul>
--   <li>a single version number, 5</li>
--   <li>a range, 5-8 : deletes versions 5, 6, 7, 8</li>
--   </ul>
[$sel:versions:DeleteSchemaVersions'] :: DeleteSchemaVersions -> Text

-- | Create a value of <a>DeleteSchemaVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaId:DeleteSchemaVersions'</a>,
--   <a>deleteSchemaVersions_schemaId</a> - This is a wrapper structure
--   that may contain the schema name and Amazon Resource Name (ARN).
--   
--   <a>$sel:versions:DeleteSchemaVersions'</a>,
--   <a>deleteSchemaVersions_versions</a> - A version range may be supplied
--   which may be of the format:
--   
--   <ul>
--   <li>a single version number, 5</li>
--   <li>a range, 5-8 : deletes versions 5, 6, 7, 8</li>
--   </ul>
newDeleteSchemaVersions :: SchemaId -> Text -> DeleteSchemaVersions

-- | This is a wrapper structure that may contain the schema name and
--   Amazon Resource Name (ARN).
deleteSchemaVersions_schemaId :: Lens' DeleteSchemaVersions SchemaId

-- | A version range may be supplied which may be of the format:
--   
--   <ul>
--   <li>a single version number, 5</li>
--   <li>a range, 5-8 : deletes versions 5, 6, 7, 8</li>
--   </ul>
deleteSchemaVersions_versions :: Lens' DeleteSchemaVersions Text

-- | <i>See:</i> <a>newDeleteSchemaVersionsResponse</a> smart constructor.
data DeleteSchemaVersionsResponse
DeleteSchemaVersionsResponse' :: Maybe [SchemaVersionErrorItem] -> Int -> DeleteSchemaVersionsResponse

-- | A list of <tt>SchemaVersionErrorItem</tt> objects, each containing an
--   error and schema version.
[$sel:schemaVersionErrors:DeleteSchemaVersionsResponse'] :: DeleteSchemaVersionsResponse -> Maybe [SchemaVersionErrorItem]

-- | The response's http status code.
[$sel:httpStatus:DeleteSchemaVersionsResponse'] :: DeleteSchemaVersionsResponse -> Int

-- | Create a value of <a>DeleteSchemaVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaVersionErrors:DeleteSchemaVersionsResponse'</a>,
--   <a>deleteSchemaVersionsResponse_schemaVersionErrors</a> - A list of
--   <tt>SchemaVersionErrorItem</tt> objects, each containing an error and
--   schema version.
--   
--   <a>$sel:httpStatus:DeleteSchemaVersionsResponse'</a>,
--   <a>deleteSchemaVersionsResponse_httpStatus</a> - The response's http
--   status code.
newDeleteSchemaVersionsResponse :: Int -> DeleteSchemaVersionsResponse

-- | A list of <tt>SchemaVersionErrorItem</tt> objects, each containing an
--   error and schema version.
deleteSchemaVersionsResponse_schemaVersionErrors :: Lens' DeleteSchemaVersionsResponse (Maybe [SchemaVersionErrorItem])

-- | The response's http status code.
deleteSchemaVersionsResponse_httpStatus :: Lens' DeleteSchemaVersionsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeleteSchemaVersions.DeleteSchemaVersions
instance GHC.Show.Show Network.AWS.Glue.DeleteSchemaVersions.DeleteSchemaVersions
instance GHC.Read.Read Network.AWS.Glue.DeleteSchemaVersions.DeleteSchemaVersions
instance GHC.Classes.Eq Network.AWS.Glue.DeleteSchemaVersions.DeleteSchemaVersions
instance GHC.Generics.Generic Network.AWS.Glue.DeleteSchemaVersions.DeleteSchemaVersionsResponse
instance GHC.Show.Show Network.AWS.Glue.DeleteSchemaVersions.DeleteSchemaVersionsResponse
instance GHC.Read.Read Network.AWS.Glue.DeleteSchemaVersions.DeleteSchemaVersionsResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeleteSchemaVersions.DeleteSchemaVersionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeleteSchemaVersions.DeleteSchemaVersions
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteSchemaVersions.DeleteSchemaVersionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeleteSchemaVersions.DeleteSchemaVersions
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteSchemaVersions.DeleteSchemaVersions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeleteSchemaVersions.DeleteSchemaVersions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeleteSchemaVersions.DeleteSchemaVersions
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeleteSchemaVersions.DeleteSchemaVersions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeleteSchemaVersions.DeleteSchemaVersions


-- | Deletes the entire schema set, including the schema set and all of its
--   versions. To get the status of the delete operation, you can call
--   <tt>GetSchema</tt> API after the asynchronous call. Deleting a
--   registry will deactivate all online operations for the schema, such as
--   the <tt>GetSchemaByDefinition</tt>, and <tt>RegisterSchemaVersion</tt>
--   APIs.
module Network.AWS.Glue.DeleteSchema

-- | <i>See:</i> <a>newDeleteSchema</a> smart constructor.
data DeleteSchema
DeleteSchema' :: SchemaId -> DeleteSchema

-- | This is a wrapper structure that may contain the schema name and
--   Amazon Resource Name (ARN).
[$sel:schemaId:DeleteSchema'] :: DeleteSchema -> SchemaId

-- | Create a value of <a>DeleteSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaId:DeleteSchema'</a>, <a>deleteSchema_schemaId</a> -
--   This is a wrapper structure that may contain the schema name and
--   Amazon Resource Name (ARN).
newDeleteSchema :: SchemaId -> DeleteSchema

-- | This is a wrapper structure that may contain the schema name and
--   Amazon Resource Name (ARN).
deleteSchema_schemaId :: Lens' DeleteSchema SchemaId

-- | <i>See:</i> <a>newDeleteSchemaResponse</a> smart constructor.
data DeleteSchemaResponse
DeleteSchemaResponse' :: Maybe SchemaStatus -> Maybe Text -> Maybe Text -> Int -> DeleteSchemaResponse

-- | The status of the schema.
[$sel:status:DeleteSchemaResponse'] :: DeleteSchemaResponse -> Maybe SchemaStatus

-- | The name of the schema being deleted.
[$sel:schemaName:DeleteSchemaResponse'] :: DeleteSchemaResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the schema being deleted.
[$sel:schemaArn:DeleteSchemaResponse'] :: DeleteSchemaResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteSchemaResponse'] :: DeleteSchemaResponse -> Int

-- | Create a value of <a>DeleteSchemaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DeleteSchemaResponse'</a>,
--   <a>deleteSchemaResponse_status</a> - The status of the schema.
--   
--   <a>$sel:schemaName:DeleteSchemaResponse'</a>,
--   <a>deleteSchemaResponse_schemaName</a> - The name of the schema being
--   deleted.
--   
--   <a>$sel:schemaArn:DeleteSchemaResponse'</a>,
--   <a>deleteSchemaResponse_schemaArn</a> - The Amazon Resource Name (ARN)
--   of the schema being deleted.
--   
--   <a>$sel:httpStatus:DeleteSchemaResponse'</a>,
--   <a>deleteSchemaResponse_httpStatus</a> - The response's http status
--   code.
newDeleteSchemaResponse :: Int -> DeleteSchemaResponse

-- | The status of the schema.
deleteSchemaResponse_status :: Lens' DeleteSchemaResponse (Maybe SchemaStatus)

-- | The name of the schema being deleted.
deleteSchemaResponse_schemaName :: Lens' DeleteSchemaResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schema being deleted.
deleteSchemaResponse_schemaArn :: Lens' DeleteSchemaResponse (Maybe Text)

-- | The response's http status code.
deleteSchemaResponse_httpStatus :: Lens' DeleteSchemaResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeleteSchema.DeleteSchema
instance GHC.Show.Show Network.AWS.Glue.DeleteSchema.DeleteSchema
instance GHC.Read.Read Network.AWS.Glue.DeleteSchema.DeleteSchema
instance GHC.Classes.Eq Network.AWS.Glue.DeleteSchema.DeleteSchema
instance GHC.Generics.Generic Network.AWS.Glue.DeleteSchema.DeleteSchemaResponse
instance GHC.Show.Show Network.AWS.Glue.DeleteSchema.DeleteSchemaResponse
instance GHC.Read.Read Network.AWS.Glue.DeleteSchema.DeleteSchemaResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeleteSchema.DeleteSchemaResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeleteSchema.DeleteSchema
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteSchema.DeleteSchemaResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeleteSchema.DeleteSchema
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteSchema.DeleteSchema
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeleteSchema.DeleteSchema
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeleteSchema.DeleteSchema
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeleteSchema.DeleteSchema
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeleteSchema.DeleteSchema


-- | Deletes a specified policy.
module Network.AWS.Glue.DeleteResourcePolicy

-- | <i>See:</i> <a>newDeleteResourcePolicy</a> smart constructor.
data DeleteResourcePolicy
DeleteResourcePolicy' :: Maybe Text -> Maybe Text -> DeleteResourcePolicy

-- | The hash value returned when this policy was set.
[$sel:policyHashCondition:DeleteResourcePolicy'] :: DeleteResourcePolicy -> Maybe Text

-- | The ARN of the Glue resource for the resource policy to be deleted.
[$sel:resourceArn:DeleteResourcePolicy'] :: DeleteResourcePolicy -> Maybe Text

-- | Create a value of <a>DeleteResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyHashCondition:DeleteResourcePolicy'</a>,
--   <a>deleteResourcePolicy_policyHashCondition</a> - The hash value
--   returned when this policy was set.
--   
--   <a>$sel:resourceArn:DeleteResourcePolicy'</a>,
--   <a>deleteResourcePolicy_resourceArn</a> - The ARN of the Glue resource
--   for the resource policy to be deleted.
newDeleteResourcePolicy :: DeleteResourcePolicy

-- | The hash value returned when this policy was set.
deleteResourcePolicy_policyHashCondition :: Lens' DeleteResourcePolicy (Maybe Text)

-- | The ARN of the Glue resource for the resource policy to be deleted.
deleteResourcePolicy_resourceArn :: Lens' DeleteResourcePolicy (Maybe Text)

-- | <i>See:</i> <a>newDeleteResourcePolicyResponse</a> smart constructor.
data DeleteResourcePolicyResponse
DeleteResourcePolicyResponse' :: Int -> DeleteResourcePolicyResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteResourcePolicyResponse'] :: DeleteResourcePolicyResponse -> Int

-- | Create a value of <a>DeleteResourcePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteResourcePolicyResponse'</a>,
--   <a>deleteResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newDeleteResourcePolicyResponse :: Int -> DeleteResourcePolicyResponse

-- | The response's http status code.
deleteResourcePolicyResponse_httpStatus :: Lens' DeleteResourcePolicyResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeleteResourcePolicy.DeleteResourcePolicy
instance GHC.Show.Show Network.AWS.Glue.DeleteResourcePolicy.DeleteResourcePolicy
instance GHC.Read.Read Network.AWS.Glue.DeleteResourcePolicy.DeleteResourcePolicy
instance GHC.Classes.Eq Network.AWS.Glue.DeleteResourcePolicy.DeleteResourcePolicy
instance GHC.Generics.Generic Network.AWS.Glue.DeleteResourcePolicy.DeleteResourcePolicyResponse
instance GHC.Show.Show Network.AWS.Glue.DeleteResourcePolicy.DeleteResourcePolicyResponse
instance GHC.Read.Read Network.AWS.Glue.DeleteResourcePolicy.DeleteResourcePolicyResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeleteResourcePolicy.DeleteResourcePolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeleteResourcePolicy.DeleteResourcePolicy
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteResourcePolicy.DeleteResourcePolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeleteResourcePolicy.DeleteResourcePolicy
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteResourcePolicy.DeleteResourcePolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeleteResourcePolicy.DeleteResourcePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeleteResourcePolicy.DeleteResourcePolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeleteResourcePolicy.DeleteResourcePolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeleteResourcePolicy.DeleteResourcePolicy


-- | Delete the entire registry including schema and all of its versions.
--   To get the status of the delete operation, you can call the
--   <tt>GetRegistry</tt> API after the asynchronous call. Deleting a
--   registry will deactivate all online operations for the registry such
--   as the <tt>UpdateRegistry</tt>, <tt>CreateSchema</tt>,
--   <tt>UpdateSchema</tt>, and <tt>RegisterSchemaVersion</tt> APIs.
module Network.AWS.Glue.DeleteRegistry

-- | <i>See:</i> <a>newDeleteRegistry</a> smart constructor.
data DeleteRegistry
DeleteRegistry' :: RegistryId -> DeleteRegistry

-- | This is a wrapper structure that may contain the registry name and
--   Amazon Resource Name (ARN).
[$sel:registryId:DeleteRegistry'] :: DeleteRegistry -> RegistryId

-- | Create a value of <a>DeleteRegistry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryId:DeleteRegistry'</a>,
--   <a>deleteRegistry_registryId</a> - This is a wrapper structure that
--   may contain the registry name and Amazon Resource Name (ARN).
newDeleteRegistry :: RegistryId -> DeleteRegistry

-- | This is a wrapper structure that may contain the registry name and
--   Amazon Resource Name (ARN).
deleteRegistry_registryId :: Lens' DeleteRegistry RegistryId

-- | <i>See:</i> <a>newDeleteRegistryResponse</a> smart constructor.
data DeleteRegistryResponse
DeleteRegistryResponse' :: Maybe RegistryStatus -> Maybe Text -> Maybe Text -> Int -> DeleteRegistryResponse

-- | The status of the registry. A successful operation will return the
--   <tt>Deleting</tt> status.
[$sel:status:DeleteRegistryResponse'] :: DeleteRegistryResponse -> Maybe RegistryStatus

-- | The name of the registry being deleted.
[$sel:registryName:DeleteRegistryResponse'] :: DeleteRegistryResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the registry being deleted.
[$sel:registryArn:DeleteRegistryResponse'] :: DeleteRegistryResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteRegistryResponse'] :: DeleteRegistryResponse -> Int

-- | Create a value of <a>DeleteRegistryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DeleteRegistryResponse'</a>,
--   <a>deleteRegistryResponse_status</a> - The status of the registry. A
--   successful operation will return the <tt>Deleting</tt> status.
--   
--   <a>$sel:registryName:DeleteRegistryResponse'</a>,
--   <a>deleteRegistryResponse_registryName</a> - The name of the registry
--   being deleted.
--   
--   <a>$sel:registryArn:DeleteRegistryResponse'</a>,
--   <a>deleteRegistryResponse_registryArn</a> - The Amazon Resource Name
--   (ARN) of the registry being deleted.
--   
--   <a>$sel:httpStatus:DeleteRegistryResponse'</a>,
--   <a>deleteRegistryResponse_httpStatus</a> - The response's http status
--   code.
newDeleteRegistryResponse :: Int -> DeleteRegistryResponse

-- | The status of the registry. A successful operation will return the
--   <tt>Deleting</tt> status.
deleteRegistryResponse_status :: Lens' DeleteRegistryResponse (Maybe RegistryStatus)

-- | The name of the registry being deleted.
deleteRegistryResponse_registryName :: Lens' DeleteRegistryResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the registry being deleted.
deleteRegistryResponse_registryArn :: Lens' DeleteRegistryResponse (Maybe Text)

-- | The response's http status code.
deleteRegistryResponse_httpStatus :: Lens' DeleteRegistryResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeleteRegistry.DeleteRegistry
instance GHC.Show.Show Network.AWS.Glue.DeleteRegistry.DeleteRegistry
instance GHC.Read.Read Network.AWS.Glue.DeleteRegistry.DeleteRegistry
instance GHC.Classes.Eq Network.AWS.Glue.DeleteRegistry.DeleteRegistry
instance GHC.Generics.Generic Network.AWS.Glue.DeleteRegistry.DeleteRegistryResponse
instance GHC.Show.Show Network.AWS.Glue.DeleteRegistry.DeleteRegistryResponse
instance GHC.Read.Read Network.AWS.Glue.DeleteRegistry.DeleteRegistryResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeleteRegistry.DeleteRegistryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeleteRegistry.DeleteRegistry
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteRegistry.DeleteRegistryResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeleteRegistry.DeleteRegistry
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteRegistry.DeleteRegistry
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeleteRegistry.DeleteRegistry
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeleteRegistry.DeleteRegistry
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeleteRegistry.DeleteRegistry
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeleteRegistry.DeleteRegistry


-- | Deletes a specified partition index from an existing table.
module Network.AWS.Glue.DeletePartitionIndex

-- | <i>See:</i> <a>newDeletePartitionIndex</a> smart constructor.
data DeletePartitionIndex
DeletePartitionIndex' :: Maybe Text -> Text -> Text -> Text -> DeletePartitionIndex

-- | The catalog ID where the table resides.
[$sel:catalogId:DeletePartitionIndex'] :: DeletePartitionIndex -> Maybe Text

-- | Specifies the name of a database from which you want to delete a
--   partition index.
[$sel:databaseName:DeletePartitionIndex'] :: DeletePartitionIndex -> Text

-- | Specifies the name of a table from which you want to delete a
--   partition index.
[$sel:tableName:DeletePartitionIndex'] :: DeletePartitionIndex -> Text

-- | The name of the partition index to be deleted.
[$sel:indexName:DeletePartitionIndex'] :: DeletePartitionIndex -> Text

-- | Create a value of <a>DeletePartitionIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DeletePartitionIndex'</a>,
--   <a>deletePartitionIndex_catalogId</a> - The catalog ID where the table
--   resides.
--   
--   <a>$sel:databaseName:DeletePartitionIndex'</a>,
--   <a>deletePartitionIndex_databaseName</a> - Specifies the name of a
--   database from which you want to delete a partition index.
--   
--   <a>$sel:tableName:DeletePartitionIndex'</a>,
--   <a>deletePartitionIndex_tableName</a> - Specifies the name of a table
--   from which you want to delete a partition index.
--   
--   <a>$sel:indexName:DeletePartitionIndex'</a>,
--   <a>deletePartitionIndex_indexName</a> - The name of the partition
--   index to be deleted.
newDeletePartitionIndex :: Text -> Text -> Text -> DeletePartitionIndex

-- | The catalog ID where the table resides.
deletePartitionIndex_catalogId :: Lens' DeletePartitionIndex (Maybe Text)

-- | Specifies the name of a database from which you want to delete a
--   partition index.
deletePartitionIndex_databaseName :: Lens' DeletePartitionIndex Text

-- | Specifies the name of a table from which you want to delete a
--   partition index.
deletePartitionIndex_tableName :: Lens' DeletePartitionIndex Text

-- | The name of the partition index to be deleted.
deletePartitionIndex_indexName :: Lens' DeletePartitionIndex Text

-- | <i>See:</i> <a>newDeletePartitionIndexResponse</a> smart constructor.
data DeletePartitionIndexResponse
DeletePartitionIndexResponse' :: Int -> DeletePartitionIndexResponse

-- | The response's http status code.
[$sel:httpStatus:DeletePartitionIndexResponse'] :: DeletePartitionIndexResponse -> Int

-- | Create a value of <a>DeletePartitionIndexResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeletePartitionIndexResponse'</a>,
--   <a>deletePartitionIndexResponse_httpStatus</a> - The response's http
--   status code.
newDeletePartitionIndexResponse :: Int -> DeletePartitionIndexResponse

-- | The response's http status code.
deletePartitionIndexResponse_httpStatus :: Lens' DeletePartitionIndexResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeletePartitionIndex.DeletePartitionIndex
instance GHC.Show.Show Network.AWS.Glue.DeletePartitionIndex.DeletePartitionIndex
instance GHC.Read.Read Network.AWS.Glue.DeletePartitionIndex.DeletePartitionIndex
instance GHC.Classes.Eq Network.AWS.Glue.DeletePartitionIndex.DeletePartitionIndex
instance GHC.Generics.Generic Network.AWS.Glue.DeletePartitionIndex.DeletePartitionIndexResponse
instance GHC.Show.Show Network.AWS.Glue.DeletePartitionIndex.DeletePartitionIndexResponse
instance GHC.Read.Read Network.AWS.Glue.DeletePartitionIndex.DeletePartitionIndexResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeletePartitionIndex.DeletePartitionIndexResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeletePartitionIndex.DeletePartitionIndex
instance Control.DeepSeq.NFData Network.AWS.Glue.DeletePartitionIndex.DeletePartitionIndexResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeletePartitionIndex.DeletePartitionIndex
instance Control.DeepSeq.NFData Network.AWS.Glue.DeletePartitionIndex.DeletePartitionIndex
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeletePartitionIndex.DeletePartitionIndex
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeletePartitionIndex.DeletePartitionIndex
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeletePartitionIndex.DeletePartitionIndex
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeletePartitionIndex.DeletePartitionIndex


-- | Deletes a specified partition.
module Network.AWS.Glue.DeletePartition

-- | <i>See:</i> <a>newDeletePartition</a> smart constructor.
data DeletePartition
DeletePartition' :: Maybe Text -> Text -> Text -> [Text] -> DeletePartition

-- | The ID of the Data Catalog where the partition to be deleted resides.
--   If none is provided, the Amazon Web Services account ID is used by
--   default.
[$sel:catalogId:DeletePartition'] :: DeletePartition -> Maybe Text

-- | The name of the catalog database in which the table in question
--   resides.
[$sel:databaseName:DeletePartition'] :: DeletePartition -> Text

-- | The name of the table that contains the partition to be deleted.
[$sel:tableName:DeletePartition'] :: DeletePartition -> Text

-- | The values that define the partition.
[$sel:partitionValues:DeletePartition'] :: DeletePartition -> [Text]

-- | Create a value of <a>DeletePartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DeletePartition'</a>,
--   <a>deletePartition_catalogId</a> - The ID of the Data Catalog where
--   the partition to be deleted resides. If none is provided, the Amazon
--   Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:DeletePartition'</a>,
--   <a>deletePartition_databaseName</a> - The name of the catalog database
--   in which the table in question resides.
--   
--   <a>$sel:tableName:DeletePartition'</a>,
--   <a>deletePartition_tableName</a> - The name of the table that contains
--   the partition to be deleted.
--   
--   <a>$sel:partitionValues:DeletePartition'</a>,
--   <a>deletePartition_partitionValues</a> - The values that define the
--   partition.
newDeletePartition :: Text -> Text -> DeletePartition

-- | The ID of the Data Catalog where the partition to be deleted resides.
--   If none is provided, the Amazon Web Services account ID is used by
--   default.
deletePartition_catalogId :: Lens' DeletePartition (Maybe Text)

-- | The name of the catalog database in which the table in question
--   resides.
deletePartition_databaseName :: Lens' DeletePartition Text

-- | The name of the table that contains the partition to be deleted.
deletePartition_tableName :: Lens' DeletePartition Text

-- | The values that define the partition.
deletePartition_partitionValues :: Lens' DeletePartition [Text]

-- | <i>See:</i> <a>newDeletePartitionResponse</a> smart constructor.
data DeletePartitionResponse
DeletePartitionResponse' :: Int -> DeletePartitionResponse

-- | The response's http status code.
[$sel:httpStatus:DeletePartitionResponse'] :: DeletePartitionResponse -> Int

-- | Create a value of <a>DeletePartitionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeletePartitionResponse'</a>,
--   <a>deletePartitionResponse_httpStatus</a> - The response's http status
--   code.
newDeletePartitionResponse :: Int -> DeletePartitionResponse

-- | The response's http status code.
deletePartitionResponse_httpStatus :: Lens' DeletePartitionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeletePartition.DeletePartition
instance GHC.Show.Show Network.AWS.Glue.DeletePartition.DeletePartition
instance GHC.Read.Read Network.AWS.Glue.DeletePartition.DeletePartition
instance GHC.Classes.Eq Network.AWS.Glue.DeletePartition.DeletePartition
instance GHC.Generics.Generic Network.AWS.Glue.DeletePartition.DeletePartitionResponse
instance GHC.Show.Show Network.AWS.Glue.DeletePartition.DeletePartitionResponse
instance GHC.Read.Read Network.AWS.Glue.DeletePartition.DeletePartitionResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeletePartition.DeletePartitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeletePartition.DeletePartition
instance Control.DeepSeq.NFData Network.AWS.Glue.DeletePartition.DeletePartitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeletePartition.DeletePartition
instance Control.DeepSeq.NFData Network.AWS.Glue.DeletePartition.DeletePartition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeletePartition.DeletePartition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeletePartition.DeletePartition
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeletePartition.DeletePartition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeletePartition.DeletePartition


-- | Deletes an Glue machine learning transform. Machine learning
--   transforms are a special type of transform that use machine learning
--   to learn the details of the transformation to be performed by learning
--   from examples provided by humans. These transformations are then saved
--   by Glue. If you no longer need a transform, you can delete it by
--   calling <tt>DeleteMLTransforms</tt>. However, any Glue jobs that still
--   reference the deleted transform will no longer succeed.
module Network.AWS.Glue.DeleteMLTransform

-- | <i>See:</i> <a>newDeleteMLTransform</a> smart constructor.
data DeleteMLTransform
DeleteMLTransform' :: Text -> DeleteMLTransform

-- | The unique identifier of the transform to delete.
[$sel:transformId:DeleteMLTransform'] :: DeleteMLTransform -> Text

-- | Create a value of <a>DeleteMLTransform</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transformId:DeleteMLTransform'</a>,
--   <a>deleteMLTransform_transformId</a> - The unique identifier of the
--   transform to delete.
newDeleteMLTransform :: Text -> DeleteMLTransform

-- | The unique identifier of the transform to delete.
deleteMLTransform_transformId :: Lens' DeleteMLTransform Text

-- | <i>See:</i> <a>newDeleteMLTransformResponse</a> smart constructor.
data DeleteMLTransformResponse
DeleteMLTransformResponse' :: Maybe Text -> Int -> DeleteMLTransformResponse

-- | The unique identifier of the transform that was deleted.
[$sel:transformId:DeleteMLTransformResponse'] :: DeleteMLTransformResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteMLTransformResponse'] :: DeleteMLTransformResponse -> Int

-- | Create a value of <a>DeleteMLTransformResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transformId:DeleteMLTransform'</a>,
--   <a>deleteMLTransformResponse_transformId</a> - The unique identifier
--   of the transform that was deleted.
--   
--   <a>$sel:httpStatus:DeleteMLTransformResponse'</a>,
--   <a>deleteMLTransformResponse_httpStatus</a> - The response's http
--   status code.
newDeleteMLTransformResponse :: Int -> DeleteMLTransformResponse

-- | The unique identifier of the transform that was deleted.
deleteMLTransformResponse_transformId :: Lens' DeleteMLTransformResponse (Maybe Text)

-- | The response's http status code.
deleteMLTransformResponse_httpStatus :: Lens' DeleteMLTransformResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeleteMLTransform.DeleteMLTransform
instance GHC.Show.Show Network.AWS.Glue.DeleteMLTransform.DeleteMLTransform
instance GHC.Read.Read Network.AWS.Glue.DeleteMLTransform.DeleteMLTransform
instance GHC.Classes.Eq Network.AWS.Glue.DeleteMLTransform.DeleteMLTransform
instance GHC.Generics.Generic Network.AWS.Glue.DeleteMLTransform.DeleteMLTransformResponse
instance GHC.Show.Show Network.AWS.Glue.DeleteMLTransform.DeleteMLTransformResponse
instance GHC.Read.Read Network.AWS.Glue.DeleteMLTransform.DeleteMLTransformResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeleteMLTransform.DeleteMLTransformResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeleteMLTransform.DeleteMLTransform
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteMLTransform.DeleteMLTransformResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeleteMLTransform.DeleteMLTransform
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteMLTransform.DeleteMLTransform
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeleteMLTransform.DeleteMLTransform
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeleteMLTransform.DeleteMLTransform
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeleteMLTransform.DeleteMLTransform
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeleteMLTransform.DeleteMLTransform


-- | Deletes a specified job definition. If the job definition is not
--   found, no exception is thrown.
module Network.AWS.Glue.DeleteJob

-- | <i>See:</i> <a>newDeleteJob</a> smart constructor.
data DeleteJob
DeleteJob' :: Text -> DeleteJob

-- | The name of the job definition to delete.
[$sel:jobName:DeleteJob'] :: DeleteJob -> Text

-- | Create a value of <a>DeleteJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:DeleteJob'</a>, <a>deleteJob_jobName</a> - The name of
--   the job definition to delete.
newDeleteJob :: Text -> DeleteJob

-- | The name of the job definition to delete.
deleteJob_jobName :: Lens' DeleteJob Text

-- | <i>See:</i> <a>newDeleteJobResponse</a> smart constructor.
data DeleteJobResponse
DeleteJobResponse' :: Maybe Text -> Int -> DeleteJobResponse

-- | The name of the job definition that was deleted.
[$sel:jobName:DeleteJobResponse'] :: DeleteJobResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteJobResponse'] :: DeleteJobResponse -> Int

-- | Create a value of <a>DeleteJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:DeleteJob'</a>, <a>deleteJobResponse_jobName</a> - The
--   name of the job definition that was deleted.
--   
--   <a>$sel:httpStatus:DeleteJobResponse'</a>,
--   <a>deleteJobResponse_httpStatus</a> - The response's http status code.
newDeleteJobResponse :: Int -> DeleteJobResponse

-- | The name of the job definition that was deleted.
deleteJobResponse_jobName :: Lens' DeleteJobResponse (Maybe Text)

-- | The response's http status code.
deleteJobResponse_httpStatus :: Lens' DeleteJobResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeleteJob.DeleteJob
instance GHC.Show.Show Network.AWS.Glue.DeleteJob.DeleteJob
instance GHC.Read.Read Network.AWS.Glue.DeleteJob.DeleteJob
instance GHC.Classes.Eq Network.AWS.Glue.DeleteJob.DeleteJob
instance GHC.Generics.Generic Network.AWS.Glue.DeleteJob.DeleteJobResponse
instance GHC.Show.Show Network.AWS.Glue.DeleteJob.DeleteJobResponse
instance GHC.Read.Read Network.AWS.Glue.DeleteJob.DeleteJobResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeleteJob.DeleteJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeleteJob.DeleteJob
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteJob.DeleteJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeleteJob.DeleteJob
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteJob.DeleteJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeleteJob.DeleteJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeleteJob.DeleteJob
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeleteJob.DeleteJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeleteJob.DeleteJob


-- | Deletes a specified development endpoint.
module Network.AWS.Glue.DeleteDevEndpoint

-- | <i>See:</i> <a>newDeleteDevEndpoint</a> smart constructor.
data DeleteDevEndpoint
DeleteDevEndpoint' :: Text -> DeleteDevEndpoint

-- | The name of the <tt>DevEndpoint</tt>.
[$sel:endpointName:DeleteDevEndpoint'] :: DeleteDevEndpoint -> Text

-- | Create a value of <a>DeleteDevEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpointName:DeleteDevEndpoint'</a>,
--   <a>deleteDevEndpoint_endpointName</a> - The name of the
--   <tt>DevEndpoint</tt>.
newDeleteDevEndpoint :: Text -> DeleteDevEndpoint

-- | The name of the <tt>DevEndpoint</tt>.
deleteDevEndpoint_endpointName :: Lens' DeleteDevEndpoint Text

-- | <i>See:</i> <a>newDeleteDevEndpointResponse</a> smart constructor.
data DeleteDevEndpointResponse
DeleteDevEndpointResponse' :: Int -> DeleteDevEndpointResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteDevEndpointResponse'] :: DeleteDevEndpointResponse -> Int

-- | Create a value of <a>DeleteDevEndpointResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDevEndpointResponse'</a>,
--   <a>deleteDevEndpointResponse_httpStatus</a> - The response's http
--   status code.
newDeleteDevEndpointResponse :: Int -> DeleteDevEndpointResponse

-- | The response's http status code.
deleteDevEndpointResponse_httpStatus :: Lens' DeleteDevEndpointResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeleteDevEndpoint.DeleteDevEndpoint
instance GHC.Show.Show Network.AWS.Glue.DeleteDevEndpoint.DeleteDevEndpoint
instance GHC.Read.Read Network.AWS.Glue.DeleteDevEndpoint.DeleteDevEndpoint
instance GHC.Classes.Eq Network.AWS.Glue.DeleteDevEndpoint.DeleteDevEndpoint
instance GHC.Generics.Generic Network.AWS.Glue.DeleteDevEndpoint.DeleteDevEndpointResponse
instance GHC.Show.Show Network.AWS.Glue.DeleteDevEndpoint.DeleteDevEndpointResponse
instance GHC.Read.Read Network.AWS.Glue.DeleteDevEndpoint.DeleteDevEndpointResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeleteDevEndpoint.DeleteDevEndpointResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeleteDevEndpoint.DeleteDevEndpoint
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteDevEndpoint.DeleteDevEndpointResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeleteDevEndpoint.DeleteDevEndpoint
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteDevEndpoint.DeleteDevEndpoint
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeleteDevEndpoint.DeleteDevEndpoint
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeleteDevEndpoint.DeleteDevEndpoint
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeleteDevEndpoint.DeleteDevEndpoint
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeleteDevEndpoint.DeleteDevEndpoint


-- | Removes a specified database from a Data Catalog.
--   
--   After completing this operation, you no longer have access to the
--   tables (and all table versions and partitions that might belong to the
--   tables) and the user-defined functions in the deleted database. Glue
--   deletes these "orphaned" resources asynchronously in a timely manner,
--   at the discretion of the service.
--   
--   To ensure the immediate deletion of all related resources, before
--   calling <tt>DeleteDatabase</tt>, use <tt>DeleteTableVersion</tt> or
--   <tt>BatchDeleteTableVersion</tt>, <tt>DeletePartition</tt> or
--   <tt>BatchDeletePartition</tt>, <tt>DeleteUserDefinedFunction</tt>, and
--   <tt>DeleteTable</tt> or <tt>BatchDeleteTable</tt>, to delete any
--   resources that belong to the database.
module Network.AWS.Glue.DeleteDatabase

-- | <i>See:</i> <a>newDeleteDatabase</a> smart constructor.
data DeleteDatabase
DeleteDatabase' :: Maybe Text -> Text -> DeleteDatabase

-- | The ID of the Data Catalog in which the database resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
[$sel:catalogId:DeleteDatabase'] :: DeleteDatabase -> Maybe Text

-- | The name of the database to delete. For Hive compatibility, this must
--   be all lowercase.
[$sel:name:DeleteDatabase'] :: DeleteDatabase -> Text

-- | Create a value of <a>DeleteDatabase</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DeleteDatabase'</a>, <a>deleteDatabase_catalogId</a>
--   - The ID of the Data Catalog in which the database resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:name:DeleteDatabase'</a>, <a>deleteDatabase_name</a> - The
--   name of the database to delete. For Hive compatibility, this must be
--   all lowercase.
newDeleteDatabase :: Text -> DeleteDatabase

-- | The ID of the Data Catalog in which the database resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
deleteDatabase_catalogId :: Lens' DeleteDatabase (Maybe Text)

-- | The name of the database to delete. For Hive compatibility, this must
--   be all lowercase.
deleteDatabase_name :: Lens' DeleteDatabase Text

-- | <i>See:</i> <a>newDeleteDatabaseResponse</a> smart constructor.
data DeleteDatabaseResponse
DeleteDatabaseResponse' :: Int -> DeleteDatabaseResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteDatabaseResponse'] :: DeleteDatabaseResponse -> Int

-- | Create a value of <a>DeleteDatabaseResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDatabaseResponse'</a>,
--   <a>deleteDatabaseResponse_httpStatus</a> - The response's http status
--   code.
newDeleteDatabaseResponse :: Int -> DeleteDatabaseResponse

-- | The response's http status code.
deleteDatabaseResponse_httpStatus :: Lens' DeleteDatabaseResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeleteDatabase.DeleteDatabase
instance GHC.Show.Show Network.AWS.Glue.DeleteDatabase.DeleteDatabase
instance GHC.Read.Read Network.AWS.Glue.DeleteDatabase.DeleteDatabase
instance GHC.Classes.Eq Network.AWS.Glue.DeleteDatabase.DeleteDatabase
instance GHC.Generics.Generic Network.AWS.Glue.DeleteDatabase.DeleteDatabaseResponse
instance GHC.Show.Show Network.AWS.Glue.DeleteDatabase.DeleteDatabaseResponse
instance GHC.Read.Read Network.AWS.Glue.DeleteDatabase.DeleteDatabaseResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeleteDatabase.DeleteDatabaseResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeleteDatabase.DeleteDatabase
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteDatabase.DeleteDatabaseResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeleteDatabase.DeleteDatabase
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteDatabase.DeleteDatabase
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeleteDatabase.DeleteDatabase
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeleteDatabase.DeleteDatabase
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeleteDatabase.DeleteDatabase
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeleteDatabase.DeleteDatabase


-- | Removes a specified crawler from the Glue Data Catalog, unless the
--   crawler state is <tt>RUNNING</tt>.
module Network.AWS.Glue.DeleteCrawler

-- | <i>See:</i> <a>newDeleteCrawler</a> smart constructor.
data DeleteCrawler
DeleteCrawler' :: Text -> DeleteCrawler

-- | The name of the crawler to remove.
[$sel:name:DeleteCrawler'] :: DeleteCrawler -> Text

-- | Create a value of <a>DeleteCrawler</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteCrawler'</a>, <a>deleteCrawler_name</a> - The name
--   of the crawler to remove.
newDeleteCrawler :: Text -> DeleteCrawler

-- | The name of the crawler to remove.
deleteCrawler_name :: Lens' DeleteCrawler Text

-- | <i>See:</i> <a>newDeleteCrawlerResponse</a> smart constructor.
data DeleteCrawlerResponse
DeleteCrawlerResponse' :: Int -> DeleteCrawlerResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteCrawlerResponse'] :: DeleteCrawlerResponse -> Int

-- | Create a value of <a>DeleteCrawlerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteCrawlerResponse'</a>,
--   <a>deleteCrawlerResponse_httpStatus</a> - The response's http status
--   code.
newDeleteCrawlerResponse :: Int -> DeleteCrawlerResponse

-- | The response's http status code.
deleteCrawlerResponse_httpStatus :: Lens' DeleteCrawlerResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeleteCrawler.DeleteCrawler
instance GHC.Show.Show Network.AWS.Glue.DeleteCrawler.DeleteCrawler
instance GHC.Read.Read Network.AWS.Glue.DeleteCrawler.DeleteCrawler
instance GHC.Classes.Eq Network.AWS.Glue.DeleteCrawler.DeleteCrawler
instance GHC.Generics.Generic Network.AWS.Glue.DeleteCrawler.DeleteCrawlerResponse
instance GHC.Show.Show Network.AWS.Glue.DeleteCrawler.DeleteCrawlerResponse
instance GHC.Read.Read Network.AWS.Glue.DeleteCrawler.DeleteCrawlerResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeleteCrawler.DeleteCrawlerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeleteCrawler.DeleteCrawler
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteCrawler.DeleteCrawlerResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeleteCrawler.DeleteCrawler
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteCrawler.DeleteCrawler
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeleteCrawler.DeleteCrawler
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeleteCrawler.DeleteCrawler
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeleteCrawler.DeleteCrawler
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeleteCrawler.DeleteCrawler


-- | Deletes a connection from the Data Catalog.
module Network.AWS.Glue.DeleteConnection

-- | <i>See:</i> <a>newDeleteConnection</a> smart constructor.
data DeleteConnection
DeleteConnection' :: Maybe Text -> Text -> DeleteConnection

-- | The ID of the Data Catalog in which the connection resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
[$sel:catalogId:DeleteConnection'] :: DeleteConnection -> Maybe Text

-- | The name of the connection to delete.
[$sel:connectionName:DeleteConnection'] :: DeleteConnection -> Text

-- | Create a value of <a>DeleteConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DeleteConnection'</a>,
--   <a>deleteConnection_catalogId</a> - The ID of the Data Catalog in
--   which the connection resides. If none is provided, the Amazon Web
--   Services account ID is used by default.
--   
--   <a>$sel:connectionName:DeleteConnection'</a>,
--   <a>deleteConnection_connectionName</a> - The name of the connection to
--   delete.
newDeleteConnection :: Text -> DeleteConnection

-- | The ID of the Data Catalog in which the connection resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
deleteConnection_catalogId :: Lens' DeleteConnection (Maybe Text)

-- | The name of the connection to delete.
deleteConnection_connectionName :: Lens' DeleteConnection Text

-- | <i>See:</i> <a>newDeleteConnectionResponse</a> smart constructor.
data DeleteConnectionResponse
DeleteConnectionResponse' :: Int -> DeleteConnectionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteConnectionResponse'] :: DeleteConnectionResponse -> Int

-- | Create a value of <a>DeleteConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteConnectionResponse'</a>,
--   <a>deleteConnectionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteConnectionResponse :: Int -> DeleteConnectionResponse

-- | The response's http status code.
deleteConnectionResponse_httpStatus :: Lens' DeleteConnectionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeleteConnection.DeleteConnection
instance GHC.Show.Show Network.AWS.Glue.DeleteConnection.DeleteConnection
instance GHC.Read.Read Network.AWS.Glue.DeleteConnection.DeleteConnection
instance GHC.Classes.Eq Network.AWS.Glue.DeleteConnection.DeleteConnection
instance GHC.Generics.Generic Network.AWS.Glue.DeleteConnection.DeleteConnectionResponse
instance GHC.Show.Show Network.AWS.Glue.DeleteConnection.DeleteConnectionResponse
instance GHC.Read.Read Network.AWS.Glue.DeleteConnection.DeleteConnectionResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeleteConnection.DeleteConnectionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeleteConnection.DeleteConnection
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteConnection.DeleteConnectionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeleteConnection.DeleteConnection
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteConnection.DeleteConnection
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeleteConnection.DeleteConnection
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeleteConnection.DeleteConnection
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeleteConnection.DeleteConnection
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeleteConnection.DeleteConnection


-- | Retrieves table statistics of columns.
--   
--   The Identity and Access Management (IAM) permission required for this
--   operation is <tt>DeleteTable</tt>.
module Network.AWS.Glue.DeleteColumnStatisticsForTable

-- | <i>See:</i> <a>newDeleteColumnStatisticsForTable</a> smart
--   constructor.
data DeleteColumnStatisticsForTable
DeleteColumnStatisticsForTable' :: Maybe Text -> Text -> Text -> Text -> DeleteColumnStatisticsForTable

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
[$sel:catalogId:DeleteColumnStatisticsForTable'] :: DeleteColumnStatisticsForTable -> Maybe Text

-- | The name of the catalog database where the partitions reside.
[$sel:databaseName:DeleteColumnStatisticsForTable'] :: DeleteColumnStatisticsForTable -> Text

-- | The name of the partitions' table.
[$sel:tableName:DeleteColumnStatisticsForTable'] :: DeleteColumnStatisticsForTable -> Text

-- | The name of the column.
[$sel:columnName:DeleteColumnStatisticsForTable'] :: DeleteColumnStatisticsForTable -> Text

-- | Create a value of <a>DeleteColumnStatisticsForTable</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DeleteColumnStatisticsForTable'</a>,
--   <a>deleteColumnStatisticsForTable_catalogId</a> - The ID of the Data
--   Catalog where the partitions in question reside. If none is supplied,
--   the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:DeleteColumnStatisticsForTable'</a>,
--   <a>deleteColumnStatisticsForTable_databaseName</a> - The name of the
--   catalog database where the partitions reside.
--   
--   <a>$sel:tableName:DeleteColumnStatisticsForTable'</a>,
--   <a>deleteColumnStatisticsForTable_tableName</a> - The name of the
--   partitions' table.
--   
--   <a>$sel:columnName:DeleteColumnStatisticsForTable'</a>,
--   <a>deleteColumnStatisticsForTable_columnName</a> - The name of the
--   column.
newDeleteColumnStatisticsForTable :: Text -> Text -> Text -> DeleteColumnStatisticsForTable

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
deleteColumnStatisticsForTable_catalogId :: Lens' DeleteColumnStatisticsForTable (Maybe Text)

-- | The name of the catalog database where the partitions reside.
deleteColumnStatisticsForTable_databaseName :: Lens' DeleteColumnStatisticsForTable Text

-- | The name of the partitions' table.
deleteColumnStatisticsForTable_tableName :: Lens' DeleteColumnStatisticsForTable Text

-- | The name of the column.
deleteColumnStatisticsForTable_columnName :: Lens' DeleteColumnStatisticsForTable Text

-- | <i>See:</i> <a>newDeleteColumnStatisticsForTableResponse</a> smart
--   constructor.
data DeleteColumnStatisticsForTableResponse
DeleteColumnStatisticsForTableResponse' :: Int -> DeleteColumnStatisticsForTableResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteColumnStatisticsForTableResponse'] :: DeleteColumnStatisticsForTableResponse -> Int

-- | Create a value of <a>DeleteColumnStatisticsForTableResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteColumnStatisticsForTableResponse'</a>,
--   <a>deleteColumnStatisticsForTableResponse_httpStatus</a> - The
--   response's http status code.
newDeleteColumnStatisticsForTableResponse :: Int -> DeleteColumnStatisticsForTableResponse

-- | The response's http status code.
deleteColumnStatisticsForTableResponse_httpStatus :: Lens' DeleteColumnStatisticsForTableResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeleteColumnStatisticsForTable.DeleteColumnStatisticsForTable
instance GHC.Show.Show Network.AWS.Glue.DeleteColumnStatisticsForTable.DeleteColumnStatisticsForTable
instance GHC.Read.Read Network.AWS.Glue.DeleteColumnStatisticsForTable.DeleteColumnStatisticsForTable
instance GHC.Classes.Eq Network.AWS.Glue.DeleteColumnStatisticsForTable.DeleteColumnStatisticsForTable
instance GHC.Generics.Generic Network.AWS.Glue.DeleteColumnStatisticsForTable.DeleteColumnStatisticsForTableResponse
instance GHC.Show.Show Network.AWS.Glue.DeleteColumnStatisticsForTable.DeleteColumnStatisticsForTableResponse
instance GHC.Read.Read Network.AWS.Glue.DeleteColumnStatisticsForTable.DeleteColumnStatisticsForTableResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeleteColumnStatisticsForTable.DeleteColumnStatisticsForTableResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeleteColumnStatisticsForTable.DeleteColumnStatisticsForTable
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteColumnStatisticsForTable.DeleteColumnStatisticsForTableResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeleteColumnStatisticsForTable.DeleteColumnStatisticsForTable
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteColumnStatisticsForTable.DeleteColumnStatisticsForTable
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeleteColumnStatisticsForTable.DeleteColumnStatisticsForTable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeleteColumnStatisticsForTable.DeleteColumnStatisticsForTable
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeleteColumnStatisticsForTable.DeleteColumnStatisticsForTable
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeleteColumnStatisticsForTable.DeleteColumnStatisticsForTable


-- | Delete the partition column statistics of a column.
--   
--   The Identity and Access Management (IAM) permission required for this
--   operation is <tt>DeletePartition</tt>.
module Network.AWS.Glue.DeleteColumnStatisticsForPartition

-- | <i>See:</i> <a>newDeleteColumnStatisticsForPartition</a> smart
--   constructor.
data DeleteColumnStatisticsForPartition
DeleteColumnStatisticsForPartition' :: Maybe Text -> Text -> Text -> [Text] -> Text -> DeleteColumnStatisticsForPartition

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
[$sel:catalogId:DeleteColumnStatisticsForPartition'] :: DeleteColumnStatisticsForPartition -> Maybe Text

-- | The name of the catalog database where the partitions reside.
[$sel:databaseName:DeleteColumnStatisticsForPartition'] :: DeleteColumnStatisticsForPartition -> Text

-- | The name of the partitions' table.
[$sel:tableName:DeleteColumnStatisticsForPartition'] :: DeleteColumnStatisticsForPartition -> Text

-- | A list of partition values identifying the partition.
[$sel:partitionValues:DeleteColumnStatisticsForPartition'] :: DeleteColumnStatisticsForPartition -> [Text]

-- | Name of the column.
[$sel:columnName:DeleteColumnStatisticsForPartition'] :: DeleteColumnStatisticsForPartition -> Text

-- | Create a value of <a>DeleteColumnStatisticsForPartition</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DeleteColumnStatisticsForPartition'</a>,
--   <a>deleteColumnStatisticsForPartition_catalogId</a> - The ID of the
--   Data Catalog where the partitions in question reside. If none is
--   supplied, the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:DeleteColumnStatisticsForPartition'</a>,
--   <a>deleteColumnStatisticsForPartition_databaseName</a> - The name of
--   the catalog database where the partitions reside.
--   
--   <a>$sel:tableName:DeleteColumnStatisticsForPartition'</a>,
--   <a>deleteColumnStatisticsForPartition_tableName</a> - The name of the
--   partitions' table.
--   
--   <a>$sel:partitionValues:DeleteColumnStatisticsForPartition'</a>,
--   <a>deleteColumnStatisticsForPartition_partitionValues</a> - A list of
--   partition values identifying the partition.
--   
--   <a>$sel:columnName:DeleteColumnStatisticsForPartition'</a>,
--   <a>deleteColumnStatisticsForPartition_columnName</a> - Name of the
--   column.
newDeleteColumnStatisticsForPartition :: Text -> Text -> Text -> DeleteColumnStatisticsForPartition

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
deleteColumnStatisticsForPartition_catalogId :: Lens' DeleteColumnStatisticsForPartition (Maybe Text)

-- | The name of the catalog database where the partitions reside.
deleteColumnStatisticsForPartition_databaseName :: Lens' DeleteColumnStatisticsForPartition Text

-- | The name of the partitions' table.
deleteColumnStatisticsForPartition_tableName :: Lens' DeleteColumnStatisticsForPartition Text

-- | A list of partition values identifying the partition.
deleteColumnStatisticsForPartition_partitionValues :: Lens' DeleteColumnStatisticsForPartition [Text]

-- | Name of the column.
deleteColumnStatisticsForPartition_columnName :: Lens' DeleteColumnStatisticsForPartition Text

-- | <i>See:</i> <a>newDeleteColumnStatisticsForPartitionResponse</a> smart
--   constructor.
data DeleteColumnStatisticsForPartitionResponse
DeleteColumnStatisticsForPartitionResponse' :: Int -> DeleteColumnStatisticsForPartitionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteColumnStatisticsForPartitionResponse'] :: DeleteColumnStatisticsForPartitionResponse -> Int

-- | Create a value of <a>DeleteColumnStatisticsForPartitionResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteColumnStatisticsForPartitionResponse'</a>,
--   <a>deleteColumnStatisticsForPartitionResponse_httpStatus</a> - The
--   response's http status code.
newDeleteColumnStatisticsForPartitionResponse :: Int -> DeleteColumnStatisticsForPartitionResponse

-- | The response's http status code.
deleteColumnStatisticsForPartitionResponse_httpStatus :: Lens' DeleteColumnStatisticsForPartitionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeleteColumnStatisticsForPartition.DeleteColumnStatisticsForPartition
instance GHC.Show.Show Network.AWS.Glue.DeleteColumnStatisticsForPartition.DeleteColumnStatisticsForPartition
instance GHC.Read.Read Network.AWS.Glue.DeleteColumnStatisticsForPartition.DeleteColumnStatisticsForPartition
instance GHC.Classes.Eq Network.AWS.Glue.DeleteColumnStatisticsForPartition.DeleteColumnStatisticsForPartition
instance GHC.Generics.Generic Network.AWS.Glue.DeleteColumnStatisticsForPartition.DeleteColumnStatisticsForPartitionResponse
instance GHC.Show.Show Network.AWS.Glue.DeleteColumnStatisticsForPartition.DeleteColumnStatisticsForPartitionResponse
instance GHC.Read.Read Network.AWS.Glue.DeleteColumnStatisticsForPartition.DeleteColumnStatisticsForPartitionResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeleteColumnStatisticsForPartition.DeleteColumnStatisticsForPartitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeleteColumnStatisticsForPartition.DeleteColumnStatisticsForPartition
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteColumnStatisticsForPartition.DeleteColumnStatisticsForPartitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeleteColumnStatisticsForPartition.DeleteColumnStatisticsForPartition
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteColumnStatisticsForPartition.DeleteColumnStatisticsForPartition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeleteColumnStatisticsForPartition.DeleteColumnStatisticsForPartition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeleteColumnStatisticsForPartition.DeleteColumnStatisticsForPartition
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeleteColumnStatisticsForPartition.DeleteColumnStatisticsForPartition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeleteColumnStatisticsForPartition.DeleteColumnStatisticsForPartition


-- | Removes a classifier from the Data Catalog.
module Network.AWS.Glue.DeleteClassifier

-- | <i>See:</i> <a>newDeleteClassifier</a> smart constructor.
data DeleteClassifier
DeleteClassifier' :: Text -> DeleteClassifier

-- | Name of the classifier to remove.
[$sel:name:DeleteClassifier'] :: DeleteClassifier -> Text

-- | Create a value of <a>DeleteClassifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteClassifier'</a>, <a>deleteClassifier_name</a> -
--   Name of the classifier to remove.
newDeleteClassifier :: Text -> DeleteClassifier

-- | Name of the classifier to remove.
deleteClassifier_name :: Lens' DeleteClassifier Text

-- | <i>See:</i> <a>newDeleteClassifierResponse</a> smart constructor.
data DeleteClassifierResponse
DeleteClassifierResponse' :: Int -> DeleteClassifierResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteClassifierResponse'] :: DeleteClassifierResponse -> Int

-- | Create a value of <a>DeleteClassifierResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteClassifierResponse'</a>,
--   <a>deleteClassifierResponse_httpStatus</a> - The response's http
--   status code.
newDeleteClassifierResponse :: Int -> DeleteClassifierResponse

-- | The response's http status code.
deleteClassifierResponse_httpStatus :: Lens' DeleteClassifierResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeleteClassifier.DeleteClassifier
instance GHC.Show.Show Network.AWS.Glue.DeleteClassifier.DeleteClassifier
instance GHC.Read.Read Network.AWS.Glue.DeleteClassifier.DeleteClassifier
instance GHC.Classes.Eq Network.AWS.Glue.DeleteClassifier.DeleteClassifier
instance GHC.Generics.Generic Network.AWS.Glue.DeleteClassifier.DeleteClassifierResponse
instance GHC.Show.Show Network.AWS.Glue.DeleteClassifier.DeleteClassifierResponse
instance GHC.Read.Read Network.AWS.Glue.DeleteClassifier.DeleteClassifierResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeleteClassifier.DeleteClassifierResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeleteClassifier.DeleteClassifier
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteClassifier.DeleteClassifierResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeleteClassifier.DeleteClassifier
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteClassifier.DeleteClassifier
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeleteClassifier.DeleteClassifier
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeleteClassifier.DeleteClassifier
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeleteClassifier.DeleteClassifier
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeleteClassifier.DeleteClassifier


-- | Deletes an existing blueprint.
module Network.AWS.Glue.DeleteBlueprint

-- | <i>See:</i> <a>newDeleteBlueprint</a> smart constructor.
data DeleteBlueprint
DeleteBlueprint' :: Text -> DeleteBlueprint

-- | The name of the blueprint to delete.
[$sel:name:DeleteBlueprint'] :: DeleteBlueprint -> Text

-- | Create a value of <a>DeleteBlueprint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteBlueprint'</a>, <a>deleteBlueprint_name</a> - The
--   name of the blueprint to delete.
newDeleteBlueprint :: Text -> DeleteBlueprint

-- | The name of the blueprint to delete.
deleteBlueprint_name :: Lens' DeleteBlueprint Text

-- | <i>See:</i> <a>newDeleteBlueprintResponse</a> smart constructor.
data DeleteBlueprintResponse
DeleteBlueprintResponse' :: Maybe Text -> Int -> DeleteBlueprintResponse

-- | Returns the name of the blueprint that was deleted.
[$sel:name:DeleteBlueprintResponse'] :: DeleteBlueprintResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteBlueprintResponse'] :: DeleteBlueprintResponse -> Int

-- | Create a value of <a>DeleteBlueprintResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteBlueprint'</a>, <a>deleteBlueprintResponse_name</a>
--   - Returns the name of the blueprint that was deleted.
--   
--   <a>$sel:httpStatus:DeleteBlueprintResponse'</a>,
--   <a>deleteBlueprintResponse_httpStatus</a> - The response's http status
--   code.
newDeleteBlueprintResponse :: Int -> DeleteBlueprintResponse

-- | Returns the name of the blueprint that was deleted.
deleteBlueprintResponse_name :: Lens' DeleteBlueprintResponse (Maybe Text)

-- | The response's http status code.
deleteBlueprintResponse_httpStatus :: Lens' DeleteBlueprintResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.DeleteBlueprint.DeleteBlueprint
instance GHC.Show.Show Network.AWS.Glue.DeleteBlueprint.DeleteBlueprint
instance GHC.Read.Read Network.AWS.Glue.DeleteBlueprint.DeleteBlueprint
instance GHC.Classes.Eq Network.AWS.Glue.DeleteBlueprint.DeleteBlueprint
instance GHC.Generics.Generic Network.AWS.Glue.DeleteBlueprint.DeleteBlueprintResponse
instance GHC.Show.Show Network.AWS.Glue.DeleteBlueprint.DeleteBlueprintResponse
instance GHC.Read.Read Network.AWS.Glue.DeleteBlueprint.DeleteBlueprintResponse
instance GHC.Classes.Eq Network.AWS.Glue.DeleteBlueprint.DeleteBlueprintResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.DeleteBlueprint.DeleteBlueprint
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteBlueprint.DeleteBlueprintResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.DeleteBlueprint.DeleteBlueprint
instance Control.DeepSeq.NFData Network.AWS.Glue.DeleteBlueprint.DeleteBlueprint
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.DeleteBlueprint.DeleteBlueprint
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.DeleteBlueprint.DeleteBlueprint
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.DeleteBlueprint.DeleteBlueprint
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.DeleteBlueprint.DeleteBlueprint


-- | Creates a new workflow.
module Network.AWS.Glue.CreateWorkflow

-- | <i>See:</i> <a>newCreateWorkflow</a> smart constructor.
data CreateWorkflow
CreateWorkflow' :: Maybe Int -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> CreateWorkflow

-- | You can use this parameter to prevent unwanted multiple updates to
--   data, to control costs, or in some cases, to prevent exceeding the
--   maximum number of concurrent runs of any of the component jobs. If you
--   leave this parameter blank, there is no limit to the number of
--   concurrent workflow runs.
[$sel:maxConcurrentRuns:CreateWorkflow'] :: CreateWorkflow -> Maybe Int

-- | A collection of properties to be used as part of each execution of the
--   workflow.
[$sel:defaultRunProperties:CreateWorkflow'] :: CreateWorkflow -> Maybe (HashMap Text Text)

-- | A description of the workflow.
[$sel:description:CreateWorkflow'] :: CreateWorkflow -> Maybe Text

-- | The tags to be used with this workflow.
[$sel:tags:CreateWorkflow'] :: CreateWorkflow -> Maybe (HashMap Text Text)

-- | The name to be assigned to the workflow. It should be unique within
--   your account.
[$sel:name:CreateWorkflow'] :: CreateWorkflow -> Text

-- | Create a value of <a>CreateWorkflow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxConcurrentRuns:CreateWorkflow'</a>,
--   <a>createWorkflow_maxConcurrentRuns</a> - You can use this parameter
--   to prevent unwanted multiple updates to data, to control costs, or in
--   some cases, to prevent exceeding the maximum number of concurrent runs
--   of any of the component jobs. If you leave this parameter blank, there
--   is no limit to the number of concurrent workflow runs.
--   
--   <a>$sel:defaultRunProperties:CreateWorkflow'</a>,
--   <a>createWorkflow_defaultRunProperties</a> - A collection of
--   properties to be used as part of each execution of the workflow.
--   
--   <a>$sel:description:CreateWorkflow'</a>,
--   <a>createWorkflow_description</a> - A description of the workflow.
--   
--   <a>$sel:tags:CreateWorkflow'</a>, <a>createWorkflow_tags</a> - The
--   tags to be used with this workflow.
--   
--   <a>$sel:name:CreateWorkflow'</a>, <a>createWorkflow_name</a> - The
--   name to be assigned to the workflow. It should be unique within your
--   account.
newCreateWorkflow :: Text -> CreateWorkflow

-- | You can use this parameter to prevent unwanted multiple updates to
--   data, to control costs, or in some cases, to prevent exceeding the
--   maximum number of concurrent runs of any of the component jobs. If you
--   leave this parameter blank, there is no limit to the number of
--   concurrent workflow runs.
createWorkflow_maxConcurrentRuns :: Lens' CreateWorkflow (Maybe Int)

-- | A collection of properties to be used as part of each execution of the
--   workflow.
createWorkflow_defaultRunProperties :: Lens' CreateWorkflow (Maybe (HashMap Text Text))

-- | A description of the workflow.
createWorkflow_description :: Lens' CreateWorkflow (Maybe Text)

-- | The tags to be used with this workflow.
createWorkflow_tags :: Lens' CreateWorkflow (Maybe (HashMap Text Text))

-- | The name to be assigned to the workflow. It should be unique within
--   your account.
createWorkflow_name :: Lens' CreateWorkflow Text

-- | <i>See:</i> <a>newCreateWorkflowResponse</a> smart constructor.
data CreateWorkflowResponse
CreateWorkflowResponse' :: Maybe Text -> Int -> CreateWorkflowResponse

-- | The name of the workflow which was provided as part of the request.
[$sel:name:CreateWorkflowResponse'] :: CreateWorkflowResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateWorkflowResponse'] :: CreateWorkflowResponse -> Int

-- | Create a value of <a>CreateWorkflowResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateWorkflow'</a>, <a>createWorkflowResponse_name</a> -
--   The name of the workflow which was provided as part of the request.
--   
--   <a>$sel:httpStatus:CreateWorkflowResponse'</a>,
--   <a>createWorkflowResponse_httpStatus</a> - The response's http status
--   code.
newCreateWorkflowResponse :: Int -> CreateWorkflowResponse

-- | The name of the workflow which was provided as part of the request.
createWorkflowResponse_name :: Lens' CreateWorkflowResponse (Maybe Text)

-- | The response's http status code.
createWorkflowResponse_httpStatus :: Lens' CreateWorkflowResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.CreateWorkflow.CreateWorkflow
instance GHC.Show.Show Network.AWS.Glue.CreateWorkflow.CreateWorkflow
instance GHC.Read.Read Network.AWS.Glue.CreateWorkflow.CreateWorkflow
instance GHC.Classes.Eq Network.AWS.Glue.CreateWorkflow.CreateWorkflow
instance GHC.Generics.Generic Network.AWS.Glue.CreateWorkflow.CreateWorkflowResponse
instance GHC.Show.Show Network.AWS.Glue.CreateWorkflow.CreateWorkflowResponse
instance GHC.Read.Read Network.AWS.Glue.CreateWorkflow.CreateWorkflowResponse
instance GHC.Classes.Eq Network.AWS.Glue.CreateWorkflow.CreateWorkflowResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.CreateWorkflow.CreateWorkflow
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateWorkflow.CreateWorkflowResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.CreateWorkflow.CreateWorkflow
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateWorkflow.CreateWorkflow
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.CreateWorkflow.CreateWorkflow
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.CreateWorkflow.CreateWorkflow
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.CreateWorkflow.CreateWorkflow
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.CreateWorkflow.CreateWorkflow


-- | Creates a new function definition in the Data Catalog.
module Network.AWS.Glue.CreateUserDefinedFunction

-- | <i>See:</i> <a>newCreateUserDefinedFunction</a> smart constructor.
data CreateUserDefinedFunction
CreateUserDefinedFunction' :: Maybe Text -> Text -> UserDefinedFunctionInput -> CreateUserDefinedFunction

-- | The ID of the Data Catalog in which to create the function. If none is
--   provided, the Amazon Web Services account ID is used by default.
[$sel:catalogId:CreateUserDefinedFunction'] :: CreateUserDefinedFunction -> Maybe Text

-- | The name of the catalog database in which to create the function.
[$sel:databaseName:CreateUserDefinedFunction'] :: CreateUserDefinedFunction -> Text

-- | A <tt>FunctionInput</tt> object that defines the function to create in
--   the Data Catalog.
[$sel:functionInput:CreateUserDefinedFunction'] :: CreateUserDefinedFunction -> UserDefinedFunctionInput

-- | Create a value of <a>CreateUserDefinedFunction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:CreateUserDefinedFunction'</a>,
--   <a>createUserDefinedFunction_catalogId</a> - The ID of the Data
--   Catalog in which to create the function. If none is provided, the
--   Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:CreateUserDefinedFunction'</a>,
--   <a>createUserDefinedFunction_databaseName</a> - The name of the
--   catalog database in which to create the function.
--   
--   <a>$sel:functionInput:CreateUserDefinedFunction'</a>,
--   <a>createUserDefinedFunction_functionInput</a> - A
--   <tt>FunctionInput</tt> object that defines the function to create in
--   the Data Catalog.
newCreateUserDefinedFunction :: Text -> UserDefinedFunctionInput -> CreateUserDefinedFunction

-- | The ID of the Data Catalog in which to create the function. If none is
--   provided, the Amazon Web Services account ID is used by default.
createUserDefinedFunction_catalogId :: Lens' CreateUserDefinedFunction (Maybe Text)

-- | The name of the catalog database in which to create the function.
createUserDefinedFunction_databaseName :: Lens' CreateUserDefinedFunction Text

-- | A <tt>FunctionInput</tt> object that defines the function to create in
--   the Data Catalog.
createUserDefinedFunction_functionInput :: Lens' CreateUserDefinedFunction UserDefinedFunctionInput

-- | <i>See:</i> <a>newCreateUserDefinedFunctionResponse</a> smart
--   constructor.
data CreateUserDefinedFunctionResponse
CreateUserDefinedFunctionResponse' :: Int -> CreateUserDefinedFunctionResponse

-- | The response's http status code.
[$sel:httpStatus:CreateUserDefinedFunctionResponse'] :: CreateUserDefinedFunctionResponse -> Int

-- | Create a value of <a>CreateUserDefinedFunctionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateUserDefinedFunctionResponse'</a>,
--   <a>createUserDefinedFunctionResponse_httpStatus</a> - The response's
--   http status code.
newCreateUserDefinedFunctionResponse :: Int -> CreateUserDefinedFunctionResponse

-- | The response's http status code.
createUserDefinedFunctionResponse_httpStatus :: Lens' CreateUserDefinedFunctionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.CreateUserDefinedFunction.CreateUserDefinedFunction
instance GHC.Show.Show Network.AWS.Glue.CreateUserDefinedFunction.CreateUserDefinedFunction
instance GHC.Read.Read Network.AWS.Glue.CreateUserDefinedFunction.CreateUserDefinedFunction
instance GHC.Classes.Eq Network.AWS.Glue.CreateUserDefinedFunction.CreateUserDefinedFunction
instance GHC.Generics.Generic Network.AWS.Glue.CreateUserDefinedFunction.CreateUserDefinedFunctionResponse
instance GHC.Show.Show Network.AWS.Glue.CreateUserDefinedFunction.CreateUserDefinedFunctionResponse
instance GHC.Read.Read Network.AWS.Glue.CreateUserDefinedFunction.CreateUserDefinedFunctionResponse
instance GHC.Classes.Eq Network.AWS.Glue.CreateUserDefinedFunction.CreateUserDefinedFunctionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.CreateUserDefinedFunction.CreateUserDefinedFunction
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateUserDefinedFunction.CreateUserDefinedFunctionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.CreateUserDefinedFunction.CreateUserDefinedFunction
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateUserDefinedFunction.CreateUserDefinedFunction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.CreateUserDefinedFunction.CreateUserDefinedFunction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.CreateUserDefinedFunction.CreateUserDefinedFunction
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.CreateUserDefinedFunction.CreateUserDefinedFunction
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.CreateUserDefinedFunction.CreateUserDefinedFunction


-- | Creates a new trigger.
module Network.AWS.Glue.CreateTrigger

-- | <i>See:</i> <a>newCreateTrigger</a> smart constructor.
data CreateTrigger
CreateTrigger' :: Maybe Text -> Maybe Text -> Maybe Predicate -> Maybe Bool -> Maybe EventBatchingCondition -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> TriggerType -> [Action] -> CreateTrigger

-- | The name of the workflow associated with the trigger.
[$sel:workflowName:CreateTrigger'] :: CreateTrigger -> Maybe Text

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
--   
--   This field is required when the trigger type is SCHEDULED.
[$sel:schedule:CreateTrigger'] :: CreateTrigger -> Maybe Text

-- | A predicate to specify when the new trigger should fire.
--   
--   This field is required when the trigger type is <tt>CONDITIONAL</tt>.
[$sel:predicate:CreateTrigger'] :: CreateTrigger -> Maybe Predicate

-- | Set to <tt>true</tt> to start <tt>SCHEDULED</tt> and
--   <tt>CONDITIONAL</tt> triggers when created. True is not supported for
--   <tt>ON_DEMAND</tt> triggers.
[$sel:startOnCreation:CreateTrigger'] :: CreateTrigger -> Maybe Bool

-- | Batch condition that must be met (specified number of events received
--   or batch time window expired) before EventBridge event trigger fires.
[$sel:eventBatchingCondition:CreateTrigger'] :: CreateTrigger -> Maybe EventBatchingCondition

-- | A description of the new trigger.
[$sel:description:CreateTrigger'] :: CreateTrigger -> Maybe Text

-- | The tags to use with this trigger. You may use tags to limit access to
--   the trigger. For more information about tags in Glue, see <a>Amazon
--   Web Services Tags in Glue</a> in the developer guide.
[$sel:tags:CreateTrigger'] :: CreateTrigger -> Maybe (HashMap Text Text)

-- | The name of the trigger.
[$sel:name:CreateTrigger'] :: CreateTrigger -> Text

-- | The type of the new trigger.
[$sel:type':CreateTrigger'] :: CreateTrigger -> TriggerType

-- | The actions initiated by this trigger when it fires.
[$sel:actions:CreateTrigger'] :: CreateTrigger -> [Action]

-- | Create a value of <a>CreateTrigger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workflowName:CreateTrigger'</a>,
--   <a>createTrigger_workflowName</a> - The name of the workflow
--   associated with the trigger.
--   
--   <a>$sel:schedule:CreateTrigger'</a>, <a>createTrigger_schedule</a> - A
--   <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
--   
--   This field is required when the trigger type is SCHEDULED.
--   
--   <a>$sel:predicate:CreateTrigger'</a>, <a>createTrigger_predicate</a> -
--   A predicate to specify when the new trigger should fire.
--   
--   This field is required when the trigger type is <tt>CONDITIONAL</tt>.
--   
--   <a>$sel:startOnCreation:CreateTrigger'</a>,
--   <a>createTrigger_startOnCreation</a> - Set to <tt>true</tt> to start
--   <tt>SCHEDULED</tt> and <tt>CONDITIONAL</tt> triggers when created.
--   True is not supported for <tt>ON_DEMAND</tt> triggers.
--   
--   <a>$sel:eventBatchingCondition:CreateTrigger'</a>,
--   <a>createTrigger_eventBatchingCondition</a> - Batch condition that
--   must be met (specified number of events received or batch time window
--   expired) before EventBridge event trigger fires.
--   
--   <a>$sel:description:CreateTrigger'</a>,
--   <a>createTrigger_description</a> - A description of the new trigger.
--   
--   <a>$sel:tags:CreateTrigger'</a>, <a>createTrigger_tags</a> - The tags
--   to use with this trigger. You may use tags to limit access to the
--   trigger. For more information about tags in Glue, see <a>Amazon Web
--   Services Tags in Glue</a> in the developer guide.
--   
--   <a>$sel:name:CreateTrigger'</a>, <a>createTrigger_name</a> - The name
--   of the trigger.
--   
--   <a>$sel:type':CreateTrigger'</a>, <a>createTrigger_type</a> - The type
--   of the new trigger.
--   
--   <a>$sel:actions:CreateTrigger'</a>, <a>createTrigger_actions</a> - The
--   actions initiated by this trigger when it fires.
newCreateTrigger :: Text -> TriggerType -> CreateTrigger

-- | The name of the workflow associated with the trigger.
createTrigger_workflowName :: Lens' CreateTrigger (Maybe Text)

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
--   
--   This field is required when the trigger type is SCHEDULED.
createTrigger_schedule :: Lens' CreateTrigger (Maybe Text)

-- | A predicate to specify when the new trigger should fire.
--   
--   This field is required when the trigger type is <tt>CONDITIONAL</tt>.
createTrigger_predicate :: Lens' CreateTrigger (Maybe Predicate)

-- | Set to <tt>true</tt> to start <tt>SCHEDULED</tt> and
--   <tt>CONDITIONAL</tt> triggers when created. True is not supported for
--   <tt>ON_DEMAND</tt> triggers.
createTrigger_startOnCreation :: Lens' CreateTrigger (Maybe Bool)

-- | Batch condition that must be met (specified number of events received
--   or batch time window expired) before EventBridge event trigger fires.
createTrigger_eventBatchingCondition :: Lens' CreateTrigger (Maybe EventBatchingCondition)

-- | A description of the new trigger.
createTrigger_description :: Lens' CreateTrigger (Maybe Text)

-- | The tags to use with this trigger. You may use tags to limit access to
--   the trigger. For more information about tags in Glue, see <a>Amazon
--   Web Services Tags in Glue</a> in the developer guide.
createTrigger_tags :: Lens' CreateTrigger (Maybe (HashMap Text Text))

-- | The name of the trigger.
createTrigger_name :: Lens' CreateTrigger Text

-- | The type of the new trigger.
createTrigger_type :: Lens' CreateTrigger TriggerType

-- | The actions initiated by this trigger when it fires.
createTrigger_actions :: Lens' CreateTrigger [Action]

-- | <i>See:</i> <a>newCreateTriggerResponse</a> smart constructor.
data CreateTriggerResponse
CreateTriggerResponse' :: Maybe Text -> Int -> CreateTriggerResponse

-- | The name of the trigger.
[$sel:name:CreateTriggerResponse'] :: CreateTriggerResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateTriggerResponse'] :: CreateTriggerResponse -> Int

-- | Create a value of <a>CreateTriggerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateTrigger'</a>, <a>createTriggerResponse_name</a> -
--   The name of the trigger.
--   
--   <a>$sel:httpStatus:CreateTriggerResponse'</a>,
--   <a>createTriggerResponse_httpStatus</a> - The response's http status
--   code.
newCreateTriggerResponse :: Int -> CreateTriggerResponse

-- | The name of the trigger.
createTriggerResponse_name :: Lens' CreateTriggerResponse (Maybe Text)

-- | The response's http status code.
createTriggerResponse_httpStatus :: Lens' CreateTriggerResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.CreateTrigger.CreateTrigger
instance GHC.Show.Show Network.AWS.Glue.CreateTrigger.CreateTrigger
instance GHC.Read.Read Network.AWS.Glue.CreateTrigger.CreateTrigger
instance GHC.Classes.Eq Network.AWS.Glue.CreateTrigger.CreateTrigger
instance GHC.Generics.Generic Network.AWS.Glue.CreateTrigger.CreateTriggerResponse
instance GHC.Show.Show Network.AWS.Glue.CreateTrigger.CreateTriggerResponse
instance GHC.Read.Read Network.AWS.Glue.CreateTrigger.CreateTriggerResponse
instance GHC.Classes.Eq Network.AWS.Glue.CreateTrigger.CreateTriggerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.CreateTrigger.CreateTrigger
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateTrigger.CreateTriggerResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.CreateTrigger.CreateTrigger
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateTrigger.CreateTrigger
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.CreateTrigger.CreateTrigger
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.CreateTrigger.CreateTrigger
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.CreateTrigger.CreateTrigger
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.CreateTrigger.CreateTrigger


-- | Creates a new table definition in the Data Catalog.
module Network.AWS.Glue.CreateTable

-- | <i>See:</i> <a>newCreateTable</a> smart constructor.
data CreateTable
CreateTable' :: Maybe [PartitionIndex] -> Maybe Text -> Text -> TableInput -> CreateTable

-- | A list of partition indexes, <tt>PartitionIndex</tt> structures, to
--   create in the table.
[$sel:partitionIndexes:CreateTable'] :: CreateTable -> Maybe [PartitionIndex]

-- | The ID of the Data Catalog in which to create the <tt>Table</tt>. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
[$sel:catalogId:CreateTable'] :: CreateTable -> Maybe Text

-- | The catalog database in which to create the new table. For Hive
--   compatibility, this name is entirely lowercase.
[$sel:databaseName:CreateTable'] :: CreateTable -> Text

-- | The <tt>TableInput</tt> object that defines the metadata table to
--   create in the catalog.
[$sel:tableInput:CreateTable'] :: CreateTable -> TableInput

-- | Create a value of <a>CreateTable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitionIndexes:CreateTable'</a>,
--   <a>createTable_partitionIndexes</a> - A list of partition indexes,
--   <tt>PartitionIndex</tt> structures, to create in the table.
--   
--   <a>$sel:catalogId:CreateTable'</a>, <a>createTable_catalogId</a> - The
--   ID of the Data Catalog in which to create the <tt>Table</tt>. If none
--   is supplied, the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:CreateTable'</a>, <a>createTable_databaseName</a>
--   - The catalog database in which to create the new table. For Hive
--   compatibility, this name is entirely lowercase.
--   
--   <a>$sel:tableInput:CreateTable'</a>, <a>createTable_tableInput</a> -
--   The <tt>TableInput</tt> object that defines the metadata table to
--   create in the catalog.
newCreateTable :: Text -> TableInput -> CreateTable

-- | A list of partition indexes, <tt>PartitionIndex</tt> structures, to
--   create in the table.
createTable_partitionIndexes :: Lens' CreateTable (Maybe [PartitionIndex])

-- | The ID of the Data Catalog in which to create the <tt>Table</tt>. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
createTable_catalogId :: Lens' CreateTable (Maybe Text)

-- | The catalog database in which to create the new table. For Hive
--   compatibility, this name is entirely lowercase.
createTable_databaseName :: Lens' CreateTable Text

-- | The <tt>TableInput</tt> object that defines the metadata table to
--   create in the catalog.
createTable_tableInput :: Lens' CreateTable TableInput

-- | <i>See:</i> <a>newCreateTableResponse</a> smart constructor.
data CreateTableResponse
CreateTableResponse' :: Int -> CreateTableResponse

-- | The response's http status code.
[$sel:httpStatus:CreateTableResponse'] :: CreateTableResponse -> Int

-- | Create a value of <a>CreateTableResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateTableResponse'</a>,
--   <a>createTableResponse_httpStatus</a> - The response's http status
--   code.
newCreateTableResponse :: Int -> CreateTableResponse

-- | The response's http status code.
createTableResponse_httpStatus :: Lens' CreateTableResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.CreateTable.CreateTable
instance GHC.Show.Show Network.AWS.Glue.CreateTable.CreateTable
instance GHC.Read.Read Network.AWS.Glue.CreateTable.CreateTable
instance GHC.Classes.Eq Network.AWS.Glue.CreateTable.CreateTable
instance GHC.Generics.Generic Network.AWS.Glue.CreateTable.CreateTableResponse
instance GHC.Show.Show Network.AWS.Glue.CreateTable.CreateTableResponse
instance GHC.Read.Read Network.AWS.Glue.CreateTable.CreateTableResponse
instance GHC.Classes.Eq Network.AWS.Glue.CreateTable.CreateTableResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.CreateTable.CreateTable
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateTable.CreateTableResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.CreateTable.CreateTable
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateTable.CreateTable
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.CreateTable.CreateTable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.CreateTable.CreateTable
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.CreateTable.CreateTable
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.CreateTable.CreateTable


-- | Creates a new security configuration. A security configuration is a
--   set of security properties that can be used by Glue. You can use a
--   security configuration to encrypt data at rest. For information about
--   using security configurations in Glue, see <a>Encrypting Data Written
--   by Crawlers, Jobs, and Development Endpoints</a>.
module Network.AWS.Glue.CreateSecurityConfiguration

-- | <i>See:</i> <a>newCreateSecurityConfiguration</a> smart constructor.
data CreateSecurityConfiguration
CreateSecurityConfiguration' :: Text -> EncryptionConfiguration -> CreateSecurityConfiguration

-- | The name for the new security configuration.
[$sel:name:CreateSecurityConfiguration'] :: CreateSecurityConfiguration -> Text

-- | The encryption configuration for the new security configuration.
[$sel:encryptionConfiguration:CreateSecurityConfiguration'] :: CreateSecurityConfiguration -> EncryptionConfiguration

-- | Create a value of <a>CreateSecurityConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateSecurityConfiguration'</a>,
--   <a>createSecurityConfiguration_name</a> - The name for the new
--   security configuration.
--   
--   <a>$sel:encryptionConfiguration:CreateSecurityConfiguration'</a>,
--   <a>createSecurityConfiguration_encryptionConfiguration</a> - The
--   encryption configuration for the new security configuration.
newCreateSecurityConfiguration :: Text -> EncryptionConfiguration -> CreateSecurityConfiguration

-- | The name for the new security configuration.
createSecurityConfiguration_name :: Lens' CreateSecurityConfiguration Text

-- | The encryption configuration for the new security configuration.
createSecurityConfiguration_encryptionConfiguration :: Lens' CreateSecurityConfiguration EncryptionConfiguration

-- | <i>See:</i> <a>newCreateSecurityConfigurationResponse</a> smart
--   constructor.
data CreateSecurityConfigurationResponse
CreateSecurityConfigurationResponse' :: Maybe Text -> Maybe POSIX -> Int -> CreateSecurityConfigurationResponse

-- | The name assigned to the new security configuration.
[$sel:name:CreateSecurityConfigurationResponse'] :: CreateSecurityConfigurationResponse -> Maybe Text

-- | The time at which the new security configuration was created.
[$sel:createdTimestamp:CreateSecurityConfigurationResponse'] :: CreateSecurityConfigurationResponse -> Maybe POSIX

-- | The response's http status code.
[$sel:httpStatus:CreateSecurityConfigurationResponse'] :: CreateSecurityConfigurationResponse -> Int

-- | Create a value of <a>CreateSecurityConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateSecurityConfiguration'</a>,
--   <a>createSecurityConfigurationResponse_name</a> - The name assigned to
--   the new security configuration.
--   
--   <a>$sel:createdTimestamp:CreateSecurityConfigurationResponse'</a>,
--   <a>createSecurityConfigurationResponse_createdTimestamp</a> - The time
--   at which the new security configuration was created.
--   
--   <a>$sel:httpStatus:CreateSecurityConfigurationResponse'</a>,
--   <a>createSecurityConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newCreateSecurityConfigurationResponse :: Int -> CreateSecurityConfigurationResponse

-- | The name assigned to the new security configuration.
createSecurityConfigurationResponse_name :: Lens' CreateSecurityConfigurationResponse (Maybe Text)

-- | The time at which the new security configuration was created.
createSecurityConfigurationResponse_createdTimestamp :: Lens' CreateSecurityConfigurationResponse (Maybe UTCTime)

-- | The response's http status code.
createSecurityConfigurationResponse_httpStatus :: Lens' CreateSecurityConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.CreateSecurityConfiguration.CreateSecurityConfiguration
instance GHC.Show.Show Network.AWS.Glue.CreateSecurityConfiguration.CreateSecurityConfiguration
instance GHC.Read.Read Network.AWS.Glue.CreateSecurityConfiguration.CreateSecurityConfiguration
instance GHC.Classes.Eq Network.AWS.Glue.CreateSecurityConfiguration.CreateSecurityConfiguration
instance GHC.Generics.Generic Network.AWS.Glue.CreateSecurityConfiguration.CreateSecurityConfigurationResponse
instance GHC.Show.Show Network.AWS.Glue.CreateSecurityConfiguration.CreateSecurityConfigurationResponse
instance GHC.Read.Read Network.AWS.Glue.CreateSecurityConfiguration.CreateSecurityConfigurationResponse
instance GHC.Classes.Eq Network.AWS.Glue.CreateSecurityConfiguration.CreateSecurityConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.CreateSecurityConfiguration.CreateSecurityConfiguration
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateSecurityConfiguration.CreateSecurityConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.CreateSecurityConfiguration.CreateSecurityConfiguration
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateSecurityConfiguration.CreateSecurityConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.CreateSecurityConfiguration.CreateSecurityConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.CreateSecurityConfiguration.CreateSecurityConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.CreateSecurityConfiguration.CreateSecurityConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.CreateSecurityConfiguration.CreateSecurityConfiguration


-- | Transforms a directed acyclic graph (DAG) into code.
module Network.AWS.Glue.CreateScript

-- | <i>See:</i> <a>newCreateScript</a> smart constructor.
data CreateScript
CreateScript' :: Maybe [CodeGenEdge] -> Maybe Language -> Maybe [CodeGenNode] -> CreateScript

-- | A list of the edges in the DAG.
[$sel:dagEdges:CreateScript'] :: CreateScript -> Maybe [CodeGenEdge]

-- | The programming language of the resulting code from the DAG.
[$sel:language:CreateScript'] :: CreateScript -> Maybe Language

-- | A list of the nodes in the DAG.
[$sel:dagNodes:CreateScript'] :: CreateScript -> Maybe [CodeGenNode]

-- | Create a value of <a>CreateScript</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dagEdges:CreateScript'</a>, <a>createScript_dagEdges</a> - A
--   list of the edges in the DAG.
--   
--   <a>$sel:language:CreateScript'</a>, <a>createScript_language</a> - The
--   programming language of the resulting code from the DAG.
--   
--   <a>$sel:dagNodes:CreateScript'</a>, <a>createScript_dagNodes</a> - A
--   list of the nodes in the DAG.
newCreateScript :: CreateScript

-- | A list of the edges in the DAG.
createScript_dagEdges :: Lens' CreateScript (Maybe [CodeGenEdge])

-- | The programming language of the resulting code from the DAG.
createScript_language :: Lens' CreateScript (Maybe Language)

-- | A list of the nodes in the DAG.
createScript_dagNodes :: Lens' CreateScript (Maybe [CodeGenNode])

-- | <i>See:</i> <a>newCreateScriptResponse</a> smart constructor.
data CreateScriptResponse
CreateScriptResponse' :: Maybe Text -> Maybe Text -> Int -> CreateScriptResponse

-- | The Python script generated from the DAG.
[$sel:pythonScript:CreateScriptResponse'] :: CreateScriptResponse -> Maybe Text

-- | The Scala code generated from the DAG.
[$sel:scalaCode:CreateScriptResponse'] :: CreateScriptResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateScriptResponse'] :: CreateScriptResponse -> Int

-- | Create a value of <a>CreateScriptResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pythonScript:CreateScriptResponse'</a>,
--   <a>createScriptResponse_pythonScript</a> - The Python script generated
--   from the DAG.
--   
--   <a>$sel:scalaCode:CreateScriptResponse'</a>,
--   <a>createScriptResponse_scalaCode</a> - The Scala code generated from
--   the DAG.
--   
--   <a>$sel:httpStatus:CreateScriptResponse'</a>,
--   <a>createScriptResponse_httpStatus</a> - The response's http status
--   code.
newCreateScriptResponse :: Int -> CreateScriptResponse

-- | The Python script generated from the DAG.
createScriptResponse_pythonScript :: Lens' CreateScriptResponse (Maybe Text)

-- | The Scala code generated from the DAG.
createScriptResponse_scalaCode :: Lens' CreateScriptResponse (Maybe Text)

-- | The response's http status code.
createScriptResponse_httpStatus :: Lens' CreateScriptResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.CreateScript.CreateScript
instance GHC.Show.Show Network.AWS.Glue.CreateScript.CreateScript
instance GHC.Read.Read Network.AWS.Glue.CreateScript.CreateScript
instance GHC.Classes.Eq Network.AWS.Glue.CreateScript.CreateScript
instance GHC.Generics.Generic Network.AWS.Glue.CreateScript.CreateScriptResponse
instance GHC.Show.Show Network.AWS.Glue.CreateScript.CreateScriptResponse
instance GHC.Read.Read Network.AWS.Glue.CreateScript.CreateScriptResponse
instance GHC.Classes.Eq Network.AWS.Glue.CreateScript.CreateScriptResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.CreateScript.CreateScript
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateScript.CreateScriptResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.CreateScript.CreateScript
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateScript.CreateScript
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.CreateScript.CreateScript
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.CreateScript.CreateScript
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.CreateScript.CreateScript
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.CreateScript.CreateScript


-- | Creates a new schema set and registers the schema definition. Returns
--   an error if the schema set already exists without actually registering
--   the version.
--   
--   When the schema set is created, a version checkpoint will be set to
--   the first version. Compatibility mode "DISABLED" restricts any
--   additional schema versions from being added after the first schema
--   version. For all other compatibility modes, validation of
--   compatibility settings will be applied only from the second version
--   onwards when the <tt>RegisterSchemaVersion</tt> API is used.
--   
--   When this API is called without a <tt>RegistryId</tt>, this will
--   create an entry for a "default-registry" in the registry database
--   tables, if it is not already present.
module Network.AWS.Glue.CreateSchema

-- | <i>See:</i> <a>newCreateSchema</a> smart constructor.
data CreateSchema
CreateSchema' :: Maybe Text -> Maybe RegistryId -> Maybe Text -> Maybe Compatibility -> Maybe (HashMap Text Text) -> Text -> DataFormat -> CreateSchema

-- | The schema definition using the <tt>DataFormat</tt> setting for
--   <tt>SchemaName</tt>.
[$sel:schemaDefinition:CreateSchema'] :: CreateSchema -> Maybe Text

-- | This is a wrapper shape to contain the registry identity fields. If
--   this is not provided, the default registry will be used. The ARN
--   format for the same will be: <tt>arn:aws:glue:us-east-2:&lt;customer
--   id&gt;:registry/default-registry:random-5-letter-id</tt>.
[$sel:registryId:CreateSchema'] :: CreateSchema -> Maybe RegistryId

-- | An optional description of the schema. If description is not provided,
--   there will not be any automatic default value for this.
[$sel:description:CreateSchema'] :: CreateSchema -> Maybe Text

-- | The compatibility mode of the schema. The possible values are:
--   
--   <ul>
--   <li><i>NONE</i>: No compatibility mode applies. You can use this
--   choice in development scenarios or if you do not know the
--   compatibility mode that you want to apply to schemas. Any new version
--   added will be accepted without undergoing a compatibility check.</li>
--   <li><i>DISABLED</i>: This compatibility choice prevents versioning for
--   a particular schema. You can use this choice to prevent future
--   versioning of a schema.</li>
--   <li><i>BACKWARD</i>: This compatibility choice is recommended as it
--   allows data receivers to read both the current and one previous schema
--   version. This means that for instance, a new schema version cannot
--   drop data fields or change the type of these fields, so they can't be
--   read by readers using the previous version.</li>
--   <li><i>BACKWARD_ALL</i>: This compatibility choice allows data
--   receivers to read both the current and all previous schema versions.
--   You can use this choice when you need to delete fields or add optional
--   fields, and check compatibility against all previous schema
--   versions.</li>
--   <li><i>FORWARD</i>: This compatibility choice allows data receivers to
--   read both the current and one next schema version, but not necessarily
--   later versions. You can use this choice when you need to add fields or
--   delete optional fields, but only check compatibility against the last
--   schema version.</li>
--   <li><i>FORWARD_ALL</i>: This compatibility choice allows data
--   receivers to read written by producers of any new registered schema.
--   You can use this choice when you need to add fields or delete optional
--   fields, and check compatibility against all previous schema
--   versions.</li>
--   <li><i>FULL</i>: This compatibility choice allows data receivers to
--   read data written by producers using the previous or next version of
--   the schema, but not necessarily earlier or later versions. You can use
--   this choice when you need to add or remove optional fields, but only
--   check compatibility against the last schema version.</li>
--   <li><i>FULL_ALL</i>: This compatibility choice allows data receivers
--   to read data written by producers using all previous schema versions.
--   You can use this choice when you need to add or remove optional
--   fields, and check compatibility against all previous schema
--   versions.</li>
--   </ul>
[$sel:compatibility:CreateSchema'] :: CreateSchema -> Maybe Compatibility

-- | Amazon Web Services tags that contain a key value pair and may be
--   searched by console, command line, or API. If specified, follows the
--   Amazon Web Services tags-on-create pattern.
[$sel:tags:CreateSchema'] :: CreateSchema -> Maybe (HashMap Text Text)

-- | Name of the schema to be created of max length of 255, and may only
--   contain letters, numbers, hyphen, underscore, dollar sign, or hash
--   mark. No whitespace.
[$sel:schemaName:CreateSchema'] :: CreateSchema -> Text

-- | The data format of the schema definition. Currently <tt>AVRO</tt> and
--   <tt>JSON</tt> are supported.
[$sel:dataFormat:CreateSchema'] :: CreateSchema -> DataFormat

-- | Create a value of <a>CreateSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaDefinition:CreateSchema'</a>,
--   <a>createSchema_schemaDefinition</a> - The schema definition using the
--   <tt>DataFormat</tt> setting for <tt>SchemaName</tt>.
--   
--   <a>$sel:registryId:CreateSchema'</a>, <a>createSchema_registryId</a> -
--   This is a wrapper shape to contain the registry identity fields. If
--   this is not provided, the default registry will be used. The ARN
--   format for the same will be: <tt>arn:aws:glue:us-east-2:&lt;customer
--   id&gt;:registry/default-registry:random-5-letter-id</tt>.
--   
--   <a>$sel:description:CreateSchema'</a>, <a>createSchema_description</a>
--   - An optional description of the schema. If description is not
--   provided, there will not be any automatic default value for this.
--   
--   <a>$sel:compatibility:CreateSchema'</a>,
--   <a>createSchema_compatibility</a> - The compatibility mode of the
--   schema. The possible values are:
--   
--   <ul>
--   <li><i>NONE</i>: No compatibility mode applies. You can use this
--   choice in development scenarios or if you do not know the
--   compatibility mode that you want to apply to schemas. Any new version
--   added will be accepted without undergoing a compatibility check.</li>
--   <li><i>DISABLED</i>: This compatibility choice prevents versioning for
--   a particular schema. You can use this choice to prevent future
--   versioning of a schema.</li>
--   <li><i>BACKWARD</i>: This compatibility choice is recommended as it
--   allows data receivers to read both the current and one previous schema
--   version. This means that for instance, a new schema version cannot
--   drop data fields or change the type of these fields, so they can't be
--   read by readers using the previous version.</li>
--   <li><i>BACKWARD_ALL</i>: This compatibility choice allows data
--   receivers to read both the current and all previous schema versions.
--   You can use this choice when you need to delete fields or add optional
--   fields, and check compatibility against all previous schema
--   versions.</li>
--   <li><i>FORWARD</i>: This compatibility choice allows data receivers to
--   read both the current and one next schema version, but not necessarily
--   later versions. You can use this choice when you need to add fields or
--   delete optional fields, but only check compatibility against the last
--   schema version.</li>
--   <li><i>FORWARD_ALL</i>: This compatibility choice allows data
--   receivers to read written by producers of any new registered schema.
--   You can use this choice when you need to add fields or delete optional
--   fields, and check compatibility against all previous schema
--   versions.</li>
--   <li><i>FULL</i>: This compatibility choice allows data receivers to
--   read data written by producers using the previous or next version of
--   the schema, but not necessarily earlier or later versions. You can use
--   this choice when you need to add or remove optional fields, but only
--   check compatibility against the last schema version.</li>
--   <li><i>FULL_ALL</i>: This compatibility choice allows data receivers
--   to read data written by producers using all previous schema versions.
--   You can use this choice when you need to add or remove optional
--   fields, and check compatibility against all previous schema
--   versions.</li>
--   </ul>
--   
--   <a>$sel:tags:CreateSchema'</a>, <a>createSchema_tags</a> - Amazon Web
--   Services tags that contain a key value pair and may be searched by
--   console, command line, or API. If specified, follows the Amazon Web
--   Services tags-on-create pattern.
--   
--   <a>$sel:schemaName:CreateSchema'</a>, <a>createSchema_schemaName</a> -
--   Name of the schema to be created of max length of 255, and may only
--   contain letters, numbers, hyphen, underscore, dollar sign, or hash
--   mark. No whitespace.
--   
--   <a>$sel:dataFormat:CreateSchema'</a>, <a>createSchema_dataFormat</a> -
--   The data format of the schema definition. Currently <tt>AVRO</tt> and
--   <tt>JSON</tt> are supported.
newCreateSchema :: Text -> DataFormat -> CreateSchema

-- | The schema definition using the <tt>DataFormat</tt> setting for
--   <tt>SchemaName</tt>.
createSchema_schemaDefinition :: Lens' CreateSchema (Maybe Text)

-- | This is a wrapper shape to contain the registry identity fields. If
--   this is not provided, the default registry will be used. The ARN
--   format for the same will be: <tt>arn:aws:glue:us-east-2:&lt;customer
--   id&gt;:registry/default-registry:random-5-letter-id</tt>.
createSchema_registryId :: Lens' CreateSchema (Maybe RegistryId)

-- | An optional description of the schema. If description is not provided,
--   there will not be any automatic default value for this.
createSchema_description :: Lens' CreateSchema (Maybe Text)

-- | The compatibility mode of the schema. The possible values are:
--   
--   <ul>
--   <li><i>NONE</i>: No compatibility mode applies. You can use this
--   choice in development scenarios or if you do not know the
--   compatibility mode that you want to apply to schemas. Any new version
--   added will be accepted without undergoing a compatibility check.</li>
--   <li><i>DISABLED</i>: This compatibility choice prevents versioning for
--   a particular schema. You can use this choice to prevent future
--   versioning of a schema.</li>
--   <li><i>BACKWARD</i>: This compatibility choice is recommended as it
--   allows data receivers to read both the current and one previous schema
--   version. This means that for instance, a new schema version cannot
--   drop data fields or change the type of these fields, so they can't be
--   read by readers using the previous version.</li>
--   <li><i>BACKWARD_ALL</i>: This compatibility choice allows data
--   receivers to read both the current and all previous schema versions.
--   You can use this choice when you need to delete fields or add optional
--   fields, and check compatibility against all previous schema
--   versions.</li>
--   <li><i>FORWARD</i>: This compatibility choice allows data receivers to
--   read both the current and one next schema version, but not necessarily
--   later versions. You can use this choice when you need to add fields or
--   delete optional fields, but only check compatibility against the last
--   schema version.</li>
--   <li><i>FORWARD_ALL</i>: This compatibility choice allows data
--   receivers to read written by producers of any new registered schema.
--   You can use this choice when you need to add fields or delete optional
--   fields, and check compatibility against all previous schema
--   versions.</li>
--   <li><i>FULL</i>: This compatibility choice allows data receivers to
--   read data written by producers using the previous or next version of
--   the schema, but not necessarily earlier or later versions. You can use
--   this choice when you need to add or remove optional fields, but only
--   check compatibility against the last schema version.</li>
--   <li><i>FULL_ALL</i>: This compatibility choice allows data receivers
--   to read data written by producers using all previous schema versions.
--   You can use this choice when you need to add or remove optional
--   fields, and check compatibility against all previous schema
--   versions.</li>
--   </ul>
createSchema_compatibility :: Lens' CreateSchema (Maybe Compatibility)

-- | Amazon Web Services tags that contain a key value pair and may be
--   searched by console, command line, or API. If specified, follows the
--   Amazon Web Services tags-on-create pattern.
createSchema_tags :: Lens' CreateSchema (Maybe (HashMap Text Text))

-- | Name of the schema to be created of max length of 255, and may only
--   contain letters, numbers, hyphen, underscore, dollar sign, or hash
--   mark. No whitespace.
createSchema_schemaName :: Lens' CreateSchema Text

-- | The data format of the schema definition. Currently <tt>AVRO</tt> and
--   <tt>JSON</tt> are supported.
createSchema_dataFormat :: Lens' CreateSchema DataFormat

-- | <i>See:</i> <a>newCreateSchemaResponse</a> smart constructor.
data CreateSchemaResponse
CreateSchemaResponse' :: Maybe SchemaVersionStatus -> Maybe Text -> Maybe SchemaStatus -> Maybe Text -> Maybe Natural -> Maybe DataFormat -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Compatibility -> Maybe (HashMap Text Text) -> Int -> CreateSchemaResponse

-- | The status of the first schema version created.
[$sel:schemaVersionStatus:CreateSchemaResponse'] :: CreateSchemaResponse -> Maybe SchemaVersionStatus

-- | The name of the registry.
[$sel:registryName:CreateSchemaResponse'] :: CreateSchemaResponse -> Maybe Text

-- | The status of the schema.
[$sel:schemaStatus:CreateSchemaResponse'] :: CreateSchemaResponse -> Maybe SchemaStatus

-- | The Amazon Resource Name (ARN) of the registry.
[$sel:registryArn:CreateSchemaResponse'] :: CreateSchemaResponse -> Maybe Text

-- | The latest version of the schema associated with the returned schema
--   definition.
[$sel:latestSchemaVersion:CreateSchemaResponse'] :: CreateSchemaResponse -> Maybe Natural

-- | The data format of the schema definition. Currently <tt>AVRO</tt> and
--   <tt>JSON</tt> are supported.
[$sel:dataFormat:CreateSchemaResponse'] :: CreateSchemaResponse -> Maybe DataFormat

-- | The version number of the checkpoint (the last time the compatibility
--   mode was changed).
[$sel:schemaCheckpoint:CreateSchemaResponse'] :: CreateSchemaResponse -> Maybe Natural

-- | The name of the schema.
[$sel:schemaName:CreateSchemaResponse'] :: CreateSchemaResponse -> Maybe Text

-- | The unique identifier of the first schema version.
[$sel:schemaVersionId:CreateSchemaResponse'] :: CreateSchemaResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the schema.
[$sel:schemaArn:CreateSchemaResponse'] :: CreateSchemaResponse -> Maybe Text

-- | The next version of the schema associated with the returned schema
--   definition.
[$sel:nextSchemaVersion:CreateSchemaResponse'] :: CreateSchemaResponse -> Maybe Natural

-- | A description of the schema if specified when created.
[$sel:description:CreateSchemaResponse'] :: CreateSchemaResponse -> Maybe Text

-- | The schema compatibility mode.
[$sel:compatibility:CreateSchemaResponse'] :: CreateSchemaResponse -> Maybe Compatibility

-- | The tags for the schema.
[$sel:tags:CreateSchemaResponse'] :: CreateSchemaResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:CreateSchemaResponse'] :: CreateSchemaResponse -> Int

-- | Create a value of <a>CreateSchemaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaVersionStatus:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_schemaVersionStatus</a> - The status of the
--   first schema version created.
--   
--   <a>$sel:registryName:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_registryName</a> - The name of the registry.
--   
--   <a>$sel:schemaStatus:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_schemaStatus</a> - The status of the schema.
--   
--   <a>$sel:registryArn:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_registryArn</a> - The Amazon Resource Name
--   (ARN) of the registry.
--   
--   <a>$sel:latestSchemaVersion:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_latestSchemaVersion</a> - The latest version
--   of the schema associated with the returned schema definition.
--   
--   <a>$sel:dataFormat:CreateSchema'</a>,
--   <a>createSchemaResponse_dataFormat</a> - The data format of the schema
--   definition. Currently <tt>AVRO</tt> and <tt>JSON</tt> are supported.
--   
--   <a>$sel:schemaCheckpoint:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_schemaCheckpoint</a> - The version number of
--   the checkpoint (the last time the compatibility mode was changed).
--   
--   <a>$sel:schemaName:CreateSchema'</a>,
--   <a>createSchemaResponse_schemaName</a> - The name of the schema.
--   
--   <a>$sel:schemaVersionId:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_schemaVersionId</a> - The unique identifier of
--   the first schema version.
--   
--   <a>$sel:schemaArn:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_schemaArn</a> - The Amazon Resource Name (ARN)
--   of the schema.
--   
--   <a>$sel:nextSchemaVersion:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_nextSchemaVersion</a> - The next version of
--   the schema associated with the returned schema definition.
--   
--   <a>$sel:description:CreateSchema'</a>,
--   <a>createSchemaResponse_description</a> - A description of the schema
--   if specified when created.
--   
--   <a>$sel:compatibility:CreateSchema'</a>,
--   <a>createSchemaResponse_compatibility</a> - The schema compatibility
--   mode.
--   
--   <a>$sel:tags:CreateSchema'</a>, <a>createSchemaResponse_tags</a> - The
--   tags for the schema.
--   
--   <a>$sel:httpStatus:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_httpStatus</a> - The response's http status
--   code.
newCreateSchemaResponse :: Int -> CreateSchemaResponse

-- | The status of the first schema version created.
createSchemaResponse_schemaVersionStatus :: Lens' CreateSchemaResponse (Maybe SchemaVersionStatus)

-- | The name of the registry.
createSchemaResponse_registryName :: Lens' CreateSchemaResponse (Maybe Text)

-- | The status of the schema.
createSchemaResponse_schemaStatus :: Lens' CreateSchemaResponse (Maybe SchemaStatus)

-- | The Amazon Resource Name (ARN) of the registry.
createSchemaResponse_registryArn :: Lens' CreateSchemaResponse (Maybe Text)

-- | The latest version of the schema associated with the returned schema
--   definition.
createSchemaResponse_latestSchemaVersion :: Lens' CreateSchemaResponse (Maybe Natural)

-- | The data format of the schema definition. Currently <tt>AVRO</tt> and
--   <tt>JSON</tt> are supported.
createSchemaResponse_dataFormat :: Lens' CreateSchemaResponse (Maybe DataFormat)

-- | The version number of the checkpoint (the last time the compatibility
--   mode was changed).
createSchemaResponse_schemaCheckpoint :: Lens' CreateSchemaResponse (Maybe Natural)

-- | The name of the schema.
createSchemaResponse_schemaName :: Lens' CreateSchemaResponse (Maybe Text)

-- | The unique identifier of the first schema version.
createSchemaResponse_schemaVersionId :: Lens' CreateSchemaResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schema.
createSchemaResponse_schemaArn :: Lens' CreateSchemaResponse (Maybe Text)

-- | The next version of the schema associated with the returned schema
--   definition.
createSchemaResponse_nextSchemaVersion :: Lens' CreateSchemaResponse (Maybe Natural)

-- | A description of the schema if specified when created.
createSchemaResponse_description :: Lens' CreateSchemaResponse (Maybe Text)

-- | The schema compatibility mode.
createSchemaResponse_compatibility :: Lens' CreateSchemaResponse (Maybe Compatibility)

-- | The tags for the schema.
createSchemaResponse_tags :: Lens' CreateSchemaResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createSchemaResponse_httpStatus :: Lens' CreateSchemaResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.CreateSchema.CreateSchema
instance GHC.Show.Show Network.AWS.Glue.CreateSchema.CreateSchema
instance GHC.Read.Read Network.AWS.Glue.CreateSchema.CreateSchema
instance GHC.Classes.Eq Network.AWS.Glue.CreateSchema.CreateSchema
instance GHC.Generics.Generic Network.AWS.Glue.CreateSchema.CreateSchemaResponse
instance GHC.Show.Show Network.AWS.Glue.CreateSchema.CreateSchemaResponse
instance GHC.Read.Read Network.AWS.Glue.CreateSchema.CreateSchemaResponse
instance GHC.Classes.Eq Network.AWS.Glue.CreateSchema.CreateSchemaResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.CreateSchema.CreateSchema
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateSchema.CreateSchemaResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.CreateSchema.CreateSchema
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateSchema.CreateSchema
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.CreateSchema.CreateSchema
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.CreateSchema.CreateSchema
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.CreateSchema.CreateSchema
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.CreateSchema.CreateSchema


-- | Creates a new registry which may be used to hold a collection of
--   schemas.
module Network.AWS.Glue.CreateRegistry

-- | <i>See:</i> <a>newCreateRegistry</a> smart constructor.
data CreateRegistry
CreateRegistry' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> CreateRegistry

-- | A description of the registry. If description is not provided, there
--   will not be any default value for this.
[$sel:description:CreateRegistry'] :: CreateRegistry -> Maybe Text

-- | Amazon Web Services tags that contain a key value pair and may be
--   searched by console, command line, or API.
[$sel:tags:CreateRegistry'] :: CreateRegistry -> Maybe (HashMap Text Text)

-- | Name of the registry to be created of max length of 255, and may only
--   contain letters, numbers, hyphen, underscore, dollar sign, or hash
--   mark. No whitespace.
[$sel:registryName:CreateRegistry'] :: CreateRegistry -> Text

-- | Create a value of <a>CreateRegistry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateRegistry'</a>,
--   <a>createRegistry_description</a> - A description of the registry. If
--   description is not provided, there will not be any default value for
--   this.
--   
--   <a>$sel:tags:CreateRegistry'</a>, <a>createRegistry_tags</a> - Amazon
--   Web Services tags that contain a key value pair and may be searched by
--   console, command line, or API.
--   
--   <a>$sel:registryName:CreateRegistry'</a>,
--   <a>createRegistry_registryName</a> - Name of the registry to be
--   created of max length of 255, and may only contain letters, numbers,
--   hyphen, underscore, dollar sign, or hash mark. No whitespace.
newCreateRegistry :: Text -> CreateRegistry

-- | A description of the registry. If description is not provided, there
--   will not be any default value for this.
createRegistry_description :: Lens' CreateRegistry (Maybe Text)

-- | Amazon Web Services tags that contain a key value pair and may be
--   searched by console, command line, or API.
createRegistry_tags :: Lens' CreateRegistry (Maybe (HashMap Text Text))

-- | Name of the registry to be created of max length of 255, and may only
--   contain letters, numbers, hyphen, underscore, dollar sign, or hash
--   mark. No whitespace.
createRegistry_registryName :: Lens' CreateRegistry Text

-- | <i>See:</i> <a>newCreateRegistryResponse</a> smart constructor.
data CreateRegistryResponse
CreateRegistryResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateRegistryResponse

-- | The name of the registry.
[$sel:registryName:CreateRegistryResponse'] :: CreateRegistryResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the newly created registry.
[$sel:registryArn:CreateRegistryResponse'] :: CreateRegistryResponse -> Maybe Text

-- | A description of the registry.
[$sel:description:CreateRegistryResponse'] :: CreateRegistryResponse -> Maybe Text

-- | The tags for the registry.
[$sel:tags:CreateRegistryResponse'] :: CreateRegistryResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:CreateRegistryResponse'] :: CreateRegistryResponse -> Int

-- | Create a value of <a>CreateRegistryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:CreateRegistry'</a>,
--   <a>createRegistryResponse_registryName</a> - The name of the registry.
--   
--   <a>$sel:registryArn:CreateRegistryResponse'</a>,
--   <a>createRegistryResponse_registryArn</a> - The Amazon Resource Name
--   (ARN) of the newly created registry.
--   
--   <a>$sel:description:CreateRegistry'</a>,
--   <a>createRegistryResponse_description</a> - A description of the
--   registry.
--   
--   <a>$sel:tags:CreateRegistry'</a>, <a>createRegistryResponse_tags</a> -
--   The tags for the registry.
--   
--   <a>$sel:httpStatus:CreateRegistryResponse'</a>,
--   <a>createRegistryResponse_httpStatus</a> - The response's http status
--   code.
newCreateRegistryResponse :: Int -> CreateRegistryResponse

-- | The name of the registry.
createRegistryResponse_registryName :: Lens' CreateRegistryResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the newly created registry.
createRegistryResponse_registryArn :: Lens' CreateRegistryResponse (Maybe Text)

-- | A description of the registry.
createRegistryResponse_description :: Lens' CreateRegistryResponse (Maybe Text)

-- | The tags for the registry.
createRegistryResponse_tags :: Lens' CreateRegistryResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createRegistryResponse_httpStatus :: Lens' CreateRegistryResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.CreateRegistry.CreateRegistry
instance GHC.Show.Show Network.AWS.Glue.CreateRegistry.CreateRegistry
instance GHC.Read.Read Network.AWS.Glue.CreateRegistry.CreateRegistry
instance GHC.Classes.Eq Network.AWS.Glue.CreateRegistry.CreateRegistry
instance GHC.Generics.Generic Network.AWS.Glue.CreateRegistry.CreateRegistryResponse
instance GHC.Show.Show Network.AWS.Glue.CreateRegistry.CreateRegistryResponse
instance GHC.Read.Read Network.AWS.Glue.CreateRegistry.CreateRegistryResponse
instance GHC.Classes.Eq Network.AWS.Glue.CreateRegistry.CreateRegistryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.CreateRegistry.CreateRegistry
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateRegistry.CreateRegistryResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.CreateRegistry.CreateRegistry
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateRegistry.CreateRegistry
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.CreateRegistry.CreateRegistry
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.CreateRegistry.CreateRegistry
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.CreateRegistry.CreateRegistry
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.CreateRegistry.CreateRegistry


-- | Creates a specified partition index in an existing table.
module Network.AWS.Glue.CreatePartitionIndex

-- | <i>See:</i> <a>newCreatePartitionIndex</a> smart constructor.
data CreatePartitionIndex
CreatePartitionIndex' :: Maybe Text -> Text -> Text -> PartitionIndex -> CreatePartitionIndex

-- | The catalog ID where the table resides.
[$sel:catalogId:CreatePartitionIndex'] :: CreatePartitionIndex -> Maybe Text

-- | Specifies the name of a database in which you want to create a
--   partition index.
[$sel:databaseName:CreatePartitionIndex'] :: CreatePartitionIndex -> Text

-- | Specifies the name of a table in which you want to create a partition
--   index.
[$sel:tableName:CreatePartitionIndex'] :: CreatePartitionIndex -> Text

-- | Specifies a <tt>PartitionIndex</tt> structure to create a partition
--   index in an existing table.
[$sel:partitionIndex:CreatePartitionIndex'] :: CreatePartitionIndex -> PartitionIndex

-- | Create a value of <a>CreatePartitionIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:CreatePartitionIndex'</a>,
--   <a>createPartitionIndex_catalogId</a> - The catalog ID where the table
--   resides.
--   
--   <a>$sel:databaseName:CreatePartitionIndex'</a>,
--   <a>createPartitionIndex_databaseName</a> - Specifies the name of a
--   database in which you want to create a partition index.
--   
--   <a>$sel:tableName:CreatePartitionIndex'</a>,
--   <a>createPartitionIndex_tableName</a> - Specifies the name of a table
--   in which you want to create a partition index.
--   
--   <a>$sel:partitionIndex:CreatePartitionIndex'</a>,
--   <a>createPartitionIndex_partitionIndex</a> - Specifies a
--   <tt>PartitionIndex</tt> structure to create a partition index in an
--   existing table.
newCreatePartitionIndex :: Text -> Text -> PartitionIndex -> CreatePartitionIndex

-- | The catalog ID where the table resides.
createPartitionIndex_catalogId :: Lens' CreatePartitionIndex (Maybe Text)

-- | Specifies the name of a database in which you want to create a
--   partition index.
createPartitionIndex_databaseName :: Lens' CreatePartitionIndex Text

-- | Specifies the name of a table in which you want to create a partition
--   index.
createPartitionIndex_tableName :: Lens' CreatePartitionIndex Text

-- | Specifies a <tt>PartitionIndex</tt> structure to create a partition
--   index in an existing table.
createPartitionIndex_partitionIndex :: Lens' CreatePartitionIndex PartitionIndex

-- | <i>See:</i> <a>newCreatePartitionIndexResponse</a> smart constructor.
data CreatePartitionIndexResponse
CreatePartitionIndexResponse' :: Int -> CreatePartitionIndexResponse

-- | The response's http status code.
[$sel:httpStatus:CreatePartitionIndexResponse'] :: CreatePartitionIndexResponse -> Int

-- | Create a value of <a>CreatePartitionIndexResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreatePartitionIndexResponse'</a>,
--   <a>createPartitionIndexResponse_httpStatus</a> - The response's http
--   status code.
newCreatePartitionIndexResponse :: Int -> CreatePartitionIndexResponse

-- | The response's http status code.
createPartitionIndexResponse_httpStatus :: Lens' CreatePartitionIndexResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.CreatePartitionIndex.CreatePartitionIndex
instance GHC.Show.Show Network.AWS.Glue.CreatePartitionIndex.CreatePartitionIndex
instance GHC.Read.Read Network.AWS.Glue.CreatePartitionIndex.CreatePartitionIndex
instance GHC.Classes.Eq Network.AWS.Glue.CreatePartitionIndex.CreatePartitionIndex
instance GHC.Generics.Generic Network.AWS.Glue.CreatePartitionIndex.CreatePartitionIndexResponse
instance GHC.Show.Show Network.AWS.Glue.CreatePartitionIndex.CreatePartitionIndexResponse
instance GHC.Read.Read Network.AWS.Glue.CreatePartitionIndex.CreatePartitionIndexResponse
instance GHC.Classes.Eq Network.AWS.Glue.CreatePartitionIndex.CreatePartitionIndexResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.CreatePartitionIndex.CreatePartitionIndex
instance Control.DeepSeq.NFData Network.AWS.Glue.CreatePartitionIndex.CreatePartitionIndexResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.CreatePartitionIndex.CreatePartitionIndex
instance Control.DeepSeq.NFData Network.AWS.Glue.CreatePartitionIndex.CreatePartitionIndex
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.CreatePartitionIndex.CreatePartitionIndex
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.CreatePartitionIndex.CreatePartitionIndex
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.CreatePartitionIndex.CreatePartitionIndex
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.CreatePartitionIndex.CreatePartitionIndex


-- | Creates a new partition.
module Network.AWS.Glue.CreatePartition

-- | <i>See:</i> <a>newCreatePartition</a> smart constructor.
data CreatePartition
CreatePartition' :: Maybe Text -> Text -> Text -> PartitionInput -> CreatePartition

-- | The Amazon Web Services account ID of the catalog in which the
--   partition is to be created.
[$sel:catalogId:CreatePartition'] :: CreatePartition -> Maybe Text

-- | The name of the metadata database in which the partition is to be
--   created.
[$sel:databaseName:CreatePartition'] :: CreatePartition -> Text

-- | The name of the metadata table in which the partition is to be
--   created.
[$sel:tableName:CreatePartition'] :: CreatePartition -> Text

-- | A <tt>PartitionInput</tt> structure defining the partition to be
--   created.
[$sel:partitionInput:CreatePartition'] :: CreatePartition -> PartitionInput

-- | Create a value of <a>CreatePartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:CreatePartition'</a>,
--   <a>createPartition_catalogId</a> - The Amazon Web Services account ID
--   of the catalog in which the partition is to be created.
--   
--   <a>$sel:databaseName:CreatePartition'</a>,
--   <a>createPartition_databaseName</a> - The name of the metadata
--   database in which the partition is to be created.
--   
--   <a>$sel:tableName:CreatePartition'</a>,
--   <a>createPartition_tableName</a> - The name of the metadata table in
--   which the partition is to be created.
--   
--   <a>$sel:partitionInput:CreatePartition'</a>,
--   <a>createPartition_partitionInput</a> - A <tt>PartitionInput</tt>
--   structure defining the partition to be created.
newCreatePartition :: Text -> Text -> PartitionInput -> CreatePartition

-- | The Amazon Web Services account ID of the catalog in which the
--   partition is to be created.
createPartition_catalogId :: Lens' CreatePartition (Maybe Text)

-- | The name of the metadata database in which the partition is to be
--   created.
createPartition_databaseName :: Lens' CreatePartition Text

-- | The name of the metadata table in which the partition is to be
--   created.
createPartition_tableName :: Lens' CreatePartition Text

-- | A <tt>PartitionInput</tt> structure defining the partition to be
--   created.
createPartition_partitionInput :: Lens' CreatePartition PartitionInput

-- | <i>See:</i> <a>newCreatePartitionResponse</a> smart constructor.
data CreatePartitionResponse
CreatePartitionResponse' :: Int -> CreatePartitionResponse

-- | The response's http status code.
[$sel:httpStatus:CreatePartitionResponse'] :: CreatePartitionResponse -> Int

-- | Create a value of <a>CreatePartitionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreatePartitionResponse'</a>,
--   <a>createPartitionResponse_httpStatus</a> - The response's http status
--   code.
newCreatePartitionResponse :: Int -> CreatePartitionResponse

-- | The response's http status code.
createPartitionResponse_httpStatus :: Lens' CreatePartitionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.CreatePartition.CreatePartition
instance GHC.Show.Show Network.AWS.Glue.CreatePartition.CreatePartition
instance GHC.Read.Read Network.AWS.Glue.CreatePartition.CreatePartition
instance GHC.Classes.Eq Network.AWS.Glue.CreatePartition.CreatePartition
instance GHC.Generics.Generic Network.AWS.Glue.CreatePartition.CreatePartitionResponse
instance GHC.Show.Show Network.AWS.Glue.CreatePartition.CreatePartitionResponse
instance GHC.Read.Read Network.AWS.Glue.CreatePartition.CreatePartitionResponse
instance GHC.Classes.Eq Network.AWS.Glue.CreatePartition.CreatePartitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.CreatePartition.CreatePartition
instance Control.DeepSeq.NFData Network.AWS.Glue.CreatePartition.CreatePartitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.CreatePartition.CreatePartition
instance Control.DeepSeq.NFData Network.AWS.Glue.CreatePartition.CreatePartition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.CreatePartition.CreatePartition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.CreatePartition.CreatePartition
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.CreatePartition.CreatePartition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.CreatePartition.CreatePartition


-- | Creates an Glue machine learning transform. This operation creates the
--   transform and all the necessary parameters to train it.
--   
--   Call this operation as the first step in the process of using a
--   machine learning transform (such as the <tt>FindMatches</tt>
--   transform) for deduplicating data. You can provide an optional
--   <tt>Description</tt>, in addition to the parameters that you want to
--   use for your algorithm.
--   
--   You must also specify certain parameters for the tasks that Glue runs
--   on your behalf as part of learning from your data and creating a
--   high-quality machine learning transform. These parameters include
--   <tt>Role</tt>, and optionally, <tt>AllocatedCapacity</tt>,
--   <tt>Timeout</tt>, and <tt>MaxRetries</tt>. For more information, see
--   <a>Jobs</a>.
module Network.AWS.Glue.CreateMLTransform

-- | <i>See:</i> <a>newCreateMLTransform</a> smart constructor.
data CreateMLTransform
CreateMLTransform' :: Maybe Int -> Maybe WorkerType -> Maybe Text -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe TransformEncryption -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> [GlueTable] -> TransformParameters -> Text -> CreateMLTransform

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when this task runs.
--   
--   If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).
[$sel:numberOfWorkers:CreateMLTransform'] :: CreateMLTransform -> Maybe Int

-- | The type of predefined worker that is allocated when this task runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
[$sel:workerType:CreateMLTransform'] :: CreateMLTransform -> Maybe WorkerType

-- | This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
[$sel:glueVersion:CreateMLTransform'] :: CreateMLTransform -> Maybe Text

-- | The maximum number of times to retry a task for this transform after a
--   task run fails.
[$sel:maxRetries:CreateMLTransform'] :: CreateMLTransform -> Maybe Int

-- | The number of Glue data processing units (DPUs) that are allocated to
--   task runs for this transform. You can allocate from 2 to 100 DPUs; the
--   default is 10. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
[$sel:maxCapacity:CreateMLTransform'] :: CreateMLTransform -> Maybe Double

-- | The timeout of the task run for this transform in minutes. This is the
--   maximum time that a task run for this transform can consume resources
--   before it is terminated and enters <tt>TIMEOUT</tt> status. The
--   default is 2,880 minutes (48 hours).
[$sel:timeout:CreateMLTransform'] :: CreateMLTransform -> Maybe Natural

-- | The encryption-at-rest settings of the transform that apply to
--   accessing user data. Machine learning transforms can access user data
--   encrypted in Amazon S3 using KMS.
[$sel:transformEncryption:CreateMLTransform'] :: CreateMLTransform -> Maybe TransformEncryption

-- | A description of the machine learning transform that is being defined.
--   The default is an empty string.
[$sel:description:CreateMLTransform'] :: CreateMLTransform -> Maybe Text

-- | The tags to use with this machine learning transform. You may use tags
--   to limit access to the machine learning transform. For more
--   information about tags in Glue, see <a>Amazon Web Services Tags in
--   Glue</a> in the developer guide.
[$sel:tags:CreateMLTransform'] :: CreateMLTransform -> Maybe (HashMap Text Text)

-- | The unique name that you give the transform when you create it.
[$sel:name:CreateMLTransform'] :: CreateMLTransform -> Text

-- | A list of Glue table definitions used by the transform.
[$sel:inputRecordTables:CreateMLTransform'] :: CreateMLTransform -> [GlueTable]

-- | The algorithmic parameters that are specific to the transform type
--   used. Conditionally dependent on the transform type.
[$sel:parameters:CreateMLTransform'] :: CreateMLTransform -> TransformParameters

-- | The name or Amazon Resource Name (ARN) of the IAM role with the
--   required permissions. The required permissions include both Glue
--   service role permissions to Glue resources, and Amazon S3 permissions
--   required by the transform.
--   
--   <ul>
--   <li>This role needs Glue service role permissions to allow access to
--   resources in Glue. See <a>Attach a Policy to IAM Users That Access
--   Glue</a>.</li>
--   <li>This role needs permission to your Amazon Simple Storage Service
--   (Amazon S3) sources, targets, temporary directory, scripts, and any
--   libraries used by the task run for this transform.</li>
--   </ul>
[$sel:role':CreateMLTransform'] :: CreateMLTransform -> Text

-- | Create a value of <a>CreateMLTransform</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfWorkers:CreateMLTransform'</a>,
--   <a>createMLTransform_numberOfWorkers</a> - The number of workers of a
--   defined <tt>workerType</tt> that are allocated when this task runs.
--   
--   If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).
--   
--   <a>$sel:workerType:CreateMLTransform'</a>,
--   <a>createMLTransform_workerType</a> - The type of predefined worker
--   that is allocated when this task runs. Accepts a value of Standard,
--   G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
--   
--   <a>$sel:glueVersion:CreateMLTransform'</a>,
--   <a>createMLTransform_glueVersion</a> - This value determines which
--   version of Glue this machine learning transform is compatible with.
--   Glue 1.0 is recommended for most customers. If the value is not set,
--   the Glue compatibility defaults to Glue 0.9. For more information, see
--   <a>Glue Versions</a> in the developer guide.
--   
--   <a>$sel:maxRetries:CreateMLTransform'</a>,
--   <a>createMLTransform_maxRetries</a> - The maximum number of times to
--   retry a task for this transform after a task run fails.
--   
--   <a>$sel:maxCapacity:CreateMLTransform'</a>,
--   <a>createMLTransform_maxCapacity</a> - The number of Glue data
--   processing units (DPUs) that are allocated to task runs for this
--   transform. You can allocate from 2 to 100 DPUs; the default is 10. A
--   DPU is a relative measure of processing power that consists of 4 vCPUs
--   of compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
--   
--   <a>$sel:timeout:CreateMLTransform'</a>,
--   <a>createMLTransform_timeout</a> - The timeout of the task run for
--   this transform in minutes. This is the maximum time that a task run
--   for this transform can consume resources before it is terminated and
--   enters <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48
--   hours).
--   
--   <a>$sel:transformEncryption:CreateMLTransform'</a>,
--   <a>createMLTransform_transformEncryption</a> - The encryption-at-rest
--   settings of the transform that apply to accessing user data. Machine
--   learning transforms can access user data encrypted in Amazon S3 using
--   KMS.
--   
--   <a>$sel:description:CreateMLTransform'</a>,
--   <a>createMLTransform_description</a> - A description of the machine
--   learning transform that is being defined. The default is an empty
--   string.
--   
--   <a>$sel:tags:CreateMLTransform'</a>, <a>createMLTransform_tags</a> -
--   The tags to use with this machine learning transform. You may use tags
--   to limit access to the machine learning transform. For more
--   information about tags in Glue, see <a>Amazon Web Services Tags in
--   Glue</a> in the developer guide.
--   
--   <a>$sel:name:CreateMLTransform'</a>, <a>createMLTransform_name</a> -
--   The unique name that you give the transform when you create it.
--   
--   <a>$sel:inputRecordTables:CreateMLTransform'</a>,
--   <a>createMLTransform_inputRecordTables</a> - A list of Glue table
--   definitions used by the transform.
--   
--   <a>$sel:parameters:CreateMLTransform'</a>,
--   <a>createMLTransform_parameters</a> - The algorithmic parameters that
--   are specific to the transform type used. Conditionally dependent on
--   the transform type.
--   
--   <a>$sel:role':CreateMLTransform'</a>, <a>createMLTransform_role</a> -
--   The name or Amazon Resource Name (ARN) of the IAM role with the
--   required permissions. The required permissions include both Glue
--   service role permissions to Glue resources, and Amazon S3 permissions
--   required by the transform.
--   
--   <ul>
--   <li>This role needs Glue service role permissions to allow access to
--   resources in Glue. See <a>Attach a Policy to IAM Users That Access
--   Glue</a>.</li>
--   <li>This role needs permission to your Amazon Simple Storage Service
--   (Amazon S3) sources, targets, temporary directory, scripts, and any
--   libraries used by the task run for this transform.</li>
--   </ul>
newCreateMLTransform :: Text -> TransformParameters -> Text -> CreateMLTransform

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when this task runs.
--   
--   If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).
createMLTransform_numberOfWorkers :: Lens' CreateMLTransform (Maybe Int)

-- | The type of predefined worker that is allocated when this task runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
createMLTransform_workerType :: Lens' CreateMLTransform (Maybe WorkerType)

-- | This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
createMLTransform_glueVersion :: Lens' CreateMLTransform (Maybe Text)

-- | The maximum number of times to retry a task for this transform after a
--   task run fails.
createMLTransform_maxRetries :: Lens' CreateMLTransform (Maybe Int)

-- | The number of Glue data processing units (DPUs) that are allocated to
--   task runs for this transform. You can allocate from 2 to 100 DPUs; the
--   default is 10. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
createMLTransform_maxCapacity :: Lens' CreateMLTransform (Maybe Double)

-- | The timeout of the task run for this transform in minutes. This is the
--   maximum time that a task run for this transform can consume resources
--   before it is terminated and enters <tt>TIMEOUT</tt> status. The
--   default is 2,880 minutes (48 hours).
createMLTransform_timeout :: Lens' CreateMLTransform (Maybe Natural)

-- | The encryption-at-rest settings of the transform that apply to
--   accessing user data. Machine learning transforms can access user data
--   encrypted in Amazon S3 using KMS.
createMLTransform_transformEncryption :: Lens' CreateMLTransform (Maybe TransformEncryption)

-- | A description of the machine learning transform that is being defined.
--   The default is an empty string.
createMLTransform_description :: Lens' CreateMLTransform (Maybe Text)

-- | The tags to use with this machine learning transform. You may use tags
--   to limit access to the machine learning transform. For more
--   information about tags in Glue, see <a>Amazon Web Services Tags in
--   Glue</a> in the developer guide.
createMLTransform_tags :: Lens' CreateMLTransform (Maybe (HashMap Text Text))

-- | The unique name that you give the transform when you create it.
createMLTransform_name :: Lens' CreateMLTransform Text

-- | A list of Glue table definitions used by the transform.
createMLTransform_inputRecordTables :: Lens' CreateMLTransform [GlueTable]

-- | The algorithmic parameters that are specific to the transform type
--   used. Conditionally dependent on the transform type.
createMLTransform_parameters :: Lens' CreateMLTransform TransformParameters

-- | The name or Amazon Resource Name (ARN) of the IAM role with the
--   required permissions. The required permissions include both Glue
--   service role permissions to Glue resources, and Amazon S3 permissions
--   required by the transform.
--   
--   <ul>
--   <li>This role needs Glue service role permissions to allow access to
--   resources in Glue. See <a>Attach a Policy to IAM Users That Access
--   Glue</a>.</li>
--   <li>This role needs permission to your Amazon Simple Storage Service
--   (Amazon S3) sources, targets, temporary directory, scripts, and any
--   libraries used by the task run for this transform.</li>
--   </ul>
createMLTransform_role :: Lens' CreateMLTransform Text

-- | <i>See:</i> <a>newCreateMLTransformResponse</a> smart constructor.
data CreateMLTransformResponse
CreateMLTransformResponse' :: Maybe Text -> Int -> CreateMLTransformResponse

-- | A unique identifier that is generated for the transform.
[$sel:transformId:CreateMLTransformResponse'] :: CreateMLTransformResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateMLTransformResponse'] :: CreateMLTransformResponse -> Int

-- | Create a value of <a>CreateMLTransformResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transformId:CreateMLTransformResponse'</a>,
--   <a>createMLTransformResponse_transformId</a> - A unique identifier
--   that is generated for the transform.
--   
--   <a>$sel:httpStatus:CreateMLTransformResponse'</a>,
--   <a>createMLTransformResponse_httpStatus</a> - The response's http
--   status code.
newCreateMLTransformResponse :: Int -> CreateMLTransformResponse

-- | A unique identifier that is generated for the transform.
createMLTransformResponse_transformId :: Lens' CreateMLTransformResponse (Maybe Text)

-- | The response's http status code.
createMLTransformResponse_httpStatus :: Lens' CreateMLTransformResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.CreateMLTransform.CreateMLTransform
instance GHC.Show.Show Network.AWS.Glue.CreateMLTransform.CreateMLTransform
instance GHC.Read.Read Network.AWS.Glue.CreateMLTransform.CreateMLTransform
instance GHC.Classes.Eq Network.AWS.Glue.CreateMLTransform.CreateMLTransform
instance GHC.Generics.Generic Network.AWS.Glue.CreateMLTransform.CreateMLTransformResponse
instance GHC.Show.Show Network.AWS.Glue.CreateMLTransform.CreateMLTransformResponse
instance GHC.Read.Read Network.AWS.Glue.CreateMLTransform.CreateMLTransformResponse
instance GHC.Classes.Eq Network.AWS.Glue.CreateMLTransform.CreateMLTransformResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.CreateMLTransform.CreateMLTransform
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateMLTransform.CreateMLTransformResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.CreateMLTransform.CreateMLTransform
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateMLTransform.CreateMLTransform
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.CreateMLTransform.CreateMLTransform
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.CreateMLTransform.CreateMLTransform
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.CreateMLTransform.CreateMLTransform
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.CreateMLTransform.CreateMLTransform


-- | Creates a new job definition.
module Network.AWS.Glue.CreateJob

-- | <i>See:</i> <a>newCreateJob</a> smart constructor.
data CreateJob
CreateJob' :: Maybe Int -> Maybe NotificationProperty -> Maybe ConnectionsList -> Maybe WorkerType -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Int -> Maybe ExecutionProperty -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> JobCommand -> CreateJob

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
[$sel:numberOfWorkers:CreateJob'] :: CreateJob -> Maybe Int

-- | Specifies configuration properties of a job notification.
[$sel:notificationProperty:CreateJob'] :: CreateJob -> Maybe NotificationProperty

-- | The connections used for this job.
[$sel:connections:CreateJob'] :: CreateJob -> Maybe ConnectionsList

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
[$sel:workerType:CreateJob'] :: CreateJob -> Maybe WorkerType

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job.
[$sel:securityConfiguration:CreateJob'] :: CreateJob -> Maybe Text

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
[$sel:glueVersion:CreateJob'] :: CreateJob -> Maybe Text

-- | Non-overridable arguments for this job, specified as name-value pairs.
[$sel:nonOverridableArguments:CreateJob'] :: CreateJob -> Maybe (HashMap Text Text)

-- | This field is reserved for future use.
[$sel:logUri:CreateJob'] :: CreateJob -> Maybe Text

-- | The maximum number of times to retry this job if it fails.
[$sel:maxRetries:CreateJob'] :: CreateJob -> Maybe Int

-- | An <tt>ExecutionProperty</tt> specifying the maximum number of
--   concurrent runs allowed for this job.
[$sel:executionProperty:CreateJob'] :: CreateJob -> Maybe ExecutionProperty

-- | This parameter is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) to allocate to this
--   Job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is
--   a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
[$sel:allocatedCapacity:CreateJob'] :: CreateJob -> Maybe Int

-- | For Glue version 1.0 or earlier jobs, using the standard worker type,
--   the number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
[$sel:maxCapacity:CreateJob'] :: CreateJob -> Maybe Double

-- | The job timeout in minutes. This is the maximum time that a job run
--   can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours).
[$sel:timeout:CreateJob'] :: CreateJob -> Maybe Natural

-- | The default arguments for this job.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
[$sel:defaultArguments:CreateJob'] :: CreateJob -> Maybe (HashMap Text Text)

-- | Description of the job being defined.
[$sel:description:CreateJob'] :: CreateJob -> Maybe Text

-- | The tags to use with this job. You may use tags to limit access to the
--   job. For more information about tags in Glue, see <a>Amazon Web
--   Services Tags in Glue</a> in the developer guide.
[$sel:tags:CreateJob'] :: CreateJob -> Maybe (HashMap Text Text)

-- | The name you assign to this job definition. It must be unique in your
--   account.
[$sel:name:CreateJob'] :: CreateJob -> Text

-- | The name or Amazon Resource Name (ARN) of the IAM role associated with
--   this job.
[$sel:role':CreateJob'] :: CreateJob -> Text

-- | The <tt>JobCommand</tt> that runs this job.
[$sel:command:CreateJob'] :: CreateJob -> JobCommand

-- | Create a value of <a>CreateJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfWorkers:CreateJob'</a>,
--   <a>createJob_numberOfWorkers</a> - The number of workers of a defined
--   <tt>workerType</tt> that are allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
--   
--   <a>$sel:notificationProperty:CreateJob'</a>,
--   <a>createJob_notificationProperty</a> - Specifies configuration
--   properties of a job notification.
--   
--   <a>$sel:connections:CreateJob'</a>, <a>createJob_connections</a> - The
--   connections used for this job.
--   
--   <a>$sel:workerType:CreateJob'</a>, <a>createJob_workerType</a> - The
--   type of predefined worker that is allocated when a job runs. Accepts a
--   value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   <a>$sel:securityConfiguration:CreateJob'</a>,
--   <a>createJob_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this job.
--   
--   <a>$sel:glueVersion:CreateJob'</a>, <a>createJob_glueVersion</a> -
--   Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
--   
--   <a>$sel:nonOverridableArguments:CreateJob'</a>,
--   <a>createJob_nonOverridableArguments</a> - Non-overridable arguments
--   for this job, specified as name-value pairs.
--   
--   <a>$sel:logUri:CreateJob'</a>, <a>createJob_logUri</a> - This field is
--   reserved for future use.
--   
--   <a>$sel:maxRetries:CreateJob'</a>, <a>createJob_maxRetries</a> - The
--   maximum number of times to retry this job if it fails.
--   
--   <a>$sel:executionProperty:CreateJob'</a>,
--   <a>createJob_executionProperty</a> - An <tt>ExecutionProperty</tt>
--   specifying the maximum number of concurrent runs allowed for this job.
--   
--   <a>$sel:allocatedCapacity:CreateJob'</a>,
--   <a>createJob_allocatedCapacity</a> - This parameter is deprecated. Use
--   <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) to allocate to this
--   Job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is
--   a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
--   
--   <a>$sel:maxCapacity:CreateJob'</a>, <a>createJob_maxCapacity</a> - For
--   Glue version 1.0 or earlier jobs, using the standard worker type, the
--   number of Glue data processing units (DPUs) that can be allocated when
--   this job runs. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
--   
--   <a>$sel:timeout:CreateJob'</a>, <a>createJob_timeout</a> - The job
--   timeout in minutes. This is the maximum time that a job run can
--   consume resources before it is terminated and enters <tt>TIMEOUT</tt>
--   status. The default is 2,880 minutes (48 hours).
--   
--   <a>$sel:defaultArguments:CreateJob'</a>,
--   <a>createJob_defaultArguments</a> - The default arguments for this
--   job.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
--   
--   <a>$sel:description:CreateJob'</a>, <a>createJob_description</a> -
--   Description of the job being defined.
--   
--   <a>$sel:tags:CreateJob'</a>, <a>createJob_tags</a> - The tags to use
--   with this job. You may use tags to limit access to the job. For more
--   information about tags in Glue, see <a>Amazon Web Services Tags in
--   Glue</a> in the developer guide.
--   
--   <a>$sel:name:CreateJob'</a>, <a>createJob_name</a> - The name you
--   assign to this job definition. It must be unique in your account.
--   
--   <a>$sel:role':CreateJob'</a>, <a>createJob_role</a> - The name or
--   Amazon Resource Name (ARN) of the IAM role associated with this job.
--   
--   <a>$sel:command:CreateJob'</a>, <a>createJob_command</a> - The
--   <tt>JobCommand</tt> that runs this job.
newCreateJob :: Text -> Text -> JobCommand -> CreateJob

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
createJob_numberOfWorkers :: Lens' CreateJob (Maybe Int)

-- | Specifies configuration properties of a job notification.
createJob_notificationProperty :: Lens' CreateJob (Maybe NotificationProperty)

-- | The connections used for this job.
createJob_connections :: Lens' CreateJob (Maybe ConnectionsList)

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
createJob_workerType :: Lens' CreateJob (Maybe WorkerType)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job.
createJob_securityConfiguration :: Lens' CreateJob (Maybe Text)

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
createJob_glueVersion :: Lens' CreateJob (Maybe Text)

-- | Non-overridable arguments for this job, specified as name-value pairs.
createJob_nonOverridableArguments :: Lens' CreateJob (Maybe (HashMap Text Text))

-- | This field is reserved for future use.
createJob_logUri :: Lens' CreateJob (Maybe Text)

-- | The maximum number of times to retry this job if it fails.
createJob_maxRetries :: Lens' CreateJob (Maybe Int)

-- | An <tt>ExecutionProperty</tt> specifying the maximum number of
--   concurrent runs allowed for this job.
createJob_executionProperty :: Lens' CreateJob (Maybe ExecutionProperty)

-- | This parameter is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) to allocate to this
--   Job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is
--   a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
createJob_allocatedCapacity :: Lens' CreateJob (Maybe Int)

-- | For Glue version 1.0 or earlier jobs, using the standard worker type,
--   the number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
createJob_maxCapacity :: Lens' CreateJob (Maybe Double)

-- | The job timeout in minutes. This is the maximum time that a job run
--   can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours).
createJob_timeout :: Lens' CreateJob (Maybe Natural)

-- | The default arguments for this job.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
createJob_defaultArguments :: Lens' CreateJob (Maybe (HashMap Text Text))

-- | Description of the job being defined.
createJob_description :: Lens' CreateJob (Maybe Text)

-- | The tags to use with this job. You may use tags to limit access to the
--   job. For more information about tags in Glue, see <a>Amazon Web
--   Services Tags in Glue</a> in the developer guide.
createJob_tags :: Lens' CreateJob (Maybe (HashMap Text Text))

-- | The name you assign to this job definition. It must be unique in your
--   account.
createJob_name :: Lens' CreateJob Text

-- | The name or Amazon Resource Name (ARN) of the IAM role associated with
--   this job.
createJob_role :: Lens' CreateJob Text

-- | The <tt>JobCommand</tt> that runs this job.
createJob_command :: Lens' CreateJob JobCommand

-- | <i>See:</i> <a>newCreateJobResponse</a> smart constructor.
data CreateJobResponse
CreateJobResponse' :: Maybe Text -> Int -> CreateJobResponse

-- | The unique name that was provided for this job definition.
[$sel:name:CreateJobResponse'] :: CreateJobResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateJobResponse'] :: CreateJobResponse -> Int

-- | Create a value of <a>CreateJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateJob'</a>, <a>createJobResponse_name</a> - The
--   unique name that was provided for this job definition.
--   
--   <a>$sel:httpStatus:CreateJobResponse'</a>,
--   <a>createJobResponse_httpStatus</a> - The response's http status code.
newCreateJobResponse :: Int -> CreateJobResponse

-- | The unique name that was provided for this job definition.
createJobResponse_name :: Lens' CreateJobResponse (Maybe Text)

-- | The response's http status code.
createJobResponse_httpStatus :: Lens' CreateJobResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.CreateJob.CreateJob
instance GHC.Show.Show Network.AWS.Glue.CreateJob.CreateJob
instance GHC.Read.Read Network.AWS.Glue.CreateJob.CreateJob
instance GHC.Classes.Eq Network.AWS.Glue.CreateJob.CreateJob
instance GHC.Generics.Generic Network.AWS.Glue.CreateJob.CreateJobResponse
instance GHC.Show.Show Network.AWS.Glue.CreateJob.CreateJobResponse
instance GHC.Read.Read Network.AWS.Glue.CreateJob.CreateJobResponse
instance GHC.Classes.Eq Network.AWS.Glue.CreateJob.CreateJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.CreateJob.CreateJob
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateJob.CreateJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.CreateJob.CreateJob
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateJob.CreateJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.CreateJob.CreateJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.CreateJob.CreateJob
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.CreateJob.CreateJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.CreateJob.CreateJob


-- | Creates a new development endpoint.
module Network.AWS.Glue.CreateDevEndpoint

-- | <i>See:</i> <a>newCreateDevEndpoint</a> smart constructor.
data CreateDevEndpoint
CreateDevEndpoint' :: Maybe Int -> Maybe Text -> Maybe [Text] -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe WorkerType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> CreateDevEndpoint

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated to the development endpoint.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
[$sel:numberOfWorkers:CreateDevEndpoint'] :: CreateDevEndpoint -> Maybe Int

-- | The paths to one or more Python libraries in an Amazon S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>. Multiple values must be
--   complete paths separated by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not yet supported.
[$sel:extraPythonLibsS3Path:CreateDevEndpoint'] :: CreateDevEndpoint -> Maybe Text

-- | Security group IDs for the security groups to be used by the new
--   <tt>DevEndpoint</tt>.
[$sel:securityGroupIds:CreateDevEndpoint'] :: CreateDevEndpoint -> Maybe [Text]

-- | A list of public keys to be used by the development endpoints for
--   authentication. The use of this attribute is preferred over a single
--   public key because the public keys allow you to have a different
--   private key per client.
--   
--   If you previously created an endpoint with a public key, you must
--   remove that key to be able to set a list of public keys. Call the
--   <tt>UpdateDevEndpoint</tt> API with the public key content in the
--   <tt>deletePublicKeys</tt> attribute, and the list of new keys in the
--   <tt>addPublicKeys</tt> attribute.
[$sel:publicKeys:CreateDevEndpoint'] :: CreateDevEndpoint -> Maybe [Text]

-- | A map of arguments used to configure the <tt>DevEndpoint</tt>.
[$sel:arguments:CreateDevEndpoint'] :: CreateDevEndpoint -> Maybe (HashMap Text Text)

-- | The type of predefined worker that is allocated to the development
--   endpoint. Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   Known issue: when a development endpoint is created with the
--   <tt>G.2X</tt> <tt>WorkerType</tt> configuration, the Spark drivers for
--   the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64
--   GB disk.
[$sel:workerType:CreateDevEndpoint'] :: CreateDevEndpoint -> Maybe WorkerType

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this <tt>DevEndpoint</tt>.
[$sel:securityConfiguration:CreateDevEndpoint'] :: CreateDevEndpoint -> Maybe Text

-- | The public key to be used by this <tt>DevEndpoint</tt> for
--   authentication. This attribute is provided for backward compatibility
--   because the recommended attribute to use is public keys.
[$sel:publicKey:CreateDevEndpoint'] :: CreateDevEndpoint -> Maybe Text

-- | The subnet ID for the new <tt>DevEndpoint</tt> to use.
[$sel:subnetId:CreateDevEndpoint'] :: CreateDevEndpoint -> Maybe Text

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   running your ETL scripts on development endpoints.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Development endpoints that are created without specifying a Glue
--   version default to Glue 0.9.
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
[$sel:glueVersion:CreateDevEndpoint'] :: CreateDevEndpoint -> Maybe Text

-- | The number of Glue Data Processing Units (DPUs) to allocate to this
--   <tt>DevEndpoint</tt>.
[$sel:numberOfNodes:CreateDevEndpoint'] :: CreateDevEndpoint -> Maybe Int

-- | The path to one or more Java <tt>.jar</tt> files in an S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>.
[$sel:extraJarsS3Path:CreateDevEndpoint'] :: CreateDevEndpoint -> Maybe Text

-- | The tags to use with this DevEndpoint. You may use tags to limit
--   access to the DevEndpoint. For more information about tags in Glue,
--   see <a>Amazon Web Services Tags in Glue</a> in the developer guide.
[$sel:tags:CreateDevEndpoint'] :: CreateDevEndpoint -> Maybe (HashMap Text Text)

-- | The name to be assigned to the new <tt>DevEndpoint</tt>.
[$sel:endpointName:CreateDevEndpoint'] :: CreateDevEndpoint -> Text

-- | The IAM role for the <tt>DevEndpoint</tt>.
[$sel:roleArn:CreateDevEndpoint'] :: CreateDevEndpoint -> Text

-- | Create a value of <a>CreateDevEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfWorkers:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_numberOfWorkers</a> - The number of workers of a
--   defined <tt>workerType</tt> that are allocated to the development
--   endpoint.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
--   
--   <a>$sel:extraPythonLibsS3Path:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_extraPythonLibsS3Path</a> - The paths to one or
--   more Python libraries in an Amazon S3 bucket that should be loaded in
--   your <tt>DevEndpoint</tt>. Multiple values must be complete paths
--   separated by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not yet supported.
--   
--   <a>$sel:securityGroupIds:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_securityGroupIds</a> - Security group IDs for the
--   security groups to be used by the new <tt>DevEndpoint</tt>.
--   
--   <a>$sel:publicKeys:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_publicKeys</a> - A list of public keys to be used
--   by the development endpoints for authentication. The use of this
--   attribute is preferred over a single public key because the public
--   keys allow you to have a different private key per client.
--   
--   If you previously created an endpoint with a public key, you must
--   remove that key to be able to set a list of public keys. Call the
--   <tt>UpdateDevEndpoint</tt> API with the public key content in the
--   <tt>deletePublicKeys</tt> attribute, and the list of new keys in the
--   <tt>addPublicKeys</tt> attribute.
--   
--   <a>$sel:arguments:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_arguments</a> - A map of arguments used to
--   configure the <tt>DevEndpoint</tt>.
--   
--   <a>$sel:workerType:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_workerType</a> - The type of predefined worker
--   that is allocated to the development endpoint. Accepts a value of
--   Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   Known issue: when a development endpoint is created with the
--   <tt>G.2X</tt> <tt>WorkerType</tt> configuration, the Spark drivers for
--   the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64
--   GB disk.
--   
--   <a>$sel:securityConfiguration:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this
--   <tt>DevEndpoint</tt>.
--   
--   <a>$sel:publicKey:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_publicKey</a> - The public key to be used by this
--   <tt>DevEndpoint</tt> for authentication. This attribute is provided
--   for backward compatibility because the recommended attribute to use is
--   public keys.
--   
--   <a>$sel:subnetId:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_subnetId</a> - The subnet ID for the new
--   <tt>DevEndpoint</tt> to use.
--   
--   <a>$sel:glueVersion:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_glueVersion</a> - Glue version determines the
--   versions of Apache Spark and Python that Glue supports. The Python
--   version indicates the version supported for running your ETL scripts
--   on development endpoints.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Development endpoints that are created without specifying a Glue
--   version default to Glue 0.9.
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
--   
--   <a>$sel:numberOfNodes:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_numberOfNodes</a> - The number of Glue Data
--   Processing Units (DPUs) to allocate to this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:extraJarsS3Path:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_extraJarsS3Path</a> - The path to one or more
--   Java <tt>.jar</tt> files in an S3 bucket that should be loaded in your
--   <tt>DevEndpoint</tt>.
--   
--   <a>$sel:tags:CreateDevEndpoint'</a>, <a>createDevEndpoint_tags</a> -
--   The tags to use with this DevEndpoint. You may use tags to limit
--   access to the DevEndpoint. For more information about tags in Glue,
--   see <a>Amazon Web Services Tags in Glue</a> in the developer guide.
--   
--   <a>$sel:endpointName:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_endpointName</a> - The name to be assigned to the
--   new <tt>DevEndpoint</tt>.
--   
--   <a>$sel:roleArn:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_roleArn</a> - The IAM role for the
--   <tt>DevEndpoint</tt>.
newCreateDevEndpoint :: Text -> Text -> CreateDevEndpoint

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated to the development endpoint.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
createDevEndpoint_numberOfWorkers :: Lens' CreateDevEndpoint (Maybe Int)

-- | The paths to one or more Python libraries in an Amazon S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>. Multiple values must be
--   complete paths separated by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not yet supported.
createDevEndpoint_extraPythonLibsS3Path :: Lens' CreateDevEndpoint (Maybe Text)

-- | Security group IDs for the security groups to be used by the new
--   <tt>DevEndpoint</tt>.
createDevEndpoint_securityGroupIds :: Lens' CreateDevEndpoint (Maybe [Text])

-- | A list of public keys to be used by the development endpoints for
--   authentication. The use of this attribute is preferred over a single
--   public key because the public keys allow you to have a different
--   private key per client.
--   
--   If you previously created an endpoint with a public key, you must
--   remove that key to be able to set a list of public keys. Call the
--   <tt>UpdateDevEndpoint</tt> API with the public key content in the
--   <tt>deletePublicKeys</tt> attribute, and the list of new keys in the
--   <tt>addPublicKeys</tt> attribute.
createDevEndpoint_publicKeys :: Lens' CreateDevEndpoint (Maybe [Text])

-- | A map of arguments used to configure the <tt>DevEndpoint</tt>.
createDevEndpoint_arguments :: Lens' CreateDevEndpoint (Maybe (HashMap Text Text))

-- | The type of predefined worker that is allocated to the development
--   endpoint. Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   Known issue: when a development endpoint is created with the
--   <tt>G.2X</tt> <tt>WorkerType</tt> configuration, the Spark drivers for
--   the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64
--   GB disk.
createDevEndpoint_workerType :: Lens' CreateDevEndpoint (Maybe WorkerType)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this <tt>DevEndpoint</tt>.
createDevEndpoint_securityConfiguration :: Lens' CreateDevEndpoint (Maybe Text)

-- | The public key to be used by this <tt>DevEndpoint</tt> for
--   authentication. This attribute is provided for backward compatibility
--   because the recommended attribute to use is public keys.
createDevEndpoint_publicKey :: Lens' CreateDevEndpoint (Maybe Text)

-- | The subnet ID for the new <tt>DevEndpoint</tt> to use.
createDevEndpoint_subnetId :: Lens' CreateDevEndpoint (Maybe Text)

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   running your ETL scripts on development endpoints.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Development endpoints that are created without specifying a Glue
--   version default to Glue 0.9.
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
createDevEndpoint_glueVersion :: Lens' CreateDevEndpoint (Maybe Text)

-- | The number of Glue Data Processing Units (DPUs) to allocate to this
--   <tt>DevEndpoint</tt>.
createDevEndpoint_numberOfNodes :: Lens' CreateDevEndpoint (Maybe Int)

-- | The path to one or more Java <tt>.jar</tt> files in an S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>.
createDevEndpoint_extraJarsS3Path :: Lens' CreateDevEndpoint (Maybe Text)

-- | The tags to use with this DevEndpoint. You may use tags to limit
--   access to the DevEndpoint. For more information about tags in Glue,
--   see <a>Amazon Web Services Tags in Glue</a> in the developer guide.
createDevEndpoint_tags :: Lens' CreateDevEndpoint (Maybe (HashMap Text Text))

-- | The name to be assigned to the new <tt>DevEndpoint</tt>.
createDevEndpoint_endpointName :: Lens' CreateDevEndpoint Text

-- | The IAM role for the <tt>DevEndpoint</tt>.
createDevEndpoint_roleArn :: Lens' CreateDevEndpoint Text

-- | <i>See:</i> <a>newCreateDevEndpointResponse</a> smart constructor.
data CreateDevEndpointResponse
CreateDevEndpointResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe WorkerType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Int -> CreateDevEndpointResponse

-- | The current status of the new <tt>DevEndpoint</tt>.
[$sel:status:CreateDevEndpointResponse'] :: CreateDevEndpointResponse -> Maybe Text

-- | The reason for a current failure in this <tt>DevEndpoint</tt>.
[$sel:failureReason:CreateDevEndpointResponse'] :: CreateDevEndpointResponse -> Maybe Text

-- | The name assigned to the new <tt>DevEndpoint</tt>.
[$sel:endpointName:CreateDevEndpointResponse'] :: CreateDevEndpointResponse -> Maybe Text

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated to the development endpoint.
[$sel:numberOfWorkers:CreateDevEndpointResponse'] :: CreateDevEndpointResponse -> Maybe Int

-- | The paths to one or more Python libraries in an S3 bucket that will be
--   loaded in your <tt>DevEndpoint</tt>.
[$sel:extraPythonLibsS3Path:CreateDevEndpointResponse'] :: CreateDevEndpointResponse -> Maybe Text

-- | The security groups assigned to the new <tt>DevEndpoint</tt>.
[$sel:securityGroupIds:CreateDevEndpointResponse'] :: CreateDevEndpointResponse -> Maybe [Text]

-- | The ID of the virtual private cloud (VPC) used by this
--   <tt>DevEndpoint</tt>.
[$sel:vpcId:CreateDevEndpointResponse'] :: CreateDevEndpointResponse -> Maybe Text

-- | The map of arguments used to configure this <tt>DevEndpoint</tt>.
--   
--   Valid arguments are:
--   
--   <ul>
--   <li><pre>"--enable-glue-datacatalog": ""</pre></li>
--   </ul>
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
[$sel:arguments:CreateDevEndpointResponse'] :: CreateDevEndpointResponse -> Maybe (HashMap Text Text)

-- | The type of predefined worker that is allocated to the development
--   endpoint. May be a value of Standard, G.1X, or G.2X.
[$sel:workerType:CreateDevEndpointResponse'] :: CreateDevEndpointResponse -> Maybe WorkerType

-- | The name of the <tt>SecurityConfiguration</tt> structure being used
--   with this <tt>DevEndpoint</tt>.
[$sel:securityConfiguration:CreateDevEndpointResponse'] :: CreateDevEndpointResponse -> Maybe Text

-- | The subnet ID assigned to the new <tt>DevEndpoint</tt>.
[$sel:subnetId:CreateDevEndpointResponse'] :: CreateDevEndpointResponse -> Maybe Text

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   running your ETL scripts on development endpoints.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
[$sel:glueVersion:CreateDevEndpointResponse'] :: CreateDevEndpointResponse -> Maybe Text

-- | The number of Glue Data Processing Units (DPUs) allocated to this
--   DevEndpoint.
[$sel:numberOfNodes:CreateDevEndpointResponse'] :: CreateDevEndpointResponse -> Maybe Int

-- | The AWS Availability Zone where this <tt>DevEndpoint</tt> is located.
[$sel:availabilityZone:CreateDevEndpointResponse'] :: CreateDevEndpointResponse -> Maybe Text

-- | The Apache Zeppelin port for the remote Apache Spark interpreter.
[$sel:zeppelinRemoteSparkInterpreterPort:CreateDevEndpointResponse'] :: CreateDevEndpointResponse -> Maybe Int

-- | Path to one or more Java <tt>.jar</tt> files in an S3 bucket that will
--   be loaded in your <tt>DevEndpoint</tt>.
[$sel:extraJarsS3Path:CreateDevEndpointResponse'] :: CreateDevEndpointResponse -> Maybe Text

-- | The point in time at which this <tt>DevEndpoint</tt> was created.
[$sel:createdTimestamp:CreateDevEndpointResponse'] :: CreateDevEndpointResponse -> Maybe POSIX

-- | The address of the YARN endpoint used by this <tt>DevEndpoint</tt>.
[$sel:yarnEndpointAddress:CreateDevEndpointResponse'] :: CreateDevEndpointResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the role assigned to the new
--   <tt>DevEndpoint</tt>.
[$sel:roleArn:CreateDevEndpointResponse'] :: CreateDevEndpointResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateDevEndpointResponse'] :: CreateDevEndpointResponse -> Int

-- | Create a value of <a>CreateDevEndpointResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateDevEndpointResponse'</a>,
--   <a>createDevEndpointResponse_status</a> - The current status of the
--   new <tt>DevEndpoint</tt>.
--   
--   <a>$sel:failureReason:CreateDevEndpointResponse'</a>,
--   <a>createDevEndpointResponse_failureReason</a> - The reason for a
--   current failure in this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:endpointName:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_endpointName</a> - The name assigned to
--   the new <tt>DevEndpoint</tt>.
--   
--   <a>$sel:numberOfWorkers:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_numberOfWorkers</a> - The number of
--   workers of a defined <tt>workerType</tt> that are allocated to the
--   development endpoint.
--   
--   <a>$sel:extraPythonLibsS3Path:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_extraPythonLibsS3Path</a> - The paths to
--   one or more Python libraries in an S3 bucket that will be loaded in
--   your <tt>DevEndpoint</tt>.
--   
--   <a>$sel:securityGroupIds:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_securityGroupIds</a> - The security
--   groups assigned to the new <tt>DevEndpoint</tt>.
--   
--   <a>$sel:vpcId:CreateDevEndpointResponse'</a>,
--   <a>createDevEndpointResponse_vpcId</a> - The ID of the virtual private
--   cloud (VPC) used by this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:arguments:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_arguments</a> - The map of arguments used
--   to configure this <tt>DevEndpoint</tt>.
--   
--   Valid arguments are:
--   
--   <ul>
--   <li><pre>"--enable-glue-datacatalog": ""</pre></li>
--   </ul>
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
--   
--   <a>$sel:workerType:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_workerType</a> - The type of predefined
--   worker that is allocated to the development endpoint. May be a value
--   of Standard, G.1X, or G.2X.
--   
--   <a>$sel:securityConfiguration:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_securityConfiguration</a> - The name of
--   the <tt>SecurityConfiguration</tt> structure being used with this
--   <tt>DevEndpoint</tt>.
--   
--   <a>$sel:subnetId:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_subnetId</a> - The subnet ID assigned to
--   the new <tt>DevEndpoint</tt>.
--   
--   <a>$sel:glueVersion:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_glueVersion</a> - Glue version determines
--   the versions of Apache Spark and Python that Glue supports. The Python
--   version indicates the version supported for running your ETL scripts
--   on development endpoints.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   <a>$sel:numberOfNodes:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_numberOfNodes</a> - The number of Glue
--   Data Processing Units (DPUs) allocated to this DevEndpoint.
--   
--   <a>$sel:availabilityZone:CreateDevEndpointResponse'</a>,
--   <a>createDevEndpointResponse_availabilityZone</a> - The AWS
--   Availability Zone where this <tt>DevEndpoint</tt> is located.
--   
--   
--   <a>$sel:zeppelinRemoteSparkInterpreterPort:CreateDevEndpointResponse'</a>,
--   <a>createDevEndpointResponse_zeppelinRemoteSparkInterpreterPort</a> -
--   The Apache Zeppelin port for the remote Apache Spark interpreter.
--   
--   <a>$sel:extraJarsS3Path:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_extraJarsS3Path</a> - Path to one or more
--   Java <tt>.jar</tt> files in an S3 bucket that will be loaded in your
--   <tt>DevEndpoint</tt>.
--   
--   <a>$sel:createdTimestamp:CreateDevEndpointResponse'</a>,
--   <a>createDevEndpointResponse_createdTimestamp</a> - The point in time
--   at which this <tt>DevEndpoint</tt> was created.
--   
--   <a>$sel:yarnEndpointAddress:CreateDevEndpointResponse'</a>,
--   <a>createDevEndpointResponse_yarnEndpointAddress</a> - The address of
--   the YARN endpoint used by this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:roleArn:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_roleArn</a> - The Amazon Resource Name
--   (ARN) of the role assigned to the new <tt>DevEndpoint</tt>.
--   
--   <a>$sel:httpStatus:CreateDevEndpointResponse'</a>,
--   <a>createDevEndpointResponse_httpStatus</a> - The response's http
--   status code.
newCreateDevEndpointResponse :: Int -> CreateDevEndpointResponse

-- | The current status of the new <tt>DevEndpoint</tt>.
createDevEndpointResponse_status :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The reason for a current failure in this <tt>DevEndpoint</tt>.
createDevEndpointResponse_failureReason :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The name assigned to the new <tt>DevEndpoint</tt>.
createDevEndpointResponse_endpointName :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated to the development endpoint.
createDevEndpointResponse_numberOfWorkers :: Lens' CreateDevEndpointResponse (Maybe Int)

-- | The paths to one or more Python libraries in an S3 bucket that will be
--   loaded in your <tt>DevEndpoint</tt>.
createDevEndpointResponse_extraPythonLibsS3Path :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The security groups assigned to the new <tt>DevEndpoint</tt>.
createDevEndpointResponse_securityGroupIds :: Lens' CreateDevEndpointResponse (Maybe [Text])

-- | The ID of the virtual private cloud (VPC) used by this
--   <tt>DevEndpoint</tt>.
createDevEndpointResponse_vpcId :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The map of arguments used to configure this <tt>DevEndpoint</tt>.
--   
--   Valid arguments are:
--   
--   <ul>
--   <li><pre>"--enable-glue-datacatalog": ""</pre></li>
--   </ul>
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
createDevEndpointResponse_arguments :: Lens' CreateDevEndpointResponse (Maybe (HashMap Text Text))

-- | The type of predefined worker that is allocated to the development
--   endpoint. May be a value of Standard, G.1X, or G.2X.
createDevEndpointResponse_workerType :: Lens' CreateDevEndpointResponse (Maybe WorkerType)

-- | The name of the <tt>SecurityConfiguration</tt> structure being used
--   with this <tt>DevEndpoint</tt>.
createDevEndpointResponse_securityConfiguration :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The subnet ID assigned to the new <tt>DevEndpoint</tt>.
createDevEndpointResponse_subnetId :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   running your ETL scripts on development endpoints.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
createDevEndpointResponse_glueVersion :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The number of Glue Data Processing Units (DPUs) allocated to this
--   DevEndpoint.
createDevEndpointResponse_numberOfNodes :: Lens' CreateDevEndpointResponse (Maybe Int)

-- | The AWS Availability Zone where this <tt>DevEndpoint</tt> is located.
createDevEndpointResponse_availabilityZone :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The Apache Zeppelin port for the remote Apache Spark interpreter.
createDevEndpointResponse_zeppelinRemoteSparkInterpreterPort :: Lens' CreateDevEndpointResponse (Maybe Int)

-- | Path to one or more Java <tt>.jar</tt> files in an S3 bucket that will
--   be loaded in your <tt>DevEndpoint</tt>.
createDevEndpointResponse_extraJarsS3Path :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The point in time at which this <tt>DevEndpoint</tt> was created.
createDevEndpointResponse_createdTimestamp :: Lens' CreateDevEndpointResponse (Maybe UTCTime)

-- | The address of the YARN endpoint used by this <tt>DevEndpoint</tt>.
createDevEndpointResponse_yarnEndpointAddress :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the role assigned to the new
--   <tt>DevEndpoint</tt>.
createDevEndpointResponse_roleArn :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The response's http status code.
createDevEndpointResponse_httpStatus :: Lens' CreateDevEndpointResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.CreateDevEndpoint.CreateDevEndpoint
instance GHC.Show.Show Network.AWS.Glue.CreateDevEndpoint.CreateDevEndpoint
instance GHC.Read.Read Network.AWS.Glue.CreateDevEndpoint.CreateDevEndpoint
instance GHC.Classes.Eq Network.AWS.Glue.CreateDevEndpoint.CreateDevEndpoint
instance GHC.Generics.Generic Network.AWS.Glue.CreateDevEndpoint.CreateDevEndpointResponse
instance GHC.Show.Show Network.AWS.Glue.CreateDevEndpoint.CreateDevEndpointResponse
instance GHC.Read.Read Network.AWS.Glue.CreateDevEndpoint.CreateDevEndpointResponse
instance GHC.Classes.Eq Network.AWS.Glue.CreateDevEndpoint.CreateDevEndpointResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.CreateDevEndpoint.CreateDevEndpoint
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateDevEndpoint.CreateDevEndpointResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.CreateDevEndpoint.CreateDevEndpoint
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateDevEndpoint.CreateDevEndpoint
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.CreateDevEndpoint.CreateDevEndpoint
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.CreateDevEndpoint.CreateDevEndpoint
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.CreateDevEndpoint.CreateDevEndpoint
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.CreateDevEndpoint.CreateDevEndpoint


-- | Creates a new database in a Data Catalog.
module Network.AWS.Glue.CreateDatabase

-- | <i>See:</i> <a>newCreateDatabase</a> smart constructor.
data CreateDatabase
CreateDatabase' :: Maybe Text -> DatabaseInput -> CreateDatabase

-- | The ID of the Data Catalog in which to create the database. If none is
--   provided, the Amazon Web Services account ID is used by default.
[$sel:catalogId:CreateDatabase'] :: CreateDatabase -> Maybe Text

-- | The metadata for the database.
[$sel:databaseInput:CreateDatabase'] :: CreateDatabase -> DatabaseInput

-- | Create a value of <a>CreateDatabase</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:CreateDatabase'</a>, <a>createDatabase_catalogId</a>
--   - The ID of the Data Catalog in which to create the database. If none
--   is provided, the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseInput:CreateDatabase'</a>,
--   <a>createDatabase_databaseInput</a> - The metadata for the database.
newCreateDatabase :: DatabaseInput -> CreateDatabase

-- | The ID of the Data Catalog in which to create the database. If none is
--   provided, the Amazon Web Services account ID is used by default.
createDatabase_catalogId :: Lens' CreateDatabase (Maybe Text)

-- | The metadata for the database.
createDatabase_databaseInput :: Lens' CreateDatabase DatabaseInput

-- | <i>See:</i> <a>newCreateDatabaseResponse</a> smart constructor.
data CreateDatabaseResponse
CreateDatabaseResponse' :: Int -> CreateDatabaseResponse

-- | The response's http status code.
[$sel:httpStatus:CreateDatabaseResponse'] :: CreateDatabaseResponse -> Int

-- | Create a value of <a>CreateDatabaseResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateDatabaseResponse'</a>,
--   <a>createDatabaseResponse_httpStatus</a> - The response's http status
--   code.
newCreateDatabaseResponse :: Int -> CreateDatabaseResponse

-- | The response's http status code.
createDatabaseResponse_httpStatus :: Lens' CreateDatabaseResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.CreateDatabase.CreateDatabase
instance GHC.Show.Show Network.AWS.Glue.CreateDatabase.CreateDatabase
instance GHC.Read.Read Network.AWS.Glue.CreateDatabase.CreateDatabase
instance GHC.Classes.Eq Network.AWS.Glue.CreateDatabase.CreateDatabase
instance GHC.Generics.Generic Network.AWS.Glue.CreateDatabase.CreateDatabaseResponse
instance GHC.Show.Show Network.AWS.Glue.CreateDatabase.CreateDatabaseResponse
instance GHC.Read.Read Network.AWS.Glue.CreateDatabase.CreateDatabaseResponse
instance GHC.Classes.Eq Network.AWS.Glue.CreateDatabase.CreateDatabaseResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.CreateDatabase.CreateDatabase
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateDatabase.CreateDatabaseResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.CreateDatabase.CreateDatabase
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateDatabase.CreateDatabase
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.CreateDatabase.CreateDatabase
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.CreateDatabase.CreateDatabase
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.CreateDatabase.CreateDatabase
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.CreateDatabase.CreateDatabase


-- | Creates a new crawler with specified targets, role, configuration, and
--   optional schedule. At least one crawl target must be specified, in the
--   <tt>s3Targets</tt> field, the <tt>jdbcTargets</tt> field, or the
--   <tt>DynamoDBTargets</tt> field.
module Network.AWS.Glue.CreateCrawler

-- | <i>See:</i> <a>newCreateCrawler</a> smart constructor.
data CreateCrawler
CreateCrawler' :: Maybe SchemaChangePolicy -> Maybe Text -> Maybe RecrawlPolicy -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe LineageConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> CrawlerTargets -> CreateCrawler

-- | The policy for the crawler's update and deletion behavior.
[$sel:schemaChangePolicy:CreateCrawler'] :: CreateCrawler -> Maybe SchemaChangePolicy

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
[$sel:schedule:CreateCrawler'] :: CreateCrawler -> Maybe Text

-- | A policy that specifies whether to crawl the entire dataset again, or
--   to crawl only folders that were added since the last crawler run.
[$sel:recrawlPolicy:CreateCrawler'] :: CreateCrawler -> Maybe RecrawlPolicy

-- | A list of custom classifiers that the user has registered. By default,
--   all built-in classifiers are included in a crawl, but these custom
--   classifiers always override the default classifiers for a given
--   classification.
[$sel:classifiers:CreateCrawler'] :: CreateCrawler -> Maybe [Text]

-- | The Glue database where results are written, such as:
--   <tt>arn:aws:daylight:us-east-1::database/sometable/*</tt>.
[$sel:databaseName:CreateCrawler'] :: CreateCrawler -> Maybe Text

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used by
--   this crawler.
[$sel:crawlerSecurityConfiguration:CreateCrawler'] :: CreateCrawler -> Maybe Text

-- | Specifies data lineage configuration settings for the crawler.
[$sel:lineageConfiguration:CreateCrawler'] :: CreateCrawler -> Maybe LineageConfiguration

-- | Crawler configuration information. This versioned JSON string allows
--   users to specify aspects of a crawler's behavior. For more
--   information, see <a>Configuring a Crawler</a>.
[$sel:configuration:CreateCrawler'] :: CreateCrawler -> Maybe Text

-- | The table prefix used for catalog tables that are created.
[$sel:tablePrefix:CreateCrawler'] :: CreateCrawler -> Maybe Text

-- | A description of the new crawler.
[$sel:description:CreateCrawler'] :: CreateCrawler -> Maybe Text

-- | The tags to use with this crawler request. You may use tags to limit
--   access to the crawler. For more information about tags in Glue, see
--   <a>Amazon Web Services Tags in Glue</a> in the developer guide.
[$sel:tags:CreateCrawler'] :: CreateCrawler -> Maybe (HashMap Text Text)

-- | Name of the new crawler.
[$sel:name:CreateCrawler'] :: CreateCrawler -> Text

-- | The IAM role or Amazon Resource Name (ARN) of an IAM role used by the
--   new crawler to access customer resources.
[$sel:role':CreateCrawler'] :: CreateCrawler -> Text

-- | A list of collection of targets to crawl.
[$sel:targets:CreateCrawler'] :: CreateCrawler -> CrawlerTargets

-- | Create a value of <a>CreateCrawler</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaChangePolicy:CreateCrawler'</a>,
--   <a>createCrawler_schemaChangePolicy</a> - The policy for the crawler's
--   update and deletion behavior.
--   
--   <a>$sel:schedule:CreateCrawler'</a>, <a>createCrawler_schedule</a> - A
--   <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
--   
--   <a>$sel:recrawlPolicy:CreateCrawler'</a>,
--   <a>createCrawler_recrawlPolicy</a> - A policy that specifies whether
--   to crawl the entire dataset again, or to crawl only folders that were
--   added since the last crawler run.
--   
--   <a>$sel:classifiers:CreateCrawler'</a>,
--   <a>createCrawler_classifiers</a> - A list of custom classifiers that
--   the user has registered. By default, all built-in classifiers are
--   included in a crawl, but these custom classifiers always override the
--   default classifiers for a given classification.
--   
--   <a>$sel:databaseName:CreateCrawler'</a>,
--   <a>createCrawler_databaseName</a> - The Glue database where results
--   are written, such as:
--   <tt>arn:aws:daylight:us-east-1::database/sometable/*</tt>.
--   
--   <a>$sel:crawlerSecurityConfiguration:CreateCrawler'</a>,
--   <a>createCrawler_crawlerSecurityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used by this crawler.
--   
--   <a>$sel:lineageConfiguration:CreateCrawler'</a>,
--   <a>createCrawler_lineageConfiguration</a> - Specifies data lineage
--   configuration settings for the crawler.
--   
--   <a>$sel:configuration:CreateCrawler'</a>,
--   <a>createCrawler_configuration</a> - Crawler configuration
--   information. This versioned JSON string allows users to specify
--   aspects of a crawler's behavior. For more information, see
--   <a>Configuring a Crawler</a>.
--   
--   <a>$sel:tablePrefix:CreateCrawler'</a>,
--   <a>createCrawler_tablePrefix</a> - The table prefix used for catalog
--   tables that are created.
--   
--   <a>$sel:description:CreateCrawler'</a>,
--   <a>createCrawler_description</a> - A description of the new crawler.
--   
--   <a>$sel:tags:CreateCrawler'</a>, <a>createCrawler_tags</a> - The tags
--   to use with this crawler request. You may use tags to limit access to
--   the crawler. For more information about tags in Glue, see <a>Amazon
--   Web Services Tags in Glue</a> in the developer guide.
--   
--   <a>$sel:name:CreateCrawler'</a>, <a>createCrawler_name</a> - Name of
--   the new crawler.
--   
--   <a>$sel:role':CreateCrawler'</a>, <a>createCrawler_role</a> - The IAM
--   role or Amazon Resource Name (ARN) of an IAM role used by the new
--   crawler to access customer resources.
--   
--   <a>$sel:targets:CreateCrawler'</a>, <a>createCrawler_targets</a> - A
--   list of collection of targets to crawl.
newCreateCrawler :: Text -> Text -> CrawlerTargets -> CreateCrawler

-- | The policy for the crawler's update and deletion behavior.
createCrawler_schemaChangePolicy :: Lens' CreateCrawler (Maybe SchemaChangePolicy)

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
createCrawler_schedule :: Lens' CreateCrawler (Maybe Text)

-- | A policy that specifies whether to crawl the entire dataset again, or
--   to crawl only folders that were added since the last crawler run.
createCrawler_recrawlPolicy :: Lens' CreateCrawler (Maybe RecrawlPolicy)

-- | A list of custom classifiers that the user has registered. By default,
--   all built-in classifiers are included in a crawl, but these custom
--   classifiers always override the default classifiers for a given
--   classification.
createCrawler_classifiers :: Lens' CreateCrawler (Maybe [Text])

-- | The Glue database where results are written, such as:
--   <tt>arn:aws:daylight:us-east-1::database/sometable/*</tt>.
createCrawler_databaseName :: Lens' CreateCrawler (Maybe Text)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used by
--   this crawler.
createCrawler_crawlerSecurityConfiguration :: Lens' CreateCrawler (Maybe Text)

-- | Specifies data lineage configuration settings for the crawler.
createCrawler_lineageConfiguration :: Lens' CreateCrawler (Maybe LineageConfiguration)

-- | Crawler configuration information. This versioned JSON string allows
--   users to specify aspects of a crawler's behavior. For more
--   information, see <a>Configuring a Crawler</a>.
createCrawler_configuration :: Lens' CreateCrawler (Maybe Text)

-- | The table prefix used for catalog tables that are created.
createCrawler_tablePrefix :: Lens' CreateCrawler (Maybe Text)

-- | A description of the new crawler.
createCrawler_description :: Lens' CreateCrawler (Maybe Text)

-- | The tags to use with this crawler request. You may use tags to limit
--   access to the crawler. For more information about tags in Glue, see
--   <a>Amazon Web Services Tags in Glue</a> in the developer guide.
createCrawler_tags :: Lens' CreateCrawler (Maybe (HashMap Text Text))

-- | Name of the new crawler.
createCrawler_name :: Lens' CreateCrawler Text

-- | The IAM role or Amazon Resource Name (ARN) of an IAM role used by the
--   new crawler to access customer resources.
createCrawler_role :: Lens' CreateCrawler Text

-- | A list of collection of targets to crawl.
createCrawler_targets :: Lens' CreateCrawler CrawlerTargets

-- | <i>See:</i> <a>newCreateCrawlerResponse</a> smart constructor.
data CreateCrawlerResponse
CreateCrawlerResponse' :: Int -> CreateCrawlerResponse

-- | The response's http status code.
[$sel:httpStatus:CreateCrawlerResponse'] :: CreateCrawlerResponse -> Int

-- | Create a value of <a>CreateCrawlerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateCrawlerResponse'</a>,
--   <a>createCrawlerResponse_httpStatus</a> - The response's http status
--   code.
newCreateCrawlerResponse :: Int -> CreateCrawlerResponse

-- | The response's http status code.
createCrawlerResponse_httpStatus :: Lens' CreateCrawlerResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.CreateCrawler.CreateCrawler
instance GHC.Show.Show Network.AWS.Glue.CreateCrawler.CreateCrawler
instance GHC.Read.Read Network.AWS.Glue.CreateCrawler.CreateCrawler
instance GHC.Classes.Eq Network.AWS.Glue.CreateCrawler.CreateCrawler
instance GHC.Generics.Generic Network.AWS.Glue.CreateCrawler.CreateCrawlerResponse
instance GHC.Show.Show Network.AWS.Glue.CreateCrawler.CreateCrawlerResponse
instance GHC.Read.Read Network.AWS.Glue.CreateCrawler.CreateCrawlerResponse
instance GHC.Classes.Eq Network.AWS.Glue.CreateCrawler.CreateCrawlerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.CreateCrawler.CreateCrawler
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateCrawler.CreateCrawlerResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.CreateCrawler.CreateCrawler
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateCrawler.CreateCrawler
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.CreateCrawler.CreateCrawler
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.CreateCrawler.CreateCrawler
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.CreateCrawler.CreateCrawler
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.CreateCrawler.CreateCrawler


-- | Creates a connection definition in the Data Catalog.
module Network.AWS.Glue.CreateConnection

-- | <i>See:</i> <a>newCreateConnection</a> smart constructor.
data CreateConnection
CreateConnection' :: Maybe Text -> Maybe (HashMap Text Text) -> ConnectionInput -> CreateConnection

-- | The ID of the Data Catalog in which to create the connection. If none
--   is provided, the Amazon Web Services account ID is used by default.
[$sel:catalogId:CreateConnection'] :: CreateConnection -> Maybe Text

-- | The tags you assign to the connection.
[$sel:tags:CreateConnection'] :: CreateConnection -> Maybe (HashMap Text Text)

-- | A <tt>ConnectionInput</tt> object defining the connection to create.
[$sel:connectionInput:CreateConnection'] :: CreateConnection -> ConnectionInput

-- | Create a value of <a>CreateConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:CreateConnection'</a>,
--   <a>createConnection_catalogId</a> - The ID of the Data Catalog in
--   which to create the connection. If none is provided, the Amazon Web
--   Services account ID is used by default.
--   
--   <a>$sel:tags:CreateConnection'</a>, <a>createConnection_tags</a> - The
--   tags you assign to the connection.
--   
--   <a>$sel:connectionInput:CreateConnection'</a>,
--   <a>createConnection_connectionInput</a> - A <tt>ConnectionInput</tt>
--   object defining the connection to create.
newCreateConnection :: ConnectionInput -> CreateConnection

-- | The ID of the Data Catalog in which to create the connection. If none
--   is provided, the Amazon Web Services account ID is used by default.
createConnection_catalogId :: Lens' CreateConnection (Maybe Text)

-- | The tags you assign to the connection.
createConnection_tags :: Lens' CreateConnection (Maybe (HashMap Text Text))

-- | A <tt>ConnectionInput</tt> object defining the connection to create.
createConnection_connectionInput :: Lens' CreateConnection ConnectionInput

-- | <i>See:</i> <a>newCreateConnectionResponse</a> smart constructor.
data CreateConnectionResponse
CreateConnectionResponse' :: Int -> CreateConnectionResponse

-- | The response's http status code.
[$sel:httpStatus:CreateConnectionResponse'] :: CreateConnectionResponse -> Int

-- | Create a value of <a>CreateConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateConnectionResponse'</a>,
--   <a>createConnectionResponse_httpStatus</a> - The response's http
--   status code.
newCreateConnectionResponse :: Int -> CreateConnectionResponse

-- | The response's http status code.
createConnectionResponse_httpStatus :: Lens' CreateConnectionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.CreateConnection.CreateConnection
instance GHC.Show.Show Network.AWS.Glue.CreateConnection.CreateConnection
instance GHC.Read.Read Network.AWS.Glue.CreateConnection.CreateConnection
instance GHC.Classes.Eq Network.AWS.Glue.CreateConnection.CreateConnection
instance GHC.Generics.Generic Network.AWS.Glue.CreateConnection.CreateConnectionResponse
instance GHC.Show.Show Network.AWS.Glue.CreateConnection.CreateConnectionResponse
instance GHC.Read.Read Network.AWS.Glue.CreateConnection.CreateConnectionResponse
instance GHC.Classes.Eq Network.AWS.Glue.CreateConnection.CreateConnectionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.CreateConnection.CreateConnection
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateConnection.CreateConnectionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.CreateConnection.CreateConnection
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateConnection.CreateConnection
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.CreateConnection.CreateConnection
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.CreateConnection.CreateConnection
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.CreateConnection.CreateConnection
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.CreateConnection.CreateConnection


-- | Creates a classifier in the user's account. This can be a
--   <tt>GrokClassifier</tt>, an <tt>XMLClassifier</tt>, a
--   <tt>JsonClassifier</tt>, or a <tt>CsvClassifier</tt>, depending on
--   which field of the request is present.
module Network.AWS.Glue.CreateClassifier

-- | <i>See:</i> <a>newCreateClassifier</a> smart constructor.
data CreateClassifier
CreateClassifier' :: Maybe CreateGrokClassifierRequest -> Maybe CreateXMLClassifierRequest -> Maybe CreateCsvClassifierRequest -> Maybe CreateJsonClassifierRequest -> CreateClassifier

-- | A <tt>GrokClassifier</tt> object specifying the classifier to create.
[$sel:grokClassifier:CreateClassifier'] :: CreateClassifier -> Maybe CreateGrokClassifierRequest

-- | An <tt>XMLClassifier</tt> object specifying the classifier to create.
[$sel:xMLClassifier:CreateClassifier'] :: CreateClassifier -> Maybe CreateXMLClassifierRequest

-- | A <tt>CsvClassifier</tt> object specifying the classifier to create.
[$sel:csvClassifier:CreateClassifier'] :: CreateClassifier -> Maybe CreateCsvClassifierRequest

-- | A <tt>JsonClassifier</tt> object specifying the classifier to create.
[$sel:jsonClassifier:CreateClassifier'] :: CreateClassifier -> Maybe CreateJsonClassifierRequest

-- | Create a value of <a>CreateClassifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:grokClassifier:CreateClassifier'</a>,
--   <a>createClassifier_grokClassifier</a> - A <tt>GrokClassifier</tt>
--   object specifying the classifier to create.
--   
--   <a>$sel:xMLClassifier:CreateClassifier'</a>,
--   <a>createClassifier_xMLClassifier</a> - An <tt>XMLClassifier</tt>
--   object specifying the classifier to create.
--   
--   <a>$sel:csvClassifier:CreateClassifier'</a>,
--   <a>createClassifier_csvClassifier</a> - A <tt>CsvClassifier</tt>
--   object specifying the classifier to create.
--   
--   <a>$sel:jsonClassifier:CreateClassifier'</a>,
--   <a>createClassifier_jsonClassifier</a> - A <tt>JsonClassifier</tt>
--   object specifying the classifier to create.
newCreateClassifier :: CreateClassifier

-- | A <tt>GrokClassifier</tt> object specifying the classifier to create.
createClassifier_grokClassifier :: Lens' CreateClassifier (Maybe CreateGrokClassifierRequest)

-- | An <tt>XMLClassifier</tt> object specifying the classifier to create.
createClassifier_xMLClassifier :: Lens' CreateClassifier (Maybe CreateXMLClassifierRequest)

-- | A <tt>CsvClassifier</tt> object specifying the classifier to create.
createClassifier_csvClassifier :: Lens' CreateClassifier (Maybe CreateCsvClassifierRequest)

-- | A <tt>JsonClassifier</tt> object specifying the classifier to create.
createClassifier_jsonClassifier :: Lens' CreateClassifier (Maybe CreateJsonClassifierRequest)

-- | <i>See:</i> <a>newCreateClassifierResponse</a> smart constructor.
data CreateClassifierResponse
CreateClassifierResponse' :: Int -> CreateClassifierResponse

-- | The response's http status code.
[$sel:httpStatus:CreateClassifierResponse'] :: CreateClassifierResponse -> Int

-- | Create a value of <a>CreateClassifierResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateClassifierResponse'</a>,
--   <a>createClassifierResponse_httpStatus</a> - The response's http
--   status code.
newCreateClassifierResponse :: Int -> CreateClassifierResponse

-- | The response's http status code.
createClassifierResponse_httpStatus :: Lens' CreateClassifierResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.CreateClassifier.CreateClassifier
instance GHC.Show.Show Network.AWS.Glue.CreateClassifier.CreateClassifier
instance GHC.Read.Read Network.AWS.Glue.CreateClassifier.CreateClassifier
instance GHC.Classes.Eq Network.AWS.Glue.CreateClassifier.CreateClassifier
instance GHC.Generics.Generic Network.AWS.Glue.CreateClassifier.CreateClassifierResponse
instance GHC.Show.Show Network.AWS.Glue.CreateClassifier.CreateClassifierResponse
instance GHC.Read.Read Network.AWS.Glue.CreateClassifier.CreateClassifierResponse
instance GHC.Classes.Eq Network.AWS.Glue.CreateClassifier.CreateClassifierResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.CreateClassifier.CreateClassifier
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateClassifier.CreateClassifierResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.CreateClassifier.CreateClassifier
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateClassifier.CreateClassifier
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.CreateClassifier.CreateClassifier
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.CreateClassifier.CreateClassifier
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.CreateClassifier.CreateClassifier
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.CreateClassifier.CreateClassifier


-- | Registers a blueprint with Glue.
module Network.AWS.Glue.CreateBlueprint

-- | <i>See:</i> <a>newCreateBlueprint</a> smart constructor.
data CreateBlueprint
CreateBlueprint' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> CreateBlueprint

-- | A description of the blueprint.
[$sel:description:CreateBlueprint'] :: CreateBlueprint -> Maybe Text

-- | The tags to be applied to this blueprint.
[$sel:tags:CreateBlueprint'] :: CreateBlueprint -> Maybe (HashMap Text Text)

-- | The name of the blueprint.
[$sel:name:CreateBlueprint'] :: CreateBlueprint -> Text

-- | Specifies a path in Amazon S3 where the blueprint is published.
[$sel:blueprintLocation:CreateBlueprint'] :: CreateBlueprint -> Text

-- | Create a value of <a>CreateBlueprint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateBlueprint'</a>,
--   <a>createBlueprint_description</a> - A description of the blueprint.
--   
--   <a>$sel:tags:CreateBlueprint'</a>, <a>createBlueprint_tags</a> - The
--   tags to be applied to this blueprint.
--   
--   <a>$sel:name:CreateBlueprint'</a>, <a>createBlueprint_name</a> - The
--   name of the blueprint.
--   
--   <a>$sel:blueprintLocation:CreateBlueprint'</a>,
--   <a>createBlueprint_blueprintLocation</a> - Specifies a path in Amazon
--   S3 where the blueprint is published.
newCreateBlueprint :: Text -> Text -> CreateBlueprint

-- | A description of the blueprint.
createBlueprint_description :: Lens' CreateBlueprint (Maybe Text)

-- | The tags to be applied to this blueprint.
createBlueprint_tags :: Lens' CreateBlueprint (Maybe (HashMap Text Text))

-- | The name of the blueprint.
createBlueprint_name :: Lens' CreateBlueprint Text

-- | Specifies a path in Amazon S3 where the blueprint is published.
createBlueprint_blueprintLocation :: Lens' CreateBlueprint Text

-- | <i>See:</i> <a>newCreateBlueprintResponse</a> smart constructor.
data CreateBlueprintResponse
CreateBlueprintResponse' :: Maybe Text -> Int -> CreateBlueprintResponse

-- | Returns the name of the blueprint that was registered.
[$sel:name:CreateBlueprintResponse'] :: CreateBlueprintResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateBlueprintResponse'] :: CreateBlueprintResponse -> Int

-- | Create a value of <a>CreateBlueprintResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateBlueprint'</a>, <a>createBlueprintResponse_name</a>
--   - Returns the name of the blueprint that was registered.
--   
--   <a>$sel:httpStatus:CreateBlueprintResponse'</a>,
--   <a>createBlueprintResponse_httpStatus</a> - The response's http status
--   code.
newCreateBlueprintResponse :: Int -> CreateBlueprintResponse

-- | Returns the name of the blueprint that was registered.
createBlueprintResponse_name :: Lens' CreateBlueprintResponse (Maybe Text)

-- | The response's http status code.
createBlueprintResponse_httpStatus :: Lens' CreateBlueprintResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.CreateBlueprint.CreateBlueprint
instance GHC.Show.Show Network.AWS.Glue.CreateBlueprint.CreateBlueprint
instance GHC.Read.Read Network.AWS.Glue.CreateBlueprint.CreateBlueprint
instance GHC.Classes.Eq Network.AWS.Glue.CreateBlueprint.CreateBlueprint
instance GHC.Generics.Generic Network.AWS.Glue.CreateBlueprint.CreateBlueprintResponse
instance GHC.Show.Show Network.AWS.Glue.CreateBlueprint.CreateBlueprintResponse
instance GHC.Read.Read Network.AWS.Glue.CreateBlueprint.CreateBlueprintResponse
instance GHC.Classes.Eq Network.AWS.Glue.CreateBlueprint.CreateBlueprintResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.CreateBlueprint.CreateBlueprint
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateBlueprint.CreateBlueprintResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.CreateBlueprint.CreateBlueprint
instance Control.DeepSeq.NFData Network.AWS.Glue.CreateBlueprint.CreateBlueprint
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.CreateBlueprint.CreateBlueprint
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.CreateBlueprint.CreateBlueprint
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.CreateBlueprint.CreateBlueprint
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.CreateBlueprint.CreateBlueprint


-- | Validates the supplied schema. This call has no side effects, it
--   simply validates using the supplied schema using <tt>DataFormat</tt>
--   as the format. Since it does not take a schema set name, no
--   compatibility checks are performed.
module Network.AWS.Glue.CheckSchemaVersionValidity

-- | <i>See:</i> <a>newCheckSchemaVersionValidity</a> smart constructor.
data CheckSchemaVersionValidity
CheckSchemaVersionValidity' :: DataFormat -> Text -> CheckSchemaVersionValidity

-- | The data format of the schema definition. Currently <tt>AVRO</tt> and
--   <tt>JSON</tt> are supported.
[$sel:dataFormat:CheckSchemaVersionValidity'] :: CheckSchemaVersionValidity -> DataFormat

-- | The definition of the schema that has to be validated.
[$sel:schemaDefinition:CheckSchemaVersionValidity'] :: CheckSchemaVersionValidity -> Text

-- | Create a value of <a>CheckSchemaVersionValidity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataFormat:CheckSchemaVersionValidity'</a>,
--   <a>checkSchemaVersionValidity_dataFormat</a> - The data format of the
--   schema definition. Currently <tt>AVRO</tt> and <tt>JSON</tt> are
--   supported.
--   
--   <a>$sel:schemaDefinition:CheckSchemaVersionValidity'</a>,
--   <a>checkSchemaVersionValidity_schemaDefinition</a> - The definition of
--   the schema that has to be validated.
newCheckSchemaVersionValidity :: DataFormat -> Text -> CheckSchemaVersionValidity

-- | The data format of the schema definition. Currently <tt>AVRO</tt> and
--   <tt>JSON</tt> are supported.
checkSchemaVersionValidity_dataFormat :: Lens' CheckSchemaVersionValidity DataFormat

-- | The definition of the schema that has to be validated.
checkSchemaVersionValidity_schemaDefinition :: Lens' CheckSchemaVersionValidity Text

-- | <i>See:</i> <a>newCheckSchemaVersionValidityResponse</a> smart
--   constructor.
data CheckSchemaVersionValidityResponse
CheckSchemaVersionValidityResponse' :: Maybe Text -> Maybe Bool -> Int -> CheckSchemaVersionValidityResponse

-- | A validation failure error message.
[$sel:error:CheckSchemaVersionValidityResponse'] :: CheckSchemaVersionValidityResponse -> Maybe Text

-- | Return true, if the schema is valid and false otherwise.
[$sel:valid:CheckSchemaVersionValidityResponse'] :: CheckSchemaVersionValidityResponse -> Maybe Bool

-- | The response's http status code.
[$sel:httpStatus:CheckSchemaVersionValidityResponse'] :: CheckSchemaVersionValidityResponse -> Int

-- | Create a value of <a>CheckSchemaVersionValidityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:error:CheckSchemaVersionValidityResponse'</a>,
--   <a>checkSchemaVersionValidityResponse_error</a> - A validation failure
--   error message.
--   
--   <a>$sel:valid:CheckSchemaVersionValidityResponse'</a>,
--   <a>checkSchemaVersionValidityResponse_valid</a> - Return true, if the
--   schema is valid and false otherwise.
--   
--   <a>$sel:httpStatus:CheckSchemaVersionValidityResponse'</a>,
--   <a>checkSchemaVersionValidityResponse_httpStatus</a> - The response's
--   http status code.
newCheckSchemaVersionValidityResponse :: Int -> CheckSchemaVersionValidityResponse

-- | A validation failure error message.
checkSchemaVersionValidityResponse_error :: Lens' CheckSchemaVersionValidityResponse (Maybe Text)

-- | Return true, if the schema is valid and false otherwise.
checkSchemaVersionValidityResponse_valid :: Lens' CheckSchemaVersionValidityResponse (Maybe Bool)

-- | The response's http status code.
checkSchemaVersionValidityResponse_httpStatus :: Lens' CheckSchemaVersionValidityResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.CheckSchemaVersionValidity.CheckSchemaVersionValidity
instance GHC.Show.Show Network.AWS.Glue.CheckSchemaVersionValidity.CheckSchemaVersionValidity
instance GHC.Read.Read Network.AWS.Glue.CheckSchemaVersionValidity.CheckSchemaVersionValidity
instance GHC.Classes.Eq Network.AWS.Glue.CheckSchemaVersionValidity.CheckSchemaVersionValidity
instance GHC.Generics.Generic Network.AWS.Glue.CheckSchemaVersionValidity.CheckSchemaVersionValidityResponse
instance GHC.Show.Show Network.AWS.Glue.CheckSchemaVersionValidity.CheckSchemaVersionValidityResponse
instance GHC.Read.Read Network.AWS.Glue.CheckSchemaVersionValidity.CheckSchemaVersionValidityResponse
instance GHC.Classes.Eq Network.AWS.Glue.CheckSchemaVersionValidity.CheckSchemaVersionValidityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.CheckSchemaVersionValidity.CheckSchemaVersionValidity
instance Control.DeepSeq.NFData Network.AWS.Glue.CheckSchemaVersionValidity.CheckSchemaVersionValidityResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.CheckSchemaVersionValidity.CheckSchemaVersionValidity
instance Control.DeepSeq.NFData Network.AWS.Glue.CheckSchemaVersionValidity.CheckSchemaVersionValidity
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.CheckSchemaVersionValidity.CheckSchemaVersionValidity
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.CheckSchemaVersionValidity.CheckSchemaVersionValidity
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.CheckSchemaVersionValidity.CheckSchemaVersionValidity
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.CheckSchemaVersionValidity.CheckSchemaVersionValidity


-- | Cancels (stops) a task run. Machine learning task runs are
--   asynchronous tasks that Glue runs on your behalf as part of various
--   machine learning workflows. You can cancel a machine learning task run
--   at any time by calling <tt>CancelMLTaskRun</tt> with a task run's
--   parent transform's <tt>TransformID</tt> and the task run's
--   <tt>TaskRunId</tt>.
module Network.AWS.Glue.CancelMLTaskRun

-- | <i>See:</i> <a>newCancelMLTaskRun</a> smart constructor.
data CancelMLTaskRun
CancelMLTaskRun' :: Text -> Text -> CancelMLTaskRun

-- | The unique identifier of the machine learning transform.
[$sel:transformId:CancelMLTaskRun'] :: CancelMLTaskRun -> Text

-- | A unique identifier for the task run.
[$sel:taskRunId:CancelMLTaskRun'] :: CancelMLTaskRun -> Text

-- | Create a value of <a>CancelMLTaskRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transformId:CancelMLTaskRun'</a>,
--   <a>cancelMLTaskRun_transformId</a> - The unique identifier of the
--   machine learning transform.
--   
--   <a>$sel:taskRunId:CancelMLTaskRun'</a>,
--   <a>cancelMLTaskRun_taskRunId</a> - A unique identifier for the task
--   run.
newCancelMLTaskRun :: Text -> Text -> CancelMLTaskRun

-- | The unique identifier of the machine learning transform.
cancelMLTaskRun_transformId :: Lens' CancelMLTaskRun Text

-- | A unique identifier for the task run.
cancelMLTaskRun_taskRunId :: Lens' CancelMLTaskRun Text

-- | <i>See:</i> <a>newCancelMLTaskRunResponse</a> smart constructor.
data CancelMLTaskRunResponse
CancelMLTaskRunResponse' :: Maybe TaskStatusType -> Maybe Text -> Maybe Text -> Int -> CancelMLTaskRunResponse

-- | The status for this run.
[$sel:status:CancelMLTaskRunResponse'] :: CancelMLTaskRunResponse -> Maybe TaskStatusType

-- | The unique identifier of the machine learning transform.
[$sel:transformId:CancelMLTaskRunResponse'] :: CancelMLTaskRunResponse -> Maybe Text

-- | The unique identifier for the task run.
[$sel:taskRunId:CancelMLTaskRunResponse'] :: CancelMLTaskRunResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CancelMLTaskRunResponse'] :: CancelMLTaskRunResponse -> Int

-- | Create a value of <a>CancelMLTaskRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CancelMLTaskRunResponse'</a>,
--   <a>cancelMLTaskRunResponse_status</a> - The status for this run.
--   
--   <a>$sel:transformId:CancelMLTaskRun'</a>,
--   <a>cancelMLTaskRunResponse_transformId</a> - The unique identifier of
--   the machine learning transform.
--   
--   <a>$sel:taskRunId:CancelMLTaskRun'</a>,
--   <a>cancelMLTaskRunResponse_taskRunId</a> - The unique identifier for
--   the task run.
--   
--   <a>$sel:httpStatus:CancelMLTaskRunResponse'</a>,
--   <a>cancelMLTaskRunResponse_httpStatus</a> - The response's http status
--   code.
newCancelMLTaskRunResponse :: Int -> CancelMLTaskRunResponse

-- | The status for this run.
cancelMLTaskRunResponse_status :: Lens' CancelMLTaskRunResponse (Maybe TaskStatusType)

-- | The unique identifier of the machine learning transform.
cancelMLTaskRunResponse_transformId :: Lens' CancelMLTaskRunResponse (Maybe Text)

-- | The unique identifier for the task run.
cancelMLTaskRunResponse_taskRunId :: Lens' CancelMLTaskRunResponse (Maybe Text)

-- | The response's http status code.
cancelMLTaskRunResponse_httpStatus :: Lens' CancelMLTaskRunResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.CancelMLTaskRun.CancelMLTaskRun
instance GHC.Show.Show Network.AWS.Glue.CancelMLTaskRun.CancelMLTaskRun
instance GHC.Read.Read Network.AWS.Glue.CancelMLTaskRun.CancelMLTaskRun
instance GHC.Classes.Eq Network.AWS.Glue.CancelMLTaskRun.CancelMLTaskRun
instance GHC.Generics.Generic Network.AWS.Glue.CancelMLTaskRun.CancelMLTaskRunResponse
instance GHC.Show.Show Network.AWS.Glue.CancelMLTaskRun.CancelMLTaskRunResponse
instance GHC.Read.Read Network.AWS.Glue.CancelMLTaskRun.CancelMLTaskRunResponse
instance GHC.Classes.Eq Network.AWS.Glue.CancelMLTaskRun.CancelMLTaskRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.CancelMLTaskRun.CancelMLTaskRun
instance Control.DeepSeq.NFData Network.AWS.Glue.CancelMLTaskRun.CancelMLTaskRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.CancelMLTaskRun.CancelMLTaskRun
instance Control.DeepSeq.NFData Network.AWS.Glue.CancelMLTaskRun.CancelMLTaskRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.CancelMLTaskRun.CancelMLTaskRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.CancelMLTaskRun.CancelMLTaskRun
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.CancelMLTaskRun.CancelMLTaskRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.CancelMLTaskRun.CancelMLTaskRun


-- | Updates one or more partitions in a batch operation.
module Network.AWS.Glue.BatchUpdatePartition

-- | <i>See:</i> <a>newBatchUpdatePartition</a> smart constructor.
data BatchUpdatePartition
BatchUpdatePartition' :: Maybe Text -> Text -> Text -> NonEmpty BatchUpdatePartitionRequestEntry -> BatchUpdatePartition

-- | The ID of the catalog in which the partition is to be updated.
--   Currently, this should be the Amazon Web Services account ID.
[$sel:catalogId:BatchUpdatePartition'] :: BatchUpdatePartition -> Maybe Text

-- | The name of the metadata database in which the partition is to be
--   updated.
[$sel:databaseName:BatchUpdatePartition'] :: BatchUpdatePartition -> Text

-- | The name of the metadata table in which the partition is to be
--   updated.
[$sel:tableName:BatchUpdatePartition'] :: BatchUpdatePartition -> Text

-- | A list of up to 100 <tt>BatchUpdatePartitionRequestEntry</tt> objects
--   to update.
[$sel:entries:BatchUpdatePartition'] :: BatchUpdatePartition -> NonEmpty BatchUpdatePartitionRequestEntry

-- | Create a value of <a>BatchUpdatePartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:BatchUpdatePartition'</a>,
--   <a>batchUpdatePartition_catalogId</a> - The ID of the catalog in which
--   the partition is to be updated. Currently, this should be the Amazon
--   Web Services account ID.
--   
--   <a>$sel:databaseName:BatchUpdatePartition'</a>,
--   <a>batchUpdatePartition_databaseName</a> - The name of the metadata
--   database in which the partition is to be updated.
--   
--   <a>$sel:tableName:BatchUpdatePartition'</a>,
--   <a>batchUpdatePartition_tableName</a> - The name of the metadata table
--   in which the partition is to be updated.
--   
--   <a>$sel:entries:BatchUpdatePartition'</a>,
--   <a>batchUpdatePartition_entries</a> - A list of up to 100
--   <tt>BatchUpdatePartitionRequestEntry</tt> objects to update.
newBatchUpdatePartition :: Text -> Text -> NonEmpty BatchUpdatePartitionRequestEntry -> BatchUpdatePartition

-- | The ID of the catalog in which the partition is to be updated.
--   Currently, this should be the Amazon Web Services account ID.
batchUpdatePartition_catalogId :: Lens' BatchUpdatePartition (Maybe Text)

-- | The name of the metadata database in which the partition is to be
--   updated.
batchUpdatePartition_databaseName :: Lens' BatchUpdatePartition Text

-- | The name of the metadata table in which the partition is to be
--   updated.
batchUpdatePartition_tableName :: Lens' BatchUpdatePartition Text

-- | A list of up to 100 <tt>BatchUpdatePartitionRequestEntry</tt> objects
--   to update.
batchUpdatePartition_entries :: Lens' BatchUpdatePartition (NonEmpty BatchUpdatePartitionRequestEntry)

-- | <i>See:</i> <a>newBatchUpdatePartitionResponse</a> smart constructor.
data BatchUpdatePartitionResponse
BatchUpdatePartitionResponse' :: Maybe [BatchUpdatePartitionFailureEntry] -> Int -> BatchUpdatePartitionResponse

-- | The errors encountered when trying to update the requested partitions.
--   A list of <tt>BatchUpdatePartitionFailureEntry</tt> objects.
[$sel:errors:BatchUpdatePartitionResponse'] :: BatchUpdatePartitionResponse -> Maybe [BatchUpdatePartitionFailureEntry]

-- | The response's http status code.
[$sel:httpStatus:BatchUpdatePartitionResponse'] :: BatchUpdatePartitionResponse -> Int

-- | Create a value of <a>BatchUpdatePartitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchUpdatePartitionResponse'</a>,
--   <a>batchUpdatePartitionResponse_errors</a> - The errors encountered
--   when trying to update the requested partitions. A list of
--   <tt>BatchUpdatePartitionFailureEntry</tt> objects.
--   
--   <a>$sel:httpStatus:BatchUpdatePartitionResponse'</a>,
--   <a>batchUpdatePartitionResponse_httpStatus</a> - The response's http
--   status code.
newBatchUpdatePartitionResponse :: Int -> BatchUpdatePartitionResponse

-- | The errors encountered when trying to update the requested partitions.
--   A list of <tt>BatchUpdatePartitionFailureEntry</tt> objects.
batchUpdatePartitionResponse_errors :: Lens' BatchUpdatePartitionResponse (Maybe [BatchUpdatePartitionFailureEntry])

-- | The response's http status code.
batchUpdatePartitionResponse_httpStatus :: Lens' BatchUpdatePartitionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.BatchUpdatePartition.BatchUpdatePartition
instance GHC.Show.Show Network.AWS.Glue.BatchUpdatePartition.BatchUpdatePartition
instance GHC.Read.Read Network.AWS.Glue.BatchUpdatePartition.BatchUpdatePartition
instance GHC.Classes.Eq Network.AWS.Glue.BatchUpdatePartition.BatchUpdatePartition
instance GHC.Generics.Generic Network.AWS.Glue.BatchUpdatePartition.BatchUpdatePartitionResponse
instance GHC.Show.Show Network.AWS.Glue.BatchUpdatePartition.BatchUpdatePartitionResponse
instance GHC.Read.Read Network.AWS.Glue.BatchUpdatePartition.BatchUpdatePartitionResponse
instance GHC.Classes.Eq Network.AWS.Glue.BatchUpdatePartition.BatchUpdatePartitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.BatchUpdatePartition.BatchUpdatePartition
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchUpdatePartition.BatchUpdatePartitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.BatchUpdatePartition.BatchUpdatePartition
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchUpdatePartition.BatchUpdatePartition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.BatchUpdatePartition.BatchUpdatePartition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.BatchUpdatePartition.BatchUpdatePartition
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.BatchUpdatePartition.BatchUpdatePartition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.BatchUpdatePartition.BatchUpdatePartition


-- | Stops one or more job runs for a specified job definition.
module Network.AWS.Glue.BatchStopJobRun

-- | <i>See:</i> <a>newBatchStopJobRun</a> smart constructor.
data BatchStopJobRun
BatchStopJobRun' :: Text -> NonEmpty Text -> BatchStopJobRun

-- | The name of the job definition for which to stop job runs.
[$sel:jobName:BatchStopJobRun'] :: BatchStopJobRun -> Text

-- | A list of the <tt>JobRunIds</tt> that should be stopped for that job
--   definition.
[$sel:jobRunIds:BatchStopJobRun'] :: BatchStopJobRun -> NonEmpty Text

-- | Create a value of <a>BatchStopJobRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:BatchStopJobRun'</a>, <a>batchStopJobRun_jobName</a> -
--   The name of the job definition for which to stop job runs.
--   
--   <a>$sel:jobRunIds:BatchStopJobRun'</a>,
--   <a>batchStopJobRun_jobRunIds</a> - A list of the <tt>JobRunIds</tt>
--   that should be stopped for that job definition.
newBatchStopJobRun :: Text -> NonEmpty Text -> BatchStopJobRun

-- | The name of the job definition for which to stop job runs.
batchStopJobRun_jobName :: Lens' BatchStopJobRun Text

-- | A list of the <tt>JobRunIds</tt> that should be stopped for that job
--   definition.
batchStopJobRun_jobRunIds :: Lens' BatchStopJobRun (NonEmpty Text)

-- | <i>See:</i> <a>newBatchStopJobRunResponse</a> smart constructor.
data BatchStopJobRunResponse
BatchStopJobRunResponse' :: Maybe [BatchStopJobRunSuccessfulSubmission] -> Maybe [BatchStopJobRunError] -> Int -> BatchStopJobRunResponse

-- | A list of the JobRuns that were successfully submitted for stopping.
[$sel:successfulSubmissions:BatchStopJobRunResponse'] :: BatchStopJobRunResponse -> Maybe [BatchStopJobRunSuccessfulSubmission]

-- | A list of the errors that were encountered in trying to stop
--   <tt>JobRuns</tt>, including the <tt>JobRunId</tt> for which each error
--   was encountered and details about the error.
[$sel:errors:BatchStopJobRunResponse'] :: BatchStopJobRunResponse -> Maybe [BatchStopJobRunError]

-- | The response's http status code.
[$sel:httpStatus:BatchStopJobRunResponse'] :: BatchStopJobRunResponse -> Int

-- | Create a value of <a>BatchStopJobRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:successfulSubmissions:BatchStopJobRunResponse'</a>,
--   <a>batchStopJobRunResponse_successfulSubmissions</a> - A list of the
--   JobRuns that were successfully submitted for stopping.
--   
--   <a>$sel:errors:BatchStopJobRunResponse'</a>,
--   <a>batchStopJobRunResponse_errors</a> - A list of the errors that were
--   encountered in trying to stop <tt>JobRuns</tt>, including the
--   <tt>JobRunId</tt> for which each error was encountered and details
--   about the error.
--   
--   <a>$sel:httpStatus:BatchStopJobRunResponse'</a>,
--   <a>batchStopJobRunResponse_httpStatus</a> - The response's http status
--   code.
newBatchStopJobRunResponse :: Int -> BatchStopJobRunResponse

-- | A list of the JobRuns that were successfully submitted for stopping.
batchStopJobRunResponse_successfulSubmissions :: Lens' BatchStopJobRunResponse (Maybe [BatchStopJobRunSuccessfulSubmission])

-- | A list of the errors that were encountered in trying to stop
--   <tt>JobRuns</tt>, including the <tt>JobRunId</tt> for which each error
--   was encountered and details about the error.
batchStopJobRunResponse_errors :: Lens' BatchStopJobRunResponse (Maybe [BatchStopJobRunError])

-- | The response's http status code.
batchStopJobRunResponse_httpStatus :: Lens' BatchStopJobRunResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.BatchStopJobRun.BatchStopJobRun
instance GHC.Show.Show Network.AWS.Glue.BatchStopJobRun.BatchStopJobRun
instance GHC.Read.Read Network.AWS.Glue.BatchStopJobRun.BatchStopJobRun
instance GHC.Classes.Eq Network.AWS.Glue.BatchStopJobRun.BatchStopJobRun
instance GHC.Generics.Generic Network.AWS.Glue.BatchStopJobRun.BatchStopJobRunResponse
instance GHC.Show.Show Network.AWS.Glue.BatchStopJobRun.BatchStopJobRunResponse
instance GHC.Read.Read Network.AWS.Glue.BatchStopJobRun.BatchStopJobRunResponse
instance GHC.Classes.Eq Network.AWS.Glue.BatchStopJobRun.BatchStopJobRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.BatchStopJobRun.BatchStopJobRun
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchStopJobRun.BatchStopJobRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.BatchStopJobRun.BatchStopJobRun
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchStopJobRun.BatchStopJobRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.BatchStopJobRun.BatchStopJobRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.BatchStopJobRun.BatchStopJobRun
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.BatchStopJobRun.BatchStopJobRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.BatchStopJobRun.BatchStopJobRun


-- | Returns a list of resource metadata for a given list of workflow
--   names. After calling the <tt>ListWorkflows</tt> operation, you can
--   call this operation to access the data to which you have been granted
--   permissions. This operation supports all IAM permissions, including
--   permission conditions that uses tags.
module Network.AWS.Glue.BatchGetWorkflows

-- | <i>See:</i> <a>newBatchGetWorkflows</a> smart constructor.
data BatchGetWorkflows
BatchGetWorkflows' :: Maybe Bool -> NonEmpty Text -> BatchGetWorkflows

-- | Specifies whether to include a graph when returning the workflow
--   resource metadata.
[$sel:includeGraph:BatchGetWorkflows'] :: BatchGetWorkflows -> Maybe Bool

-- | A list of workflow names, which may be the names returned from the
--   <tt>ListWorkflows</tt> operation.
[$sel:names:BatchGetWorkflows'] :: BatchGetWorkflows -> NonEmpty Text

-- | Create a value of <a>BatchGetWorkflows</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeGraph:BatchGetWorkflows'</a>,
--   <a>batchGetWorkflows_includeGraph</a> - Specifies whether to include a
--   graph when returning the workflow resource metadata.
--   
--   <a>$sel:names:BatchGetWorkflows'</a>, <a>batchGetWorkflows_names</a> -
--   A list of workflow names, which may be the names returned from the
--   <tt>ListWorkflows</tt> operation.
newBatchGetWorkflows :: NonEmpty Text -> BatchGetWorkflows

-- | Specifies whether to include a graph when returning the workflow
--   resource metadata.
batchGetWorkflows_includeGraph :: Lens' BatchGetWorkflows (Maybe Bool)

-- | A list of workflow names, which may be the names returned from the
--   <tt>ListWorkflows</tt> operation.
batchGetWorkflows_names :: Lens' BatchGetWorkflows (NonEmpty Text)

-- | <i>See:</i> <a>newBatchGetWorkflowsResponse</a> smart constructor.
data BatchGetWorkflowsResponse
BatchGetWorkflowsResponse' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty Workflow) -> Int -> BatchGetWorkflowsResponse

-- | A list of names of workflows not found.
[$sel:missingWorkflows:BatchGetWorkflowsResponse'] :: BatchGetWorkflowsResponse -> Maybe (NonEmpty Text)

-- | A list of workflow resource metadata.
[$sel:workflows:BatchGetWorkflowsResponse'] :: BatchGetWorkflowsResponse -> Maybe (NonEmpty Workflow)

-- | The response's http status code.
[$sel:httpStatus:BatchGetWorkflowsResponse'] :: BatchGetWorkflowsResponse -> Int

-- | Create a value of <a>BatchGetWorkflowsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:missingWorkflows:BatchGetWorkflowsResponse'</a>,
--   <a>batchGetWorkflowsResponse_missingWorkflows</a> - A list of names of
--   workflows not found.
--   
--   <a>$sel:workflows:BatchGetWorkflowsResponse'</a>,
--   <a>batchGetWorkflowsResponse_workflows</a> - A list of workflow
--   resource metadata.
--   
--   <a>$sel:httpStatus:BatchGetWorkflowsResponse'</a>,
--   <a>batchGetWorkflowsResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetWorkflowsResponse :: Int -> BatchGetWorkflowsResponse

-- | A list of names of workflows not found.
batchGetWorkflowsResponse_missingWorkflows :: Lens' BatchGetWorkflowsResponse (Maybe (NonEmpty Text))

-- | A list of workflow resource metadata.
batchGetWorkflowsResponse_workflows :: Lens' BatchGetWorkflowsResponse (Maybe (NonEmpty Workflow))

-- | The response's http status code.
batchGetWorkflowsResponse_httpStatus :: Lens' BatchGetWorkflowsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.BatchGetWorkflows.BatchGetWorkflows
instance GHC.Show.Show Network.AWS.Glue.BatchGetWorkflows.BatchGetWorkflows
instance GHC.Read.Read Network.AWS.Glue.BatchGetWorkflows.BatchGetWorkflows
instance GHC.Classes.Eq Network.AWS.Glue.BatchGetWorkflows.BatchGetWorkflows
instance GHC.Generics.Generic Network.AWS.Glue.BatchGetWorkflows.BatchGetWorkflowsResponse
instance GHC.Show.Show Network.AWS.Glue.BatchGetWorkflows.BatchGetWorkflowsResponse
instance GHC.Read.Read Network.AWS.Glue.BatchGetWorkflows.BatchGetWorkflowsResponse
instance GHC.Classes.Eq Network.AWS.Glue.BatchGetWorkflows.BatchGetWorkflowsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.BatchGetWorkflows.BatchGetWorkflows
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchGetWorkflows.BatchGetWorkflowsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.BatchGetWorkflows.BatchGetWorkflows
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchGetWorkflows.BatchGetWorkflows
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.BatchGetWorkflows.BatchGetWorkflows
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.BatchGetWorkflows.BatchGetWorkflows
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.BatchGetWorkflows.BatchGetWorkflows
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.BatchGetWorkflows.BatchGetWorkflows


-- | Returns a list of resource metadata for a given list of trigger names.
--   After calling the <tt>ListTriggers</tt> operation, you can call this
--   operation to access the data to which you have been granted
--   permissions. This operation supports all IAM permissions, including
--   permission conditions that uses tags.
module Network.AWS.Glue.BatchGetTriggers

-- | <i>See:</i> <a>newBatchGetTriggers</a> smart constructor.
data BatchGetTriggers
BatchGetTriggers' :: [Text] -> BatchGetTriggers

-- | A list of trigger names, which may be the names returned from the
--   <tt>ListTriggers</tt> operation.
[$sel:triggerNames:BatchGetTriggers'] :: BatchGetTriggers -> [Text]

-- | Create a value of <a>BatchGetTriggers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggerNames:BatchGetTriggers'</a>,
--   <a>batchGetTriggers_triggerNames</a> - A list of trigger names, which
--   may be the names returned from the <tt>ListTriggers</tt> operation.
newBatchGetTriggers :: BatchGetTriggers

-- | A list of trigger names, which may be the names returned from the
--   <tt>ListTriggers</tt> operation.
batchGetTriggers_triggerNames :: Lens' BatchGetTriggers [Text]

-- | <i>See:</i> <a>newBatchGetTriggersResponse</a> smart constructor.
data BatchGetTriggersResponse
BatchGetTriggersResponse' :: Maybe [Text] -> Maybe [Trigger] -> Int -> BatchGetTriggersResponse

-- | A list of names of triggers not found.
[$sel:triggersNotFound:BatchGetTriggersResponse'] :: BatchGetTriggersResponse -> Maybe [Text]

-- | A list of trigger definitions.
[$sel:triggers:BatchGetTriggersResponse'] :: BatchGetTriggersResponse -> Maybe [Trigger]

-- | The response's http status code.
[$sel:httpStatus:BatchGetTriggersResponse'] :: BatchGetTriggersResponse -> Int

-- | Create a value of <a>BatchGetTriggersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggersNotFound:BatchGetTriggersResponse'</a>,
--   <a>batchGetTriggersResponse_triggersNotFound</a> - A list of names of
--   triggers not found.
--   
--   <a>$sel:triggers:BatchGetTriggersResponse'</a>,
--   <a>batchGetTriggersResponse_triggers</a> - A list of trigger
--   definitions.
--   
--   <a>$sel:httpStatus:BatchGetTriggersResponse'</a>,
--   <a>batchGetTriggersResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetTriggersResponse :: Int -> BatchGetTriggersResponse

-- | A list of names of triggers not found.
batchGetTriggersResponse_triggersNotFound :: Lens' BatchGetTriggersResponse (Maybe [Text])

-- | A list of trigger definitions.
batchGetTriggersResponse_triggers :: Lens' BatchGetTriggersResponse (Maybe [Trigger])

-- | The response's http status code.
batchGetTriggersResponse_httpStatus :: Lens' BatchGetTriggersResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.BatchGetTriggers.BatchGetTriggers
instance GHC.Show.Show Network.AWS.Glue.BatchGetTriggers.BatchGetTriggers
instance GHC.Read.Read Network.AWS.Glue.BatchGetTriggers.BatchGetTriggers
instance GHC.Classes.Eq Network.AWS.Glue.BatchGetTriggers.BatchGetTriggers
instance GHC.Generics.Generic Network.AWS.Glue.BatchGetTriggers.BatchGetTriggersResponse
instance GHC.Show.Show Network.AWS.Glue.BatchGetTriggers.BatchGetTriggersResponse
instance GHC.Read.Read Network.AWS.Glue.BatchGetTriggers.BatchGetTriggersResponse
instance GHC.Classes.Eq Network.AWS.Glue.BatchGetTriggers.BatchGetTriggersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.BatchGetTriggers.BatchGetTriggers
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchGetTriggers.BatchGetTriggersResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.BatchGetTriggers.BatchGetTriggers
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchGetTriggers.BatchGetTriggers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.BatchGetTriggers.BatchGetTriggers
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.BatchGetTriggers.BatchGetTriggers
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.BatchGetTriggers.BatchGetTriggers
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.BatchGetTriggers.BatchGetTriggers


-- | Retrieves partitions in a batch request.
module Network.AWS.Glue.BatchGetPartition

-- | <i>See:</i> <a>newBatchGetPartition</a> smart constructor.
data BatchGetPartition
BatchGetPartition' :: Maybe Text -> Text -> Text -> [PartitionValueList] -> BatchGetPartition

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
[$sel:catalogId:BatchGetPartition'] :: BatchGetPartition -> Maybe Text

-- | The name of the catalog database where the partitions reside.
[$sel:databaseName:BatchGetPartition'] :: BatchGetPartition -> Text

-- | The name of the partitions' table.
[$sel:tableName:BatchGetPartition'] :: BatchGetPartition -> Text

-- | A list of partition values identifying the partitions to retrieve.
[$sel:partitionsToGet:BatchGetPartition'] :: BatchGetPartition -> [PartitionValueList]

-- | Create a value of <a>BatchGetPartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:BatchGetPartition'</a>,
--   <a>batchGetPartition_catalogId</a> - The ID of the Data Catalog where
--   the partitions in question reside. If none is supplied, the Amazon Web
--   Services account ID is used by default.
--   
--   <a>$sel:databaseName:BatchGetPartition'</a>,
--   <a>batchGetPartition_databaseName</a> - The name of the catalog
--   database where the partitions reside.
--   
--   <a>$sel:tableName:BatchGetPartition'</a>,
--   <a>batchGetPartition_tableName</a> - The name of the partitions'
--   table.
--   
--   <a>$sel:partitionsToGet:BatchGetPartition'</a>,
--   <a>batchGetPartition_partitionsToGet</a> - A list of partition values
--   identifying the partitions to retrieve.
newBatchGetPartition :: Text -> Text -> BatchGetPartition

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
batchGetPartition_catalogId :: Lens' BatchGetPartition (Maybe Text)

-- | The name of the catalog database where the partitions reside.
batchGetPartition_databaseName :: Lens' BatchGetPartition Text

-- | The name of the partitions' table.
batchGetPartition_tableName :: Lens' BatchGetPartition Text

-- | A list of partition values identifying the partitions to retrieve.
batchGetPartition_partitionsToGet :: Lens' BatchGetPartition [PartitionValueList]

-- | <i>See:</i> <a>newBatchGetPartitionResponse</a> smart constructor.
data BatchGetPartitionResponse
BatchGetPartitionResponse' :: Maybe [PartitionValueList] -> Maybe [Partition] -> Int -> BatchGetPartitionResponse

-- | A list of the partition values in the request for which partitions
--   were not returned.
[$sel:unprocessedKeys:BatchGetPartitionResponse'] :: BatchGetPartitionResponse -> Maybe [PartitionValueList]

-- | A list of the requested partitions.
[$sel:partitions:BatchGetPartitionResponse'] :: BatchGetPartitionResponse -> Maybe [Partition]

-- | The response's http status code.
[$sel:httpStatus:BatchGetPartitionResponse'] :: BatchGetPartitionResponse -> Int

-- | Create a value of <a>BatchGetPartitionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedKeys:BatchGetPartitionResponse'</a>,
--   <a>batchGetPartitionResponse_unprocessedKeys</a> - A list of the
--   partition values in the request for which partitions were not
--   returned.
--   
--   <a>$sel:partitions:BatchGetPartitionResponse'</a>,
--   <a>batchGetPartitionResponse_partitions</a> - A list of the requested
--   partitions.
--   
--   <a>$sel:httpStatus:BatchGetPartitionResponse'</a>,
--   <a>batchGetPartitionResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetPartitionResponse :: Int -> BatchGetPartitionResponse

-- | A list of the partition values in the request for which partitions
--   were not returned.
batchGetPartitionResponse_unprocessedKeys :: Lens' BatchGetPartitionResponse (Maybe [PartitionValueList])

-- | A list of the requested partitions.
batchGetPartitionResponse_partitions :: Lens' BatchGetPartitionResponse (Maybe [Partition])

-- | The response's http status code.
batchGetPartitionResponse_httpStatus :: Lens' BatchGetPartitionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.BatchGetPartition.BatchGetPartition
instance GHC.Show.Show Network.AWS.Glue.BatchGetPartition.BatchGetPartition
instance GHC.Read.Read Network.AWS.Glue.BatchGetPartition.BatchGetPartition
instance GHC.Classes.Eq Network.AWS.Glue.BatchGetPartition.BatchGetPartition
instance GHC.Generics.Generic Network.AWS.Glue.BatchGetPartition.BatchGetPartitionResponse
instance GHC.Show.Show Network.AWS.Glue.BatchGetPartition.BatchGetPartitionResponse
instance GHC.Read.Read Network.AWS.Glue.BatchGetPartition.BatchGetPartitionResponse
instance GHC.Classes.Eq Network.AWS.Glue.BatchGetPartition.BatchGetPartitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.BatchGetPartition.BatchGetPartition
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchGetPartition.BatchGetPartitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.BatchGetPartition.BatchGetPartition
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchGetPartition.BatchGetPartition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.BatchGetPartition.BatchGetPartition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.BatchGetPartition.BatchGetPartition
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.BatchGetPartition.BatchGetPartition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.BatchGetPartition.BatchGetPartition


-- | Returns a list of resource metadata for a given list of job names.
--   After calling the <tt>ListJobs</tt> operation, you can call this
--   operation to access the data to which you have been granted
--   permissions. This operation supports all IAM permissions, including
--   permission conditions that uses tags.
module Network.AWS.Glue.BatchGetJobs

-- | <i>See:</i> <a>newBatchGetJobs</a> smart constructor.
data BatchGetJobs
BatchGetJobs' :: [Text] -> BatchGetJobs

-- | A list of job names, which might be the names returned from the
--   <tt>ListJobs</tt> operation.
[$sel:jobNames:BatchGetJobs'] :: BatchGetJobs -> [Text]

-- | Create a value of <a>BatchGetJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobNames:BatchGetJobs'</a>, <a>batchGetJobs_jobNames</a> - A
--   list of job names, which might be the names returned from the
--   <tt>ListJobs</tt> operation.
newBatchGetJobs :: BatchGetJobs

-- | A list of job names, which might be the names returned from the
--   <tt>ListJobs</tt> operation.
batchGetJobs_jobNames :: Lens' BatchGetJobs [Text]

-- | <i>See:</i> <a>newBatchGetJobsResponse</a> smart constructor.
data BatchGetJobsResponse
BatchGetJobsResponse' :: Maybe [Job] -> Maybe [Text] -> Int -> BatchGetJobsResponse

-- | A list of job definitions.
[$sel:jobs:BatchGetJobsResponse'] :: BatchGetJobsResponse -> Maybe [Job]

-- | A list of names of jobs not found.
[$sel:jobsNotFound:BatchGetJobsResponse'] :: BatchGetJobsResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:BatchGetJobsResponse'] :: BatchGetJobsResponse -> Int

-- | Create a value of <a>BatchGetJobsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobs:BatchGetJobsResponse'</a>,
--   <a>batchGetJobsResponse_jobs</a> - A list of job definitions.
--   
--   <a>$sel:jobsNotFound:BatchGetJobsResponse'</a>,
--   <a>batchGetJobsResponse_jobsNotFound</a> - A list of names of jobs not
--   found.
--   
--   <a>$sel:httpStatus:BatchGetJobsResponse'</a>,
--   <a>batchGetJobsResponse_httpStatus</a> - The response's http status
--   code.
newBatchGetJobsResponse :: Int -> BatchGetJobsResponse

-- | A list of job definitions.
batchGetJobsResponse_jobs :: Lens' BatchGetJobsResponse (Maybe [Job])

-- | A list of names of jobs not found.
batchGetJobsResponse_jobsNotFound :: Lens' BatchGetJobsResponse (Maybe [Text])

-- | The response's http status code.
batchGetJobsResponse_httpStatus :: Lens' BatchGetJobsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.BatchGetJobs.BatchGetJobs
instance GHC.Show.Show Network.AWS.Glue.BatchGetJobs.BatchGetJobs
instance GHC.Read.Read Network.AWS.Glue.BatchGetJobs.BatchGetJobs
instance GHC.Classes.Eq Network.AWS.Glue.BatchGetJobs.BatchGetJobs
instance GHC.Generics.Generic Network.AWS.Glue.BatchGetJobs.BatchGetJobsResponse
instance GHC.Show.Show Network.AWS.Glue.BatchGetJobs.BatchGetJobsResponse
instance GHC.Read.Read Network.AWS.Glue.BatchGetJobs.BatchGetJobsResponse
instance GHC.Classes.Eq Network.AWS.Glue.BatchGetJobs.BatchGetJobsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.BatchGetJobs.BatchGetJobs
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchGetJobs.BatchGetJobsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.BatchGetJobs.BatchGetJobs
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchGetJobs.BatchGetJobs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.BatchGetJobs.BatchGetJobs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.BatchGetJobs.BatchGetJobs
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.BatchGetJobs.BatchGetJobs
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.BatchGetJobs.BatchGetJobs


-- | Returns a list of resource metadata for a given list of development
--   endpoint names. After calling the <tt>ListDevEndpoints</tt> operation,
--   you can call this operation to access the data to which you have been
--   granted permissions. This operation supports all IAM permissions,
--   including permission conditions that uses tags.
module Network.AWS.Glue.BatchGetDevEndpoints

-- | <i>See:</i> <a>newBatchGetDevEndpoints</a> smart constructor.
data BatchGetDevEndpoints
BatchGetDevEndpoints' :: NonEmpty Text -> BatchGetDevEndpoints

-- | The list of <tt>DevEndpoint</tt> names, which might be the names
--   returned from the <tt>ListDevEndpoint</tt> operation.
[$sel:devEndpointNames:BatchGetDevEndpoints'] :: BatchGetDevEndpoints -> NonEmpty Text

-- | Create a value of <a>BatchGetDevEndpoints</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:devEndpointNames:BatchGetDevEndpoints'</a>,
--   <a>batchGetDevEndpoints_devEndpointNames</a> - The list of
--   <tt>DevEndpoint</tt> names, which might be the names returned from the
--   <tt>ListDevEndpoint</tt> operation.
newBatchGetDevEndpoints :: NonEmpty Text -> BatchGetDevEndpoints

-- | The list of <tt>DevEndpoint</tt> names, which might be the names
--   returned from the <tt>ListDevEndpoint</tt> operation.
batchGetDevEndpoints_devEndpointNames :: Lens' BatchGetDevEndpoints (NonEmpty Text)

-- | <i>See:</i> <a>newBatchGetDevEndpointsResponse</a> smart constructor.
data BatchGetDevEndpointsResponse
BatchGetDevEndpointsResponse' :: Maybe (NonEmpty Text) -> Maybe [DevEndpoint] -> Int -> BatchGetDevEndpointsResponse

-- | A list of <tt>DevEndpoints</tt> not found.
[$sel:devEndpointsNotFound:BatchGetDevEndpointsResponse'] :: BatchGetDevEndpointsResponse -> Maybe (NonEmpty Text)

-- | A list of <tt>DevEndpoint</tt> definitions.
[$sel:devEndpoints:BatchGetDevEndpointsResponse'] :: BatchGetDevEndpointsResponse -> Maybe [DevEndpoint]

-- | The response's http status code.
[$sel:httpStatus:BatchGetDevEndpointsResponse'] :: BatchGetDevEndpointsResponse -> Int

-- | Create a value of <a>BatchGetDevEndpointsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:devEndpointsNotFound:BatchGetDevEndpointsResponse'</a>,
--   <a>batchGetDevEndpointsResponse_devEndpointsNotFound</a> - A list of
--   <tt>DevEndpoints</tt> not found.
--   
--   <a>$sel:devEndpoints:BatchGetDevEndpointsResponse'</a>,
--   <a>batchGetDevEndpointsResponse_devEndpoints</a> - A list of
--   <tt>DevEndpoint</tt> definitions.
--   
--   <a>$sel:httpStatus:BatchGetDevEndpointsResponse'</a>,
--   <a>batchGetDevEndpointsResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetDevEndpointsResponse :: Int -> BatchGetDevEndpointsResponse

-- | A list of <tt>DevEndpoints</tt> not found.
batchGetDevEndpointsResponse_devEndpointsNotFound :: Lens' BatchGetDevEndpointsResponse (Maybe (NonEmpty Text))

-- | A list of <tt>DevEndpoint</tt> definitions.
batchGetDevEndpointsResponse_devEndpoints :: Lens' BatchGetDevEndpointsResponse (Maybe [DevEndpoint])

-- | The response's http status code.
batchGetDevEndpointsResponse_httpStatus :: Lens' BatchGetDevEndpointsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.BatchGetDevEndpoints.BatchGetDevEndpoints
instance GHC.Show.Show Network.AWS.Glue.BatchGetDevEndpoints.BatchGetDevEndpoints
instance GHC.Read.Read Network.AWS.Glue.BatchGetDevEndpoints.BatchGetDevEndpoints
instance GHC.Classes.Eq Network.AWS.Glue.BatchGetDevEndpoints.BatchGetDevEndpoints
instance GHC.Generics.Generic Network.AWS.Glue.BatchGetDevEndpoints.BatchGetDevEndpointsResponse
instance GHC.Show.Show Network.AWS.Glue.BatchGetDevEndpoints.BatchGetDevEndpointsResponse
instance GHC.Read.Read Network.AWS.Glue.BatchGetDevEndpoints.BatchGetDevEndpointsResponse
instance GHC.Classes.Eq Network.AWS.Glue.BatchGetDevEndpoints.BatchGetDevEndpointsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.BatchGetDevEndpoints.BatchGetDevEndpoints
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchGetDevEndpoints.BatchGetDevEndpointsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.BatchGetDevEndpoints.BatchGetDevEndpoints
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchGetDevEndpoints.BatchGetDevEndpoints
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.BatchGetDevEndpoints.BatchGetDevEndpoints
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.BatchGetDevEndpoints.BatchGetDevEndpoints
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.BatchGetDevEndpoints.BatchGetDevEndpoints
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.BatchGetDevEndpoints.BatchGetDevEndpoints


-- | Returns a list of resource metadata for a given list of crawler names.
--   After calling the <tt>ListCrawlers</tt> operation, you can call this
--   operation to access the data to which you have been granted
--   permissions. This operation supports all IAM permissions, including
--   permission conditions that uses tags.
module Network.AWS.Glue.BatchGetCrawlers

-- | <i>See:</i> <a>newBatchGetCrawlers</a> smart constructor.
data BatchGetCrawlers
BatchGetCrawlers' :: [Text] -> BatchGetCrawlers

-- | A list of crawler names, which might be the names returned from the
--   <tt>ListCrawlers</tt> operation.
[$sel:crawlerNames:BatchGetCrawlers'] :: BatchGetCrawlers -> [Text]

-- | Create a value of <a>BatchGetCrawlers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawlerNames:BatchGetCrawlers'</a>,
--   <a>batchGetCrawlers_crawlerNames</a> - A list of crawler names, which
--   might be the names returned from the <tt>ListCrawlers</tt> operation.
newBatchGetCrawlers :: BatchGetCrawlers

-- | A list of crawler names, which might be the names returned from the
--   <tt>ListCrawlers</tt> operation.
batchGetCrawlers_crawlerNames :: Lens' BatchGetCrawlers [Text]

-- | <i>See:</i> <a>newBatchGetCrawlersResponse</a> smart constructor.
data BatchGetCrawlersResponse
BatchGetCrawlersResponse' :: Maybe [Text] -> Maybe [Crawler] -> Int -> BatchGetCrawlersResponse

-- | A list of names of crawlers that were not found.
[$sel:crawlersNotFound:BatchGetCrawlersResponse'] :: BatchGetCrawlersResponse -> Maybe [Text]

-- | A list of crawler definitions.
[$sel:crawlers:BatchGetCrawlersResponse'] :: BatchGetCrawlersResponse -> Maybe [Crawler]

-- | The response's http status code.
[$sel:httpStatus:BatchGetCrawlersResponse'] :: BatchGetCrawlersResponse -> Int

-- | Create a value of <a>BatchGetCrawlersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawlersNotFound:BatchGetCrawlersResponse'</a>,
--   <a>batchGetCrawlersResponse_crawlersNotFound</a> - A list of names of
--   crawlers that were not found.
--   
--   <a>$sel:crawlers:BatchGetCrawlersResponse'</a>,
--   <a>batchGetCrawlersResponse_crawlers</a> - A list of crawler
--   definitions.
--   
--   <a>$sel:httpStatus:BatchGetCrawlersResponse'</a>,
--   <a>batchGetCrawlersResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetCrawlersResponse :: Int -> BatchGetCrawlersResponse

-- | A list of names of crawlers that were not found.
batchGetCrawlersResponse_crawlersNotFound :: Lens' BatchGetCrawlersResponse (Maybe [Text])

-- | A list of crawler definitions.
batchGetCrawlersResponse_crawlers :: Lens' BatchGetCrawlersResponse (Maybe [Crawler])

-- | The response's http status code.
batchGetCrawlersResponse_httpStatus :: Lens' BatchGetCrawlersResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.BatchGetCrawlers.BatchGetCrawlers
instance GHC.Show.Show Network.AWS.Glue.BatchGetCrawlers.BatchGetCrawlers
instance GHC.Read.Read Network.AWS.Glue.BatchGetCrawlers.BatchGetCrawlers
instance GHC.Classes.Eq Network.AWS.Glue.BatchGetCrawlers.BatchGetCrawlers
instance GHC.Generics.Generic Network.AWS.Glue.BatchGetCrawlers.BatchGetCrawlersResponse
instance GHC.Show.Show Network.AWS.Glue.BatchGetCrawlers.BatchGetCrawlersResponse
instance GHC.Read.Read Network.AWS.Glue.BatchGetCrawlers.BatchGetCrawlersResponse
instance GHC.Classes.Eq Network.AWS.Glue.BatchGetCrawlers.BatchGetCrawlersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.BatchGetCrawlers.BatchGetCrawlers
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchGetCrawlers.BatchGetCrawlersResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.BatchGetCrawlers.BatchGetCrawlers
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchGetCrawlers.BatchGetCrawlers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.BatchGetCrawlers.BatchGetCrawlers
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.BatchGetCrawlers.BatchGetCrawlers
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.BatchGetCrawlers.BatchGetCrawlers
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.BatchGetCrawlers.BatchGetCrawlers


-- | Retrieves information about a list of blueprints.
module Network.AWS.Glue.BatchGetBlueprints

-- | <i>See:</i> <a>newBatchGetBlueprints</a> smart constructor.
data BatchGetBlueprints
BatchGetBlueprints' :: Maybe Bool -> Maybe Bool -> NonEmpty Text -> BatchGetBlueprints

-- | Specifies whether or not to include the parameters, as a JSON string,
--   for the blueprint in the response.
[$sel:includeParameterSpec:BatchGetBlueprints'] :: BatchGetBlueprints -> Maybe Bool

-- | Specifies whether or not to include the blueprint in the response.
[$sel:includeBlueprint:BatchGetBlueprints'] :: BatchGetBlueprints -> Maybe Bool

-- | A list of blueprint names.
[$sel:names:BatchGetBlueprints'] :: BatchGetBlueprints -> NonEmpty Text

-- | Create a value of <a>BatchGetBlueprints</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeParameterSpec:BatchGetBlueprints'</a>,
--   <a>batchGetBlueprints_includeParameterSpec</a> - Specifies whether or
--   not to include the parameters, as a JSON string, for the blueprint in
--   the response.
--   
--   <a>$sel:includeBlueprint:BatchGetBlueprints'</a>,
--   <a>batchGetBlueprints_includeBlueprint</a> - Specifies whether or not
--   to include the blueprint in the response.
--   
--   <a>$sel:names:BatchGetBlueprints'</a>, <a>batchGetBlueprints_names</a>
--   - A list of blueprint names.
newBatchGetBlueprints :: NonEmpty Text -> BatchGetBlueprints

-- | Specifies whether or not to include the parameters, as a JSON string,
--   for the blueprint in the response.
batchGetBlueprints_includeParameterSpec :: Lens' BatchGetBlueprints (Maybe Bool)

-- | Specifies whether or not to include the blueprint in the response.
batchGetBlueprints_includeBlueprint :: Lens' BatchGetBlueprints (Maybe Bool)

-- | A list of blueprint names.
batchGetBlueprints_names :: Lens' BatchGetBlueprints (NonEmpty Text)

-- | <i>See:</i> <a>newBatchGetBlueprintsResponse</a> smart constructor.
data BatchGetBlueprintsResponse
BatchGetBlueprintsResponse' :: Maybe [Blueprint] -> Maybe [Text] -> Int -> BatchGetBlueprintsResponse

-- | Returns a list of blueprint as a <tt>Blueprints</tt> object.
[$sel:blueprints:BatchGetBlueprintsResponse'] :: BatchGetBlueprintsResponse -> Maybe [Blueprint]

-- | Returns a list of <tt>BlueprintNames</tt> that were not found.
[$sel:missingBlueprints:BatchGetBlueprintsResponse'] :: BatchGetBlueprintsResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:BatchGetBlueprintsResponse'] :: BatchGetBlueprintsResponse -> Int

-- | Create a value of <a>BatchGetBlueprintsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blueprints:BatchGetBlueprintsResponse'</a>,
--   <a>batchGetBlueprintsResponse_blueprints</a> - Returns a list of
--   blueprint as a <tt>Blueprints</tt> object.
--   
--   <a>$sel:missingBlueprints:BatchGetBlueprintsResponse'</a>,
--   <a>batchGetBlueprintsResponse_missingBlueprints</a> - Returns a list
--   of <tt>BlueprintNames</tt> that were not found.
--   
--   <a>$sel:httpStatus:BatchGetBlueprintsResponse'</a>,
--   <a>batchGetBlueprintsResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetBlueprintsResponse :: Int -> BatchGetBlueprintsResponse

-- | Returns a list of blueprint as a <tt>Blueprints</tt> object.
batchGetBlueprintsResponse_blueprints :: Lens' BatchGetBlueprintsResponse (Maybe [Blueprint])

-- | Returns a list of <tt>BlueprintNames</tt> that were not found.
batchGetBlueprintsResponse_missingBlueprints :: Lens' BatchGetBlueprintsResponse (Maybe [Text])

-- | The response's http status code.
batchGetBlueprintsResponse_httpStatus :: Lens' BatchGetBlueprintsResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.BatchGetBlueprints.BatchGetBlueprints
instance GHC.Show.Show Network.AWS.Glue.BatchGetBlueprints.BatchGetBlueprints
instance GHC.Read.Read Network.AWS.Glue.BatchGetBlueprints.BatchGetBlueprints
instance GHC.Classes.Eq Network.AWS.Glue.BatchGetBlueprints.BatchGetBlueprints
instance GHC.Generics.Generic Network.AWS.Glue.BatchGetBlueprints.BatchGetBlueprintsResponse
instance GHC.Show.Show Network.AWS.Glue.BatchGetBlueprints.BatchGetBlueprintsResponse
instance GHC.Read.Read Network.AWS.Glue.BatchGetBlueprints.BatchGetBlueprintsResponse
instance GHC.Classes.Eq Network.AWS.Glue.BatchGetBlueprints.BatchGetBlueprintsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.BatchGetBlueprints.BatchGetBlueprints
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchGetBlueprints.BatchGetBlueprintsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.BatchGetBlueprints.BatchGetBlueprints
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchGetBlueprints.BatchGetBlueprints
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.BatchGetBlueprints.BatchGetBlueprints
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.BatchGetBlueprints.BatchGetBlueprints
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.BatchGetBlueprints.BatchGetBlueprints
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.BatchGetBlueprints.BatchGetBlueprints


-- | Deletes a specified batch of versions of a table.
module Network.AWS.Glue.BatchDeleteTableVersion

-- | <i>See:</i> <a>newBatchDeleteTableVersion</a> smart constructor.
data BatchDeleteTableVersion
BatchDeleteTableVersion' :: Maybe Text -> Text -> Text -> [Text] -> BatchDeleteTableVersion

-- | The ID of the Data Catalog where the tables reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
[$sel:catalogId:BatchDeleteTableVersion'] :: BatchDeleteTableVersion -> Maybe Text

-- | The database in the catalog in which the table resides. For Hive
--   compatibility, this name is entirely lowercase.
[$sel:databaseName:BatchDeleteTableVersion'] :: BatchDeleteTableVersion -> Text

-- | The name of the table. For Hive compatibility, this name is entirely
--   lowercase.
[$sel:tableName:BatchDeleteTableVersion'] :: BatchDeleteTableVersion -> Text

-- | A list of the IDs of versions to be deleted. A <tt>VersionId</tt> is a
--   string representation of an integer. Each version is incremented by 1.
[$sel:versionIds:BatchDeleteTableVersion'] :: BatchDeleteTableVersion -> [Text]

-- | Create a value of <a>BatchDeleteTableVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:BatchDeleteTableVersion'</a>,
--   <a>batchDeleteTableVersion_catalogId</a> - The ID of the Data Catalog
--   where the tables reside. If none is provided, the Amazon Web Services
--   account ID is used by default.
--   
--   <a>$sel:databaseName:BatchDeleteTableVersion'</a>,
--   <a>batchDeleteTableVersion_databaseName</a> - The database in the
--   catalog in which the table resides. For Hive compatibility, this name
--   is entirely lowercase.
--   
--   <a>$sel:tableName:BatchDeleteTableVersion'</a>,
--   <a>batchDeleteTableVersion_tableName</a> - The name of the table. For
--   Hive compatibility, this name is entirely lowercase.
--   
--   <a>$sel:versionIds:BatchDeleteTableVersion'</a>,
--   <a>batchDeleteTableVersion_versionIds</a> - A list of the IDs of
--   versions to be deleted. A <tt>VersionId</tt> is a string
--   representation of an integer. Each version is incremented by 1.
newBatchDeleteTableVersion :: Text -> Text -> BatchDeleteTableVersion

-- | The ID of the Data Catalog where the tables reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
batchDeleteTableVersion_catalogId :: Lens' BatchDeleteTableVersion (Maybe Text)

-- | The database in the catalog in which the table resides. For Hive
--   compatibility, this name is entirely lowercase.
batchDeleteTableVersion_databaseName :: Lens' BatchDeleteTableVersion Text

-- | The name of the table. For Hive compatibility, this name is entirely
--   lowercase.
batchDeleteTableVersion_tableName :: Lens' BatchDeleteTableVersion Text

-- | A list of the IDs of versions to be deleted. A <tt>VersionId</tt> is a
--   string representation of an integer. Each version is incremented by 1.
batchDeleteTableVersion_versionIds :: Lens' BatchDeleteTableVersion [Text]

-- | <i>See:</i> <a>newBatchDeleteTableVersionResponse</a> smart
--   constructor.
data BatchDeleteTableVersionResponse
BatchDeleteTableVersionResponse' :: Maybe [TableVersionError] -> Int -> BatchDeleteTableVersionResponse

-- | A list of errors encountered while trying to delete the specified
--   table versions.
[$sel:errors:BatchDeleteTableVersionResponse'] :: BatchDeleteTableVersionResponse -> Maybe [TableVersionError]

-- | The response's http status code.
[$sel:httpStatus:BatchDeleteTableVersionResponse'] :: BatchDeleteTableVersionResponse -> Int

-- | Create a value of <a>BatchDeleteTableVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchDeleteTableVersionResponse'</a>,
--   <a>batchDeleteTableVersionResponse_errors</a> - A list of errors
--   encountered while trying to delete the specified table versions.
--   
--   <a>$sel:httpStatus:BatchDeleteTableVersionResponse'</a>,
--   <a>batchDeleteTableVersionResponse_httpStatus</a> - The response's
--   http status code.
newBatchDeleteTableVersionResponse :: Int -> BatchDeleteTableVersionResponse

-- | A list of errors encountered while trying to delete the specified
--   table versions.
batchDeleteTableVersionResponse_errors :: Lens' BatchDeleteTableVersionResponse (Maybe [TableVersionError])

-- | The response's http status code.
batchDeleteTableVersionResponse_httpStatus :: Lens' BatchDeleteTableVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.BatchDeleteTableVersion.BatchDeleteTableVersion
instance GHC.Show.Show Network.AWS.Glue.BatchDeleteTableVersion.BatchDeleteTableVersion
instance GHC.Read.Read Network.AWS.Glue.BatchDeleteTableVersion.BatchDeleteTableVersion
instance GHC.Classes.Eq Network.AWS.Glue.BatchDeleteTableVersion.BatchDeleteTableVersion
instance GHC.Generics.Generic Network.AWS.Glue.BatchDeleteTableVersion.BatchDeleteTableVersionResponse
instance GHC.Show.Show Network.AWS.Glue.BatchDeleteTableVersion.BatchDeleteTableVersionResponse
instance GHC.Read.Read Network.AWS.Glue.BatchDeleteTableVersion.BatchDeleteTableVersionResponse
instance GHC.Classes.Eq Network.AWS.Glue.BatchDeleteTableVersion.BatchDeleteTableVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.BatchDeleteTableVersion.BatchDeleteTableVersion
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchDeleteTableVersion.BatchDeleteTableVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.BatchDeleteTableVersion.BatchDeleteTableVersion
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchDeleteTableVersion.BatchDeleteTableVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.BatchDeleteTableVersion.BatchDeleteTableVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.BatchDeleteTableVersion.BatchDeleteTableVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.BatchDeleteTableVersion.BatchDeleteTableVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.BatchDeleteTableVersion.BatchDeleteTableVersion


-- | Deletes multiple tables at once.
--   
--   After completing this operation, you no longer have access to the
--   table versions and partitions that belong to the deleted table. Glue
--   deletes these "orphaned" resources asynchronously in a timely manner,
--   at the discretion of the service.
--   
--   To ensure the immediate deletion of all related resources, before
--   calling <tt>BatchDeleteTable</tt>, use <tt>DeleteTableVersion</tt> or
--   <tt>BatchDeleteTableVersion</tt>, and <tt>DeletePartition</tt> or
--   <tt>BatchDeletePartition</tt>, to delete any resources that belong to
--   the table.
module Network.AWS.Glue.BatchDeleteTable

-- | <i>See:</i> <a>newBatchDeleteTable</a> smart constructor.
data BatchDeleteTable
BatchDeleteTable' :: Maybe Text -> Text -> [Text] -> BatchDeleteTable

-- | The ID of the Data Catalog where the table resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
[$sel:catalogId:BatchDeleteTable'] :: BatchDeleteTable -> Maybe Text

-- | The name of the catalog database in which the tables to delete reside.
--   For Hive compatibility, this name is entirely lowercase.
[$sel:databaseName:BatchDeleteTable'] :: BatchDeleteTable -> Text

-- | A list of the table to delete.
[$sel:tablesToDelete:BatchDeleteTable'] :: BatchDeleteTable -> [Text]

-- | Create a value of <a>BatchDeleteTable</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:BatchDeleteTable'</a>,
--   <a>batchDeleteTable_catalogId</a> - The ID of the Data Catalog where
--   the table resides. If none is provided, the Amazon Web Services
--   account ID is used by default.
--   
--   <a>$sel:databaseName:BatchDeleteTable'</a>,
--   <a>batchDeleteTable_databaseName</a> - The name of the catalog
--   database in which the tables to delete reside. For Hive compatibility,
--   this name is entirely lowercase.
--   
--   <a>$sel:tablesToDelete:BatchDeleteTable'</a>,
--   <a>batchDeleteTable_tablesToDelete</a> - A list of the table to
--   delete.
newBatchDeleteTable :: Text -> BatchDeleteTable

-- | The ID of the Data Catalog where the table resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
batchDeleteTable_catalogId :: Lens' BatchDeleteTable (Maybe Text)

-- | The name of the catalog database in which the tables to delete reside.
--   For Hive compatibility, this name is entirely lowercase.
batchDeleteTable_databaseName :: Lens' BatchDeleteTable Text

-- | A list of the table to delete.
batchDeleteTable_tablesToDelete :: Lens' BatchDeleteTable [Text]

-- | <i>See:</i> <a>newBatchDeleteTableResponse</a> smart constructor.
data BatchDeleteTableResponse
BatchDeleteTableResponse' :: Maybe [TableError] -> Int -> BatchDeleteTableResponse

-- | A list of errors encountered in attempting to delete the specified
--   tables.
[$sel:errors:BatchDeleteTableResponse'] :: BatchDeleteTableResponse -> Maybe [TableError]

-- | The response's http status code.
[$sel:httpStatus:BatchDeleteTableResponse'] :: BatchDeleteTableResponse -> Int

-- | Create a value of <a>BatchDeleteTableResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchDeleteTableResponse'</a>,
--   <a>batchDeleteTableResponse_errors</a> - A list of errors encountered
--   in attempting to delete the specified tables.
--   
--   <a>$sel:httpStatus:BatchDeleteTableResponse'</a>,
--   <a>batchDeleteTableResponse_httpStatus</a> - The response's http
--   status code.
newBatchDeleteTableResponse :: Int -> BatchDeleteTableResponse

-- | A list of errors encountered in attempting to delete the specified
--   tables.
batchDeleteTableResponse_errors :: Lens' BatchDeleteTableResponse (Maybe [TableError])

-- | The response's http status code.
batchDeleteTableResponse_httpStatus :: Lens' BatchDeleteTableResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.BatchDeleteTable.BatchDeleteTable
instance GHC.Show.Show Network.AWS.Glue.BatchDeleteTable.BatchDeleteTable
instance GHC.Read.Read Network.AWS.Glue.BatchDeleteTable.BatchDeleteTable
instance GHC.Classes.Eq Network.AWS.Glue.BatchDeleteTable.BatchDeleteTable
instance GHC.Generics.Generic Network.AWS.Glue.BatchDeleteTable.BatchDeleteTableResponse
instance GHC.Show.Show Network.AWS.Glue.BatchDeleteTable.BatchDeleteTableResponse
instance GHC.Read.Read Network.AWS.Glue.BatchDeleteTable.BatchDeleteTableResponse
instance GHC.Classes.Eq Network.AWS.Glue.BatchDeleteTable.BatchDeleteTableResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.BatchDeleteTable.BatchDeleteTable
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchDeleteTable.BatchDeleteTableResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.BatchDeleteTable.BatchDeleteTable
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchDeleteTable.BatchDeleteTable
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.BatchDeleteTable.BatchDeleteTable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.BatchDeleteTable.BatchDeleteTable
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.BatchDeleteTable.BatchDeleteTable
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.BatchDeleteTable.BatchDeleteTable


-- | Deletes one or more partitions in a batch operation.
module Network.AWS.Glue.BatchDeletePartition

-- | <i>See:</i> <a>newBatchDeletePartition</a> smart constructor.
data BatchDeletePartition
BatchDeletePartition' :: Maybe Text -> Text -> Text -> [PartitionValueList] -> BatchDeletePartition

-- | The ID of the Data Catalog where the partition to be deleted resides.
--   If none is provided, the Amazon Web Services account ID is used by
--   default.
[$sel:catalogId:BatchDeletePartition'] :: BatchDeletePartition -> Maybe Text

-- | The name of the catalog database in which the table in question
--   resides.
[$sel:databaseName:BatchDeletePartition'] :: BatchDeletePartition -> Text

-- | The name of the table that contains the partitions to be deleted.
[$sel:tableName:BatchDeletePartition'] :: BatchDeletePartition -> Text

-- | A list of <tt>PartitionInput</tt> structures that define the
--   partitions to be deleted.
[$sel:partitionsToDelete:BatchDeletePartition'] :: BatchDeletePartition -> [PartitionValueList]

-- | Create a value of <a>BatchDeletePartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:BatchDeletePartition'</a>,
--   <a>batchDeletePartition_catalogId</a> - The ID of the Data Catalog
--   where the partition to be deleted resides. If none is provided, the
--   Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:BatchDeletePartition'</a>,
--   <a>batchDeletePartition_databaseName</a> - The name of the catalog
--   database in which the table in question resides.
--   
--   <a>$sel:tableName:BatchDeletePartition'</a>,
--   <a>batchDeletePartition_tableName</a> - The name of the table that
--   contains the partitions to be deleted.
--   
--   <a>$sel:partitionsToDelete:BatchDeletePartition'</a>,
--   <a>batchDeletePartition_partitionsToDelete</a> - A list of
--   <tt>PartitionInput</tt> structures that define the partitions to be
--   deleted.
newBatchDeletePartition :: Text -> Text -> BatchDeletePartition

-- | The ID of the Data Catalog where the partition to be deleted resides.
--   If none is provided, the Amazon Web Services account ID is used by
--   default.
batchDeletePartition_catalogId :: Lens' BatchDeletePartition (Maybe Text)

-- | The name of the catalog database in which the table in question
--   resides.
batchDeletePartition_databaseName :: Lens' BatchDeletePartition Text

-- | The name of the table that contains the partitions to be deleted.
batchDeletePartition_tableName :: Lens' BatchDeletePartition Text

-- | A list of <tt>PartitionInput</tt> structures that define the
--   partitions to be deleted.
batchDeletePartition_partitionsToDelete :: Lens' BatchDeletePartition [PartitionValueList]

-- | <i>See:</i> <a>newBatchDeletePartitionResponse</a> smart constructor.
data BatchDeletePartitionResponse
BatchDeletePartitionResponse' :: Maybe [PartitionError] -> Int -> BatchDeletePartitionResponse

-- | The errors encountered when trying to delete the requested partitions.
[$sel:errors:BatchDeletePartitionResponse'] :: BatchDeletePartitionResponse -> Maybe [PartitionError]

-- | The response's http status code.
[$sel:httpStatus:BatchDeletePartitionResponse'] :: BatchDeletePartitionResponse -> Int

-- | Create a value of <a>BatchDeletePartitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchDeletePartitionResponse'</a>,
--   <a>batchDeletePartitionResponse_errors</a> - The errors encountered
--   when trying to delete the requested partitions.
--   
--   <a>$sel:httpStatus:BatchDeletePartitionResponse'</a>,
--   <a>batchDeletePartitionResponse_httpStatus</a> - The response's http
--   status code.
newBatchDeletePartitionResponse :: Int -> BatchDeletePartitionResponse

-- | The errors encountered when trying to delete the requested partitions.
batchDeletePartitionResponse_errors :: Lens' BatchDeletePartitionResponse (Maybe [PartitionError])

-- | The response's http status code.
batchDeletePartitionResponse_httpStatus :: Lens' BatchDeletePartitionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.BatchDeletePartition.BatchDeletePartition
instance GHC.Show.Show Network.AWS.Glue.BatchDeletePartition.BatchDeletePartition
instance GHC.Read.Read Network.AWS.Glue.BatchDeletePartition.BatchDeletePartition
instance GHC.Classes.Eq Network.AWS.Glue.BatchDeletePartition.BatchDeletePartition
instance GHC.Generics.Generic Network.AWS.Glue.BatchDeletePartition.BatchDeletePartitionResponse
instance GHC.Show.Show Network.AWS.Glue.BatchDeletePartition.BatchDeletePartitionResponse
instance GHC.Read.Read Network.AWS.Glue.BatchDeletePartition.BatchDeletePartitionResponse
instance GHC.Classes.Eq Network.AWS.Glue.BatchDeletePartition.BatchDeletePartitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.BatchDeletePartition.BatchDeletePartition
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchDeletePartition.BatchDeletePartitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.BatchDeletePartition.BatchDeletePartition
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchDeletePartition.BatchDeletePartition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.BatchDeletePartition.BatchDeletePartition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.BatchDeletePartition.BatchDeletePartition
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.BatchDeletePartition.BatchDeletePartition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.BatchDeletePartition.BatchDeletePartition


-- | Deletes a list of connection definitions from the Data Catalog.
module Network.AWS.Glue.BatchDeleteConnection

-- | <i>See:</i> <a>newBatchDeleteConnection</a> smart constructor.
data BatchDeleteConnection
BatchDeleteConnection' :: Maybe Text -> [Text] -> BatchDeleteConnection

-- | The ID of the Data Catalog in which the connections reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
[$sel:catalogId:BatchDeleteConnection'] :: BatchDeleteConnection -> Maybe Text

-- | A list of names of the connections to delete.
[$sel:connectionNameList:BatchDeleteConnection'] :: BatchDeleteConnection -> [Text]

-- | Create a value of <a>BatchDeleteConnection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:BatchDeleteConnection'</a>,
--   <a>batchDeleteConnection_catalogId</a> - The ID of the Data Catalog in
--   which the connections reside. If none is provided, the Amazon Web
--   Services account ID is used by default.
--   
--   <a>$sel:connectionNameList:BatchDeleteConnection'</a>,
--   <a>batchDeleteConnection_connectionNameList</a> - A list of names of
--   the connections to delete.
newBatchDeleteConnection :: BatchDeleteConnection

-- | The ID of the Data Catalog in which the connections reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
batchDeleteConnection_catalogId :: Lens' BatchDeleteConnection (Maybe Text)

-- | A list of names of the connections to delete.
batchDeleteConnection_connectionNameList :: Lens' BatchDeleteConnection [Text]

-- | <i>See:</i> <a>newBatchDeleteConnectionResponse</a> smart constructor.
data BatchDeleteConnectionResponse
BatchDeleteConnectionResponse' :: Maybe [Text] -> Maybe (HashMap Text ErrorDetail) -> Int -> BatchDeleteConnectionResponse

-- | A list of names of the connection definitions that were successfully
--   deleted.
[$sel:succeeded:BatchDeleteConnectionResponse'] :: BatchDeleteConnectionResponse -> Maybe [Text]

-- | A map of the names of connections that were not successfully deleted
--   to error details.
[$sel:errors:BatchDeleteConnectionResponse'] :: BatchDeleteConnectionResponse -> Maybe (HashMap Text ErrorDetail)

-- | The response's http status code.
[$sel:httpStatus:BatchDeleteConnectionResponse'] :: BatchDeleteConnectionResponse -> Int

-- | Create a value of <a>BatchDeleteConnectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:succeeded:BatchDeleteConnectionResponse'</a>,
--   <a>batchDeleteConnectionResponse_succeeded</a> - A list of names of
--   the connection definitions that were successfully deleted.
--   
--   <a>$sel:errors:BatchDeleteConnectionResponse'</a>,
--   <a>batchDeleteConnectionResponse_errors</a> - A map of the names of
--   connections that were not successfully deleted to error details.
--   
--   <a>$sel:httpStatus:BatchDeleteConnectionResponse'</a>,
--   <a>batchDeleteConnectionResponse_httpStatus</a> - The response's http
--   status code.
newBatchDeleteConnectionResponse :: Int -> BatchDeleteConnectionResponse

-- | A list of names of the connection definitions that were successfully
--   deleted.
batchDeleteConnectionResponse_succeeded :: Lens' BatchDeleteConnectionResponse (Maybe [Text])

-- | A map of the names of connections that were not successfully deleted
--   to error details.
batchDeleteConnectionResponse_errors :: Lens' BatchDeleteConnectionResponse (Maybe (HashMap Text ErrorDetail))

-- | The response's http status code.
batchDeleteConnectionResponse_httpStatus :: Lens' BatchDeleteConnectionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.BatchDeleteConnection.BatchDeleteConnection
instance GHC.Show.Show Network.AWS.Glue.BatchDeleteConnection.BatchDeleteConnection
instance GHC.Read.Read Network.AWS.Glue.BatchDeleteConnection.BatchDeleteConnection
instance GHC.Classes.Eq Network.AWS.Glue.BatchDeleteConnection.BatchDeleteConnection
instance GHC.Generics.Generic Network.AWS.Glue.BatchDeleteConnection.BatchDeleteConnectionResponse
instance GHC.Show.Show Network.AWS.Glue.BatchDeleteConnection.BatchDeleteConnectionResponse
instance GHC.Read.Read Network.AWS.Glue.BatchDeleteConnection.BatchDeleteConnectionResponse
instance GHC.Classes.Eq Network.AWS.Glue.BatchDeleteConnection.BatchDeleteConnectionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.BatchDeleteConnection.BatchDeleteConnection
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchDeleteConnection.BatchDeleteConnectionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.BatchDeleteConnection.BatchDeleteConnection
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchDeleteConnection.BatchDeleteConnection
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.BatchDeleteConnection.BatchDeleteConnection
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.BatchDeleteConnection.BatchDeleteConnection
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.BatchDeleteConnection.BatchDeleteConnection
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.BatchDeleteConnection.BatchDeleteConnection


-- | Creates one or more partitions in a batch operation.
module Network.AWS.Glue.BatchCreatePartition

-- | <i>See:</i> <a>newBatchCreatePartition</a> smart constructor.
data BatchCreatePartition
BatchCreatePartition' :: Maybe Text -> Text -> Text -> [PartitionInput] -> BatchCreatePartition

-- | The ID of the catalog in which the partition is to be created.
--   Currently, this should be the Amazon Web Services account ID.
[$sel:catalogId:BatchCreatePartition'] :: BatchCreatePartition -> Maybe Text

-- | The name of the metadata database in which the partition is to be
--   created.
[$sel:databaseName:BatchCreatePartition'] :: BatchCreatePartition -> Text

-- | The name of the metadata table in which the partition is to be
--   created.
[$sel:tableName:BatchCreatePartition'] :: BatchCreatePartition -> Text

-- | A list of <tt>PartitionInput</tt> structures that define the
--   partitions to be created.
[$sel:partitionInputList:BatchCreatePartition'] :: BatchCreatePartition -> [PartitionInput]

-- | Create a value of <a>BatchCreatePartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:BatchCreatePartition'</a>,
--   <a>batchCreatePartition_catalogId</a> - The ID of the catalog in which
--   the partition is to be created. Currently, this should be the Amazon
--   Web Services account ID.
--   
--   <a>$sel:databaseName:BatchCreatePartition'</a>,
--   <a>batchCreatePartition_databaseName</a> - The name of the metadata
--   database in which the partition is to be created.
--   
--   <a>$sel:tableName:BatchCreatePartition'</a>,
--   <a>batchCreatePartition_tableName</a> - The name of the metadata table
--   in which the partition is to be created.
--   
--   <a>$sel:partitionInputList:BatchCreatePartition'</a>,
--   <a>batchCreatePartition_partitionInputList</a> - A list of
--   <tt>PartitionInput</tt> structures that define the partitions to be
--   created.
newBatchCreatePartition :: Text -> Text -> BatchCreatePartition

-- | The ID of the catalog in which the partition is to be created.
--   Currently, this should be the Amazon Web Services account ID.
batchCreatePartition_catalogId :: Lens' BatchCreatePartition (Maybe Text)

-- | The name of the metadata database in which the partition is to be
--   created.
batchCreatePartition_databaseName :: Lens' BatchCreatePartition Text

-- | The name of the metadata table in which the partition is to be
--   created.
batchCreatePartition_tableName :: Lens' BatchCreatePartition Text

-- | A list of <tt>PartitionInput</tt> structures that define the
--   partitions to be created.
batchCreatePartition_partitionInputList :: Lens' BatchCreatePartition [PartitionInput]

-- | <i>See:</i> <a>newBatchCreatePartitionResponse</a> smart constructor.
data BatchCreatePartitionResponse
BatchCreatePartitionResponse' :: Maybe [PartitionError] -> Int -> BatchCreatePartitionResponse

-- | The errors encountered when trying to create the requested partitions.
[$sel:errors:BatchCreatePartitionResponse'] :: BatchCreatePartitionResponse -> Maybe [PartitionError]

-- | The response's http status code.
[$sel:httpStatus:BatchCreatePartitionResponse'] :: BatchCreatePartitionResponse -> Int

-- | Create a value of <a>BatchCreatePartitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchCreatePartitionResponse'</a>,
--   <a>batchCreatePartitionResponse_errors</a> - The errors encountered
--   when trying to create the requested partitions.
--   
--   <a>$sel:httpStatus:BatchCreatePartitionResponse'</a>,
--   <a>batchCreatePartitionResponse_httpStatus</a> - The response's http
--   status code.
newBatchCreatePartitionResponse :: Int -> BatchCreatePartitionResponse

-- | The errors encountered when trying to create the requested partitions.
batchCreatePartitionResponse_errors :: Lens' BatchCreatePartitionResponse (Maybe [PartitionError])

-- | The response's http status code.
batchCreatePartitionResponse_httpStatus :: Lens' BatchCreatePartitionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.BatchCreatePartition.BatchCreatePartition
instance GHC.Show.Show Network.AWS.Glue.BatchCreatePartition.BatchCreatePartition
instance GHC.Read.Read Network.AWS.Glue.BatchCreatePartition.BatchCreatePartition
instance GHC.Classes.Eq Network.AWS.Glue.BatchCreatePartition.BatchCreatePartition
instance GHC.Generics.Generic Network.AWS.Glue.BatchCreatePartition.BatchCreatePartitionResponse
instance GHC.Show.Show Network.AWS.Glue.BatchCreatePartition.BatchCreatePartitionResponse
instance GHC.Read.Read Network.AWS.Glue.BatchCreatePartition.BatchCreatePartitionResponse
instance GHC.Classes.Eq Network.AWS.Glue.BatchCreatePartition.BatchCreatePartitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.BatchCreatePartition.BatchCreatePartition
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchCreatePartition.BatchCreatePartitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.BatchCreatePartition.BatchCreatePartition
instance Control.DeepSeq.NFData Network.AWS.Glue.BatchCreatePartition.BatchCreatePartition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.BatchCreatePartition.BatchCreatePartition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.BatchCreatePartition.BatchCreatePartition
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.BatchCreatePartition.BatchCreatePartition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.BatchCreatePartition.BatchCreatePartition


-- | Removes tags from a resource.
module Network.AWS.Glue.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource from which to remove
--   the tags.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | Tags to remove from this resource.
[$sel:tagsToRemove:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource from which to remove the tags.
--   
--   <a>$sel:tagsToRemove:UntagResource'</a>,
--   <a>untagResource_tagsToRemove</a> - Tags to remove from this resource.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource from which to remove
--   the tags.
untagResource_resourceArn :: Lens' UntagResource Text

-- | Tags to remove from this resource.
untagResource_tagsToRemove :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.Glue.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.Glue.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.Glue.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.Glue.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.Glue.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.Glue.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.Glue.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.Glue.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.Glue.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.UntagResource.UntagResource


-- | Updates a registered blueprint.
module Network.AWS.Glue.UpdateBlueprint

-- | <i>See:</i> <a>newUpdateBlueprint</a> smart constructor.
data UpdateBlueprint
UpdateBlueprint' :: Maybe Text -> Text -> Text -> UpdateBlueprint

-- | A description of the blueprint.
[$sel:description:UpdateBlueprint'] :: UpdateBlueprint -> Maybe Text

-- | The name of the blueprint.
[$sel:name:UpdateBlueprint'] :: UpdateBlueprint -> Text

-- | Specifies a path in Amazon S3 where the blueprint is published.
[$sel:blueprintLocation:UpdateBlueprint'] :: UpdateBlueprint -> Text

-- | Create a value of <a>UpdateBlueprint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:UpdateBlueprint'</a>,
--   <a>updateBlueprint_description</a> - A description of the blueprint.
--   
--   <a>$sel:name:UpdateBlueprint'</a>, <a>updateBlueprint_name</a> - The
--   name of the blueprint.
--   
--   <a>$sel:blueprintLocation:UpdateBlueprint'</a>,
--   <a>updateBlueprint_blueprintLocation</a> - Specifies a path in Amazon
--   S3 where the blueprint is published.
newUpdateBlueprint :: Text -> Text -> UpdateBlueprint

-- | A description of the blueprint.
updateBlueprint_description :: Lens' UpdateBlueprint (Maybe Text)

-- | The name of the blueprint.
updateBlueprint_name :: Lens' UpdateBlueprint Text

-- | Specifies a path in Amazon S3 where the blueprint is published.
updateBlueprint_blueprintLocation :: Lens' UpdateBlueprint Text

-- | <i>See:</i> <a>newUpdateBlueprintResponse</a> smart constructor.
data UpdateBlueprintResponse
UpdateBlueprintResponse' :: Maybe Text -> Int -> UpdateBlueprintResponse

-- | Returns the name of the blueprint that was updated.
[$sel:name:UpdateBlueprintResponse'] :: UpdateBlueprintResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateBlueprintResponse'] :: UpdateBlueprintResponse -> Int

-- | Create a value of <a>UpdateBlueprintResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateBlueprint'</a>, <a>updateBlueprintResponse_name</a>
--   - Returns the name of the blueprint that was updated.
--   
--   <a>$sel:httpStatus:UpdateBlueprintResponse'</a>,
--   <a>updateBlueprintResponse_httpStatus</a> - The response's http status
--   code.
newUpdateBlueprintResponse :: Int -> UpdateBlueprintResponse

-- | Returns the name of the blueprint that was updated.
updateBlueprintResponse_name :: Lens' UpdateBlueprintResponse (Maybe Text)

-- | The response's http status code.
updateBlueprintResponse_httpStatus :: Lens' UpdateBlueprintResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.UpdateBlueprint.UpdateBlueprint
instance GHC.Show.Show Network.AWS.Glue.UpdateBlueprint.UpdateBlueprint
instance GHC.Read.Read Network.AWS.Glue.UpdateBlueprint.UpdateBlueprint
instance GHC.Classes.Eq Network.AWS.Glue.UpdateBlueprint.UpdateBlueprint
instance GHC.Generics.Generic Network.AWS.Glue.UpdateBlueprint.UpdateBlueprintResponse
instance GHC.Show.Show Network.AWS.Glue.UpdateBlueprint.UpdateBlueprintResponse
instance GHC.Read.Read Network.AWS.Glue.UpdateBlueprint.UpdateBlueprintResponse
instance GHC.Classes.Eq Network.AWS.Glue.UpdateBlueprint.UpdateBlueprintResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.UpdateBlueprint.UpdateBlueprint
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateBlueprint.UpdateBlueprintResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.UpdateBlueprint.UpdateBlueprint
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateBlueprint.UpdateBlueprint
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.UpdateBlueprint.UpdateBlueprint
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.UpdateBlueprint.UpdateBlueprint
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.UpdateBlueprint.UpdateBlueprint
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.UpdateBlueprint.UpdateBlueprint


-- | Modifies an existing classifier (a <tt>GrokClassifier</tt>, an
--   <tt>XMLClassifier</tt>, a <tt>JsonClassifier</tt>, or a
--   <tt>CsvClassifier</tt>, depending on which field is present).
module Network.AWS.Glue.UpdateClassifier

-- | <i>See:</i> <a>newUpdateClassifier</a> smart constructor.
data UpdateClassifier
UpdateClassifier' :: Maybe UpdateGrokClassifierRequest -> Maybe UpdateXMLClassifierRequest -> Maybe UpdateCsvClassifierRequest -> Maybe UpdateJsonClassifierRequest -> UpdateClassifier

-- | A <tt>GrokClassifier</tt> object with updated fields.
[$sel:grokClassifier:UpdateClassifier'] :: UpdateClassifier -> Maybe UpdateGrokClassifierRequest

-- | An <tt>XMLClassifier</tt> object with updated fields.
[$sel:xMLClassifier:UpdateClassifier'] :: UpdateClassifier -> Maybe UpdateXMLClassifierRequest

-- | A <tt>CsvClassifier</tt> object with updated fields.
[$sel:csvClassifier:UpdateClassifier'] :: UpdateClassifier -> Maybe UpdateCsvClassifierRequest

-- | A <tt>JsonClassifier</tt> object with updated fields.
[$sel:jsonClassifier:UpdateClassifier'] :: UpdateClassifier -> Maybe UpdateJsonClassifierRequest

-- | Create a value of <a>UpdateClassifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:grokClassifier:UpdateClassifier'</a>,
--   <a>updateClassifier_grokClassifier</a> - A <tt>GrokClassifier</tt>
--   object with updated fields.
--   
--   <a>$sel:xMLClassifier:UpdateClassifier'</a>,
--   <a>updateClassifier_xMLClassifier</a> - An <tt>XMLClassifier</tt>
--   object with updated fields.
--   
--   <a>$sel:csvClassifier:UpdateClassifier'</a>,
--   <a>updateClassifier_csvClassifier</a> - A <tt>CsvClassifier</tt>
--   object with updated fields.
--   
--   <a>$sel:jsonClassifier:UpdateClassifier'</a>,
--   <a>updateClassifier_jsonClassifier</a> - A <tt>JsonClassifier</tt>
--   object with updated fields.
newUpdateClassifier :: UpdateClassifier

-- | A <tt>GrokClassifier</tt> object with updated fields.
updateClassifier_grokClassifier :: Lens' UpdateClassifier (Maybe UpdateGrokClassifierRequest)

-- | An <tt>XMLClassifier</tt> object with updated fields.
updateClassifier_xMLClassifier :: Lens' UpdateClassifier (Maybe UpdateXMLClassifierRequest)

-- | A <tt>CsvClassifier</tt> object with updated fields.
updateClassifier_csvClassifier :: Lens' UpdateClassifier (Maybe UpdateCsvClassifierRequest)

-- | A <tt>JsonClassifier</tt> object with updated fields.
updateClassifier_jsonClassifier :: Lens' UpdateClassifier (Maybe UpdateJsonClassifierRequest)

-- | <i>See:</i> <a>newUpdateClassifierResponse</a> smart constructor.
data UpdateClassifierResponse
UpdateClassifierResponse' :: Int -> UpdateClassifierResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateClassifierResponse'] :: UpdateClassifierResponse -> Int

-- | Create a value of <a>UpdateClassifierResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateClassifierResponse'</a>,
--   <a>updateClassifierResponse_httpStatus</a> - The response's http
--   status code.
newUpdateClassifierResponse :: Int -> UpdateClassifierResponse

-- | The response's http status code.
updateClassifierResponse_httpStatus :: Lens' UpdateClassifierResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.UpdateClassifier.UpdateClassifier
instance GHC.Show.Show Network.AWS.Glue.UpdateClassifier.UpdateClassifier
instance GHC.Read.Read Network.AWS.Glue.UpdateClassifier.UpdateClassifier
instance GHC.Classes.Eq Network.AWS.Glue.UpdateClassifier.UpdateClassifier
instance GHC.Generics.Generic Network.AWS.Glue.UpdateClassifier.UpdateClassifierResponse
instance GHC.Show.Show Network.AWS.Glue.UpdateClassifier.UpdateClassifierResponse
instance GHC.Read.Read Network.AWS.Glue.UpdateClassifier.UpdateClassifierResponse
instance GHC.Classes.Eq Network.AWS.Glue.UpdateClassifier.UpdateClassifierResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.UpdateClassifier.UpdateClassifier
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateClassifier.UpdateClassifierResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.UpdateClassifier.UpdateClassifier
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateClassifier.UpdateClassifier
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.UpdateClassifier.UpdateClassifier
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.UpdateClassifier.UpdateClassifier
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.UpdateClassifier.UpdateClassifier
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.UpdateClassifier.UpdateClassifier


-- | Creates or updates partition statistics of columns.
--   
--   The Identity and Access Management (IAM) permission required for this
--   operation is <tt>UpdatePartition</tt>.
module Network.AWS.Glue.UpdateColumnStatisticsForPartition

-- | <i>See:</i> <a>newUpdateColumnStatisticsForPartition</a> smart
--   constructor.
data UpdateColumnStatisticsForPartition
UpdateColumnStatisticsForPartition' :: Maybe Text -> Text -> Text -> [Text] -> [ColumnStatistics] -> UpdateColumnStatisticsForPartition

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
[$sel:catalogId:UpdateColumnStatisticsForPartition'] :: UpdateColumnStatisticsForPartition -> Maybe Text

-- | The name of the catalog database where the partitions reside.
[$sel:databaseName:UpdateColumnStatisticsForPartition'] :: UpdateColumnStatisticsForPartition -> Text

-- | The name of the partitions' table.
[$sel:tableName:UpdateColumnStatisticsForPartition'] :: UpdateColumnStatisticsForPartition -> Text

-- | A list of partition values identifying the partition.
[$sel:partitionValues:UpdateColumnStatisticsForPartition'] :: UpdateColumnStatisticsForPartition -> [Text]

-- | A list of the column statistics.
[$sel:columnStatisticsList:UpdateColumnStatisticsForPartition'] :: UpdateColumnStatisticsForPartition -> [ColumnStatistics]

-- | Create a value of <a>UpdateColumnStatisticsForPartition</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:UpdateColumnStatisticsForPartition'</a>,
--   <a>updateColumnStatisticsForPartition_catalogId</a> - The ID of the
--   Data Catalog where the partitions in question reside. If none is
--   supplied, the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:UpdateColumnStatisticsForPartition'</a>,
--   <a>updateColumnStatisticsForPartition_databaseName</a> - The name of
--   the catalog database where the partitions reside.
--   
--   <a>$sel:tableName:UpdateColumnStatisticsForPartition'</a>,
--   <a>updateColumnStatisticsForPartition_tableName</a> - The name of the
--   partitions' table.
--   
--   <a>$sel:partitionValues:UpdateColumnStatisticsForPartition'</a>,
--   <a>updateColumnStatisticsForPartition_partitionValues</a> - A list of
--   partition values identifying the partition.
--   
--   <a>$sel:columnStatisticsList:UpdateColumnStatisticsForPartition'</a>,
--   <a>updateColumnStatisticsForPartition_columnStatisticsList</a> - A
--   list of the column statistics.
newUpdateColumnStatisticsForPartition :: Text -> Text -> UpdateColumnStatisticsForPartition

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
updateColumnStatisticsForPartition_catalogId :: Lens' UpdateColumnStatisticsForPartition (Maybe Text)

-- | The name of the catalog database where the partitions reside.
updateColumnStatisticsForPartition_databaseName :: Lens' UpdateColumnStatisticsForPartition Text

-- | The name of the partitions' table.
updateColumnStatisticsForPartition_tableName :: Lens' UpdateColumnStatisticsForPartition Text

-- | A list of partition values identifying the partition.
updateColumnStatisticsForPartition_partitionValues :: Lens' UpdateColumnStatisticsForPartition [Text]

-- | A list of the column statistics.
updateColumnStatisticsForPartition_columnStatisticsList :: Lens' UpdateColumnStatisticsForPartition [ColumnStatistics]

-- | <i>See:</i> <a>newUpdateColumnStatisticsForPartitionResponse</a> smart
--   constructor.
data UpdateColumnStatisticsForPartitionResponse
UpdateColumnStatisticsForPartitionResponse' :: Maybe [ColumnStatisticsError] -> Int -> UpdateColumnStatisticsForPartitionResponse

-- | Error occurred during updating column statistics data.
[$sel:errors:UpdateColumnStatisticsForPartitionResponse'] :: UpdateColumnStatisticsForPartitionResponse -> Maybe [ColumnStatisticsError]

-- | The response's http status code.
[$sel:httpStatus:UpdateColumnStatisticsForPartitionResponse'] :: UpdateColumnStatisticsForPartitionResponse -> Int

-- | Create a value of <a>UpdateColumnStatisticsForPartitionResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:UpdateColumnStatisticsForPartitionResponse'</a>,
--   <a>updateColumnStatisticsForPartitionResponse_errors</a> - Error
--   occurred during updating column statistics data.
--   
--   <a>$sel:httpStatus:UpdateColumnStatisticsForPartitionResponse'</a>,
--   <a>updateColumnStatisticsForPartitionResponse_httpStatus</a> - The
--   response's http status code.
newUpdateColumnStatisticsForPartitionResponse :: Int -> UpdateColumnStatisticsForPartitionResponse

-- | Error occurred during updating column statistics data.
updateColumnStatisticsForPartitionResponse_errors :: Lens' UpdateColumnStatisticsForPartitionResponse (Maybe [ColumnStatisticsError])

-- | The response's http status code.
updateColumnStatisticsForPartitionResponse_httpStatus :: Lens' UpdateColumnStatisticsForPartitionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.UpdateColumnStatisticsForPartition.UpdateColumnStatisticsForPartition
instance GHC.Show.Show Network.AWS.Glue.UpdateColumnStatisticsForPartition.UpdateColumnStatisticsForPartition
instance GHC.Read.Read Network.AWS.Glue.UpdateColumnStatisticsForPartition.UpdateColumnStatisticsForPartition
instance GHC.Classes.Eq Network.AWS.Glue.UpdateColumnStatisticsForPartition.UpdateColumnStatisticsForPartition
instance GHC.Generics.Generic Network.AWS.Glue.UpdateColumnStatisticsForPartition.UpdateColumnStatisticsForPartitionResponse
instance GHC.Show.Show Network.AWS.Glue.UpdateColumnStatisticsForPartition.UpdateColumnStatisticsForPartitionResponse
instance GHC.Read.Read Network.AWS.Glue.UpdateColumnStatisticsForPartition.UpdateColumnStatisticsForPartitionResponse
instance GHC.Classes.Eq Network.AWS.Glue.UpdateColumnStatisticsForPartition.UpdateColumnStatisticsForPartitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.UpdateColumnStatisticsForPartition.UpdateColumnStatisticsForPartition
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateColumnStatisticsForPartition.UpdateColumnStatisticsForPartitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.UpdateColumnStatisticsForPartition.UpdateColumnStatisticsForPartition
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateColumnStatisticsForPartition.UpdateColumnStatisticsForPartition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.UpdateColumnStatisticsForPartition.UpdateColumnStatisticsForPartition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.UpdateColumnStatisticsForPartition.UpdateColumnStatisticsForPartition
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.UpdateColumnStatisticsForPartition.UpdateColumnStatisticsForPartition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.UpdateColumnStatisticsForPartition.UpdateColumnStatisticsForPartition


-- | Creates or updates table statistics of columns.
--   
--   The Identity and Access Management (IAM) permission required for this
--   operation is <tt>UpdateTable</tt>.
module Network.AWS.Glue.UpdateColumnStatisticsForTable

-- | <i>See:</i> <a>newUpdateColumnStatisticsForTable</a> smart
--   constructor.
data UpdateColumnStatisticsForTable
UpdateColumnStatisticsForTable' :: Maybe Text -> Text -> Text -> [ColumnStatistics] -> UpdateColumnStatisticsForTable

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
[$sel:catalogId:UpdateColumnStatisticsForTable'] :: UpdateColumnStatisticsForTable -> Maybe Text

-- | The name of the catalog database where the partitions reside.
[$sel:databaseName:UpdateColumnStatisticsForTable'] :: UpdateColumnStatisticsForTable -> Text

-- | The name of the partitions' table.
[$sel:tableName:UpdateColumnStatisticsForTable'] :: UpdateColumnStatisticsForTable -> Text

-- | A list of the column statistics.
[$sel:columnStatisticsList:UpdateColumnStatisticsForTable'] :: UpdateColumnStatisticsForTable -> [ColumnStatistics]

-- | Create a value of <a>UpdateColumnStatisticsForTable</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:UpdateColumnStatisticsForTable'</a>,
--   <a>updateColumnStatisticsForTable_catalogId</a> - The ID of the Data
--   Catalog where the partitions in question reside. If none is supplied,
--   the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:UpdateColumnStatisticsForTable'</a>,
--   <a>updateColumnStatisticsForTable_databaseName</a> - The name of the
--   catalog database where the partitions reside.
--   
--   <a>$sel:tableName:UpdateColumnStatisticsForTable'</a>,
--   <a>updateColumnStatisticsForTable_tableName</a> - The name of the
--   partitions' table.
--   
--   <a>$sel:columnStatisticsList:UpdateColumnStatisticsForTable'</a>,
--   <a>updateColumnStatisticsForTable_columnStatisticsList</a> - A list of
--   the column statistics.
newUpdateColumnStatisticsForTable :: Text -> Text -> UpdateColumnStatisticsForTable

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
updateColumnStatisticsForTable_catalogId :: Lens' UpdateColumnStatisticsForTable (Maybe Text)

-- | The name of the catalog database where the partitions reside.
updateColumnStatisticsForTable_databaseName :: Lens' UpdateColumnStatisticsForTable Text

-- | The name of the partitions' table.
updateColumnStatisticsForTable_tableName :: Lens' UpdateColumnStatisticsForTable Text

-- | A list of the column statistics.
updateColumnStatisticsForTable_columnStatisticsList :: Lens' UpdateColumnStatisticsForTable [ColumnStatistics]

-- | <i>See:</i> <a>newUpdateColumnStatisticsForTableResponse</a> smart
--   constructor.
data UpdateColumnStatisticsForTableResponse
UpdateColumnStatisticsForTableResponse' :: Maybe [ColumnStatisticsError] -> Int -> UpdateColumnStatisticsForTableResponse

-- | List of ColumnStatisticsErrors.
[$sel:errors:UpdateColumnStatisticsForTableResponse'] :: UpdateColumnStatisticsForTableResponse -> Maybe [ColumnStatisticsError]

-- | The response's http status code.
[$sel:httpStatus:UpdateColumnStatisticsForTableResponse'] :: UpdateColumnStatisticsForTableResponse -> Int

-- | Create a value of <a>UpdateColumnStatisticsForTableResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:UpdateColumnStatisticsForTableResponse'</a>,
--   <a>updateColumnStatisticsForTableResponse_errors</a> - List of
--   ColumnStatisticsErrors.
--   
--   <a>$sel:httpStatus:UpdateColumnStatisticsForTableResponse'</a>,
--   <a>updateColumnStatisticsForTableResponse_httpStatus</a> - The
--   response's http status code.
newUpdateColumnStatisticsForTableResponse :: Int -> UpdateColumnStatisticsForTableResponse

-- | List of ColumnStatisticsErrors.
updateColumnStatisticsForTableResponse_errors :: Lens' UpdateColumnStatisticsForTableResponse (Maybe [ColumnStatisticsError])

-- | The response's http status code.
updateColumnStatisticsForTableResponse_httpStatus :: Lens' UpdateColumnStatisticsForTableResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.UpdateColumnStatisticsForTable.UpdateColumnStatisticsForTable
instance GHC.Show.Show Network.AWS.Glue.UpdateColumnStatisticsForTable.UpdateColumnStatisticsForTable
instance GHC.Read.Read Network.AWS.Glue.UpdateColumnStatisticsForTable.UpdateColumnStatisticsForTable
instance GHC.Classes.Eq Network.AWS.Glue.UpdateColumnStatisticsForTable.UpdateColumnStatisticsForTable
instance GHC.Generics.Generic Network.AWS.Glue.UpdateColumnStatisticsForTable.UpdateColumnStatisticsForTableResponse
instance GHC.Show.Show Network.AWS.Glue.UpdateColumnStatisticsForTable.UpdateColumnStatisticsForTableResponse
instance GHC.Read.Read Network.AWS.Glue.UpdateColumnStatisticsForTable.UpdateColumnStatisticsForTableResponse
instance GHC.Classes.Eq Network.AWS.Glue.UpdateColumnStatisticsForTable.UpdateColumnStatisticsForTableResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.UpdateColumnStatisticsForTable.UpdateColumnStatisticsForTable
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateColumnStatisticsForTable.UpdateColumnStatisticsForTableResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.UpdateColumnStatisticsForTable.UpdateColumnStatisticsForTable
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateColumnStatisticsForTable.UpdateColumnStatisticsForTable
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.UpdateColumnStatisticsForTable.UpdateColumnStatisticsForTable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.UpdateColumnStatisticsForTable.UpdateColumnStatisticsForTable
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.UpdateColumnStatisticsForTable.UpdateColumnStatisticsForTable
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.UpdateColumnStatisticsForTable.UpdateColumnStatisticsForTable


-- | Updates a connection definition in the Data Catalog.
module Network.AWS.Glue.UpdateConnection

-- | <i>See:</i> <a>newUpdateConnection</a> smart constructor.
data UpdateConnection
UpdateConnection' :: Maybe Text -> Text -> ConnectionInput -> UpdateConnection

-- | The ID of the Data Catalog in which the connection resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
[$sel:catalogId:UpdateConnection'] :: UpdateConnection -> Maybe Text

-- | The name of the connection definition to update.
[$sel:name:UpdateConnection'] :: UpdateConnection -> Text

-- | A <tt>ConnectionInput</tt> object that redefines the connection in
--   question.
[$sel:connectionInput:UpdateConnection'] :: UpdateConnection -> ConnectionInput

-- | Create a value of <a>UpdateConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:UpdateConnection'</a>,
--   <a>updateConnection_catalogId</a> - The ID of the Data Catalog in
--   which the connection resides. If none is provided, the Amazon Web
--   Services account ID is used by default.
--   
--   <a>$sel:name:UpdateConnection'</a>, <a>updateConnection_name</a> - The
--   name of the connection definition to update.
--   
--   <a>$sel:connectionInput:UpdateConnection'</a>,
--   <a>updateConnection_connectionInput</a> - A <tt>ConnectionInput</tt>
--   object that redefines the connection in question.
newUpdateConnection :: Text -> ConnectionInput -> UpdateConnection

-- | The ID of the Data Catalog in which the connection resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
updateConnection_catalogId :: Lens' UpdateConnection (Maybe Text)

-- | The name of the connection definition to update.
updateConnection_name :: Lens' UpdateConnection Text

-- | A <tt>ConnectionInput</tt> object that redefines the connection in
--   question.
updateConnection_connectionInput :: Lens' UpdateConnection ConnectionInput

-- | <i>See:</i> <a>newUpdateConnectionResponse</a> smart constructor.
data UpdateConnectionResponse
UpdateConnectionResponse' :: Int -> UpdateConnectionResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateConnectionResponse'] :: UpdateConnectionResponse -> Int

-- | Create a value of <a>UpdateConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateConnectionResponse'</a>,
--   <a>updateConnectionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateConnectionResponse :: Int -> UpdateConnectionResponse

-- | The response's http status code.
updateConnectionResponse_httpStatus :: Lens' UpdateConnectionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.UpdateConnection.UpdateConnection
instance GHC.Show.Show Network.AWS.Glue.UpdateConnection.UpdateConnection
instance GHC.Read.Read Network.AWS.Glue.UpdateConnection.UpdateConnection
instance GHC.Classes.Eq Network.AWS.Glue.UpdateConnection.UpdateConnection
instance GHC.Generics.Generic Network.AWS.Glue.UpdateConnection.UpdateConnectionResponse
instance GHC.Show.Show Network.AWS.Glue.UpdateConnection.UpdateConnectionResponse
instance GHC.Read.Read Network.AWS.Glue.UpdateConnection.UpdateConnectionResponse
instance GHC.Classes.Eq Network.AWS.Glue.UpdateConnection.UpdateConnectionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.UpdateConnection.UpdateConnection
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateConnection.UpdateConnectionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.UpdateConnection.UpdateConnection
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateConnection.UpdateConnection
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.UpdateConnection.UpdateConnection
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.UpdateConnection.UpdateConnection
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.UpdateConnection.UpdateConnection
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.UpdateConnection.UpdateConnection


-- | Updates a crawler. If a crawler is running, you must stop it using
--   <tt>StopCrawler</tt> before updating it.
module Network.AWS.Glue.UpdateCrawler

-- | <i>See:</i> <a>newUpdateCrawler</a> smart constructor.
data UpdateCrawler
UpdateCrawler' :: Maybe SchemaChangePolicy -> Maybe Text -> Maybe RecrawlPolicy -> Maybe [Text] -> Maybe Text -> Maybe CrawlerTargets -> Maybe Text -> Maybe Text -> Maybe LineageConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> UpdateCrawler

-- | The policy for the crawler's update and deletion behavior.
[$sel:schemaChangePolicy:UpdateCrawler'] :: UpdateCrawler -> Maybe SchemaChangePolicy

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
[$sel:schedule:UpdateCrawler'] :: UpdateCrawler -> Maybe Text

-- | A policy that specifies whether to crawl the entire dataset again, or
--   to crawl only folders that were added since the last crawler run.
[$sel:recrawlPolicy:UpdateCrawler'] :: UpdateCrawler -> Maybe RecrawlPolicy

-- | A list of custom classifiers that the user has registered. By default,
--   all built-in classifiers are included in a crawl, but these custom
--   classifiers always override the default classifiers for a given
--   classification.
[$sel:classifiers:UpdateCrawler'] :: UpdateCrawler -> Maybe [Text]

-- | The IAM role or Amazon Resource Name (ARN) of an IAM role that is used
--   by the new crawler to access customer resources.
[$sel:role':UpdateCrawler'] :: UpdateCrawler -> Maybe Text

-- | A list of targets to crawl.
[$sel:targets:UpdateCrawler'] :: UpdateCrawler -> Maybe CrawlerTargets

-- | The Glue database where results are stored, such as:
--   <tt>arn:aws:daylight:us-east-1::database/sometable/*</tt>.
[$sel:databaseName:UpdateCrawler'] :: UpdateCrawler -> Maybe Text

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used by
--   this crawler.
[$sel:crawlerSecurityConfiguration:UpdateCrawler'] :: UpdateCrawler -> Maybe Text

-- | Specifies data lineage configuration settings for the crawler.
[$sel:lineageConfiguration:UpdateCrawler'] :: UpdateCrawler -> Maybe LineageConfiguration

-- | Crawler configuration information. This versioned JSON string allows
--   users to specify aspects of a crawler's behavior. For more
--   information, see <a>Configuring a Crawler</a>.
[$sel:configuration:UpdateCrawler'] :: UpdateCrawler -> Maybe Text

-- | The table prefix used for catalog tables that are created.
[$sel:tablePrefix:UpdateCrawler'] :: UpdateCrawler -> Maybe Text

-- | A description of the new crawler.
[$sel:description:UpdateCrawler'] :: UpdateCrawler -> Maybe Text

-- | Name of the new crawler.
[$sel:name:UpdateCrawler'] :: UpdateCrawler -> Text

-- | Create a value of <a>UpdateCrawler</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaChangePolicy:UpdateCrawler'</a>,
--   <a>updateCrawler_schemaChangePolicy</a> - The policy for the crawler's
--   update and deletion behavior.
--   
--   <a>$sel:schedule:UpdateCrawler'</a>, <a>updateCrawler_schedule</a> - A
--   <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
--   
--   <a>$sel:recrawlPolicy:UpdateCrawler'</a>,
--   <a>updateCrawler_recrawlPolicy</a> - A policy that specifies whether
--   to crawl the entire dataset again, or to crawl only folders that were
--   added since the last crawler run.
--   
--   <a>$sel:classifiers:UpdateCrawler'</a>,
--   <a>updateCrawler_classifiers</a> - A list of custom classifiers that
--   the user has registered. By default, all built-in classifiers are
--   included in a crawl, but these custom classifiers always override the
--   default classifiers for a given classification.
--   
--   <a>$sel:role':UpdateCrawler'</a>, <a>updateCrawler_role</a> - The IAM
--   role or Amazon Resource Name (ARN) of an IAM role that is used by the
--   new crawler to access customer resources.
--   
--   <a>$sel:targets:UpdateCrawler'</a>, <a>updateCrawler_targets</a> - A
--   list of targets to crawl.
--   
--   <a>$sel:databaseName:UpdateCrawler'</a>,
--   <a>updateCrawler_databaseName</a> - The Glue database where results
--   are stored, such as:
--   <tt>arn:aws:daylight:us-east-1::database/sometable/*</tt>.
--   
--   <a>$sel:crawlerSecurityConfiguration:UpdateCrawler'</a>,
--   <a>updateCrawler_crawlerSecurityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used by this crawler.
--   
--   <a>$sel:lineageConfiguration:UpdateCrawler'</a>,
--   <a>updateCrawler_lineageConfiguration</a> - Specifies data lineage
--   configuration settings for the crawler.
--   
--   <a>$sel:configuration:UpdateCrawler'</a>,
--   <a>updateCrawler_configuration</a> - Crawler configuration
--   information. This versioned JSON string allows users to specify
--   aspects of a crawler's behavior. For more information, see
--   <a>Configuring a Crawler</a>.
--   
--   <a>$sel:tablePrefix:UpdateCrawler'</a>,
--   <a>updateCrawler_tablePrefix</a> - The table prefix used for catalog
--   tables that are created.
--   
--   <a>$sel:description:UpdateCrawler'</a>,
--   <a>updateCrawler_description</a> - A description of the new crawler.
--   
--   <a>$sel:name:UpdateCrawler'</a>, <a>updateCrawler_name</a> - Name of
--   the new crawler.
newUpdateCrawler :: Text -> UpdateCrawler

-- | The policy for the crawler's update and deletion behavior.
updateCrawler_schemaChangePolicy :: Lens' UpdateCrawler (Maybe SchemaChangePolicy)

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
updateCrawler_schedule :: Lens' UpdateCrawler (Maybe Text)

-- | A policy that specifies whether to crawl the entire dataset again, or
--   to crawl only folders that were added since the last crawler run.
updateCrawler_recrawlPolicy :: Lens' UpdateCrawler (Maybe RecrawlPolicy)

-- | A list of custom classifiers that the user has registered. By default,
--   all built-in classifiers are included in a crawl, but these custom
--   classifiers always override the default classifiers for a given
--   classification.
updateCrawler_classifiers :: Lens' UpdateCrawler (Maybe [Text])

-- | The IAM role or Amazon Resource Name (ARN) of an IAM role that is used
--   by the new crawler to access customer resources.
updateCrawler_role :: Lens' UpdateCrawler (Maybe Text)

-- | A list of targets to crawl.
updateCrawler_targets :: Lens' UpdateCrawler (Maybe CrawlerTargets)

-- | The Glue database where results are stored, such as:
--   <tt>arn:aws:daylight:us-east-1::database/sometable/*</tt>.
updateCrawler_databaseName :: Lens' UpdateCrawler (Maybe Text)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used by
--   this crawler.
updateCrawler_crawlerSecurityConfiguration :: Lens' UpdateCrawler (Maybe Text)

-- | Specifies data lineage configuration settings for the crawler.
updateCrawler_lineageConfiguration :: Lens' UpdateCrawler (Maybe LineageConfiguration)

-- | Crawler configuration information. This versioned JSON string allows
--   users to specify aspects of a crawler's behavior. For more
--   information, see <a>Configuring a Crawler</a>.
updateCrawler_configuration :: Lens' UpdateCrawler (Maybe Text)

-- | The table prefix used for catalog tables that are created.
updateCrawler_tablePrefix :: Lens' UpdateCrawler (Maybe Text)

-- | A description of the new crawler.
updateCrawler_description :: Lens' UpdateCrawler (Maybe Text)

-- | Name of the new crawler.
updateCrawler_name :: Lens' UpdateCrawler Text

-- | <i>See:</i> <a>newUpdateCrawlerResponse</a> smart constructor.
data UpdateCrawlerResponse
UpdateCrawlerResponse' :: Int -> UpdateCrawlerResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateCrawlerResponse'] :: UpdateCrawlerResponse -> Int

-- | Create a value of <a>UpdateCrawlerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateCrawlerResponse'</a>,
--   <a>updateCrawlerResponse_httpStatus</a> - The response's http status
--   code.
newUpdateCrawlerResponse :: Int -> UpdateCrawlerResponse

-- | The response's http status code.
updateCrawlerResponse_httpStatus :: Lens' UpdateCrawlerResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.UpdateCrawler.UpdateCrawler
instance GHC.Show.Show Network.AWS.Glue.UpdateCrawler.UpdateCrawler
instance GHC.Read.Read Network.AWS.Glue.UpdateCrawler.UpdateCrawler
instance GHC.Classes.Eq Network.AWS.Glue.UpdateCrawler.UpdateCrawler
instance GHC.Generics.Generic Network.AWS.Glue.UpdateCrawler.UpdateCrawlerResponse
instance GHC.Show.Show Network.AWS.Glue.UpdateCrawler.UpdateCrawlerResponse
instance GHC.Read.Read Network.AWS.Glue.UpdateCrawler.UpdateCrawlerResponse
instance GHC.Classes.Eq Network.AWS.Glue.UpdateCrawler.UpdateCrawlerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.UpdateCrawler.UpdateCrawler
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateCrawler.UpdateCrawlerResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.UpdateCrawler.UpdateCrawler
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateCrawler.UpdateCrawler
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.UpdateCrawler.UpdateCrawler
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.UpdateCrawler.UpdateCrawler
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.UpdateCrawler.UpdateCrawler
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.UpdateCrawler.UpdateCrawler


-- | Updates the schedule of a crawler using a <tt>cron</tt> expression.
module Network.AWS.Glue.UpdateCrawlerSchedule

-- | <i>See:</i> <a>newUpdateCrawlerSchedule</a> smart constructor.
data UpdateCrawlerSchedule
UpdateCrawlerSchedule' :: Maybe Text -> Text -> UpdateCrawlerSchedule

-- | The updated <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
[$sel:schedule:UpdateCrawlerSchedule'] :: UpdateCrawlerSchedule -> Maybe Text

-- | The name of the crawler whose schedule to update.
[$sel:crawlerName:UpdateCrawlerSchedule'] :: UpdateCrawlerSchedule -> Text

-- | Create a value of <a>UpdateCrawlerSchedule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schedule:UpdateCrawlerSchedule'</a>,
--   <a>updateCrawlerSchedule_schedule</a> - The updated <tt>cron</tt>
--   expression used to specify the schedule (see <a>Time-Based Schedules
--   for Jobs and Crawlers</a>. For example, to run something every day at
--   12:15 UTC, you would specify: <tt>cron(15 12 * * ? *)</tt>.
--   
--   <a>$sel:crawlerName:UpdateCrawlerSchedule'</a>,
--   <a>updateCrawlerSchedule_crawlerName</a> - The name of the crawler
--   whose schedule to update.
newUpdateCrawlerSchedule :: Text -> UpdateCrawlerSchedule

-- | The updated <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
updateCrawlerSchedule_schedule :: Lens' UpdateCrawlerSchedule (Maybe Text)

-- | The name of the crawler whose schedule to update.
updateCrawlerSchedule_crawlerName :: Lens' UpdateCrawlerSchedule Text

-- | <i>See:</i> <a>newUpdateCrawlerScheduleResponse</a> smart constructor.
data UpdateCrawlerScheduleResponse
UpdateCrawlerScheduleResponse' :: Int -> UpdateCrawlerScheduleResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateCrawlerScheduleResponse'] :: UpdateCrawlerScheduleResponse -> Int

-- | Create a value of <a>UpdateCrawlerScheduleResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateCrawlerScheduleResponse'</a>,
--   <a>updateCrawlerScheduleResponse_httpStatus</a> - The response's http
--   status code.
newUpdateCrawlerScheduleResponse :: Int -> UpdateCrawlerScheduleResponse

-- | The response's http status code.
updateCrawlerScheduleResponse_httpStatus :: Lens' UpdateCrawlerScheduleResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.UpdateCrawlerSchedule.UpdateCrawlerSchedule
instance GHC.Show.Show Network.AWS.Glue.UpdateCrawlerSchedule.UpdateCrawlerSchedule
instance GHC.Read.Read Network.AWS.Glue.UpdateCrawlerSchedule.UpdateCrawlerSchedule
instance GHC.Classes.Eq Network.AWS.Glue.UpdateCrawlerSchedule.UpdateCrawlerSchedule
instance GHC.Generics.Generic Network.AWS.Glue.UpdateCrawlerSchedule.UpdateCrawlerScheduleResponse
instance GHC.Show.Show Network.AWS.Glue.UpdateCrawlerSchedule.UpdateCrawlerScheduleResponse
instance GHC.Read.Read Network.AWS.Glue.UpdateCrawlerSchedule.UpdateCrawlerScheduleResponse
instance GHC.Classes.Eq Network.AWS.Glue.UpdateCrawlerSchedule.UpdateCrawlerScheduleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.UpdateCrawlerSchedule.UpdateCrawlerSchedule
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateCrawlerSchedule.UpdateCrawlerScheduleResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.UpdateCrawlerSchedule.UpdateCrawlerSchedule
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateCrawlerSchedule.UpdateCrawlerSchedule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.UpdateCrawlerSchedule.UpdateCrawlerSchedule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.UpdateCrawlerSchedule.UpdateCrawlerSchedule
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.UpdateCrawlerSchedule.UpdateCrawlerSchedule
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.UpdateCrawlerSchedule.UpdateCrawlerSchedule


-- | Updates an existing database definition in a Data Catalog.
module Network.AWS.Glue.UpdateDatabase

-- | <i>See:</i> <a>newUpdateDatabase</a> smart constructor.
data UpdateDatabase
UpdateDatabase' :: Maybe Text -> Text -> DatabaseInput -> UpdateDatabase

-- | The ID of the Data Catalog in which the metadata database resides. If
--   none is provided, the Amazon Web Services account ID is used by
--   default.
[$sel:catalogId:UpdateDatabase'] :: UpdateDatabase -> Maybe Text

-- | The name of the database to update in the catalog. For Hive
--   compatibility, this is folded to lowercase.
[$sel:name:UpdateDatabase'] :: UpdateDatabase -> Text

-- | A <tt>DatabaseInput</tt> object specifying the new definition of the
--   metadata database in the catalog.
[$sel:databaseInput:UpdateDatabase'] :: UpdateDatabase -> DatabaseInput

-- | Create a value of <a>UpdateDatabase</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:UpdateDatabase'</a>, <a>updateDatabase_catalogId</a>
--   - The ID of the Data Catalog in which the metadata database resides.
--   If none is provided, the Amazon Web Services account ID is used by
--   default.
--   
--   <a>$sel:name:UpdateDatabase'</a>, <a>updateDatabase_name</a> - The
--   name of the database to update in the catalog. For Hive compatibility,
--   this is folded to lowercase.
--   
--   <a>$sel:databaseInput:UpdateDatabase'</a>,
--   <a>updateDatabase_databaseInput</a> - A <tt>DatabaseInput</tt> object
--   specifying the new definition of the metadata database in the catalog.
newUpdateDatabase :: Text -> DatabaseInput -> UpdateDatabase

-- | The ID of the Data Catalog in which the metadata database resides. If
--   none is provided, the Amazon Web Services account ID is used by
--   default.
updateDatabase_catalogId :: Lens' UpdateDatabase (Maybe Text)

-- | The name of the database to update in the catalog. For Hive
--   compatibility, this is folded to lowercase.
updateDatabase_name :: Lens' UpdateDatabase Text

-- | A <tt>DatabaseInput</tt> object specifying the new definition of the
--   metadata database in the catalog.
updateDatabase_databaseInput :: Lens' UpdateDatabase DatabaseInput

-- | <i>See:</i> <a>newUpdateDatabaseResponse</a> smart constructor.
data UpdateDatabaseResponse
UpdateDatabaseResponse' :: Int -> UpdateDatabaseResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateDatabaseResponse'] :: UpdateDatabaseResponse -> Int

-- | Create a value of <a>UpdateDatabaseResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateDatabaseResponse'</a>,
--   <a>updateDatabaseResponse_httpStatus</a> - The response's http status
--   code.
newUpdateDatabaseResponse :: Int -> UpdateDatabaseResponse

-- | The response's http status code.
updateDatabaseResponse_httpStatus :: Lens' UpdateDatabaseResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.UpdateDatabase.UpdateDatabase
instance GHC.Show.Show Network.AWS.Glue.UpdateDatabase.UpdateDatabase
instance GHC.Read.Read Network.AWS.Glue.UpdateDatabase.UpdateDatabase
instance GHC.Classes.Eq Network.AWS.Glue.UpdateDatabase.UpdateDatabase
instance GHC.Generics.Generic Network.AWS.Glue.UpdateDatabase.UpdateDatabaseResponse
instance GHC.Show.Show Network.AWS.Glue.UpdateDatabase.UpdateDatabaseResponse
instance GHC.Read.Read Network.AWS.Glue.UpdateDatabase.UpdateDatabaseResponse
instance GHC.Classes.Eq Network.AWS.Glue.UpdateDatabase.UpdateDatabaseResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.UpdateDatabase.UpdateDatabase
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateDatabase.UpdateDatabaseResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.UpdateDatabase.UpdateDatabase
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateDatabase.UpdateDatabase
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.UpdateDatabase.UpdateDatabase
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.UpdateDatabase.UpdateDatabase
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.UpdateDatabase.UpdateDatabase
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.UpdateDatabase.UpdateDatabase


-- | Updates a specified development endpoint.
module Network.AWS.Glue.UpdateDevEndpoint

-- | <i>See:</i> <a>newUpdateDevEndpoint</a> smart constructor.
data UpdateDevEndpoint
UpdateDevEndpoint' :: Maybe [Text] -> Maybe DevEndpointCustomLibraries -> Maybe Text -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Maybe (HashMap Text Text) -> Text -> UpdateDevEndpoint

-- | The list of public keys for the <tt>DevEndpoint</tt> to use.
[$sel:addPublicKeys:UpdateDevEndpoint'] :: UpdateDevEndpoint -> Maybe [Text]

-- | Custom Python or Java libraries to be loaded in the
--   <tt>DevEndpoint</tt>.
[$sel:customLibraries:UpdateDevEndpoint'] :: UpdateDevEndpoint -> Maybe DevEndpointCustomLibraries

-- | The public key for the <tt>DevEndpoint</tt> to use.
[$sel:publicKey:UpdateDevEndpoint'] :: UpdateDevEndpoint -> Maybe Text

-- | The list of argument keys to be deleted from the map of arguments used
--   to configure the <tt>DevEndpoint</tt>.
[$sel:deleteArguments:UpdateDevEndpoint'] :: UpdateDevEndpoint -> Maybe [Text]

-- | The list of public keys to be deleted from the <tt>DevEndpoint</tt>.
[$sel:deletePublicKeys:UpdateDevEndpoint'] :: UpdateDevEndpoint -> Maybe [Text]

-- | <tt>True</tt> if the list of custom libraries to be loaded in the
--   development endpoint needs to be updated, or <tt>False</tt> if
--   otherwise.
[$sel:updateEtlLibraries:UpdateDevEndpoint'] :: UpdateDevEndpoint -> Maybe Bool

-- | The map of arguments to add the map of arguments used to configure the
--   <tt>DevEndpoint</tt>.
--   
--   Valid arguments are:
--   
--   <ul>
--   <li><pre>"--enable-glue-datacatalog": ""</pre></li>
--   </ul>
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
[$sel:addArguments:UpdateDevEndpoint'] :: UpdateDevEndpoint -> Maybe (HashMap Text Text)

-- | The name of the <tt>DevEndpoint</tt> to be updated.
[$sel:endpointName:UpdateDevEndpoint'] :: UpdateDevEndpoint -> Text

-- | Create a value of <a>UpdateDevEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addPublicKeys:UpdateDevEndpoint'</a>,
--   <a>updateDevEndpoint_addPublicKeys</a> - The list of public keys for
--   the <tt>DevEndpoint</tt> to use.
--   
--   <a>$sel:customLibraries:UpdateDevEndpoint'</a>,
--   <a>updateDevEndpoint_customLibraries</a> - Custom Python or Java
--   libraries to be loaded in the <tt>DevEndpoint</tt>.
--   
--   <a>$sel:publicKey:UpdateDevEndpoint'</a>,
--   <a>updateDevEndpoint_publicKey</a> - The public key for the
--   <tt>DevEndpoint</tt> to use.
--   
--   <a>$sel:deleteArguments:UpdateDevEndpoint'</a>,
--   <a>updateDevEndpoint_deleteArguments</a> - The list of argument keys
--   to be deleted from the map of arguments used to configure the
--   <tt>DevEndpoint</tt>.
--   
--   <a>$sel:deletePublicKeys:UpdateDevEndpoint'</a>,
--   <a>updateDevEndpoint_deletePublicKeys</a> - The list of public keys to
--   be deleted from the <tt>DevEndpoint</tt>.
--   
--   <a>$sel:updateEtlLibraries:UpdateDevEndpoint'</a>,
--   <a>updateDevEndpoint_updateEtlLibraries</a> - <tt>True</tt> if the
--   list of custom libraries to be loaded in the development endpoint
--   needs to be updated, or <tt>False</tt> if otherwise.
--   
--   <a>$sel:addArguments:UpdateDevEndpoint'</a>,
--   <a>updateDevEndpoint_addArguments</a> - The map of arguments to add
--   the map of arguments used to configure the <tt>DevEndpoint</tt>.
--   
--   Valid arguments are:
--   
--   <ul>
--   <li><pre>"--enable-glue-datacatalog": ""</pre></li>
--   </ul>
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
--   
--   <a>$sel:endpointName:UpdateDevEndpoint'</a>,
--   <a>updateDevEndpoint_endpointName</a> - The name of the
--   <tt>DevEndpoint</tt> to be updated.
newUpdateDevEndpoint :: Text -> UpdateDevEndpoint

-- | The list of public keys for the <tt>DevEndpoint</tt> to use.
updateDevEndpoint_addPublicKeys :: Lens' UpdateDevEndpoint (Maybe [Text])

-- | Custom Python or Java libraries to be loaded in the
--   <tt>DevEndpoint</tt>.
updateDevEndpoint_customLibraries :: Lens' UpdateDevEndpoint (Maybe DevEndpointCustomLibraries)

-- | The public key for the <tt>DevEndpoint</tt> to use.
updateDevEndpoint_publicKey :: Lens' UpdateDevEndpoint (Maybe Text)

-- | The list of argument keys to be deleted from the map of arguments used
--   to configure the <tt>DevEndpoint</tt>.
updateDevEndpoint_deleteArguments :: Lens' UpdateDevEndpoint (Maybe [Text])

-- | The list of public keys to be deleted from the <tt>DevEndpoint</tt>.
updateDevEndpoint_deletePublicKeys :: Lens' UpdateDevEndpoint (Maybe [Text])

-- | <tt>True</tt> if the list of custom libraries to be loaded in the
--   development endpoint needs to be updated, or <tt>False</tt> if
--   otherwise.
updateDevEndpoint_updateEtlLibraries :: Lens' UpdateDevEndpoint (Maybe Bool)

-- | The map of arguments to add the map of arguments used to configure the
--   <tt>DevEndpoint</tt>.
--   
--   Valid arguments are:
--   
--   <ul>
--   <li><pre>"--enable-glue-datacatalog": ""</pre></li>
--   </ul>
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
updateDevEndpoint_addArguments :: Lens' UpdateDevEndpoint (Maybe (HashMap Text Text))

-- | The name of the <tt>DevEndpoint</tt> to be updated.
updateDevEndpoint_endpointName :: Lens' UpdateDevEndpoint Text

-- | <i>See:</i> <a>newUpdateDevEndpointResponse</a> smart constructor.
data UpdateDevEndpointResponse
UpdateDevEndpointResponse' :: Int -> UpdateDevEndpointResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateDevEndpointResponse'] :: UpdateDevEndpointResponse -> Int

-- | Create a value of <a>UpdateDevEndpointResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateDevEndpointResponse'</a>,
--   <a>updateDevEndpointResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDevEndpointResponse :: Int -> UpdateDevEndpointResponse

-- | The response's http status code.
updateDevEndpointResponse_httpStatus :: Lens' UpdateDevEndpointResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.UpdateDevEndpoint.UpdateDevEndpoint
instance GHC.Show.Show Network.AWS.Glue.UpdateDevEndpoint.UpdateDevEndpoint
instance GHC.Read.Read Network.AWS.Glue.UpdateDevEndpoint.UpdateDevEndpoint
instance GHC.Classes.Eq Network.AWS.Glue.UpdateDevEndpoint.UpdateDevEndpoint
instance GHC.Generics.Generic Network.AWS.Glue.UpdateDevEndpoint.UpdateDevEndpointResponse
instance GHC.Show.Show Network.AWS.Glue.UpdateDevEndpoint.UpdateDevEndpointResponse
instance GHC.Read.Read Network.AWS.Glue.UpdateDevEndpoint.UpdateDevEndpointResponse
instance GHC.Classes.Eq Network.AWS.Glue.UpdateDevEndpoint.UpdateDevEndpointResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.UpdateDevEndpoint.UpdateDevEndpoint
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateDevEndpoint.UpdateDevEndpointResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.UpdateDevEndpoint.UpdateDevEndpoint
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateDevEndpoint.UpdateDevEndpoint
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.UpdateDevEndpoint.UpdateDevEndpoint
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.UpdateDevEndpoint.UpdateDevEndpoint
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.UpdateDevEndpoint.UpdateDevEndpoint
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.UpdateDevEndpoint.UpdateDevEndpoint


-- | Updates an existing job definition.
module Network.AWS.Glue.UpdateJob

-- | <i>See:</i> <a>newUpdateJob</a> smart constructor.
data UpdateJob
UpdateJob' :: Text -> JobUpdate -> UpdateJob

-- | The name of the job definition to update.
[$sel:jobName:UpdateJob'] :: UpdateJob -> Text

-- | Specifies the values with which to update the job definition.
[$sel:jobUpdate:UpdateJob'] :: UpdateJob -> JobUpdate

-- | Create a value of <a>UpdateJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:UpdateJob'</a>, <a>updateJob_jobName</a> - The name of
--   the job definition to update.
--   
--   <a>$sel:jobUpdate:UpdateJob'</a>, <a>updateJob_jobUpdate</a> -
--   Specifies the values with which to update the job definition.
newUpdateJob :: Text -> JobUpdate -> UpdateJob

-- | The name of the job definition to update.
updateJob_jobName :: Lens' UpdateJob Text

-- | Specifies the values with which to update the job definition.
updateJob_jobUpdate :: Lens' UpdateJob JobUpdate

-- | <i>See:</i> <a>newUpdateJobResponse</a> smart constructor.
data UpdateJobResponse
UpdateJobResponse' :: Maybe Text -> Int -> UpdateJobResponse

-- | Returns the name of the updated job definition.
[$sel:jobName:UpdateJobResponse'] :: UpdateJobResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateJobResponse'] :: UpdateJobResponse -> Int

-- | Create a value of <a>UpdateJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:UpdateJob'</a>, <a>updateJobResponse_jobName</a> -
--   Returns the name of the updated job definition.
--   
--   <a>$sel:httpStatus:UpdateJobResponse'</a>,
--   <a>updateJobResponse_httpStatus</a> - The response's http status code.
newUpdateJobResponse :: Int -> UpdateJobResponse

-- | Returns the name of the updated job definition.
updateJobResponse_jobName :: Lens' UpdateJobResponse (Maybe Text)

-- | The response's http status code.
updateJobResponse_httpStatus :: Lens' UpdateJobResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.UpdateJob.UpdateJob
instance GHC.Show.Show Network.AWS.Glue.UpdateJob.UpdateJob
instance GHC.Read.Read Network.AWS.Glue.UpdateJob.UpdateJob
instance GHC.Classes.Eq Network.AWS.Glue.UpdateJob.UpdateJob
instance GHC.Generics.Generic Network.AWS.Glue.UpdateJob.UpdateJobResponse
instance GHC.Show.Show Network.AWS.Glue.UpdateJob.UpdateJobResponse
instance GHC.Read.Read Network.AWS.Glue.UpdateJob.UpdateJobResponse
instance GHC.Classes.Eq Network.AWS.Glue.UpdateJob.UpdateJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.UpdateJob.UpdateJob
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateJob.UpdateJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.UpdateJob.UpdateJob
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateJob.UpdateJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.UpdateJob.UpdateJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.UpdateJob.UpdateJob
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.UpdateJob.UpdateJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.UpdateJob.UpdateJob


-- | Updates an existing machine learning transform. Call this operation to
--   tune the algorithm parameters to achieve better results.
--   
--   After calling this operation, you can call the
--   <tt>StartMLEvaluationTaskRun</tt> operation to assess how well your
--   new parameters achieved your goals (such as improving the quality of
--   your machine learning transform, or making it more cost-effective).
module Network.AWS.Glue.UpdateMLTransform

-- | <i>See:</i> <a>newUpdateMLTransform</a> smart constructor.
data UpdateMLTransform
UpdateMLTransform' :: Maybe Int -> Maybe WorkerType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TransformParameters -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe Text -> Text -> UpdateMLTransform

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when this task runs.
[$sel:numberOfWorkers:UpdateMLTransform'] :: UpdateMLTransform -> Maybe Int

-- | The type of predefined worker that is allocated when this task runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
[$sel:workerType:UpdateMLTransform'] :: UpdateMLTransform -> Maybe WorkerType

-- | This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
[$sel:glueVersion:UpdateMLTransform'] :: UpdateMLTransform -> Maybe Text

-- | The name or Amazon Resource Name (ARN) of the IAM role with the
--   required permissions.
[$sel:role':UpdateMLTransform'] :: UpdateMLTransform -> Maybe Text

-- | The unique name that you gave the transform when you created it.
[$sel:name:UpdateMLTransform'] :: UpdateMLTransform -> Maybe Text

-- | The configuration parameters that are specific to the transform type
--   (algorithm) used. Conditionally dependent on the transform type.
[$sel:parameters:UpdateMLTransform'] :: UpdateMLTransform -> Maybe TransformParameters

-- | The maximum number of times to retry a task for this transform after a
--   task run fails.
[$sel:maxRetries:UpdateMLTransform'] :: UpdateMLTransform -> Maybe Int

-- | The number of Glue data processing units (DPUs) that are allocated to
--   task runs for this transform. You can allocate from 2 to 100 DPUs; the
--   default is 10. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
[$sel:maxCapacity:UpdateMLTransform'] :: UpdateMLTransform -> Maybe Double

-- | The timeout for a task run for this transform in minutes. This is the
--   maximum time that a task run for this transform can consume resources
--   before it is terminated and enters <tt>TIMEOUT</tt> status. The
--   default is 2,880 minutes (48 hours).
[$sel:timeout:UpdateMLTransform'] :: UpdateMLTransform -> Maybe Natural

-- | A description of the transform. The default is an empty string.
[$sel:description:UpdateMLTransform'] :: UpdateMLTransform -> Maybe Text

-- | A unique identifier that was generated when the transform was created.
[$sel:transformId:UpdateMLTransform'] :: UpdateMLTransform -> Text

-- | Create a value of <a>UpdateMLTransform</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfWorkers:UpdateMLTransform'</a>,
--   <a>updateMLTransform_numberOfWorkers</a> - The number of workers of a
--   defined <tt>workerType</tt> that are allocated when this task runs.
--   
--   <a>$sel:workerType:UpdateMLTransform'</a>,
--   <a>updateMLTransform_workerType</a> - The type of predefined worker
--   that is allocated when this task runs. Accepts a value of Standard,
--   G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <a>$sel:glueVersion:UpdateMLTransform'</a>,
--   <a>updateMLTransform_glueVersion</a> - This value determines which
--   version of Glue this machine learning transform is compatible with.
--   Glue 1.0 is recommended for most customers. If the value is not set,
--   the Glue compatibility defaults to Glue 0.9. For more information, see
--   <a>Glue Versions</a> in the developer guide.
--   
--   <a>$sel:role':UpdateMLTransform'</a>, <a>updateMLTransform_role</a> -
--   The name or Amazon Resource Name (ARN) of the IAM role with the
--   required permissions.
--   
--   <a>$sel:name:UpdateMLTransform'</a>, <a>updateMLTransform_name</a> -
--   The unique name that you gave the transform when you created it.
--   
--   <a>$sel:parameters:UpdateMLTransform'</a>,
--   <a>updateMLTransform_parameters</a> - The configuration parameters
--   that are specific to the transform type (algorithm) used.
--   Conditionally dependent on the transform type.
--   
--   <a>$sel:maxRetries:UpdateMLTransform'</a>,
--   <a>updateMLTransform_maxRetries</a> - The maximum number of times to
--   retry a task for this transform after a task run fails.
--   
--   <a>$sel:maxCapacity:UpdateMLTransform'</a>,
--   <a>updateMLTransform_maxCapacity</a> - The number of Glue data
--   processing units (DPUs) that are allocated to task runs for this
--   transform. You can allocate from 2 to 100 DPUs; the default is 10. A
--   DPU is a relative measure of processing power that consists of 4 vCPUs
--   of compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
--   
--   <a>$sel:timeout:UpdateMLTransform'</a>,
--   <a>updateMLTransform_timeout</a> - The timeout for a task run for this
--   transform in minutes. This is the maximum time that a task run for
--   this transform can consume resources before it is terminated and
--   enters <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48
--   hours).
--   
--   <a>$sel:description:UpdateMLTransform'</a>,
--   <a>updateMLTransform_description</a> - A description of the transform.
--   The default is an empty string.
--   
--   <a>$sel:transformId:UpdateMLTransform'</a>,
--   <a>updateMLTransform_transformId</a> - A unique identifier that was
--   generated when the transform was created.
newUpdateMLTransform :: Text -> UpdateMLTransform

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when this task runs.
updateMLTransform_numberOfWorkers :: Lens' UpdateMLTransform (Maybe Int)

-- | The type of predefined worker that is allocated when this task runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
updateMLTransform_workerType :: Lens' UpdateMLTransform (Maybe WorkerType)

-- | This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
updateMLTransform_glueVersion :: Lens' UpdateMLTransform (Maybe Text)

-- | The name or Amazon Resource Name (ARN) of the IAM role with the
--   required permissions.
updateMLTransform_role :: Lens' UpdateMLTransform (Maybe Text)

-- | The unique name that you gave the transform when you created it.
updateMLTransform_name :: Lens' UpdateMLTransform (Maybe Text)

-- | The configuration parameters that are specific to the transform type
--   (algorithm) used. Conditionally dependent on the transform type.
updateMLTransform_parameters :: Lens' UpdateMLTransform (Maybe TransformParameters)

-- | The maximum number of times to retry a task for this transform after a
--   task run fails.
updateMLTransform_maxRetries :: Lens' UpdateMLTransform (Maybe Int)

-- | The number of Glue data processing units (DPUs) that are allocated to
--   task runs for this transform. You can allocate from 2 to 100 DPUs; the
--   default is 10. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
updateMLTransform_maxCapacity :: Lens' UpdateMLTransform (Maybe Double)

-- | The timeout for a task run for this transform in minutes. This is the
--   maximum time that a task run for this transform can consume resources
--   before it is terminated and enters <tt>TIMEOUT</tt> status. The
--   default is 2,880 minutes (48 hours).
updateMLTransform_timeout :: Lens' UpdateMLTransform (Maybe Natural)

-- | A description of the transform. The default is an empty string.
updateMLTransform_description :: Lens' UpdateMLTransform (Maybe Text)

-- | A unique identifier that was generated when the transform was created.
updateMLTransform_transformId :: Lens' UpdateMLTransform Text

-- | <i>See:</i> <a>newUpdateMLTransformResponse</a> smart constructor.
data UpdateMLTransformResponse
UpdateMLTransformResponse' :: Maybe Text -> Int -> UpdateMLTransformResponse

-- | The unique identifier for the transform that was updated.
[$sel:transformId:UpdateMLTransformResponse'] :: UpdateMLTransformResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateMLTransformResponse'] :: UpdateMLTransformResponse -> Int

-- | Create a value of <a>UpdateMLTransformResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transformId:UpdateMLTransform'</a>,
--   <a>updateMLTransformResponse_transformId</a> - The unique identifier
--   for the transform that was updated.
--   
--   <a>$sel:httpStatus:UpdateMLTransformResponse'</a>,
--   <a>updateMLTransformResponse_httpStatus</a> - The response's http
--   status code.
newUpdateMLTransformResponse :: Int -> UpdateMLTransformResponse

-- | The unique identifier for the transform that was updated.
updateMLTransformResponse_transformId :: Lens' UpdateMLTransformResponse (Maybe Text)

-- | The response's http status code.
updateMLTransformResponse_httpStatus :: Lens' UpdateMLTransformResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.UpdateMLTransform.UpdateMLTransform
instance GHC.Show.Show Network.AWS.Glue.UpdateMLTransform.UpdateMLTransform
instance GHC.Read.Read Network.AWS.Glue.UpdateMLTransform.UpdateMLTransform
instance GHC.Classes.Eq Network.AWS.Glue.UpdateMLTransform.UpdateMLTransform
instance GHC.Generics.Generic Network.AWS.Glue.UpdateMLTransform.UpdateMLTransformResponse
instance GHC.Show.Show Network.AWS.Glue.UpdateMLTransform.UpdateMLTransformResponse
instance GHC.Read.Read Network.AWS.Glue.UpdateMLTransform.UpdateMLTransformResponse
instance GHC.Classes.Eq Network.AWS.Glue.UpdateMLTransform.UpdateMLTransformResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.UpdateMLTransform.UpdateMLTransform
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateMLTransform.UpdateMLTransformResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.UpdateMLTransform.UpdateMLTransform
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateMLTransform.UpdateMLTransform
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.UpdateMLTransform.UpdateMLTransform
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.UpdateMLTransform.UpdateMLTransform
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.UpdateMLTransform.UpdateMLTransform
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.UpdateMLTransform.UpdateMLTransform


-- | Updates a partition.
module Network.AWS.Glue.UpdatePartition

-- | <i>See:</i> <a>newUpdatePartition</a> smart constructor.
data UpdatePartition
UpdatePartition' :: Maybe Text -> Text -> Text -> [Text] -> PartitionInput -> UpdatePartition

-- | The ID of the Data Catalog where the partition to be updated resides.
--   If none is provided, the Amazon Web Services account ID is used by
--   default.
[$sel:catalogId:UpdatePartition'] :: UpdatePartition -> Maybe Text

-- | The name of the catalog database in which the table in question
--   resides.
[$sel:databaseName:UpdatePartition'] :: UpdatePartition -> Text

-- | The name of the table in which the partition to be updated is located.
[$sel:tableName:UpdatePartition'] :: UpdatePartition -> Text

-- | List of partition key values that define the partition to update.
[$sel:partitionValueList:UpdatePartition'] :: UpdatePartition -> [Text]

-- | The new partition object to update the partition to.
--   
--   The <tt>Values</tt> property can't be changed. If you want to change
--   the partition key values for a partition, delete and recreate the
--   partition.
[$sel:partitionInput:UpdatePartition'] :: UpdatePartition -> PartitionInput

-- | Create a value of <a>UpdatePartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:UpdatePartition'</a>,
--   <a>updatePartition_catalogId</a> - The ID of the Data Catalog where
--   the partition to be updated resides. If none is provided, the Amazon
--   Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:UpdatePartition'</a>,
--   <a>updatePartition_databaseName</a> - The name of the catalog database
--   in which the table in question resides.
--   
--   <a>$sel:tableName:UpdatePartition'</a>,
--   <a>updatePartition_tableName</a> - The name of the table in which the
--   partition to be updated is located.
--   
--   <a>$sel:partitionValueList:UpdatePartition'</a>,
--   <a>updatePartition_partitionValueList</a> - List of partition key
--   values that define the partition to update.
--   
--   <a>$sel:partitionInput:UpdatePartition'</a>,
--   <a>updatePartition_partitionInput</a> - The new partition object to
--   update the partition to.
--   
--   The <tt>Values</tt> property can't be changed. If you want to change
--   the partition key values for a partition, delete and recreate the
--   partition.
newUpdatePartition :: Text -> Text -> PartitionInput -> UpdatePartition

-- | The ID of the Data Catalog where the partition to be updated resides.
--   If none is provided, the Amazon Web Services account ID is used by
--   default.
updatePartition_catalogId :: Lens' UpdatePartition (Maybe Text)

-- | The name of the catalog database in which the table in question
--   resides.
updatePartition_databaseName :: Lens' UpdatePartition Text

-- | The name of the table in which the partition to be updated is located.
updatePartition_tableName :: Lens' UpdatePartition Text

-- | List of partition key values that define the partition to update.
updatePartition_partitionValueList :: Lens' UpdatePartition [Text]

-- | The new partition object to update the partition to.
--   
--   The <tt>Values</tt> property can't be changed. If you want to change
--   the partition key values for a partition, delete and recreate the
--   partition.
updatePartition_partitionInput :: Lens' UpdatePartition PartitionInput

-- | <i>See:</i> <a>newUpdatePartitionResponse</a> smart constructor.
data UpdatePartitionResponse
UpdatePartitionResponse' :: Int -> UpdatePartitionResponse

-- | The response's http status code.
[$sel:httpStatus:UpdatePartitionResponse'] :: UpdatePartitionResponse -> Int

-- | Create a value of <a>UpdatePartitionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdatePartitionResponse'</a>,
--   <a>updatePartitionResponse_httpStatus</a> - The response's http status
--   code.
newUpdatePartitionResponse :: Int -> UpdatePartitionResponse

-- | The response's http status code.
updatePartitionResponse_httpStatus :: Lens' UpdatePartitionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.UpdatePartition.UpdatePartition
instance GHC.Show.Show Network.AWS.Glue.UpdatePartition.UpdatePartition
instance GHC.Read.Read Network.AWS.Glue.UpdatePartition.UpdatePartition
instance GHC.Classes.Eq Network.AWS.Glue.UpdatePartition.UpdatePartition
instance GHC.Generics.Generic Network.AWS.Glue.UpdatePartition.UpdatePartitionResponse
instance GHC.Show.Show Network.AWS.Glue.UpdatePartition.UpdatePartitionResponse
instance GHC.Read.Read Network.AWS.Glue.UpdatePartition.UpdatePartitionResponse
instance GHC.Classes.Eq Network.AWS.Glue.UpdatePartition.UpdatePartitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.UpdatePartition.UpdatePartition
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdatePartition.UpdatePartitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.UpdatePartition.UpdatePartition
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdatePartition.UpdatePartition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.UpdatePartition.UpdatePartition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.UpdatePartition.UpdatePartition
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.UpdatePartition.UpdatePartition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.UpdatePartition.UpdatePartition


-- | Updates an existing registry which is used to hold a collection of
--   schemas. The updated properties relate to the registry, and do not
--   modify any of the schemas within the registry.
module Network.AWS.Glue.UpdateRegistry

-- | <i>See:</i> <a>newUpdateRegistry</a> smart constructor.
data UpdateRegistry
UpdateRegistry' :: RegistryId -> Text -> UpdateRegistry

-- | This is a wrapper structure that may contain the registry name and
--   Amazon Resource Name (ARN).
[$sel:registryId:UpdateRegistry'] :: UpdateRegistry -> RegistryId

-- | A description of the registry. If description is not provided, this
--   field will not be updated.
[$sel:description:UpdateRegistry'] :: UpdateRegistry -> Text

-- | Create a value of <a>UpdateRegistry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryId:UpdateRegistry'</a>,
--   <a>updateRegistry_registryId</a> - This is a wrapper structure that
--   may contain the registry name and Amazon Resource Name (ARN).
--   
--   <a>$sel:description:UpdateRegistry'</a>,
--   <a>updateRegistry_description</a> - A description of the registry. If
--   description is not provided, this field will not be updated.
newUpdateRegistry :: RegistryId -> Text -> UpdateRegistry

-- | This is a wrapper structure that may contain the registry name and
--   Amazon Resource Name (ARN).
updateRegistry_registryId :: Lens' UpdateRegistry RegistryId

-- | A description of the registry. If description is not provided, this
--   field will not be updated.
updateRegistry_description :: Lens' UpdateRegistry Text

-- | <i>See:</i> <a>newUpdateRegistryResponse</a> smart constructor.
data UpdateRegistryResponse
UpdateRegistryResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateRegistryResponse

-- | The name of the updated registry.
[$sel:registryName:UpdateRegistryResponse'] :: UpdateRegistryResponse -> Maybe Text

-- | The Amazon Resource name (ARN) of the updated registry.
[$sel:registryArn:UpdateRegistryResponse'] :: UpdateRegistryResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateRegistryResponse'] :: UpdateRegistryResponse -> Int

-- | Create a value of <a>UpdateRegistryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:UpdateRegistryResponse'</a>,
--   <a>updateRegistryResponse_registryName</a> - The name of the updated
--   registry.
--   
--   <a>$sel:registryArn:UpdateRegistryResponse'</a>,
--   <a>updateRegistryResponse_registryArn</a> - The Amazon Resource name
--   (ARN) of the updated registry.
--   
--   <a>$sel:httpStatus:UpdateRegistryResponse'</a>,
--   <a>updateRegistryResponse_httpStatus</a> - The response's http status
--   code.
newUpdateRegistryResponse :: Int -> UpdateRegistryResponse

-- | The name of the updated registry.
updateRegistryResponse_registryName :: Lens' UpdateRegistryResponse (Maybe Text)

-- | The Amazon Resource name (ARN) of the updated registry.
updateRegistryResponse_registryArn :: Lens' UpdateRegistryResponse (Maybe Text)

-- | The response's http status code.
updateRegistryResponse_httpStatus :: Lens' UpdateRegistryResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.UpdateRegistry.UpdateRegistry
instance GHC.Show.Show Network.AWS.Glue.UpdateRegistry.UpdateRegistry
instance GHC.Read.Read Network.AWS.Glue.UpdateRegistry.UpdateRegistry
instance GHC.Classes.Eq Network.AWS.Glue.UpdateRegistry.UpdateRegistry
instance GHC.Generics.Generic Network.AWS.Glue.UpdateRegistry.UpdateRegistryResponse
instance GHC.Show.Show Network.AWS.Glue.UpdateRegistry.UpdateRegistryResponse
instance GHC.Read.Read Network.AWS.Glue.UpdateRegistry.UpdateRegistryResponse
instance GHC.Classes.Eq Network.AWS.Glue.UpdateRegistry.UpdateRegistryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.UpdateRegistry.UpdateRegistry
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateRegistry.UpdateRegistryResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.UpdateRegistry.UpdateRegistry
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateRegistry.UpdateRegistry
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.UpdateRegistry.UpdateRegistry
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.UpdateRegistry.UpdateRegistry
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.UpdateRegistry.UpdateRegistry
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.UpdateRegistry.UpdateRegistry


-- | Updates the description, compatibility setting, or version checkpoint
--   for a schema set.
--   
--   For updating the compatibility setting, the call will not validate
--   compatibility for the entire set of schema versions with the new
--   compatibility setting. If the value for <tt>Compatibility</tt> is
--   provided, the <tt>VersionNumber</tt> (a checkpoint) is also required.
--   The API will validate the checkpoint version number for consistency.
--   
--   If the value for the <tt>VersionNumber</tt> (checkpoint) is provided,
--   <tt>Compatibility</tt> is optional and this can be used to set/reset a
--   checkpoint for the schema.
--   
--   This update will happen only if the schema is in the AVAILABLE state.
module Network.AWS.Glue.UpdateSchema

-- | <i>See:</i> <a>newUpdateSchema</a> smart constructor.
data UpdateSchema
UpdateSchema' :: Maybe SchemaVersionNumber -> Maybe Text -> Maybe Compatibility -> SchemaId -> UpdateSchema

-- | Version number required for check pointing. One of
--   <tt>VersionNumber</tt> or <tt>Compatibility</tt> has to be provided.
[$sel:schemaVersionNumber:UpdateSchema'] :: UpdateSchema -> Maybe SchemaVersionNumber

-- | The new description for the schema.
[$sel:description:UpdateSchema'] :: UpdateSchema -> Maybe Text

-- | The new compatibility setting for the schema.
[$sel:compatibility:UpdateSchema'] :: UpdateSchema -> Maybe Compatibility

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   One of <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be
--   provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. One of
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be provided.</li>
--   </ul>
[$sel:schemaId:UpdateSchema'] :: UpdateSchema -> SchemaId

-- | Create a value of <a>UpdateSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaVersionNumber:UpdateSchema'</a>,
--   <a>updateSchema_schemaVersionNumber</a> - Version number required for
--   check pointing. One of <tt>VersionNumber</tt> or
--   <tt>Compatibility</tt> has to be provided.
--   
--   <a>$sel:description:UpdateSchema'</a>, <a>updateSchema_description</a>
--   - The new description for the schema.
--   
--   <a>$sel:compatibility:UpdateSchema'</a>,
--   <a>updateSchema_compatibility</a> - The new compatibility setting for
--   the schema.
--   
--   <a>$sel:schemaId:UpdateSchema'</a>, <a>updateSchema_schemaId</a> -
--   This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   One of <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be
--   provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. One of
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be provided.</li>
--   </ul>
newUpdateSchema :: SchemaId -> UpdateSchema

-- | Version number required for check pointing. One of
--   <tt>VersionNumber</tt> or <tt>Compatibility</tt> has to be provided.
updateSchema_schemaVersionNumber :: Lens' UpdateSchema (Maybe SchemaVersionNumber)

-- | The new description for the schema.
updateSchema_description :: Lens' UpdateSchema (Maybe Text)

-- | The new compatibility setting for the schema.
updateSchema_compatibility :: Lens' UpdateSchema (Maybe Compatibility)

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   One of <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be
--   provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. One of
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be provided.</li>
--   </ul>
updateSchema_schemaId :: Lens' UpdateSchema SchemaId

-- | <i>See:</i> <a>newUpdateSchemaResponse</a> smart constructor.
data UpdateSchemaResponse
UpdateSchemaResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateSchemaResponse

-- | The name of the registry that contains the schema.
[$sel:registryName:UpdateSchemaResponse'] :: UpdateSchemaResponse -> Maybe Text

-- | The name of the schema.
[$sel:schemaName:UpdateSchemaResponse'] :: UpdateSchemaResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the schema.
[$sel:schemaArn:UpdateSchemaResponse'] :: UpdateSchemaResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateSchemaResponse'] :: UpdateSchemaResponse -> Int

-- | Create a value of <a>UpdateSchemaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:UpdateSchemaResponse'</a>,
--   <a>updateSchemaResponse_registryName</a> - The name of the registry
--   that contains the schema.
--   
--   <a>$sel:schemaName:UpdateSchemaResponse'</a>,
--   <a>updateSchemaResponse_schemaName</a> - The name of the schema.
--   
--   <a>$sel:schemaArn:UpdateSchemaResponse'</a>,
--   <a>updateSchemaResponse_schemaArn</a> - The Amazon Resource Name (ARN)
--   of the schema.
--   
--   <a>$sel:httpStatus:UpdateSchemaResponse'</a>,
--   <a>updateSchemaResponse_httpStatus</a> - The response's http status
--   code.
newUpdateSchemaResponse :: Int -> UpdateSchemaResponse

-- | The name of the registry that contains the schema.
updateSchemaResponse_registryName :: Lens' UpdateSchemaResponse (Maybe Text)

-- | The name of the schema.
updateSchemaResponse_schemaName :: Lens' UpdateSchemaResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schema.
updateSchemaResponse_schemaArn :: Lens' UpdateSchemaResponse (Maybe Text)

-- | The response's http status code.
updateSchemaResponse_httpStatus :: Lens' UpdateSchemaResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.UpdateSchema.UpdateSchema
instance GHC.Show.Show Network.AWS.Glue.UpdateSchema.UpdateSchema
instance GHC.Read.Read Network.AWS.Glue.UpdateSchema.UpdateSchema
instance GHC.Classes.Eq Network.AWS.Glue.UpdateSchema.UpdateSchema
instance GHC.Generics.Generic Network.AWS.Glue.UpdateSchema.UpdateSchemaResponse
instance GHC.Show.Show Network.AWS.Glue.UpdateSchema.UpdateSchemaResponse
instance GHC.Read.Read Network.AWS.Glue.UpdateSchema.UpdateSchemaResponse
instance GHC.Classes.Eq Network.AWS.Glue.UpdateSchema.UpdateSchemaResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.UpdateSchema.UpdateSchema
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateSchema.UpdateSchemaResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.UpdateSchema.UpdateSchema
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateSchema.UpdateSchema
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.UpdateSchema.UpdateSchema
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.UpdateSchema.UpdateSchema
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.UpdateSchema.UpdateSchema
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.UpdateSchema.UpdateSchema


-- | Updates a metadata table in the Data Catalog.
module Network.AWS.Glue.UpdateTable

-- | <i>See:</i> <a>newUpdateTable</a> smart constructor.
data UpdateTable
UpdateTable' :: Maybe Bool -> Maybe Text -> Text -> TableInput -> UpdateTable

-- | By default, <tt>UpdateTable</tt> always creates an archived version of
--   the table before updating it. However, if <tt>skipArchive</tt> is set
--   to true, <tt>UpdateTable</tt> does not create the archived version.
[$sel:skipArchive:UpdateTable'] :: UpdateTable -> Maybe Bool

-- | The ID of the Data Catalog where the table resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
[$sel:catalogId:UpdateTable'] :: UpdateTable -> Maybe Text

-- | The name of the catalog database in which the table resides. For Hive
--   compatibility, this name is entirely lowercase.
[$sel:databaseName:UpdateTable'] :: UpdateTable -> Text

-- | An updated <tt>TableInput</tt> object to define the metadata table in
--   the catalog.
[$sel:tableInput:UpdateTable'] :: UpdateTable -> TableInput

-- | Create a value of <a>UpdateTable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:skipArchive:UpdateTable'</a>, <a>updateTable_skipArchive</a> -
--   By default, <tt>UpdateTable</tt> always creates an archived version of
--   the table before updating it. However, if <tt>skipArchive</tt> is set
--   to true, <tt>UpdateTable</tt> does not create the archived version.
--   
--   <a>$sel:catalogId:UpdateTable'</a>, <a>updateTable_catalogId</a> - The
--   ID of the Data Catalog where the table resides. If none is provided,
--   the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:UpdateTable'</a>, <a>updateTable_databaseName</a>
--   - The name of the catalog database in which the table resides. For
--   Hive compatibility, this name is entirely lowercase.
--   
--   <a>$sel:tableInput:UpdateTable'</a>, <a>updateTable_tableInput</a> -
--   An updated <tt>TableInput</tt> object to define the metadata table in
--   the catalog.
newUpdateTable :: Text -> TableInput -> UpdateTable

-- | By default, <tt>UpdateTable</tt> always creates an archived version of
--   the table before updating it. However, if <tt>skipArchive</tt> is set
--   to true, <tt>UpdateTable</tt> does not create the archived version.
updateTable_skipArchive :: Lens' UpdateTable (Maybe Bool)

-- | The ID of the Data Catalog where the table resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
updateTable_catalogId :: Lens' UpdateTable (Maybe Text)

-- | The name of the catalog database in which the table resides. For Hive
--   compatibility, this name is entirely lowercase.
updateTable_databaseName :: Lens' UpdateTable Text

-- | An updated <tt>TableInput</tt> object to define the metadata table in
--   the catalog.
updateTable_tableInput :: Lens' UpdateTable TableInput

-- | <i>See:</i> <a>newUpdateTableResponse</a> smart constructor.
data UpdateTableResponse
UpdateTableResponse' :: Int -> UpdateTableResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateTableResponse'] :: UpdateTableResponse -> Int

-- | Create a value of <a>UpdateTableResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateTableResponse'</a>,
--   <a>updateTableResponse_httpStatus</a> - The response's http status
--   code.
newUpdateTableResponse :: Int -> UpdateTableResponse

-- | The response's http status code.
updateTableResponse_httpStatus :: Lens' UpdateTableResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.UpdateTable.UpdateTable
instance GHC.Show.Show Network.AWS.Glue.UpdateTable.UpdateTable
instance GHC.Read.Read Network.AWS.Glue.UpdateTable.UpdateTable
instance GHC.Classes.Eq Network.AWS.Glue.UpdateTable.UpdateTable
instance GHC.Generics.Generic Network.AWS.Glue.UpdateTable.UpdateTableResponse
instance GHC.Show.Show Network.AWS.Glue.UpdateTable.UpdateTableResponse
instance GHC.Read.Read Network.AWS.Glue.UpdateTable.UpdateTableResponse
instance GHC.Classes.Eq Network.AWS.Glue.UpdateTable.UpdateTableResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.UpdateTable.UpdateTable
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateTable.UpdateTableResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.UpdateTable.UpdateTable
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateTable.UpdateTable
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.UpdateTable.UpdateTable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.UpdateTable.UpdateTable
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.UpdateTable.UpdateTable
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.UpdateTable.UpdateTable


-- | Updates a trigger definition.
module Network.AWS.Glue.UpdateTrigger

-- | <i>See:</i> <a>newUpdateTrigger</a> smart constructor.
data UpdateTrigger
UpdateTrigger' :: Text -> TriggerUpdate -> UpdateTrigger

-- | The name of the trigger to update.
[$sel:name:UpdateTrigger'] :: UpdateTrigger -> Text

-- | The new values with which to update the trigger.
[$sel:triggerUpdate:UpdateTrigger'] :: UpdateTrigger -> TriggerUpdate

-- | Create a value of <a>UpdateTrigger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateTrigger'</a>, <a>updateTrigger_name</a> - The name
--   of the trigger to update.
--   
--   <a>$sel:triggerUpdate:UpdateTrigger'</a>,
--   <a>updateTrigger_triggerUpdate</a> - The new values with which to
--   update the trigger.
newUpdateTrigger :: Text -> TriggerUpdate -> UpdateTrigger

-- | The name of the trigger to update.
updateTrigger_name :: Lens' UpdateTrigger Text

-- | The new values with which to update the trigger.
updateTrigger_triggerUpdate :: Lens' UpdateTrigger TriggerUpdate

-- | <i>See:</i> <a>newUpdateTriggerResponse</a> smart constructor.
data UpdateTriggerResponse
UpdateTriggerResponse' :: Maybe Trigger -> Int -> UpdateTriggerResponse

-- | The resulting trigger definition.
[$sel:trigger:UpdateTriggerResponse'] :: UpdateTriggerResponse -> Maybe Trigger

-- | The response's http status code.
[$sel:httpStatus:UpdateTriggerResponse'] :: UpdateTriggerResponse -> Int

-- | Create a value of <a>UpdateTriggerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trigger:UpdateTriggerResponse'</a>,
--   <a>updateTriggerResponse_trigger</a> - The resulting trigger
--   definition.
--   
--   <a>$sel:httpStatus:UpdateTriggerResponse'</a>,
--   <a>updateTriggerResponse_httpStatus</a> - The response's http status
--   code.
newUpdateTriggerResponse :: Int -> UpdateTriggerResponse

-- | The resulting trigger definition.
updateTriggerResponse_trigger :: Lens' UpdateTriggerResponse (Maybe Trigger)

-- | The response's http status code.
updateTriggerResponse_httpStatus :: Lens' UpdateTriggerResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.UpdateTrigger.UpdateTrigger
instance GHC.Show.Show Network.AWS.Glue.UpdateTrigger.UpdateTrigger
instance GHC.Read.Read Network.AWS.Glue.UpdateTrigger.UpdateTrigger
instance GHC.Classes.Eq Network.AWS.Glue.UpdateTrigger.UpdateTrigger
instance GHC.Generics.Generic Network.AWS.Glue.UpdateTrigger.UpdateTriggerResponse
instance GHC.Show.Show Network.AWS.Glue.UpdateTrigger.UpdateTriggerResponse
instance GHC.Read.Read Network.AWS.Glue.UpdateTrigger.UpdateTriggerResponse
instance GHC.Classes.Eq Network.AWS.Glue.UpdateTrigger.UpdateTriggerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.UpdateTrigger.UpdateTrigger
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateTrigger.UpdateTriggerResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.UpdateTrigger.UpdateTrigger
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateTrigger.UpdateTrigger
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.UpdateTrigger.UpdateTrigger
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.UpdateTrigger.UpdateTrigger
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.UpdateTrigger.UpdateTrigger
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.UpdateTrigger.UpdateTrigger


-- | Updates an existing function definition in the Data Catalog.
module Network.AWS.Glue.UpdateUserDefinedFunction

-- | <i>See:</i> <a>newUpdateUserDefinedFunction</a> smart constructor.
data UpdateUserDefinedFunction
UpdateUserDefinedFunction' :: Maybe Text -> Text -> Text -> UserDefinedFunctionInput -> UpdateUserDefinedFunction

-- | The ID of the Data Catalog where the function to be updated is
--   located. If none is provided, the Amazon Web Services account ID is
--   used by default.
[$sel:catalogId:UpdateUserDefinedFunction'] :: UpdateUserDefinedFunction -> Maybe Text

-- | The name of the catalog database where the function to be updated is
--   located.
[$sel:databaseName:UpdateUserDefinedFunction'] :: UpdateUserDefinedFunction -> Text

-- | The name of the function.
[$sel:functionName:UpdateUserDefinedFunction'] :: UpdateUserDefinedFunction -> Text

-- | A <tt>FunctionInput</tt> object that redefines the function in the
--   Data Catalog.
[$sel:functionInput:UpdateUserDefinedFunction'] :: UpdateUserDefinedFunction -> UserDefinedFunctionInput

-- | Create a value of <a>UpdateUserDefinedFunction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:UpdateUserDefinedFunction'</a>,
--   <a>updateUserDefinedFunction_catalogId</a> - The ID of the Data
--   Catalog where the function to be updated is located. If none is
--   provided, the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:UpdateUserDefinedFunction'</a>,
--   <a>updateUserDefinedFunction_databaseName</a> - The name of the
--   catalog database where the function to be updated is located.
--   
--   <a>$sel:functionName:UpdateUserDefinedFunction'</a>,
--   <a>updateUserDefinedFunction_functionName</a> - The name of the
--   function.
--   
--   <a>$sel:functionInput:UpdateUserDefinedFunction'</a>,
--   <a>updateUserDefinedFunction_functionInput</a> - A
--   <tt>FunctionInput</tt> object that redefines the function in the Data
--   Catalog.
newUpdateUserDefinedFunction :: Text -> Text -> UserDefinedFunctionInput -> UpdateUserDefinedFunction

-- | The ID of the Data Catalog where the function to be updated is
--   located. If none is provided, the Amazon Web Services account ID is
--   used by default.
updateUserDefinedFunction_catalogId :: Lens' UpdateUserDefinedFunction (Maybe Text)

-- | The name of the catalog database where the function to be updated is
--   located.
updateUserDefinedFunction_databaseName :: Lens' UpdateUserDefinedFunction Text

-- | The name of the function.
updateUserDefinedFunction_functionName :: Lens' UpdateUserDefinedFunction Text

-- | A <tt>FunctionInput</tt> object that redefines the function in the
--   Data Catalog.
updateUserDefinedFunction_functionInput :: Lens' UpdateUserDefinedFunction UserDefinedFunctionInput

-- | <i>See:</i> <a>newUpdateUserDefinedFunctionResponse</a> smart
--   constructor.
data UpdateUserDefinedFunctionResponse
UpdateUserDefinedFunctionResponse' :: Int -> UpdateUserDefinedFunctionResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateUserDefinedFunctionResponse'] :: UpdateUserDefinedFunctionResponse -> Int

-- | Create a value of <a>UpdateUserDefinedFunctionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateUserDefinedFunctionResponse'</a>,
--   <a>updateUserDefinedFunctionResponse_httpStatus</a> - The response's
--   http status code.
newUpdateUserDefinedFunctionResponse :: Int -> UpdateUserDefinedFunctionResponse

-- | The response's http status code.
updateUserDefinedFunctionResponse_httpStatus :: Lens' UpdateUserDefinedFunctionResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.UpdateUserDefinedFunction.UpdateUserDefinedFunction
instance GHC.Show.Show Network.AWS.Glue.UpdateUserDefinedFunction.UpdateUserDefinedFunction
instance GHC.Read.Read Network.AWS.Glue.UpdateUserDefinedFunction.UpdateUserDefinedFunction
instance GHC.Classes.Eq Network.AWS.Glue.UpdateUserDefinedFunction.UpdateUserDefinedFunction
instance GHC.Generics.Generic Network.AWS.Glue.UpdateUserDefinedFunction.UpdateUserDefinedFunctionResponse
instance GHC.Show.Show Network.AWS.Glue.UpdateUserDefinedFunction.UpdateUserDefinedFunctionResponse
instance GHC.Read.Read Network.AWS.Glue.UpdateUserDefinedFunction.UpdateUserDefinedFunctionResponse
instance GHC.Classes.Eq Network.AWS.Glue.UpdateUserDefinedFunction.UpdateUserDefinedFunctionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.UpdateUserDefinedFunction.UpdateUserDefinedFunction
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateUserDefinedFunction.UpdateUserDefinedFunctionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.UpdateUserDefinedFunction.UpdateUserDefinedFunction
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateUserDefinedFunction.UpdateUserDefinedFunction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.UpdateUserDefinedFunction.UpdateUserDefinedFunction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.UpdateUserDefinedFunction.UpdateUserDefinedFunction
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.UpdateUserDefinedFunction.UpdateUserDefinedFunction
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.UpdateUserDefinedFunction.UpdateUserDefinedFunction


-- | Updates an existing workflow.
module Network.AWS.Glue.UpdateWorkflow

-- | <i>See:</i> <a>newUpdateWorkflow</a> smart constructor.
data UpdateWorkflow
UpdateWorkflow' :: Maybe Int -> Maybe (HashMap Text Text) -> Maybe Text -> Text -> UpdateWorkflow

-- | You can use this parameter to prevent unwanted multiple updates to
--   data, to control costs, or in some cases, to prevent exceeding the
--   maximum number of concurrent runs of any of the component jobs. If you
--   leave this parameter blank, there is no limit to the number of
--   concurrent workflow runs.
[$sel:maxConcurrentRuns:UpdateWorkflow'] :: UpdateWorkflow -> Maybe Int

-- | A collection of properties to be used as part of each execution of the
--   workflow.
[$sel:defaultRunProperties:UpdateWorkflow'] :: UpdateWorkflow -> Maybe (HashMap Text Text)

-- | The description of the workflow.
[$sel:description:UpdateWorkflow'] :: UpdateWorkflow -> Maybe Text

-- | Name of the workflow to be updated.
[$sel:name:UpdateWorkflow'] :: UpdateWorkflow -> Text

-- | Create a value of <a>UpdateWorkflow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxConcurrentRuns:UpdateWorkflow'</a>,
--   <a>updateWorkflow_maxConcurrentRuns</a> - You can use this parameter
--   to prevent unwanted multiple updates to data, to control costs, or in
--   some cases, to prevent exceeding the maximum number of concurrent runs
--   of any of the component jobs. If you leave this parameter blank, there
--   is no limit to the number of concurrent workflow runs.
--   
--   <a>$sel:defaultRunProperties:UpdateWorkflow'</a>,
--   <a>updateWorkflow_defaultRunProperties</a> - A collection of
--   properties to be used as part of each execution of the workflow.
--   
--   <a>$sel:description:UpdateWorkflow'</a>,
--   <a>updateWorkflow_description</a> - The description of the workflow.
--   
--   <a>$sel:name:UpdateWorkflow'</a>, <a>updateWorkflow_name</a> - Name of
--   the workflow to be updated.
newUpdateWorkflow :: Text -> UpdateWorkflow

-- | You can use this parameter to prevent unwanted multiple updates to
--   data, to control costs, or in some cases, to prevent exceeding the
--   maximum number of concurrent runs of any of the component jobs. If you
--   leave this parameter blank, there is no limit to the number of
--   concurrent workflow runs.
updateWorkflow_maxConcurrentRuns :: Lens' UpdateWorkflow (Maybe Int)

-- | A collection of properties to be used as part of each execution of the
--   workflow.
updateWorkflow_defaultRunProperties :: Lens' UpdateWorkflow (Maybe (HashMap Text Text))

-- | The description of the workflow.
updateWorkflow_description :: Lens' UpdateWorkflow (Maybe Text)

-- | Name of the workflow to be updated.
updateWorkflow_name :: Lens' UpdateWorkflow Text

-- | <i>See:</i> <a>newUpdateWorkflowResponse</a> smart constructor.
data UpdateWorkflowResponse
UpdateWorkflowResponse' :: Maybe Text -> Int -> UpdateWorkflowResponse

-- | The name of the workflow which was specified in input.
[$sel:name:UpdateWorkflowResponse'] :: UpdateWorkflowResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateWorkflowResponse'] :: UpdateWorkflowResponse -> Int

-- | Create a value of <a>UpdateWorkflowResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateWorkflow'</a>, <a>updateWorkflowResponse_name</a> -
--   The name of the workflow which was specified in input.
--   
--   <a>$sel:httpStatus:UpdateWorkflowResponse'</a>,
--   <a>updateWorkflowResponse_httpStatus</a> - The response's http status
--   code.
newUpdateWorkflowResponse :: Int -> UpdateWorkflowResponse

-- | The name of the workflow which was specified in input.
updateWorkflowResponse_name :: Lens' UpdateWorkflowResponse (Maybe Text)

-- | The response's http status code.
updateWorkflowResponse_httpStatus :: Lens' UpdateWorkflowResponse Int
instance GHC.Generics.Generic Network.AWS.Glue.UpdateWorkflow.UpdateWorkflow
instance GHC.Show.Show Network.AWS.Glue.UpdateWorkflow.UpdateWorkflow
instance GHC.Read.Read Network.AWS.Glue.UpdateWorkflow.UpdateWorkflow
instance GHC.Classes.Eq Network.AWS.Glue.UpdateWorkflow.UpdateWorkflow
instance GHC.Generics.Generic Network.AWS.Glue.UpdateWorkflow.UpdateWorkflowResponse
instance GHC.Show.Show Network.AWS.Glue.UpdateWorkflow.UpdateWorkflowResponse
instance GHC.Read.Read Network.AWS.Glue.UpdateWorkflow.UpdateWorkflowResponse
instance GHC.Classes.Eq Network.AWS.Glue.UpdateWorkflow.UpdateWorkflowResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Glue.UpdateWorkflow.UpdateWorkflow
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateWorkflow.UpdateWorkflowResponse
instance Data.Hashable.Class.Hashable Network.AWS.Glue.UpdateWorkflow.UpdateWorkflow
instance Control.DeepSeq.NFData Network.AWS.Glue.UpdateWorkflow.UpdateWorkflow
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Glue.UpdateWorkflow.UpdateWorkflow
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Glue.UpdateWorkflow.UpdateWorkflow
instance Network.AWS.Data.Path.ToPath Network.AWS.Glue.UpdateWorkflow.UpdateWorkflow
instance Network.AWS.Data.Query.ToQuery Network.AWS.Glue.UpdateWorkflow.UpdateWorkflow


module Network.AWS.Glue.Lens

-- | Indicates whether to overwrite your existing labels.
startImportLabelsTaskRun_replaceAllLabels :: Lens' StartImportLabelsTaskRun (Maybe Bool)

-- | The unique identifier of the machine learning transform.
startImportLabelsTaskRun_transformId :: Lens' StartImportLabelsTaskRun Text

-- | The Amazon Simple Storage Service (Amazon S3) path from where you
--   import the labels.
startImportLabelsTaskRun_inputS3Path :: Lens' StartImportLabelsTaskRun Text

-- | The unique identifier for the task run.
startImportLabelsTaskRunResponse_taskRunId :: Lens' StartImportLabelsTaskRunResponse (Maybe Text)

-- | The response's http status code.
startImportLabelsTaskRunResponse_httpStatus :: Lens' StartImportLabelsTaskRunResponse Int

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when this task runs.
updateMLTransform_numberOfWorkers :: Lens' UpdateMLTransform (Maybe Int)

-- | The type of predefined worker that is allocated when this task runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
updateMLTransform_workerType :: Lens' UpdateMLTransform (Maybe WorkerType)

-- | This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
updateMLTransform_glueVersion :: Lens' UpdateMLTransform (Maybe Text)

-- | The name or Amazon Resource Name (ARN) of the IAM role with the
--   required permissions.
updateMLTransform_role :: Lens' UpdateMLTransform (Maybe Text)

-- | The unique name that you gave the transform when you created it.
updateMLTransform_name :: Lens' UpdateMLTransform (Maybe Text)

-- | The configuration parameters that are specific to the transform type
--   (algorithm) used. Conditionally dependent on the transform type.
updateMLTransform_parameters :: Lens' UpdateMLTransform (Maybe TransformParameters)

-- | The maximum number of times to retry a task for this transform after a
--   task run fails.
updateMLTransform_maxRetries :: Lens' UpdateMLTransform (Maybe Int)

-- | The number of Glue data processing units (DPUs) that are allocated to
--   task runs for this transform. You can allocate from 2 to 100 DPUs; the
--   default is 10. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
updateMLTransform_maxCapacity :: Lens' UpdateMLTransform (Maybe Double)

-- | The timeout for a task run for this transform in minutes. This is the
--   maximum time that a task run for this transform can consume resources
--   before it is terminated and enters <tt>TIMEOUT</tt> status. The
--   default is 2,880 minutes (48 hours).
updateMLTransform_timeout :: Lens' UpdateMLTransform (Maybe Natural)

-- | A description of the transform. The default is an empty string.
updateMLTransform_description :: Lens' UpdateMLTransform (Maybe Text)

-- | A unique identifier that was generated when the transform was created.
updateMLTransform_transformId :: Lens' UpdateMLTransform Text

-- | The unique identifier for the transform that was updated.
updateMLTransformResponse_transformId :: Lens' UpdateMLTransformResponse (Maybe Text)

-- | The response's http status code.
updateMLTransformResponse_httpStatus :: Lens' UpdateMLTransformResponse Int

-- | This is a wrapper structure that may contain the registry name and
--   Amazon Resource Name (ARN).
updateRegistry_registryId :: Lens' UpdateRegistry RegistryId

-- | A description of the registry. If description is not provided, this
--   field will not be updated.
updateRegistry_description :: Lens' UpdateRegistry Text

-- | The name of the updated registry.
updateRegistryResponse_registryName :: Lens' UpdateRegistryResponse (Maybe Text)

-- | The Amazon Resource name (ARN) of the updated registry.
updateRegistryResponse_registryArn :: Lens' UpdateRegistryResponse (Maybe Text)

-- | The response's http status code.
updateRegistryResponse_httpStatus :: Lens' UpdateRegistryResponse Int

-- | This is a wrapper structure that may contain the registry name and
--   Amazon Resource Name (ARN).
deleteRegistry_registryId :: Lens' DeleteRegistry RegistryId

-- | The status of the registry. A successful operation will return the
--   <tt>Deleting</tt> status.
deleteRegistryResponse_status :: Lens' DeleteRegistryResponse (Maybe RegistryStatus)

-- | The name of the registry being deleted.
deleteRegistryResponse_registryName :: Lens' DeleteRegistryResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the registry being deleted.
deleteRegistryResponse_registryArn :: Lens' DeleteRegistryResponse (Maybe Text)

-- | The response's http status code.
deleteRegistryResponse_httpStatus :: Lens' DeleteRegistryResponse Int

-- | The unique identifier of the transform to delete.
deleteMLTransform_transformId :: Lens' DeleteMLTransform Text

-- | The unique identifier of the transform that was deleted.
deleteMLTransformResponse_transformId :: Lens' DeleteMLTransformResponse (Maybe Text)

-- | The response's http status code.
deleteMLTransformResponse_httpStatus :: Lens' DeleteMLTransformResponse Int

-- | Name of the crawler to start.
startCrawler_name :: Lens' StartCrawler Text

-- | The response's http status code.
startCrawlerResponse_httpStatus :: Lens' StartCrawlerResponse Int

-- | The ID of the catalog to migrate. Currently, this should be the Amazon
--   Web Services account ID.
getCatalogImportStatus_catalogId :: Lens' GetCatalogImportStatus (Maybe Text)

-- | The status of the specified catalog migration.
getCatalogImportStatusResponse_importStatus :: Lens' GetCatalogImportStatusResponse (Maybe CatalogImportStatus)

-- | The response's http status code.
getCatalogImportStatusResponse_httpStatus :: Lens' GetCatalogImportStatusResponse Int

-- | A continuation token, if this is a continuation request.
listMLTransforms_nextToken :: Lens' ListMLTransforms (Maybe Text)

-- | A <tt>TransformSortCriteria</tt> used to sort the machine learning
--   transforms.
listMLTransforms_sort :: Lens' ListMLTransforms (Maybe TransformSortCriteria)

-- | A <tt>TransformFilterCriteria</tt> used to filter the machine learning
--   transforms.
listMLTransforms_filter :: Lens' ListMLTransforms (Maybe TransformFilterCriteria)

-- | The maximum size of a list to return.
listMLTransforms_maxResults :: Lens' ListMLTransforms (Maybe Natural)

-- | Specifies to return only these tagged resources.
listMLTransforms_tags :: Lens' ListMLTransforms (Maybe (HashMap Text Text))

-- | A continuation token, if the returned list does not contain the last
--   metric available.
listMLTransformsResponse_nextToken :: Lens' ListMLTransformsResponse (Maybe Text)

-- | The response's http status code.
listMLTransformsResponse_httpStatus :: Lens' ListMLTransformsResponse Int

-- | The identifiers of all the machine learning transforms in the account,
--   or the machine learning transforms with the specified tags.
listMLTransformsResponse_transformIds :: Lens' ListMLTransformsResponse [Text]

-- | The ID of the Data Catalog where the partition in question resides. If
--   none is provided, the Amazon Web Services account ID is used by
--   default.
getPartition_catalogId :: Lens' GetPartition (Maybe Text)

-- | The name of the catalog database where the partition resides.
getPartition_databaseName :: Lens' GetPartition Text

-- | The name of the partition's table.
getPartition_tableName :: Lens' GetPartition Text

-- | The values that define the partition.
getPartition_partitionValues :: Lens' GetPartition [Text]

-- | The requested information, in the form of a <tt>Partition</tt> object.
getPartitionResponse_partition :: Lens' GetPartitionResponse (Maybe Partition)

-- | The response's http status code.
getPartitionResponse_httpStatus :: Lens' GetPartitionResponse Int

-- | The unique version ID of the schema version.
querySchemaVersionMetadata_schemaVersionId :: Lens' QuerySchemaVersionMetadata (Maybe Text)

-- | A wrapper structure that may contain the schema name and Amazon
--   Resource Name (ARN).
querySchemaVersionMetadata_schemaId :: Lens' QuerySchemaVersionMetadata (Maybe SchemaId)

-- | A continuation token, if this is a continuation call.
querySchemaVersionMetadata_nextToken :: Lens' QuerySchemaVersionMetadata (Maybe Text)

-- | Search key-value pairs for metadata, if they are not provided all the
--   metadata information will be fetched.
querySchemaVersionMetadata_metadataList :: Lens' QuerySchemaVersionMetadata (Maybe [MetadataKeyValuePair])

-- | The version number of the schema.
querySchemaVersionMetadata_schemaVersionNumber :: Lens' QuerySchemaVersionMetadata (Maybe SchemaVersionNumber)

-- | Maximum number of results required per page. If the value is not
--   supplied, this will be defaulted to 25 per page.
querySchemaVersionMetadata_maxResults :: Lens' QuerySchemaVersionMetadata (Maybe Natural)

-- | The unique version ID of the schema version.
querySchemaVersionMetadataResponse_schemaVersionId :: Lens' QuerySchemaVersionMetadataResponse (Maybe Text)

-- | A continuation token for paginating the returned list of tokens,
--   returned if the current segment of the list is not the last.
querySchemaVersionMetadataResponse_nextToken :: Lens' QuerySchemaVersionMetadataResponse (Maybe Text)

-- | A map of a metadata key and associated values.
querySchemaVersionMetadataResponse_metadataInfoMap :: Lens' QuerySchemaVersionMetadataResponse (Maybe (HashMap Text MetadataInfo))

-- | The response's http status code.
querySchemaVersionMetadataResponse_httpStatus :: Lens' QuerySchemaVersionMetadataResponse Int

-- | The name of the workflow associated with the trigger.
createTrigger_workflowName :: Lens' CreateTrigger (Maybe Text)

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
--   
--   This field is required when the trigger type is SCHEDULED.
createTrigger_schedule :: Lens' CreateTrigger (Maybe Text)

-- | A predicate to specify when the new trigger should fire.
--   
--   This field is required when the trigger type is <tt>CONDITIONAL</tt>.
createTrigger_predicate :: Lens' CreateTrigger (Maybe Predicate)

-- | Set to <tt>true</tt> to start <tt>SCHEDULED</tt> and
--   <tt>CONDITIONAL</tt> triggers when created. True is not supported for
--   <tt>ON_DEMAND</tt> triggers.
createTrigger_startOnCreation :: Lens' CreateTrigger (Maybe Bool)

-- | Batch condition that must be met (specified number of events received
--   or batch time window expired) before EventBridge event trigger fires.
createTrigger_eventBatchingCondition :: Lens' CreateTrigger (Maybe EventBatchingCondition)

-- | A description of the new trigger.
createTrigger_description :: Lens' CreateTrigger (Maybe Text)

-- | The tags to use with this trigger. You may use tags to limit access to
--   the trigger. For more information about tags in Glue, see <a>Amazon
--   Web Services Tags in Glue</a> in the developer guide.
createTrigger_tags :: Lens' CreateTrigger (Maybe (HashMap Text Text))

-- | The name of the trigger.
createTrigger_name :: Lens' CreateTrigger Text

-- | The type of the new trigger.
createTrigger_type :: Lens' CreateTrigger TriggerType

-- | The actions initiated by this trigger when it fires.
createTrigger_actions :: Lens' CreateTrigger [Action]

-- | The name of the trigger.
createTriggerResponse_name :: Lens' CreateTriggerResponse (Maybe Text)

-- | The response's http status code.
createTriggerResponse_httpStatus :: Lens' CreateTriggerResponse Int

-- | The data format of the schema definition. Currently <tt>AVRO</tt> and
--   <tt>JSON</tt> are supported.
checkSchemaVersionValidity_dataFormat :: Lens' CheckSchemaVersionValidity DataFormat

-- | The definition of the schema that has to be validated.
checkSchemaVersionValidity_schemaDefinition :: Lens' CheckSchemaVersionValidity Text

-- | A validation failure error message.
checkSchemaVersionValidityResponse_error :: Lens' CheckSchemaVersionValidityResponse (Maybe Text)

-- | Return true, if the schema is valid and false otherwise.
checkSchemaVersionValidityResponse_valid :: Lens' CheckSchemaVersionValidityResponse (Maybe Bool)

-- | The response's http status code.
checkSchemaVersionValidityResponse_httpStatus :: Lens' CheckSchemaVersionValidityResponse Int

-- | The ID of the Data Catalog where the table resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
deleteTable_catalogId :: Lens' DeleteTable (Maybe Text)

-- | The name of the catalog database in which the table resides. For Hive
--   compatibility, this name is entirely lowercase.
deleteTable_databaseName :: Lens' DeleteTable Text

-- | The name of the table to be deleted. For Hive compatibility, this name
--   is entirely lowercase.
deleteTable_name :: Lens' DeleteTable Text

-- | The response's http status code.
deleteTableResponse_httpStatus :: Lens' DeleteTableResponse Int

-- | By default, <tt>UpdateTable</tt> always creates an archived version of
--   the table before updating it. However, if <tt>skipArchive</tt> is set
--   to true, <tt>UpdateTable</tt> does not create the archived version.
updateTable_skipArchive :: Lens' UpdateTable (Maybe Bool)

-- | The ID of the Data Catalog where the table resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
updateTable_catalogId :: Lens' UpdateTable (Maybe Text)

-- | The name of the catalog database in which the table resides. For Hive
--   compatibility, this name is entirely lowercase.
updateTable_databaseName :: Lens' UpdateTable Text

-- | An updated <tt>TableInput</tt> object to define the metadata table in
--   the catalog.
updateTable_tableInput :: Lens' UpdateTable TableInput

-- | The response's http status code.
updateTableResponse_httpStatus :: Lens' UpdateTableResponse Int

-- | Specifies whether to include the workflow graph in response or not.
getWorkflowRuns_includeGraph :: Lens' GetWorkflowRuns (Maybe Bool)

-- | The maximum size of the response.
getWorkflowRuns_nextToken :: Lens' GetWorkflowRuns (Maybe Text)

-- | The maximum number of workflow runs to be included in the response.
getWorkflowRuns_maxResults :: Lens' GetWorkflowRuns (Maybe Natural)

-- | Name of the workflow whose metadata of runs should be returned.
getWorkflowRuns_name :: Lens' GetWorkflowRuns Text

-- | A list of workflow run metadata objects.
getWorkflowRunsResponse_runs :: Lens' GetWorkflowRunsResponse (Maybe (NonEmpty WorkflowRun))

-- | A continuation token, if not all requested workflow runs have been
--   returned.
getWorkflowRunsResponse_nextToken :: Lens' GetWorkflowRunsResponse (Maybe Text)

-- | The response's http status code.
getWorkflowRunsResponse_httpStatus :: Lens' GetWorkflowRunsResponse Int

-- | You can use this parameter to prevent unwanted multiple updates to
--   data, to control costs, or in some cases, to prevent exceeding the
--   maximum number of concurrent runs of any of the component jobs. If you
--   leave this parameter blank, there is no limit to the number of
--   concurrent workflow runs.
createWorkflow_maxConcurrentRuns :: Lens' CreateWorkflow (Maybe Int)

-- | A collection of properties to be used as part of each execution of the
--   workflow.
createWorkflow_defaultRunProperties :: Lens' CreateWorkflow (Maybe (HashMap Text Text))

-- | A description of the workflow.
createWorkflow_description :: Lens' CreateWorkflow (Maybe Text)

-- | The tags to be used with this workflow.
createWorkflow_tags :: Lens' CreateWorkflow (Maybe (HashMap Text Text))

-- | The name to be assigned to the workflow. It should be unique within
--   your account.
createWorkflow_name :: Lens' CreateWorkflow Text

-- | The name of the workflow which was provided as part of the request.
createWorkflowResponse_name :: Lens' CreateWorkflowResponse (Maybe Text)

-- | The response's http status code.
createWorkflowResponse_httpStatus :: Lens' CreateWorkflowResponse Int

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
updateColumnStatisticsForTable_catalogId :: Lens' UpdateColumnStatisticsForTable (Maybe Text)

-- | The name of the catalog database where the partitions reside.
updateColumnStatisticsForTable_databaseName :: Lens' UpdateColumnStatisticsForTable Text

-- | The name of the partitions' table.
updateColumnStatisticsForTable_tableName :: Lens' UpdateColumnStatisticsForTable Text

-- | A list of the column statistics.
updateColumnStatisticsForTable_columnStatisticsList :: Lens' UpdateColumnStatisticsForTable [ColumnStatistics]

-- | List of ColumnStatisticsErrors.
updateColumnStatisticsForTableResponse_errors :: Lens' UpdateColumnStatisticsForTableResponse (Maybe [ColumnStatisticsError])

-- | The response's http status code.
updateColumnStatisticsForTableResponse_httpStatus :: Lens' UpdateColumnStatisticsForTableResponse Int

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
deleteColumnStatisticsForTable_catalogId :: Lens' DeleteColumnStatisticsForTable (Maybe Text)

-- | The name of the catalog database where the partitions reside.
deleteColumnStatisticsForTable_databaseName :: Lens' DeleteColumnStatisticsForTable Text

-- | The name of the partitions' table.
deleteColumnStatisticsForTable_tableName :: Lens' DeleteColumnStatisticsForTable Text

-- | The name of the column.
deleteColumnStatisticsForTable_columnName :: Lens' DeleteColumnStatisticsForTable Text

-- | The response's http status code.
deleteColumnStatisticsForTableResponse_httpStatus :: Lens' DeleteColumnStatisticsForTableResponse Int

-- | The ID of the Data Catalog in which the connection resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
deleteConnection_catalogId :: Lens' DeleteConnection (Maybe Text)

-- | The name of the connection to delete.
deleteConnection_connectionName :: Lens' DeleteConnection Text

-- | The response's http status code.
deleteConnectionResponse_httpStatus :: Lens' DeleteConnectionResponse Int

-- | The ID of the Data Catalog in which the connection resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
updateConnection_catalogId :: Lens' UpdateConnection (Maybe Text)

-- | The name of the connection definition to update.
updateConnection_name :: Lens' UpdateConnection Text

-- | A <tt>ConnectionInput</tt> object that redefines the connection in
--   question.
updateConnection_connectionInput :: Lens' UpdateConnection ConnectionInput

-- | The response's http status code.
updateConnectionResponse_httpStatus :: Lens' UpdateConnectionResponse Int

-- | The ID of the Data Catalog where the functions to be retrieved are
--   located. If none is provided, the Amazon Web Services account ID is
--   used by default.
getUserDefinedFunctions_catalogId :: Lens' GetUserDefinedFunctions (Maybe Text)

-- | A continuation token, if this is a continuation call.
getUserDefinedFunctions_nextToken :: Lens' GetUserDefinedFunctions (Maybe Text)

-- | The name of the catalog database where the functions are located. If
--   none is provided, functions from all the databases across the catalog
--   will be returned.
getUserDefinedFunctions_databaseName :: Lens' GetUserDefinedFunctions (Maybe Text)

-- | The maximum number of functions to return in one response.
getUserDefinedFunctions_maxResults :: Lens' GetUserDefinedFunctions (Maybe Natural)

-- | An optional function-name pattern string that filters the function
--   definitions returned.
getUserDefinedFunctions_pattern :: Lens' GetUserDefinedFunctions Text

-- | A continuation token, if the list of functions returned does not
--   include the last requested function.
getUserDefinedFunctionsResponse_nextToken :: Lens' GetUserDefinedFunctionsResponse (Maybe Text)

-- | A list of requested function definitions.
getUserDefinedFunctionsResponse_userDefinedFunctions :: Lens' GetUserDefinedFunctionsResponse (Maybe [UserDefinedFunction])

-- | The response's http status code.
getUserDefinedFunctionsResponse_httpStatus :: Lens' GetUserDefinedFunctionsResponse Int

-- | The Amazon Resource Name (ARN) of the resource for which to retrieve
--   tags.
getTags_resourceArn :: Lens' GetTags Text

-- | The requested tags.
getTagsResponse_tags :: Lens' GetTagsResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getTagsResponse_httpStatus :: Lens' GetTagsResponse Int

-- | The ID of the Data Catalog to retrieve the security configuration for.
--   If none is provided, the Amazon Web Services account ID is used by
--   default.
getDataCatalogEncryptionSettings_catalogId :: Lens' GetDataCatalogEncryptionSettings (Maybe Text)

-- | The requested security configuration.
getDataCatalogEncryptionSettingsResponse_dataCatalogEncryptionSettings :: Lens' GetDataCatalogEncryptionSettingsResponse (Maybe DataCatalogEncryptionSettings)

-- | The response's http status code.
getDataCatalogEncryptionSettingsResponse_httpStatus :: Lens' GetDataCatalogEncryptionSettingsResponse Int

-- | The ID of the catalog in which the partition is to be created.
--   Currently, this should be the Amazon Web Services account ID.
batchCreatePartition_catalogId :: Lens' BatchCreatePartition (Maybe Text)

-- | The name of the metadata database in which the partition is to be
--   created.
batchCreatePartition_databaseName :: Lens' BatchCreatePartition Text

-- | The name of the metadata table in which the partition is to be
--   created.
batchCreatePartition_tableName :: Lens' BatchCreatePartition Text

-- | A list of <tt>PartitionInput</tt> structures that define the
--   partitions to be created.
batchCreatePartition_partitionInputList :: Lens' BatchCreatePartition [PartitionInput]

-- | The errors encountered when trying to create the requested partitions.
batchCreatePartitionResponse_errors :: Lens' BatchCreatePartitionResponse (Maybe [PartitionError])

-- | The response's http status code.
batchCreatePartitionResponse_httpStatus :: Lens' BatchCreatePartitionResponse Int

-- | A list of target tables.
getMapping_sinks :: Lens' GetMapping (Maybe [CatalogEntry])

-- | Parameters for the mapping.
getMapping_location :: Lens' GetMapping (Maybe Location)

-- | Specifies the source table.
getMapping_source :: Lens' GetMapping CatalogEntry

-- | The response's http status code.
getMappingResponse_httpStatus :: Lens' GetMappingResponse Int

-- | A list of mappings to the specified targets.
getMappingResponse_mapping :: Lens' GetMappingResponse [MappingEntry]

-- | Name of the workflow to be deleted.
deleteWorkflow_name :: Lens' DeleteWorkflow Text

-- | Name of the workflow specified in input.
deleteWorkflowResponse_name :: Lens' DeleteWorkflowResponse (Maybe Text)

-- | The response's http status code.
deleteWorkflowResponse_httpStatus :: Lens' DeleteWorkflowResponse Int

-- | You can use this parameter to prevent unwanted multiple updates to
--   data, to control costs, or in some cases, to prevent exceeding the
--   maximum number of concurrent runs of any of the component jobs. If you
--   leave this parameter blank, there is no limit to the number of
--   concurrent workflow runs.
updateWorkflow_maxConcurrentRuns :: Lens' UpdateWorkflow (Maybe Int)

-- | A collection of properties to be used as part of each execution of the
--   workflow.
updateWorkflow_defaultRunProperties :: Lens' UpdateWorkflow (Maybe (HashMap Text Text))

-- | The description of the workflow.
updateWorkflow_description :: Lens' UpdateWorkflow (Maybe Text)

-- | Name of the workflow to be updated.
updateWorkflow_name :: Lens' UpdateWorkflow Text

-- | The name of the workflow which was specified in input.
updateWorkflowResponse_name :: Lens' UpdateWorkflowResponse (Maybe Text)

-- | The response's http status code.
updateWorkflowResponse_httpStatus :: Lens' UpdateWorkflowResponse Int

-- | The ID value of the table version to be retrieved. A
--   <tt>VersionID</tt> is a string representation of an integer. Each
--   version is incremented by 1.
getTableVersion_versionId :: Lens' GetTableVersion (Maybe Text)

-- | The ID of the Data Catalog where the tables reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
getTableVersion_catalogId :: Lens' GetTableVersion (Maybe Text)

-- | The database in the catalog in which the table resides. For Hive
--   compatibility, this name is entirely lowercase.
getTableVersion_databaseName :: Lens' GetTableVersion Text

-- | The name of the table. For Hive compatibility, this name is entirely
--   lowercase.
getTableVersion_tableName :: Lens' GetTableVersion Text

-- | The requested table version.
getTableVersionResponse_tableVersion :: Lens' GetTableVersionResponse (Maybe TableVersion)

-- | The response's http status code.
getTableVersionResponse_httpStatus :: Lens' GetTableVersionResponse Int

-- | The name for the new security configuration.
createSecurityConfiguration_name :: Lens' CreateSecurityConfiguration Text

-- | The encryption configuration for the new security configuration.
createSecurityConfiguration_encryptionConfiguration :: Lens' CreateSecurityConfiguration EncryptionConfiguration

-- | The name assigned to the new security configuration.
createSecurityConfigurationResponse_name :: Lens' CreateSecurityConfigurationResponse (Maybe Text)

-- | The time at which the new security configuration was created.
createSecurityConfigurationResponse_createdTimestamp :: Lens' CreateSecurityConfigurationResponse (Maybe UTCTime)

-- | The response's http status code.
createSecurityConfigurationResponse_httpStatus :: Lens' CreateSecurityConfigurationResponse Int

-- | The name of the workflow to start.
startWorkflowRun_name :: Lens' StartWorkflowRun Text

-- | An Id for the new run.
startWorkflowRunResponse_runId :: Lens' StartWorkflowRunResponse (Maybe Text)

-- | The response's http status code.
startWorkflowRunResponse_httpStatus :: Lens' StartWorkflowRunResponse Int

-- | A continuation token, if this is a continuation call.
getJobs_nextToken :: Lens' GetJobs (Maybe Text)

-- | The maximum size of the response.
getJobs_maxResults :: Lens' GetJobs (Maybe Natural)

-- | A continuation token, if not all job definitions have yet been
--   returned.
getJobsResponse_nextToken :: Lens' GetJobsResponse (Maybe Text)

-- | A list of job definitions.
getJobsResponse_jobs :: Lens' GetJobsResponse (Maybe [Job])

-- | The response's http status code.
getJobsResponse_httpStatus :: Lens' GetJobsResponse Int

-- | Specifies whether to include a graph when returning the workflow
--   resource metadata.
batchGetWorkflows_includeGraph :: Lens' BatchGetWorkflows (Maybe Bool)

-- | A list of workflow names, which may be the names returned from the
--   <tt>ListWorkflows</tt> operation.
batchGetWorkflows_names :: Lens' BatchGetWorkflows (NonEmpty Text)

-- | A list of names of workflows not found.
batchGetWorkflowsResponse_missingWorkflows :: Lens' BatchGetWorkflowsResponse (Maybe (NonEmpty Text))

-- | A list of workflow resource metadata.
batchGetWorkflowsResponse_workflows :: Lens' BatchGetWorkflowsResponse (Maybe (NonEmpty Workflow))

-- | The response's http status code.
batchGetWorkflowsResponse_httpStatus :: Lens' BatchGetWorkflowsResponse Int

-- | An optional continuation token.
getClassifiers_nextToken :: Lens' GetClassifiers (Maybe Text)

-- | The size of the list to return (optional).
getClassifiers_maxResults :: Lens' GetClassifiers (Maybe Natural)

-- | A continuation token.
getClassifiersResponse_nextToken :: Lens' GetClassifiersResponse (Maybe Text)

-- | The requested list of classifier objects.
getClassifiersResponse_classifiers :: Lens' GetClassifiersResponse (Maybe [Classifier])

-- | The response's http status code.
getClassifiersResponse_httpStatus :: Lens' GetClassifiersResponse Int

-- | A continuation token, if this is a continuation request.
getResourcePolicies_nextToken :: Lens' GetResourcePolicies (Maybe Text)

-- | The maximum size of a list to return.
getResourcePolicies_maxResults :: Lens' GetResourcePolicies (Maybe Natural)

-- | A list of the individual resource policies and the account-level
--   resource policy.
getResourcePoliciesResponse_getResourcePoliciesResponseList :: Lens' GetResourcePoliciesResponse (Maybe [GluePolicy])

-- | A continuation token, if the returned list does not contain the last
--   resource policy available.
getResourcePoliciesResponse_nextToken :: Lens' GetResourcePoliciesResponse (Maybe Text)

-- | The response's http status code.
getResourcePoliciesResponse_httpStatus :: Lens' GetResourcePoliciesResponse Int

-- | The ID of the Data Catalog in which to create the connection. If none
--   is provided, the Amazon Web Services account ID is used by default.
createConnection_catalogId :: Lens' CreateConnection (Maybe Text)

-- | The tags you assign to the connection.
createConnection_tags :: Lens' CreateConnection (Maybe (HashMap Text Text))

-- | A <tt>ConnectionInput</tt> object defining the connection to create.
createConnection_connectionInput :: Lens' CreateConnection ConnectionInput

-- | The response's http status code.
createConnectionResponse_httpStatus :: Lens' CreateConnectionResponse Int

-- | A continuation token, if this is a continuation call.
listSchemaVersions_nextToken :: Lens' ListSchemaVersions (Maybe Text)

-- | Maximum number of results required per page. If the value is not
--   supplied, this will be defaulted to 25 per page.
listSchemaVersions_maxResults :: Lens' ListSchemaVersions (Maybe Natural)

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   Either <tt>SchemaArn</tt> or <tt>SchemaName</tt> and
--   <tt>RegistryName</tt> has to be provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. Either
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> and <tt>RegistryName</tt>
--   has to be provided.</li>
--   </ul>
listSchemaVersions_schemaId :: Lens' ListSchemaVersions SchemaId

-- | An array of <tt>SchemaVersionList</tt> objects containing details of
--   each schema version.
listSchemaVersionsResponse_schemas :: Lens' ListSchemaVersionsResponse (Maybe [SchemaVersionListItem])

-- | A continuation token for paginating the returned list of tokens,
--   returned if the current segment of the list is not the last.
listSchemaVersionsResponse_nextToken :: Lens' ListSchemaVersionsResponse (Maybe Text)

-- | The response's http status code.
listSchemaVersionsResponse_httpStatus :: Lens' ListSchemaVersionsResponse Int

-- | Name of the workflow which was run.
getWorkflowRunProperties_name :: Lens' GetWorkflowRunProperties Text

-- | The ID of the workflow run whose run properties should be returned.
getWorkflowRunProperties_runId :: Lens' GetWorkflowRunProperties Text

-- | The workflow run properties which were set during the specified run.
getWorkflowRunPropertiesResponse_runProperties :: Lens' GetWorkflowRunPropertiesResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getWorkflowRunPropertiesResponse_httpStatus :: Lens' GetWorkflowRunPropertiesResponse Int

-- | The list of <tt>DevEndpoint</tt> names, which might be the names
--   returned from the <tt>ListDevEndpoint</tt> operation.
batchGetDevEndpoints_devEndpointNames :: Lens' BatchGetDevEndpoints (NonEmpty Text)

-- | A list of <tt>DevEndpoints</tt> not found.
batchGetDevEndpointsResponse_devEndpointsNotFound :: Lens' BatchGetDevEndpointsResponse (Maybe (NonEmpty Text))

-- | A list of <tt>DevEndpoint</tt> definitions.
batchGetDevEndpointsResponse_devEndpoints :: Lens' BatchGetDevEndpointsResponse (Maybe [DevEndpoint])

-- | The response's http status code.
batchGetDevEndpointsResponse_httpStatus :: Lens' BatchGetDevEndpointsResponse Int

-- | The catalog ID where the table resides.
deletePartitionIndex_catalogId :: Lens' DeletePartitionIndex (Maybe Text)

-- | Specifies the name of a database from which you want to delete a
--   partition index.
deletePartitionIndex_databaseName :: Lens' DeletePartitionIndex Text

-- | Specifies the name of a table from which you want to delete a
--   partition index.
deletePartitionIndex_tableName :: Lens' DeletePartitionIndex Text

-- | The name of the partition index to be deleted.
deletePartitionIndex_indexName :: Lens' DeletePartitionIndex Text

-- | The response's http status code.
deletePartitionIndexResponse_httpStatus :: Lens' DeletePartitionIndexResponse Int

-- | The ID of the Data Catalog where the tables reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
deleteTableVersion_catalogId :: Lens' DeleteTableVersion (Maybe Text)

-- | The database in the catalog in which the table resides. For Hive
--   compatibility, this name is entirely lowercase.
deleteTableVersion_databaseName :: Lens' DeleteTableVersion Text

-- | The name of the table. For Hive compatibility, this name is entirely
--   lowercase.
deleteTableVersion_tableName :: Lens' DeleteTableVersion Text

-- | The ID of the table version to be deleted. A <tt>VersionID</tt> is a
--   string representation of an integer. Each version is incremented by 1.
deleteTableVersion_versionId :: Lens' DeleteTableVersion Text

-- | The response's http status code.
deleteTableVersionResponse_httpStatus :: Lens' DeleteTableVersionResponse Int

-- | The name of the <tt>DevEndpoint</tt>.
deleteDevEndpoint_endpointName :: Lens' DeleteDevEndpoint Text

-- | The response's http status code.
deleteDevEndpointResponse_httpStatus :: Lens' DeleteDevEndpointResponse Int

-- | The list of public keys for the <tt>DevEndpoint</tt> to use.
updateDevEndpoint_addPublicKeys :: Lens' UpdateDevEndpoint (Maybe [Text])

-- | Custom Python or Java libraries to be loaded in the
--   <tt>DevEndpoint</tt>.
updateDevEndpoint_customLibraries :: Lens' UpdateDevEndpoint (Maybe DevEndpointCustomLibraries)

-- | The public key for the <tt>DevEndpoint</tt> to use.
updateDevEndpoint_publicKey :: Lens' UpdateDevEndpoint (Maybe Text)

-- | The list of argument keys to be deleted from the map of arguments used
--   to configure the <tt>DevEndpoint</tt>.
updateDevEndpoint_deleteArguments :: Lens' UpdateDevEndpoint (Maybe [Text])

-- | The list of public keys to be deleted from the <tt>DevEndpoint</tt>.
updateDevEndpoint_deletePublicKeys :: Lens' UpdateDevEndpoint (Maybe [Text])

-- | <tt>True</tt> if the list of custom libraries to be loaded in the
--   development endpoint needs to be updated, or <tt>False</tt> if
--   otherwise.
updateDevEndpoint_updateEtlLibraries :: Lens' UpdateDevEndpoint (Maybe Bool)

-- | The map of arguments to add the map of arguments used to configure the
--   <tt>DevEndpoint</tt>.
--   
--   Valid arguments are:
--   
--   <ul>
--   <li><pre>"--enable-glue-datacatalog": ""</pre></li>
--   </ul>
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
updateDevEndpoint_addArguments :: Lens' UpdateDevEndpoint (Maybe (HashMap Text Text))

-- | The name of the <tt>DevEndpoint</tt> to be updated.
updateDevEndpoint_endpointName :: Lens' UpdateDevEndpoint Text

-- | The response's http status code.
updateDevEndpointResponse_httpStatus :: Lens' UpdateDevEndpointResponse Int

-- | Specifies whether to include a graph when returning the workflow
--   resource metadata.
getWorkflow_includeGraph :: Lens' GetWorkflow (Maybe Bool)

-- | The name of the workflow to retrieve.
getWorkflow_name :: Lens' GetWorkflow Text

-- | The resource metadata for the workflow.
getWorkflowResponse_workflow :: Lens' GetWorkflowResponse (Maybe Workflow)

-- | The response's http status code.
getWorkflowResponse_httpStatus :: Lens' GetWorkflowResponse Int

-- | A list of crawler names, which might be the names returned from the
--   <tt>ListCrawlers</tt> operation.
batchGetCrawlers_crawlerNames :: Lens' BatchGetCrawlers [Text]

-- | A list of names of crawlers that were not found.
batchGetCrawlersResponse_crawlersNotFound :: Lens' BatchGetCrawlersResponse (Maybe [Text])

-- | A list of crawler definitions.
batchGetCrawlersResponse_crawlers :: Lens' BatchGetCrawlersResponse (Maybe [Crawler])

-- | The response's http status code.
batchGetCrawlersResponse_httpStatus :: Lens' BatchGetCrawlersResponse Int

-- | The unique run identifier associated with this job run.
getJobBookmark_runId :: Lens' GetJobBookmark (Maybe Text)

-- | The name of the job in question.
getJobBookmark_jobName :: Lens' GetJobBookmark Text

-- | A structure that defines a point that a job can resume processing.
getJobBookmarkResponse_jobBookmarkEntry :: Lens' GetJobBookmarkResponse (Maybe JobBookmarkEntry)

-- | The response's http status code.
getJobBookmarkResponse_httpStatus :: Lens' GetJobBookmarkResponse Int

-- | The name of the crawler to remove.
deleteCrawler_name :: Lens' DeleteCrawler Text

-- | The response's http status code.
deleteCrawlerResponse_httpStatus :: Lens' DeleteCrawlerResponse Int

-- | The policy for the crawler's update and deletion behavior.
updateCrawler_schemaChangePolicy :: Lens' UpdateCrawler (Maybe SchemaChangePolicy)

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
updateCrawler_schedule :: Lens' UpdateCrawler (Maybe Text)

-- | A policy that specifies whether to crawl the entire dataset again, or
--   to crawl only folders that were added since the last crawler run.
updateCrawler_recrawlPolicy :: Lens' UpdateCrawler (Maybe RecrawlPolicy)

-- | A list of custom classifiers that the user has registered. By default,
--   all built-in classifiers are included in a crawl, but these custom
--   classifiers always override the default classifiers for a given
--   classification.
updateCrawler_classifiers :: Lens' UpdateCrawler (Maybe [Text])

-- | The IAM role or Amazon Resource Name (ARN) of an IAM role that is used
--   by the new crawler to access customer resources.
updateCrawler_role :: Lens' UpdateCrawler (Maybe Text)

-- | A list of targets to crawl.
updateCrawler_targets :: Lens' UpdateCrawler (Maybe CrawlerTargets)

-- | The Glue database where results are stored, such as:
--   <tt>arn:aws:daylight:us-east-1::database/sometable/*</tt>.
updateCrawler_databaseName :: Lens' UpdateCrawler (Maybe Text)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used by
--   this crawler.
updateCrawler_crawlerSecurityConfiguration :: Lens' UpdateCrawler (Maybe Text)

-- | Specifies data lineage configuration settings for the crawler.
updateCrawler_lineageConfiguration :: Lens' UpdateCrawler (Maybe LineageConfiguration)

-- | Crawler configuration information. This versioned JSON string allows
--   users to specify aspects of a crawler's behavior. For more
--   information, see <a>Configuring a Crawler</a>.
updateCrawler_configuration :: Lens' UpdateCrawler (Maybe Text)

-- | The table prefix used for catalog tables that are created.
updateCrawler_tablePrefix :: Lens' UpdateCrawler (Maybe Text)

-- | A description of the new crawler.
updateCrawler_description :: Lens' UpdateCrawler (Maybe Text)

-- | Name of the new crawler.
updateCrawler_name :: Lens' UpdateCrawler Text

-- | The response's http status code.
updateCrawlerResponse_httpStatus :: Lens' UpdateCrawlerResponse Int

-- | The unique identifier of the machine learning transform.
startExportLabelsTaskRun_transformId :: Lens' StartExportLabelsTaskRun Text

-- | The Amazon S3 path where you export the labels.
startExportLabelsTaskRun_outputS3Path :: Lens' StartExportLabelsTaskRun Text

-- | The unique identifier for the task run.
startExportLabelsTaskRunResponse_taskRunId :: Lens' StartExportLabelsTaskRunResponse (Maybe Text)

-- | The response's http status code.
startExportLabelsTaskRunResponse_httpStatus :: Lens' StartExportLabelsTaskRunResponse Int

-- | The name of the security configuration to retrieve.
getSecurityConfiguration_name :: Lens' GetSecurityConfiguration Text

-- | The requested security configuration.
getSecurityConfigurationResponse_securityConfiguration :: Lens' GetSecurityConfigurationResponse (Maybe SecurityConfiguration)

-- | The response's http status code.
getSecurityConfigurationResponse_httpStatus :: Lens' GetSecurityConfigurationResponse Int

-- | The catalog ID where the table resides.
createPartitionIndex_catalogId :: Lens' CreatePartitionIndex (Maybe Text)

-- | Specifies the name of a database in which you want to create a
--   partition index.
createPartitionIndex_databaseName :: Lens' CreatePartitionIndex Text

-- | Specifies the name of a table in which you want to create a partition
--   index.
createPartitionIndex_tableName :: Lens' CreatePartitionIndex Text

-- | Specifies a <tt>PartitionIndex</tt> structure to create a partition
--   index in an existing table.
createPartitionIndex_partitionIndex :: Lens' CreatePartitionIndex PartitionIndex

-- | The response's http status code.
createPartitionIndexResponse_httpStatus :: Lens' CreatePartitionIndexResponse Int

-- | The name of the blueprint.
getBlueprintRun_blueprintName :: Lens' GetBlueprintRun Text

-- | The run ID for the blueprint run you want to retrieve.
getBlueprintRun_runId :: Lens' GetBlueprintRun Text

-- | Returns a <tt>BlueprintRun</tt> object.
getBlueprintRunResponse_blueprintRun :: Lens' GetBlueprintRunResponse (Maybe BlueprintRun)

-- | The response's http status code.
getBlueprintRunResponse_httpStatus :: Lens' GetBlueprintRunResponse Int

-- | The unique version ID of the schema version.
removeSchemaVersionMetadata_schemaVersionId :: Lens' RemoveSchemaVersionMetadata (Maybe Text)

-- | A wrapper structure that may contain the schema name and Amazon
--   Resource Name (ARN).
removeSchemaVersionMetadata_schemaId :: Lens' RemoveSchemaVersionMetadata (Maybe SchemaId)

-- | The version number of the schema.
removeSchemaVersionMetadata_schemaVersionNumber :: Lens' RemoveSchemaVersionMetadata (Maybe SchemaVersionNumber)

-- | The value of the metadata key.
removeSchemaVersionMetadata_metadataKeyValue :: Lens' RemoveSchemaVersionMetadata MetadataKeyValuePair

-- | The name of the registry.
removeSchemaVersionMetadataResponse_registryName :: Lens' RemoveSchemaVersionMetadataResponse (Maybe Text)

-- | The name of the schema.
removeSchemaVersionMetadataResponse_schemaName :: Lens' RemoveSchemaVersionMetadataResponse (Maybe Text)

-- | The version ID for the schema version.
removeSchemaVersionMetadataResponse_schemaVersionId :: Lens' RemoveSchemaVersionMetadataResponse (Maybe Text)

-- | The version number of the schema.
removeSchemaVersionMetadataResponse_versionNumber :: Lens' RemoveSchemaVersionMetadataResponse (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the schema.
removeSchemaVersionMetadataResponse_schemaArn :: Lens' RemoveSchemaVersionMetadataResponse (Maybe Text)

-- | The metadata key.
removeSchemaVersionMetadataResponse_metadataKey :: Lens' RemoveSchemaVersionMetadataResponse (Maybe Text)

-- | The value of the metadata key.
removeSchemaVersionMetadataResponse_metadataValue :: Lens' RemoveSchemaVersionMetadataResponse (Maybe Text)

-- | The latest version of the schema.
removeSchemaVersionMetadataResponse_latestVersion :: Lens' RemoveSchemaVersionMetadataResponse (Maybe Bool)

-- | The response's http status code.
removeSchemaVersionMetadataResponse_httpStatus :: Lens' RemoveSchemaVersionMetadataResponse Int

-- | A wrapper structure that may contain the registry name and Amazon
--   Resource Name (ARN).
listSchemas_registryId :: Lens' ListSchemas (Maybe RegistryId)

-- | A continuation token, if this is a continuation call.
listSchemas_nextToken :: Lens' ListSchemas (Maybe Text)

-- | Maximum number of results required per page. If the value is not
--   supplied, this will be defaulted to 25 per page.
listSchemas_maxResults :: Lens' ListSchemas (Maybe Natural)

-- | An array of <tt>SchemaListItem</tt> objects containing details of each
--   schema.
listSchemasResponse_schemas :: Lens' ListSchemasResponse (Maybe [SchemaListItem])

-- | A continuation token for paginating the returned list of tokens,
--   returned if the current segment of the list is not the last.
listSchemasResponse_nextToken :: Lens' ListSchemasResponse (Maybe Text)

-- | The response's http status code.
listSchemasResponse_httpStatus :: Lens' ListSchemasResponse Int

-- | The ID of the Data Catalog in which the connection resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
getConnection_catalogId :: Lens' GetConnection (Maybe Text)

-- | Allows you to retrieve the connection metadata without returning the
--   password. For instance, the AWS Glue console uses this flag to
--   retrieve the connection, and does not display the password. Set this
--   parameter when the caller might not have permission to use the KMS key
--   to decrypt the password, but it does have permission to access the
--   rest of the connection properties.
getConnection_hidePassword :: Lens' GetConnection (Maybe Bool)

-- | The name of the connection definition to retrieve.
getConnection_name :: Lens' GetConnection Text

-- | The requested connection definition.
getConnectionResponse_connection :: Lens' GetConnectionResponse (Maybe Connection)

-- | The response's http status code.
getConnectionResponse_httpStatus :: Lens' GetConnectionResponse Int

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
getColumnStatisticsForTable_catalogId :: Lens' GetColumnStatisticsForTable (Maybe Text)

-- | The name of the catalog database where the partitions reside.
getColumnStatisticsForTable_databaseName :: Lens' GetColumnStatisticsForTable Text

-- | The name of the partitions' table.
getColumnStatisticsForTable_tableName :: Lens' GetColumnStatisticsForTable Text

-- | A list of the column names.
getColumnStatisticsForTable_columnNames :: Lens' GetColumnStatisticsForTable [Text]

-- | List of ColumnStatistics that failed to be retrieved.
getColumnStatisticsForTableResponse_errors :: Lens' GetColumnStatisticsForTableResponse (Maybe [ColumnError])

-- | List of ColumnStatistics that failed to be retrieved.
getColumnStatisticsForTableResponse_columnStatisticsList :: Lens' GetColumnStatisticsForTableResponse (Maybe [ColumnStatistics])

-- | The response's http status code.
getColumnStatisticsForTableResponse_httpStatus :: Lens' GetColumnStatisticsForTableResponse Int

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
batchGetPartition_catalogId :: Lens' BatchGetPartition (Maybe Text)

-- | The name of the catalog database where the partitions reside.
batchGetPartition_databaseName :: Lens' BatchGetPartition Text

-- | The name of the partitions' table.
batchGetPartition_tableName :: Lens' BatchGetPartition Text

-- | A list of partition values identifying the partitions to retrieve.
batchGetPartition_partitionsToGet :: Lens' BatchGetPartition [PartitionValueList]

-- | A list of the partition values in the request for which partitions
--   were not returned.
batchGetPartitionResponse_unprocessedKeys :: Lens' BatchGetPartitionResponse (Maybe [PartitionValueList])

-- | A list of the requested partitions.
batchGetPartitionResponse_partitions :: Lens' BatchGetPartitionResponse (Maybe [Partition])

-- | The response's http status code.
batchGetPartitionResponse_httpStatus :: Lens' BatchGetPartitionResponse Int

-- | The name of the trigger to stop.
stopTrigger_name :: Lens' StopTrigger Text

-- | The name of the trigger that was stopped.
stopTriggerResponse_name :: Lens' StopTriggerResponse (Maybe Text)

-- | The response's http status code.
stopTriggerResponse_httpStatus :: Lens' StopTriggerResponse Int

-- | The updated <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
updateCrawlerSchedule_schedule :: Lens' UpdateCrawlerSchedule (Maybe Text)

-- | The name of the crawler whose schedule to update.
updateCrawlerSchedule_crawlerName :: Lens' UpdateCrawlerSchedule Text

-- | The response's http status code.
updateCrawlerScheduleResponse_httpStatus :: Lens' UpdateCrawlerScheduleResponse Int

-- | The unique identifier of the machine learning transform.
startMLEvaluationTaskRun_transformId :: Lens' StartMLEvaluationTaskRun Text

-- | The unique identifier associated with this run.
startMLEvaluationTaskRunResponse_taskRunId :: Lens' StartMLEvaluationTaskRunResponse (Maybe Text)

-- | The response's http status code.
startMLEvaluationTaskRunResponse_httpStatus :: Lens' StartMLEvaluationTaskRunResponse Int

-- | The ID of the Data Catalog where the function to be deleted is
--   located. If none is supplied, the Amazon Web Services account ID is
--   used by default.
deleteUserDefinedFunction_catalogId :: Lens' DeleteUserDefinedFunction (Maybe Text)

-- | The name of the catalog database where the function is located.
deleteUserDefinedFunction_databaseName :: Lens' DeleteUserDefinedFunction Text

-- | The name of the function definition to be deleted.
deleteUserDefinedFunction_functionName :: Lens' DeleteUserDefinedFunction Text

-- | The response's http status code.
deleteUserDefinedFunctionResponse_httpStatus :: Lens' DeleteUserDefinedFunctionResponse Int

-- | The ID of the Data Catalog where the function to be updated is
--   located. If none is provided, the Amazon Web Services account ID is
--   used by default.
updateUserDefinedFunction_catalogId :: Lens' UpdateUserDefinedFunction (Maybe Text)

-- | The name of the catalog database where the function to be updated is
--   located.
updateUserDefinedFunction_databaseName :: Lens' UpdateUserDefinedFunction Text

-- | The name of the function.
updateUserDefinedFunction_functionName :: Lens' UpdateUserDefinedFunction Text

-- | A <tt>FunctionInput</tt> object that redefines the function in the
--   Data Catalog.
updateUserDefinedFunction_functionInput :: Lens' UpdateUserDefinedFunction UserDefinedFunctionInput

-- | The response's http status code.
updateUserDefinedFunctionResponse_httpStatus :: Lens' UpdateUserDefinedFunctionResponse Int

-- | This is a wrapper structure that may contain the registry name and
--   Amazon Resource Name (ARN).
getRegistry_registryId :: Lens' GetRegistry RegistryId

-- | The status of the registry.
getRegistryResponse_status :: Lens' GetRegistryResponse (Maybe RegistryStatus)

-- | The name of the registry.
getRegistryResponse_registryName :: Lens' GetRegistryResponse (Maybe Text)

-- | The date and time the registry was created.
getRegistryResponse_createdTime :: Lens' GetRegistryResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the registry.
getRegistryResponse_registryArn :: Lens' GetRegistryResponse (Maybe Text)

-- | The date and time the registry was updated.
getRegistryResponse_updatedTime :: Lens' GetRegistryResponse (Maybe Text)

-- | A description of the registry.
getRegistryResponse_description :: Lens' GetRegistryResponse (Maybe Text)

-- | The response's http status code.
getRegistryResponse_httpStatus :: Lens' GetRegistryResponse Int

-- | The ID of the Data Catalog where the table resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
batchDeleteTable_catalogId :: Lens' BatchDeleteTable (Maybe Text)

-- | The name of the catalog database in which the tables to delete reside.
--   For Hive compatibility, this name is entirely lowercase.
batchDeleteTable_databaseName :: Lens' BatchDeleteTable Text

-- | A list of the table to delete.
batchDeleteTable_tablesToDelete :: Lens' BatchDeleteTable [Text]

-- | A list of errors encountered in attempting to delete the specified
--   tables.
batchDeleteTableResponse_errors :: Lens' BatchDeleteTableResponse (Maybe [TableError])

-- | The response's http status code.
batchDeleteTableResponse_httpStatus :: Lens' BatchDeleteTableResponse Int

-- | The unique identifier of the machine learning transform.
cancelMLTaskRun_transformId :: Lens' CancelMLTaskRun Text

-- | A unique identifier for the task run.
cancelMLTaskRun_taskRunId :: Lens' CancelMLTaskRun Text

-- | The status for this run.
cancelMLTaskRunResponse_status :: Lens' CancelMLTaskRunResponse (Maybe TaskStatusType)

-- | The unique identifier of the machine learning transform.
cancelMLTaskRunResponse_transformId :: Lens' CancelMLTaskRunResponse (Maybe Text)

-- | The unique identifier for the task run.
cancelMLTaskRunResponse_taskRunId :: Lens' CancelMLTaskRunResponse (Maybe Text)

-- | The response's http status code.
cancelMLTaskRunResponse_httpStatus :: Lens' CancelMLTaskRunResponse Int

-- | The ID of the Data Catalog where the tables reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
getTables_catalogId :: Lens' GetTables (Maybe Text)

-- | A continuation token, included if this is a continuation call.
getTables_nextToken :: Lens' GetTables (Maybe Text)

-- | A regular expression pattern. If present, only those tables whose
--   names match the pattern are returned.
getTables_expression :: Lens' GetTables (Maybe Text)

-- | The maximum number of tables to return in a single response.
getTables_maxResults :: Lens' GetTables (Maybe Natural)

-- | The database in the catalog whose tables to list. For Hive
--   compatibility, this name is entirely lowercase.
getTables_databaseName :: Lens' GetTables Text

-- | A list of the requested <tt>Table</tt> objects.
getTablesResponse_tableList :: Lens' GetTablesResponse (Maybe [Table])

-- | A continuation token, present if the current list segment is not the
--   last.
getTablesResponse_nextToken :: Lens' GetTablesResponse (Maybe Text)

-- | The response's http status code.
getTablesResponse_httpStatus :: Lens' GetTablesResponse Int

-- | The name of the workflow to resume.
resumeWorkflowRun_name :: Lens' ResumeWorkflowRun Text

-- | The ID of the workflow run to resume.
resumeWorkflowRun_runId :: Lens' ResumeWorkflowRun Text

-- | A list of the node IDs for the nodes you want to restart. The nodes
--   that are to be restarted must have a run attempt in the original run.
resumeWorkflowRun_nodeIds :: Lens' ResumeWorkflowRun [Text]

-- | A list of the node IDs for the nodes that were actually restarted.
resumeWorkflowRunResponse_nodeIds :: Lens' ResumeWorkflowRunResponse (Maybe [Text])

-- | The new ID assigned to the resumed workflow run. Each resume of a
--   workflow run will have a new run ID.
resumeWorkflowRunResponse_runId :: Lens' ResumeWorkflowRunResponse (Maybe Text)

-- | The response's http status code.
resumeWorkflowRunResponse_httpStatus :: Lens' ResumeWorkflowRunResponse Int

-- | A <tt>GrokClassifier</tt> object specifying the classifier to create.
createClassifier_grokClassifier :: Lens' CreateClassifier (Maybe CreateGrokClassifierRequest)

-- | An <tt>XMLClassifier</tt> object specifying the classifier to create.
createClassifier_xMLClassifier :: Lens' CreateClassifier (Maybe CreateXMLClassifierRequest)

-- | A <tt>CsvClassifier</tt> object specifying the classifier to create.
createClassifier_csvClassifier :: Lens' CreateClassifier (Maybe CreateCsvClassifierRequest)

-- | A <tt>JsonClassifier</tt> object specifying the classifier to create.
createClassifier_jsonClassifier :: Lens' CreateClassifier (Maybe CreateJsonClassifierRequest)

-- | The response's http status code.
createClassifierResponse_httpStatus :: Lens' CreateClassifierResponse Int

-- | The ID of the Data Catalog in which the connections reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
batchDeleteConnection_catalogId :: Lens' BatchDeleteConnection (Maybe Text)

-- | A list of names of the connections to delete.
batchDeleteConnection_connectionNameList :: Lens' BatchDeleteConnection [Text]

-- | A list of names of the connection definitions that were successfully
--   deleted.
batchDeleteConnectionResponse_succeeded :: Lens' BatchDeleteConnectionResponse (Maybe [Text])

-- | A map of the names of connections that were not successfully deleted
--   to error details.
batchDeleteConnectionResponse_errors :: Lens' BatchDeleteConnectionResponse (Maybe (HashMap Text ErrorDetail))

-- | The response's http status code.
batchDeleteConnectionResponse_httpStatus :: Lens' BatchDeleteConnectionResponse Int

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
createJob_numberOfWorkers :: Lens' CreateJob (Maybe Int)

-- | Specifies configuration properties of a job notification.
createJob_notificationProperty :: Lens' CreateJob (Maybe NotificationProperty)

-- | The connections used for this job.
createJob_connections :: Lens' CreateJob (Maybe ConnectionsList)

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
createJob_workerType :: Lens' CreateJob (Maybe WorkerType)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job.
createJob_securityConfiguration :: Lens' CreateJob (Maybe Text)

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
createJob_glueVersion :: Lens' CreateJob (Maybe Text)

-- | Non-overridable arguments for this job, specified as name-value pairs.
createJob_nonOverridableArguments :: Lens' CreateJob (Maybe (HashMap Text Text))

-- | This field is reserved for future use.
createJob_logUri :: Lens' CreateJob (Maybe Text)

-- | The maximum number of times to retry this job if it fails.
createJob_maxRetries :: Lens' CreateJob (Maybe Int)

-- | An <tt>ExecutionProperty</tt> specifying the maximum number of
--   concurrent runs allowed for this job.
createJob_executionProperty :: Lens' CreateJob (Maybe ExecutionProperty)

-- | This parameter is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) to allocate to this
--   Job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is
--   a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
createJob_allocatedCapacity :: Lens' CreateJob (Maybe Int)

-- | For Glue version 1.0 or earlier jobs, using the standard worker type,
--   the number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
createJob_maxCapacity :: Lens' CreateJob (Maybe Double)

-- | The job timeout in minutes. This is the maximum time that a job run
--   can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours).
createJob_timeout :: Lens' CreateJob (Maybe Natural)

-- | The default arguments for this job.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
createJob_defaultArguments :: Lens' CreateJob (Maybe (HashMap Text Text))

-- | Description of the job being defined.
createJob_description :: Lens' CreateJob (Maybe Text)

-- | The tags to use with this job. You may use tags to limit access to the
--   job. For more information about tags in Glue, see <a>Amazon Web
--   Services Tags in Glue</a> in the developer guide.
createJob_tags :: Lens' CreateJob (Maybe (HashMap Text Text))

-- | The name you assign to this job definition. It must be unique in your
--   account.
createJob_name :: Lens' CreateJob Text

-- | The name or Amazon Resource Name (ARN) of the IAM role associated with
--   this job.
createJob_role :: Lens' CreateJob Text

-- | The <tt>JobCommand</tt> that runs this job.
createJob_command :: Lens' CreateJob JobCommand

-- | The unique name that was provided for this job definition.
createJobResponse_name :: Lens' CreateJobResponse (Maybe Text)

-- | The response's http status code.
createJobResponse_httpStatus :: Lens' CreateJobResponse Int

-- | A continuation token, if this is a continuation call.
getJobRuns_nextToken :: Lens' GetJobRuns (Maybe Text)

-- | The maximum size of the response.
getJobRuns_maxResults :: Lens' GetJobRuns (Maybe Natural)

-- | The name of the job definition for which to retrieve all job runs.
getJobRuns_jobName :: Lens' GetJobRuns Text

-- | A continuation token, if not all requested job runs have been
--   returned.
getJobRunsResponse_nextToken :: Lens' GetJobRunsResponse (Maybe Text)

-- | A list of job-run metadata objects.
getJobRunsResponse_jobRuns :: Lens' GetJobRunsResponse (Maybe [JobRun])

-- | The response's http status code.
getJobRunsResponse_httpStatus :: Lens' GetJobRunsResponse Int

-- | The ID of the Data Catalog in which to create the function. If none is
--   provided, the Amazon Web Services account ID is used by default.
createUserDefinedFunction_catalogId :: Lens' CreateUserDefinedFunction (Maybe Text)

-- | The name of the catalog database in which to create the function.
createUserDefinedFunction_databaseName :: Lens' CreateUserDefinedFunction Text

-- | A <tt>FunctionInput</tt> object that defines the function to create in
--   the Data Catalog.
createUserDefinedFunction_functionInput :: Lens' CreateUserDefinedFunction UserDefinedFunctionInput

-- | The response's http status code.
createUserDefinedFunctionResponse_httpStatus :: Lens' CreateUserDefinedFunctionResponse Int

-- | The unique run identifier associated with this job run.
resetJobBookmark_runId :: Lens' ResetJobBookmark (Maybe Text)

-- | The name of the job in question.
resetJobBookmark_jobName :: Lens' ResetJobBookmark Text

-- | The reset bookmark entry.
resetJobBookmarkResponse_jobBookmarkEntry :: Lens' ResetJobBookmarkResponse (Maybe JobBookmarkEntry)

-- | The response's http status code.
resetJobBookmarkResponse_httpStatus :: Lens' ResetJobBookmarkResponse Int

-- | A continuation token, if this is a continuation request.
listJobs_nextToken :: Lens' ListJobs (Maybe Text)

-- | The maximum size of a list to return.
listJobs_maxResults :: Lens' ListJobs (Maybe Natural)

-- | Specifies to return only these tagged resources.
listJobs_tags :: Lens' ListJobs (Maybe (HashMap Text Text))

-- | A continuation token, if the returned list does not contain the last
--   metric available.
listJobsResponse_nextToken :: Lens' ListJobsResponse (Maybe Text)

-- | The names of all jobs in the account, or the jobs with the specified
--   tags.
listJobsResponse_jobNames :: Lens' ListJobsResponse (Maybe [Text])

-- | The response's http status code.
listJobsResponse_httpStatus :: Lens' ListJobsResponse Int

-- | Specifies the parameters as a <tt>BlueprintParameters</tt> object.
startBlueprintRun_parameters :: Lens' StartBlueprintRun (Maybe Text)

-- | The name of the blueprint.
startBlueprintRun_blueprintName :: Lens' StartBlueprintRun Text

-- | Specifies the IAM role used to create the workflow.
startBlueprintRun_roleArn :: Lens' StartBlueprintRun Text

-- | The run ID for this blueprint run.
startBlueprintRunResponse_runId :: Lens' StartBlueprintRunResponse (Maybe Text)

-- | The response's http status code.
startBlueprintRunResponse_httpStatus :: Lens' StartBlueprintRunResponse Int

-- | Specifies whether or not to include the parameters, as a JSON string,
--   for the blueprint in the response.
batchGetBlueprints_includeParameterSpec :: Lens' BatchGetBlueprints (Maybe Bool)

-- | Specifies whether or not to include the blueprint in the response.
batchGetBlueprints_includeBlueprint :: Lens' BatchGetBlueprints (Maybe Bool)

-- | A list of blueprint names.
batchGetBlueprints_names :: Lens' BatchGetBlueprints (NonEmpty Text)

-- | Returns a list of blueprint as a <tt>Blueprints</tt> object.
batchGetBlueprintsResponse_blueprints :: Lens' BatchGetBlueprintsResponse (Maybe [Blueprint])

-- | Returns a list of <tt>BlueprintNames</tt> that were not found.
batchGetBlueprintsResponse_missingBlueprints :: Lens' BatchGetBlueprintsResponse (Maybe [Text])

-- | The response's http status code.
batchGetBlueprintsResponse_httpStatus :: Lens' BatchGetBlueprintsResponse Int

-- | The name of the job definition to delete.
deleteJob_jobName :: Lens' DeleteJob Text

-- | The name of the job definition that was deleted.
deleteJobResponse_jobName :: Lens' DeleteJobResponse (Maybe Text)

-- | The response's http status code.
deleteJobResponse_httpStatus :: Lens' DeleteJobResponse Int

-- | The name of the job definition to update.
updateJob_jobName :: Lens' UpdateJob Text

-- | Specifies the values with which to update the job definition.
updateJob_jobUpdate :: Lens' UpdateJob JobUpdate

-- | Returns the name of the updated job definition.
updateJobResponse_jobName :: Lens' UpdateJobResponse (Maybe Text)

-- | The response's http status code.
updateJobResponse_httpStatus :: Lens' UpdateJobResponse Int

-- | A description of the registry. If description is not provided, there
--   will not be any default value for this.
createRegistry_description :: Lens' CreateRegistry (Maybe Text)

-- | Amazon Web Services tags that contain a key value pair and may be
--   searched by console, command line, or API.
createRegistry_tags :: Lens' CreateRegistry (Maybe (HashMap Text Text))

-- | Name of the registry to be created of max length of 255, and may only
--   contain letters, numbers, hyphen, underscore, dollar sign, or hash
--   mark. No whitespace.
createRegistry_registryName :: Lens' CreateRegistry Text

-- | The name of the registry.
createRegistryResponse_registryName :: Lens' CreateRegistryResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the newly created registry.
createRegistryResponse_registryArn :: Lens' CreateRegistryResponse (Maybe Text)

-- | A description of the registry.
createRegistryResponse_description :: Lens' CreateRegistryResponse (Maybe Text)

-- | The tags for the registry.
createRegistryResponse_tags :: Lens' CreateRegistryResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createRegistryResponse_httpStatus :: Lens' CreateRegistryResponse Int

-- | A continuation token, if this is a continuation request.
getCrawlers_nextToken :: Lens' GetCrawlers (Maybe Text)

-- | The number of crawlers to return on each call.
getCrawlers_maxResults :: Lens' GetCrawlers (Maybe Natural)

-- | A continuation token, if the returned list has not reached the end of
--   those defined in this customer account.
getCrawlersResponse_nextToken :: Lens' GetCrawlersResponse (Maybe Text)

-- | A list of crawler metadata.
getCrawlersResponse_crawlers :: Lens' GetCrawlersResponse (Maybe [Crawler])

-- | The response's http status code.
getCrawlersResponse_httpStatus :: Lens' GetCrawlersResponse Int

-- | A continuation token, if this is a continuation request.
listTriggers_nextToken :: Lens' ListTriggers (Maybe Text)

-- | The maximum size of a list to return.
listTriggers_maxResults :: Lens' ListTriggers (Maybe Natural)

-- | Specifies to return only these tagged resources.
listTriggers_tags :: Lens' ListTriggers (Maybe (HashMap Text Text))

-- | The name of the job for which to retrieve triggers. The trigger that
--   can start this job is returned. If there is no such trigger, all
--   triggers are returned.
listTriggers_dependentJobName :: Lens' ListTriggers (Maybe Text)

-- | The names of all triggers in the account, or the triggers with the
--   specified tags.
listTriggersResponse_triggerNames :: Lens' ListTriggersResponse (Maybe [Text])

-- | A continuation token, if the returned list does not contain the last
--   metric available.
listTriggersResponse_nextToken :: Lens' ListTriggersResponse (Maybe Text)

-- | The response's http status code.
listTriggersResponse_httpStatus :: Lens' ListTriggersResponse Int

-- | Name of the classifier to retrieve.
getClassifier_name :: Lens' GetClassifier Text

-- | The requested classifier.
getClassifierResponse_classifier :: Lens' GetClassifierResponse (Maybe Classifier)

-- | The response's http status code.
getClassifierResponse_httpStatus :: Lens' GetClassifierResponse Int

-- | The name of the job definition to retrieve.
getJob_jobName :: Lens' GetJob Text

-- | The requested job definition.
getJobResponse_job :: Lens' GetJobResponse (Maybe Job)

-- | The response's http status code.
getJobResponse_httpStatus :: Lens' GetJobResponse Int

-- | A continuation token, if this is a continuation call.
listRegistries_nextToken :: Lens' ListRegistries (Maybe Text)

-- | Maximum number of results required per page. If the value is not
--   supplied, this will be defaulted to 25 per page.
listRegistries_maxResults :: Lens' ListRegistries (Maybe Natural)

-- | An array of <tt>RegistryDetailedListItem</tt> objects containing
--   minimal details of each registry.
listRegistriesResponse_registries :: Lens' ListRegistriesResponse (Maybe [RegistryListItem])

-- | A continuation token for paginating the returned list of tokens,
--   returned if the current segment of the list is not the last.
listRegistriesResponse_nextToken :: Lens' ListRegistriesResponse (Maybe Text)

-- | The response's http status code.
listRegistriesResponse_httpStatus :: Lens' ListRegistriesResponse Int

-- | The ID of the Data Catalog where the tables reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
batchDeleteTableVersion_catalogId :: Lens' BatchDeleteTableVersion (Maybe Text)

-- | The database in the catalog in which the table resides. For Hive
--   compatibility, this name is entirely lowercase.
batchDeleteTableVersion_databaseName :: Lens' BatchDeleteTableVersion Text

-- | The name of the table. For Hive compatibility, this name is entirely
--   lowercase.
batchDeleteTableVersion_tableName :: Lens' BatchDeleteTableVersion Text

-- | A list of the IDs of versions to be deleted. A <tt>VersionId</tt> is a
--   string representation of an integer. Each version is incremented by 1.
batchDeleteTableVersion_versionIds :: Lens' BatchDeleteTableVersion [Text]

-- | A list of errors encountered while trying to delete the specified
--   table versions.
batchDeleteTableVersionResponse_errors :: Lens' BatchDeleteTableVersionResponse (Maybe [TableVersionError])

-- | The response's http status code.
batchDeleteTableVersionResponse_httpStatus :: Lens' BatchDeleteTableVersionResponse Int

-- | A continuation token, if this is a continuation call.
getDevEndpoints_nextToken :: Lens' GetDevEndpoints (Maybe Text)

-- | The maximum size of information to return.
getDevEndpoints_maxResults :: Lens' GetDevEndpoints (Maybe Natural)

-- | A continuation token, if not all <tt>DevEndpoint</tt> definitions have
--   yet been returned.
getDevEndpointsResponse_nextToken :: Lens' GetDevEndpointsResponse (Maybe Text)

-- | A list of <tt>DevEndpoint</tt> definitions.
getDevEndpointsResponse_devEndpoints :: Lens' GetDevEndpointsResponse (Maybe [DevEndpoint])

-- | The response's http status code.
getDevEndpointsResponse_httpStatus :: Lens' GetDevEndpointsResponse Int

-- | Name of the crawler to schedule.
startCrawlerSchedule_crawlerName :: Lens' StartCrawlerSchedule Text

-- | The response's http status code.
startCrawlerScheduleResponse_httpStatus :: Lens' StartCrawlerScheduleResponse Int

-- | The catalog ID where the table resides.
getPartitionIndexes_catalogId :: Lens' GetPartitionIndexes (Maybe Text)

-- | A continuation token, included if this is a continuation call.
getPartitionIndexes_nextToken :: Lens' GetPartitionIndexes (Maybe Text)

-- | Specifies the name of a database from which you want to retrieve
--   partition indexes.
getPartitionIndexes_databaseName :: Lens' GetPartitionIndexes Text

-- | Specifies the name of a table for which you want to retrieve the
--   partition indexes.
getPartitionIndexes_tableName :: Lens' GetPartitionIndexes Text

-- | A list of index descriptors.
getPartitionIndexesResponse_partitionIndexDescriptorList :: Lens' GetPartitionIndexesResponse (Maybe [PartitionIndexDescriptor])

-- | A continuation token, present if the current list segment is not the
--   last.
getPartitionIndexesResponse_nextToken :: Lens' GetPartitionIndexesResponse (Maybe Text)

-- | The response's http status code.
getPartitionIndexesResponse_httpStatus :: Lens' GetPartitionIndexesResponse Int

-- | The ID of the Data Catalog where the function to be retrieved is
--   located. If none is provided, the Amazon Web Services account ID is
--   used by default.
getUserDefinedFunction_catalogId :: Lens' GetUserDefinedFunction (Maybe Text)

-- | The name of the catalog database where the function is located.
getUserDefinedFunction_databaseName :: Lens' GetUserDefinedFunction Text

-- | The name of the function.
getUserDefinedFunction_functionName :: Lens' GetUserDefinedFunction Text

-- | The requested function definition.
getUserDefinedFunctionResponse_userDefinedFunction :: Lens' GetUserDefinedFunctionResponse (Maybe UserDefinedFunction)

-- | The response's http status code.
getUserDefinedFunctionResponse_httpStatus :: Lens' GetUserDefinedFunctionResponse Int

-- | The ARN of the Glue resource for which to retrieve the resource
--   policy. If not supplied, the Data Catalog resource policy is returned.
--   Use <tt>GetResourcePolicies</tt> to view all existing resource
--   policies. For more information see <a>Specifying Glue Resource
--   ARNs</a>.
getResourcePolicy_resourceArn :: Lens' GetResourcePolicy (Maybe Text)

-- | Contains the requested policy document, in JSON format.
getResourcePolicyResponse_policyInJson :: Lens' GetResourcePolicyResponse (Maybe Text)

-- | The date and time at which the policy was last updated.
getResourcePolicyResponse_updateTime :: Lens' GetResourcePolicyResponse (Maybe UTCTime)

-- | Contains the hash value associated with this policy.
getResourcePolicyResponse_policyHash :: Lens' GetResourcePolicyResponse (Maybe Text)

-- | The date and time at which the policy was created.
getResourcePolicyResponse_createTime :: Lens' GetResourcePolicyResponse (Maybe UTCTime)

-- | The response's http status code.
getResourcePolicyResponse_httpStatus :: Lens' GetResourcePolicyResponse Int

-- | Specifies whether to include the workflow graph in response or not.
getWorkflowRun_includeGraph :: Lens' GetWorkflowRun (Maybe Bool)

-- | Name of the workflow being run.
getWorkflowRun_name :: Lens' GetWorkflowRun Text

-- | The ID of the workflow run.
getWorkflowRun_runId :: Lens' GetWorkflowRun Text

-- | The requested workflow run metadata.
getWorkflowRunResponse_run :: Lens' GetWorkflowRunResponse (Maybe WorkflowRun)

-- | The response's http status code.
getWorkflowRunResponse_httpStatus :: Lens' GetWorkflowRunResponse Int

-- | The ID of the Data Catalog in which the database resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
deleteDatabase_catalogId :: Lens' DeleteDatabase (Maybe Text)

-- | The name of the database to delete. For Hive compatibility, this must
--   be all lowercase.
deleteDatabase_name :: Lens' DeleteDatabase Text

-- | The response's http status code.
deleteDatabaseResponse_httpStatus :: Lens' DeleteDatabaseResponse Int

-- | The ID of the Data Catalog in which the metadata database resides. If
--   none is provided, the Amazon Web Services account ID is used by
--   default.
updateDatabase_catalogId :: Lens' UpdateDatabase (Maybe Text)

-- | The name of the database to update in the catalog. For Hive
--   compatibility, this is folded to lowercase.
updateDatabase_name :: Lens' UpdateDatabase Text

-- | A <tt>DatabaseInput</tt> object specifying the new definition of the
--   metadata database in the catalog.
updateDatabase_databaseInput :: Lens' UpdateDatabase DatabaseInput

-- | The response's http status code.
updateDatabaseResponse_httpStatus :: Lens' UpdateDatabaseResponse Int

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
getColumnStatisticsForPartition_catalogId :: Lens' GetColumnStatisticsForPartition (Maybe Text)

-- | The name of the catalog database where the partitions reside.
getColumnStatisticsForPartition_databaseName :: Lens' GetColumnStatisticsForPartition Text

-- | The name of the partitions' table.
getColumnStatisticsForPartition_tableName :: Lens' GetColumnStatisticsForPartition Text

-- | A list of partition values identifying the partition.
getColumnStatisticsForPartition_partitionValues :: Lens' GetColumnStatisticsForPartition [Text]

-- | A list of the column names.
getColumnStatisticsForPartition_columnNames :: Lens' GetColumnStatisticsForPartition [Text]

-- | Error occurred during retrieving column statistics data.
getColumnStatisticsForPartitionResponse_errors :: Lens' GetColumnStatisticsForPartitionResponse (Maybe [ColumnError])

-- | List of ColumnStatistics that failed to be retrieved.
getColumnStatisticsForPartitionResponse_columnStatisticsList :: Lens' GetColumnStatisticsForPartitionResponse (Maybe [ColumnStatistics])

-- | The response's http status code.
getColumnStatisticsForPartitionResponse_httpStatus :: Lens' GetColumnStatisticsForPartitionResponse Int

-- | Name of the crawler to stop.
stopCrawler_name :: Lens' StopCrawler Text

-- | The response's http status code.
stopCrawlerResponse_httpStatus :: Lens' StopCrawlerResponse Int

-- | The name of the security configuration to delete.
deleteSecurityConfiguration_name :: Lens' DeleteSecurityConfiguration Text

-- | The response's http status code.
deleteSecurityConfigurationResponse_httpStatus :: Lens' DeleteSecurityConfigurationResponse Int

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is provided, the Amazon Web Services account ID is used by
--   default.
getPartitions_catalogId :: Lens' GetPartitions (Maybe Text)

-- | When true, specifies not returning the partition column schema. Useful
--   when you are interested only in other partition attributes such as
--   partition values or location. This approach avoids the problem of a
--   large response by not returning duplicate data.
getPartitions_excludeColumnSchema :: Lens' GetPartitions (Maybe Bool)

-- | A continuation token, if this is not the first call to retrieve these
--   partitions.
getPartitions_nextToken :: Lens' GetPartitions (Maybe Text)

-- | An expression that filters the partitions to be returned.
--   
--   The expression uses SQL syntax similar to the SQL <tt>WHERE</tt>
--   filter clause. The SQL statement parser <a>JSQLParser</a> parses the
--   expression.
--   
--   <i>Operators</i>: The following are the operators that you can use in
--   the <tt>Expression</tt> API call:
--   
--   <ul>
--   <li><i>=</i> Checks whether the values of the two operands are equal;
--   if yes, then the condition becomes true.Example: Assume 'variable a'
--   holds 10 and 'variable b' holds 20.(a = b) is not true.</li>
--   <li><i>&lt; &gt;</i> Checks whether the values of two operands are
--   equal; if the values are not equal, then the condition becomes
--   true.Example: (a &lt; &gt; b) is true.</li>
--   <li><i>&gt;</i> Checks whether the value of the left operand is
--   greater than the value of the right operand; if yes, then the
--   condition becomes true.Example: (a &gt; b) is not true.</li>
--   <li><i>&lt;</i> Checks whether the value of the left operand is less
--   than the value of the right operand; if yes, then the condition
--   becomes true.Example: (a &lt; b) is true.</li>
--   <li><i>&gt;=</i> Checks whether the value of the left operand is
--   greater than or equal to the value of the right operand; if yes, then
--   the condition becomes true.Example: (a &gt;= b) is not true.</li>
--   <li><i>&lt;=</i> Checks whether the value of the left operand is less
--   than or equal to the value of the right operand; if yes, then the
--   condition becomes true.Example: (a &lt;= b) is true.</li>
--   <li><i>AND, OR, IN, BETWEEN, LIKE, NOT, IS NULL</i> Logical
--   operators.</li>
--   </ul>
--   
--   <i>Supported Partition Key Types</i>: The following are the supported
--   partition keys.
--   
--   <ul>
--   <li><pre>string</pre></li>
--   <li><pre>date</pre></li>
--   <li><pre>timestamp</pre></li>
--   <li><pre>int</pre></li>
--   <li><pre>bigint</pre></li>
--   <li><pre>long</pre></li>
--   <li><pre>tinyint</pre></li>
--   <li><pre>smallint</pre></li>
--   <li><pre>decimal</pre></li>
--   </ul>
--   
--   If an type is encountered that is not valid, an exception is thrown.
--   
--   The following list shows the valid operators on each type. When you
--   define a crawler, the <tt>partitionKey</tt> type is created as a
--   <tt>STRING</tt>, to be compatible with the catalog partitions.
--   
--   <i>Sample API Call</i>:
getPartitions_expression :: Lens' GetPartitions (Maybe Text)

-- | The segment of the table's partitions to scan in this request.
getPartitions_segment :: Lens' GetPartitions (Maybe Segment)

-- | The maximum number of partitions to return in a single response.
getPartitions_maxResults :: Lens' GetPartitions (Maybe Natural)

-- | The name of the catalog database where the partitions reside.
getPartitions_databaseName :: Lens' GetPartitions Text

-- | The name of the partitions' table.
getPartitions_tableName :: Lens' GetPartitions Text

-- | A list of requested partitions.
getPartitionsResponse_partitions :: Lens' GetPartitionsResponse (Maybe [Partition])

-- | A continuation token, if the returned list of partitions does not
--   include the last one.
getPartitionsResponse_nextToken :: Lens' GetPartitionsResponse (Maybe Text)

-- | The response's http status code.
getPartitionsResponse_httpStatus :: Lens' GetPartitionsResponse Int

-- | The unique version ID of the schema version.
putSchemaVersionMetadata_schemaVersionId :: Lens' PutSchemaVersionMetadata (Maybe Text)

-- | The unique ID for the schema.
putSchemaVersionMetadata_schemaId :: Lens' PutSchemaVersionMetadata (Maybe SchemaId)

-- | The version number of the schema.
putSchemaVersionMetadata_schemaVersionNumber :: Lens' PutSchemaVersionMetadata (Maybe SchemaVersionNumber)

-- | The metadata key's corresponding value.
putSchemaVersionMetadata_metadataKeyValue :: Lens' PutSchemaVersionMetadata MetadataKeyValuePair

-- | The name for the registry.
putSchemaVersionMetadataResponse_registryName :: Lens' PutSchemaVersionMetadataResponse (Maybe Text)

-- | The name for the schema.
putSchemaVersionMetadataResponse_schemaName :: Lens' PutSchemaVersionMetadataResponse (Maybe Text)

-- | The unique version ID of the schema version.
putSchemaVersionMetadataResponse_schemaVersionId :: Lens' PutSchemaVersionMetadataResponse (Maybe Text)

-- | The version number of the schema.
putSchemaVersionMetadataResponse_versionNumber :: Lens' PutSchemaVersionMetadataResponse (Maybe Natural)

-- | The Amazon Resource Name (ARN) for the schema.
putSchemaVersionMetadataResponse_schemaArn :: Lens' PutSchemaVersionMetadataResponse (Maybe Text)

-- | The metadata key.
putSchemaVersionMetadataResponse_metadataKey :: Lens' PutSchemaVersionMetadataResponse (Maybe Text)

-- | The value of the metadata key.
putSchemaVersionMetadataResponse_metadataValue :: Lens' PutSchemaVersionMetadataResponse (Maybe Text)

-- | The latest version of the schema.
putSchemaVersionMetadataResponse_latestVersion :: Lens' PutSchemaVersionMetadataResponse (Maybe Bool)

-- | The response's http status code.
putSchemaVersionMetadataResponse_httpStatus :: Lens' PutSchemaVersionMetadataResponse Int

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   Either <tt>SchemaArn</tt> or <tt>SchemaName</tt> and
--   <tt>RegistryName</tt> has to be provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. Either
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> and <tt>RegistryName</tt>
--   has to be provided.</li>
--   </ul>
getSchema_schemaId :: Lens' GetSchema SchemaId

-- | The name of the registry.
getSchemaResponse_registryName :: Lens' GetSchemaResponse (Maybe Text)

-- | The date and time the schema was created.
getSchemaResponse_createdTime :: Lens' GetSchemaResponse (Maybe Text)

-- | The status of the schema.
getSchemaResponse_schemaStatus :: Lens' GetSchemaResponse (Maybe SchemaStatus)

-- | The Amazon Resource Name (ARN) of the registry.
getSchemaResponse_registryArn :: Lens' GetSchemaResponse (Maybe Text)

-- | The latest version of the schema associated with the returned schema
--   definition.
getSchemaResponse_latestSchemaVersion :: Lens' GetSchemaResponse (Maybe Natural)

-- | The data format of the schema definition. Currently <tt>AVRO</tt> and
--   <tt>JSON</tt> are supported.
getSchemaResponse_dataFormat :: Lens' GetSchemaResponse (Maybe DataFormat)

-- | The version number of the checkpoint (the last time the compatibility
--   mode was changed).
getSchemaResponse_schemaCheckpoint :: Lens' GetSchemaResponse (Maybe Natural)

-- | The name of the schema.
getSchemaResponse_schemaName :: Lens' GetSchemaResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schema.
getSchemaResponse_schemaArn :: Lens' GetSchemaResponse (Maybe Text)

-- | The next version of the schema associated with the returned schema
--   definition.
getSchemaResponse_nextSchemaVersion :: Lens' GetSchemaResponse (Maybe Natural)

-- | The date and time the schema was updated.
getSchemaResponse_updatedTime :: Lens' GetSchemaResponse (Maybe Text)

-- | A description of schema if specified when created
getSchemaResponse_description :: Lens' GetSchemaResponse (Maybe Text)

-- | The compatibility mode of the schema.
getSchemaResponse_compatibility :: Lens' GetSchemaResponse (Maybe Compatibility)

-- | The response's http status code.
getSchemaResponse_httpStatus :: Lens' GetSchemaResponse Int

-- | The ID of the Data Catalog where the partition to be deleted resides.
--   If none is provided, the Amazon Web Services account ID is used by
--   default.
batchDeletePartition_catalogId :: Lens' BatchDeletePartition (Maybe Text)

-- | The name of the catalog database in which the table in question
--   resides.
batchDeletePartition_databaseName :: Lens' BatchDeletePartition Text

-- | The name of the table that contains the partitions to be deleted.
batchDeletePartition_tableName :: Lens' BatchDeletePartition Text

-- | A list of <tt>PartitionInput</tt> structures that define the
--   partitions to be deleted.
batchDeletePartition_partitionsToDelete :: Lens' BatchDeletePartition [PartitionValueList]

-- | The errors encountered when trying to delete the requested partitions.
batchDeletePartitionResponse_errors :: Lens' BatchDeletePartitionResponse (Maybe [PartitionError])

-- | The response's http status code.
batchDeletePartitionResponse_httpStatus :: Lens' BatchDeletePartitionResponse Int

-- | The unique identifier of the machine learning transform.
startMLLabelingSetGenerationTaskRun_transformId :: Lens' StartMLLabelingSetGenerationTaskRun Text

-- | The Amazon Simple Storage Service (Amazon S3) path where you generate
--   the labeling set.
startMLLabelingSetGenerationTaskRun_outputS3Path :: Lens' StartMLLabelingSetGenerationTaskRun Text

-- | The unique run identifier that is associated with this task run.
startMLLabelingSetGenerationTaskRunResponse_taskRunId :: Lens' StartMLLabelingSetGenerationTaskRunResponse (Maybe Text)

-- | The response's http status code.
startMLLabelingSetGenerationTaskRunResponse_httpStatus :: Lens' StartMLLabelingSetGenerationTaskRunResponse Int

-- | The ID of the catalog in which the partition is to be updated.
--   Currently, this should be the Amazon Web Services account ID.
batchUpdatePartition_catalogId :: Lens' BatchUpdatePartition (Maybe Text)

-- | The name of the metadata database in which the partition is to be
--   updated.
batchUpdatePartition_databaseName :: Lens' BatchUpdatePartition Text

-- | The name of the metadata table in which the partition is to be
--   updated.
batchUpdatePartition_tableName :: Lens' BatchUpdatePartition Text

-- | A list of up to 100 <tt>BatchUpdatePartitionRequestEntry</tt> objects
--   to update.
batchUpdatePartition_entries :: Lens' BatchUpdatePartition (NonEmpty BatchUpdatePartitionRequestEntry)

-- | The errors encountered when trying to update the requested partitions.
--   A list of <tt>BatchUpdatePartitionFailureEntry</tt> objects.
batchUpdatePartitionResponse_errors :: Lens' BatchUpdatePartitionResponse (Maybe [BatchUpdatePartitionFailureEntry])

-- | The response's http status code.
batchUpdatePartitionResponse_httpStatus :: Lens' BatchUpdatePartitionResponse Int

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   Either <tt>SchemaArn</tt> or <tt>SchemaName</tt> and
--   <tt>RegistryName</tt> has to be provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. Either
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> and <tt>RegistryName</tt>
--   has to be provided.</li>
--   </ul>
registerSchemaVersion_schemaId :: Lens' RegisterSchemaVersion SchemaId

-- | The schema definition using the <tt>DataFormat</tt> setting for the
--   <tt>SchemaName</tt>.
registerSchemaVersion_schemaDefinition :: Lens' RegisterSchemaVersion Text

-- | The status of the schema version.
registerSchemaVersionResponse_status :: Lens' RegisterSchemaVersionResponse (Maybe SchemaVersionStatus)

-- | The unique ID that represents the version of this schema.
registerSchemaVersionResponse_schemaVersionId :: Lens' RegisterSchemaVersionResponse (Maybe Text)

-- | The version of this schema (for sync flow only, in case this is the
--   first version).
registerSchemaVersionResponse_versionNumber :: Lens' RegisterSchemaVersionResponse (Maybe Natural)

-- | The response's http status code.
registerSchemaVersionResponse_httpStatus :: Lens' RegisterSchemaVersionResponse Int

-- | The name of the workflow to stop.
stopWorkflowRun_name :: Lens' StopWorkflowRun Text

-- | The ID of the workflow run to stop.
stopWorkflowRun_runId :: Lens' StopWorkflowRun Text

-- | The response's http status code.
stopWorkflowRunResponse_httpStatus :: Lens' StopWorkflowRunResponse Int

-- | The name of the crawler to retrieve metadata for.
getCrawler_name :: Lens' GetCrawler Text

-- | The metadata for the specified crawler.
getCrawlerResponse_crawler :: Lens' GetCrawlerResponse (Maybe Crawler)

-- | The response's http status code.
getCrawlerResponse_httpStatus :: Lens' GetCrawlerResponse Int

-- | A continuation token, if this is a continuation request.
listWorkflows_nextToken :: Lens' ListWorkflows (Maybe Text)

-- | The maximum size of a list to return.
listWorkflows_maxResults :: Lens' ListWorkflows (Maybe Natural)

-- | A continuation token, if not all workflow names have been returned.
listWorkflowsResponse_nextToken :: Lens' ListWorkflowsResponse (Maybe Text)

-- | List of names of workflows in the account.
listWorkflowsResponse_workflows :: Lens' ListWorkflowsResponse (Maybe (NonEmpty Text))

-- | The response's http status code.
listWorkflowsResponse_httpStatus :: Lens' ListWorkflowsResponse Int

-- | The name of the job definition for which to stop job runs.
batchStopJobRun_jobName :: Lens' BatchStopJobRun Text

-- | A list of the <tt>JobRunIds</tt> that should be stopped for that job
--   definition.
batchStopJobRun_jobRunIds :: Lens' BatchStopJobRun (NonEmpty Text)

-- | A list of the JobRuns that were successfully submitted for stopping.
batchStopJobRunResponse_successfulSubmissions :: Lens' BatchStopJobRunResponse (Maybe [BatchStopJobRunSuccessfulSubmission])

-- | A list of the errors that were encountered in trying to stop
--   <tt>JobRuns</tt>, including the <tt>JobRunId</tt> for which each error
--   was encountered and details about the error.
batchStopJobRunResponse_errors :: Lens' BatchStopJobRunResponse (Maybe [BatchStopJobRunError])

-- | The response's http status code.
batchStopJobRunResponse_httpStatus :: Lens' BatchStopJobRunResponse Int

-- | Name of the <tt>DevEndpoint</tt> to retrieve information for.
getDevEndpoint_endpointName :: Lens' GetDevEndpoint Text

-- | A <tt>DevEndpoint</tt> definition.
getDevEndpointResponse_devEndpoint :: Lens' GetDevEndpointResponse (Maybe DevEndpoint)

-- | The response's http status code.
getDevEndpointResponse_httpStatus :: Lens' GetDevEndpointResponse Int

-- | Name of the workflow which was run.
putWorkflowRunProperties_name :: Lens' PutWorkflowRunProperties Text

-- | The ID of the workflow run for which the run properties should be
--   updated.
putWorkflowRunProperties_runId :: Lens' PutWorkflowRunProperties Text

-- | The properties to put for the specified run.
putWorkflowRunProperties_runProperties :: Lens' PutWorkflowRunProperties (HashMap Text Text)

-- | The response's http status code.
putWorkflowRunPropertiesResponse_httpStatus :: Lens' PutWorkflowRunPropertiesResponse Int

-- | A list of partition indexes, <tt>PartitionIndex</tt> structures, to
--   create in the table.
createTable_partitionIndexes :: Lens' CreateTable (Maybe [PartitionIndex])

-- | The ID of the Data Catalog in which to create the <tt>Table</tt>. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
createTable_catalogId :: Lens' CreateTable (Maybe Text)

-- | The catalog database in which to create the new table. For Hive
--   compatibility, this name is entirely lowercase.
createTable_databaseName :: Lens' CreateTable Text

-- | The <tt>TableInput</tt> object that defines the metadata table to
--   create in the catalog.
createTable_tableInput :: Lens' CreateTable TableInput

-- | The response's http status code.
createTableResponse_httpStatus :: Lens' CreateTableResponse Int

-- | A continuation token, if this is a continuation request.
listCrawlers_nextToken :: Lens' ListCrawlers (Maybe Text)

-- | The maximum size of a list to return.
listCrawlers_maxResults :: Lens' ListCrawlers (Maybe Natural)

-- | Specifies to return only these tagged resources.
listCrawlers_tags :: Lens' ListCrawlers (Maybe (HashMap Text Text))

-- | A continuation token, if the returned list does not contain the last
--   metric available.
listCrawlersResponse_nextToken :: Lens' ListCrawlersResponse (Maybe Text)

-- | The names of all crawlers in the account, or the crawlers with the
--   specified tags.
listCrawlersResponse_crawlerNames :: Lens' ListCrawlersResponse (Maybe [Text])

-- | The response's http status code.
listCrawlersResponse_httpStatus :: Lens' ListCrawlersResponse Int

-- | A continuation token, if this is a continuation call.
getCrawlerMetrics_nextToken :: Lens' GetCrawlerMetrics (Maybe Text)

-- | The maximum size of a list to return.
getCrawlerMetrics_maxResults :: Lens' GetCrawlerMetrics (Maybe Natural)

-- | A list of the names of crawlers about which to retrieve metrics.
getCrawlerMetrics_crawlerNameList :: Lens' GetCrawlerMetrics (Maybe [Text])

-- | A list of metrics for the specified crawler.
getCrawlerMetricsResponse_crawlerMetricsList :: Lens' GetCrawlerMetricsResponse (Maybe [CrawlerMetrics])

-- | A continuation token, if the returned list does not contain the last
--   metric available.
getCrawlerMetricsResponse_nextToken :: Lens' GetCrawlerMetricsResponse (Maybe Text)

-- | The response's http status code.
getCrawlerMetricsResponse_httpStatus :: Lens' GetCrawlerMetricsResponse Int

-- | The <tt>SchemaVersionId</tt> of the schema version. This field is
--   required for fetching by schema ID. Either this or the
--   <tt>SchemaId</tt> wrapper has to be provided.
getSchemaVersion_schemaVersionId :: Lens' GetSchemaVersion (Maybe Text)

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   Either <tt>SchemaArn</tt> or <tt>SchemaName</tt> and
--   <tt>RegistryName</tt> has to be provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. Either
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> and <tt>RegistryName</tt>
--   has to be provided.</li>
--   </ul>
getSchemaVersion_schemaId :: Lens' GetSchemaVersion (Maybe SchemaId)

-- | The version number of the schema.
getSchemaVersion_schemaVersionNumber :: Lens' GetSchemaVersion (Maybe SchemaVersionNumber)

-- | The status of the schema version.
getSchemaVersionResponse_status :: Lens' GetSchemaVersionResponse (Maybe SchemaVersionStatus)

-- | The schema definition for the schema ID.
getSchemaVersionResponse_schemaDefinition :: Lens' GetSchemaVersionResponse (Maybe Text)

-- | The date and time the schema version was created.
getSchemaVersionResponse_createdTime :: Lens' GetSchemaVersionResponse (Maybe Text)

-- | The data format of the schema definition. Currently <tt>AVRO</tt> and
--   <tt>JSON</tt> are supported.
getSchemaVersionResponse_dataFormat :: Lens' GetSchemaVersionResponse (Maybe DataFormat)

-- | The <tt>SchemaVersionId</tt> of the schema version.
getSchemaVersionResponse_schemaVersionId :: Lens' GetSchemaVersionResponse (Maybe Text)

-- | The version number of the schema.
getSchemaVersionResponse_versionNumber :: Lens' GetSchemaVersionResponse (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the schema.
getSchemaVersionResponse_schemaArn :: Lens' GetSchemaVersionResponse (Maybe Text)

-- | The response's http status code.
getSchemaVersionResponse_httpStatus :: Lens' GetSchemaVersionResponse Int

-- | The target tables.
getPlan_sinks :: Lens' GetPlan (Maybe [CatalogEntry])

-- | The parameters for the mapping.
getPlan_location :: Lens' GetPlan (Maybe Location)

-- | The programming language of the code to perform the mapping.
getPlan_language :: Lens' GetPlan (Maybe Language)

-- | A map to hold additional optional key-value parameters.
--   
--   Currently, these key-value pairs are supported:
--   
--   <ul>
--   <li><tt>inferSchema</tt> — Specifies whether to set
--   <tt>inferSchema</tt> to true or false for the default script generated
--   by an Glue job. For example, to set <tt>inferSchema</tt> to true, pass
--   the following key value pair:<pre>--additional-plan-options-map
--   '{"inferSchema":"true"}'</pre></li>
--   </ul>
getPlan_additionalPlanOptionsMap :: Lens' GetPlan (Maybe (HashMap Text Text))

-- | The list of mappings from a source table to target tables.
getPlan_mapping :: Lens' GetPlan [MappingEntry]

-- | The source table.
getPlan_source :: Lens' GetPlan CatalogEntry

-- | A Python script to perform the mapping.
getPlanResponse_pythonScript :: Lens' GetPlanResponse (Maybe Text)

-- | The Scala code to perform the mapping.
getPlanResponse_scalaCode :: Lens' GetPlanResponse (Maybe Text)

-- | The response's http status code.
getPlanResponse_httpStatus :: Lens' GetPlanResponse Int

-- | A continuation token, if this is a continuation call.
getTriggers_nextToken :: Lens' GetTriggers (Maybe Text)

-- | The maximum size of the response.
getTriggers_maxResults :: Lens' GetTriggers (Maybe Natural)

-- | The name of the job to retrieve triggers for. The trigger that can
--   start this job is returned, and if there is no such trigger, all
--   triggers are returned.
getTriggers_dependentJobName :: Lens' GetTriggers (Maybe Text)

-- | A list of triggers for the specified job.
getTriggersResponse_triggers :: Lens' GetTriggersResponse (Maybe [Trigger])

-- | A continuation token, if not all the requested triggers have yet been
--   returned.
getTriggersResponse_nextToken :: Lens' GetTriggersResponse (Maybe Text)

-- | The response's http status code.
getTriggersResponse_httpStatus :: Lens' GetTriggersResponse Int

-- | The schema definition using the <tt>DataFormat</tt> setting for
--   <tt>SchemaName</tt>.
createSchema_schemaDefinition :: Lens' CreateSchema (Maybe Text)

-- | This is a wrapper shape to contain the registry identity fields. If
--   this is not provided, the default registry will be used. The ARN
--   format for the same will be: <tt>arn:aws:glue:us-east-2:&lt;customer
--   id&gt;:registry/default-registry:random-5-letter-id</tt>.
createSchema_registryId :: Lens' CreateSchema (Maybe RegistryId)

-- | An optional description of the schema. If description is not provided,
--   there will not be any automatic default value for this.
createSchema_description :: Lens' CreateSchema (Maybe Text)

-- | The compatibility mode of the schema. The possible values are:
--   
--   <ul>
--   <li><i>NONE</i>: No compatibility mode applies. You can use this
--   choice in development scenarios or if you do not know the
--   compatibility mode that you want to apply to schemas. Any new version
--   added will be accepted without undergoing a compatibility check.</li>
--   <li><i>DISABLED</i>: This compatibility choice prevents versioning for
--   a particular schema. You can use this choice to prevent future
--   versioning of a schema.</li>
--   <li><i>BACKWARD</i>: This compatibility choice is recommended as it
--   allows data receivers to read both the current and one previous schema
--   version. This means that for instance, a new schema version cannot
--   drop data fields or change the type of these fields, so they can't be
--   read by readers using the previous version.</li>
--   <li><i>BACKWARD_ALL</i>: This compatibility choice allows data
--   receivers to read both the current and all previous schema versions.
--   You can use this choice when you need to delete fields or add optional
--   fields, and check compatibility against all previous schema
--   versions.</li>
--   <li><i>FORWARD</i>: This compatibility choice allows data receivers to
--   read both the current and one next schema version, but not necessarily
--   later versions. You can use this choice when you need to add fields or
--   delete optional fields, but only check compatibility against the last
--   schema version.</li>
--   <li><i>FORWARD_ALL</i>: This compatibility choice allows data
--   receivers to read written by producers of any new registered schema.
--   You can use this choice when you need to add fields or delete optional
--   fields, and check compatibility against all previous schema
--   versions.</li>
--   <li><i>FULL</i>: This compatibility choice allows data receivers to
--   read data written by producers using the previous or next version of
--   the schema, but not necessarily earlier or later versions. You can use
--   this choice when you need to add or remove optional fields, but only
--   check compatibility against the last schema version.</li>
--   <li><i>FULL_ALL</i>: This compatibility choice allows data receivers
--   to read data written by producers using all previous schema versions.
--   You can use this choice when you need to add or remove optional
--   fields, and check compatibility against all previous schema
--   versions.</li>
--   </ul>
createSchema_compatibility :: Lens' CreateSchema (Maybe Compatibility)

-- | Amazon Web Services tags that contain a key value pair and may be
--   searched by console, command line, or API. If specified, follows the
--   Amazon Web Services tags-on-create pattern.
createSchema_tags :: Lens' CreateSchema (Maybe (HashMap Text Text))

-- | Name of the schema to be created of max length of 255, and may only
--   contain letters, numbers, hyphen, underscore, dollar sign, or hash
--   mark. No whitespace.
createSchema_schemaName :: Lens' CreateSchema Text

-- | The data format of the schema definition. Currently <tt>AVRO</tt> and
--   <tt>JSON</tt> are supported.
createSchema_dataFormat :: Lens' CreateSchema DataFormat

-- | The status of the first schema version created.
createSchemaResponse_schemaVersionStatus :: Lens' CreateSchemaResponse (Maybe SchemaVersionStatus)

-- | The name of the registry.
createSchemaResponse_registryName :: Lens' CreateSchemaResponse (Maybe Text)

-- | The status of the schema.
createSchemaResponse_schemaStatus :: Lens' CreateSchemaResponse (Maybe SchemaStatus)

-- | The Amazon Resource Name (ARN) of the registry.
createSchemaResponse_registryArn :: Lens' CreateSchemaResponse (Maybe Text)

-- | The latest version of the schema associated with the returned schema
--   definition.
createSchemaResponse_latestSchemaVersion :: Lens' CreateSchemaResponse (Maybe Natural)

-- | The data format of the schema definition. Currently <tt>AVRO</tt> and
--   <tt>JSON</tt> are supported.
createSchemaResponse_dataFormat :: Lens' CreateSchemaResponse (Maybe DataFormat)

-- | The version number of the checkpoint (the last time the compatibility
--   mode was changed).
createSchemaResponse_schemaCheckpoint :: Lens' CreateSchemaResponse (Maybe Natural)

-- | The name of the schema.
createSchemaResponse_schemaName :: Lens' CreateSchemaResponse (Maybe Text)

-- | The unique identifier of the first schema version.
createSchemaResponse_schemaVersionId :: Lens' CreateSchemaResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schema.
createSchemaResponse_schemaArn :: Lens' CreateSchemaResponse (Maybe Text)

-- | The next version of the schema associated with the returned schema
--   definition.
createSchemaResponse_nextSchemaVersion :: Lens' CreateSchemaResponse (Maybe Natural)

-- | A description of the schema if specified when created.
createSchemaResponse_description :: Lens' CreateSchemaResponse (Maybe Text)

-- | The schema compatibility mode.
createSchemaResponse_compatibility :: Lens' CreateSchemaResponse (Maybe Compatibility)

-- | The tags for the schema.
createSchemaResponse_tags :: Lens' CreateSchemaResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createSchemaResponse_httpStatus :: Lens' CreateSchemaResponse Int

-- | A continuation token, if this is a continuation request.
listDevEndpoints_nextToken :: Lens' ListDevEndpoints (Maybe Text)

-- | The maximum size of a list to return.
listDevEndpoints_maxResults :: Lens' ListDevEndpoints (Maybe Natural)

-- | Specifies to return only these tagged resources.
listDevEndpoints_tags :: Lens' ListDevEndpoints (Maybe (HashMap Text Text))

-- | A continuation token, if the returned list does not contain the last
--   metric available.
listDevEndpointsResponse_nextToken :: Lens' ListDevEndpointsResponse (Maybe Text)

-- | The names of all the <tt>DevEndpoint</tt>s in the account, or the
--   <tt>DevEndpoint</tt>s with the specified tags.
listDevEndpointsResponse_devEndpointNames :: Lens' ListDevEndpointsResponse (Maybe [Text])

-- | The response's http status code.
listDevEndpointsResponse_httpStatus :: Lens' ListDevEndpointsResponse Int

-- | The name of the trigger to start.
startTrigger_name :: Lens' StartTrigger Text

-- | The name of the trigger that was started.
startTriggerResponse_name :: Lens' StartTriggerResponse (Maybe Text)

-- | The response's http status code.
startTriggerResponse_httpStatus :: Lens' StartTriggerResponse Int

-- | The Python script to transform.
getDataflowGraph_pythonScript :: Lens' GetDataflowGraph (Maybe Text)

-- | A list of the edges in the resulting DAG.
getDataflowGraphResponse_dagEdges :: Lens' GetDataflowGraphResponse (Maybe [CodeGenEdge])

-- | A list of the nodes in the resulting DAG.
getDataflowGraphResponse_dagNodes :: Lens' GetDataflowGraphResponse (Maybe [CodeGenNode])

-- | The response's http status code.
getDataflowGraphResponse_httpStatus :: Lens' GetDataflowGraphResponse Int

-- | Allows you to specify that you want to list the databases shared with
--   your account. The allowable values are <tt>FOREIGN</tt> or
--   <tt>ALL</tt>.
--   
--   <ul>
--   <li>If set to <tt>FOREIGN</tt>, will list the databases shared with
--   your account.</li>
--   <li>If set to <tt>ALL</tt>, will list the databases shared with your
--   account, as well as the databases in yor local account.</li>
--   </ul>
getDatabases_resourceShareType :: Lens' GetDatabases (Maybe ResourceShareType)

-- | The ID of the Data Catalog from which to retrieve <tt>Databases</tt>.
--   If none is provided, the Amazon Web Services account ID is used by
--   default.
getDatabases_catalogId :: Lens' GetDatabases (Maybe Text)

-- | A continuation token, if this is a continuation call.
getDatabases_nextToken :: Lens' GetDatabases (Maybe Text)

-- | The maximum number of databases to return in one response.
getDatabases_maxResults :: Lens' GetDatabases (Maybe Natural)

-- | A continuation token for paginating the returned list of tokens,
--   returned if the current segment of the list is not the last.
getDatabasesResponse_nextToken :: Lens' GetDatabasesResponse (Maybe Text)

-- | The response's http status code.
getDatabasesResponse_httpStatus :: Lens' GetDatabasesResponse Int

-- | A list of <tt>Database</tt> objects from the specified catalog.
getDatabasesResponse_databaseList :: Lens' GetDatabasesResponse [Database]

-- | The ID of the Data Catalog where the table resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
getTable_catalogId :: Lens' GetTable (Maybe Text)

-- | The name of the database in the catalog in which the table resides.
--   For Hive compatibility, this name is entirely lowercase.
getTable_databaseName :: Lens' GetTable Text

-- | The name of the table for which to retrieve the definition. For Hive
--   compatibility, this name is entirely lowercase.
getTable_name :: Lens' GetTable Text

-- | The <tt>Table</tt> object that defines the specified table.
getTableResponse_table :: Lens' GetTableResponse (Maybe Table)

-- | The response's http status code.
getTableResponse_httpStatus :: Lens' GetTableResponse Int

-- | The policy for the crawler's update and deletion behavior.
createCrawler_schemaChangePolicy :: Lens' CreateCrawler (Maybe SchemaChangePolicy)

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
createCrawler_schedule :: Lens' CreateCrawler (Maybe Text)

-- | A policy that specifies whether to crawl the entire dataset again, or
--   to crawl only folders that were added since the last crawler run.
createCrawler_recrawlPolicy :: Lens' CreateCrawler (Maybe RecrawlPolicy)

-- | A list of custom classifiers that the user has registered. By default,
--   all built-in classifiers are included in a crawl, but these custom
--   classifiers always override the default classifiers for a given
--   classification.
createCrawler_classifiers :: Lens' CreateCrawler (Maybe [Text])

-- | The Glue database where results are written, such as:
--   <tt>arn:aws:daylight:us-east-1::database/sometable/*</tt>.
createCrawler_databaseName :: Lens' CreateCrawler (Maybe Text)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used by
--   this crawler.
createCrawler_crawlerSecurityConfiguration :: Lens' CreateCrawler (Maybe Text)

-- | Specifies data lineage configuration settings for the crawler.
createCrawler_lineageConfiguration :: Lens' CreateCrawler (Maybe LineageConfiguration)

-- | Crawler configuration information. This versioned JSON string allows
--   users to specify aspects of a crawler's behavior. For more
--   information, see <a>Configuring a Crawler</a>.
createCrawler_configuration :: Lens' CreateCrawler (Maybe Text)

-- | The table prefix used for catalog tables that are created.
createCrawler_tablePrefix :: Lens' CreateCrawler (Maybe Text)

-- | A description of the new crawler.
createCrawler_description :: Lens' CreateCrawler (Maybe Text)

-- | The tags to use with this crawler request. You may use tags to limit
--   access to the crawler. For more information about tags in Glue, see
--   <a>Amazon Web Services Tags in Glue</a> in the developer guide.
createCrawler_tags :: Lens' CreateCrawler (Maybe (HashMap Text Text))

-- | Name of the new crawler.
createCrawler_name :: Lens' CreateCrawler Text

-- | The IAM role or Amazon Resource Name (ARN) of an IAM role used by the
--   new crawler to access customer resources.
createCrawler_role :: Lens' CreateCrawler Text

-- | A list of collection of targets to crawl.
createCrawler_targets :: Lens' CreateCrawler CrawlerTargets

-- | The response's http status code.
createCrawlerResponse_httpStatus :: Lens' CreateCrawlerResponse Int

-- | True if a list of predecessor runs should be returned.
getJobRun_predecessorsIncluded :: Lens' GetJobRun (Maybe Bool)

-- | Name of the job definition being run.
getJobRun_jobName :: Lens' GetJobRun Text

-- | The ID of the job run.
getJobRun_runId :: Lens' GetJobRun Text

-- | The requested job-run metadata.
getJobRunResponse_jobRun :: Lens' GetJobRunResponse (Maybe JobRun)

-- | The response's http status code.
getJobRunResponse_httpStatus :: Lens' GetJobRunResponse Int

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated to the development endpoint.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
createDevEndpoint_numberOfWorkers :: Lens' CreateDevEndpoint (Maybe Int)

-- | The paths to one or more Python libraries in an Amazon S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>. Multiple values must be
--   complete paths separated by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not yet supported.
createDevEndpoint_extraPythonLibsS3Path :: Lens' CreateDevEndpoint (Maybe Text)

-- | Security group IDs for the security groups to be used by the new
--   <tt>DevEndpoint</tt>.
createDevEndpoint_securityGroupIds :: Lens' CreateDevEndpoint (Maybe [Text])

-- | A list of public keys to be used by the development endpoints for
--   authentication. The use of this attribute is preferred over a single
--   public key because the public keys allow you to have a different
--   private key per client.
--   
--   If you previously created an endpoint with a public key, you must
--   remove that key to be able to set a list of public keys. Call the
--   <tt>UpdateDevEndpoint</tt> API with the public key content in the
--   <tt>deletePublicKeys</tt> attribute, and the list of new keys in the
--   <tt>addPublicKeys</tt> attribute.
createDevEndpoint_publicKeys :: Lens' CreateDevEndpoint (Maybe [Text])

-- | A map of arguments used to configure the <tt>DevEndpoint</tt>.
createDevEndpoint_arguments :: Lens' CreateDevEndpoint (Maybe (HashMap Text Text))

-- | The type of predefined worker that is allocated to the development
--   endpoint. Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   Known issue: when a development endpoint is created with the
--   <tt>G.2X</tt> <tt>WorkerType</tt> configuration, the Spark drivers for
--   the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64
--   GB disk.
createDevEndpoint_workerType :: Lens' CreateDevEndpoint (Maybe WorkerType)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this <tt>DevEndpoint</tt>.
createDevEndpoint_securityConfiguration :: Lens' CreateDevEndpoint (Maybe Text)

-- | The public key to be used by this <tt>DevEndpoint</tt> for
--   authentication. This attribute is provided for backward compatibility
--   because the recommended attribute to use is public keys.
createDevEndpoint_publicKey :: Lens' CreateDevEndpoint (Maybe Text)

-- | The subnet ID for the new <tt>DevEndpoint</tt> to use.
createDevEndpoint_subnetId :: Lens' CreateDevEndpoint (Maybe Text)

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   running your ETL scripts on development endpoints.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Development endpoints that are created without specifying a Glue
--   version default to Glue 0.9.
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
createDevEndpoint_glueVersion :: Lens' CreateDevEndpoint (Maybe Text)

-- | The number of Glue Data Processing Units (DPUs) to allocate to this
--   <tt>DevEndpoint</tt>.
createDevEndpoint_numberOfNodes :: Lens' CreateDevEndpoint (Maybe Int)

-- | The path to one or more Java <tt>.jar</tt> files in an S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>.
createDevEndpoint_extraJarsS3Path :: Lens' CreateDevEndpoint (Maybe Text)

-- | The tags to use with this DevEndpoint. You may use tags to limit
--   access to the DevEndpoint. For more information about tags in Glue,
--   see <a>Amazon Web Services Tags in Glue</a> in the developer guide.
createDevEndpoint_tags :: Lens' CreateDevEndpoint (Maybe (HashMap Text Text))

-- | The name to be assigned to the new <tt>DevEndpoint</tt>.
createDevEndpoint_endpointName :: Lens' CreateDevEndpoint Text

-- | The IAM role for the <tt>DevEndpoint</tt>.
createDevEndpoint_roleArn :: Lens' CreateDevEndpoint Text

-- | The current status of the new <tt>DevEndpoint</tt>.
createDevEndpointResponse_status :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The reason for a current failure in this <tt>DevEndpoint</tt>.
createDevEndpointResponse_failureReason :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The name assigned to the new <tt>DevEndpoint</tt>.
createDevEndpointResponse_endpointName :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated to the development endpoint.
createDevEndpointResponse_numberOfWorkers :: Lens' CreateDevEndpointResponse (Maybe Int)

-- | The paths to one or more Python libraries in an S3 bucket that will be
--   loaded in your <tt>DevEndpoint</tt>.
createDevEndpointResponse_extraPythonLibsS3Path :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The security groups assigned to the new <tt>DevEndpoint</tt>.
createDevEndpointResponse_securityGroupIds :: Lens' CreateDevEndpointResponse (Maybe [Text])

-- | The ID of the virtual private cloud (VPC) used by this
--   <tt>DevEndpoint</tt>.
createDevEndpointResponse_vpcId :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The map of arguments used to configure this <tt>DevEndpoint</tt>.
--   
--   Valid arguments are:
--   
--   <ul>
--   <li><pre>"--enable-glue-datacatalog": ""</pre></li>
--   </ul>
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
createDevEndpointResponse_arguments :: Lens' CreateDevEndpointResponse (Maybe (HashMap Text Text))

-- | The type of predefined worker that is allocated to the development
--   endpoint. May be a value of Standard, G.1X, or G.2X.
createDevEndpointResponse_workerType :: Lens' CreateDevEndpointResponse (Maybe WorkerType)

-- | The name of the <tt>SecurityConfiguration</tt> structure being used
--   with this <tt>DevEndpoint</tt>.
createDevEndpointResponse_securityConfiguration :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The subnet ID assigned to the new <tt>DevEndpoint</tt>.
createDevEndpointResponse_subnetId :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   running your ETL scripts on development endpoints.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
createDevEndpointResponse_glueVersion :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The number of Glue Data Processing Units (DPUs) allocated to this
--   DevEndpoint.
createDevEndpointResponse_numberOfNodes :: Lens' CreateDevEndpointResponse (Maybe Int)

-- | The AWS Availability Zone where this <tt>DevEndpoint</tt> is located.
createDevEndpointResponse_availabilityZone :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The Apache Zeppelin port for the remote Apache Spark interpreter.
createDevEndpointResponse_zeppelinRemoteSparkInterpreterPort :: Lens' CreateDevEndpointResponse (Maybe Int)

-- | Path to one or more Java <tt>.jar</tt> files in an S3 bucket that will
--   be loaded in your <tt>DevEndpoint</tt>.
createDevEndpointResponse_extraJarsS3Path :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The point in time at which this <tt>DevEndpoint</tt> was created.
createDevEndpointResponse_createdTimestamp :: Lens' CreateDevEndpointResponse (Maybe UTCTime)

-- | The address of the YARN endpoint used by this <tt>DevEndpoint</tt>.
createDevEndpointResponse_yarnEndpointAddress :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the role assigned to the new
--   <tt>DevEndpoint</tt>.
createDevEndpointResponse_roleArn :: Lens' CreateDevEndpointResponse (Maybe Text)

-- | The response's http status code.
createDevEndpointResponse_httpStatus :: Lens' CreateDevEndpointResponse Int

-- | A token for pagination of the results. The default is empty.
getMLTaskRuns_nextToken :: Lens' GetMLTaskRuns (Maybe Text)

-- | The sorting criteria, in the <tt>TaskRunSortCriteria</tt> structure,
--   for the task run.
getMLTaskRuns_sort :: Lens' GetMLTaskRuns (Maybe TaskRunSortCriteria)

-- | The filter criteria, in the <tt>TaskRunFilterCriteria</tt> structure,
--   for the task run.
getMLTaskRuns_filter :: Lens' GetMLTaskRuns (Maybe TaskRunFilterCriteria)

-- | The maximum number of results to return.
getMLTaskRuns_maxResults :: Lens' GetMLTaskRuns (Maybe Natural)

-- | The unique identifier of the machine learning transform.
getMLTaskRuns_transformId :: Lens' GetMLTaskRuns Text

-- | A pagination token, if more results are available.
getMLTaskRunsResponse_nextToken :: Lens' GetMLTaskRunsResponse (Maybe Text)

-- | A list of task runs that are associated with the transform.
getMLTaskRunsResponse_taskRuns :: Lens' GetMLTaskRunsResponse (Maybe [TaskRun])

-- | The response's http status code.
getMLTaskRunsResponse_httpStatus :: Lens' GetMLTaskRunsResponse Int

-- | The ARN of the Glue resource to which to add the tags. For more
--   information about Glue resource ARNs, see the <a>Glue ARN string
--   pattern</a>.
tagResource_resourceArn :: Lens' TagResource Text

-- | Tags to add to this resource.
tagResource_tagsToAdd :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The ID of the Data Catalog to set the security configuration for. If
--   none is provided, the Amazon Web Services account ID is used by
--   default.
putDataCatalogEncryptionSettings_catalogId :: Lens' PutDataCatalogEncryptionSettings (Maybe Text)

-- | The security configuration to set.
putDataCatalogEncryptionSettings_dataCatalogEncryptionSettings :: Lens' PutDataCatalogEncryptionSettings DataCatalogEncryptionSettings

-- | The response's http status code.
putDataCatalogEncryptionSettingsResponse_httpStatus :: Lens' PutDataCatalogEncryptionSettingsResponse Int

-- | A paginated token to offset the results.
getMLTransforms_nextToken :: Lens' GetMLTransforms (Maybe Text)

-- | The sorting criteria.
getMLTransforms_sort :: Lens' GetMLTransforms (Maybe TransformSortCriteria)

-- | The filter transformation criteria.
getMLTransforms_filter :: Lens' GetMLTransforms (Maybe TransformFilterCriteria)

-- | The maximum number of results to return.
getMLTransforms_maxResults :: Lens' GetMLTransforms (Maybe Natural)

-- | A pagination token, if more results are available.
getMLTransformsResponse_nextToken :: Lens' GetMLTransformsResponse (Maybe Text)

-- | The response's http status code.
getMLTransformsResponse_httpStatus :: Lens' GetMLTransformsResponse Int

-- | A list of machine learning transforms.
getMLTransformsResponse_transforms :: Lens' GetMLTransformsResponse [MLTransform]

-- | Version number required for check pointing. One of
--   <tt>VersionNumber</tt> or <tt>Compatibility</tt> has to be provided.
updateSchema_schemaVersionNumber :: Lens' UpdateSchema (Maybe SchemaVersionNumber)

-- | The new description for the schema.
updateSchema_description :: Lens' UpdateSchema (Maybe Text)

-- | The new compatibility setting for the schema.
updateSchema_compatibility :: Lens' UpdateSchema (Maybe Compatibility)

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   One of <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be
--   provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. One of
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be provided.</li>
--   </ul>
updateSchema_schemaId :: Lens' UpdateSchema SchemaId

-- | The name of the registry that contains the schema.
updateSchemaResponse_registryName :: Lens' UpdateSchemaResponse (Maybe Text)

-- | The name of the schema.
updateSchemaResponse_schemaName :: Lens' UpdateSchemaResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schema.
updateSchemaResponse_schemaArn :: Lens' UpdateSchemaResponse (Maybe Text)

-- | The response's http status code.
updateSchemaResponse_httpStatus :: Lens' UpdateSchemaResponse Int

-- | This is a wrapper structure that may contain the schema name and
--   Amazon Resource Name (ARN).
deleteSchema_schemaId :: Lens' DeleteSchema SchemaId

-- | The status of the schema.
deleteSchemaResponse_status :: Lens' DeleteSchemaResponse (Maybe SchemaStatus)

-- | The name of the schema being deleted.
deleteSchemaResponse_schemaName :: Lens' DeleteSchemaResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schema being deleted.
deleteSchemaResponse_schemaArn :: Lens' DeleteSchemaResponse (Maybe Text)

-- | The response's http status code.
deleteSchemaResponse_httpStatus :: Lens' DeleteSchemaResponse Int

-- | The ID of the Data Catalog in which the database resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
getDatabase_catalogId :: Lens' GetDatabase (Maybe Text)

-- | The name of the database to retrieve. For Hive compatibility, this
--   should be all lowercase.
getDatabase_name :: Lens' GetDatabase Text

-- | The definition of the specified database in the Data Catalog.
getDatabaseResponse_database :: Lens' GetDatabaseResponse (Maybe Database)

-- | The response's http status code.
getDatabaseResponse_httpStatus :: Lens' GetDatabaseResponse Int

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
deleteColumnStatisticsForPartition_catalogId :: Lens' DeleteColumnStatisticsForPartition (Maybe Text)

-- | The name of the catalog database where the partitions reside.
deleteColumnStatisticsForPartition_databaseName :: Lens' DeleteColumnStatisticsForPartition Text

-- | The name of the partitions' table.
deleteColumnStatisticsForPartition_tableName :: Lens' DeleteColumnStatisticsForPartition Text

-- | A list of partition values identifying the partition.
deleteColumnStatisticsForPartition_partitionValues :: Lens' DeleteColumnStatisticsForPartition [Text]

-- | Name of the column.
deleteColumnStatisticsForPartition_columnName :: Lens' DeleteColumnStatisticsForPartition Text

-- | The response's http status code.
deleteColumnStatisticsForPartitionResponse_httpStatus :: Lens' DeleteColumnStatisticsForPartitionResponse Int

-- | The ID of the Data Catalog where the partitions in question reside. If
--   none is supplied, the Amazon Web Services account ID is used by
--   default.
updateColumnStatisticsForPartition_catalogId :: Lens' UpdateColumnStatisticsForPartition (Maybe Text)

-- | The name of the catalog database where the partitions reside.
updateColumnStatisticsForPartition_databaseName :: Lens' UpdateColumnStatisticsForPartition Text

-- | The name of the partitions' table.
updateColumnStatisticsForPartition_tableName :: Lens' UpdateColumnStatisticsForPartition Text

-- | A list of partition values identifying the partition.
updateColumnStatisticsForPartition_partitionValues :: Lens' UpdateColumnStatisticsForPartition [Text]

-- | A list of the column statistics.
updateColumnStatisticsForPartition_columnStatisticsList :: Lens' UpdateColumnStatisticsForPartition [ColumnStatistics]

-- | Error occurred during updating column statistics data.
updateColumnStatisticsForPartitionResponse_errors :: Lens' UpdateColumnStatisticsForPartitionResponse (Maybe [ColumnStatisticsError])

-- | The response's http status code.
updateColumnStatisticsForPartitionResponse_httpStatus :: Lens' UpdateColumnStatisticsForPartitionResponse Int

-- | A description of the blueprint.
createBlueprint_description :: Lens' CreateBlueprint (Maybe Text)

-- | The tags to be applied to this blueprint.
createBlueprint_tags :: Lens' CreateBlueprint (Maybe (HashMap Text Text))

-- | The name of the blueprint.
createBlueprint_name :: Lens' CreateBlueprint Text

-- | Specifies a path in Amazon S3 where the blueprint is published.
createBlueprint_blueprintLocation :: Lens' CreateBlueprint Text

-- | Returns the name of the blueprint that was registered.
createBlueprintResponse_name :: Lens' CreateBlueprintResponse (Maybe Text)

-- | The response's http status code.
createBlueprintResponse_httpStatus :: Lens' CreateBlueprintResponse Int

-- | The unique identifier of the machine learning transform.
getMLTaskRun_transformId :: Lens' GetMLTaskRun Text

-- | The unique identifier of the task run.
getMLTaskRun_taskRunId :: Lens' GetMLTaskRun Text

-- | The date and time when this task run was completed.
getMLTaskRunResponse_completedOn :: Lens' GetMLTaskRunResponse (Maybe UTCTime)

-- | The status for this task run.
getMLTaskRunResponse_status :: Lens' GetMLTaskRunResponse (Maybe TaskStatusType)

-- | The date and time when this task run was last modified.
getMLTaskRunResponse_lastModifiedOn :: Lens' GetMLTaskRunResponse (Maybe UTCTime)

-- | The error strings that are associated with the task run.
getMLTaskRunResponse_errorString :: Lens' GetMLTaskRunResponse (Maybe Text)

-- | The date and time when this task run started.
getMLTaskRunResponse_startedOn :: Lens' GetMLTaskRunResponse (Maybe UTCTime)

-- | The names of the log groups that are associated with the task run.
getMLTaskRunResponse_logGroupName :: Lens' GetMLTaskRunResponse (Maybe Text)

-- | The amount of time (in seconds) that the task run consumed resources.
getMLTaskRunResponse_executionTime :: Lens' GetMLTaskRunResponse (Maybe Int)

-- | The list of properties that are associated with the task run.
getMLTaskRunResponse_properties :: Lens' GetMLTaskRunResponse (Maybe TaskRunProperties)

-- | The unique identifier of the task run.
getMLTaskRunResponse_transformId :: Lens' GetMLTaskRunResponse (Maybe Text)

-- | The unique run identifier associated with this run.
getMLTaskRunResponse_taskRunId :: Lens' GetMLTaskRunResponse (Maybe Text)

-- | The response's http status code.
getMLTaskRunResponse_httpStatus :: Lens' GetMLTaskRunResponse Int

-- | The ID of the Data Catalog where the partition to be deleted resides.
--   If none is provided, the Amazon Web Services account ID is used by
--   default.
deletePartition_catalogId :: Lens' DeletePartition (Maybe Text)

-- | The name of the catalog database in which the table in question
--   resides.
deletePartition_databaseName :: Lens' DeletePartition Text

-- | The name of the table that contains the partition to be deleted.
deletePartition_tableName :: Lens' DeletePartition Text

-- | The values that define the partition.
deletePartition_partitionValues :: Lens' DeletePartition [Text]

-- | The response's http status code.
deletePartitionResponse_httpStatus :: Lens' DeletePartitionResponse Int

-- | The ID of the Data Catalog where the partition to be updated resides.
--   If none is provided, the Amazon Web Services account ID is used by
--   default.
updatePartition_catalogId :: Lens' UpdatePartition (Maybe Text)

-- | The name of the catalog database in which the table in question
--   resides.
updatePartition_databaseName :: Lens' UpdatePartition Text

-- | The name of the table in which the partition to be updated is located.
updatePartition_tableName :: Lens' UpdatePartition Text

-- | List of partition key values that define the partition to update.
updatePartition_partitionValueList :: Lens' UpdatePartition [Text]

-- | The new partition object to update the partition to.
--   
--   The <tt>Values</tt> property can't be changed. If you want to change
--   the partition key values for a partition, delete and recreate the
--   partition.
updatePartition_partitionInput :: Lens' UpdatePartition PartitionInput

-- | The response's http status code.
updatePartitionResponse_httpStatus :: Lens' UpdatePartitionResponse Int

-- | The unique identifier of the transform, generated at the time that the
--   transform was created.
getMLTransform_transformId :: Lens' GetMLTransform Text

-- | The last known status of the transform (to indicate whether it can be
--   used or not). One of "NOT_READY", "READY", or "DELETING".
getMLTransformResponse_status :: Lens' GetMLTransformResponse (Maybe TransformStatusType)

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when this task runs.
getMLTransformResponse_numberOfWorkers :: Lens' GetMLTransformResponse (Maybe Int)

-- | The date and time when the transform was last modified.
getMLTransformResponse_lastModifiedOn :: Lens' GetMLTransformResponse (Maybe UTCTime)

-- | The number of labels available for this transform.
getMLTransformResponse_labelCount :: Lens' GetMLTransformResponse (Maybe Int)

-- | The type of predefined worker that is allocated when this task runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
getMLTransformResponse_workerType :: Lens' GetMLTransformResponse (Maybe WorkerType)

-- | A list of Glue table definitions used by the transform.
getMLTransformResponse_inputRecordTables :: Lens' GetMLTransformResponse (Maybe [GlueTable])

-- | This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
getMLTransformResponse_glueVersion :: Lens' GetMLTransformResponse (Maybe Text)

-- | The latest evaluation metrics.
getMLTransformResponse_evaluationMetrics :: Lens' GetMLTransformResponse (Maybe EvaluationMetrics)

-- | The <tt>Map&lt;Column, Type&gt;</tt> object that represents the schema
--   that this transform accepts. Has an upper bound of 100 columns.
getMLTransformResponse_schema :: Lens' GetMLTransformResponse (Maybe [SchemaColumn])

-- | The name or Amazon Resource Name (ARN) of the IAM role with the
--   required permissions.
getMLTransformResponse_role :: Lens' GetMLTransformResponse (Maybe Text)

-- | The unique name given to the transform when it was created.
getMLTransformResponse_name :: Lens' GetMLTransformResponse (Maybe Text)

-- | The configuration parameters that are specific to the algorithm used.
getMLTransformResponse_parameters :: Lens' GetMLTransformResponse (Maybe TransformParameters)

-- | The maximum number of times to retry a task for this transform after a
--   task run fails.
getMLTransformResponse_maxRetries :: Lens' GetMLTransformResponse (Maybe Int)

-- | The number of Glue data processing units (DPUs) that are allocated to
--   task runs for this transform. You can allocate from 2 to 100 DPUs; the
--   default is 10. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
getMLTransformResponse_maxCapacity :: Lens' GetMLTransformResponse (Maybe Double)

-- | The timeout for a task run for this transform in minutes. This is the
--   maximum time that a task run for this transform can consume resources
--   before it is terminated and enters <tt>TIMEOUT</tt> status. The
--   default is 2,880 minutes (48 hours).
getMLTransformResponse_timeout :: Lens' GetMLTransformResponse (Maybe Natural)

-- | The encryption-at-rest settings of the transform that apply to
--   accessing user data. Machine learning transforms can access user data
--   encrypted in Amazon S3 using KMS.
getMLTransformResponse_transformEncryption :: Lens' GetMLTransformResponse (Maybe TransformEncryption)

-- | A description of the transform.
getMLTransformResponse_description :: Lens' GetMLTransformResponse (Maybe Text)

-- | The date and time when the transform was created.
getMLTransformResponse_createdOn :: Lens' GetMLTransformResponse (Maybe UTCTime)

-- | The unique identifier of the transform, generated at the time that the
--   transform was created.
getMLTransformResponse_transformId :: Lens' GetMLTransformResponse (Maybe Text)

-- | The response's http status code.
getMLTransformResponse_httpStatus :: Lens' GetMLTransformResponse Int

-- | A list of the edges in the DAG.
createScript_dagEdges :: Lens' CreateScript (Maybe [CodeGenEdge])

-- | The programming language of the resulting code from the DAG.
createScript_language :: Lens' CreateScript (Maybe Language)

-- | A list of the nodes in the DAG.
createScript_dagNodes :: Lens' CreateScript (Maybe [CodeGenNode])

-- | The Python script generated from the DAG.
createScriptResponse_pythonScript :: Lens' CreateScriptResponse (Maybe Text)

-- | The Scala code generated from the DAG.
createScriptResponse_scalaCode :: Lens' CreateScriptResponse (Maybe Text)

-- | The response's http status code.
createScriptResponse_httpStatus :: Lens' CreateScriptResponse Int

-- | A value of <tt>MUST_EXIST</tt> is used to update a policy. A value of
--   <tt>NOT_EXIST</tt> is used to create a new policy. If a value of
--   <tt>NONE</tt> or a null value is used, the call does not depend on the
--   existence of a policy.
putResourcePolicy_policyExistsCondition :: Lens' PutResourcePolicy (Maybe ExistCondition)

-- | The hash value returned when the previous policy was set using
--   <tt>PutResourcePolicy</tt>. Its purpose is to prevent concurrent
--   modifications of a policy. Do not use this parameter if no previous
--   policy has been set.
putResourcePolicy_policyHashCondition :: Lens' PutResourcePolicy (Maybe Text)

-- | Do not use. For internal use only.
putResourcePolicy_resourceArn :: Lens' PutResourcePolicy (Maybe Text)

-- | If <tt>'TRUE'</tt>, indicates that you are using both methods to grant
--   cross-account access to Data Catalog resources:
--   
--   <ul>
--   <li>By directly updating the resource policy with
--   <tt>PutResourePolicy</tt></li>
--   <li>By using the <b>Grant permissions</b> command on the Amazon Web
--   Services Management Console.</li>
--   </ul>
--   
--   Must be set to <tt>'TRUE'</tt> if you have already used the Management
--   Console to grant cross-account access, otherwise the call fails.
--   Default is 'FALSE'.
putResourcePolicy_enableHybrid :: Lens' PutResourcePolicy (Maybe EnableHybridValues)

-- | Contains the policy document to set, in JSON format.
putResourcePolicy_policyInJson :: Lens' PutResourcePolicy Text

-- | A hash of the policy that has just been set. This must be included in
--   a subsequent call that overwrites or updates this policy.
putResourcePolicyResponse_policyHash :: Lens' PutResourcePolicyResponse (Maybe Text)

-- | The response's http status code.
putResourcePolicyResponse_httpStatus :: Lens' PutResourcePolicyResponse Int

-- | A continuation token, if this is a continuation request.
getBlueprintRuns_nextToken :: Lens' GetBlueprintRuns (Maybe Text)

-- | The maximum size of a list to return.
getBlueprintRuns_maxResults :: Lens' GetBlueprintRuns (Maybe Natural)

-- | The name of the blueprint.
getBlueprintRuns_blueprintName :: Lens' GetBlueprintRuns Text

-- | Returns a list of <tt>BlueprintRun</tt> objects.
getBlueprintRunsResponse_blueprintRuns :: Lens' GetBlueprintRunsResponse (Maybe [BlueprintRun])

-- | A continuation token, if not all blueprint runs have been returned.
getBlueprintRunsResponse_nextToken :: Lens' GetBlueprintRunsResponse (Maybe Text)

-- | The response's http status code.
getBlueprintRunsResponse_httpStatus :: Lens' GetBlueprintRunsResponse Int

-- | A continuation token, if this is a continuation call.
getSecurityConfigurations_nextToken :: Lens' GetSecurityConfigurations (Maybe Text)

-- | The maximum number of results to return.
getSecurityConfigurations_maxResults :: Lens' GetSecurityConfigurations (Maybe Natural)

-- | A list of security configurations.
getSecurityConfigurationsResponse_securityConfigurations :: Lens' GetSecurityConfigurationsResponse (Maybe [SecurityConfiguration])

-- | A continuation token, if there are more security configurations to
--   return.
getSecurityConfigurationsResponse_nextToken :: Lens' GetSecurityConfigurationsResponse (Maybe Text)

-- | The response's http status code.
getSecurityConfigurationsResponse_httpStatus :: Lens' GetSecurityConfigurationsResponse Int

-- | The hash value returned when this policy was set.
deleteResourcePolicy_policyHashCondition :: Lens' DeleteResourcePolicy (Maybe Text)

-- | The ARN of the Glue resource for the resource policy to be deleted.
deleteResourcePolicy_resourceArn :: Lens' DeleteResourcePolicy (Maybe Text)

-- | The response's http status code.
deleteResourcePolicyResponse_httpStatus :: Lens' DeleteResourcePolicyResponse Int

-- | The ID of the Data Catalog in which the connections reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
getConnections_catalogId :: Lens' GetConnections (Maybe Text)

-- | A continuation token, if this is a continuation call.
getConnections_nextToken :: Lens' GetConnections (Maybe Text)

-- | Allows you to retrieve the connection metadata without returning the
--   password. For instance, the AWS Glue console uses this flag to
--   retrieve the connection, and does not display the password. Set this
--   parameter when the caller might not have permission to use the KMS key
--   to decrypt the password, but it does have permission to access the
--   rest of the connection properties.
getConnections_hidePassword :: Lens' GetConnections (Maybe Bool)

-- | A filter that controls which connections are returned.
getConnections_filter :: Lens' GetConnections (Maybe GetConnectionsFilter)

-- | The maximum number of connections to return in one response.
getConnections_maxResults :: Lens' GetConnections (Maybe Natural)

-- | A continuation token, if the list of connections returned does not
--   include the last of the filtered connections.
getConnectionsResponse_nextToken :: Lens' GetConnectionsResponse (Maybe Text)

-- | A list of requested connection definitions.
getConnectionsResponse_connectionList :: Lens' GetConnectionsResponse (Maybe [Connection])

-- | The response's http status code.
getConnectionsResponse_httpStatus :: Lens' GetConnectionsResponse Int

-- | The Amazon Resource Name (ARN) of the resource from which to remove
--   the tags.
untagResource_resourceArn :: Lens' UntagResource Text

-- | Tags to remove from this resource.
untagResource_tagsToRemove :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   One of <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be
--   provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. One of
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be provided.</li>
--   </ul>
getSchemaVersionsDiff_schemaId :: Lens' GetSchemaVersionsDiff SchemaId

-- | The first of the two schema versions to be compared.
getSchemaVersionsDiff_firstSchemaVersionNumber :: Lens' GetSchemaVersionsDiff SchemaVersionNumber

-- | The second of the two schema versions to be compared.
getSchemaVersionsDiff_secondSchemaVersionNumber :: Lens' GetSchemaVersionsDiff SchemaVersionNumber

-- | Refers to <tt>SYNTAX_DIFF</tt>, which is the currently supported diff
--   type.
getSchemaVersionsDiff_schemaDiffType :: Lens' GetSchemaVersionsDiff SchemaDiffType

-- | The difference between schemas as a string in JsonPatch format.
getSchemaVersionsDiffResponse_diff :: Lens' GetSchemaVersionsDiffResponse (Maybe Text)

-- | The response's http status code.
getSchemaVersionsDiffResponse_httpStatus :: Lens' GetSchemaVersionsDiffResponse Int

-- | Allows you to specify that you want to search the tables shared with
--   your account. The allowable values are <tt>FOREIGN</tt> or
--   <tt>ALL</tt>.
--   
--   <ul>
--   <li>If set to <tt>FOREIGN</tt>, will search the tables shared with
--   your account.</li>
--   <li>If set to <tt>ALL</tt>, will search the tables shared with your
--   account, as well as the tables in yor local account.</li>
--   </ul>
searchTables_resourceShareType :: Lens' SearchTables (Maybe ResourceShareType)

-- | A string used for a text search.
--   
--   Specifying a value in quotes filters based on an exact match to the
--   value.
searchTables_searchText :: Lens' SearchTables (Maybe Text)

-- | A list of key-value pairs, and a comparator used to filter the search
--   results. Returns all entities matching the predicate.
--   
--   The <tt>Comparator</tt> member of the <tt>PropertyPredicate</tt>
--   struct is used only for time fields, and can be omitted for other
--   field types. Also, when comparing string values, such as when
--   <tt>Key=Name</tt>, a fuzzy match algorithm is used. The <tt>Key</tt>
--   field (for example, the value of the <tt>Name</tt> field) is split on
--   certain punctuation characters, for example, -, :, #, etc. into
--   tokens. Then each token is exact-match compared with the
--   <tt>Value</tt> member of <tt>PropertyPredicate</tt>. For example, if
--   <tt>Key=Name</tt> and <tt>Value=link</tt>, tables named
--   <tt>customer-link</tt> and <tt>xx-link-yy</tt> are returned, but
--   <tt>xxlinkyy</tt> is not returned.
searchTables_filters :: Lens' SearchTables (Maybe [PropertyPredicate])

-- | A unique identifier, consisting of <tt> account_id </tt>.
searchTables_catalogId :: Lens' SearchTables (Maybe Text)

-- | A list of criteria for sorting the results by a field name, in an
--   ascending or descending order.
searchTables_sortCriteria :: Lens' SearchTables (Maybe [SortCriterion])

-- | A continuation token, included if this is a continuation call.
searchTables_nextToken :: Lens' SearchTables (Maybe Text)

-- | The maximum number of tables to return in a single response.
searchTables_maxResults :: Lens' SearchTables (Maybe Natural)

-- | A list of the requested <tt>Table</tt> objects. The
--   <tt>SearchTables</tt> response returns only the tables that you have
--   access to.
searchTablesResponse_tableList :: Lens' SearchTablesResponse (Maybe [Table])

-- | A continuation token, present if the current list segment is not the
--   last.
searchTablesResponse_nextToken :: Lens' SearchTablesResponse (Maybe Text)

-- | The response's http status code.
searchTablesResponse_httpStatus :: Lens' SearchTablesResponse Int

-- | The name of the trigger to retrieve.
getTrigger_name :: Lens' GetTrigger Text

-- | The requested trigger definition.
getTriggerResponse_trigger :: Lens' GetTriggerResponse (Maybe Trigger)

-- | The response's http status code.
getTriggerResponse_httpStatus :: Lens' GetTriggerResponse Int

-- | A list of job names, which might be the names returned from the
--   <tt>ListJobs</tt> operation.
batchGetJobs_jobNames :: Lens' BatchGetJobs [Text]

-- | A list of job definitions.
batchGetJobsResponse_jobs :: Lens' BatchGetJobsResponse (Maybe [Job])

-- | A list of names of jobs not found.
batchGetJobsResponse_jobsNotFound :: Lens' BatchGetJobsResponse (Maybe [Text])

-- | The response's http status code.
batchGetJobsResponse_httpStatus :: Lens' BatchGetJobsResponse Int

-- | The ID of the catalog to import. Currently, this should be the Amazon
--   Web Services account ID.
importCatalogToGlue_catalogId :: Lens' ImportCatalogToGlue (Maybe Text)

-- | The response's http status code.
importCatalogToGlueResponse_httpStatus :: Lens' ImportCatalogToGlueResponse Int

-- | Name of the classifier to remove.
deleteClassifier_name :: Lens' DeleteClassifier Text

-- | The response's http status code.
deleteClassifierResponse_httpStatus :: Lens' DeleteClassifierResponse Int

-- | A <tt>GrokClassifier</tt> object with updated fields.
updateClassifier_grokClassifier :: Lens' UpdateClassifier (Maybe UpdateGrokClassifierRequest)

-- | An <tt>XMLClassifier</tt> object with updated fields.
updateClassifier_xMLClassifier :: Lens' UpdateClassifier (Maybe UpdateXMLClassifierRequest)

-- | A <tt>CsvClassifier</tt> object with updated fields.
updateClassifier_csvClassifier :: Lens' UpdateClassifier (Maybe UpdateCsvClassifierRequest)

-- | A <tt>JsonClassifier</tt> object with updated fields.
updateClassifier_jsonClassifier :: Lens' UpdateClassifier (Maybe UpdateJsonClassifierRequest)

-- | The response's http status code.
updateClassifierResponse_httpStatus :: Lens' UpdateClassifierResponse Int

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
startJobRun_numberOfWorkers :: Lens' StartJobRun (Maybe Int)

-- | Specifies configuration properties of a job run notification.
startJobRun_notificationProperty :: Lens' StartJobRun (Maybe NotificationProperty)

-- | The job arguments specifically for this run. For this job run, they
--   replace the default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
startJobRun_arguments :: Lens' StartJobRun (Maybe (HashMap Text Text))

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
startJobRun_workerType :: Lens' StartJobRun (Maybe WorkerType)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job run.
startJobRun_securityConfiguration :: Lens' StartJobRun (Maybe Text)

-- | This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) to allocate to this
--   JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU
--   is a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
startJobRun_allocatedCapacity :: Lens' StartJobRun (Maybe Int)

-- | The number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job, or an Apache Spark ETL
--   job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl"), you can allocate from 2 to 100
--   DPUs. The default is 10 DPUs. This job type cannot have a fractional
--   DPU allocation.</li>
--   </ul>
startJobRun_maxCapacity :: Lens' StartJobRun (Maybe Double)

-- | The <tt>JobRun</tt> timeout in minutes. This is the maximum time that
--   a job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
startJobRun_timeout :: Lens' StartJobRun (Maybe Natural)

-- | The ID of a previous <tt>JobRun</tt> to retry.
startJobRun_jobRunId :: Lens' StartJobRun (Maybe Text)

-- | The name of the job definition to use.
startJobRun_jobName :: Lens' StartJobRun Text

-- | The ID assigned to this job run.
startJobRunResponse_jobRunId :: Lens' StartJobRunResponse (Maybe Text)

-- | The response's http status code.
startJobRunResponse_httpStatus :: Lens' StartJobRunResponse Int

-- | The name of the blueprint to delete.
deleteBlueprint_name :: Lens' DeleteBlueprint Text

-- | Returns the name of the blueprint that was deleted.
deleteBlueprintResponse_name :: Lens' DeleteBlueprintResponse (Maybe Text)

-- | The response's http status code.
deleteBlueprintResponse_httpStatus :: Lens' DeleteBlueprintResponse Int

-- | A description of the blueprint.
updateBlueprint_description :: Lens' UpdateBlueprint (Maybe Text)

-- | The name of the blueprint.
updateBlueprint_name :: Lens' UpdateBlueprint Text

-- | Specifies a path in Amazon S3 where the blueprint is published.
updateBlueprint_blueprintLocation :: Lens' UpdateBlueprint Text

-- | Returns the name of the blueprint that was updated.
updateBlueprintResponse_name :: Lens' UpdateBlueprintResponse (Maybe Text)

-- | The response's http status code.
updateBlueprintResponse_httpStatus :: Lens' UpdateBlueprintResponse Int

-- | A continuation token, if this is a continuation request.
listBlueprints_nextToken :: Lens' ListBlueprints (Maybe Text)

-- | The maximum size of a list to return.
listBlueprints_maxResults :: Lens' ListBlueprints (Maybe Natural)

-- | Filters the list by an Amazon Web Services resource tag.
listBlueprints_tags :: Lens' ListBlueprints (Maybe (HashMap Text Text))

-- | List of names of blueprints in the account.
listBlueprintsResponse_blueprints :: Lens' ListBlueprintsResponse (Maybe [Text])

-- | A continuation token, if not all blueprint names have been returned.
listBlueprintsResponse_nextToken :: Lens' ListBlueprintsResponse (Maybe Text)

-- | The response's http status code.
listBlueprintsResponse_httpStatus :: Lens' ListBlueprintsResponse Int

-- | The Amazon Web Services account ID of the catalog in which the
--   partition is to be created.
createPartition_catalogId :: Lens' CreatePartition (Maybe Text)

-- | The name of the metadata database in which the partition is to be
--   created.
createPartition_databaseName :: Lens' CreatePartition Text

-- | The name of the metadata table in which the partition is to be
--   created.
createPartition_tableName :: Lens' CreatePartition Text

-- | A <tt>PartitionInput</tt> structure defining the partition to be
--   created.
createPartition_partitionInput :: Lens' CreatePartition PartitionInput

-- | The response's http status code.
createPartitionResponse_httpStatus :: Lens' CreatePartitionResponse Int

-- | A list of trigger names, which may be the names returned from the
--   <tt>ListTriggers</tt> operation.
batchGetTriggers_triggerNames :: Lens' BatchGetTriggers [Text]

-- | A list of names of triggers not found.
batchGetTriggersResponse_triggersNotFound :: Lens' BatchGetTriggersResponse (Maybe [Text])

-- | A list of trigger definitions.
batchGetTriggersResponse_triggers :: Lens' BatchGetTriggersResponse (Maybe [Trigger])

-- | The response's http status code.
batchGetTriggersResponse_httpStatus :: Lens' BatchGetTriggersResponse Int

-- | Specifies whether or not to include the parameter specification.
getBlueprint_includeParameterSpec :: Lens' GetBlueprint (Maybe Bool)

-- | Specifies whether or not to include the blueprint in the response.
getBlueprint_includeBlueprint :: Lens' GetBlueprint (Maybe Bool)

-- | The name of the blueprint.
getBlueprint_name :: Lens' GetBlueprint Text

-- | Returns a <tt>Blueprint</tt> object.
getBlueprintResponse_blueprint :: Lens' GetBlueprintResponse (Maybe Blueprint)

-- | The response's http status code.
getBlueprintResponse_httpStatus :: Lens' GetBlueprintResponse Int

-- | Name of the crawler whose schedule state to set.
stopCrawlerSchedule_crawlerName :: Lens' StopCrawlerSchedule Text

-- | The response's http status code.
stopCrawlerScheduleResponse_httpStatus :: Lens' StopCrawlerScheduleResponse Int

-- | This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   One of <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be
--   provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. One of
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be provided.</li>
--   </ul>
getSchemaByDefinition_schemaId :: Lens' GetSchemaByDefinition SchemaId

-- | The definition of the schema for which schema details are required.
getSchemaByDefinition_schemaDefinition :: Lens' GetSchemaByDefinition Text

-- | The status of the schema version.
getSchemaByDefinitionResponse_status :: Lens' GetSchemaByDefinitionResponse (Maybe SchemaVersionStatus)

-- | The date and time the schema was created.
getSchemaByDefinitionResponse_createdTime :: Lens' GetSchemaByDefinitionResponse (Maybe Text)

-- | The data format of the schema definition. Currently only <tt>AVRO</tt>
--   and <tt>JSON</tt> are supported.
getSchemaByDefinitionResponse_dataFormat :: Lens' GetSchemaByDefinitionResponse (Maybe DataFormat)

-- | The schema ID of the schema version.
getSchemaByDefinitionResponse_schemaVersionId :: Lens' GetSchemaByDefinitionResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schema.
getSchemaByDefinitionResponse_schemaArn :: Lens' GetSchemaByDefinitionResponse (Maybe Text)

-- | The response's http status code.
getSchemaByDefinitionResponse_httpStatus :: Lens' GetSchemaByDefinitionResponse Int

-- | The ID of the Data Catalog in which to create the database. If none is
--   provided, the Amazon Web Services account ID is used by default.
createDatabase_catalogId :: Lens' CreateDatabase (Maybe Text)

-- | The metadata for the database.
createDatabase_databaseInput :: Lens' CreateDatabase DatabaseInput

-- | The response's http status code.
createDatabaseResponse_httpStatus :: Lens' CreateDatabaseResponse Int

-- | The ID of the Data Catalog where the tables reside. If none is
--   provided, the Amazon Web Services account ID is used by default.
getTableVersions_catalogId :: Lens' GetTableVersions (Maybe Text)

-- | A continuation token, if this is not the first call.
getTableVersions_nextToken :: Lens' GetTableVersions (Maybe Text)

-- | The maximum number of table versions to return in one response.
getTableVersions_maxResults :: Lens' GetTableVersions (Maybe Natural)

-- | The database in the catalog in which the table resides. For Hive
--   compatibility, this name is entirely lowercase.
getTableVersions_databaseName :: Lens' GetTableVersions Text

-- | The name of the table. For Hive compatibility, this name is entirely
--   lowercase.
getTableVersions_tableName :: Lens' GetTableVersions Text

-- | A list of strings identifying available versions of the specified
--   table.
getTableVersionsResponse_tableVersions :: Lens' GetTableVersionsResponse (Maybe [TableVersion])

-- | A continuation token, if the list of available versions does not
--   include the last one.
getTableVersionsResponse_nextToken :: Lens' GetTableVersionsResponse (Maybe Text)

-- | The response's http status code.
getTableVersionsResponse_httpStatus :: Lens' GetTableVersionsResponse Int

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when this task runs.
--   
--   If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).
createMLTransform_numberOfWorkers :: Lens' CreateMLTransform (Maybe Int)

-- | The type of predefined worker that is allocated when this task runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
createMLTransform_workerType :: Lens' CreateMLTransform (Maybe WorkerType)

-- | This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
createMLTransform_glueVersion :: Lens' CreateMLTransform (Maybe Text)

-- | The maximum number of times to retry a task for this transform after a
--   task run fails.
createMLTransform_maxRetries :: Lens' CreateMLTransform (Maybe Int)

-- | The number of Glue data processing units (DPUs) that are allocated to
--   task runs for this transform. You can allocate from 2 to 100 DPUs; the
--   default is 10. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
createMLTransform_maxCapacity :: Lens' CreateMLTransform (Maybe Double)

-- | The timeout of the task run for this transform in minutes. This is the
--   maximum time that a task run for this transform can consume resources
--   before it is terminated and enters <tt>TIMEOUT</tt> status. The
--   default is 2,880 minutes (48 hours).
createMLTransform_timeout :: Lens' CreateMLTransform (Maybe Natural)

-- | The encryption-at-rest settings of the transform that apply to
--   accessing user data. Machine learning transforms can access user data
--   encrypted in Amazon S3 using KMS.
createMLTransform_transformEncryption :: Lens' CreateMLTransform (Maybe TransformEncryption)

-- | A description of the machine learning transform that is being defined.
--   The default is an empty string.
createMLTransform_description :: Lens' CreateMLTransform (Maybe Text)

-- | The tags to use with this machine learning transform. You may use tags
--   to limit access to the machine learning transform. For more
--   information about tags in Glue, see <a>Amazon Web Services Tags in
--   Glue</a> in the developer guide.
createMLTransform_tags :: Lens' CreateMLTransform (Maybe (HashMap Text Text))

-- | The unique name that you give the transform when you create it.
createMLTransform_name :: Lens' CreateMLTransform Text

-- | A list of Glue table definitions used by the transform.
createMLTransform_inputRecordTables :: Lens' CreateMLTransform [GlueTable]

-- | The algorithmic parameters that are specific to the transform type
--   used. Conditionally dependent on the transform type.
createMLTransform_parameters :: Lens' CreateMLTransform TransformParameters

-- | The name or Amazon Resource Name (ARN) of the IAM role with the
--   required permissions. The required permissions include both Glue
--   service role permissions to Glue resources, and Amazon S3 permissions
--   required by the transform.
--   
--   <ul>
--   <li>This role needs Glue service role permissions to allow access to
--   resources in Glue. See <a>Attach a Policy to IAM Users That Access
--   Glue</a>.</li>
--   <li>This role needs permission to your Amazon Simple Storage Service
--   (Amazon S3) sources, targets, temporary directory, scripts, and any
--   libraries used by the task run for this transform.</li>
--   </ul>
createMLTransform_role :: Lens' CreateMLTransform Text

-- | A unique identifier that is generated for the transform.
createMLTransformResponse_transformId :: Lens' CreateMLTransformResponse (Maybe Text)

-- | The response's http status code.
createMLTransformResponse_httpStatus :: Lens' CreateMLTransformResponse Int

-- | This is a wrapper structure that may contain the schema name and
--   Amazon Resource Name (ARN).
deleteSchemaVersions_schemaId :: Lens' DeleteSchemaVersions SchemaId

-- | A version range may be supplied which may be of the format:
--   
--   <ul>
--   <li>a single version number, 5</li>
--   <li>a range, 5-8 : deletes versions 5, 6, 7, 8</li>
--   </ul>
deleteSchemaVersions_versions :: Lens' DeleteSchemaVersions Text

-- | A list of <tt>SchemaVersionErrorItem</tt> objects, each containing an
--   error and schema version.
deleteSchemaVersionsResponse_schemaVersionErrors :: Lens' DeleteSchemaVersionsResponse (Maybe [SchemaVersionErrorItem])

-- | The response's http status code.
deleteSchemaVersionsResponse_httpStatus :: Lens' DeleteSchemaVersionsResponse Int

-- | The name of the trigger to delete.
deleteTrigger_name :: Lens' DeleteTrigger Text

-- | The name of the trigger that was deleted.
deleteTriggerResponse_name :: Lens' DeleteTriggerResponse (Maybe Text)

-- | The response's http status code.
deleteTriggerResponse_httpStatus :: Lens' DeleteTriggerResponse Int

-- | The name of the trigger to update.
updateTrigger_name :: Lens' UpdateTrigger Text

-- | The new values with which to update the trigger.
updateTrigger_triggerUpdate :: Lens' UpdateTrigger TriggerUpdate

-- | The resulting trigger definition.
updateTriggerResponse_trigger :: Lens' UpdateTriggerResponse (Maybe Trigger)

-- | The response's http status code.
updateTriggerResponse_httpStatus :: Lens' UpdateTriggerResponse Int

-- | Specifies configuration properties of a job run notification.
action_notificationProperty :: Lens' Action (Maybe NotificationProperty)

-- | The job arguments used when this trigger fires. For this job run, they
--   replace the default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
action_arguments :: Lens' Action (Maybe (HashMap Text Text))

-- | The name of a job to be run.
action_jobName :: Lens' Action (Maybe Text)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this action.
action_securityConfiguration :: Lens' Action (Maybe Text)

-- | The <tt>JobRun</tt> timeout in minutes. This is the maximum time that
--   a job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
action_timeout :: Lens' Action (Maybe Natural)

-- | The name of the crawler to be used with this action.
action_crawlerName :: Lens' Action (Maybe Text)

-- | A list of a limited number of partitions in the response.
backfillError_partitions :: Lens' BackfillError (Maybe [PartitionValueList])

-- | The error code for an error that occurred when registering partition
--   indexes for an existing table.
backfillError_code :: Lens' BackfillError (Maybe BackfillErrorCode)

-- | The name of the job definition that is used in the job run in
--   question.
batchStopJobRunError_jobName :: Lens' BatchStopJobRunError (Maybe Text)

-- | The <tt>JobRunId</tt> of the job run in question.
batchStopJobRunError_jobRunId :: Lens' BatchStopJobRunError (Maybe Text)

-- | Specifies details about the error that was encountered.
batchStopJobRunError_errorDetail :: Lens' BatchStopJobRunError (Maybe ErrorDetail)

-- | The name of the job definition used in the job run that was stopped.
batchStopJobRunSuccessfulSubmission_jobName :: Lens' BatchStopJobRunSuccessfulSubmission (Maybe Text)

-- | The <tt>JobRunId</tt> of the job run that was stopped.
batchStopJobRunSuccessfulSubmission_jobRunId :: Lens' BatchStopJobRunSuccessfulSubmission (Maybe Text)

-- | A list of values defining the partitions.
batchUpdatePartitionFailureEntry_partitionValueList :: Lens' BatchUpdatePartitionFailureEntry (Maybe [Text])

-- | The details about the batch update partition error.
batchUpdatePartitionFailureEntry_errorDetail :: Lens' BatchUpdatePartitionFailureEntry (Maybe ErrorDetail)

-- | A list of values defining the partitions.
batchUpdatePartitionRequestEntry_partitionValueList :: Lens' BatchUpdatePartitionRequestEntry [Text]

-- | The structure used to update a partition.
batchUpdatePartitionRequestEntry_partitionInput :: Lens' BatchUpdatePartitionRequestEntry PartitionInput

-- | The size of the longest bit sequence in the column.
binaryColumnStatisticsData_maximumLength :: Lens' BinaryColumnStatisticsData Natural

-- | The average bit sequence length in the column.
binaryColumnStatisticsData_averageLength :: Lens' BinaryColumnStatisticsData Double

-- | The number of null values in the column.
binaryColumnStatisticsData_numberOfNulls :: Lens' BinaryColumnStatisticsData Natural

-- | The status of the blueprint registration.
--   
--   <ul>
--   <li>Creating — The blueprint registration is in progress.</li>
--   <li>Active — The blueprint has been successfully registered.</li>
--   <li>Updating — An update to the blueprint registration is in
--   progress.</li>
--   <li>Failed — The blueprint registration failed.</li>
--   </ul>
blueprint_status :: Lens' Blueprint (Maybe BlueprintStatus)

-- | A JSON string that indicates the list of parameter specifications for
--   the blueprint.
blueprint_parameterSpec :: Lens' Blueprint (Maybe Text)

-- | Specifies the path in Amazon S3 where the blueprint is published.
blueprint_blueprintLocation :: Lens' Blueprint (Maybe Text)

-- | The date and time the blueprint was last modified.
blueprint_lastModifiedOn :: Lens' Blueprint (Maybe UTCTime)

-- | When there are multiple versions of a blueprint and the latest version
--   has some errors, this attribute indicates the last successful
--   blueprint definition that is available with the service.
blueprint_lastActiveDefinition :: Lens' Blueprint (Maybe LastActiveDefinition)

-- | The name of the blueprint.
blueprint_name :: Lens' Blueprint (Maybe Text)

-- | Specifies a path in Amazon S3 where the blueprint is copied when you
--   call <tt>CreateBlueprint/UpdateBlueprint</tt> to register the
--   blueprint in Glue.
blueprint_blueprintServiceLocation :: Lens' Blueprint (Maybe Text)

-- | An error message.
blueprint_errorMessage :: Lens' Blueprint (Maybe Text)

-- | The description of the blueprint.
blueprint_description :: Lens' Blueprint (Maybe Text)

-- | The date and time the blueprint was registered.
blueprint_createdOn :: Lens' Blueprint (Maybe UTCTime)

-- | The run ID for this blueprint.
blueprintDetails_runId :: Lens' BlueprintDetails (Maybe Text)

-- | The name of the blueprint.
blueprintDetails_blueprintName :: Lens' BlueprintDetails (Maybe Text)

-- | The name of a workflow that is created as a result of a successful
--   blueprint run. If a blueprint run has an error, there will not be a
--   workflow created.
blueprintRun_workflowName :: Lens' BlueprintRun (Maybe Text)

-- | The date and time that the blueprint run completed.
blueprintRun_completedOn :: Lens' BlueprintRun (Maybe UTCTime)

-- | The state of the blueprint run. Possible values are:
--   
--   <ul>
--   <li>Running — The blueprint run is in progress.</li>
--   <li>Succeeded — The blueprint run completed successfully.</li>
--   <li>Failed — The blueprint run failed and rollback is complete.</li>
--   <li>Rolling Back — The blueprint run failed and rollback is in
--   progress.</li>
--   </ul>
blueprintRun_state :: Lens' BlueprintRun (Maybe BlueprintRunState)

-- | If there are any errors while creating the entities of a workflow, we
--   try to roll back the created entities until that point and delete
--   them. This attribute indicates the errors seen while trying to delete
--   the entities that are created.
blueprintRun_rollbackErrorMessage :: Lens' BlueprintRun (Maybe Text)

-- | The date and time that the blueprint run started.
blueprintRun_startedOn :: Lens' BlueprintRun (Maybe UTCTime)

-- | The run ID for this blueprint run.
blueprintRun_runId :: Lens' BlueprintRun (Maybe Text)

-- | The blueprint parameters as a string. You will have to provide a value
--   for each key that is required from the parameter spec that is defined
--   in the <tt>Blueprint$ParameterSpec</tt>.
blueprintRun_parameters :: Lens' BlueprintRun (Maybe Text)

-- | The name of the blueprint.
blueprintRun_blueprintName :: Lens' BlueprintRun (Maybe Text)

-- | Indicates any errors that are seen while running the blueprint.
blueprintRun_errorMessage :: Lens' BlueprintRun (Maybe Text)

-- | The role ARN. This role will be assumed by the Glue service and will
--   be used to create the workflow and other entities of a workflow.
blueprintRun_roleArn :: Lens' BlueprintRun (Maybe Text)

-- | The number of true values in the column.
booleanColumnStatisticsData_numberOfTrues :: Lens' BooleanColumnStatisticsData Natural

-- | The number of false values in the column.
booleanColumnStatisticsData_numberOfFalses :: Lens' BooleanColumnStatisticsData Natural

-- | The number of null values in the column.
booleanColumnStatisticsData_numberOfNulls :: Lens' BooleanColumnStatisticsData Natural

-- | The database in which the table metadata resides.
catalogEntry_databaseName :: Lens' CatalogEntry Text

-- | The name of the table in question.
catalogEntry_tableName :: Lens' CatalogEntry Text

-- | The name of the person who initiated the migration.
catalogImportStatus_importedBy :: Lens' CatalogImportStatus (Maybe Text)

-- | The time that the migration was started.
catalogImportStatus_importTime :: Lens' CatalogImportStatus (Maybe UTCTime)

-- | <tt>True</tt> if the migration has completed, or <tt>False</tt>
--   otherwise.
catalogImportStatus_importCompleted :: Lens' CatalogImportStatus (Maybe Bool)

-- | The name of the database to be synchronized.
catalogTarget_databaseName :: Lens' CatalogTarget Text

-- | A list of the tables to be synchronized.
catalogTarget_tables :: Lens' CatalogTarget (NonEmpty Text)

-- | A classifier that uses <tt>grok</tt>.
classifier_grokClassifier :: Lens' Classifier (Maybe GrokClassifier)

-- | A classifier for XML content.
classifier_xMLClassifier :: Lens' Classifier (Maybe XMLClassifier)

-- | A classifier for comma-separated values (CSV).
classifier_csvClassifier :: Lens' Classifier (Maybe CsvClassifier)

-- | A classifier for JSON content.
classifier_jsonClassifier :: Lens' Classifier (Maybe JsonClassifier)

-- | The encryption mode to use for CloudWatch data.
cloudWatchEncryption_cloudWatchEncryptionMode :: Lens' CloudWatchEncryption (Maybe CloudWatchEncryptionMode)

-- | The Amazon Resource Name (ARN) of the KMS key to be used to encrypt
--   the data.
cloudWatchEncryption_kmsKeyArn :: Lens' CloudWatchEncryption (Maybe Text)

-- | The target of the edge.
codeGenEdge_targetParameter :: Lens' CodeGenEdge (Maybe Text)

-- | The ID of the node at which the edge starts.
codeGenEdge_source :: Lens' CodeGenEdge Text

-- | The ID of the node at which the edge ends.
codeGenEdge_target :: Lens' CodeGenEdge Text

-- | The line number of the node.
codeGenNode_lineNumber :: Lens' CodeGenNode (Maybe Int)

-- | A node identifier that is unique within the node's graph.
codeGenNode_id :: Lens' CodeGenNode Text

-- | The type of node that this is.
codeGenNode_nodeType :: Lens' CodeGenNode Text

-- | Properties of the node, in the form of name-value pairs.
codeGenNode_args :: Lens' CodeGenNode [CodeGenNodeArg]

-- | True if the value is used as a parameter.
codeGenNodeArg_param :: Lens' CodeGenNodeArg (Maybe Bool)

-- | The name of the argument or property.
codeGenNodeArg_name :: Lens' CodeGenNodeArg Text

-- | The value of the argument or property.
codeGenNodeArg_value :: Lens' CodeGenNodeArg Text

-- | These key-value pairs define properties associated with the column.
column_parameters :: Lens' Column (Maybe (HashMap Text Text))

-- | The data type of the <tt>Column</tt>.
column_type :: Lens' Column (Maybe Text)

-- | A free-form text comment.
column_comment :: Lens' Column (Maybe Text)

-- | The name of the <tt>Column</tt>.
column_name :: Lens' Column Text

-- | An error message with the reason for the failure of an operation.
columnError_error :: Lens' ColumnError (Maybe ErrorDetail)

-- | The name of the column that failed.
columnError_columnName :: Lens' ColumnError (Maybe Text)

-- | The column importance score for the column, as a decimal.
columnImportance_importance :: Lens' ColumnImportance (Maybe Double)

-- | The name of a column.
columnImportance_columnName :: Lens' ColumnImportance (Maybe Text)

-- | Name of column which statistics belong to.
columnStatistics_columnName :: Lens' ColumnStatistics Text

-- | The data type of the column.
columnStatistics_columnType :: Lens' ColumnStatistics Text

-- | The timestamp of when column statistics were generated.
columnStatistics_analyzedTime :: Lens' ColumnStatistics UTCTime

-- | A <tt>ColumnStatisticData</tt> object that contains the statistics
--   data values.
columnStatistics_statisticsData :: Lens' ColumnStatistics ColumnStatisticsData

-- | Binary column statistics data.
columnStatisticsData_binaryColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe BinaryColumnStatisticsData)

-- | Date column statistics data.
columnStatisticsData_dateColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe DateColumnStatisticsData)

-- | Boolean column statistics data.
columnStatisticsData_booleanColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe BooleanColumnStatisticsData)

-- | Decimal column statistics data.
columnStatisticsData_decimalColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe DecimalColumnStatisticsData)

-- | Double column statistics data.
columnStatisticsData_doubleColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe DoubleColumnStatisticsData)

-- | String column statistics data.
columnStatisticsData_stringColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe StringColumnStatisticsData)

-- | Long column statistics data.
columnStatisticsData_longColumnStatisticsData :: Lens' ColumnStatisticsData (Maybe LongColumnStatisticsData)

-- | The type of column statistics data.
columnStatisticsData_type :: Lens' ColumnStatisticsData ColumnStatisticsType

-- | An error message with the reason for the failure of an operation.
columnStatisticsError_error :: Lens' ColumnStatisticsError (Maybe ErrorDetail)

-- | The <tt>ColumnStatistics</tt> of the column.
columnStatisticsError_columnStatistics :: Lens' ColumnStatisticsError (Maybe ColumnStatistics)

-- | The state of the crawler to which this condition applies.
condition_crawlState :: Lens' Condition (Maybe CrawlState)

-- | The condition state. Currently, the only job states that a trigger can
--   listen for are <tt>SUCCEEDED</tt>, <tt>STOPPED</tt>, <tt>FAILED</tt>,
--   and <tt>TIMEOUT</tt>. The only crawler states that a trigger can
--   listen for are <tt>SUCCEEDED</tt>, <tt>FAILED</tt>, and
--   <tt>CANCELLED</tt>.
condition_state :: Lens' Condition (Maybe JobRunState)

-- | The name of the job whose <tt>JobRuns</tt> this condition applies to,
--   and on which this trigger waits.
condition_jobName :: Lens' Condition (Maybe Text)

-- | A logical operator.
condition_logicalOperator :: Lens' Condition (Maybe LogicalOperator)

-- | The name of the crawler to which this condition applies.
condition_crawlerName :: Lens' Condition (Maybe Text)

-- | The number of nonmatches in the data that the transform correctly
--   rejected, in the confusion matrix for your transform.
confusionMatrix_numTrueNegatives :: Lens' ConfusionMatrix (Maybe Integer)

-- | The number of matches in the data that the transform didn't find, in
--   the confusion matrix for your transform.
confusionMatrix_numFalseNegatives :: Lens' ConfusionMatrix (Maybe Integer)

-- | The number of matches in the data that the transform correctly found,
--   in the confusion matrix for your transform.
confusionMatrix_numTruePositives :: Lens' ConfusionMatrix (Maybe Integer)

-- | The number of nonmatches in the data that the transform incorrectly
--   classified as a match, in the confusion matrix for your transform.
confusionMatrix_numFalsePositives :: Lens' ConfusionMatrix (Maybe Integer)

-- | The time that this connection definition was created.
connection_creationTime :: Lens' Connection (Maybe UTCTime)

-- | The user, group, or role that last updated this connection definition.
connection_lastUpdatedBy :: Lens' Connection (Maybe Text)

-- | These key-value pairs define parameters for the connection:
--   
--   <ul>
--   <li><tt>HOST</tt> - The host URI: either the fully qualified domain
--   name (FQDN) or the IPv4 address of the database host.</li>
--   <li><tt>PORT</tt> - The port number, between 1024 and 65535, of the
--   port on which the database host is listening for database
--   connections.</li>
--   <li><tt>USER_NAME</tt> - The name under which to log in to the
--   database. The value string for <tt>USER_NAME</tt> is
--   "<tt>USERNAME</tt>".</li>
--   <li><tt>PASSWORD</tt> - A password, if one is used, for the user
--   name.</li>
--   <li><tt>ENCRYPTED_PASSWORD</tt> - When you enable connection password
--   protection by setting <tt>ConnectionPasswordEncryption</tt> in the
--   Data Catalog encryption settings, this field stores the encrypted
--   password.</li>
--   <li><tt>JDBC_DRIVER_JAR_URI</tt> - The Amazon Simple Storage Service
--   (Amazon S3) path of the JAR file that contains the JDBC driver to
--   use.</li>
--   <li><tt>JDBC_DRIVER_CLASS_NAME</tt> - The class name of the JDBC
--   driver to use.</li>
--   <li><tt>JDBC_ENGINE</tt> - The name of the JDBC engine to use.</li>
--   <li><tt>JDBC_ENGINE_VERSION</tt> - The version of the JDBC engine to
--   use.</li>
--   <li><tt>CONFIG_FILES</tt> - (Reserved for future use.)</li>
--   <li><tt>INSTANCE_ID</tt> - The instance ID to use.</li>
--   <li><tt>JDBC_CONNECTION_URL</tt> - The URL for connecting to a JDBC
--   data source.</li>
--   <li><tt>JDBC_ENFORCE_SSL</tt> - A Boolean string (true, false)
--   specifying whether Secure Sockets Layer (SSL) with hostname matching
--   is enforced for the JDBC connection on the client. The default is
--   false.</li>
--   <li><tt>CUSTOM_JDBC_CERT</tt> - An Amazon S3 location specifying the
--   customer's root certificate. Glue uses this root certificate to
--   validate the customer’s certificate when connecting to the customer
--   database. Glue only handles X.509 certificates. The certificate
--   provided must be DER-encoded and supplied in Base64 encoding PEM
--   format.</li>
--   <li><tt>SKIP_CUSTOM_JDBC_CERT_VALIDATION</tt> - By default, this is
--   <tt>false</tt>. Glue validates the Signature algorithm and Subject
--   Public Key Algorithm for the customer certificate. The only permitted
--   algorithms for the Signature algorithm are SHA256withRSA,
--   SHA384withRSA or SHA512withRSA. For the Subject Public Key Algorithm,
--   the key length must be at least 2048. You can set the value of this
--   property to <tt>true</tt> to skip Glue’s validation of the customer
--   certificate.</li>
--   <li><tt>CUSTOM_JDBC_CERT_STRING</tt> - A custom JDBC certificate
--   string which is used for domain match or distinguished name match to
--   prevent a man-in-the-middle attack. In Oracle database, this is used
--   as the <tt>SSL_SERVER_CERT_DN</tt>; in Microsoft SQL Server, this is
--   used as the <tt>hostNameInCertificate</tt>.</li>
--   <li><tt>CONNECTION_URL</tt> - The URL for connecting to a general
--   (non-JDBC) data source.</li>
--   <li><tt>KAFKA_BOOTSTRAP_SERVERS</tt> - A comma-separated list of host
--   and port pairs that are the addresses of the Apache Kafka brokers in a
--   Kafka cluster to which a Kafka client will connect to and bootstrap
--   itself.</li>
--   <li><tt>KAFKA_SSL_ENABLED</tt> - Whether to enable or disable SSL on
--   an Apache Kafka connection. Default value is "true".</li>
--   <li><tt>KAFKA_CUSTOM_CERT</tt> - The Amazon S3 URL for the private CA
--   cert file (.pem format). The default is an empty string.</li>
--   <li><tt>KAFKA_SKIP_CUSTOM_CERT_VALIDATION</tt> - Whether to skip the
--   validation of the CA cert file or not. Glue validates for three
--   algorithms: SHA256withRSA, SHA384withRSA and SHA512withRSA. Default
--   value is "false".</li>
--   <li><tt>SECRET_ID</tt> - The secret ID used for the secret manager of
--   credentials.</li>
--   <li><tt>CONNECTOR_URL</tt> - The connector URL for a MARKETPLACE or
--   CUSTOM connection.</li>
--   <li><tt>CONNECTOR_TYPE</tt> - The connector type for a MARKETPLACE or
--   CUSTOM connection.</li>
--   <li><tt>CONNECTOR_CLASS_NAME</tt> - The connector class name for a
--   MARKETPLACE or CUSTOM connection.</li>
--   <li><tt>KAFKA_CLIENT_KEYSTORE</tt> - The Amazon S3 location of the
--   client keystore file for Kafka client side authentication
--   (Optional).</li>
--   <li><tt>KAFKA_CLIENT_KEYSTORE_PASSWORD</tt> - The password to access
--   the provided keystore (Optional).</li>
--   <li><tt>KAFKA_CLIENT_KEY_PASSWORD</tt> - A keystore can consist of
--   multiple keys, so this is the password to access the client key to be
--   used with the Kafka server side key (Optional).</li>
--   <li><tt>ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD</tt> - The encrypted
--   version of the Kafka client keystore password (if the user has the
--   Glue encrypt passwords setting selected).</li>
--   <li><tt>ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD</tt> - The encrypted
--   version of the Kafka client key password (if the user has the Glue
--   encrypt passwords setting selected).</li>
--   </ul>
connection_connectionProperties :: Lens' Connection (Maybe (HashMap ConnectionPropertyKey Text))

-- | The last time that this connection definition was updated.
connection_lastUpdatedTime :: Lens' Connection (Maybe UTCTime)

-- | A list of criteria that can be used in selecting this connection.
connection_matchCriteria :: Lens' Connection (Maybe [Text])

-- | A map of physical connection requirements, such as virtual private
--   cloud (VPC) and <tt>SecurityGroup</tt>, that are needed to make this
--   connection successfully.
connection_physicalConnectionRequirements :: Lens' Connection (Maybe PhysicalConnectionRequirements)

-- | The name of the connection definition.
connection_name :: Lens' Connection (Maybe Text)

-- | The description of the connection.
connection_description :: Lens' Connection (Maybe Text)

-- | The type of the connection. Currently, SFTP is not supported.
connection_connectionType :: Lens' Connection (Maybe ConnectionType)

-- | A list of criteria that can be used in selecting this connection.
connectionInput_matchCriteria :: Lens' ConnectionInput (Maybe [Text])

-- | A map of physical connection requirements, such as virtual private
--   cloud (VPC) and <tt>SecurityGroup</tt>, that are needed to
--   successfully make this connection.
connectionInput_physicalConnectionRequirements :: Lens' ConnectionInput (Maybe PhysicalConnectionRequirements)

-- | The description of the connection.
connectionInput_description :: Lens' ConnectionInput (Maybe Text)

-- | The name of the connection.
connectionInput_name :: Lens' ConnectionInput Text

-- | The type of the connection. Currently, these types are supported:
--   
--   <ul>
--   <li><tt>JDBC</tt> - Designates a connection to a database through Java
--   Database Connectivity (JDBC).</li>
--   <li><tt>KAFKA</tt> - Designates a connection to an Apache Kafka
--   streaming platform.</li>
--   <li><tt>MONGODB</tt> - Designates a connection to a MongoDB document
--   database.</li>
--   <li><tt>NETWORK</tt> - Designates a network connection to a data
--   source within an Amazon Virtual Private Cloud environment (Amazon
--   VPC).</li>
--   <li><tt>MARKETPLACE</tt> - Uses configuration settings contained in a
--   connector purchased from Amazon Web Services Marketplace to read from
--   and write to data stores that are not natively supported by Glue.</li>
--   <li><tt>CUSTOM</tt> - Uses configuration settings contained in a
--   custom connector to read from and write to data stores that are not
--   natively supported by Glue.</li>
--   </ul>
--   
--   SFTP is not supported.
connectionInput_connectionType :: Lens' ConnectionInput ConnectionType

-- | These key-value pairs define parameters for the connection.
connectionInput_connectionProperties :: Lens' ConnectionInput (HashMap ConnectionPropertyKey Text)

-- | An KMS key that is used to encrypt the connection password.
--   
--   If connection password protection is enabled, the caller of
--   <tt>CreateConnection</tt> and <tt>UpdateConnection</tt> needs at least
--   <tt>kms:Encrypt</tt> permission on the specified KMS key, to encrypt
--   passwords before storing them in the Data Catalog.
--   
--   You can set the decrypt permission to enable or restrict access on the
--   password key according to your security requirements.
connectionPasswordEncryption_awsKmsKeyId :: Lens' ConnectionPasswordEncryption (Maybe Text)

-- | When the <tt>ReturnConnectionPasswordEncrypted</tt> flag is set to
--   "true", passwords remain encrypted in the responses of
--   <tt>GetConnection</tt> and <tt>GetConnections</tt>. This encryption
--   takes effect independently from catalog encryption.
connectionPasswordEncryption_returnConnectionPasswordEncrypted :: Lens' ConnectionPasswordEncryption Bool

-- | A list of connections used by the job.
connectionsList_connections :: Lens' ConnectionsList (Maybe [Text])

-- | The date and time on which the crawl completed.
crawl_completedOn :: Lens' Crawl (Maybe UTCTime)

-- | The state of the crawler.
crawl_state :: Lens' Crawl (Maybe CrawlState)

-- | The date and time on which the crawl started.
crawl_startedOn :: Lens' Crawl (Maybe UTCTime)

-- | The log stream associated with the crawl.
crawl_logStream :: Lens' Crawl (Maybe Text)

-- | The log group associated with the crawl.
crawl_logGroup :: Lens' Crawl (Maybe Text)

-- | The error message associated with the crawl.
crawl_errorMessage :: Lens' Crawl (Maybe Text)

-- | The time that the crawler was created.
crawler_creationTime :: Lens' Crawler (Maybe UTCTime)

-- | Indicates whether the crawler is running, or whether a run is pending.
crawler_state :: Lens' Crawler (Maybe CrawlerState)

-- | The policy that specifies update and delete behaviors for the crawler.
crawler_schemaChangePolicy :: Lens' Crawler (Maybe SchemaChangePolicy)

-- | The time that the crawler was last updated.
crawler_lastUpdated :: Lens' Crawler (Maybe UTCTime)

-- | For scheduled crawlers, the schedule when the crawler runs.
crawler_schedule :: Lens' Crawler (Maybe Schedule)

-- | The status of the last crawl, and potentially error information if an
--   error occurred.
crawler_lastCrawl :: Lens' Crawler (Maybe LastCrawlInfo)

-- | If the crawler is running, contains the total time elapsed since the
--   last crawl began.
crawler_crawlElapsedTime :: Lens' Crawler (Maybe Integer)

-- | A policy that specifies whether to crawl the entire dataset again, or
--   to crawl only folders that were added since the last crawler run.
crawler_recrawlPolicy :: Lens' Crawler (Maybe RecrawlPolicy)

-- | A list of UTF-8 strings that specify the custom classifiers that are
--   associated with the crawler.
crawler_classifiers :: Lens' Crawler (Maybe [Text])

-- | The Amazon Resource Name (ARN) of an IAM role that's used to access
--   customer resources, such as Amazon Simple Storage Service (Amazon S3)
--   data.
crawler_role :: Lens' Crawler (Maybe Text)

-- | The name of the crawler.
crawler_name :: Lens' Crawler (Maybe Text)

-- | A collection of targets to crawl.
crawler_targets :: Lens' Crawler (Maybe CrawlerTargets)

-- | The version of the crawler.
crawler_version :: Lens' Crawler (Maybe Integer)

-- | The name of the database in which the crawler's output is stored.
crawler_databaseName :: Lens' Crawler (Maybe Text)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used by
--   this crawler.
crawler_crawlerSecurityConfiguration :: Lens' Crawler (Maybe Text)

-- | A configuration that specifies whether data lineage is enabled for the
--   crawler.
crawler_lineageConfiguration :: Lens' Crawler (Maybe LineageConfiguration)

-- | Crawler configuration information. This versioned JSON string allows
--   users to specify aspects of a crawler's behavior. For more
--   information, see <a>Include and Exclude Patterns</a>.
crawler_configuration :: Lens' Crawler (Maybe Text)

-- | The prefix added to the names of tables that are created.
crawler_tablePrefix :: Lens' Crawler (Maybe Text)

-- | A description of the crawler.
crawler_description :: Lens' Crawler (Maybe Text)

-- | The duration of the crawler's most recent run, in seconds.
crawlerMetrics_lastRuntimeSeconds :: Lens' CrawlerMetrics (Maybe Double)

-- | The number of tables created by this crawler.
crawlerMetrics_tablesCreated :: Lens' CrawlerMetrics (Maybe Natural)

-- | True if the crawler is still estimating how long it will take to
--   complete this run.
crawlerMetrics_stillEstimating :: Lens' CrawlerMetrics (Maybe Bool)

-- | The median duration of this crawler's runs, in seconds.
crawlerMetrics_medianRuntimeSeconds :: Lens' CrawlerMetrics (Maybe Double)

-- | The estimated time left to complete a running crawl.
crawlerMetrics_timeLeftSeconds :: Lens' CrawlerMetrics (Maybe Double)

-- | The number of tables deleted by this crawler.
crawlerMetrics_tablesDeleted :: Lens' CrawlerMetrics (Maybe Natural)

-- | The number of tables updated by this crawler.
crawlerMetrics_tablesUpdated :: Lens' CrawlerMetrics (Maybe Natural)

-- | The name of the crawler.
crawlerMetrics_crawlerName :: Lens' CrawlerMetrics (Maybe Text)

-- | A list of crawls represented by the crawl node.
crawlerNodeDetails_crawls :: Lens' CrawlerNodeDetails (Maybe [Crawl])

-- | Specifies Amazon DynamoDB targets.
crawlerTargets_dynamoDBTargets :: Lens' CrawlerTargets (Maybe [DynamoDBTarget])

-- | Specifies Amazon Simple Storage Service (Amazon S3) targets.
crawlerTargets_s3Targets :: Lens' CrawlerTargets (Maybe [S3Target])

-- | Specifies Amazon DocumentDB or MongoDB targets.
crawlerTargets_mongoDBTargets :: Lens' CrawlerTargets (Maybe [MongoDBTarget])

-- | Specifies Glue Data Catalog targets.
crawlerTargets_catalogTargets :: Lens' CrawlerTargets (Maybe [CatalogTarget])

-- | Specifies JDBC targets.
crawlerTargets_jdbcTargets :: Lens' CrawlerTargets (Maybe [JdbcTarget])

-- | A custom symbol to denote what combines content into a single column
--   value. Must be different from the column delimiter.
createCsvClassifierRequest_quoteSymbol :: Lens' CreateCsvClassifierRequest (Maybe Text)

-- | Indicates whether the CSV file contains a header.
createCsvClassifierRequest_containsHeader :: Lens' CreateCsvClassifierRequest (Maybe CsvHeaderOption)

-- | Specifies not to trim values before identifying the type of column
--   values. The default value is true.
createCsvClassifierRequest_disableValueTrimming :: Lens' CreateCsvClassifierRequest (Maybe Bool)

-- | A list of strings representing column names.
createCsvClassifierRequest_header :: Lens' CreateCsvClassifierRequest (Maybe [Text])

-- | Enables the processing of files that contain only one column.
createCsvClassifierRequest_allowSingleColumn :: Lens' CreateCsvClassifierRequest (Maybe Bool)

-- | A custom symbol to denote what separates each column entry in the row.
createCsvClassifierRequest_delimiter :: Lens' CreateCsvClassifierRequest (Maybe Text)

-- | The name of the classifier.
createCsvClassifierRequest_name :: Lens' CreateCsvClassifierRequest Text

-- | Optional custom grok patterns used by this classifier.
createGrokClassifierRequest_customPatterns :: Lens' CreateGrokClassifierRequest (Maybe Text)

-- | An identifier of the data format that the classifier matches, such as
--   Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.
createGrokClassifierRequest_classification :: Lens' CreateGrokClassifierRequest Text

-- | The name of the new classifier.
createGrokClassifierRequest_name :: Lens' CreateGrokClassifierRequest Text

-- | The grok pattern used by this classifier.
createGrokClassifierRequest_grokPattern :: Lens' CreateGrokClassifierRequest Text

-- | The name of the classifier.
createJsonClassifierRequest_name :: Lens' CreateJsonClassifierRequest Text

-- | A <tt>JsonPath</tt> string defining the JSON data for the classifier
--   to classify. Glue supports a subset of JsonPath, as described in
--   <a>Writing JsonPath Custom Classifiers</a>.
createJsonClassifierRequest_jsonPath :: Lens' CreateJsonClassifierRequest Text

-- | The XML tag designating the element that contains each record in an
--   XML document being parsed. This can't identify a self-closing element
--   (closed by <tt>/&gt;</tt>). An empty row element that contains only
--   attributes can be parsed as long as it ends with a closing tag (for
--   example, <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is
--   okay, but <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
createXMLClassifierRequest_rowTag :: Lens' CreateXMLClassifierRequest (Maybe Text)

-- | An identifier of the data format that the classifier matches.
createXMLClassifierRequest_classification :: Lens' CreateXMLClassifierRequest Text

-- | The name of the classifier.
createXMLClassifierRequest_name :: Lens' CreateXMLClassifierRequest Text

-- | The time that this classifier was registered.
csvClassifier_creationTime :: Lens' CsvClassifier (Maybe UTCTime)

-- | A custom symbol to denote what combines content into a single column
--   value. It must be different from the column delimiter.
csvClassifier_quoteSymbol :: Lens' CsvClassifier (Maybe Text)

-- | Indicates whether the CSV file contains a header.
csvClassifier_containsHeader :: Lens' CsvClassifier (Maybe CsvHeaderOption)

-- | The time that this classifier was last updated.
csvClassifier_lastUpdated :: Lens' CsvClassifier (Maybe UTCTime)

-- | Specifies not to trim values before identifying the type of column
--   values. The default value is <tt>true</tt>.
csvClassifier_disableValueTrimming :: Lens' CsvClassifier (Maybe Bool)

-- | A list of strings representing column names.
csvClassifier_header :: Lens' CsvClassifier (Maybe [Text])

-- | The version of this classifier.
csvClassifier_version :: Lens' CsvClassifier (Maybe Integer)

-- | Enables the processing of files that contain only one column.
csvClassifier_allowSingleColumn :: Lens' CsvClassifier (Maybe Bool)

-- | A custom symbol to denote what separates each column entry in the row.
csvClassifier_delimiter :: Lens' CsvClassifier (Maybe Text)

-- | The name of the classifier.
csvClassifier_name :: Lens' CsvClassifier Text

-- | Specifies the encryption-at-rest configuration for the Data Catalog.
dataCatalogEncryptionSettings_encryptionAtRest :: Lens' DataCatalogEncryptionSettings (Maybe EncryptionAtRest)

-- | When connection password protection is enabled, the Data Catalog uses
--   a customer-provided key to encrypt the password as part of
--   <tt>CreateConnection</tt> or <tt>UpdateConnection</tt> and store it in
--   the <tt>ENCRYPTED_PASSWORD</tt> field in the connection properties.
--   You can enable catalog encryption or only password encryption.
dataCatalogEncryptionSettings_connectionPasswordEncryption :: Lens' DataCatalogEncryptionSettings (Maybe ConnectionPasswordEncryption)

-- | An identifier for the Lake Formation principal.
dataLakePrincipal_dataLakePrincipalIdentifier :: Lens' DataLakePrincipal (Maybe Text)

-- | The location of the database (for example, an HDFS path).
database_locationUri :: Lens' Database (Maybe Text)

-- | The ID of the Data Catalog in which the database resides.
database_catalogId :: Lens' Database (Maybe Text)

-- | A <tt>DatabaseIdentifier</tt> structure that describes a target
--   database for resource linking.
database_targetDatabase :: Lens' Database (Maybe DatabaseIdentifier)

-- | These key-value pairs define parameters and properties of the
--   database.
database_parameters :: Lens' Database (Maybe (HashMap Text Text))

-- | A description of the database.
database_description :: Lens' Database (Maybe Text)

-- | The time at which the metadata database was created in the catalog.
database_createTime :: Lens' Database (Maybe UTCTime)

-- | Creates a set of default permissions on the table for principals.
database_createTableDefaultPermissions :: Lens' Database (Maybe [PrincipalPermissions])

-- | The name of the database. For Hive compatibility, this is folded to
--   lowercase when it is stored.
database_name :: Lens' Database Text

-- | The ID of the Data Catalog in which the database resides.
databaseIdentifier_catalogId :: Lens' DatabaseIdentifier (Maybe Text)

-- | The name of the catalog database.
databaseIdentifier_databaseName :: Lens' DatabaseIdentifier (Maybe Text)

-- | The location of the database (for example, an HDFS path).
databaseInput_locationUri :: Lens' DatabaseInput (Maybe Text)

-- | A <tt>DatabaseIdentifier</tt> structure that describes a target
--   database for resource linking.
databaseInput_targetDatabase :: Lens' DatabaseInput (Maybe DatabaseIdentifier)

-- | These key-value pairs define parameters and properties of the
--   database.
--   
--   These key-value pairs define parameters and properties of the
--   database.
databaseInput_parameters :: Lens' DatabaseInput (Maybe (HashMap Text Text))

-- | A description of the database.
databaseInput_description :: Lens' DatabaseInput (Maybe Text)

-- | Creates a set of default permissions on the table for principals.
databaseInput_createTableDefaultPermissions :: Lens' DatabaseInput (Maybe [PrincipalPermissions])

-- | The name of the database. For Hive compatibility, this is folded to
--   lowercase when it is stored.
databaseInput_name :: Lens' DatabaseInput Text

-- | The highest value in the column.
dateColumnStatisticsData_maximumValue :: Lens' DateColumnStatisticsData (Maybe UTCTime)

-- | The lowest value in the column.
dateColumnStatisticsData_minimumValue :: Lens' DateColumnStatisticsData (Maybe UTCTime)

-- | The number of null values in the column.
dateColumnStatisticsData_numberOfNulls :: Lens' DateColumnStatisticsData Natural

-- | The number of distinct values in a column.
dateColumnStatisticsData_numberOfDistinctValues :: Lens' DateColumnStatisticsData Natural

-- | The highest value in the column.
decimalColumnStatisticsData_maximumValue :: Lens' DecimalColumnStatisticsData (Maybe DecimalNumber)

-- | The lowest value in the column.
decimalColumnStatisticsData_minimumValue :: Lens' DecimalColumnStatisticsData (Maybe DecimalNumber)

-- | The number of null values in the column.
decimalColumnStatisticsData_numberOfNulls :: Lens' DecimalColumnStatisticsData Natural

-- | The number of distinct values in a column.
decimalColumnStatisticsData_numberOfDistinctValues :: Lens' DecimalColumnStatisticsData Natural

-- | The unscaled numeric value.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
decimalNumber_unscaledValue :: Lens' DecimalNumber ByteString

-- | The scale that determines where the decimal point falls in the
--   unscaled value.
decimalNumber_scale :: Lens' DecimalNumber Int

-- | The current status of this <tt>DevEndpoint</tt>.
devEndpoint_status :: Lens' DevEndpoint (Maybe Text)

-- | The reason for a current failure in this <tt>DevEndpoint</tt>.
devEndpoint_failureReason :: Lens' DevEndpoint (Maybe Text)

-- | The name of the <tt>DevEndpoint</tt>.
devEndpoint_endpointName :: Lens' DevEndpoint (Maybe Text)

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated to the development endpoint.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
devEndpoint_numberOfWorkers :: Lens' DevEndpoint (Maybe Int)

-- | The paths to one or more Python libraries in an Amazon S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>. Multiple values must be
--   complete paths separated by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not currently supported.
devEndpoint_extraPythonLibsS3Path :: Lens' DevEndpoint (Maybe Text)

-- | The status of the last update.
devEndpoint_lastUpdateStatus :: Lens' DevEndpoint (Maybe Text)

-- | A list of security group identifiers used in this
--   <tt>DevEndpoint</tt>.
devEndpoint_securityGroupIds :: Lens' DevEndpoint (Maybe [Text])

-- | The point in time at which this <tt>DevEndpoint</tt> was last
--   modified.
devEndpoint_lastModifiedTimestamp :: Lens' DevEndpoint (Maybe UTCTime)

-- | A list of public keys to be used by the <tt>DevEndpoints</tt> for
--   authentication. Using this attribute is preferred over a single public
--   key because the public keys allow you to have a different private key
--   per client.
--   
--   If you previously created an endpoint with a public key, you must
--   remove that key to be able to set a list of public keys. Call the
--   <tt>UpdateDevEndpoint</tt> API operation with the public key content
--   in the <tt>deletePublicKeys</tt> attribute, and the list of new keys
--   in the <tt>addPublicKeys</tt> attribute.
devEndpoint_publicKeys :: Lens' DevEndpoint (Maybe [Text])

-- | The ID of the virtual private cloud (VPC) used by this
--   <tt>DevEndpoint</tt>.
devEndpoint_vpcId :: Lens' DevEndpoint (Maybe Text)

-- | A map of arguments used to configure the <tt>DevEndpoint</tt>.
--   
--   Valid arguments are:
--   
--   <ul>
--   <li><pre>"--enable-glue-datacatalog": ""</pre></li>
--   </ul>
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
devEndpoint_arguments :: Lens' DevEndpoint (Maybe (HashMap Text Text))

-- | A private IP address to access the <tt>DevEndpoint</tt> within a VPC
--   if the <tt>DevEndpoint</tt> is created within one. The
--   <tt>PrivateAddress</tt> field is present only when you create the
--   <tt>DevEndpoint</tt> within your VPC.
devEndpoint_privateAddress :: Lens' DevEndpoint (Maybe Text)

-- | The type of predefined worker that is allocated to the development
--   endpoint. Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   Known issue: when a development endpoint is created with the
--   <tt>G.2X</tt> <tt>WorkerType</tt> configuration, the Spark drivers for
--   the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64
--   GB disk.
devEndpoint_workerType :: Lens' DevEndpoint (Maybe WorkerType)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this <tt>DevEndpoint</tt>.
devEndpoint_securityConfiguration :: Lens' DevEndpoint (Maybe Text)

-- | The public key to be used by this <tt>DevEndpoint</tt> for
--   authentication. This attribute is provided for backward compatibility
--   because the recommended attribute to use is public keys.
devEndpoint_publicKey :: Lens' DevEndpoint (Maybe Text)

-- | The subnet ID for this <tt>DevEndpoint</tt>.
devEndpoint_subnetId :: Lens' DevEndpoint (Maybe Text)

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   running your ETL scripts on development endpoints.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Development endpoints that are created without specifying a Glue
--   version default to Glue 0.9.
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
devEndpoint_glueVersion :: Lens' DevEndpoint (Maybe Text)

-- | The number of Glue Data Processing Units (DPUs) allocated to this
--   <tt>DevEndpoint</tt>.
devEndpoint_numberOfNodes :: Lens' DevEndpoint (Maybe Int)

-- | The public IP address used by this <tt>DevEndpoint</tt>. The
--   <tt>PublicAddress</tt> field is present only when you create a
--   non-virtual private cloud (VPC) <tt>DevEndpoint</tt>.
devEndpoint_publicAddress :: Lens' DevEndpoint (Maybe Text)

-- | The AWS Availability Zone where this <tt>DevEndpoint</tt> is located.
devEndpoint_availabilityZone :: Lens' DevEndpoint (Maybe Text)

-- | The Apache Zeppelin port for the remote Apache Spark interpreter.
devEndpoint_zeppelinRemoteSparkInterpreterPort :: Lens' DevEndpoint (Maybe Int)

-- | The path to one or more Java <tt>.jar</tt> files in an S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>.
--   
--   You can only use pure Java/Scala libraries with a
--   <tt>DevEndpoint</tt>.
devEndpoint_extraJarsS3Path :: Lens' DevEndpoint (Maybe Text)

-- | The point in time at which this DevEndpoint was created.
devEndpoint_createdTimestamp :: Lens' DevEndpoint (Maybe UTCTime)

-- | The YARN endpoint address used by this <tt>DevEndpoint</tt>.
devEndpoint_yarnEndpointAddress :: Lens' DevEndpoint (Maybe Text)

-- | The Amazon Resource Name (ARN) of the IAM role used in this
--   <tt>DevEndpoint</tt>.
devEndpoint_roleArn :: Lens' DevEndpoint (Maybe Text)

-- | The paths to one or more Python libraries in an Amazon Simple Storage
--   Service (Amazon S3) bucket that should be loaded in your
--   <tt>DevEndpoint</tt>. Multiple values must be complete paths separated
--   by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not currently supported.
devEndpointCustomLibraries_extraPythonLibsS3Path :: Lens' DevEndpointCustomLibraries (Maybe Text)

-- | The path to one or more Java <tt>.jar</tt> files in an S3 bucket that
--   should be loaded in your <tt>DevEndpoint</tt>.
--   
--   You can only use pure Java/Scala libraries with a
--   <tt>DevEndpoint</tt>.
devEndpointCustomLibraries_extraJarsS3Path :: Lens' DevEndpointCustomLibraries (Maybe Text)

-- | The highest value in the column.
doubleColumnStatisticsData_maximumValue :: Lens' DoubleColumnStatisticsData (Maybe Double)

-- | The lowest value in the column.
doubleColumnStatisticsData_minimumValue :: Lens' DoubleColumnStatisticsData (Maybe Double)

-- | The number of null values in the column.
doubleColumnStatisticsData_numberOfNulls :: Lens' DoubleColumnStatisticsData Natural

-- | The number of distinct values in a column.
doubleColumnStatisticsData_numberOfDistinctValues :: Lens' DoubleColumnStatisticsData Natural

-- | The name of the DynamoDB table to crawl.
dynamoDBTarget_path :: Lens' DynamoDBTarget (Maybe Text)

-- | The percentage of the configured read capacity units to use by the
--   Glue crawler. Read capacity units is a term defined by DynamoDB, and
--   is a numeric value that acts as rate limiter for the number of reads
--   that can be performed on that table per second.
--   
--   The valid values are null or a value between 0.1 to 1.5. A null value
--   is used when user does not provide a value, and defaults to 0.5 of the
--   configured Read Capacity Unit (for provisioned tables), or 0.25 of the
--   max configured Read Capacity Unit (for tables using on-demand mode).
dynamoDBTarget_scanRate :: Lens' DynamoDBTarget (Maybe Double)

-- | Indicates whether to scan all the records, or to sample rows from the
--   table. Scanning all the records can take a long time when the table is
--   not a high throughput table.
--   
--   A value of <tt>true</tt> means to scan all records, while a value of
--   <tt>false</tt> means to sample the records. If no value is specified,
--   the value defaults to <tt>true</tt>.
dynamoDBTarget_scanAll :: Lens' DynamoDBTarget (Maybe Bool)

-- | The unique of the node within the workflow where the edge starts.
edge_sourceId :: Lens' Edge (Maybe Text)

-- | The unique of the node within the workflow where the edge ends.
edge_destinationId :: Lens' Edge (Maybe Text)

-- | The ID of the KMS key to use for encryption at rest.
encryptionAtRest_sseAwsKmsKeyId :: Lens' EncryptionAtRest (Maybe Text)

-- | The encryption-at-rest mode for encrypting Data Catalog data.
encryptionAtRest_catalogEncryptionMode :: Lens' EncryptionAtRest CatalogEncryptionMode

-- | The encryption configuration for Amazon Simple Storage Service (Amazon
--   S3) data.
encryptionConfiguration_s3Encryption :: Lens' EncryptionConfiguration (Maybe [S3Encryption])

-- | The encryption configuration for job bookmarks.
encryptionConfiguration_jobBookmarksEncryption :: Lens' EncryptionConfiguration (Maybe JobBookmarksEncryption)

-- | The encryption configuration for Amazon CloudWatch.
encryptionConfiguration_cloudWatchEncryption :: Lens' EncryptionConfiguration (Maybe CloudWatchEncryption)

-- | The code associated with this error.
errorDetail_errorCode :: Lens' ErrorDetail (Maybe Text)

-- | A message describing the error.
errorDetail_errorMessage :: Lens' ErrorDetail (Maybe Text)

-- | The error code for an error.
errorDetails_errorCode :: Lens' ErrorDetails (Maybe Text)

-- | The error message for an error.
errorDetails_errorMessage :: Lens' ErrorDetails (Maybe Text)

-- | The evaluation metrics for the find matches algorithm.
evaluationMetrics_findMatchesMetrics :: Lens' EvaluationMetrics (Maybe FindMatchesMetrics)

-- | The type of machine learning transform.
evaluationMetrics_transformType :: Lens' EvaluationMetrics TransformType

-- | Window of time in seconds after which EventBridge event trigger fires.
--   Window starts when first event is received.
eventBatchingCondition_batchWindow :: Lens' EventBatchingCondition (Maybe Natural)

-- | Number of events that must be received from Amazon EventBridge before
--   EventBridge event trigger fires.
eventBatchingCondition_batchSize :: Lens' EventBatchingCondition Natural

-- | The maximum number of concurrent runs allowed for the job. The default
--   is 1. An error is returned when this threshold is reached. The maximum
--   value you can specify is controlled by a service limit.
executionProperty_maxConcurrentRuns :: Lens' ExecutionProperty (Maybe Int)

-- | The Amazon Simple Storage Service (Amazon S3) path where you will
--   export the labels.
exportLabelsTaskRunProperties_outputS3Path :: Lens' ExportLabelsTaskRunProperties (Maybe Text)

-- | The maximum F1 metric indicates the transform's accuracy between 0 and
--   1, where 1 is the best accuracy.
--   
--   For more information, see <a>F1 score</a> in Wikipedia.
findMatchesMetrics_f1 :: Lens' FindMatchesMetrics (Maybe Double)

-- | The area under the precision/recall curve (AUPRC) is a single number
--   measuring the overall quality of the transform, that is independent of
--   the choice made for precision vs. recall. Higher values indicate that
--   you have a more attractive precision vs. recall tradeoff.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
findMatchesMetrics_areaUnderPRCurve :: Lens' FindMatchesMetrics (Maybe Double)

-- | The recall metric indicates that for an actual match, how often your
--   transform predicts the match. Specifically, it measures how well the
--   transform finds true positives from the total records in the source
--   data.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
findMatchesMetrics_recall :: Lens' FindMatchesMetrics (Maybe Double)

-- | The precision metric indicates when often your transform is correct
--   when it predicts a match. Specifically, it measures how well the
--   transform finds true positives from the total true positives possible.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
findMatchesMetrics_precision :: Lens' FindMatchesMetrics (Maybe Double)

-- | A list of <tt>ColumnImportance</tt> structures containing column
--   importance metrics, sorted in order of descending importance.
findMatchesMetrics_columnImportances :: Lens' FindMatchesMetrics (Maybe [ColumnImportance])

-- | The confusion matrix shows you what your transform is predicting
--   accurately and what types of errors it is making.
--   
--   For more information, see <a>Confusion matrix</a> in Wikipedia.
findMatchesMetrics_confusionMatrix :: Lens' FindMatchesMetrics (Maybe ConfusionMatrix)

-- | The value to switch on or off to force the output to match the
--   provided labels from users. If the value is <tt>True</tt>, the
--   <tt>find matches</tt> transform forces the output to match the
--   provided labels. The results override the normal conflation results.
--   If the value is <tt>False</tt>, the <tt>find matches</tt> transform
--   does not ensure all the labels provided are respected, and the results
--   rely on the trained model.
--   
--   Note that setting this value to true may increase the conflation
--   execution time.
findMatchesParameters_enforceProvidedLabels :: Lens' FindMatchesParameters (Maybe Bool)

-- | The value that is selected when tuning your transform for a balance
--   between accuracy and cost. A value of 0.5 means that the system
--   balances accuracy and cost concerns. A value of 1.0 means a bias
--   purely for accuracy, which typically results in a higher cost,
--   sometimes substantially higher. A value of 0.0 means a bias purely for
--   cost, which results in a less accurate <tt>FindMatches</tt> transform,
--   sometimes with unacceptable accuracy.
--   
--   Accuracy measures how well the transform finds true positives and true
--   negatives. Increasing accuracy requires more machine resources and
--   cost. But it also results in increased recall.
--   
--   Cost measures how many compute resources, and thus money, are consumed
--   to run the transform.
findMatchesParameters_accuracyCostTradeoff :: Lens' FindMatchesParameters (Maybe Double)

-- | The value selected when tuning your transform for a balance between
--   precision and recall. A value of 0.5 means no preference; a value of
--   1.0 means a bias purely for precision, and a value of 0.0 means a bias
--   for recall. Because this is a tradeoff, choosing values close to 1.0
--   means very low recall, and choosing values close to 0.0 results in
--   very low precision.
--   
--   The precision metric indicates how often your model is correct when it
--   predicts a match.
--   
--   The recall metric indicates that for an actual match, how often your
--   model predicts the match.
findMatchesParameters_precisionRecallTradeoff :: Lens' FindMatchesParameters (Maybe Double)

-- | The name of a column that uniquely identifies rows in the source
--   table. Used to help identify matching records.
findMatchesParameters_primaryKeyColumnName :: Lens' FindMatchesParameters (Maybe Text)

-- | The job ID for the Find Matches task run.
findMatchesTaskRunProperties_jobId :: Lens' FindMatchesTaskRunProperties (Maybe Text)

-- | The name assigned to the job for the Find Matches task run.
findMatchesTaskRunProperties_jobName :: Lens' FindMatchesTaskRunProperties (Maybe Text)

-- | The job run ID for the Find Matches task run.
findMatchesTaskRunProperties_jobRunId :: Lens' FindMatchesTaskRunProperties (Maybe Text)

-- | A criteria string that must match the criteria recorded in the
--   connection definition for that connection definition to be returned.
getConnectionsFilter_matchCriteria :: Lens' GetConnectionsFilter (Maybe [Text])

-- | The type of connections to return. Currently, SFTP is not supported.
getConnectionsFilter_connectionType :: Lens' GetConnectionsFilter (Maybe ConnectionType)

-- | Contains the requested policy document, in JSON format.
gluePolicy_policyInJson :: Lens' GluePolicy (Maybe Text)

-- | The date and time at which the policy was last updated.
gluePolicy_updateTime :: Lens' GluePolicy (Maybe UTCTime)

-- | Contains the hash value associated with this policy.
gluePolicy_policyHash :: Lens' GluePolicy (Maybe Text)

-- | The date and time at which the policy was created.
gluePolicy_createTime :: Lens' GluePolicy (Maybe UTCTime)

-- | A unique identifier for the Glue Data Catalog.
glueTable_catalogId :: Lens' GlueTable (Maybe Text)

-- | The name of the connection to the Glue Data Catalog.
glueTable_connectionName :: Lens' GlueTable (Maybe Text)

-- | A database name in the Glue Data Catalog.
glueTable_databaseName :: Lens' GlueTable Text

-- | A table name in the Glue Data Catalog.
glueTable_tableName :: Lens' GlueTable Text

-- | The time that this classifier was registered.
grokClassifier_creationTime :: Lens' GrokClassifier (Maybe UTCTime)

-- | The time that this classifier was last updated.
grokClassifier_lastUpdated :: Lens' GrokClassifier (Maybe UTCTime)

-- | The version of this classifier.
grokClassifier_version :: Lens' GrokClassifier (Maybe Integer)

-- | Optional custom grok patterns defined by this classifier. For more
--   information, see custom patterns in <a>Writing Custom Classifiers</a>.
grokClassifier_customPatterns :: Lens' GrokClassifier (Maybe Text)

-- | The name of the classifier.
grokClassifier_name :: Lens' GrokClassifier Text

-- | An identifier of the data format that the classifier matches, such as
--   Twitter, JSON, Omniture logs, and so on.
grokClassifier_classification :: Lens' GrokClassifier Text

-- | The grok pattern applied to a data store by this classifier. For more
--   information, see built-in patterns in <a>Writing Custom
--   Classifiers</a>.
grokClassifier_grokPattern :: Lens' GrokClassifier Text

-- | Indicates whether to overwrite your existing labels.
importLabelsTaskRunProperties_replace :: Lens' ImportLabelsTaskRunProperties (Maybe Bool)

-- | The Amazon Simple Storage Service (Amazon S3) path from where you will
--   import the labels.
importLabelsTaskRunProperties_inputS3Path :: Lens' ImportLabelsTaskRunProperties (Maybe Text)

-- | The path of the JDBC target.
jdbcTarget_path :: Lens' JdbcTarget (Maybe Text)

-- | The name of the connection to use to connect to the JDBC target.
jdbcTarget_connectionName :: Lens' JdbcTarget (Maybe Text)

-- | A list of glob patterns used to exclude from the crawl. For more
--   information, see <a>Catalog Tables with a Crawler</a>.
jdbcTarget_exclusions :: Lens' JdbcTarget (Maybe [Text])

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
job_numberOfWorkers :: Lens' Job (Maybe Int)

-- | The <tt>JobCommand</tt> that runs this job.
job_command :: Lens' Job (Maybe JobCommand)

-- | Specifies configuration properties of a job notification.
job_notificationProperty :: Lens' Job (Maybe NotificationProperty)

-- | The last point in time when this job definition was modified.
job_lastModifiedOn :: Lens' Job (Maybe UTCTime)

-- | The connections used for this job.
job_connections :: Lens' Job (Maybe ConnectionsList)

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
job_workerType :: Lens' Job (Maybe WorkerType)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job.
job_securityConfiguration :: Lens' Job (Maybe Text)

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
job_glueVersion :: Lens' Job (Maybe Text)

-- | Non-overridable arguments for this job, specified as name-value pairs.
job_nonOverridableArguments :: Lens' Job (Maybe (HashMap Text Text))

-- | The name or Amazon Resource Name (ARN) of the IAM role associated with
--   this job.
job_role :: Lens' Job (Maybe Text)

-- | The name you assign to this job definition.
job_name :: Lens' Job (Maybe Text)

-- | This field is reserved for future use.
job_logUri :: Lens' Job (Maybe Text)

-- | The maximum number of times to retry this job after a JobRun fails.
job_maxRetries :: Lens' Job (Maybe Int)

-- | An <tt>ExecutionProperty</tt> specifying the maximum number of
--   concurrent runs allowed for this job.
job_executionProperty :: Lens' Job (Maybe ExecutionProperty)

-- | This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) allocated to runs of
--   this job. You can allocate from 2 to 100 DPUs; the default is 10. A
--   DPU is a relative measure of processing power that consists of 4 vCPUs
--   of compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
job_allocatedCapacity :: Lens' Job (Maybe Int)

-- | For Glue version 1.0 or earlier jobs, using the standard worker type,
--   the number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job, an Apache Spark ETL job,
--   or an Apache Spark streaming ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
job_maxCapacity :: Lens' Job (Maybe Double)

-- | The job timeout in minutes. This is the maximum time that a job run
--   can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours).
job_timeout :: Lens' Job (Maybe Natural)

-- | The default arguments for this job, specified as name-value pairs.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
job_defaultArguments :: Lens' Job (Maybe (HashMap Text Text))

-- | A description of the job.
job_description :: Lens' Job (Maybe Text)

-- | The time and date that this job definition was created.
job_createdOn :: Lens' Job (Maybe UTCTime)

-- | The name of the job in question.
jobBookmarkEntry_jobName :: Lens' JobBookmarkEntry (Maybe Text)

-- | The run ID number.
jobBookmarkEntry_run :: Lens' JobBookmarkEntry (Maybe Int)

-- | The run ID number.
jobBookmarkEntry_runId :: Lens' JobBookmarkEntry (Maybe Text)

-- | The version of the job.
jobBookmarkEntry_version :: Lens' JobBookmarkEntry (Maybe Int)

-- | The unique run identifier associated with the previous job run.
jobBookmarkEntry_previousRunId :: Lens' JobBookmarkEntry (Maybe Text)

-- | The attempt ID number.
jobBookmarkEntry_attempt :: Lens' JobBookmarkEntry (Maybe Int)

-- | The bookmark itself.
jobBookmarkEntry_jobBookmark :: Lens' JobBookmarkEntry (Maybe Text)

-- | The encryption mode to use for job bookmarks data.
jobBookmarksEncryption_jobBookmarksEncryptionMode :: Lens' JobBookmarksEncryption (Maybe JobBookmarksEncryptionMode)

-- | The Amazon Resource Name (ARN) of the KMS key to be used to encrypt
--   the data.
jobBookmarksEncryption_kmsKeyArn :: Lens' JobBookmarksEncryption (Maybe Text)

-- | Specifies the Amazon Simple Storage Service (Amazon S3) path to a
--   script that runs a job.
jobCommand_scriptLocation :: Lens' JobCommand (Maybe Text)

-- | The Python version being used to run a Python shell job. Allowed
--   values are 2 or 3.
jobCommand_pythonVersion :: Lens' JobCommand (Maybe Text)

-- | The name of the job command. For an Apache Spark ETL job, this must be
--   <tt>glueetl</tt>. For a Python shell job, it must be
--   <tt>pythonshell</tt>. For an Apache Spark streaming ETL job, this must
--   be <tt>gluestreaming</tt>.
jobCommand_name :: Lens' JobCommand (Maybe Text)

-- | The information for the job runs represented by the job node.
jobNodeDetails_jobRuns :: Lens' JobNodeDetails (Maybe [JobRun])

-- | The date and time that this job run completed.
jobRun_completedOn :: Lens' JobRun (Maybe UTCTime)

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
jobRun_numberOfWorkers :: Lens' JobRun (Maybe Int)

-- | The name of the trigger that started this job run.
jobRun_triggerName :: Lens' JobRun (Maybe Text)

-- | Specifies configuration properties of a job run notification.
jobRun_notificationProperty :: Lens' JobRun (Maybe NotificationProperty)

-- | The last time that this job run was modified.
jobRun_lastModifiedOn :: Lens' JobRun (Maybe UTCTime)

-- | The job arguments associated with this run. For this job run, they
--   replace the default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
jobRun_arguments :: Lens' JobRun (Maybe (HashMap Text Text))

-- | The name of the job definition being used in this run.
jobRun_jobName :: Lens' JobRun (Maybe Text)

-- | The date and time at which this job run was started.
jobRun_startedOn :: Lens' JobRun (Maybe UTCTime)

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
jobRun_workerType :: Lens' JobRun (Maybe WorkerType)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job run.
jobRun_securityConfiguration :: Lens' JobRun (Maybe Text)

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
jobRun_glueVersion :: Lens' JobRun (Maybe Text)

-- | The current state of the job run. For more information about the
--   statuses of jobs that have terminated abnormally, see <a>Glue Job Run
--   Statuses</a>.
jobRun_jobRunState :: Lens' JobRun (Maybe JobRunState)

-- | The name of the log group for secure logging that can be server-side
--   encrypted in Amazon CloudWatch using KMS. This name can be
--   <tt>/aws-glue/jobs/</tt>, in which case the default encryption is
--   <tt>NONE</tt>. If you add a role name and
--   <tt>SecurityConfiguration</tt> name (in other words,
--   <tt>/aws-glue/jobs-yourRoleName-yourSecurityConfigurationName/</tt>),
--   then that security configuration is used to encrypt the log group.
jobRun_logGroupName :: Lens' JobRun (Maybe Text)

-- | The amount of time (in seconds) that the job run consumed resources.
jobRun_executionTime :: Lens' JobRun (Maybe Int)

-- | A list of predecessors to this job run.
jobRun_predecessorRuns :: Lens' JobRun (Maybe [Predecessor])

-- | The ID of the previous run of this job. For example, the
--   <tt>JobRunId</tt> specified in the <tt>StartJobRun</tt> action.
jobRun_previousRunId :: Lens' JobRun (Maybe Text)

-- | The ID of this job run.
jobRun_id :: Lens' JobRun (Maybe Text)

-- | The number of the attempt to run this job.
jobRun_attempt :: Lens' JobRun (Maybe Int)

-- | This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) allocated to this
--   JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU
--   is a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
jobRun_allocatedCapacity :: Lens' JobRun (Maybe Int)

-- | The number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl"), you can allocate from 2 to 100
--   DPUs. The default is 10 DPUs. This job type cannot have a fractional
--   DPU allocation.</li>
--   </ul>
jobRun_maxCapacity :: Lens' JobRun (Maybe Double)

-- | The <tt>JobRun</tt> timeout in minutes. This is the maximum time that
--   a job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
jobRun_timeout :: Lens' JobRun (Maybe Natural)

-- | An error message associated with this job run.
jobRun_errorMessage :: Lens' JobRun (Maybe Text)

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
jobUpdate_numberOfWorkers :: Lens' JobUpdate (Maybe Int)

-- | The <tt>JobCommand</tt> that runs this job (required).
jobUpdate_command :: Lens' JobUpdate (Maybe JobCommand)

-- | Specifies the configuration properties of a job notification.
jobUpdate_notificationProperty :: Lens' JobUpdate (Maybe NotificationProperty)

-- | The connections used for this job.
jobUpdate_connections :: Lens' JobUpdate (Maybe ConnectionsList)

-- | The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
jobUpdate_workerType :: Lens' JobUpdate (Maybe WorkerType)

-- | The name of the <tt>SecurityConfiguration</tt> structure to be used
--   with this job.
jobUpdate_securityConfiguration :: Lens' JobUpdate (Maybe Text)

-- | Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
jobUpdate_glueVersion :: Lens' JobUpdate (Maybe Text)

-- | Non-overridable arguments for this job, specified as name-value pairs.
jobUpdate_nonOverridableArguments :: Lens' JobUpdate (Maybe (HashMap Text Text))

-- | The name or Amazon Resource Name (ARN) of the IAM role associated with
--   this job (required).
jobUpdate_role :: Lens' JobUpdate (Maybe Text)

-- | This field is reserved for future use.
jobUpdate_logUri :: Lens' JobUpdate (Maybe Text)

-- | The maximum number of times to retry this job if it fails.
jobUpdate_maxRetries :: Lens' JobUpdate (Maybe Int)

-- | An <tt>ExecutionProperty</tt> specifying the maximum number of
--   concurrent runs allowed for this job.
jobUpdate_executionProperty :: Lens' JobUpdate (Maybe ExecutionProperty)

-- | This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) to allocate to this
--   job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is
--   a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
jobUpdate_allocatedCapacity :: Lens' JobUpdate (Maybe Int)

-- | For Glue version 1.0 or earlier jobs, using the standard worker type,
--   the number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
jobUpdate_maxCapacity :: Lens' JobUpdate (Maybe Double)

-- | The job timeout in minutes. This is the maximum time that a job run
--   can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours).
jobUpdate_timeout :: Lens' JobUpdate (Maybe Natural)

-- | The default arguments for this job.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
jobUpdate_defaultArguments :: Lens' JobUpdate (Maybe (HashMap Text Text))

-- | Description of the job being defined.
jobUpdate_description :: Lens' JobUpdate (Maybe Text)

-- | The time that this classifier was registered.
jsonClassifier_creationTime :: Lens' JsonClassifier (Maybe UTCTime)

-- | The time that this classifier was last updated.
jsonClassifier_lastUpdated :: Lens' JsonClassifier (Maybe UTCTime)

-- | The version of this classifier.
jsonClassifier_version :: Lens' JsonClassifier (Maybe Integer)

-- | The name of the classifier.
jsonClassifier_name :: Lens' JsonClassifier Text

-- | A <tt>JsonPath</tt> string defining the JSON data for the classifier
--   to classify. Glue supports a subset of JsonPath, as described in
--   <a>Writing JsonPath Custom Classifiers</a>.
jsonClassifier_jsonPath :: Lens' JsonClassifier Text

-- | The name of a partition key.
keySchemaElement_name :: Lens' KeySchemaElement Text

-- | The type of a partition key.
keySchemaElement_type :: Lens' KeySchemaElement Text

-- | The Amazon Simple Storage Service (Amazon S3) path where you will
--   generate the labeling set.
labelingSetGenerationTaskRunProperties_outputS3Path :: Lens' LabelingSetGenerationTaskRunProperties (Maybe Text)

-- | A JSON string specifying the parameters for the blueprint.
lastActiveDefinition_parameterSpec :: Lens' LastActiveDefinition (Maybe Text)

-- | Specifies a path in Amazon S3 where the blueprint is published by the
--   Glue developer.
lastActiveDefinition_blueprintLocation :: Lens' LastActiveDefinition (Maybe Text)

-- | The date and time the blueprint was last modified.
lastActiveDefinition_lastModifiedOn :: Lens' LastActiveDefinition (Maybe UTCTime)

-- | Specifies a path in Amazon S3 where the blueprint is copied when you
--   create or update the blueprint.
lastActiveDefinition_blueprintServiceLocation :: Lens' LastActiveDefinition (Maybe Text)

-- | The description of the blueprint.
lastActiveDefinition_description :: Lens' LastActiveDefinition (Maybe Text)

-- | Status of the last crawl.
lastCrawlInfo_status :: Lens' LastCrawlInfo (Maybe LastCrawlStatus)

-- | The time at which the crawl started.
lastCrawlInfo_startTime :: Lens' LastCrawlInfo (Maybe UTCTime)

-- | The log stream for the last crawl.
lastCrawlInfo_logStream :: Lens' LastCrawlInfo (Maybe Text)

-- | The log group for the last crawl.
lastCrawlInfo_logGroup :: Lens' LastCrawlInfo (Maybe Text)

-- | The prefix for a message about this crawl.
lastCrawlInfo_messagePrefix :: Lens' LastCrawlInfo (Maybe Text)

-- | If an error occurred, the error information about the last crawl.
lastCrawlInfo_errorMessage :: Lens' LastCrawlInfo (Maybe Text)

-- | Specifies whether data lineage is enabled for the crawler. Valid
--   values are:
--   
--   <ul>
--   <li>ENABLE: enables data lineage for the crawler</li>
--   <li>DISABLE: disables data lineage for the crawler</li>
--   </ul>
lineageConfiguration_crawlerLineageSettings :: Lens' LineageConfiguration (Maybe CrawlerLineageSettings)

-- | An Amazon DynamoDB table location.
location_dynamoDB :: Lens' Location (Maybe [CodeGenNodeArg])

-- | A JDBC location.
location_jdbc :: Lens' Location (Maybe [CodeGenNodeArg])

-- | An Amazon Simple Storage Service (Amazon S3) location.
location_s3 :: Lens' Location (Maybe [CodeGenNodeArg])

-- | The highest value in the column.
longColumnStatisticsData_maximumValue :: Lens' LongColumnStatisticsData (Maybe Integer)

-- | The lowest value in the column.
longColumnStatisticsData_minimumValue :: Lens' LongColumnStatisticsData (Maybe Integer)

-- | The number of null values in the column.
longColumnStatisticsData_numberOfNulls :: Lens' LongColumnStatisticsData Natural

-- | The number of distinct values in a column.
longColumnStatisticsData_numberOfDistinctValues :: Lens' LongColumnStatisticsData Natural

-- | The current status of the machine learning transform.
mLTransform_status :: Lens' MLTransform (Maybe TransformStatusType)

-- | The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a task of the transform runs.
--   
--   If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).
mLTransform_numberOfWorkers :: Lens' MLTransform (Maybe Int)

-- | A timestamp. The last point in time when this machine learning
--   transform was modified.
mLTransform_lastModifiedOn :: Lens' MLTransform (Maybe UTCTime)

-- | A count identifier for the labeling files generated by Glue for this
--   transform. As you create a better transform, you can iteratively
--   download, label, and upload the labeling file.
mLTransform_labelCount :: Lens' MLTransform (Maybe Int)

-- | The type of predefined worker that is allocated when a task of this
--   transform runs. Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
mLTransform_workerType :: Lens' MLTransform (Maybe WorkerType)

-- | A list of Glue table definitions used by the transform.
mLTransform_inputRecordTables :: Lens' MLTransform (Maybe [GlueTable])

-- | This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
mLTransform_glueVersion :: Lens' MLTransform (Maybe Text)

-- | An <tt>EvaluationMetrics</tt> object. Evaluation metrics provide an
--   estimate of the quality of your machine learning transform.
mLTransform_evaluationMetrics :: Lens' MLTransform (Maybe EvaluationMetrics)

-- | A map of key-value pairs representing the columns and data types that
--   this transform can run against. Has an upper bound of 100 columns.
mLTransform_schema :: Lens' MLTransform (Maybe [SchemaColumn])

-- | The name or Amazon Resource Name (ARN) of the IAM role with the
--   required permissions. The required permissions include both Glue
--   service role permissions to Glue resources, and Amazon S3 permissions
--   required by the transform.
--   
--   <ul>
--   <li>This role needs Glue service role permissions to allow access to
--   resources in Glue. See <a>Attach a Policy to IAM Users That Access
--   Glue</a>.</li>
--   <li>This role needs permission to your Amazon Simple Storage Service
--   (Amazon S3) sources, targets, temporary directory, scripts, and any
--   libraries used by the task run for this transform.</li>
--   </ul>
mLTransform_role :: Lens' MLTransform (Maybe Text)

-- | A user-defined name for the machine learning transform. Names are not
--   guaranteed unique and can be changed at any time.
mLTransform_name :: Lens' MLTransform (Maybe Text)

-- | A <tt>TransformParameters</tt> object. You can use parameters to tune
--   (customize) the behavior of the machine learning transform by
--   specifying what data it learns from and your preference on various
--   tradeoffs (such as precious vs. recall, or accuracy vs. cost).
mLTransform_parameters :: Lens' MLTransform (Maybe TransformParameters)

-- | The maximum number of times to retry after an <tt>MLTaskRun</tt> of
--   the machine learning transform fails.
mLTransform_maxRetries :: Lens' MLTransform (Maybe Int)

-- | The number of Glue data processing units (DPUs) that are allocated to
--   task runs for this transform. You can allocate from 2 to 100 DPUs; the
--   default is 10. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
mLTransform_maxCapacity :: Lens' MLTransform (Maybe Double)

-- | The timeout in minutes of the machine learning transform.
mLTransform_timeout :: Lens' MLTransform (Maybe Natural)

-- | The encryption-at-rest settings of the transform that apply to
--   accessing user data. Machine learning transforms can access user data
--   encrypted in Amazon S3 using KMS.
mLTransform_transformEncryption :: Lens' MLTransform (Maybe TransformEncryption)

-- | A user-defined, long-form description text for the machine learning
--   transform. Descriptions are not guaranteed to be unique and can be
--   changed at any time.
mLTransform_description :: Lens' MLTransform (Maybe Text)

-- | A timestamp. The time and date that this machine learning transform
--   was created.
mLTransform_createdOn :: Lens' MLTransform (Maybe UTCTime)

-- | The unique transform ID that is generated for the machine learning
--   transform. The ID is guaranteed to be unique and does not change.
mLTransform_transformId :: Lens' MLTransform (Maybe Text)

-- | The ID for the customer-provided KMS key.
mLUserDataEncryption_kmsKeyId :: Lens' MLUserDataEncryption (Maybe Text)

-- | The encryption mode applied to user data. Valid values are:
--   
--   <ul>
--   <li>DISABLED: encryption is disabled</li>
--   <li>SSEKMS: use of server-side encryption with Key Management Service
--   (SSE-KMS) for user data stored in Amazon S3.</li>
--   </ul>
mLUserDataEncryption_mlUserDataEncryptionMode :: Lens' MLUserDataEncryption MLUserDataEncryptionModeString

-- | The target table.
mappingEntry_targetTable :: Lens' MappingEntry (Maybe Text)

-- | The source type.
mappingEntry_sourceType :: Lens' MappingEntry (Maybe Text)

-- | The name of the source table.
mappingEntry_sourceTable :: Lens' MappingEntry (Maybe Text)

-- | The target type.
mappingEntry_targetType :: Lens' MappingEntry (Maybe Text)

-- | The target path.
mappingEntry_targetPath :: Lens' MappingEntry (Maybe Text)

-- | The source path.
mappingEntry_sourcePath :: Lens' MappingEntry (Maybe Text)

-- | The time at which the entry was created.
metadataInfo_createdTime :: Lens' MetadataInfo (Maybe Text)

-- | Other metadata belonging to the same metadata key.
metadataInfo_otherMetadataValueList :: Lens' MetadataInfo (Maybe [OtherMetadataValueListItem])

-- | The metadata key’s corresponding value.
metadataInfo_metadataValue :: Lens' MetadataInfo (Maybe Text)

-- | A metadata key.
metadataKeyValuePair_metadataKey :: Lens' MetadataKeyValuePair (Maybe Text)

-- | A metadata key’s corresponding value.
metadataKeyValuePair_metadataValue :: Lens' MetadataKeyValuePair (Maybe Text)

-- | The path of the Amazon DocumentDB or MongoDB target
--   (database/collection).
mongoDBTarget_path :: Lens' MongoDBTarget (Maybe Text)

-- | The name of the connection to use to connect to the Amazon DocumentDB
--   or MongoDB target.
mongoDBTarget_connectionName :: Lens' MongoDBTarget (Maybe Text)

-- | Indicates whether to scan all the records, or to sample rows from the
--   table. Scanning all the records can take a long time when the table is
--   not a high throughput table.
--   
--   A value of <tt>true</tt> means to scan all records, while a value of
--   <tt>false</tt> means to sample the records. If no value is specified,
--   the value defaults to <tt>true</tt>.
mongoDBTarget_scanAll :: Lens' MongoDBTarget (Maybe Bool)

-- | Details of the Trigger when the node represents a Trigger.
node_triggerDetails :: Lens' Node (Maybe TriggerNodeDetails)

-- | The unique Id assigned to the node within the workflow.
node_uniqueId :: Lens' Node (Maybe Text)

-- | Details of the crawler when the node represents a crawler.
node_crawlerDetails :: Lens' Node (Maybe CrawlerNodeDetails)

-- | The name of the Glue component represented by the node.
node_name :: Lens' Node (Maybe Text)

-- | Details of the Job when the node represents a Job.
node_jobDetails :: Lens' Node (Maybe JobNodeDetails)

-- | The type of Glue component represented by the node.
node_type :: Lens' Node (Maybe NodeType)

-- | After a job run starts, the number of minutes to wait before sending a
--   job run delay notification.
notificationProperty_notifyDelayAfter :: Lens' NotificationProperty (Maybe Natural)

-- | The name of the column.
order_column :: Lens' Order Text

-- | Indicates that the column is sorted in ascending order (<tt>==
--   1</tt>), or in descending order (<tt>==0</tt>).
order_sortOrder :: Lens' Order Natural

-- | The time at which the entry was created.
otherMetadataValueListItem_createdTime :: Lens' OtherMetadataValueListItem (Maybe Text)

-- | The metadata key’s corresponding value for the other metadata
--   belonging to the same metadata key.
otherMetadataValueListItem_metadataValue :: Lens' OtherMetadataValueListItem (Maybe Text)

-- | The time at which the partition was created.
partition_creationTime :: Lens' Partition (Maybe UTCTime)

-- | The values of the partition.
partition_values :: Lens' Partition (Maybe [Text])

-- | The ID of the Data Catalog in which the partition resides.
partition_catalogId :: Lens' Partition (Maybe Text)

-- | The last time at which column statistics were computed for this
--   partition.
partition_lastAnalyzedTime :: Lens' Partition (Maybe UTCTime)

-- | Provides information about the physical location where the partition
--   is stored.
partition_storageDescriptor :: Lens' Partition (Maybe StorageDescriptor)

-- | The name of the catalog database in which to create the partition.
partition_databaseName :: Lens' Partition (Maybe Text)

-- | These key-value pairs define partition parameters.
partition_parameters :: Lens' Partition (Maybe (HashMap Text Text))

-- | The last time at which the partition was accessed.
partition_lastAccessTime :: Lens' Partition (Maybe UTCTime)

-- | The name of the database table in which to create the partition.
partition_tableName :: Lens' Partition (Maybe Text)

-- | The values that define the partition.
partitionError_partitionValues :: Lens' PartitionError (Maybe [Text])

-- | The details about the partition error.
partitionError_errorDetail :: Lens' PartitionError (Maybe ErrorDetail)

-- | The keys for the partition index.
partitionIndex_keys :: Lens' PartitionIndex (NonEmpty Text)

-- | The name of the partition index.
partitionIndex_indexName :: Lens' PartitionIndex Text

-- | A list of errors that can occur when registering partition indexes for
--   an existing table.
partitionIndexDescriptor_backfillErrors :: Lens' PartitionIndexDescriptor (Maybe [BackfillError])

-- | The name of the partition index.
partitionIndexDescriptor_indexName :: Lens' PartitionIndexDescriptor Text

-- | A list of one or more keys, as <tt>KeySchemaElement</tt> structures,
--   for the partition index.
partitionIndexDescriptor_keys :: Lens' PartitionIndexDescriptor (NonEmpty KeySchemaElement)

-- | The status of the partition index.
--   
--   The possible statuses are:
--   
--   <ul>
--   <li>CREATING: The index is being created. When an index is in a
--   CREATING state, the index or its table cannot be deleted.</li>
--   <li>ACTIVE: The index creation succeeds.</li>
--   <li>FAILED: The index creation fails.</li>
--   <li>DELETING: The index is deleted from the list of indexes.</li>
--   </ul>
partitionIndexDescriptor_indexStatus :: Lens' PartitionIndexDescriptor PartitionIndexStatus

-- | The values of the partition. Although this parameter is not required
--   by the SDK, you must specify this parameter for a valid input.
--   
--   The values for the keys for the new partition must be passed as an
--   array of String objects that must be ordered in the same order as the
--   partition keys appearing in the Amazon S3 prefix. Otherwise Glue will
--   add the values to the wrong keys.
partitionInput_values :: Lens' PartitionInput (Maybe [Text])

-- | The last time at which column statistics were computed for this
--   partition.
partitionInput_lastAnalyzedTime :: Lens' PartitionInput (Maybe UTCTime)

-- | Provides information about the physical location where the partition
--   is stored.
partitionInput_storageDescriptor :: Lens' PartitionInput (Maybe StorageDescriptor)

-- | These key-value pairs define partition parameters.
partitionInput_parameters :: Lens' PartitionInput (Maybe (HashMap Text Text))

-- | The last time at which the partition was accessed.
partitionInput_lastAccessTime :: Lens' PartitionInput (Maybe UTCTime)

-- | The list of values.
partitionValueList_values :: Lens' PartitionValueList [Text]

-- | The security group ID list used by the connection.
physicalConnectionRequirements_securityGroupIdList :: Lens' PhysicalConnectionRequirements (Maybe [Text])

-- | The subnet ID used by the connection.
physicalConnectionRequirements_subnetId :: Lens' PhysicalConnectionRequirements (Maybe Text)

-- | The connection's Availability Zone. This field is redundant because
--   the specified subnet implies the Availability Zone to be used.
--   Currently the field must be populated, but it will be deprecated in
--   the future.
physicalConnectionRequirements_availabilityZone :: Lens' PhysicalConnectionRequirements (Maybe Text)

-- | The name of the job definition used by the predecessor job run.
predecessor_jobName :: Lens' Predecessor (Maybe Text)

-- | The job-run ID of the predecessor job run.
predecessor_runId :: Lens' Predecessor (Maybe Text)

-- | An optional field if only one condition is listed. If multiple
--   conditions are listed, then this field is required.
predicate_logical :: Lens' Predicate (Maybe Logical)

-- | A list of the conditions that determine when the trigger will fire.
predicate_conditions :: Lens' Predicate (Maybe [Condition])

-- | The principal who is granted permissions.
principalPermissions_principal :: Lens' PrincipalPermissions (Maybe DataLakePrincipal)

-- | The permissions that are granted to the principal.
principalPermissions_permissions :: Lens' PrincipalPermissions (Maybe [Permission])

-- | The value of the property.
propertyPredicate_value :: Lens' PropertyPredicate (Maybe Text)

-- | The key of the property.
propertyPredicate_key :: Lens' PropertyPredicate (Maybe Text)

-- | The comparator used to compare this property to others.
propertyPredicate_comparator :: Lens' PropertyPredicate (Maybe Comparator)

-- | Specifies whether to crawl the entire dataset again or to crawl only
--   folders that were added since the last crawler run.
--   
--   A value of <tt>CRAWL_EVERYTHING</tt> specifies crawling the entire
--   dataset again.
--   
--   A value of <tt>CRAWL_NEW_FOLDERS_ONLY</tt> specifies crawling only
--   folders that were added since the last crawler run.
--   
--   A value of <tt>CRAWL_EVENT_MODE</tt> specifies crawling only the
--   changes identified by Amazon S3 events.
recrawlPolicy_recrawlBehavior :: Lens' RecrawlPolicy (Maybe RecrawlBehavior)

-- | Name of the registry. Used only for lookup. One of
--   <tt>RegistryArn</tt> or <tt>RegistryName</tt> has to be provided.
registryId_registryName :: Lens' RegistryId (Maybe Text)

-- | Arn of the registry to be updated. One of <tt>RegistryArn</tt> or
--   <tt>RegistryName</tt> has to be provided.
registryId_registryArn :: Lens' RegistryId (Maybe Text)

-- | The status of the registry.
registryListItem_status :: Lens' RegistryListItem (Maybe RegistryStatus)

-- | The name of the registry.
registryListItem_registryName :: Lens' RegistryListItem (Maybe Text)

-- | The data the registry was created.
registryListItem_createdTime :: Lens' RegistryListItem (Maybe Text)

-- | The Amazon Resource Name (ARN) of the registry.
registryListItem_registryArn :: Lens' RegistryListItem (Maybe Text)

-- | The date the registry was updated.
registryListItem_updatedTime :: Lens' RegistryListItem (Maybe Text)

-- | A description of the registry.
registryListItem_description :: Lens' RegistryListItem (Maybe Text)

-- | The type of the resource.
resourceUri_resourceType :: Lens' ResourceUri (Maybe ResourceType)

-- | The URI for accessing the resource.
resourceUri_uri :: Lens' ResourceUri (Maybe Text)

-- | The encryption mode to use for Amazon S3 data.
s3Encryption_s3EncryptionMode :: Lens' S3Encryption (Maybe S3EncryptionMode)

-- | The Amazon Resource Name (ARN) of the KMS key to be used to encrypt
--   the data.
s3Encryption_kmsKeyArn :: Lens' S3Encryption (Maybe Text)

-- | The path to the Amazon S3 target.
s3Target_path :: Lens' S3Target (Maybe Text)

-- | Sets the number of files in each leaf folder to be crawled when
--   crawling sample files in a dataset. If not set, all the files are
--   crawled. A valid value is an integer between 1 and 249.
s3Target_sampleSize :: Lens' S3Target (Maybe Int)

-- | The name of a connection which allows a job or crawler to access data
--   in Amazon S3 within an Amazon Virtual Private Cloud environment
--   (Amazon VPC).
s3Target_connectionName :: Lens' S3Target (Maybe Text)

-- | A list of glob patterns used to exclude from the crawl. For more
--   information, see <a>Catalog Tables with a Crawler</a>.
s3Target_exclusions :: Lens' S3Target (Maybe [Text])

-- | A valid Amazon SQS ARN. For example,
--   <tt>arn:aws:sqs:region:account:sqs</tt>.
s3Target_eventQueueArn :: Lens' S3Target (Maybe Text)

-- | A valid Amazon dead-letter SQS ARN. For example,
--   <tt>arn:aws:sqs:region:account:deadLetterQueue</tt>.
s3Target_dlqEventQueueArn :: Lens' S3Target (Maybe Text)

-- | The state of the schedule.
schedule_state :: Lens' Schedule (Maybe ScheduleState)

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
schedule_scheduleExpression :: Lens' Schedule (Maybe Text)

-- | The deletion behavior when the crawler finds a deleted object.
schemaChangePolicy_deleteBehavior :: Lens' SchemaChangePolicy (Maybe DeleteBehavior)

-- | The update behavior when the crawler finds a changed schema.
schemaChangePolicy_updateBehavior :: Lens' SchemaChangePolicy (Maybe UpdateBehavior)

-- | The name of the column.
schemaColumn_name :: Lens' SchemaColumn (Maybe Text)

-- | The type of data in the column.
schemaColumn_dataType :: Lens' SchemaColumn (Maybe Text)

-- | The name of the schema registry that contains the schema.
schemaId_registryName :: Lens' SchemaId (Maybe Text)

-- | The name of the schema. One of <tt>SchemaArn</tt> or
--   <tt>SchemaName</tt> has to be provided.
schemaId_schemaName :: Lens' SchemaId (Maybe Text)

-- | The Amazon Resource Name (ARN) of the schema. One of
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be provided.
schemaId_schemaArn :: Lens' SchemaId (Maybe Text)

-- | the name of the registry where the schema resides.
schemaListItem_registryName :: Lens' SchemaListItem (Maybe Text)

-- | The date and time that a schema was created.
schemaListItem_createdTime :: Lens' SchemaListItem (Maybe Text)

-- | The status of the schema.
schemaListItem_schemaStatus :: Lens' SchemaListItem (Maybe SchemaStatus)

-- | The name of the schema.
schemaListItem_schemaName :: Lens' SchemaListItem (Maybe Text)

-- | The Amazon Resource Name (ARN) for the schema.
schemaListItem_schemaArn :: Lens' SchemaListItem (Maybe Text)

-- | The date and time that a schema was updated.
schemaListItem_updatedTime :: Lens' SchemaListItem (Maybe Text)

-- | A description for the schema.
schemaListItem_description :: Lens' SchemaListItem (Maybe Text)

-- | The unique ID assigned to a version of the schema. Either this or the
--   <tt>SchemaId</tt> has to be provided.
schemaReference_schemaVersionId :: Lens' SchemaReference (Maybe Text)

-- | A structure that contains schema identity fields. Either this or the
--   <tt>SchemaVersionId</tt> has to be provided.
schemaReference_schemaId :: Lens' SchemaReference (Maybe SchemaId)

-- | The version number of the schema.
schemaReference_schemaVersionNumber :: Lens' SchemaReference (Maybe Natural)

-- | The version number of the schema.
schemaVersionErrorItem_versionNumber :: Lens' SchemaVersionErrorItem (Maybe Natural)

-- | The details of the error for the schema version.
schemaVersionErrorItem_errorDetails :: Lens' SchemaVersionErrorItem (Maybe ErrorDetails)

-- | The status of the schema version.
schemaVersionListItem_status :: Lens' SchemaVersionListItem (Maybe SchemaVersionStatus)

-- | The date and time the schema version was created.
schemaVersionListItem_createdTime :: Lens' SchemaVersionListItem (Maybe Text)

-- | The unique identifier of the schema version.
schemaVersionListItem_schemaVersionId :: Lens' SchemaVersionListItem (Maybe Text)

-- | The version number of the schema.
schemaVersionListItem_versionNumber :: Lens' SchemaVersionListItem (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the schema.
schemaVersionListItem_schemaArn :: Lens' SchemaVersionListItem (Maybe Text)

-- | The version number of the schema.
schemaVersionNumber_versionNumber :: Lens' SchemaVersionNumber (Maybe Natural)

-- | The latest version available for the schema.
schemaVersionNumber_latestVersion :: Lens' SchemaVersionNumber (Maybe Bool)

-- | The name of the security configuration.
securityConfiguration_name :: Lens' SecurityConfiguration (Maybe Text)

-- | The encryption configuration associated with this security
--   configuration.
securityConfiguration_encryptionConfiguration :: Lens' SecurityConfiguration (Maybe EncryptionConfiguration)

-- | The time at which this security configuration was created.
securityConfiguration_createdTimeStamp :: Lens' SecurityConfiguration (Maybe UTCTime)

-- | The zero-based index number of the segment. For example, if the total
--   number of segments is 4, <tt>SegmentNumber</tt> values range from 0
--   through 3.
segment_segmentNumber :: Lens' Segment Natural

-- | The total number of segments.
segment_totalSegments :: Lens' Segment Natural

-- | Usually the class that implements the SerDe. An example is
--   <tt>org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe</tt>.
serDeInfo_serializationLibrary :: Lens' SerDeInfo (Maybe Text)

-- | Name of the SerDe.
serDeInfo_name :: Lens' SerDeInfo (Maybe Text)

-- | These key-value pairs define initialization parameters for the SerDe.
serDeInfo_parameters :: Lens' SerDeInfo (Maybe (HashMap Text Text))

-- | A mapping of skewed values to the columns that contain them.
skewedInfo_skewedColumnValueLocationMaps :: Lens' SkewedInfo (Maybe (HashMap Text Text))

-- | A list of values that appear so frequently as to be considered skewed.
skewedInfo_skewedColumnValues :: Lens' SkewedInfo (Maybe [Text])

-- | A list of names of columns that contain skewed values.
skewedInfo_skewedColumnNames :: Lens' SkewedInfo (Maybe [Text])

-- | An ascending or descending sort.
sortCriterion_sort :: Lens' SortCriterion (Maybe Sort)

-- | The name of the field on which to sort.
sortCriterion_fieldName :: Lens' SortCriterion (Maybe Text)

-- | Duration of the batch window in seconds.
startingEventBatchCondition_batchWindow :: Lens' StartingEventBatchCondition (Maybe Int)

-- | Number of events in the batch.
startingEventBatchCondition_batchSize :: Lens' StartingEventBatchCondition (Maybe Int)

-- | A list specifying the sort order of each bucket in the table.
storageDescriptor_sortColumns :: Lens' StorageDescriptor (Maybe [Order])

-- | <tt>True</tt> if the data in the table is compressed, or
--   <tt>False</tt> if not.
storageDescriptor_compressed :: Lens' StorageDescriptor (Maybe Bool)

-- | The physical location of the table. By default, this takes the form of
--   the warehouse location, followed by the database location in the
--   warehouse, followed by the table name.
storageDescriptor_location :: Lens' StorageDescriptor (Maybe Text)

-- | A list of reducer grouping columns, clustering columns, and bucketing
--   columns in the table.
storageDescriptor_bucketColumns :: Lens' StorageDescriptor (Maybe [Text])

-- | The serialization/deserialization (SerDe) information.
storageDescriptor_serdeInfo :: Lens' StorageDescriptor (Maybe SerDeInfo)

-- | The output format: <tt>SequenceFileOutputFormat</tt> (binary), or
--   <tt>IgnoreKeyTextOutputFormat</tt>, or a custom format.
storageDescriptor_outputFormat :: Lens' StorageDescriptor (Maybe Text)

-- | Must be specified if the table contains any dimension columns.
storageDescriptor_numberOfBuckets :: Lens' StorageDescriptor (Maybe Int)

-- | An object that references a schema stored in the Glue Schema Registry.
--   
--   When creating a table, you can pass an empty list of columns for the
--   schema, and instead use a schema reference.
storageDescriptor_schemaReference :: Lens' StorageDescriptor (Maybe SchemaReference)

-- | <tt>True</tt> if the table data is stored in subdirectories, or
--   <tt>False</tt> if not.
storageDescriptor_storedAsSubDirectories :: Lens' StorageDescriptor (Maybe Bool)

-- | The user-supplied properties in key-value form.
storageDescriptor_parameters :: Lens' StorageDescriptor (Maybe (HashMap Text Text))

-- | The input format: <tt>SequenceFileInputFormat</tt> (binary), or
--   <tt>TextInputFormat</tt>, or a custom format.
storageDescriptor_inputFormat :: Lens' StorageDescriptor (Maybe Text)

-- | The information about values that appear frequently in a column
--   (skewed values).
storageDescriptor_skewedInfo :: Lens' StorageDescriptor (Maybe SkewedInfo)

-- | A list of the <tt>Columns</tt> in the table.
storageDescriptor_columns :: Lens' StorageDescriptor (Maybe [Column])

-- | The size of the longest string in the column.
stringColumnStatisticsData_maximumLength :: Lens' StringColumnStatisticsData Natural

-- | The average string length in the column.
stringColumnStatisticsData_averageLength :: Lens' StringColumnStatisticsData Double

-- | The number of null values in the column.
stringColumnStatisticsData_numberOfNulls :: Lens' StringColumnStatisticsData Natural

-- | The number of distinct values in a column.
stringColumnStatisticsData_numberOfDistinctValues :: Lens' StringColumnStatisticsData Natural

-- | The retention time for this table.
table_retention :: Lens' Table (Maybe Natural)

-- | A <tt>TableIdentifier</tt> structure that describes a target table for
--   resource linking.
table_targetTable :: Lens' Table (Maybe TableIdentifier)

-- | Indicates whether the table has been registered with Lake Formation.
table_isRegisteredWithLakeFormation :: Lens' Table (Maybe Bool)

-- | The person or entity who created the table.
table_createdBy :: Lens' Table (Maybe Text)

-- | The type of this table (<tt>EXTERNAL_TABLE</tt>,
--   <tt>VIRTUAL_VIEW</tt>, etc.).
table_tableType :: Lens' Table (Maybe Text)

-- | The ID of the Data Catalog in which the table resides.
table_catalogId :: Lens' Table (Maybe Text)

-- | The owner of the table.
table_owner :: Lens' Table (Maybe Text)

-- | If the table is a view, the original text of the view; otherwise
--   <tt>null</tt>.
table_viewOriginalText :: Lens' Table (Maybe Text)

-- | The last time that the table was updated.
table_updateTime :: Lens' Table (Maybe UTCTime)

-- | If the table is a view, the expanded text of the view; otherwise
--   <tt>null</tt>.
table_viewExpandedText :: Lens' Table (Maybe Text)

-- | The last time that column statistics were computed for this table.
table_lastAnalyzedTime :: Lens' Table (Maybe UTCTime)

-- | A storage descriptor containing information about the physical storage
--   of this table.
table_storageDescriptor :: Lens' Table (Maybe StorageDescriptor)

-- | The name of the database where the table metadata resides. For Hive
--   compatibility, this must be all lowercase.
table_databaseName :: Lens' Table (Maybe Text)

-- | These key-value pairs define properties associated with the table.
table_parameters :: Lens' Table (Maybe (HashMap Text Text))

-- | The last time that the table was accessed. This is usually taken from
--   HDFS, and might not be reliable.
table_lastAccessTime :: Lens' Table (Maybe UTCTime)

-- | A description of the table.
table_description :: Lens' Table (Maybe Text)

-- | A list of columns by which the table is partitioned. Only primitive
--   types are supported as partition keys.
--   
--   When you create a table used by Amazon Athena, and you do not specify
--   any <tt>partitionKeys</tt>, you must at least set the value of
--   <tt>partitionKeys</tt> to an empty list. For example:
--   
--   <pre>
--   "PartitionKeys": []
--   </pre>
table_partitionKeys :: Lens' Table (Maybe [Column])

-- | The time when the table definition was created in the Data Catalog.
table_createTime :: Lens' Table (Maybe UTCTime)

-- | The table name. For Hive compatibility, this must be entirely
--   lowercase.
table_name :: Lens' Table Text

-- | The name of the table. For Hive compatibility, this must be entirely
--   lowercase.
tableError_tableName :: Lens' TableError (Maybe Text)

-- | The details about the error.
tableError_errorDetail :: Lens' TableError (Maybe ErrorDetail)

-- | The ID of the Data Catalog in which the table resides.
tableIdentifier_catalogId :: Lens' TableIdentifier (Maybe Text)

-- | The name of the target table.
tableIdentifier_name :: Lens' TableIdentifier (Maybe Text)

-- | The name of the catalog database that contains the target table.
tableIdentifier_databaseName :: Lens' TableIdentifier (Maybe Text)

-- | The retention time for this table.
tableInput_retention :: Lens' TableInput (Maybe Natural)

-- | A <tt>TableIdentifier</tt> structure that describes a target table for
--   resource linking.
tableInput_targetTable :: Lens' TableInput (Maybe TableIdentifier)

-- | The type of this table (<tt>EXTERNAL_TABLE</tt>,
--   <tt>VIRTUAL_VIEW</tt>, etc.).
tableInput_tableType :: Lens' TableInput (Maybe Text)

-- | The table owner.
tableInput_owner :: Lens' TableInput (Maybe Text)

-- | If the table is a view, the original text of the view; otherwise
--   <tt>null</tt>.
tableInput_viewOriginalText :: Lens' TableInput (Maybe Text)

-- | If the table is a view, the expanded text of the view; otherwise
--   <tt>null</tt>.
tableInput_viewExpandedText :: Lens' TableInput (Maybe Text)

-- | The last time that column statistics were computed for this table.
tableInput_lastAnalyzedTime :: Lens' TableInput (Maybe UTCTime)

-- | A storage descriptor containing information about the physical storage
--   of this table.
tableInput_storageDescriptor :: Lens' TableInput (Maybe StorageDescriptor)

-- | These key-value pairs define properties associated with the table.
tableInput_parameters :: Lens' TableInput (Maybe (HashMap Text Text))

-- | The last time that the table was accessed.
tableInput_lastAccessTime :: Lens' TableInput (Maybe UTCTime)

-- | A description of the table.
tableInput_description :: Lens' TableInput (Maybe Text)

-- | A list of columns by which the table is partitioned. Only primitive
--   types are supported as partition keys.
--   
--   When you create a table used by Amazon Athena, and you do not specify
--   any <tt>partitionKeys</tt>, you must at least set the value of
--   <tt>partitionKeys</tt> to an empty list. For example:
--   
--   <pre>
--   "PartitionKeys": []
--   </pre>
tableInput_partitionKeys :: Lens' TableInput (Maybe [Column])

-- | The table name. For Hive compatibility, this is folded to lowercase
--   when it is stored.
tableInput_name :: Lens' TableInput Text

-- | The ID value that identifies this table version. A <tt>VersionId</tt>
--   is a string representation of an integer. Each version is incremented
--   by 1.
tableVersion_versionId :: Lens' TableVersion (Maybe Text)

-- | The table in question.
tableVersion_table :: Lens' TableVersion (Maybe Table)

-- | The ID value of the version in question. A <tt>VersionID</tt> is a
--   string representation of an integer. Each version is incremented by 1.
tableVersionError_versionId :: Lens' TableVersionError (Maybe Text)

-- | The name of the table in question.
tableVersionError_tableName :: Lens' TableVersionError (Maybe Text)

-- | The details about the error.
tableVersionError_errorDetail :: Lens' TableVersionError (Maybe ErrorDetail)

-- | The last point in time that the requested task run was completed.
taskRun_completedOn :: Lens' TaskRun (Maybe UTCTime)

-- | The current status of the requested task run.
taskRun_status :: Lens' TaskRun (Maybe TaskStatusType)

-- | The last point in time that the requested task run was updated.
taskRun_lastModifiedOn :: Lens' TaskRun (Maybe UTCTime)

-- | The list of error strings associated with this task run.
taskRun_errorString :: Lens' TaskRun (Maybe Text)

-- | The date and time that this task run started.
taskRun_startedOn :: Lens' TaskRun (Maybe UTCTime)

-- | The names of the log group for secure logging, associated with this
--   task run.
taskRun_logGroupName :: Lens' TaskRun (Maybe Text)

-- | The amount of time (in seconds) that the task run consumed resources.
taskRun_executionTime :: Lens' TaskRun (Maybe Int)

-- | Specifies configuration properties associated with this task run.
taskRun_properties :: Lens' TaskRun (Maybe TaskRunProperties)

-- | The unique identifier for the transform.
taskRun_transformId :: Lens' TaskRun (Maybe Text)

-- | The unique identifier for this task run.
taskRun_taskRunId :: Lens' TaskRun (Maybe Text)

-- | The current status of the task run.
taskRunFilterCriteria_status :: Lens' TaskRunFilterCriteria (Maybe TaskStatusType)

-- | Filter on task runs started after this date.
taskRunFilterCriteria_startedAfter :: Lens' TaskRunFilterCriteria (Maybe UTCTime)

-- | Filter on task runs started before this date.
taskRunFilterCriteria_startedBefore :: Lens' TaskRunFilterCriteria (Maybe UTCTime)

-- | The type of task run.
taskRunFilterCriteria_taskRunType :: Lens' TaskRunFilterCriteria (Maybe TaskType)

-- | The type of task run.
taskRunProperties_taskType :: Lens' TaskRunProperties (Maybe TaskType)

-- | The configuration properties for an exporting labels task run.
taskRunProperties_exportLabelsTaskRunProperties :: Lens' TaskRunProperties (Maybe ExportLabelsTaskRunProperties)

-- | The configuration properties for a labeling set generation task run.
taskRunProperties_labelingSetGenerationTaskRunProperties :: Lens' TaskRunProperties (Maybe LabelingSetGenerationTaskRunProperties)

-- | The configuration properties for a find matches task run.
taskRunProperties_findMatchesTaskRunProperties :: Lens' TaskRunProperties (Maybe FindMatchesTaskRunProperties)

-- | The configuration properties for an importing labels task run.
taskRunProperties_importLabelsTaskRunProperties :: Lens' TaskRunProperties (Maybe ImportLabelsTaskRunProperties)

-- | The column to be used to sort the list of task runs for the machine
--   learning transform.
taskRunSortCriteria_column :: Lens' TaskRunSortCriteria TaskRunSortColumnType

-- | The sort direction to be used to sort the list of task runs for the
--   machine learning transform.
taskRunSortCriteria_sortDirection :: Lens' TaskRunSortCriteria SortDirectionType

-- | An <tt>MLUserDataEncryption</tt> object containing the encryption mode
--   and customer-provided KMS key ID.
transformEncryption_mlUserDataEncryption :: Lens' TransformEncryption (Maybe MLUserDataEncryption)

-- | The name of the security configuration.
transformEncryption_taskRunSecurityConfigurationName :: Lens' TransformEncryption (Maybe Text)

-- | The time and date after which the transforms were created.
transformFilterCriteria_createdAfter :: Lens' TransformFilterCriteria (Maybe UTCTime)

-- | Filters the list of machine learning transforms by the last known
--   status of the transforms (to indicate whether a transform can be used
--   or not). One of "NOT_READY", "READY", or "DELETING".
transformFilterCriteria_status :: Lens' TransformFilterCriteria (Maybe TransformStatusType)

-- | Filter on transforms last modified after this date.
transformFilterCriteria_lastModifiedAfter :: Lens' TransformFilterCriteria (Maybe UTCTime)

-- | Filter on transforms last modified before this date.
transformFilterCriteria_lastModifiedBefore :: Lens' TransformFilterCriteria (Maybe UTCTime)

-- | This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
transformFilterCriteria_glueVersion :: Lens' TransformFilterCriteria (Maybe Text)

-- | Filters on datasets with a specific schema. The <tt>Map&lt;Column,
--   Type&gt;</tt> object is an array of key-value pairs representing the
--   schema this transform accepts, where <tt>Column</tt> is the name of a
--   column, and <tt>Type</tt> is the type of the data such as an integer
--   or string. Has an upper bound of 100 columns.
transformFilterCriteria_schema :: Lens' TransformFilterCriteria (Maybe [SchemaColumn])

-- | The type of machine learning transform that is used to filter the
--   machine learning transforms.
transformFilterCriteria_transformType :: Lens' TransformFilterCriteria (Maybe TransformType)

-- | A unique transform name that is used to filter the machine learning
--   transforms.
transformFilterCriteria_name :: Lens' TransformFilterCriteria (Maybe Text)

-- | The time and date before which the transforms were created.
transformFilterCriteria_createdBefore :: Lens' TransformFilterCriteria (Maybe UTCTime)

-- | The parameters for the find matches algorithm.
transformParameters_findMatchesParameters :: Lens' TransformParameters (Maybe FindMatchesParameters)

-- | The type of machine learning transform.
--   
--   For information about the types of machine learning transforms, see
--   <a>Creating Machine Learning Transforms</a>.
transformParameters_transformType :: Lens' TransformParameters TransformType

-- | The column to be used in the sorting criteria that are associated with
--   the machine learning transform.
transformSortCriteria_column :: Lens' TransformSortCriteria TransformSortColumnType

-- | The sort direction to be used in the sorting criteria that are
--   associated with the machine learning transform.
transformSortCriteria_sortDirection :: Lens' TransformSortCriteria SortDirectionType

-- | The name of the workflow associated with the trigger.
trigger_workflowName :: Lens' Trigger (Maybe Text)

-- | The current state of the trigger.
trigger_state :: Lens' Trigger (Maybe TriggerState)

-- | The actions initiated by this trigger.
trigger_actions :: Lens' Trigger (Maybe [Action])

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
trigger_schedule :: Lens' Trigger (Maybe Text)

-- | The predicate of this trigger, which defines when it will fire.
trigger_predicate :: Lens' Trigger (Maybe Predicate)

-- | The name of the trigger.
trigger_name :: Lens' Trigger (Maybe Text)

-- | Reserved for future use.
trigger_id :: Lens' Trigger (Maybe Text)

-- | The type of trigger that this is.
trigger_type :: Lens' Trigger (Maybe TriggerType)

-- | Batch condition that must be met (specified number of events received
--   or batch time window expired) before EventBridge event trigger fires.
trigger_eventBatchingCondition :: Lens' Trigger (Maybe EventBatchingCondition)

-- | A description of this trigger.
trigger_description :: Lens' Trigger (Maybe Text)

-- | The information of the trigger represented by the trigger node.
triggerNodeDetails_trigger :: Lens' TriggerNodeDetails (Maybe Trigger)

-- | The actions initiated by this trigger.
triggerUpdate_actions :: Lens' TriggerUpdate (Maybe [Action])

-- | A <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
triggerUpdate_schedule :: Lens' TriggerUpdate (Maybe Text)

-- | The predicate of this trigger, which defines when it will fire.
triggerUpdate_predicate :: Lens' TriggerUpdate (Maybe Predicate)

-- | Reserved for future use.
triggerUpdate_name :: Lens' TriggerUpdate (Maybe Text)

-- | Batch condition that must be met (specified number of events received
--   or batch time window expired) before EventBridge event trigger fires.
triggerUpdate_eventBatchingCondition :: Lens' TriggerUpdate (Maybe EventBatchingCondition)

-- | A description of this trigger.
triggerUpdate_description :: Lens' TriggerUpdate (Maybe Text)

-- | A custom symbol to denote what combines content into a single column
--   value. It must be different from the column delimiter.
updateCsvClassifierRequest_quoteSymbol :: Lens' UpdateCsvClassifierRequest (Maybe Text)

-- | Indicates whether the CSV file contains a header.
updateCsvClassifierRequest_containsHeader :: Lens' UpdateCsvClassifierRequest (Maybe CsvHeaderOption)

-- | Specifies not to trim values before identifying the type of column
--   values. The default value is true.
updateCsvClassifierRequest_disableValueTrimming :: Lens' UpdateCsvClassifierRequest (Maybe Bool)

-- | A list of strings representing column names.
updateCsvClassifierRequest_header :: Lens' UpdateCsvClassifierRequest (Maybe [Text])

-- | Enables the processing of files that contain only one column.
updateCsvClassifierRequest_allowSingleColumn :: Lens' UpdateCsvClassifierRequest (Maybe Bool)

-- | A custom symbol to denote what separates each column entry in the row.
updateCsvClassifierRequest_delimiter :: Lens' UpdateCsvClassifierRequest (Maybe Text)

-- | The name of the classifier.
updateCsvClassifierRequest_name :: Lens' UpdateCsvClassifierRequest Text

-- | An identifier of the data format that the classifier matches, such as
--   Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.
updateGrokClassifierRequest_classification :: Lens' UpdateGrokClassifierRequest (Maybe Text)

-- | Optional custom grok patterns used by this classifier.
updateGrokClassifierRequest_customPatterns :: Lens' UpdateGrokClassifierRequest (Maybe Text)

-- | The grok pattern used by this classifier.
updateGrokClassifierRequest_grokPattern :: Lens' UpdateGrokClassifierRequest (Maybe Text)

-- | The name of the <tt>GrokClassifier</tt>.
updateGrokClassifierRequest_name :: Lens' UpdateGrokClassifierRequest Text

-- | A <tt>JsonPath</tt> string defining the JSON data for the classifier
--   to classify. Glue supports a subset of JsonPath, as described in
--   <a>Writing JsonPath Custom Classifiers</a>.
updateJsonClassifierRequest_jsonPath :: Lens' UpdateJsonClassifierRequest (Maybe Text)

-- | The name of the classifier.
updateJsonClassifierRequest_name :: Lens' UpdateJsonClassifierRequest Text

-- | An identifier of the data format that the classifier matches.
updateXMLClassifierRequest_classification :: Lens' UpdateXMLClassifierRequest (Maybe Text)

-- | The XML tag designating the element that contains each record in an
--   XML document being parsed. This cannot identify a self-closing element
--   (closed by <tt>/&gt;</tt>). An empty row element that contains only
--   attributes can be parsed as long as it ends with a closing tag (for
--   example, <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is
--   okay, but <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
updateXMLClassifierRequest_rowTag :: Lens' UpdateXMLClassifierRequest (Maybe Text)

-- | The name of the classifier.
updateXMLClassifierRequest_name :: Lens' UpdateXMLClassifierRequest Text

-- | The owner of the function.
userDefinedFunction_ownerName :: Lens' UserDefinedFunction (Maybe Text)

-- | The ID of the Data Catalog in which the function resides.
userDefinedFunction_catalogId :: Lens' UserDefinedFunction (Maybe Text)

-- | The resource URIs for the function.
userDefinedFunction_resourceUris :: Lens' UserDefinedFunction (Maybe [ResourceUri])

-- | The name of the catalog database that contains the function.
userDefinedFunction_databaseName :: Lens' UserDefinedFunction (Maybe Text)

-- | The name of the function.
userDefinedFunction_functionName :: Lens' UserDefinedFunction (Maybe Text)

-- | The owner type.
userDefinedFunction_ownerType :: Lens' UserDefinedFunction (Maybe PrincipalType)

-- | The time at which the function was created.
userDefinedFunction_createTime :: Lens' UserDefinedFunction (Maybe UTCTime)

-- | The Java class that contains the function code.
userDefinedFunction_className :: Lens' UserDefinedFunction (Maybe Text)

-- | The owner of the function.
userDefinedFunctionInput_ownerName :: Lens' UserDefinedFunctionInput (Maybe Text)

-- | The resource URIs for the function.
userDefinedFunctionInput_resourceUris :: Lens' UserDefinedFunctionInput (Maybe [ResourceUri])

-- | The name of the function.
userDefinedFunctionInput_functionName :: Lens' UserDefinedFunctionInput (Maybe Text)

-- | The owner type.
userDefinedFunctionInput_ownerType :: Lens' UserDefinedFunctionInput (Maybe PrincipalType)

-- | The Java class that contains the function code.
userDefinedFunctionInput_className :: Lens' UserDefinedFunctionInput (Maybe Text)

-- | The graph representing all the Glue components that belong to the
--   workflow as nodes and directed connections between them as edges.
workflow_graph :: Lens' Workflow (Maybe WorkflowGraph)

-- | The date and time when the workflow was last modified.
workflow_lastModifiedOn :: Lens' Workflow (Maybe UTCTime)

-- | This structure indicates the details of the blueprint that this
--   particular workflow is created from.
workflow_blueprintDetails :: Lens' Workflow (Maybe BlueprintDetails)

-- | You can use this parameter to prevent unwanted multiple updates to
--   data, to control costs, or in some cases, to prevent exceeding the
--   maximum number of concurrent runs of any of the component jobs. If you
--   leave this parameter blank, there is no limit to the number of
--   concurrent workflow runs.
workflow_maxConcurrentRuns :: Lens' Workflow (Maybe Int)

-- | A collection of properties to be used as part of each execution of the
--   workflow. The run properties are made available to each job in the
--   workflow. A job can modify the properties for the next jobs in the
--   flow.
workflow_defaultRunProperties :: Lens' Workflow (Maybe (HashMap Text Text))

-- | The name of the workflow.
workflow_name :: Lens' Workflow (Maybe Text)

-- | The information about the last execution of the workflow.
workflow_lastRun :: Lens' Workflow (Maybe WorkflowRun)

-- | A description of the workflow.
workflow_description :: Lens' Workflow (Maybe Text)

-- | The date and time when the workflow was created.
workflow_createdOn :: Lens' Workflow (Maybe UTCTime)

-- | A list of all the directed connections between the nodes belonging to
--   the workflow.
workflowGraph_edges :: Lens' WorkflowGraph (Maybe [Edge])

-- | A list of the the Glue components belong to the workflow represented
--   as nodes.
workflowGraph_nodes :: Lens' WorkflowGraph (Maybe [Node])

-- | The date and time when the workflow run completed.
workflowRun_completedOn :: Lens' WorkflowRun (Maybe UTCTime)

-- | The status of the workflow run.
workflowRun_status :: Lens' WorkflowRun (Maybe WorkflowRunStatus)

-- | The graph representing all the Glue components that belong to the
--   workflow as nodes and directed connections between them as edges.
workflowRun_graph :: Lens' WorkflowRun (Maybe WorkflowGraph)

-- | The date and time when the workflow run was started.
workflowRun_startedOn :: Lens' WorkflowRun (Maybe UTCTime)

-- | The ID of this workflow run.
workflowRun_workflowRunId :: Lens' WorkflowRun (Maybe Text)

-- | Name of the workflow that was run.
workflowRun_name :: Lens' WorkflowRun (Maybe Text)

-- | The ID of the previous workflow run.
workflowRun_previousRunId :: Lens' WorkflowRun (Maybe Text)

-- | The statistics of the run.
workflowRun_statistics :: Lens' WorkflowRun (Maybe WorkflowRunStatistics)

-- | The batch condition that started the workflow run.
workflowRun_startingEventBatchCondition :: Lens' WorkflowRun (Maybe StartingEventBatchCondition)

-- | This error message describes any error that may have occurred in
--   starting the workflow run. Currently the only error message is
--   "Concurrent runs exceeded for workflow: <tt>foo</tt>."
workflowRun_errorMessage :: Lens' WorkflowRun (Maybe Text)

-- | The workflow run properties which were set during the run.
workflowRun_workflowRunProperties :: Lens' WorkflowRun (Maybe (HashMap Text Text))

-- | Total number Actions in running state.
workflowRunStatistics_runningActions :: Lens' WorkflowRunStatistics (Maybe Int)

-- | Total number of Actions that have stopped.
workflowRunStatistics_stoppedActions :: Lens' WorkflowRunStatistics (Maybe Int)

-- | Total number of Actions in the workflow run.
workflowRunStatistics_totalActions :: Lens' WorkflowRunStatistics (Maybe Int)

-- | Total number of Actions that have failed.
workflowRunStatistics_failedActions :: Lens' WorkflowRunStatistics (Maybe Int)

-- | Total number of Actions that timed out.
workflowRunStatistics_timeoutActions :: Lens' WorkflowRunStatistics (Maybe Int)

-- | Total number of Actions that have succeeded.
workflowRunStatistics_succeededActions :: Lens' WorkflowRunStatistics (Maybe Int)

-- | The time that this classifier was registered.
xMLClassifier_creationTime :: Lens' XMLClassifier (Maybe UTCTime)

-- | The time that this classifier was last updated.
xMLClassifier_lastUpdated :: Lens' XMLClassifier (Maybe UTCTime)

-- | The version of this classifier.
xMLClassifier_version :: Lens' XMLClassifier (Maybe Integer)

-- | The XML tag designating the element that contains each record in an
--   XML document being parsed. This can't identify a self-closing element
--   (closed by <tt>/&gt;</tt>). An empty row element that contains only
--   attributes can be parsed as long as it ends with a closing tag (for
--   example, <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is
--   okay, but <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
xMLClassifier_rowTag :: Lens' XMLClassifier (Maybe Text)

-- | The name of the classifier.
xMLClassifier_name :: Lens' XMLClassifier Text

-- | An identifier of the data format that the classifier matches.
xMLClassifier_classification :: Lens' XMLClassifier Text


module Network.AWS.Glue.Waiters


-- | Derived from API version <tt>2017-03-31</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Glue
--   
--   Defines the public endpoint for the Glue service.
module Network.AWS.Glue

-- | API version <tt>2017-03-31</tt> of the Amazon Glue SDK configuration.
defaultService :: Service

-- | A value could not be validated.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Access to a resource was denied.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation cannot be performed because the crawler is already
--   running.
_CrawlerRunningException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified scheduler is transitioning.
_SchedulerTransitioningException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified scheduler is already running.
_SchedulerRunningException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A specified condition was not satisfied.
_ConditionCheckFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Too many jobs are being run concurrently.
_ConcurrentRunsExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The workflow is in an invalid state to perform a requested operation.
_IllegalWorkflowStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There is no applicable schedule.
_NoScheduleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation timed out.
_OperationTimeoutException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The <tt>CreatePartitions</tt> API was called on a table that has
--   indexes enabled.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified crawler is not running.
_CrawlerNotRunningException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There was a version conflict.
_VersionMismatchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The machine learning transform is not ready to run.
_MLTransformNotReadyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A specified entity does not exist
_EntityNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Two processes are trying to modify a resource simultaneously.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified scheduler is not running.
_SchedulerNotRunningException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal service error occurred.
_InternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The input provided was not valid.
_InvalidInputException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource numerical limit was exceeded.
_ResourceNumberLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An encryption operation failed.
_GlueEncryptionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The same unique identifier was associated with two different records.
_IdempotentParameterMismatchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified crawler is stopping.
_CrawlerStoppingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Prism for IllegalBlueprintStateException' errors.
_IllegalBlueprintStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource to be created or added already exists.
_AlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newStartImportLabelsTaskRun</a> smart constructor.
data StartImportLabelsTaskRun
StartImportLabelsTaskRun' :: Maybe Bool -> Text -> Text -> StartImportLabelsTaskRun

-- | Create a value of <a>StartImportLabelsTaskRun</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replaceAllLabels:StartImportLabelsTaskRun'</a>,
--   <a>startImportLabelsTaskRun_replaceAllLabels</a> - Indicates whether
--   to overwrite your existing labels.
--   
--   <a>$sel:transformId:StartImportLabelsTaskRun'</a>,
--   <a>startImportLabelsTaskRun_transformId</a> - The unique identifier of
--   the machine learning transform.
--   
--   <a>$sel:inputS3Path:StartImportLabelsTaskRun'</a>,
--   <a>startImportLabelsTaskRun_inputS3Path</a> - The Amazon Simple
--   Storage Service (Amazon S3) path from where you import the labels.
newStartImportLabelsTaskRun :: Text -> Text -> StartImportLabelsTaskRun

-- | <i>See:</i> <a>newStartImportLabelsTaskRunResponse</a> smart
--   constructor.
data StartImportLabelsTaskRunResponse
StartImportLabelsTaskRunResponse' :: Maybe Text -> Int -> StartImportLabelsTaskRunResponse

-- | Create a value of <a>StartImportLabelsTaskRunResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskRunId:StartImportLabelsTaskRunResponse'</a>,
--   <a>startImportLabelsTaskRunResponse_taskRunId</a> - The unique
--   identifier for the task run.
--   
--   <a>$sel:httpStatus:StartImportLabelsTaskRunResponse'</a>,
--   <a>startImportLabelsTaskRunResponse_httpStatus</a> - The response's
--   http status code.
newStartImportLabelsTaskRunResponse :: Int -> StartImportLabelsTaskRunResponse

-- | <i>See:</i> <a>newUpdateMLTransform</a> smart constructor.
data UpdateMLTransform
UpdateMLTransform' :: Maybe Int -> Maybe WorkerType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TransformParameters -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe Text -> Text -> UpdateMLTransform

-- | Create a value of <a>UpdateMLTransform</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfWorkers:UpdateMLTransform'</a>,
--   <a>updateMLTransform_numberOfWorkers</a> - The number of workers of a
--   defined <tt>workerType</tt> that are allocated when this task runs.
--   
--   <a>$sel:workerType:UpdateMLTransform'</a>,
--   <a>updateMLTransform_workerType</a> - The type of predefined worker
--   that is allocated when this task runs. Accepts a value of Standard,
--   G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <a>$sel:glueVersion:UpdateMLTransform'</a>,
--   <a>updateMLTransform_glueVersion</a> - This value determines which
--   version of Glue this machine learning transform is compatible with.
--   Glue 1.0 is recommended for most customers. If the value is not set,
--   the Glue compatibility defaults to Glue 0.9. For more information, see
--   <a>Glue Versions</a> in the developer guide.
--   
--   <a>$sel:role':UpdateMLTransform'</a>, <a>updateMLTransform_role</a> -
--   The name or Amazon Resource Name (ARN) of the IAM role with the
--   required permissions.
--   
--   <a>$sel:name:UpdateMLTransform'</a>, <a>updateMLTransform_name</a> -
--   The unique name that you gave the transform when you created it.
--   
--   <a>$sel:parameters:UpdateMLTransform'</a>,
--   <a>updateMLTransform_parameters</a> - The configuration parameters
--   that are specific to the transform type (algorithm) used.
--   Conditionally dependent on the transform type.
--   
--   <a>$sel:maxRetries:UpdateMLTransform'</a>,
--   <a>updateMLTransform_maxRetries</a> - The maximum number of times to
--   retry a task for this transform after a task run fails.
--   
--   <a>$sel:maxCapacity:UpdateMLTransform'</a>,
--   <a>updateMLTransform_maxCapacity</a> - The number of Glue data
--   processing units (DPUs) that are allocated to task runs for this
--   transform. You can allocate from 2 to 100 DPUs; the default is 10. A
--   DPU is a relative measure of processing power that consists of 4 vCPUs
--   of compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
--   
--   <a>$sel:timeout:UpdateMLTransform'</a>,
--   <a>updateMLTransform_timeout</a> - The timeout for a task run for this
--   transform in minutes. This is the maximum time that a task run for
--   this transform can consume resources before it is terminated and
--   enters <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48
--   hours).
--   
--   <a>$sel:description:UpdateMLTransform'</a>,
--   <a>updateMLTransform_description</a> - A description of the transform.
--   The default is an empty string.
--   
--   <a>$sel:transformId:UpdateMLTransform'</a>,
--   <a>updateMLTransform_transformId</a> - A unique identifier that was
--   generated when the transform was created.
newUpdateMLTransform :: Text -> UpdateMLTransform

-- | <i>See:</i> <a>newUpdateMLTransformResponse</a> smart constructor.
data UpdateMLTransformResponse
UpdateMLTransformResponse' :: Maybe Text -> Int -> UpdateMLTransformResponse

-- | Create a value of <a>UpdateMLTransformResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transformId:UpdateMLTransform'</a>,
--   <a>updateMLTransformResponse_transformId</a> - The unique identifier
--   for the transform that was updated.
--   
--   <a>$sel:httpStatus:UpdateMLTransformResponse'</a>,
--   <a>updateMLTransformResponse_httpStatus</a> - The response's http
--   status code.
newUpdateMLTransformResponse :: Int -> UpdateMLTransformResponse

-- | <i>See:</i> <a>newUpdateRegistry</a> smart constructor.
data UpdateRegistry
UpdateRegistry' :: RegistryId -> Text -> UpdateRegistry

-- | Create a value of <a>UpdateRegistry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryId:UpdateRegistry'</a>,
--   <a>updateRegistry_registryId</a> - This is a wrapper structure that
--   may contain the registry name and Amazon Resource Name (ARN).
--   
--   <a>$sel:description:UpdateRegistry'</a>,
--   <a>updateRegistry_description</a> - A description of the registry. If
--   description is not provided, this field will not be updated.
newUpdateRegistry :: RegistryId -> Text -> UpdateRegistry

-- | <i>See:</i> <a>newUpdateRegistryResponse</a> smart constructor.
data UpdateRegistryResponse
UpdateRegistryResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateRegistryResponse

-- | Create a value of <a>UpdateRegistryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:UpdateRegistryResponse'</a>,
--   <a>updateRegistryResponse_registryName</a> - The name of the updated
--   registry.
--   
--   <a>$sel:registryArn:UpdateRegistryResponse'</a>,
--   <a>updateRegistryResponse_registryArn</a> - The Amazon Resource name
--   (ARN) of the updated registry.
--   
--   <a>$sel:httpStatus:UpdateRegistryResponse'</a>,
--   <a>updateRegistryResponse_httpStatus</a> - The response's http status
--   code.
newUpdateRegistryResponse :: Int -> UpdateRegistryResponse

-- | <i>See:</i> <a>newDeleteRegistry</a> smart constructor.
data DeleteRegistry
DeleteRegistry' :: RegistryId -> DeleteRegistry

-- | Create a value of <a>DeleteRegistry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryId:DeleteRegistry'</a>,
--   <a>deleteRegistry_registryId</a> - This is a wrapper structure that
--   may contain the registry name and Amazon Resource Name (ARN).
newDeleteRegistry :: RegistryId -> DeleteRegistry

-- | <i>See:</i> <a>newDeleteRegistryResponse</a> smart constructor.
data DeleteRegistryResponse
DeleteRegistryResponse' :: Maybe RegistryStatus -> Maybe Text -> Maybe Text -> Int -> DeleteRegistryResponse

-- | Create a value of <a>DeleteRegistryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DeleteRegistryResponse'</a>,
--   <a>deleteRegistryResponse_status</a> - The status of the registry. A
--   successful operation will return the <tt>Deleting</tt> status.
--   
--   <a>$sel:registryName:DeleteRegistryResponse'</a>,
--   <a>deleteRegistryResponse_registryName</a> - The name of the registry
--   being deleted.
--   
--   <a>$sel:registryArn:DeleteRegistryResponse'</a>,
--   <a>deleteRegistryResponse_registryArn</a> - The Amazon Resource Name
--   (ARN) of the registry being deleted.
--   
--   <a>$sel:httpStatus:DeleteRegistryResponse'</a>,
--   <a>deleteRegistryResponse_httpStatus</a> - The response's http status
--   code.
newDeleteRegistryResponse :: Int -> DeleteRegistryResponse

-- | <i>See:</i> <a>newDeleteMLTransform</a> smart constructor.
data DeleteMLTransform
DeleteMLTransform' :: Text -> DeleteMLTransform

-- | Create a value of <a>DeleteMLTransform</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transformId:DeleteMLTransform'</a>,
--   <a>deleteMLTransform_transformId</a> - The unique identifier of the
--   transform to delete.
newDeleteMLTransform :: Text -> DeleteMLTransform

-- | <i>See:</i> <a>newDeleteMLTransformResponse</a> smart constructor.
data DeleteMLTransformResponse
DeleteMLTransformResponse' :: Maybe Text -> Int -> DeleteMLTransformResponse

-- | Create a value of <a>DeleteMLTransformResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transformId:DeleteMLTransform'</a>,
--   <a>deleteMLTransformResponse_transformId</a> - The unique identifier
--   of the transform that was deleted.
--   
--   <a>$sel:httpStatus:DeleteMLTransformResponse'</a>,
--   <a>deleteMLTransformResponse_httpStatus</a> - The response's http
--   status code.
newDeleteMLTransformResponse :: Int -> DeleteMLTransformResponse

-- | <i>See:</i> <a>newStartCrawler</a> smart constructor.
data StartCrawler
StartCrawler' :: Text -> StartCrawler

-- | Create a value of <a>StartCrawler</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StartCrawler'</a>, <a>startCrawler_name</a> - Name of the
--   crawler to start.
newStartCrawler :: Text -> StartCrawler

-- | <i>See:</i> <a>newStartCrawlerResponse</a> smart constructor.
data StartCrawlerResponse
StartCrawlerResponse' :: Int -> StartCrawlerResponse

-- | Create a value of <a>StartCrawlerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartCrawlerResponse'</a>,
--   <a>startCrawlerResponse_httpStatus</a> - The response's http status
--   code.
newStartCrawlerResponse :: Int -> StartCrawlerResponse

-- | <i>See:</i> <a>newGetCatalogImportStatus</a> smart constructor.
data GetCatalogImportStatus
GetCatalogImportStatus' :: Maybe Text -> GetCatalogImportStatus

-- | Create a value of <a>GetCatalogImportStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetCatalogImportStatus'</a>,
--   <a>getCatalogImportStatus_catalogId</a> - The ID of the catalog to
--   migrate. Currently, this should be the Amazon Web Services account ID.
newGetCatalogImportStatus :: GetCatalogImportStatus

-- | <i>See:</i> <a>newGetCatalogImportStatusResponse</a> smart
--   constructor.
data GetCatalogImportStatusResponse
GetCatalogImportStatusResponse' :: Maybe CatalogImportStatus -> Int -> GetCatalogImportStatusResponse

-- | Create a value of <a>GetCatalogImportStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:importStatus:GetCatalogImportStatusResponse'</a>,
--   <a>getCatalogImportStatusResponse_importStatus</a> - The status of the
--   specified catalog migration.
--   
--   <a>$sel:httpStatus:GetCatalogImportStatusResponse'</a>,
--   <a>getCatalogImportStatusResponse_httpStatus</a> - The response's http
--   status code.
newGetCatalogImportStatusResponse :: Int -> GetCatalogImportStatusResponse

-- | <i>See:</i> <a>newListMLTransforms</a> smart constructor.
data ListMLTransforms
ListMLTransforms' :: Maybe Text -> Maybe TransformSortCriteria -> Maybe TransformFilterCriteria -> Maybe Natural -> Maybe (HashMap Text Text) -> ListMLTransforms

-- | Create a value of <a>ListMLTransforms</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMLTransforms'</a>,
--   <a>listMLTransforms_nextToken</a> - A continuation token, if this is a
--   continuation request.
--   
--   <a>$sel:sort:ListMLTransforms'</a>, <a>listMLTransforms_sort</a> - A
--   <tt>TransformSortCriteria</tt> used to sort the machine learning
--   transforms.
--   
--   <a>$sel:filter':ListMLTransforms'</a>, <a>listMLTransforms_filter</a>
--   - A <tt>TransformFilterCriteria</tt> used to filter the machine
--   learning transforms.
--   
--   <a>$sel:maxResults:ListMLTransforms'</a>,
--   <a>listMLTransforms_maxResults</a> - The maximum size of a list to
--   return.
--   
--   <a>$sel:tags:ListMLTransforms'</a>, <a>listMLTransforms_tags</a> -
--   Specifies to return only these tagged resources.
newListMLTransforms :: ListMLTransforms

-- | <i>See:</i> <a>newListMLTransformsResponse</a> smart constructor.
data ListMLTransformsResponse
ListMLTransformsResponse' :: Maybe Text -> Int -> [Text] -> ListMLTransformsResponse

-- | Create a value of <a>ListMLTransformsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMLTransforms'</a>,
--   <a>listMLTransformsResponse_nextToken</a> - A continuation token, if
--   the returned list does not contain the last metric available.
--   
--   <a>$sel:httpStatus:ListMLTransformsResponse'</a>,
--   <a>listMLTransformsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:transformIds:ListMLTransformsResponse'</a>,
--   <a>listMLTransformsResponse_transformIds</a> - The identifiers of all
--   the machine learning transforms in the account, or the machine
--   learning transforms with the specified tags.
newListMLTransformsResponse :: Int -> ListMLTransformsResponse

-- | <i>See:</i> <a>newGetPartition</a> smart constructor.
data GetPartition
GetPartition' :: Maybe Text -> Text -> Text -> [Text] -> GetPartition

-- | Create a value of <a>GetPartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetPartition'</a>, <a>getPartition_catalogId</a> -
--   The ID of the Data Catalog where the partition in question resides. If
--   none is provided, the Amazon Web Services account ID is used by
--   default.
--   
--   <a>$sel:databaseName:GetPartition'</a>,
--   <a>getPartition_databaseName</a> - The name of the catalog database
--   where the partition resides.
--   
--   <a>$sel:tableName:GetPartition'</a>, <a>getPartition_tableName</a> -
--   The name of the partition's table.
--   
--   <a>$sel:partitionValues:GetPartition'</a>,
--   <a>getPartition_partitionValues</a> - The values that define the
--   partition.
newGetPartition :: Text -> Text -> GetPartition

-- | <i>See:</i> <a>newGetPartitionResponse</a> smart constructor.
data GetPartitionResponse
GetPartitionResponse' :: Maybe Partition -> Int -> GetPartitionResponse

-- | Create a value of <a>GetPartitionResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partition:GetPartitionResponse'</a>,
--   <a>getPartitionResponse_partition</a> - The requested information, in
--   the form of a <tt>Partition</tt> object.
--   
--   <a>$sel:httpStatus:GetPartitionResponse'</a>,
--   <a>getPartitionResponse_httpStatus</a> - The response's http status
--   code.
newGetPartitionResponse :: Int -> GetPartitionResponse

-- | <i>See:</i> <a>newQuerySchemaVersionMetadata</a> smart constructor.
data QuerySchemaVersionMetadata
QuerySchemaVersionMetadata' :: Maybe Text -> Maybe SchemaId -> Maybe Text -> Maybe [MetadataKeyValuePair] -> Maybe SchemaVersionNumber -> Maybe Natural -> QuerySchemaVersionMetadata

-- | Create a value of <a>QuerySchemaVersionMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaVersionId:QuerySchemaVersionMetadata'</a>,
--   <a>querySchemaVersionMetadata_schemaVersionId</a> - The unique version
--   ID of the schema version.
--   
--   <a>$sel:schemaId:QuerySchemaVersionMetadata'</a>,
--   <a>querySchemaVersionMetadata_schemaId</a> - A wrapper structure that
--   may contain the schema name and Amazon Resource Name (ARN).
--   
--   <a>$sel:nextToken:QuerySchemaVersionMetadata'</a>,
--   <a>querySchemaVersionMetadata_nextToken</a> - A continuation token, if
--   this is a continuation call.
--   
--   <a>$sel:metadataList:QuerySchemaVersionMetadata'</a>,
--   <a>querySchemaVersionMetadata_metadataList</a> - Search key-value
--   pairs for metadata, if they are not provided all the metadata
--   information will be fetched.
--   
--   <a>$sel:schemaVersionNumber:QuerySchemaVersionMetadata'</a>,
--   <a>querySchemaVersionMetadata_schemaVersionNumber</a> - The version
--   number of the schema.
--   
--   <a>$sel:maxResults:QuerySchemaVersionMetadata'</a>,
--   <a>querySchemaVersionMetadata_maxResults</a> - Maximum number of
--   results required per page. If the value is not supplied, this will be
--   defaulted to 25 per page.
newQuerySchemaVersionMetadata :: QuerySchemaVersionMetadata

-- | <i>See:</i> <a>newQuerySchemaVersionMetadataResponse</a> smart
--   constructor.
data QuerySchemaVersionMetadataResponse
QuerySchemaVersionMetadataResponse' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text MetadataInfo) -> Int -> QuerySchemaVersionMetadataResponse

-- | Create a value of <a>QuerySchemaVersionMetadataResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaVersionId:QuerySchemaVersionMetadata'</a>,
--   <a>querySchemaVersionMetadataResponse_schemaVersionId</a> - The unique
--   version ID of the schema version.
--   
--   <a>$sel:nextToken:QuerySchemaVersionMetadata'</a>,
--   <a>querySchemaVersionMetadataResponse_nextToken</a> - A continuation
--   token for paginating the returned list of tokens, returned if the
--   current segment of the list is not the last.
--   
--   <a>$sel:metadataInfoMap:QuerySchemaVersionMetadataResponse'</a>,
--   <a>querySchemaVersionMetadataResponse_metadataInfoMap</a> - A map of a
--   metadata key and associated values.
--   
--   <a>$sel:httpStatus:QuerySchemaVersionMetadataResponse'</a>,
--   <a>querySchemaVersionMetadataResponse_httpStatus</a> - The response's
--   http status code.
newQuerySchemaVersionMetadataResponse :: Int -> QuerySchemaVersionMetadataResponse

-- | <i>See:</i> <a>newCreateTrigger</a> smart constructor.
data CreateTrigger
CreateTrigger' :: Maybe Text -> Maybe Text -> Maybe Predicate -> Maybe Bool -> Maybe EventBatchingCondition -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> TriggerType -> [Action] -> CreateTrigger

-- | Create a value of <a>CreateTrigger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workflowName:CreateTrigger'</a>,
--   <a>createTrigger_workflowName</a> - The name of the workflow
--   associated with the trigger.
--   
--   <a>$sel:schedule:CreateTrigger'</a>, <a>createTrigger_schedule</a> - A
--   <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
--   
--   This field is required when the trigger type is SCHEDULED.
--   
--   <a>$sel:predicate:CreateTrigger'</a>, <a>createTrigger_predicate</a> -
--   A predicate to specify when the new trigger should fire.
--   
--   This field is required when the trigger type is <tt>CONDITIONAL</tt>.
--   
--   <a>$sel:startOnCreation:CreateTrigger'</a>,
--   <a>createTrigger_startOnCreation</a> - Set to <tt>true</tt> to start
--   <tt>SCHEDULED</tt> and <tt>CONDITIONAL</tt> triggers when created.
--   True is not supported for <tt>ON_DEMAND</tt> triggers.
--   
--   <a>$sel:eventBatchingCondition:CreateTrigger'</a>,
--   <a>createTrigger_eventBatchingCondition</a> - Batch condition that
--   must be met (specified number of events received or batch time window
--   expired) before EventBridge event trigger fires.
--   
--   <a>$sel:description:CreateTrigger'</a>,
--   <a>createTrigger_description</a> - A description of the new trigger.
--   
--   <a>$sel:tags:CreateTrigger'</a>, <a>createTrigger_tags</a> - The tags
--   to use with this trigger. You may use tags to limit access to the
--   trigger. For more information about tags in Glue, see <a>Amazon Web
--   Services Tags in Glue</a> in the developer guide.
--   
--   <a>$sel:name:CreateTrigger'</a>, <a>createTrigger_name</a> - The name
--   of the trigger.
--   
--   <a>$sel:type':CreateTrigger'</a>, <a>createTrigger_type</a> - The type
--   of the new trigger.
--   
--   <a>$sel:actions:CreateTrigger'</a>, <a>createTrigger_actions</a> - The
--   actions initiated by this trigger when it fires.
newCreateTrigger :: Text -> TriggerType -> CreateTrigger

-- | <i>See:</i> <a>newCreateTriggerResponse</a> smart constructor.
data CreateTriggerResponse
CreateTriggerResponse' :: Maybe Text -> Int -> CreateTriggerResponse

-- | Create a value of <a>CreateTriggerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateTrigger'</a>, <a>createTriggerResponse_name</a> -
--   The name of the trigger.
--   
--   <a>$sel:httpStatus:CreateTriggerResponse'</a>,
--   <a>createTriggerResponse_httpStatus</a> - The response's http status
--   code.
newCreateTriggerResponse :: Int -> CreateTriggerResponse

-- | <i>See:</i> <a>newCheckSchemaVersionValidity</a> smart constructor.
data CheckSchemaVersionValidity
CheckSchemaVersionValidity' :: DataFormat -> Text -> CheckSchemaVersionValidity

-- | Create a value of <a>CheckSchemaVersionValidity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataFormat:CheckSchemaVersionValidity'</a>,
--   <a>checkSchemaVersionValidity_dataFormat</a> - The data format of the
--   schema definition. Currently <tt>AVRO</tt> and <tt>JSON</tt> are
--   supported.
--   
--   <a>$sel:schemaDefinition:CheckSchemaVersionValidity'</a>,
--   <a>checkSchemaVersionValidity_schemaDefinition</a> - The definition of
--   the schema that has to be validated.
newCheckSchemaVersionValidity :: DataFormat -> Text -> CheckSchemaVersionValidity

-- | <i>See:</i> <a>newCheckSchemaVersionValidityResponse</a> smart
--   constructor.
data CheckSchemaVersionValidityResponse
CheckSchemaVersionValidityResponse' :: Maybe Text -> Maybe Bool -> Int -> CheckSchemaVersionValidityResponse

-- | Create a value of <a>CheckSchemaVersionValidityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:error:CheckSchemaVersionValidityResponse'</a>,
--   <a>checkSchemaVersionValidityResponse_error</a> - A validation failure
--   error message.
--   
--   <a>$sel:valid:CheckSchemaVersionValidityResponse'</a>,
--   <a>checkSchemaVersionValidityResponse_valid</a> - Return true, if the
--   schema is valid and false otherwise.
--   
--   <a>$sel:httpStatus:CheckSchemaVersionValidityResponse'</a>,
--   <a>checkSchemaVersionValidityResponse_httpStatus</a> - The response's
--   http status code.
newCheckSchemaVersionValidityResponse :: Int -> CheckSchemaVersionValidityResponse

-- | <i>See:</i> <a>newDeleteTable</a> smart constructor.
data DeleteTable
DeleteTable' :: Maybe Text -> Text -> Text -> DeleteTable

-- | Create a value of <a>DeleteTable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DeleteTable'</a>, <a>deleteTable_catalogId</a> - The
--   ID of the Data Catalog where the table resides. If none is provided,
--   the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:DeleteTable'</a>, <a>deleteTable_databaseName</a>
--   - The name of the catalog database in which the table resides. For
--   Hive compatibility, this name is entirely lowercase.
--   
--   <a>$sel:name:DeleteTable'</a>, <a>deleteTable_name</a> - The name of
--   the table to be deleted. For Hive compatibility, this name is entirely
--   lowercase.
newDeleteTable :: Text -> Text -> DeleteTable

-- | <i>See:</i> <a>newDeleteTableResponse</a> smart constructor.
data DeleteTableResponse
DeleteTableResponse' :: Int -> DeleteTableResponse

-- | Create a value of <a>DeleteTableResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteTableResponse'</a>,
--   <a>deleteTableResponse_httpStatus</a> - The response's http status
--   code.
newDeleteTableResponse :: Int -> DeleteTableResponse

-- | <i>See:</i> <a>newUpdateTable</a> smart constructor.
data UpdateTable
UpdateTable' :: Maybe Bool -> Maybe Text -> Text -> TableInput -> UpdateTable

-- | Create a value of <a>UpdateTable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:skipArchive:UpdateTable'</a>, <a>updateTable_skipArchive</a> -
--   By default, <tt>UpdateTable</tt> always creates an archived version of
--   the table before updating it. However, if <tt>skipArchive</tt> is set
--   to true, <tt>UpdateTable</tt> does not create the archived version.
--   
--   <a>$sel:catalogId:UpdateTable'</a>, <a>updateTable_catalogId</a> - The
--   ID of the Data Catalog where the table resides. If none is provided,
--   the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:UpdateTable'</a>, <a>updateTable_databaseName</a>
--   - The name of the catalog database in which the table resides. For
--   Hive compatibility, this name is entirely lowercase.
--   
--   <a>$sel:tableInput:UpdateTable'</a>, <a>updateTable_tableInput</a> -
--   An updated <tt>TableInput</tt> object to define the metadata table in
--   the catalog.
newUpdateTable :: Text -> TableInput -> UpdateTable

-- | <i>See:</i> <a>newUpdateTableResponse</a> smart constructor.
data UpdateTableResponse
UpdateTableResponse' :: Int -> UpdateTableResponse

-- | Create a value of <a>UpdateTableResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateTableResponse'</a>,
--   <a>updateTableResponse_httpStatus</a> - The response's http status
--   code.
newUpdateTableResponse :: Int -> UpdateTableResponse

-- | <i>See:</i> <a>newGetWorkflowRuns</a> smart constructor.
data GetWorkflowRuns
GetWorkflowRuns' :: Maybe Bool -> Maybe Text -> Maybe Natural -> Text -> GetWorkflowRuns

-- | Create a value of <a>GetWorkflowRuns</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeGraph:GetWorkflowRuns'</a>,
--   <a>getWorkflowRuns_includeGraph</a> - Specifies whether to include the
--   workflow graph in response or not.
--   
--   <a>$sel:nextToken:GetWorkflowRuns'</a>,
--   <a>getWorkflowRuns_nextToken</a> - The maximum size of the response.
--   
--   <a>$sel:maxResults:GetWorkflowRuns'</a>,
--   <a>getWorkflowRuns_maxResults</a> - The maximum number of workflow
--   runs to be included in the response.
--   
--   <a>$sel:name:GetWorkflowRuns'</a>, <a>getWorkflowRuns_name</a> - Name
--   of the workflow whose metadata of runs should be returned.
newGetWorkflowRuns :: Text -> GetWorkflowRuns

-- | <i>See:</i> <a>newGetWorkflowRunsResponse</a> smart constructor.
data GetWorkflowRunsResponse
GetWorkflowRunsResponse' :: Maybe (NonEmpty WorkflowRun) -> Maybe Text -> Int -> GetWorkflowRunsResponse

-- | Create a value of <a>GetWorkflowRunsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runs:GetWorkflowRunsResponse'</a>,
--   <a>getWorkflowRunsResponse_runs</a> - A list of workflow run metadata
--   objects.
--   
--   <a>$sel:nextToken:GetWorkflowRuns'</a>,
--   <a>getWorkflowRunsResponse_nextToken</a> - A continuation token, if
--   not all requested workflow runs have been returned.
--   
--   <a>$sel:httpStatus:GetWorkflowRunsResponse'</a>,
--   <a>getWorkflowRunsResponse_httpStatus</a> - The response's http status
--   code.
newGetWorkflowRunsResponse :: Int -> GetWorkflowRunsResponse

-- | <i>See:</i> <a>newCreateWorkflow</a> smart constructor.
data CreateWorkflow
CreateWorkflow' :: Maybe Int -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> CreateWorkflow

-- | Create a value of <a>CreateWorkflow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxConcurrentRuns:CreateWorkflow'</a>,
--   <a>createWorkflow_maxConcurrentRuns</a> - You can use this parameter
--   to prevent unwanted multiple updates to data, to control costs, or in
--   some cases, to prevent exceeding the maximum number of concurrent runs
--   of any of the component jobs. If you leave this parameter blank, there
--   is no limit to the number of concurrent workflow runs.
--   
--   <a>$sel:defaultRunProperties:CreateWorkflow'</a>,
--   <a>createWorkflow_defaultRunProperties</a> - A collection of
--   properties to be used as part of each execution of the workflow.
--   
--   <a>$sel:description:CreateWorkflow'</a>,
--   <a>createWorkflow_description</a> - A description of the workflow.
--   
--   <a>$sel:tags:CreateWorkflow'</a>, <a>createWorkflow_tags</a> - The
--   tags to be used with this workflow.
--   
--   <a>$sel:name:CreateWorkflow'</a>, <a>createWorkflow_name</a> - The
--   name to be assigned to the workflow. It should be unique within your
--   account.
newCreateWorkflow :: Text -> CreateWorkflow

-- | <i>See:</i> <a>newCreateWorkflowResponse</a> smart constructor.
data CreateWorkflowResponse
CreateWorkflowResponse' :: Maybe Text -> Int -> CreateWorkflowResponse

-- | Create a value of <a>CreateWorkflowResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateWorkflow'</a>, <a>createWorkflowResponse_name</a> -
--   The name of the workflow which was provided as part of the request.
--   
--   <a>$sel:httpStatus:CreateWorkflowResponse'</a>,
--   <a>createWorkflowResponse_httpStatus</a> - The response's http status
--   code.
newCreateWorkflowResponse :: Int -> CreateWorkflowResponse

-- | <i>See:</i> <a>newUpdateColumnStatisticsForTable</a> smart
--   constructor.
data UpdateColumnStatisticsForTable
UpdateColumnStatisticsForTable' :: Maybe Text -> Text -> Text -> [ColumnStatistics] -> UpdateColumnStatisticsForTable

-- | Create a value of <a>UpdateColumnStatisticsForTable</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:UpdateColumnStatisticsForTable'</a>,
--   <a>updateColumnStatisticsForTable_catalogId</a> - The ID of the Data
--   Catalog where the partitions in question reside. If none is supplied,
--   the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:UpdateColumnStatisticsForTable'</a>,
--   <a>updateColumnStatisticsForTable_databaseName</a> - The name of the
--   catalog database where the partitions reside.
--   
--   <a>$sel:tableName:UpdateColumnStatisticsForTable'</a>,
--   <a>updateColumnStatisticsForTable_tableName</a> - The name of the
--   partitions' table.
--   
--   <a>$sel:columnStatisticsList:UpdateColumnStatisticsForTable'</a>,
--   <a>updateColumnStatisticsForTable_columnStatisticsList</a> - A list of
--   the column statistics.
newUpdateColumnStatisticsForTable :: Text -> Text -> UpdateColumnStatisticsForTable

-- | <i>See:</i> <a>newUpdateColumnStatisticsForTableResponse</a> smart
--   constructor.
data UpdateColumnStatisticsForTableResponse
UpdateColumnStatisticsForTableResponse' :: Maybe [ColumnStatisticsError] -> Int -> UpdateColumnStatisticsForTableResponse

-- | Create a value of <a>UpdateColumnStatisticsForTableResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:UpdateColumnStatisticsForTableResponse'</a>,
--   <a>updateColumnStatisticsForTableResponse_errors</a> - List of
--   ColumnStatisticsErrors.
--   
--   <a>$sel:httpStatus:UpdateColumnStatisticsForTableResponse'</a>,
--   <a>updateColumnStatisticsForTableResponse_httpStatus</a> - The
--   response's http status code.
newUpdateColumnStatisticsForTableResponse :: Int -> UpdateColumnStatisticsForTableResponse

-- | <i>See:</i> <a>newDeleteColumnStatisticsForTable</a> smart
--   constructor.
data DeleteColumnStatisticsForTable
DeleteColumnStatisticsForTable' :: Maybe Text -> Text -> Text -> Text -> DeleteColumnStatisticsForTable

-- | Create a value of <a>DeleteColumnStatisticsForTable</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DeleteColumnStatisticsForTable'</a>,
--   <a>deleteColumnStatisticsForTable_catalogId</a> - The ID of the Data
--   Catalog where the partitions in question reside. If none is supplied,
--   the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:DeleteColumnStatisticsForTable'</a>,
--   <a>deleteColumnStatisticsForTable_databaseName</a> - The name of the
--   catalog database where the partitions reside.
--   
--   <a>$sel:tableName:DeleteColumnStatisticsForTable'</a>,
--   <a>deleteColumnStatisticsForTable_tableName</a> - The name of the
--   partitions' table.
--   
--   <a>$sel:columnName:DeleteColumnStatisticsForTable'</a>,
--   <a>deleteColumnStatisticsForTable_columnName</a> - The name of the
--   column.
newDeleteColumnStatisticsForTable :: Text -> Text -> Text -> DeleteColumnStatisticsForTable

-- | <i>See:</i> <a>newDeleteColumnStatisticsForTableResponse</a> smart
--   constructor.
data DeleteColumnStatisticsForTableResponse
DeleteColumnStatisticsForTableResponse' :: Int -> DeleteColumnStatisticsForTableResponse

-- | Create a value of <a>DeleteColumnStatisticsForTableResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteColumnStatisticsForTableResponse'</a>,
--   <a>deleteColumnStatisticsForTableResponse_httpStatus</a> - The
--   response's http status code.
newDeleteColumnStatisticsForTableResponse :: Int -> DeleteColumnStatisticsForTableResponse

-- | <i>See:</i> <a>newDeleteConnection</a> smart constructor.
data DeleteConnection
DeleteConnection' :: Maybe Text -> Text -> DeleteConnection

-- | Create a value of <a>DeleteConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DeleteConnection'</a>,
--   <a>deleteConnection_catalogId</a> - The ID of the Data Catalog in
--   which the connection resides. If none is provided, the Amazon Web
--   Services account ID is used by default.
--   
--   <a>$sel:connectionName:DeleteConnection'</a>,
--   <a>deleteConnection_connectionName</a> - The name of the connection to
--   delete.
newDeleteConnection :: Text -> DeleteConnection

-- | <i>See:</i> <a>newDeleteConnectionResponse</a> smart constructor.
data DeleteConnectionResponse
DeleteConnectionResponse' :: Int -> DeleteConnectionResponse

-- | Create a value of <a>DeleteConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteConnectionResponse'</a>,
--   <a>deleteConnectionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteConnectionResponse :: Int -> DeleteConnectionResponse

-- | <i>See:</i> <a>newUpdateConnection</a> smart constructor.
data UpdateConnection
UpdateConnection' :: Maybe Text -> Text -> ConnectionInput -> UpdateConnection

-- | Create a value of <a>UpdateConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:UpdateConnection'</a>,
--   <a>updateConnection_catalogId</a> - The ID of the Data Catalog in
--   which the connection resides. If none is provided, the Amazon Web
--   Services account ID is used by default.
--   
--   <a>$sel:name:UpdateConnection'</a>, <a>updateConnection_name</a> - The
--   name of the connection definition to update.
--   
--   <a>$sel:connectionInput:UpdateConnection'</a>,
--   <a>updateConnection_connectionInput</a> - A <tt>ConnectionInput</tt>
--   object that redefines the connection in question.
newUpdateConnection :: Text -> ConnectionInput -> UpdateConnection

-- | <i>See:</i> <a>newUpdateConnectionResponse</a> smart constructor.
data UpdateConnectionResponse
UpdateConnectionResponse' :: Int -> UpdateConnectionResponse

-- | Create a value of <a>UpdateConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateConnectionResponse'</a>,
--   <a>updateConnectionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateConnectionResponse :: Int -> UpdateConnectionResponse

-- | <i>See:</i> <a>newGetUserDefinedFunctions</a> smart constructor.
data GetUserDefinedFunctions
GetUserDefinedFunctions' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> GetUserDefinedFunctions

-- | Create a value of <a>GetUserDefinedFunctions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetUserDefinedFunctions'</a>,
--   <a>getUserDefinedFunctions_catalogId</a> - The ID of the Data Catalog
--   where the functions to be retrieved are located. If none is provided,
--   the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:nextToken:GetUserDefinedFunctions'</a>,
--   <a>getUserDefinedFunctions_nextToken</a> - A continuation token, if
--   this is a continuation call.
--   
--   <a>$sel:databaseName:GetUserDefinedFunctions'</a>,
--   <a>getUserDefinedFunctions_databaseName</a> - The name of the catalog
--   database where the functions are located. If none is provided,
--   functions from all the databases across the catalog will be returned.
--   
--   <a>$sel:maxResults:GetUserDefinedFunctions'</a>,
--   <a>getUserDefinedFunctions_maxResults</a> - The maximum number of
--   functions to return in one response.
--   
--   <a>$sel:pattern':GetUserDefinedFunctions'</a>,
--   <a>getUserDefinedFunctions_pattern</a> - An optional function-name
--   pattern string that filters the function definitions returned.
newGetUserDefinedFunctions :: Text -> GetUserDefinedFunctions

-- | <i>See:</i> <a>newGetUserDefinedFunctionsResponse</a> smart
--   constructor.
data GetUserDefinedFunctionsResponse
GetUserDefinedFunctionsResponse' :: Maybe Text -> Maybe [UserDefinedFunction] -> Int -> GetUserDefinedFunctionsResponse

-- | Create a value of <a>GetUserDefinedFunctionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetUserDefinedFunctions'</a>,
--   <a>getUserDefinedFunctionsResponse_nextToken</a> - A continuation
--   token, if the list of functions returned does not include the last
--   requested function.
--   
--   <a>$sel:userDefinedFunctions:GetUserDefinedFunctionsResponse'</a>,
--   <a>getUserDefinedFunctionsResponse_userDefinedFunctions</a> - A list
--   of requested function definitions.
--   
--   <a>$sel:httpStatus:GetUserDefinedFunctionsResponse'</a>,
--   <a>getUserDefinedFunctionsResponse_httpStatus</a> - The response's
--   http status code.
newGetUserDefinedFunctionsResponse :: Int -> GetUserDefinedFunctionsResponse

-- | <i>See:</i> <a>newGetTags</a> smart constructor.
data GetTags
GetTags' :: Text -> GetTags

-- | Create a value of <a>GetTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:GetTags'</a>, <a>getTags_resourceArn</a> - The
--   Amazon Resource Name (ARN) of the resource for which to retrieve tags.
newGetTags :: Text -> GetTags

-- | <i>See:</i> <a>newGetTagsResponse</a> smart constructor.
data GetTagsResponse
GetTagsResponse' :: Maybe (HashMap Text Text) -> Int -> GetTagsResponse

-- | Create a value of <a>GetTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:GetTagsResponse'</a>, <a>getTagsResponse_tags</a> - The
--   requested tags.
--   
--   <a>$sel:httpStatus:GetTagsResponse'</a>,
--   <a>getTagsResponse_httpStatus</a> - The response's http status code.
newGetTagsResponse :: Int -> GetTagsResponse

-- | <i>See:</i> <a>newGetDataCatalogEncryptionSettings</a> smart
--   constructor.
data GetDataCatalogEncryptionSettings
GetDataCatalogEncryptionSettings' :: Maybe Text -> GetDataCatalogEncryptionSettings

-- | Create a value of <a>GetDataCatalogEncryptionSettings</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetDataCatalogEncryptionSettings'</a>,
--   <a>getDataCatalogEncryptionSettings_catalogId</a> - The ID of the Data
--   Catalog to retrieve the security configuration for. If none is
--   provided, the Amazon Web Services account ID is used by default.
newGetDataCatalogEncryptionSettings :: GetDataCatalogEncryptionSettings

-- | <i>See:</i> <a>newGetDataCatalogEncryptionSettingsResponse</a> smart
--   constructor.
data GetDataCatalogEncryptionSettingsResponse
GetDataCatalogEncryptionSettingsResponse' :: Maybe DataCatalogEncryptionSettings -> Int -> GetDataCatalogEncryptionSettingsResponse

-- | Create a value of <a>GetDataCatalogEncryptionSettingsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:dataCatalogEncryptionSettings:GetDataCatalogEncryptionSettingsResponse'</a>,
--   <a>getDataCatalogEncryptionSettingsResponse_dataCatalogEncryptionSettings</a>
--   - The requested security configuration.
--   
--   <a>$sel:httpStatus:GetDataCatalogEncryptionSettingsResponse'</a>,
--   <a>getDataCatalogEncryptionSettingsResponse_httpStatus</a> - The
--   response's http status code.
newGetDataCatalogEncryptionSettingsResponse :: Int -> GetDataCatalogEncryptionSettingsResponse

-- | <i>See:</i> <a>newBatchCreatePartition</a> smart constructor.
data BatchCreatePartition
BatchCreatePartition' :: Maybe Text -> Text -> Text -> [PartitionInput] -> BatchCreatePartition

-- | Create a value of <a>BatchCreatePartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:BatchCreatePartition'</a>,
--   <a>batchCreatePartition_catalogId</a> - The ID of the catalog in which
--   the partition is to be created. Currently, this should be the Amazon
--   Web Services account ID.
--   
--   <a>$sel:databaseName:BatchCreatePartition'</a>,
--   <a>batchCreatePartition_databaseName</a> - The name of the metadata
--   database in which the partition is to be created.
--   
--   <a>$sel:tableName:BatchCreatePartition'</a>,
--   <a>batchCreatePartition_tableName</a> - The name of the metadata table
--   in which the partition is to be created.
--   
--   <a>$sel:partitionInputList:BatchCreatePartition'</a>,
--   <a>batchCreatePartition_partitionInputList</a> - A list of
--   <tt>PartitionInput</tt> structures that define the partitions to be
--   created.
newBatchCreatePartition :: Text -> Text -> BatchCreatePartition

-- | <i>See:</i> <a>newBatchCreatePartitionResponse</a> smart constructor.
data BatchCreatePartitionResponse
BatchCreatePartitionResponse' :: Maybe [PartitionError] -> Int -> BatchCreatePartitionResponse

-- | Create a value of <a>BatchCreatePartitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchCreatePartitionResponse'</a>,
--   <a>batchCreatePartitionResponse_errors</a> - The errors encountered
--   when trying to create the requested partitions.
--   
--   <a>$sel:httpStatus:BatchCreatePartitionResponse'</a>,
--   <a>batchCreatePartitionResponse_httpStatus</a> - The response's http
--   status code.
newBatchCreatePartitionResponse :: Int -> BatchCreatePartitionResponse

-- | <i>See:</i> <a>newGetMapping</a> smart constructor.
data GetMapping
GetMapping' :: Maybe [CatalogEntry] -> Maybe Location -> CatalogEntry -> GetMapping

-- | Create a value of <a>GetMapping</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sinks:GetMapping'</a>, <a>getMapping_sinks</a> - A list of
--   target tables.
--   
--   <a>$sel:location:GetMapping'</a>, <a>getMapping_location</a> -
--   Parameters for the mapping.
--   
--   <a>$sel:source:GetMapping'</a>, <a>getMapping_source</a> - Specifies
--   the source table.
newGetMapping :: CatalogEntry -> GetMapping

-- | <i>See:</i> <a>newGetMappingResponse</a> smart constructor.
data GetMappingResponse
GetMappingResponse' :: Int -> [MappingEntry] -> GetMappingResponse

-- | Create a value of <a>GetMappingResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetMappingResponse'</a>,
--   <a>getMappingResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:mapping:GetMappingResponse'</a>,
--   <a>getMappingResponse_mapping</a> - A list of mappings to the
--   specified targets.
newGetMappingResponse :: Int -> GetMappingResponse

-- | <i>See:</i> <a>newDeleteWorkflow</a> smart constructor.
data DeleteWorkflow
DeleteWorkflow' :: Text -> DeleteWorkflow

-- | Create a value of <a>DeleteWorkflow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteWorkflow'</a>, <a>deleteWorkflow_name</a> - Name of
--   the workflow to be deleted.
newDeleteWorkflow :: Text -> DeleteWorkflow

-- | <i>See:</i> <a>newDeleteWorkflowResponse</a> smart constructor.
data DeleteWorkflowResponse
DeleteWorkflowResponse' :: Maybe Text -> Int -> DeleteWorkflowResponse

-- | Create a value of <a>DeleteWorkflowResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteWorkflow'</a>, <a>deleteWorkflowResponse_name</a> -
--   Name of the workflow specified in input.
--   
--   <a>$sel:httpStatus:DeleteWorkflowResponse'</a>,
--   <a>deleteWorkflowResponse_httpStatus</a> - The response's http status
--   code.
newDeleteWorkflowResponse :: Int -> DeleteWorkflowResponse

-- | <i>See:</i> <a>newUpdateWorkflow</a> smart constructor.
data UpdateWorkflow
UpdateWorkflow' :: Maybe Int -> Maybe (HashMap Text Text) -> Maybe Text -> Text -> UpdateWorkflow

-- | Create a value of <a>UpdateWorkflow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxConcurrentRuns:UpdateWorkflow'</a>,
--   <a>updateWorkflow_maxConcurrentRuns</a> - You can use this parameter
--   to prevent unwanted multiple updates to data, to control costs, or in
--   some cases, to prevent exceeding the maximum number of concurrent runs
--   of any of the component jobs. If you leave this parameter blank, there
--   is no limit to the number of concurrent workflow runs.
--   
--   <a>$sel:defaultRunProperties:UpdateWorkflow'</a>,
--   <a>updateWorkflow_defaultRunProperties</a> - A collection of
--   properties to be used as part of each execution of the workflow.
--   
--   <a>$sel:description:UpdateWorkflow'</a>,
--   <a>updateWorkflow_description</a> - The description of the workflow.
--   
--   <a>$sel:name:UpdateWorkflow'</a>, <a>updateWorkflow_name</a> - Name of
--   the workflow to be updated.
newUpdateWorkflow :: Text -> UpdateWorkflow

-- | <i>See:</i> <a>newUpdateWorkflowResponse</a> smart constructor.
data UpdateWorkflowResponse
UpdateWorkflowResponse' :: Maybe Text -> Int -> UpdateWorkflowResponse

-- | Create a value of <a>UpdateWorkflowResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateWorkflow'</a>, <a>updateWorkflowResponse_name</a> -
--   The name of the workflow which was specified in input.
--   
--   <a>$sel:httpStatus:UpdateWorkflowResponse'</a>,
--   <a>updateWorkflowResponse_httpStatus</a> - The response's http status
--   code.
newUpdateWorkflowResponse :: Int -> UpdateWorkflowResponse

-- | <i>See:</i> <a>newGetTableVersion</a> smart constructor.
data GetTableVersion
GetTableVersion' :: Maybe Text -> Maybe Text -> Text -> Text -> GetTableVersion

-- | Create a value of <a>GetTableVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:GetTableVersion'</a>,
--   <a>getTableVersion_versionId</a> - The ID value of the table version
--   to be retrieved. A <tt>VersionID</tt> is a string representation of an
--   integer. Each version is incremented by 1.
--   
--   <a>$sel:catalogId:GetTableVersion'</a>,
--   <a>getTableVersion_catalogId</a> - The ID of the Data Catalog where
--   the tables reside. If none is provided, the Amazon Web Services
--   account ID is used by default.
--   
--   <a>$sel:databaseName:GetTableVersion'</a>,
--   <a>getTableVersion_databaseName</a> - The database in the catalog in
--   which the table resides. For Hive compatibility, this name is entirely
--   lowercase.
--   
--   <a>$sel:tableName:GetTableVersion'</a>,
--   <a>getTableVersion_tableName</a> - The name of the table. For Hive
--   compatibility, this name is entirely lowercase.
newGetTableVersion :: Text -> Text -> GetTableVersion

-- | <i>See:</i> <a>newGetTableVersionResponse</a> smart constructor.
data GetTableVersionResponse
GetTableVersionResponse' :: Maybe TableVersion -> Int -> GetTableVersionResponse

-- | Create a value of <a>GetTableVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tableVersion:GetTableVersionResponse'</a>,
--   <a>getTableVersionResponse_tableVersion</a> - The requested table
--   version.
--   
--   <a>$sel:httpStatus:GetTableVersionResponse'</a>,
--   <a>getTableVersionResponse_httpStatus</a> - The response's http status
--   code.
newGetTableVersionResponse :: Int -> GetTableVersionResponse

-- | <i>See:</i> <a>newCreateSecurityConfiguration</a> smart constructor.
data CreateSecurityConfiguration
CreateSecurityConfiguration' :: Text -> EncryptionConfiguration -> CreateSecurityConfiguration

-- | Create a value of <a>CreateSecurityConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateSecurityConfiguration'</a>,
--   <a>createSecurityConfiguration_name</a> - The name for the new
--   security configuration.
--   
--   <a>$sel:encryptionConfiguration:CreateSecurityConfiguration'</a>,
--   <a>createSecurityConfiguration_encryptionConfiguration</a> - The
--   encryption configuration for the new security configuration.
newCreateSecurityConfiguration :: Text -> EncryptionConfiguration -> CreateSecurityConfiguration

-- | <i>See:</i> <a>newCreateSecurityConfigurationResponse</a> smart
--   constructor.
data CreateSecurityConfigurationResponse
CreateSecurityConfigurationResponse' :: Maybe Text -> Maybe POSIX -> Int -> CreateSecurityConfigurationResponse

-- | Create a value of <a>CreateSecurityConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateSecurityConfiguration'</a>,
--   <a>createSecurityConfigurationResponse_name</a> - The name assigned to
--   the new security configuration.
--   
--   <a>$sel:createdTimestamp:CreateSecurityConfigurationResponse'</a>,
--   <a>createSecurityConfigurationResponse_createdTimestamp</a> - The time
--   at which the new security configuration was created.
--   
--   <a>$sel:httpStatus:CreateSecurityConfigurationResponse'</a>,
--   <a>createSecurityConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newCreateSecurityConfigurationResponse :: Int -> CreateSecurityConfigurationResponse

-- | <i>See:</i> <a>newStartWorkflowRun</a> smart constructor.
data StartWorkflowRun
StartWorkflowRun' :: Text -> StartWorkflowRun

-- | Create a value of <a>StartWorkflowRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StartWorkflowRun'</a>, <a>startWorkflowRun_name</a> - The
--   name of the workflow to start.
newStartWorkflowRun :: Text -> StartWorkflowRun

-- | <i>See:</i> <a>newStartWorkflowRunResponse</a> smart constructor.
data StartWorkflowRunResponse
StartWorkflowRunResponse' :: Maybe Text -> Int -> StartWorkflowRunResponse

-- | Create a value of <a>StartWorkflowRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runId:StartWorkflowRunResponse'</a>,
--   <a>startWorkflowRunResponse_runId</a> - An Id for the new run.
--   
--   <a>$sel:httpStatus:StartWorkflowRunResponse'</a>,
--   <a>startWorkflowRunResponse_httpStatus</a> - The response's http
--   status code.
newStartWorkflowRunResponse :: Int -> StartWorkflowRunResponse

-- | <i>See:</i> <a>newGetJobs</a> smart constructor.
data GetJobs
GetJobs' :: Maybe Text -> Maybe Natural -> GetJobs

-- | Create a value of <a>GetJobs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetJobs'</a>, <a>getJobs_nextToken</a> - A
--   continuation token, if this is a continuation call.
--   
--   <a>$sel:maxResults:GetJobs'</a>, <a>getJobs_maxResults</a> - The
--   maximum size of the response.
newGetJobs :: GetJobs

-- | <i>See:</i> <a>newGetJobsResponse</a> smart constructor.
data GetJobsResponse
GetJobsResponse' :: Maybe Text -> Maybe [Job] -> Int -> GetJobsResponse

-- | Create a value of <a>GetJobsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetJobs'</a>, <a>getJobsResponse_nextToken</a> - A
--   continuation token, if not all job definitions have yet been returned.
--   
--   <a>$sel:jobs:GetJobsResponse'</a>, <a>getJobsResponse_jobs</a> - A
--   list of job definitions.
--   
--   <a>$sel:httpStatus:GetJobsResponse'</a>,
--   <a>getJobsResponse_httpStatus</a> - The response's http status code.
newGetJobsResponse :: Int -> GetJobsResponse

-- | <i>See:</i> <a>newBatchGetWorkflows</a> smart constructor.
data BatchGetWorkflows
BatchGetWorkflows' :: Maybe Bool -> NonEmpty Text -> BatchGetWorkflows

-- | Create a value of <a>BatchGetWorkflows</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeGraph:BatchGetWorkflows'</a>,
--   <a>batchGetWorkflows_includeGraph</a> - Specifies whether to include a
--   graph when returning the workflow resource metadata.
--   
--   <a>$sel:names:BatchGetWorkflows'</a>, <a>batchGetWorkflows_names</a> -
--   A list of workflow names, which may be the names returned from the
--   <tt>ListWorkflows</tt> operation.
newBatchGetWorkflows :: NonEmpty Text -> BatchGetWorkflows

-- | <i>See:</i> <a>newBatchGetWorkflowsResponse</a> smart constructor.
data BatchGetWorkflowsResponse
BatchGetWorkflowsResponse' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty Workflow) -> Int -> BatchGetWorkflowsResponse

-- | Create a value of <a>BatchGetWorkflowsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:missingWorkflows:BatchGetWorkflowsResponse'</a>,
--   <a>batchGetWorkflowsResponse_missingWorkflows</a> - A list of names of
--   workflows not found.
--   
--   <a>$sel:workflows:BatchGetWorkflowsResponse'</a>,
--   <a>batchGetWorkflowsResponse_workflows</a> - A list of workflow
--   resource metadata.
--   
--   <a>$sel:httpStatus:BatchGetWorkflowsResponse'</a>,
--   <a>batchGetWorkflowsResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetWorkflowsResponse :: Int -> BatchGetWorkflowsResponse

-- | <i>See:</i> <a>newGetClassifiers</a> smart constructor.
data GetClassifiers
GetClassifiers' :: Maybe Text -> Maybe Natural -> GetClassifiers

-- | Create a value of <a>GetClassifiers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetClassifiers'</a>, <a>getClassifiers_nextToken</a>
--   - An optional continuation token.
--   
--   <a>$sel:maxResults:GetClassifiers'</a>,
--   <a>getClassifiers_maxResults</a> - The size of the list to return
--   (optional).
newGetClassifiers :: GetClassifiers

-- | <i>See:</i> <a>newGetClassifiersResponse</a> smart constructor.
data GetClassifiersResponse
GetClassifiersResponse' :: Maybe Text -> Maybe [Classifier] -> Int -> GetClassifiersResponse

-- | Create a value of <a>GetClassifiersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetClassifiers'</a>,
--   <a>getClassifiersResponse_nextToken</a> - A continuation token.
--   
--   <a>$sel:classifiers:GetClassifiersResponse'</a>,
--   <a>getClassifiersResponse_classifiers</a> - The requested list of
--   classifier objects.
--   
--   <a>$sel:httpStatus:GetClassifiersResponse'</a>,
--   <a>getClassifiersResponse_httpStatus</a> - The response's http status
--   code.
newGetClassifiersResponse :: Int -> GetClassifiersResponse

-- | <i>See:</i> <a>newGetResourcePolicies</a> smart constructor.
data GetResourcePolicies
GetResourcePolicies' :: Maybe Text -> Maybe Natural -> GetResourcePolicies

-- | Create a value of <a>GetResourcePolicies</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetResourcePolicies'</a>,
--   <a>getResourcePolicies_nextToken</a> - A continuation token, if this
--   is a continuation request.
--   
--   <a>$sel:maxResults:GetResourcePolicies'</a>,
--   <a>getResourcePolicies_maxResults</a> - The maximum size of a list to
--   return.
newGetResourcePolicies :: GetResourcePolicies

-- | <i>See:</i> <a>newGetResourcePoliciesResponse</a> smart constructor.
data GetResourcePoliciesResponse
GetResourcePoliciesResponse' :: Maybe [GluePolicy] -> Maybe Text -> Int -> GetResourcePoliciesResponse

-- | Create a value of <a>GetResourcePoliciesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:getResourcePoliciesResponseList:GetResourcePoliciesResponse'</a>,
--   <a>getResourcePoliciesResponse_getResourcePoliciesResponseList</a> - A
--   list of the individual resource policies and the account-level
--   resource policy.
--   
--   <a>$sel:nextToken:GetResourcePolicies'</a>,
--   <a>getResourcePoliciesResponse_nextToken</a> - A continuation token,
--   if the returned list does not contain the last resource policy
--   available.
--   
--   <a>$sel:httpStatus:GetResourcePoliciesResponse'</a>,
--   <a>getResourcePoliciesResponse_httpStatus</a> - The response's http
--   status code.
newGetResourcePoliciesResponse :: Int -> GetResourcePoliciesResponse

-- | <i>See:</i> <a>newCreateConnection</a> smart constructor.
data CreateConnection
CreateConnection' :: Maybe Text -> Maybe (HashMap Text Text) -> ConnectionInput -> CreateConnection

-- | Create a value of <a>CreateConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:CreateConnection'</a>,
--   <a>createConnection_catalogId</a> - The ID of the Data Catalog in
--   which to create the connection. If none is provided, the Amazon Web
--   Services account ID is used by default.
--   
--   <a>$sel:tags:CreateConnection'</a>, <a>createConnection_tags</a> - The
--   tags you assign to the connection.
--   
--   <a>$sel:connectionInput:CreateConnection'</a>,
--   <a>createConnection_connectionInput</a> - A <tt>ConnectionInput</tt>
--   object defining the connection to create.
newCreateConnection :: ConnectionInput -> CreateConnection

-- | <i>See:</i> <a>newCreateConnectionResponse</a> smart constructor.
data CreateConnectionResponse
CreateConnectionResponse' :: Int -> CreateConnectionResponse

-- | Create a value of <a>CreateConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateConnectionResponse'</a>,
--   <a>createConnectionResponse_httpStatus</a> - The response's http
--   status code.
newCreateConnectionResponse :: Int -> CreateConnectionResponse

-- | <i>See:</i> <a>newListSchemaVersions</a> smart constructor.
data ListSchemaVersions
ListSchemaVersions' :: Maybe Text -> Maybe Natural -> SchemaId -> ListSchemaVersions

-- | Create a value of <a>ListSchemaVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSchemaVersions'</a>,
--   <a>listSchemaVersions_nextToken</a> - A continuation token, if this is
--   a continuation call.
--   
--   <a>$sel:maxResults:ListSchemaVersions'</a>,
--   <a>listSchemaVersions_maxResults</a> - Maximum number of results
--   required per page. If the value is not supplied, this will be
--   defaulted to 25 per page.
--   
--   <a>$sel:schemaId:ListSchemaVersions'</a>,
--   <a>listSchemaVersions_schemaId</a> - This is a wrapper structure to
--   contain schema identity fields. The structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   Either <tt>SchemaArn</tt> or <tt>SchemaName</tt> and
--   <tt>RegistryName</tt> has to be provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. Either
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> and <tt>RegistryName</tt>
--   has to be provided.</li>
--   </ul>
newListSchemaVersions :: SchemaId -> ListSchemaVersions

-- | <i>See:</i> <a>newListSchemaVersionsResponse</a> smart constructor.
data ListSchemaVersionsResponse
ListSchemaVersionsResponse' :: Maybe [SchemaVersionListItem] -> Maybe Text -> Int -> ListSchemaVersionsResponse

-- | Create a value of <a>ListSchemaVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemas:ListSchemaVersionsResponse'</a>,
--   <a>listSchemaVersionsResponse_schemas</a> - An array of
--   <tt>SchemaVersionList</tt> objects containing details of each schema
--   version.
--   
--   <a>$sel:nextToken:ListSchemaVersions'</a>,
--   <a>listSchemaVersionsResponse_nextToken</a> - A continuation token for
--   paginating the returned list of tokens, returned if the current
--   segment of the list is not the last.
--   
--   <a>$sel:httpStatus:ListSchemaVersionsResponse'</a>,
--   <a>listSchemaVersionsResponse_httpStatus</a> - The response's http
--   status code.
newListSchemaVersionsResponse :: Int -> ListSchemaVersionsResponse

-- | <i>See:</i> <a>newGetWorkflowRunProperties</a> smart constructor.
data GetWorkflowRunProperties
GetWorkflowRunProperties' :: Text -> Text -> GetWorkflowRunProperties

-- | Create a value of <a>GetWorkflowRunProperties</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetWorkflowRunProperties'</a>,
--   <a>getWorkflowRunProperties_name</a> - Name of the workflow which was
--   run.
--   
--   <a>$sel:runId:GetWorkflowRunProperties'</a>,
--   <a>getWorkflowRunProperties_runId</a> - The ID of the workflow run
--   whose run properties should be returned.
newGetWorkflowRunProperties :: Text -> Text -> GetWorkflowRunProperties

-- | <i>See:</i> <a>newGetWorkflowRunPropertiesResponse</a> smart
--   constructor.
data GetWorkflowRunPropertiesResponse
GetWorkflowRunPropertiesResponse' :: Maybe (HashMap Text Text) -> Int -> GetWorkflowRunPropertiesResponse

-- | Create a value of <a>GetWorkflowRunPropertiesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runProperties:GetWorkflowRunPropertiesResponse'</a>,
--   <a>getWorkflowRunPropertiesResponse_runProperties</a> - The workflow
--   run properties which were set during the specified run.
--   
--   <a>$sel:httpStatus:GetWorkflowRunPropertiesResponse'</a>,
--   <a>getWorkflowRunPropertiesResponse_httpStatus</a> - The response's
--   http status code.
newGetWorkflowRunPropertiesResponse :: Int -> GetWorkflowRunPropertiesResponse

-- | <i>See:</i> <a>newBatchGetDevEndpoints</a> smart constructor.
data BatchGetDevEndpoints
BatchGetDevEndpoints' :: NonEmpty Text -> BatchGetDevEndpoints

-- | Create a value of <a>BatchGetDevEndpoints</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:devEndpointNames:BatchGetDevEndpoints'</a>,
--   <a>batchGetDevEndpoints_devEndpointNames</a> - The list of
--   <tt>DevEndpoint</tt> names, which might be the names returned from the
--   <tt>ListDevEndpoint</tt> operation.
newBatchGetDevEndpoints :: NonEmpty Text -> BatchGetDevEndpoints

-- | <i>See:</i> <a>newBatchGetDevEndpointsResponse</a> smart constructor.
data BatchGetDevEndpointsResponse
BatchGetDevEndpointsResponse' :: Maybe (NonEmpty Text) -> Maybe [DevEndpoint] -> Int -> BatchGetDevEndpointsResponse

-- | Create a value of <a>BatchGetDevEndpointsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:devEndpointsNotFound:BatchGetDevEndpointsResponse'</a>,
--   <a>batchGetDevEndpointsResponse_devEndpointsNotFound</a> - A list of
--   <tt>DevEndpoints</tt> not found.
--   
--   <a>$sel:devEndpoints:BatchGetDevEndpointsResponse'</a>,
--   <a>batchGetDevEndpointsResponse_devEndpoints</a> - A list of
--   <tt>DevEndpoint</tt> definitions.
--   
--   <a>$sel:httpStatus:BatchGetDevEndpointsResponse'</a>,
--   <a>batchGetDevEndpointsResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetDevEndpointsResponse :: Int -> BatchGetDevEndpointsResponse

-- | <i>See:</i> <a>newDeletePartitionIndex</a> smart constructor.
data DeletePartitionIndex
DeletePartitionIndex' :: Maybe Text -> Text -> Text -> Text -> DeletePartitionIndex

-- | Create a value of <a>DeletePartitionIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DeletePartitionIndex'</a>,
--   <a>deletePartitionIndex_catalogId</a> - The catalog ID where the table
--   resides.
--   
--   <a>$sel:databaseName:DeletePartitionIndex'</a>,
--   <a>deletePartitionIndex_databaseName</a> - Specifies the name of a
--   database from which you want to delete a partition index.
--   
--   <a>$sel:tableName:DeletePartitionIndex'</a>,
--   <a>deletePartitionIndex_tableName</a> - Specifies the name of a table
--   from which you want to delete a partition index.
--   
--   <a>$sel:indexName:DeletePartitionIndex'</a>,
--   <a>deletePartitionIndex_indexName</a> - The name of the partition
--   index to be deleted.
newDeletePartitionIndex :: Text -> Text -> Text -> DeletePartitionIndex

-- | <i>See:</i> <a>newDeletePartitionIndexResponse</a> smart constructor.
data DeletePartitionIndexResponse
DeletePartitionIndexResponse' :: Int -> DeletePartitionIndexResponse

-- | Create a value of <a>DeletePartitionIndexResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeletePartitionIndexResponse'</a>,
--   <a>deletePartitionIndexResponse_httpStatus</a> - The response's http
--   status code.
newDeletePartitionIndexResponse :: Int -> DeletePartitionIndexResponse

-- | <i>See:</i> <a>newDeleteTableVersion</a> smart constructor.
data DeleteTableVersion
DeleteTableVersion' :: Maybe Text -> Text -> Text -> Text -> DeleteTableVersion

-- | Create a value of <a>DeleteTableVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DeleteTableVersion'</a>,
--   <a>deleteTableVersion_catalogId</a> - The ID of the Data Catalog where
--   the tables reside. If none is provided, the Amazon Web Services
--   account ID is used by default.
--   
--   <a>$sel:databaseName:DeleteTableVersion'</a>,
--   <a>deleteTableVersion_databaseName</a> - The database in the catalog
--   in which the table resides. For Hive compatibility, this name is
--   entirely lowercase.
--   
--   <a>$sel:tableName:DeleteTableVersion'</a>,
--   <a>deleteTableVersion_tableName</a> - The name of the table. For Hive
--   compatibility, this name is entirely lowercase.
--   
--   <a>$sel:versionId:DeleteTableVersion'</a>,
--   <a>deleteTableVersion_versionId</a> - The ID of the table version to
--   be deleted. A <tt>VersionID</tt> is a string representation of an
--   integer. Each version is incremented by 1.
newDeleteTableVersion :: Text -> Text -> Text -> DeleteTableVersion

-- | <i>See:</i> <a>newDeleteTableVersionResponse</a> smart constructor.
data DeleteTableVersionResponse
DeleteTableVersionResponse' :: Int -> DeleteTableVersionResponse

-- | Create a value of <a>DeleteTableVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteTableVersionResponse'</a>,
--   <a>deleteTableVersionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteTableVersionResponse :: Int -> DeleteTableVersionResponse

-- | <i>See:</i> <a>newDeleteDevEndpoint</a> smart constructor.
data DeleteDevEndpoint
DeleteDevEndpoint' :: Text -> DeleteDevEndpoint

-- | Create a value of <a>DeleteDevEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpointName:DeleteDevEndpoint'</a>,
--   <a>deleteDevEndpoint_endpointName</a> - The name of the
--   <tt>DevEndpoint</tt>.
newDeleteDevEndpoint :: Text -> DeleteDevEndpoint

-- | <i>See:</i> <a>newDeleteDevEndpointResponse</a> smart constructor.
data DeleteDevEndpointResponse
DeleteDevEndpointResponse' :: Int -> DeleteDevEndpointResponse

-- | Create a value of <a>DeleteDevEndpointResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDevEndpointResponse'</a>,
--   <a>deleteDevEndpointResponse_httpStatus</a> - The response's http
--   status code.
newDeleteDevEndpointResponse :: Int -> DeleteDevEndpointResponse

-- | <i>See:</i> <a>newUpdateDevEndpoint</a> smart constructor.
data UpdateDevEndpoint
UpdateDevEndpoint' :: Maybe [Text] -> Maybe DevEndpointCustomLibraries -> Maybe Text -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Maybe (HashMap Text Text) -> Text -> UpdateDevEndpoint

-- | Create a value of <a>UpdateDevEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addPublicKeys:UpdateDevEndpoint'</a>,
--   <a>updateDevEndpoint_addPublicKeys</a> - The list of public keys for
--   the <tt>DevEndpoint</tt> to use.
--   
--   <a>$sel:customLibraries:UpdateDevEndpoint'</a>,
--   <a>updateDevEndpoint_customLibraries</a> - Custom Python or Java
--   libraries to be loaded in the <tt>DevEndpoint</tt>.
--   
--   <a>$sel:publicKey:UpdateDevEndpoint'</a>,
--   <a>updateDevEndpoint_publicKey</a> - The public key for the
--   <tt>DevEndpoint</tt> to use.
--   
--   <a>$sel:deleteArguments:UpdateDevEndpoint'</a>,
--   <a>updateDevEndpoint_deleteArguments</a> - The list of argument keys
--   to be deleted from the map of arguments used to configure the
--   <tt>DevEndpoint</tt>.
--   
--   <a>$sel:deletePublicKeys:UpdateDevEndpoint'</a>,
--   <a>updateDevEndpoint_deletePublicKeys</a> - The list of public keys to
--   be deleted from the <tt>DevEndpoint</tt>.
--   
--   <a>$sel:updateEtlLibraries:UpdateDevEndpoint'</a>,
--   <a>updateDevEndpoint_updateEtlLibraries</a> - <tt>True</tt> if the
--   list of custom libraries to be loaded in the development endpoint
--   needs to be updated, or <tt>False</tt> if otherwise.
--   
--   <a>$sel:addArguments:UpdateDevEndpoint'</a>,
--   <a>updateDevEndpoint_addArguments</a> - The map of arguments to add
--   the map of arguments used to configure the <tt>DevEndpoint</tt>.
--   
--   Valid arguments are:
--   
--   <ul>
--   <li><pre>"--enable-glue-datacatalog": ""</pre></li>
--   </ul>
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
--   
--   <a>$sel:endpointName:UpdateDevEndpoint'</a>,
--   <a>updateDevEndpoint_endpointName</a> - The name of the
--   <tt>DevEndpoint</tt> to be updated.
newUpdateDevEndpoint :: Text -> UpdateDevEndpoint

-- | <i>See:</i> <a>newUpdateDevEndpointResponse</a> smart constructor.
data UpdateDevEndpointResponse
UpdateDevEndpointResponse' :: Int -> UpdateDevEndpointResponse

-- | Create a value of <a>UpdateDevEndpointResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateDevEndpointResponse'</a>,
--   <a>updateDevEndpointResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDevEndpointResponse :: Int -> UpdateDevEndpointResponse

-- | <i>See:</i> <a>newGetWorkflow</a> smart constructor.
data GetWorkflow
GetWorkflow' :: Maybe Bool -> Text -> GetWorkflow

-- | Create a value of <a>GetWorkflow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeGraph:GetWorkflow'</a>, <a>getWorkflow_includeGraph</a>
--   - Specifies whether to include a graph when returning the workflow
--   resource metadata.
--   
--   <a>$sel:name:GetWorkflow'</a>, <a>getWorkflow_name</a> - The name of
--   the workflow to retrieve.
newGetWorkflow :: Text -> GetWorkflow

-- | <i>See:</i> <a>newGetWorkflowResponse</a> smart constructor.
data GetWorkflowResponse
GetWorkflowResponse' :: Maybe Workflow -> Int -> GetWorkflowResponse

-- | Create a value of <a>GetWorkflowResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workflow:GetWorkflowResponse'</a>,
--   <a>getWorkflowResponse_workflow</a> - The resource metadata for the
--   workflow.
--   
--   <a>$sel:httpStatus:GetWorkflowResponse'</a>,
--   <a>getWorkflowResponse_httpStatus</a> - The response's http status
--   code.
newGetWorkflowResponse :: Int -> GetWorkflowResponse

-- | <i>See:</i> <a>newBatchGetCrawlers</a> smart constructor.
data BatchGetCrawlers
BatchGetCrawlers' :: [Text] -> BatchGetCrawlers

-- | Create a value of <a>BatchGetCrawlers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawlerNames:BatchGetCrawlers'</a>,
--   <a>batchGetCrawlers_crawlerNames</a> - A list of crawler names, which
--   might be the names returned from the <tt>ListCrawlers</tt> operation.
newBatchGetCrawlers :: BatchGetCrawlers

-- | <i>See:</i> <a>newBatchGetCrawlersResponse</a> smart constructor.
data BatchGetCrawlersResponse
BatchGetCrawlersResponse' :: Maybe [Text] -> Maybe [Crawler] -> Int -> BatchGetCrawlersResponse

-- | Create a value of <a>BatchGetCrawlersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawlersNotFound:BatchGetCrawlersResponse'</a>,
--   <a>batchGetCrawlersResponse_crawlersNotFound</a> - A list of names of
--   crawlers that were not found.
--   
--   <a>$sel:crawlers:BatchGetCrawlersResponse'</a>,
--   <a>batchGetCrawlersResponse_crawlers</a> - A list of crawler
--   definitions.
--   
--   <a>$sel:httpStatus:BatchGetCrawlersResponse'</a>,
--   <a>batchGetCrawlersResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetCrawlersResponse :: Int -> BatchGetCrawlersResponse

-- | <i>See:</i> <a>newGetJobBookmark</a> smart constructor.
data GetJobBookmark
GetJobBookmark' :: Maybe Text -> Text -> GetJobBookmark

-- | Create a value of <a>GetJobBookmark</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runId:GetJobBookmark'</a>, <a>getJobBookmark_runId</a> - The
--   unique run identifier associated with this job run.
--   
--   <a>$sel:jobName:GetJobBookmark'</a>, <a>getJobBookmark_jobName</a> -
--   The name of the job in question.
newGetJobBookmark :: Text -> GetJobBookmark

-- | <i>See:</i> <a>newGetJobBookmarkResponse</a> smart constructor.
data GetJobBookmarkResponse
GetJobBookmarkResponse' :: Maybe JobBookmarkEntry -> Int -> GetJobBookmarkResponse

-- | Create a value of <a>GetJobBookmarkResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobBookmarkEntry:GetJobBookmarkResponse'</a>,
--   <a>getJobBookmarkResponse_jobBookmarkEntry</a> - A structure that
--   defines a point that a job can resume processing.
--   
--   <a>$sel:httpStatus:GetJobBookmarkResponse'</a>,
--   <a>getJobBookmarkResponse_httpStatus</a> - The response's http status
--   code.
newGetJobBookmarkResponse :: Int -> GetJobBookmarkResponse

-- | <i>See:</i> <a>newDeleteCrawler</a> smart constructor.
data DeleteCrawler
DeleteCrawler' :: Text -> DeleteCrawler

-- | Create a value of <a>DeleteCrawler</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteCrawler'</a>, <a>deleteCrawler_name</a> - The name
--   of the crawler to remove.
newDeleteCrawler :: Text -> DeleteCrawler

-- | <i>See:</i> <a>newDeleteCrawlerResponse</a> smart constructor.
data DeleteCrawlerResponse
DeleteCrawlerResponse' :: Int -> DeleteCrawlerResponse

-- | Create a value of <a>DeleteCrawlerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteCrawlerResponse'</a>,
--   <a>deleteCrawlerResponse_httpStatus</a> - The response's http status
--   code.
newDeleteCrawlerResponse :: Int -> DeleteCrawlerResponse

-- | <i>See:</i> <a>newUpdateCrawler</a> smart constructor.
data UpdateCrawler
UpdateCrawler' :: Maybe SchemaChangePolicy -> Maybe Text -> Maybe RecrawlPolicy -> Maybe [Text] -> Maybe Text -> Maybe CrawlerTargets -> Maybe Text -> Maybe Text -> Maybe LineageConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> UpdateCrawler

-- | Create a value of <a>UpdateCrawler</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaChangePolicy:UpdateCrawler'</a>,
--   <a>updateCrawler_schemaChangePolicy</a> - The policy for the crawler's
--   update and deletion behavior.
--   
--   <a>$sel:schedule:UpdateCrawler'</a>, <a>updateCrawler_schedule</a> - A
--   <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
--   
--   <a>$sel:recrawlPolicy:UpdateCrawler'</a>,
--   <a>updateCrawler_recrawlPolicy</a> - A policy that specifies whether
--   to crawl the entire dataset again, or to crawl only folders that were
--   added since the last crawler run.
--   
--   <a>$sel:classifiers:UpdateCrawler'</a>,
--   <a>updateCrawler_classifiers</a> - A list of custom classifiers that
--   the user has registered. By default, all built-in classifiers are
--   included in a crawl, but these custom classifiers always override the
--   default classifiers for a given classification.
--   
--   <a>$sel:role':UpdateCrawler'</a>, <a>updateCrawler_role</a> - The IAM
--   role or Amazon Resource Name (ARN) of an IAM role that is used by the
--   new crawler to access customer resources.
--   
--   <a>$sel:targets:UpdateCrawler'</a>, <a>updateCrawler_targets</a> - A
--   list of targets to crawl.
--   
--   <a>$sel:databaseName:UpdateCrawler'</a>,
--   <a>updateCrawler_databaseName</a> - The Glue database where results
--   are stored, such as:
--   <tt>arn:aws:daylight:us-east-1::database/sometable/*</tt>.
--   
--   <a>$sel:crawlerSecurityConfiguration:UpdateCrawler'</a>,
--   <a>updateCrawler_crawlerSecurityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used by this crawler.
--   
--   <a>$sel:lineageConfiguration:UpdateCrawler'</a>,
--   <a>updateCrawler_lineageConfiguration</a> - Specifies data lineage
--   configuration settings for the crawler.
--   
--   <a>$sel:configuration:UpdateCrawler'</a>,
--   <a>updateCrawler_configuration</a> - Crawler configuration
--   information. This versioned JSON string allows users to specify
--   aspects of a crawler's behavior. For more information, see
--   <a>Configuring a Crawler</a>.
--   
--   <a>$sel:tablePrefix:UpdateCrawler'</a>,
--   <a>updateCrawler_tablePrefix</a> - The table prefix used for catalog
--   tables that are created.
--   
--   <a>$sel:description:UpdateCrawler'</a>,
--   <a>updateCrawler_description</a> - A description of the new crawler.
--   
--   <a>$sel:name:UpdateCrawler'</a>, <a>updateCrawler_name</a> - Name of
--   the new crawler.
newUpdateCrawler :: Text -> UpdateCrawler

-- | <i>See:</i> <a>newUpdateCrawlerResponse</a> smart constructor.
data UpdateCrawlerResponse
UpdateCrawlerResponse' :: Int -> UpdateCrawlerResponse

-- | Create a value of <a>UpdateCrawlerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateCrawlerResponse'</a>,
--   <a>updateCrawlerResponse_httpStatus</a> - The response's http status
--   code.
newUpdateCrawlerResponse :: Int -> UpdateCrawlerResponse

-- | <i>See:</i> <a>newStartExportLabelsTaskRun</a> smart constructor.
data StartExportLabelsTaskRun
StartExportLabelsTaskRun' :: Text -> Text -> StartExportLabelsTaskRun

-- | Create a value of <a>StartExportLabelsTaskRun</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transformId:StartExportLabelsTaskRun'</a>,
--   <a>startExportLabelsTaskRun_transformId</a> - The unique identifier of
--   the machine learning transform.
--   
--   <a>$sel:outputS3Path:StartExportLabelsTaskRun'</a>,
--   <a>startExportLabelsTaskRun_outputS3Path</a> - The Amazon S3 path
--   where you export the labels.
newStartExportLabelsTaskRun :: Text -> Text -> StartExportLabelsTaskRun

-- | <i>See:</i> <a>newStartExportLabelsTaskRunResponse</a> smart
--   constructor.
data StartExportLabelsTaskRunResponse
StartExportLabelsTaskRunResponse' :: Maybe Text -> Int -> StartExportLabelsTaskRunResponse

-- | Create a value of <a>StartExportLabelsTaskRunResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskRunId:StartExportLabelsTaskRunResponse'</a>,
--   <a>startExportLabelsTaskRunResponse_taskRunId</a> - The unique
--   identifier for the task run.
--   
--   <a>$sel:httpStatus:StartExportLabelsTaskRunResponse'</a>,
--   <a>startExportLabelsTaskRunResponse_httpStatus</a> - The response's
--   http status code.
newStartExportLabelsTaskRunResponse :: Int -> StartExportLabelsTaskRunResponse

-- | <i>See:</i> <a>newGetSecurityConfiguration</a> smart constructor.
data GetSecurityConfiguration
GetSecurityConfiguration' :: Text -> GetSecurityConfiguration

-- | Create a value of <a>GetSecurityConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetSecurityConfiguration'</a>,
--   <a>getSecurityConfiguration_name</a> - The name of the security
--   configuration to retrieve.
newGetSecurityConfiguration :: Text -> GetSecurityConfiguration

-- | <i>See:</i> <a>newGetSecurityConfigurationResponse</a> smart
--   constructor.
data GetSecurityConfigurationResponse
GetSecurityConfigurationResponse' :: Maybe SecurityConfiguration -> Int -> GetSecurityConfigurationResponse

-- | Create a value of <a>GetSecurityConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityConfiguration:GetSecurityConfigurationResponse'</a>,
--   <a>getSecurityConfigurationResponse_securityConfiguration</a> - The
--   requested security configuration.
--   
--   <a>$sel:httpStatus:GetSecurityConfigurationResponse'</a>,
--   <a>getSecurityConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newGetSecurityConfigurationResponse :: Int -> GetSecurityConfigurationResponse

-- | <i>See:</i> <a>newCreatePartitionIndex</a> smart constructor.
data CreatePartitionIndex
CreatePartitionIndex' :: Maybe Text -> Text -> Text -> PartitionIndex -> CreatePartitionIndex

-- | Create a value of <a>CreatePartitionIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:CreatePartitionIndex'</a>,
--   <a>createPartitionIndex_catalogId</a> - The catalog ID where the table
--   resides.
--   
--   <a>$sel:databaseName:CreatePartitionIndex'</a>,
--   <a>createPartitionIndex_databaseName</a> - Specifies the name of a
--   database in which you want to create a partition index.
--   
--   <a>$sel:tableName:CreatePartitionIndex'</a>,
--   <a>createPartitionIndex_tableName</a> - Specifies the name of a table
--   in which you want to create a partition index.
--   
--   <a>$sel:partitionIndex:CreatePartitionIndex'</a>,
--   <a>createPartitionIndex_partitionIndex</a> - Specifies a
--   <tt>PartitionIndex</tt> structure to create a partition index in an
--   existing table.
newCreatePartitionIndex :: Text -> Text -> PartitionIndex -> CreatePartitionIndex

-- | <i>See:</i> <a>newCreatePartitionIndexResponse</a> smart constructor.
data CreatePartitionIndexResponse
CreatePartitionIndexResponse' :: Int -> CreatePartitionIndexResponse

-- | Create a value of <a>CreatePartitionIndexResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreatePartitionIndexResponse'</a>,
--   <a>createPartitionIndexResponse_httpStatus</a> - The response's http
--   status code.
newCreatePartitionIndexResponse :: Int -> CreatePartitionIndexResponse

-- | <i>See:</i> <a>newGetBlueprintRun</a> smart constructor.
data GetBlueprintRun
GetBlueprintRun' :: Text -> Text -> GetBlueprintRun

-- | Create a value of <a>GetBlueprintRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blueprintName:GetBlueprintRun'</a>,
--   <a>getBlueprintRun_blueprintName</a> - The name of the blueprint.
--   
--   <a>$sel:runId:GetBlueprintRun'</a>, <a>getBlueprintRun_runId</a> - The
--   run ID for the blueprint run you want to retrieve.
newGetBlueprintRun :: Text -> Text -> GetBlueprintRun

-- | <i>See:</i> <a>newGetBlueprintRunResponse</a> smart constructor.
data GetBlueprintRunResponse
GetBlueprintRunResponse' :: Maybe BlueprintRun -> Int -> GetBlueprintRunResponse

-- | Create a value of <a>GetBlueprintRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blueprintRun:GetBlueprintRunResponse'</a>,
--   <a>getBlueprintRunResponse_blueprintRun</a> - Returns a
--   <tt>BlueprintRun</tt> object.
--   
--   <a>$sel:httpStatus:GetBlueprintRunResponse'</a>,
--   <a>getBlueprintRunResponse_httpStatus</a> - The response's http status
--   code.
newGetBlueprintRunResponse :: Int -> GetBlueprintRunResponse

-- | <i>See:</i> <a>newRemoveSchemaVersionMetadata</a> smart constructor.
data RemoveSchemaVersionMetadata
RemoveSchemaVersionMetadata' :: Maybe Text -> Maybe SchemaId -> Maybe SchemaVersionNumber -> MetadataKeyValuePair -> RemoveSchemaVersionMetadata

-- | Create a value of <a>RemoveSchemaVersionMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaVersionId:RemoveSchemaVersionMetadata'</a>,
--   <a>removeSchemaVersionMetadata_schemaVersionId</a> - The unique
--   version ID of the schema version.
--   
--   <a>$sel:schemaId:RemoveSchemaVersionMetadata'</a>,
--   <a>removeSchemaVersionMetadata_schemaId</a> - A wrapper structure that
--   may contain the schema name and Amazon Resource Name (ARN).
--   
--   <a>$sel:schemaVersionNumber:RemoveSchemaVersionMetadata'</a>,
--   <a>removeSchemaVersionMetadata_schemaVersionNumber</a> - The version
--   number of the schema.
--   
--   <a>$sel:metadataKeyValue:RemoveSchemaVersionMetadata'</a>,
--   <a>removeSchemaVersionMetadata_metadataKeyValue</a> - The value of the
--   metadata key.
newRemoveSchemaVersionMetadata :: MetadataKeyValuePair -> RemoveSchemaVersionMetadata

-- | <i>See:</i> <a>newRemoveSchemaVersionMetadataResponse</a> smart
--   constructor.
data RemoveSchemaVersionMetadataResponse
RemoveSchemaVersionMetadataResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Int -> RemoveSchemaVersionMetadataResponse

-- | Create a value of <a>RemoveSchemaVersionMetadataResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:RemoveSchemaVersionMetadataResponse'</a>,
--   <a>removeSchemaVersionMetadataResponse_registryName</a> - The name of
--   the registry.
--   
--   <a>$sel:schemaName:RemoveSchemaVersionMetadataResponse'</a>,
--   <a>removeSchemaVersionMetadataResponse_schemaName</a> - The name of
--   the schema.
--   
--   <a>$sel:schemaVersionId:RemoveSchemaVersionMetadata'</a>,
--   <a>removeSchemaVersionMetadataResponse_schemaVersionId</a> - The
--   version ID for the schema version.
--   
--   <a>$sel:versionNumber:RemoveSchemaVersionMetadataResponse'</a>,
--   <a>removeSchemaVersionMetadataResponse_versionNumber</a> - The version
--   number of the schema.
--   
--   <a>$sel:schemaArn:RemoveSchemaVersionMetadataResponse'</a>,
--   <a>removeSchemaVersionMetadataResponse_schemaArn</a> - The Amazon
--   Resource Name (ARN) of the schema.
--   
--   <a>$sel:metadataKey:RemoveSchemaVersionMetadataResponse'</a>,
--   <a>removeSchemaVersionMetadataResponse_metadataKey</a> - The metadata
--   key.
--   
--   <a>$sel:metadataValue:RemoveSchemaVersionMetadataResponse'</a>,
--   <a>removeSchemaVersionMetadataResponse_metadataValue</a> - The value
--   of the metadata key.
--   
--   <a>$sel:latestVersion:RemoveSchemaVersionMetadataResponse'</a>,
--   <a>removeSchemaVersionMetadataResponse_latestVersion</a> - The latest
--   version of the schema.
--   
--   <a>$sel:httpStatus:RemoveSchemaVersionMetadataResponse'</a>,
--   <a>removeSchemaVersionMetadataResponse_httpStatus</a> - The response's
--   http status code.
newRemoveSchemaVersionMetadataResponse :: Int -> RemoveSchemaVersionMetadataResponse

-- | <i>See:</i> <a>newListSchemas</a> smart constructor.
data ListSchemas
ListSchemas' :: Maybe RegistryId -> Maybe Text -> Maybe Natural -> ListSchemas

-- | Create a value of <a>ListSchemas</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryId:ListSchemas'</a>, <a>listSchemas_registryId</a> - A
--   wrapper structure that may contain the registry name and Amazon
--   Resource Name (ARN).
--   
--   <a>$sel:nextToken:ListSchemas'</a>, <a>listSchemas_nextToken</a> - A
--   continuation token, if this is a continuation call.
--   
--   <a>$sel:maxResults:ListSchemas'</a>, <a>listSchemas_maxResults</a> -
--   Maximum number of results required per page. If the value is not
--   supplied, this will be defaulted to 25 per page.
newListSchemas :: ListSchemas

-- | <i>See:</i> <a>newListSchemasResponse</a> smart constructor.
data ListSchemasResponse
ListSchemasResponse' :: Maybe [SchemaListItem] -> Maybe Text -> Int -> ListSchemasResponse

-- | Create a value of <a>ListSchemasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemas:ListSchemasResponse'</a>,
--   <a>listSchemasResponse_schemas</a> - An array of
--   <tt>SchemaListItem</tt> objects containing details of each schema.
--   
--   <a>$sel:nextToken:ListSchemas'</a>,
--   <a>listSchemasResponse_nextToken</a> - A continuation token for
--   paginating the returned list of tokens, returned if the current
--   segment of the list is not the last.
--   
--   <a>$sel:httpStatus:ListSchemasResponse'</a>,
--   <a>listSchemasResponse_httpStatus</a> - The response's http status
--   code.
newListSchemasResponse :: Int -> ListSchemasResponse

-- | <i>See:</i> <a>newGetConnection</a> smart constructor.
data GetConnection
GetConnection' :: Maybe Text -> Maybe Bool -> Text -> GetConnection

-- | Create a value of <a>GetConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetConnection'</a>, <a>getConnection_catalogId</a> -
--   The ID of the Data Catalog in which the connection resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:hidePassword:GetConnection'</a>,
--   <a>getConnection_hidePassword</a> - Allows you to retrieve the
--   connection metadata without returning the password. For instance, the
--   AWS Glue console uses this flag to retrieve the connection, and does
--   not display the password. Set this parameter when the caller might not
--   have permission to use the KMS key to decrypt the password, but it
--   does have permission to access the rest of the connection properties.
--   
--   <a>$sel:name:GetConnection'</a>, <a>getConnection_name</a> - The name
--   of the connection definition to retrieve.
newGetConnection :: Text -> GetConnection

-- | <i>See:</i> <a>newGetConnectionResponse</a> smart constructor.
data GetConnectionResponse
GetConnectionResponse' :: Maybe Connection -> Int -> GetConnectionResponse

-- | Create a value of <a>GetConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connection:GetConnectionResponse'</a>,
--   <a>getConnectionResponse_connection</a> - The requested connection
--   definition.
--   
--   <a>$sel:httpStatus:GetConnectionResponse'</a>,
--   <a>getConnectionResponse_httpStatus</a> - The response's http status
--   code.
newGetConnectionResponse :: Int -> GetConnectionResponse

-- | <i>See:</i> <a>newGetColumnStatisticsForTable</a> smart constructor.
data GetColumnStatisticsForTable
GetColumnStatisticsForTable' :: Maybe Text -> Text -> Text -> [Text] -> GetColumnStatisticsForTable

-- | Create a value of <a>GetColumnStatisticsForTable</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetColumnStatisticsForTable'</a>,
--   <a>getColumnStatisticsForTable_catalogId</a> - The ID of the Data
--   Catalog where the partitions in question reside. If none is supplied,
--   the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:GetColumnStatisticsForTable'</a>,
--   <a>getColumnStatisticsForTable_databaseName</a> - The name of the
--   catalog database where the partitions reside.
--   
--   <a>$sel:tableName:GetColumnStatisticsForTable'</a>,
--   <a>getColumnStatisticsForTable_tableName</a> - The name of the
--   partitions' table.
--   
--   <a>$sel:columnNames:GetColumnStatisticsForTable'</a>,
--   <a>getColumnStatisticsForTable_columnNames</a> - A list of the column
--   names.
newGetColumnStatisticsForTable :: Text -> Text -> GetColumnStatisticsForTable

-- | <i>See:</i> <a>newGetColumnStatisticsForTableResponse</a> smart
--   constructor.
data GetColumnStatisticsForTableResponse
GetColumnStatisticsForTableResponse' :: Maybe [ColumnError] -> Maybe [ColumnStatistics] -> Int -> GetColumnStatisticsForTableResponse

-- | Create a value of <a>GetColumnStatisticsForTableResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:GetColumnStatisticsForTableResponse'</a>,
--   <a>getColumnStatisticsForTableResponse_errors</a> - List of
--   ColumnStatistics that failed to be retrieved.
--   
--   <a>$sel:columnStatisticsList:GetColumnStatisticsForTableResponse'</a>,
--   <a>getColumnStatisticsForTableResponse_columnStatisticsList</a> - List
--   of ColumnStatistics that failed to be retrieved.
--   
--   <a>$sel:httpStatus:GetColumnStatisticsForTableResponse'</a>,
--   <a>getColumnStatisticsForTableResponse_httpStatus</a> - The response's
--   http status code.
newGetColumnStatisticsForTableResponse :: Int -> GetColumnStatisticsForTableResponse

-- | <i>See:</i> <a>newBatchGetPartition</a> smart constructor.
data BatchGetPartition
BatchGetPartition' :: Maybe Text -> Text -> Text -> [PartitionValueList] -> BatchGetPartition

-- | Create a value of <a>BatchGetPartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:BatchGetPartition'</a>,
--   <a>batchGetPartition_catalogId</a> - The ID of the Data Catalog where
--   the partitions in question reside. If none is supplied, the Amazon Web
--   Services account ID is used by default.
--   
--   <a>$sel:databaseName:BatchGetPartition'</a>,
--   <a>batchGetPartition_databaseName</a> - The name of the catalog
--   database where the partitions reside.
--   
--   <a>$sel:tableName:BatchGetPartition'</a>,
--   <a>batchGetPartition_tableName</a> - The name of the partitions'
--   table.
--   
--   <a>$sel:partitionsToGet:BatchGetPartition'</a>,
--   <a>batchGetPartition_partitionsToGet</a> - A list of partition values
--   identifying the partitions to retrieve.
newBatchGetPartition :: Text -> Text -> BatchGetPartition

-- | <i>See:</i> <a>newBatchGetPartitionResponse</a> smart constructor.
data BatchGetPartitionResponse
BatchGetPartitionResponse' :: Maybe [PartitionValueList] -> Maybe [Partition] -> Int -> BatchGetPartitionResponse

-- | Create a value of <a>BatchGetPartitionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedKeys:BatchGetPartitionResponse'</a>,
--   <a>batchGetPartitionResponse_unprocessedKeys</a> - A list of the
--   partition values in the request for which partitions were not
--   returned.
--   
--   <a>$sel:partitions:BatchGetPartitionResponse'</a>,
--   <a>batchGetPartitionResponse_partitions</a> - A list of the requested
--   partitions.
--   
--   <a>$sel:httpStatus:BatchGetPartitionResponse'</a>,
--   <a>batchGetPartitionResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetPartitionResponse :: Int -> BatchGetPartitionResponse

-- | <i>See:</i> <a>newStopTrigger</a> smart constructor.
data StopTrigger
StopTrigger' :: Text -> StopTrigger

-- | Create a value of <a>StopTrigger</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StopTrigger'</a>, <a>stopTrigger_name</a> - The name of
--   the trigger to stop.
newStopTrigger :: Text -> StopTrigger

-- | <i>See:</i> <a>newStopTriggerResponse</a> smart constructor.
data StopTriggerResponse
StopTriggerResponse' :: Maybe Text -> Int -> StopTriggerResponse

-- | Create a value of <a>StopTriggerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StopTrigger'</a>, <a>stopTriggerResponse_name</a> - The
--   name of the trigger that was stopped.
--   
--   <a>$sel:httpStatus:StopTriggerResponse'</a>,
--   <a>stopTriggerResponse_httpStatus</a> - The response's http status
--   code.
newStopTriggerResponse :: Int -> StopTriggerResponse

-- | <i>See:</i> <a>newUpdateCrawlerSchedule</a> smart constructor.
data UpdateCrawlerSchedule
UpdateCrawlerSchedule' :: Maybe Text -> Text -> UpdateCrawlerSchedule

-- | Create a value of <a>UpdateCrawlerSchedule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schedule:UpdateCrawlerSchedule'</a>,
--   <a>updateCrawlerSchedule_schedule</a> - The updated <tt>cron</tt>
--   expression used to specify the schedule (see <a>Time-Based Schedules
--   for Jobs and Crawlers</a>. For example, to run something every day at
--   12:15 UTC, you would specify: <tt>cron(15 12 * * ? *)</tt>.
--   
--   <a>$sel:crawlerName:UpdateCrawlerSchedule'</a>,
--   <a>updateCrawlerSchedule_crawlerName</a> - The name of the crawler
--   whose schedule to update.
newUpdateCrawlerSchedule :: Text -> UpdateCrawlerSchedule

-- | <i>See:</i> <a>newUpdateCrawlerScheduleResponse</a> smart constructor.
data UpdateCrawlerScheduleResponse
UpdateCrawlerScheduleResponse' :: Int -> UpdateCrawlerScheduleResponse

-- | Create a value of <a>UpdateCrawlerScheduleResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateCrawlerScheduleResponse'</a>,
--   <a>updateCrawlerScheduleResponse_httpStatus</a> - The response's http
--   status code.
newUpdateCrawlerScheduleResponse :: Int -> UpdateCrawlerScheduleResponse

-- | <i>See:</i> <a>newStartMLEvaluationTaskRun</a> smart constructor.
data StartMLEvaluationTaskRun
StartMLEvaluationTaskRun' :: Text -> StartMLEvaluationTaskRun

-- | Create a value of <a>StartMLEvaluationTaskRun</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transformId:StartMLEvaluationTaskRun'</a>,
--   <a>startMLEvaluationTaskRun_transformId</a> - The unique identifier of
--   the machine learning transform.
newStartMLEvaluationTaskRun :: Text -> StartMLEvaluationTaskRun

-- | <i>See:</i> <a>newStartMLEvaluationTaskRunResponse</a> smart
--   constructor.
data StartMLEvaluationTaskRunResponse
StartMLEvaluationTaskRunResponse' :: Maybe Text -> Int -> StartMLEvaluationTaskRunResponse

-- | Create a value of <a>StartMLEvaluationTaskRunResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskRunId:StartMLEvaluationTaskRunResponse'</a>,
--   <a>startMLEvaluationTaskRunResponse_taskRunId</a> - The unique
--   identifier associated with this run.
--   
--   <a>$sel:httpStatus:StartMLEvaluationTaskRunResponse'</a>,
--   <a>startMLEvaluationTaskRunResponse_httpStatus</a> - The response's
--   http status code.
newStartMLEvaluationTaskRunResponse :: Int -> StartMLEvaluationTaskRunResponse

-- | <i>See:</i> <a>newDeleteUserDefinedFunction</a> smart constructor.
data DeleteUserDefinedFunction
DeleteUserDefinedFunction' :: Maybe Text -> Text -> Text -> DeleteUserDefinedFunction

-- | Create a value of <a>DeleteUserDefinedFunction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DeleteUserDefinedFunction'</a>,
--   <a>deleteUserDefinedFunction_catalogId</a> - The ID of the Data
--   Catalog where the function to be deleted is located. If none is
--   supplied, the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:DeleteUserDefinedFunction'</a>,
--   <a>deleteUserDefinedFunction_databaseName</a> - The name of the
--   catalog database where the function is located.
--   
--   <a>$sel:functionName:DeleteUserDefinedFunction'</a>,
--   <a>deleteUserDefinedFunction_functionName</a> - The name of the
--   function definition to be deleted.
newDeleteUserDefinedFunction :: Text -> Text -> DeleteUserDefinedFunction

-- | <i>See:</i> <a>newDeleteUserDefinedFunctionResponse</a> smart
--   constructor.
data DeleteUserDefinedFunctionResponse
DeleteUserDefinedFunctionResponse' :: Int -> DeleteUserDefinedFunctionResponse

-- | Create a value of <a>DeleteUserDefinedFunctionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteUserDefinedFunctionResponse'</a>,
--   <a>deleteUserDefinedFunctionResponse_httpStatus</a> - The response's
--   http status code.
newDeleteUserDefinedFunctionResponse :: Int -> DeleteUserDefinedFunctionResponse

-- | <i>See:</i> <a>newUpdateUserDefinedFunction</a> smart constructor.
data UpdateUserDefinedFunction
UpdateUserDefinedFunction' :: Maybe Text -> Text -> Text -> UserDefinedFunctionInput -> UpdateUserDefinedFunction

-- | Create a value of <a>UpdateUserDefinedFunction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:UpdateUserDefinedFunction'</a>,
--   <a>updateUserDefinedFunction_catalogId</a> - The ID of the Data
--   Catalog where the function to be updated is located. If none is
--   provided, the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:UpdateUserDefinedFunction'</a>,
--   <a>updateUserDefinedFunction_databaseName</a> - The name of the
--   catalog database where the function to be updated is located.
--   
--   <a>$sel:functionName:UpdateUserDefinedFunction'</a>,
--   <a>updateUserDefinedFunction_functionName</a> - The name of the
--   function.
--   
--   <a>$sel:functionInput:UpdateUserDefinedFunction'</a>,
--   <a>updateUserDefinedFunction_functionInput</a> - A
--   <tt>FunctionInput</tt> object that redefines the function in the Data
--   Catalog.
newUpdateUserDefinedFunction :: Text -> Text -> UserDefinedFunctionInput -> UpdateUserDefinedFunction

-- | <i>See:</i> <a>newUpdateUserDefinedFunctionResponse</a> smart
--   constructor.
data UpdateUserDefinedFunctionResponse
UpdateUserDefinedFunctionResponse' :: Int -> UpdateUserDefinedFunctionResponse

-- | Create a value of <a>UpdateUserDefinedFunctionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateUserDefinedFunctionResponse'</a>,
--   <a>updateUserDefinedFunctionResponse_httpStatus</a> - The response's
--   http status code.
newUpdateUserDefinedFunctionResponse :: Int -> UpdateUserDefinedFunctionResponse

-- | <i>See:</i> <a>newGetRegistry</a> smart constructor.
data GetRegistry
GetRegistry' :: RegistryId -> GetRegistry

-- | Create a value of <a>GetRegistry</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryId:GetRegistry'</a>, <a>getRegistry_registryId</a> -
--   This is a wrapper structure that may contain the registry name and
--   Amazon Resource Name (ARN).
newGetRegistry :: RegistryId -> GetRegistry

-- | <i>See:</i> <a>newGetRegistryResponse</a> smart constructor.
data GetRegistryResponse
GetRegistryResponse' :: Maybe RegistryStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetRegistryResponse

-- | Create a value of <a>GetRegistryResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetRegistryResponse'</a>,
--   <a>getRegistryResponse_status</a> - The status of the registry.
--   
--   <a>$sel:registryName:GetRegistryResponse'</a>,
--   <a>getRegistryResponse_registryName</a> - The name of the registry.
--   
--   <a>$sel:createdTime:GetRegistryResponse'</a>,
--   <a>getRegistryResponse_createdTime</a> - The date and time the
--   registry was created.
--   
--   <a>$sel:registryArn:GetRegistryResponse'</a>,
--   <a>getRegistryResponse_registryArn</a> - The Amazon Resource Name
--   (ARN) of the registry.
--   
--   <a>$sel:updatedTime:GetRegistryResponse'</a>,
--   <a>getRegistryResponse_updatedTime</a> - The date and time the
--   registry was updated.
--   
--   <a>$sel:description:GetRegistryResponse'</a>,
--   <a>getRegistryResponse_description</a> - A description of the
--   registry.
--   
--   <a>$sel:httpStatus:GetRegistryResponse'</a>,
--   <a>getRegistryResponse_httpStatus</a> - The response's http status
--   code.
newGetRegistryResponse :: Int -> GetRegistryResponse

-- | <i>See:</i> <a>newBatchDeleteTable</a> smart constructor.
data BatchDeleteTable
BatchDeleteTable' :: Maybe Text -> Text -> [Text] -> BatchDeleteTable

-- | Create a value of <a>BatchDeleteTable</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:BatchDeleteTable'</a>,
--   <a>batchDeleteTable_catalogId</a> - The ID of the Data Catalog where
--   the table resides. If none is provided, the Amazon Web Services
--   account ID is used by default.
--   
--   <a>$sel:databaseName:BatchDeleteTable'</a>,
--   <a>batchDeleteTable_databaseName</a> - The name of the catalog
--   database in which the tables to delete reside. For Hive compatibility,
--   this name is entirely lowercase.
--   
--   <a>$sel:tablesToDelete:BatchDeleteTable'</a>,
--   <a>batchDeleteTable_tablesToDelete</a> - A list of the table to
--   delete.
newBatchDeleteTable :: Text -> BatchDeleteTable

-- | <i>See:</i> <a>newBatchDeleteTableResponse</a> smart constructor.
data BatchDeleteTableResponse
BatchDeleteTableResponse' :: Maybe [TableError] -> Int -> BatchDeleteTableResponse

-- | Create a value of <a>BatchDeleteTableResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchDeleteTableResponse'</a>,
--   <a>batchDeleteTableResponse_errors</a> - A list of errors encountered
--   in attempting to delete the specified tables.
--   
--   <a>$sel:httpStatus:BatchDeleteTableResponse'</a>,
--   <a>batchDeleteTableResponse_httpStatus</a> - The response's http
--   status code.
newBatchDeleteTableResponse :: Int -> BatchDeleteTableResponse

-- | <i>See:</i> <a>newCancelMLTaskRun</a> smart constructor.
data CancelMLTaskRun
CancelMLTaskRun' :: Text -> Text -> CancelMLTaskRun

-- | Create a value of <a>CancelMLTaskRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transformId:CancelMLTaskRun'</a>,
--   <a>cancelMLTaskRun_transformId</a> - The unique identifier of the
--   machine learning transform.
--   
--   <a>$sel:taskRunId:CancelMLTaskRun'</a>,
--   <a>cancelMLTaskRun_taskRunId</a> - A unique identifier for the task
--   run.
newCancelMLTaskRun :: Text -> Text -> CancelMLTaskRun

-- | <i>See:</i> <a>newCancelMLTaskRunResponse</a> smart constructor.
data CancelMLTaskRunResponse
CancelMLTaskRunResponse' :: Maybe TaskStatusType -> Maybe Text -> Maybe Text -> Int -> CancelMLTaskRunResponse

-- | Create a value of <a>CancelMLTaskRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CancelMLTaskRunResponse'</a>,
--   <a>cancelMLTaskRunResponse_status</a> - The status for this run.
--   
--   <a>$sel:transformId:CancelMLTaskRun'</a>,
--   <a>cancelMLTaskRunResponse_transformId</a> - The unique identifier of
--   the machine learning transform.
--   
--   <a>$sel:taskRunId:CancelMLTaskRun'</a>,
--   <a>cancelMLTaskRunResponse_taskRunId</a> - The unique identifier for
--   the task run.
--   
--   <a>$sel:httpStatus:CancelMLTaskRunResponse'</a>,
--   <a>cancelMLTaskRunResponse_httpStatus</a> - The response's http status
--   code.
newCancelMLTaskRunResponse :: Int -> CancelMLTaskRunResponse

-- | <i>See:</i> <a>newGetTables</a> smart constructor.
data GetTables
GetTables' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> GetTables

-- | Create a value of <a>GetTables</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetTables'</a>, <a>getTables_catalogId</a> - The ID
--   of the Data Catalog where the tables reside. If none is provided, the
--   Amazon Web Services account ID is used by default.
--   
--   <a>$sel:nextToken:GetTables'</a>, <a>getTables_nextToken</a> - A
--   continuation token, included if this is a continuation call.
--   
--   <a>$sel:expression:GetTables'</a>, <a>getTables_expression</a> - A
--   regular expression pattern. If present, only those tables whose names
--   match the pattern are returned.
--   
--   <a>$sel:maxResults:GetTables'</a>, <a>getTables_maxResults</a> - The
--   maximum number of tables to return in a single response.
--   
--   <a>$sel:databaseName:GetTables'</a>, <a>getTables_databaseName</a> -
--   The database in the catalog whose tables to list. For Hive
--   compatibility, this name is entirely lowercase.
newGetTables :: Text -> GetTables

-- | <i>See:</i> <a>newGetTablesResponse</a> smart constructor.
data GetTablesResponse
GetTablesResponse' :: Maybe [Table] -> Maybe Text -> Int -> GetTablesResponse

-- | Create a value of <a>GetTablesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tableList:GetTablesResponse'</a>,
--   <a>getTablesResponse_tableList</a> - A list of the requested
--   <tt>Table</tt> objects.
--   
--   <a>$sel:nextToken:GetTables'</a>, <a>getTablesResponse_nextToken</a> -
--   A continuation token, present if the current list segment is not the
--   last.
--   
--   <a>$sel:httpStatus:GetTablesResponse'</a>,
--   <a>getTablesResponse_httpStatus</a> - The response's http status code.
newGetTablesResponse :: Int -> GetTablesResponse

-- | <i>See:</i> <a>newResumeWorkflowRun</a> smart constructor.
data ResumeWorkflowRun
ResumeWorkflowRun' :: Text -> Text -> [Text] -> ResumeWorkflowRun

-- | Create a value of <a>ResumeWorkflowRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ResumeWorkflowRun'</a>, <a>resumeWorkflowRun_name</a> -
--   The name of the workflow to resume.
--   
--   <a>$sel:runId:ResumeWorkflowRun'</a>, <a>resumeWorkflowRun_runId</a> -
--   The ID of the workflow run to resume.
--   
--   <a>$sel:nodeIds:ResumeWorkflowRun'</a>,
--   <a>resumeWorkflowRun_nodeIds</a> - A list of the node IDs for the
--   nodes you want to restart. The nodes that are to be restarted must
--   have a run attempt in the original run.
newResumeWorkflowRun :: Text -> Text -> ResumeWorkflowRun

-- | <i>See:</i> <a>newResumeWorkflowRunResponse</a> smart constructor.
data ResumeWorkflowRunResponse
ResumeWorkflowRunResponse' :: Maybe [Text] -> Maybe Text -> Int -> ResumeWorkflowRunResponse

-- | Create a value of <a>ResumeWorkflowRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeIds:ResumeWorkflowRun'</a>,
--   <a>resumeWorkflowRunResponse_nodeIds</a> - A list of the node IDs for
--   the nodes that were actually restarted.
--   
--   <a>$sel:runId:ResumeWorkflowRun'</a>,
--   <a>resumeWorkflowRunResponse_runId</a> - The new ID assigned to the
--   resumed workflow run. Each resume of a workflow run will have a new
--   run ID.
--   
--   <a>$sel:httpStatus:ResumeWorkflowRunResponse'</a>,
--   <a>resumeWorkflowRunResponse_httpStatus</a> - The response's http
--   status code.
newResumeWorkflowRunResponse :: Int -> ResumeWorkflowRunResponse

-- | <i>See:</i> <a>newCreateClassifier</a> smart constructor.
data CreateClassifier
CreateClassifier' :: Maybe CreateGrokClassifierRequest -> Maybe CreateXMLClassifierRequest -> Maybe CreateCsvClassifierRequest -> Maybe CreateJsonClassifierRequest -> CreateClassifier

-- | Create a value of <a>CreateClassifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:grokClassifier:CreateClassifier'</a>,
--   <a>createClassifier_grokClassifier</a> - A <tt>GrokClassifier</tt>
--   object specifying the classifier to create.
--   
--   <a>$sel:xMLClassifier:CreateClassifier'</a>,
--   <a>createClassifier_xMLClassifier</a> - An <tt>XMLClassifier</tt>
--   object specifying the classifier to create.
--   
--   <a>$sel:csvClassifier:CreateClassifier'</a>,
--   <a>createClassifier_csvClassifier</a> - A <tt>CsvClassifier</tt>
--   object specifying the classifier to create.
--   
--   <a>$sel:jsonClassifier:CreateClassifier'</a>,
--   <a>createClassifier_jsonClassifier</a> - A <tt>JsonClassifier</tt>
--   object specifying the classifier to create.
newCreateClassifier :: CreateClassifier

-- | <i>See:</i> <a>newCreateClassifierResponse</a> smart constructor.
data CreateClassifierResponse
CreateClassifierResponse' :: Int -> CreateClassifierResponse

-- | Create a value of <a>CreateClassifierResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateClassifierResponse'</a>,
--   <a>createClassifierResponse_httpStatus</a> - The response's http
--   status code.
newCreateClassifierResponse :: Int -> CreateClassifierResponse

-- | <i>See:</i> <a>newBatchDeleteConnection</a> smart constructor.
data BatchDeleteConnection
BatchDeleteConnection' :: Maybe Text -> [Text] -> BatchDeleteConnection

-- | Create a value of <a>BatchDeleteConnection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:BatchDeleteConnection'</a>,
--   <a>batchDeleteConnection_catalogId</a> - The ID of the Data Catalog in
--   which the connections reside. If none is provided, the Amazon Web
--   Services account ID is used by default.
--   
--   <a>$sel:connectionNameList:BatchDeleteConnection'</a>,
--   <a>batchDeleteConnection_connectionNameList</a> - A list of names of
--   the connections to delete.
newBatchDeleteConnection :: BatchDeleteConnection

-- | <i>See:</i> <a>newBatchDeleteConnectionResponse</a> smart constructor.
data BatchDeleteConnectionResponse
BatchDeleteConnectionResponse' :: Maybe [Text] -> Maybe (HashMap Text ErrorDetail) -> Int -> BatchDeleteConnectionResponse

-- | Create a value of <a>BatchDeleteConnectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:succeeded:BatchDeleteConnectionResponse'</a>,
--   <a>batchDeleteConnectionResponse_succeeded</a> - A list of names of
--   the connection definitions that were successfully deleted.
--   
--   <a>$sel:errors:BatchDeleteConnectionResponse'</a>,
--   <a>batchDeleteConnectionResponse_errors</a> - A map of the names of
--   connections that were not successfully deleted to error details.
--   
--   <a>$sel:httpStatus:BatchDeleteConnectionResponse'</a>,
--   <a>batchDeleteConnectionResponse_httpStatus</a> - The response's http
--   status code.
newBatchDeleteConnectionResponse :: Int -> BatchDeleteConnectionResponse

-- | <i>See:</i> <a>newCreateJob</a> smart constructor.
data CreateJob
CreateJob' :: Maybe Int -> Maybe NotificationProperty -> Maybe ConnectionsList -> Maybe WorkerType -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Int -> Maybe ExecutionProperty -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> JobCommand -> CreateJob

-- | Create a value of <a>CreateJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfWorkers:CreateJob'</a>,
--   <a>createJob_numberOfWorkers</a> - The number of workers of a defined
--   <tt>workerType</tt> that are allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
--   
--   <a>$sel:notificationProperty:CreateJob'</a>,
--   <a>createJob_notificationProperty</a> - Specifies configuration
--   properties of a job notification.
--   
--   <a>$sel:connections:CreateJob'</a>, <a>createJob_connections</a> - The
--   connections used for this job.
--   
--   <a>$sel:workerType:CreateJob'</a>, <a>createJob_workerType</a> - The
--   type of predefined worker that is allocated when a job runs. Accepts a
--   value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   <a>$sel:securityConfiguration:CreateJob'</a>,
--   <a>createJob_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this job.
--   
--   <a>$sel:glueVersion:CreateJob'</a>, <a>createJob_glueVersion</a> -
--   Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
--   
--   <a>$sel:nonOverridableArguments:CreateJob'</a>,
--   <a>createJob_nonOverridableArguments</a> - Non-overridable arguments
--   for this job, specified as name-value pairs.
--   
--   <a>$sel:logUri:CreateJob'</a>, <a>createJob_logUri</a> - This field is
--   reserved for future use.
--   
--   <a>$sel:maxRetries:CreateJob'</a>, <a>createJob_maxRetries</a> - The
--   maximum number of times to retry this job if it fails.
--   
--   <a>$sel:executionProperty:CreateJob'</a>,
--   <a>createJob_executionProperty</a> - An <tt>ExecutionProperty</tt>
--   specifying the maximum number of concurrent runs allowed for this job.
--   
--   <a>$sel:allocatedCapacity:CreateJob'</a>,
--   <a>createJob_allocatedCapacity</a> - This parameter is deprecated. Use
--   <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) to allocate to this
--   Job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is
--   a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
--   
--   <a>$sel:maxCapacity:CreateJob'</a>, <a>createJob_maxCapacity</a> - For
--   Glue version 1.0 or earlier jobs, using the standard worker type, the
--   number of Glue data processing units (DPUs) that can be allocated when
--   this job runs. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
--   
--   <a>$sel:timeout:CreateJob'</a>, <a>createJob_timeout</a> - The job
--   timeout in minutes. This is the maximum time that a job run can
--   consume resources before it is terminated and enters <tt>TIMEOUT</tt>
--   status. The default is 2,880 minutes (48 hours).
--   
--   <a>$sel:defaultArguments:CreateJob'</a>,
--   <a>createJob_defaultArguments</a> - The default arguments for this
--   job.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
--   
--   <a>$sel:description:CreateJob'</a>, <a>createJob_description</a> -
--   Description of the job being defined.
--   
--   <a>$sel:tags:CreateJob'</a>, <a>createJob_tags</a> - The tags to use
--   with this job. You may use tags to limit access to the job. For more
--   information about tags in Glue, see <a>Amazon Web Services Tags in
--   Glue</a> in the developer guide.
--   
--   <a>$sel:name:CreateJob'</a>, <a>createJob_name</a> - The name you
--   assign to this job definition. It must be unique in your account.
--   
--   <a>$sel:role':CreateJob'</a>, <a>createJob_role</a> - The name or
--   Amazon Resource Name (ARN) of the IAM role associated with this job.
--   
--   <a>$sel:command:CreateJob'</a>, <a>createJob_command</a> - The
--   <tt>JobCommand</tt> that runs this job.
newCreateJob :: Text -> Text -> JobCommand -> CreateJob

-- | <i>See:</i> <a>newCreateJobResponse</a> smart constructor.
data CreateJobResponse
CreateJobResponse' :: Maybe Text -> Int -> CreateJobResponse

-- | Create a value of <a>CreateJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateJob'</a>, <a>createJobResponse_name</a> - The
--   unique name that was provided for this job definition.
--   
--   <a>$sel:httpStatus:CreateJobResponse'</a>,
--   <a>createJobResponse_httpStatus</a> - The response's http status code.
newCreateJobResponse :: Int -> CreateJobResponse

-- | <i>See:</i> <a>newGetJobRuns</a> smart constructor.
data GetJobRuns
GetJobRuns' :: Maybe Text -> Maybe Natural -> Text -> GetJobRuns

-- | Create a value of <a>GetJobRuns</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetJobRuns'</a>, <a>getJobRuns_nextToken</a> - A
--   continuation token, if this is a continuation call.
--   
--   <a>$sel:maxResults:GetJobRuns'</a>, <a>getJobRuns_maxResults</a> - The
--   maximum size of the response.
--   
--   <a>$sel:jobName:GetJobRuns'</a>, <a>getJobRuns_jobName</a> - The name
--   of the job definition for which to retrieve all job runs.
newGetJobRuns :: Text -> GetJobRuns

-- | <i>See:</i> <a>newGetJobRunsResponse</a> smart constructor.
data GetJobRunsResponse
GetJobRunsResponse' :: Maybe Text -> Maybe [JobRun] -> Int -> GetJobRunsResponse

-- | Create a value of <a>GetJobRunsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetJobRuns'</a>, <a>getJobRunsResponse_nextToken</a>
--   - A continuation token, if not all requested job runs have been
--   returned.
--   
--   <a>$sel:jobRuns:GetJobRunsResponse'</a>,
--   <a>getJobRunsResponse_jobRuns</a> - A list of job-run metadata
--   objects.
--   
--   <a>$sel:httpStatus:GetJobRunsResponse'</a>,
--   <a>getJobRunsResponse_httpStatus</a> - The response's http status
--   code.
newGetJobRunsResponse :: Int -> GetJobRunsResponse

-- | <i>See:</i> <a>newCreateUserDefinedFunction</a> smart constructor.
data CreateUserDefinedFunction
CreateUserDefinedFunction' :: Maybe Text -> Text -> UserDefinedFunctionInput -> CreateUserDefinedFunction

-- | Create a value of <a>CreateUserDefinedFunction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:CreateUserDefinedFunction'</a>,
--   <a>createUserDefinedFunction_catalogId</a> - The ID of the Data
--   Catalog in which to create the function. If none is provided, the
--   Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:CreateUserDefinedFunction'</a>,
--   <a>createUserDefinedFunction_databaseName</a> - The name of the
--   catalog database in which to create the function.
--   
--   <a>$sel:functionInput:CreateUserDefinedFunction'</a>,
--   <a>createUserDefinedFunction_functionInput</a> - A
--   <tt>FunctionInput</tt> object that defines the function to create in
--   the Data Catalog.
newCreateUserDefinedFunction :: Text -> UserDefinedFunctionInput -> CreateUserDefinedFunction

-- | <i>See:</i> <a>newCreateUserDefinedFunctionResponse</a> smart
--   constructor.
data CreateUserDefinedFunctionResponse
CreateUserDefinedFunctionResponse' :: Int -> CreateUserDefinedFunctionResponse

-- | Create a value of <a>CreateUserDefinedFunctionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateUserDefinedFunctionResponse'</a>,
--   <a>createUserDefinedFunctionResponse_httpStatus</a> - The response's
--   http status code.
newCreateUserDefinedFunctionResponse :: Int -> CreateUserDefinedFunctionResponse

-- | <i>See:</i> <a>newResetJobBookmark</a> smart constructor.
data ResetJobBookmark
ResetJobBookmark' :: Maybe Text -> Text -> ResetJobBookmark

-- | Create a value of <a>ResetJobBookmark</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runId:ResetJobBookmark'</a>, <a>resetJobBookmark_runId</a> -
--   The unique run identifier associated with this job run.
--   
--   <a>$sel:jobName:ResetJobBookmark'</a>, <a>resetJobBookmark_jobName</a>
--   - The name of the job in question.
newResetJobBookmark :: Text -> ResetJobBookmark

-- | <i>See:</i> <a>newResetJobBookmarkResponse</a> smart constructor.
data ResetJobBookmarkResponse
ResetJobBookmarkResponse' :: Maybe JobBookmarkEntry -> Int -> ResetJobBookmarkResponse

-- | Create a value of <a>ResetJobBookmarkResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobBookmarkEntry:ResetJobBookmarkResponse'</a>,
--   <a>resetJobBookmarkResponse_jobBookmarkEntry</a> - The reset bookmark
--   entry.
--   
--   <a>$sel:httpStatus:ResetJobBookmarkResponse'</a>,
--   <a>resetJobBookmarkResponse_httpStatus</a> - The response's http
--   status code.
newResetJobBookmarkResponse :: Int -> ResetJobBookmarkResponse

-- | <i>See:</i> <a>newListJobs</a> smart constructor.
data ListJobs
ListJobs' :: Maybe Text -> Maybe Natural -> Maybe (HashMap Text Text) -> ListJobs

-- | Create a value of <a>ListJobs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobs_nextToken</a> - A
--   continuation token, if this is a continuation request.
--   
--   <a>$sel:maxResults:ListJobs'</a>, <a>listJobs_maxResults</a> - The
--   maximum size of a list to return.
--   
--   <a>$sel:tags:ListJobs'</a>, <a>listJobs_tags</a> - Specifies to return
--   only these tagged resources.
newListJobs :: ListJobs

-- | <i>See:</i> <a>newListJobsResponse</a> smart constructor.
data ListJobsResponse
ListJobsResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListJobsResponse

-- | Create a value of <a>ListJobsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobsResponse_nextToken</a> - A
--   continuation token, if the returned list does not contain the last
--   metric available.
--   
--   <a>$sel:jobNames:ListJobsResponse'</a>,
--   <a>listJobsResponse_jobNames</a> - The names of all jobs in the
--   account, or the jobs with the specified tags.
--   
--   <a>$sel:httpStatus:ListJobsResponse'</a>,
--   <a>listJobsResponse_httpStatus</a> - The response's http status code.
newListJobsResponse :: Int -> ListJobsResponse

-- | <i>See:</i> <a>newStartBlueprintRun</a> smart constructor.
data StartBlueprintRun
StartBlueprintRun' :: Maybe Text -> Text -> Text -> StartBlueprintRun

-- | Create a value of <a>StartBlueprintRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:StartBlueprintRun'</a>,
--   <a>startBlueprintRun_parameters</a> - Specifies the parameters as a
--   <tt>BlueprintParameters</tt> object.
--   
--   <a>$sel:blueprintName:StartBlueprintRun'</a>,
--   <a>startBlueprintRun_blueprintName</a> - The name of the blueprint.
--   
--   <a>$sel:roleArn:StartBlueprintRun'</a>,
--   <a>startBlueprintRun_roleArn</a> - Specifies the IAM role used to
--   create the workflow.
newStartBlueprintRun :: Text -> Text -> StartBlueprintRun

-- | <i>See:</i> <a>newStartBlueprintRunResponse</a> smart constructor.
data StartBlueprintRunResponse
StartBlueprintRunResponse' :: Maybe Text -> Int -> StartBlueprintRunResponse

-- | Create a value of <a>StartBlueprintRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runId:StartBlueprintRunResponse'</a>,
--   <a>startBlueprintRunResponse_runId</a> - The run ID for this blueprint
--   run.
--   
--   <a>$sel:httpStatus:StartBlueprintRunResponse'</a>,
--   <a>startBlueprintRunResponse_httpStatus</a> - The response's http
--   status code.
newStartBlueprintRunResponse :: Int -> StartBlueprintRunResponse

-- | <i>See:</i> <a>newBatchGetBlueprints</a> smart constructor.
data BatchGetBlueprints
BatchGetBlueprints' :: Maybe Bool -> Maybe Bool -> NonEmpty Text -> BatchGetBlueprints

-- | Create a value of <a>BatchGetBlueprints</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeParameterSpec:BatchGetBlueprints'</a>,
--   <a>batchGetBlueprints_includeParameterSpec</a> - Specifies whether or
--   not to include the parameters, as a JSON string, for the blueprint in
--   the response.
--   
--   <a>$sel:includeBlueprint:BatchGetBlueprints'</a>,
--   <a>batchGetBlueprints_includeBlueprint</a> - Specifies whether or not
--   to include the blueprint in the response.
--   
--   <a>$sel:names:BatchGetBlueprints'</a>, <a>batchGetBlueprints_names</a>
--   - A list of blueprint names.
newBatchGetBlueprints :: NonEmpty Text -> BatchGetBlueprints

-- | <i>See:</i> <a>newBatchGetBlueprintsResponse</a> smart constructor.
data BatchGetBlueprintsResponse
BatchGetBlueprintsResponse' :: Maybe [Blueprint] -> Maybe [Text] -> Int -> BatchGetBlueprintsResponse

-- | Create a value of <a>BatchGetBlueprintsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blueprints:BatchGetBlueprintsResponse'</a>,
--   <a>batchGetBlueprintsResponse_blueprints</a> - Returns a list of
--   blueprint as a <tt>Blueprints</tt> object.
--   
--   <a>$sel:missingBlueprints:BatchGetBlueprintsResponse'</a>,
--   <a>batchGetBlueprintsResponse_missingBlueprints</a> - Returns a list
--   of <tt>BlueprintNames</tt> that were not found.
--   
--   <a>$sel:httpStatus:BatchGetBlueprintsResponse'</a>,
--   <a>batchGetBlueprintsResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetBlueprintsResponse :: Int -> BatchGetBlueprintsResponse

-- | <i>See:</i> <a>newDeleteJob</a> smart constructor.
data DeleteJob
DeleteJob' :: Text -> DeleteJob

-- | Create a value of <a>DeleteJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:DeleteJob'</a>, <a>deleteJob_jobName</a> - The name of
--   the job definition to delete.
newDeleteJob :: Text -> DeleteJob

-- | <i>See:</i> <a>newDeleteJobResponse</a> smart constructor.
data DeleteJobResponse
DeleteJobResponse' :: Maybe Text -> Int -> DeleteJobResponse

-- | Create a value of <a>DeleteJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:DeleteJob'</a>, <a>deleteJobResponse_jobName</a> - The
--   name of the job definition that was deleted.
--   
--   <a>$sel:httpStatus:DeleteJobResponse'</a>,
--   <a>deleteJobResponse_httpStatus</a> - The response's http status code.
newDeleteJobResponse :: Int -> DeleteJobResponse

-- | <i>See:</i> <a>newUpdateJob</a> smart constructor.
data UpdateJob
UpdateJob' :: Text -> JobUpdate -> UpdateJob

-- | Create a value of <a>UpdateJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:UpdateJob'</a>, <a>updateJob_jobName</a> - The name of
--   the job definition to update.
--   
--   <a>$sel:jobUpdate:UpdateJob'</a>, <a>updateJob_jobUpdate</a> -
--   Specifies the values with which to update the job definition.
newUpdateJob :: Text -> JobUpdate -> UpdateJob

-- | <i>See:</i> <a>newUpdateJobResponse</a> smart constructor.
data UpdateJobResponse
UpdateJobResponse' :: Maybe Text -> Int -> UpdateJobResponse

-- | Create a value of <a>UpdateJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:UpdateJob'</a>, <a>updateJobResponse_jobName</a> -
--   Returns the name of the updated job definition.
--   
--   <a>$sel:httpStatus:UpdateJobResponse'</a>,
--   <a>updateJobResponse_httpStatus</a> - The response's http status code.
newUpdateJobResponse :: Int -> UpdateJobResponse

-- | <i>See:</i> <a>newCreateRegistry</a> smart constructor.
data CreateRegistry
CreateRegistry' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> CreateRegistry

-- | Create a value of <a>CreateRegistry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateRegistry'</a>,
--   <a>createRegistry_description</a> - A description of the registry. If
--   description is not provided, there will not be any default value for
--   this.
--   
--   <a>$sel:tags:CreateRegistry'</a>, <a>createRegistry_tags</a> - Amazon
--   Web Services tags that contain a key value pair and may be searched by
--   console, command line, or API.
--   
--   <a>$sel:registryName:CreateRegistry'</a>,
--   <a>createRegistry_registryName</a> - Name of the registry to be
--   created of max length of 255, and may only contain letters, numbers,
--   hyphen, underscore, dollar sign, or hash mark. No whitespace.
newCreateRegistry :: Text -> CreateRegistry

-- | <i>See:</i> <a>newCreateRegistryResponse</a> smart constructor.
data CreateRegistryResponse
CreateRegistryResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateRegistryResponse

-- | Create a value of <a>CreateRegistryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:CreateRegistry'</a>,
--   <a>createRegistryResponse_registryName</a> - The name of the registry.
--   
--   <a>$sel:registryArn:CreateRegistryResponse'</a>,
--   <a>createRegistryResponse_registryArn</a> - The Amazon Resource Name
--   (ARN) of the newly created registry.
--   
--   <a>$sel:description:CreateRegistry'</a>,
--   <a>createRegistryResponse_description</a> - A description of the
--   registry.
--   
--   <a>$sel:tags:CreateRegistry'</a>, <a>createRegistryResponse_tags</a> -
--   The tags for the registry.
--   
--   <a>$sel:httpStatus:CreateRegistryResponse'</a>,
--   <a>createRegistryResponse_httpStatus</a> - The response's http status
--   code.
newCreateRegistryResponse :: Int -> CreateRegistryResponse

-- | <i>See:</i> <a>newGetCrawlers</a> smart constructor.
data GetCrawlers
GetCrawlers' :: Maybe Text -> Maybe Natural -> GetCrawlers

-- | Create a value of <a>GetCrawlers</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetCrawlers'</a>, <a>getCrawlers_nextToken</a> - A
--   continuation token, if this is a continuation request.
--   
--   <a>$sel:maxResults:GetCrawlers'</a>, <a>getCrawlers_maxResults</a> -
--   The number of crawlers to return on each call.
newGetCrawlers :: GetCrawlers

-- | <i>See:</i> <a>newGetCrawlersResponse</a> smart constructor.
data GetCrawlersResponse
GetCrawlersResponse' :: Maybe Text -> Maybe [Crawler] -> Int -> GetCrawlersResponse

-- | Create a value of <a>GetCrawlersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetCrawlers'</a>,
--   <a>getCrawlersResponse_nextToken</a> - A continuation token, if the
--   returned list has not reached the end of those defined in this
--   customer account.
--   
--   <a>$sel:crawlers:GetCrawlersResponse'</a>,
--   <a>getCrawlersResponse_crawlers</a> - A list of crawler metadata.
--   
--   <a>$sel:httpStatus:GetCrawlersResponse'</a>,
--   <a>getCrawlersResponse_httpStatus</a> - The response's http status
--   code.
newGetCrawlersResponse :: Int -> GetCrawlersResponse

-- | <i>See:</i> <a>newListTriggers</a> smart constructor.
data ListTriggers
ListTriggers' :: Maybe Text -> Maybe Natural -> Maybe (HashMap Text Text) -> Maybe Text -> ListTriggers

-- | Create a value of <a>ListTriggers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTriggers'</a>, <a>listTriggers_nextToken</a> - A
--   continuation token, if this is a continuation request.
--   
--   <a>$sel:maxResults:ListTriggers'</a>, <a>listTriggers_maxResults</a> -
--   The maximum size of a list to return.
--   
--   <a>$sel:tags:ListTriggers'</a>, <a>listTriggers_tags</a> - Specifies
--   to return only these tagged resources.
--   
--   <a>$sel:dependentJobName:ListTriggers'</a>,
--   <a>listTriggers_dependentJobName</a> - The name of the job for which
--   to retrieve triggers. The trigger that can start this job is returned.
--   If there is no such trigger, all triggers are returned.
newListTriggers :: ListTriggers

-- | <i>See:</i> <a>newListTriggersResponse</a> smart constructor.
data ListTriggersResponse
ListTriggersResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListTriggersResponse

-- | Create a value of <a>ListTriggersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggerNames:ListTriggersResponse'</a>,
--   <a>listTriggersResponse_triggerNames</a> - The names of all triggers
--   in the account, or the triggers with the specified tags.
--   
--   <a>$sel:nextToken:ListTriggers'</a>,
--   <a>listTriggersResponse_nextToken</a> - A continuation token, if the
--   returned list does not contain the last metric available.
--   
--   <a>$sel:httpStatus:ListTriggersResponse'</a>,
--   <a>listTriggersResponse_httpStatus</a> - The response's http status
--   code.
newListTriggersResponse :: Int -> ListTriggersResponse

-- | <i>See:</i> <a>newGetClassifier</a> smart constructor.
data GetClassifier
GetClassifier' :: Text -> GetClassifier

-- | Create a value of <a>GetClassifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetClassifier'</a>, <a>getClassifier_name</a> - Name of
--   the classifier to retrieve.
newGetClassifier :: Text -> GetClassifier

-- | <i>See:</i> <a>newGetClassifierResponse</a> smart constructor.
data GetClassifierResponse
GetClassifierResponse' :: Maybe Classifier -> Int -> GetClassifierResponse

-- | Create a value of <a>GetClassifierResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:classifier:GetClassifierResponse'</a>,
--   <a>getClassifierResponse_classifier</a> - The requested classifier.
--   
--   <a>$sel:httpStatus:GetClassifierResponse'</a>,
--   <a>getClassifierResponse_httpStatus</a> - The response's http status
--   code.
newGetClassifierResponse :: Int -> GetClassifierResponse

-- | <i>See:</i> <a>newGetJob</a> smart constructor.
data GetJob
GetJob' :: Text -> GetJob

-- | Create a value of <a>GetJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:GetJob'</a>, <a>getJob_jobName</a> - The name of the
--   job definition to retrieve.
newGetJob :: Text -> GetJob

-- | <i>See:</i> <a>newGetJobResponse</a> smart constructor.
data GetJobResponse
GetJobResponse' :: Maybe Job -> Int -> GetJobResponse

-- | Create a value of <a>GetJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:GetJobResponse'</a>, <a>getJobResponse_job</a> - The
--   requested job definition.
--   
--   <a>$sel:httpStatus:GetJobResponse'</a>,
--   <a>getJobResponse_httpStatus</a> - The response's http status code.
newGetJobResponse :: Int -> GetJobResponse

-- | <i>See:</i> <a>newListRegistries</a> smart constructor.
data ListRegistries
ListRegistries' :: Maybe Text -> Maybe Natural -> ListRegistries

-- | Create a value of <a>ListRegistries</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRegistries'</a>, <a>listRegistries_nextToken</a>
--   - A continuation token, if this is a continuation call.
--   
--   <a>$sel:maxResults:ListRegistries'</a>,
--   <a>listRegistries_maxResults</a> - Maximum number of results required
--   per page. If the value is not supplied, this will be defaulted to 25
--   per page.
newListRegistries :: ListRegistries

-- | <i>See:</i> <a>newListRegistriesResponse</a> smart constructor.
data ListRegistriesResponse
ListRegistriesResponse' :: Maybe [RegistryListItem] -> Maybe Text -> Int -> ListRegistriesResponse

-- | Create a value of <a>ListRegistriesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registries:ListRegistriesResponse'</a>,
--   <a>listRegistriesResponse_registries</a> - An array of
--   <tt>RegistryDetailedListItem</tt> objects containing minimal details
--   of each registry.
--   
--   <a>$sel:nextToken:ListRegistries'</a>,
--   <a>listRegistriesResponse_nextToken</a> - A continuation token for
--   paginating the returned list of tokens, returned if the current
--   segment of the list is not the last.
--   
--   <a>$sel:httpStatus:ListRegistriesResponse'</a>,
--   <a>listRegistriesResponse_httpStatus</a> - The response's http status
--   code.
newListRegistriesResponse :: Int -> ListRegistriesResponse

-- | <i>See:</i> <a>newBatchDeleteTableVersion</a> smart constructor.
data BatchDeleteTableVersion
BatchDeleteTableVersion' :: Maybe Text -> Text -> Text -> [Text] -> BatchDeleteTableVersion

-- | Create a value of <a>BatchDeleteTableVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:BatchDeleteTableVersion'</a>,
--   <a>batchDeleteTableVersion_catalogId</a> - The ID of the Data Catalog
--   where the tables reside. If none is provided, the Amazon Web Services
--   account ID is used by default.
--   
--   <a>$sel:databaseName:BatchDeleteTableVersion'</a>,
--   <a>batchDeleteTableVersion_databaseName</a> - The database in the
--   catalog in which the table resides. For Hive compatibility, this name
--   is entirely lowercase.
--   
--   <a>$sel:tableName:BatchDeleteTableVersion'</a>,
--   <a>batchDeleteTableVersion_tableName</a> - The name of the table. For
--   Hive compatibility, this name is entirely lowercase.
--   
--   <a>$sel:versionIds:BatchDeleteTableVersion'</a>,
--   <a>batchDeleteTableVersion_versionIds</a> - A list of the IDs of
--   versions to be deleted. A <tt>VersionId</tt> is a string
--   representation of an integer. Each version is incremented by 1.
newBatchDeleteTableVersion :: Text -> Text -> BatchDeleteTableVersion

-- | <i>See:</i> <a>newBatchDeleteTableVersionResponse</a> smart
--   constructor.
data BatchDeleteTableVersionResponse
BatchDeleteTableVersionResponse' :: Maybe [TableVersionError] -> Int -> BatchDeleteTableVersionResponse

-- | Create a value of <a>BatchDeleteTableVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchDeleteTableVersionResponse'</a>,
--   <a>batchDeleteTableVersionResponse_errors</a> - A list of errors
--   encountered while trying to delete the specified table versions.
--   
--   <a>$sel:httpStatus:BatchDeleteTableVersionResponse'</a>,
--   <a>batchDeleteTableVersionResponse_httpStatus</a> - The response's
--   http status code.
newBatchDeleteTableVersionResponse :: Int -> BatchDeleteTableVersionResponse

-- | <i>See:</i> <a>newGetDevEndpoints</a> smart constructor.
data GetDevEndpoints
GetDevEndpoints' :: Maybe Text -> Maybe Natural -> GetDevEndpoints

-- | Create a value of <a>GetDevEndpoints</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDevEndpoints'</a>,
--   <a>getDevEndpoints_nextToken</a> - A continuation token, if this is a
--   continuation call.
--   
--   <a>$sel:maxResults:GetDevEndpoints'</a>,
--   <a>getDevEndpoints_maxResults</a> - The maximum size of information to
--   return.
newGetDevEndpoints :: GetDevEndpoints

-- | <i>See:</i> <a>newGetDevEndpointsResponse</a> smart constructor.
data GetDevEndpointsResponse
GetDevEndpointsResponse' :: Maybe Text -> Maybe [DevEndpoint] -> Int -> GetDevEndpointsResponse

-- | Create a value of <a>GetDevEndpointsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDevEndpoints'</a>,
--   <a>getDevEndpointsResponse_nextToken</a> - A continuation token, if
--   not all <tt>DevEndpoint</tt> definitions have yet been returned.
--   
--   <a>$sel:devEndpoints:GetDevEndpointsResponse'</a>,
--   <a>getDevEndpointsResponse_devEndpoints</a> - A list of
--   <tt>DevEndpoint</tt> definitions.
--   
--   <a>$sel:httpStatus:GetDevEndpointsResponse'</a>,
--   <a>getDevEndpointsResponse_httpStatus</a> - The response's http status
--   code.
newGetDevEndpointsResponse :: Int -> GetDevEndpointsResponse

-- | <i>See:</i> <a>newStartCrawlerSchedule</a> smart constructor.
data StartCrawlerSchedule
StartCrawlerSchedule' :: Text -> StartCrawlerSchedule

-- | Create a value of <a>StartCrawlerSchedule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawlerName:StartCrawlerSchedule'</a>,
--   <a>startCrawlerSchedule_crawlerName</a> - Name of the crawler to
--   schedule.
newStartCrawlerSchedule :: Text -> StartCrawlerSchedule

-- | <i>See:</i> <a>newStartCrawlerScheduleResponse</a> smart constructor.
data StartCrawlerScheduleResponse
StartCrawlerScheduleResponse' :: Int -> StartCrawlerScheduleResponse

-- | Create a value of <a>StartCrawlerScheduleResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartCrawlerScheduleResponse'</a>,
--   <a>startCrawlerScheduleResponse_httpStatus</a> - The response's http
--   status code.
newStartCrawlerScheduleResponse :: Int -> StartCrawlerScheduleResponse

-- | <i>See:</i> <a>newGetPartitionIndexes</a> smart constructor.
data GetPartitionIndexes
GetPartitionIndexes' :: Maybe Text -> Maybe Text -> Text -> Text -> GetPartitionIndexes

-- | Create a value of <a>GetPartitionIndexes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetPartitionIndexes'</a>,
--   <a>getPartitionIndexes_catalogId</a> - The catalog ID where the table
--   resides.
--   
--   <a>$sel:nextToken:GetPartitionIndexes'</a>,
--   <a>getPartitionIndexes_nextToken</a> - A continuation token, included
--   if this is a continuation call.
--   
--   <a>$sel:databaseName:GetPartitionIndexes'</a>,
--   <a>getPartitionIndexes_databaseName</a> - Specifies the name of a
--   database from which you want to retrieve partition indexes.
--   
--   <a>$sel:tableName:GetPartitionIndexes'</a>,
--   <a>getPartitionIndexes_tableName</a> - Specifies the name of a table
--   for which you want to retrieve the partition indexes.
newGetPartitionIndexes :: Text -> Text -> GetPartitionIndexes

-- | <i>See:</i> <a>newGetPartitionIndexesResponse</a> smart constructor.
data GetPartitionIndexesResponse
GetPartitionIndexesResponse' :: Maybe [PartitionIndexDescriptor] -> Maybe Text -> Int -> GetPartitionIndexesResponse

-- | Create a value of <a>GetPartitionIndexesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitionIndexDescriptorList:GetPartitionIndexesResponse'</a>,
--   <a>getPartitionIndexesResponse_partitionIndexDescriptorList</a> - A
--   list of index descriptors.
--   
--   <a>$sel:nextToken:GetPartitionIndexes'</a>,
--   <a>getPartitionIndexesResponse_nextToken</a> - A continuation token,
--   present if the current list segment is not the last.
--   
--   <a>$sel:httpStatus:GetPartitionIndexesResponse'</a>,
--   <a>getPartitionIndexesResponse_httpStatus</a> - The response's http
--   status code.
newGetPartitionIndexesResponse :: Int -> GetPartitionIndexesResponse

-- | <i>See:</i> <a>newGetUserDefinedFunction</a> smart constructor.
data GetUserDefinedFunction
GetUserDefinedFunction' :: Maybe Text -> Text -> Text -> GetUserDefinedFunction

-- | Create a value of <a>GetUserDefinedFunction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetUserDefinedFunction'</a>,
--   <a>getUserDefinedFunction_catalogId</a> - The ID of the Data Catalog
--   where the function to be retrieved is located. If none is provided,
--   the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:GetUserDefinedFunction'</a>,
--   <a>getUserDefinedFunction_databaseName</a> - The name of the catalog
--   database where the function is located.
--   
--   <a>$sel:functionName:GetUserDefinedFunction'</a>,
--   <a>getUserDefinedFunction_functionName</a> - The name of the function.
newGetUserDefinedFunction :: Text -> Text -> GetUserDefinedFunction

-- | <i>See:</i> <a>newGetUserDefinedFunctionResponse</a> smart
--   constructor.
data GetUserDefinedFunctionResponse
GetUserDefinedFunctionResponse' :: Maybe UserDefinedFunction -> Int -> GetUserDefinedFunctionResponse

-- | Create a value of <a>GetUserDefinedFunctionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userDefinedFunction:GetUserDefinedFunctionResponse'</a>,
--   <a>getUserDefinedFunctionResponse_userDefinedFunction</a> - The
--   requested function definition.
--   
--   <a>$sel:httpStatus:GetUserDefinedFunctionResponse'</a>,
--   <a>getUserDefinedFunctionResponse_httpStatus</a> - The response's http
--   status code.
newGetUserDefinedFunctionResponse :: Int -> GetUserDefinedFunctionResponse

-- | <i>See:</i> <a>newGetResourcePolicy</a> smart constructor.
data GetResourcePolicy
GetResourcePolicy' :: Maybe Text -> GetResourcePolicy

-- | Create a value of <a>GetResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:GetResourcePolicy'</a>,
--   <a>getResourcePolicy_resourceArn</a> - The ARN of the Glue resource
--   for which to retrieve the resource policy. If not supplied, the Data
--   Catalog resource policy is returned. Use <tt>GetResourcePolicies</tt>
--   to view all existing resource policies. For more information see
--   <a>Specifying Glue Resource ARNs</a>.
newGetResourcePolicy :: GetResourcePolicy

-- | <i>See:</i> <a>newGetResourcePolicyResponse</a> smart constructor.
data GetResourcePolicyResponse
GetResourcePolicyResponse' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Int -> GetResourcePolicyResponse

-- | Create a value of <a>GetResourcePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyInJson:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_policyInJson</a> - Contains the requested
--   policy document, in JSON format.
--   
--   <a>$sel:updateTime:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_updateTime</a> - The date and time at
--   which the policy was last updated.
--   
--   <a>$sel:policyHash:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_policyHash</a> - Contains the hash value
--   associated with this policy.
--   
--   <a>$sel:createTime:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_createTime</a> - The date and time at
--   which the policy was created.
--   
--   <a>$sel:httpStatus:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newGetResourcePolicyResponse :: Int -> GetResourcePolicyResponse

-- | <i>See:</i> <a>newGetWorkflowRun</a> smart constructor.
data GetWorkflowRun
GetWorkflowRun' :: Maybe Bool -> Text -> Text -> GetWorkflowRun

-- | Create a value of <a>GetWorkflowRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeGraph:GetWorkflowRun'</a>,
--   <a>getWorkflowRun_includeGraph</a> - Specifies whether to include the
--   workflow graph in response or not.
--   
--   <a>$sel:name:GetWorkflowRun'</a>, <a>getWorkflowRun_name</a> - Name of
--   the workflow being run.
--   
--   <a>$sel:runId:GetWorkflowRun'</a>, <a>getWorkflowRun_runId</a> - The
--   ID of the workflow run.
newGetWorkflowRun :: Text -> Text -> GetWorkflowRun

-- | <i>See:</i> <a>newGetWorkflowRunResponse</a> smart constructor.
data GetWorkflowRunResponse
GetWorkflowRunResponse' :: Maybe WorkflowRun -> Int -> GetWorkflowRunResponse

-- | Create a value of <a>GetWorkflowRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:run:GetWorkflowRunResponse'</a>,
--   <a>getWorkflowRunResponse_run</a> - The requested workflow run
--   metadata.
--   
--   <a>$sel:httpStatus:GetWorkflowRunResponse'</a>,
--   <a>getWorkflowRunResponse_httpStatus</a> - The response's http status
--   code.
newGetWorkflowRunResponse :: Int -> GetWorkflowRunResponse

-- | <i>See:</i> <a>newDeleteDatabase</a> smart constructor.
data DeleteDatabase
DeleteDatabase' :: Maybe Text -> Text -> DeleteDatabase

-- | Create a value of <a>DeleteDatabase</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DeleteDatabase'</a>, <a>deleteDatabase_catalogId</a>
--   - The ID of the Data Catalog in which the database resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:name:DeleteDatabase'</a>, <a>deleteDatabase_name</a> - The
--   name of the database to delete. For Hive compatibility, this must be
--   all lowercase.
newDeleteDatabase :: Text -> DeleteDatabase

-- | <i>See:</i> <a>newDeleteDatabaseResponse</a> smart constructor.
data DeleteDatabaseResponse
DeleteDatabaseResponse' :: Int -> DeleteDatabaseResponse

-- | Create a value of <a>DeleteDatabaseResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDatabaseResponse'</a>,
--   <a>deleteDatabaseResponse_httpStatus</a> - The response's http status
--   code.
newDeleteDatabaseResponse :: Int -> DeleteDatabaseResponse

-- | <i>See:</i> <a>newUpdateDatabase</a> smart constructor.
data UpdateDatabase
UpdateDatabase' :: Maybe Text -> Text -> DatabaseInput -> UpdateDatabase

-- | Create a value of <a>UpdateDatabase</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:UpdateDatabase'</a>, <a>updateDatabase_catalogId</a>
--   - The ID of the Data Catalog in which the metadata database resides.
--   If none is provided, the Amazon Web Services account ID is used by
--   default.
--   
--   <a>$sel:name:UpdateDatabase'</a>, <a>updateDatabase_name</a> - The
--   name of the database to update in the catalog. For Hive compatibility,
--   this is folded to lowercase.
--   
--   <a>$sel:databaseInput:UpdateDatabase'</a>,
--   <a>updateDatabase_databaseInput</a> - A <tt>DatabaseInput</tt> object
--   specifying the new definition of the metadata database in the catalog.
newUpdateDatabase :: Text -> DatabaseInput -> UpdateDatabase

-- | <i>See:</i> <a>newUpdateDatabaseResponse</a> smart constructor.
data UpdateDatabaseResponse
UpdateDatabaseResponse' :: Int -> UpdateDatabaseResponse

-- | Create a value of <a>UpdateDatabaseResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateDatabaseResponse'</a>,
--   <a>updateDatabaseResponse_httpStatus</a> - The response's http status
--   code.
newUpdateDatabaseResponse :: Int -> UpdateDatabaseResponse

-- | <i>See:</i> <a>newGetColumnStatisticsForPartition</a> smart
--   constructor.
data GetColumnStatisticsForPartition
GetColumnStatisticsForPartition' :: Maybe Text -> Text -> Text -> [Text] -> [Text] -> GetColumnStatisticsForPartition

-- | Create a value of <a>GetColumnStatisticsForPartition</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetColumnStatisticsForPartition'</a>,
--   <a>getColumnStatisticsForPartition_catalogId</a> - The ID of the Data
--   Catalog where the partitions in question reside. If none is supplied,
--   the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:GetColumnStatisticsForPartition'</a>,
--   <a>getColumnStatisticsForPartition_databaseName</a> - The name of the
--   catalog database where the partitions reside.
--   
--   <a>$sel:tableName:GetColumnStatisticsForPartition'</a>,
--   <a>getColumnStatisticsForPartition_tableName</a> - The name of the
--   partitions' table.
--   
--   <a>$sel:partitionValues:GetColumnStatisticsForPartition'</a>,
--   <a>getColumnStatisticsForPartition_partitionValues</a> - A list of
--   partition values identifying the partition.
--   
--   <a>$sel:columnNames:GetColumnStatisticsForPartition'</a>,
--   <a>getColumnStatisticsForPartition_columnNames</a> - A list of the
--   column names.
newGetColumnStatisticsForPartition :: Text -> Text -> GetColumnStatisticsForPartition

-- | <i>See:</i> <a>newGetColumnStatisticsForPartitionResponse</a> smart
--   constructor.
data GetColumnStatisticsForPartitionResponse
GetColumnStatisticsForPartitionResponse' :: Maybe [ColumnError] -> Maybe [ColumnStatistics] -> Int -> GetColumnStatisticsForPartitionResponse

-- | Create a value of <a>GetColumnStatisticsForPartitionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:GetColumnStatisticsForPartitionResponse'</a>,
--   <a>getColumnStatisticsForPartitionResponse_errors</a> - Error occurred
--   during retrieving column statistics data.
--   
--   
--   <a>$sel:columnStatisticsList:GetColumnStatisticsForPartitionResponse'</a>,
--   <a>getColumnStatisticsForPartitionResponse_columnStatisticsList</a> -
--   List of ColumnStatistics that failed to be retrieved.
--   
--   <a>$sel:httpStatus:GetColumnStatisticsForPartitionResponse'</a>,
--   <a>getColumnStatisticsForPartitionResponse_httpStatus</a> - The
--   response's http status code.
newGetColumnStatisticsForPartitionResponse :: Int -> GetColumnStatisticsForPartitionResponse

-- | <i>See:</i> <a>newStopCrawler</a> smart constructor.
data StopCrawler
StopCrawler' :: Text -> StopCrawler

-- | Create a value of <a>StopCrawler</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StopCrawler'</a>, <a>stopCrawler_name</a> - Name of the
--   crawler to stop.
newStopCrawler :: Text -> StopCrawler

-- | <i>See:</i> <a>newStopCrawlerResponse</a> smart constructor.
data StopCrawlerResponse
StopCrawlerResponse' :: Int -> StopCrawlerResponse

-- | Create a value of <a>StopCrawlerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopCrawlerResponse'</a>,
--   <a>stopCrawlerResponse_httpStatus</a> - The response's http status
--   code.
newStopCrawlerResponse :: Int -> StopCrawlerResponse

-- | <i>See:</i> <a>newDeleteSecurityConfiguration</a> smart constructor.
data DeleteSecurityConfiguration
DeleteSecurityConfiguration' :: Text -> DeleteSecurityConfiguration

-- | Create a value of <a>DeleteSecurityConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteSecurityConfiguration'</a>,
--   <a>deleteSecurityConfiguration_name</a> - The name of the security
--   configuration to delete.
newDeleteSecurityConfiguration :: Text -> DeleteSecurityConfiguration

-- | <i>See:</i> <a>newDeleteSecurityConfigurationResponse</a> smart
--   constructor.
data DeleteSecurityConfigurationResponse
DeleteSecurityConfigurationResponse' :: Int -> DeleteSecurityConfigurationResponse

-- | Create a value of <a>DeleteSecurityConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteSecurityConfigurationResponse'</a>,
--   <a>deleteSecurityConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newDeleteSecurityConfigurationResponse :: Int -> DeleteSecurityConfigurationResponse

-- | <i>See:</i> <a>newGetPartitions</a> smart constructor.
data GetPartitions
GetPartitions' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Segment -> Maybe Natural -> Text -> Text -> GetPartitions

-- | Create a value of <a>GetPartitions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetPartitions'</a>, <a>getPartitions_catalogId</a> -
--   The ID of the Data Catalog where the partitions in question reside. If
--   none is provided, the Amazon Web Services account ID is used by
--   default.
--   
--   <a>$sel:excludeColumnSchema:GetPartitions'</a>,
--   <a>getPartitions_excludeColumnSchema</a> - When true, specifies not
--   returning the partition column schema. Useful when you are interested
--   only in other partition attributes such as partition values or
--   location. This approach avoids the problem of a large response by not
--   returning duplicate data.
--   
--   <a>$sel:nextToken:GetPartitions'</a>, <a>getPartitions_nextToken</a> -
--   A continuation token, if this is not the first call to retrieve these
--   partitions.
--   
--   <a>$sel:expression:GetPartitions'</a>, <a>getPartitions_expression</a>
--   - An expression that filters the partitions to be returned.
--   
--   The expression uses SQL syntax similar to the SQL <tt>WHERE</tt>
--   filter clause. The SQL statement parser <a>JSQLParser</a> parses the
--   expression.
--   
--   <i>Operators</i>: The following are the operators that you can use in
--   the <tt>Expression</tt> API call:
--   
--   <ul>
--   <li><i>=</i> Checks whether the values of the two operands are equal;
--   if yes, then the condition becomes true.Example: Assume 'variable a'
--   holds 10 and 'variable b' holds 20.(a = b) is not true.</li>
--   <li><i>&lt; &gt;</i> Checks whether the values of two operands are
--   equal; if the values are not equal, then the condition becomes
--   true.Example: (a &lt; &gt; b) is true.</li>
--   <li><i>&gt;</i> Checks whether the value of the left operand is
--   greater than the value of the right operand; if yes, then the
--   condition becomes true.Example: (a &gt; b) is not true.</li>
--   <li><i>&lt;</i> Checks whether the value of the left operand is less
--   than the value of the right operand; if yes, then the condition
--   becomes true.Example: (a &lt; b) is true.</li>
--   <li><i>&gt;=</i> Checks whether the value of the left operand is
--   greater than or equal to the value of the right operand; if yes, then
--   the condition becomes true.Example: (a &gt;= b) is not true.</li>
--   <li><i>&lt;=</i> Checks whether the value of the left operand is less
--   than or equal to the value of the right operand; if yes, then the
--   condition becomes true.Example: (a &lt;= b) is true.</li>
--   <li><i>AND, OR, IN, BETWEEN, LIKE, NOT, IS NULL</i> Logical
--   operators.</li>
--   </ul>
--   
--   <i>Supported Partition Key Types</i>: The following are the supported
--   partition keys.
--   
--   <ul>
--   <li><pre>string</pre></li>
--   <li><pre>date</pre></li>
--   <li><pre>timestamp</pre></li>
--   <li><pre>int</pre></li>
--   <li><pre>bigint</pre></li>
--   <li><pre>long</pre></li>
--   <li><pre>tinyint</pre></li>
--   <li><pre>smallint</pre></li>
--   <li><pre>decimal</pre></li>
--   </ul>
--   
--   If an type is encountered that is not valid, an exception is thrown.
--   
--   The following list shows the valid operators on each type. When you
--   define a crawler, the <tt>partitionKey</tt> type is created as a
--   <tt>STRING</tt>, to be compatible with the catalog partitions.
--   
--   <i>Sample API Call</i>:
--   
--   <a>$sel:segment:GetPartitions'</a>, <a>getPartitions_segment</a> - The
--   segment of the table's partitions to scan in this request.
--   
--   <a>$sel:maxResults:GetPartitions'</a>, <a>getPartitions_maxResults</a>
--   - The maximum number of partitions to return in a single response.
--   
--   <a>$sel:databaseName:GetPartitions'</a>,
--   <a>getPartitions_databaseName</a> - The name of the catalog database
--   where the partitions reside.
--   
--   <a>$sel:tableName:GetPartitions'</a>, <a>getPartitions_tableName</a> -
--   The name of the partitions' table.
newGetPartitions :: Text -> Text -> GetPartitions

-- | <i>See:</i> <a>newGetPartitionsResponse</a> smart constructor.
data GetPartitionsResponse
GetPartitionsResponse' :: Maybe [Partition] -> Maybe Text -> Int -> GetPartitionsResponse

-- | Create a value of <a>GetPartitionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitions:GetPartitionsResponse'</a>,
--   <a>getPartitionsResponse_partitions</a> - A list of requested
--   partitions.
--   
--   <a>$sel:nextToken:GetPartitions'</a>,
--   <a>getPartitionsResponse_nextToken</a> - A continuation token, if the
--   returned list of partitions does not include the last one.
--   
--   <a>$sel:httpStatus:GetPartitionsResponse'</a>,
--   <a>getPartitionsResponse_httpStatus</a> - The response's http status
--   code.
newGetPartitionsResponse :: Int -> GetPartitionsResponse

-- | <i>See:</i> <a>newPutSchemaVersionMetadata</a> smart constructor.
data PutSchemaVersionMetadata
PutSchemaVersionMetadata' :: Maybe Text -> Maybe SchemaId -> Maybe SchemaVersionNumber -> MetadataKeyValuePair -> PutSchemaVersionMetadata

-- | Create a value of <a>PutSchemaVersionMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaVersionId:PutSchemaVersionMetadata'</a>,
--   <a>putSchemaVersionMetadata_schemaVersionId</a> - The unique version
--   ID of the schema version.
--   
--   <a>$sel:schemaId:PutSchemaVersionMetadata'</a>,
--   <a>putSchemaVersionMetadata_schemaId</a> - The unique ID for the
--   schema.
--   
--   <a>$sel:schemaVersionNumber:PutSchemaVersionMetadata'</a>,
--   <a>putSchemaVersionMetadata_schemaVersionNumber</a> - The version
--   number of the schema.
--   
--   <a>$sel:metadataKeyValue:PutSchemaVersionMetadata'</a>,
--   <a>putSchemaVersionMetadata_metadataKeyValue</a> - The metadata key's
--   corresponding value.
newPutSchemaVersionMetadata :: MetadataKeyValuePair -> PutSchemaVersionMetadata

-- | <i>See:</i> <a>newPutSchemaVersionMetadataResponse</a> smart
--   constructor.
data PutSchemaVersionMetadataResponse
PutSchemaVersionMetadataResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Int -> PutSchemaVersionMetadataResponse

-- | Create a value of <a>PutSchemaVersionMetadataResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:PutSchemaVersionMetadataResponse'</a>,
--   <a>putSchemaVersionMetadataResponse_registryName</a> - The name for
--   the registry.
--   
--   <a>$sel:schemaName:PutSchemaVersionMetadataResponse'</a>,
--   <a>putSchemaVersionMetadataResponse_schemaName</a> - The name for the
--   schema.
--   
--   <a>$sel:schemaVersionId:PutSchemaVersionMetadata'</a>,
--   <a>putSchemaVersionMetadataResponse_schemaVersionId</a> - The unique
--   version ID of the schema version.
--   
--   <a>$sel:versionNumber:PutSchemaVersionMetadataResponse'</a>,
--   <a>putSchemaVersionMetadataResponse_versionNumber</a> - The version
--   number of the schema.
--   
--   <a>$sel:schemaArn:PutSchemaVersionMetadataResponse'</a>,
--   <a>putSchemaVersionMetadataResponse_schemaArn</a> - The Amazon
--   Resource Name (ARN) for the schema.
--   
--   <a>$sel:metadataKey:PutSchemaVersionMetadataResponse'</a>,
--   <a>putSchemaVersionMetadataResponse_metadataKey</a> - The metadata
--   key.
--   
--   <a>$sel:metadataValue:PutSchemaVersionMetadataResponse'</a>,
--   <a>putSchemaVersionMetadataResponse_metadataValue</a> - The value of
--   the metadata key.
--   
--   <a>$sel:latestVersion:PutSchemaVersionMetadataResponse'</a>,
--   <a>putSchemaVersionMetadataResponse_latestVersion</a> - The latest
--   version of the schema.
--   
--   <a>$sel:httpStatus:PutSchemaVersionMetadataResponse'</a>,
--   <a>putSchemaVersionMetadataResponse_httpStatus</a> - The response's
--   http status code.
newPutSchemaVersionMetadataResponse :: Int -> PutSchemaVersionMetadataResponse

-- | <i>See:</i> <a>newGetSchema</a> smart constructor.
data GetSchema
GetSchema' :: SchemaId -> GetSchema

-- | Create a value of <a>GetSchema</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaId:GetSchema'</a>, <a>getSchema_schemaId</a> - This is a
--   wrapper structure to contain schema identity fields. The structure
--   contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   Either <tt>SchemaArn</tt> or <tt>SchemaName</tt> and
--   <tt>RegistryName</tt> has to be provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. Either
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> and <tt>RegistryName</tt>
--   has to be provided.</li>
--   </ul>
newGetSchema :: SchemaId -> GetSchema

-- | <i>See:</i> <a>newGetSchemaResponse</a> smart constructor.
data GetSchemaResponse
GetSchemaResponse' :: Maybe Text -> Maybe Text -> Maybe SchemaStatus -> Maybe Text -> Maybe Natural -> Maybe DataFormat -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Compatibility -> Int -> GetSchemaResponse

-- | Create a value of <a>GetSchemaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_registryName</a> - The name of the registry.
--   
--   <a>$sel:createdTime:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_createdTime</a> - The date and time the schema
--   was created.
--   
--   <a>$sel:schemaStatus:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_schemaStatus</a> - The status of the schema.
--   
--   <a>$sel:registryArn:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_registryArn</a> - The Amazon Resource Name (ARN)
--   of the registry.
--   
--   <a>$sel:latestSchemaVersion:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_latestSchemaVersion</a> - The latest version of
--   the schema associated with the returned schema definition.
--   
--   <a>$sel:dataFormat:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_dataFormat</a> - The data format of the schema
--   definition. Currently <tt>AVRO</tt> and <tt>JSON</tt> are supported.
--   
--   <a>$sel:schemaCheckpoint:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_schemaCheckpoint</a> - The version number of the
--   checkpoint (the last time the compatibility mode was changed).
--   
--   <a>$sel:schemaName:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_schemaName</a> - The name of the schema.
--   
--   <a>$sel:schemaArn:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_schemaArn</a> - The Amazon Resource Name (ARN) of
--   the schema.
--   
--   <a>$sel:nextSchemaVersion:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_nextSchemaVersion</a> - The next version of the
--   schema associated with the returned schema definition.
--   
--   <a>$sel:updatedTime:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_updatedTime</a> - The date and time the schema
--   was updated.
--   
--   <a>$sel:description:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_description</a> - A description of schema if
--   specified when created
--   
--   <a>$sel:compatibility:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_compatibility</a> - The compatibility mode of the
--   schema.
--   
--   <a>$sel:httpStatus:GetSchemaResponse'</a>,
--   <a>getSchemaResponse_httpStatus</a> - The response's http status code.
newGetSchemaResponse :: Int -> GetSchemaResponse

-- | <i>See:</i> <a>newBatchDeletePartition</a> smart constructor.
data BatchDeletePartition
BatchDeletePartition' :: Maybe Text -> Text -> Text -> [PartitionValueList] -> BatchDeletePartition

-- | Create a value of <a>BatchDeletePartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:BatchDeletePartition'</a>,
--   <a>batchDeletePartition_catalogId</a> - The ID of the Data Catalog
--   where the partition to be deleted resides. If none is provided, the
--   Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:BatchDeletePartition'</a>,
--   <a>batchDeletePartition_databaseName</a> - The name of the catalog
--   database in which the table in question resides.
--   
--   <a>$sel:tableName:BatchDeletePartition'</a>,
--   <a>batchDeletePartition_tableName</a> - The name of the table that
--   contains the partitions to be deleted.
--   
--   <a>$sel:partitionsToDelete:BatchDeletePartition'</a>,
--   <a>batchDeletePartition_partitionsToDelete</a> - A list of
--   <tt>PartitionInput</tt> structures that define the partitions to be
--   deleted.
newBatchDeletePartition :: Text -> Text -> BatchDeletePartition

-- | <i>See:</i> <a>newBatchDeletePartitionResponse</a> smart constructor.
data BatchDeletePartitionResponse
BatchDeletePartitionResponse' :: Maybe [PartitionError] -> Int -> BatchDeletePartitionResponse

-- | Create a value of <a>BatchDeletePartitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchDeletePartitionResponse'</a>,
--   <a>batchDeletePartitionResponse_errors</a> - The errors encountered
--   when trying to delete the requested partitions.
--   
--   <a>$sel:httpStatus:BatchDeletePartitionResponse'</a>,
--   <a>batchDeletePartitionResponse_httpStatus</a> - The response's http
--   status code.
newBatchDeletePartitionResponse :: Int -> BatchDeletePartitionResponse

-- | <i>See:</i> <a>newStartMLLabelingSetGenerationTaskRun</a> smart
--   constructor.
data StartMLLabelingSetGenerationTaskRun
StartMLLabelingSetGenerationTaskRun' :: Text -> Text -> StartMLLabelingSetGenerationTaskRun

-- | Create a value of <a>StartMLLabelingSetGenerationTaskRun</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transformId:StartMLLabelingSetGenerationTaskRun'</a>,
--   <a>startMLLabelingSetGenerationTaskRun_transformId</a> - The unique
--   identifier of the machine learning transform.
--   
--   <a>$sel:outputS3Path:StartMLLabelingSetGenerationTaskRun'</a>,
--   <a>startMLLabelingSetGenerationTaskRun_outputS3Path</a> - The Amazon
--   Simple Storage Service (Amazon S3) path where you generate the
--   labeling set.
newStartMLLabelingSetGenerationTaskRun :: Text -> Text -> StartMLLabelingSetGenerationTaskRun

-- | <i>See:</i> <a>newStartMLLabelingSetGenerationTaskRunResponse</a>
--   smart constructor.
data StartMLLabelingSetGenerationTaskRunResponse
StartMLLabelingSetGenerationTaskRunResponse' :: Maybe Text -> Int -> StartMLLabelingSetGenerationTaskRunResponse

-- | Create a value of <a>StartMLLabelingSetGenerationTaskRunResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskRunId:StartMLLabelingSetGenerationTaskRunResponse'</a>,
--   <a>startMLLabelingSetGenerationTaskRunResponse_taskRunId</a> - The
--   unique run identifier that is associated with this task run.
--   
--   <a>$sel:httpStatus:StartMLLabelingSetGenerationTaskRunResponse'</a>,
--   <a>startMLLabelingSetGenerationTaskRunResponse_httpStatus</a> - The
--   response's http status code.
newStartMLLabelingSetGenerationTaskRunResponse :: Int -> StartMLLabelingSetGenerationTaskRunResponse

-- | <i>See:</i> <a>newBatchUpdatePartition</a> smart constructor.
data BatchUpdatePartition
BatchUpdatePartition' :: Maybe Text -> Text -> Text -> NonEmpty BatchUpdatePartitionRequestEntry -> BatchUpdatePartition

-- | Create a value of <a>BatchUpdatePartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:BatchUpdatePartition'</a>,
--   <a>batchUpdatePartition_catalogId</a> - The ID of the catalog in which
--   the partition is to be updated. Currently, this should be the Amazon
--   Web Services account ID.
--   
--   <a>$sel:databaseName:BatchUpdatePartition'</a>,
--   <a>batchUpdatePartition_databaseName</a> - The name of the metadata
--   database in which the partition is to be updated.
--   
--   <a>$sel:tableName:BatchUpdatePartition'</a>,
--   <a>batchUpdatePartition_tableName</a> - The name of the metadata table
--   in which the partition is to be updated.
--   
--   <a>$sel:entries:BatchUpdatePartition'</a>,
--   <a>batchUpdatePartition_entries</a> - A list of up to 100
--   <tt>BatchUpdatePartitionRequestEntry</tt> objects to update.
newBatchUpdatePartition :: Text -> Text -> NonEmpty BatchUpdatePartitionRequestEntry -> BatchUpdatePartition

-- | <i>See:</i> <a>newBatchUpdatePartitionResponse</a> smart constructor.
data BatchUpdatePartitionResponse
BatchUpdatePartitionResponse' :: Maybe [BatchUpdatePartitionFailureEntry] -> Int -> BatchUpdatePartitionResponse

-- | Create a value of <a>BatchUpdatePartitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchUpdatePartitionResponse'</a>,
--   <a>batchUpdatePartitionResponse_errors</a> - The errors encountered
--   when trying to update the requested partitions. A list of
--   <tt>BatchUpdatePartitionFailureEntry</tt> objects.
--   
--   <a>$sel:httpStatus:BatchUpdatePartitionResponse'</a>,
--   <a>batchUpdatePartitionResponse_httpStatus</a> - The response's http
--   status code.
newBatchUpdatePartitionResponse :: Int -> BatchUpdatePartitionResponse

-- | <i>See:</i> <a>newRegisterSchemaVersion</a> smart constructor.
data RegisterSchemaVersion
RegisterSchemaVersion' :: SchemaId -> Text -> RegisterSchemaVersion

-- | Create a value of <a>RegisterSchemaVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaId:RegisterSchemaVersion'</a>,
--   <a>registerSchemaVersion_schemaId</a> - This is a wrapper structure to
--   contain schema identity fields. The structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   Either <tt>SchemaArn</tt> or <tt>SchemaName</tt> and
--   <tt>RegistryName</tt> has to be provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. Either
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> and <tt>RegistryName</tt>
--   has to be provided.</li>
--   </ul>
--   
--   <a>$sel:schemaDefinition:RegisterSchemaVersion'</a>,
--   <a>registerSchemaVersion_schemaDefinition</a> - The schema definition
--   using the <tt>DataFormat</tt> setting for the <tt>SchemaName</tt>.
newRegisterSchemaVersion :: SchemaId -> Text -> RegisterSchemaVersion

-- | <i>See:</i> <a>newRegisterSchemaVersionResponse</a> smart constructor.
data RegisterSchemaVersionResponse
RegisterSchemaVersionResponse' :: Maybe SchemaVersionStatus -> Maybe Text -> Maybe Natural -> Int -> RegisterSchemaVersionResponse

-- | Create a value of <a>RegisterSchemaVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:RegisterSchemaVersionResponse'</a>,
--   <a>registerSchemaVersionResponse_status</a> - The status of the schema
--   version.
--   
--   <a>$sel:schemaVersionId:RegisterSchemaVersionResponse'</a>,
--   <a>registerSchemaVersionResponse_schemaVersionId</a> - The unique ID
--   that represents the version of this schema.
--   
--   <a>$sel:versionNumber:RegisterSchemaVersionResponse'</a>,
--   <a>registerSchemaVersionResponse_versionNumber</a> - The version of
--   this schema (for sync flow only, in case this is the first version).
--   
--   <a>$sel:httpStatus:RegisterSchemaVersionResponse'</a>,
--   <a>registerSchemaVersionResponse_httpStatus</a> - The response's http
--   status code.
newRegisterSchemaVersionResponse :: Int -> RegisterSchemaVersionResponse

-- | <i>See:</i> <a>newStopWorkflowRun</a> smart constructor.
data StopWorkflowRun
StopWorkflowRun' :: Text -> Text -> StopWorkflowRun

-- | Create a value of <a>StopWorkflowRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StopWorkflowRun'</a>, <a>stopWorkflowRun_name</a> - The
--   name of the workflow to stop.
--   
--   <a>$sel:runId:StopWorkflowRun'</a>, <a>stopWorkflowRun_runId</a> - The
--   ID of the workflow run to stop.
newStopWorkflowRun :: Text -> Text -> StopWorkflowRun

-- | <i>See:</i> <a>newStopWorkflowRunResponse</a> smart constructor.
data StopWorkflowRunResponse
StopWorkflowRunResponse' :: Int -> StopWorkflowRunResponse

-- | Create a value of <a>StopWorkflowRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopWorkflowRunResponse'</a>,
--   <a>stopWorkflowRunResponse_httpStatus</a> - The response's http status
--   code.
newStopWorkflowRunResponse :: Int -> StopWorkflowRunResponse

-- | <i>See:</i> <a>newGetCrawler</a> smart constructor.
data GetCrawler
GetCrawler' :: Text -> GetCrawler

-- | Create a value of <a>GetCrawler</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetCrawler'</a>, <a>getCrawler_name</a> - The name of the
--   crawler to retrieve metadata for.
newGetCrawler :: Text -> GetCrawler

-- | <i>See:</i> <a>newGetCrawlerResponse</a> smart constructor.
data GetCrawlerResponse
GetCrawlerResponse' :: Maybe Crawler -> Int -> GetCrawlerResponse

-- | Create a value of <a>GetCrawlerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawler:GetCrawlerResponse'</a>,
--   <a>getCrawlerResponse_crawler</a> - The metadata for the specified
--   crawler.
--   
--   <a>$sel:httpStatus:GetCrawlerResponse'</a>,
--   <a>getCrawlerResponse_httpStatus</a> - The response's http status
--   code.
newGetCrawlerResponse :: Int -> GetCrawlerResponse

-- | <i>See:</i> <a>newListWorkflows</a> smart constructor.
data ListWorkflows
ListWorkflows' :: Maybe Text -> Maybe Natural -> ListWorkflows

-- | Create a value of <a>ListWorkflows</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWorkflows'</a>, <a>listWorkflows_nextToken</a> -
--   A continuation token, if this is a continuation request.
--   
--   <a>$sel:maxResults:ListWorkflows'</a>, <a>listWorkflows_maxResults</a>
--   - The maximum size of a list to return.
newListWorkflows :: ListWorkflows

-- | <i>See:</i> <a>newListWorkflowsResponse</a> smart constructor.
data ListWorkflowsResponse
ListWorkflowsResponse' :: Maybe Text -> Maybe (NonEmpty Text) -> Int -> ListWorkflowsResponse

-- | Create a value of <a>ListWorkflowsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWorkflows'</a>,
--   <a>listWorkflowsResponse_nextToken</a> - A continuation token, if not
--   all workflow names have been returned.
--   
--   <a>$sel:workflows:ListWorkflowsResponse'</a>,
--   <a>listWorkflowsResponse_workflows</a> - List of names of workflows in
--   the account.
--   
--   <a>$sel:httpStatus:ListWorkflowsResponse'</a>,
--   <a>listWorkflowsResponse_httpStatus</a> - The response's http status
--   code.
newListWorkflowsResponse :: Int -> ListWorkflowsResponse

-- | <i>See:</i> <a>newBatchStopJobRun</a> smart constructor.
data BatchStopJobRun
BatchStopJobRun' :: Text -> NonEmpty Text -> BatchStopJobRun

-- | Create a value of <a>BatchStopJobRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:BatchStopJobRun'</a>, <a>batchStopJobRun_jobName</a> -
--   The name of the job definition for which to stop job runs.
--   
--   <a>$sel:jobRunIds:BatchStopJobRun'</a>,
--   <a>batchStopJobRun_jobRunIds</a> - A list of the <tt>JobRunIds</tt>
--   that should be stopped for that job definition.
newBatchStopJobRun :: Text -> NonEmpty Text -> BatchStopJobRun

-- | <i>See:</i> <a>newBatchStopJobRunResponse</a> smart constructor.
data BatchStopJobRunResponse
BatchStopJobRunResponse' :: Maybe [BatchStopJobRunSuccessfulSubmission] -> Maybe [BatchStopJobRunError] -> Int -> BatchStopJobRunResponse

-- | Create a value of <a>BatchStopJobRunResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:successfulSubmissions:BatchStopJobRunResponse'</a>,
--   <a>batchStopJobRunResponse_successfulSubmissions</a> - A list of the
--   JobRuns that were successfully submitted for stopping.
--   
--   <a>$sel:errors:BatchStopJobRunResponse'</a>,
--   <a>batchStopJobRunResponse_errors</a> - A list of the errors that were
--   encountered in trying to stop <tt>JobRuns</tt>, including the
--   <tt>JobRunId</tt> for which each error was encountered and details
--   about the error.
--   
--   <a>$sel:httpStatus:BatchStopJobRunResponse'</a>,
--   <a>batchStopJobRunResponse_httpStatus</a> - The response's http status
--   code.
newBatchStopJobRunResponse :: Int -> BatchStopJobRunResponse

-- | <i>See:</i> <a>newGetDevEndpoint</a> smart constructor.
data GetDevEndpoint
GetDevEndpoint' :: Text -> GetDevEndpoint

-- | Create a value of <a>GetDevEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpointName:GetDevEndpoint'</a>,
--   <a>getDevEndpoint_endpointName</a> - Name of the <tt>DevEndpoint</tt>
--   to retrieve information for.
newGetDevEndpoint :: Text -> GetDevEndpoint

-- | <i>See:</i> <a>newGetDevEndpointResponse</a> smart constructor.
data GetDevEndpointResponse
GetDevEndpointResponse' :: Maybe DevEndpoint -> Int -> GetDevEndpointResponse

-- | Create a value of <a>GetDevEndpointResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:devEndpoint:GetDevEndpointResponse'</a>,
--   <a>getDevEndpointResponse_devEndpoint</a> - A <tt>DevEndpoint</tt>
--   definition.
--   
--   <a>$sel:httpStatus:GetDevEndpointResponse'</a>,
--   <a>getDevEndpointResponse_httpStatus</a> - The response's http status
--   code.
newGetDevEndpointResponse :: Int -> GetDevEndpointResponse

-- | <i>See:</i> <a>newPutWorkflowRunProperties</a> smart constructor.
data PutWorkflowRunProperties
PutWorkflowRunProperties' :: Text -> Text -> HashMap Text Text -> PutWorkflowRunProperties

-- | Create a value of <a>PutWorkflowRunProperties</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:PutWorkflowRunProperties'</a>,
--   <a>putWorkflowRunProperties_name</a> - Name of the workflow which was
--   run.
--   
--   <a>$sel:runId:PutWorkflowRunProperties'</a>,
--   <a>putWorkflowRunProperties_runId</a> - The ID of the workflow run for
--   which the run properties should be updated.
--   
--   <a>$sel:runProperties:PutWorkflowRunProperties'</a>,
--   <a>putWorkflowRunProperties_runProperties</a> - The properties to put
--   for the specified run.
newPutWorkflowRunProperties :: Text -> Text -> PutWorkflowRunProperties

-- | <i>See:</i> <a>newPutWorkflowRunPropertiesResponse</a> smart
--   constructor.
data PutWorkflowRunPropertiesResponse
PutWorkflowRunPropertiesResponse' :: Int -> PutWorkflowRunPropertiesResponse

-- | Create a value of <a>PutWorkflowRunPropertiesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutWorkflowRunPropertiesResponse'</a>,
--   <a>putWorkflowRunPropertiesResponse_httpStatus</a> - The response's
--   http status code.
newPutWorkflowRunPropertiesResponse :: Int -> PutWorkflowRunPropertiesResponse

-- | <i>See:</i> <a>newCreateTable</a> smart constructor.
data CreateTable
CreateTable' :: Maybe [PartitionIndex] -> Maybe Text -> Text -> TableInput -> CreateTable

-- | Create a value of <a>CreateTable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitionIndexes:CreateTable'</a>,
--   <a>createTable_partitionIndexes</a> - A list of partition indexes,
--   <tt>PartitionIndex</tt> structures, to create in the table.
--   
--   <a>$sel:catalogId:CreateTable'</a>, <a>createTable_catalogId</a> - The
--   ID of the Data Catalog in which to create the <tt>Table</tt>. If none
--   is supplied, the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:CreateTable'</a>, <a>createTable_databaseName</a>
--   - The catalog database in which to create the new table. For Hive
--   compatibility, this name is entirely lowercase.
--   
--   <a>$sel:tableInput:CreateTable'</a>, <a>createTable_tableInput</a> -
--   The <tt>TableInput</tt> object that defines the metadata table to
--   create in the catalog.
newCreateTable :: Text -> TableInput -> CreateTable

-- | <i>See:</i> <a>newCreateTableResponse</a> smart constructor.
data CreateTableResponse
CreateTableResponse' :: Int -> CreateTableResponse

-- | Create a value of <a>CreateTableResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateTableResponse'</a>,
--   <a>createTableResponse_httpStatus</a> - The response's http status
--   code.
newCreateTableResponse :: Int -> CreateTableResponse

-- | <i>See:</i> <a>newListCrawlers</a> smart constructor.
data ListCrawlers
ListCrawlers' :: Maybe Text -> Maybe Natural -> Maybe (HashMap Text Text) -> ListCrawlers

-- | Create a value of <a>ListCrawlers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListCrawlers'</a>, <a>listCrawlers_nextToken</a> - A
--   continuation token, if this is a continuation request.
--   
--   <a>$sel:maxResults:ListCrawlers'</a>, <a>listCrawlers_maxResults</a> -
--   The maximum size of a list to return.
--   
--   <a>$sel:tags:ListCrawlers'</a>, <a>listCrawlers_tags</a> - Specifies
--   to return only these tagged resources.
newListCrawlers :: ListCrawlers

-- | <i>See:</i> <a>newListCrawlersResponse</a> smart constructor.
data ListCrawlersResponse
ListCrawlersResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListCrawlersResponse

-- | Create a value of <a>ListCrawlersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListCrawlers'</a>,
--   <a>listCrawlersResponse_nextToken</a> - A continuation token, if the
--   returned list does not contain the last metric available.
--   
--   <a>$sel:crawlerNames:ListCrawlersResponse'</a>,
--   <a>listCrawlersResponse_crawlerNames</a> - The names of all crawlers
--   in the account, or the crawlers with the specified tags.
--   
--   <a>$sel:httpStatus:ListCrawlersResponse'</a>,
--   <a>listCrawlersResponse_httpStatus</a> - The response's http status
--   code.
newListCrawlersResponse :: Int -> ListCrawlersResponse

-- | <i>See:</i> <a>newGetCrawlerMetrics</a> smart constructor.
data GetCrawlerMetrics
GetCrawlerMetrics' :: Maybe Text -> Maybe Natural -> Maybe [Text] -> GetCrawlerMetrics

-- | Create a value of <a>GetCrawlerMetrics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetCrawlerMetrics'</a>,
--   <a>getCrawlerMetrics_nextToken</a> - A continuation token, if this is
--   a continuation call.
--   
--   <a>$sel:maxResults:GetCrawlerMetrics'</a>,
--   <a>getCrawlerMetrics_maxResults</a> - The maximum size of a list to
--   return.
--   
--   <a>$sel:crawlerNameList:GetCrawlerMetrics'</a>,
--   <a>getCrawlerMetrics_crawlerNameList</a> - A list of the names of
--   crawlers about which to retrieve metrics.
newGetCrawlerMetrics :: GetCrawlerMetrics

-- | <i>See:</i> <a>newGetCrawlerMetricsResponse</a> smart constructor.
data GetCrawlerMetricsResponse
GetCrawlerMetricsResponse' :: Maybe [CrawlerMetrics] -> Maybe Text -> Int -> GetCrawlerMetricsResponse

-- | Create a value of <a>GetCrawlerMetricsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawlerMetricsList:GetCrawlerMetricsResponse'</a>,
--   <a>getCrawlerMetricsResponse_crawlerMetricsList</a> - A list of
--   metrics for the specified crawler.
--   
--   <a>$sel:nextToken:GetCrawlerMetrics'</a>,
--   <a>getCrawlerMetricsResponse_nextToken</a> - A continuation token, if
--   the returned list does not contain the last metric available.
--   
--   <a>$sel:httpStatus:GetCrawlerMetricsResponse'</a>,
--   <a>getCrawlerMetricsResponse_httpStatus</a> - The response's http
--   status code.
newGetCrawlerMetricsResponse :: Int -> GetCrawlerMetricsResponse

-- | <i>See:</i> <a>newGetSchemaVersion</a> smart constructor.
data GetSchemaVersion
GetSchemaVersion' :: Maybe Text -> Maybe SchemaId -> Maybe SchemaVersionNumber -> GetSchemaVersion

-- | Create a value of <a>GetSchemaVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaVersionId:GetSchemaVersion'</a>,
--   <a>getSchemaVersion_schemaVersionId</a> - The <tt>SchemaVersionId</tt>
--   of the schema version. This field is required for fetching by schema
--   ID. Either this or the <tt>SchemaId</tt> wrapper has to be provided.
--   
--   <a>$sel:schemaId:GetSchemaVersion'</a>,
--   <a>getSchemaVersion_schemaId</a> - This is a wrapper structure to
--   contain schema identity fields. The structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   Either <tt>SchemaArn</tt> or <tt>SchemaName</tt> and
--   <tt>RegistryName</tt> has to be provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. Either
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> and <tt>RegistryName</tt>
--   has to be provided.</li>
--   </ul>
--   
--   <a>$sel:schemaVersionNumber:GetSchemaVersion'</a>,
--   <a>getSchemaVersion_schemaVersionNumber</a> - The version number of
--   the schema.
newGetSchemaVersion :: GetSchemaVersion

-- | <i>See:</i> <a>newGetSchemaVersionResponse</a> smart constructor.
data GetSchemaVersionResponse
GetSchemaVersionResponse' :: Maybe SchemaVersionStatus -> Maybe Text -> Maybe Text -> Maybe DataFormat -> Maybe Text -> Maybe Natural -> Maybe Text -> Int -> GetSchemaVersionResponse

-- | Create a value of <a>GetSchemaVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetSchemaVersionResponse'</a>,
--   <a>getSchemaVersionResponse_status</a> - The status of the schema
--   version.
--   
--   <a>$sel:schemaDefinition:GetSchemaVersionResponse'</a>,
--   <a>getSchemaVersionResponse_schemaDefinition</a> - The schema
--   definition for the schema ID.
--   
--   <a>$sel:createdTime:GetSchemaVersionResponse'</a>,
--   <a>getSchemaVersionResponse_createdTime</a> - The date and time the
--   schema version was created.
--   
--   <a>$sel:dataFormat:GetSchemaVersionResponse'</a>,
--   <a>getSchemaVersionResponse_dataFormat</a> - The data format of the
--   schema definition. Currently <tt>AVRO</tt> and <tt>JSON</tt> are
--   supported.
--   
--   <a>$sel:schemaVersionId:GetSchemaVersion'</a>,
--   <a>getSchemaVersionResponse_schemaVersionId</a> - The
--   <tt>SchemaVersionId</tt> of the schema version.
--   
--   <a>$sel:versionNumber:GetSchemaVersionResponse'</a>,
--   <a>getSchemaVersionResponse_versionNumber</a> - The version number of
--   the schema.
--   
--   <a>$sel:schemaArn:GetSchemaVersionResponse'</a>,
--   <a>getSchemaVersionResponse_schemaArn</a> - The Amazon Resource Name
--   (ARN) of the schema.
--   
--   <a>$sel:httpStatus:GetSchemaVersionResponse'</a>,
--   <a>getSchemaVersionResponse_httpStatus</a> - The response's http
--   status code.
newGetSchemaVersionResponse :: Int -> GetSchemaVersionResponse

-- | <i>See:</i> <a>newGetPlan</a> smart constructor.
data GetPlan
GetPlan' :: Maybe [CatalogEntry] -> Maybe Location -> Maybe Language -> Maybe (HashMap Text Text) -> [MappingEntry] -> CatalogEntry -> GetPlan

-- | Create a value of <a>GetPlan</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sinks:GetPlan'</a>, <a>getPlan_sinks</a> - The target tables.
--   
--   <a>$sel:location:GetPlan'</a>, <a>getPlan_location</a> - The
--   parameters for the mapping.
--   
--   <a>$sel:language:GetPlan'</a>, <a>getPlan_language</a> - The
--   programming language of the code to perform the mapping.
--   
--   <a>$sel:additionalPlanOptionsMap:GetPlan'</a>,
--   <a>getPlan_additionalPlanOptionsMap</a> - A map to hold additional
--   optional key-value parameters.
--   
--   Currently, these key-value pairs are supported:
--   
--   <ul>
--   <li><tt>inferSchema</tt> — Specifies whether to set
--   <tt>inferSchema</tt> to true or false for the default script generated
--   by an Glue job. For example, to set <tt>inferSchema</tt> to true, pass
--   the following key value pair:<pre>--additional-plan-options-map
--   '{"inferSchema":"true"}'</pre></li>
--   </ul>
--   
--   <a>$sel:mapping:GetPlan'</a>, <a>getPlan_mapping</a> - The list of
--   mappings from a source table to target tables.
--   
--   <a>$sel:source:GetPlan'</a>, <a>getPlan_source</a> - The source table.
newGetPlan :: CatalogEntry -> GetPlan

-- | <i>See:</i> <a>newGetPlanResponse</a> smart constructor.
data GetPlanResponse
GetPlanResponse' :: Maybe Text -> Maybe Text -> Int -> GetPlanResponse

-- | Create a value of <a>GetPlanResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pythonScript:GetPlanResponse'</a>,
--   <a>getPlanResponse_pythonScript</a> - A Python script to perform the
--   mapping.
--   
--   <a>$sel:scalaCode:GetPlanResponse'</a>,
--   <a>getPlanResponse_scalaCode</a> - The Scala code to perform the
--   mapping.
--   
--   <a>$sel:httpStatus:GetPlanResponse'</a>,
--   <a>getPlanResponse_httpStatus</a> - The response's http status code.
newGetPlanResponse :: Int -> GetPlanResponse

-- | <i>See:</i> <a>newGetTriggers</a> smart constructor.
data GetTriggers
GetTriggers' :: Maybe Text -> Maybe Natural -> Maybe Text -> GetTriggers

-- | Create a value of <a>GetTriggers</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetTriggers'</a>, <a>getTriggers_nextToken</a> - A
--   continuation token, if this is a continuation call.
--   
--   <a>$sel:maxResults:GetTriggers'</a>, <a>getTriggers_maxResults</a> -
--   The maximum size of the response.
--   
--   <a>$sel:dependentJobName:GetTriggers'</a>,
--   <a>getTriggers_dependentJobName</a> - The name of the job to retrieve
--   triggers for. The trigger that can start this job is returned, and if
--   there is no such trigger, all triggers are returned.
newGetTriggers :: GetTriggers

-- | <i>See:</i> <a>newGetTriggersResponse</a> smart constructor.
data GetTriggersResponse
GetTriggersResponse' :: Maybe [Trigger] -> Maybe Text -> Int -> GetTriggersResponse

-- | Create a value of <a>GetTriggersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggers:GetTriggersResponse'</a>,
--   <a>getTriggersResponse_triggers</a> - A list of triggers for the
--   specified job.
--   
--   <a>$sel:nextToken:GetTriggers'</a>,
--   <a>getTriggersResponse_nextToken</a> - A continuation token, if not
--   all the requested triggers have yet been returned.
--   
--   <a>$sel:httpStatus:GetTriggersResponse'</a>,
--   <a>getTriggersResponse_httpStatus</a> - The response's http status
--   code.
newGetTriggersResponse :: Int -> GetTriggersResponse

-- | <i>See:</i> <a>newCreateSchema</a> smart constructor.
data CreateSchema
CreateSchema' :: Maybe Text -> Maybe RegistryId -> Maybe Text -> Maybe Compatibility -> Maybe (HashMap Text Text) -> Text -> DataFormat -> CreateSchema

-- | Create a value of <a>CreateSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaDefinition:CreateSchema'</a>,
--   <a>createSchema_schemaDefinition</a> - The schema definition using the
--   <tt>DataFormat</tt> setting for <tt>SchemaName</tt>.
--   
--   <a>$sel:registryId:CreateSchema'</a>, <a>createSchema_registryId</a> -
--   This is a wrapper shape to contain the registry identity fields. If
--   this is not provided, the default registry will be used. The ARN
--   format for the same will be: <tt>arn:aws:glue:us-east-2:&lt;customer
--   id&gt;:registry/default-registry:random-5-letter-id</tt>.
--   
--   <a>$sel:description:CreateSchema'</a>, <a>createSchema_description</a>
--   - An optional description of the schema. If description is not
--   provided, there will not be any automatic default value for this.
--   
--   <a>$sel:compatibility:CreateSchema'</a>,
--   <a>createSchema_compatibility</a> - The compatibility mode of the
--   schema. The possible values are:
--   
--   <ul>
--   <li><i>NONE</i>: No compatibility mode applies. You can use this
--   choice in development scenarios or if you do not know the
--   compatibility mode that you want to apply to schemas. Any new version
--   added will be accepted without undergoing a compatibility check.</li>
--   <li><i>DISABLED</i>: This compatibility choice prevents versioning for
--   a particular schema. You can use this choice to prevent future
--   versioning of a schema.</li>
--   <li><i>BACKWARD</i>: This compatibility choice is recommended as it
--   allows data receivers to read both the current and one previous schema
--   version. This means that for instance, a new schema version cannot
--   drop data fields or change the type of these fields, so they can't be
--   read by readers using the previous version.</li>
--   <li><i>BACKWARD_ALL</i>: This compatibility choice allows data
--   receivers to read both the current and all previous schema versions.
--   You can use this choice when you need to delete fields or add optional
--   fields, and check compatibility against all previous schema
--   versions.</li>
--   <li><i>FORWARD</i>: This compatibility choice allows data receivers to
--   read both the current and one next schema version, but not necessarily
--   later versions. You can use this choice when you need to add fields or
--   delete optional fields, but only check compatibility against the last
--   schema version.</li>
--   <li><i>FORWARD_ALL</i>: This compatibility choice allows data
--   receivers to read written by producers of any new registered schema.
--   You can use this choice when you need to add fields or delete optional
--   fields, and check compatibility against all previous schema
--   versions.</li>
--   <li><i>FULL</i>: This compatibility choice allows data receivers to
--   read data written by producers using the previous or next version of
--   the schema, but not necessarily earlier or later versions. You can use
--   this choice when you need to add or remove optional fields, but only
--   check compatibility against the last schema version.</li>
--   <li><i>FULL_ALL</i>: This compatibility choice allows data receivers
--   to read data written by producers using all previous schema versions.
--   You can use this choice when you need to add or remove optional
--   fields, and check compatibility against all previous schema
--   versions.</li>
--   </ul>
--   
--   <a>$sel:tags:CreateSchema'</a>, <a>createSchema_tags</a> - Amazon Web
--   Services tags that contain a key value pair and may be searched by
--   console, command line, or API. If specified, follows the Amazon Web
--   Services tags-on-create pattern.
--   
--   <a>$sel:schemaName:CreateSchema'</a>, <a>createSchema_schemaName</a> -
--   Name of the schema to be created of max length of 255, and may only
--   contain letters, numbers, hyphen, underscore, dollar sign, or hash
--   mark. No whitespace.
--   
--   <a>$sel:dataFormat:CreateSchema'</a>, <a>createSchema_dataFormat</a> -
--   The data format of the schema definition. Currently <tt>AVRO</tt> and
--   <tt>JSON</tt> are supported.
newCreateSchema :: Text -> DataFormat -> CreateSchema

-- | <i>See:</i> <a>newCreateSchemaResponse</a> smart constructor.
data CreateSchemaResponse
CreateSchemaResponse' :: Maybe SchemaVersionStatus -> Maybe Text -> Maybe SchemaStatus -> Maybe Text -> Maybe Natural -> Maybe DataFormat -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Compatibility -> Maybe (HashMap Text Text) -> Int -> CreateSchemaResponse

-- | Create a value of <a>CreateSchemaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaVersionStatus:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_schemaVersionStatus</a> - The status of the
--   first schema version created.
--   
--   <a>$sel:registryName:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_registryName</a> - The name of the registry.
--   
--   <a>$sel:schemaStatus:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_schemaStatus</a> - The status of the schema.
--   
--   <a>$sel:registryArn:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_registryArn</a> - The Amazon Resource Name
--   (ARN) of the registry.
--   
--   <a>$sel:latestSchemaVersion:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_latestSchemaVersion</a> - The latest version
--   of the schema associated with the returned schema definition.
--   
--   <a>$sel:dataFormat:CreateSchema'</a>,
--   <a>createSchemaResponse_dataFormat</a> - The data format of the schema
--   definition. Currently <tt>AVRO</tt> and <tt>JSON</tt> are supported.
--   
--   <a>$sel:schemaCheckpoint:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_schemaCheckpoint</a> - The version number of
--   the checkpoint (the last time the compatibility mode was changed).
--   
--   <a>$sel:schemaName:CreateSchema'</a>,
--   <a>createSchemaResponse_schemaName</a> - The name of the schema.
--   
--   <a>$sel:schemaVersionId:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_schemaVersionId</a> - The unique identifier of
--   the first schema version.
--   
--   <a>$sel:schemaArn:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_schemaArn</a> - The Amazon Resource Name (ARN)
--   of the schema.
--   
--   <a>$sel:nextSchemaVersion:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_nextSchemaVersion</a> - The next version of
--   the schema associated with the returned schema definition.
--   
--   <a>$sel:description:CreateSchema'</a>,
--   <a>createSchemaResponse_description</a> - A description of the schema
--   if specified when created.
--   
--   <a>$sel:compatibility:CreateSchema'</a>,
--   <a>createSchemaResponse_compatibility</a> - The schema compatibility
--   mode.
--   
--   <a>$sel:tags:CreateSchema'</a>, <a>createSchemaResponse_tags</a> - The
--   tags for the schema.
--   
--   <a>$sel:httpStatus:CreateSchemaResponse'</a>,
--   <a>createSchemaResponse_httpStatus</a> - The response's http status
--   code.
newCreateSchemaResponse :: Int -> CreateSchemaResponse

-- | <i>See:</i> <a>newListDevEndpoints</a> smart constructor.
data ListDevEndpoints
ListDevEndpoints' :: Maybe Text -> Maybe Natural -> Maybe (HashMap Text Text) -> ListDevEndpoints

-- | Create a value of <a>ListDevEndpoints</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevEndpoints'</a>,
--   <a>listDevEndpoints_nextToken</a> - A continuation token, if this is a
--   continuation request.
--   
--   <a>$sel:maxResults:ListDevEndpoints'</a>,
--   <a>listDevEndpoints_maxResults</a> - The maximum size of a list to
--   return.
--   
--   <a>$sel:tags:ListDevEndpoints'</a>, <a>listDevEndpoints_tags</a> -
--   Specifies to return only these tagged resources.
newListDevEndpoints :: ListDevEndpoints

-- | <i>See:</i> <a>newListDevEndpointsResponse</a> smart constructor.
data ListDevEndpointsResponse
ListDevEndpointsResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListDevEndpointsResponse

-- | Create a value of <a>ListDevEndpointsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevEndpoints'</a>,
--   <a>listDevEndpointsResponse_nextToken</a> - A continuation token, if
--   the returned list does not contain the last metric available.
--   
--   <a>$sel:devEndpointNames:ListDevEndpointsResponse'</a>,
--   <a>listDevEndpointsResponse_devEndpointNames</a> - The names of all
--   the <tt>DevEndpoint</tt>s in the account, or the <tt>DevEndpoint</tt>s
--   with the specified tags.
--   
--   <a>$sel:httpStatus:ListDevEndpointsResponse'</a>,
--   <a>listDevEndpointsResponse_httpStatus</a> - The response's http
--   status code.
newListDevEndpointsResponse :: Int -> ListDevEndpointsResponse

-- | <i>See:</i> <a>newStartTrigger</a> smart constructor.
data StartTrigger
StartTrigger' :: Text -> StartTrigger

-- | Create a value of <a>StartTrigger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StartTrigger'</a>, <a>startTrigger_name</a> - The name of
--   the trigger to start.
newStartTrigger :: Text -> StartTrigger

-- | <i>See:</i> <a>newStartTriggerResponse</a> smart constructor.
data StartTriggerResponse
StartTriggerResponse' :: Maybe Text -> Int -> StartTriggerResponse

-- | Create a value of <a>StartTriggerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StartTrigger'</a>, <a>startTriggerResponse_name</a> - The
--   name of the trigger that was started.
--   
--   <a>$sel:httpStatus:StartTriggerResponse'</a>,
--   <a>startTriggerResponse_httpStatus</a> - The response's http status
--   code.
newStartTriggerResponse :: Int -> StartTriggerResponse

-- | <i>See:</i> <a>newGetDataflowGraph</a> smart constructor.
data GetDataflowGraph
GetDataflowGraph' :: Maybe Text -> GetDataflowGraph

-- | Create a value of <a>GetDataflowGraph</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pythonScript:GetDataflowGraph'</a>,
--   <a>getDataflowGraph_pythonScript</a> - The Python script to transform.
newGetDataflowGraph :: GetDataflowGraph

-- | <i>See:</i> <a>newGetDataflowGraphResponse</a> smart constructor.
data GetDataflowGraphResponse
GetDataflowGraphResponse' :: Maybe [CodeGenEdge] -> Maybe [CodeGenNode] -> Int -> GetDataflowGraphResponse

-- | Create a value of <a>GetDataflowGraphResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dagEdges:GetDataflowGraphResponse'</a>,
--   <a>getDataflowGraphResponse_dagEdges</a> - A list of the edges in the
--   resulting DAG.
--   
--   <a>$sel:dagNodes:GetDataflowGraphResponse'</a>,
--   <a>getDataflowGraphResponse_dagNodes</a> - A list of the nodes in the
--   resulting DAG.
--   
--   <a>$sel:httpStatus:GetDataflowGraphResponse'</a>,
--   <a>getDataflowGraphResponse_httpStatus</a> - The response's http
--   status code.
newGetDataflowGraphResponse :: Int -> GetDataflowGraphResponse

-- | <i>See:</i> <a>newGetDatabases</a> smart constructor.
data GetDatabases
GetDatabases' :: Maybe ResourceShareType -> Maybe Text -> Maybe Text -> Maybe Natural -> GetDatabases

-- | Create a value of <a>GetDatabases</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceShareType:GetDatabases'</a>,
--   <a>getDatabases_resourceShareType</a> - Allows you to specify that you
--   want to list the databases shared with your account. The allowable
--   values are <tt>FOREIGN</tt> or <tt>ALL</tt>.
--   
--   <ul>
--   <li>If set to <tt>FOREIGN</tt>, will list the databases shared with
--   your account.</li>
--   <li>If set to <tt>ALL</tt>, will list the databases shared with your
--   account, as well as the databases in yor local account.</li>
--   </ul>
--   
--   <a>$sel:catalogId:GetDatabases'</a>, <a>getDatabases_catalogId</a> -
--   The ID of the Data Catalog from which to retrieve <tt>Databases</tt>.
--   If none is provided, the Amazon Web Services account ID is used by
--   default.
--   
--   <a>$sel:nextToken:GetDatabases'</a>, <a>getDatabases_nextToken</a> - A
--   continuation token, if this is a continuation call.
--   
--   <a>$sel:maxResults:GetDatabases'</a>, <a>getDatabases_maxResults</a> -
--   The maximum number of databases to return in one response.
newGetDatabases :: GetDatabases

-- | <i>See:</i> <a>newGetDatabasesResponse</a> smart constructor.
data GetDatabasesResponse
GetDatabasesResponse' :: Maybe Text -> Int -> [Database] -> GetDatabasesResponse

-- | Create a value of <a>GetDatabasesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDatabases'</a>,
--   <a>getDatabasesResponse_nextToken</a> - A continuation token for
--   paginating the returned list of tokens, returned if the current
--   segment of the list is not the last.
--   
--   <a>$sel:httpStatus:GetDatabasesResponse'</a>,
--   <a>getDatabasesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:databaseList:GetDatabasesResponse'</a>,
--   <a>getDatabasesResponse_databaseList</a> - A list of <tt>Database</tt>
--   objects from the specified catalog.
newGetDatabasesResponse :: Int -> GetDatabasesResponse

-- | <i>See:</i> <a>newGetTable</a> smart constructor.
data GetTable
GetTable' :: Maybe Text -> Text -> Text -> GetTable

-- | Create a value of <a>GetTable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetTable'</a>, <a>getTable_catalogId</a> - The ID of
--   the Data Catalog where the table resides. If none is provided, the
--   Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:GetTable'</a>, <a>getTable_databaseName</a> - The
--   name of the database in the catalog in which the table resides. For
--   Hive compatibility, this name is entirely lowercase.
--   
--   <a>$sel:name:GetTable'</a>, <a>getTable_name</a> - The name of the
--   table for which to retrieve the definition. For Hive compatibility,
--   this name is entirely lowercase.
newGetTable :: Text -> Text -> GetTable

-- | <i>See:</i> <a>newGetTableResponse</a> smart constructor.
data GetTableResponse
GetTableResponse' :: Maybe Table -> Int -> GetTableResponse

-- | Create a value of <a>GetTableResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:table:GetTableResponse'</a>, <a>getTableResponse_table</a> -
--   The <tt>Table</tt> object that defines the specified table.
--   
--   <a>$sel:httpStatus:GetTableResponse'</a>,
--   <a>getTableResponse_httpStatus</a> - The response's http status code.
newGetTableResponse :: Int -> GetTableResponse

-- | <i>See:</i> <a>newCreateCrawler</a> smart constructor.
data CreateCrawler
CreateCrawler' :: Maybe SchemaChangePolicy -> Maybe Text -> Maybe RecrawlPolicy -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe LineageConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> CrawlerTargets -> CreateCrawler

-- | Create a value of <a>CreateCrawler</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaChangePolicy:CreateCrawler'</a>,
--   <a>createCrawler_schemaChangePolicy</a> - The policy for the crawler's
--   update and deletion behavior.
--   
--   <a>$sel:schedule:CreateCrawler'</a>, <a>createCrawler_schedule</a> - A
--   <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
--   
--   <a>$sel:recrawlPolicy:CreateCrawler'</a>,
--   <a>createCrawler_recrawlPolicy</a> - A policy that specifies whether
--   to crawl the entire dataset again, or to crawl only folders that were
--   added since the last crawler run.
--   
--   <a>$sel:classifiers:CreateCrawler'</a>,
--   <a>createCrawler_classifiers</a> - A list of custom classifiers that
--   the user has registered. By default, all built-in classifiers are
--   included in a crawl, but these custom classifiers always override the
--   default classifiers for a given classification.
--   
--   <a>$sel:databaseName:CreateCrawler'</a>,
--   <a>createCrawler_databaseName</a> - The Glue database where results
--   are written, such as:
--   <tt>arn:aws:daylight:us-east-1::database/sometable/*</tt>.
--   
--   <a>$sel:crawlerSecurityConfiguration:CreateCrawler'</a>,
--   <a>createCrawler_crawlerSecurityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used by this crawler.
--   
--   <a>$sel:lineageConfiguration:CreateCrawler'</a>,
--   <a>createCrawler_lineageConfiguration</a> - Specifies data lineage
--   configuration settings for the crawler.
--   
--   <a>$sel:configuration:CreateCrawler'</a>,
--   <a>createCrawler_configuration</a> - Crawler configuration
--   information. This versioned JSON string allows users to specify
--   aspects of a crawler's behavior. For more information, see
--   <a>Configuring a Crawler</a>.
--   
--   <a>$sel:tablePrefix:CreateCrawler'</a>,
--   <a>createCrawler_tablePrefix</a> - The table prefix used for catalog
--   tables that are created.
--   
--   <a>$sel:description:CreateCrawler'</a>,
--   <a>createCrawler_description</a> - A description of the new crawler.
--   
--   <a>$sel:tags:CreateCrawler'</a>, <a>createCrawler_tags</a> - The tags
--   to use with this crawler request. You may use tags to limit access to
--   the crawler. For more information about tags in Glue, see <a>Amazon
--   Web Services Tags in Glue</a> in the developer guide.
--   
--   <a>$sel:name:CreateCrawler'</a>, <a>createCrawler_name</a> - Name of
--   the new crawler.
--   
--   <a>$sel:role':CreateCrawler'</a>, <a>createCrawler_role</a> - The IAM
--   role or Amazon Resource Name (ARN) of an IAM role used by the new
--   crawler to access customer resources.
--   
--   <a>$sel:targets:CreateCrawler'</a>, <a>createCrawler_targets</a> - A
--   list of collection of targets to crawl.
newCreateCrawler :: Text -> Text -> CrawlerTargets -> CreateCrawler

-- | <i>See:</i> <a>newCreateCrawlerResponse</a> smart constructor.
data CreateCrawlerResponse
CreateCrawlerResponse' :: Int -> CreateCrawlerResponse

-- | Create a value of <a>CreateCrawlerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateCrawlerResponse'</a>,
--   <a>createCrawlerResponse_httpStatus</a> - The response's http status
--   code.
newCreateCrawlerResponse :: Int -> CreateCrawlerResponse

-- | <i>See:</i> <a>newGetJobRun</a> smart constructor.
data GetJobRun
GetJobRun' :: Maybe Bool -> Text -> Text -> GetJobRun

-- | Create a value of <a>GetJobRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:predecessorsIncluded:GetJobRun'</a>,
--   <a>getJobRun_predecessorsIncluded</a> - True if a list of predecessor
--   runs should be returned.
--   
--   <a>$sel:jobName:GetJobRun'</a>, <a>getJobRun_jobName</a> - Name of the
--   job definition being run.
--   
--   <a>$sel:runId:GetJobRun'</a>, <a>getJobRun_runId</a> - The ID of the
--   job run.
newGetJobRun :: Text -> Text -> GetJobRun

-- | <i>See:</i> <a>newGetJobRunResponse</a> smart constructor.
data GetJobRunResponse
GetJobRunResponse' :: Maybe JobRun -> Int -> GetJobRunResponse

-- | Create a value of <a>GetJobRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobRun:GetJobRunResponse'</a>, <a>getJobRunResponse_jobRun</a>
--   - The requested job-run metadata.
--   
--   <a>$sel:httpStatus:GetJobRunResponse'</a>,
--   <a>getJobRunResponse_httpStatus</a> - The response's http status code.
newGetJobRunResponse :: Int -> GetJobRunResponse

-- | <i>See:</i> <a>newCreateDevEndpoint</a> smart constructor.
data CreateDevEndpoint
CreateDevEndpoint' :: Maybe Int -> Maybe Text -> Maybe [Text] -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe WorkerType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> CreateDevEndpoint

-- | Create a value of <a>CreateDevEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfWorkers:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_numberOfWorkers</a> - The number of workers of a
--   defined <tt>workerType</tt> that are allocated to the development
--   endpoint.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
--   
--   <a>$sel:extraPythonLibsS3Path:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_extraPythonLibsS3Path</a> - The paths to one or
--   more Python libraries in an Amazon S3 bucket that should be loaded in
--   your <tt>DevEndpoint</tt>. Multiple values must be complete paths
--   separated by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not yet supported.
--   
--   <a>$sel:securityGroupIds:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_securityGroupIds</a> - Security group IDs for the
--   security groups to be used by the new <tt>DevEndpoint</tt>.
--   
--   <a>$sel:publicKeys:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_publicKeys</a> - A list of public keys to be used
--   by the development endpoints for authentication. The use of this
--   attribute is preferred over a single public key because the public
--   keys allow you to have a different private key per client.
--   
--   If you previously created an endpoint with a public key, you must
--   remove that key to be able to set a list of public keys. Call the
--   <tt>UpdateDevEndpoint</tt> API with the public key content in the
--   <tt>deletePublicKeys</tt> attribute, and the list of new keys in the
--   <tt>addPublicKeys</tt> attribute.
--   
--   <a>$sel:arguments:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_arguments</a> - A map of arguments used to
--   configure the <tt>DevEndpoint</tt>.
--   
--   <a>$sel:workerType:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_workerType</a> - The type of predefined worker
--   that is allocated to the development endpoint. Accepts a value of
--   Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   Known issue: when a development endpoint is created with the
--   <tt>G.2X</tt> <tt>WorkerType</tt> configuration, the Spark drivers for
--   the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64
--   GB disk.
--   
--   <a>$sel:securityConfiguration:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this
--   <tt>DevEndpoint</tt>.
--   
--   <a>$sel:publicKey:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_publicKey</a> - The public key to be used by this
--   <tt>DevEndpoint</tt> for authentication. This attribute is provided
--   for backward compatibility because the recommended attribute to use is
--   public keys.
--   
--   <a>$sel:subnetId:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_subnetId</a> - The subnet ID for the new
--   <tt>DevEndpoint</tt> to use.
--   
--   <a>$sel:glueVersion:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_glueVersion</a> - Glue version determines the
--   versions of Apache Spark and Python that Glue supports. The Python
--   version indicates the version supported for running your ETL scripts
--   on development endpoints.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Development endpoints that are created without specifying a Glue
--   version default to Glue 0.9.
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
--   
--   <a>$sel:numberOfNodes:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_numberOfNodes</a> - The number of Glue Data
--   Processing Units (DPUs) to allocate to this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:extraJarsS3Path:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_extraJarsS3Path</a> - The path to one or more
--   Java <tt>.jar</tt> files in an S3 bucket that should be loaded in your
--   <tt>DevEndpoint</tt>.
--   
--   <a>$sel:tags:CreateDevEndpoint'</a>, <a>createDevEndpoint_tags</a> -
--   The tags to use with this DevEndpoint. You may use tags to limit
--   access to the DevEndpoint. For more information about tags in Glue,
--   see <a>Amazon Web Services Tags in Glue</a> in the developer guide.
--   
--   <a>$sel:endpointName:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_endpointName</a> - The name to be assigned to the
--   new <tt>DevEndpoint</tt>.
--   
--   <a>$sel:roleArn:CreateDevEndpoint'</a>,
--   <a>createDevEndpoint_roleArn</a> - The IAM role for the
--   <tt>DevEndpoint</tt>.
newCreateDevEndpoint :: Text -> Text -> CreateDevEndpoint

-- | <i>See:</i> <a>newCreateDevEndpointResponse</a> smart constructor.
data CreateDevEndpointResponse
CreateDevEndpointResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe WorkerType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Int -> CreateDevEndpointResponse

-- | Create a value of <a>CreateDevEndpointResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateDevEndpointResponse'</a>,
--   <a>createDevEndpointResponse_status</a> - The current status of the
--   new <tt>DevEndpoint</tt>.
--   
--   <a>$sel:failureReason:CreateDevEndpointResponse'</a>,
--   <a>createDevEndpointResponse_failureReason</a> - The reason for a
--   current failure in this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:endpointName:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_endpointName</a> - The name assigned to
--   the new <tt>DevEndpoint</tt>.
--   
--   <a>$sel:numberOfWorkers:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_numberOfWorkers</a> - The number of
--   workers of a defined <tt>workerType</tt> that are allocated to the
--   development endpoint.
--   
--   <a>$sel:extraPythonLibsS3Path:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_extraPythonLibsS3Path</a> - The paths to
--   one or more Python libraries in an S3 bucket that will be loaded in
--   your <tt>DevEndpoint</tt>.
--   
--   <a>$sel:securityGroupIds:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_securityGroupIds</a> - The security
--   groups assigned to the new <tt>DevEndpoint</tt>.
--   
--   <a>$sel:vpcId:CreateDevEndpointResponse'</a>,
--   <a>createDevEndpointResponse_vpcId</a> - The ID of the virtual private
--   cloud (VPC) used by this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:arguments:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_arguments</a> - The map of arguments used
--   to configure this <tt>DevEndpoint</tt>.
--   
--   Valid arguments are:
--   
--   <ul>
--   <li><pre>"--enable-glue-datacatalog": ""</pre></li>
--   </ul>
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
--   
--   <a>$sel:workerType:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_workerType</a> - The type of predefined
--   worker that is allocated to the development endpoint. May be a value
--   of Standard, G.1X, or G.2X.
--   
--   <a>$sel:securityConfiguration:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_securityConfiguration</a> - The name of
--   the <tt>SecurityConfiguration</tt> structure being used with this
--   <tt>DevEndpoint</tt>.
--   
--   <a>$sel:subnetId:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_subnetId</a> - The subnet ID assigned to
--   the new <tt>DevEndpoint</tt>.
--   
--   <a>$sel:glueVersion:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_glueVersion</a> - Glue version determines
--   the versions of Apache Spark and Python that Glue supports. The Python
--   version indicates the version supported for running your ETL scripts
--   on development endpoints.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   <a>$sel:numberOfNodes:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_numberOfNodes</a> - The number of Glue
--   Data Processing Units (DPUs) allocated to this DevEndpoint.
--   
--   <a>$sel:availabilityZone:CreateDevEndpointResponse'</a>,
--   <a>createDevEndpointResponse_availabilityZone</a> - The AWS
--   Availability Zone where this <tt>DevEndpoint</tt> is located.
--   
--   
--   <a>$sel:zeppelinRemoteSparkInterpreterPort:CreateDevEndpointResponse'</a>,
--   <a>createDevEndpointResponse_zeppelinRemoteSparkInterpreterPort</a> -
--   The Apache Zeppelin port for the remote Apache Spark interpreter.
--   
--   <a>$sel:extraJarsS3Path:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_extraJarsS3Path</a> - Path to one or more
--   Java <tt>.jar</tt> files in an S3 bucket that will be loaded in your
--   <tt>DevEndpoint</tt>.
--   
--   <a>$sel:createdTimestamp:CreateDevEndpointResponse'</a>,
--   <a>createDevEndpointResponse_createdTimestamp</a> - The point in time
--   at which this <tt>DevEndpoint</tt> was created.
--   
--   <a>$sel:yarnEndpointAddress:CreateDevEndpointResponse'</a>,
--   <a>createDevEndpointResponse_yarnEndpointAddress</a> - The address of
--   the YARN endpoint used by this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:roleArn:CreateDevEndpoint'</a>,
--   <a>createDevEndpointResponse_roleArn</a> - The Amazon Resource Name
--   (ARN) of the role assigned to the new <tt>DevEndpoint</tt>.
--   
--   <a>$sel:httpStatus:CreateDevEndpointResponse'</a>,
--   <a>createDevEndpointResponse_httpStatus</a> - The response's http
--   status code.
newCreateDevEndpointResponse :: Int -> CreateDevEndpointResponse

-- | <i>See:</i> <a>newGetMLTaskRuns</a> smart constructor.
data GetMLTaskRuns
GetMLTaskRuns' :: Maybe Text -> Maybe TaskRunSortCriteria -> Maybe TaskRunFilterCriteria -> Maybe Natural -> Text -> GetMLTaskRuns

-- | Create a value of <a>GetMLTaskRuns</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetMLTaskRuns'</a>, <a>getMLTaskRuns_nextToken</a> -
--   A token for pagination of the results. The default is empty.
--   
--   <a>$sel:sort:GetMLTaskRuns'</a>, <a>getMLTaskRuns_sort</a> - The
--   sorting criteria, in the <tt>TaskRunSortCriteria</tt> structure, for
--   the task run.
--   
--   <a>$sel:filter':GetMLTaskRuns'</a>, <a>getMLTaskRuns_filter</a> - The
--   filter criteria, in the <tt>TaskRunFilterCriteria</tt> structure, for
--   the task run.
--   
--   <a>$sel:maxResults:GetMLTaskRuns'</a>, <a>getMLTaskRuns_maxResults</a>
--   - The maximum number of results to return.
--   
--   <a>$sel:transformId:GetMLTaskRuns'</a>,
--   <a>getMLTaskRuns_transformId</a> - The unique identifier of the
--   machine learning transform.
newGetMLTaskRuns :: Text -> GetMLTaskRuns

-- | <i>See:</i> <a>newGetMLTaskRunsResponse</a> smart constructor.
data GetMLTaskRunsResponse
GetMLTaskRunsResponse' :: Maybe Text -> Maybe [TaskRun] -> Int -> GetMLTaskRunsResponse

-- | Create a value of <a>GetMLTaskRunsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetMLTaskRuns'</a>,
--   <a>getMLTaskRunsResponse_nextToken</a> - A pagination token, if more
--   results are available.
--   
--   <a>$sel:taskRuns:GetMLTaskRunsResponse'</a>,
--   <a>getMLTaskRunsResponse_taskRuns</a> - A list of task runs that are
--   associated with the transform.
--   
--   <a>$sel:httpStatus:GetMLTaskRunsResponse'</a>,
--   <a>getMLTaskRunsResponse_httpStatus</a> - The response's http status
--   code.
newGetMLTaskRunsResponse :: Int -> GetMLTaskRunsResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of the Glue resource to which to add the tags. For more
--   information about Glue resource ARNs, see the <a>Glue ARN string
--   pattern</a>.
--   
--   <a>$sel:tagsToAdd:TagResource'</a>, <a>tagResource_tagsToAdd</a> -
--   Tags to add to this resource.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newPutDataCatalogEncryptionSettings</a> smart
--   constructor.
data PutDataCatalogEncryptionSettings
PutDataCatalogEncryptionSettings' :: Maybe Text -> DataCatalogEncryptionSettings -> PutDataCatalogEncryptionSettings

-- | Create a value of <a>PutDataCatalogEncryptionSettings</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:PutDataCatalogEncryptionSettings'</a>,
--   <a>putDataCatalogEncryptionSettings_catalogId</a> - The ID of the Data
--   Catalog to set the security configuration for. If none is provided,
--   the Amazon Web Services account ID is used by default.
--   
--   
--   <a>$sel:dataCatalogEncryptionSettings:PutDataCatalogEncryptionSettings'</a>,
--   <a>putDataCatalogEncryptionSettings_dataCatalogEncryptionSettings</a>
--   - The security configuration to set.
newPutDataCatalogEncryptionSettings :: DataCatalogEncryptionSettings -> PutDataCatalogEncryptionSettings

-- | <i>See:</i> <a>newPutDataCatalogEncryptionSettingsResponse</a> smart
--   constructor.
data PutDataCatalogEncryptionSettingsResponse
PutDataCatalogEncryptionSettingsResponse' :: Int -> PutDataCatalogEncryptionSettingsResponse

-- | Create a value of <a>PutDataCatalogEncryptionSettingsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutDataCatalogEncryptionSettingsResponse'</a>,
--   <a>putDataCatalogEncryptionSettingsResponse_httpStatus</a> - The
--   response's http status code.
newPutDataCatalogEncryptionSettingsResponse :: Int -> PutDataCatalogEncryptionSettingsResponse

-- | <i>See:</i> <a>newGetMLTransforms</a> smart constructor.
data GetMLTransforms
GetMLTransforms' :: Maybe Text -> Maybe TransformSortCriteria -> Maybe TransformFilterCriteria -> Maybe Natural -> GetMLTransforms

-- | Create a value of <a>GetMLTransforms</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetMLTransforms'</a>,
--   <a>getMLTransforms_nextToken</a> - A paginated token to offset the
--   results.
--   
--   <a>$sel:sort:GetMLTransforms'</a>, <a>getMLTransforms_sort</a> - The
--   sorting criteria.
--   
--   <a>$sel:filter':GetMLTransforms'</a>, <a>getMLTransforms_filter</a> -
--   The filter transformation criteria.
--   
--   <a>$sel:maxResults:GetMLTransforms'</a>,
--   <a>getMLTransforms_maxResults</a> - The maximum number of results to
--   return.
newGetMLTransforms :: GetMLTransforms

-- | <i>See:</i> <a>newGetMLTransformsResponse</a> smart constructor.
data GetMLTransformsResponse
GetMLTransformsResponse' :: Maybe Text -> Int -> [MLTransform] -> GetMLTransformsResponse

-- | Create a value of <a>GetMLTransformsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetMLTransforms'</a>,
--   <a>getMLTransformsResponse_nextToken</a> - A pagination token, if more
--   results are available.
--   
--   <a>$sel:httpStatus:GetMLTransformsResponse'</a>,
--   <a>getMLTransformsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:transforms:GetMLTransformsResponse'</a>,
--   <a>getMLTransformsResponse_transforms</a> - A list of machine learning
--   transforms.
newGetMLTransformsResponse :: Int -> GetMLTransformsResponse

-- | <i>See:</i> <a>newUpdateSchema</a> smart constructor.
data UpdateSchema
UpdateSchema' :: Maybe SchemaVersionNumber -> Maybe Text -> Maybe Compatibility -> SchemaId -> UpdateSchema

-- | Create a value of <a>UpdateSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaVersionNumber:UpdateSchema'</a>,
--   <a>updateSchema_schemaVersionNumber</a> - Version number required for
--   check pointing. One of <tt>VersionNumber</tt> or
--   <tt>Compatibility</tt> has to be provided.
--   
--   <a>$sel:description:UpdateSchema'</a>, <a>updateSchema_description</a>
--   - The new description for the schema.
--   
--   <a>$sel:compatibility:UpdateSchema'</a>,
--   <a>updateSchema_compatibility</a> - The new compatibility setting for
--   the schema.
--   
--   <a>$sel:schemaId:UpdateSchema'</a>, <a>updateSchema_schemaId</a> -
--   This is a wrapper structure to contain schema identity fields. The
--   structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   One of <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be
--   provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. One of
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be provided.</li>
--   </ul>
newUpdateSchema :: SchemaId -> UpdateSchema

-- | <i>See:</i> <a>newUpdateSchemaResponse</a> smart constructor.
data UpdateSchemaResponse
UpdateSchemaResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateSchemaResponse

-- | Create a value of <a>UpdateSchemaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:UpdateSchemaResponse'</a>,
--   <a>updateSchemaResponse_registryName</a> - The name of the registry
--   that contains the schema.
--   
--   <a>$sel:schemaName:UpdateSchemaResponse'</a>,
--   <a>updateSchemaResponse_schemaName</a> - The name of the schema.
--   
--   <a>$sel:schemaArn:UpdateSchemaResponse'</a>,
--   <a>updateSchemaResponse_schemaArn</a> - The Amazon Resource Name (ARN)
--   of the schema.
--   
--   <a>$sel:httpStatus:UpdateSchemaResponse'</a>,
--   <a>updateSchemaResponse_httpStatus</a> - The response's http status
--   code.
newUpdateSchemaResponse :: Int -> UpdateSchemaResponse

-- | <i>See:</i> <a>newDeleteSchema</a> smart constructor.
data DeleteSchema
DeleteSchema' :: SchemaId -> DeleteSchema

-- | Create a value of <a>DeleteSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaId:DeleteSchema'</a>, <a>deleteSchema_schemaId</a> -
--   This is a wrapper structure that may contain the schema name and
--   Amazon Resource Name (ARN).
newDeleteSchema :: SchemaId -> DeleteSchema

-- | <i>See:</i> <a>newDeleteSchemaResponse</a> smart constructor.
data DeleteSchemaResponse
DeleteSchemaResponse' :: Maybe SchemaStatus -> Maybe Text -> Maybe Text -> Int -> DeleteSchemaResponse

-- | Create a value of <a>DeleteSchemaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DeleteSchemaResponse'</a>,
--   <a>deleteSchemaResponse_status</a> - The status of the schema.
--   
--   <a>$sel:schemaName:DeleteSchemaResponse'</a>,
--   <a>deleteSchemaResponse_schemaName</a> - The name of the schema being
--   deleted.
--   
--   <a>$sel:schemaArn:DeleteSchemaResponse'</a>,
--   <a>deleteSchemaResponse_schemaArn</a> - The Amazon Resource Name (ARN)
--   of the schema being deleted.
--   
--   <a>$sel:httpStatus:DeleteSchemaResponse'</a>,
--   <a>deleteSchemaResponse_httpStatus</a> - The response's http status
--   code.
newDeleteSchemaResponse :: Int -> DeleteSchemaResponse

-- | <i>See:</i> <a>newGetDatabase</a> smart constructor.
data GetDatabase
GetDatabase' :: Maybe Text -> Text -> GetDatabase

-- | Create a value of <a>GetDatabase</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetDatabase'</a>, <a>getDatabase_catalogId</a> - The
--   ID of the Data Catalog in which the database resides. If none is
--   provided, the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:name:GetDatabase'</a>, <a>getDatabase_name</a> - The name of
--   the database to retrieve. For Hive compatibility, this should be all
--   lowercase.
newGetDatabase :: Text -> GetDatabase

-- | <i>See:</i> <a>newGetDatabaseResponse</a> smart constructor.
data GetDatabaseResponse
GetDatabaseResponse' :: Maybe Database -> Int -> GetDatabaseResponse

-- | Create a value of <a>GetDatabaseResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:database:GetDatabaseResponse'</a>,
--   <a>getDatabaseResponse_database</a> - The definition of the specified
--   database in the Data Catalog.
--   
--   <a>$sel:httpStatus:GetDatabaseResponse'</a>,
--   <a>getDatabaseResponse_httpStatus</a> - The response's http status
--   code.
newGetDatabaseResponse :: Int -> GetDatabaseResponse

-- | <i>See:</i> <a>newDeleteColumnStatisticsForPartition</a> smart
--   constructor.
data DeleteColumnStatisticsForPartition
DeleteColumnStatisticsForPartition' :: Maybe Text -> Text -> Text -> [Text] -> Text -> DeleteColumnStatisticsForPartition

-- | Create a value of <a>DeleteColumnStatisticsForPartition</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DeleteColumnStatisticsForPartition'</a>,
--   <a>deleteColumnStatisticsForPartition_catalogId</a> - The ID of the
--   Data Catalog where the partitions in question reside. If none is
--   supplied, the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:DeleteColumnStatisticsForPartition'</a>,
--   <a>deleteColumnStatisticsForPartition_databaseName</a> - The name of
--   the catalog database where the partitions reside.
--   
--   <a>$sel:tableName:DeleteColumnStatisticsForPartition'</a>,
--   <a>deleteColumnStatisticsForPartition_tableName</a> - The name of the
--   partitions' table.
--   
--   <a>$sel:partitionValues:DeleteColumnStatisticsForPartition'</a>,
--   <a>deleteColumnStatisticsForPartition_partitionValues</a> - A list of
--   partition values identifying the partition.
--   
--   <a>$sel:columnName:DeleteColumnStatisticsForPartition'</a>,
--   <a>deleteColumnStatisticsForPartition_columnName</a> - Name of the
--   column.
newDeleteColumnStatisticsForPartition :: Text -> Text -> Text -> DeleteColumnStatisticsForPartition

-- | <i>See:</i> <a>newDeleteColumnStatisticsForPartitionResponse</a> smart
--   constructor.
data DeleteColumnStatisticsForPartitionResponse
DeleteColumnStatisticsForPartitionResponse' :: Int -> DeleteColumnStatisticsForPartitionResponse

-- | Create a value of <a>DeleteColumnStatisticsForPartitionResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteColumnStatisticsForPartitionResponse'</a>,
--   <a>deleteColumnStatisticsForPartitionResponse_httpStatus</a> - The
--   response's http status code.
newDeleteColumnStatisticsForPartitionResponse :: Int -> DeleteColumnStatisticsForPartitionResponse

-- | <i>See:</i> <a>newUpdateColumnStatisticsForPartition</a> smart
--   constructor.
data UpdateColumnStatisticsForPartition
UpdateColumnStatisticsForPartition' :: Maybe Text -> Text -> Text -> [Text] -> [ColumnStatistics] -> UpdateColumnStatisticsForPartition

-- | Create a value of <a>UpdateColumnStatisticsForPartition</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:UpdateColumnStatisticsForPartition'</a>,
--   <a>updateColumnStatisticsForPartition_catalogId</a> - The ID of the
--   Data Catalog where the partitions in question reside. If none is
--   supplied, the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:UpdateColumnStatisticsForPartition'</a>,
--   <a>updateColumnStatisticsForPartition_databaseName</a> - The name of
--   the catalog database where the partitions reside.
--   
--   <a>$sel:tableName:UpdateColumnStatisticsForPartition'</a>,
--   <a>updateColumnStatisticsForPartition_tableName</a> - The name of the
--   partitions' table.
--   
--   <a>$sel:partitionValues:UpdateColumnStatisticsForPartition'</a>,
--   <a>updateColumnStatisticsForPartition_partitionValues</a> - A list of
--   partition values identifying the partition.
--   
--   <a>$sel:columnStatisticsList:UpdateColumnStatisticsForPartition'</a>,
--   <a>updateColumnStatisticsForPartition_columnStatisticsList</a> - A
--   list of the column statistics.
newUpdateColumnStatisticsForPartition :: Text -> Text -> UpdateColumnStatisticsForPartition

-- | <i>See:</i> <a>newUpdateColumnStatisticsForPartitionResponse</a> smart
--   constructor.
data UpdateColumnStatisticsForPartitionResponse
UpdateColumnStatisticsForPartitionResponse' :: Maybe [ColumnStatisticsError] -> Int -> UpdateColumnStatisticsForPartitionResponse

-- | Create a value of <a>UpdateColumnStatisticsForPartitionResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:UpdateColumnStatisticsForPartitionResponse'</a>,
--   <a>updateColumnStatisticsForPartitionResponse_errors</a> - Error
--   occurred during updating column statistics data.
--   
--   <a>$sel:httpStatus:UpdateColumnStatisticsForPartitionResponse'</a>,
--   <a>updateColumnStatisticsForPartitionResponse_httpStatus</a> - The
--   response's http status code.
newUpdateColumnStatisticsForPartitionResponse :: Int -> UpdateColumnStatisticsForPartitionResponse

-- | <i>See:</i> <a>newCreateBlueprint</a> smart constructor.
data CreateBlueprint
CreateBlueprint' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> CreateBlueprint

-- | Create a value of <a>CreateBlueprint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateBlueprint'</a>,
--   <a>createBlueprint_description</a> - A description of the blueprint.
--   
--   <a>$sel:tags:CreateBlueprint'</a>, <a>createBlueprint_tags</a> - The
--   tags to be applied to this blueprint.
--   
--   <a>$sel:name:CreateBlueprint'</a>, <a>createBlueprint_name</a> - The
--   name of the blueprint.
--   
--   <a>$sel:blueprintLocation:CreateBlueprint'</a>,
--   <a>createBlueprint_blueprintLocation</a> - Specifies a path in Amazon
--   S3 where the blueprint is published.
newCreateBlueprint :: Text -> Text -> CreateBlueprint

-- | <i>See:</i> <a>newCreateBlueprintResponse</a> smart constructor.
data CreateBlueprintResponse
CreateBlueprintResponse' :: Maybe Text -> Int -> CreateBlueprintResponse

-- | Create a value of <a>CreateBlueprintResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateBlueprint'</a>, <a>createBlueprintResponse_name</a>
--   - Returns the name of the blueprint that was registered.
--   
--   <a>$sel:httpStatus:CreateBlueprintResponse'</a>,
--   <a>createBlueprintResponse_httpStatus</a> - The response's http status
--   code.
newCreateBlueprintResponse :: Int -> CreateBlueprintResponse

-- | <i>See:</i> <a>newGetMLTaskRun</a> smart constructor.
data GetMLTaskRun
GetMLTaskRun' :: Text -> Text -> GetMLTaskRun

-- | Create a value of <a>GetMLTaskRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transformId:GetMLTaskRun'</a>, <a>getMLTaskRun_transformId</a>
--   - The unique identifier of the machine learning transform.
--   
--   <a>$sel:taskRunId:GetMLTaskRun'</a>, <a>getMLTaskRun_taskRunId</a> -
--   The unique identifier of the task run.
newGetMLTaskRun :: Text -> Text -> GetMLTaskRun

-- | <i>See:</i> <a>newGetMLTaskRunResponse</a> smart constructor.
data GetMLTaskRunResponse
GetMLTaskRunResponse' :: Maybe POSIX -> Maybe TaskStatusType -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Int -> Maybe TaskRunProperties -> Maybe Text -> Maybe Text -> Int -> GetMLTaskRunResponse

-- | Create a value of <a>GetMLTaskRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completedOn:GetMLTaskRunResponse'</a>,
--   <a>getMLTaskRunResponse_completedOn</a> - The date and time when this
--   task run was completed.
--   
--   <a>$sel:status:GetMLTaskRunResponse'</a>,
--   <a>getMLTaskRunResponse_status</a> - The status for this task run.
--   
--   <a>$sel:lastModifiedOn:GetMLTaskRunResponse'</a>,
--   <a>getMLTaskRunResponse_lastModifiedOn</a> - The date and time when
--   this task run was last modified.
--   
--   <a>$sel:errorString:GetMLTaskRunResponse'</a>,
--   <a>getMLTaskRunResponse_errorString</a> - The error strings that are
--   associated with the task run.
--   
--   <a>$sel:startedOn:GetMLTaskRunResponse'</a>,
--   <a>getMLTaskRunResponse_startedOn</a> - The date and time when this
--   task run started.
--   
--   <a>$sel:logGroupName:GetMLTaskRunResponse'</a>,
--   <a>getMLTaskRunResponse_logGroupName</a> - The names of the log groups
--   that are associated with the task run.
--   
--   <a>$sel:executionTime:GetMLTaskRunResponse'</a>,
--   <a>getMLTaskRunResponse_executionTime</a> - The amount of time (in
--   seconds) that the task run consumed resources.
--   
--   <a>$sel:properties:GetMLTaskRunResponse'</a>,
--   <a>getMLTaskRunResponse_properties</a> - The list of properties that
--   are associated with the task run.
--   
--   <a>$sel:transformId:GetMLTaskRun'</a>,
--   <a>getMLTaskRunResponse_transformId</a> - The unique identifier of the
--   task run.
--   
--   <a>$sel:taskRunId:GetMLTaskRun'</a>,
--   <a>getMLTaskRunResponse_taskRunId</a> - The unique run identifier
--   associated with this run.
--   
--   <a>$sel:httpStatus:GetMLTaskRunResponse'</a>,
--   <a>getMLTaskRunResponse_httpStatus</a> - The response's http status
--   code.
newGetMLTaskRunResponse :: Int -> GetMLTaskRunResponse

-- | <i>See:</i> <a>newDeletePartition</a> smart constructor.
data DeletePartition
DeletePartition' :: Maybe Text -> Text -> Text -> [Text] -> DeletePartition

-- | Create a value of <a>DeletePartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DeletePartition'</a>,
--   <a>deletePartition_catalogId</a> - The ID of the Data Catalog where
--   the partition to be deleted resides. If none is provided, the Amazon
--   Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:DeletePartition'</a>,
--   <a>deletePartition_databaseName</a> - The name of the catalog database
--   in which the table in question resides.
--   
--   <a>$sel:tableName:DeletePartition'</a>,
--   <a>deletePartition_tableName</a> - The name of the table that contains
--   the partition to be deleted.
--   
--   <a>$sel:partitionValues:DeletePartition'</a>,
--   <a>deletePartition_partitionValues</a> - The values that define the
--   partition.
newDeletePartition :: Text -> Text -> DeletePartition

-- | <i>See:</i> <a>newDeletePartitionResponse</a> smart constructor.
data DeletePartitionResponse
DeletePartitionResponse' :: Int -> DeletePartitionResponse

-- | Create a value of <a>DeletePartitionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeletePartitionResponse'</a>,
--   <a>deletePartitionResponse_httpStatus</a> - The response's http status
--   code.
newDeletePartitionResponse :: Int -> DeletePartitionResponse

-- | <i>See:</i> <a>newUpdatePartition</a> smart constructor.
data UpdatePartition
UpdatePartition' :: Maybe Text -> Text -> Text -> [Text] -> PartitionInput -> UpdatePartition

-- | Create a value of <a>UpdatePartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:UpdatePartition'</a>,
--   <a>updatePartition_catalogId</a> - The ID of the Data Catalog where
--   the partition to be updated resides. If none is provided, the Amazon
--   Web Services account ID is used by default.
--   
--   <a>$sel:databaseName:UpdatePartition'</a>,
--   <a>updatePartition_databaseName</a> - The name of the catalog database
--   in which the table in question resides.
--   
--   <a>$sel:tableName:UpdatePartition'</a>,
--   <a>updatePartition_tableName</a> - The name of the table in which the
--   partition to be updated is located.
--   
--   <a>$sel:partitionValueList:UpdatePartition'</a>,
--   <a>updatePartition_partitionValueList</a> - List of partition key
--   values that define the partition to update.
--   
--   <a>$sel:partitionInput:UpdatePartition'</a>,
--   <a>updatePartition_partitionInput</a> - The new partition object to
--   update the partition to.
--   
--   The <tt>Values</tt> property can't be changed. If you want to change
--   the partition key values for a partition, delete and recreate the
--   partition.
newUpdatePartition :: Text -> Text -> PartitionInput -> UpdatePartition

-- | <i>See:</i> <a>newUpdatePartitionResponse</a> smart constructor.
data UpdatePartitionResponse
UpdatePartitionResponse' :: Int -> UpdatePartitionResponse

-- | Create a value of <a>UpdatePartitionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdatePartitionResponse'</a>,
--   <a>updatePartitionResponse_httpStatus</a> - The response's http status
--   code.
newUpdatePartitionResponse :: Int -> UpdatePartitionResponse

-- | <i>See:</i> <a>newGetMLTransform</a> smart constructor.
data GetMLTransform
GetMLTransform' :: Text -> GetMLTransform

-- | Create a value of <a>GetMLTransform</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transformId:GetMLTransform'</a>,
--   <a>getMLTransform_transformId</a> - The unique identifier of the
--   transform, generated at the time that the transform was created.
newGetMLTransform :: Text -> GetMLTransform

-- | <i>See:</i> <a>newGetMLTransformResponse</a> smart constructor.
data GetMLTransformResponse
GetMLTransformResponse' :: Maybe TransformStatusType -> Maybe Int -> Maybe POSIX -> Maybe Int -> Maybe WorkerType -> Maybe [GlueTable] -> Maybe Text -> Maybe EvaluationMetrics -> Maybe [SchemaColumn] -> Maybe Text -> Maybe Text -> Maybe TransformParameters -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe TransformEncryption -> Maybe Text -> Maybe POSIX -> Maybe Text -> Int -> GetMLTransformResponse

-- | Create a value of <a>GetMLTransformResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_status</a> - The last known status of the
--   transform (to indicate whether it can be used or not). One of
--   "NOT_READY", "READY", or "DELETING".
--   
--   <a>$sel:numberOfWorkers:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_numberOfWorkers</a> - The number of workers
--   of a defined <tt>workerType</tt> that are allocated when this task
--   runs.
--   
--   <a>$sel:lastModifiedOn:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_lastModifiedOn</a> - The date and time when
--   the transform was last modified.
--   
--   <a>$sel:labelCount:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_labelCount</a> - The number of labels
--   available for this transform.
--   
--   <a>$sel:workerType:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_workerType</a> - The type of predefined
--   worker that is allocated when this task runs. Accepts a value of
--   Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <a>$sel:inputRecordTables:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_inputRecordTables</a> - A list of Glue table
--   definitions used by the transform.
--   
--   <a>$sel:glueVersion:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_glueVersion</a> - This value determines
--   which version of Glue this machine learning transform is compatible
--   with. Glue 1.0 is recommended for most customers. If the value is not
--   set, the Glue compatibility defaults to Glue 0.9. For more
--   information, see <a>Glue Versions</a> in the developer guide.
--   
--   <a>$sel:evaluationMetrics:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_evaluationMetrics</a> - The latest
--   evaluation metrics.
--   
--   <a>$sel:schema:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_schema</a> - The <tt>Map&lt;Column,
--   Type&gt;</tt> object that represents the schema that this transform
--   accepts. Has an upper bound of 100 columns.
--   
--   <a>$sel:role':GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_role</a> - The name or Amazon Resource Name
--   (ARN) of the IAM role with the required permissions.
--   
--   <a>$sel:name:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_name</a> - The unique name given to the
--   transform when it was created.
--   
--   <a>$sel:parameters:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_parameters</a> - The configuration
--   parameters that are specific to the algorithm used.
--   
--   <a>$sel:maxRetries:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_maxRetries</a> - The maximum number of times
--   to retry a task for this transform after a task run fails.
--   
--   <a>$sel:maxCapacity:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_maxCapacity</a> - The number of Glue data
--   processing units (DPUs) that are allocated to task runs for this
--   transform. You can allocate from 2 to 100 DPUs; the default is 10. A
--   DPU is a relative measure of processing power that consists of 4 vCPUs
--   of compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
--   
--   <a>$sel:timeout:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_timeout</a> - The timeout for a task run for
--   this transform in minutes. This is the maximum time that a task run
--   for this transform can consume resources before it is terminated and
--   enters <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48
--   hours).
--   
--   <a>$sel:transformEncryption:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_transformEncryption</a> - The
--   encryption-at-rest settings of the transform that apply to accessing
--   user data. Machine learning transforms can access user data encrypted
--   in Amazon S3 using KMS.
--   
--   <a>$sel:description:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_description</a> - A description of the
--   transform.
--   
--   <a>$sel:createdOn:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_createdOn</a> - The date and time when the
--   transform was created.
--   
--   <a>$sel:transformId:GetMLTransform'</a>,
--   <a>getMLTransformResponse_transformId</a> - The unique identifier of
--   the transform, generated at the time that the transform was created.
--   
--   <a>$sel:httpStatus:GetMLTransformResponse'</a>,
--   <a>getMLTransformResponse_httpStatus</a> - The response's http status
--   code.
newGetMLTransformResponse :: Int -> GetMLTransformResponse

-- | <i>See:</i> <a>newCreateScript</a> smart constructor.
data CreateScript
CreateScript' :: Maybe [CodeGenEdge] -> Maybe Language -> Maybe [CodeGenNode] -> CreateScript

-- | Create a value of <a>CreateScript</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dagEdges:CreateScript'</a>, <a>createScript_dagEdges</a> - A
--   list of the edges in the DAG.
--   
--   <a>$sel:language:CreateScript'</a>, <a>createScript_language</a> - The
--   programming language of the resulting code from the DAG.
--   
--   <a>$sel:dagNodes:CreateScript'</a>, <a>createScript_dagNodes</a> - A
--   list of the nodes in the DAG.
newCreateScript :: CreateScript

-- | <i>See:</i> <a>newCreateScriptResponse</a> smart constructor.
data CreateScriptResponse
CreateScriptResponse' :: Maybe Text -> Maybe Text -> Int -> CreateScriptResponse

-- | Create a value of <a>CreateScriptResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pythonScript:CreateScriptResponse'</a>,
--   <a>createScriptResponse_pythonScript</a> - The Python script generated
--   from the DAG.
--   
--   <a>$sel:scalaCode:CreateScriptResponse'</a>,
--   <a>createScriptResponse_scalaCode</a> - The Scala code generated from
--   the DAG.
--   
--   <a>$sel:httpStatus:CreateScriptResponse'</a>,
--   <a>createScriptResponse_httpStatus</a> - The response's http status
--   code.
newCreateScriptResponse :: Int -> CreateScriptResponse

-- | <i>See:</i> <a>newPutResourcePolicy</a> smart constructor.
data PutResourcePolicy
PutResourcePolicy' :: Maybe ExistCondition -> Maybe Text -> Maybe Text -> Maybe EnableHybridValues -> Text -> PutResourcePolicy

-- | Create a value of <a>PutResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyExistsCondition:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_policyExistsCondition</a> - A value of
--   <tt>MUST_EXIST</tt> is used to update a policy. A value of
--   <tt>NOT_EXIST</tt> is used to create a new policy. If a value of
--   <tt>NONE</tt> or a null value is used, the call does not depend on the
--   existence of a policy.
--   
--   <a>$sel:policyHashCondition:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_policyHashCondition</a> - The hash value returned
--   when the previous policy was set using <tt>PutResourcePolicy</tt>. Its
--   purpose is to prevent concurrent modifications of a policy. Do not use
--   this parameter if no previous policy has been set.
--   
--   <a>$sel:resourceArn:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_resourceArn</a> - Do not use. For internal use
--   only.
--   
--   <a>$sel:enableHybrid:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_enableHybrid</a> - If <tt>'TRUE'</tt>, indicates
--   that you are using both methods to grant cross-account access to Data
--   Catalog resources:
--   
--   <ul>
--   <li>By directly updating the resource policy with
--   <tt>PutResourePolicy</tt></li>
--   <li>By using the <b>Grant permissions</b> command on the Amazon Web
--   Services Management Console.</li>
--   </ul>
--   
--   Must be set to <tt>'TRUE'</tt> if you have already used the Management
--   Console to grant cross-account access, otherwise the call fails.
--   Default is 'FALSE'.
--   
--   <a>$sel:policyInJson:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_policyInJson</a> - Contains the policy document
--   to set, in JSON format.
newPutResourcePolicy :: Text -> PutResourcePolicy

-- | <i>See:</i> <a>newPutResourcePolicyResponse</a> smart constructor.
data PutResourcePolicyResponse
PutResourcePolicyResponse' :: Maybe Text -> Int -> PutResourcePolicyResponse

-- | Create a value of <a>PutResourcePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyHash:PutResourcePolicyResponse'</a>,
--   <a>putResourcePolicyResponse_policyHash</a> - A hash of the policy
--   that has just been set. This must be included in a subsequent call
--   that overwrites or updates this policy.
--   
--   <a>$sel:httpStatus:PutResourcePolicyResponse'</a>,
--   <a>putResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newPutResourcePolicyResponse :: Int -> PutResourcePolicyResponse

-- | <i>See:</i> <a>newGetBlueprintRuns</a> smart constructor.
data GetBlueprintRuns
GetBlueprintRuns' :: Maybe Text -> Maybe Natural -> Text -> GetBlueprintRuns

-- | Create a value of <a>GetBlueprintRuns</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetBlueprintRuns'</a>,
--   <a>getBlueprintRuns_nextToken</a> - A continuation token, if this is a
--   continuation request.
--   
--   <a>$sel:maxResults:GetBlueprintRuns'</a>,
--   <a>getBlueprintRuns_maxResults</a> - The maximum size of a list to
--   return.
--   
--   <a>$sel:blueprintName:GetBlueprintRuns'</a>,
--   <a>getBlueprintRuns_blueprintName</a> - The name of the blueprint.
newGetBlueprintRuns :: Text -> GetBlueprintRuns

-- | <i>See:</i> <a>newGetBlueprintRunsResponse</a> smart constructor.
data GetBlueprintRunsResponse
GetBlueprintRunsResponse' :: Maybe [BlueprintRun] -> Maybe Text -> Int -> GetBlueprintRunsResponse

-- | Create a value of <a>GetBlueprintRunsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blueprintRuns:GetBlueprintRunsResponse'</a>,
--   <a>getBlueprintRunsResponse_blueprintRuns</a> - Returns a list of
--   <tt>BlueprintRun</tt> objects.
--   
--   <a>$sel:nextToken:GetBlueprintRuns'</a>,
--   <a>getBlueprintRunsResponse_nextToken</a> - A continuation token, if
--   not all blueprint runs have been returned.
--   
--   <a>$sel:httpStatus:GetBlueprintRunsResponse'</a>,
--   <a>getBlueprintRunsResponse_httpStatus</a> - The response's http
--   status code.
newGetBlueprintRunsResponse :: Int -> GetBlueprintRunsResponse

-- | <i>See:</i> <a>newGetSecurityConfigurations</a> smart constructor.
data GetSecurityConfigurations
GetSecurityConfigurations' :: Maybe Text -> Maybe Natural -> GetSecurityConfigurations

-- | Create a value of <a>GetSecurityConfigurations</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetSecurityConfigurations'</a>,
--   <a>getSecurityConfigurations_nextToken</a> - A continuation token, if
--   this is a continuation call.
--   
--   <a>$sel:maxResults:GetSecurityConfigurations'</a>,
--   <a>getSecurityConfigurations_maxResults</a> - The maximum number of
--   results to return.
newGetSecurityConfigurations :: GetSecurityConfigurations

-- | <i>See:</i> <a>newGetSecurityConfigurationsResponse</a> smart
--   constructor.
data GetSecurityConfigurationsResponse
GetSecurityConfigurationsResponse' :: Maybe [SecurityConfiguration] -> Maybe Text -> Int -> GetSecurityConfigurationsResponse

-- | Create a value of <a>GetSecurityConfigurationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityConfigurations:GetSecurityConfigurationsResponse'</a>,
--   <a>getSecurityConfigurationsResponse_securityConfigurations</a> - A
--   list of security configurations.
--   
--   <a>$sel:nextToken:GetSecurityConfigurations'</a>,
--   <a>getSecurityConfigurationsResponse_nextToken</a> - A continuation
--   token, if there are more security configurations to return.
--   
--   <a>$sel:httpStatus:GetSecurityConfigurationsResponse'</a>,
--   <a>getSecurityConfigurationsResponse_httpStatus</a> - The response's
--   http status code.
newGetSecurityConfigurationsResponse :: Int -> GetSecurityConfigurationsResponse

-- | <i>See:</i> <a>newDeleteResourcePolicy</a> smart constructor.
data DeleteResourcePolicy
DeleteResourcePolicy' :: Maybe Text -> Maybe Text -> DeleteResourcePolicy

-- | Create a value of <a>DeleteResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyHashCondition:DeleteResourcePolicy'</a>,
--   <a>deleteResourcePolicy_policyHashCondition</a> - The hash value
--   returned when this policy was set.
--   
--   <a>$sel:resourceArn:DeleteResourcePolicy'</a>,
--   <a>deleteResourcePolicy_resourceArn</a> - The ARN of the Glue resource
--   for the resource policy to be deleted.
newDeleteResourcePolicy :: DeleteResourcePolicy

-- | <i>See:</i> <a>newDeleteResourcePolicyResponse</a> smart constructor.
data DeleteResourcePolicyResponse
DeleteResourcePolicyResponse' :: Int -> DeleteResourcePolicyResponse

-- | Create a value of <a>DeleteResourcePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteResourcePolicyResponse'</a>,
--   <a>deleteResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newDeleteResourcePolicyResponse :: Int -> DeleteResourcePolicyResponse

-- | <i>See:</i> <a>newGetConnections</a> smart constructor.
data GetConnections
GetConnections' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe GetConnectionsFilter -> Maybe Natural -> GetConnections

-- | Create a value of <a>GetConnections</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetConnections'</a>, <a>getConnections_catalogId</a>
--   - The ID of the Data Catalog in which the connections reside. If none
--   is provided, the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:nextToken:GetConnections'</a>, <a>getConnections_nextToken</a>
--   - A continuation token, if this is a continuation call.
--   
--   <a>$sel:hidePassword:GetConnections'</a>,
--   <a>getConnections_hidePassword</a> - Allows you to retrieve the
--   connection metadata without returning the password. For instance, the
--   AWS Glue console uses this flag to retrieve the connection, and does
--   not display the password. Set this parameter when the caller might not
--   have permission to use the KMS key to decrypt the password, but it
--   does have permission to access the rest of the connection properties.
--   
--   <a>$sel:filter':GetConnections'</a>, <a>getConnections_filter</a> - A
--   filter that controls which connections are returned.
--   
--   <a>$sel:maxResults:GetConnections'</a>,
--   <a>getConnections_maxResults</a> - The maximum number of connections
--   to return in one response.
newGetConnections :: GetConnections

-- | <i>See:</i> <a>newGetConnectionsResponse</a> smart constructor.
data GetConnectionsResponse
GetConnectionsResponse' :: Maybe Text -> Maybe [Connection] -> Int -> GetConnectionsResponse

-- | Create a value of <a>GetConnectionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetConnections'</a>,
--   <a>getConnectionsResponse_nextToken</a> - A continuation token, if the
--   list of connections returned does not include the last of the filtered
--   connections.
--   
--   <a>$sel:connectionList:GetConnectionsResponse'</a>,
--   <a>getConnectionsResponse_connectionList</a> - A list of requested
--   connection definitions.
--   
--   <a>$sel:httpStatus:GetConnectionsResponse'</a>,
--   <a>getConnectionsResponse_httpStatus</a> - The response's http status
--   code.
newGetConnectionsResponse :: Int -> GetConnectionsResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource from which to remove the tags.
--   
--   <a>$sel:tagsToRemove:UntagResource'</a>,
--   <a>untagResource_tagsToRemove</a> - Tags to remove from this resource.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newGetSchemaVersionsDiff</a> smart constructor.
data GetSchemaVersionsDiff
GetSchemaVersionsDiff' :: SchemaId -> SchemaVersionNumber -> SchemaVersionNumber -> SchemaDiffType -> GetSchemaVersionsDiff

-- | Create a value of <a>GetSchemaVersionsDiff</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaId:GetSchemaVersionsDiff'</a>,
--   <a>getSchemaVersionsDiff_schemaId</a> - This is a wrapper structure to
--   contain schema identity fields. The structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   One of <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be
--   provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. One of
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be provided.</li>
--   </ul>
--   
--   <a>$sel:firstSchemaVersionNumber:GetSchemaVersionsDiff'</a>,
--   <a>getSchemaVersionsDiff_firstSchemaVersionNumber</a> - The first of
--   the two schema versions to be compared.
--   
--   <a>$sel:secondSchemaVersionNumber:GetSchemaVersionsDiff'</a>,
--   <a>getSchemaVersionsDiff_secondSchemaVersionNumber</a> - The second of
--   the two schema versions to be compared.
--   
--   <a>$sel:schemaDiffType:GetSchemaVersionsDiff'</a>,
--   <a>getSchemaVersionsDiff_schemaDiffType</a> - Refers to
--   <tt>SYNTAX_DIFF</tt>, which is the currently supported diff type.
newGetSchemaVersionsDiff :: SchemaId -> SchemaVersionNumber -> SchemaVersionNumber -> SchemaDiffType -> GetSchemaVersionsDiff

-- | <i>See:</i> <a>newGetSchemaVersionsDiffResponse</a> smart constructor.
data GetSchemaVersionsDiffResponse
GetSchemaVersionsDiffResponse' :: Maybe Text -> Int -> GetSchemaVersionsDiffResponse

-- | Create a value of <a>GetSchemaVersionsDiffResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:diff:GetSchemaVersionsDiffResponse'</a>,
--   <a>getSchemaVersionsDiffResponse_diff</a> - The difference between
--   schemas as a string in JsonPatch format.
--   
--   <a>$sel:httpStatus:GetSchemaVersionsDiffResponse'</a>,
--   <a>getSchemaVersionsDiffResponse_httpStatus</a> - The response's http
--   status code.
newGetSchemaVersionsDiffResponse :: Int -> GetSchemaVersionsDiffResponse

-- | <i>See:</i> <a>newSearchTables</a> smart constructor.
data SearchTables
SearchTables' :: Maybe ResourceShareType -> Maybe Text -> Maybe [PropertyPredicate] -> Maybe Text -> Maybe [SortCriterion] -> Maybe Text -> Maybe Natural -> SearchTables

-- | Create a value of <a>SearchTables</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceShareType:SearchTables'</a>,
--   <a>searchTables_resourceShareType</a> - Allows you to specify that you
--   want to search the tables shared with your account. The allowable
--   values are <tt>FOREIGN</tt> or <tt>ALL</tt>.
--   
--   <ul>
--   <li>If set to <tt>FOREIGN</tt>, will search the tables shared with
--   your account.</li>
--   <li>If set to <tt>ALL</tt>, will search the tables shared with your
--   account, as well as the tables in yor local account.</li>
--   </ul>
--   
--   <a>$sel:searchText:SearchTables'</a>, <a>searchTables_searchText</a> -
--   A string used for a text search.
--   
--   Specifying a value in quotes filters based on an exact match to the
--   value.
--   
--   <a>$sel:filters:SearchTables'</a>, <a>searchTables_filters</a> - A
--   list of key-value pairs, and a comparator used to filter the search
--   results. Returns all entities matching the predicate.
--   
--   The <tt>Comparator</tt> member of the <tt>PropertyPredicate</tt>
--   struct is used only for time fields, and can be omitted for other
--   field types. Also, when comparing string values, such as when
--   <tt>Key=Name</tt>, a fuzzy match algorithm is used. The <tt>Key</tt>
--   field (for example, the value of the <tt>Name</tt> field) is split on
--   certain punctuation characters, for example, -, :, #, etc. into
--   tokens. Then each token is exact-match compared with the
--   <tt>Value</tt> member of <tt>PropertyPredicate</tt>. For example, if
--   <tt>Key=Name</tt> and <tt>Value=link</tt>, tables named
--   <tt>customer-link</tt> and <tt>xx-link-yy</tt> are returned, but
--   <tt>xxlinkyy</tt> is not returned.
--   
--   <a>$sel:catalogId:SearchTables'</a>, <a>searchTables_catalogId</a> - A
--   unique identifier, consisting of <tt> account_id </tt>.
--   
--   <a>$sel:sortCriteria:SearchTables'</a>,
--   <a>searchTables_sortCriteria</a> - A list of criteria for sorting the
--   results by a field name, in an ascending or descending order.
--   
--   <a>$sel:nextToken:SearchTables'</a>, <a>searchTables_nextToken</a> - A
--   continuation token, included if this is a continuation call.
--   
--   <a>$sel:maxResults:SearchTables'</a>, <a>searchTables_maxResults</a> -
--   The maximum number of tables to return in a single response.
newSearchTables :: SearchTables

-- | <i>See:</i> <a>newSearchTablesResponse</a> smart constructor.
data SearchTablesResponse
SearchTablesResponse' :: Maybe [Table] -> Maybe Text -> Int -> SearchTablesResponse

-- | Create a value of <a>SearchTablesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tableList:SearchTablesResponse'</a>,
--   <a>searchTablesResponse_tableList</a> - A list of the requested
--   <tt>Table</tt> objects. The <tt>SearchTables</tt> response returns
--   only the tables that you have access to.
--   
--   <a>$sel:nextToken:SearchTables'</a>,
--   <a>searchTablesResponse_nextToken</a> - A continuation token, present
--   if the current list segment is not the last.
--   
--   <a>$sel:httpStatus:SearchTablesResponse'</a>,
--   <a>searchTablesResponse_httpStatus</a> - The response's http status
--   code.
newSearchTablesResponse :: Int -> SearchTablesResponse

-- | <i>See:</i> <a>newGetTrigger</a> smart constructor.
data GetTrigger
GetTrigger' :: Text -> GetTrigger

-- | Create a value of <a>GetTrigger</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetTrigger'</a>, <a>getTrigger_name</a> - The name of the
--   trigger to retrieve.
newGetTrigger :: Text -> GetTrigger

-- | <i>See:</i> <a>newGetTriggerResponse</a> smart constructor.
data GetTriggerResponse
GetTriggerResponse' :: Maybe Trigger -> Int -> GetTriggerResponse

-- | Create a value of <a>GetTriggerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trigger:GetTriggerResponse'</a>,
--   <a>getTriggerResponse_trigger</a> - The requested trigger definition.
--   
--   <a>$sel:httpStatus:GetTriggerResponse'</a>,
--   <a>getTriggerResponse_httpStatus</a> - The response's http status
--   code.
newGetTriggerResponse :: Int -> GetTriggerResponse

-- | <i>See:</i> <a>newBatchGetJobs</a> smart constructor.
data BatchGetJobs
BatchGetJobs' :: [Text] -> BatchGetJobs

-- | Create a value of <a>BatchGetJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobNames:BatchGetJobs'</a>, <a>batchGetJobs_jobNames</a> - A
--   list of job names, which might be the names returned from the
--   <tt>ListJobs</tt> operation.
newBatchGetJobs :: BatchGetJobs

-- | <i>See:</i> <a>newBatchGetJobsResponse</a> smart constructor.
data BatchGetJobsResponse
BatchGetJobsResponse' :: Maybe [Job] -> Maybe [Text] -> Int -> BatchGetJobsResponse

-- | Create a value of <a>BatchGetJobsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobs:BatchGetJobsResponse'</a>,
--   <a>batchGetJobsResponse_jobs</a> - A list of job definitions.
--   
--   <a>$sel:jobsNotFound:BatchGetJobsResponse'</a>,
--   <a>batchGetJobsResponse_jobsNotFound</a> - A list of names of jobs not
--   found.
--   
--   <a>$sel:httpStatus:BatchGetJobsResponse'</a>,
--   <a>batchGetJobsResponse_httpStatus</a> - The response's http status
--   code.
newBatchGetJobsResponse :: Int -> BatchGetJobsResponse

-- | <i>See:</i> <a>newImportCatalogToGlue</a> smart constructor.
data ImportCatalogToGlue
ImportCatalogToGlue' :: Maybe Text -> ImportCatalogToGlue

-- | Create a value of <a>ImportCatalogToGlue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:ImportCatalogToGlue'</a>,
--   <a>importCatalogToGlue_catalogId</a> - The ID of the catalog to
--   import. Currently, this should be the Amazon Web Services account ID.
newImportCatalogToGlue :: ImportCatalogToGlue

-- | <i>See:</i> <a>newImportCatalogToGlueResponse</a> smart constructor.
data ImportCatalogToGlueResponse
ImportCatalogToGlueResponse' :: Int -> ImportCatalogToGlueResponse

-- | Create a value of <a>ImportCatalogToGlueResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ImportCatalogToGlueResponse'</a>,
--   <a>importCatalogToGlueResponse_httpStatus</a> - The response's http
--   status code.
newImportCatalogToGlueResponse :: Int -> ImportCatalogToGlueResponse

-- | <i>See:</i> <a>newDeleteClassifier</a> smart constructor.
data DeleteClassifier
DeleteClassifier' :: Text -> DeleteClassifier

-- | Create a value of <a>DeleteClassifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteClassifier'</a>, <a>deleteClassifier_name</a> -
--   Name of the classifier to remove.
newDeleteClassifier :: Text -> DeleteClassifier

-- | <i>See:</i> <a>newDeleteClassifierResponse</a> smart constructor.
data DeleteClassifierResponse
DeleteClassifierResponse' :: Int -> DeleteClassifierResponse

-- | Create a value of <a>DeleteClassifierResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteClassifierResponse'</a>,
--   <a>deleteClassifierResponse_httpStatus</a> - The response's http
--   status code.
newDeleteClassifierResponse :: Int -> DeleteClassifierResponse

-- | <i>See:</i> <a>newUpdateClassifier</a> smart constructor.
data UpdateClassifier
UpdateClassifier' :: Maybe UpdateGrokClassifierRequest -> Maybe UpdateXMLClassifierRequest -> Maybe UpdateCsvClassifierRequest -> Maybe UpdateJsonClassifierRequest -> UpdateClassifier

-- | Create a value of <a>UpdateClassifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:grokClassifier:UpdateClassifier'</a>,
--   <a>updateClassifier_grokClassifier</a> - A <tt>GrokClassifier</tt>
--   object with updated fields.
--   
--   <a>$sel:xMLClassifier:UpdateClassifier'</a>,
--   <a>updateClassifier_xMLClassifier</a> - An <tt>XMLClassifier</tt>
--   object with updated fields.
--   
--   <a>$sel:csvClassifier:UpdateClassifier'</a>,
--   <a>updateClassifier_csvClassifier</a> - A <tt>CsvClassifier</tt>
--   object with updated fields.
--   
--   <a>$sel:jsonClassifier:UpdateClassifier'</a>,
--   <a>updateClassifier_jsonClassifier</a> - A <tt>JsonClassifier</tt>
--   object with updated fields.
newUpdateClassifier :: UpdateClassifier

-- | <i>See:</i> <a>newUpdateClassifierResponse</a> smart constructor.
data UpdateClassifierResponse
UpdateClassifierResponse' :: Int -> UpdateClassifierResponse

-- | Create a value of <a>UpdateClassifierResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateClassifierResponse'</a>,
--   <a>updateClassifierResponse_httpStatus</a> - The response's http
--   status code.
newUpdateClassifierResponse :: Int -> UpdateClassifierResponse

-- | <i>See:</i> <a>newStartJobRun</a> smart constructor.
data StartJobRun
StartJobRun' :: Maybe Int -> Maybe NotificationProperty -> Maybe (HashMap Text Text) -> Maybe WorkerType -> Maybe Text -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe Text -> Text -> StartJobRun

-- | Create a value of <a>StartJobRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfWorkers:StartJobRun'</a>,
--   <a>startJobRun_numberOfWorkers</a> - The number of workers of a
--   defined <tt>workerType</tt> that are allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
--   
--   <a>$sel:notificationProperty:StartJobRun'</a>,
--   <a>startJobRun_notificationProperty</a> - Specifies configuration
--   properties of a job run notification.
--   
--   <a>$sel:arguments:StartJobRun'</a>, <a>startJobRun_arguments</a> - The
--   job arguments specifically for this run. For this job run, they
--   replace the default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
--   
--   <a>$sel:workerType:StartJobRun'</a>, <a>startJobRun_workerType</a> -
--   The type of predefined worker that is allocated when a job runs.
--   Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <a>$sel:securityConfiguration:StartJobRun'</a>,
--   <a>startJobRun_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this job run.
--   
--   <a>$sel:allocatedCapacity:StartJobRun'</a>,
--   <a>startJobRun_allocatedCapacity</a> - This field is deprecated. Use
--   <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) to allocate to this
--   JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU
--   is a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
--   
--   <a>$sel:maxCapacity:StartJobRun'</a>, <a>startJobRun_maxCapacity</a> -
--   The number of Glue data processing units (DPUs) that can be allocated
--   when this job runs. A DPU is a relative measure of processing power
--   that consists of 4 vCPUs of compute capacity and 16 GB of memory. For
--   more information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job, or an Apache Spark ETL
--   job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl"), you can allocate from 2 to 100
--   DPUs. The default is 10 DPUs. This job type cannot have a fractional
--   DPU allocation.</li>
--   </ul>
--   
--   <a>$sel:timeout:StartJobRun'</a>, <a>startJobRun_timeout</a> - The
--   <tt>JobRun</tt> timeout in minutes. This is the maximum time that a
--   job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
--   
--   <a>$sel:jobRunId:StartJobRun'</a>, <a>startJobRun_jobRunId</a> - The
--   ID of a previous <tt>JobRun</tt> to retry.
--   
--   <a>$sel:jobName:StartJobRun'</a>, <a>startJobRun_jobName</a> - The
--   name of the job definition to use.
newStartJobRun :: Text -> StartJobRun

-- | <i>See:</i> <a>newStartJobRunResponse</a> smart constructor.
data StartJobRunResponse
StartJobRunResponse' :: Maybe Text -> Int -> StartJobRunResponse

-- | Create a value of <a>StartJobRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobRunId:StartJobRun'</a>, <a>startJobRunResponse_jobRunId</a>
--   - The ID assigned to this job run.
--   
--   <a>$sel:httpStatus:StartJobRunResponse'</a>,
--   <a>startJobRunResponse_httpStatus</a> - The response's http status
--   code.
newStartJobRunResponse :: Int -> StartJobRunResponse

-- | <i>See:</i> <a>newDeleteBlueprint</a> smart constructor.
data DeleteBlueprint
DeleteBlueprint' :: Text -> DeleteBlueprint

-- | Create a value of <a>DeleteBlueprint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteBlueprint'</a>, <a>deleteBlueprint_name</a> - The
--   name of the blueprint to delete.
newDeleteBlueprint :: Text -> DeleteBlueprint

-- | <i>See:</i> <a>newDeleteBlueprintResponse</a> smart constructor.
data DeleteBlueprintResponse
DeleteBlueprintResponse' :: Maybe Text -> Int -> DeleteBlueprintResponse

-- | Create a value of <a>DeleteBlueprintResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteBlueprint'</a>, <a>deleteBlueprintResponse_name</a>
--   - Returns the name of the blueprint that was deleted.
--   
--   <a>$sel:httpStatus:DeleteBlueprintResponse'</a>,
--   <a>deleteBlueprintResponse_httpStatus</a> - The response's http status
--   code.
newDeleteBlueprintResponse :: Int -> DeleteBlueprintResponse

-- | <i>See:</i> <a>newUpdateBlueprint</a> smart constructor.
data UpdateBlueprint
UpdateBlueprint' :: Maybe Text -> Text -> Text -> UpdateBlueprint

-- | Create a value of <a>UpdateBlueprint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:UpdateBlueprint'</a>,
--   <a>updateBlueprint_description</a> - A description of the blueprint.
--   
--   <a>$sel:name:UpdateBlueprint'</a>, <a>updateBlueprint_name</a> - The
--   name of the blueprint.
--   
--   <a>$sel:blueprintLocation:UpdateBlueprint'</a>,
--   <a>updateBlueprint_blueprintLocation</a> - Specifies a path in Amazon
--   S3 where the blueprint is published.
newUpdateBlueprint :: Text -> Text -> UpdateBlueprint

-- | <i>See:</i> <a>newUpdateBlueprintResponse</a> smart constructor.
data UpdateBlueprintResponse
UpdateBlueprintResponse' :: Maybe Text -> Int -> UpdateBlueprintResponse

-- | Create a value of <a>UpdateBlueprintResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateBlueprint'</a>, <a>updateBlueprintResponse_name</a>
--   - Returns the name of the blueprint that was updated.
--   
--   <a>$sel:httpStatus:UpdateBlueprintResponse'</a>,
--   <a>updateBlueprintResponse_httpStatus</a> - The response's http status
--   code.
newUpdateBlueprintResponse :: Int -> UpdateBlueprintResponse

-- | <i>See:</i> <a>newListBlueprints</a> smart constructor.
data ListBlueprints
ListBlueprints' :: Maybe Text -> Maybe Natural -> Maybe (HashMap Text Text) -> ListBlueprints

-- | Create a value of <a>ListBlueprints</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListBlueprints'</a>, <a>listBlueprints_nextToken</a>
--   - A continuation token, if this is a continuation request.
--   
--   <a>$sel:maxResults:ListBlueprints'</a>,
--   <a>listBlueprints_maxResults</a> - The maximum size of a list to
--   return.
--   
--   <a>$sel:tags:ListBlueprints'</a>, <a>listBlueprints_tags</a> - Filters
--   the list by an Amazon Web Services resource tag.
newListBlueprints :: ListBlueprints

-- | <i>See:</i> <a>newListBlueprintsResponse</a> smart constructor.
data ListBlueprintsResponse
ListBlueprintsResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListBlueprintsResponse

-- | Create a value of <a>ListBlueprintsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blueprints:ListBlueprintsResponse'</a>,
--   <a>listBlueprintsResponse_blueprints</a> - List of names of blueprints
--   in the account.
--   
--   <a>$sel:nextToken:ListBlueprints'</a>,
--   <a>listBlueprintsResponse_nextToken</a> - A continuation token, if not
--   all blueprint names have been returned.
--   
--   <a>$sel:httpStatus:ListBlueprintsResponse'</a>,
--   <a>listBlueprintsResponse_httpStatus</a> - The response's http status
--   code.
newListBlueprintsResponse :: Int -> ListBlueprintsResponse

-- | <i>See:</i> <a>newCreatePartition</a> smart constructor.
data CreatePartition
CreatePartition' :: Maybe Text -> Text -> Text -> PartitionInput -> CreatePartition

-- | Create a value of <a>CreatePartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:CreatePartition'</a>,
--   <a>createPartition_catalogId</a> - The Amazon Web Services account ID
--   of the catalog in which the partition is to be created.
--   
--   <a>$sel:databaseName:CreatePartition'</a>,
--   <a>createPartition_databaseName</a> - The name of the metadata
--   database in which the partition is to be created.
--   
--   <a>$sel:tableName:CreatePartition'</a>,
--   <a>createPartition_tableName</a> - The name of the metadata table in
--   which the partition is to be created.
--   
--   <a>$sel:partitionInput:CreatePartition'</a>,
--   <a>createPartition_partitionInput</a> - A <tt>PartitionInput</tt>
--   structure defining the partition to be created.
newCreatePartition :: Text -> Text -> PartitionInput -> CreatePartition

-- | <i>See:</i> <a>newCreatePartitionResponse</a> smart constructor.
data CreatePartitionResponse
CreatePartitionResponse' :: Int -> CreatePartitionResponse

-- | Create a value of <a>CreatePartitionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreatePartitionResponse'</a>,
--   <a>createPartitionResponse_httpStatus</a> - The response's http status
--   code.
newCreatePartitionResponse :: Int -> CreatePartitionResponse

-- | <i>See:</i> <a>newBatchGetTriggers</a> smart constructor.
data BatchGetTriggers
BatchGetTriggers' :: [Text] -> BatchGetTriggers

-- | Create a value of <a>BatchGetTriggers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggerNames:BatchGetTriggers'</a>,
--   <a>batchGetTriggers_triggerNames</a> - A list of trigger names, which
--   may be the names returned from the <tt>ListTriggers</tt> operation.
newBatchGetTriggers :: BatchGetTriggers

-- | <i>See:</i> <a>newBatchGetTriggersResponse</a> smart constructor.
data BatchGetTriggersResponse
BatchGetTriggersResponse' :: Maybe [Text] -> Maybe [Trigger] -> Int -> BatchGetTriggersResponse

-- | Create a value of <a>BatchGetTriggersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggersNotFound:BatchGetTriggersResponse'</a>,
--   <a>batchGetTriggersResponse_triggersNotFound</a> - A list of names of
--   triggers not found.
--   
--   <a>$sel:triggers:BatchGetTriggersResponse'</a>,
--   <a>batchGetTriggersResponse_triggers</a> - A list of trigger
--   definitions.
--   
--   <a>$sel:httpStatus:BatchGetTriggersResponse'</a>,
--   <a>batchGetTriggersResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetTriggersResponse :: Int -> BatchGetTriggersResponse

-- | <i>See:</i> <a>newGetBlueprint</a> smart constructor.
data GetBlueprint
GetBlueprint' :: Maybe Bool -> Maybe Bool -> Text -> GetBlueprint

-- | Create a value of <a>GetBlueprint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeParameterSpec:GetBlueprint'</a>,
--   <a>getBlueprint_includeParameterSpec</a> - Specifies whether or not to
--   include the parameter specification.
--   
--   <a>$sel:includeBlueprint:GetBlueprint'</a>,
--   <a>getBlueprint_includeBlueprint</a> - Specifies whether or not to
--   include the blueprint in the response.
--   
--   <a>$sel:name:GetBlueprint'</a>, <a>getBlueprint_name</a> - The name of
--   the blueprint.
newGetBlueprint :: Text -> GetBlueprint

-- | <i>See:</i> <a>newGetBlueprintResponse</a> smart constructor.
data GetBlueprintResponse
GetBlueprintResponse' :: Maybe Blueprint -> Int -> GetBlueprintResponse

-- | Create a value of <a>GetBlueprintResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blueprint:GetBlueprintResponse'</a>,
--   <a>getBlueprintResponse_blueprint</a> - Returns a <tt>Blueprint</tt>
--   object.
--   
--   <a>$sel:httpStatus:GetBlueprintResponse'</a>,
--   <a>getBlueprintResponse_httpStatus</a> - The response's http status
--   code.
newGetBlueprintResponse :: Int -> GetBlueprintResponse

-- | <i>See:</i> <a>newStopCrawlerSchedule</a> smart constructor.
data StopCrawlerSchedule
StopCrawlerSchedule' :: Text -> StopCrawlerSchedule

-- | Create a value of <a>StopCrawlerSchedule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawlerName:StopCrawlerSchedule'</a>,
--   <a>stopCrawlerSchedule_crawlerName</a> - Name of the crawler whose
--   schedule state to set.
newStopCrawlerSchedule :: Text -> StopCrawlerSchedule

-- | <i>See:</i> <a>newStopCrawlerScheduleResponse</a> smart constructor.
data StopCrawlerScheduleResponse
StopCrawlerScheduleResponse' :: Int -> StopCrawlerScheduleResponse

-- | Create a value of <a>StopCrawlerScheduleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopCrawlerScheduleResponse'</a>,
--   <a>stopCrawlerScheduleResponse_httpStatus</a> - The response's http
--   status code.
newStopCrawlerScheduleResponse :: Int -> StopCrawlerScheduleResponse

-- | <i>See:</i> <a>newGetSchemaByDefinition</a> smart constructor.
data GetSchemaByDefinition
GetSchemaByDefinition' :: SchemaId -> Text -> GetSchemaByDefinition

-- | Create a value of <a>GetSchemaByDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaId:GetSchemaByDefinition'</a>,
--   <a>getSchemaByDefinition_schemaId</a> - This is a wrapper structure to
--   contain schema identity fields. The structure contains:
--   
--   <ul>
--   <li>SchemaId$SchemaArn: The Amazon Resource Name (ARN) of the schema.
--   One of <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be
--   provided.</li>
--   <li>SchemaId$SchemaName: The name of the schema. One of
--   <tt>SchemaArn</tt> or <tt>SchemaName</tt> has to be provided.</li>
--   </ul>
--   
--   <a>$sel:schemaDefinition:GetSchemaByDefinition'</a>,
--   <a>getSchemaByDefinition_schemaDefinition</a> - The definition of the
--   schema for which schema details are required.
newGetSchemaByDefinition :: SchemaId -> Text -> GetSchemaByDefinition

-- | <i>See:</i> <a>newGetSchemaByDefinitionResponse</a> smart constructor.
data GetSchemaByDefinitionResponse
GetSchemaByDefinitionResponse' :: Maybe SchemaVersionStatus -> Maybe Text -> Maybe DataFormat -> Maybe Text -> Maybe Text -> Int -> GetSchemaByDefinitionResponse

-- | Create a value of <a>GetSchemaByDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetSchemaByDefinitionResponse'</a>,
--   <a>getSchemaByDefinitionResponse_status</a> - The status of the schema
--   version.
--   
--   <a>$sel:createdTime:GetSchemaByDefinitionResponse'</a>,
--   <a>getSchemaByDefinitionResponse_createdTime</a> - The date and time
--   the schema was created.
--   
--   <a>$sel:dataFormat:GetSchemaByDefinitionResponse'</a>,
--   <a>getSchemaByDefinitionResponse_dataFormat</a> - The data format of
--   the schema definition. Currently only <tt>AVRO</tt> and <tt>JSON</tt>
--   are supported.
--   
--   <a>$sel:schemaVersionId:GetSchemaByDefinitionResponse'</a>,
--   <a>getSchemaByDefinitionResponse_schemaVersionId</a> - The schema ID
--   of the schema version.
--   
--   <a>$sel:schemaArn:GetSchemaByDefinitionResponse'</a>,
--   <a>getSchemaByDefinitionResponse_schemaArn</a> - The Amazon Resource
--   Name (ARN) of the schema.
--   
--   <a>$sel:httpStatus:GetSchemaByDefinitionResponse'</a>,
--   <a>getSchemaByDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newGetSchemaByDefinitionResponse :: Int -> GetSchemaByDefinitionResponse

-- | <i>See:</i> <a>newCreateDatabase</a> smart constructor.
data CreateDatabase
CreateDatabase' :: Maybe Text -> DatabaseInput -> CreateDatabase

-- | Create a value of <a>CreateDatabase</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:CreateDatabase'</a>, <a>createDatabase_catalogId</a>
--   - The ID of the Data Catalog in which to create the database. If none
--   is provided, the Amazon Web Services account ID is used by default.
--   
--   <a>$sel:databaseInput:CreateDatabase'</a>,
--   <a>createDatabase_databaseInput</a> - The metadata for the database.
newCreateDatabase :: DatabaseInput -> CreateDatabase

-- | <i>See:</i> <a>newCreateDatabaseResponse</a> smart constructor.
data CreateDatabaseResponse
CreateDatabaseResponse' :: Int -> CreateDatabaseResponse

-- | Create a value of <a>CreateDatabaseResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateDatabaseResponse'</a>,
--   <a>createDatabaseResponse_httpStatus</a> - The response's http status
--   code.
newCreateDatabaseResponse :: Int -> CreateDatabaseResponse

-- | <i>See:</i> <a>newGetTableVersions</a> smart constructor.
data GetTableVersions
GetTableVersions' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> Text -> GetTableVersions

-- | Create a value of <a>GetTableVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GetTableVersions'</a>,
--   <a>getTableVersions_catalogId</a> - The ID of the Data Catalog where
--   the tables reside. If none is provided, the Amazon Web Services
--   account ID is used by default.
--   
--   <a>$sel:nextToken:GetTableVersions'</a>,
--   <a>getTableVersions_nextToken</a> - A continuation token, if this is
--   not the first call.
--   
--   <a>$sel:maxResults:GetTableVersions'</a>,
--   <a>getTableVersions_maxResults</a> - The maximum number of table
--   versions to return in one response.
--   
--   <a>$sel:databaseName:GetTableVersions'</a>,
--   <a>getTableVersions_databaseName</a> - The database in the catalog in
--   which the table resides. For Hive compatibility, this name is entirely
--   lowercase.
--   
--   <a>$sel:tableName:GetTableVersions'</a>,
--   <a>getTableVersions_tableName</a> - The name of the table. For Hive
--   compatibility, this name is entirely lowercase.
newGetTableVersions :: Text -> Text -> GetTableVersions

-- | <i>See:</i> <a>newGetTableVersionsResponse</a> smart constructor.
data GetTableVersionsResponse
GetTableVersionsResponse' :: Maybe [TableVersion] -> Maybe Text -> Int -> GetTableVersionsResponse

-- | Create a value of <a>GetTableVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tableVersions:GetTableVersionsResponse'</a>,
--   <a>getTableVersionsResponse_tableVersions</a> - A list of strings
--   identifying available versions of the specified table.
--   
--   <a>$sel:nextToken:GetTableVersions'</a>,
--   <a>getTableVersionsResponse_nextToken</a> - A continuation token, if
--   the list of available versions does not include the last one.
--   
--   <a>$sel:httpStatus:GetTableVersionsResponse'</a>,
--   <a>getTableVersionsResponse_httpStatus</a> - The response's http
--   status code.
newGetTableVersionsResponse :: Int -> GetTableVersionsResponse

-- | <i>See:</i> <a>newCreateMLTransform</a> smart constructor.
data CreateMLTransform
CreateMLTransform' :: Maybe Int -> Maybe WorkerType -> Maybe Text -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe TransformEncryption -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> [GlueTable] -> TransformParameters -> Text -> CreateMLTransform

-- | Create a value of <a>CreateMLTransform</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfWorkers:CreateMLTransform'</a>,
--   <a>createMLTransform_numberOfWorkers</a> - The number of workers of a
--   defined <tt>workerType</tt> that are allocated when this task runs.
--   
--   If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).
--   
--   <a>$sel:workerType:CreateMLTransform'</a>,
--   <a>createMLTransform_workerType</a> - The type of predefined worker
--   that is allocated when this task runs. Accepts a value of Standard,
--   G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
--   
--   <a>$sel:glueVersion:CreateMLTransform'</a>,
--   <a>createMLTransform_glueVersion</a> - This value determines which
--   version of Glue this machine learning transform is compatible with.
--   Glue 1.0 is recommended for most customers. If the value is not set,
--   the Glue compatibility defaults to Glue 0.9. For more information, see
--   <a>Glue Versions</a> in the developer guide.
--   
--   <a>$sel:maxRetries:CreateMLTransform'</a>,
--   <a>createMLTransform_maxRetries</a> - The maximum number of times to
--   retry a task for this transform after a task run fails.
--   
--   <a>$sel:maxCapacity:CreateMLTransform'</a>,
--   <a>createMLTransform_maxCapacity</a> - The number of Glue data
--   processing units (DPUs) that are allocated to task runs for this
--   transform. You can allocate from 2 to 100 DPUs; the default is 10. A
--   DPU is a relative measure of processing power that consists of 4 vCPUs
--   of compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
--   
--   <a>$sel:timeout:CreateMLTransform'</a>,
--   <a>createMLTransform_timeout</a> - The timeout of the task run for
--   this transform in minutes. This is the maximum time that a task run
--   for this transform can consume resources before it is terminated and
--   enters <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48
--   hours).
--   
--   <a>$sel:transformEncryption:CreateMLTransform'</a>,
--   <a>createMLTransform_transformEncryption</a> - The encryption-at-rest
--   settings of the transform that apply to accessing user data. Machine
--   learning transforms can access user data encrypted in Amazon S3 using
--   KMS.
--   
--   <a>$sel:description:CreateMLTransform'</a>,
--   <a>createMLTransform_description</a> - A description of the machine
--   learning transform that is being defined. The default is an empty
--   string.
--   
--   <a>$sel:tags:CreateMLTransform'</a>, <a>createMLTransform_tags</a> -
--   The tags to use with this machine learning transform. You may use tags
--   to limit access to the machine learning transform. For more
--   information about tags in Glue, see <a>Amazon Web Services Tags in
--   Glue</a> in the developer guide.
--   
--   <a>$sel:name:CreateMLTransform'</a>, <a>createMLTransform_name</a> -
--   The unique name that you give the transform when you create it.
--   
--   <a>$sel:inputRecordTables:CreateMLTransform'</a>,
--   <a>createMLTransform_inputRecordTables</a> - A list of Glue table
--   definitions used by the transform.
--   
--   <a>$sel:parameters:CreateMLTransform'</a>,
--   <a>createMLTransform_parameters</a> - The algorithmic parameters that
--   are specific to the transform type used. Conditionally dependent on
--   the transform type.
--   
--   <a>$sel:role':CreateMLTransform'</a>, <a>createMLTransform_role</a> -
--   The name or Amazon Resource Name (ARN) of the IAM role with the
--   required permissions. The required permissions include both Glue
--   service role permissions to Glue resources, and Amazon S3 permissions
--   required by the transform.
--   
--   <ul>
--   <li>This role needs Glue service role permissions to allow access to
--   resources in Glue. See <a>Attach a Policy to IAM Users That Access
--   Glue</a>.</li>
--   <li>This role needs permission to your Amazon Simple Storage Service
--   (Amazon S3) sources, targets, temporary directory, scripts, and any
--   libraries used by the task run for this transform.</li>
--   </ul>
newCreateMLTransform :: Text -> TransformParameters -> Text -> CreateMLTransform

-- | <i>See:</i> <a>newCreateMLTransformResponse</a> smart constructor.
data CreateMLTransformResponse
CreateMLTransformResponse' :: Maybe Text -> Int -> CreateMLTransformResponse

-- | Create a value of <a>CreateMLTransformResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:transformId:CreateMLTransformResponse'</a>,
--   <a>createMLTransformResponse_transformId</a> - A unique identifier
--   that is generated for the transform.
--   
--   <a>$sel:httpStatus:CreateMLTransformResponse'</a>,
--   <a>createMLTransformResponse_httpStatus</a> - The response's http
--   status code.
newCreateMLTransformResponse :: Int -> CreateMLTransformResponse

-- | <i>See:</i> <a>newDeleteSchemaVersions</a> smart constructor.
data DeleteSchemaVersions
DeleteSchemaVersions' :: SchemaId -> Text -> DeleteSchemaVersions

-- | Create a value of <a>DeleteSchemaVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaId:DeleteSchemaVersions'</a>,
--   <a>deleteSchemaVersions_schemaId</a> - This is a wrapper structure
--   that may contain the schema name and Amazon Resource Name (ARN).
--   
--   <a>$sel:versions:DeleteSchemaVersions'</a>,
--   <a>deleteSchemaVersions_versions</a> - A version range may be supplied
--   which may be of the format:
--   
--   <ul>
--   <li>a single version number, 5</li>
--   <li>a range, 5-8 : deletes versions 5, 6, 7, 8</li>
--   </ul>
newDeleteSchemaVersions :: SchemaId -> Text -> DeleteSchemaVersions

-- | <i>See:</i> <a>newDeleteSchemaVersionsResponse</a> smart constructor.
data DeleteSchemaVersionsResponse
DeleteSchemaVersionsResponse' :: Maybe [SchemaVersionErrorItem] -> Int -> DeleteSchemaVersionsResponse

-- | Create a value of <a>DeleteSchemaVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaVersionErrors:DeleteSchemaVersionsResponse'</a>,
--   <a>deleteSchemaVersionsResponse_schemaVersionErrors</a> - A list of
--   <tt>SchemaVersionErrorItem</tt> objects, each containing an error and
--   schema version.
--   
--   <a>$sel:httpStatus:DeleteSchemaVersionsResponse'</a>,
--   <a>deleteSchemaVersionsResponse_httpStatus</a> - The response's http
--   status code.
newDeleteSchemaVersionsResponse :: Int -> DeleteSchemaVersionsResponse

-- | <i>See:</i> <a>newDeleteTrigger</a> smart constructor.
data DeleteTrigger
DeleteTrigger' :: Text -> DeleteTrigger

-- | Create a value of <a>DeleteTrigger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteTrigger'</a>, <a>deleteTrigger_name</a> - The name
--   of the trigger to delete.
newDeleteTrigger :: Text -> DeleteTrigger

-- | <i>See:</i> <a>newDeleteTriggerResponse</a> smart constructor.
data DeleteTriggerResponse
DeleteTriggerResponse' :: Maybe Text -> Int -> DeleteTriggerResponse

-- | Create a value of <a>DeleteTriggerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteTrigger'</a>, <a>deleteTriggerResponse_name</a> -
--   The name of the trigger that was deleted.
--   
--   <a>$sel:httpStatus:DeleteTriggerResponse'</a>,
--   <a>deleteTriggerResponse_httpStatus</a> - The response's http status
--   code.
newDeleteTriggerResponse :: Int -> DeleteTriggerResponse

-- | <i>See:</i> <a>newUpdateTrigger</a> smart constructor.
data UpdateTrigger
UpdateTrigger' :: Text -> TriggerUpdate -> UpdateTrigger

-- | Create a value of <a>UpdateTrigger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateTrigger'</a>, <a>updateTrigger_name</a> - The name
--   of the trigger to update.
--   
--   <a>$sel:triggerUpdate:UpdateTrigger'</a>,
--   <a>updateTrigger_triggerUpdate</a> - The new values with which to
--   update the trigger.
newUpdateTrigger :: Text -> TriggerUpdate -> UpdateTrigger

-- | <i>See:</i> <a>newUpdateTriggerResponse</a> smart constructor.
data UpdateTriggerResponse
UpdateTriggerResponse' :: Maybe Trigger -> Int -> UpdateTriggerResponse

-- | Create a value of <a>UpdateTriggerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trigger:UpdateTriggerResponse'</a>,
--   <a>updateTriggerResponse_trigger</a> - The resulting trigger
--   definition.
--   
--   <a>$sel:httpStatus:UpdateTriggerResponse'</a>,
--   <a>updateTriggerResponse_httpStatus</a> - The response's http status
--   code.
newUpdateTriggerResponse :: Int -> UpdateTriggerResponse
newtype BackfillErrorCode
BackfillErrorCode' :: Text -> BackfillErrorCode
[fromBackfillErrorCode] :: BackfillErrorCode -> Text
pattern BackfillErrorCode_ENCRYPTED_PARTITION_ERROR :: BackfillErrorCode
pattern BackfillErrorCode_INTERNAL_ERROR :: BackfillErrorCode
pattern BackfillErrorCode_INVALID_PARTITION_TYPE_DATA_ERROR :: BackfillErrorCode
pattern BackfillErrorCode_MISSING_PARTITION_VALUE_ERROR :: BackfillErrorCode
pattern BackfillErrorCode_UNSUPPORTED_PARTITION_CHARACTER_ERROR :: BackfillErrorCode
newtype BlueprintRunState
BlueprintRunState' :: Text -> BlueprintRunState
[fromBlueprintRunState] :: BlueprintRunState -> Text
pattern BlueprintRunState_FAILED :: BlueprintRunState
pattern BlueprintRunState_ROLLING_BACK :: BlueprintRunState
pattern BlueprintRunState_RUNNING :: BlueprintRunState
pattern BlueprintRunState_SUCCEEDED :: BlueprintRunState
newtype BlueprintStatus
BlueprintStatus' :: Text -> BlueprintStatus
[fromBlueprintStatus] :: BlueprintStatus -> Text
pattern BlueprintStatus_ACTIVE :: BlueprintStatus
pattern BlueprintStatus_CREATING :: BlueprintStatus
pattern BlueprintStatus_FAILED :: BlueprintStatus
pattern BlueprintStatus_UPDATING :: BlueprintStatus
newtype CatalogEncryptionMode
CatalogEncryptionMode' :: Text -> CatalogEncryptionMode
[fromCatalogEncryptionMode] :: CatalogEncryptionMode -> Text
pattern CatalogEncryptionMode_DISABLED :: CatalogEncryptionMode
pattern CatalogEncryptionMode_SSE_KMS :: CatalogEncryptionMode
newtype CloudWatchEncryptionMode
CloudWatchEncryptionMode' :: Text -> CloudWatchEncryptionMode
[fromCloudWatchEncryptionMode] :: CloudWatchEncryptionMode -> Text
pattern CloudWatchEncryptionMode_DISABLED :: CloudWatchEncryptionMode
pattern CloudWatchEncryptionMode_SSE_KMS :: CloudWatchEncryptionMode
newtype ColumnStatisticsType
ColumnStatisticsType' :: Text -> ColumnStatisticsType
[fromColumnStatisticsType] :: ColumnStatisticsType -> Text
pattern ColumnStatisticsType_BINARY :: ColumnStatisticsType
pattern ColumnStatisticsType_BOOLEAN :: ColumnStatisticsType
pattern ColumnStatisticsType_DATE :: ColumnStatisticsType
pattern ColumnStatisticsType_DECIMAL :: ColumnStatisticsType
pattern ColumnStatisticsType_DOUBLE :: ColumnStatisticsType
pattern ColumnStatisticsType_LONG :: ColumnStatisticsType
pattern ColumnStatisticsType_STRING :: ColumnStatisticsType
newtype Comparator
Comparator' :: Text -> Comparator
[fromComparator] :: Comparator -> Text
pattern Comparator_EQUALS :: Comparator
pattern Comparator_GREATER_THAN :: Comparator
pattern Comparator_GREATER_THAN_EQUALS :: Comparator
pattern Comparator_LESS_THAN :: Comparator
pattern Comparator_LESS_THAN_EQUALS :: Comparator
newtype Compatibility
Compatibility' :: Text -> Compatibility
[fromCompatibility] :: Compatibility -> Text
pattern Compatibility_BACKWARD :: Compatibility
pattern Compatibility_BACKWARD_ALL :: Compatibility
pattern Compatibility_DISABLED :: Compatibility
pattern Compatibility_FORWARD :: Compatibility
pattern Compatibility_FORWARD_ALL :: Compatibility
pattern Compatibility_FULL :: Compatibility
pattern Compatibility_FULL_ALL :: Compatibility
pattern Compatibility_NONE :: Compatibility
newtype ConnectionPropertyKey
ConnectionPropertyKey' :: Text -> ConnectionPropertyKey
[fromConnectionPropertyKey] :: ConnectionPropertyKey -> Text
pattern ConnectionPropertyKey_CONFIG_FILES :: ConnectionPropertyKey
pattern ConnectionPropertyKey_CONNECTION_URL :: ConnectionPropertyKey
pattern ConnectionPropertyKey_CONNECTOR_CLASS_NAME :: ConnectionPropertyKey
pattern ConnectionPropertyKey_CONNECTOR_TYPE :: ConnectionPropertyKey
pattern ConnectionPropertyKey_CONNECTOR_URL :: ConnectionPropertyKey
pattern ConnectionPropertyKey_CUSTOM_JDBC_CERT :: ConnectionPropertyKey
pattern ConnectionPropertyKey_CUSTOM_JDBC_CERT_STRING :: ConnectionPropertyKey
pattern ConnectionPropertyKey_ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD :: ConnectionPropertyKey
pattern ConnectionPropertyKey_ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD :: ConnectionPropertyKey
pattern ConnectionPropertyKey_ENCRYPTED_PASSWORD :: ConnectionPropertyKey
pattern ConnectionPropertyKey_HOST :: ConnectionPropertyKey
pattern ConnectionPropertyKey_INSTANCE_ID :: ConnectionPropertyKey
pattern ConnectionPropertyKey_JDBC_CONNECTION_URL :: ConnectionPropertyKey
pattern ConnectionPropertyKey_JDBC_DRIVER_CLASS_NAME :: ConnectionPropertyKey
pattern ConnectionPropertyKey_JDBC_DRIVER_JAR_URI :: ConnectionPropertyKey
pattern ConnectionPropertyKey_JDBC_ENFORCE_SSL :: ConnectionPropertyKey
pattern ConnectionPropertyKey_JDBC_ENGINE :: ConnectionPropertyKey
pattern ConnectionPropertyKey_JDBC_ENGINE_VERSION :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_BOOTSTRAP_SERVERS :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_CLIENT_KEYSTORE :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_CLIENT_KEYSTORE_PASSWORD :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_CLIENT_KEY_PASSWORD :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_CUSTOM_CERT :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_SKIP_CUSTOM_CERT_VALIDATION :: ConnectionPropertyKey
pattern ConnectionPropertyKey_KAFKA_SSL_ENABLED :: ConnectionPropertyKey
pattern ConnectionPropertyKey_PASSWORD :: ConnectionPropertyKey
pattern ConnectionPropertyKey_PORT :: ConnectionPropertyKey
pattern ConnectionPropertyKey_SECRET_ID :: ConnectionPropertyKey
pattern ConnectionPropertyKey_SKIP_CUSTOM_JDBC_CERT_VALIDATION :: ConnectionPropertyKey
pattern ConnectionPropertyKey_USERNAME :: ConnectionPropertyKey
newtype ConnectionType
ConnectionType' :: Text -> ConnectionType
[fromConnectionType] :: ConnectionType -> Text
pattern ConnectionType_CUSTOM :: ConnectionType
pattern ConnectionType_JDBC :: ConnectionType
pattern ConnectionType_KAFKA :: ConnectionType
pattern ConnectionType_MARKETPLACE :: ConnectionType
pattern ConnectionType_MONGODB :: ConnectionType
pattern ConnectionType_NETWORK :: ConnectionType
pattern ConnectionType_SFTP :: ConnectionType
newtype CrawlState
CrawlState' :: Text -> CrawlState
[fromCrawlState] :: CrawlState -> Text
pattern CrawlState_CANCELLED :: CrawlState
pattern CrawlState_CANCELLING :: CrawlState
pattern CrawlState_FAILED :: CrawlState
pattern CrawlState_RUNNING :: CrawlState
pattern CrawlState_SUCCEEDED :: CrawlState
newtype CrawlerLineageSettings
CrawlerLineageSettings' :: Text -> CrawlerLineageSettings
[fromCrawlerLineageSettings] :: CrawlerLineageSettings -> Text
pattern CrawlerLineageSettings_DISABLE :: CrawlerLineageSettings
pattern CrawlerLineageSettings_ENABLE :: CrawlerLineageSettings
newtype CrawlerState
CrawlerState' :: Text -> CrawlerState
[fromCrawlerState] :: CrawlerState -> Text
pattern CrawlerState_READY :: CrawlerState
pattern CrawlerState_RUNNING :: CrawlerState
pattern CrawlerState_STOPPING :: CrawlerState
newtype CsvHeaderOption
CsvHeaderOption' :: Text -> CsvHeaderOption
[fromCsvHeaderOption] :: CsvHeaderOption -> Text
pattern CsvHeaderOption_ABSENT :: CsvHeaderOption
pattern CsvHeaderOption_PRESENT :: CsvHeaderOption
pattern CsvHeaderOption_UNKNOWN :: CsvHeaderOption
newtype DataFormat
DataFormat' :: Text -> DataFormat
[fromDataFormat] :: DataFormat -> Text
pattern DataFormat_AVRO :: DataFormat
pattern DataFormat_JSON :: DataFormat
newtype DeleteBehavior
DeleteBehavior' :: Text -> DeleteBehavior
[fromDeleteBehavior] :: DeleteBehavior -> Text
pattern DeleteBehavior_DELETE_FROM_DATABASE :: DeleteBehavior
pattern DeleteBehavior_DEPRECATE_IN_DATABASE :: DeleteBehavior
pattern DeleteBehavior_LOG :: DeleteBehavior
newtype EnableHybridValues
EnableHybridValues' :: Text -> EnableHybridValues
[fromEnableHybridValues] :: EnableHybridValues -> Text
pattern EnableHybridValues_FALSE :: EnableHybridValues
pattern EnableHybridValues_TRUE :: EnableHybridValues
newtype ExistCondition
ExistCondition' :: Text -> ExistCondition
[fromExistCondition] :: ExistCondition -> Text
pattern ExistCondition_MUST_EXIST :: ExistCondition
pattern ExistCondition_NONE :: ExistCondition
pattern ExistCondition_NOT_EXIST :: ExistCondition
newtype JobBookmarksEncryptionMode
JobBookmarksEncryptionMode' :: Text -> JobBookmarksEncryptionMode
[fromJobBookmarksEncryptionMode] :: JobBookmarksEncryptionMode -> Text
pattern JobBookmarksEncryptionMode_CSE_KMS :: JobBookmarksEncryptionMode
pattern JobBookmarksEncryptionMode_DISABLED :: JobBookmarksEncryptionMode
newtype JobRunState
JobRunState' :: Text -> JobRunState
[fromJobRunState] :: JobRunState -> Text
pattern JobRunState_FAILED :: JobRunState
pattern JobRunState_RUNNING :: JobRunState
pattern JobRunState_STARTING :: JobRunState
pattern JobRunState_STOPPED :: JobRunState
pattern JobRunState_STOPPING :: JobRunState
pattern JobRunState_SUCCEEDED :: JobRunState
pattern JobRunState_TIMEOUT :: JobRunState
newtype Language
Language' :: Text -> Language
[fromLanguage] :: Language -> Text
pattern Language_PYTHON :: Language
pattern Language_SCALA :: Language
newtype LastCrawlStatus
LastCrawlStatus' :: Text -> LastCrawlStatus
[fromLastCrawlStatus] :: LastCrawlStatus -> Text
pattern LastCrawlStatus_CANCELLED :: LastCrawlStatus
pattern LastCrawlStatus_FAILED :: LastCrawlStatus
pattern LastCrawlStatus_SUCCEEDED :: LastCrawlStatus
newtype Logical
Logical' :: Text -> Logical
[fromLogical] :: Logical -> Text
pattern Logical_AND :: Logical
pattern Logical_ANY :: Logical
newtype LogicalOperator
LogicalOperator' :: Text -> LogicalOperator
[fromLogicalOperator] :: LogicalOperator -> Text
pattern LogicalOperator_EQUALS :: LogicalOperator
newtype MLUserDataEncryptionModeString
MLUserDataEncryptionModeString' :: Text -> MLUserDataEncryptionModeString
[fromMLUserDataEncryptionModeString] :: MLUserDataEncryptionModeString -> Text
pattern MLUserDataEncryptionModeString_DISABLED :: MLUserDataEncryptionModeString
pattern MLUserDataEncryptionModeString_SSE_KMS :: MLUserDataEncryptionModeString
newtype NodeType
NodeType' :: Text -> NodeType
[fromNodeType] :: NodeType -> Text
pattern NodeType_CRAWLER :: NodeType
pattern NodeType_JOB :: NodeType
pattern NodeType_TRIGGER :: NodeType
newtype PartitionIndexStatus
PartitionIndexStatus' :: Text -> PartitionIndexStatus
[fromPartitionIndexStatus] :: PartitionIndexStatus -> Text
pattern PartitionIndexStatus_ACTIVE :: PartitionIndexStatus
pattern PartitionIndexStatus_CREATING :: PartitionIndexStatus
pattern PartitionIndexStatus_DELETING :: PartitionIndexStatus
pattern PartitionIndexStatus_FAILED :: PartitionIndexStatus
newtype Permission
Permission' :: Text -> Permission
[fromPermission] :: Permission -> Text
pattern Permission_ALL :: Permission
pattern Permission_ALTER :: Permission
pattern Permission_CREATE_DATABASE :: Permission
pattern Permission_CREATE_TABLE :: Permission
pattern Permission_DATA_LOCATION_ACCESS :: Permission
pattern Permission_DELETE :: Permission
pattern Permission_DROP :: Permission
pattern Permission_INSERT :: Permission
pattern Permission_SELECT :: Permission
newtype PrincipalType
PrincipalType' :: Text -> PrincipalType
[fromPrincipalType] :: PrincipalType -> Text
pattern PrincipalType_GROUP :: PrincipalType
pattern PrincipalType_ROLE :: PrincipalType
pattern PrincipalType_USER :: PrincipalType
newtype RecrawlBehavior
RecrawlBehavior' :: Text -> RecrawlBehavior
[fromRecrawlBehavior] :: RecrawlBehavior -> Text
pattern RecrawlBehavior_CRAWL_EVENT_MODE :: RecrawlBehavior
pattern RecrawlBehavior_CRAWL_EVERYTHING :: RecrawlBehavior
pattern RecrawlBehavior_CRAWL_NEW_FOLDERS_ONLY :: RecrawlBehavior
newtype RegistryStatus
RegistryStatus' :: Text -> RegistryStatus
[fromRegistryStatus] :: RegistryStatus -> Text
pattern RegistryStatus_AVAILABLE :: RegistryStatus
pattern RegistryStatus_DELETING :: RegistryStatus
newtype ResourceShareType
ResourceShareType' :: Text -> ResourceShareType
[fromResourceShareType] :: ResourceShareType -> Text
pattern ResourceShareType_ALL :: ResourceShareType
pattern ResourceShareType_FOREIGN :: ResourceShareType
newtype ResourceType
ResourceType' :: Text -> ResourceType
[fromResourceType] :: ResourceType -> Text
pattern ResourceType_ARCHIVE :: ResourceType
pattern ResourceType_FILE :: ResourceType
pattern ResourceType_JAR :: ResourceType
newtype S3EncryptionMode
S3EncryptionMode' :: Text -> S3EncryptionMode
[fromS3EncryptionMode] :: S3EncryptionMode -> Text
pattern S3EncryptionMode_DISABLED :: S3EncryptionMode
pattern S3EncryptionMode_SSE_KMS :: S3EncryptionMode
pattern S3EncryptionMode_SSE_S3 :: S3EncryptionMode
newtype ScheduleState
ScheduleState' :: Text -> ScheduleState
[fromScheduleState] :: ScheduleState -> Text
pattern ScheduleState_NOT_SCHEDULED :: ScheduleState
pattern ScheduleState_SCHEDULED :: ScheduleState
pattern ScheduleState_TRANSITIONING :: ScheduleState
newtype SchemaDiffType
SchemaDiffType' :: Text -> SchemaDiffType
[fromSchemaDiffType] :: SchemaDiffType -> Text
pattern SchemaDiffType_SYNTAX_DIFF :: SchemaDiffType
newtype SchemaStatus
SchemaStatus' :: Text -> SchemaStatus
[fromSchemaStatus] :: SchemaStatus -> Text
pattern SchemaStatus_AVAILABLE :: SchemaStatus
pattern SchemaStatus_DELETING :: SchemaStatus
pattern SchemaStatus_PENDING :: SchemaStatus
newtype SchemaVersionStatus
SchemaVersionStatus' :: Text -> SchemaVersionStatus
[fromSchemaVersionStatus] :: SchemaVersionStatus -> Text
pattern SchemaVersionStatus_AVAILABLE :: SchemaVersionStatus
pattern SchemaVersionStatus_DELETING :: SchemaVersionStatus
pattern SchemaVersionStatus_FAILURE :: SchemaVersionStatus
pattern SchemaVersionStatus_PENDING :: SchemaVersionStatus
newtype Sort
Sort' :: Text -> Sort
[fromSort] :: Sort -> Text
pattern Sort_ASC :: Sort
pattern Sort_DESC :: Sort
newtype SortDirectionType
SortDirectionType' :: Text -> SortDirectionType
[fromSortDirectionType] :: SortDirectionType -> Text
pattern SortDirectionType_ASCENDING :: SortDirectionType
pattern SortDirectionType_DESCENDING :: SortDirectionType
newtype TaskRunSortColumnType
TaskRunSortColumnType' :: Text -> TaskRunSortColumnType
[fromTaskRunSortColumnType] :: TaskRunSortColumnType -> Text
pattern TaskRunSortColumnType_STARTED :: TaskRunSortColumnType
pattern TaskRunSortColumnType_STATUS :: TaskRunSortColumnType
pattern TaskRunSortColumnType_TASK_RUN_TYPE :: TaskRunSortColumnType
newtype TaskStatusType
TaskStatusType' :: Text -> TaskStatusType
[fromTaskStatusType] :: TaskStatusType -> Text
pattern TaskStatusType_FAILED :: TaskStatusType
pattern TaskStatusType_RUNNING :: TaskStatusType
pattern TaskStatusType_STARTING :: TaskStatusType
pattern TaskStatusType_STOPPED :: TaskStatusType
pattern TaskStatusType_STOPPING :: TaskStatusType
pattern TaskStatusType_SUCCEEDED :: TaskStatusType
pattern TaskStatusType_TIMEOUT :: TaskStatusType
newtype TaskType
TaskType' :: Text -> TaskType
[fromTaskType] :: TaskType -> Text
pattern TaskType_EVALUATION :: TaskType
pattern TaskType_EXPORT_LABELS :: TaskType
pattern TaskType_FIND_MATCHES :: TaskType
pattern TaskType_IMPORT_LABELS :: TaskType
pattern TaskType_LABELING_SET_GENERATION :: TaskType
newtype TransformSortColumnType
TransformSortColumnType' :: Text -> TransformSortColumnType
[fromTransformSortColumnType] :: TransformSortColumnType -> Text
pattern TransformSortColumnType_CREATED :: TransformSortColumnType
pattern TransformSortColumnType_LAST_MODIFIED :: TransformSortColumnType
pattern TransformSortColumnType_NAME :: TransformSortColumnType
pattern TransformSortColumnType_STATUS :: TransformSortColumnType
pattern TransformSortColumnType_TRANSFORM_TYPE :: TransformSortColumnType
newtype TransformStatusType
TransformStatusType' :: Text -> TransformStatusType
[fromTransformStatusType] :: TransformStatusType -> Text
pattern TransformStatusType_DELETING :: TransformStatusType
pattern TransformStatusType_NOT_READY :: TransformStatusType
pattern TransformStatusType_READY :: TransformStatusType
newtype TransformType
TransformType' :: Text -> TransformType
[fromTransformType] :: TransformType -> Text
pattern TransformType_FIND_MATCHES :: TransformType
newtype TriggerState
TriggerState' :: Text -> TriggerState
[fromTriggerState] :: TriggerState -> Text
pattern TriggerState_ACTIVATED :: TriggerState
pattern TriggerState_ACTIVATING :: TriggerState
pattern TriggerState_CREATED :: TriggerState
pattern TriggerState_CREATING :: TriggerState
pattern TriggerState_DEACTIVATED :: TriggerState
pattern TriggerState_DEACTIVATING :: TriggerState
pattern TriggerState_DELETING :: TriggerState
pattern TriggerState_UPDATING :: TriggerState
newtype TriggerType
TriggerType' :: Text -> TriggerType
[fromTriggerType] :: TriggerType -> Text
pattern TriggerType_CONDITIONAL :: TriggerType
pattern TriggerType_EVENT :: TriggerType
pattern TriggerType_ON_DEMAND :: TriggerType
pattern TriggerType_SCHEDULED :: TriggerType
newtype UpdateBehavior
UpdateBehavior' :: Text -> UpdateBehavior
[fromUpdateBehavior] :: UpdateBehavior -> Text
pattern UpdateBehavior_LOG :: UpdateBehavior
pattern UpdateBehavior_UPDATE_IN_DATABASE :: UpdateBehavior
newtype WorkerType
WorkerType' :: Text -> WorkerType
[fromWorkerType] :: WorkerType -> Text
pattern WorkerType_G_1X :: WorkerType
pattern WorkerType_G_2X :: WorkerType
pattern WorkerType_Standard :: WorkerType
newtype WorkflowRunStatus
WorkflowRunStatus' :: Text -> WorkflowRunStatus
[fromWorkflowRunStatus] :: WorkflowRunStatus -> Text
pattern WorkflowRunStatus_COMPLETED :: WorkflowRunStatus
pattern WorkflowRunStatus_ERROR :: WorkflowRunStatus
pattern WorkflowRunStatus_RUNNING :: WorkflowRunStatus
pattern WorkflowRunStatus_STOPPED :: WorkflowRunStatus
pattern WorkflowRunStatus_STOPPING :: WorkflowRunStatus

-- | Defines an action to be initiated by a trigger.
--   
--   <i>See:</i> <a>newAction</a> smart constructor.
data Action
Action' :: Maybe NotificationProperty -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Action

-- | Create a value of <a>Action</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationProperty:Action'</a>,
--   <a>action_notificationProperty</a> - Specifies configuration
--   properties of a job run notification.
--   
--   <a>$sel:arguments:Action'</a>, <a>action_arguments</a> - The job
--   arguments used when this trigger fires. For this job run, they replace
--   the default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
--   
--   <a>$sel:jobName:Action'</a>, <a>action_jobName</a> - The name of a job
--   to be run.
--   
--   <a>$sel:securityConfiguration:Action'</a>,
--   <a>action_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this action.
--   
--   <a>$sel:timeout:Action'</a>, <a>action_timeout</a> - The
--   <tt>JobRun</tt> timeout in minutes. This is the maximum time that a
--   job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
--   
--   <a>$sel:crawlerName:Action'</a>, <a>action_crawlerName</a> - The name
--   of the crawler to be used with this action.
newAction :: Action

-- | A list of errors that can occur when registering partition indexes for
--   an existing table.
--   
--   These errors give the details about why an index registration failed
--   and provide a limited number of partitions in the response, so that
--   you can fix the partitions at fault and try registering the index
--   again. The most common set of errors that can occur are categorized as
--   follows:
--   
--   <ul>
--   <li>EncryptedPartitionError: The partitions are encrypted.</li>
--   <li>InvalidPartitionTypeDataError: The partition value doesn't match
--   the data type for that partition column.</li>
--   <li>MissingPartitionValueError: The partitions are encrypted.</li>
--   <li>UnsupportedPartitionCharacterError: Characters inside the
--   partition value are not supported. For example: U+0000 , U+0001,
--   U+0002.</li>
--   <li>InternalError: Any error which does not belong to other error
--   codes.</li>
--   </ul>
--   
--   <i>See:</i> <a>newBackfillError</a> smart constructor.
data BackfillError
BackfillError' :: Maybe [PartitionValueList] -> Maybe BackfillErrorCode -> BackfillError

-- | Create a value of <a>BackfillError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitions:BackfillError'</a>, <a>backfillError_partitions</a>
--   - A list of a limited number of partitions in the response.
--   
--   <a>$sel:code:BackfillError'</a>, <a>backfillError_code</a> - The error
--   code for an error that occurred when registering partition indexes for
--   an existing table.
newBackfillError :: BackfillError

-- | Records an error that occurred when attempting to stop a specified job
--   run.
--   
--   <i>See:</i> <a>newBatchStopJobRunError</a> smart constructor.
data BatchStopJobRunError
BatchStopJobRunError' :: Maybe Text -> Maybe Text -> Maybe ErrorDetail -> BatchStopJobRunError

-- | Create a value of <a>BatchStopJobRunError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:BatchStopJobRunError'</a>,
--   <a>batchStopJobRunError_jobName</a> - The name of the job definition
--   that is used in the job run in question.
--   
--   <a>$sel:jobRunId:BatchStopJobRunError'</a>,
--   <a>batchStopJobRunError_jobRunId</a> - The <tt>JobRunId</tt> of the
--   job run in question.
--   
--   <a>$sel:errorDetail:BatchStopJobRunError'</a>,
--   <a>batchStopJobRunError_errorDetail</a> - Specifies details about the
--   error that was encountered.
newBatchStopJobRunError :: BatchStopJobRunError

-- | Records a successful request to stop a specified <tt>JobRun</tt>.
--   
--   <i>See:</i> <a>newBatchStopJobRunSuccessfulSubmission</a> smart
--   constructor.
data BatchStopJobRunSuccessfulSubmission
BatchStopJobRunSuccessfulSubmission' :: Maybe Text -> Maybe Text -> BatchStopJobRunSuccessfulSubmission

-- | Create a value of <a>BatchStopJobRunSuccessfulSubmission</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:BatchStopJobRunSuccessfulSubmission'</a>,
--   <a>batchStopJobRunSuccessfulSubmission_jobName</a> - The name of the
--   job definition used in the job run that was stopped.
--   
--   <a>$sel:jobRunId:BatchStopJobRunSuccessfulSubmission'</a>,
--   <a>batchStopJobRunSuccessfulSubmission_jobRunId</a> - The
--   <tt>JobRunId</tt> of the job run that was stopped.
newBatchStopJobRunSuccessfulSubmission :: BatchStopJobRunSuccessfulSubmission

-- | Contains information about a batch update partition error.
--   
--   <i>See:</i> <a>newBatchUpdatePartitionFailureEntry</a> smart
--   constructor.
data BatchUpdatePartitionFailureEntry
BatchUpdatePartitionFailureEntry' :: Maybe [Text] -> Maybe ErrorDetail -> BatchUpdatePartitionFailureEntry

-- | Create a value of <a>BatchUpdatePartitionFailureEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitionValueList:BatchUpdatePartitionFailureEntry'</a>,
--   <a>batchUpdatePartitionFailureEntry_partitionValueList</a> - A list of
--   values defining the partitions.
--   
--   <a>$sel:errorDetail:BatchUpdatePartitionFailureEntry'</a>,
--   <a>batchUpdatePartitionFailureEntry_errorDetail</a> - The details
--   about the batch update partition error.
newBatchUpdatePartitionFailureEntry :: BatchUpdatePartitionFailureEntry

-- | A structure that contains the values and structure used to update a
--   partition.
--   
--   <i>See:</i> <a>newBatchUpdatePartitionRequestEntry</a> smart
--   constructor.
data BatchUpdatePartitionRequestEntry
BatchUpdatePartitionRequestEntry' :: [Text] -> PartitionInput -> BatchUpdatePartitionRequestEntry

-- | Create a value of <a>BatchUpdatePartitionRequestEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitionValueList:BatchUpdatePartitionRequestEntry'</a>,
--   <a>batchUpdatePartitionRequestEntry_partitionValueList</a> - A list of
--   values defining the partitions.
--   
--   <a>$sel:partitionInput:BatchUpdatePartitionRequestEntry'</a>,
--   <a>batchUpdatePartitionRequestEntry_partitionInput</a> - The structure
--   used to update a partition.
newBatchUpdatePartitionRequestEntry :: PartitionInput -> BatchUpdatePartitionRequestEntry

-- | Defines column statistics supported for bit sequence data values.
--   
--   <i>See:</i> <a>newBinaryColumnStatisticsData</a> smart constructor.
data BinaryColumnStatisticsData
BinaryColumnStatisticsData' :: Natural -> Double -> Natural -> BinaryColumnStatisticsData

-- | Create a value of <a>BinaryColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumLength:BinaryColumnStatisticsData'</a>,
--   <a>binaryColumnStatisticsData_maximumLength</a> - The size of the
--   longest bit sequence in the column.
--   
--   <a>$sel:averageLength:BinaryColumnStatisticsData'</a>,
--   <a>binaryColumnStatisticsData_averageLength</a> - The average bit
--   sequence length in the column.
--   
--   <a>$sel:numberOfNulls:BinaryColumnStatisticsData'</a>,
--   <a>binaryColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
newBinaryColumnStatisticsData :: Natural -> Double -> Natural -> BinaryColumnStatisticsData

-- | The details of a blueprint.
--   
--   <i>See:</i> <a>newBlueprint</a> smart constructor.
data Blueprint
Blueprint' :: Maybe BlueprintStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe LastActiveDefinition -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Blueprint

-- | Create a value of <a>Blueprint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Blueprint'</a>, <a>blueprint_status</a> - The status of
--   the blueprint registration.
--   
--   <ul>
--   <li>Creating — The blueprint registration is in progress.</li>
--   <li>Active — The blueprint has been successfully registered.</li>
--   <li>Updating — An update to the blueprint registration is in
--   progress.</li>
--   <li>Failed — The blueprint registration failed.</li>
--   </ul>
--   
--   <a>$sel:parameterSpec:Blueprint'</a>, <a>blueprint_parameterSpec</a> -
--   A JSON string that indicates the list of parameter specifications for
--   the blueprint.
--   
--   <a>$sel:blueprintLocation:Blueprint'</a>,
--   <a>blueprint_blueprintLocation</a> - Specifies the path in Amazon S3
--   where the blueprint is published.
--   
--   <a>$sel:lastModifiedOn:Blueprint'</a>, <a>blueprint_lastModifiedOn</a>
--   - The date and time the blueprint was last modified.
--   
--   <a>$sel:lastActiveDefinition:Blueprint'</a>,
--   <a>blueprint_lastActiveDefinition</a> - When there are multiple
--   versions of a blueprint and the latest version has some errors, this
--   attribute indicates the last successful blueprint definition that is
--   available with the service.
--   
--   <a>$sel:name:Blueprint'</a>, <a>blueprint_name</a> - The name of the
--   blueprint.
--   
--   <a>$sel:blueprintServiceLocation:Blueprint'</a>,
--   <a>blueprint_blueprintServiceLocation</a> - Specifies a path in Amazon
--   S3 where the blueprint is copied when you call
--   <tt>CreateBlueprint/UpdateBlueprint</tt> to register the blueprint in
--   Glue.
--   
--   <a>$sel:errorMessage:Blueprint'</a>, <a>blueprint_errorMessage</a> -
--   An error message.
--   
--   <a>$sel:description:Blueprint'</a>, <a>blueprint_description</a> - The
--   description of the blueprint.
--   
--   <a>$sel:createdOn:Blueprint'</a>, <a>blueprint_createdOn</a> - The
--   date and time the blueprint was registered.
newBlueprint :: Blueprint

-- | The details of a blueprint.
--   
--   <i>See:</i> <a>newBlueprintDetails</a> smart constructor.
data BlueprintDetails
BlueprintDetails' :: Maybe Text -> Maybe Text -> BlueprintDetails

-- | Create a value of <a>BlueprintDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runId:BlueprintDetails'</a>, <a>blueprintDetails_runId</a> -
--   The run ID for this blueprint.
--   
--   <a>$sel:blueprintName:BlueprintDetails'</a>,
--   <a>blueprintDetails_blueprintName</a> - The name of the blueprint.
newBlueprintDetails :: BlueprintDetails

-- | The details of a blueprint run.
--   
--   <i>See:</i> <a>newBlueprintRun</a> smart constructor.
data BlueprintRun
BlueprintRun' :: Maybe Text -> Maybe POSIX -> Maybe BlueprintRunState -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> BlueprintRun

-- | Create a value of <a>BlueprintRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workflowName:BlueprintRun'</a>,
--   <a>blueprintRun_workflowName</a> - The name of a workflow that is
--   created as a result of a successful blueprint run. If a blueprint run
--   has an error, there will not be a workflow created.
--   
--   <a>$sel:completedOn:BlueprintRun'</a>, <a>blueprintRun_completedOn</a>
--   - The date and time that the blueprint run completed.
--   
--   <a>$sel:state:BlueprintRun'</a>, <a>blueprintRun_state</a> - The state
--   of the blueprint run. Possible values are:
--   
--   <ul>
--   <li>Running — The blueprint run is in progress.</li>
--   <li>Succeeded — The blueprint run completed successfully.</li>
--   <li>Failed — The blueprint run failed and rollback is complete.</li>
--   <li>Rolling Back — The blueprint run failed and rollback is in
--   progress.</li>
--   </ul>
--   
--   <a>$sel:rollbackErrorMessage:BlueprintRun'</a>,
--   <a>blueprintRun_rollbackErrorMessage</a> - If there are any errors
--   while creating the entities of a workflow, we try to roll back the
--   created entities until that point and delete them. This attribute
--   indicates the errors seen while trying to delete the entities that are
--   created.
--   
--   <a>$sel:startedOn:BlueprintRun'</a>, <a>blueprintRun_startedOn</a> -
--   The date and time that the blueprint run started.
--   
--   <a>$sel:runId:BlueprintRun'</a>, <a>blueprintRun_runId</a> - The run
--   ID for this blueprint run.
--   
--   <a>$sel:parameters:BlueprintRun'</a>, <a>blueprintRun_parameters</a> -
--   The blueprint parameters as a string. You will have to provide a value
--   for each key that is required from the parameter spec that is defined
--   in the <tt>Blueprint$ParameterSpec</tt>.
--   
--   <a>$sel:blueprintName:BlueprintRun'</a>,
--   <a>blueprintRun_blueprintName</a> - The name of the blueprint.
--   
--   <a>$sel:errorMessage:BlueprintRun'</a>,
--   <a>blueprintRun_errorMessage</a> - Indicates any errors that are seen
--   while running the blueprint.
--   
--   <a>$sel:roleArn:BlueprintRun'</a>, <a>blueprintRun_roleArn</a> - The
--   role ARN. This role will be assumed by the Glue service and will be
--   used to create the workflow and other entities of a workflow.
newBlueprintRun :: BlueprintRun

-- | Defines column statistics supported for Boolean data columns.
--   
--   <i>See:</i> <a>newBooleanColumnStatisticsData</a> smart constructor.
data BooleanColumnStatisticsData
BooleanColumnStatisticsData' :: Natural -> Natural -> Natural -> BooleanColumnStatisticsData

-- | Create a value of <a>BooleanColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfTrues:BooleanColumnStatisticsData'</a>,
--   <a>booleanColumnStatisticsData_numberOfTrues</a> - The number of true
--   values in the column.
--   
--   <a>$sel:numberOfFalses:BooleanColumnStatisticsData'</a>,
--   <a>booleanColumnStatisticsData_numberOfFalses</a> - The number of
--   false values in the column.
--   
--   <a>$sel:numberOfNulls:BooleanColumnStatisticsData'</a>,
--   <a>booleanColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
newBooleanColumnStatisticsData :: Natural -> Natural -> Natural -> BooleanColumnStatisticsData

-- | Specifies a table definition in the Glue Data Catalog.
--   
--   <i>See:</i> <a>newCatalogEntry</a> smart constructor.
data CatalogEntry
CatalogEntry' :: Text -> Text -> CatalogEntry

-- | Create a value of <a>CatalogEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:databaseName:CatalogEntry'</a>,
--   <a>catalogEntry_databaseName</a> - The database in which the table
--   metadata resides.
--   
--   <a>$sel:tableName:CatalogEntry'</a>, <a>catalogEntry_tableName</a> -
--   The name of the table in question.
newCatalogEntry :: Text -> Text -> CatalogEntry

-- | A structure containing migration status information.
--   
--   <i>See:</i> <a>newCatalogImportStatus</a> smart constructor.
data CatalogImportStatus
CatalogImportStatus' :: Maybe Text -> Maybe POSIX -> Maybe Bool -> CatalogImportStatus

-- | Create a value of <a>CatalogImportStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:importedBy:CatalogImportStatus'</a>,
--   <a>catalogImportStatus_importedBy</a> - The name of the person who
--   initiated the migration.
--   
--   <a>$sel:importTime:CatalogImportStatus'</a>,
--   <a>catalogImportStatus_importTime</a> - The time that the migration
--   was started.
--   
--   <a>$sel:importCompleted:CatalogImportStatus'</a>,
--   <a>catalogImportStatus_importCompleted</a> - <tt>True</tt> if the
--   migration has completed, or <tt>False</tt> otherwise.
newCatalogImportStatus :: CatalogImportStatus

-- | Specifies an Glue Data Catalog target.
--   
--   <i>See:</i> <a>newCatalogTarget</a> smart constructor.
data CatalogTarget
CatalogTarget' :: Text -> NonEmpty Text -> CatalogTarget

-- | Create a value of <a>CatalogTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:databaseName:CatalogTarget'</a>,
--   <a>catalogTarget_databaseName</a> - The name of the database to be
--   synchronized.
--   
--   <a>$sel:tables:CatalogTarget'</a>, <a>catalogTarget_tables</a> - A
--   list of the tables to be synchronized.
newCatalogTarget :: Text -> NonEmpty Text -> CatalogTarget

-- | Classifiers are triggered during a crawl task. A classifier checks
--   whether a given file is in a format it can handle. If it is, the
--   classifier creates a schema in the form of a <tt>StructType</tt>
--   object that matches that data format.
--   
--   You can use the standard classifiers that Glue provides, or you can
--   write your own classifiers to best categorize your data sources and
--   specify the appropriate schemas to use for them. A classifier can be a
--   <tt>grok</tt> classifier, an <tt>XML</tt> classifier, a <tt>JSON</tt>
--   classifier, or a custom <tt>CSV</tt> classifier, as specified in one
--   of the fields in the <tt>Classifier</tt> object.
--   
--   <i>See:</i> <a>newClassifier</a> smart constructor.
data Classifier
Classifier' :: Maybe GrokClassifier -> Maybe XMLClassifier -> Maybe CsvClassifier -> Maybe JsonClassifier -> Classifier

-- | Create a value of <a>Classifier</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:grokClassifier:Classifier'</a>,
--   <a>classifier_grokClassifier</a> - A classifier that uses
--   <tt>grok</tt>.
--   
--   <a>$sel:xMLClassifier:Classifier'</a>, <a>classifier_xMLClassifier</a>
--   - A classifier for XML content.
--   
--   <a>$sel:csvClassifier:Classifier'</a>, <a>classifier_csvClassifier</a>
--   - A classifier for comma-separated values (CSV).
--   
--   <a>$sel:jsonClassifier:Classifier'</a>,
--   <a>classifier_jsonClassifier</a> - A classifier for JSON content.
newClassifier :: Classifier

-- | Specifies how Amazon CloudWatch data should be encrypted.
--   
--   <i>See:</i> <a>newCloudWatchEncryption</a> smart constructor.
data CloudWatchEncryption
CloudWatchEncryption' :: Maybe CloudWatchEncryptionMode -> Maybe Text -> CloudWatchEncryption

-- | Create a value of <a>CloudWatchEncryption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cloudWatchEncryptionMode:CloudWatchEncryption'</a>,
--   <a>cloudWatchEncryption_cloudWatchEncryptionMode</a> - The encryption
--   mode to use for CloudWatch data.
--   
--   <a>$sel:kmsKeyArn:CloudWatchEncryption'</a>,
--   <a>cloudWatchEncryption_kmsKeyArn</a> - The Amazon Resource Name (ARN)
--   of the KMS key to be used to encrypt the data.
newCloudWatchEncryption :: CloudWatchEncryption

-- | Represents a directional edge in a directed acyclic graph (DAG).
--   
--   <i>See:</i> <a>newCodeGenEdge</a> smart constructor.
data CodeGenEdge
CodeGenEdge' :: Maybe Text -> Text -> Text -> CodeGenEdge

-- | Create a value of <a>CodeGenEdge</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetParameter:CodeGenEdge'</a>,
--   <a>codeGenEdge_targetParameter</a> - The target of the edge.
--   
--   <a>$sel:source:CodeGenEdge'</a>, <a>codeGenEdge_source</a> - The ID of
--   the node at which the edge starts.
--   
--   <a>$sel:target:CodeGenEdge'</a>, <a>codeGenEdge_target</a> - The ID of
--   the node at which the edge ends.
newCodeGenEdge :: Text -> Text -> CodeGenEdge

-- | Represents a node in a directed acyclic graph (DAG)
--   
--   <i>See:</i> <a>newCodeGenNode</a> smart constructor.
data CodeGenNode
CodeGenNode' :: Maybe Int -> Text -> Text -> [CodeGenNodeArg] -> CodeGenNode

-- | Create a value of <a>CodeGenNode</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lineNumber:CodeGenNode'</a>, <a>codeGenNode_lineNumber</a> -
--   The line number of the node.
--   
--   <a>$sel:id:CodeGenNode'</a>, <a>codeGenNode_id</a> - A node identifier
--   that is unique within the node's graph.
--   
--   <a>$sel:nodeType:CodeGenNode'</a>, <a>codeGenNode_nodeType</a> - The
--   type of node that this is.
--   
--   <a>$sel:args:CodeGenNode'</a>, <a>codeGenNode_args</a> - Properties of
--   the node, in the form of name-value pairs.
newCodeGenNode :: Text -> Text -> CodeGenNode

-- | An argument or property of a node.
--   
--   <i>See:</i> <a>newCodeGenNodeArg</a> smart constructor.
data CodeGenNodeArg
CodeGenNodeArg' :: Maybe Bool -> Text -> Text -> CodeGenNodeArg

-- | Create a value of <a>CodeGenNodeArg</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:param:CodeGenNodeArg'</a>, <a>codeGenNodeArg_param</a> - True
--   if the value is used as a parameter.
--   
--   <a>$sel:name:CodeGenNodeArg'</a>, <a>codeGenNodeArg_name</a> - The
--   name of the argument or property.
--   
--   <a>$sel:value:CodeGenNodeArg'</a>, <a>codeGenNodeArg_value</a> - The
--   value of the argument or property.
newCodeGenNodeArg :: Text -> Text -> CodeGenNodeArg

-- | A column in a <tt>Table</tt>.
--   
--   <i>See:</i> <a>newColumn</a> smart constructor.
data Column
Column' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Text -> Column

-- | Create a value of <a>Column</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:Column'</a>, <a>column_parameters</a> - These
--   key-value pairs define properties associated with the column.
--   
--   <a>$sel:type':Column'</a>, <a>column_type</a> - The data type of the
--   <tt>Column</tt>.
--   
--   <a>$sel:comment:Column'</a>, <a>column_comment</a> - A free-form text
--   comment.
--   
--   <a>$sel:name:Column'</a>, <a>column_name</a> - The name of the
--   <tt>Column</tt>.
newColumn :: Text -> Column

-- | Encapsulates a column name that failed and the reason for failure.
--   
--   <i>See:</i> <a>newColumnError</a> smart constructor.
data ColumnError
ColumnError' :: Maybe ErrorDetail -> Maybe Text -> ColumnError

-- | Create a value of <a>ColumnError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:error:ColumnError'</a>, <a>columnError_error</a> - An error
--   message with the reason for the failure of an operation.
--   
--   <a>$sel:columnName:ColumnError'</a>, <a>columnError_columnName</a> -
--   The name of the column that failed.
newColumnError :: ColumnError

-- | A structure containing the column name and column importance score for
--   a column.
--   
--   Column importance helps you understand how columns contribute to your
--   model, by identifying which columns in your records are more important
--   than others.
--   
--   <i>See:</i> <a>newColumnImportance</a> smart constructor.
data ColumnImportance
ColumnImportance' :: Maybe Double -> Maybe Text -> ColumnImportance

-- | Create a value of <a>ColumnImportance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:importance:ColumnImportance'</a>,
--   <a>columnImportance_importance</a> - The column importance score for
--   the column, as a decimal.
--   
--   <a>$sel:columnName:ColumnImportance'</a>,
--   <a>columnImportance_columnName</a> - The name of a column.
newColumnImportance :: ColumnImportance

-- | Represents the generated column-level statistics for a table or
--   partition.
--   
--   <i>See:</i> <a>newColumnStatistics</a> smart constructor.
data ColumnStatistics
ColumnStatistics' :: Text -> Text -> POSIX -> ColumnStatisticsData -> ColumnStatistics

-- | Create a value of <a>ColumnStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:columnName:ColumnStatistics'</a>,
--   <a>columnStatistics_columnName</a> - Name of column which statistics
--   belong to.
--   
--   <a>$sel:columnType:ColumnStatistics'</a>,
--   <a>columnStatistics_columnType</a> - The data type of the column.
--   
--   <a>$sel:analyzedTime:ColumnStatistics'</a>,
--   <a>columnStatistics_analyzedTime</a> - The timestamp of when column
--   statistics were generated.
--   
--   <a>$sel:statisticsData:ColumnStatistics'</a>,
--   <a>columnStatistics_statisticsData</a> - A
--   <tt>ColumnStatisticData</tt> object that contains the statistics data
--   values.
newColumnStatistics :: Text -> Text -> UTCTime -> ColumnStatisticsData -> ColumnStatistics

-- | Contains the individual types of column statistics data. Only one data
--   object should be set and indicated by the <tt>Type</tt> attribute.
--   
--   <i>See:</i> <a>newColumnStatisticsData</a> smart constructor.
data ColumnStatisticsData
ColumnStatisticsData' :: Maybe BinaryColumnStatisticsData -> Maybe DateColumnStatisticsData -> Maybe BooleanColumnStatisticsData -> Maybe DecimalColumnStatisticsData -> Maybe DoubleColumnStatisticsData -> Maybe StringColumnStatisticsData -> Maybe LongColumnStatisticsData -> ColumnStatisticsType -> ColumnStatisticsData

-- | Create a value of <a>ColumnStatisticsData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:binaryColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_binaryColumnStatisticsData</a> - Binary column
--   statistics data.
--   
--   <a>$sel:dateColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_dateColumnStatisticsData</a> - Date column
--   statistics data.
--   
--   <a>$sel:booleanColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_booleanColumnStatisticsData</a> - Boolean
--   column statistics data.
--   
--   <a>$sel:decimalColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_decimalColumnStatisticsData</a> - Decimal
--   column statistics data.
--   
--   <a>$sel:doubleColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_doubleColumnStatisticsData</a> - Double column
--   statistics data.
--   
--   <a>$sel:stringColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_stringColumnStatisticsData</a> - String column
--   statistics data.
--   
--   <a>$sel:longColumnStatisticsData:ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_longColumnStatisticsData</a> - Long column
--   statistics data.
--   
--   <a>$sel:type':ColumnStatisticsData'</a>,
--   <a>columnStatisticsData_type</a> - The type of column statistics data.
newColumnStatisticsData :: ColumnStatisticsType -> ColumnStatisticsData

-- | Encapsulates a <tt>ColumnStatistics</tt> object that failed and the
--   reason for failure.
--   
--   <i>See:</i> <a>newColumnStatisticsError</a> smart constructor.
data ColumnStatisticsError
ColumnStatisticsError' :: Maybe ErrorDetail -> Maybe ColumnStatistics -> ColumnStatisticsError

-- | Create a value of <a>ColumnStatisticsError</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:error:ColumnStatisticsError'</a>,
--   <a>columnStatisticsError_error</a> - An error message with the reason
--   for the failure of an operation.
--   
--   <a>$sel:columnStatistics:ColumnStatisticsError'</a>,
--   <a>columnStatisticsError_columnStatistics</a> - The
--   <tt>ColumnStatistics</tt> of the column.
newColumnStatisticsError :: ColumnStatisticsError

-- | Defines a condition under which a trigger fires.
--   
--   <i>See:</i> <a>newCondition</a> smart constructor.
data Condition
Condition' :: Maybe CrawlState -> Maybe JobRunState -> Maybe Text -> Maybe LogicalOperator -> Maybe Text -> Condition

-- | Create a value of <a>Condition</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawlState:Condition'</a>, <a>condition_crawlState</a> - The
--   state of the crawler to which this condition applies.
--   
--   <a>$sel:state:Condition'</a>, <a>condition_state</a> - The condition
--   state. Currently, the only job states that a trigger can listen for
--   are <tt>SUCCEEDED</tt>, <tt>STOPPED</tt>, <tt>FAILED</tt>, and
--   <tt>TIMEOUT</tt>. The only crawler states that a trigger can listen
--   for are <tt>SUCCEEDED</tt>, <tt>FAILED</tt>, and <tt>CANCELLED</tt>.
--   
--   <a>$sel:jobName:Condition'</a>, <a>condition_jobName</a> - The name of
--   the job whose <tt>JobRuns</tt> this condition applies to, and on which
--   this trigger waits.
--   
--   <a>$sel:logicalOperator:Condition'</a>,
--   <a>condition_logicalOperator</a> - A logical operator.
--   
--   <a>$sel:crawlerName:Condition'</a>, <a>condition_crawlerName</a> - The
--   name of the crawler to which this condition applies.
newCondition :: Condition

-- | The confusion matrix shows you what your transform is predicting
--   accurately and what types of errors it is making.
--   
--   For more information, see <a>Confusion matrix</a> in Wikipedia.
--   
--   <i>See:</i> <a>newConfusionMatrix</a> smart constructor.
data ConfusionMatrix
ConfusionMatrix' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> ConfusionMatrix

-- | Create a value of <a>ConfusionMatrix</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numTrueNegatives:ConfusionMatrix'</a>,
--   <a>confusionMatrix_numTrueNegatives</a> - The number of nonmatches in
--   the data that the transform correctly rejected, in the confusion
--   matrix for your transform.
--   
--   <a>$sel:numFalseNegatives:ConfusionMatrix'</a>,
--   <a>confusionMatrix_numFalseNegatives</a> - The number of matches in
--   the data that the transform didn't find, in the confusion matrix for
--   your transform.
--   
--   <a>$sel:numTruePositives:ConfusionMatrix'</a>,
--   <a>confusionMatrix_numTruePositives</a> - The number of matches in the
--   data that the transform correctly found, in the confusion matrix for
--   your transform.
--   
--   <a>$sel:numFalsePositives:ConfusionMatrix'</a>,
--   <a>confusionMatrix_numFalsePositives</a> - The number of nonmatches in
--   the data that the transform incorrectly classified as a match, in the
--   confusion matrix for your transform.
newConfusionMatrix :: ConfusionMatrix

-- | Defines a connection to a data source.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe POSIX -> Maybe Text -> Maybe (HashMap ConnectionPropertyKey Text) -> Maybe POSIX -> Maybe [Text] -> Maybe PhysicalConnectionRequirements -> Maybe Text -> Maybe Text -> Maybe ConnectionType -> Connection

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Connection'</a>, <a>connection_creationTime</a> -
--   The time that this connection definition was created.
--   
--   <a>$sel:lastUpdatedBy:Connection'</a>, <a>connection_lastUpdatedBy</a>
--   - The user, group, or role that last updated this connection
--   definition.
--   
--   <a>$sel:connectionProperties:Connection'</a>,
--   <a>connection_connectionProperties</a> - These key-value pairs define
--   parameters for the connection:
--   
--   <ul>
--   <li><tt>HOST</tt> - The host URI: either the fully qualified domain
--   name (FQDN) or the IPv4 address of the database host.</li>
--   <li><tt>PORT</tt> - The port number, between 1024 and 65535, of the
--   port on which the database host is listening for database
--   connections.</li>
--   <li><tt>USER_NAME</tt> - The name under which to log in to the
--   database. The value string for <tt>USER_NAME</tt> is
--   "<tt>USERNAME</tt>".</li>
--   <li><tt>PASSWORD</tt> - A password, if one is used, for the user
--   name.</li>
--   <li><tt>ENCRYPTED_PASSWORD</tt> - When you enable connection password
--   protection by setting <tt>ConnectionPasswordEncryption</tt> in the
--   Data Catalog encryption settings, this field stores the encrypted
--   password.</li>
--   <li><tt>JDBC_DRIVER_JAR_URI</tt> - The Amazon Simple Storage Service
--   (Amazon S3) path of the JAR file that contains the JDBC driver to
--   use.</li>
--   <li><tt>JDBC_DRIVER_CLASS_NAME</tt> - The class name of the JDBC
--   driver to use.</li>
--   <li><tt>JDBC_ENGINE</tt> - The name of the JDBC engine to use.</li>
--   <li><tt>JDBC_ENGINE_VERSION</tt> - The version of the JDBC engine to
--   use.</li>
--   <li><tt>CONFIG_FILES</tt> - (Reserved for future use.)</li>
--   <li><tt>INSTANCE_ID</tt> - The instance ID to use.</li>
--   <li><tt>JDBC_CONNECTION_URL</tt> - The URL for connecting to a JDBC
--   data source.</li>
--   <li><tt>JDBC_ENFORCE_SSL</tt> - A Boolean string (true, false)
--   specifying whether Secure Sockets Layer (SSL) with hostname matching
--   is enforced for the JDBC connection on the client. The default is
--   false.</li>
--   <li><tt>CUSTOM_JDBC_CERT</tt> - An Amazon S3 location specifying the
--   customer's root certificate. Glue uses this root certificate to
--   validate the customer’s certificate when connecting to the customer
--   database. Glue only handles X.509 certificates. The certificate
--   provided must be DER-encoded and supplied in Base64 encoding PEM
--   format.</li>
--   <li><tt>SKIP_CUSTOM_JDBC_CERT_VALIDATION</tt> - By default, this is
--   <tt>false</tt>. Glue validates the Signature algorithm and Subject
--   Public Key Algorithm for the customer certificate. The only permitted
--   algorithms for the Signature algorithm are SHA256withRSA,
--   SHA384withRSA or SHA512withRSA. For the Subject Public Key Algorithm,
--   the key length must be at least 2048. You can set the value of this
--   property to <tt>true</tt> to skip Glue’s validation of the customer
--   certificate.</li>
--   <li><tt>CUSTOM_JDBC_CERT_STRING</tt> - A custom JDBC certificate
--   string which is used for domain match or distinguished name match to
--   prevent a man-in-the-middle attack. In Oracle database, this is used
--   as the <tt>SSL_SERVER_CERT_DN</tt>; in Microsoft SQL Server, this is
--   used as the <tt>hostNameInCertificate</tt>.</li>
--   <li><tt>CONNECTION_URL</tt> - The URL for connecting to a general
--   (non-JDBC) data source.</li>
--   <li><tt>KAFKA_BOOTSTRAP_SERVERS</tt> - A comma-separated list of host
--   and port pairs that are the addresses of the Apache Kafka brokers in a
--   Kafka cluster to which a Kafka client will connect to and bootstrap
--   itself.</li>
--   <li><tt>KAFKA_SSL_ENABLED</tt> - Whether to enable or disable SSL on
--   an Apache Kafka connection. Default value is "true".</li>
--   <li><tt>KAFKA_CUSTOM_CERT</tt> - The Amazon S3 URL for the private CA
--   cert file (.pem format). The default is an empty string.</li>
--   <li><tt>KAFKA_SKIP_CUSTOM_CERT_VALIDATION</tt> - Whether to skip the
--   validation of the CA cert file or not. Glue validates for three
--   algorithms: SHA256withRSA, SHA384withRSA and SHA512withRSA. Default
--   value is "false".</li>
--   <li><tt>SECRET_ID</tt> - The secret ID used for the secret manager of
--   credentials.</li>
--   <li><tt>CONNECTOR_URL</tt> - The connector URL for a MARKETPLACE or
--   CUSTOM connection.</li>
--   <li><tt>CONNECTOR_TYPE</tt> - The connector type for a MARKETPLACE or
--   CUSTOM connection.</li>
--   <li><tt>CONNECTOR_CLASS_NAME</tt> - The connector class name for a
--   MARKETPLACE or CUSTOM connection.</li>
--   <li><tt>KAFKA_CLIENT_KEYSTORE</tt> - The Amazon S3 location of the
--   client keystore file for Kafka client side authentication
--   (Optional).</li>
--   <li><tt>KAFKA_CLIENT_KEYSTORE_PASSWORD</tt> - The password to access
--   the provided keystore (Optional).</li>
--   <li><tt>KAFKA_CLIENT_KEY_PASSWORD</tt> - A keystore can consist of
--   multiple keys, so this is the password to access the client key to be
--   used with the Kafka server side key (Optional).</li>
--   <li><tt>ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD</tt> - The encrypted
--   version of the Kafka client keystore password (if the user has the
--   Glue encrypt passwords setting selected).</li>
--   <li><tt>ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD</tt> - The encrypted
--   version of the Kafka client key password (if the user has the Glue
--   encrypt passwords setting selected).</li>
--   </ul>
--   
--   <a>$sel:lastUpdatedTime:Connection'</a>,
--   <a>connection_lastUpdatedTime</a> - The last time that this connection
--   definition was updated.
--   
--   <a>$sel:matchCriteria:Connection'</a>, <a>connection_matchCriteria</a>
--   - A list of criteria that can be used in selecting this connection.
--   
--   <a>$sel:physicalConnectionRequirements:Connection'</a>,
--   <a>connection_physicalConnectionRequirements</a> - A map of physical
--   connection requirements, such as virtual private cloud (VPC) and
--   <tt>SecurityGroup</tt>, that are needed to make this connection
--   successfully.
--   
--   <a>$sel:name:Connection'</a>, <a>connection_name</a> - The name of the
--   connection definition.
--   
--   <a>$sel:description:Connection'</a>, <a>connection_description</a> -
--   The description of the connection.
--   
--   <a>$sel:connectionType:Connection'</a>,
--   <a>connection_connectionType</a> - The type of the connection.
--   Currently, SFTP is not supported.
newConnection :: Connection

-- | A structure that is used to specify a connection to create or update.
--   
--   <i>See:</i> <a>newConnectionInput</a> smart constructor.
data ConnectionInput
ConnectionInput' :: Maybe [Text] -> Maybe PhysicalConnectionRequirements -> Maybe Text -> Text -> ConnectionType -> HashMap ConnectionPropertyKey Text -> ConnectionInput

-- | Create a value of <a>ConnectionInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:matchCriteria:ConnectionInput'</a>,
--   <a>connectionInput_matchCriteria</a> - A list of criteria that can be
--   used in selecting this connection.
--   
--   <a>$sel:physicalConnectionRequirements:ConnectionInput'</a>,
--   <a>connectionInput_physicalConnectionRequirements</a> - A map of
--   physical connection requirements, such as virtual private cloud (VPC)
--   and <tt>SecurityGroup</tt>, that are needed to successfully make this
--   connection.
--   
--   <a>$sel:description:ConnectionInput'</a>,
--   <a>connectionInput_description</a> - The description of the
--   connection.
--   
--   <a>$sel:name:ConnectionInput'</a>, <a>connectionInput_name</a> - The
--   name of the connection.
--   
--   <a>$sel:connectionType:ConnectionInput'</a>,
--   <a>connectionInput_connectionType</a> - The type of the connection.
--   Currently, these types are supported:
--   
--   <ul>
--   <li><tt>JDBC</tt> - Designates a connection to a database through Java
--   Database Connectivity (JDBC).</li>
--   <li><tt>KAFKA</tt> - Designates a connection to an Apache Kafka
--   streaming platform.</li>
--   <li><tt>MONGODB</tt> - Designates a connection to a MongoDB document
--   database.</li>
--   <li><tt>NETWORK</tt> - Designates a network connection to a data
--   source within an Amazon Virtual Private Cloud environment (Amazon
--   VPC).</li>
--   <li><tt>MARKETPLACE</tt> - Uses configuration settings contained in a
--   connector purchased from Amazon Web Services Marketplace to read from
--   and write to data stores that are not natively supported by Glue.</li>
--   <li><tt>CUSTOM</tt> - Uses configuration settings contained in a
--   custom connector to read from and write to data stores that are not
--   natively supported by Glue.</li>
--   </ul>
--   
--   SFTP is not supported.
--   
--   <a>$sel:connectionProperties:ConnectionInput'</a>,
--   <a>connectionInput_connectionProperties</a> - These key-value pairs
--   define parameters for the connection.
newConnectionInput :: Text -> ConnectionType -> ConnectionInput

-- | The data structure used by the Data Catalog to encrypt the password as
--   part of <tt>CreateConnection</tt> or <tt>UpdateConnection</tt> and
--   store it in the <tt>ENCRYPTED_PASSWORD</tt> field in the connection
--   properties. You can enable catalog encryption or only password
--   encryption.
--   
--   When a <tt>CreationConnection</tt> request arrives containing a
--   password, the Data Catalog first encrypts the password using your KMS
--   key. It then encrypts the whole connection object again if catalog
--   encryption is also enabled.
--   
--   This encryption requires that you set KMS key permissions to enable or
--   restrict access on the password key according to your security
--   requirements. For example, you might want only administrators to have
--   decrypt permission on the password key.
--   
--   <i>See:</i> <a>newConnectionPasswordEncryption</a> smart constructor.
data ConnectionPasswordEncryption
ConnectionPasswordEncryption' :: Maybe Text -> Bool -> ConnectionPasswordEncryption

-- | Create a value of <a>ConnectionPasswordEncryption</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:awsKmsKeyId:ConnectionPasswordEncryption'</a>,
--   <a>connectionPasswordEncryption_awsKmsKeyId</a> - An KMS key that is
--   used to encrypt the connection password.
--   
--   If connection password protection is enabled, the caller of
--   <tt>CreateConnection</tt> and <tt>UpdateConnection</tt> needs at least
--   <tt>kms:Encrypt</tt> permission on the specified KMS key, to encrypt
--   passwords before storing them in the Data Catalog.
--   
--   You can set the decrypt permission to enable or restrict access on the
--   password key according to your security requirements.
--   
--   
--   <a>$sel:returnConnectionPasswordEncrypted:ConnectionPasswordEncryption'</a>,
--   <a>connectionPasswordEncryption_returnConnectionPasswordEncrypted</a>
--   - When the <tt>ReturnConnectionPasswordEncrypted</tt> flag is set to
--   "true", passwords remain encrypted in the responses of
--   <tt>GetConnection</tt> and <tt>GetConnections</tt>. This encryption
--   takes effect independently from catalog encryption.
newConnectionPasswordEncryption :: Bool -> ConnectionPasswordEncryption

-- | Specifies the connections used by a job.
--   
--   <i>See:</i> <a>newConnectionsList</a> smart constructor.
data ConnectionsList
ConnectionsList' :: Maybe [Text] -> ConnectionsList

-- | Create a value of <a>ConnectionsList</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connections:ConnectionsList'</a>,
--   <a>connectionsList_connections</a> - A list of connections used by the
--   job.
newConnectionsList :: ConnectionsList

-- | The details of a crawl in the workflow.
--   
--   <i>See:</i> <a>newCrawl</a> smart constructor.
data Crawl
Crawl' :: Maybe POSIX -> Maybe CrawlState -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Crawl

-- | Create a value of <a>Crawl</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completedOn:Crawl'</a>, <a>crawl_completedOn</a> - The date
--   and time on which the crawl completed.
--   
--   <a>$sel:state:Crawl'</a>, <a>crawl_state</a> - The state of the
--   crawler.
--   
--   <a>$sel:startedOn:Crawl'</a>, <a>crawl_startedOn</a> - The date and
--   time on which the crawl started.
--   
--   <a>$sel:logStream:Crawl'</a>, <a>crawl_logStream</a> - The log stream
--   associated with the crawl.
--   
--   <a>$sel:logGroup:Crawl'</a>, <a>crawl_logGroup</a> - The log group
--   associated with the crawl.
--   
--   <a>$sel:errorMessage:Crawl'</a>, <a>crawl_errorMessage</a> - The error
--   message associated with the crawl.
newCrawl :: Crawl

-- | Specifies a crawler program that examines a data source and uses
--   classifiers to try to determine its schema. If successful, the crawler
--   records metadata concerning the data source in the Glue Data Catalog.
--   
--   <i>See:</i> <a>newCrawler</a> smart constructor.
data Crawler
Crawler' :: Maybe POSIX -> Maybe CrawlerState -> Maybe SchemaChangePolicy -> Maybe POSIX -> Maybe Schedule -> Maybe LastCrawlInfo -> Maybe Integer -> Maybe RecrawlPolicy -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe CrawlerTargets -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe LineageConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Crawler

-- | Create a value of <a>Crawler</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Crawler'</a>, <a>crawler_creationTime</a> - The
--   time that the crawler was created.
--   
--   <a>$sel:state:Crawler'</a>, <a>crawler_state</a> - Indicates whether
--   the crawler is running, or whether a run is pending.
--   
--   <a>$sel:schemaChangePolicy:Crawler'</a>,
--   <a>crawler_schemaChangePolicy</a> - The policy that specifies update
--   and delete behaviors for the crawler.
--   
--   <a>$sel:lastUpdated:Crawler'</a>, <a>crawler_lastUpdated</a> - The
--   time that the crawler was last updated.
--   
--   <a>$sel:schedule:Crawler'</a>, <a>crawler_schedule</a> - For scheduled
--   crawlers, the schedule when the crawler runs.
--   
--   <a>$sel:lastCrawl:Crawler'</a>, <a>crawler_lastCrawl</a> - The status
--   of the last crawl, and potentially error information if an error
--   occurred.
--   
--   <a>$sel:crawlElapsedTime:Crawler'</a>, <a>crawler_crawlElapsedTime</a>
--   - If the crawler is running, contains the total time elapsed since the
--   last crawl began.
--   
--   <a>$sel:recrawlPolicy:Crawler'</a>, <a>crawler_recrawlPolicy</a> - A
--   policy that specifies whether to crawl the entire dataset again, or to
--   crawl only folders that were added since the last crawler run.
--   
--   <a>$sel:classifiers:Crawler'</a>, <a>crawler_classifiers</a> - A list
--   of UTF-8 strings that specify the custom classifiers that are
--   associated with the crawler.
--   
--   <a>$sel:role':Crawler'</a>, <a>crawler_role</a> - The Amazon Resource
--   Name (ARN) of an IAM role that's used to access customer resources,
--   such as Amazon Simple Storage Service (Amazon S3) data.
--   
--   <a>$sel:name:Crawler'</a>, <a>crawler_name</a> - The name of the
--   crawler.
--   
--   <a>$sel:targets:Crawler'</a>, <a>crawler_targets</a> - A collection of
--   targets to crawl.
--   
--   <a>$sel:version:Crawler'</a>, <a>crawler_version</a> - The version of
--   the crawler.
--   
--   <a>$sel:databaseName:Crawler'</a>, <a>crawler_databaseName</a> - The
--   name of the database in which the crawler's output is stored.
--   
--   <a>$sel:crawlerSecurityConfiguration:Crawler'</a>,
--   <a>crawler_crawlerSecurityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used by this crawler.
--   
--   <a>$sel:lineageConfiguration:Crawler'</a>,
--   <a>crawler_lineageConfiguration</a> - A configuration that specifies
--   whether data lineage is enabled for the crawler.
--   
--   <a>$sel:configuration:Crawler'</a>, <a>crawler_configuration</a> -
--   Crawler configuration information. This versioned JSON string allows
--   users to specify aspects of a crawler's behavior. For more
--   information, see <a>Include and Exclude Patterns</a>.
--   
--   <a>$sel:tablePrefix:Crawler'</a>, <a>crawler_tablePrefix</a> - The
--   prefix added to the names of tables that are created.
--   
--   <a>$sel:description:Crawler'</a>, <a>crawler_description</a> - A
--   description of the crawler.
newCrawler :: Crawler

-- | Metrics for a specified crawler.
--   
--   <i>See:</i> <a>newCrawlerMetrics</a> smart constructor.
data CrawlerMetrics
CrawlerMetrics' :: Maybe Double -> Maybe Natural -> Maybe Bool -> Maybe Double -> Maybe Double -> Maybe Natural -> Maybe Natural -> Maybe Text -> CrawlerMetrics

-- | Create a value of <a>CrawlerMetrics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastRuntimeSeconds:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_lastRuntimeSeconds</a> - The duration of the
--   crawler's most recent run, in seconds.
--   
--   <a>$sel:tablesCreated:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_tablesCreated</a> - The number of tables created by
--   this crawler.
--   
--   <a>$sel:stillEstimating:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_stillEstimating</a> - True if the crawler is still
--   estimating how long it will take to complete this run.
--   
--   <a>$sel:medianRuntimeSeconds:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_medianRuntimeSeconds</a> - The median duration of
--   this crawler's runs, in seconds.
--   
--   <a>$sel:timeLeftSeconds:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_timeLeftSeconds</a> - The estimated time left to
--   complete a running crawl.
--   
--   <a>$sel:tablesDeleted:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_tablesDeleted</a> - The number of tables deleted by
--   this crawler.
--   
--   <a>$sel:tablesUpdated:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_tablesUpdated</a> - The number of tables updated by
--   this crawler.
--   
--   <a>$sel:crawlerName:CrawlerMetrics'</a>,
--   <a>crawlerMetrics_crawlerName</a> - The name of the crawler.
newCrawlerMetrics :: CrawlerMetrics

-- | The details of a Crawler node present in the workflow.
--   
--   <i>See:</i> <a>newCrawlerNodeDetails</a> smart constructor.
data CrawlerNodeDetails
CrawlerNodeDetails' :: Maybe [Crawl] -> CrawlerNodeDetails

-- | Create a value of <a>CrawlerNodeDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawls:CrawlerNodeDetails'</a>,
--   <a>crawlerNodeDetails_crawls</a> - A list of crawls represented by the
--   crawl node.
newCrawlerNodeDetails :: CrawlerNodeDetails

-- | Specifies data stores to crawl.
--   
--   <i>See:</i> <a>newCrawlerTargets</a> smart constructor.
data CrawlerTargets
CrawlerTargets' :: Maybe [DynamoDBTarget] -> Maybe [S3Target] -> Maybe [MongoDBTarget] -> Maybe [CatalogTarget] -> Maybe [JdbcTarget] -> CrawlerTargets

-- | Create a value of <a>CrawlerTargets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dynamoDBTargets:CrawlerTargets'</a>,
--   <a>crawlerTargets_dynamoDBTargets</a> - Specifies Amazon DynamoDB
--   targets.
--   
--   <a>$sel:s3Targets:CrawlerTargets'</a>, <a>crawlerTargets_s3Targets</a>
--   - Specifies Amazon Simple Storage Service (Amazon S3) targets.
--   
--   <a>$sel:mongoDBTargets:CrawlerTargets'</a>,
--   <a>crawlerTargets_mongoDBTargets</a> - Specifies Amazon DocumentDB or
--   MongoDB targets.
--   
--   <a>$sel:catalogTargets:CrawlerTargets'</a>,
--   <a>crawlerTargets_catalogTargets</a> - Specifies Glue Data Catalog
--   targets.
--   
--   <a>$sel:jdbcTargets:CrawlerTargets'</a>,
--   <a>crawlerTargets_jdbcTargets</a> - Specifies JDBC targets.
newCrawlerTargets :: CrawlerTargets

-- | Specifies a custom CSV classifier for <tt>CreateClassifier</tt> to
--   create.
--   
--   <i>See:</i> <a>newCreateCsvClassifierRequest</a> smart constructor.
data CreateCsvClassifierRequest
CreateCsvClassifierRequest' :: Maybe Text -> Maybe CsvHeaderOption -> Maybe Bool -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Text -> CreateCsvClassifierRequest

-- | Create a value of <a>CreateCsvClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:quoteSymbol:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_quoteSymbol</a> - A custom symbol to
--   denote what combines content into a single column value. Must be
--   different from the column delimiter.
--   
--   <a>$sel:containsHeader:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_containsHeader</a> - Indicates whether
--   the CSV file contains a header.
--   
--   <a>$sel:disableValueTrimming:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_disableValueTrimming</a> - Specifies not
--   to trim values before identifying the type of column values. The
--   default value is true.
--   
--   <a>$sel:header:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_header</a> - A list of strings
--   representing column names.
--   
--   <a>$sel:allowSingleColumn:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_allowSingleColumn</a> - Enables the
--   processing of files that contain only one column.
--   
--   <a>$sel:delimiter:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_delimiter</a> - A custom symbol to
--   denote what separates each column entry in the row.
--   
--   <a>$sel:name:CreateCsvClassifierRequest'</a>,
--   <a>createCsvClassifierRequest_name</a> - The name of the classifier.
newCreateCsvClassifierRequest :: Text -> CreateCsvClassifierRequest

-- | Specifies a <tt>grok</tt> classifier for <tt>CreateClassifier</tt> to
--   create.
--   
--   <i>See:</i> <a>newCreateGrokClassifierRequest</a> smart constructor.
data CreateGrokClassifierRequest
CreateGrokClassifierRequest' :: Maybe Text -> Text -> Text -> Text -> CreateGrokClassifierRequest

-- | Create a value of <a>CreateGrokClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customPatterns:CreateGrokClassifierRequest'</a>,
--   <a>createGrokClassifierRequest_customPatterns</a> - Optional custom
--   grok patterns used by this classifier.
--   
--   <a>$sel:classification:CreateGrokClassifierRequest'</a>,
--   <a>createGrokClassifierRequest_classification</a> - An identifier of
--   the data format that the classifier matches, such as Twitter, JSON,
--   Omniture logs, Amazon CloudWatch Logs, and so on.
--   
--   <a>$sel:name:CreateGrokClassifierRequest'</a>,
--   <a>createGrokClassifierRequest_name</a> - The name of the new
--   classifier.
--   
--   <a>$sel:grokPattern:CreateGrokClassifierRequest'</a>,
--   <a>createGrokClassifierRequest_grokPattern</a> - The grok pattern used
--   by this classifier.
newCreateGrokClassifierRequest :: Text -> Text -> Text -> CreateGrokClassifierRequest

-- | Specifies a JSON classifier for <tt>CreateClassifier</tt> to create.
--   
--   <i>See:</i> <a>newCreateJsonClassifierRequest</a> smart constructor.
data CreateJsonClassifierRequest
CreateJsonClassifierRequest' :: Text -> Text -> CreateJsonClassifierRequest

-- | Create a value of <a>CreateJsonClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateJsonClassifierRequest'</a>,
--   <a>createJsonClassifierRequest_name</a> - The name of the classifier.
--   
--   <a>$sel:jsonPath:CreateJsonClassifierRequest'</a>,
--   <a>createJsonClassifierRequest_jsonPath</a> - A <tt>JsonPath</tt>
--   string defining the JSON data for the classifier to classify. Glue
--   supports a subset of JsonPath, as described in <a>Writing JsonPath
--   Custom Classifiers</a>.
newCreateJsonClassifierRequest :: Text -> Text -> CreateJsonClassifierRequest

-- | Specifies an XML classifier for <tt>CreateClassifier</tt> to create.
--   
--   <i>See:</i> <a>newCreateXMLClassifierRequest</a> smart constructor.
data CreateXMLClassifierRequest
CreateXMLClassifierRequest' :: Maybe Text -> Text -> Text -> CreateXMLClassifierRequest

-- | Create a value of <a>CreateXMLClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rowTag:CreateXMLClassifierRequest'</a>,
--   <a>createXMLClassifierRequest_rowTag</a> - The XML tag designating the
--   element that contains each record in an XML document being parsed.
--   This can't identify a self-closing element (closed by <tt>/&gt;</tt>).
--   An empty row element that contains only attributes can be parsed as
--   long as it ends with a closing tag (for example, <tt>&lt;row
--   item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is okay, but <tt>&lt;row
--   item_a="A" item_b="B" /&gt;</tt> is not).
--   
--   <a>$sel:classification:CreateXMLClassifierRequest'</a>,
--   <a>createXMLClassifierRequest_classification</a> - An identifier of
--   the data format that the classifier matches.
--   
--   <a>$sel:name:CreateXMLClassifierRequest'</a>,
--   <a>createXMLClassifierRequest_name</a> - The name of the classifier.
newCreateXMLClassifierRequest :: Text -> Text -> CreateXMLClassifierRequest

-- | A classifier for custom <tt>CSV</tt> content.
--   
--   <i>See:</i> <a>newCsvClassifier</a> smart constructor.
data CsvClassifier
CsvClassifier' :: Maybe POSIX -> Maybe Text -> Maybe CsvHeaderOption -> Maybe POSIX -> Maybe Bool -> Maybe [Text] -> Maybe Integer -> Maybe Bool -> Maybe Text -> Text -> CsvClassifier

-- | Create a value of <a>CsvClassifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CsvClassifier'</a>,
--   <a>csvClassifier_creationTime</a> - The time that this classifier was
--   registered.
--   
--   <a>$sel:quoteSymbol:CsvClassifier'</a>,
--   <a>csvClassifier_quoteSymbol</a> - A custom symbol to denote what
--   combines content into a single column value. It must be different from
--   the column delimiter.
--   
--   <a>$sel:containsHeader:CsvClassifier'</a>,
--   <a>csvClassifier_containsHeader</a> - Indicates whether the CSV file
--   contains a header.
--   
--   <a>$sel:lastUpdated:CsvClassifier'</a>,
--   <a>csvClassifier_lastUpdated</a> - The time that this classifier was
--   last updated.
--   
--   <a>$sel:disableValueTrimming:CsvClassifier'</a>,
--   <a>csvClassifier_disableValueTrimming</a> - Specifies not to trim
--   values before identifying the type of column values. The default value
--   is <tt>true</tt>.
--   
--   <a>$sel:header:CsvClassifier'</a>, <a>csvClassifier_header</a> - A
--   list of strings representing column names.
--   
--   <a>$sel:version:CsvClassifier'</a>, <a>csvClassifier_version</a> - The
--   version of this classifier.
--   
--   <a>$sel:allowSingleColumn:CsvClassifier'</a>,
--   <a>csvClassifier_allowSingleColumn</a> - Enables the processing of
--   files that contain only one column.
--   
--   <a>$sel:delimiter:CsvClassifier'</a>, <a>csvClassifier_delimiter</a> -
--   A custom symbol to denote what separates each column entry in the row.
--   
--   <a>$sel:name:CsvClassifier'</a>, <a>csvClassifier_name</a> - The name
--   of the classifier.
newCsvClassifier :: Text -> CsvClassifier

-- | Contains configuration information for maintaining Data Catalog
--   security.
--   
--   <i>See:</i> <a>newDataCatalogEncryptionSettings</a> smart constructor.
data DataCatalogEncryptionSettings
DataCatalogEncryptionSettings' :: Maybe EncryptionAtRest -> Maybe ConnectionPasswordEncryption -> DataCatalogEncryptionSettings

-- | Create a value of <a>DataCatalogEncryptionSettings</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionAtRest:DataCatalogEncryptionSettings'</a>,
--   <a>dataCatalogEncryptionSettings_encryptionAtRest</a> - Specifies the
--   encryption-at-rest configuration for the Data Catalog.
--   
--   
--   <a>$sel:connectionPasswordEncryption:DataCatalogEncryptionSettings'</a>,
--   <a>dataCatalogEncryptionSettings_connectionPasswordEncryption</a> -
--   When connection password protection is enabled, the Data Catalog uses
--   a customer-provided key to encrypt the password as part of
--   <tt>CreateConnection</tt> or <tt>UpdateConnection</tt> and store it in
--   the <tt>ENCRYPTED_PASSWORD</tt> field in the connection properties.
--   You can enable catalog encryption or only password encryption.
newDataCatalogEncryptionSettings :: DataCatalogEncryptionSettings

-- | The Lake Formation principal.
--   
--   <i>See:</i> <a>newDataLakePrincipal</a> smart constructor.
data DataLakePrincipal
DataLakePrincipal' :: Maybe Text -> DataLakePrincipal

-- | Create a value of <a>DataLakePrincipal</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLakePrincipalIdentifier:DataLakePrincipal'</a>,
--   <a>dataLakePrincipal_dataLakePrincipalIdentifier</a> - An identifier
--   for the Lake Formation principal.
newDataLakePrincipal :: DataLakePrincipal

-- | The <tt>Database</tt> object represents a logical grouping of tables
--   that might reside in a Hive metastore or an RDBMS.
--   
--   <i>See:</i> <a>newDatabase</a> smart constructor.
data Database
Database' :: Maybe Text -> Maybe Text -> Maybe DatabaseIdentifier -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe POSIX -> Maybe [PrincipalPermissions] -> Text -> Database

-- | Create a value of <a>Database</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locationUri:Database'</a>, <a>database_locationUri</a> - The
--   location of the database (for example, an HDFS path).
--   
--   <a>$sel:catalogId:Database'</a>, <a>database_catalogId</a> - The ID of
--   the Data Catalog in which the database resides.
--   
--   <a>$sel:targetDatabase:Database'</a>, <a>database_targetDatabase</a> -
--   A <tt>DatabaseIdentifier</tt> structure that describes a target
--   database for resource linking.
--   
--   <a>$sel:parameters:Database'</a>, <a>database_parameters</a> - These
--   key-value pairs define parameters and properties of the database.
--   
--   <a>$sel:description:Database'</a>, <a>database_description</a> - A
--   description of the database.
--   
--   <a>$sel:createTime:Database'</a>, <a>database_createTime</a> - The
--   time at which the metadata database was created in the catalog.
--   
--   <a>$sel:createTableDefaultPermissions:Database'</a>,
--   <a>database_createTableDefaultPermissions</a> - Creates a set of
--   default permissions on the table for principals.
--   
--   <a>$sel:name:Database'</a>, <a>database_name</a> - The name of the
--   database. For Hive compatibility, this is folded to lowercase when it
--   is stored.
newDatabase :: Text -> Database

-- | A structure that describes a target database for resource linking.
--   
--   <i>See:</i> <a>newDatabaseIdentifier</a> smart constructor.
data DatabaseIdentifier
DatabaseIdentifier' :: Maybe Text -> Maybe Text -> DatabaseIdentifier

-- | Create a value of <a>DatabaseIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:DatabaseIdentifier'</a>,
--   <a>databaseIdentifier_catalogId</a> - The ID of the Data Catalog in
--   which the database resides.
--   
--   <a>$sel:databaseName:DatabaseIdentifier'</a>,
--   <a>databaseIdentifier_databaseName</a> - The name of the catalog
--   database.
newDatabaseIdentifier :: DatabaseIdentifier

-- | The structure used to create or update a database.
--   
--   <i>See:</i> <a>newDatabaseInput</a> smart constructor.
data DatabaseInput
DatabaseInput' :: Maybe Text -> Maybe DatabaseIdentifier -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe [PrincipalPermissions] -> Text -> DatabaseInput

-- | Create a value of <a>DatabaseInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locationUri:DatabaseInput'</a>,
--   <a>databaseInput_locationUri</a> - The location of the database (for
--   example, an HDFS path).
--   
--   <a>$sel:targetDatabase:DatabaseInput'</a>,
--   <a>databaseInput_targetDatabase</a> - A <tt>DatabaseIdentifier</tt>
--   structure that describes a target database for resource linking.
--   
--   <a>$sel:parameters:DatabaseInput'</a>, <a>databaseInput_parameters</a>
--   - These key-value pairs define parameters and properties of the
--   database.
--   
--   These key-value pairs define parameters and properties of the
--   database.
--   
--   <a>$sel:description:DatabaseInput'</a>,
--   <a>databaseInput_description</a> - A description of the database.
--   
--   <a>$sel:createTableDefaultPermissions:DatabaseInput'</a>,
--   <a>databaseInput_createTableDefaultPermissions</a> - Creates a set of
--   default permissions on the table for principals.
--   
--   <a>$sel:name:DatabaseInput'</a>, <a>databaseInput_name</a> - The name
--   of the database. For Hive compatibility, this is folded to lowercase
--   when it is stored.
newDatabaseInput :: Text -> DatabaseInput

-- | Defines column statistics supported for timestamp data columns.
--   
--   <i>See:</i> <a>newDateColumnStatisticsData</a> smart constructor.
data DateColumnStatisticsData
DateColumnStatisticsData' :: Maybe POSIX -> Maybe POSIX -> Natural -> Natural -> DateColumnStatisticsData

-- | Create a value of <a>DateColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumValue:DateColumnStatisticsData'</a>,
--   <a>dateColumnStatisticsData_maximumValue</a> - The highest value in
--   the column.
--   
--   <a>$sel:minimumValue:DateColumnStatisticsData'</a>,
--   <a>dateColumnStatisticsData_minimumValue</a> - The lowest value in the
--   column.
--   
--   <a>$sel:numberOfNulls:DateColumnStatisticsData'</a>,
--   <a>dateColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
--   
--   <a>$sel:numberOfDistinctValues:DateColumnStatisticsData'</a>,
--   <a>dateColumnStatisticsData_numberOfDistinctValues</a> - The number of
--   distinct values in a column.
newDateColumnStatisticsData :: Natural -> Natural -> DateColumnStatisticsData

-- | Defines column statistics supported for fixed-point number data
--   columns.
--   
--   <i>See:</i> <a>newDecimalColumnStatisticsData</a> smart constructor.
data DecimalColumnStatisticsData
DecimalColumnStatisticsData' :: Maybe DecimalNumber -> Maybe DecimalNumber -> Natural -> Natural -> DecimalColumnStatisticsData

-- | Create a value of <a>DecimalColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumValue:DecimalColumnStatisticsData'</a>,
--   <a>decimalColumnStatisticsData_maximumValue</a> - The highest value in
--   the column.
--   
--   <a>$sel:minimumValue:DecimalColumnStatisticsData'</a>,
--   <a>decimalColumnStatisticsData_minimumValue</a> - The lowest value in
--   the column.
--   
--   <a>$sel:numberOfNulls:DecimalColumnStatisticsData'</a>,
--   <a>decimalColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
--   
--   <a>$sel:numberOfDistinctValues:DecimalColumnStatisticsData'</a>,
--   <a>decimalColumnStatisticsData_numberOfDistinctValues</a> - The number
--   of distinct values in a column.
newDecimalColumnStatisticsData :: Natural -> Natural -> DecimalColumnStatisticsData

-- | Contains a numeric value in decimal format.
--   
--   <i>See:</i> <a>newDecimalNumber</a> smart constructor.
data DecimalNumber
DecimalNumber' :: Base64 -> Int -> DecimalNumber

-- | Create a value of <a>DecimalNumber</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unscaledValue:DecimalNumber'</a>,
--   <a>decimalNumber_unscaledValue</a> - The unscaled numeric value.-- --
--   <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:scale:DecimalNumber'</a>, <a>decimalNumber_scale</a> - The
--   scale that determines where the decimal point falls in the unscaled
--   value.
newDecimalNumber :: ByteString -> Int -> DecimalNumber

-- | A development endpoint where a developer can remotely debug extract,
--   transform, and load (ETL) scripts.
--   
--   <i>See:</i> <a>newDevEndpoint</a> smart constructor.
data DevEndpoint
DevEndpoint' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe WorkerType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> DevEndpoint

-- | Create a value of <a>DevEndpoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DevEndpoint'</a>, <a>devEndpoint_status</a> - The
--   current status of this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:failureReason:DevEndpoint'</a>,
--   <a>devEndpoint_failureReason</a> - The reason for a current failure in
--   this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:endpointName:DevEndpoint'</a>, <a>devEndpoint_endpointName</a>
--   - The name of the <tt>DevEndpoint</tt>.
--   
--   <a>$sel:numberOfWorkers:DevEndpoint'</a>,
--   <a>devEndpoint_numberOfWorkers</a> - The number of workers of a
--   defined <tt>workerType</tt> that are allocated to the development
--   endpoint.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
--   
--   <a>$sel:extraPythonLibsS3Path:DevEndpoint'</a>,
--   <a>devEndpoint_extraPythonLibsS3Path</a> - The paths to one or more
--   Python libraries in an Amazon S3 bucket that should be loaded in your
--   <tt>DevEndpoint</tt>. Multiple values must be complete paths separated
--   by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not currently supported.
--   
--   <a>$sel:lastUpdateStatus:DevEndpoint'</a>,
--   <a>devEndpoint_lastUpdateStatus</a> - The status of the last update.
--   
--   <a>$sel:securityGroupIds:DevEndpoint'</a>,
--   <a>devEndpoint_securityGroupIds</a> - A list of security group
--   identifiers used in this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:lastModifiedTimestamp:DevEndpoint'</a>,
--   <a>devEndpoint_lastModifiedTimestamp</a> - The point in time at which
--   this <tt>DevEndpoint</tt> was last modified.
--   
--   <a>$sel:publicKeys:DevEndpoint'</a>, <a>devEndpoint_publicKeys</a> - A
--   list of public keys to be used by the <tt>DevEndpoints</tt> for
--   authentication. Using this attribute is preferred over a single public
--   key because the public keys allow you to have a different private key
--   per client.
--   
--   If you previously created an endpoint with a public key, you must
--   remove that key to be able to set a list of public keys. Call the
--   <tt>UpdateDevEndpoint</tt> API operation with the public key content
--   in the <tt>deletePublicKeys</tt> attribute, and the list of new keys
--   in the <tt>addPublicKeys</tt> attribute.
--   
--   <a>$sel:vpcId:DevEndpoint'</a>, <a>devEndpoint_vpcId</a> - The ID of
--   the virtual private cloud (VPC) used by this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:arguments:DevEndpoint'</a>, <a>devEndpoint_arguments</a> - A
--   map of arguments used to configure the <tt>DevEndpoint</tt>.
--   
--   Valid arguments are:
--   
--   <ul>
--   <li><pre>"--enable-glue-datacatalog": ""</pre></li>
--   </ul>
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
--   
--   <a>$sel:privateAddress:DevEndpoint'</a>,
--   <a>devEndpoint_privateAddress</a> - A private IP address to access the
--   <tt>DevEndpoint</tt> within a VPC if the <tt>DevEndpoint</tt> is
--   created within one. The <tt>PrivateAddress</tt> field is present only
--   when you create the <tt>DevEndpoint</tt> within your VPC.
--   
--   <a>$sel:workerType:DevEndpoint'</a>, <a>devEndpoint_workerType</a> -
--   The type of predefined worker that is allocated to the development
--   endpoint. Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   Known issue: when a development endpoint is created with the
--   <tt>G.2X</tt> <tt>WorkerType</tt> configuration, the Spark drivers for
--   the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64
--   GB disk.
--   
--   <a>$sel:securityConfiguration:DevEndpoint'</a>,
--   <a>devEndpoint_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this
--   <tt>DevEndpoint</tt>.
--   
--   <a>$sel:publicKey:DevEndpoint'</a>, <a>devEndpoint_publicKey</a> - The
--   public key to be used by this <tt>DevEndpoint</tt> for authentication.
--   This attribute is provided for backward compatibility because the
--   recommended attribute to use is public keys.
--   
--   <a>$sel:subnetId:DevEndpoint'</a>, <a>devEndpoint_subnetId</a> - The
--   subnet ID for this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:glueVersion:DevEndpoint'</a>, <a>devEndpoint_glueVersion</a> -
--   Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   running your ETL scripts on development endpoints.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Development endpoints that are created without specifying a Glue
--   version default to Glue 0.9.
--   
--   You can specify a version of Python support for development endpoints
--   by using the <tt>Arguments</tt> parameter in the
--   <tt>CreateDevEndpoint</tt> or <tt>UpdateDevEndpoint</tt> APIs. If no
--   arguments are provided, the version defaults to Python 2.
--   
--   <a>$sel:numberOfNodes:DevEndpoint'</a>,
--   <a>devEndpoint_numberOfNodes</a> - The number of Glue Data Processing
--   Units (DPUs) allocated to this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:publicAddress:DevEndpoint'</a>,
--   <a>devEndpoint_publicAddress</a> - The public IP address used by this
--   <tt>DevEndpoint</tt>. The <tt>PublicAddress</tt> field is present only
--   when you create a non-virtual private cloud (VPC)
--   <tt>DevEndpoint</tt>.
--   
--   <a>$sel:availabilityZone:DevEndpoint'</a>,
--   <a>devEndpoint_availabilityZone</a> - The AWS Availability Zone where
--   this <tt>DevEndpoint</tt> is located.
--   
--   <a>$sel:zeppelinRemoteSparkInterpreterPort:DevEndpoint'</a>,
--   <a>devEndpoint_zeppelinRemoteSparkInterpreterPort</a> - The Apache
--   Zeppelin port for the remote Apache Spark interpreter.
--   
--   <a>$sel:extraJarsS3Path:DevEndpoint'</a>,
--   <a>devEndpoint_extraJarsS3Path</a> - The path to one or more Java
--   <tt>.jar</tt> files in an S3 bucket that should be loaded in your
--   <tt>DevEndpoint</tt>.
--   
--   You can only use pure Java/Scala libraries with a
--   <tt>DevEndpoint</tt>.
--   
--   <a>$sel:createdTimestamp:DevEndpoint'</a>,
--   <a>devEndpoint_createdTimestamp</a> - The point in time at which this
--   DevEndpoint was created.
--   
--   <a>$sel:yarnEndpointAddress:DevEndpoint'</a>,
--   <a>devEndpoint_yarnEndpointAddress</a> - The YARN endpoint address
--   used by this <tt>DevEndpoint</tt>.
--   
--   <a>$sel:roleArn:DevEndpoint'</a>, <a>devEndpoint_roleArn</a> - The
--   Amazon Resource Name (ARN) of the IAM role used in this
--   <tt>DevEndpoint</tt>.
newDevEndpoint :: DevEndpoint

-- | Custom libraries to be loaded into a development endpoint.
--   
--   <i>See:</i> <a>newDevEndpointCustomLibraries</a> smart constructor.
data DevEndpointCustomLibraries
DevEndpointCustomLibraries' :: Maybe Text -> Maybe Text -> DevEndpointCustomLibraries

-- | Create a value of <a>DevEndpointCustomLibraries</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:extraPythonLibsS3Path:DevEndpointCustomLibraries'</a>,
--   <a>devEndpointCustomLibraries_extraPythonLibsS3Path</a> - The paths to
--   one or more Python libraries in an Amazon Simple Storage Service
--   (Amazon S3) bucket that should be loaded in your <tt>DevEndpoint</tt>.
--   Multiple values must be complete paths separated by a comma.
--   
--   You can only use pure Python libraries with a <tt>DevEndpoint</tt>.
--   Libraries that rely on C extensions, such as the <a>pandas</a> Python
--   data analysis library, are not currently supported.
--   
--   <a>$sel:extraJarsS3Path:DevEndpointCustomLibraries'</a>,
--   <a>devEndpointCustomLibraries_extraJarsS3Path</a> - The path to one or
--   more Java <tt>.jar</tt> files in an S3 bucket that should be loaded in
--   your <tt>DevEndpoint</tt>.
--   
--   You can only use pure Java/Scala libraries with a
--   <tt>DevEndpoint</tt>.
newDevEndpointCustomLibraries :: DevEndpointCustomLibraries

-- | Defines column statistics supported for floating-point number data
--   columns.
--   
--   <i>See:</i> <a>newDoubleColumnStatisticsData</a> smart constructor.
data DoubleColumnStatisticsData
DoubleColumnStatisticsData' :: Maybe Double -> Maybe Double -> Natural -> Natural -> DoubleColumnStatisticsData

-- | Create a value of <a>DoubleColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumValue:DoubleColumnStatisticsData'</a>,
--   <a>doubleColumnStatisticsData_maximumValue</a> - The highest value in
--   the column.
--   
--   <a>$sel:minimumValue:DoubleColumnStatisticsData'</a>,
--   <a>doubleColumnStatisticsData_minimumValue</a> - The lowest value in
--   the column.
--   
--   <a>$sel:numberOfNulls:DoubleColumnStatisticsData'</a>,
--   <a>doubleColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
--   
--   <a>$sel:numberOfDistinctValues:DoubleColumnStatisticsData'</a>,
--   <a>doubleColumnStatisticsData_numberOfDistinctValues</a> - The number
--   of distinct values in a column.
newDoubleColumnStatisticsData :: Natural -> Natural -> DoubleColumnStatisticsData

-- | Specifies an Amazon DynamoDB table to crawl.
--   
--   <i>See:</i> <a>newDynamoDBTarget</a> smart constructor.
data DynamoDBTarget
DynamoDBTarget' :: Maybe Text -> Maybe Double -> Maybe Bool -> DynamoDBTarget

-- | Create a value of <a>DynamoDBTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:DynamoDBTarget'</a>, <a>dynamoDBTarget_path</a> - The
--   name of the DynamoDB table to crawl.
--   
--   <a>$sel:scanRate:DynamoDBTarget'</a>, <a>dynamoDBTarget_scanRate</a> -
--   The percentage of the configured read capacity units to use by the
--   Glue crawler. Read capacity units is a term defined by DynamoDB, and
--   is a numeric value that acts as rate limiter for the number of reads
--   that can be performed on that table per second.
--   
--   The valid values are null or a value between 0.1 to 1.5. A null value
--   is used when user does not provide a value, and defaults to 0.5 of the
--   configured Read Capacity Unit (for provisioned tables), or 0.25 of the
--   max configured Read Capacity Unit (for tables using on-demand mode).
--   
--   <a>$sel:scanAll:DynamoDBTarget'</a>, <a>dynamoDBTarget_scanAll</a> -
--   Indicates whether to scan all the records, or to sample rows from the
--   table. Scanning all the records can take a long time when the table is
--   not a high throughput table.
--   
--   A value of <tt>true</tt> means to scan all records, while a value of
--   <tt>false</tt> means to sample the records. If no value is specified,
--   the value defaults to <tt>true</tt>.
newDynamoDBTarget :: DynamoDBTarget

-- | An edge represents a directed connection between two components on a
--   workflow graph.
--   
--   <i>See:</i> <a>newEdge</a> smart constructor.
data Edge
Edge' :: Maybe Text -> Maybe Text -> Edge

-- | Create a value of <a>Edge</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceId:Edge'</a>, <a>edge_sourceId</a> - The unique of the
--   node within the workflow where the edge starts.
--   
--   <a>$sel:destinationId:Edge'</a>, <a>edge_destinationId</a> - The
--   unique of the node within the workflow where the edge ends.
newEdge :: Edge

-- | Specifies the encryption-at-rest configuration for the Data Catalog.
--   
--   <i>See:</i> <a>newEncryptionAtRest</a> smart constructor.
data EncryptionAtRest
EncryptionAtRest' :: Maybe Text -> CatalogEncryptionMode -> EncryptionAtRest

-- | Create a value of <a>EncryptionAtRest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sseAwsKmsKeyId:EncryptionAtRest'</a>,
--   <a>encryptionAtRest_sseAwsKmsKeyId</a> - The ID of the KMS key to use
--   for encryption at rest.
--   
--   <a>$sel:catalogEncryptionMode:EncryptionAtRest'</a>,
--   <a>encryptionAtRest_catalogEncryptionMode</a> - The encryption-at-rest
--   mode for encrypting Data Catalog data.
newEncryptionAtRest :: CatalogEncryptionMode -> EncryptionAtRest

-- | Specifies an encryption configuration.
--   
--   <i>See:</i> <a>newEncryptionConfiguration</a> smart constructor.
data EncryptionConfiguration
EncryptionConfiguration' :: Maybe [S3Encryption] -> Maybe JobBookmarksEncryption -> Maybe CloudWatchEncryption -> EncryptionConfiguration

-- | Create a value of <a>EncryptionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Encryption:EncryptionConfiguration'</a>,
--   <a>encryptionConfiguration_s3Encryption</a> - The encryption
--   configuration for Amazon Simple Storage Service (Amazon S3) data.
--   
--   <a>$sel:jobBookmarksEncryption:EncryptionConfiguration'</a>,
--   <a>encryptionConfiguration_jobBookmarksEncryption</a> - The encryption
--   configuration for job bookmarks.
--   
--   <a>$sel:cloudWatchEncryption:EncryptionConfiguration'</a>,
--   <a>encryptionConfiguration_cloudWatchEncryption</a> - The encryption
--   configuration for Amazon CloudWatch.
newEncryptionConfiguration :: EncryptionConfiguration

-- | Contains details about an error.
--   
--   <i>See:</i> <a>newErrorDetail</a> smart constructor.
data ErrorDetail
ErrorDetail' :: Maybe Text -> Maybe Text -> ErrorDetail

-- | Create a value of <a>ErrorDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:ErrorDetail'</a>, <a>errorDetail_errorCode</a> - The
--   code associated with this error.
--   
--   <a>$sel:errorMessage:ErrorDetail'</a>, <a>errorDetail_errorMessage</a>
--   - A message describing the error.
newErrorDetail :: ErrorDetail

-- | An object containing error details.
--   
--   <i>See:</i> <a>newErrorDetails</a> smart constructor.
data ErrorDetails
ErrorDetails' :: Maybe Text -> Maybe Text -> ErrorDetails

-- | Create a value of <a>ErrorDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:ErrorDetails'</a>, <a>errorDetails_errorCode</a> -
--   The error code for an error.
--   
--   <a>$sel:errorMessage:ErrorDetails'</a>,
--   <a>errorDetails_errorMessage</a> - The error message for an error.
newErrorDetails :: ErrorDetails

-- | Evaluation metrics provide an estimate of the quality of your machine
--   learning transform.
--   
--   <i>See:</i> <a>newEvaluationMetrics</a> smart constructor.
data EvaluationMetrics
EvaluationMetrics' :: Maybe FindMatchesMetrics -> TransformType -> EvaluationMetrics

-- | Create a value of <a>EvaluationMetrics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:findMatchesMetrics:EvaluationMetrics'</a>,
--   <a>evaluationMetrics_findMatchesMetrics</a> - The evaluation metrics
--   for the find matches algorithm.
--   
--   <a>$sel:transformType:EvaluationMetrics'</a>,
--   <a>evaluationMetrics_transformType</a> - The type of machine learning
--   transform.
newEvaluationMetrics :: TransformType -> EvaluationMetrics

-- | Batch condition that must be met (specified number of events received
--   or batch time window expired) before EventBridge event trigger fires.
--   
--   <i>See:</i> <a>newEventBatchingCondition</a> smart constructor.
data EventBatchingCondition
EventBatchingCondition' :: Maybe Natural -> Natural -> EventBatchingCondition

-- | Create a value of <a>EventBatchingCondition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchWindow:EventBatchingCondition'</a>,
--   <a>eventBatchingCondition_batchWindow</a> - Window of time in seconds
--   after which EventBridge event trigger fires. Window starts when first
--   event is received.
--   
--   <a>$sel:batchSize:EventBatchingCondition'</a>,
--   <a>eventBatchingCondition_batchSize</a> - Number of events that must
--   be received from Amazon EventBridge before EventBridge event trigger
--   fires.
newEventBatchingCondition :: Natural -> EventBatchingCondition

-- | An execution property of a job.
--   
--   <i>See:</i> <a>newExecutionProperty</a> smart constructor.
data ExecutionProperty
ExecutionProperty' :: Maybe Int -> ExecutionProperty

-- | Create a value of <a>ExecutionProperty</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxConcurrentRuns:ExecutionProperty'</a>,
--   <a>executionProperty_maxConcurrentRuns</a> - The maximum number of
--   concurrent runs allowed for the job. The default is 1. An error is
--   returned when this threshold is reached. The maximum value you can
--   specify is controlled by a service limit.
newExecutionProperty :: ExecutionProperty

-- | Specifies configuration properties for an exporting labels task run.
--   
--   <i>See:</i> <a>newExportLabelsTaskRunProperties</a> smart constructor.
data ExportLabelsTaskRunProperties
ExportLabelsTaskRunProperties' :: Maybe Text -> ExportLabelsTaskRunProperties

-- | Create a value of <a>ExportLabelsTaskRunProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputS3Path:ExportLabelsTaskRunProperties'</a>,
--   <a>exportLabelsTaskRunProperties_outputS3Path</a> - The Amazon Simple
--   Storage Service (Amazon S3) path where you will export the labels.
newExportLabelsTaskRunProperties :: ExportLabelsTaskRunProperties

-- | The evaluation metrics for the find matches algorithm. The quality of
--   your machine learning transform is measured by getting your transform
--   to predict some matches and comparing the results to known matches
--   from the same dataset. The quality metrics are based on a subset of
--   your data, so they are not precise.
--   
--   <i>See:</i> <a>newFindMatchesMetrics</a> smart constructor.
data FindMatchesMetrics
FindMatchesMetrics' :: Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> Maybe [ColumnImportance] -> Maybe ConfusionMatrix -> FindMatchesMetrics

-- | Create a value of <a>FindMatchesMetrics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:f1:FindMatchesMetrics'</a>, <a>findMatchesMetrics_f1</a> - The
--   maximum F1 metric indicates the transform's accuracy between 0 and 1,
--   where 1 is the best accuracy.
--   
--   For more information, see <a>F1 score</a> in Wikipedia.
--   
--   <a>$sel:areaUnderPRCurve:FindMatchesMetrics'</a>,
--   <a>findMatchesMetrics_areaUnderPRCurve</a> - The area under the
--   precision/recall curve (AUPRC) is a single number measuring the
--   overall quality of the transform, that is independent of the choice
--   made for precision vs. recall. Higher values indicate that you have a
--   more attractive precision vs. recall tradeoff.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
--   
--   <a>$sel:recall:FindMatchesMetrics'</a>,
--   <a>findMatchesMetrics_recall</a> - The recall metric indicates that
--   for an actual match, how often your transform predicts the match.
--   Specifically, it measures how well the transform finds true positives
--   from the total records in the source data.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
--   
--   <a>$sel:precision:FindMatchesMetrics'</a>,
--   <a>findMatchesMetrics_precision</a> - The precision metric indicates
--   when often your transform is correct when it predicts a match.
--   Specifically, it measures how well the transform finds true positives
--   from the total true positives possible.
--   
--   For more information, see <a>Precision and recall</a> in Wikipedia.
--   
--   <a>$sel:columnImportances:FindMatchesMetrics'</a>,
--   <a>findMatchesMetrics_columnImportances</a> - A list of
--   <tt>ColumnImportance</tt> structures containing column importance
--   metrics, sorted in order of descending importance.
--   
--   <a>$sel:confusionMatrix:FindMatchesMetrics'</a>,
--   <a>findMatchesMetrics_confusionMatrix</a> - The confusion matrix shows
--   you what your transform is predicting accurately and what types of
--   errors it is making.
--   
--   For more information, see <a>Confusion matrix</a> in Wikipedia.
newFindMatchesMetrics :: FindMatchesMetrics

-- | The parameters to configure the find matches transform.
--   
--   <i>See:</i> <a>newFindMatchesParameters</a> smart constructor.
data FindMatchesParameters
FindMatchesParameters' :: Maybe Bool -> Maybe Double -> Maybe Double -> Maybe Text -> FindMatchesParameters

-- | Create a value of <a>FindMatchesParameters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enforceProvidedLabels:FindMatchesParameters'</a>,
--   <a>findMatchesParameters_enforceProvidedLabels</a> - The value to
--   switch on or off to force the output to match the provided labels from
--   users. If the value is <tt>True</tt>, the <tt>find matches</tt>
--   transform forces the output to match the provided labels. The results
--   override the normal conflation results. If the value is
--   <tt>False</tt>, the <tt>find matches</tt> transform does not ensure
--   all the labels provided are respected, and the results rely on the
--   trained model.
--   
--   Note that setting this value to true may increase the conflation
--   execution time.
--   
--   <a>$sel:accuracyCostTradeoff:FindMatchesParameters'</a>,
--   <a>findMatchesParameters_accuracyCostTradeoff</a> - The value that is
--   selected when tuning your transform for a balance between accuracy and
--   cost. A value of 0.5 means that the system balances accuracy and cost
--   concerns. A value of 1.0 means a bias purely for accuracy, which
--   typically results in a higher cost, sometimes substantially higher. A
--   value of 0.0 means a bias purely for cost, which results in a less
--   accurate <tt>FindMatches</tt> transform, sometimes with unacceptable
--   accuracy.
--   
--   Accuracy measures how well the transform finds true positives and true
--   negatives. Increasing accuracy requires more machine resources and
--   cost. But it also results in increased recall.
--   
--   Cost measures how many compute resources, and thus money, are consumed
--   to run the transform.
--   
--   <a>$sel:precisionRecallTradeoff:FindMatchesParameters'</a>,
--   <a>findMatchesParameters_precisionRecallTradeoff</a> - The value
--   selected when tuning your transform for a balance between precision
--   and recall. A value of 0.5 means no preference; a value of 1.0 means a
--   bias purely for precision, and a value of 0.0 means a bias for recall.
--   Because this is a tradeoff, choosing values close to 1.0 means very
--   low recall, and choosing values close to 0.0 results in very low
--   precision.
--   
--   The precision metric indicates how often your model is correct when it
--   predicts a match.
--   
--   The recall metric indicates that for an actual match, how often your
--   model predicts the match.
--   
--   <a>$sel:primaryKeyColumnName:FindMatchesParameters'</a>,
--   <a>findMatchesParameters_primaryKeyColumnName</a> - The name of a
--   column that uniquely identifies rows in the source table. Used to help
--   identify matching records.
newFindMatchesParameters :: FindMatchesParameters

-- | Specifies configuration properties for a Find Matches task run.
--   
--   <i>See:</i> <a>newFindMatchesTaskRunProperties</a> smart constructor.
data FindMatchesTaskRunProperties
FindMatchesTaskRunProperties' :: Maybe Text -> Maybe Text -> Maybe Text -> FindMatchesTaskRunProperties

-- | Create a value of <a>FindMatchesTaskRunProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:FindMatchesTaskRunProperties'</a>,
--   <a>findMatchesTaskRunProperties_jobId</a> - The job ID for the Find
--   Matches task run.
--   
--   <a>$sel:jobName:FindMatchesTaskRunProperties'</a>,
--   <a>findMatchesTaskRunProperties_jobName</a> - The name assigned to the
--   job for the Find Matches task run.
--   
--   <a>$sel:jobRunId:FindMatchesTaskRunProperties'</a>,
--   <a>findMatchesTaskRunProperties_jobRunId</a> - The job run ID for the
--   Find Matches task run.
newFindMatchesTaskRunProperties :: FindMatchesTaskRunProperties

-- | Filters the connection definitions that are returned by the
--   <tt>GetConnections</tt> API operation.
--   
--   <i>See:</i> <a>newGetConnectionsFilter</a> smart constructor.
data GetConnectionsFilter
GetConnectionsFilter' :: Maybe [Text] -> Maybe ConnectionType -> GetConnectionsFilter

-- | Create a value of <a>GetConnectionsFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:matchCriteria:GetConnectionsFilter'</a>,
--   <a>getConnectionsFilter_matchCriteria</a> - A criteria string that
--   must match the criteria recorded in the connection definition for that
--   connection definition to be returned.
--   
--   <a>$sel:connectionType:GetConnectionsFilter'</a>,
--   <a>getConnectionsFilter_connectionType</a> - The type of connections
--   to return. Currently, SFTP is not supported.
newGetConnectionsFilter :: GetConnectionsFilter

-- | A structure for returning a resource policy.
--   
--   <i>See:</i> <a>newGluePolicy</a> smart constructor.
data GluePolicy
GluePolicy' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> GluePolicy

-- | Create a value of <a>GluePolicy</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyInJson:GluePolicy'</a>, <a>gluePolicy_policyInJson</a> -
--   Contains the requested policy document, in JSON format.
--   
--   <a>$sel:updateTime:GluePolicy'</a>, <a>gluePolicy_updateTime</a> - The
--   date and time at which the policy was last updated.
--   
--   <a>$sel:policyHash:GluePolicy'</a>, <a>gluePolicy_policyHash</a> -
--   Contains the hash value associated with this policy.
--   
--   <a>$sel:createTime:GluePolicy'</a>, <a>gluePolicy_createTime</a> - The
--   date and time at which the policy was created.
newGluePolicy :: GluePolicy

-- | The database and table in the Glue Data Catalog that is used for input
--   or output data.
--   
--   <i>See:</i> <a>newGlueTable</a> smart constructor.
data GlueTable
GlueTable' :: Maybe Text -> Maybe Text -> Text -> Text -> GlueTable

-- | Create a value of <a>GlueTable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:GlueTable'</a>, <a>glueTable_catalogId</a> - A
--   unique identifier for the Glue Data Catalog.
--   
--   <a>$sel:connectionName:GlueTable'</a>, <a>glueTable_connectionName</a>
--   - The name of the connection to the Glue Data Catalog.
--   
--   <a>$sel:databaseName:GlueTable'</a>, <a>glueTable_databaseName</a> - A
--   database name in the Glue Data Catalog.
--   
--   <a>$sel:tableName:GlueTable'</a>, <a>glueTable_tableName</a> - A table
--   name in the Glue Data Catalog.
newGlueTable :: Text -> Text -> GlueTable

-- | A classifier that uses <tt>grok</tt> patterns.
--   
--   <i>See:</i> <a>newGrokClassifier</a> smart constructor.
data GrokClassifier
GrokClassifier' :: Maybe POSIX -> Maybe POSIX -> Maybe Integer -> Maybe Text -> Text -> Text -> Text -> GrokClassifier

-- | Create a value of <a>GrokClassifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:GrokClassifier'</a>,
--   <a>grokClassifier_creationTime</a> - The time that this classifier was
--   registered.
--   
--   <a>$sel:lastUpdated:GrokClassifier'</a>,
--   <a>grokClassifier_lastUpdated</a> - The time that this classifier was
--   last updated.
--   
--   <a>$sel:version:GrokClassifier'</a>, <a>grokClassifier_version</a> -
--   The version of this classifier.
--   
--   <a>$sel:customPatterns:GrokClassifier'</a>,
--   <a>grokClassifier_customPatterns</a> - Optional custom grok patterns
--   defined by this classifier. For more information, see custom patterns
--   in <a>Writing Custom Classifiers</a>.
--   
--   <a>$sel:name:GrokClassifier'</a>, <a>grokClassifier_name</a> - The
--   name of the classifier.
--   
--   <a>$sel:classification:GrokClassifier'</a>,
--   <a>grokClassifier_classification</a> - An identifier of the data
--   format that the classifier matches, such as Twitter, JSON, Omniture
--   logs, and so on.
--   
--   <a>$sel:grokPattern:GrokClassifier'</a>,
--   <a>grokClassifier_grokPattern</a> - The grok pattern applied to a data
--   store by this classifier. For more information, see built-in patterns
--   in <a>Writing Custom Classifiers</a>.
newGrokClassifier :: Text -> Text -> Text -> GrokClassifier

-- | Specifies configuration properties for an importing labels task run.
--   
--   <i>See:</i> <a>newImportLabelsTaskRunProperties</a> smart constructor.
data ImportLabelsTaskRunProperties
ImportLabelsTaskRunProperties' :: Maybe Bool -> Maybe Text -> ImportLabelsTaskRunProperties

-- | Create a value of <a>ImportLabelsTaskRunProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replace:ImportLabelsTaskRunProperties'</a>,
--   <a>importLabelsTaskRunProperties_replace</a> - Indicates whether to
--   overwrite your existing labels.
--   
--   <a>$sel:inputS3Path:ImportLabelsTaskRunProperties'</a>,
--   <a>importLabelsTaskRunProperties_inputS3Path</a> - The Amazon Simple
--   Storage Service (Amazon S3) path from where you will import the
--   labels.
newImportLabelsTaskRunProperties :: ImportLabelsTaskRunProperties

-- | Specifies a JDBC data store to crawl.
--   
--   <i>See:</i> <a>newJdbcTarget</a> smart constructor.
data JdbcTarget
JdbcTarget' :: Maybe Text -> Maybe Text -> Maybe [Text] -> JdbcTarget

-- | Create a value of <a>JdbcTarget</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:JdbcTarget'</a>, <a>jdbcTarget_path</a> - The path of the
--   JDBC target.
--   
--   <a>$sel:connectionName:JdbcTarget'</a>,
--   <a>jdbcTarget_connectionName</a> - The name of the connection to use
--   to connect to the JDBC target.
--   
--   <a>$sel:exclusions:JdbcTarget'</a>, <a>jdbcTarget_exclusions</a> - A
--   list of glob patterns used to exclude from the crawl. For more
--   information, see <a>Catalog Tables with a Crawler</a>.
newJdbcTarget :: JdbcTarget

-- | Specifies a job definition.
--   
--   <i>See:</i> <a>newJob</a> smart constructor.
data Job
Job' :: Maybe Int -> Maybe JobCommand -> Maybe NotificationProperty -> Maybe POSIX -> Maybe ConnectionsList -> Maybe WorkerType -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe ExecutionProperty -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe POSIX -> Job

-- | Create a value of <a>Job</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfWorkers:Job'</a>, <a>job_numberOfWorkers</a> - The
--   number of workers of a defined <tt>workerType</tt> that are allocated
--   when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
--   
--   <a>$sel:command:Job'</a>, <a>job_command</a> - The <tt>JobCommand</tt>
--   that runs this job.
--   
--   <a>$sel:notificationProperty:Job'</a>, <a>job_notificationProperty</a>
--   - Specifies configuration properties of a job notification.
--   
--   <a>$sel:lastModifiedOn:Job'</a>, <a>job_lastModifiedOn</a> - The last
--   point in time when this job definition was modified.
--   
--   <a>$sel:connections:Job'</a>, <a>job_connections</a> - The connections
--   used for this job.
--   
--   <a>$sel:workerType:Job'</a>, <a>job_workerType</a> - The type of
--   predefined worker that is allocated when a job runs. Accepts a value
--   of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   <a>$sel:securityConfiguration:Job'</a>,
--   <a>job_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this job.
--   
--   <a>$sel:glueVersion:Job'</a>, <a>job_glueVersion</a> - Glue version
--   determines the versions of Apache Spark and Python that Glue supports.
--   The Python version indicates the version supported for jobs of type
--   Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
--   
--   <a>$sel:nonOverridableArguments:Job'</a>,
--   <a>job_nonOverridableArguments</a> - Non-overridable arguments for
--   this job, specified as name-value pairs.
--   
--   <a>$sel:role':Job'</a>, <a>job_role</a> - The name or Amazon Resource
--   Name (ARN) of the IAM role associated with this job.
--   
--   <a>$sel:name:Job'</a>, <a>job_name</a> - The name you assign to this
--   job definition.
--   
--   <a>$sel:logUri:Job'</a>, <a>job_logUri</a> - This field is reserved
--   for future use.
--   
--   <a>$sel:maxRetries:Job'</a>, <a>job_maxRetries</a> - The maximum
--   number of times to retry this job after a JobRun fails.
--   
--   <a>$sel:executionProperty:Job'</a>, <a>job_executionProperty</a> - An
--   <tt>ExecutionProperty</tt> specifying the maximum number of concurrent
--   runs allowed for this job.
--   
--   <a>$sel:allocatedCapacity:Job'</a>, <a>job_allocatedCapacity</a> -
--   This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) allocated to runs of
--   this job. You can allocate from 2 to 100 DPUs; the default is 10. A
--   DPU is a relative measure of processing power that consists of 4 vCPUs
--   of compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
--   
--   <a>$sel:maxCapacity:Job'</a>, <a>job_maxCapacity</a> - For Glue
--   version 1.0 or earlier jobs, using the standard worker type, the
--   number of Glue data processing units (DPUs) that can be allocated when
--   this job runs. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job, an Apache Spark ETL job,
--   or an Apache Spark streaming ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
--   
--   <a>$sel:timeout:Job'</a>, <a>job_timeout</a> - The job timeout in
--   minutes. This is the maximum time that a job run can consume resources
--   before it is terminated and enters <tt>TIMEOUT</tt> status. The
--   default is 2,880 minutes (48 hours).
--   
--   <a>$sel:defaultArguments:Job'</a>, <a>job_defaultArguments</a> - The
--   default arguments for this job, specified as name-value pairs.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
--   
--   <a>$sel:description:Job'</a>, <a>job_description</a> - A description
--   of the job.
--   
--   <a>$sel:createdOn:Job'</a>, <a>job_createdOn</a> - The time and date
--   that this job definition was created.
newJob :: Job

-- | Defines a point that a job can resume processing.
--   
--   <i>See:</i> <a>newJobBookmarkEntry</a> smart constructor.
data JobBookmarkEntry
JobBookmarkEntry' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Int -> Maybe Text -> JobBookmarkEntry

-- | Create a value of <a>JobBookmarkEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:JobBookmarkEntry'</a>, <a>jobBookmarkEntry_jobName</a>
--   - The name of the job in question.
--   
--   <a>$sel:run:JobBookmarkEntry'</a>, <a>jobBookmarkEntry_run</a> - The
--   run ID number.
--   
--   <a>$sel:runId:JobBookmarkEntry'</a>, <a>jobBookmarkEntry_runId</a> -
--   The run ID number.
--   
--   <a>$sel:version:JobBookmarkEntry'</a>, <a>jobBookmarkEntry_version</a>
--   - The version of the job.
--   
--   <a>$sel:previousRunId:JobBookmarkEntry'</a>,
--   <a>jobBookmarkEntry_previousRunId</a> - The unique run identifier
--   associated with the previous job run.
--   
--   <a>$sel:attempt:JobBookmarkEntry'</a>, <a>jobBookmarkEntry_attempt</a>
--   - The attempt ID number.
--   
--   <a>$sel:jobBookmark:JobBookmarkEntry'</a>,
--   <a>jobBookmarkEntry_jobBookmark</a> - The bookmark itself.
newJobBookmarkEntry :: JobBookmarkEntry

-- | Specifies how job bookmark data should be encrypted.
--   
--   <i>See:</i> <a>newJobBookmarksEncryption</a> smart constructor.
data JobBookmarksEncryption
JobBookmarksEncryption' :: Maybe JobBookmarksEncryptionMode -> Maybe Text -> JobBookmarksEncryption

-- | Create a value of <a>JobBookmarksEncryption</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobBookmarksEncryptionMode:JobBookmarksEncryption'</a>,
--   <a>jobBookmarksEncryption_jobBookmarksEncryptionMode</a> - The
--   encryption mode to use for job bookmarks data.
--   
--   <a>$sel:kmsKeyArn:JobBookmarksEncryption'</a>,
--   <a>jobBookmarksEncryption_kmsKeyArn</a> - The Amazon Resource Name
--   (ARN) of the KMS key to be used to encrypt the data.
newJobBookmarksEncryption :: JobBookmarksEncryption

-- | Specifies code that runs when a job is run.
--   
--   <i>See:</i> <a>newJobCommand</a> smart constructor.
data JobCommand
JobCommand' :: Maybe Text -> Maybe Text -> Maybe Text -> JobCommand

-- | Create a value of <a>JobCommand</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scriptLocation:JobCommand'</a>,
--   <a>jobCommand_scriptLocation</a> - Specifies the Amazon Simple Storage
--   Service (Amazon S3) path to a script that runs a job.
--   
--   <a>$sel:pythonVersion:JobCommand'</a>, <a>jobCommand_pythonVersion</a>
--   - The Python version being used to run a Python shell job. Allowed
--   values are 2 or 3.
--   
--   <a>$sel:name:JobCommand'</a>, <a>jobCommand_name</a> - The name of the
--   job command. For an Apache Spark ETL job, this must be
--   <tt>glueetl</tt>. For a Python shell job, it must be
--   <tt>pythonshell</tt>. For an Apache Spark streaming ETL job, this must
--   be <tt>gluestreaming</tt>.
newJobCommand :: JobCommand

-- | The details of a Job node present in the workflow.
--   
--   <i>See:</i> <a>newJobNodeDetails</a> smart constructor.
data JobNodeDetails
JobNodeDetails' :: Maybe [JobRun] -> JobNodeDetails

-- | Create a value of <a>JobNodeDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobRuns:JobNodeDetails'</a>, <a>jobNodeDetails_jobRuns</a> -
--   The information for the job runs represented by the job node.
newJobNodeDetails :: JobNodeDetails

-- | Contains information about a job run.
--   
--   <i>See:</i> <a>newJobRun</a> smart constructor.
data JobRun
JobRun' :: Maybe POSIX -> Maybe Int -> Maybe Text -> Maybe NotificationProperty -> Maybe POSIX -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe POSIX -> Maybe WorkerType -> Maybe Text -> Maybe Text -> Maybe JobRunState -> Maybe Text -> Maybe Int -> Maybe [Predecessor] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe Text -> JobRun

-- | Create a value of <a>JobRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completedOn:JobRun'</a>, <a>jobRun_completedOn</a> - The date
--   and time that this job run completed.
--   
--   <a>$sel:numberOfWorkers:JobRun'</a>, <a>jobRun_numberOfWorkers</a> -
--   The number of workers of a defined <tt>workerType</tt> that are
--   allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
--   
--   <a>$sel:triggerName:JobRun'</a>, <a>jobRun_triggerName</a> - The name
--   of the trigger that started this job run.
--   
--   <a>$sel:notificationProperty:JobRun'</a>,
--   <a>jobRun_notificationProperty</a> - Specifies configuration
--   properties of a job run notification.
--   
--   <a>$sel:lastModifiedOn:JobRun'</a>, <a>jobRun_lastModifiedOn</a> - The
--   last time that this job run was modified.
--   
--   <a>$sel:arguments:JobRun'</a>, <a>jobRun_arguments</a> - The job
--   arguments associated with this run. For this job run, they replace the
--   default arguments set in the job definition itself.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
--   
--   <a>$sel:jobName:JobRun'</a>, <a>jobRun_jobName</a> - The name of the
--   job definition being used in this run.
--   
--   <a>$sel:startedOn:JobRun'</a>, <a>jobRun_startedOn</a> - The date and
--   time at which this job run was started.
--   
--   <a>$sel:workerType:JobRun'</a>, <a>jobRun_workerType</a> - The type of
--   predefined worker that is allocated when a job runs. Accepts a value
--   of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <a>$sel:securityConfiguration:JobRun'</a>,
--   <a>jobRun_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this job run.
--   
--   <a>$sel:glueVersion:JobRun'</a>, <a>jobRun_glueVersion</a> - Glue
--   version determines the versions of Apache Spark and Python that Glue
--   supports. The Python version indicates the version supported for jobs
--   of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   Jobs that are created without specifying a Glue version default to
--   Glue 0.9.
--   
--   <a>$sel:jobRunState:JobRun'</a>, <a>jobRun_jobRunState</a> - The
--   current state of the job run. For more information about the statuses
--   of jobs that have terminated abnormally, see <a>Glue Job Run
--   Statuses</a>.
--   
--   <a>$sel:logGroupName:JobRun'</a>, <a>jobRun_logGroupName</a> - The
--   name of the log group for secure logging that can be server-side
--   encrypted in Amazon CloudWatch using KMS. This name can be
--   <tt>/aws-glue/jobs/</tt>, in which case the default encryption is
--   <tt>NONE</tt>. If you add a role name and
--   <tt>SecurityConfiguration</tt> name (in other words,
--   <tt>/aws-glue/jobs-yourRoleName-yourSecurityConfigurationName/</tt>),
--   then that security configuration is used to encrypt the log group.
--   
--   <a>$sel:executionTime:JobRun'</a>, <a>jobRun_executionTime</a> - The
--   amount of time (in seconds) that the job run consumed resources.
--   
--   <a>$sel:predecessorRuns:JobRun'</a>, <a>jobRun_predecessorRuns</a> - A
--   list of predecessors to this job run.
--   
--   <a>$sel:previousRunId:JobRun'</a>, <a>jobRun_previousRunId</a> - The
--   ID of the previous run of this job. For example, the <tt>JobRunId</tt>
--   specified in the <tt>StartJobRun</tt> action.
--   
--   <a>$sel:id:JobRun'</a>, <a>jobRun_id</a> - The ID of this job run.
--   
--   <a>$sel:attempt:JobRun'</a>, <a>jobRun_attempt</a> - The number of the
--   attempt to run this job.
--   
--   <a>$sel:allocatedCapacity:JobRun'</a>, <a>jobRun_allocatedCapacity</a>
--   - This field is deprecated. Use <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) allocated to this
--   JobRun. From 2 to 100 DPUs can be allocated; the default is 10. A DPU
--   is a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
--   
--   <a>$sel:maxCapacity:JobRun'</a>, <a>jobRun_maxCapacity</a> - The
--   number of Glue data processing units (DPUs) that can be allocated when
--   this job runs. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl"), you can allocate from 2 to 100
--   DPUs. The default is 10 DPUs. This job type cannot have a fractional
--   DPU allocation.</li>
--   </ul>
--   
--   <a>$sel:timeout:JobRun'</a>, <a>jobRun_timeout</a> - The
--   <tt>JobRun</tt> timeout in minutes. This is the maximum time that a
--   job run can consume resources before it is terminated and enters
--   <tt>TIMEOUT</tt> status. The default is 2,880 minutes (48 hours). This
--   overrides the timeout value set in the parent job.
--   
--   <a>$sel:errorMessage:JobRun'</a>, <a>jobRun_errorMessage</a> - An
--   error message associated with this job run.
newJobRun :: JobRun

-- | Specifies information used to update an existing job definition. The
--   previous job definition is completely overwritten by this information.
--   
--   <i>See:</i> <a>newJobUpdate</a> smart constructor.
data JobUpdate
JobUpdate' :: Maybe Int -> Maybe JobCommand -> Maybe NotificationProperty -> Maybe ConnectionsList -> Maybe WorkerType -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe ExecutionProperty -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe (HashMap Text Text) -> Maybe Text -> JobUpdate

-- | Create a value of <a>JobUpdate</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfWorkers:JobUpdate'</a>,
--   <a>jobUpdate_numberOfWorkers</a> - The number of workers of a defined
--   <tt>workerType</tt> that are allocated when a job runs.
--   
--   The maximum number of workers you can define are 299 for
--   <tt>G.1X</tt>, and 149 for <tt>G.2X</tt>.
--   
--   <a>$sel:command:JobUpdate'</a>, <a>jobUpdate_command</a> - The
--   <tt>JobCommand</tt> that runs this job (required).
--   
--   <a>$sel:notificationProperty:JobUpdate'</a>,
--   <a>jobUpdate_notificationProperty</a> - Specifies the configuration
--   properties of a job notification.
--   
--   <a>$sel:connections:JobUpdate'</a>, <a>jobUpdate_connections</a> - The
--   connections used for this job.
--   
--   <a>$sel:workerType:JobUpdate'</a>, <a>jobUpdate_workerType</a> - The
--   type of predefined worker that is allocated when a job runs. Accepts a
--   value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker maps to 1 DPU (4
--   vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker maps to 2 DPU (8
--   vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per
--   worker. We recommend this worker type for memory-intensive jobs.</li>
--   </ul>
--   
--   <a>$sel:securityConfiguration:JobUpdate'</a>,
--   <a>jobUpdate_securityConfiguration</a> - The name of the
--   <tt>SecurityConfiguration</tt> structure to be used with this job.
--   
--   <a>$sel:glueVersion:JobUpdate'</a>, <a>jobUpdate_glueVersion</a> -
--   Glue version determines the versions of Apache Spark and Python that
--   Glue supports. The Python version indicates the version supported for
--   jobs of type Spark.
--   
--   For more information about the available Glue versions and
--   corresponding Spark and Python versions, see <a>Glue version</a> in
--   the developer guide.
--   
--   <a>$sel:nonOverridableArguments:JobUpdate'</a>,
--   <a>jobUpdate_nonOverridableArguments</a> - Non-overridable arguments
--   for this job, specified as name-value pairs.
--   
--   <a>$sel:role':JobUpdate'</a>, <a>jobUpdate_role</a> - The name or
--   Amazon Resource Name (ARN) of the IAM role associated with this job
--   (required).
--   
--   <a>$sel:logUri:JobUpdate'</a>, <a>jobUpdate_logUri</a> - This field is
--   reserved for future use.
--   
--   <a>$sel:maxRetries:JobUpdate'</a>, <a>jobUpdate_maxRetries</a> - The
--   maximum number of times to retry this job if it fails.
--   
--   <a>$sel:executionProperty:JobUpdate'</a>,
--   <a>jobUpdate_executionProperty</a> - An <tt>ExecutionProperty</tt>
--   specifying the maximum number of concurrent runs allowed for this job.
--   
--   <a>$sel:allocatedCapacity:JobUpdate'</a>,
--   <a>jobUpdate_allocatedCapacity</a> - This field is deprecated. Use
--   <tt>MaxCapacity</tt> instead.
--   
--   The number of Glue data processing units (DPUs) to allocate to this
--   job. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is
--   a relative measure of processing power that consists of 4 vCPUs of
--   compute capacity and 16 GB of memory. For more information, see the
--   <a>Glue pricing page</a>.
--   
--   <a>$sel:maxCapacity:JobUpdate'</a>, <a>jobUpdate_maxCapacity</a> - For
--   Glue version 1.0 or earlier jobs, using the standard worker type, the
--   number of Glue data processing units (DPUs) that can be allocated when
--   this job runs. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   Do not set <tt>Max Capacity</tt> if using <tt>WorkerType</tt> and
--   <tt>NumberOfWorkers</tt>.
--   
--   The value that can be allocated for <tt>MaxCapacity</tt> depends on
--   whether you are running a Python shell job or an Apache Spark ETL job:
--   
--   <ul>
--   <li>When you specify a Python shell job
--   (<tt>JobCommand.Name</tt>="pythonshell"), you can allocate either
--   0.0625 or 1 DPU. The default is 0.0625 DPU.</li>
--   <li>When you specify an Apache Spark ETL job
--   (<tt>JobCommand.Name</tt>="glueetl") or Apache Spark streaming ETL job
--   (<tt>JobCommand.Name</tt>="gluestreaming"), you can allocate from 2 to
--   100 DPUs. The default is 10 DPUs. This job type cannot have a
--   fractional DPU allocation.</li>
--   </ul>
--   
--   For Glue version 2.0 jobs, you cannot instead specify a <tt>Maximum
--   capacity</tt>. Instead, you should specify a <tt>Worker type</tt> and
--   the <tt>Number of workers</tt>.
--   
--   <a>$sel:timeout:JobUpdate'</a>, <a>jobUpdate_timeout</a> - The job
--   timeout in minutes. This is the maximum time that a job run can
--   consume resources before it is terminated and enters <tt>TIMEOUT</tt>
--   status. The default is 2,880 minutes (48 hours).
--   
--   <a>$sel:defaultArguments:JobUpdate'</a>,
--   <a>jobUpdate_defaultArguments</a> - The default arguments for this
--   job.
--   
--   You can specify arguments here that your own job-execution script
--   consumes, as well as arguments that Glue itself consumes.
--   
--   For information about how to specify and consume your own Job
--   arguments, see the <a>Calling Glue APIs in Python</a> topic in the
--   developer guide.
--   
--   For information about the key-value pairs that Glue consumes to set up
--   your job, see the <a>Special Parameters Used by Glue</a> topic in the
--   developer guide.
--   
--   <a>$sel:description:JobUpdate'</a>, <a>jobUpdate_description</a> -
--   Description of the job being defined.
newJobUpdate :: JobUpdate

-- | A classifier for <tt>JSON</tt> content.
--   
--   <i>See:</i> <a>newJsonClassifier</a> smart constructor.
data JsonClassifier
JsonClassifier' :: Maybe POSIX -> Maybe POSIX -> Maybe Integer -> Text -> Text -> JsonClassifier

-- | Create a value of <a>JsonClassifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:JsonClassifier'</a>,
--   <a>jsonClassifier_creationTime</a> - The time that this classifier was
--   registered.
--   
--   <a>$sel:lastUpdated:JsonClassifier'</a>,
--   <a>jsonClassifier_lastUpdated</a> - The time that this classifier was
--   last updated.
--   
--   <a>$sel:version:JsonClassifier'</a>, <a>jsonClassifier_version</a> -
--   The version of this classifier.
--   
--   <a>$sel:name:JsonClassifier'</a>, <a>jsonClassifier_name</a> - The
--   name of the classifier.
--   
--   <a>$sel:jsonPath:JsonClassifier'</a>, <a>jsonClassifier_jsonPath</a> -
--   A <tt>JsonPath</tt> string defining the JSON data for the classifier
--   to classify. Glue supports a subset of JsonPath, as described in
--   <a>Writing JsonPath Custom Classifiers</a>.
newJsonClassifier :: Text -> Text -> JsonClassifier

-- | A partition key pair consisting of a name and a type.
--   
--   <i>See:</i> <a>newKeySchemaElement</a> smart constructor.
data KeySchemaElement
KeySchemaElement' :: Text -> Text -> KeySchemaElement

-- | Create a value of <a>KeySchemaElement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:KeySchemaElement'</a>, <a>keySchemaElement_name</a> - The
--   name of a partition key.
--   
--   <a>$sel:type':KeySchemaElement'</a>, <a>keySchemaElement_type</a> -
--   The type of a partition key.
newKeySchemaElement :: Text -> Text -> KeySchemaElement

-- | Specifies configuration properties for a labeling set generation task
--   run.
--   
--   <i>See:</i> <a>newLabelingSetGenerationTaskRunProperties</a> smart
--   constructor.
data LabelingSetGenerationTaskRunProperties
LabelingSetGenerationTaskRunProperties' :: Maybe Text -> LabelingSetGenerationTaskRunProperties

-- | Create a value of <a>LabelingSetGenerationTaskRunProperties</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputS3Path:LabelingSetGenerationTaskRunProperties'</a>,
--   <a>labelingSetGenerationTaskRunProperties_outputS3Path</a> - The
--   Amazon Simple Storage Service (Amazon S3) path where you will generate
--   the labeling set.
newLabelingSetGenerationTaskRunProperties :: LabelingSetGenerationTaskRunProperties

-- | When there are multiple versions of a blueprint and the latest version
--   has some errors, this attribute indicates the last successful
--   blueprint definition that is available with the service.
--   
--   <i>See:</i> <a>newLastActiveDefinition</a> smart constructor.
data LastActiveDefinition
LastActiveDefinition' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> LastActiveDefinition

-- | Create a value of <a>LastActiveDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterSpec:LastActiveDefinition'</a>,
--   <a>lastActiveDefinition_parameterSpec</a> - A JSON string specifying
--   the parameters for the blueprint.
--   
--   <a>$sel:blueprintLocation:LastActiveDefinition'</a>,
--   <a>lastActiveDefinition_blueprintLocation</a> - Specifies a path in
--   Amazon S3 where the blueprint is published by the Glue developer.
--   
--   <a>$sel:lastModifiedOn:LastActiveDefinition'</a>,
--   <a>lastActiveDefinition_lastModifiedOn</a> - The date and time the
--   blueprint was last modified.
--   
--   <a>$sel:blueprintServiceLocation:LastActiveDefinition'</a>,
--   <a>lastActiveDefinition_blueprintServiceLocation</a> - Specifies a
--   path in Amazon S3 where the blueprint is copied when you create or
--   update the blueprint.
--   
--   <a>$sel:description:LastActiveDefinition'</a>,
--   <a>lastActiveDefinition_description</a> - The description of the
--   blueprint.
newLastActiveDefinition :: LastActiveDefinition

-- | Status and error information about the most recent crawl.
--   
--   <i>See:</i> <a>newLastCrawlInfo</a> smart constructor.
data LastCrawlInfo
LastCrawlInfo' :: Maybe LastCrawlStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> LastCrawlInfo

-- | Create a value of <a>LastCrawlInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:LastCrawlInfo'</a>, <a>lastCrawlInfo_status</a> -
--   Status of the last crawl.
--   
--   <a>$sel:startTime:LastCrawlInfo'</a>, <a>lastCrawlInfo_startTime</a> -
--   The time at which the crawl started.
--   
--   <a>$sel:logStream:LastCrawlInfo'</a>, <a>lastCrawlInfo_logStream</a> -
--   The log stream for the last crawl.
--   
--   <a>$sel:logGroup:LastCrawlInfo'</a>, <a>lastCrawlInfo_logGroup</a> -
--   The log group for the last crawl.
--   
--   <a>$sel:messagePrefix:LastCrawlInfo'</a>,
--   <a>lastCrawlInfo_messagePrefix</a> - The prefix for a message about
--   this crawl.
--   
--   <a>$sel:errorMessage:LastCrawlInfo'</a>,
--   <a>lastCrawlInfo_errorMessage</a> - If an error occurred, the error
--   information about the last crawl.
newLastCrawlInfo :: LastCrawlInfo

-- | Specifies data lineage configuration settings for the crawler.
--   
--   <i>See:</i> <a>newLineageConfiguration</a> smart constructor.
data LineageConfiguration
LineageConfiguration' :: Maybe CrawlerLineageSettings -> LineageConfiguration

-- | Create a value of <a>LineageConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:crawlerLineageSettings:LineageConfiguration'</a>,
--   <a>lineageConfiguration_crawlerLineageSettings</a> - Specifies whether
--   data lineage is enabled for the crawler. Valid values are:
--   
--   <ul>
--   <li>ENABLE: enables data lineage for the crawler</li>
--   <li>DISABLE: disables data lineage for the crawler</li>
--   </ul>
newLineageConfiguration :: LineageConfiguration

-- | The location of resources.
--   
--   <i>See:</i> <a>newLocation</a> smart constructor.
data Location
Location' :: Maybe [CodeGenNodeArg] -> Maybe [CodeGenNodeArg] -> Maybe [CodeGenNodeArg] -> Location

-- | Create a value of <a>Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dynamoDB:Location'</a>, <a>location_dynamoDB</a> - An Amazon
--   DynamoDB table location.
--   
--   <a>$sel:jdbc:Location'</a>, <a>location_jdbc</a> - A JDBC location.
--   
--   <a>$sel:s3:Location'</a>, <a>location_s3</a> - An Amazon Simple
--   Storage Service (Amazon S3) location.
newLocation :: Location

-- | Defines column statistics supported for integer data columns.
--   
--   <i>See:</i> <a>newLongColumnStatisticsData</a> smart constructor.
data LongColumnStatisticsData
LongColumnStatisticsData' :: Maybe Integer -> Maybe Integer -> Natural -> Natural -> LongColumnStatisticsData

-- | Create a value of <a>LongColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumValue:LongColumnStatisticsData'</a>,
--   <a>longColumnStatisticsData_maximumValue</a> - The highest value in
--   the column.
--   
--   <a>$sel:minimumValue:LongColumnStatisticsData'</a>,
--   <a>longColumnStatisticsData_minimumValue</a> - The lowest value in the
--   column.
--   
--   <a>$sel:numberOfNulls:LongColumnStatisticsData'</a>,
--   <a>longColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
--   
--   <a>$sel:numberOfDistinctValues:LongColumnStatisticsData'</a>,
--   <a>longColumnStatisticsData_numberOfDistinctValues</a> - The number of
--   distinct values in a column.
newLongColumnStatisticsData :: Natural -> Natural -> LongColumnStatisticsData

-- | A structure for a machine learning transform.
--   
--   <i>See:</i> <a>newMLTransform</a> smart constructor.
data MLTransform
MLTransform' :: Maybe TransformStatusType -> Maybe Int -> Maybe POSIX -> Maybe Int -> Maybe WorkerType -> Maybe [GlueTable] -> Maybe Text -> Maybe EvaluationMetrics -> Maybe [SchemaColumn] -> Maybe Text -> Maybe Text -> Maybe TransformParameters -> Maybe Int -> Maybe Double -> Maybe Natural -> Maybe TransformEncryption -> Maybe Text -> Maybe POSIX -> Maybe Text -> MLTransform

-- | Create a value of <a>MLTransform</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:MLTransform'</a>, <a>mLTransform_status</a> - The
--   current status of the machine learning transform.
--   
--   <a>$sel:numberOfWorkers:MLTransform'</a>,
--   <a>mLTransform_numberOfWorkers</a> - The number of workers of a
--   defined <tt>workerType</tt> that are allocated when a task of the
--   transform runs.
--   
--   If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).
--   
--   <a>$sel:lastModifiedOn:MLTransform'</a>,
--   <a>mLTransform_lastModifiedOn</a> - A timestamp. The last point in
--   time when this machine learning transform was modified.
--   
--   <a>$sel:labelCount:MLTransform'</a>, <a>mLTransform_labelCount</a> - A
--   count identifier for the labeling files generated by Glue for this
--   transform. As you create a better transform, you can iteratively
--   download, label, and upload the labeling file.
--   
--   <a>$sel:workerType:MLTransform'</a>, <a>mLTransform_workerType</a> -
--   The type of predefined worker that is allocated when a task of this
--   transform runs. Accepts a value of Standard, G.1X, or G.2X.
--   
--   <ul>
--   <li>For the <tt>Standard</tt> worker type, each worker provides 4
--   vCPU, 16 GB of memory and a 50GB disk, and 2 executors per
--   worker.</li>
--   <li>For the <tt>G.1X</tt> worker type, each worker provides 4 vCPU, 16
--   GB of memory and a 64GB disk, and 1 executor per worker.</li>
--   <li>For the <tt>G.2X</tt> worker type, each worker provides 8 vCPU, 32
--   GB of memory and a 128GB disk, and 1 executor per worker.</li>
--   </ul>
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
--   
--   <a>$sel:inputRecordTables:MLTransform'</a>,
--   <a>mLTransform_inputRecordTables</a> - A list of Glue table
--   definitions used by the transform.
--   
--   <a>$sel:glueVersion:MLTransform'</a>, <a>mLTransform_glueVersion</a> -
--   This value determines which version of Glue this machine learning
--   transform is compatible with. Glue 1.0 is recommended for most
--   customers. If the value is not set, the Glue compatibility defaults to
--   Glue 0.9. For more information, see <a>Glue Versions</a> in the
--   developer guide.
--   
--   <a>$sel:evaluationMetrics:MLTransform'</a>,
--   <a>mLTransform_evaluationMetrics</a> - An <tt>EvaluationMetrics</tt>
--   object. Evaluation metrics provide an estimate of the quality of your
--   machine learning transform.
--   
--   <a>$sel:schema:MLTransform'</a>, <a>mLTransform_schema</a> - A map of
--   key-value pairs representing the columns and data types that this
--   transform can run against. Has an upper bound of 100 columns.
--   
--   <a>$sel:role':MLTransform'</a>, <a>mLTransform_role</a> - The name or
--   Amazon Resource Name (ARN) of the IAM role with the required
--   permissions. The required permissions include both Glue service role
--   permissions to Glue resources, and Amazon S3 permissions required by
--   the transform.
--   
--   <ul>
--   <li>This role needs Glue service role permissions to allow access to
--   resources in Glue. See <a>Attach a Policy to IAM Users That Access
--   Glue</a>.</li>
--   <li>This role needs permission to your Amazon Simple Storage Service
--   (Amazon S3) sources, targets, temporary directory, scripts, and any
--   libraries used by the task run for this transform.</li>
--   </ul>
--   
--   <a>$sel:name:MLTransform'</a>, <a>mLTransform_name</a> - A
--   user-defined name for the machine learning transform. Names are not
--   guaranteed unique and can be changed at any time.
--   
--   <a>$sel:parameters:MLTransform'</a>, <a>mLTransform_parameters</a> - A
--   <tt>TransformParameters</tt> object. You can use parameters to tune
--   (customize) the behavior of the machine learning transform by
--   specifying what data it learns from and your preference on various
--   tradeoffs (such as precious vs. recall, or accuracy vs. cost).
--   
--   <a>$sel:maxRetries:MLTransform'</a>, <a>mLTransform_maxRetries</a> -
--   The maximum number of times to retry after an <tt>MLTaskRun</tt> of
--   the machine learning transform fails.
--   
--   <a>$sel:maxCapacity:MLTransform'</a>, <a>mLTransform_maxCapacity</a> -
--   The number of Glue data processing units (DPUs) that are allocated to
--   task runs for this transform. You can allocate from 2 to 100 DPUs; the
--   default is 10. A DPU is a relative measure of processing power that
--   consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
--   information, see the <a>Glue pricing page</a>.
--   
--   <tt>MaxCapacity</tt> is a mutually exclusive option with
--   <tt>NumberOfWorkers</tt> and <tt>WorkerType</tt>.
--   
--   <ul>
--   <li>If either <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> is set,
--   then <tt>MaxCapacity</tt> cannot be set.</li>
--   <li>If <tt>MaxCapacity</tt> is set then neither
--   <tt>NumberOfWorkers</tt> or <tt>WorkerType</tt> can be set.</li>
--   <li>If <tt>WorkerType</tt> is set, then <tt>NumberOfWorkers</tt> is
--   required (and vice versa).</li>
--   <li><tt>MaxCapacity</tt> and <tt>NumberOfWorkers</tt> must both be at
--   least 1.</li>
--   </ul>
--   
--   When the <tt>WorkerType</tt> field is set to a value other than
--   <tt>Standard</tt>, the <tt>MaxCapacity</tt> field is set automatically
--   and becomes read-only.
--   
--   <a>$sel:timeout:MLTransform'</a>, <a>mLTransform_timeout</a> - The
--   timeout in minutes of the machine learning transform.
--   
--   <a>$sel:transformEncryption:MLTransform'</a>,
--   <a>mLTransform_transformEncryption</a> - The encryption-at-rest
--   settings of the transform that apply to accessing user data. Machine
--   learning transforms can access user data encrypted in Amazon S3 using
--   KMS.
--   
--   <a>$sel:description:MLTransform'</a>, <a>mLTransform_description</a> -
--   A user-defined, long-form description text for the machine learning
--   transform. Descriptions are not guaranteed to be unique and can be
--   changed at any time.
--   
--   <a>$sel:createdOn:MLTransform'</a>, <a>mLTransform_createdOn</a> - A
--   timestamp. The time and date that this machine learning transform was
--   created.
--   
--   <a>$sel:transformId:MLTransform'</a>, <a>mLTransform_transformId</a> -
--   The unique transform ID that is generated for the machine learning
--   transform. The ID is guaranteed to be unique and does not change.
newMLTransform :: MLTransform

-- | The encryption-at-rest settings of the transform that apply to
--   accessing user data.
--   
--   <i>See:</i> <a>newMLUserDataEncryption</a> smart constructor.
data MLUserDataEncryption
MLUserDataEncryption' :: Maybe Text -> MLUserDataEncryptionModeString -> MLUserDataEncryption

-- | Create a value of <a>MLUserDataEncryption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:MLUserDataEncryption'</a>,
--   <a>mLUserDataEncryption_kmsKeyId</a> - The ID for the
--   customer-provided KMS key.
--   
--   <a>$sel:mlUserDataEncryptionMode:MLUserDataEncryption'</a>,
--   <a>mLUserDataEncryption_mlUserDataEncryptionMode</a> - The encryption
--   mode applied to user data. Valid values are:
--   
--   <ul>
--   <li>DISABLED: encryption is disabled</li>
--   <li>SSEKMS: use of server-side encryption with Key Management Service
--   (SSE-KMS) for user data stored in Amazon S3.</li>
--   </ul>
newMLUserDataEncryption :: MLUserDataEncryptionModeString -> MLUserDataEncryption

-- | Defines a mapping.
--   
--   <i>See:</i> <a>newMappingEntry</a> smart constructor.
data MappingEntry
MappingEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> MappingEntry

-- | Create a value of <a>MappingEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetTable:MappingEntry'</a>, <a>mappingEntry_targetTable</a>
--   - The target table.
--   
--   <a>$sel:sourceType:MappingEntry'</a>, <a>mappingEntry_sourceType</a> -
--   The source type.
--   
--   <a>$sel:sourceTable:MappingEntry'</a>, <a>mappingEntry_sourceTable</a>
--   - The name of the source table.
--   
--   <a>$sel:targetType:MappingEntry'</a>, <a>mappingEntry_targetType</a> -
--   The target type.
--   
--   <a>$sel:targetPath:MappingEntry'</a>, <a>mappingEntry_targetPath</a> -
--   The target path.
--   
--   <a>$sel:sourcePath:MappingEntry'</a>, <a>mappingEntry_sourcePath</a> -
--   The source path.
newMappingEntry :: MappingEntry

-- | A structure containing metadata information for a schema version.
--   
--   <i>See:</i> <a>newMetadataInfo</a> smart constructor.
data MetadataInfo
MetadataInfo' :: Maybe Text -> Maybe [OtherMetadataValueListItem] -> Maybe Text -> MetadataInfo

-- | Create a value of <a>MetadataInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdTime:MetadataInfo'</a>, <a>metadataInfo_createdTime</a>
--   - The time at which the entry was created.
--   
--   <a>$sel:otherMetadataValueList:MetadataInfo'</a>,
--   <a>metadataInfo_otherMetadataValueList</a> - Other metadata belonging
--   to the same metadata key.
--   
--   <a>$sel:metadataValue:MetadataInfo'</a>,
--   <a>metadataInfo_metadataValue</a> - The metadata key’s corresponding
--   value.
newMetadataInfo :: MetadataInfo

-- | A structure containing a key value pair for metadata.
--   
--   <i>See:</i> <a>newMetadataKeyValuePair</a> smart constructor.
data MetadataKeyValuePair
MetadataKeyValuePair' :: Maybe Text -> Maybe Text -> MetadataKeyValuePair

-- | Create a value of <a>MetadataKeyValuePair</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metadataKey:MetadataKeyValuePair'</a>,
--   <a>metadataKeyValuePair_metadataKey</a> - A metadata key.
--   
--   <a>$sel:metadataValue:MetadataKeyValuePair'</a>,
--   <a>metadataKeyValuePair_metadataValue</a> - A metadata key’s
--   corresponding value.
newMetadataKeyValuePair :: MetadataKeyValuePair

-- | Specifies an Amazon DocumentDB or MongoDB data store to crawl.
--   
--   <i>See:</i> <a>newMongoDBTarget</a> smart constructor.
data MongoDBTarget
MongoDBTarget' :: Maybe Text -> Maybe Text -> Maybe Bool -> MongoDBTarget

-- | Create a value of <a>MongoDBTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:MongoDBTarget'</a>, <a>mongoDBTarget_path</a> - The path
--   of the Amazon DocumentDB or MongoDB target (database/collection).
--   
--   <a>$sel:connectionName:MongoDBTarget'</a>,
--   <a>mongoDBTarget_connectionName</a> - The name of the connection to
--   use to connect to the Amazon DocumentDB or MongoDB target.
--   
--   <a>$sel:scanAll:MongoDBTarget'</a>, <a>mongoDBTarget_scanAll</a> -
--   Indicates whether to scan all the records, or to sample rows from the
--   table. Scanning all the records can take a long time when the table is
--   not a high throughput table.
--   
--   A value of <tt>true</tt> means to scan all records, while a value of
--   <tt>false</tt> means to sample the records. If no value is specified,
--   the value defaults to <tt>true</tt>.
newMongoDBTarget :: MongoDBTarget

-- | A node represents an Glue component (trigger, crawler, or job) on a
--   workflow graph.
--   
--   <i>See:</i> <a>newNode</a> smart constructor.
data Node
Node' :: Maybe TriggerNodeDetails -> Maybe Text -> Maybe CrawlerNodeDetails -> Maybe Text -> Maybe JobNodeDetails -> Maybe NodeType -> Node

-- | Create a value of <a>Node</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggerDetails:Node'</a>, <a>node_triggerDetails</a> - Details
--   of the Trigger when the node represents a Trigger.
--   
--   <a>$sel:uniqueId:Node'</a>, <a>node_uniqueId</a> - The unique Id
--   assigned to the node within the workflow.
--   
--   <a>$sel:crawlerDetails:Node'</a>, <a>node_crawlerDetails</a> - Details
--   of the crawler when the node represents a crawler.
--   
--   <a>$sel:name:Node'</a>, <a>node_name</a> - The name of the Glue
--   component represented by the node.
--   
--   <a>$sel:jobDetails:Node'</a>, <a>node_jobDetails</a> - Details of the
--   Job when the node represents a Job.
--   
--   <a>$sel:type':Node'</a>, <a>node_type</a> - The type of Glue component
--   represented by the node.
newNode :: Node

-- | Specifies configuration properties of a notification.
--   
--   <i>See:</i> <a>newNotificationProperty</a> smart constructor.
data NotificationProperty
NotificationProperty' :: Maybe Natural -> NotificationProperty

-- | Create a value of <a>NotificationProperty</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notifyDelayAfter:NotificationProperty'</a>,
--   <a>notificationProperty_notifyDelayAfter</a> - After a job run starts,
--   the number of minutes to wait before sending a job run delay
--   notification.
newNotificationProperty :: NotificationProperty

-- | Specifies the sort order of a sorted column.
--   
--   <i>See:</i> <a>newOrder</a> smart constructor.
data Order
Order' :: Text -> Natural -> Order

-- | Create a value of <a>Order</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:column:Order'</a>, <a>order_column</a> - The name of the
--   column.
--   
--   <a>$sel:sortOrder:Order'</a>, <a>order_sortOrder</a> - Indicates that
--   the column is sorted in ascending order (<tt>== 1</tt>), or in
--   descending order (<tt>==0</tt>).
newOrder :: Text -> Natural -> Order

-- | A structure containing other metadata for a schema version belonging
--   to the same metadata key.
--   
--   <i>See:</i> <a>newOtherMetadataValueListItem</a> smart constructor.
data OtherMetadataValueListItem
OtherMetadataValueListItem' :: Maybe Text -> Maybe Text -> OtherMetadataValueListItem

-- | Create a value of <a>OtherMetadataValueListItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdTime:OtherMetadataValueListItem'</a>,
--   <a>otherMetadataValueListItem_createdTime</a> - The time at which the
--   entry was created.
--   
--   <a>$sel:metadataValue:OtherMetadataValueListItem'</a>,
--   <a>otherMetadataValueListItem_metadataValue</a> - The metadata key’s
--   corresponding value for the other metadata belonging to the same
--   metadata key.
newOtherMetadataValueListItem :: OtherMetadataValueListItem

-- | Represents a slice of table data.
--   
--   <i>See:</i> <a>newPartition</a> smart constructor.
data Partition
Partition' :: Maybe POSIX -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe StorageDescriptor -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe POSIX -> Maybe Text -> Partition

-- | Create a value of <a>Partition</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Partition'</a>, <a>partition_creationTime</a> -
--   The time at which the partition was created.
--   
--   <a>$sel:values:Partition'</a>, <a>partition_values</a> - The values of
--   the partition.
--   
--   <a>$sel:catalogId:Partition'</a>, <a>partition_catalogId</a> - The ID
--   of the Data Catalog in which the partition resides.
--   
--   <a>$sel:lastAnalyzedTime:Partition'</a>,
--   <a>partition_lastAnalyzedTime</a> - The last time at which column
--   statistics were computed for this partition.
--   
--   <a>$sel:storageDescriptor:Partition'</a>,
--   <a>partition_storageDescriptor</a> - Provides information about the
--   physical location where the partition is stored.
--   
--   <a>$sel:databaseName:Partition'</a>, <a>partition_databaseName</a> -
--   The name of the catalog database in which to create the partition.
--   
--   <a>$sel:parameters:Partition'</a>, <a>partition_parameters</a> - These
--   key-value pairs define partition parameters.
--   
--   <a>$sel:lastAccessTime:Partition'</a>, <a>partition_lastAccessTime</a>
--   - The last time at which the partition was accessed.
--   
--   <a>$sel:tableName:Partition'</a>, <a>partition_tableName</a> - The
--   name of the database table in which to create the partition.
newPartition :: Partition

-- | Contains information about a partition error.
--   
--   <i>See:</i> <a>newPartitionError</a> smart constructor.
data PartitionError
PartitionError' :: Maybe [Text] -> Maybe ErrorDetail -> PartitionError

-- | Create a value of <a>PartitionError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitionValues:PartitionError'</a>,
--   <a>partitionError_partitionValues</a> - The values that define the
--   partition.
--   
--   <a>$sel:errorDetail:PartitionError'</a>,
--   <a>partitionError_errorDetail</a> - The details about the partition
--   error.
newPartitionError :: PartitionError

-- | A structure for a partition index.
--   
--   <i>See:</i> <a>newPartitionIndex</a> smart constructor.
data PartitionIndex
PartitionIndex' :: NonEmpty Text -> Text -> PartitionIndex

-- | Create a value of <a>PartitionIndex</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keys:PartitionIndex'</a>, <a>partitionIndex_keys</a> - The
--   keys for the partition index.
--   
--   <a>$sel:indexName:PartitionIndex'</a>, <a>partitionIndex_indexName</a>
--   - The name of the partition index.
newPartitionIndex :: NonEmpty Text -> Text -> PartitionIndex

-- | A descriptor for a partition index in a table.
--   
--   <i>See:</i> <a>newPartitionIndexDescriptor</a> smart constructor.
data PartitionIndexDescriptor
PartitionIndexDescriptor' :: Maybe [BackfillError] -> Text -> NonEmpty KeySchemaElement -> PartitionIndexStatus -> PartitionIndexDescriptor

-- | Create a value of <a>PartitionIndexDescriptor</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backfillErrors:PartitionIndexDescriptor'</a>,
--   <a>partitionIndexDescriptor_backfillErrors</a> - A list of errors that
--   can occur when registering partition indexes for an existing table.
--   
--   <a>$sel:indexName:PartitionIndexDescriptor'</a>,
--   <a>partitionIndexDescriptor_indexName</a> - The name of the partition
--   index.
--   
--   <a>$sel:keys:PartitionIndexDescriptor'</a>,
--   <a>partitionIndexDescriptor_keys</a> - A list of one or more keys, as
--   <tt>KeySchemaElement</tt> structures, for the partition index.
--   
--   <a>$sel:indexStatus:PartitionIndexDescriptor'</a>,
--   <a>partitionIndexDescriptor_indexStatus</a> - The status of the
--   partition index.
--   
--   The possible statuses are:
--   
--   <ul>
--   <li>CREATING: The index is being created. When an index is in a
--   CREATING state, the index or its table cannot be deleted.</li>
--   <li>ACTIVE: The index creation succeeds.</li>
--   <li>FAILED: The index creation fails.</li>
--   <li>DELETING: The index is deleted from the list of indexes.</li>
--   </ul>
newPartitionIndexDescriptor :: Text -> NonEmpty KeySchemaElement -> PartitionIndexStatus -> PartitionIndexDescriptor

-- | The structure used to create and update a partition.
--   
--   <i>See:</i> <a>newPartitionInput</a> smart constructor.
data PartitionInput
PartitionInput' :: Maybe [Text] -> Maybe POSIX -> Maybe StorageDescriptor -> Maybe (HashMap Text Text) -> Maybe POSIX -> PartitionInput

-- | Create a value of <a>PartitionInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:PartitionInput'</a>, <a>partitionInput_values</a> - The
--   values of the partition. Although this parameter is not required by
--   the SDK, you must specify this parameter for a valid input.
--   
--   The values for the keys for the new partition must be passed as an
--   array of String objects that must be ordered in the same order as the
--   partition keys appearing in the Amazon S3 prefix. Otherwise Glue will
--   add the values to the wrong keys.
--   
--   <a>$sel:lastAnalyzedTime:PartitionInput'</a>,
--   <a>partitionInput_lastAnalyzedTime</a> - The last time at which column
--   statistics were computed for this partition.
--   
--   <a>$sel:storageDescriptor:PartitionInput'</a>,
--   <a>partitionInput_storageDescriptor</a> - Provides information about
--   the physical location where the partition is stored.
--   
--   <a>$sel:parameters:PartitionInput'</a>,
--   <a>partitionInput_parameters</a> - These key-value pairs define
--   partition parameters.
--   
--   <a>$sel:lastAccessTime:PartitionInput'</a>,
--   <a>partitionInput_lastAccessTime</a> - The last time at which the
--   partition was accessed.
newPartitionInput :: PartitionInput

-- | Contains a list of values defining partitions.
--   
--   <i>See:</i> <a>newPartitionValueList</a> smart constructor.
data PartitionValueList
PartitionValueList' :: [Text] -> PartitionValueList

-- | Create a value of <a>PartitionValueList</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:PartitionValueList'</a>,
--   <a>partitionValueList_values</a> - The list of values.
newPartitionValueList :: PartitionValueList

-- | Specifies the physical requirements for a connection.
--   
--   <i>See:</i> <a>newPhysicalConnectionRequirements</a> smart
--   constructor.
data PhysicalConnectionRequirements
PhysicalConnectionRequirements' :: Maybe [Text] -> Maybe Text -> Maybe Text -> PhysicalConnectionRequirements

-- | Create a value of <a>PhysicalConnectionRequirements</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIdList:PhysicalConnectionRequirements'</a>,
--   <a>physicalConnectionRequirements_securityGroupIdList</a> - The
--   security group ID list used by the connection.
--   
--   <a>$sel:subnetId:PhysicalConnectionRequirements'</a>,
--   <a>physicalConnectionRequirements_subnetId</a> - The subnet ID used by
--   the connection.
--   
--   <a>$sel:availabilityZone:PhysicalConnectionRequirements'</a>,
--   <a>physicalConnectionRequirements_availabilityZone</a> - The
--   connection's Availability Zone. This field is redundant because the
--   specified subnet implies the Availability Zone to be used. Currently
--   the field must be populated, but it will be deprecated in the future.
newPhysicalConnectionRequirements :: PhysicalConnectionRequirements

-- | A job run that was used in the predicate of a conditional trigger that
--   triggered this job run.
--   
--   <i>See:</i> <a>newPredecessor</a> smart constructor.
data Predecessor
Predecessor' :: Maybe Text -> Maybe Text -> Predecessor

-- | Create a value of <a>Predecessor</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:Predecessor'</a>, <a>predecessor_jobName</a> - The
--   name of the job definition used by the predecessor job run.
--   
--   <a>$sel:runId:Predecessor'</a>, <a>predecessor_runId</a> - The job-run
--   ID of the predecessor job run.
newPredecessor :: Predecessor

-- | Defines the predicate of the trigger, which determines when it fires.
--   
--   <i>See:</i> <a>newPredicate</a> smart constructor.
data Predicate
Predicate' :: Maybe Logical -> Maybe [Condition] -> Predicate

-- | Create a value of <a>Predicate</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logical:Predicate'</a>, <a>predicate_logical</a> - An optional
--   field if only one condition is listed. If multiple conditions are
--   listed, then this field is required.
--   
--   <a>$sel:conditions:Predicate'</a>, <a>predicate_conditions</a> - A
--   list of the conditions that determine when the trigger will fire.
newPredicate :: Predicate

-- | Permissions granted to a principal.
--   
--   <i>See:</i> <a>newPrincipalPermissions</a> smart constructor.
data PrincipalPermissions
PrincipalPermissions' :: Maybe DataLakePrincipal -> Maybe [Permission] -> PrincipalPermissions

-- | Create a value of <a>PrincipalPermissions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:principal:PrincipalPermissions'</a>,
--   <a>principalPermissions_principal</a> - The principal who is granted
--   permissions.
--   
--   <a>$sel:permissions:PrincipalPermissions'</a>,
--   <a>principalPermissions_permissions</a> - The permissions that are
--   granted to the principal.
newPrincipalPermissions :: PrincipalPermissions

-- | Defines a property predicate.
--   
--   <i>See:</i> <a>newPropertyPredicate</a> smart constructor.
data PropertyPredicate
PropertyPredicate' :: Maybe Text -> Maybe Text -> Maybe Comparator -> PropertyPredicate

-- | Create a value of <a>PropertyPredicate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:PropertyPredicate'</a>, <a>propertyPredicate_value</a> -
--   The value of the property.
--   
--   <a>$sel:key:PropertyPredicate'</a>, <a>propertyPredicate_key</a> - The
--   key of the property.
--   
--   <a>$sel:comparator:PropertyPredicate'</a>,
--   <a>propertyPredicate_comparator</a> - The comparator used to compare
--   this property to others.
newPropertyPredicate :: PropertyPredicate

-- | When crawling an Amazon S3 data source after the first crawl is
--   complete, specifies whether to crawl the entire dataset again or to
--   crawl only folders that were added since the last crawler run. For
--   more information, see <a>Incremental Crawls in Glue</a> in the
--   developer guide.
--   
--   <i>See:</i> <a>newRecrawlPolicy</a> smart constructor.
data RecrawlPolicy
RecrawlPolicy' :: Maybe RecrawlBehavior -> RecrawlPolicy

-- | Create a value of <a>RecrawlPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recrawlBehavior:RecrawlPolicy'</a>,
--   <a>recrawlPolicy_recrawlBehavior</a> - Specifies whether to crawl the
--   entire dataset again or to crawl only folders that were added since
--   the last crawler run.
--   
--   A value of <tt>CRAWL_EVERYTHING</tt> specifies crawling the entire
--   dataset again.
--   
--   A value of <tt>CRAWL_NEW_FOLDERS_ONLY</tt> specifies crawling only
--   folders that were added since the last crawler run.
--   
--   A value of <tt>CRAWL_EVENT_MODE</tt> specifies crawling only the
--   changes identified by Amazon S3 events.
newRecrawlPolicy :: RecrawlPolicy

-- | A wrapper structure that may contain the registry name and Amazon
--   Resource Name (ARN).
--   
--   <i>See:</i> <a>newRegistryId</a> smart constructor.
data RegistryId
RegistryId' :: Maybe Text -> Maybe Text -> RegistryId

-- | Create a value of <a>RegistryId</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:RegistryId'</a>, <a>registryId_registryName</a> -
--   Name of the registry. Used only for lookup. One of
--   <tt>RegistryArn</tt> or <tt>RegistryName</tt> has to be provided.
--   
--   <a>$sel:registryArn:RegistryId'</a>, <a>registryId_registryArn</a> -
--   Arn of the registry to be updated. One of <tt>RegistryArn</tt> or
--   <tt>RegistryName</tt> has to be provided.
newRegistryId :: RegistryId

-- | A structure containing the details for a registry.
--   
--   <i>See:</i> <a>newRegistryListItem</a> smart constructor.
data RegistryListItem
RegistryListItem' :: Maybe RegistryStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> RegistryListItem

-- | Create a value of <a>RegistryListItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:RegistryListItem'</a>, <a>registryListItem_status</a> -
--   The status of the registry.
--   
--   <a>$sel:registryName:RegistryListItem'</a>,
--   <a>registryListItem_registryName</a> - The name of the registry.
--   
--   <a>$sel:createdTime:RegistryListItem'</a>,
--   <a>registryListItem_createdTime</a> - The data the registry was
--   created.
--   
--   <a>$sel:registryArn:RegistryListItem'</a>,
--   <a>registryListItem_registryArn</a> - The Amazon Resource Name (ARN)
--   of the registry.
--   
--   <a>$sel:updatedTime:RegistryListItem'</a>,
--   <a>registryListItem_updatedTime</a> - The date the registry was
--   updated.
--   
--   <a>$sel:description:RegistryListItem'</a>,
--   <a>registryListItem_description</a> - A description of the registry.
newRegistryListItem :: RegistryListItem

-- | The URIs for function resources.
--   
--   <i>See:</i> <a>newResourceUri</a> smart constructor.
data ResourceUri
ResourceUri' :: Maybe ResourceType -> Maybe Text -> ResourceUri

-- | Create a value of <a>ResourceUri</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ResourceUri'</a>, <a>resourceUri_resourceType</a>
--   - The type of the resource.
--   
--   <a>$sel:uri:ResourceUri'</a>, <a>resourceUri_uri</a> - The URI for
--   accessing the resource.
newResourceUri :: ResourceUri

-- | Specifies how Amazon Simple Storage Service (Amazon S3) data should be
--   encrypted.
--   
--   <i>See:</i> <a>newS3Encryption</a> smart constructor.
data S3Encryption
S3Encryption' :: Maybe S3EncryptionMode -> Maybe Text -> S3Encryption

-- | Create a value of <a>S3Encryption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3EncryptionMode:S3Encryption'</a>,
--   <a>s3Encryption_s3EncryptionMode</a> - The encryption mode to use for
--   Amazon S3 data.
--   
--   <a>$sel:kmsKeyArn:S3Encryption'</a>, <a>s3Encryption_kmsKeyArn</a> -
--   The Amazon Resource Name (ARN) of the KMS key to be used to encrypt
--   the data.
newS3Encryption :: S3Encryption

-- | Specifies a data store in Amazon Simple Storage Service (Amazon S3).
--   
--   <i>See:</i> <a>newS3Target</a> smart constructor.
data S3Target
S3Target' :: Maybe Text -> Maybe Int -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> S3Target

-- | Create a value of <a>S3Target</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:S3Target'</a>, <a>s3Target_path</a> - The path to the
--   Amazon S3 target.
--   
--   <a>$sel:sampleSize:S3Target'</a>, <a>s3Target_sampleSize</a> - Sets
--   the number of files in each leaf folder to be crawled when crawling
--   sample files in a dataset. If not set, all the files are crawled. A
--   valid value is an integer between 1 and 249.
--   
--   <a>$sel:connectionName:S3Target'</a>, <a>s3Target_connectionName</a> -
--   The name of a connection which allows a job or crawler to access data
--   in Amazon S3 within an Amazon Virtual Private Cloud environment
--   (Amazon VPC).
--   
--   <a>$sel:exclusions:S3Target'</a>, <a>s3Target_exclusions</a> - A list
--   of glob patterns used to exclude from the crawl. For more information,
--   see <a>Catalog Tables with a Crawler</a>.
--   
--   <a>$sel:eventQueueArn:S3Target'</a>, <a>s3Target_eventQueueArn</a> - A
--   valid Amazon SQS ARN. For example,
--   <tt>arn:aws:sqs:region:account:sqs</tt>.
--   
--   <a>$sel:dlqEventQueueArn:S3Target'</a>,
--   <a>s3Target_dlqEventQueueArn</a> - A valid Amazon dead-letter SQS ARN.
--   For example, <tt>arn:aws:sqs:region:account:deadLetterQueue</tt>.
newS3Target :: S3Target

-- | A scheduling object using a <tt>cron</tt> statement to schedule an
--   event.
--   
--   <i>See:</i> <a>newSchedule</a> smart constructor.
data Schedule
Schedule' :: Maybe ScheduleState -> Maybe Text -> Schedule

-- | Create a value of <a>Schedule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:Schedule'</a>, <a>schedule_state</a> - The state of the
--   schedule.
--   
--   <a>$sel:scheduleExpression:Schedule'</a>,
--   <a>schedule_scheduleExpression</a> - A <tt>cron</tt> expression used
--   to specify the schedule (see <a>Time-Based Schedules for Jobs and
--   Crawlers</a>. For example, to run something every day at 12:15 UTC,
--   you would specify: <tt>cron(15 12 * * ? *)</tt>.
newSchedule :: Schedule

-- | A policy that specifies update and deletion behaviors for the crawler.
--   
--   <i>See:</i> <a>newSchemaChangePolicy</a> smart constructor.
data SchemaChangePolicy
SchemaChangePolicy' :: Maybe DeleteBehavior -> Maybe UpdateBehavior -> SchemaChangePolicy

-- | Create a value of <a>SchemaChangePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deleteBehavior:SchemaChangePolicy'</a>,
--   <a>schemaChangePolicy_deleteBehavior</a> - The deletion behavior when
--   the crawler finds a deleted object.
--   
--   <a>$sel:updateBehavior:SchemaChangePolicy'</a>,
--   <a>schemaChangePolicy_updateBehavior</a> - The update behavior when
--   the crawler finds a changed schema.
newSchemaChangePolicy :: SchemaChangePolicy

-- | A key-value pair representing a column and data type that this
--   transform can run against. The <tt>Schema</tt> parameter of the
--   <tt>MLTransform</tt> may contain up to 100 of these structures.
--   
--   <i>See:</i> <a>newSchemaColumn</a> smart constructor.
data SchemaColumn
SchemaColumn' :: Maybe Text -> Maybe Text -> SchemaColumn

-- | Create a value of <a>SchemaColumn</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:SchemaColumn'</a>, <a>schemaColumn_name</a> - The name of
--   the column.
--   
--   <a>$sel:dataType:SchemaColumn'</a>, <a>schemaColumn_dataType</a> - The
--   type of data in the column.
newSchemaColumn :: SchemaColumn

-- | The unique ID of the schema in the Glue schema registry.
--   
--   <i>See:</i> <a>newSchemaId</a> smart constructor.
data SchemaId
SchemaId' :: Maybe Text -> Maybe Text -> Maybe Text -> SchemaId

-- | Create a value of <a>SchemaId</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:SchemaId'</a>, <a>schemaId_registryName</a> - The
--   name of the schema registry that contains the schema.
--   
--   <a>$sel:schemaName:SchemaId'</a>, <a>schemaId_schemaName</a> - The
--   name of the schema. One of <tt>SchemaArn</tt> or <tt>SchemaName</tt>
--   has to be provided.
--   
--   <a>$sel:schemaArn:SchemaId'</a>, <a>schemaId_schemaArn</a> - The
--   Amazon Resource Name (ARN) of the schema. One of <tt>SchemaArn</tt> or
--   <tt>SchemaName</tt> has to be provided.
newSchemaId :: SchemaId

-- | An object that contains minimal details for a schema.
--   
--   <i>See:</i> <a>newSchemaListItem</a> smart constructor.
data SchemaListItem
SchemaListItem' :: Maybe Text -> Maybe Text -> Maybe SchemaStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> SchemaListItem

-- | Create a value of <a>SchemaListItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registryName:SchemaListItem'</a>,
--   <a>schemaListItem_registryName</a> - the name of the registry where
--   the schema resides.
--   
--   <a>$sel:createdTime:SchemaListItem'</a>,
--   <a>schemaListItem_createdTime</a> - The date and time that a schema
--   was created.
--   
--   <a>$sel:schemaStatus:SchemaListItem'</a>,
--   <a>schemaListItem_schemaStatus</a> - The status of the schema.
--   
--   <a>$sel:schemaName:SchemaListItem'</a>,
--   <a>schemaListItem_schemaName</a> - The name of the schema.
--   
--   <a>$sel:schemaArn:SchemaListItem'</a>, <a>schemaListItem_schemaArn</a>
--   - The Amazon Resource Name (ARN) for the schema.
--   
--   <a>$sel:updatedTime:SchemaListItem'</a>,
--   <a>schemaListItem_updatedTime</a> - The date and time that a schema
--   was updated.
--   
--   <a>$sel:description:SchemaListItem'</a>,
--   <a>schemaListItem_description</a> - A description for the schema.
newSchemaListItem :: SchemaListItem

-- | An object that references a schema stored in the Glue Schema Registry.
--   
--   <i>See:</i> <a>newSchemaReference</a> smart constructor.
data SchemaReference
SchemaReference' :: Maybe Text -> Maybe SchemaId -> Maybe Natural -> SchemaReference

-- | Create a value of <a>SchemaReference</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaVersionId:SchemaReference'</a>,
--   <a>schemaReference_schemaVersionId</a> - The unique ID assigned to a
--   version of the schema. Either this or the <tt>SchemaId</tt> has to be
--   provided.
--   
--   <a>$sel:schemaId:SchemaReference'</a>, <a>schemaReference_schemaId</a>
--   - A structure that contains schema identity fields. Either this or the
--   <tt>SchemaVersionId</tt> has to be provided.
--   
--   <a>$sel:schemaVersionNumber:SchemaReference'</a>,
--   <a>schemaReference_schemaVersionNumber</a> - The version number of the
--   schema.
newSchemaReference :: SchemaReference

-- | An object that contains the error details for an operation on a schema
--   version.
--   
--   <i>See:</i> <a>newSchemaVersionErrorItem</a> smart constructor.
data SchemaVersionErrorItem
SchemaVersionErrorItem' :: Maybe Natural -> Maybe ErrorDetails -> SchemaVersionErrorItem

-- | Create a value of <a>SchemaVersionErrorItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionNumber:SchemaVersionErrorItem'</a>,
--   <a>schemaVersionErrorItem_versionNumber</a> - The version number of
--   the schema.
--   
--   <a>$sel:errorDetails:SchemaVersionErrorItem'</a>,
--   <a>schemaVersionErrorItem_errorDetails</a> - The details of the error
--   for the schema version.
newSchemaVersionErrorItem :: SchemaVersionErrorItem

-- | An object containing the details about a schema version.
--   
--   <i>See:</i> <a>newSchemaVersionListItem</a> smart constructor.
data SchemaVersionListItem
SchemaVersionListItem' :: Maybe SchemaVersionStatus -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> SchemaVersionListItem

-- | Create a value of <a>SchemaVersionListItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SchemaVersionListItem'</a>,
--   <a>schemaVersionListItem_status</a> - The status of the schema
--   version.
--   
--   <a>$sel:createdTime:SchemaVersionListItem'</a>,
--   <a>schemaVersionListItem_createdTime</a> - The date and time the
--   schema version was created.
--   
--   <a>$sel:schemaVersionId:SchemaVersionListItem'</a>,
--   <a>schemaVersionListItem_schemaVersionId</a> - The unique identifier
--   of the schema version.
--   
--   <a>$sel:versionNumber:SchemaVersionListItem'</a>,
--   <a>schemaVersionListItem_versionNumber</a> - The version number of the
--   schema.
--   
--   <a>$sel:schemaArn:SchemaVersionListItem'</a>,
--   <a>schemaVersionListItem_schemaArn</a> - The Amazon Resource Name
--   (ARN) of the schema.
newSchemaVersionListItem :: SchemaVersionListItem

-- | A structure containing the schema version information.
--   
--   <i>See:</i> <a>newSchemaVersionNumber</a> smart constructor.
data SchemaVersionNumber
SchemaVersionNumber' :: Maybe Natural -> Maybe Bool -> SchemaVersionNumber

-- | Create a value of <a>SchemaVersionNumber</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionNumber:SchemaVersionNumber'</a>,
--   <a>schemaVersionNumber_versionNumber</a> - The version number of the
--   schema.
--   
--   <a>$sel:latestVersion:SchemaVersionNumber'</a>,
--   <a>schemaVersionNumber_latestVersion</a> - The latest version
--   available for the schema.
newSchemaVersionNumber :: SchemaVersionNumber

-- | Specifies a security configuration.
--   
--   <i>See:</i> <a>newSecurityConfiguration</a> smart constructor.
data SecurityConfiguration
SecurityConfiguration' :: Maybe Text -> Maybe EncryptionConfiguration -> Maybe POSIX -> SecurityConfiguration

-- | Create a value of <a>SecurityConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:SecurityConfiguration'</a>,
--   <a>securityConfiguration_name</a> - The name of the security
--   configuration.
--   
--   <a>$sel:encryptionConfiguration:SecurityConfiguration'</a>,
--   <a>securityConfiguration_encryptionConfiguration</a> - The encryption
--   configuration associated with this security configuration.
--   
--   <a>$sel:createdTimeStamp:SecurityConfiguration'</a>,
--   <a>securityConfiguration_createdTimeStamp</a> - The time at which this
--   security configuration was created.
newSecurityConfiguration :: SecurityConfiguration

-- | Defines a non-overlapping region of a table's partitions, allowing
--   multiple requests to be run in parallel.
--   
--   <i>See:</i> <a>newSegment</a> smart constructor.
data Segment
Segment' :: Natural -> Natural -> Segment

-- | Create a value of <a>Segment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:segmentNumber:Segment'</a>, <a>segment_segmentNumber</a> - The
--   zero-based index number of the segment. For example, if the total
--   number of segments is 4, <tt>SegmentNumber</tt> values range from 0
--   through 3.
--   
--   <a>$sel:totalSegments:Segment'</a>, <a>segment_totalSegments</a> - The
--   total number of segments.
newSegment :: Natural -> Natural -> Segment

-- | Information about a serialization/deserialization program (SerDe) that
--   serves as an extractor and loader.
--   
--   <i>See:</i> <a>newSerDeInfo</a> smart constructor.
data SerDeInfo
SerDeInfo' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> SerDeInfo

-- | Create a value of <a>SerDeInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serializationLibrary:SerDeInfo'</a>,
--   <a>serDeInfo_serializationLibrary</a> - Usually the class that
--   implements the SerDe. An example is
--   <tt>org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe</tt>.
--   
--   <a>$sel:name:SerDeInfo'</a>, <a>serDeInfo_name</a> - Name of the
--   SerDe.
--   
--   <a>$sel:parameters:SerDeInfo'</a>, <a>serDeInfo_parameters</a> - These
--   key-value pairs define initialization parameters for the SerDe.
newSerDeInfo :: SerDeInfo

-- | Specifies skewed values in a table. Skewed values are those that occur
--   with very high frequency.
--   
--   <i>See:</i> <a>newSkewedInfo</a> smart constructor.
data SkewedInfo
SkewedInfo' :: Maybe (HashMap Text Text) -> Maybe [Text] -> Maybe [Text] -> SkewedInfo

-- | Create a value of <a>SkewedInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:skewedColumnValueLocationMaps:SkewedInfo'</a>,
--   <a>skewedInfo_skewedColumnValueLocationMaps</a> - A mapping of skewed
--   values to the columns that contain them.
--   
--   <a>$sel:skewedColumnValues:SkewedInfo'</a>,
--   <a>skewedInfo_skewedColumnValues</a> - A list of values that appear so
--   frequently as to be considered skewed.
--   
--   <a>$sel:skewedColumnNames:SkewedInfo'</a>,
--   <a>skewedInfo_skewedColumnNames</a> - A list of names of columns that
--   contain skewed values.
newSkewedInfo :: SkewedInfo

-- | Specifies a field to sort by and a sort order.
--   
--   <i>See:</i> <a>newSortCriterion</a> smart constructor.
data SortCriterion
SortCriterion' :: Maybe Sort -> Maybe Text -> SortCriterion

-- | Create a value of <a>SortCriterion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sort:SortCriterion'</a>, <a>sortCriterion_sort</a> - An
--   ascending or descending sort.
--   
--   <a>$sel:fieldName:SortCriterion'</a>, <a>sortCriterion_fieldName</a> -
--   The name of the field on which to sort.
newSortCriterion :: SortCriterion

-- | The batch condition that started the workflow run. Either the number
--   of events in the batch size arrived, in which case the BatchSize
--   member is non-zero, or the batch window expired, in which case the
--   BatchWindow member is non-zero.
--   
--   <i>See:</i> <a>newStartingEventBatchCondition</a> smart constructor.
data StartingEventBatchCondition
StartingEventBatchCondition' :: Maybe Int -> Maybe Int -> StartingEventBatchCondition

-- | Create a value of <a>StartingEventBatchCondition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchWindow:StartingEventBatchCondition'</a>,
--   <a>startingEventBatchCondition_batchWindow</a> - Duration of the batch
--   window in seconds.
--   
--   <a>$sel:batchSize:StartingEventBatchCondition'</a>,
--   <a>startingEventBatchCondition_batchSize</a> - Number of events in the
--   batch.
newStartingEventBatchCondition :: StartingEventBatchCondition

-- | Describes the physical storage of table data.
--   
--   <i>See:</i> <a>newStorageDescriptor</a> smart constructor.
data StorageDescriptor
StorageDescriptor' :: Maybe [Order] -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe SerDeInfo -> Maybe Text -> Maybe Int -> Maybe SchemaReference -> Maybe Bool -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe SkewedInfo -> Maybe [Column] -> StorageDescriptor

-- | Create a value of <a>StorageDescriptor</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortColumns:StorageDescriptor'</a>,
--   <a>storageDescriptor_sortColumns</a> - A list specifying the sort
--   order of each bucket in the table.
--   
--   <a>$sel:compressed:StorageDescriptor'</a>,
--   <a>storageDescriptor_compressed</a> - <tt>True</tt> if the data in the
--   table is compressed, or <tt>False</tt> if not.
--   
--   <a>$sel:location:StorageDescriptor'</a>,
--   <a>storageDescriptor_location</a> - The physical location of the
--   table. By default, this takes the form of the warehouse location,
--   followed by the database location in the warehouse, followed by the
--   table name.
--   
--   <a>$sel:bucketColumns:StorageDescriptor'</a>,
--   <a>storageDescriptor_bucketColumns</a> - A list of reducer grouping
--   columns, clustering columns, and bucketing columns in the table.
--   
--   <a>$sel:serdeInfo:StorageDescriptor'</a>,
--   <a>storageDescriptor_serdeInfo</a> - The serialization/deserialization
--   (SerDe) information.
--   
--   <a>$sel:outputFormat:StorageDescriptor'</a>,
--   <a>storageDescriptor_outputFormat</a> - The output format:
--   <tt>SequenceFileOutputFormat</tt> (binary), or
--   <tt>IgnoreKeyTextOutputFormat</tt>, or a custom format.
--   
--   <a>$sel:numberOfBuckets:StorageDescriptor'</a>,
--   <a>storageDescriptor_numberOfBuckets</a> - Must be specified if the
--   table contains any dimension columns.
--   
--   <a>$sel:schemaReference:StorageDescriptor'</a>,
--   <a>storageDescriptor_schemaReference</a> - An object that references a
--   schema stored in the Glue Schema Registry.
--   
--   When creating a table, you can pass an empty list of columns for the
--   schema, and instead use a schema reference.
--   
--   <a>$sel:storedAsSubDirectories:StorageDescriptor'</a>,
--   <a>storageDescriptor_storedAsSubDirectories</a> - <tt>True</tt> if the
--   table data is stored in subdirectories, or <tt>False</tt> if not.
--   
--   <a>$sel:parameters:StorageDescriptor'</a>,
--   <a>storageDescriptor_parameters</a> - The user-supplied properties in
--   key-value form.
--   
--   <a>$sel:inputFormat:StorageDescriptor'</a>,
--   <a>storageDescriptor_inputFormat</a> - The input format:
--   <tt>SequenceFileInputFormat</tt> (binary), or
--   <tt>TextInputFormat</tt>, or a custom format.
--   
--   <a>$sel:skewedInfo:StorageDescriptor'</a>,
--   <a>storageDescriptor_skewedInfo</a> - The information about values
--   that appear frequently in a column (skewed values).
--   
--   <a>$sel:columns:StorageDescriptor'</a>,
--   <a>storageDescriptor_columns</a> - A list of the <tt>Columns</tt> in
--   the table.
newStorageDescriptor :: StorageDescriptor

-- | Defines column statistics supported for character sequence data
--   values.
--   
--   <i>See:</i> <a>newStringColumnStatisticsData</a> smart constructor.
data StringColumnStatisticsData
StringColumnStatisticsData' :: Natural -> Double -> Natural -> Natural -> StringColumnStatisticsData

-- | Create a value of <a>StringColumnStatisticsData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maximumLength:StringColumnStatisticsData'</a>,
--   <a>stringColumnStatisticsData_maximumLength</a> - The size of the
--   longest string in the column.
--   
--   <a>$sel:averageLength:StringColumnStatisticsData'</a>,
--   <a>stringColumnStatisticsData_averageLength</a> - The average string
--   length in the column.
--   
--   <a>$sel:numberOfNulls:StringColumnStatisticsData'</a>,
--   <a>stringColumnStatisticsData_numberOfNulls</a> - The number of null
--   values in the column.
--   
--   <a>$sel:numberOfDistinctValues:StringColumnStatisticsData'</a>,
--   <a>stringColumnStatisticsData_numberOfDistinctValues</a> - The number
--   of distinct values in a column.
newStringColumnStatisticsData :: Natural -> Double -> Natural -> Natural -> StringColumnStatisticsData

-- | Represents a collection of related data organized in columns and rows.
--   
--   <i>See:</i> <a>newTable</a> smart constructor.
data Table
Table' :: Maybe Natural -> Maybe TableIdentifier -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe StorageDescriptor -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe POSIX -> Maybe Text -> Maybe [Column] -> Maybe POSIX -> Text -> Table

-- | Create a value of <a>Table</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retention:Table'</a>, <a>table_retention</a> - The retention
--   time for this table.
--   
--   <a>$sel:targetTable:Table'</a>, <a>table_targetTable</a> - A
--   <tt>TableIdentifier</tt> structure that describes a target table for
--   resource linking.
--   
--   <a>$sel:isRegisteredWithLakeFormation:Table'</a>,
--   <a>table_isRegisteredWithLakeFormation</a> - Indicates whether the
--   table has been registered with Lake Formation.
--   
--   <a>$sel:createdBy:Table'</a>, <a>table_createdBy</a> - The person or
--   entity who created the table.
--   
--   <a>$sel:tableType:Table'</a>, <a>table_tableType</a> - The type of
--   this table (<tt>EXTERNAL_TABLE</tt>, <tt>VIRTUAL_VIEW</tt>, etc.).
--   
--   <a>$sel:catalogId:Table'</a>, <a>table_catalogId</a> - The ID of the
--   Data Catalog in which the table resides.
--   
--   <a>$sel:owner:Table'</a>, <a>table_owner</a> - The owner of the table.
--   
--   <a>$sel:viewOriginalText:Table'</a>, <a>table_viewOriginalText</a> -
--   If the table is a view, the original text of the view; otherwise
--   <tt>null</tt>.
--   
--   <a>$sel:updateTime:Table'</a>, <a>table_updateTime</a> - The last time
--   that the table was updated.
--   
--   <a>$sel:viewExpandedText:Table'</a>, <a>table_viewExpandedText</a> -
--   If the table is a view, the expanded text of the view; otherwise
--   <tt>null</tt>.
--   
--   <a>$sel:lastAnalyzedTime:Table'</a>, <a>table_lastAnalyzedTime</a> -
--   The last time that column statistics were computed for this table.
--   
--   <a>$sel:storageDescriptor:Table'</a>, <a>table_storageDescriptor</a> -
--   A storage descriptor containing information about the physical storage
--   of this table.
--   
--   <a>$sel:databaseName:Table'</a>, <a>table_databaseName</a> - The name
--   of the database where the table metadata resides. For Hive
--   compatibility, this must be all lowercase.
--   
--   <a>$sel:parameters:Table'</a>, <a>table_parameters</a> - These
--   key-value pairs define properties associated with the table.
--   
--   <a>$sel:lastAccessTime:Table'</a>, <a>table_lastAccessTime</a> - The
--   last time that the table was accessed. This is usually taken from
--   HDFS, and might not be reliable.
--   
--   <a>$sel:description:Table'</a>, <a>table_description</a> - A
--   description of the table.
--   
--   <a>$sel:partitionKeys:Table'</a>, <a>table_partitionKeys</a> - A list
--   of columns by which the table is partitioned. Only primitive types are
--   supported as partition keys.
--   
--   When you create a table used by Amazon Athena, and you do not specify
--   any <tt>partitionKeys</tt>, you must at least set the value of
--   <tt>partitionKeys</tt> to an empty list. For example:
--   
--   <pre>
--   "PartitionKeys": []
--   </pre>
--   
--   <a>$sel:createTime:Table'</a>, <a>table_createTime</a> - The time when
--   the table definition was created in the Data Catalog.
--   
--   <a>$sel:name:Table'</a>, <a>table_name</a> - The table name. For Hive
--   compatibility, this must be entirely lowercase.
newTable :: Text -> Table

-- | An error record for table operations.
--   
--   <i>See:</i> <a>newTableError</a> smart constructor.
data TableError
TableError' :: Maybe Text -> Maybe ErrorDetail -> TableError

-- | Create a value of <a>TableError</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tableName:TableError'</a>, <a>tableError_tableName</a> - The
--   name of the table. For Hive compatibility, this must be entirely
--   lowercase.
--   
--   <a>$sel:errorDetail:TableError'</a>, <a>tableError_errorDetail</a> -
--   The details about the error.
newTableError :: TableError

-- | A structure that describes a target table for resource linking.
--   
--   <i>See:</i> <a>newTableIdentifier</a> smart constructor.
data TableIdentifier
TableIdentifier' :: Maybe Text -> Maybe Text -> Maybe Text -> TableIdentifier

-- | Create a value of <a>TableIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalogId:TableIdentifier'</a>,
--   <a>tableIdentifier_catalogId</a> - The ID of the Data Catalog in which
--   the table resides.
--   
--   <a>$sel:name:TableIdentifier'</a>, <a>tableIdentifier_name</a> - The
--   name of the target table.
--   
--   <a>$sel:databaseName:TableIdentifier'</a>,
--   <a>tableIdentifier_databaseName</a> - The name of the catalog database
--   that contains the target table.
newTableIdentifier :: TableIdentifier

-- | A structure used to define a table.
--   
--   <i>See:</i> <a>newTableInput</a> smart constructor.
data TableInput
TableInput' :: Maybe Natural -> Maybe TableIdentifier -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe StorageDescriptor -> Maybe (HashMap Text Text) -> Maybe POSIX -> Maybe Text -> Maybe [Column] -> Text -> TableInput

-- | Create a value of <a>TableInput</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retention:TableInput'</a>, <a>tableInput_retention</a> - The
--   retention time for this table.
--   
--   <a>$sel:targetTable:TableInput'</a>, <a>tableInput_targetTable</a> - A
--   <tt>TableIdentifier</tt> structure that describes a target table for
--   resource linking.
--   
--   <a>$sel:tableType:TableInput'</a>, <a>tableInput_tableType</a> - The
--   type of this table (<tt>EXTERNAL_TABLE</tt>, <tt>VIRTUAL_VIEW</tt>,
--   etc.).
--   
--   <a>$sel:owner:TableInput'</a>, <a>tableInput_owner</a> - The table
--   owner.
--   
--   <a>$sel:viewOriginalText:TableInput'</a>,
--   <a>tableInput_viewOriginalText</a> - If the table is a view, the
--   original text of the view; otherwise <tt>null</tt>.
--   
--   <a>$sel:viewExpandedText:TableInput'</a>,
--   <a>tableInput_viewExpandedText</a> - If the table is a view, the
--   expanded text of the view; otherwise <tt>null</tt>.
--   
--   <a>$sel:lastAnalyzedTime:TableInput'</a>,
--   <a>tableInput_lastAnalyzedTime</a> - The last time that column
--   statistics were computed for this table.
--   
--   <a>$sel:storageDescriptor:TableInput'</a>,
--   <a>tableInput_storageDescriptor</a> - A storage descriptor containing
--   information about the physical storage of this table.
--   
--   <a>$sel:parameters:TableInput'</a>, <a>tableInput_parameters</a> -
--   These key-value pairs define properties associated with the table.
--   
--   <a>$sel:lastAccessTime:TableInput'</a>,
--   <a>tableInput_lastAccessTime</a> - The last time that the table was
--   accessed.
--   
--   <a>$sel:description:TableInput'</a>, <a>tableInput_description</a> - A
--   description of the table.
--   
--   <a>$sel:partitionKeys:TableInput'</a>, <a>tableInput_partitionKeys</a>
--   - A list of columns by which the table is partitioned. Only primitive
--   types are supported as partition keys.
--   
--   When you create a table used by Amazon Athena, and you do not specify
--   any <tt>partitionKeys</tt>, you must at least set the value of
--   <tt>partitionKeys</tt> to an empty list. For example:
--   
--   <pre>
--   "PartitionKeys": []
--   </pre>
--   
--   <a>$sel:name:TableInput'</a>, <a>tableInput_name</a> - The table name.
--   For Hive compatibility, this is folded to lowercase when it is stored.
newTableInput :: Text -> TableInput

-- | Specifies a version of a table.
--   
--   <i>See:</i> <a>newTableVersion</a> smart constructor.
data TableVersion
TableVersion' :: Maybe Text -> Maybe Table -> TableVersion

-- | Create a value of <a>TableVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:TableVersion'</a>, <a>tableVersion_versionId</a> -
--   The ID value that identifies this table version. A <tt>VersionId</tt>
--   is a string representation of an integer. Each version is incremented
--   by 1.
--   
--   <a>$sel:table:TableVersion'</a>, <a>tableVersion_table</a> - The table
--   in question.
newTableVersion :: TableVersion

-- | An error record for table-version operations.
--   
--   <i>See:</i> <a>newTableVersionError</a> smart constructor.
data TableVersionError
TableVersionError' :: Maybe Text -> Maybe Text -> Maybe ErrorDetail -> TableVersionError

-- | Create a value of <a>TableVersionError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:TableVersionError'</a>,
--   <a>tableVersionError_versionId</a> - The ID value of the version in
--   question. A <tt>VersionID</tt> is a string representation of an
--   integer. Each version is incremented by 1.
--   
--   <a>$sel:tableName:TableVersionError'</a>,
--   <a>tableVersionError_tableName</a> - The name of the table in
--   question.
--   
--   <a>$sel:errorDetail:TableVersionError'</a>,
--   <a>tableVersionError_errorDetail</a> - The details about the error.
newTableVersionError :: TableVersionError

-- | The sampling parameters that are associated with the machine learning
--   transform.
--   
--   <i>See:</i> <a>newTaskRun</a> smart constructor.
data TaskRun
TaskRun' :: Maybe POSIX -> Maybe TaskStatusType -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Int -> Maybe TaskRunProperties -> Maybe Text -> Maybe Text -> TaskRun

-- | Create a value of <a>TaskRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completedOn:TaskRun'</a>, <a>taskRun_completedOn</a> - The
--   last point in time that the requested task run was completed.
--   
--   <a>$sel:status:TaskRun'</a>, <a>taskRun_status</a> - The current
--   status of the requested task run.
--   
--   <a>$sel:lastModifiedOn:TaskRun'</a>, <a>taskRun_lastModifiedOn</a> -
--   The last point in time that the requested task run was updated.
--   
--   <a>$sel:errorString:TaskRun'</a>, <a>taskRun_errorString</a> - The
--   list of error strings associated with this task run.
--   
--   <a>$sel:startedOn:TaskRun'</a>, <a>taskRun_startedOn</a> - The date
--   and time that this task run started.
--   
--   <a>$sel:logGroupName:TaskRun'</a>, <a>taskRun_logGroupName</a> - The
--   names of the log group for secure logging, associated with this task
--   run.
--   
--   <a>$sel:executionTime:TaskRun'</a>, <a>taskRun_executionTime</a> - The
--   amount of time (in seconds) that the task run consumed resources.
--   
--   <a>$sel:properties:TaskRun'</a>, <a>taskRun_properties</a> - Specifies
--   configuration properties associated with this task run.
--   
--   <a>$sel:transformId:TaskRun'</a>, <a>taskRun_transformId</a> - The
--   unique identifier for the transform.
--   
--   <a>$sel:taskRunId:TaskRun'</a>, <a>taskRun_taskRunId</a> - The unique
--   identifier for this task run.
newTaskRun :: TaskRun

-- | The criteria that are used to filter the task runs for the machine
--   learning transform.
--   
--   <i>See:</i> <a>newTaskRunFilterCriteria</a> smart constructor.
data TaskRunFilterCriteria
TaskRunFilterCriteria' :: Maybe TaskStatusType -> Maybe POSIX -> Maybe POSIX -> Maybe TaskType -> TaskRunFilterCriteria

-- | Create a value of <a>TaskRunFilterCriteria</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:TaskRunFilterCriteria'</a>,
--   <a>taskRunFilterCriteria_status</a> - The current status of the task
--   run.
--   
--   <a>$sel:startedAfter:TaskRunFilterCriteria'</a>,
--   <a>taskRunFilterCriteria_startedAfter</a> - Filter on task runs
--   started after this date.
--   
--   <a>$sel:startedBefore:TaskRunFilterCriteria'</a>,
--   <a>taskRunFilterCriteria_startedBefore</a> - Filter on task runs
--   started before this date.
--   
--   <a>$sel:taskRunType:TaskRunFilterCriteria'</a>,
--   <a>taskRunFilterCriteria_taskRunType</a> - The type of task run.
newTaskRunFilterCriteria :: TaskRunFilterCriteria

-- | The configuration properties for the task run.
--   
--   <i>See:</i> <a>newTaskRunProperties</a> smart constructor.
data TaskRunProperties
TaskRunProperties' :: Maybe TaskType -> Maybe ExportLabelsTaskRunProperties -> Maybe LabelingSetGenerationTaskRunProperties -> Maybe FindMatchesTaskRunProperties -> Maybe ImportLabelsTaskRunProperties -> TaskRunProperties

-- | Create a value of <a>TaskRunProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskType:TaskRunProperties'</a>,
--   <a>taskRunProperties_taskType</a> - The type of task run.
--   
--   <a>$sel:exportLabelsTaskRunProperties:TaskRunProperties'</a>,
--   <a>taskRunProperties_exportLabelsTaskRunProperties</a> - The
--   configuration properties for an exporting labels task run.
--   
--   <a>$sel:labelingSetGenerationTaskRunProperties:TaskRunProperties'</a>,
--   <a>taskRunProperties_labelingSetGenerationTaskRunProperties</a> - The
--   configuration properties for a labeling set generation task run.
--   
--   <a>$sel:findMatchesTaskRunProperties:TaskRunProperties'</a>,
--   <a>taskRunProperties_findMatchesTaskRunProperties</a> - The
--   configuration properties for a find matches task run.
--   
--   <a>$sel:importLabelsTaskRunProperties:TaskRunProperties'</a>,
--   <a>taskRunProperties_importLabelsTaskRunProperties</a> - The
--   configuration properties for an importing labels task run.
newTaskRunProperties :: TaskRunProperties

-- | The sorting criteria that are used to sort the list of task runs for
--   the machine learning transform.
--   
--   <i>See:</i> <a>newTaskRunSortCriteria</a> smart constructor.
data TaskRunSortCriteria
TaskRunSortCriteria' :: TaskRunSortColumnType -> SortDirectionType -> TaskRunSortCriteria

-- | Create a value of <a>TaskRunSortCriteria</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:column:TaskRunSortCriteria'</a>,
--   <a>taskRunSortCriteria_column</a> - The column to be used to sort the
--   list of task runs for the machine learning transform.
--   
--   <a>$sel:sortDirection:TaskRunSortCriteria'</a>,
--   <a>taskRunSortCriteria_sortDirection</a> - The sort direction to be
--   used to sort the list of task runs for the machine learning transform.
newTaskRunSortCriteria :: TaskRunSortColumnType -> SortDirectionType -> TaskRunSortCriteria

-- | The encryption-at-rest settings of the transform that apply to
--   accessing user data. Machine learning transforms can access user data
--   encrypted in Amazon S3 using KMS.
--   
--   Additionally, imported labels and trained transforms can now be
--   encrypted using a customer provided KMS key.
--   
--   <i>See:</i> <a>newTransformEncryption</a> smart constructor.
data TransformEncryption
TransformEncryption' :: Maybe MLUserDataEncryption -> Maybe Text -> TransformEncryption

-- | Create a value of <a>TransformEncryption</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mlUserDataEncryption:TransformEncryption'</a>,
--   <a>transformEncryption_mlUserDataEncryption</a> - An
--   <tt>MLUserDataEncryption</tt> object containing the encryption mode
--   and customer-provided KMS key ID.
--   
--   <a>$sel:taskRunSecurityConfigurationName:TransformEncryption'</a>,
--   <a>transformEncryption_taskRunSecurityConfigurationName</a> - The name
--   of the security configuration.
newTransformEncryption :: TransformEncryption

-- | The criteria used to filter the machine learning transforms.
--   
--   <i>See:</i> <a>newTransformFilterCriteria</a> smart constructor.
data TransformFilterCriteria
TransformFilterCriteria' :: Maybe POSIX -> Maybe TransformStatusType -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe [SchemaColumn] -> Maybe TransformType -> Maybe Text -> Maybe POSIX -> TransformFilterCriteria

-- | Create a value of <a>TransformFilterCriteria</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAfter:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_createdAfter</a> - The time and date after
--   which the transforms were created.
--   
--   <a>$sel:status:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_status</a> - Filters the list of machine
--   learning transforms by the last known status of the transforms (to
--   indicate whether a transform can be used or not). One of "NOT_READY",
--   "READY", or "DELETING".
--   
--   <a>$sel:lastModifiedAfter:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_lastModifiedAfter</a> - Filter on
--   transforms last modified after this date.
--   
--   <a>$sel:lastModifiedBefore:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_lastModifiedBefore</a> - Filter on
--   transforms last modified before this date.
--   
--   <a>$sel:glueVersion:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_glueVersion</a> - This value determines
--   which version of Glue this machine learning transform is compatible
--   with. Glue 1.0 is recommended for most customers. If the value is not
--   set, the Glue compatibility defaults to Glue 0.9. For more
--   information, see <a>Glue Versions</a> in the developer guide.
--   
--   <a>$sel:schema:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_schema</a> - Filters on datasets with a
--   specific schema. The <tt>Map&lt;Column, Type&gt;</tt> object is an
--   array of key-value pairs representing the schema this transform
--   accepts, where <tt>Column</tt> is the name of a column, and
--   <tt>Type</tt> is the type of the data such as an integer or string.
--   Has an upper bound of 100 columns.
--   
--   <a>$sel:transformType:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_transformType</a> - The type of machine
--   learning transform that is used to filter the machine learning
--   transforms.
--   
--   <a>$sel:name:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_name</a> - A unique transform name that is
--   used to filter the machine learning transforms.
--   
--   <a>$sel:createdBefore:TransformFilterCriteria'</a>,
--   <a>transformFilterCriteria_createdBefore</a> - The time and date
--   before which the transforms were created.
newTransformFilterCriteria :: TransformFilterCriteria

-- | The algorithm-specific parameters that are associated with the machine
--   learning transform.
--   
--   <i>See:</i> <a>newTransformParameters</a> smart constructor.
data TransformParameters
TransformParameters' :: Maybe FindMatchesParameters -> TransformType -> TransformParameters

-- | Create a value of <a>TransformParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:findMatchesParameters:TransformParameters'</a>,
--   <a>transformParameters_findMatchesParameters</a> - The parameters for
--   the find matches algorithm.
--   
--   <a>$sel:transformType:TransformParameters'</a>,
--   <a>transformParameters_transformType</a> - The type of machine
--   learning transform.
--   
--   For information about the types of machine learning transforms, see
--   <a>Creating Machine Learning Transforms</a>.
newTransformParameters :: TransformType -> TransformParameters

-- | The sorting criteria that are associated with the machine learning
--   transform.
--   
--   <i>See:</i> <a>newTransformSortCriteria</a> smart constructor.
data TransformSortCriteria
TransformSortCriteria' :: TransformSortColumnType -> SortDirectionType -> TransformSortCriteria

-- | Create a value of <a>TransformSortCriteria</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:column:TransformSortCriteria'</a>,
--   <a>transformSortCriteria_column</a> - The column to be used in the
--   sorting criteria that are associated with the machine learning
--   transform.
--   
--   <a>$sel:sortDirection:TransformSortCriteria'</a>,
--   <a>transformSortCriteria_sortDirection</a> - The sort direction to be
--   used in the sorting criteria that are associated with the machine
--   learning transform.
newTransformSortCriteria :: TransformSortColumnType -> SortDirectionType -> TransformSortCriteria

-- | Information about a specific trigger.
--   
--   <i>See:</i> <a>newTrigger</a> smart constructor.
data Trigger
Trigger' :: Maybe Text -> Maybe TriggerState -> Maybe [Action] -> Maybe Text -> Maybe Predicate -> Maybe Text -> Maybe Text -> Maybe TriggerType -> Maybe EventBatchingCondition -> Maybe Text -> Trigger

-- | Create a value of <a>Trigger</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workflowName:Trigger'</a>, <a>trigger_workflowName</a> - The
--   name of the workflow associated with the trigger.
--   
--   <a>$sel:state:Trigger'</a>, <a>trigger_state</a> - The current state
--   of the trigger.
--   
--   <a>$sel:actions:Trigger'</a>, <a>trigger_actions</a> - The actions
--   initiated by this trigger.
--   
--   <a>$sel:schedule:Trigger'</a>, <a>trigger_schedule</a> - A
--   <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
--   
--   <a>$sel:predicate:Trigger'</a>, <a>trigger_predicate</a> - The
--   predicate of this trigger, which defines when it will fire.
--   
--   <a>$sel:name:Trigger'</a>, <a>trigger_name</a> - The name of the
--   trigger.
--   
--   <a>$sel:id:Trigger'</a>, <a>trigger_id</a> - Reserved for future use.
--   
--   <a>$sel:type':Trigger'</a>, <a>trigger_type</a> - The type of trigger
--   that this is.
--   
--   <a>$sel:eventBatchingCondition:Trigger'</a>,
--   <a>trigger_eventBatchingCondition</a> - Batch condition that must be
--   met (specified number of events received or batch time window expired)
--   before EventBridge event trigger fires.
--   
--   <a>$sel:description:Trigger'</a>, <a>trigger_description</a> - A
--   description of this trigger.
newTrigger :: Trigger

-- | The details of a Trigger node present in the workflow.
--   
--   <i>See:</i> <a>newTriggerNodeDetails</a> smart constructor.
data TriggerNodeDetails
TriggerNodeDetails' :: Maybe Trigger -> TriggerNodeDetails

-- | Create a value of <a>TriggerNodeDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trigger:TriggerNodeDetails'</a>,
--   <a>triggerNodeDetails_trigger</a> - The information of the trigger
--   represented by the trigger node.
newTriggerNodeDetails :: TriggerNodeDetails

-- | A structure used to provide information used to update a trigger. This
--   object updates the previous trigger definition by overwriting it
--   completely.
--   
--   <i>See:</i> <a>newTriggerUpdate</a> smart constructor.
data TriggerUpdate
TriggerUpdate' :: Maybe [Action] -> Maybe Text -> Maybe Predicate -> Maybe Text -> Maybe EventBatchingCondition -> Maybe Text -> TriggerUpdate

-- | Create a value of <a>TriggerUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actions:TriggerUpdate'</a>, <a>triggerUpdate_actions</a> - The
--   actions initiated by this trigger.
--   
--   <a>$sel:schedule:TriggerUpdate'</a>, <a>triggerUpdate_schedule</a> - A
--   <tt>cron</tt> expression used to specify the schedule (see
--   <a>Time-Based Schedules for Jobs and Crawlers</a>. For example, to run
--   something every day at 12:15 UTC, you would specify: <tt>cron(15 12 *
--   * ? *)</tt>.
--   
--   <a>$sel:predicate:TriggerUpdate'</a>, <a>triggerUpdate_predicate</a> -
--   The predicate of this trigger, which defines when it will fire.
--   
--   <a>$sel:name:TriggerUpdate'</a>, <a>triggerUpdate_name</a> - Reserved
--   for future use.
--   
--   <a>$sel:eventBatchingCondition:TriggerUpdate'</a>,
--   <a>triggerUpdate_eventBatchingCondition</a> - Batch condition that
--   must be met (specified number of events received or batch time window
--   expired) before EventBridge event trigger fires.
--   
--   <a>$sel:description:TriggerUpdate'</a>,
--   <a>triggerUpdate_description</a> - A description of this trigger.
newTriggerUpdate :: TriggerUpdate

-- | Specifies a custom CSV classifier to be updated.
--   
--   <i>See:</i> <a>newUpdateCsvClassifierRequest</a> smart constructor.
data UpdateCsvClassifierRequest
UpdateCsvClassifierRequest' :: Maybe Text -> Maybe CsvHeaderOption -> Maybe Bool -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Text -> UpdateCsvClassifierRequest

-- | Create a value of <a>UpdateCsvClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:quoteSymbol:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_quoteSymbol</a> - A custom symbol to
--   denote what combines content into a single column value. It must be
--   different from the column delimiter.
--   
--   <a>$sel:containsHeader:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_containsHeader</a> - Indicates whether
--   the CSV file contains a header.
--   
--   <a>$sel:disableValueTrimming:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_disableValueTrimming</a> - Specifies not
--   to trim values before identifying the type of column values. The
--   default value is true.
--   
--   <a>$sel:header:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_header</a> - A list of strings
--   representing column names.
--   
--   <a>$sel:allowSingleColumn:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_allowSingleColumn</a> - Enables the
--   processing of files that contain only one column.
--   
--   <a>$sel:delimiter:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_delimiter</a> - A custom symbol to
--   denote what separates each column entry in the row.
--   
--   <a>$sel:name:UpdateCsvClassifierRequest'</a>,
--   <a>updateCsvClassifierRequest_name</a> - The name of the classifier.
newUpdateCsvClassifierRequest :: Text -> UpdateCsvClassifierRequest

-- | Specifies a grok classifier to update when passed to
--   <tt>UpdateClassifier</tt>.
--   
--   <i>See:</i> <a>newUpdateGrokClassifierRequest</a> smart constructor.
data UpdateGrokClassifierRequest
UpdateGrokClassifierRequest' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> UpdateGrokClassifierRequest

-- | Create a value of <a>UpdateGrokClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:classification:UpdateGrokClassifierRequest'</a>,
--   <a>updateGrokClassifierRequest_classification</a> - An identifier of
--   the data format that the classifier matches, such as Twitter, JSON,
--   Omniture logs, Amazon CloudWatch Logs, and so on.
--   
--   <a>$sel:customPatterns:UpdateGrokClassifierRequest'</a>,
--   <a>updateGrokClassifierRequest_customPatterns</a> - Optional custom
--   grok patterns used by this classifier.
--   
--   <a>$sel:grokPattern:UpdateGrokClassifierRequest'</a>,
--   <a>updateGrokClassifierRequest_grokPattern</a> - The grok pattern used
--   by this classifier.
--   
--   <a>$sel:name:UpdateGrokClassifierRequest'</a>,
--   <a>updateGrokClassifierRequest_name</a> - The name of the
--   <tt>GrokClassifier</tt>.
newUpdateGrokClassifierRequest :: Text -> UpdateGrokClassifierRequest

-- | Specifies a JSON classifier to be updated.
--   
--   <i>See:</i> <a>newUpdateJsonClassifierRequest</a> smart constructor.
data UpdateJsonClassifierRequest
UpdateJsonClassifierRequest' :: Maybe Text -> Text -> UpdateJsonClassifierRequest

-- | Create a value of <a>UpdateJsonClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jsonPath:UpdateJsonClassifierRequest'</a>,
--   <a>updateJsonClassifierRequest_jsonPath</a> - A <tt>JsonPath</tt>
--   string defining the JSON data for the classifier to classify. Glue
--   supports a subset of JsonPath, as described in <a>Writing JsonPath
--   Custom Classifiers</a>.
--   
--   <a>$sel:name:UpdateJsonClassifierRequest'</a>,
--   <a>updateJsonClassifierRequest_name</a> - The name of the classifier.
newUpdateJsonClassifierRequest :: Text -> UpdateJsonClassifierRequest

-- | Specifies an XML classifier to be updated.
--   
--   <i>See:</i> <a>newUpdateXMLClassifierRequest</a> smart constructor.
data UpdateXMLClassifierRequest
UpdateXMLClassifierRequest' :: Maybe Text -> Maybe Text -> Text -> UpdateXMLClassifierRequest

-- | Create a value of <a>UpdateXMLClassifierRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:classification:UpdateXMLClassifierRequest'</a>,
--   <a>updateXMLClassifierRequest_classification</a> - An identifier of
--   the data format that the classifier matches.
--   
--   <a>$sel:rowTag:UpdateXMLClassifierRequest'</a>,
--   <a>updateXMLClassifierRequest_rowTag</a> - The XML tag designating the
--   element that contains each record in an XML document being parsed.
--   This cannot identify a self-closing element (closed by
--   <tt>/&gt;</tt>). An empty row element that contains only attributes
--   can be parsed as long as it ends with a closing tag (for example,
--   <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is okay, but
--   <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
--   
--   <a>$sel:name:UpdateXMLClassifierRequest'</a>,
--   <a>updateXMLClassifierRequest_name</a> - The name of the classifier.
newUpdateXMLClassifierRequest :: Text -> UpdateXMLClassifierRequest

-- | Represents the equivalent of a Hive user-defined function
--   (<tt>UDF</tt>) definition.
--   
--   <i>See:</i> <a>newUserDefinedFunction</a> smart constructor.
data UserDefinedFunction
UserDefinedFunction' :: Maybe Text -> Maybe Text -> Maybe [ResourceUri] -> Maybe Text -> Maybe Text -> Maybe PrincipalType -> Maybe POSIX -> Maybe Text -> UserDefinedFunction

-- | Create a value of <a>UserDefinedFunction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownerName:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_ownerName</a> - The owner of the function.
--   
--   <a>$sel:catalogId:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_catalogId</a> - The ID of the Data Catalog in
--   which the function resides.
--   
--   <a>$sel:resourceUris:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_resourceUris</a> - The resource URIs for the
--   function.
--   
--   <a>$sel:databaseName:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_databaseName</a> - The name of the catalog
--   database that contains the function.
--   
--   <a>$sel:functionName:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_functionName</a> - The name of the function.
--   
--   <a>$sel:ownerType:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_ownerType</a> - The owner type.
--   
--   <a>$sel:createTime:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_createTime</a> - The time at which the function
--   was created.
--   
--   <a>$sel:className:UserDefinedFunction'</a>,
--   <a>userDefinedFunction_className</a> - The Java class that contains
--   the function code.
newUserDefinedFunction :: UserDefinedFunction

-- | A structure used to create or update a user-defined function.
--   
--   <i>See:</i> <a>newUserDefinedFunctionInput</a> smart constructor.
data UserDefinedFunctionInput
UserDefinedFunctionInput' :: Maybe Text -> Maybe [ResourceUri] -> Maybe Text -> Maybe PrincipalType -> Maybe Text -> UserDefinedFunctionInput

-- | Create a value of <a>UserDefinedFunctionInput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownerName:UserDefinedFunctionInput'</a>,
--   <a>userDefinedFunctionInput_ownerName</a> - The owner of the function.
--   
--   <a>$sel:resourceUris:UserDefinedFunctionInput'</a>,
--   <a>userDefinedFunctionInput_resourceUris</a> - The resource URIs for
--   the function.
--   
--   <a>$sel:functionName:UserDefinedFunctionInput'</a>,
--   <a>userDefinedFunctionInput_functionName</a> - The name of the
--   function.
--   
--   <a>$sel:ownerType:UserDefinedFunctionInput'</a>,
--   <a>userDefinedFunctionInput_ownerType</a> - The owner type.
--   
--   <a>$sel:className:UserDefinedFunctionInput'</a>,
--   <a>userDefinedFunctionInput_className</a> - The Java class that
--   contains the function code.
newUserDefinedFunctionInput :: UserDefinedFunctionInput

-- | A workflow is a collection of multiple dependent Glue jobs and
--   crawlers that are run to complete a complex ETL task. A workflow
--   manages the execution and monitoring of all its jobs and crawlers.
--   
--   <i>See:</i> <a>newWorkflow</a> smart constructor.
data Workflow
Workflow' :: Maybe WorkflowGraph -> Maybe POSIX -> Maybe BlueprintDetails -> Maybe Int -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe WorkflowRun -> Maybe Text -> Maybe POSIX -> Workflow

-- | Create a value of <a>Workflow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:graph:Workflow'</a>, <a>workflow_graph</a> - The graph
--   representing all the Glue components that belong to the workflow as
--   nodes and directed connections between them as edges.
--   
--   <a>$sel:lastModifiedOn:Workflow'</a>, <a>workflow_lastModifiedOn</a> -
--   The date and time when the workflow was last modified.
--   
--   <a>$sel:blueprintDetails:Workflow'</a>,
--   <a>workflow_blueprintDetails</a> - This structure indicates the
--   details of the blueprint that this particular workflow is created
--   from.
--   
--   <a>$sel:maxConcurrentRuns:Workflow'</a>,
--   <a>workflow_maxConcurrentRuns</a> - You can use this parameter to
--   prevent unwanted multiple updates to data, to control costs, or in
--   some cases, to prevent exceeding the maximum number of concurrent runs
--   of any of the component jobs. If you leave this parameter blank, there
--   is no limit to the number of concurrent workflow runs.
--   
--   <a>$sel:defaultRunProperties:Workflow'</a>,
--   <a>workflow_defaultRunProperties</a> - A collection of properties to
--   be used as part of each execution of the workflow. The run properties
--   are made available to each job in the workflow. A job can modify the
--   properties for the next jobs in the flow.
--   
--   <a>$sel:name:Workflow'</a>, <a>workflow_name</a> - The name of the
--   workflow.
--   
--   <a>$sel:lastRun:Workflow'</a>, <a>workflow_lastRun</a> - The
--   information about the last execution of the workflow.
--   
--   <a>$sel:description:Workflow'</a>, <a>workflow_description</a> - A
--   description of the workflow.
--   
--   <a>$sel:createdOn:Workflow'</a>, <a>workflow_createdOn</a> - The date
--   and time when the workflow was created.
newWorkflow :: Workflow

-- | A workflow graph represents the complete workflow containing all the
--   Glue components present in the workflow and all the directed
--   connections between them.
--   
--   <i>See:</i> <a>newWorkflowGraph</a> smart constructor.
data WorkflowGraph
WorkflowGraph' :: Maybe [Edge] -> Maybe [Node] -> WorkflowGraph

-- | Create a value of <a>WorkflowGraph</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:edges:WorkflowGraph'</a>, <a>workflowGraph_edges</a> - A list
--   of all the directed connections between the nodes belonging to the
--   workflow.
--   
--   <a>$sel:nodes:WorkflowGraph'</a>, <a>workflowGraph_nodes</a> - A list
--   of the the Glue components belong to the workflow represented as
--   nodes.
newWorkflowGraph :: WorkflowGraph

-- | A workflow run is an execution of a workflow providing all the runtime
--   information.
--   
--   <i>See:</i> <a>newWorkflowRun</a> smart constructor.
data WorkflowRun
WorkflowRun' :: Maybe POSIX -> Maybe WorkflowRunStatus -> Maybe WorkflowGraph -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe WorkflowRunStatistics -> Maybe StartingEventBatchCondition -> Maybe Text -> Maybe (HashMap Text Text) -> WorkflowRun

-- | Create a value of <a>WorkflowRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completedOn:WorkflowRun'</a>, <a>workflowRun_completedOn</a> -
--   The date and time when the workflow run completed.
--   
--   <a>$sel:status:WorkflowRun'</a>, <a>workflowRun_status</a> - The
--   status of the workflow run.
--   
--   <a>$sel:graph:WorkflowRun'</a>, <a>workflowRun_graph</a> - The graph
--   representing all the Glue components that belong to the workflow as
--   nodes and directed connections between them as edges.
--   
--   <a>$sel:startedOn:WorkflowRun'</a>, <a>workflowRun_startedOn</a> - The
--   date and time when the workflow run was started.
--   
--   <a>$sel:workflowRunId:WorkflowRun'</a>,
--   <a>workflowRun_workflowRunId</a> - The ID of this workflow run.
--   
--   <a>$sel:name:WorkflowRun'</a>, <a>workflowRun_name</a> - Name of the
--   workflow that was run.
--   
--   <a>$sel:previousRunId:WorkflowRun'</a>,
--   <a>workflowRun_previousRunId</a> - The ID of the previous workflow
--   run.
--   
--   <a>$sel:statistics:WorkflowRun'</a>, <a>workflowRun_statistics</a> -
--   The statistics of the run.
--   
--   <a>$sel:startingEventBatchCondition:WorkflowRun'</a>,
--   <a>workflowRun_startingEventBatchCondition</a> - The batch condition
--   that started the workflow run.
--   
--   <a>$sel:errorMessage:WorkflowRun'</a>, <a>workflowRun_errorMessage</a>
--   - This error message describes any error that may have occurred in
--   starting the workflow run. Currently the only error message is
--   "Concurrent runs exceeded for workflow: <tt>foo</tt>."
--   
--   <a>$sel:workflowRunProperties:WorkflowRun'</a>,
--   <a>workflowRun_workflowRunProperties</a> - The workflow run properties
--   which were set during the run.
newWorkflowRun :: WorkflowRun

-- | Workflow run statistics provides statistics about the workflow run.
--   
--   <i>See:</i> <a>newWorkflowRunStatistics</a> smart constructor.
data WorkflowRunStatistics
WorkflowRunStatistics' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> WorkflowRunStatistics

-- | Create a value of <a>WorkflowRunStatistics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runningActions:WorkflowRunStatistics'</a>,
--   <a>workflowRunStatistics_runningActions</a> - Total number Actions in
--   running state.
--   
--   <a>$sel:stoppedActions:WorkflowRunStatistics'</a>,
--   <a>workflowRunStatistics_stoppedActions</a> - Total number of Actions
--   that have stopped.
--   
--   <a>$sel:totalActions:WorkflowRunStatistics'</a>,
--   <a>workflowRunStatistics_totalActions</a> - Total number of Actions in
--   the workflow run.
--   
--   <a>$sel:failedActions:WorkflowRunStatistics'</a>,
--   <a>workflowRunStatistics_failedActions</a> - Total number of Actions
--   that have failed.
--   
--   <a>$sel:timeoutActions:WorkflowRunStatistics'</a>,
--   <a>workflowRunStatistics_timeoutActions</a> - Total number of Actions
--   that timed out.
--   
--   <a>$sel:succeededActions:WorkflowRunStatistics'</a>,
--   <a>workflowRunStatistics_succeededActions</a> - Total number of
--   Actions that have succeeded.
newWorkflowRunStatistics :: WorkflowRunStatistics

-- | A classifier for <tt>XML</tt> content.
--   
--   <i>See:</i> <a>newXMLClassifier</a> smart constructor.
data XMLClassifier
XMLClassifier' :: Maybe POSIX -> Maybe POSIX -> Maybe Integer -> Maybe Text -> Text -> Text -> XMLClassifier

-- | Create a value of <a>XMLClassifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:XMLClassifier'</a>,
--   <a>xMLClassifier_creationTime</a> - The time that this classifier was
--   registered.
--   
--   <a>$sel:lastUpdated:XMLClassifier'</a>,
--   <a>xMLClassifier_lastUpdated</a> - The time that this classifier was
--   last updated.
--   
--   <a>$sel:version:XMLClassifier'</a>, <a>xMLClassifier_version</a> - The
--   version of this classifier.
--   
--   <a>$sel:rowTag:XMLClassifier'</a>, <a>xMLClassifier_rowTag</a> - The
--   XML tag designating the element that contains each record in an XML
--   document being parsed. This can't identify a self-closing element
--   (closed by <tt>/&gt;</tt>). An empty row element that contains only
--   attributes can be parsed as long as it ends with a closing tag (for
--   example, <tt>&lt;row item_a="A" item_b="B"&gt;&lt;/row&gt;</tt> is
--   okay, but <tt>&lt;row item_a="A" item_b="B" /&gt;</tt> is not).
--   
--   <a>$sel:name:XMLClassifier'</a>, <a>xMLClassifier_name</a> - The name
--   of the classifier.
--   
--   <a>$sel:classification:XMLClassifier'</a>,
--   <a>xMLClassifier_classification</a> - An identifier of the data format
--   that the classifier matches.
newXMLClassifier :: Text -> Text -> XMLClassifier
