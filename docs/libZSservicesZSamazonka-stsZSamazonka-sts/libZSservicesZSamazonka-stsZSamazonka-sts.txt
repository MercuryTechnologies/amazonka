-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-stsZSamazonka-sts
@version 1.6.1


module Network.AWS.STS.Types.AssumedRoleUser

-- | The identifiers for the temporary security credentials that the
--   operation returns.
--   
--   <i>See:</i> <a>newAssumedRoleUser</a> smart constructor.
data AssumedRoleUser
AssumedRoleUser' :: Text -> Text -> AssumedRoleUser

-- | A unique identifier that contains the role ID and the role session
--   name of the role that is being assumed. The role ID is generated by
--   Amazon Web Services when the role is created.
[$sel:assumedRoleId:AssumedRoleUser'] :: AssumedRoleUser -> Text

-- | The ARN of the temporary security credentials that are returned from
--   the AssumeRole action. For more information about ARNs and how to use
--   them in policies, see <a>IAM Identifiers</a> in the <i>IAM User
--   Guide</i>.
[$sel:arn:AssumedRoleUser'] :: AssumedRoleUser -> Text

-- | Create a value of <a>AssumedRoleUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assumedRoleId:AssumedRoleUser'</a>,
--   <a>assumedRoleUser_assumedRoleId</a> - A unique identifier that
--   contains the role ID and the role session name of the role that is
--   being assumed. The role ID is generated by Amazon Web Services when
--   the role is created.
--   
--   <a>$sel:arn:AssumedRoleUser'</a>, <a>assumedRoleUser_arn</a> - The ARN
--   of the temporary security credentials that are returned from the
--   AssumeRole action. For more information about ARNs and how to use them
--   in policies, see <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
newAssumedRoleUser :: Text -> Text -> AssumedRoleUser

-- | A unique identifier that contains the role ID and the role session
--   name of the role that is being assumed. The role ID is generated by
--   Amazon Web Services when the role is created.
assumedRoleUser_assumedRoleId :: Lens' AssumedRoleUser Text

-- | The ARN of the temporary security credentials that are returned from
--   the AssumeRole action. For more information about ARNs and how to use
--   them in policies, see <a>IAM Identifiers</a> in the <i>IAM User
--   Guide</i>.
assumedRoleUser_arn :: Lens' AssumedRoleUser Text
instance GHC.Generics.Generic Network.AWS.STS.Types.AssumedRoleUser.AssumedRoleUser
instance GHC.Show.Show Network.AWS.STS.Types.AssumedRoleUser.AssumedRoleUser
instance GHC.Read.Read Network.AWS.STS.Types.AssumedRoleUser.AssumedRoleUser
instance GHC.Classes.Eq Network.AWS.STS.Types.AssumedRoleUser.AssumedRoleUser
instance Network.AWS.Data.XML.FromXML Network.AWS.STS.Types.AssumedRoleUser.AssumedRoleUser
instance Data.Hashable.Class.Hashable Network.AWS.STS.Types.AssumedRoleUser.AssumedRoleUser
instance Control.DeepSeq.NFData Network.AWS.STS.Types.AssumedRoleUser.AssumedRoleUser


module Network.AWS.STS.Types.FederatedUser

-- | Identifiers for the federated user that is associated with the
--   credentials.
--   
--   <i>See:</i> <a>newFederatedUser</a> smart constructor.
data FederatedUser
FederatedUser' :: Text -> Text -> FederatedUser

-- | The string that identifies the federated user associated with the
--   credentials, similar to the unique ID of an IAM user.
[$sel:federatedUserId:FederatedUser'] :: FederatedUser -> Text

-- | The ARN that specifies the federated user that is associated with the
--   credentials. For more information about ARNs and how to use them in
--   policies, see <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
[$sel:arn:FederatedUser'] :: FederatedUser -> Text

-- | Create a value of <a>FederatedUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:federatedUserId:FederatedUser'</a>,
--   <a>federatedUser_federatedUserId</a> - The string that identifies the
--   federated user associated with the credentials, similar to the unique
--   ID of an IAM user.
--   
--   <a>$sel:arn:FederatedUser'</a>, <a>federatedUser_arn</a> - The ARN
--   that specifies the federated user that is associated with the
--   credentials. For more information about ARNs and how to use them in
--   policies, see <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
newFederatedUser :: Text -> Text -> FederatedUser

-- | The string that identifies the federated user associated with the
--   credentials, similar to the unique ID of an IAM user.
federatedUser_federatedUserId :: Lens' FederatedUser Text

-- | The ARN that specifies the federated user that is associated with the
--   credentials. For more information about ARNs and how to use them in
--   policies, see <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
federatedUser_arn :: Lens' FederatedUser Text
instance GHC.Generics.Generic Network.AWS.STS.Types.FederatedUser.FederatedUser
instance GHC.Show.Show Network.AWS.STS.Types.FederatedUser.FederatedUser
instance GHC.Read.Read Network.AWS.STS.Types.FederatedUser.FederatedUser
instance GHC.Classes.Eq Network.AWS.STS.Types.FederatedUser.FederatedUser
instance Network.AWS.Data.XML.FromXML Network.AWS.STS.Types.FederatedUser.FederatedUser
instance Data.Hashable.Class.Hashable Network.AWS.STS.Types.FederatedUser.FederatedUser
instance Control.DeepSeq.NFData Network.AWS.STS.Types.FederatedUser.FederatedUser


module Network.AWS.STS.Types.PolicyDescriptorType

-- | A reference to the IAM managed policy that is passed as a session
--   policy for a role session or a federated user session.
--   
--   <i>See:</i> <a>newPolicyDescriptorType</a> smart constructor.
data PolicyDescriptorType
PolicyDescriptorType' :: Maybe Text -> PolicyDescriptorType

-- | The Amazon Resource Name (ARN) of the IAM managed policy to use as a
--   session policy for the role. For more information about ARNs, see
--   <a>Amazon Resource Names (ARNs) and Amazon Web Services Service
--   Namespaces</a> in the <i>Amazon Web Services General Reference</i>.
[$sel:arn:PolicyDescriptorType'] :: PolicyDescriptorType -> Maybe Text

-- | Create a value of <a>PolicyDescriptorType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PolicyDescriptorType'</a>, <a>policyDescriptorType_arn</a>
--   - The Amazon Resource Name (ARN) of the IAM managed policy to use as a
--   session policy for the role. For more information about ARNs, see
--   <a>Amazon Resource Names (ARNs) and Amazon Web Services Service
--   Namespaces</a> in the <i>Amazon Web Services General Reference</i>.
newPolicyDescriptorType :: PolicyDescriptorType

-- | The Amazon Resource Name (ARN) of the IAM managed policy to use as a
--   session policy for the role. For more information about ARNs, see
--   <a>Amazon Resource Names (ARNs) and Amazon Web Services Service
--   Namespaces</a> in the <i>Amazon Web Services General Reference</i>.
policyDescriptorType_arn :: Lens' PolicyDescriptorType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.STS.Types.PolicyDescriptorType.PolicyDescriptorType
instance GHC.Show.Show Network.AWS.STS.Types.PolicyDescriptorType.PolicyDescriptorType
instance GHC.Read.Read Network.AWS.STS.Types.PolicyDescriptorType.PolicyDescriptorType
instance GHC.Classes.Eq Network.AWS.STS.Types.PolicyDescriptorType.PolicyDescriptorType
instance Data.Hashable.Class.Hashable Network.AWS.STS.Types.PolicyDescriptorType.PolicyDescriptorType
instance Control.DeepSeq.NFData Network.AWS.STS.Types.PolicyDescriptorType.PolicyDescriptorType
instance Network.AWS.Data.Query.ToQuery Network.AWS.STS.Types.PolicyDescriptorType.PolicyDescriptorType


module Network.AWS.STS.Types.Tag

-- | You can pass custom key-value pair attributes when you assume a role
--   or federate a user. These are called session tags. You can then use
--   the session tags to control access to resources. For more information,
--   see <a>Tagging STS Sessions</a> in the <i>IAM User Guide</i>.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The key for a session tag.
--   
--   You can pass up to 50 session tags. The plain text session tag keys
--   can’t exceed 128 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
[$sel:key:Tag'] :: Tag -> Text

-- | The value for a session tag.
--   
--   You can pass up to 50 session tags. The plain text session tag values
--   can’t exceed 256 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for a session tag.
--   
--   You can pass up to 50 session tags. The plain text session tag keys
--   can’t exceed 128 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value for a session
--   tag.
--   
--   You can pass up to 50 session tags. The plain text session tag values
--   can’t exceed 256 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
newTag :: Text -> Text -> Tag

-- | The key for a session tag.
--   
--   You can pass up to 50 session tags. The plain text session tag keys
--   can’t exceed 128 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
tag_key :: Lens' Tag Text

-- | The value for a session tag.
--   
--   You can pass up to 50 session tags. The plain text session tag values
--   can’t exceed 256 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.STS.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.STS.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.STS.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.STS.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.STS.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.STS.Types.Tag.Tag
instance Network.AWS.Data.Query.ToQuery Network.AWS.STS.Types.Tag.Tag


module Network.AWS.STS.Types

-- | API version <tt>2011-06-15</tt> of the Amazon Security Token Service
--   SDK configuration.
defaultService :: Service

-- | STS is not activated in the requested region for the account that is
--   being asked to generate credentials. The account administrator must
--   use the IAM console to activate STS in that region. For more
--   information, see <a>Activating and Deactivating Amazon Web Services
--   STS in an Amazon Web Services Region</a> in the <i>IAM User Guide</i>.
_RegionDisabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was rejected because the policy document was malformed.
--   The error message describes the specific error.
_MalformedPolicyDocumentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was rejected because the total packed size of the session
--   policies and session tags combined was too large. An Amazon Web
--   Services conversion compresses the session policy document, session
--   policy ARNs, and session tags into a packed binary format that has a
--   separate limit. The error message indicates by percentage how close
--   the policies and tags are to the upper size limit. For more
--   information, see <a>Passing Session Tags in STS</a> in the <i>IAM User
--   Guide</i>.
--   
--   You could receive this error even though you meet other defined
--   session policy and session tag limits. For more information, see
--   <a>IAM and STS Entity Character Limits</a> in the <i>IAM User
--   Guide</i>.
_PackedPolicyTooLargeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The web identity token that was passed could not be validated by
--   Amazon Web Services. Get a new identity token from the identity
--   provider and then retry the request.
_InvalidIdentityTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The web identity token that was passed is expired or is not valid. Get
--   a new identity token from the identity provider and then retry the
--   request.
_ExpiredTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The error returned if the message passed to
--   <tt>DecodeAuthorizationMessage</tt> was invalid. This can happen if
--   the token contains invalid characters, such as linebreaks.
_InvalidAuthorizationMessageException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The identity provider (IdP) reported that authentication failed. This
--   might be because the claim is invalid.
--   
--   If this error is returned for the <tt>AssumeRoleWithWebIdentity</tt>
--   operation, it can also mean that the claim has expired or has been
--   explicitly revoked.
_IDPRejectedClaimException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request could not be fulfilled because the identity provider (IDP)
--   that was asked to verify the incoming identity token could not be
--   reached. This is often a transient error caused by network conditions.
--   Retry the request a limited number of times so that you don't exceed
--   the request rate. If the error persists, the identity provider might
--   be down or not responding.
_IDPCommunicationErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The identifiers for the temporary security credentials that the
--   operation returns.
--   
--   <i>See:</i> <a>newAssumedRoleUser</a> smart constructor.
data AssumedRoleUser
AssumedRoleUser' :: Text -> Text -> AssumedRoleUser

-- | A unique identifier that contains the role ID and the role session
--   name of the role that is being assumed. The role ID is generated by
--   Amazon Web Services when the role is created.
[$sel:assumedRoleId:AssumedRoleUser'] :: AssumedRoleUser -> Text

-- | The ARN of the temporary security credentials that are returned from
--   the AssumeRole action. For more information about ARNs and how to use
--   them in policies, see <a>IAM Identifiers</a> in the <i>IAM User
--   Guide</i>.
[$sel:arn:AssumedRoleUser'] :: AssumedRoleUser -> Text

-- | Create a value of <a>AssumedRoleUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assumedRoleId:AssumedRoleUser'</a>,
--   <a>assumedRoleUser_assumedRoleId</a> - A unique identifier that
--   contains the role ID and the role session name of the role that is
--   being assumed. The role ID is generated by Amazon Web Services when
--   the role is created.
--   
--   <a>$sel:arn:AssumedRoleUser'</a>, <a>assumedRoleUser_arn</a> - The ARN
--   of the temporary security credentials that are returned from the
--   AssumeRole action. For more information about ARNs and how to use them
--   in policies, see <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
newAssumedRoleUser :: Text -> Text -> AssumedRoleUser

-- | A unique identifier that contains the role ID and the role session
--   name of the role that is being assumed. The role ID is generated by
--   Amazon Web Services when the role is created.
assumedRoleUser_assumedRoleId :: Lens' AssumedRoleUser Text

-- | The ARN of the temporary security credentials that are returned from
--   the AssumeRole action. For more information about ARNs and how to use
--   them in policies, see <a>IAM Identifiers</a> in the <i>IAM User
--   Guide</i>.
assumedRoleUser_arn :: Lens' AssumedRoleUser Text

-- | Identifiers for the federated user that is associated with the
--   credentials.
--   
--   <i>See:</i> <a>newFederatedUser</a> smart constructor.
data FederatedUser
FederatedUser' :: Text -> Text -> FederatedUser

-- | The string that identifies the federated user associated with the
--   credentials, similar to the unique ID of an IAM user.
[$sel:federatedUserId:FederatedUser'] :: FederatedUser -> Text

-- | The ARN that specifies the federated user that is associated with the
--   credentials. For more information about ARNs and how to use them in
--   policies, see <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
[$sel:arn:FederatedUser'] :: FederatedUser -> Text

-- | Create a value of <a>FederatedUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:federatedUserId:FederatedUser'</a>,
--   <a>federatedUser_federatedUserId</a> - The string that identifies the
--   federated user associated with the credentials, similar to the unique
--   ID of an IAM user.
--   
--   <a>$sel:arn:FederatedUser'</a>, <a>federatedUser_arn</a> - The ARN
--   that specifies the federated user that is associated with the
--   credentials. For more information about ARNs and how to use them in
--   policies, see <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
newFederatedUser :: Text -> Text -> FederatedUser

-- | The string that identifies the federated user associated with the
--   credentials, similar to the unique ID of an IAM user.
federatedUser_federatedUserId :: Lens' FederatedUser Text

-- | The ARN that specifies the federated user that is associated with the
--   credentials. For more information about ARNs and how to use them in
--   policies, see <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
federatedUser_arn :: Lens' FederatedUser Text

-- | A reference to the IAM managed policy that is passed as a session
--   policy for a role session or a federated user session.
--   
--   <i>See:</i> <a>newPolicyDescriptorType</a> smart constructor.
data PolicyDescriptorType
PolicyDescriptorType' :: Maybe Text -> PolicyDescriptorType

-- | The Amazon Resource Name (ARN) of the IAM managed policy to use as a
--   session policy for the role. For more information about ARNs, see
--   <a>Amazon Resource Names (ARNs) and Amazon Web Services Service
--   Namespaces</a> in the <i>Amazon Web Services General Reference</i>.
[$sel:arn:PolicyDescriptorType'] :: PolicyDescriptorType -> Maybe Text

-- | Create a value of <a>PolicyDescriptorType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PolicyDescriptorType'</a>, <a>policyDescriptorType_arn</a>
--   - The Amazon Resource Name (ARN) of the IAM managed policy to use as a
--   session policy for the role. For more information about ARNs, see
--   <a>Amazon Resource Names (ARNs) and Amazon Web Services Service
--   Namespaces</a> in the <i>Amazon Web Services General Reference</i>.
newPolicyDescriptorType :: PolicyDescriptorType

-- | The Amazon Resource Name (ARN) of the IAM managed policy to use as a
--   session policy for the role. For more information about ARNs, see
--   <a>Amazon Resource Names (ARNs) and Amazon Web Services Service
--   Namespaces</a> in the <i>Amazon Web Services General Reference</i>.
policyDescriptorType_arn :: Lens' PolicyDescriptorType (Maybe Text)

-- | You can pass custom key-value pair attributes when you assume a role
--   or federate a user. These are called session tags. You can then use
--   the session tags to control access to resources. For more information,
--   see <a>Tagging STS Sessions</a> in the <i>IAM User Guide</i>.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The key for a session tag.
--   
--   You can pass up to 50 session tags. The plain text session tag keys
--   can’t exceed 128 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
[$sel:key:Tag'] :: Tag -> Text

-- | The value for a session tag.
--   
--   You can pass up to 50 session tags. The plain text session tag values
--   can’t exceed 256 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for a session tag.
--   
--   You can pass up to 50 session tags. The plain text session tag keys
--   can’t exceed 128 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value for a session
--   tag.
--   
--   You can pass up to 50 session tags. The plain text session tag values
--   can’t exceed 256 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
newTag :: Text -> Text -> Tag

-- | The key for a session tag.
--   
--   You can pass up to 50 session tags. The plain text session tag keys
--   can’t exceed 128 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
tag_key :: Lens' Tag Text

-- | The value for a session tag.
--   
--   You can pass up to 50 session tags. The plain text session tag values
--   can’t exceed 256 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
tag_value :: Lens' Tag Text


-- | Returns a set of temporary credentials for an Amazon Web Services
--   account or IAM user. The credentials consist of an access key ID, a
--   secret access key, and a security token. Typically, you use
--   <tt>GetSessionToken</tt> if you want to use MFA to protect
--   programmatic calls to specific Amazon Web Services API operations like
--   Amazon EC2 <tt>StopInstances</tt>. MFA-enabled IAM users would need to
--   call <tt>GetSessionToken</tt> and submit an MFA code that is
--   associated with their MFA device. Using the temporary security
--   credentials that are returned from the call, IAM users can then make
--   programmatic calls to API operations that require MFA authentication.
--   If you do not supply a correct MFA code, then the API returns an
--   access denied error. For a comparison of <tt>GetSessionToken</tt> with
--   the other API operations that produce temporary credentials, see
--   <a>Requesting Temporary Security Credentials</a> and <a>Comparing the
--   STS API operations</a> in the <i>IAM User Guide</i>.
--   
--   <b>Session Duration</b>
--   
--   The <tt>GetSessionToken</tt> operation must be called by using the
--   long-term Amazon Web Services security credentials of the Amazon Web
--   Services account root user or an IAM user. Credentials that are
--   created by IAM users are valid for the duration that you specify. This
--   duration can range from 900 seconds (15 minutes) up to a maximum of
--   129,600 seconds (36 hours), with a default of 43,200 seconds (12
--   hours). Credentials based on account credentials can range from 900
--   seconds (15 minutes) up to 3,600 seconds (1 hour), with a default of 1
--   hour.
--   
--   <b>Permissions</b>
--   
--   The temporary security credentials created by <tt>GetSessionToken</tt>
--   can be used to make API calls to any Amazon Web Services service with
--   the following exceptions:
--   
--   <ul>
--   <li>You cannot call any IAM API operations unless MFA authentication
--   information is included in the request.</li>
--   <li>You cannot call any STS API <i>except</i> <tt>AssumeRole</tt> or
--   <tt>GetCallerIdentity</tt>.</li>
--   </ul>
--   
--   We recommend that you do not call <tt>GetSessionToken</tt> with Amazon
--   Web Services account root user credentials. Instead, follow our
--   <a>best practices</a> by creating one or more IAM users, giving them
--   the necessary permissions, and using IAM users for everyday
--   interaction with Amazon Web Services.
--   
--   The credentials that are returned by <tt>GetSessionToken</tt> are
--   based on permissions associated with the user whose credentials were
--   used to call the operation. If <tt>GetSessionToken</tt> is called
--   using Amazon Web Services account root user credentials, the temporary
--   credentials have root user permissions. Similarly, if
--   <tt>GetSessionToken</tt> is called using the credentials of an IAM
--   user, the temporary credentials have the same permissions as the IAM
--   user.
--   
--   For more information about using <tt>GetSessionToken</tt> to create
--   temporary credentials, go to <a>Temporary Credentials for Users in
--   Untrusted Environments</a> in the <i>IAM User Guide</i>.
module Network.AWS.STS.GetSessionToken

-- | <i>See:</i> <a>newGetSessionToken</a> smart constructor.
data GetSessionToken
GetSessionToken' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetSessionToken

-- | The value provided by the MFA device, if MFA is required. If any
--   policy requires the IAM user to submit an MFA code, specify this
--   value. If MFA authentication is required, the user must provide a code
--   when requesting a set of temporary security credentials. A user who
--   fails to provide the code receives an "access denied" response when
--   requesting resources that require MFA authentication.
--   
--   The format for this parameter, as described by its regex pattern, is a
--   sequence of six numeric digits.
[$sel:tokenCode:GetSessionToken'] :: GetSessionToken -> Maybe Text

-- | The identification number of the MFA device that is associated with
--   the IAM user who is making the <tt>GetSessionToken</tt> call. Specify
--   this value if the IAM user has a policy that requires MFA
--   authentication. The value is either the serial number for a hardware
--   device (such as <tt>GAHT12345678</tt>) or an Amazon Resource Name
--   (ARN) for a virtual device (such as
--   <tt>arn:aws:iam::123456789012:mfa/user</tt>). You can find the device
--   for an IAM user by going to the Management Console and viewing the
--   user's security credentials.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
[$sel:serialNumber:GetSessionToken'] :: GetSessionToken -> Maybe Text

-- | The duration, in seconds, that the credentials should remain valid.
--   Acceptable durations for IAM user sessions range from 900 seconds (15
--   minutes) to 129,600 seconds (36 hours), with 43,200 seconds (12 hours)
--   as the default. Sessions for Amazon Web Services account owners are
--   restricted to a maximum of 3,600 seconds (one hour). If the duration
--   is longer than one hour, the session for Amazon Web Services account
--   owners defaults to one hour.
[$sel:durationSeconds:GetSessionToken'] :: GetSessionToken -> Maybe Natural

-- | Create a value of <a>GetSessionToken</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tokenCode:GetSessionToken'</a>,
--   <a>getSessionToken_tokenCode</a> - The value provided by the MFA
--   device, if MFA is required. If any policy requires the IAM user to
--   submit an MFA code, specify this value. If MFA authentication is
--   required, the user must provide a code when requesting a set of
--   temporary security credentials. A user who fails to provide the code
--   receives an "access denied" response when requesting resources that
--   require MFA authentication.
--   
--   The format for this parameter, as described by its regex pattern, is a
--   sequence of six numeric digits.
--   
--   <a>$sel:serialNumber:GetSessionToken'</a>,
--   <a>getSessionToken_serialNumber</a> - The identification number of the
--   MFA device that is associated with the IAM user who is making the
--   <tt>GetSessionToken</tt> call. Specify this value if the IAM user has
--   a policy that requires MFA authentication. The value is either the
--   serial number for a hardware device (such as <tt>GAHT12345678</tt>) or
--   an Amazon Resource Name (ARN) for a virtual device (such as
--   <tt>arn:aws:iam::123456789012:mfa/user</tt>). You can find the device
--   for an IAM user by going to the Management Console and viewing the
--   user's security credentials.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
--   
--   <a>$sel:durationSeconds:GetSessionToken'</a>,
--   <a>getSessionToken_durationSeconds</a> - The duration, in seconds,
--   that the credentials should remain valid. Acceptable durations for IAM
--   user sessions range from 900 seconds (15 minutes) to 129,600 seconds
--   (36 hours), with 43,200 seconds (12 hours) as the default. Sessions
--   for Amazon Web Services account owners are restricted to a maximum of
--   3,600 seconds (one hour). If the duration is longer than one hour, the
--   session for Amazon Web Services account owners defaults to one hour.
newGetSessionToken :: GetSessionToken

-- | The value provided by the MFA device, if MFA is required. If any
--   policy requires the IAM user to submit an MFA code, specify this
--   value. If MFA authentication is required, the user must provide a code
--   when requesting a set of temporary security credentials. A user who
--   fails to provide the code receives an "access denied" response when
--   requesting resources that require MFA authentication.
--   
--   The format for this parameter, as described by its regex pattern, is a
--   sequence of six numeric digits.
getSessionToken_tokenCode :: Lens' GetSessionToken (Maybe Text)

-- | The identification number of the MFA device that is associated with
--   the IAM user who is making the <tt>GetSessionToken</tt> call. Specify
--   this value if the IAM user has a policy that requires MFA
--   authentication. The value is either the serial number for a hardware
--   device (such as <tt>GAHT12345678</tt>) or an Amazon Resource Name
--   (ARN) for a virtual device (such as
--   <tt>arn:aws:iam::123456789012:mfa/user</tt>). You can find the device
--   for an IAM user by going to the Management Console and viewing the
--   user's security credentials.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
getSessionToken_serialNumber :: Lens' GetSessionToken (Maybe Text)

-- | The duration, in seconds, that the credentials should remain valid.
--   Acceptable durations for IAM user sessions range from 900 seconds (15
--   minutes) to 129,600 seconds (36 hours), with 43,200 seconds (12 hours)
--   as the default. Sessions for Amazon Web Services account owners are
--   restricted to a maximum of 3,600 seconds (one hour). If the duration
--   is longer than one hour, the session for Amazon Web Services account
--   owners defaults to one hour.
getSessionToken_durationSeconds :: Lens' GetSessionToken (Maybe Natural)

-- | Contains the response to a successful GetSessionToken request,
--   including temporary Amazon Web Services credentials that can be used
--   to make Amazon Web Services requests.
--   
--   <i>See:</i> <a>newGetSessionTokenResponse</a> smart constructor.
data GetSessionTokenResponse
GetSessionTokenResponse' :: Maybe AuthEnv -> Int -> GetSessionTokenResponse

-- | The temporary security credentials, which include an access key ID, a
--   secret access key, and a security (or session) token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
[$sel:credentials:GetSessionTokenResponse'] :: GetSessionTokenResponse -> Maybe AuthEnv

-- | The response's http status code.
[$sel:httpStatus:GetSessionTokenResponse'] :: GetSessionTokenResponse -> Int

-- | Create a value of <a>GetSessionTokenResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:credentials:GetSessionTokenResponse'</a>,
--   <a>getSessionTokenResponse_credentials</a> - The temporary security
--   credentials, which include an access key ID, a secret access key, and
--   a security (or session) token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
--   
--   <a>$sel:httpStatus:GetSessionTokenResponse'</a>,
--   <a>getSessionTokenResponse_httpStatus</a> - The response's http status
--   code.
newGetSessionTokenResponse :: Int -> GetSessionTokenResponse

-- | The temporary security credentials, which include an access key ID, a
--   secret access key, and a security (or session) token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
getSessionTokenResponse_credentials :: Lens' GetSessionTokenResponse (Maybe AuthEnv)

-- | The response's http status code.
getSessionTokenResponse_httpStatus :: Lens' GetSessionTokenResponse Int
instance GHC.Generics.Generic Network.AWS.STS.GetSessionToken.GetSessionToken
instance GHC.Show.Show Network.AWS.STS.GetSessionToken.GetSessionToken
instance GHC.Read.Read Network.AWS.STS.GetSessionToken.GetSessionToken
instance GHC.Classes.Eq Network.AWS.STS.GetSessionToken.GetSessionToken
instance GHC.Generics.Generic Network.AWS.STS.GetSessionToken.GetSessionTokenResponse
instance GHC.Show.Show Network.AWS.STS.GetSessionToken.GetSessionTokenResponse
instance GHC.Classes.Eq Network.AWS.STS.GetSessionToken.GetSessionTokenResponse
instance Network.AWS.Types.AWSRequest Network.AWS.STS.GetSessionToken.GetSessionToken
instance Control.DeepSeq.NFData Network.AWS.STS.GetSessionToken.GetSessionTokenResponse
instance Data.Hashable.Class.Hashable Network.AWS.STS.GetSessionToken.GetSessionToken
instance Control.DeepSeq.NFData Network.AWS.STS.GetSessionToken.GetSessionToken
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.STS.GetSessionToken.GetSessionToken
instance Network.AWS.Data.Path.ToPath Network.AWS.STS.GetSessionToken.GetSessionToken
instance Network.AWS.Data.Query.ToQuery Network.AWS.STS.GetSessionToken.GetSessionToken


-- | Returns a set of temporary security credentials (consisting of an
--   access key ID, a secret access key, and a security token) for a
--   federated user. A typical use is in a proxy application that gets
--   temporary security credentials on behalf of distributed applications
--   inside a corporate network. You must call the
--   <tt>GetFederationToken</tt> operation using the long-term security
--   credentials of an IAM user. As a result, this call is appropriate in
--   contexts where those credentials can be safely stored, usually in a
--   server-based application. For a comparison of
--   <tt>GetFederationToken</tt> with the other API operations that produce
--   temporary credentials, see <a>Requesting Temporary Security
--   Credentials</a> and <a>Comparing the STS API operations</a> in the
--   <i>IAM User Guide</i>.
--   
--   You can create a mobile-based or browser-based app that can
--   authenticate users using a web identity provider like Login with
--   Amazon, Facebook, Google, or an OpenID Connect-compatible identity
--   provider. In this case, we recommend that you use <a>Amazon
--   Cognito</a> or <tt>AssumeRoleWithWebIdentity</tt>. For more
--   information, see <a>Federation Through a Web-based Identity
--   Provider</a> in the <i>IAM User Guide</i>.
--   
--   You can also call <tt>GetFederationToken</tt> using the security
--   credentials of an Amazon Web Services account root user, but we do not
--   recommend it. Instead, we recommend that you create an IAM user for
--   the purpose of the proxy application. Then attach a policy to the IAM
--   user that limits federated users to only the actions and resources
--   that they need to access. For more information, see <a>IAM Best
--   Practices</a> in the <i>IAM User Guide</i>.
--   
--   <b>Session duration</b>
--   
--   The temporary credentials are valid for the specified duration, from
--   900 seconds (15 minutes) up to a maximum of 129,600 seconds (36
--   hours). The default session duration is 43,200 seconds (12 hours).
--   Temporary credentials that are obtained by using Amazon Web Services
--   account root user credentials have a maximum duration of 3,600 seconds
--   (1 hour).
--   
--   <b>Permissions</b>
--   
--   You can use the temporary credentials created by
--   <tt>GetFederationToken</tt> in any Amazon Web Services service except
--   the following:
--   
--   <ul>
--   <li>You cannot call any IAM operations using the CLI or the Amazon Web
--   Services API.</li>
--   <li>You cannot call any STS operations except
--   <tt>GetCallerIdentity</tt>.</li>
--   </ul>
--   
--   You must pass an inline or managed <a>session policy</a> to this
--   operation. You can pass a single JSON policy document to use as an
--   inline session policy. You can also specify up to 10 managed policies
--   to use as managed session policies. The plaintext that you use for
--   both inline and managed session policies can't exceed 2,048
--   characters.
--   
--   Though the session policy parameters are optional, if you do not pass
--   a policy, then the resulting federated user session has no
--   permissions. When you pass session policies, the session permissions
--   are the intersection of the IAM user policies and the session policies
--   that you pass. This gives you a way to further restrict the
--   permissions for a federated user. You cannot use session policies to
--   grant more permissions than those that are defined in the permissions
--   policy of the IAM user. For more information, see <a>Session
--   Policies</a> in the <i>IAM User Guide</i>. For information about using
--   <tt>GetFederationToken</tt> to create temporary security credentials,
--   see <a>GetFederationToken—Federation Through a Custom Identity
--   Broker</a>.
--   
--   You can use the credentials to access a resource that has a
--   resource-based policy. If that policy specifically references the
--   federated user session in the <tt>Principal</tt> element of the
--   policy, the session has the permissions allowed by the policy. These
--   permissions are granted in addition to the permissions granted by the
--   session policies.
--   
--   <b>Tags</b>
--   
--   (Optional) You can pass tag key-value pairs to your session. These are
--   called session tags. For more information about session tags, see
--   <a>Passing Session Tags in STS</a> in the <i>IAM User Guide</i>.
--   
--   You can create a mobile-based or browser-based app that can
--   authenticate users using a web identity provider like Login with
--   Amazon, Facebook, Google, or an OpenID Connect-compatible identity
--   provider. In this case, we recommend that you use <a>Amazon
--   Cognito</a> or <tt>AssumeRoleWithWebIdentity</tt>. For more
--   information, see <a>Federation Through a Web-based Identity
--   Provider</a> in the <i>IAM User Guide</i>.
--   
--   You can also call <tt>GetFederationToken</tt> using the security
--   credentials of an Amazon Web Services account root user, but we do not
--   recommend it. Instead, we recommend that you create an IAM user for
--   the purpose of the proxy application. Then attach a policy to the IAM
--   user that limits federated users to only the actions and resources
--   that they need to access. For more information, see <a>IAM Best
--   Practices</a> in the <i>IAM User Guide</i>.
--   
--   <b>Session duration</b>
--   
--   The temporary credentials are valid for the specified duration, from
--   900 seconds (15 minutes) up to a maximum of 129,600 seconds (36
--   hours). The default session duration is 43,200 seconds (12 hours).
--   Temporary credentials that are obtained by using Amazon Web Services
--   account root user credentials have a maximum duration of 3,600 seconds
--   (1 hour).
--   
--   <b>Permissions</b>
--   
--   You can use the temporary credentials created by
--   <tt>GetFederationToken</tt> in any Amazon Web Services service except
--   the following:
--   
--   <ul>
--   <li>You cannot call any IAM operations using the CLI or the Amazon Web
--   Services API.</li>
--   <li>You cannot call any STS operations except
--   <tt>GetCallerIdentity</tt>.</li>
--   </ul>
--   
--   You must pass an inline or managed <a>session policy</a> to this
--   operation. You can pass a single JSON policy document to use as an
--   inline session policy. You can also specify up to 10 managed policies
--   to use as managed session policies. The plain text that you use for
--   both inline and managed session policies can't exceed 2,048
--   characters.
--   
--   Though the session policy parameters are optional, if you do not pass
--   a policy, then the resulting federated user session has no
--   permissions. When you pass session policies, the session permissions
--   are the intersection of the IAM user policies and the session policies
--   that you pass. This gives you a way to further restrict the
--   permissions for a federated user. You cannot use session policies to
--   grant more permissions than those that are defined in the permissions
--   policy of the IAM user. For more information, see <a>Session
--   Policies</a> in the <i>IAM User Guide</i>. For information about using
--   <tt>GetFederationToken</tt> to create temporary security credentials,
--   see <a>GetFederationToken—Federation Through a Custom Identity
--   Broker</a>.
--   
--   You can use the credentials to access a resource that has a
--   resource-based policy. If that policy specifically references the
--   federated user session in the <tt>Principal</tt> element of the
--   policy, the session has the permissions allowed by the policy. These
--   permissions are granted in addition to the permissions granted by the
--   session policies.
--   
--   <b>Tags</b>
--   
--   (Optional) You can pass tag key-value pairs to your session. These are
--   called session tags. For more information about session tags, see
--   <a>Passing Session Tags in STS</a> in the <i>IAM User Guide</i>.
--   
--   An administrator must grant you the permissions necessary to pass
--   session tags. The administrator can also create granular permissions
--   to allow you to pass only specific session tags. For more information,
--   see <a>Tutorial: Using Tags for Attribute-Based Access Control</a> in
--   the <i>IAM User Guide</i>.
--   
--   Tag key–value pairs are not case sensitive, but case is preserved.
--   This means that you cannot have separate <tt>Department</tt> and
--   <tt>department</tt> tag keys. Assume that the user that you are
--   federating has the <tt>Department</tt>=<tt>Marketing</tt> tag and you
--   pass the <tt>department</tt>=<tt>engineering</tt> session tag.
--   <tt>Department</tt> and <tt>department</tt> are not saved as separate
--   tags, and the session tag passed in the request takes precedence over
--   the user tag.
module Network.AWS.STS.GetFederationToken

-- | <i>See:</i> <a>newGetFederationToken</a> smart constructor.
data GetFederationToken
GetFederationToken' :: Maybe [Tag] -> Maybe [PolicyDescriptorType] -> Maybe Text -> Maybe Natural -> Text -> GetFederationToken

-- | A list of session tags. Each session tag consists of a key name and an
--   associated value. For more information about session tags, see
--   <a>Passing Session Tags in STS</a> in the <i>IAM User Guide</i>.
--   
--   This parameter is optional. You can pass up to 50 session tags. The
--   plaintext session tag keys can’t exceed 128 characters and the values
--   can’t exceed 256 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   You can pass a session tag with the same key as a tag that is already
--   attached to the user you are federating. When you do, session tags
--   override a user tag with the same key.
--   
--   Tag key–value pairs are not case sensitive, but case is preserved.
--   This means that you cannot have separate <tt>Department</tt> and
--   <tt>department</tt> tag keys. Assume that the role has the
--   <tt>Department</tt>=<tt>Marketing</tt> tag and you pass the
--   <tt>department</tt>=<tt>engineering</tt> session tag.
--   <tt>Department</tt> and <tt>department</tt> are not saved as separate
--   tags, and the session tag passed in the request takes precedence over
--   the role tag.
[$sel:tags:GetFederationToken'] :: GetFederationToken -> Maybe [Tag]

-- | The Amazon Resource Names (ARNs) of the IAM managed policies that you
--   want to use as a managed session policy. The policies must exist in
--   the same account as the IAM user that is requesting federated access.
--   
--   You must pass an inline or managed <a>session policy</a> to this
--   operation. You can pass a single JSON policy document to use as an
--   inline session policy. You can also specify up to 10 managed policies
--   to use as managed session policies. The plaintext that you use for
--   both inline and managed session policies can't exceed 2,048
--   characters. You can provide up to 10 managed policy ARNs. For more
--   information about ARNs, see <a>Amazon Resource Names (ARNs) and Amazon
--   Web Services Service Namespaces</a> in the Amazon Web Services General
--   Reference.
--   
--   This parameter is optional. However, if you do not pass any session
--   policies, then the resulting federated user session has no
--   permissions.
--   
--   When you pass session policies, the session permissions are the
--   intersection of the IAM user policies and the session policies that
--   you pass. This gives you a way to further restrict the permissions for
--   a federated user. You cannot use session policies to grant more
--   permissions than those that are defined in the permissions policy of
--   the IAM user. For more information, see <a>Session Policies</a> in the
--   <i>IAM User Guide</i>.
--   
--   The resulting credentials can be used to access a resource that has a
--   resource-based policy. If that policy specifically references the
--   federated user session in the <tt>Principal</tt> element of the
--   policy, the session has the permissions allowed by the policy. These
--   permissions are granted in addition to the permissions that are
--   granted by the session policies.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
[$sel:policyArns:GetFederationToken'] :: GetFederationToken -> Maybe [PolicyDescriptorType]

-- | An IAM policy in JSON format that you want to use as an inline session
--   policy.
--   
--   You must pass an inline or managed <a>session policy</a> to this
--   operation. You can pass a single JSON policy document to use as an
--   inline session policy. You can also specify up to 10 managed policies
--   to use as managed session policies.
--   
--   This parameter is optional. However, if you do not pass any session
--   policies, then the resulting federated user session has no
--   permissions.
--   
--   When you pass session policies, the session permissions are the
--   intersection of the IAM user policies and the session policies that
--   you pass. This gives you a way to further restrict the permissions for
--   a federated user. You cannot use session policies to grant more
--   permissions than those that are defined in the permissions policy of
--   the IAM user. For more information, see <a>Session Policies</a> in the
--   <i>IAM User Guide</i>.
--   
--   The resulting credentials can be used to access a resource that has a
--   resource-based policy. If that policy specifically references the
--   federated user session in the <tt>Principal</tt> element of the
--   policy, the session has the permissions allowed by the policy. These
--   permissions are granted in addition to the permissions that are
--   granted by the session policies.
--   
--   The plaintext that you use for both inline and managed session
--   policies can't exceed 2,048 characters. The JSON policy characters can
--   be any ASCII character from the space character to the end of the
--   valid character list (\u0020 through \u00FF). It can also include the
--   tab (\u0009), linefeed (\u000A), and carriage return (\u000D)
--   characters.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
[$sel:policy:GetFederationToken'] :: GetFederationToken -> Maybe Text

-- | The duration, in seconds, that the session should last. Acceptable
--   durations for federation sessions range from 900 seconds (15 minutes)
--   to 129,600 seconds (36 hours), with 43,200 seconds (12 hours) as the
--   default. Sessions obtained using Amazon Web Services account root user
--   credentials are restricted to a maximum of 3,600 seconds (one hour).
--   If the specified duration is longer than one hour, the session
--   obtained by using root user credentials defaults to one hour.
[$sel:durationSeconds:GetFederationToken'] :: GetFederationToken -> Maybe Natural

-- | The name of the federated user. The name is used as an identifier for
--   the temporary security credentials (such as <tt>Bob</tt>). For
--   example, you can reference the federated user name in a resource-based
--   policy, such as in an Amazon S3 bucket policy.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
[$sel:name:GetFederationToken'] :: GetFederationToken -> Text

-- | Create a value of <a>GetFederationToken</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:GetFederationToken'</a>, <a>getFederationToken_tags</a> -
--   A list of session tags. Each session tag consists of a key name and an
--   associated value. For more information about session tags, see
--   <a>Passing Session Tags in STS</a> in the <i>IAM User Guide</i>.
--   
--   This parameter is optional. You can pass up to 50 session tags. The
--   plaintext session tag keys can’t exceed 128 characters and the values
--   can’t exceed 256 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   You can pass a session tag with the same key as a tag that is already
--   attached to the user you are federating. When you do, session tags
--   override a user tag with the same key.
--   
--   Tag key–value pairs are not case sensitive, but case is preserved.
--   This means that you cannot have separate <tt>Department</tt> and
--   <tt>department</tt> tag keys. Assume that the role has the
--   <tt>Department</tt>=<tt>Marketing</tt> tag and you pass the
--   <tt>department</tt>=<tt>engineering</tt> session tag.
--   <tt>Department</tt> and <tt>department</tt> are not saved as separate
--   tags, and the session tag passed in the request takes precedence over
--   the role tag.
--   
--   <a>$sel:policyArns:GetFederationToken'</a>,
--   <a>getFederationToken_policyArns</a> - The Amazon Resource Names
--   (ARNs) of the IAM managed policies that you want to use as a managed
--   session policy. The policies must exist in the same account as the IAM
--   user that is requesting federated access.
--   
--   You must pass an inline or managed <a>session policy</a> to this
--   operation. You can pass a single JSON policy document to use as an
--   inline session policy. You can also specify up to 10 managed policies
--   to use as managed session policies. The plaintext that you use for
--   both inline and managed session policies can't exceed 2,048
--   characters. You can provide up to 10 managed policy ARNs. For more
--   information about ARNs, see <a>Amazon Resource Names (ARNs) and Amazon
--   Web Services Service Namespaces</a> in the Amazon Web Services General
--   Reference.
--   
--   This parameter is optional. However, if you do not pass any session
--   policies, then the resulting federated user session has no
--   permissions.
--   
--   When you pass session policies, the session permissions are the
--   intersection of the IAM user policies and the session policies that
--   you pass. This gives you a way to further restrict the permissions for
--   a federated user. You cannot use session policies to grant more
--   permissions than those that are defined in the permissions policy of
--   the IAM user. For more information, see <a>Session Policies</a> in the
--   <i>IAM User Guide</i>.
--   
--   The resulting credentials can be used to access a resource that has a
--   resource-based policy. If that policy specifically references the
--   federated user session in the <tt>Principal</tt> element of the
--   policy, the session has the permissions allowed by the policy. These
--   permissions are granted in addition to the permissions that are
--   granted by the session policies.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   <a>$sel:policy:GetFederationToken'</a>,
--   <a>getFederationToken_policy</a> - An IAM policy in JSON format that
--   you want to use as an inline session policy.
--   
--   You must pass an inline or managed <a>session policy</a> to this
--   operation. You can pass a single JSON policy document to use as an
--   inline session policy. You can also specify up to 10 managed policies
--   to use as managed session policies.
--   
--   This parameter is optional. However, if you do not pass any session
--   policies, then the resulting federated user session has no
--   permissions.
--   
--   When you pass session policies, the session permissions are the
--   intersection of the IAM user policies and the session policies that
--   you pass. This gives you a way to further restrict the permissions for
--   a federated user. You cannot use session policies to grant more
--   permissions than those that are defined in the permissions policy of
--   the IAM user. For more information, see <a>Session Policies</a> in the
--   <i>IAM User Guide</i>.
--   
--   The resulting credentials can be used to access a resource that has a
--   resource-based policy. If that policy specifically references the
--   federated user session in the <tt>Principal</tt> element of the
--   policy, the session has the permissions allowed by the policy. These
--   permissions are granted in addition to the permissions that are
--   granted by the session policies.
--   
--   The plaintext that you use for both inline and managed session
--   policies can't exceed 2,048 characters. The JSON policy characters can
--   be any ASCII character from the space character to the end of the
--   valid character list (\u0020 through \u00FF). It can also include the
--   tab (\u0009), linefeed (\u000A), and carriage return (\u000D)
--   characters.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   <a>$sel:durationSeconds:GetFederationToken'</a>,
--   <a>getFederationToken_durationSeconds</a> - The duration, in seconds,
--   that the session should last. Acceptable durations for federation
--   sessions range from 900 seconds (15 minutes) to 129,600 seconds (36
--   hours), with 43,200 seconds (12 hours) as the default. Sessions
--   obtained using Amazon Web Services account root user credentials are
--   restricted to a maximum of 3,600 seconds (one hour). If the specified
--   duration is longer than one hour, the session obtained by using root
--   user credentials defaults to one hour.
--   
--   <a>$sel:name:GetFederationToken'</a>, <a>getFederationToken_name</a> -
--   The name of the federated user. The name is used as an identifier for
--   the temporary security credentials (such as <tt>Bob</tt>). For
--   example, you can reference the federated user name in a resource-based
--   policy, such as in an Amazon S3 bucket policy.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
newGetFederationToken :: Text -> GetFederationToken

-- | A list of session tags. Each session tag consists of a key name and an
--   associated value. For more information about session tags, see
--   <a>Passing Session Tags in STS</a> in the <i>IAM User Guide</i>.
--   
--   This parameter is optional. You can pass up to 50 session tags. The
--   plaintext session tag keys can’t exceed 128 characters and the values
--   can’t exceed 256 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   You can pass a session tag with the same key as a tag that is already
--   attached to the user you are federating. When you do, session tags
--   override a user tag with the same key.
--   
--   Tag key–value pairs are not case sensitive, but case is preserved.
--   This means that you cannot have separate <tt>Department</tt> and
--   <tt>department</tt> tag keys. Assume that the role has the
--   <tt>Department</tt>=<tt>Marketing</tt> tag and you pass the
--   <tt>department</tt>=<tt>engineering</tt> session tag.
--   <tt>Department</tt> and <tt>department</tt> are not saved as separate
--   tags, and the session tag passed in the request takes precedence over
--   the role tag.
getFederationToken_tags :: Lens' GetFederationToken (Maybe [Tag])

-- | The Amazon Resource Names (ARNs) of the IAM managed policies that you
--   want to use as a managed session policy. The policies must exist in
--   the same account as the IAM user that is requesting federated access.
--   
--   You must pass an inline or managed <a>session policy</a> to this
--   operation. You can pass a single JSON policy document to use as an
--   inline session policy. You can also specify up to 10 managed policies
--   to use as managed session policies. The plaintext that you use for
--   both inline and managed session policies can't exceed 2,048
--   characters. You can provide up to 10 managed policy ARNs. For more
--   information about ARNs, see <a>Amazon Resource Names (ARNs) and Amazon
--   Web Services Service Namespaces</a> in the Amazon Web Services General
--   Reference.
--   
--   This parameter is optional. However, if you do not pass any session
--   policies, then the resulting federated user session has no
--   permissions.
--   
--   When you pass session policies, the session permissions are the
--   intersection of the IAM user policies and the session policies that
--   you pass. This gives you a way to further restrict the permissions for
--   a federated user. You cannot use session policies to grant more
--   permissions than those that are defined in the permissions policy of
--   the IAM user. For more information, see <a>Session Policies</a> in the
--   <i>IAM User Guide</i>.
--   
--   The resulting credentials can be used to access a resource that has a
--   resource-based policy. If that policy specifically references the
--   federated user session in the <tt>Principal</tt> element of the
--   policy, the session has the permissions allowed by the policy. These
--   permissions are granted in addition to the permissions that are
--   granted by the session policies.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
getFederationToken_policyArns :: Lens' GetFederationToken (Maybe [PolicyDescriptorType])

-- | An IAM policy in JSON format that you want to use as an inline session
--   policy.
--   
--   You must pass an inline or managed <a>session policy</a> to this
--   operation. You can pass a single JSON policy document to use as an
--   inline session policy. You can also specify up to 10 managed policies
--   to use as managed session policies.
--   
--   This parameter is optional. However, if you do not pass any session
--   policies, then the resulting federated user session has no
--   permissions.
--   
--   When you pass session policies, the session permissions are the
--   intersection of the IAM user policies and the session policies that
--   you pass. This gives you a way to further restrict the permissions for
--   a federated user. You cannot use session policies to grant more
--   permissions than those that are defined in the permissions policy of
--   the IAM user. For more information, see <a>Session Policies</a> in the
--   <i>IAM User Guide</i>.
--   
--   The resulting credentials can be used to access a resource that has a
--   resource-based policy. If that policy specifically references the
--   federated user session in the <tt>Principal</tt> element of the
--   policy, the session has the permissions allowed by the policy. These
--   permissions are granted in addition to the permissions that are
--   granted by the session policies.
--   
--   The plaintext that you use for both inline and managed session
--   policies can't exceed 2,048 characters. The JSON policy characters can
--   be any ASCII character from the space character to the end of the
--   valid character list (\u0020 through \u00FF). It can also include the
--   tab (\u0009), linefeed (\u000A), and carriage return (\u000D)
--   characters.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
getFederationToken_policy :: Lens' GetFederationToken (Maybe Text)

-- | The duration, in seconds, that the session should last. Acceptable
--   durations for federation sessions range from 900 seconds (15 minutes)
--   to 129,600 seconds (36 hours), with 43,200 seconds (12 hours) as the
--   default. Sessions obtained using Amazon Web Services account root user
--   credentials are restricted to a maximum of 3,600 seconds (one hour).
--   If the specified duration is longer than one hour, the session
--   obtained by using root user credentials defaults to one hour.
getFederationToken_durationSeconds :: Lens' GetFederationToken (Maybe Natural)

-- | The name of the federated user. The name is used as an identifier for
--   the temporary security credentials (such as <tt>Bob</tt>). For
--   example, you can reference the federated user name in a resource-based
--   policy, such as in an Amazon S3 bucket policy.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
getFederationToken_name :: Lens' GetFederationToken Text

-- | Contains the response to a successful GetFederationToken request,
--   including temporary Amazon Web Services credentials that can be used
--   to make Amazon Web Services requests.
--   
--   <i>See:</i> <a>newGetFederationTokenResponse</a> smart constructor.
data GetFederationTokenResponse
GetFederationTokenResponse' :: Maybe AuthEnv -> Maybe FederatedUser -> Maybe Natural -> Int -> GetFederationTokenResponse

-- | The temporary security credentials, which include an access key ID, a
--   secret access key, and a security (or session) token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
[$sel:credentials:GetFederationTokenResponse'] :: GetFederationTokenResponse -> Maybe AuthEnv

-- | Identifiers for the federated user associated with the credentials
--   (such as <tt>arn:aws:sts::123456789012:federated-user/Bob</tt> or
--   <tt>123456789012:Bob</tt>). You can use the federated user's ARN in
--   your resource-based policies, such as an Amazon S3 bucket policy.
[$sel:federatedUser:GetFederationTokenResponse'] :: GetFederationTokenResponse -> Maybe FederatedUser

-- | A percentage value that indicates the packed size of the session
--   policies and session tags combined passed in the request. The request
--   fails if the packed size is greater than 100 percent, which means the
--   policies and tags exceeded the allowed space.
[$sel:packedPolicySize:GetFederationTokenResponse'] :: GetFederationTokenResponse -> Maybe Natural

-- | The response's http status code.
[$sel:httpStatus:GetFederationTokenResponse'] :: GetFederationTokenResponse -> Int

-- | Create a value of <a>GetFederationTokenResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:credentials:GetFederationTokenResponse'</a>,
--   <a>getFederationTokenResponse_credentials</a> - The temporary security
--   credentials, which include an access key ID, a secret access key, and
--   a security (or session) token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
--   
--   <a>$sel:federatedUser:GetFederationTokenResponse'</a>,
--   <a>getFederationTokenResponse_federatedUser</a> - Identifiers for the
--   federated user associated with the credentials (such as
--   <tt>arn:aws:sts::123456789012:federated-user/Bob</tt> or
--   <tt>123456789012:Bob</tt>). You can use the federated user's ARN in
--   your resource-based policies, such as an Amazon S3 bucket policy.
--   
--   <a>$sel:packedPolicySize:GetFederationTokenResponse'</a>,
--   <a>getFederationTokenResponse_packedPolicySize</a> - A percentage
--   value that indicates the packed size of the session policies and
--   session tags combined passed in the request. The request fails if the
--   packed size is greater than 100 percent, which means the policies and
--   tags exceeded the allowed space.
--   
--   <a>$sel:httpStatus:GetFederationTokenResponse'</a>,
--   <a>getFederationTokenResponse_httpStatus</a> - The response's http
--   status code.
newGetFederationTokenResponse :: Int -> GetFederationTokenResponse

-- | The temporary security credentials, which include an access key ID, a
--   secret access key, and a security (or session) token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
getFederationTokenResponse_credentials :: Lens' GetFederationTokenResponse (Maybe AuthEnv)

-- | Identifiers for the federated user associated with the credentials
--   (such as <tt>arn:aws:sts::123456789012:federated-user/Bob</tt> or
--   <tt>123456789012:Bob</tt>). You can use the federated user's ARN in
--   your resource-based policies, such as an Amazon S3 bucket policy.
getFederationTokenResponse_federatedUser :: Lens' GetFederationTokenResponse (Maybe FederatedUser)

-- | A percentage value that indicates the packed size of the session
--   policies and session tags combined passed in the request. The request
--   fails if the packed size is greater than 100 percent, which means the
--   policies and tags exceeded the allowed space.
getFederationTokenResponse_packedPolicySize :: Lens' GetFederationTokenResponse (Maybe Natural)

-- | The response's http status code.
getFederationTokenResponse_httpStatus :: Lens' GetFederationTokenResponse Int
instance GHC.Generics.Generic Network.AWS.STS.GetFederationToken.GetFederationToken
instance GHC.Show.Show Network.AWS.STS.GetFederationToken.GetFederationToken
instance GHC.Read.Read Network.AWS.STS.GetFederationToken.GetFederationToken
instance GHC.Classes.Eq Network.AWS.STS.GetFederationToken.GetFederationToken
instance GHC.Generics.Generic Network.AWS.STS.GetFederationToken.GetFederationTokenResponse
instance GHC.Show.Show Network.AWS.STS.GetFederationToken.GetFederationTokenResponse
instance GHC.Classes.Eq Network.AWS.STS.GetFederationToken.GetFederationTokenResponse
instance Network.AWS.Types.AWSRequest Network.AWS.STS.GetFederationToken.GetFederationToken
instance Control.DeepSeq.NFData Network.AWS.STS.GetFederationToken.GetFederationTokenResponse
instance Data.Hashable.Class.Hashable Network.AWS.STS.GetFederationToken.GetFederationToken
instance Control.DeepSeq.NFData Network.AWS.STS.GetFederationToken.GetFederationToken
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.STS.GetFederationToken.GetFederationToken
instance Network.AWS.Data.Path.ToPath Network.AWS.STS.GetFederationToken.GetFederationToken
instance Network.AWS.Data.Query.ToQuery Network.AWS.STS.GetFederationToken.GetFederationToken


-- | Returns details about the IAM user or role whose credentials are used
--   to call the operation.
--   
--   No permissions are required to perform this operation. If an
--   administrator adds a policy to your IAM user or role that explicitly
--   denies access to the <tt>sts:GetCallerIdentity</tt> action, you can
--   still perform this operation. Permissions are not required because the
--   same information is returned when an IAM user or role is denied
--   access. To view an example response, see <a>I Am Not Authorized to
--   Perform: iam:DeleteVirtualMFADevice</a> in the <i>IAM User Guide</i>.
module Network.AWS.STS.GetCallerIdentity

-- | <i>See:</i> <a>newGetCallerIdentity</a> smart constructor.
data GetCallerIdentity
GetCallerIdentity' :: GetCallerIdentity

-- | Create a value of <a>GetCallerIdentity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetCallerIdentity :: GetCallerIdentity

-- | Contains the response to a successful GetCallerIdentity request,
--   including information about the entity making the request.
--   
--   <i>See:</i> <a>newGetCallerIdentityResponse</a> smart constructor.
data GetCallerIdentityResponse
GetCallerIdentityResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetCallerIdentityResponse

-- | The Amazon Web Services ARN associated with the calling entity.
[$sel:arn:GetCallerIdentityResponse'] :: GetCallerIdentityResponse -> Maybe Text

-- | The unique identifier of the calling entity. The exact value depends
--   on the type of entity that is making the call. The values returned are
--   those listed in the <b>aws:userid</b> column in the <a>Principal
--   table</a> found on the <b>Policy Variables</b> reference page in the
--   /IAM User Guide/.
[$sel:userId:GetCallerIdentityResponse'] :: GetCallerIdentityResponse -> Maybe Text

-- | The Amazon Web Services account ID number of the account that owns or
--   contains the calling entity.
[$sel:account:GetCallerIdentityResponse'] :: GetCallerIdentityResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetCallerIdentityResponse'] :: GetCallerIdentityResponse -> Int

-- | Create a value of <a>GetCallerIdentityResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetCallerIdentityResponse'</a>,
--   <a>getCallerIdentityResponse_arn</a> - The Amazon Web Services ARN
--   associated with the calling entity.
--   
--   <a>$sel:userId:GetCallerIdentityResponse'</a>,
--   <a>getCallerIdentityResponse_userId</a> - The unique identifier of the
--   calling entity. The exact value depends on the type of entity that is
--   making the call. The values returned are those listed in the
--   <b>aws:userid</b> column in the <a>Principal table</a> found on the
--   <b>Policy Variables</b> reference page in the /IAM User Guide/.
--   
--   <a>$sel:account:GetCallerIdentityResponse'</a>,
--   <a>getCallerIdentityResponse_account</a> - The Amazon Web Services
--   account ID number of the account that owns or contains the calling
--   entity.
--   
--   <a>$sel:httpStatus:GetCallerIdentityResponse'</a>,
--   <a>getCallerIdentityResponse_httpStatus</a> - The response's http
--   status code.
newGetCallerIdentityResponse :: Int -> GetCallerIdentityResponse

-- | The Amazon Web Services ARN associated with the calling entity.
getCallerIdentityResponse_arn :: Lens' GetCallerIdentityResponse (Maybe Text)

-- | The unique identifier of the calling entity. The exact value depends
--   on the type of entity that is making the call. The values returned are
--   those listed in the <b>aws:userid</b> column in the <a>Principal
--   table</a> found on the <b>Policy Variables</b> reference page in the
--   /IAM User Guide/.
getCallerIdentityResponse_userId :: Lens' GetCallerIdentityResponse (Maybe Text)

-- | The Amazon Web Services account ID number of the account that owns or
--   contains the calling entity.
getCallerIdentityResponse_account :: Lens' GetCallerIdentityResponse (Maybe Text)

-- | The response's http status code.
getCallerIdentityResponse_httpStatus :: Lens' GetCallerIdentityResponse Int
instance GHC.Generics.Generic Network.AWS.STS.GetCallerIdentity.GetCallerIdentity
instance GHC.Show.Show Network.AWS.STS.GetCallerIdentity.GetCallerIdentity
instance GHC.Read.Read Network.AWS.STS.GetCallerIdentity.GetCallerIdentity
instance GHC.Classes.Eq Network.AWS.STS.GetCallerIdentity.GetCallerIdentity
instance GHC.Generics.Generic Network.AWS.STS.GetCallerIdentity.GetCallerIdentityResponse
instance GHC.Show.Show Network.AWS.STS.GetCallerIdentity.GetCallerIdentityResponse
instance GHC.Read.Read Network.AWS.STS.GetCallerIdentity.GetCallerIdentityResponse
instance GHC.Classes.Eq Network.AWS.STS.GetCallerIdentity.GetCallerIdentityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.STS.GetCallerIdentity.GetCallerIdentity
instance Control.DeepSeq.NFData Network.AWS.STS.GetCallerIdentity.GetCallerIdentityResponse
instance Data.Hashable.Class.Hashable Network.AWS.STS.GetCallerIdentity.GetCallerIdentity
instance Control.DeepSeq.NFData Network.AWS.STS.GetCallerIdentity.GetCallerIdentity
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.STS.GetCallerIdentity.GetCallerIdentity
instance Network.AWS.Data.Path.ToPath Network.AWS.STS.GetCallerIdentity.GetCallerIdentity
instance Network.AWS.Data.Query.ToQuery Network.AWS.STS.GetCallerIdentity.GetCallerIdentity


-- | Returns the account identifier for the specified access key ID.
--   
--   Access keys consist of two parts: an access key ID (for example,
--   <tt>AKIAIOSFODNN7EXAMPLE</tt>) and a secret access key (for example,
--   <tt>wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY</tt>). For more
--   information about access keys, see <a>Managing Access Keys for IAM
--   Users</a> in the <i>IAM User Guide</i>.
--   
--   When you pass an access key ID to this operation, it returns the ID of
--   the Amazon Web Services account to which the keys belong. Access key
--   IDs beginning with <tt>AKIA</tt> are long-term credentials for an IAM
--   user or the Amazon Web Services account root user. Access key IDs
--   beginning with <tt>ASIA</tt> are temporary credentials that are
--   created using STS operations. If the account in the response belongs
--   to you, you can sign in as the root user and review your root user
--   access keys. Then, you can pull a <a>credentials report</a> to learn
--   which IAM user owns the keys. To learn who requested the temporary
--   credentials for an <tt>ASIA</tt> access key, view the STS events in
--   your <a>CloudTrail logs</a> in the <i>IAM User Guide</i>.
--   
--   This operation does not indicate the state of the access key. The key
--   might be active, inactive, or deleted. Active keys might not have
--   permissions to perform an operation. Providing a deleted access key
--   might return an error that the key doesn't exist.
module Network.AWS.STS.GetAccessKeyInfo

-- | <i>See:</i> <a>newGetAccessKeyInfo</a> smart constructor.
data GetAccessKeyInfo
GetAccessKeyInfo' :: AccessKey -> GetAccessKeyInfo

-- | The identifier of an access key.
--   
--   This parameter allows (through its regex pattern) a string of
--   characters that can consist of any upper- or lowercase letter or
--   digit.
[$sel:accessKeyId:GetAccessKeyInfo'] :: GetAccessKeyInfo -> AccessKey

-- | Create a value of <a>GetAccessKeyInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessKeyId:GetAccessKeyInfo'</a>,
--   <a>getAccessKeyInfo_accessKeyId</a> - The identifier of an access key.
--   
--   This parameter allows (through its regex pattern) a string of
--   characters that can consist of any upper- or lowercase letter or
--   digit.
newGetAccessKeyInfo :: AccessKey -> GetAccessKeyInfo

-- | The identifier of an access key.
--   
--   This parameter allows (through its regex pattern) a string of
--   characters that can consist of any upper- or lowercase letter or
--   digit.
getAccessKeyInfo_accessKeyId :: Lens' GetAccessKeyInfo AccessKey

-- | <i>See:</i> <a>newGetAccessKeyInfoResponse</a> smart constructor.
data GetAccessKeyInfoResponse
GetAccessKeyInfoResponse' :: Maybe Text -> Int -> GetAccessKeyInfoResponse

-- | The number used to identify the Amazon Web Services account.
[$sel:account:GetAccessKeyInfoResponse'] :: GetAccessKeyInfoResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetAccessKeyInfoResponse'] :: GetAccessKeyInfoResponse -> Int

-- | Create a value of <a>GetAccessKeyInfoResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:account:GetAccessKeyInfoResponse'</a>,
--   <a>getAccessKeyInfoResponse_account</a> - The number used to identify
--   the Amazon Web Services account.
--   
--   <a>$sel:httpStatus:GetAccessKeyInfoResponse'</a>,
--   <a>getAccessKeyInfoResponse_httpStatus</a> - The response's http
--   status code.
newGetAccessKeyInfoResponse :: Int -> GetAccessKeyInfoResponse

-- | The number used to identify the Amazon Web Services account.
getAccessKeyInfoResponse_account :: Lens' GetAccessKeyInfoResponse (Maybe Text)

-- | The response's http status code.
getAccessKeyInfoResponse_httpStatus :: Lens' GetAccessKeyInfoResponse Int
instance GHC.Generics.Generic Network.AWS.STS.GetAccessKeyInfo.GetAccessKeyInfo
instance GHC.Show.Show Network.AWS.STS.GetAccessKeyInfo.GetAccessKeyInfo
instance GHC.Read.Read Network.AWS.STS.GetAccessKeyInfo.GetAccessKeyInfo
instance GHC.Classes.Eq Network.AWS.STS.GetAccessKeyInfo.GetAccessKeyInfo
instance GHC.Generics.Generic Network.AWS.STS.GetAccessKeyInfo.GetAccessKeyInfoResponse
instance GHC.Show.Show Network.AWS.STS.GetAccessKeyInfo.GetAccessKeyInfoResponse
instance GHC.Read.Read Network.AWS.STS.GetAccessKeyInfo.GetAccessKeyInfoResponse
instance GHC.Classes.Eq Network.AWS.STS.GetAccessKeyInfo.GetAccessKeyInfoResponse
instance Network.AWS.Types.AWSRequest Network.AWS.STS.GetAccessKeyInfo.GetAccessKeyInfo
instance Control.DeepSeq.NFData Network.AWS.STS.GetAccessKeyInfo.GetAccessKeyInfoResponse
instance Data.Hashable.Class.Hashable Network.AWS.STS.GetAccessKeyInfo.GetAccessKeyInfo
instance Control.DeepSeq.NFData Network.AWS.STS.GetAccessKeyInfo.GetAccessKeyInfo
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.STS.GetAccessKeyInfo.GetAccessKeyInfo
instance Network.AWS.Data.Path.ToPath Network.AWS.STS.GetAccessKeyInfo.GetAccessKeyInfo
instance Network.AWS.Data.Query.ToQuery Network.AWS.STS.GetAccessKeyInfo.GetAccessKeyInfo


-- | Decodes additional information about the authorization status of a
--   request from an encoded message returned in response to an Amazon Web
--   Services request.
--   
--   For example, if a user is not authorized to perform an operation that
--   he or she has requested, the request returns a
--   <tt>Client.UnauthorizedOperation</tt> response (an HTTP 403 response).
--   Some Amazon Web Services operations additionally return an encoded
--   message that can provide details about this authorization failure.
--   
--   Only certain Amazon Web Services operations return an encoded
--   authorization message. The documentation for an individual operation
--   indicates whether that operation returns an encoded message in
--   addition to returning an HTTP code.
--   
--   The message is encoded because the details of the authorization status
--   can constitute privileged information that the user who requested the
--   operation should not see. To decode an authorization status message, a
--   user must be granted permissions via an IAM policy to request the
--   <tt>DecodeAuthorizationMessage</tt>
--   (<tt>sts:DecodeAuthorizationMessage</tt>) action.
--   
--   The decoded message includes the following type of information:
--   
--   <ul>
--   <li>Whether the request was denied due to an explicit deny or due to
--   the absence of an explicit allow. For more information, see
--   <a>Determining Whether a Request is Allowed or Denied</a> in the
--   <i>IAM User Guide</i>.</li>
--   <li>The principal who made the request.</li>
--   <li>The requested action.</li>
--   <li>The requested resource.</li>
--   <li>The values of condition keys in the context of the user's
--   request.</li>
--   </ul>
module Network.AWS.STS.DecodeAuthorizationMessage

-- | <i>See:</i> <a>newDecodeAuthorizationMessage</a> smart constructor.
data DecodeAuthorizationMessage
DecodeAuthorizationMessage' :: Text -> DecodeAuthorizationMessage

-- | The encoded message that was returned with the response.
[$sel:encodedMessage:DecodeAuthorizationMessage'] :: DecodeAuthorizationMessage -> Text

-- | Create a value of <a>DecodeAuthorizationMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encodedMessage:DecodeAuthorizationMessage'</a>,
--   <a>decodeAuthorizationMessage_encodedMessage</a> - The encoded message
--   that was returned with the response.
newDecodeAuthorizationMessage :: Text -> DecodeAuthorizationMessage

-- | The encoded message that was returned with the response.
decodeAuthorizationMessage_encodedMessage :: Lens' DecodeAuthorizationMessage Text

-- | A document that contains additional information about the
--   authorization status of a request from an encoded message that is
--   returned in response to an Amazon Web Services request.
--   
--   <i>See:</i> <a>newDecodeAuthorizationMessageResponse</a> smart
--   constructor.
data DecodeAuthorizationMessageResponse
DecodeAuthorizationMessageResponse' :: Maybe Text -> Int -> DecodeAuthorizationMessageResponse

-- | An XML document that contains the decoded message.
[$sel:decodedMessage:DecodeAuthorizationMessageResponse'] :: DecodeAuthorizationMessageResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DecodeAuthorizationMessageResponse'] :: DecodeAuthorizationMessageResponse -> Int

-- | Create a value of <a>DecodeAuthorizationMessageResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:decodedMessage:DecodeAuthorizationMessageResponse'</a>,
--   <a>decodeAuthorizationMessageResponse_decodedMessage</a> - An XML
--   document that contains the decoded message.
--   
--   <a>$sel:httpStatus:DecodeAuthorizationMessageResponse'</a>,
--   <a>decodeAuthorizationMessageResponse_httpStatus</a> - The response's
--   http status code.
newDecodeAuthorizationMessageResponse :: Int -> DecodeAuthorizationMessageResponse

-- | An XML document that contains the decoded message.
decodeAuthorizationMessageResponse_decodedMessage :: Lens' DecodeAuthorizationMessageResponse (Maybe Text)

-- | The response's http status code.
decodeAuthorizationMessageResponse_httpStatus :: Lens' DecodeAuthorizationMessageResponse Int
instance GHC.Generics.Generic Network.AWS.STS.DecodeAuthorizationMessage.DecodeAuthorizationMessage
instance GHC.Show.Show Network.AWS.STS.DecodeAuthorizationMessage.DecodeAuthorizationMessage
instance GHC.Read.Read Network.AWS.STS.DecodeAuthorizationMessage.DecodeAuthorizationMessage
instance GHC.Classes.Eq Network.AWS.STS.DecodeAuthorizationMessage.DecodeAuthorizationMessage
instance GHC.Generics.Generic Network.AWS.STS.DecodeAuthorizationMessage.DecodeAuthorizationMessageResponse
instance GHC.Show.Show Network.AWS.STS.DecodeAuthorizationMessage.DecodeAuthorizationMessageResponse
instance GHC.Read.Read Network.AWS.STS.DecodeAuthorizationMessage.DecodeAuthorizationMessageResponse
instance GHC.Classes.Eq Network.AWS.STS.DecodeAuthorizationMessage.DecodeAuthorizationMessageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.STS.DecodeAuthorizationMessage.DecodeAuthorizationMessage
instance Control.DeepSeq.NFData Network.AWS.STS.DecodeAuthorizationMessage.DecodeAuthorizationMessageResponse
instance Data.Hashable.Class.Hashable Network.AWS.STS.DecodeAuthorizationMessage.DecodeAuthorizationMessage
instance Control.DeepSeq.NFData Network.AWS.STS.DecodeAuthorizationMessage.DecodeAuthorizationMessage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.STS.DecodeAuthorizationMessage.DecodeAuthorizationMessage
instance Network.AWS.Data.Path.ToPath Network.AWS.STS.DecodeAuthorizationMessage.DecodeAuthorizationMessage
instance Network.AWS.Data.Query.ToQuery Network.AWS.STS.DecodeAuthorizationMessage.DecodeAuthorizationMessage


-- | Returns a set of temporary security credentials for users who have
--   been authenticated in a mobile or web application with a web identity
--   provider. Example providers include Amazon Cognito, Login with Amazon,
--   Facebook, Google, or any OpenID Connect-compatible identity provider.
--   
--   For mobile applications, we recommend that you use Amazon Cognito. You
--   can use Amazon Cognito with the <a>Amazon Web Services SDK for iOS
--   Developer Guide</a> and the <a>Amazon Web Services SDK for Android
--   Developer Guide</a> to uniquely identify a user. You can also supply
--   the user with a consistent identity throughout the lifetime of an
--   application.
--   
--   To learn more about Amazon Cognito, see <a>Amazon Cognito Overview</a>
--   in <i>Amazon Web Services SDK for Android Developer Guide</i> and
--   <a>Amazon Cognito Overview</a> in the <i>Amazon Web Services SDK for
--   iOS Developer Guide</i>.
--   
--   Calling <tt>AssumeRoleWithWebIdentity</tt> does not require the use of
--   Amazon Web Services security credentials. Therefore, you can
--   distribute an application (for example, on mobile devices) that
--   requests temporary security credentials without including long-term
--   Amazon Web Services credentials in the application. You also don't
--   need to deploy server-based proxy services that use long-term Amazon
--   Web Services credentials. Instead, the identity of the caller is
--   validated by using a token from the web identity provider. For a
--   comparison of <tt>AssumeRoleWithWebIdentity</tt> with the other API
--   operations that produce temporary credentials, see <a>Requesting
--   Temporary Security Credentials</a> and <a>Comparing the STS API
--   operations</a> in the <i>IAM User Guide</i>.
--   
--   The temporary security credentials returned by this API consist of an
--   access key ID, a secret access key, and a security token. Applications
--   can use these temporary security credentials to sign calls to Amazon
--   Web Services service API operations.
--   
--   <b>Session Duration</b>
--   
--   By default, the temporary security credentials created by
--   <tt>AssumeRoleWithWebIdentity</tt> last for one hour. However, you can
--   use the optional <tt>DurationSeconds</tt> parameter to specify the
--   duration of your session. You can provide a value from 900 seconds (15
--   minutes) up to the maximum session duration setting for the role. This
--   setting can have a value from 1 hour to 12 hours. To learn how to view
--   the maximum value for your role, see <a>View the Maximum Session
--   Duration Setting for a Role</a> in the <i>IAM User Guide</i>. The
--   maximum session duration limit applies when you use the
--   <tt>AssumeRole*</tt> API operations or the <tt>assume-role*</tt> CLI
--   commands. However the limit does not apply when you use those
--   operations to create a console URL. For more information, see <a>Using
--   IAM Roles</a> in the <i>IAM User Guide</i>.
--   
--   <b>Permissions</b>
--   
--   The temporary security credentials created by
--   <tt>AssumeRoleWithWebIdentity</tt> can be used to make API calls to
--   any Amazon Web Services service with the following exception: you
--   cannot call the STS <tt>GetFederationToken</tt> or
--   <tt>GetSessionToken</tt> API operations.
--   
--   (Optional) You can pass inline or managed <a>session policies</a> to
--   this operation. You can pass a single JSON policy document to use as
--   an inline session policy. You can also specify up to 10 managed
--   policies to use as managed session policies. The plaintext that you
--   use for both inline and managed session policies can't exceed 2,048
--   characters. Passing policies to this operation returns new temporary
--   credentials. The resulting session's permissions are the intersection
--   of the role's identity-based policy and the session policies. You can
--   use the role's temporary credentials in subsequent Amazon Web Services
--   API calls to access resources in the account that owns the role. You
--   cannot use session policies to grant more permissions than those
--   allowed by the identity-based policy of the role that is being
--   assumed. For more information, see <a>Session Policies</a> in the
--   <i>IAM User Guide</i>.
--   
--   <b>Tags</b>
--   
--   (Optional) You can configure your IdP to pass attributes into your web
--   identity token as session tags. Each session tag consists of a key
--   name and an associated value. For more information about session tags,
--   see <a>Passing Session Tags in STS</a> in the <i>IAM User Guide</i>.
--   
--   You can pass up to 50 session tags. The plaintext session tag keys
--   can’t exceed 128 characters and the values can’t exceed 256
--   characters. For these and additional limits, see <a>IAM and STS
--   Character Limits</a> in the <i>IAM User Guide</i>.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   You can pass a session tag with the same key as a tag that is attached
--   to the role. When you do, the session tag overrides the role tag with
--   the same key.
--   
--   An administrator must grant you the permissions necessary to pass
--   session tags. The administrator can also create granular permissions
--   to allow you to pass only specific session tags. For more information,
--   see <a>Tutorial: Using Tags for Attribute-Based Access Control</a> in
--   the <i>IAM User Guide</i>.
--   
--   You can set the session tags as transitive. Transitive tags persist
--   during role chaining. For more information, see <a>Chaining Roles with
--   Session Tags</a> in the <i>IAM User Guide</i>.
--   
--   <b>Identities</b>
--   
--   Before your application can call <tt>AssumeRoleWithWebIdentity</tt>,
--   you must have an identity token from a supported identity provider and
--   create a role that the application can assume. The role that your
--   application assumes must trust the identity provider that is
--   associated with the identity token. In other words, the identity
--   provider must be specified in the role's trust policy.
--   
--   Calling <tt>AssumeRoleWithWebIdentity</tt> can result in an entry in
--   your CloudTrail logs. The entry includes the <a>Subject</a> of the
--   provided web identity token. We recommend that you avoid using any
--   personally identifiable information (PII) in this field. For example,
--   you could instead use a GUID or a pairwise identifier, as <a>suggested
--   in the OIDC specification</a>.
--   
--   For more information about how to use web identity federation and the
--   <tt>AssumeRoleWithWebIdentity</tt> API, see the following resources:
--   
--   <ul>
--   <li><a>Using Web Identity Federation API Operations for Mobile
--   Apps</a> and <a>Federation Through a Web-based Identity
--   Provider</a>.</li>
--   <li><a>Web Identity Federation Playground</a>. Walk through the
--   process of authenticating through Login with Amazon, Facebook, or
--   Google, getting temporary security credentials, and then using those
--   credentials to make a request to Amazon Web Services.</li>
--   <li><a>Amazon Web Services SDK for iOS Developer Guide</a> and
--   <a>Amazon Web Services SDK for Android Developer Guide</a>. These
--   toolkits contain sample apps that show how to invoke the identity
--   providers. The toolkits then show how to use the information from
--   these providers to get and use temporary security credentials.</li>
--   <li><a>Web Identity Federation with Mobile Applications</a>. This
--   article discusses web identity federation and shows an example of how
--   to use web identity federation to get access to content in Amazon
--   S3.</li>
--   </ul>
module Network.AWS.STS.AssumeRoleWithWebIdentity

-- | <i>See:</i> <a>newAssumeRoleWithWebIdentity</a> smart constructor.
data AssumeRoleWithWebIdentity
AssumeRoleWithWebIdentity' :: Maybe Text -> Maybe [PolicyDescriptorType] -> Maybe Text -> Maybe Natural -> Text -> Text -> Text -> AssumeRoleWithWebIdentity

-- | The fully qualified host component of the domain name of the identity
--   provider.
--   
--   Specify this value only for OAuth 2.0 access tokens. Currently
--   <tt>www.amazon.com</tt> and <tt>graph.facebook.com</tt> are the only
--   supported identity providers for OAuth 2.0 access tokens. Do not
--   include URL schemes and port numbers.
--   
--   Do not specify this value for OpenID Connect ID tokens.
[$sel:providerId:AssumeRoleWithWebIdentity'] :: AssumeRoleWithWebIdentity -> Maybe Text

-- | The Amazon Resource Names (ARNs) of the IAM managed policies that you
--   want to use as managed session policies. The policies must exist in
--   the same account as the role.
--   
--   This parameter is optional. You can provide up to 10 managed policy
--   ARNs. However, the plaintext that you use for both inline and managed
--   session policies can't exceed 2,048 characters. For more information
--   about ARNs, see <a>Amazon Resource Names (ARNs) and Amazon Web
--   Services Service Namespaces</a> in the Amazon Web Services General
--   Reference.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   Passing policies to this operation returns new temporary credentials.
--   The resulting session's permissions are the intersection of the role's
--   identity-based policy and the session policies. You can use the role's
--   temporary credentials in subsequent Amazon Web Services API calls to
--   access resources in the account that owns the role. You cannot use
--   session policies to grant more permissions than those allowed by the
--   identity-based policy of the role that is being assumed. For more
--   information, see <a>Session Policies</a> in the <i>IAM User Guide</i>.
[$sel:policyArns:AssumeRoleWithWebIdentity'] :: AssumeRoleWithWebIdentity -> Maybe [PolicyDescriptorType]

-- | An IAM policy in JSON format that you want to use as an inline session
--   policy.
--   
--   This parameter is optional. Passing policies to this operation returns
--   new temporary credentials. The resulting session's permissions are the
--   intersection of the role's identity-based policy and the session
--   policies. You can use the role's temporary credentials in subsequent
--   Amazon Web Services API calls to access resources in the account that
--   owns the role. You cannot use session policies to grant more
--   permissions than those allowed by the identity-based policy of the
--   role that is being assumed. For more information, see <a>Session
--   Policies</a> in the <i>IAM User Guide</i>.
--   
--   The plaintext that you use for both inline and managed session
--   policies can't exceed 2,048 characters. The JSON policy characters can
--   be any ASCII character from the space character to the end of the
--   valid character list (\u0020 through \u00FF). It can also include the
--   tab (\u0009), linefeed (\u000A), and carriage return (\u000D)
--   characters.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
[$sel:policy:AssumeRoleWithWebIdentity'] :: AssumeRoleWithWebIdentity -> Maybe Text

-- | The duration, in seconds, of the role session. The value can range
--   from 900 seconds (15 minutes) up to the maximum session duration
--   setting for the role. This setting can have a value from 1 hour to 12
--   hours. If you specify a value higher than this setting, the operation
--   fails. For example, if you specify a session duration of 12 hours, but
--   your administrator set the maximum session duration to 6 hours, your
--   operation fails. To learn how to view the maximum value for your role,
--   see <a>View the Maximum Session Duration Setting for a Role</a> in the
--   <i>IAM User Guide</i>.
--   
--   By default, the value is set to <tt>3600</tt> seconds.
--   
--   The <tt>DurationSeconds</tt> parameter is separate from the duration
--   of a console session that you might request using the returned
--   credentials. The request to the federation endpoint for a console
--   sign-in token takes a <tt>SessionDuration</tt> parameter that
--   specifies the maximum length of the console session. For more
--   information, see <a>Creating a URL that Enables Federated Users to
--   Access the Management Console</a> in the <i>IAM User Guide</i>.
[$sel:durationSeconds:AssumeRoleWithWebIdentity'] :: AssumeRoleWithWebIdentity -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the role that the caller is
--   assuming.
[$sel:roleArn:AssumeRoleWithWebIdentity'] :: AssumeRoleWithWebIdentity -> Text

-- | An identifier for the assumed role session. Typically, you pass the
--   name or identifier that is associated with the user who is using your
--   application. That way, the temporary security credentials that your
--   application will use are associated with that user. This session name
--   is included as part of the ARN and assumed role ID in the
--   <tt>AssumedRoleUser</tt> response element.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
[$sel:roleSessionName:AssumeRoleWithWebIdentity'] :: AssumeRoleWithWebIdentity -> Text

-- | The OAuth 2.0 access token or OpenID Connect ID token that is provided
--   by the identity provider. Your application must get this token by
--   authenticating the user who is using your application with a web
--   identity provider before the application makes an
--   <tt>AssumeRoleWithWebIdentity</tt> call.
[$sel:webIdentityToken:AssumeRoleWithWebIdentity'] :: AssumeRoleWithWebIdentity -> Text

-- | Create a value of <a>AssumeRoleWithWebIdentity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:providerId:AssumeRoleWithWebIdentity'</a>,
--   <a>assumeRoleWithWebIdentity_providerId</a> - The fully qualified host
--   component of the domain name of the identity provider.
--   
--   Specify this value only for OAuth 2.0 access tokens. Currently
--   <tt>www.amazon.com</tt> and <tt>graph.facebook.com</tt> are the only
--   supported identity providers for OAuth 2.0 access tokens. Do not
--   include URL schemes and port numbers.
--   
--   Do not specify this value for OpenID Connect ID tokens.
--   
--   <a>$sel:policyArns:AssumeRoleWithWebIdentity'</a>,
--   <a>assumeRoleWithWebIdentity_policyArns</a> - The Amazon Resource
--   Names (ARNs) of the IAM managed policies that you want to use as
--   managed session policies. The policies must exist in the same account
--   as the role.
--   
--   This parameter is optional. You can provide up to 10 managed policy
--   ARNs. However, the plaintext that you use for both inline and managed
--   session policies can't exceed 2,048 characters. For more information
--   about ARNs, see <a>Amazon Resource Names (ARNs) and Amazon Web
--   Services Service Namespaces</a> in the Amazon Web Services General
--   Reference.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   Passing policies to this operation returns new temporary credentials.
--   The resulting session's permissions are the intersection of the role's
--   identity-based policy and the session policies. You can use the role's
--   temporary credentials in subsequent Amazon Web Services API calls to
--   access resources in the account that owns the role. You cannot use
--   session policies to grant more permissions than those allowed by the
--   identity-based policy of the role that is being assumed. For more
--   information, see <a>Session Policies</a> in the <i>IAM User Guide</i>.
--   
--   <a>$sel:policy:AssumeRoleWithWebIdentity'</a>,
--   <a>assumeRoleWithWebIdentity_policy</a> - An IAM policy in JSON format
--   that you want to use as an inline session policy.
--   
--   This parameter is optional. Passing policies to this operation returns
--   new temporary credentials. The resulting session's permissions are the
--   intersection of the role's identity-based policy and the session
--   policies. You can use the role's temporary credentials in subsequent
--   Amazon Web Services API calls to access resources in the account that
--   owns the role. You cannot use session policies to grant more
--   permissions than those allowed by the identity-based policy of the
--   role that is being assumed. For more information, see <a>Session
--   Policies</a> in the <i>IAM User Guide</i>.
--   
--   The plaintext that you use for both inline and managed session
--   policies can't exceed 2,048 characters. The JSON policy characters can
--   be any ASCII character from the space character to the end of the
--   valid character list (\u0020 through \u00FF). It can also include the
--   tab (\u0009), linefeed (\u000A), and carriage return (\u000D)
--   characters.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   <a>$sel:durationSeconds:AssumeRoleWithWebIdentity'</a>,
--   <a>assumeRoleWithWebIdentity_durationSeconds</a> - The duration, in
--   seconds, of the role session. The value can range from 900 seconds (15
--   minutes) up to the maximum session duration setting for the role. This
--   setting can have a value from 1 hour to 12 hours. If you specify a
--   value higher than this setting, the operation fails. For example, if
--   you specify a session duration of 12 hours, but your administrator set
--   the maximum session duration to 6 hours, your operation fails. To
--   learn how to view the maximum value for your role, see <a>View the
--   Maximum Session Duration Setting for a Role</a> in the <i>IAM User
--   Guide</i>.
--   
--   By default, the value is set to <tt>3600</tt> seconds.
--   
--   The <tt>DurationSeconds</tt> parameter is separate from the duration
--   of a console session that you might request using the returned
--   credentials. The request to the federation endpoint for a console
--   sign-in token takes a <tt>SessionDuration</tt> parameter that
--   specifies the maximum length of the console session. For more
--   information, see <a>Creating a URL that Enables Federated Users to
--   Access the Management Console</a> in the <i>IAM User Guide</i>.
--   
--   <a>$sel:roleArn:AssumeRoleWithWebIdentity'</a>,
--   <a>assumeRoleWithWebIdentity_roleArn</a> - The Amazon Resource Name
--   (ARN) of the role that the caller is assuming.
--   
--   <a>$sel:roleSessionName:AssumeRoleWithWebIdentity'</a>,
--   <a>assumeRoleWithWebIdentity_roleSessionName</a> - An identifier for
--   the assumed role session. Typically, you pass the name or identifier
--   that is associated with the user who is using your application. That
--   way, the temporary security credentials that your application will use
--   are associated with that user. This session name is included as part
--   of the ARN and assumed role ID in the <tt>AssumedRoleUser</tt>
--   response element.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
--   
--   <a>$sel:webIdentityToken:AssumeRoleWithWebIdentity'</a>,
--   <a>assumeRoleWithWebIdentity_webIdentityToken</a> - The OAuth 2.0
--   access token or OpenID Connect ID token that is provided by the
--   identity provider. Your application must get this token by
--   authenticating the user who is using your application with a web
--   identity provider before the application makes an
--   <tt>AssumeRoleWithWebIdentity</tt> call.
newAssumeRoleWithWebIdentity :: Text -> Text -> Text -> AssumeRoleWithWebIdentity

-- | The fully qualified host component of the domain name of the identity
--   provider.
--   
--   Specify this value only for OAuth 2.0 access tokens. Currently
--   <tt>www.amazon.com</tt> and <tt>graph.facebook.com</tt> are the only
--   supported identity providers for OAuth 2.0 access tokens. Do not
--   include URL schemes and port numbers.
--   
--   Do not specify this value for OpenID Connect ID tokens.
assumeRoleWithWebIdentity_providerId :: Lens' AssumeRoleWithWebIdentity (Maybe Text)

-- | The Amazon Resource Names (ARNs) of the IAM managed policies that you
--   want to use as managed session policies. The policies must exist in
--   the same account as the role.
--   
--   This parameter is optional. You can provide up to 10 managed policy
--   ARNs. However, the plaintext that you use for both inline and managed
--   session policies can't exceed 2,048 characters. For more information
--   about ARNs, see <a>Amazon Resource Names (ARNs) and Amazon Web
--   Services Service Namespaces</a> in the Amazon Web Services General
--   Reference.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   Passing policies to this operation returns new temporary credentials.
--   The resulting session's permissions are the intersection of the role's
--   identity-based policy and the session policies. You can use the role's
--   temporary credentials in subsequent Amazon Web Services API calls to
--   access resources in the account that owns the role. You cannot use
--   session policies to grant more permissions than those allowed by the
--   identity-based policy of the role that is being assumed. For more
--   information, see <a>Session Policies</a> in the <i>IAM User Guide</i>.
assumeRoleWithWebIdentity_policyArns :: Lens' AssumeRoleWithWebIdentity (Maybe [PolicyDescriptorType])

-- | An IAM policy in JSON format that you want to use as an inline session
--   policy.
--   
--   This parameter is optional. Passing policies to this operation returns
--   new temporary credentials. The resulting session's permissions are the
--   intersection of the role's identity-based policy and the session
--   policies. You can use the role's temporary credentials in subsequent
--   Amazon Web Services API calls to access resources in the account that
--   owns the role. You cannot use session policies to grant more
--   permissions than those allowed by the identity-based policy of the
--   role that is being assumed. For more information, see <a>Session
--   Policies</a> in the <i>IAM User Guide</i>.
--   
--   The plaintext that you use for both inline and managed session
--   policies can't exceed 2,048 characters. The JSON policy characters can
--   be any ASCII character from the space character to the end of the
--   valid character list (\u0020 through \u00FF). It can also include the
--   tab (\u0009), linefeed (\u000A), and carriage return (\u000D)
--   characters.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
assumeRoleWithWebIdentity_policy :: Lens' AssumeRoleWithWebIdentity (Maybe Text)

-- | The duration, in seconds, of the role session. The value can range
--   from 900 seconds (15 minutes) up to the maximum session duration
--   setting for the role. This setting can have a value from 1 hour to 12
--   hours. If you specify a value higher than this setting, the operation
--   fails. For example, if you specify a session duration of 12 hours, but
--   your administrator set the maximum session duration to 6 hours, your
--   operation fails. To learn how to view the maximum value for your role,
--   see <a>View the Maximum Session Duration Setting for a Role</a> in the
--   <i>IAM User Guide</i>.
--   
--   By default, the value is set to <tt>3600</tt> seconds.
--   
--   The <tt>DurationSeconds</tt> parameter is separate from the duration
--   of a console session that you might request using the returned
--   credentials. The request to the federation endpoint for a console
--   sign-in token takes a <tt>SessionDuration</tt> parameter that
--   specifies the maximum length of the console session. For more
--   information, see <a>Creating a URL that Enables Federated Users to
--   Access the Management Console</a> in the <i>IAM User Guide</i>.
assumeRoleWithWebIdentity_durationSeconds :: Lens' AssumeRoleWithWebIdentity (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the role that the caller is
--   assuming.
assumeRoleWithWebIdentity_roleArn :: Lens' AssumeRoleWithWebIdentity Text

-- | An identifier for the assumed role session. Typically, you pass the
--   name or identifier that is associated with the user who is using your
--   application. That way, the temporary security credentials that your
--   application will use are associated with that user. This session name
--   is included as part of the ARN and assumed role ID in the
--   <tt>AssumedRoleUser</tt> response element.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
assumeRoleWithWebIdentity_roleSessionName :: Lens' AssumeRoleWithWebIdentity Text

-- | The OAuth 2.0 access token or OpenID Connect ID token that is provided
--   by the identity provider. Your application must get this token by
--   authenticating the user who is using your application with a web
--   identity provider before the application makes an
--   <tt>AssumeRoleWithWebIdentity</tt> call.
assumeRoleWithWebIdentity_webIdentityToken :: Lens' AssumeRoleWithWebIdentity Text

-- | Contains the response to a successful AssumeRoleWithWebIdentity
--   request, including temporary Amazon Web Services credentials that can
--   be used to make Amazon Web Services requests.
--   
--   <i>See:</i> <a>newAssumeRoleWithWebIdentityResponse</a> smart
--   constructor.
data AssumeRoleWithWebIdentityResponse
AssumeRoleWithWebIdentityResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe AuthEnv -> Maybe AssumedRoleUser -> Maybe Natural -> Int -> AssumeRoleWithWebIdentityResponse

-- | The intended audience (also known as client ID) of the web identity
--   token. This is traditionally the client identifier issued to the
--   application that requested the web identity token.
[$sel:audience:AssumeRoleWithWebIdentityResponse'] :: AssumeRoleWithWebIdentityResponse -> Maybe Text

-- | The unique user identifier that is returned by the identity provider.
--   This identifier is associated with the <tt>WebIdentityToken</tt> that
--   was submitted with the <tt>AssumeRoleWithWebIdentity</tt> call. The
--   identifier is typically unique to the user and the application that
--   acquired the <tt>WebIdentityToken</tt> (pairwise identifier). For
--   OpenID Connect ID tokens, this field contains the value returned by
--   the identity provider as the token's <tt>sub</tt> (Subject) claim.
[$sel:subjectFromWebIdentityToken:AssumeRoleWithWebIdentityResponse'] :: AssumeRoleWithWebIdentityResponse -> Maybe Text

-- | The issuing authority of the web identity token presented. For OpenID
--   Connect ID tokens, this contains the value of the <tt>iss</tt> field.
--   For OAuth 2.0 access tokens, this contains the value of the
--   <tt>ProviderId</tt> parameter that was passed in the
--   <tt>AssumeRoleWithWebIdentity</tt> request.
[$sel:provider:AssumeRoleWithWebIdentityResponse'] :: AssumeRoleWithWebIdentityResponse -> Maybe Text

-- | The value of the source identity that is returned in the JSON web
--   token (JWT) from the identity provider.
--   
--   You can require users to set a source identity value when they assume
--   a role. You do this by using the <tt>sts:SourceIdentity</tt> condition
--   key in a role trust policy. That way, actions that are taken with the
--   role are associated with that user. After the source identity is set,
--   the value cannot be changed. It is present in the request for all
--   actions that are taken by the role and persists across <a>chained
--   role</a> sessions. You can configure your identity provider to use an
--   attribute associated with your users, like user name or email, as the
--   source identity when calling <tt>AssumeRoleWithWebIdentity</tt>. You
--   do this by adding a claim to the JSON web token. To learn more about
--   OIDC tokens and claims, see <a>Using Tokens with User Pools</a> in the
--   <i>Amazon Cognito Developer Guide</i>. For more information about
--   using source identity, see <a>Monitor and control actions taken with
--   assumed roles</a> in the <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
[$sel:sourceIdentity:AssumeRoleWithWebIdentityResponse'] :: AssumeRoleWithWebIdentityResponse -> Maybe Text

-- | The temporary security credentials, which include an access key ID, a
--   secret access key, and a security token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
[$sel:credentials:AssumeRoleWithWebIdentityResponse'] :: AssumeRoleWithWebIdentityResponse -> Maybe AuthEnv

-- | The Amazon Resource Name (ARN) and the assumed role ID, which are
--   identifiers that you can use to refer to the resulting temporary
--   security credentials. For example, you can reference these credentials
--   as a principal in a resource-based policy by using the ARN or assumed
--   role ID. The ARN and ID include the <tt>RoleSessionName</tt> that you
--   specified when you called <tt>AssumeRole</tt>.
[$sel:assumedRoleUser:AssumeRoleWithWebIdentityResponse'] :: AssumeRoleWithWebIdentityResponse -> Maybe AssumedRoleUser

-- | A percentage value that indicates the packed size of the session
--   policies and session tags combined passed in the request. The request
--   fails if the packed size is greater than 100 percent, which means the
--   policies and tags exceeded the allowed space.
[$sel:packedPolicySize:AssumeRoleWithWebIdentityResponse'] :: AssumeRoleWithWebIdentityResponse -> Maybe Natural

-- | The response's http status code.
[$sel:httpStatus:AssumeRoleWithWebIdentityResponse'] :: AssumeRoleWithWebIdentityResponse -> Int

-- | Create a value of <a>AssumeRoleWithWebIdentityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:audience:AssumeRoleWithWebIdentityResponse'</a>,
--   <a>assumeRoleWithWebIdentityResponse_audience</a> - The intended
--   audience (also known as client ID) of the web identity token. This is
--   traditionally the client identifier issued to the application that
--   requested the web identity token.
--   
--   
--   <a>$sel:subjectFromWebIdentityToken:AssumeRoleWithWebIdentityResponse'</a>,
--   <a>assumeRoleWithWebIdentityResponse_subjectFromWebIdentityToken</a> -
--   The unique user identifier that is returned by the identity provider.
--   This identifier is associated with the <tt>WebIdentityToken</tt> that
--   was submitted with the <tt>AssumeRoleWithWebIdentity</tt> call. The
--   identifier is typically unique to the user and the application that
--   acquired the <tt>WebIdentityToken</tt> (pairwise identifier). For
--   OpenID Connect ID tokens, this field contains the value returned by
--   the identity provider as the token's <tt>sub</tt> (Subject) claim.
--   
--   <a>$sel:provider:AssumeRoleWithWebIdentityResponse'</a>,
--   <a>assumeRoleWithWebIdentityResponse_provider</a> - The issuing
--   authority of the web identity token presented. For OpenID Connect ID
--   tokens, this contains the value of the <tt>iss</tt> field. For OAuth
--   2.0 access tokens, this contains the value of the <tt>ProviderId</tt>
--   parameter that was passed in the <tt>AssumeRoleWithWebIdentity</tt>
--   request.
--   
--   <a>$sel:sourceIdentity:AssumeRoleWithWebIdentityResponse'</a>,
--   <a>assumeRoleWithWebIdentityResponse_sourceIdentity</a> - The value of
--   the source identity that is returned in the JSON web token (JWT) from
--   the identity provider.
--   
--   You can require users to set a source identity value when they assume
--   a role. You do this by using the <tt>sts:SourceIdentity</tt> condition
--   key in a role trust policy. That way, actions that are taken with the
--   role are associated with that user. After the source identity is set,
--   the value cannot be changed. It is present in the request for all
--   actions that are taken by the role and persists across <a>chained
--   role</a> sessions. You can configure your identity provider to use an
--   attribute associated with your users, like user name or email, as the
--   source identity when calling <tt>AssumeRoleWithWebIdentity</tt>. You
--   do this by adding a claim to the JSON web token. To learn more about
--   OIDC tokens and claims, see <a>Using Tokens with User Pools</a> in the
--   <i>Amazon Cognito Developer Guide</i>. For more information about
--   using source identity, see <a>Monitor and control actions taken with
--   assumed roles</a> in the <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
--   
--   <a>$sel:credentials:AssumeRoleWithWebIdentityResponse'</a>,
--   <a>assumeRoleWithWebIdentityResponse_credentials</a> - The temporary
--   security credentials, which include an access key ID, a secret access
--   key, and a security token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
--   
--   <a>$sel:assumedRoleUser:AssumeRoleWithWebIdentityResponse'</a>,
--   <a>assumeRoleWithWebIdentityResponse_assumedRoleUser</a> - The Amazon
--   Resource Name (ARN) and the assumed role ID, which are identifiers
--   that you can use to refer to the resulting temporary security
--   credentials. For example, you can reference these credentials as a
--   principal in a resource-based policy by using the ARN or assumed role
--   ID. The ARN and ID include the <tt>RoleSessionName</tt> that you
--   specified when you called <tt>AssumeRole</tt>.
--   
--   <a>$sel:packedPolicySize:AssumeRoleWithWebIdentityResponse'</a>,
--   <a>assumeRoleWithWebIdentityResponse_packedPolicySize</a> - A
--   percentage value that indicates the packed size of the session
--   policies and session tags combined passed in the request. The request
--   fails if the packed size is greater than 100 percent, which means the
--   policies and tags exceeded the allowed space.
--   
--   <a>$sel:httpStatus:AssumeRoleWithWebIdentityResponse'</a>,
--   <a>assumeRoleWithWebIdentityResponse_httpStatus</a> - The response's
--   http status code.
newAssumeRoleWithWebIdentityResponse :: Int -> AssumeRoleWithWebIdentityResponse

-- | The intended audience (also known as client ID) of the web identity
--   token. This is traditionally the client identifier issued to the
--   application that requested the web identity token.
assumeRoleWithWebIdentityResponse_audience :: Lens' AssumeRoleWithWebIdentityResponse (Maybe Text)

-- | The unique user identifier that is returned by the identity provider.
--   This identifier is associated with the <tt>WebIdentityToken</tt> that
--   was submitted with the <tt>AssumeRoleWithWebIdentity</tt> call. The
--   identifier is typically unique to the user and the application that
--   acquired the <tt>WebIdentityToken</tt> (pairwise identifier). For
--   OpenID Connect ID tokens, this field contains the value returned by
--   the identity provider as the token's <tt>sub</tt> (Subject) claim.
assumeRoleWithWebIdentityResponse_subjectFromWebIdentityToken :: Lens' AssumeRoleWithWebIdentityResponse (Maybe Text)

-- | The issuing authority of the web identity token presented. For OpenID
--   Connect ID tokens, this contains the value of the <tt>iss</tt> field.
--   For OAuth 2.0 access tokens, this contains the value of the
--   <tt>ProviderId</tt> parameter that was passed in the
--   <tt>AssumeRoleWithWebIdentity</tt> request.
assumeRoleWithWebIdentityResponse_provider :: Lens' AssumeRoleWithWebIdentityResponse (Maybe Text)

-- | The value of the source identity that is returned in the JSON web
--   token (JWT) from the identity provider.
--   
--   You can require users to set a source identity value when they assume
--   a role. You do this by using the <tt>sts:SourceIdentity</tt> condition
--   key in a role trust policy. That way, actions that are taken with the
--   role are associated with that user. After the source identity is set,
--   the value cannot be changed. It is present in the request for all
--   actions that are taken by the role and persists across <a>chained
--   role</a> sessions. You can configure your identity provider to use an
--   attribute associated with your users, like user name or email, as the
--   source identity when calling <tt>AssumeRoleWithWebIdentity</tt>. You
--   do this by adding a claim to the JSON web token. To learn more about
--   OIDC tokens and claims, see <a>Using Tokens with User Pools</a> in the
--   <i>Amazon Cognito Developer Guide</i>. For more information about
--   using source identity, see <a>Monitor and control actions taken with
--   assumed roles</a> in the <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
assumeRoleWithWebIdentityResponse_sourceIdentity :: Lens' AssumeRoleWithWebIdentityResponse (Maybe Text)

-- | The temporary security credentials, which include an access key ID, a
--   secret access key, and a security token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
assumeRoleWithWebIdentityResponse_credentials :: Lens' AssumeRoleWithWebIdentityResponse (Maybe AuthEnv)

-- | The Amazon Resource Name (ARN) and the assumed role ID, which are
--   identifiers that you can use to refer to the resulting temporary
--   security credentials. For example, you can reference these credentials
--   as a principal in a resource-based policy by using the ARN or assumed
--   role ID. The ARN and ID include the <tt>RoleSessionName</tt> that you
--   specified when you called <tt>AssumeRole</tt>.
assumeRoleWithWebIdentityResponse_assumedRoleUser :: Lens' AssumeRoleWithWebIdentityResponse (Maybe AssumedRoleUser)

-- | A percentage value that indicates the packed size of the session
--   policies and session tags combined passed in the request. The request
--   fails if the packed size is greater than 100 percent, which means the
--   policies and tags exceeded the allowed space.
assumeRoleWithWebIdentityResponse_packedPolicySize :: Lens' AssumeRoleWithWebIdentityResponse (Maybe Natural)

-- | The response's http status code.
assumeRoleWithWebIdentityResponse_httpStatus :: Lens' AssumeRoleWithWebIdentityResponse Int
instance GHC.Generics.Generic Network.AWS.STS.AssumeRoleWithWebIdentity.AssumeRoleWithWebIdentity
instance GHC.Show.Show Network.AWS.STS.AssumeRoleWithWebIdentity.AssumeRoleWithWebIdentity
instance GHC.Read.Read Network.AWS.STS.AssumeRoleWithWebIdentity.AssumeRoleWithWebIdentity
instance GHC.Classes.Eq Network.AWS.STS.AssumeRoleWithWebIdentity.AssumeRoleWithWebIdentity
instance GHC.Generics.Generic Network.AWS.STS.AssumeRoleWithWebIdentity.AssumeRoleWithWebIdentityResponse
instance GHC.Show.Show Network.AWS.STS.AssumeRoleWithWebIdentity.AssumeRoleWithWebIdentityResponse
instance GHC.Classes.Eq Network.AWS.STS.AssumeRoleWithWebIdentity.AssumeRoleWithWebIdentityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.STS.AssumeRoleWithWebIdentity.AssumeRoleWithWebIdentity
instance Control.DeepSeq.NFData Network.AWS.STS.AssumeRoleWithWebIdentity.AssumeRoleWithWebIdentityResponse
instance Data.Hashable.Class.Hashable Network.AWS.STS.AssumeRoleWithWebIdentity.AssumeRoleWithWebIdentity
instance Control.DeepSeq.NFData Network.AWS.STS.AssumeRoleWithWebIdentity.AssumeRoleWithWebIdentity
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.STS.AssumeRoleWithWebIdentity.AssumeRoleWithWebIdentity
instance Network.AWS.Data.Path.ToPath Network.AWS.STS.AssumeRoleWithWebIdentity.AssumeRoleWithWebIdentity
instance Network.AWS.Data.Query.ToQuery Network.AWS.STS.AssumeRoleWithWebIdentity.AssumeRoleWithWebIdentity


-- | Returns a set of temporary security credentials for users who have
--   been authenticated via a SAML authentication response. This operation
--   provides a mechanism for tying an enterprise identity store or
--   directory to role-based Amazon Web Services access without
--   user-specific credentials or configuration. For a comparison of
--   <tt>AssumeRoleWithSAML</tt> with the other API operations that produce
--   temporary credentials, see <a>Requesting Temporary Security
--   Credentials</a> and <a>Comparing the STS API operations</a> in the
--   <i>IAM User Guide</i>.
--   
--   The temporary security credentials returned by this operation consist
--   of an access key ID, a secret access key, and a security token.
--   Applications can use these temporary security credentials to sign
--   calls to Amazon Web Services services.
--   
--   <b>Session Duration</b>
--   
--   By default, the temporary security credentials created by
--   <tt>AssumeRoleWithSAML</tt> last for one hour. However, you can use
--   the optional <tt>DurationSeconds</tt> parameter to specify the
--   duration of your session. Your role session lasts for the duration
--   that you specify, or until the time specified in the SAML
--   authentication response's <tt>SessionNotOnOrAfter</tt> value,
--   whichever is shorter. You can provide a <tt>DurationSeconds</tt> value
--   from 900 seconds (15 minutes) up to the maximum session duration
--   setting for the role. This setting can have a value from 1 hour to 12
--   hours. To learn how to view the maximum value for your role, see
--   <a>View the Maximum Session Duration Setting for a Role</a> in the
--   <i>IAM User Guide</i>. The maximum session duration limit applies when
--   you use the <tt>AssumeRole*</tt> API operations or the
--   <tt>assume-role*</tt> CLI commands. However the limit does not apply
--   when you use those operations to create a console URL. For more
--   information, see <a>Using IAM Roles</a> in the <i>IAM User Guide</i>.
--   
--   <a>Role chaining</a> limits your CLI or Amazon Web Services API role
--   session to a maximum of one hour. When you use the <tt>AssumeRole</tt>
--   API operation to assume a role, you can specify the duration of your
--   role session with the <tt>DurationSeconds</tt> parameter. You can
--   specify a parameter value of up to 43200 seconds (12 hours), depending
--   on the maximum session duration setting for your role. However, if you
--   assume a role using role chaining and provide a
--   <tt>DurationSeconds</tt> parameter value greater than one hour, the
--   operation fails.
--   
--   <b>Permissions</b>
--   
--   The temporary security credentials created by
--   <tt>AssumeRoleWithSAML</tt> can be used to make API calls to any
--   Amazon Web Services service with the following exception: you cannot
--   call the STS <tt>GetFederationToken</tt> or <tt>GetSessionToken</tt>
--   API operations.
--   
--   (Optional) You can pass inline or managed <a>session policies</a> to
--   this operation. You can pass a single JSON policy document to use as
--   an inline session policy. You can also specify up to 10 managed
--   policies to use as managed session policies. The plaintext that you
--   use for both inline and managed session policies can't exceed 2,048
--   characters. Passing policies to this operation returns new temporary
--   credentials. The resulting session's permissions are the intersection
--   of the role's identity-based policy and the session policies. You can
--   use the role's temporary credentials in subsequent Amazon Web Services
--   API calls to access resources in the account that owns the role. You
--   cannot use session policies to grant more permissions than those
--   allowed by the identity-based policy of the role that is being
--   assumed. For more information, see <a>Session Policies</a> in the
--   <i>IAM User Guide</i>.
--   
--   Calling <tt>AssumeRoleWithSAML</tt> does not require the use of Amazon
--   Web Services security credentials. The identity of the caller is
--   validated by using keys in the metadata document that is uploaded for
--   the SAML provider entity for your identity provider.
--   
--   Calling <tt>AssumeRoleWithSAML</tt> can result in an entry in your
--   CloudTrail logs. The entry includes the value in the <tt>NameID</tt>
--   element of the SAML assertion. We recommend that you use a
--   <tt>NameIDType</tt> that is not associated with any personally
--   identifiable information (PII). For example, you could instead use the
--   persistent identifier
--   (<tt>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</tt>).
--   
--   <b>Tags</b>
--   
--   (Optional) You can configure your IdP to pass attributes into your
--   SAML assertion as session tags. Each session tag consists of a key
--   name and an associated value. For more information about session tags,
--   see <a>Passing Session Tags in STS</a> in the <i>IAM User Guide</i>.
--   
--   You can pass up to 50 session tags. The plaintext session tag keys
--   can’t exceed 128 characters and the values can’t exceed 256
--   characters. For these and additional limits, see <a>IAM and STS
--   Character Limits</a> in the <i>IAM User Guide</i>.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   You can pass a session tag with the same key as a tag that is attached
--   to the role. When you do, session tags override the role's tags with
--   the same key.
--   
--   An administrator must grant you the permissions necessary to pass
--   session tags. The administrator can also create granular permissions
--   to allow you to pass only specific session tags. For more information,
--   see <a>Tutorial: Using Tags for Attribute-Based Access Control</a> in
--   the <i>IAM User Guide</i>.
--   
--   You can set the session tags as transitive. Transitive tags persist
--   during role chaining. For more information, see <a>Chaining Roles with
--   Session Tags</a> in the <i>IAM User Guide</i>.
--   
--   <b>SAML Configuration</b>
--   
--   Before your application can call <tt>AssumeRoleWithSAML</tt>, you must
--   configure your SAML identity provider (IdP) to issue the claims
--   required by Amazon Web Services. Additionally, you must use Identity
--   and Access Management (IAM) to create a SAML provider entity in your
--   Amazon Web Services account that represents your identity provider.
--   You must also create an IAM role that specifies this SAML provider in
--   its trust policy.
--   
--   For more information, see the following resources:
--   
--   <ul>
--   <li><a>About SAML 2.0-based Federation</a> in the <i>IAM User
--   Guide</i>.</li>
--   <li><a>Creating SAML Identity Providers</a> in the <i>IAM User
--   Guide</i>.</li>
--   <li><a>Configuring a Relying Party and Claims</a> in the <i>IAM User
--   Guide</i>.</li>
--   <li><a>Creating a Role for SAML 2.0 Federation</a> in the <i>IAM User
--   Guide</i>.</li>
--   </ul>
module Network.AWS.STS.AssumeRoleWithSAML

-- | <i>See:</i> <a>newAssumeRoleWithSAML</a> smart constructor.
data AssumeRoleWithSAML
AssumeRoleWithSAML' :: Maybe [PolicyDescriptorType] -> Maybe Text -> Maybe Natural -> Text -> Text -> Text -> AssumeRoleWithSAML

-- | The Amazon Resource Names (ARNs) of the IAM managed policies that you
--   want to use as managed session policies. The policies must exist in
--   the same account as the role.
--   
--   This parameter is optional. You can provide up to 10 managed policy
--   ARNs. However, the plaintext that you use for both inline and managed
--   session policies can't exceed 2,048 characters. For more information
--   about ARNs, see <a>Amazon Resource Names (ARNs) and Amazon Web
--   Services Service Namespaces</a> in the Amazon Web Services General
--   Reference.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   Passing policies to this operation returns new temporary credentials.
--   The resulting session's permissions are the intersection of the role's
--   identity-based policy and the session policies. You can use the role's
--   temporary credentials in subsequent Amazon Web Services API calls to
--   access resources in the account that owns the role. You cannot use
--   session policies to grant more permissions than those allowed by the
--   identity-based policy of the role that is being assumed. For more
--   information, see <a>Session Policies</a> in the <i>IAM User Guide</i>.
[$sel:policyArns:AssumeRoleWithSAML'] :: AssumeRoleWithSAML -> Maybe [PolicyDescriptorType]

-- | An IAM policy in JSON format that you want to use as an inline session
--   policy.
--   
--   This parameter is optional. Passing policies to this operation returns
--   new temporary credentials. The resulting session's permissions are the
--   intersection of the role's identity-based policy and the session
--   policies. You can use the role's temporary credentials in subsequent
--   Amazon Web Services API calls to access resources in the account that
--   owns the role. You cannot use session policies to grant more
--   permissions than those allowed by the identity-based policy of the
--   role that is being assumed. For more information, see <a>Session
--   Policies</a> in the <i>IAM User Guide</i>.
--   
--   The plaintext that you use for both inline and managed session
--   policies can't exceed 2,048 characters. The JSON policy characters can
--   be any ASCII character from the space character to the end of the
--   valid character list (\u0020 through \u00FF). It can also include the
--   tab (\u0009), linefeed (\u000A), and carriage return (\u000D)
--   characters.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
[$sel:policy:AssumeRoleWithSAML'] :: AssumeRoleWithSAML -> Maybe Text

-- | The duration, in seconds, of the role session. Your role session lasts
--   for the duration that you specify for the <tt>DurationSeconds</tt>
--   parameter, or until the time specified in the SAML authentication
--   response's <tt>SessionNotOnOrAfter</tt> value, whichever is shorter.
--   You can provide a <tt>DurationSeconds</tt> value from 900 seconds (15
--   minutes) up to the maximum session duration setting for the role. This
--   setting can have a value from 1 hour to 12 hours. If you specify a
--   value higher than this setting, the operation fails. For example, if
--   you specify a session duration of 12 hours, but your administrator set
--   the maximum session duration to 6 hours, your operation fails. To
--   learn how to view the maximum value for your role, see <a>View the
--   Maximum Session Duration Setting for a Role</a> in the <i>IAM User
--   Guide</i>.
--   
--   By default, the value is set to <tt>3600</tt> seconds.
--   
--   The <tt>DurationSeconds</tt> parameter is separate from the duration
--   of a console session that you might request using the returned
--   credentials. The request to the federation endpoint for a console
--   sign-in token takes a <tt>SessionDuration</tt> parameter that
--   specifies the maximum length of the console session. For more
--   information, see <a>Creating a URL that Enables Federated Users to
--   Access the Management Console</a> in the <i>IAM User Guide</i>.
[$sel:durationSeconds:AssumeRoleWithSAML'] :: AssumeRoleWithSAML -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the role that the caller is
--   assuming.
[$sel:roleArn:AssumeRoleWithSAML'] :: AssumeRoleWithSAML -> Text

-- | The Amazon Resource Name (ARN) of the SAML provider in IAM that
--   describes the IdP.
[$sel:principalArn:AssumeRoleWithSAML'] :: AssumeRoleWithSAML -> Text

-- | The base64 encoded SAML authentication response provided by the IdP.
--   
--   For more information, see <a>Configuring a Relying Party and Adding
--   Claims</a> in the <i>IAM User Guide</i>.
[$sel:sAMLAssertion:AssumeRoleWithSAML'] :: AssumeRoleWithSAML -> Text

-- | Create a value of <a>AssumeRoleWithSAML</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyArns:AssumeRoleWithSAML'</a>,
--   <a>assumeRoleWithSAML_policyArns</a> - The Amazon Resource Names
--   (ARNs) of the IAM managed policies that you want to use as managed
--   session policies. The policies must exist in the same account as the
--   role.
--   
--   This parameter is optional. You can provide up to 10 managed policy
--   ARNs. However, the plaintext that you use for both inline and managed
--   session policies can't exceed 2,048 characters. For more information
--   about ARNs, see <a>Amazon Resource Names (ARNs) and Amazon Web
--   Services Service Namespaces</a> in the Amazon Web Services General
--   Reference.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   Passing policies to this operation returns new temporary credentials.
--   The resulting session's permissions are the intersection of the role's
--   identity-based policy and the session policies. You can use the role's
--   temporary credentials in subsequent Amazon Web Services API calls to
--   access resources in the account that owns the role. You cannot use
--   session policies to grant more permissions than those allowed by the
--   identity-based policy of the role that is being assumed. For more
--   information, see <a>Session Policies</a> in the <i>IAM User Guide</i>.
--   
--   <a>$sel:policy:AssumeRoleWithSAML'</a>,
--   <a>assumeRoleWithSAML_policy</a> - An IAM policy in JSON format that
--   you want to use as an inline session policy.
--   
--   This parameter is optional. Passing policies to this operation returns
--   new temporary credentials. The resulting session's permissions are the
--   intersection of the role's identity-based policy and the session
--   policies. You can use the role's temporary credentials in subsequent
--   Amazon Web Services API calls to access resources in the account that
--   owns the role. You cannot use session policies to grant more
--   permissions than those allowed by the identity-based policy of the
--   role that is being assumed. For more information, see <a>Session
--   Policies</a> in the <i>IAM User Guide</i>.
--   
--   The plaintext that you use for both inline and managed session
--   policies can't exceed 2,048 characters. The JSON policy characters can
--   be any ASCII character from the space character to the end of the
--   valid character list (\u0020 through \u00FF). It can also include the
--   tab (\u0009), linefeed (\u000A), and carriage return (\u000D)
--   characters.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   <a>$sel:durationSeconds:AssumeRoleWithSAML'</a>,
--   <a>assumeRoleWithSAML_durationSeconds</a> - The duration, in seconds,
--   of the role session. Your role session lasts for the duration that you
--   specify for the <tt>DurationSeconds</tt> parameter, or until the time
--   specified in the SAML authentication response's
--   <tt>SessionNotOnOrAfter</tt> value, whichever is shorter. You can
--   provide a <tt>DurationSeconds</tt> value from 900 seconds (15 minutes)
--   up to the maximum session duration setting for the role. This setting
--   can have a value from 1 hour to 12 hours. If you specify a value
--   higher than this setting, the operation fails. For example, if you
--   specify a session duration of 12 hours, but your administrator set the
--   maximum session duration to 6 hours, your operation fails. To learn
--   how to view the maximum value for your role, see <a>View the Maximum
--   Session Duration Setting for a Role</a> in the <i>IAM User Guide</i>.
--   
--   By default, the value is set to <tt>3600</tt> seconds.
--   
--   The <tt>DurationSeconds</tt> parameter is separate from the duration
--   of a console session that you might request using the returned
--   credentials. The request to the federation endpoint for a console
--   sign-in token takes a <tt>SessionDuration</tt> parameter that
--   specifies the maximum length of the console session. For more
--   information, see <a>Creating a URL that Enables Federated Users to
--   Access the Management Console</a> in the <i>IAM User Guide</i>.
--   
--   <a>$sel:roleArn:AssumeRoleWithSAML'</a>,
--   <a>assumeRoleWithSAML_roleArn</a> - The Amazon Resource Name (ARN) of
--   the role that the caller is assuming.
--   
--   <a>$sel:principalArn:AssumeRoleWithSAML'</a>,
--   <a>assumeRoleWithSAML_principalArn</a> - The Amazon Resource Name
--   (ARN) of the SAML provider in IAM that describes the IdP.
--   
--   <a>$sel:sAMLAssertion:AssumeRoleWithSAML'</a>,
--   <a>assumeRoleWithSAML_sAMLAssertion</a> - The base64 encoded SAML
--   authentication response provided by the IdP.
--   
--   For more information, see <a>Configuring a Relying Party and Adding
--   Claims</a> in the <i>IAM User Guide</i>.
newAssumeRoleWithSAML :: Text -> Text -> Text -> AssumeRoleWithSAML

-- | The Amazon Resource Names (ARNs) of the IAM managed policies that you
--   want to use as managed session policies. The policies must exist in
--   the same account as the role.
--   
--   This parameter is optional. You can provide up to 10 managed policy
--   ARNs. However, the plaintext that you use for both inline and managed
--   session policies can't exceed 2,048 characters. For more information
--   about ARNs, see <a>Amazon Resource Names (ARNs) and Amazon Web
--   Services Service Namespaces</a> in the Amazon Web Services General
--   Reference.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   Passing policies to this operation returns new temporary credentials.
--   The resulting session's permissions are the intersection of the role's
--   identity-based policy and the session policies. You can use the role's
--   temporary credentials in subsequent Amazon Web Services API calls to
--   access resources in the account that owns the role. You cannot use
--   session policies to grant more permissions than those allowed by the
--   identity-based policy of the role that is being assumed. For more
--   information, see <a>Session Policies</a> in the <i>IAM User Guide</i>.
assumeRoleWithSAML_policyArns :: Lens' AssumeRoleWithSAML (Maybe [PolicyDescriptorType])

-- | An IAM policy in JSON format that you want to use as an inline session
--   policy.
--   
--   This parameter is optional. Passing policies to this operation returns
--   new temporary credentials. The resulting session's permissions are the
--   intersection of the role's identity-based policy and the session
--   policies. You can use the role's temporary credentials in subsequent
--   Amazon Web Services API calls to access resources in the account that
--   owns the role. You cannot use session policies to grant more
--   permissions than those allowed by the identity-based policy of the
--   role that is being assumed. For more information, see <a>Session
--   Policies</a> in the <i>IAM User Guide</i>.
--   
--   The plaintext that you use for both inline and managed session
--   policies can't exceed 2,048 characters. The JSON policy characters can
--   be any ASCII character from the space character to the end of the
--   valid character list (\u0020 through \u00FF). It can also include the
--   tab (\u0009), linefeed (\u000A), and carriage return (\u000D)
--   characters.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
assumeRoleWithSAML_policy :: Lens' AssumeRoleWithSAML (Maybe Text)

-- | The duration, in seconds, of the role session. Your role session lasts
--   for the duration that you specify for the <tt>DurationSeconds</tt>
--   parameter, or until the time specified in the SAML authentication
--   response's <tt>SessionNotOnOrAfter</tt> value, whichever is shorter.
--   You can provide a <tt>DurationSeconds</tt> value from 900 seconds (15
--   minutes) up to the maximum session duration setting for the role. This
--   setting can have a value from 1 hour to 12 hours. If you specify a
--   value higher than this setting, the operation fails. For example, if
--   you specify a session duration of 12 hours, but your administrator set
--   the maximum session duration to 6 hours, your operation fails. To
--   learn how to view the maximum value for your role, see <a>View the
--   Maximum Session Duration Setting for a Role</a> in the <i>IAM User
--   Guide</i>.
--   
--   By default, the value is set to <tt>3600</tt> seconds.
--   
--   The <tt>DurationSeconds</tt> parameter is separate from the duration
--   of a console session that you might request using the returned
--   credentials. The request to the federation endpoint for a console
--   sign-in token takes a <tt>SessionDuration</tt> parameter that
--   specifies the maximum length of the console session. For more
--   information, see <a>Creating a URL that Enables Federated Users to
--   Access the Management Console</a> in the <i>IAM User Guide</i>.
assumeRoleWithSAML_durationSeconds :: Lens' AssumeRoleWithSAML (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the role that the caller is
--   assuming.
assumeRoleWithSAML_roleArn :: Lens' AssumeRoleWithSAML Text

-- | The Amazon Resource Name (ARN) of the SAML provider in IAM that
--   describes the IdP.
assumeRoleWithSAML_principalArn :: Lens' AssumeRoleWithSAML Text

-- | The base64 encoded SAML authentication response provided by the IdP.
--   
--   For more information, see <a>Configuring a Relying Party and Adding
--   Claims</a> in the <i>IAM User Guide</i>.
assumeRoleWithSAML_sAMLAssertion :: Lens' AssumeRoleWithSAML Text

-- | Contains the response to a successful AssumeRoleWithSAML request,
--   including temporary Amazon Web Services credentials that can be used
--   to make Amazon Web Services requests.
--   
--   <i>See:</i> <a>newAssumeRoleWithSAMLResponse</a> smart constructor.
data AssumeRoleWithSAMLResponse
AssumeRoleWithSAMLResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe AuthEnv -> Maybe AssumedRoleUser -> Maybe Natural -> Int -> AssumeRoleWithSAMLResponse

-- | A hash value based on the concatenation of the following:
--   
--   <ul>
--   <li>The <tt>Issuer</tt> response value.</li>
--   <li>The Amazon Web Services account ID.</li>
--   <li>The friendly name (the last part of the ARN) of the SAML provider
--   in IAM.</li>
--   </ul>
--   
--   The combination of <tt>NameQualifier</tt> and <tt>Subject</tt> can be
--   used to uniquely identify a federated user.
--   
--   The following pseudocode shows how the hash value is calculated:
--   
--   <pre>
--   BASE64 ( SHA1 ( "https://example.com/saml" + "123456789012" + "/MySAMLIdP" ) )
--   </pre>
[$sel:nameQualifier:AssumeRoleWithSAMLResponse'] :: AssumeRoleWithSAMLResponse -> Maybe Text

-- | The value of the <tt>Recipient</tt> attribute of the
--   <tt>SubjectConfirmationData</tt> element of the SAML assertion.
[$sel:audience:AssumeRoleWithSAMLResponse'] :: AssumeRoleWithSAMLResponse -> Maybe Text

-- | The format of the name ID, as defined by the <tt>Format</tt> attribute
--   in the <tt>NameID</tt> element of the SAML assertion. Typical examples
--   of the format are <tt>transient</tt> or <tt>persistent</tt>.
--   
--   If the format includes the prefix
--   <tt>urn:oasis:names:tc:SAML:2.0:nameid-format</tt>, that prefix is
--   removed. For example,
--   <tt>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</tt> is
--   returned as <tt>transient</tt>. If the format includes any other
--   prefix, the format is returned with no modifications.
[$sel:subjectType:AssumeRoleWithSAMLResponse'] :: AssumeRoleWithSAMLResponse -> Maybe Text

-- | The value of the <tt>NameID</tt> element in the <tt>Subject</tt>
--   element of the SAML assertion.
[$sel:subject:AssumeRoleWithSAMLResponse'] :: AssumeRoleWithSAMLResponse -> Maybe Text

-- | The value in the <tt>SourceIdentity</tt> attribute in the SAML
--   assertion.
--   
--   You can require users to set a source identity value when they assume
--   a role. You do this by using the <tt>sts:SourceIdentity</tt> condition
--   key in a role trust policy. That way, actions that are taken with the
--   role are associated with that user. After the source identity is set,
--   the value cannot be changed. It is present in the request for all
--   actions that are taken by the role and persists across <a>chained
--   role</a> sessions. You can configure your SAML identity provider to
--   use an attribute associated with your users, like user name or email,
--   as the source identity when calling <tt>AssumeRoleWithSAML</tt>. You
--   do this by adding an attribute to the SAML assertion. For more
--   information about using source identity, see <a>Monitor and control
--   actions taken with assumed roles</a> in the <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
[$sel:sourceIdentity:AssumeRoleWithSAMLResponse'] :: AssumeRoleWithSAMLResponse -> Maybe Text

-- | The value of the <tt>Issuer</tt> element of the SAML assertion.
[$sel:issuer:AssumeRoleWithSAMLResponse'] :: AssumeRoleWithSAMLResponse -> Maybe Text

-- | The temporary security credentials, which include an access key ID, a
--   secret access key, and a security (or session) token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
[$sel:credentials:AssumeRoleWithSAMLResponse'] :: AssumeRoleWithSAMLResponse -> Maybe AuthEnv

-- | The identifiers for the temporary security credentials that the
--   operation returns.
[$sel:assumedRoleUser:AssumeRoleWithSAMLResponse'] :: AssumeRoleWithSAMLResponse -> Maybe AssumedRoleUser

-- | A percentage value that indicates the packed size of the session
--   policies and session tags combined passed in the request. The request
--   fails if the packed size is greater than 100 percent, which means the
--   policies and tags exceeded the allowed space.
[$sel:packedPolicySize:AssumeRoleWithSAMLResponse'] :: AssumeRoleWithSAMLResponse -> Maybe Natural

-- | The response's http status code.
[$sel:httpStatus:AssumeRoleWithSAMLResponse'] :: AssumeRoleWithSAMLResponse -> Int

-- | Create a value of <a>AssumeRoleWithSAMLResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nameQualifier:AssumeRoleWithSAMLResponse'</a>,
--   <a>assumeRoleWithSAMLResponse_nameQualifier</a> - A hash value based
--   on the concatenation of the following:
--   
--   <ul>
--   <li>The <tt>Issuer</tt> response value.</li>
--   <li>The Amazon Web Services account ID.</li>
--   <li>The friendly name (the last part of the ARN) of the SAML provider
--   in IAM.</li>
--   </ul>
--   
--   The combination of <tt>NameQualifier</tt> and <tt>Subject</tt> can be
--   used to uniquely identify a federated user.
--   
--   The following pseudocode shows how the hash value is calculated:
--   
--   <pre>
--   BASE64 ( SHA1 ( "https://example.com/saml" + "123456789012" + "/MySAMLIdP" ) )
--   </pre>
--   
--   <a>$sel:audience:AssumeRoleWithSAMLResponse'</a>,
--   <a>assumeRoleWithSAMLResponse_audience</a> - The value of the
--   <tt>Recipient</tt> attribute of the <tt>SubjectConfirmationData</tt>
--   element of the SAML assertion.
--   
--   <a>$sel:subjectType:AssumeRoleWithSAMLResponse'</a>,
--   <a>assumeRoleWithSAMLResponse_subjectType</a> - The format of the name
--   ID, as defined by the <tt>Format</tt> attribute in the <tt>NameID</tt>
--   element of the SAML assertion. Typical examples of the format are
--   <tt>transient</tt> or <tt>persistent</tt>.
--   
--   If the format includes the prefix
--   <tt>urn:oasis:names:tc:SAML:2.0:nameid-format</tt>, that prefix is
--   removed. For example,
--   <tt>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</tt> is
--   returned as <tt>transient</tt>. If the format includes any other
--   prefix, the format is returned with no modifications.
--   
--   <a>$sel:subject:AssumeRoleWithSAMLResponse'</a>,
--   <a>assumeRoleWithSAMLResponse_subject</a> - The value of the
--   <tt>NameID</tt> element in the <tt>Subject</tt> element of the SAML
--   assertion.
--   
--   <a>$sel:sourceIdentity:AssumeRoleWithSAMLResponse'</a>,
--   <a>assumeRoleWithSAMLResponse_sourceIdentity</a> - The value in the
--   <tt>SourceIdentity</tt> attribute in the SAML assertion.
--   
--   You can require users to set a source identity value when they assume
--   a role. You do this by using the <tt>sts:SourceIdentity</tt> condition
--   key in a role trust policy. That way, actions that are taken with the
--   role are associated with that user. After the source identity is set,
--   the value cannot be changed. It is present in the request for all
--   actions that are taken by the role and persists across <a>chained
--   role</a> sessions. You can configure your SAML identity provider to
--   use an attribute associated with your users, like user name or email,
--   as the source identity when calling <tt>AssumeRoleWithSAML</tt>. You
--   do this by adding an attribute to the SAML assertion. For more
--   information about using source identity, see <a>Monitor and control
--   actions taken with assumed roles</a> in the <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
--   
--   <a>$sel:issuer:AssumeRoleWithSAMLResponse'</a>,
--   <a>assumeRoleWithSAMLResponse_issuer</a> - The value of the
--   <tt>Issuer</tt> element of the SAML assertion.
--   
--   <a>$sel:credentials:AssumeRoleWithSAMLResponse'</a>,
--   <a>assumeRoleWithSAMLResponse_credentials</a> - The temporary security
--   credentials, which include an access key ID, a secret access key, and
--   a security (or session) token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
--   
--   <a>$sel:assumedRoleUser:AssumeRoleWithSAMLResponse'</a>,
--   <a>assumeRoleWithSAMLResponse_assumedRoleUser</a> - The identifiers
--   for the temporary security credentials that the operation returns.
--   
--   <a>$sel:packedPolicySize:AssumeRoleWithSAMLResponse'</a>,
--   <a>assumeRoleWithSAMLResponse_packedPolicySize</a> - A percentage
--   value that indicates the packed size of the session policies and
--   session tags combined passed in the request. The request fails if the
--   packed size is greater than 100 percent, which means the policies and
--   tags exceeded the allowed space.
--   
--   <a>$sel:httpStatus:AssumeRoleWithSAMLResponse'</a>,
--   <a>assumeRoleWithSAMLResponse_httpStatus</a> - The response's http
--   status code.
newAssumeRoleWithSAMLResponse :: Int -> AssumeRoleWithSAMLResponse

-- | A hash value based on the concatenation of the following:
--   
--   <ul>
--   <li>The <tt>Issuer</tt> response value.</li>
--   <li>The Amazon Web Services account ID.</li>
--   <li>The friendly name (the last part of the ARN) of the SAML provider
--   in IAM.</li>
--   </ul>
--   
--   The combination of <tt>NameQualifier</tt> and <tt>Subject</tt> can be
--   used to uniquely identify a federated user.
--   
--   The following pseudocode shows how the hash value is calculated:
--   
--   <pre>
--   BASE64 ( SHA1 ( "https://example.com/saml" + "123456789012" + "/MySAMLIdP" ) )
--   </pre>
assumeRoleWithSAMLResponse_nameQualifier :: Lens' AssumeRoleWithSAMLResponse (Maybe Text)

-- | The value of the <tt>Recipient</tt> attribute of the
--   <tt>SubjectConfirmationData</tt> element of the SAML assertion.
assumeRoleWithSAMLResponse_audience :: Lens' AssumeRoleWithSAMLResponse (Maybe Text)

-- | The format of the name ID, as defined by the <tt>Format</tt> attribute
--   in the <tt>NameID</tt> element of the SAML assertion. Typical examples
--   of the format are <tt>transient</tt> or <tt>persistent</tt>.
--   
--   If the format includes the prefix
--   <tt>urn:oasis:names:tc:SAML:2.0:nameid-format</tt>, that prefix is
--   removed. For example,
--   <tt>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</tt> is
--   returned as <tt>transient</tt>. If the format includes any other
--   prefix, the format is returned with no modifications.
assumeRoleWithSAMLResponse_subjectType :: Lens' AssumeRoleWithSAMLResponse (Maybe Text)

-- | The value of the <tt>NameID</tt> element in the <tt>Subject</tt>
--   element of the SAML assertion.
assumeRoleWithSAMLResponse_subject :: Lens' AssumeRoleWithSAMLResponse (Maybe Text)

-- | The value in the <tt>SourceIdentity</tt> attribute in the SAML
--   assertion.
--   
--   You can require users to set a source identity value when they assume
--   a role. You do this by using the <tt>sts:SourceIdentity</tt> condition
--   key in a role trust policy. That way, actions that are taken with the
--   role are associated with that user. After the source identity is set,
--   the value cannot be changed. It is present in the request for all
--   actions that are taken by the role and persists across <a>chained
--   role</a> sessions. You can configure your SAML identity provider to
--   use an attribute associated with your users, like user name or email,
--   as the source identity when calling <tt>AssumeRoleWithSAML</tt>. You
--   do this by adding an attribute to the SAML assertion. For more
--   information about using source identity, see <a>Monitor and control
--   actions taken with assumed roles</a> in the <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
assumeRoleWithSAMLResponse_sourceIdentity :: Lens' AssumeRoleWithSAMLResponse (Maybe Text)

-- | The value of the <tt>Issuer</tt> element of the SAML assertion.
assumeRoleWithSAMLResponse_issuer :: Lens' AssumeRoleWithSAMLResponse (Maybe Text)

-- | The temporary security credentials, which include an access key ID, a
--   secret access key, and a security (or session) token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
assumeRoleWithSAMLResponse_credentials :: Lens' AssumeRoleWithSAMLResponse (Maybe AuthEnv)

-- | The identifiers for the temporary security credentials that the
--   operation returns.
assumeRoleWithSAMLResponse_assumedRoleUser :: Lens' AssumeRoleWithSAMLResponse (Maybe AssumedRoleUser)

-- | A percentage value that indicates the packed size of the session
--   policies and session tags combined passed in the request. The request
--   fails if the packed size is greater than 100 percent, which means the
--   policies and tags exceeded the allowed space.
assumeRoleWithSAMLResponse_packedPolicySize :: Lens' AssumeRoleWithSAMLResponse (Maybe Natural)

-- | The response's http status code.
assumeRoleWithSAMLResponse_httpStatus :: Lens' AssumeRoleWithSAMLResponse Int
instance GHC.Generics.Generic Network.AWS.STS.AssumeRoleWithSAML.AssumeRoleWithSAML
instance GHC.Show.Show Network.AWS.STS.AssumeRoleWithSAML.AssumeRoleWithSAML
instance GHC.Read.Read Network.AWS.STS.AssumeRoleWithSAML.AssumeRoleWithSAML
instance GHC.Classes.Eq Network.AWS.STS.AssumeRoleWithSAML.AssumeRoleWithSAML
instance GHC.Generics.Generic Network.AWS.STS.AssumeRoleWithSAML.AssumeRoleWithSAMLResponse
instance GHC.Show.Show Network.AWS.STS.AssumeRoleWithSAML.AssumeRoleWithSAMLResponse
instance GHC.Classes.Eq Network.AWS.STS.AssumeRoleWithSAML.AssumeRoleWithSAMLResponse
instance Network.AWS.Types.AWSRequest Network.AWS.STS.AssumeRoleWithSAML.AssumeRoleWithSAML
instance Control.DeepSeq.NFData Network.AWS.STS.AssumeRoleWithSAML.AssumeRoleWithSAMLResponse
instance Data.Hashable.Class.Hashable Network.AWS.STS.AssumeRoleWithSAML.AssumeRoleWithSAML
instance Control.DeepSeq.NFData Network.AWS.STS.AssumeRoleWithSAML.AssumeRoleWithSAML
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.STS.AssumeRoleWithSAML.AssumeRoleWithSAML
instance Network.AWS.Data.Path.ToPath Network.AWS.STS.AssumeRoleWithSAML.AssumeRoleWithSAML
instance Network.AWS.Data.Query.ToQuery Network.AWS.STS.AssumeRoleWithSAML.AssumeRoleWithSAML


-- | Returns a set of temporary security credentials that you can use to
--   access Amazon Web Services resources that you might not normally have
--   access to. These temporary credentials consist of an access key ID, a
--   secret access key, and a security token. Typically, you use
--   <tt>AssumeRole</tt> within your account or for cross-account access.
--   For a comparison of <tt>AssumeRole</tt> with other API operations that
--   produce temporary credentials, see <a>Requesting Temporary Security
--   Credentials</a> and <a>Comparing the STS API operations</a> in the
--   <i>IAM User Guide</i>.
--   
--   <b>Permissions</b>
--   
--   The temporary security credentials created by <tt>AssumeRole</tt> can
--   be used to make API calls to any Amazon Web Services service with the
--   following exception: You cannot call the STS
--   <tt>GetFederationToken</tt> or <tt>GetSessionToken</tt> API
--   operations.
--   
--   (Optional) You can pass inline or managed <a>session policies</a> to
--   this operation. You can pass a single JSON policy document to use as
--   an inline session policy. You can also specify up to 10 managed
--   policies to use as managed session policies. The plaintext that you
--   use for both inline and managed session policies can't exceed 2,048
--   characters. Passing policies to this operation returns new temporary
--   credentials. The resulting session's permissions are the intersection
--   of the role's identity-based policy and the session policies. You can
--   use the role's temporary credentials in subsequent Amazon Web Services
--   API calls to access resources in the account that owns the role. You
--   cannot use session policies to grant more permissions than those
--   allowed by the identity-based policy of the role that is being
--   assumed. For more information, see <a>Session Policies</a> in the
--   <i>IAM User Guide</i>.
--   
--   To assume a role from a different account, your account must be
--   trusted by the role. The trust relationship is defined in the role's
--   trust policy when the role is created. That trust policy states which
--   accounts are allowed to delegate that access to users in the account.
--   
--   A user who wants to access a role in a different account must also
--   have permissions that are delegated from the user account
--   administrator. The administrator must attach a policy that allows the
--   user to call <tt>AssumeRole</tt> for the ARN of the role in the other
--   account. If the user is in the same account as the role, then you can
--   do either of the following:
--   
--   <ul>
--   <li>Attach a policy to the user (identical to the previous user in a
--   different account).</li>
--   <li>Add the user as a principal directly in the role's trust
--   policy.</li>
--   </ul>
--   
--   In this case, the trust policy acts as an IAM resource-based policy.
--   Users in the same account as the role do not need explicit permission
--   to assume the role. For more information about trust policies and
--   resource-based policies, see <a>IAM Policies</a> in the <i>IAM User
--   Guide</i>.
--   
--   <b>Tags</b>
--   
--   (Optional) You can pass tag key-value pairs to your session. These
--   tags are called session tags. For more information about session tags,
--   see <a>Passing Session Tags in STS</a> in the <i>IAM User Guide</i>.
--   
--   An administrator must grant you the permissions necessary to pass
--   session tags. The administrator can also create granular permissions
--   to allow you to pass only specific session tags. For more information,
--   see <a>Tutorial: Using Tags for Attribute-Based Access Control</a> in
--   the <i>IAM User Guide</i>.
--   
--   You can set the session tags as transitive. Transitive tags persist
--   during role chaining. For more information, see <a>Chaining Roles with
--   Session Tags</a> in the <i>IAM User Guide</i>.
--   
--   <b>Using MFA with AssumeRole</b>
--   
--   (Optional) You can include multi-factor authentication (MFA)
--   information when you call <tt>AssumeRole</tt>. This is useful for
--   cross-account scenarios to ensure that the user that assumes the role
--   has been authenticated with an Amazon Web Services MFA device. In that
--   scenario, the trust policy of the role being assumed includes a
--   condition that tests for MFA authentication. If the caller does not
--   include valid MFA information, the request to assume the role is
--   denied. The condition in a trust policy that tests for MFA
--   authentication might look like the following example.
--   
--   <pre>
--   "Condition": {"Bool": {"aws:MultiFactorAuthPresent": true}}
--   </pre>
--   
--   For more information, see <a>Configuring MFA-Protected API Access</a>
--   in the <i>IAM User Guide</i> guide.
--   
--   To use MFA with <tt>AssumeRole</tt>, you pass values for the
--   <tt>SerialNumber</tt> and <tt>TokenCode</tt> parameters. The
--   <tt>SerialNumber</tt> value identifies the user's hardware or virtual
--   MFA device. The <tt>TokenCode</tt> is the time-based one-time password
--   (TOTP) that the MFA device produces.
module Network.AWS.STS.AssumeRole

-- | <i>See:</i> <a>newAssumeRole</a> smart constructor.
data AssumeRole
AssumeRole' :: Maybe Text -> Maybe [Tag] -> Maybe [PolicyDescriptorType] -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> Text -> AssumeRole

-- | The value provided by the MFA device, if the trust policy of the role
--   being assumed requires MFA. (In other words, if the policy includes a
--   condition that tests for MFA). If the role being assumed requires MFA
--   and if the <tt>TokenCode</tt> value is missing or expired, the
--   <tt>AssumeRole</tt> call returns an "access denied" error.
--   
--   The format for this parameter, as described by its regex pattern, is a
--   sequence of six numeric digits.
[$sel:tokenCode:AssumeRole'] :: AssumeRole -> Maybe Text

-- | A list of session tags that you want to pass. Each session tag
--   consists of a key name and an associated value. For more information
--   about session tags, see <a>Tagging STS Sessions</a> in the <i>IAM User
--   Guide</i>.
--   
--   This parameter is optional. You can pass up to 50 session tags. The
--   plaintext session tag keys can’t exceed 128 characters, and the values
--   can’t exceed 256 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   You can pass a session tag with the same key as a tag that is already
--   attached to the role. When you do, session tags override a role tag
--   with the same key.
--   
--   Tag key–value pairs are not case sensitive, but case is preserved.
--   This means that you cannot have separate <tt>Department</tt> and
--   <tt>department</tt> tag keys. Assume that the role has the
--   <tt>Department</tt>=<tt>Marketing</tt> tag and you pass the
--   <tt>department</tt>=<tt>engineering</tt> session tag.
--   <tt>Department</tt> and <tt>department</tt> are not saved as separate
--   tags, and the session tag passed in the request takes precedence over
--   the role tag.
--   
--   Additionally, if you used temporary credentials to perform this
--   operation, the new session inherits any transitive session tags from
--   the calling session. If you pass a session tag with the same key as an
--   inherited tag, the operation fails. To view the inherited tags for a
--   session, see the CloudTrail logs. For more information, see <a>Viewing
--   Session Tags in CloudTrail</a> in the <i>IAM User Guide</i>.
[$sel:tags:AssumeRole'] :: AssumeRole -> Maybe [Tag]

-- | The Amazon Resource Names (ARNs) of the IAM managed policies that you
--   want to use as managed session policies. The policies must exist in
--   the same account as the role.
--   
--   This parameter is optional. You can provide up to 10 managed policy
--   ARNs. However, the plaintext that you use for both inline and managed
--   session policies can't exceed 2,048 characters. For more information
--   about ARNs, see <a>Amazon Resource Names (ARNs) and Amazon Web
--   Services Service Namespaces</a> in the Amazon Web Services General
--   Reference.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   Passing policies to this operation returns new temporary credentials.
--   The resulting session's permissions are the intersection of the role's
--   identity-based policy and the session policies. You can use the role's
--   temporary credentials in subsequent Amazon Web Services API calls to
--   access resources in the account that owns the role. You cannot use
--   session policies to grant more permissions than those allowed by the
--   identity-based policy of the role that is being assumed. For more
--   information, see <a>Session Policies</a> in the <i>IAM User Guide</i>.
[$sel:policyArns:AssumeRole'] :: AssumeRole -> Maybe [PolicyDescriptorType]

-- | The identification number of the MFA device that is associated with
--   the user who is making the <tt>AssumeRole</tt> call. Specify this
--   value if the trust policy of the role being assumed includes a
--   condition that requires MFA authentication. The value is either the
--   serial number for a hardware device (such as <tt>GAHT12345678</tt>) or
--   an Amazon Resource Name (ARN) for a virtual device (such as
--   <tt>arn:aws:iam::123456789012:mfa/user</tt>).
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
[$sel:serialNumber:AssumeRole'] :: AssumeRole -> Maybe Text

-- | The source identity specified by the principal that is calling the
--   <tt>AssumeRole</tt> operation.
--   
--   You can require users to specify a source identity when they assume a
--   role. You do this by using the <tt>sts:SourceIdentity</tt> condition
--   key in a role trust policy. You can use source identity information in
--   CloudTrail logs to determine who took actions with a role. You can use
--   the <tt>aws:SourceIdentity</tt> condition key to further control
--   access to Amazon Web Services resources based on the value of source
--   identity. For more information about using source identity, see
--   <a>Monitor and control actions taken with assumed roles</a> in the
--   <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-. You cannot use a value that begins with the text
--   <tt>aws:</tt>. This prefix is reserved for Amazon Web Services
--   internal use.
[$sel:sourceIdentity:AssumeRole'] :: AssumeRole -> Maybe Text

-- | A list of keys for session tags that you want to set as transitive. If
--   you set a tag key as transitive, the corresponding key and value
--   passes to subsequent sessions in a role chain. For more information,
--   see <a>Chaining Roles with Session Tags</a> in the <i>IAM User
--   Guide</i>.
--   
--   This parameter is optional. When you set session tags as transitive,
--   the session policy and session tags packed binary limit is not
--   affected.
--   
--   If you choose not to specify a transitive tag key, then no tags are
--   passed from this session to any subsequent sessions.
[$sel:transitiveTagKeys:AssumeRole'] :: AssumeRole -> Maybe [Text]

-- | An IAM policy in JSON format that you want to use as an inline session
--   policy.
--   
--   This parameter is optional. Passing policies to this operation returns
--   new temporary credentials. The resulting session's permissions are the
--   intersection of the role's identity-based policy and the session
--   policies. You can use the role's temporary credentials in subsequent
--   Amazon Web Services API calls to access resources in the account that
--   owns the role. You cannot use session policies to grant more
--   permissions than those allowed by the identity-based policy of the
--   role that is being assumed. For more information, see <a>Session
--   Policies</a> in the <i>IAM User Guide</i>.
--   
--   The plaintext that you use for both inline and managed session
--   policies can't exceed 2,048 characters. The JSON policy characters can
--   be any ASCII character from the space character to the end of the
--   valid character list (\u0020 through \u00FF). It can also include the
--   tab (\u0009), linefeed (\u000A), and carriage return (\u000D)
--   characters.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
[$sel:policy:AssumeRole'] :: AssumeRole -> Maybe Text

-- | A unique identifier that might be required when you assume a role in
--   another account. If the administrator of the account to which the role
--   belongs provided you with an external ID, then provide that value in
--   the <tt>ExternalId</tt> parameter. This value can be any string, such
--   as a passphrase or account number. A cross-account role is usually set
--   up to trust everyone in an account. Therefore, the administrator of
--   the trusting account might send an external ID to the administrator of
--   the trusted account. That way, only someone with the ID can assume the
--   role, rather than everyone in the account. For more information about
--   the external ID, see <a>How to Use an External ID When Granting Access
--   to Your Amazon Web Services Resources to a Third Party</a> in the
--   <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
[$sel:externalId:AssumeRole'] :: AssumeRole -> Maybe Text

-- | The duration, in seconds, of the role session. The value specified can
--   can range from 900 seconds (15 minutes) up to the maximum session
--   duration that is set for the role. The maximum session duration
--   setting can have a value from 1 hour to 12 hours. If you specify a
--   value higher than this setting or the administrator setting (whichever
--   is lower), the operation fails. For example, if you specify a session
--   duration of 12 hours, but your administrator set the maximum session
--   duration to 6 hours, your operation fails. To learn how to view the
--   maximum value for your role, see <a>View the Maximum Session Duration
--   Setting for a Role</a> in the <i>IAM User Guide</i>.
--   
--   By default, the value is set to <tt>3600</tt> seconds.
--   
--   The <tt>DurationSeconds</tt> parameter is separate from the duration
--   of a console session that you might request using the returned
--   credentials. The request to the federation endpoint for a console
--   sign-in token takes a <tt>SessionDuration</tt> parameter that
--   specifies the maximum length of the console session. For more
--   information, see <a>Creating a URL that Enables Federated Users to
--   Access the Management Console</a> in the <i>IAM User Guide</i>.
[$sel:durationSeconds:AssumeRole'] :: AssumeRole -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the role to assume.
[$sel:roleArn:AssumeRole'] :: AssumeRole -> Text

-- | An identifier for the assumed role session.
--   
--   Use the role session name to uniquely identify a session when the same
--   role is assumed by different principals or for different reasons. In
--   cross-account scenarios, the role session name is visible to, and can
--   be logged by the account that owns the role. The role session name is
--   also used in the ARN of the assumed role principal. This means that
--   subsequent cross-account API requests that use the temporary security
--   credentials will expose the role session name to the external account
--   in their CloudTrail logs.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
[$sel:roleSessionName:AssumeRole'] :: AssumeRole -> Text

-- | Create a value of <a>AssumeRole</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tokenCode:AssumeRole'</a>, <a>assumeRole_tokenCode</a> - The
--   value provided by the MFA device, if the trust policy of the role
--   being assumed requires MFA. (In other words, if the policy includes a
--   condition that tests for MFA). If the role being assumed requires MFA
--   and if the <tt>TokenCode</tt> value is missing or expired, the
--   <tt>AssumeRole</tt> call returns an "access denied" error.
--   
--   The format for this parameter, as described by its regex pattern, is a
--   sequence of six numeric digits.
--   
--   <a>$sel:tags:AssumeRole'</a>, <a>assumeRole_tags</a> - A list of
--   session tags that you want to pass. Each session tag consists of a key
--   name and an associated value. For more information about session tags,
--   see <a>Tagging STS Sessions</a> in the <i>IAM User Guide</i>.
--   
--   This parameter is optional. You can pass up to 50 session tags. The
--   plaintext session tag keys can’t exceed 128 characters, and the values
--   can’t exceed 256 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   You can pass a session tag with the same key as a tag that is already
--   attached to the role. When you do, session tags override a role tag
--   with the same key.
--   
--   Tag key–value pairs are not case sensitive, but case is preserved.
--   This means that you cannot have separate <tt>Department</tt> and
--   <tt>department</tt> tag keys. Assume that the role has the
--   <tt>Department</tt>=<tt>Marketing</tt> tag and you pass the
--   <tt>department</tt>=<tt>engineering</tt> session tag.
--   <tt>Department</tt> and <tt>department</tt> are not saved as separate
--   tags, and the session tag passed in the request takes precedence over
--   the role tag.
--   
--   Additionally, if you used temporary credentials to perform this
--   operation, the new session inherits any transitive session tags from
--   the calling session. If you pass a session tag with the same key as an
--   inherited tag, the operation fails. To view the inherited tags for a
--   session, see the CloudTrail logs. For more information, see <a>Viewing
--   Session Tags in CloudTrail</a> in the <i>IAM User Guide</i>.
--   
--   <a>$sel:policyArns:AssumeRole'</a>, <a>assumeRole_policyArns</a> - The
--   Amazon Resource Names (ARNs) of the IAM managed policies that you want
--   to use as managed session policies. The policies must exist in the
--   same account as the role.
--   
--   This parameter is optional. You can provide up to 10 managed policy
--   ARNs. However, the plaintext that you use for both inline and managed
--   session policies can't exceed 2,048 characters. For more information
--   about ARNs, see <a>Amazon Resource Names (ARNs) and Amazon Web
--   Services Service Namespaces</a> in the Amazon Web Services General
--   Reference.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   Passing policies to this operation returns new temporary credentials.
--   The resulting session's permissions are the intersection of the role's
--   identity-based policy and the session policies. You can use the role's
--   temporary credentials in subsequent Amazon Web Services API calls to
--   access resources in the account that owns the role. You cannot use
--   session policies to grant more permissions than those allowed by the
--   identity-based policy of the role that is being assumed. For more
--   information, see <a>Session Policies</a> in the <i>IAM User Guide</i>.
--   
--   <a>$sel:serialNumber:AssumeRole'</a>, <a>assumeRole_serialNumber</a> -
--   The identification number of the MFA device that is associated with
--   the user who is making the <tt>AssumeRole</tt> call. Specify this
--   value if the trust policy of the role being assumed includes a
--   condition that requires MFA authentication. The value is either the
--   serial number for a hardware device (such as <tt>GAHT12345678</tt>) or
--   an Amazon Resource Name (ARN) for a virtual device (such as
--   <tt>arn:aws:iam::123456789012:mfa/user</tt>).
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
--   
--   <a>$sel:sourceIdentity:AssumeRole'</a>,
--   <a>assumeRole_sourceIdentity</a> - The source identity specified by
--   the principal that is calling the <tt>AssumeRole</tt> operation.
--   
--   You can require users to specify a source identity when they assume a
--   role. You do this by using the <tt>sts:SourceIdentity</tt> condition
--   key in a role trust policy. You can use source identity information in
--   CloudTrail logs to determine who took actions with a role. You can use
--   the <tt>aws:SourceIdentity</tt> condition key to further control
--   access to Amazon Web Services resources based on the value of source
--   identity. For more information about using source identity, see
--   <a>Monitor and control actions taken with assumed roles</a> in the
--   <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-. You cannot use a value that begins with the text
--   <tt>aws:</tt>. This prefix is reserved for Amazon Web Services
--   internal use.
--   
--   <a>$sel:transitiveTagKeys:AssumeRole'</a>,
--   <a>assumeRole_transitiveTagKeys</a> - A list of keys for session tags
--   that you want to set as transitive. If you set a tag key as
--   transitive, the corresponding key and value passes to subsequent
--   sessions in a role chain. For more information, see <a>Chaining Roles
--   with Session Tags</a> in the <i>IAM User Guide</i>.
--   
--   This parameter is optional. When you set session tags as transitive,
--   the session policy and session tags packed binary limit is not
--   affected.
--   
--   If you choose not to specify a transitive tag key, then no tags are
--   passed from this session to any subsequent sessions.
--   
--   <a>$sel:policy:AssumeRole'</a>, <a>assumeRole_policy</a> - An IAM
--   policy in JSON format that you want to use as an inline session
--   policy.
--   
--   This parameter is optional. Passing policies to this operation returns
--   new temporary credentials. The resulting session's permissions are the
--   intersection of the role's identity-based policy and the session
--   policies. You can use the role's temporary credentials in subsequent
--   Amazon Web Services API calls to access resources in the account that
--   owns the role. You cannot use session policies to grant more
--   permissions than those allowed by the identity-based policy of the
--   role that is being assumed. For more information, see <a>Session
--   Policies</a> in the <i>IAM User Guide</i>.
--   
--   The plaintext that you use for both inline and managed session
--   policies can't exceed 2,048 characters. The JSON policy characters can
--   be any ASCII character from the space character to the end of the
--   valid character list (\u0020 through \u00FF). It can also include the
--   tab (\u0009), linefeed (\u000A), and carriage return (\u000D)
--   characters.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   <a>$sel:externalId:AssumeRole'</a>, <a>assumeRole_externalId</a> - A
--   unique identifier that might be required when you assume a role in
--   another account. If the administrator of the account to which the role
--   belongs provided you with an external ID, then provide that value in
--   the <tt>ExternalId</tt> parameter. This value can be any string, such
--   as a passphrase or account number. A cross-account role is usually set
--   up to trust everyone in an account. Therefore, the administrator of
--   the trusting account might send an external ID to the administrator of
--   the trusted account. That way, only someone with the ID can assume the
--   role, rather than everyone in the account. For more information about
--   the external ID, see <a>How to Use an External ID When Granting Access
--   to Your Amazon Web Services Resources to a Third Party</a> in the
--   <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
--   
--   <a>$sel:durationSeconds:AssumeRole'</a>,
--   <a>assumeRole_durationSeconds</a> - The duration, in seconds, of the
--   role session. The value specified can can range from 900 seconds (15
--   minutes) up to the maximum session duration that is set for the role.
--   The maximum session duration setting can have a value from 1 hour to
--   12 hours. If you specify a value higher than this setting or the
--   administrator setting (whichever is lower), the operation fails. For
--   example, if you specify a session duration of 12 hours, but your
--   administrator set the maximum session duration to 6 hours, your
--   operation fails. To learn how to view the maximum value for your role,
--   see <a>View the Maximum Session Duration Setting for a Role</a> in the
--   <i>IAM User Guide</i>.
--   
--   By default, the value is set to <tt>3600</tt> seconds.
--   
--   The <tt>DurationSeconds</tt> parameter is separate from the duration
--   of a console session that you might request using the returned
--   credentials. The request to the federation endpoint for a console
--   sign-in token takes a <tt>SessionDuration</tt> parameter that
--   specifies the maximum length of the console session. For more
--   information, see <a>Creating a URL that Enables Federated Users to
--   Access the Management Console</a> in the <i>IAM User Guide</i>.
--   
--   <a>$sel:roleArn:AssumeRole'</a>, <a>assumeRole_roleArn</a> - The
--   Amazon Resource Name (ARN) of the role to assume.
--   
--   <a>$sel:roleSessionName:AssumeRole'</a>,
--   <a>assumeRole_roleSessionName</a> - An identifier for the assumed role
--   session.
--   
--   Use the role session name to uniquely identify a session when the same
--   role is assumed by different principals or for different reasons. In
--   cross-account scenarios, the role session name is visible to, and can
--   be logged by the account that owns the role. The role session name is
--   also used in the ARN of the assumed role principal. This means that
--   subsequent cross-account API requests that use the temporary security
--   credentials will expose the role session name to the external account
--   in their CloudTrail logs.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
newAssumeRole :: Text -> Text -> AssumeRole

-- | The value provided by the MFA device, if the trust policy of the role
--   being assumed requires MFA. (In other words, if the policy includes a
--   condition that tests for MFA). If the role being assumed requires MFA
--   and if the <tt>TokenCode</tt> value is missing or expired, the
--   <tt>AssumeRole</tt> call returns an "access denied" error.
--   
--   The format for this parameter, as described by its regex pattern, is a
--   sequence of six numeric digits.
assumeRole_tokenCode :: Lens' AssumeRole (Maybe Text)

-- | A list of session tags that you want to pass. Each session tag
--   consists of a key name and an associated value. For more information
--   about session tags, see <a>Tagging STS Sessions</a> in the <i>IAM User
--   Guide</i>.
--   
--   This parameter is optional. You can pass up to 50 session tags. The
--   plaintext session tag keys can’t exceed 128 characters, and the values
--   can’t exceed 256 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   You can pass a session tag with the same key as a tag that is already
--   attached to the role. When you do, session tags override a role tag
--   with the same key.
--   
--   Tag key–value pairs are not case sensitive, but case is preserved.
--   This means that you cannot have separate <tt>Department</tt> and
--   <tt>department</tt> tag keys. Assume that the role has the
--   <tt>Department</tt>=<tt>Marketing</tt> tag and you pass the
--   <tt>department</tt>=<tt>engineering</tt> session tag.
--   <tt>Department</tt> and <tt>department</tt> are not saved as separate
--   tags, and the session tag passed in the request takes precedence over
--   the role tag.
--   
--   Additionally, if you used temporary credentials to perform this
--   operation, the new session inherits any transitive session tags from
--   the calling session. If you pass a session tag with the same key as an
--   inherited tag, the operation fails. To view the inherited tags for a
--   session, see the CloudTrail logs. For more information, see <a>Viewing
--   Session Tags in CloudTrail</a> in the <i>IAM User Guide</i>.
assumeRole_tags :: Lens' AssumeRole (Maybe [Tag])

-- | The Amazon Resource Names (ARNs) of the IAM managed policies that you
--   want to use as managed session policies. The policies must exist in
--   the same account as the role.
--   
--   This parameter is optional. You can provide up to 10 managed policy
--   ARNs. However, the plaintext that you use for both inline and managed
--   session policies can't exceed 2,048 characters. For more information
--   about ARNs, see <a>Amazon Resource Names (ARNs) and Amazon Web
--   Services Service Namespaces</a> in the Amazon Web Services General
--   Reference.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   Passing policies to this operation returns new temporary credentials.
--   The resulting session's permissions are the intersection of the role's
--   identity-based policy and the session policies. You can use the role's
--   temporary credentials in subsequent Amazon Web Services API calls to
--   access resources in the account that owns the role. You cannot use
--   session policies to grant more permissions than those allowed by the
--   identity-based policy of the role that is being assumed. For more
--   information, see <a>Session Policies</a> in the <i>IAM User Guide</i>.
assumeRole_policyArns :: Lens' AssumeRole (Maybe [PolicyDescriptorType])

-- | The identification number of the MFA device that is associated with
--   the user who is making the <tt>AssumeRole</tt> call. Specify this
--   value if the trust policy of the role being assumed includes a
--   condition that requires MFA authentication. The value is either the
--   serial number for a hardware device (such as <tt>GAHT12345678</tt>) or
--   an Amazon Resource Name (ARN) for a virtual device (such as
--   <tt>arn:aws:iam::123456789012:mfa/user</tt>).
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
assumeRole_serialNumber :: Lens' AssumeRole (Maybe Text)

-- | The source identity specified by the principal that is calling the
--   <tt>AssumeRole</tt> operation.
--   
--   You can require users to specify a source identity when they assume a
--   role. You do this by using the <tt>sts:SourceIdentity</tt> condition
--   key in a role trust policy. You can use source identity information in
--   CloudTrail logs to determine who took actions with a role. You can use
--   the <tt>aws:SourceIdentity</tt> condition key to further control
--   access to Amazon Web Services resources based on the value of source
--   identity. For more information about using source identity, see
--   <a>Monitor and control actions taken with assumed roles</a> in the
--   <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-. You cannot use a value that begins with the text
--   <tt>aws:</tt>. This prefix is reserved for Amazon Web Services
--   internal use.
assumeRole_sourceIdentity :: Lens' AssumeRole (Maybe Text)

-- | A list of keys for session tags that you want to set as transitive. If
--   you set a tag key as transitive, the corresponding key and value
--   passes to subsequent sessions in a role chain. For more information,
--   see <a>Chaining Roles with Session Tags</a> in the <i>IAM User
--   Guide</i>.
--   
--   This parameter is optional. When you set session tags as transitive,
--   the session policy and session tags packed binary limit is not
--   affected.
--   
--   If you choose not to specify a transitive tag key, then no tags are
--   passed from this session to any subsequent sessions.
assumeRole_transitiveTagKeys :: Lens' AssumeRole (Maybe [Text])

-- | An IAM policy in JSON format that you want to use as an inline session
--   policy.
--   
--   This parameter is optional. Passing policies to this operation returns
--   new temporary credentials. The resulting session's permissions are the
--   intersection of the role's identity-based policy and the session
--   policies. You can use the role's temporary credentials in subsequent
--   Amazon Web Services API calls to access resources in the account that
--   owns the role. You cannot use session policies to grant more
--   permissions than those allowed by the identity-based policy of the
--   role that is being assumed. For more information, see <a>Session
--   Policies</a> in the <i>IAM User Guide</i>.
--   
--   The plaintext that you use for both inline and managed session
--   policies can't exceed 2,048 characters. The JSON policy characters can
--   be any ASCII character from the space character to the end of the
--   valid character list (\u0020 through \u00FF). It can also include the
--   tab (\u0009), linefeed (\u000A), and carriage return (\u000D)
--   characters.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
assumeRole_policy :: Lens' AssumeRole (Maybe Text)

-- | A unique identifier that might be required when you assume a role in
--   another account. If the administrator of the account to which the role
--   belongs provided you with an external ID, then provide that value in
--   the <tt>ExternalId</tt> parameter. This value can be any string, such
--   as a passphrase or account number. A cross-account role is usually set
--   up to trust everyone in an account. Therefore, the administrator of
--   the trusting account might send an external ID to the administrator of
--   the trusted account. That way, only someone with the ID can assume the
--   role, rather than everyone in the account. For more information about
--   the external ID, see <a>How to Use an External ID When Granting Access
--   to Your Amazon Web Services Resources to a Third Party</a> in the
--   <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
assumeRole_externalId :: Lens' AssumeRole (Maybe Text)

-- | The duration, in seconds, of the role session. The value specified can
--   can range from 900 seconds (15 minutes) up to the maximum session
--   duration that is set for the role. The maximum session duration
--   setting can have a value from 1 hour to 12 hours. If you specify a
--   value higher than this setting or the administrator setting (whichever
--   is lower), the operation fails. For example, if you specify a session
--   duration of 12 hours, but your administrator set the maximum session
--   duration to 6 hours, your operation fails. To learn how to view the
--   maximum value for your role, see <a>View the Maximum Session Duration
--   Setting for a Role</a> in the <i>IAM User Guide</i>.
--   
--   By default, the value is set to <tt>3600</tt> seconds.
--   
--   The <tt>DurationSeconds</tt> parameter is separate from the duration
--   of a console session that you might request using the returned
--   credentials. The request to the federation endpoint for a console
--   sign-in token takes a <tt>SessionDuration</tt> parameter that
--   specifies the maximum length of the console session. For more
--   information, see <a>Creating a URL that Enables Federated Users to
--   Access the Management Console</a> in the <i>IAM User Guide</i>.
assumeRole_durationSeconds :: Lens' AssumeRole (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the role to assume.
assumeRole_roleArn :: Lens' AssumeRole Text

-- | An identifier for the assumed role session.
--   
--   Use the role session name to uniquely identify a session when the same
--   role is assumed by different principals or for different reasons. In
--   cross-account scenarios, the role session name is visible to, and can
--   be logged by the account that owns the role. The role session name is
--   also used in the ARN of the assumed role principal. This means that
--   subsequent cross-account API requests that use the temporary security
--   credentials will expose the role session name to the external account
--   in their CloudTrail logs.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
assumeRole_roleSessionName :: Lens' AssumeRole Text

-- | Contains the response to a successful AssumeRole request, including
--   temporary Amazon Web Services credentials that can be used to make
--   Amazon Web Services requests.
--   
--   <i>See:</i> <a>newAssumeRoleResponse</a> smart constructor.
data AssumeRoleResponse
AssumeRoleResponse' :: Maybe Text -> Maybe AuthEnv -> Maybe AssumedRoleUser -> Maybe Natural -> Int -> AssumeRoleResponse

-- | The source identity specified by the principal that is calling the
--   <tt>AssumeRole</tt> operation.
--   
--   You can require users to specify a source identity when they assume a
--   role. You do this by using the <tt>sts:SourceIdentity</tt> condition
--   key in a role trust policy. You can use source identity information in
--   CloudTrail logs to determine who took actions with a role. You can use
--   the <tt>aws:SourceIdentity</tt> condition key to further control
--   access to Amazon Web Services resources based on the value of source
--   identity. For more information about using source identity, see
--   <a>Monitor and control actions taken with assumed roles</a> in the
--   <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
[$sel:sourceIdentity:AssumeRoleResponse'] :: AssumeRoleResponse -> Maybe Text

-- | The temporary security credentials, which include an access key ID, a
--   secret access key, and a security (or session) token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
[$sel:credentials:AssumeRoleResponse'] :: AssumeRoleResponse -> Maybe AuthEnv

-- | The Amazon Resource Name (ARN) and the assumed role ID, which are
--   identifiers that you can use to refer to the resulting temporary
--   security credentials. For example, you can reference these credentials
--   as a principal in a resource-based policy by using the ARN or assumed
--   role ID. The ARN and ID include the <tt>RoleSessionName</tt> that you
--   specified when you called <tt>AssumeRole</tt>.
[$sel:assumedRoleUser:AssumeRoleResponse'] :: AssumeRoleResponse -> Maybe AssumedRoleUser

-- | A percentage value that indicates the packed size of the session
--   policies and session tags combined passed in the request. The request
--   fails if the packed size is greater than 100 percent, which means the
--   policies and tags exceeded the allowed space.
[$sel:packedPolicySize:AssumeRoleResponse'] :: AssumeRoleResponse -> Maybe Natural

-- | The response's http status code.
[$sel:httpStatus:AssumeRoleResponse'] :: AssumeRoleResponse -> Int

-- | Create a value of <a>AssumeRoleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceIdentity:AssumeRole'</a>,
--   <a>assumeRoleResponse_sourceIdentity</a> - The source identity
--   specified by the principal that is calling the <tt>AssumeRole</tt>
--   operation.
--   
--   You can require users to specify a source identity when they assume a
--   role. You do this by using the <tt>sts:SourceIdentity</tt> condition
--   key in a role trust policy. You can use source identity information in
--   CloudTrail logs to determine who took actions with a role. You can use
--   the <tt>aws:SourceIdentity</tt> condition key to further control
--   access to Amazon Web Services resources based on the value of source
--   identity. For more information about using source identity, see
--   <a>Monitor and control actions taken with assumed roles</a> in the
--   <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
--   
--   <a>$sel:credentials:AssumeRoleResponse'</a>,
--   <a>assumeRoleResponse_credentials</a> - The temporary security
--   credentials, which include an access key ID, a secret access key, and
--   a security (or session) token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
--   
--   <a>$sel:assumedRoleUser:AssumeRoleResponse'</a>,
--   <a>assumeRoleResponse_assumedRoleUser</a> - The Amazon Resource Name
--   (ARN) and the assumed role ID, which are identifiers that you can use
--   to refer to the resulting temporary security credentials. For example,
--   you can reference these credentials as a principal in a resource-based
--   policy by using the ARN or assumed role ID. The ARN and ID include the
--   <tt>RoleSessionName</tt> that you specified when you called
--   <tt>AssumeRole</tt>.
--   
--   <a>$sel:packedPolicySize:AssumeRoleResponse'</a>,
--   <a>assumeRoleResponse_packedPolicySize</a> - A percentage value that
--   indicates the packed size of the session policies and session tags
--   combined passed in the request. The request fails if the packed size
--   is greater than 100 percent, which means the policies and tags
--   exceeded the allowed space.
--   
--   <a>$sel:httpStatus:AssumeRoleResponse'</a>,
--   <a>assumeRoleResponse_httpStatus</a> - The response's http status
--   code.
newAssumeRoleResponse :: Int -> AssumeRoleResponse

-- | The source identity specified by the principal that is calling the
--   <tt>AssumeRole</tt> operation.
--   
--   You can require users to specify a source identity when they assume a
--   role. You do this by using the <tt>sts:SourceIdentity</tt> condition
--   key in a role trust policy. You can use source identity information in
--   CloudTrail logs to determine who took actions with a role. You can use
--   the <tt>aws:SourceIdentity</tt> condition key to further control
--   access to Amazon Web Services resources based on the value of source
--   identity. For more information about using source identity, see
--   <a>Monitor and control actions taken with assumed roles</a> in the
--   <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
assumeRoleResponse_sourceIdentity :: Lens' AssumeRoleResponse (Maybe Text)

-- | The temporary security credentials, which include an access key ID, a
--   secret access key, and a security (or session) token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
assumeRoleResponse_credentials :: Lens' AssumeRoleResponse (Maybe AuthEnv)

-- | The Amazon Resource Name (ARN) and the assumed role ID, which are
--   identifiers that you can use to refer to the resulting temporary
--   security credentials. For example, you can reference these credentials
--   as a principal in a resource-based policy by using the ARN or assumed
--   role ID. The ARN and ID include the <tt>RoleSessionName</tt> that you
--   specified when you called <tt>AssumeRole</tt>.
assumeRoleResponse_assumedRoleUser :: Lens' AssumeRoleResponse (Maybe AssumedRoleUser)

-- | A percentage value that indicates the packed size of the session
--   policies and session tags combined passed in the request. The request
--   fails if the packed size is greater than 100 percent, which means the
--   policies and tags exceeded the allowed space.
assumeRoleResponse_packedPolicySize :: Lens' AssumeRoleResponse (Maybe Natural)

-- | The response's http status code.
assumeRoleResponse_httpStatus :: Lens' AssumeRoleResponse Int
instance GHC.Generics.Generic Network.AWS.STS.AssumeRole.AssumeRole
instance GHC.Show.Show Network.AWS.STS.AssumeRole.AssumeRole
instance GHC.Read.Read Network.AWS.STS.AssumeRole.AssumeRole
instance GHC.Classes.Eq Network.AWS.STS.AssumeRole.AssumeRole
instance GHC.Generics.Generic Network.AWS.STS.AssumeRole.AssumeRoleResponse
instance GHC.Show.Show Network.AWS.STS.AssumeRole.AssumeRoleResponse
instance GHC.Classes.Eq Network.AWS.STS.AssumeRole.AssumeRoleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.STS.AssumeRole.AssumeRole
instance Control.DeepSeq.NFData Network.AWS.STS.AssumeRole.AssumeRoleResponse
instance Data.Hashable.Class.Hashable Network.AWS.STS.AssumeRole.AssumeRole
instance Control.DeepSeq.NFData Network.AWS.STS.AssumeRole.AssumeRole
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.STS.AssumeRole.AssumeRole
instance Network.AWS.Data.Path.ToPath Network.AWS.STS.AssumeRole.AssumeRole
instance Network.AWS.Data.Query.ToQuery Network.AWS.STS.AssumeRole.AssumeRole


module Network.AWS.STS.Lens

-- | The fully qualified host component of the domain name of the identity
--   provider.
--   
--   Specify this value only for OAuth 2.0 access tokens. Currently
--   <tt>www.amazon.com</tt> and <tt>graph.facebook.com</tt> are the only
--   supported identity providers for OAuth 2.0 access tokens. Do not
--   include URL schemes and port numbers.
--   
--   Do not specify this value for OpenID Connect ID tokens.
assumeRoleWithWebIdentity_providerId :: Lens' AssumeRoleWithWebIdentity (Maybe Text)

-- | The Amazon Resource Names (ARNs) of the IAM managed policies that you
--   want to use as managed session policies. The policies must exist in
--   the same account as the role.
--   
--   This parameter is optional. You can provide up to 10 managed policy
--   ARNs. However, the plaintext that you use for both inline and managed
--   session policies can't exceed 2,048 characters. For more information
--   about ARNs, see <a>Amazon Resource Names (ARNs) and Amazon Web
--   Services Service Namespaces</a> in the Amazon Web Services General
--   Reference.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   Passing policies to this operation returns new temporary credentials.
--   The resulting session's permissions are the intersection of the role's
--   identity-based policy and the session policies. You can use the role's
--   temporary credentials in subsequent Amazon Web Services API calls to
--   access resources in the account that owns the role. You cannot use
--   session policies to grant more permissions than those allowed by the
--   identity-based policy of the role that is being assumed. For more
--   information, see <a>Session Policies</a> in the <i>IAM User Guide</i>.
assumeRoleWithWebIdentity_policyArns :: Lens' AssumeRoleWithWebIdentity (Maybe [PolicyDescriptorType])

-- | An IAM policy in JSON format that you want to use as an inline session
--   policy.
--   
--   This parameter is optional. Passing policies to this operation returns
--   new temporary credentials. The resulting session's permissions are the
--   intersection of the role's identity-based policy and the session
--   policies. You can use the role's temporary credentials in subsequent
--   Amazon Web Services API calls to access resources in the account that
--   owns the role. You cannot use session policies to grant more
--   permissions than those allowed by the identity-based policy of the
--   role that is being assumed. For more information, see <a>Session
--   Policies</a> in the <i>IAM User Guide</i>.
--   
--   The plaintext that you use for both inline and managed session
--   policies can't exceed 2,048 characters. The JSON policy characters can
--   be any ASCII character from the space character to the end of the
--   valid character list (\u0020 through \u00FF). It can also include the
--   tab (\u0009), linefeed (\u000A), and carriage return (\u000D)
--   characters.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
assumeRoleWithWebIdentity_policy :: Lens' AssumeRoleWithWebIdentity (Maybe Text)

-- | The duration, in seconds, of the role session. The value can range
--   from 900 seconds (15 minutes) up to the maximum session duration
--   setting for the role. This setting can have a value from 1 hour to 12
--   hours. If you specify a value higher than this setting, the operation
--   fails. For example, if you specify a session duration of 12 hours, but
--   your administrator set the maximum session duration to 6 hours, your
--   operation fails. To learn how to view the maximum value for your role,
--   see <a>View the Maximum Session Duration Setting for a Role</a> in the
--   <i>IAM User Guide</i>.
--   
--   By default, the value is set to <tt>3600</tt> seconds.
--   
--   The <tt>DurationSeconds</tt> parameter is separate from the duration
--   of a console session that you might request using the returned
--   credentials. The request to the federation endpoint for a console
--   sign-in token takes a <tt>SessionDuration</tt> parameter that
--   specifies the maximum length of the console session. For more
--   information, see <a>Creating a URL that Enables Federated Users to
--   Access the Management Console</a> in the <i>IAM User Guide</i>.
assumeRoleWithWebIdentity_durationSeconds :: Lens' AssumeRoleWithWebIdentity (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the role that the caller is
--   assuming.
assumeRoleWithWebIdentity_roleArn :: Lens' AssumeRoleWithWebIdentity Text

-- | An identifier for the assumed role session. Typically, you pass the
--   name or identifier that is associated with the user who is using your
--   application. That way, the temporary security credentials that your
--   application will use are associated with that user. This session name
--   is included as part of the ARN and assumed role ID in the
--   <tt>AssumedRoleUser</tt> response element.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
assumeRoleWithWebIdentity_roleSessionName :: Lens' AssumeRoleWithWebIdentity Text

-- | The OAuth 2.0 access token or OpenID Connect ID token that is provided
--   by the identity provider. Your application must get this token by
--   authenticating the user who is using your application with a web
--   identity provider before the application makes an
--   <tt>AssumeRoleWithWebIdentity</tt> call.
assumeRoleWithWebIdentity_webIdentityToken :: Lens' AssumeRoleWithWebIdentity Text

-- | The intended audience (also known as client ID) of the web identity
--   token. This is traditionally the client identifier issued to the
--   application that requested the web identity token.
assumeRoleWithWebIdentityResponse_audience :: Lens' AssumeRoleWithWebIdentityResponse (Maybe Text)

-- | The unique user identifier that is returned by the identity provider.
--   This identifier is associated with the <tt>WebIdentityToken</tt> that
--   was submitted with the <tt>AssumeRoleWithWebIdentity</tt> call. The
--   identifier is typically unique to the user and the application that
--   acquired the <tt>WebIdentityToken</tt> (pairwise identifier). For
--   OpenID Connect ID tokens, this field contains the value returned by
--   the identity provider as the token's <tt>sub</tt> (Subject) claim.
assumeRoleWithWebIdentityResponse_subjectFromWebIdentityToken :: Lens' AssumeRoleWithWebIdentityResponse (Maybe Text)

-- | The issuing authority of the web identity token presented. For OpenID
--   Connect ID tokens, this contains the value of the <tt>iss</tt> field.
--   For OAuth 2.0 access tokens, this contains the value of the
--   <tt>ProviderId</tt> parameter that was passed in the
--   <tt>AssumeRoleWithWebIdentity</tt> request.
assumeRoleWithWebIdentityResponse_provider :: Lens' AssumeRoleWithWebIdentityResponse (Maybe Text)

-- | The value of the source identity that is returned in the JSON web
--   token (JWT) from the identity provider.
--   
--   You can require users to set a source identity value when they assume
--   a role. You do this by using the <tt>sts:SourceIdentity</tt> condition
--   key in a role trust policy. That way, actions that are taken with the
--   role are associated with that user. After the source identity is set,
--   the value cannot be changed. It is present in the request for all
--   actions that are taken by the role and persists across <a>chained
--   role</a> sessions. You can configure your identity provider to use an
--   attribute associated with your users, like user name or email, as the
--   source identity when calling <tt>AssumeRoleWithWebIdentity</tt>. You
--   do this by adding a claim to the JSON web token. To learn more about
--   OIDC tokens and claims, see <a>Using Tokens with User Pools</a> in the
--   <i>Amazon Cognito Developer Guide</i>. For more information about
--   using source identity, see <a>Monitor and control actions taken with
--   assumed roles</a> in the <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
assumeRoleWithWebIdentityResponse_sourceIdentity :: Lens' AssumeRoleWithWebIdentityResponse (Maybe Text)

-- | The temporary security credentials, which include an access key ID, a
--   secret access key, and a security token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
assumeRoleWithWebIdentityResponse_credentials :: Lens' AssumeRoleWithWebIdentityResponse (Maybe AuthEnv)

-- | The Amazon Resource Name (ARN) and the assumed role ID, which are
--   identifiers that you can use to refer to the resulting temporary
--   security credentials. For example, you can reference these credentials
--   as a principal in a resource-based policy by using the ARN or assumed
--   role ID. The ARN and ID include the <tt>RoleSessionName</tt> that you
--   specified when you called <tt>AssumeRole</tt>.
assumeRoleWithWebIdentityResponse_assumedRoleUser :: Lens' AssumeRoleWithWebIdentityResponse (Maybe AssumedRoleUser)

-- | A percentage value that indicates the packed size of the session
--   policies and session tags combined passed in the request. The request
--   fails if the packed size is greater than 100 percent, which means the
--   policies and tags exceeded the allowed space.
assumeRoleWithWebIdentityResponse_packedPolicySize :: Lens' AssumeRoleWithWebIdentityResponse (Maybe Natural)

-- | The response's http status code.
assumeRoleWithWebIdentityResponse_httpStatus :: Lens' AssumeRoleWithWebIdentityResponse Int

-- | The identifier of an access key.
--   
--   This parameter allows (through its regex pattern) a string of
--   characters that can consist of any upper- or lowercase letter or
--   digit.
getAccessKeyInfo_accessKeyId :: Lens' GetAccessKeyInfo AccessKey

-- | The number used to identify the Amazon Web Services account.
getAccessKeyInfoResponse_account :: Lens' GetAccessKeyInfoResponse (Maybe Text)

-- | The response's http status code.
getAccessKeyInfoResponse_httpStatus :: Lens' GetAccessKeyInfoResponse Int

-- | The value provided by the MFA device, if MFA is required. If any
--   policy requires the IAM user to submit an MFA code, specify this
--   value. If MFA authentication is required, the user must provide a code
--   when requesting a set of temporary security credentials. A user who
--   fails to provide the code receives an "access denied" response when
--   requesting resources that require MFA authentication.
--   
--   The format for this parameter, as described by its regex pattern, is a
--   sequence of six numeric digits.
getSessionToken_tokenCode :: Lens' GetSessionToken (Maybe Text)

-- | The identification number of the MFA device that is associated with
--   the IAM user who is making the <tt>GetSessionToken</tt> call. Specify
--   this value if the IAM user has a policy that requires MFA
--   authentication. The value is either the serial number for a hardware
--   device (such as <tt>GAHT12345678</tt>) or an Amazon Resource Name
--   (ARN) for a virtual device (such as
--   <tt>arn:aws:iam::123456789012:mfa/user</tt>). You can find the device
--   for an IAM user by going to the Management Console and viewing the
--   user's security credentials.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
getSessionToken_serialNumber :: Lens' GetSessionToken (Maybe Text)

-- | The duration, in seconds, that the credentials should remain valid.
--   Acceptable durations for IAM user sessions range from 900 seconds (15
--   minutes) to 129,600 seconds (36 hours), with 43,200 seconds (12 hours)
--   as the default. Sessions for Amazon Web Services account owners are
--   restricted to a maximum of 3,600 seconds (one hour). If the duration
--   is longer than one hour, the session for Amazon Web Services account
--   owners defaults to one hour.
getSessionToken_durationSeconds :: Lens' GetSessionToken (Maybe Natural)

-- | The temporary security credentials, which include an access key ID, a
--   secret access key, and a security (or session) token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
getSessionTokenResponse_credentials :: Lens' GetSessionTokenResponse (Maybe AuthEnv)

-- | The response's http status code.
getSessionTokenResponse_httpStatus :: Lens' GetSessionTokenResponse Int

-- | The value provided by the MFA device, if the trust policy of the role
--   being assumed requires MFA. (In other words, if the policy includes a
--   condition that tests for MFA). If the role being assumed requires MFA
--   and if the <tt>TokenCode</tt> value is missing or expired, the
--   <tt>AssumeRole</tt> call returns an "access denied" error.
--   
--   The format for this parameter, as described by its regex pattern, is a
--   sequence of six numeric digits.
assumeRole_tokenCode :: Lens' AssumeRole (Maybe Text)

-- | A list of session tags that you want to pass. Each session tag
--   consists of a key name and an associated value. For more information
--   about session tags, see <a>Tagging STS Sessions</a> in the <i>IAM User
--   Guide</i>.
--   
--   This parameter is optional. You can pass up to 50 session tags. The
--   plaintext session tag keys can’t exceed 128 characters, and the values
--   can’t exceed 256 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   You can pass a session tag with the same key as a tag that is already
--   attached to the role. When you do, session tags override a role tag
--   with the same key.
--   
--   Tag key–value pairs are not case sensitive, but case is preserved.
--   This means that you cannot have separate <tt>Department</tt> and
--   <tt>department</tt> tag keys. Assume that the role has the
--   <tt>Department</tt>=<tt>Marketing</tt> tag and you pass the
--   <tt>department</tt>=<tt>engineering</tt> session tag.
--   <tt>Department</tt> and <tt>department</tt> are not saved as separate
--   tags, and the session tag passed in the request takes precedence over
--   the role tag.
--   
--   Additionally, if you used temporary credentials to perform this
--   operation, the new session inherits any transitive session tags from
--   the calling session. If you pass a session tag with the same key as an
--   inherited tag, the operation fails. To view the inherited tags for a
--   session, see the CloudTrail logs. For more information, see <a>Viewing
--   Session Tags in CloudTrail</a> in the <i>IAM User Guide</i>.
assumeRole_tags :: Lens' AssumeRole (Maybe [Tag])

-- | The Amazon Resource Names (ARNs) of the IAM managed policies that you
--   want to use as managed session policies. The policies must exist in
--   the same account as the role.
--   
--   This parameter is optional. You can provide up to 10 managed policy
--   ARNs. However, the plaintext that you use for both inline and managed
--   session policies can't exceed 2,048 characters. For more information
--   about ARNs, see <a>Amazon Resource Names (ARNs) and Amazon Web
--   Services Service Namespaces</a> in the Amazon Web Services General
--   Reference.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   Passing policies to this operation returns new temporary credentials.
--   The resulting session's permissions are the intersection of the role's
--   identity-based policy and the session policies. You can use the role's
--   temporary credentials in subsequent Amazon Web Services API calls to
--   access resources in the account that owns the role. You cannot use
--   session policies to grant more permissions than those allowed by the
--   identity-based policy of the role that is being assumed. For more
--   information, see <a>Session Policies</a> in the <i>IAM User Guide</i>.
assumeRole_policyArns :: Lens' AssumeRole (Maybe [PolicyDescriptorType])

-- | The identification number of the MFA device that is associated with
--   the user who is making the <tt>AssumeRole</tt> call. Specify this
--   value if the trust policy of the role being assumed includes a
--   condition that requires MFA authentication. The value is either the
--   serial number for a hardware device (such as <tt>GAHT12345678</tt>) or
--   an Amazon Resource Name (ARN) for a virtual device (such as
--   <tt>arn:aws:iam::123456789012:mfa/user</tt>).
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
assumeRole_serialNumber :: Lens' AssumeRole (Maybe Text)

-- | The source identity specified by the principal that is calling the
--   <tt>AssumeRole</tt> operation.
--   
--   You can require users to specify a source identity when they assume a
--   role. You do this by using the <tt>sts:SourceIdentity</tt> condition
--   key in a role trust policy. You can use source identity information in
--   CloudTrail logs to determine who took actions with a role. You can use
--   the <tt>aws:SourceIdentity</tt> condition key to further control
--   access to Amazon Web Services resources based on the value of source
--   identity. For more information about using source identity, see
--   <a>Monitor and control actions taken with assumed roles</a> in the
--   <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-. You cannot use a value that begins with the text
--   <tt>aws:</tt>. This prefix is reserved for Amazon Web Services
--   internal use.
assumeRole_sourceIdentity :: Lens' AssumeRole (Maybe Text)

-- | A list of keys for session tags that you want to set as transitive. If
--   you set a tag key as transitive, the corresponding key and value
--   passes to subsequent sessions in a role chain. For more information,
--   see <a>Chaining Roles with Session Tags</a> in the <i>IAM User
--   Guide</i>.
--   
--   This parameter is optional. When you set session tags as transitive,
--   the session policy and session tags packed binary limit is not
--   affected.
--   
--   If you choose not to specify a transitive tag key, then no tags are
--   passed from this session to any subsequent sessions.
assumeRole_transitiveTagKeys :: Lens' AssumeRole (Maybe [Text])

-- | An IAM policy in JSON format that you want to use as an inline session
--   policy.
--   
--   This parameter is optional. Passing policies to this operation returns
--   new temporary credentials. The resulting session's permissions are the
--   intersection of the role's identity-based policy and the session
--   policies. You can use the role's temporary credentials in subsequent
--   Amazon Web Services API calls to access resources in the account that
--   owns the role. You cannot use session policies to grant more
--   permissions than those allowed by the identity-based policy of the
--   role that is being assumed. For more information, see <a>Session
--   Policies</a> in the <i>IAM User Guide</i>.
--   
--   The plaintext that you use for both inline and managed session
--   policies can't exceed 2,048 characters. The JSON policy characters can
--   be any ASCII character from the space character to the end of the
--   valid character list (\u0020 through \u00FF). It can also include the
--   tab (\u0009), linefeed (\u000A), and carriage return (\u000D)
--   characters.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
assumeRole_policy :: Lens' AssumeRole (Maybe Text)

-- | A unique identifier that might be required when you assume a role in
--   another account. If the administrator of the account to which the role
--   belongs provided you with an external ID, then provide that value in
--   the <tt>ExternalId</tt> parameter. This value can be any string, such
--   as a passphrase or account number. A cross-account role is usually set
--   up to trust everyone in an account. Therefore, the administrator of
--   the trusting account might send an external ID to the administrator of
--   the trusted account. That way, only someone with the ID can assume the
--   role, rather than everyone in the account. For more information about
--   the external ID, see <a>How to Use an External ID When Granting Access
--   to Your Amazon Web Services Resources to a Third Party</a> in the
--   <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
assumeRole_externalId :: Lens' AssumeRole (Maybe Text)

-- | The duration, in seconds, of the role session. The value specified can
--   can range from 900 seconds (15 minutes) up to the maximum session
--   duration that is set for the role. The maximum session duration
--   setting can have a value from 1 hour to 12 hours. If you specify a
--   value higher than this setting or the administrator setting (whichever
--   is lower), the operation fails. For example, if you specify a session
--   duration of 12 hours, but your administrator set the maximum session
--   duration to 6 hours, your operation fails. To learn how to view the
--   maximum value for your role, see <a>View the Maximum Session Duration
--   Setting for a Role</a> in the <i>IAM User Guide</i>.
--   
--   By default, the value is set to <tt>3600</tt> seconds.
--   
--   The <tt>DurationSeconds</tt> parameter is separate from the duration
--   of a console session that you might request using the returned
--   credentials. The request to the federation endpoint for a console
--   sign-in token takes a <tt>SessionDuration</tt> parameter that
--   specifies the maximum length of the console session. For more
--   information, see <a>Creating a URL that Enables Federated Users to
--   Access the Management Console</a> in the <i>IAM User Guide</i>.
assumeRole_durationSeconds :: Lens' AssumeRole (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the role to assume.
assumeRole_roleArn :: Lens' AssumeRole Text

-- | An identifier for the assumed role session.
--   
--   Use the role session name to uniquely identify a session when the same
--   role is assumed by different principals or for different reasons. In
--   cross-account scenarios, the role session name is visible to, and can
--   be logged by the account that owns the role. The role session name is
--   also used in the ARN of the assumed role principal. This means that
--   subsequent cross-account API requests that use the temporary security
--   credentials will expose the role session name to the external account
--   in their CloudTrail logs.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
assumeRole_roleSessionName :: Lens' AssumeRole Text

-- | The source identity specified by the principal that is calling the
--   <tt>AssumeRole</tt> operation.
--   
--   You can require users to specify a source identity when they assume a
--   role. You do this by using the <tt>sts:SourceIdentity</tt> condition
--   key in a role trust policy. You can use source identity information in
--   CloudTrail logs to determine who took actions with a role. You can use
--   the <tt>aws:SourceIdentity</tt> condition key to further control
--   access to Amazon Web Services resources based on the value of source
--   identity. For more information about using source identity, see
--   <a>Monitor and control actions taken with assumed roles</a> in the
--   <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
assumeRoleResponse_sourceIdentity :: Lens' AssumeRoleResponse (Maybe Text)

-- | The temporary security credentials, which include an access key ID, a
--   secret access key, and a security (or session) token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
assumeRoleResponse_credentials :: Lens' AssumeRoleResponse (Maybe AuthEnv)

-- | The Amazon Resource Name (ARN) and the assumed role ID, which are
--   identifiers that you can use to refer to the resulting temporary
--   security credentials. For example, you can reference these credentials
--   as a principal in a resource-based policy by using the ARN or assumed
--   role ID. The ARN and ID include the <tt>RoleSessionName</tt> that you
--   specified when you called <tt>AssumeRole</tt>.
assumeRoleResponse_assumedRoleUser :: Lens' AssumeRoleResponse (Maybe AssumedRoleUser)

-- | A percentage value that indicates the packed size of the session
--   policies and session tags combined passed in the request. The request
--   fails if the packed size is greater than 100 percent, which means the
--   policies and tags exceeded the allowed space.
assumeRoleResponse_packedPolicySize :: Lens' AssumeRoleResponse (Maybe Natural)

-- | The response's http status code.
assumeRoleResponse_httpStatus :: Lens' AssumeRoleResponse Int

-- | The Amazon Web Services ARN associated with the calling entity.
getCallerIdentityResponse_arn :: Lens' GetCallerIdentityResponse (Maybe Text)

-- | The unique identifier of the calling entity. The exact value depends
--   on the type of entity that is making the call. The values returned are
--   those listed in the <b>aws:userid</b> column in the <a>Principal
--   table</a> found on the <b>Policy Variables</b> reference page in the
--   /IAM User Guide/.
getCallerIdentityResponse_userId :: Lens' GetCallerIdentityResponse (Maybe Text)

-- | The Amazon Web Services account ID number of the account that owns or
--   contains the calling entity.
getCallerIdentityResponse_account :: Lens' GetCallerIdentityResponse (Maybe Text)

-- | The response's http status code.
getCallerIdentityResponse_httpStatus :: Lens' GetCallerIdentityResponse Int

-- | The encoded message that was returned with the response.
decodeAuthorizationMessage_encodedMessage :: Lens' DecodeAuthorizationMessage Text

-- | An XML document that contains the decoded message.
decodeAuthorizationMessageResponse_decodedMessage :: Lens' DecodeAuthorizationMessageResponse (Maybe Text)

-- | The response's http status code.
decodeAuthorizationMessageResponse_httpStatus :: Lens' DecodeAuthorizationMessageResponse Int

-- | The Amazon Resource Names (ARNs) of the IAM managed policies that you
--   want to use as managed session policies. The policies must exist in
--   the same account as the role.
--   
--   This parameter is optional. You can provide up to 10 managed policy
--   ARNs. However, the plaintext that you use for both inline and managed
--   session policies can't exceed 2,048 characters. For more information
--   about ARNs, see <a>Amazon Resource Names (ARNs) and Amazon Web
--   Services Service Namespaces</a> in the Amazon Web Services General
--   Reference.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   Passing policies to this operation returns new temporary credentials.
--   The resulting session's permissions are the intersection of the role's
--   identity-based policy and the session policies. You can use the role's
--   temporary credentials in subsequent Amazon Web Services API calls to
--   access resources in the account that owns the role. You cannot use
--   session policies to grant more permissions than those allowed by the
--   identity-based policy of the role that is being assumed. For more
--   information, see <a>Session Policies</a> in the <i>IAM User Guide</i>.
assumeRoleWithSAML_policyArns :: Lens' AssumeRoleWithSAML (Maybe [PolicyDescriptorType])

-- | An IAM policy in JSON format that you want to use as an inline session
--   policy.
--   
--   This parameter is optional. Passing policies to this operation returns
--   new temporary credentials. The resulting session's permissions are the
--   intersection of the role's identity-based policy and the session
--   policies. You can use the role's temporary credentials in subsequent
--   Amazon Web Services API calls to access resources in the account that
--   owns the role. You cannot use session policies to grant more
--   permissions than those allowed by the identity-based policy of the
--   role that is being assumed. For more information, see <a>Session
--   Policies</a> in the <i>IAM User Guide</i>.
--   
--   The plaintext that you use for both inline and managed session
--   policies can't exceed 2,048 characters. The JSON policy characters can
--   be any ASCII character from the space character to the end of the
--   valid character list (\u0020 through \u00FF). It can also include the
--   tab (\u0009), linefeed (\u000A), and carriage return (\u000D)
--   characters.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
assumeRoleWithSAML_policy :: Lens' AssumeRoleWithSAML (Maybe Text)

-- | The duration, in seconds, of the role session. Your role session lasts
--   for the duration that you specify for the <tt>DurationSeconds</tt>
--   parameter, or until the time specified in the SAML authentication
--   response's <tt>SessionNotOnOrAfter</tt> value, whichever is shorter.
--   You can provide a <tt>DurationSeconds</tt> value from 900 seconds (15
--   minutes) up to the maximum session duration setting for the role. This
--   setting can have a value from 1 hour to 12 hours. If you specify a
--   value higher than this setting, the operation fails. For example, if
--   you specify a session duration of 12 hours, but your administrator set
--   the maximum session duration to 6 hours, your operation fails. To
--   learn how to view the maximum value for your role, see <a>View the
--   Maximum Session Duration Setting for a Role</a> in the <i>IAM User
--   Guide</i>.
--   
--   By default, the value is set to <tt>3600</tt> seconds.
--   
--   The <tt>DurationSeconds</tt> parameter is separate from the duration
--   of a console session that you might request using the returned
--   credentials. The request to the federation endpoint for a console
--   sign-in token takes a <tt>SessionDuration</tt> parameter that
--   specifies the maximum length of the console session. For more
--   information, see <a>Creating a URL that Enables Federated Users to
--   Access the Management Console</a> in the <i>IAM User Guide</i>.
assumeRoleWithSAML_durationSeconds :: Lens' AssumeRoleWithSAML (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the role that the caller is
--   assuming.
assumeRoleWithSAML_roleArn :: Lens' AssumeRoleWithSAML Text

-- | The Amazon Resource Name (ARN) of the SAML provider in IAM that
--   describes the IdP.
assumeRoleWithSAML_principalArn :: Lens' AssumeRoleWithSAML Text

-- | The base64 encoded SAML authentication response provided by the IdP.
--   
--   For more information, see <a>Configuring a Relying Party and Adding
--   Claims</a> in the <i>IAM User Guide</i>.
assumeRoleWithSAML_sAMLAssertion :: Lens' AssumeRoleWithSAML Text

-- | A hash value based on the concatenation of the following:
--   
--   <ul>
--   <li>The <tt>Issuer</tt> response value.</li>
--   <li>The Amazon Web Services account ID.</li>
--   <li>The friendly name (the last part of the ARN) of the SAML provider
--   in IAM.</li>
--   </ul>
--   
--   The combination of <tt>NameQualifier</tt> and <tt>Subject</tt> can be
--   used to uniquely identify a federated user.
--   
--   The following pseudocode shows how the hash value is calculated:
--   
--   <pre>
--   BASE64 ( SHA1 ( "https://example.com/saml" + "123456789012" + "/MySAMLIdP" ) )
--   </pre>
assumeRoleWithSAMLResponse_nameQualifier :: Lens' AssumeRoleWithSAMLResponse (Maybe Text)

-- | The value of the <tt>Recipient</tt> attribute of the
--   <tt>SubjectConfirmationData</tt> element of the SAML assertion.
assumeRoleWithSAMLResponse_audience :: Lens' AssumeRoleWithSAMLResponse (Maybe Text)

-- | The format of the name ID, as defined by the <tt>Format</tt> attribute
--   in the <tt>NameID</tt> element of the SAML assertion. Typical examples
--   of the format are <tt>transient</tt> or <tt>persistent</tt>.
--   
--   If the format includes the prefix
--   <tt>urn:oasis:names:tc:SAML:2.0:nameid-format</tt>, that prefix is
--   removed. For example,
--   <tt>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</tt> is
--   returned as <tt>transient</tt>. If the format includes any other
--   prefix, the format is returned with no modifications.
assumeRoleWithSAMLResponse_subjectType :: Lens' AssumeRoleWithSAMLResponse (Maybe Text)

-- | The value of the <tt>NameID</tt> element in the <tt>Subject</tt>
--   element of the SAML assertion.
assumeRoleWithSAMLResponse_subject :: Lens' AssumeRoleWithSAMLResponse (Maybe Text)

-- | The value in the <tt>SourceIdentity</tt> attribute in the SAML
--   assertion.
--   
--   You can require users to set a source identity value when they assume
--   a role. You do this by using the <tt>sts:SourceIdentity</tt> condition
--   key in a role trust policy. That way, actions that are taken with the
--   role are associated with that user. After the source identity is set,
--   the value cannot be changed. It is present in the request for all
--   actions that are taken by the role and persists across <a>chained
--   role</a> sessions. You can configure your SAML identity provider to
--   use an attribute associated with your users, like user name or email,
--   as the source identity when calling <tt>AssumeRoleWithSAML</tt>. You
--   do this by adding an attribute to the SAML assertion. For more
--   information about using source identity, see <a>Monitor and control
--   actions taken with assumed roles</a> in the <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
assumeRoleWithSAMLResponse_sourceIdentity :: Lens' AssumeRoleWithSAMLResponse (Maybe Text)

-- | The value of the <tt>Issuer</tt> element of the SAML assertion.
assumeRoleWithSAMLResponse_issuer :: Lens' AssumeRoleWithSAMLResponse (Maybe Text)

-- | The temporary security credentials, which include an access key ID, a
--   secret access key, and a security (or session) token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
assumeRoleWithSAMLResponse_credentials :: Lens' AssumeRoleWithSAMLResponse (Maybe AuthEnv)

-- | The identifiers for the temporary security credentials that the
--   operation returns.
assumeRoleWithSAMLResponse_assumedRoleUser :: Lens' AssumeRoleWithSAMLResponse (Maybe AssumedRoleUser)

-- | A percentage value that indicates the packed size of the session
--   policies and session tags combined passed in the request. The request
--   fails if the packed size is greater than 100 percent, which means the
--   policies and tags exceeded the allowed space.
assumeRoleWithSAMLResponse_packedPolicySize :: Lens' AssumeRoleWithSAMLResponse (Maybe Natural)

-- | The response's http status code.
assumeRoleWithSAMLResponse_httpStatus :: Lens' AssumeRoleWithSAMLResponse Int

-- | A list of session tags. Each session tag consists of a key name and an
--   associated value. For more information about session tags, see
--   <a>Passing Session Tags in STS</a> in the <i>IAM User Guide</i>.
--   
--   This parameter is optional. You can pass up to 50 session tags. The
--   plaintext session tag keys can’t exceed 128 characters and the values
--   can’t exceed 256 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   You can pass a session tag with the same key as a tag that is already
--   attached to the user you are federating. When you do, session tags
--   override a user tag with the same key.
--   
--   Tag key–value pairs are not case sensitive, but case is preserved.
--   This means that you cannot have separate <tt>Department</tt> and
--   <tt>department</tt> tag keys. Assume that the role has the
--   <tt>Department</tt>=<tt>Marketing</tt> tag and you pass the
--   <tt>department</tt>=<tt>engineering</tt> session tag.
--   <tt>Department</tt> and <tt>department</tt> are not saved as separate
--   tags, and the session tag passed in the request takes precedence over
--   the role tag.
getFederationToken_tags :: Lens' GetFederationToken (Maybe [Tag])

-- | The Amazon Resource Names (ARNs) of the IAM managed policies that you
--   want to use as a managed session policy. The policies must exist in
--   the same account as the IAM user that is requesting federated access.
--   
--   You must pass an inline or managed <a>session policy</a> to this
--   operation. You can pass a single JSON policy document to use as an
--   inline session policy. You can also specify up to 10 managed policies
--   to use as managed session policies. The plaintext that you use for
--   both inline and managed session policies can't exceed 2,048
--   characters. You can provide up to 10 managed policy ARNs. For more
--   information about ARNs, see <a>Amazon Resource Names (ARNs) and Amazon
--   Web Services Service Namespaces</a> in the Amazon Web Services General
--   Reference.
--   
--   This parameter is optional. However, if you do not pass any session
--   policies, then the resulting federated user session has no
--   permissions.
--   
--   When you pass session policies, the session permissions are the
--   intersection of the IAM user policies and the session policies that
--   you pass. This gives you a way to further restrict the permissions for
--   a federated user. You cannot use session policies to grant more
--   permissions than those that are defined in the permissions policy of
--   the IAM user. For more information, see <a>Session Policies</a> in the
--   <i>IAM User Guide</i>.
--   
--   The resulting credentials can be used to access a resource that has a
--   resource-based policy. If that policy specifically references the
--   federated user session in the <tt>Principal</tt> element of the
--   policy, the session has the permissions allowed by the policy. These
--   permissions are granted in addition to the permissions that are
--   granted by the session policies.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
getFederationToken_policyArns :: Lens' GetFederationToken (Maybe [PolicyDescriptorType])

-- | An IAM policy in JSON format that you want to use as an inline session
--   policy.
--   
--   You must pass an inline or managed <a>session policy</a> to this
--   operation. You can pass a single JSON policy document to use as an
--   inline session policy. You can also specify up to 10 managed policies
--   to use as managed session policies.
--   
--   This parameter is optional. However, if you do not pass any session
--   policies, then the resulting federated user session has no
--   permissions.
--   
--   When you pass session policies, the session permissions are the
--   intersection of the IAM user policies and the session policies that
--   you pass. This gives you a way to further restrict the permissions for
--   a federated user. You cannot use session policies to grant more
--   permissions than those that are defined in the permissions policy of
--   the IAM user. For more information, see <a>Session Policies</a> in the
--   <i>IAM User Guide</i>.
--   
--   The resulting credentials can be used to access a resource that has a
--   resource-based policy. If that policy specifically references the
--   federated user session in the <tt>Principal</tt> element of the
--   policy, the session has the permissions allowed by the policy. These
--   permissions are granted in addition to the permissions that are
--   granted by the session policies.
--   
--   The plaintext that you use for both inline and managed session
--   policies can't exceed 2,048 characters. The JSON policy characters can
--   be any ASCII character from the space character to the end of the
--   valid character list (\u0020 through \u00FF). It can also include the
--   tab (\u0009), linefeed (\u000A), and carriage return (\u000D)
--   characters.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
getFederationToken_policy :: Lens' GetFederationToken (Maybe Text)

-- | The duration, in seconds, that the session should last. Acceptable
--   durations for federation sessions range from 900 seconds (15 minutes)
--   to 129,600 seconds (36 hours), with 43,200 seconds (12 hours) as the
--   default. Sessions obtained using Amazon Web Services account root user
--   credentials are restricted to a maximum of 3,600 seconds (one hour).
--   If the specified duration is longer than one hour, the session
--   obtained by using root user credentials defaults to one hour.
getFederationToken_durationSeconds :: Lens' GetFederationToken (Maybe Natural)

-- | The name of the federated user. The name is used as an identifier for
--   the temporary security credentials (such as <tt>Bob</tt>). For
--   example, you can reference the federated user name in a resource-based
--   policy, such as in an Amazon S3 bucket policy.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
getFederationToken_name :: Lens' GetFederationToken Text

-- | The temporary security credentials, which include an access key ID, a
--   secret access key, and a security (or session) token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
getFederationTokenResponse_credentials :: Lens' GetFederationTokenResponse (Maybe AuthEnv)

-- | Identifiers for the federated user associated with the credentials
--   (such as <tt>arn:aws:sts::123456789012:federated-user/Bob</tt> or
--   <tt>123456789012:Bob</tt>). You can use the federated user's ARN in
--   your resource-based policies, such as an Amazon S3 bucket policy.
getFederationTokenResponse_federatedUser :: Lens' GetFederationTokenResponse (Maybe FederatedUser)

-- | A percentage value that indicates the packed size of the session
--   policies and session tags combined passed in the request. The request
--   fails if the packed size is greater than 100 percent, which means the
--   policies and tags exceeded the allowed space.
getFederationTokenResponse_packedPolicySize :: Lens' GetFederationTokenResponse (Maybe Natural)

-- | The response's http status code.
getFederationTokenResponse_httpStatus :: Lens' GetFederationTokenResponse Int

-- | A unique identifier that contains the role ID and the role session
--   name of the role that is being assumed. The role ID is generated by
--   Amazon Web Services when the role is created.
assumedRoleUser_assumedRoleId :: Lens' AssumedRoleUser Text

-- | The ARN of the temporary security credentials that are returned from
--   the AssumeRole action. For more information about ARNs and how to use
--   them in policies, see <a>IAM Identifiers</a> in the <i>IAM User
--   Guide</i>.
assumedRoleUser_arn :: Lens' AssumedRoleUser Text

-- | The string that identifies the federated user associated with the
--   credentials, similar to the unique ID of an IAM user.
federatedUser_federatedUserId :: Lens' FederatedUser Text

-- | The ARN that specifies the federated user that is associated with the
--   credentials. For more information about ARNs and how to use them in
--   policies, see <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
federatedUser_arn :: Lens' FederatedUser Text

-- | The Amazon Resource Name (ARN) of the IAM managed policy to use as a
--   session policy for the role. For more information about ARNs, see
--   <a>Amazon Resource Names (ARNs) and Amazon Web Services Service
--   Namespaces</a> in the <i>Amazon Web Services General Reference</i>.
policyDescriptorType_arn :: Lens' PolicyDescriptorType (Maybe Text)

-- | The key for a session tag.
--   
--   You can pass up to 50 session tags. The plain text session tag keys
--   can’t exceed 128 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
tag_key :: Lens' Tag Text

-- | The value for a session tag.
--   
--   You can pass up to 50 session tags. The plain text session tag values
--   can’t exceed 256 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
tag_value :: Lens' Tag Text


module Network.AWS.STS.Waiters


-- | Derived from API version <tt>2011-06-15</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Security Token Service
--   
--   Security Token Service (STS) enables you to request temporary,
--   limited-privilege credentials for Identity and Access Management (IAM)
--   users or for users that you authenticate (federated users). This guide
--   provides descriptions of the STS API. For more information about using
--   this service, see <a>Temporary Security Credentials</a>.
module Network.AWS.STS

-- | API version <tt>2011-06-15</tt> of the Amazon Security Token Service
--   SDK configuration.
defaultService :: Service

-- | STS is not activated in the requested region for the account that is
--   being asked to generate credentials. The account administrator must
--   use the IAM console to activate STS in that region. For more
--   information, see <a>Activating and Deactivating Amazon Web Services
--   STS in an Amazon Web Services Region</a> in the <i>IAM User Guide</i>.
_RegionDisabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was rejected because the policy document was malformed.
--   The error message describes the specific error.
_MalformedPolicyDocumentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was rejected because the total packed size of the session
--   policies and session tags combined was too large. An Amazon Web
--   Services conversion compresses the session policy document, session
--   policy ARNs, and session tags into a packed binary format that has a
--   separate limit. The error message indicates by percentage how close
--   the policies and tags are to the upper size limit. For more
--   information, see <a>Passing Session Tags in STS</a> in the <i>IAM User
--   Guide</i>.
--   
--   You could receive this error even though you meet other defined
--   session policy and session tag limits. For more information, see
--   <a>IAM and STS Entity Character Limits</a> in the <i>IAM User
--   Guide</i>.
_PackedPolicyTooLargeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The web identity token that was passed could not be validated by
--   Amazon Web Services. Get a new identity token from the identity
--   provider and then retry the request.
_InvalidIdentityTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The web identity token that was passed is expired or is not valid. Get
--   a new identity token from the identity provider and then retry the
--   request.
_ExpiredTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The error returned if the message passed to
--   <tt>DecodeAuthorizationMessage</tt> was invalid. This can happen if
--   the token contains invalid characters, such as linebreaks.
_InvalidAuthorizationMessageException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The identity provider (IdP) reported that authentication failed. This
--   might be because the claim is invalid.
--   
--   If this error is returned for the <tt>AssumeRoleWithWebIdentity</tt>
--   operation, it can also mean that the claim has expired or has been
--   explicitly revoked.
_IDPRejectedClaimException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request could not be fulfilled because the identity provider (IDP)
--   that was asked to verify the incoming identity token could not be
--   reached. This is often a transient error caused by network conditions.
--   Retry the request a limited number of times so that you don't exceed
--   the request rate. If the error persists, the identity provider might
--   be down or not responding.
_IDPCommunicationErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newAssumeRoleWithWebIdentity</a> smart constructor.
data AssumeRoleWithWebIdentity
AssumeRoleWithWebIdentity' :: Maybe Text -> Maybe [PolicyDescriptorType] -> Maybe Text -> Maybe Natural -> Text -> Text -> Text -> AssumeRoleWithWebIdentity

-- | Create a value of <a>AssumeRoleWithWebIdentity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:providerId:AssumeRoleWithWebIdentity'</a>,
--   <a>assumeRoleWithWebIdentity_providerId</a> - The fully qualified host
--   component of the domain name of the identity provider.
--   
--   Specify this value only for OAuth 2.0 access tokens. Currently
--   <tt>www.amazon.com</tt> and <tt>graph.facebook.com</tt> are the only
--   supported identity providers for OAuth 2.0 access tokens. Do not
--   include URL schemes and port numbers.
--   
--   Do not specify this value for OpenID Connect ID tokens.
--   
--   <a>$sel:policyArns:AssumeRoleWithWebIdentity'</a>,
--   <a>assumeRoleWithWebIdentity_policyArns</a> - The Amazon Resource
--   Names (ARNs) of the IAM managed policies that you want to use as
--   managed session policies. The policies must exist in the same account
--   as the role.
--   
--   This parameter is optional. You can provide up to 10 managed policy
--   ARNs. However, the plaintext that you use for both inline and managed
--   session policies can't exceed 2,048 characters. For more information
--   about ARNs, see <a>Amazon Resource Names (ARNs) and Amazon Web
--   Services Service Namespaces</a> in the Amazon Web Services General
--   Reference.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   Passing policies to this operation returns new temporary credentials.
--   The resulting session's permissions are the intersection of the role's
--   identity-based policy and the session policies. You can use the role's
--   temporary credentials in subsequent Amazon Web Services API calls to
--   access resources in the account that owns the role. You cannot use
--   session policies to grant more permissions than those allowed by the
--   identity-based policy of the role that is being assumed. For more
--   information, see <a>Session Policies</a> in the <i>IAM User Guide</i>.
--   
--   <a>$sel:policy:AssumeRoleWithWebIdentity'</a>,
--   <a>assumeRoleWithWebIdentity_policy</a> - An IAM policy in JSON format
--   that you want to use as an inline session policy.
--   
--   This parameter is optional. Passing policies to this operation returns
--   new temporary credentials. The resulting session's permissions are the
--   intersection of the role's identity-based policy and the session
--   policies. You can use the role's temporary credentials in subsequent
--   Amazon Web Services API calls to access resources in the account that
--   owns the role. You cannot use session policies to grant more
--   permissions than those allowed by the identity-based policy of the
--   role that is being assumed. For more information, see <a>Session
--   Policies</a> in the <i>IAM User Guide</i>.
--   
--   The plaintext that you use for both inline and managed session
--   policies can't exceed 2,048 characters. The JSON policy characters can
--   be any ASCII character from the space character to the end of the
--   valid character list (\u0020 through \u00FF). It can also include the
--   tab (\u0009), linefeed (\u000A), and carriage return (\u000D)
--   characters.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   <a>$sel:durationSeconds:AssumeRoleWithWebIdentity'</a>,
--   <a>assumeRoleWithWebIdentity_durationSeconds</a> - The duration, in
--   seconds, of the role session. The value can range from 900 seconds (15
--   minutes) up to the maximum session duration setting for the role. This
--   setting can have a value from 1 hour to 12 hours. If you specify a
--   value higher than this setting, the operation fails. For example, if
--   you specify a session duration of 12 hours, but your administrator set
--   the maximum session duration to 6 hours, your operation fails. To
--   learn how to view the maximum value for your role, see <a>View the
--   Maximum Session Duration Setting for a Role</a> in the <i>IAM User
--   Guide</i>.
--   
--   By default, the value is set to <tt>3600</tt> seconds.
--   
--   The <tt>DurationSeconds</tt> parameter is separate from the duration
--   of a console session that you might request using the returned
--   credentials. The request to the federation endpoint for a console
--   sign-in token takes a <tt>SessionDuration</tt> parameter that
--   specifies the maximum length of the console session. For more
--   information, see <a>Creating a URL that Enables Federated Users to
--   Access the Management Console</a> in the <i>IAM User Guide</i>.
--   
--   <a>$sel:roleArn:AssumeRoleWithWebIdentity'</a>,
--   <a>assumeRoleWithWebIdentity_roleArn</a> - The Amazon Resource Name
--   (ARN) of the role that the caller is assuming.
--   
--   <a>$sel:roleSessionName:AssumeRoleWithWebIdentity'</a>,
--   <a>assumeRoleWithWebIdentity_roleSessionName</a> - An identifier for
--   the assumed role session. Typically, you pass the name or identifier
--   that is associated with the user who is using your application. That
--   way, the temporary security credentials that your application will use
--   are associated with that user. This session name is included as part
--   of the ARN and assumed role ID in the <tt>AssumedRoleUser</tt>
--   response element.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
--   
--   <a>$sel:webIdentityToken:AssumeRoleWithWebIdentity'</a>,
--   <a>assumeRoleWithWebIdentity_webIdentityToken</a> - The OAuth 2.0
--   access token or OpenID Connect ID token that is provided by the
--   identity provider. Your application must get this token by
--   authenticating the user who is using your application with a web
--   identity provider before the application makes an
--   <tt>AssumeRoleWithWebIdentity</tt> call.
newAssumeRoleWithWebIdentity :: Text -> Text -> Text -> AssumeRoleWithWebIdentity

-- | Contains the response to a successful AssumeRoleWithWebIdentity
--   request, including temporary Amazon Web Services credentials that can
--   be used to make Amazon Web Services requests.
--   
--   <i>See:</i> <a>newAssumeRoleWithWebIdentityResponse</a> smart
--   constructor.
data AssumeRoleWithWebIdentityResponse
AssumeRoleWithWebIdentityResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe AuthEnv -> Maybe AssumedRoleUser -> Maybe Natural -> Int -> AssumeRoleWithWebIdentityResponse

-- | Create a value of <a>AssumeRoleWithWebIdentityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:audience:AssumeRoleWithWebIdentityResponse'</a>,
--   <a>assumeRoleWithWebIdentityResponse_audience</a> - The intended
--   audience (also known as client ID) of the web identity token. This is
--   traditionally the client identifier issued to the application that
--   requested the web identity token.
--   
--   
--   <a>$sel:subjectFromWebIdentityToken:AssumeRoleWithWebIdentityResponse'</a>,
--   <a>assumeRoleWithWebIdentityResponse_subjectFromWebIdentityToken</a> -
--   The unique user identifier that is returned by the identity provider.
--   This identifier is associated with the <tt>WebIdentityToken</tt> that
--   was submitted with the <tt>AssumeRoleWithWebIdentity</tt> call. The
--   identifier is typically unique to the user and the application that
--   acquired the <tt>WebIdentityToken</tt> (pairwise identifier). For
--   OpenID Connect ID tokens, this field contains the value returned by
--   the identity provider as the token's <tt>sub</tt> (Subject) claim.
--   
--   <a>$sel:provider:AssumeRoleWithWebIdentityResponse'</a>,
--   <a>assumeRoleWithWebIdentityResponse_provider</a> - The issuing
--   authority of the web identity token presented. For OpenID Connect ID
--   tokens, this contains the value of the <tt>iss</tt> field. For OAuth
--   2.0 access tokens, this contains the value of the <tt>ProviderId</tt>
--   parameter that was passed in the <tt>AssumeRoleWithWebIdentity</tt>
--   request.
--   
--   <a>$sel:sourceIdentity:AssumeRoleWithWebIdentityResponse'</a>,
--   <a>assumeRoleWithWebIdentityResponse_sourceIdentity</a> - The value of
--   the source identity that is returned in the JSON web token (JWT) from
--   the identity provider.
--   
--   You can require users to set a source identity value when they assume
--   a role. You do this by using the <tt>sts:SourceIdentity</tt> condition
--   key in a role trust policy. That way, actions that are taken with the
--   role are associated with that user. After the source identity is set,
--   the value cannot be changed. It is present in the request for all
--   actions that are taken by the role and persists across <a>chained
--   role</a> sessions. You can configure your identity provider to use an
--   attribute associated with your users, like user name or email, as the
--   source identity when calling <tt>AssumeRoleWithWebIdentity</tt>. You
--   do this by adding a claim to the JSON web token. To learn more about
--   OIDC tokens and claims, see <a>Using Tokens with User Pools</a> in the
--   <i>Amazon Cognito Developer Guide</i>. For more information about
--   using source identity, see <a>Monitor and control actions taken with
--   assumed roles</a> in the <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
--   
--   <a>$sel:credentials:AssumeRoleWithWebIdentityResponse'</a>,
--   <a>assumeRoleWithWebIdentityResponse_credentials</a> - The temporary
--   security credentials, which include an access key ID, a secret access
--   key, and a security token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
--   
--   <a>$sel:assumedRoleUser:AssumeRoleWithWebIdentityResponse'</a>,
--   <a>assumeRoleWithWebIdentityResponse_assumedRoleUser</a> - The Amazon
--   Resource Name (ARN) and the assumed role ID, which are identifiers
--   that you can use to refer to the resulting temporary security
--   credentials. For example, you can reference these credentials as a
--   principal in a resource-based policy by using the ARN or assumed role
--   ID. The ARN and ID include the <tt>RoleSessionName</tt> that you
--   specified when you called <tt>AssumeRole</tt>.
--   
--   <a>$sel:packedPolicySize:AssumeRoleWithWebIdentityResponse'</a>,
--   <a>assumeRoleWithWebIdentityResponse_packedPolicySize</a> - A
--   percentage value that indicates the packed size of the session
--   policies and session tags combined passed in the request. The request
--   fails if the packed size is greater than 100 percent, which means the
--   policies and tags exceeded the allowed space.
--   
--   <a>$sel:httpStatus:AssumeRoleWithWebIdentityResponse'</a>,
--   <a>assumeRoleWithWebIdentityResponse_httpStatus</a> - The response's
--   http status code.
newAssumeRoleWithWebIdentityResponse :: Int -> AssumeRoleWithWebIdentityResponse

-- | <i>See:</i> <a>newGetAccessKeyInfo</a> smart constructor.
data GetAccessKeyInfo
GetAccessKeyInfo' :: AccessKey -> GetAccessKeyInfo

-- | Create a value of <a>GetAccessKeyInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessKeyId:GetAccessKeyInfo'</a>,
--   <a>getAccessKeyInfo_accessKeyId</a> - The identifier of an access key.
--   
--   This parameter allows (through its regex pattern) a string of
--   characters that can consist of any upper- or lowercase letter or
--   digit.
newGetAccessKeyInfo :: AccessKey -> GetAccessKeyInfo

-- | <i>See:</i> <a>newGetAccessKeyInfoResponse</a> smart constructor.
data GetAccessKeyInfoResponse
GetAccessKeyInfoResponse' :: Maybe Text -> Int -> GetAccessKeyInfoResponse

-- | Create a value of <a>GetAccessKeyInfoResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:account:GetAccessKeyInfoResponse'</a>,
--   <a>getAccessKeyInfoResponse_account</a> - The number used to identify
--   the Amazon Web Services account.
--   
--   <a>$sel:httpStatus:GetAccessKeyInfoResponse'</a>,
--   <a>getAccessKeyInfoResponse_httpStatus</a> - The response's http
--   status code.
newGetAccessKeyInfoResponse :: Int -> GetAccessKeyInfoResponse

-- | <i>See:</i> <a>newGetSessionToken</a> smart constructor.
data GetSessionToken
GetSessionToken' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetSessionToken

-- | Create a value of <a>GetSessionToken</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tokenCode:GetSessionToken'</a>,
--   <a>getSessionToken_tokenCode</a> - The value provided by the MFA
--   device, if MFA is required. If any policy requires the IAM user to
--   submit an MFA code, specify this value. If MFA authentication is
--   required, the user must provide a code when requesting a set of
--   temporary security credentials. A user who fails to provide the code
--   receives an "access denied" response when requesting resources that
--   require MFA authentication.
--   
--   The format for this parameter, as described by its regex pattern, is a
--   sequence of six numeric digits.
--   
--   <a>$sel:serialNumber:GetSessionToken'</a>,
--   <a>getSessionToken_serialNumber</a> - The identification number of the
--   MFA device that is associated with the IAM user who is making the
--   <tt>GetSessionToken</tt> call. Specify this value if the IAM user has
--   a policy that requires MFA authentication. The value is either the
--   serial number for a hardware device (such as <tt>GAHT12345678</tt>) or
--   an Amazon Resource Name (ARN) for a virtual device (such as
--   <tt>arn:aws:iam::123456789012:mfa/user</tt>). You can find the device
--   for an IAM user by going to the Management Console and viewing the
--   user's security credentials.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
--   
--   <a>$sel:durationSeconds:GetSessionToken'</a>,
--   <a>getSessionToken_durationSeconds</a> - The duration, in seconds,
--   that the credentials should remain valid. Acceptable durations for IAM
--   user sessions range from 900 seconds (15 minutes) to 129,600 seconds
--   (36 hours), with 43,200 seconds (12 hours) as the default. Sessions
--   for Amazon Web Services account owners are restricted to a maximum of
--   3,600 seconds (one hour). If the duration is longer than one hour, the
--   session for Amazon Web Services account owners defaults to one hour.
newGetSessionToken :: GetSessionToken

-- | Contains the response to a successful GetSessionToken request,
--   including temporary Amazon Web Services credentials that can be used
--   to make Amazon Web Services requests.
--   
--   <i>See:</i> <a>newGetSessionTokenResponse</a> smart constructor.
data GetSessionTokenResponse
GetSessionTokenResponse' :: Maybe AuthEnv -> Int -> GetSessionTokenResponse

-- | Create a value of <a>GetSessionTokenResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:credentials:GetSessionTokenResponse'</a>,
--   <a>getSessionTokenResponse_credentials</a> - The temporary security
--   credentials, which include an access key ID, a secret access key, and
--   a security (or session) token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
--   
--   <a>$sel:httpStatus:GetSessionTokenResponse'</a>,
--   <a>getSessionTokenResponse_httpStatus</a> - The response's http status
--   code.
newGetSessionTokenResponse :: Int -> GetSessionTokenResponse

-- | <i>See:</i> <a>newAssumeRole</a> smart constructor.
data AssumeRole
AssumeRole' :: Maybe Text -> Maybe [Tag] -> Maybe [PolicyDescriptorType] -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> Text -> AssumeRole

-- | Create a value of <a>AssumeRole</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tokenCode:AssumeRole'</a>, <a>assumeRole_tokenCode</a> - The
--   value provided by the MFA device, if the trust policy of the role
--   being assumed requires MFA. (In other words, if the policy includes a
--   condition that tests for MFA). If the role being assumed requires MFA
--   and if the <tt>TokenCode</tt> value is missing or expired, the
--   <tt>AssumeRole</tt> call returns an "access denied" error.
--   
--   The format for this parameter, as described by its regex pattern, is a
--   sequence of six numeric digits.
--   
--   <a>$sel:tags:AssumeRole'</a>, <a>assumeRole_tags</a> - A list of
--   session tags that you want to pass. Each session tag consists of a key
--   name and an associated value. For more information about session tags,
--   see <a>Tagging STS Sessions</a> in the <i>IAM User Guide</i>.
--   
--   This parameter is optional. You can pass up to 50 session tags. The
--   plaintext session tag keys can’t exceed 128 characters, and the values
--   can’t exceed 256 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   You can pass a session tag with the same key as a tag that is already
--   attached to the role. When you do, session tags override a role tag
--   with the same key.
--   
--   Tag key–value pairs are not case sensitive, but case is preserved.
--   This means that you cannot have separate <tt>Department</tt> and
--   <tt>department</tt> tag keys. Assume that the role has the
--   <tt>Department</tt>=<tt>Marketing</tt> tag and you pass the
--   <tt>department</tt>=<tt>engineering</tt> session tag.
--   <tt>Department</tt> and <tt>department</tt> are not saved as separate
--   tags, and the session tag passed in the request takes precedence over
--   the role tag.
--   
--   Additionally, if you used temporary credentials to perform this
--   operation, the new session inherits any transitive session tags from
--   the calling session. If you pass a session tag with the same key as an
--   inherited tag, the operation fails. To view the inherited tags for a
--   session, see the CloudTrail logs. For more information, see <a>Viewing
--   Session Tags in CloudTrail</a> in the <i>IAM User Guide</i>.
--   
--   <a>$sel:policyArns:AssumeRole'</a>, <a>assumeRole_policyArns</a> - The
--   Amazon Resource Names (ARNs) of the IAM managed policies that you want
--   to use as managed session policies. The policies must exist in the
--   same account as the role.
--   
--   This parameter is optional. You can provide up to 10 managed policy
--   ARNs. However, the plaintext that you use for both inline and managed
--   session policies can't exceed 2,048 characters. For more information
--   about ARNs, see <a>Amazon Resource Names (ARNs) and Amazon Web
--   Services Service Namespaces</a> in the Amazon Web Services General
--   Reference.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   Passing policies to this operation returns new temporary credentials.
--   The resulting session's permissions are the intersection of the role's
--   identity-based policy and the session policies. You can use the role's
--   temporary credentials in subsequent Amazon Web Services API calls to
--   access resources in the account that owns the role. You cannot use
--   session policies to grant more permissions than those allowed by the
--   identity-based policy of the role that is being assumed. For more
--   information, see <a>Session Policies</a> in the <i>IAM User Guide</i>.
--   
--   <a>$sel:serialNumber:AssumeRole'</a>, <a>assumeRole_serialNumber</a> -
--   The identification number of the MFA device that is associated with
--   the user who is making the <tt>AssumeRole</tt> call. Specify this
--   value if the trust policy of the role being assumed includes a
--   condition that requires MFA authentication. The value is either the
--   serial number for a hardware device (such as <tt>GAHT12345678</tt>) or
--   an Amazon Resource Name (ARN) for a virtual device (such as
--   <tt>arn:aws:iam::123456789012:mfa/user</tt>).
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
--   
--   <a>$sel:sourceIdentity:AssumeRole'</a>,
--   <a>assumeRole_sourceIdentity</a> - The source identity specified by
--   the principal that is calling the <tt>AssumeRole</tt> operation.
--   
--   You can require users to specify a source identity when they assume a
--   role. You do this by using the <tt>sts:SourceIdentity</tt> condition
--   key in a role trust policy. You can use source identity information in
--   CloudTrail logs to determine who took actions with a role. You can use
--   the <tt>aws:SourceIdentity</tt> condition key to further control
--   access to Amazon Web Services resources based on the value of source
--   identity. For more information about using source identity, see
--   <a>Monitor and control actions taken with assumed roles</a> in the
--   <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-. You cannot use a value that begins with the text
--   <tt>aws:</tt>. This prefix is reserved for Amazon Web Services
--   internal use.
--   
--   <a>$sel:transitiveTagKeys:AssumeRole'</a>,
--   <a>assumeRole_transitiveTagKeys</a> - A list of keys for session tags
--   that you want to set as transitive. If you set a tag key as
--   transitive, the corresponding key and value passes to subsequent
--   sessions in a role chain. For more information, see <a>Chaining Roles
--   with Session Tags</a> in the <i>IAM User Guide</i>.
--   
--   This parameter is optional. When you set session tags as transitive,
--   the session policy and session tags packed binary limit is not
--   affected.
--   
--   If you choose not to specify a transitive tag key, then no tags are
--   passed from this session to any subsequent sessions.
--   
--   <a>$sel:policy:AssumeRole'</a>, <a>assumeRole_policy</a> - An IAM
--   policy in JSON format that you want to use as an inline session
--   policy.
--   
--   This parameter is optional. Passing policies to this operation returns
--   new temporary credentials. The resulting session's permissions are the
--   intersection of the role's identity-based policy and the session
--   policies. You can use the role's temporary credentials in subsequent
--   Amazon Web Services API calls to access resources in the account that
--   owns the role. You cannot use session policies to grant more
--   permissions than those allowed by the identity-based policy of the
--   role that is being assumed. For more information, see <a>Session
--   Policies</a> in the <i>IAM User Guide</i>.
--   
--   The plaintext that you use for both inline and managed session
--   policies can't exceed 2,048 characters. The JSON policy characters can
--   be any ASCII character from the space character to the end of the
--   valid character list (\u0020 through \u00FF). It can also include the
--   tab (\u0009), linefeed (\u000A), and carriage return (\u000D)
--   characters.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   <a>$sel:externalId:AssumeRole'</a>, <a>assumeRole_externalId</a> - A
--   unique identifier that might be required when you assume a role in
--   another account. If the administrator of the account to which the role
--   belongs provided you with an external ID, then provide that value in
--   the <tt>ExternalId</tt> parameter. This value can be any string, such
--   as a passphrase or account number. A cross-account role is usually set
--   up to trust everyone in an account. Therefore, the administrator of
--   the trusting account might send an external ID to the administrator of
--   the trusted account. That way, only someone with the ID can assume the
--   role, rather than everyone in the account. For more information about
--   the external ID, see <a>How to Use an External ID When Granting Access
--   to Your Amazon Web Services Resources to a Third Party</a> in the
--   <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@:/-
--   
--   <a>$sel:durationSeconds:AssumeRole'</a>,
--   <a>assumeRole_durationSeconds</a> - The duration, in seconds, of the
--   role session. The value specified can can range from 900 seconds (15
--   minutes) up to the maximum session duration that is set for the role.
--   The maximum session duration setting can have a value from 1 hour to
--   12 hours. If you specify a value higher than this setting or the
--   administrator setting (whichever is lower), the operation fails. For
--   example, if you specify a session duration of 12 hours, but your
--   administrator set the maximum session duration to 6 hours, your
--   operation fails. To learn how to view the maximum value for your role,
--   see <a>View the Maximum Session Duration Setting for a Role</a> in the
--   <i>IAM User Guide</i>.
--   
--   By default, the value is set to <tt>3600</tt> seconds.
--   
--   The <tt>DurationSeconds</tt> parameter is separate from the duration
--   of a console session that you might request using the returned
--   credentials. The request to the federation endpoint for a console
--   sign-in token takes a <tt>SessionDuration</tt> parameter that
--   specifies the maximum length of the console session. For more
--   information, see <a>Creating a URL that Enables Federated Users to
--   Access the Management Console</a> in the <i>IAM User Guide</i>.
--   
--   <a>$sel:roleArn:AssumeRole'</a>, <a>assumeRole_roleArn</a> - The
--   Amazon Resource Name (ARN) of the role to assume.
--   
--   <a>$sel:roleSessionName:AssumeRole'</a>,
--   <a>assumeRole_roleSessionName</a> - An identifier for the assumed role
--   session.
--   
--   Use the role session name to uniquely identify a session when the same
--   role is assumed by different principals or for different reasons. In
--   cross-account scenarios, the role session name is visible to, and can
--   be logged by the account that owns the role. The role session name is
--   also used in the ARN of the assumed role principal. This means that
--   subsequent cross-account API requests that use the temporary security
--   credentials will expose the role session name to the external account
--   in their CloudTrail logs.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
newAssumeRole :: Text -> Text -> AssumeRole

-- | Contains the response to a successful AssumeRole request, including
--   temporary Amazon Web Services credentials that can be used to make
--   Amazon Web Services requests.
--   
--   <i>See:</i> <a>newAssumeRoleResponse</a> smart constructor.
data AssumeRoleResponse
AssumeRoleResponse' :: Maybe Text -> Maybe AuthEnv -> Maybe AssumedRoleUser -> Maybe Natural -> Int -> AssumeRoleResponse

-- | Create a value of <a>AssumeRoleResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceIdentity:AssumeRole'</a>,
--   <a>assumeRoleResponse_sourceIdentity</a> - The source identity
--   specified by the principal that is calling the <tt>AssumeRole</tt>
--   operation.
--   
--   You can require users to specify a source identity when they assume a
--   role. You do this by using the <tt>sts:SourceIdentity</tt> condition
--   key in a role trust policy. You can use source identity information in
--   CloudTrail logs to determine who took actions with a role. You can use
--   the <tt>aws:SourceIdentity</tt> condition key to further control
--   access to Amazon Web Services resources based on the value of source
--   identity. For more information about using source identity, see
--   <a>Monitor and control actions taken with assumed roles</a> in the
--   <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
--   
--   <a>$sel:credentials:AssumeRoleResponse'</a>,
--   <a>assumeRoleResponse_credentials</a> - The temporary security
--   credentials, which include an access key ID, a secret access key, and
--   a security (or session) token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
--   
--   <a>$sel:assumedRoleUser:AssumeRoleResponse'</a>,
--   <a>assumeRoleResponse_assumedRoleUser</a> - The Amazon Resource Name
--   (ARN) and the assumed role ID, which are identifiers that you can use
--   to refer to the resulting temporary security credentials. For example,
--   you can reference these credentials as a principal in a resource-based
--   policy by using the ARN or assumed role ID. The ARN and ID include the
--   <tt>RoleSessionName</tt> that you specified when you called
--   <tt>AssumeRole</tt>.
--   
--   <a>$sel:packedPolicySize:AssumeRoleResponse'</a>,
--   <a>assumeRoleResponse_packedPolicySize</a> - A percentage value that
--   indicates the packed size of the session policies and session tags
--   combined passed in the request. The request fails if the packed size
--   is greater than 100 percent, which means the policies and tags
--   exceeded the allowed space.
--   
--   <a>$sel:httpStatus:AssumeRoleResponse'</a>,
--   <a>assumeRoleResponse_httpStatus</a> - The response's http status
--   code.
newAssumeRoleResponse :: Int -> AssumeRoleResponse

-- | <i>See:</i> <a>newGetCallerIdentity</a> smart constructor.
data GetCallerIdentity
GetCallerIdentity' :: GetCallerIdentity

-- | Create a value of <a>GetCallerIdentity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetCallerIdentity :: GetCallerIdentity

-- | Contains the response to a successful GetCallerIdentity request,
--   including information about the entity making the request.
--   
--   <i>See:</i> <a>newGetCallerIdentityResponse</a> smart constructor.
data GetCallerIdentityResponse
GetCallerIdentityResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetCallerIdentityResponse

-- | Create a value of <a>GetCallerIdentityResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetCallerIdentityResponse'</a>,
--   <a>getCallerIdentityResponse_arn</a> - The Amazon Web Services ARN
--   associated with the calling entity.
--   
--   <a>$sel:userId:GetCallerIdentityResponse'</a>,
--   <a>getCallerIdentityResponse_userId</a> - The unique identifier of the
--   calling entity. The exact value depends on the type of entity that is
--   making the call. The values returned are those listed in the
--   <b>aws:userid</b> column in the <a>Principal table</a> found on the
--   <b>Policy Variables</b> reference page in the /IAM User Guide/.
--   
--   <a>$sel:account:GetCallerIdentityResponse'</a>,
--   <a>getCallerIdentityResponse_account</a> - The Amazon Web Services
--   account ID number of the account that owns or contains the calling
--   entity.
--   
--   <a>$sel:httpStatus:GetCallerIdentityResponse'</a>,
--   <a>getCallerIdentityResponse_httpStatus</a> - The response's http
--   status code.
newGetCallerIdentityResponse :: Int -> GetCallerIdentityResponse

-- | <i>See:</i> <a>newDecodeAuthorizationMessage</a> smart constructor.
data DecodeAuthorizationMessage
DecodeAuthorizationMessage' :: Text -> DecodeAuthorizationMessage

-- | Create a value of <a>DecodeAuthorizationMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encodedMessage:DecodeAuthorizationMessage'</a>,
--   <a>decodeAuthorizationMessage_encodedMessage</a> - The encoded message
--   that was returned with the response.
newDecodeAuthorizationMessage :: Text -> DecodeAuthorizationMessage

-- | A document that contains additional information about the
--   authorization status of a request from an encoded message that is
--   returned in response to an Amazon Web Services request.
--   
--   <i>See:</i> <a>newDecodeAuthorizationMessageResponse</a> smart
--   constructor.
data DecodeAuthorizationMessageResponse
DecodeAuthorizationMessageResponse' :: Maybe Text -> Int -> DecodeAuthorizationMessageResponse

-- | Create a value of <a>DecodeAuthorizationMessageResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:decodedMessage:DecodeAuthorizationMessageResponse'</a>,
--   <a>decodeAuthorizationMessageResponse_decodedMessage</a> - An XML
--   document that contains the decoded message.
--   
--   <a>$sel:httpStatus:DecodeAuthorizationMessageResponse'</a>,
--   <a>decodeAuthorizationMessageResponse_httpStatus</a> - The response's
--   http status code.
newDecodeAuthorizationMessageResponse :: Int -> DecodeAuthorizationMessageResponse

-- | <i>See:</i> <a>newAssumeRoleWithSAML</a> smart constructor.
data AssumeRoleWithSAML
AssumeRoleWithSAML' :: Maybe [PolicyDescriptorType] -> Maybe Text -> Maybe Natural -> Text -> Text -> Text -> AssumeRoleWithSAML

-- | Create a value of <a>AssumeRoleWithSAML</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyArns:AssumeRoleWithSAML'</a>,
--   <a>assumeRoleWithSAML_policyArns</a> - The Amazon Resource Names
--   (ARNs) of the IAM managed policies that you want to use as managed
--   session policies. The policies must exist in the same account as the
--   role.
--   
--   This parameter is optional. You can provide up to 10 managed policy
--   ARNs. However, the plaintext that you use for both inline and managed
--   session policies can't exceed 2,048 characters. For more information
--   about ARNs, see <a>Amazon Resource Names (ARNs) and Amazon Web
--   Services Service Namespaces</a> in the Amazon Web Services General
--   Reference.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   Passing policies to this operation returns new temporary credentials.
--   The resulting session's permissions are the intersection of the role's
--   identity-based policy and the session policies. You can use the role's
--   temporary credentials in subsequent Amazon Web Services API calls to
--   access resources in the account that owns the role. You cannot use
--   session policies to grant more permissions than those allowed by the
--   identity-based policy of the role that is being assumed. For more
--   information, see <a>Session Policies</a> in the <i>IAM User Guide</i>.
--   
--   <a>$sel:policy:AssumeRoleWithSAML'</a>,
--   <a>assumeRoleWithSAML_policy</a> - An IAM policy in JSON format that
--   you want to use as an inline session policy.
--   
--   This parameter is optional. Passing policies to this operation returns
--   new temporary credentials. The resulting session's permissions are the
--   intersection of the role's identity-based policy and the session
--   policies. You can use the role's temporary credentials in subsequent
--   Amazon Web Services API calls to access resources in the account that
--   owns the role. You cannot use session policies to grant more
--   permissions than those allowed by the identity-based policy of the
--   role that is being assumed. For more information, see <a>Session
--   Policies</a> in the <i>IAM User Guide</i>.
--   
--   The plaintext that you use for both inline and managed session
--   policies can't exceed 2,048 characters. The JSON policy characters can
--   be any ASCII character from the space character to the end of the
--   valid character list (\u0020 through \u00FF). It can also include the
--   tab (\u0009), linefeed (\u000A), and carriage return (\u000D)
--   characters.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   <a>$sel:durationSeconds:AssumeRoleWithSAML'</a>,
--   <a>assumeRoleWithSAML_durationSeconds</a> - The duration, in seconds,
--   of the role session. Your role session lasts for the duration that you
--   specify for the <tt>DurationSeconds</tt> parameter, or until the time
--   specified in the SAML authentication response's
--   <tt>SessionNotOnOrAfter</tt> value, whichever is shorter. You can
--   provide a <tt>DurationSeconds</tt> value from 900 seconds (15 minutes)
--   up to the maximum session duration setting for the role. This setting
--   can have a value from 1 hour to 12 hours. If you specify a value
--   higher than this setting, the operation fails. For example, if you
--   specify a session duration of 12 hours, but your administrator set the
--   maximum session duration to 6 hours, your operation fails. To learn
--   how to view the maximum value for your role, see <a>View the Maximum
--   Session Duration Setting for a Role</a> in the <i>IAM User Guide</i>.
--   
--   By default, the value is set to <tt>3600</tt> seconds.
--   
--   The <tt>DurationSeconds</tt> parameter is separate from the duration
--   of a console session that you might request using the returned
--   credentials. The request to the federation endpoint for a console
--   sign-in token takes a <tt>SessionDuration</tt> parameter that
--   specifies the maximum length of the console session. For more
--   information, see <a>Creating a URL that Enables Federated Users to
--   Access the Management Console</a> in the <i>IAM User Guide</i>.
--   
--   <a>$sel:roleArn:AssumeRoleWithSAML'</a>,
--   <a>assumeRoleWithSAML_roleArn</a> - The Amazon Resource Name (ARN) of
--   the role that the caller is assuming.
--   
--   <a>$sel:principalArn:AssumeRoleWithSAML'</a>,
--   <a>assumeRoleWithSAML_principalArn</a> - The Amazon Resource Name
--   (ARN) of the SAML provider in IAM that describes the IdP.
--   
--   <a>$sel:sAMLAssertion:AssumeRoleWithSAML'</a>,
--   <a>assumeRoleWithSAML_sAMLAssertion</a> - The base64 encoded SAML
--   authentication response provided by the IdP.
--   
--   For more information, see <a>Configuring a Relying Party and Adding
--   Claims</a> in the <i>IAM User Guide</i>.
newAssumeRoleWithSAML :: Text -> Text -> Text -> AssumeRoleWithSAML

-- | Contains the response to a successful AssumeRoleWithSAML request,
--   including temporary Amazon Web Services credentials that can be used
--   to make Amazon Web Services requests.
--   
--   <i>See:</i> <a>newAssumeRoleWithSAMLResponse</a> smart constructor.
data AssumeRoleWithSAMLResponse
AssumeRoleWithSAMLResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe AuthEnv -> Maybe AssumedRoleUser -> Maybe Natural -> Int -> AssumeRoleWithSAMLResponse

-- | Create a value of <a>AssumeRoleWithSAMLResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nameQualifier:AssumeRoleWithSAMLResponse'</a>,
--   <a>assumeRoleWithSAMLResponse_nameQualifier</a> - A hash value based
--   on the concatenation of the following:
--   
--   <ul>
--   <li>The <tt>Issuer</tt> response value.</li>
--   <li>The Amazon Web Services account ID.</li>
--   <li>The friendly name (the last part of the ARN) of the SAML provider
--   in IAM.</li>
--   </ul>
--   
--   The combination of <tt>NameQualifier</tt> and <tt>Subject</tt> can be
--   used to uniquely identify a federated user.
--   
--   The following pseudocode shows how the hash value is calculated:
--   
--   <pre>
--   BASE64 ( SHA1 ( "https://example.com/saml" + "123456789012" + "/MySAMLIdP" ) )
--   </pre>
--   
--   <a>$sel:audience:AssumeRoleWithSAMLResponse'</a>,
--   <a>assumeRoleWithSAMLResponse_audience</a> - The value of the
--   <tt>Recipient</tt> attribute of the <tt>SubjectConfirmationData</tt>
--   element of the SAML assertion.
--   
--   <a>$sel:subjectType:AssumeRoleWithSAMLResponse'</a>,
--   <a>assumeRoleWithSAMLResponse_subjectType</a> - The format of the name
--   ID, as defined by the <tt>Format</tt> attribute in the <tt>NameID</tt>
--   element of the SAML assertion. Typical examples of the format are
--   <tt>transient</tt> or <tt>persistent</tt>.
--   
--   If the format includes the prefix
--   <tt>urn:oasis:names:tc:SAML:2.0:nameid-format</tt>, that prefix is
--   removed. For example,
--   <tt>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</tt> is
--   returned as <tt>transient</tt>. If the format includes any other
--   prefix, the format is returned with no modifications.
--   
--   <a>$sel:subject:AssumeRoleWithSAMLResponse'</a>,
--   <a>assumeRoleWithSAMLResponse_subject</a> - The value of the
--   <tt>NameID</tt> element in the <tt>Subject</tt> element of the SAML
--   assertion.
--   
--   <a>$sel:sourceIdentity:AssumeRoleWithSAMLResponse'</a>,
--   <a>assumeRoleWithSAMLResponse_sourceIdentity</a> - The value in the
--   <tt>SourceIdentity</tt> attribute in the SAML assertion.
--   
--   You can require users to set a source identity value when they assume
--   a role. You do this by using the <tt>sts:SourceIdentity</tt> condition
--   key in a role trust policy. That way, actions that are taken with the
--   role are associated with that user. After the source identity is set,
--   the value cannot be changed. It is present in the request for all
--   actions that are taken by the role and persists across <a>chained
--   role</a> sessions. You can configure your SAML identity provider to
--   use an attribute associated with your users, like user name or email,
--   as the source identity when calling <tt>AssumeRoleWithSAML</tt>. You
--   do this by adding an attribute to the SAML assertion. For more
--   information about using source identity, see <a>Monitor and control
--   actions taken with assumed roles</a> in the <i>IAM User Guide</i>.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
--   
--   <a>$sel:issuer:AssumeRoleWithSAMLResponse'</a>,
--   <a>assumeRoleWithSAMLResponse_issuer</a> - The value of the
--   <tt>Issuer</tt> element of the SAML assertion.
--   
--   <a>$sel:credentials:AssumeRoleWithSAMLResponse'</a>,
--   <a>assumeRoleWithSAMLResponse_credentials</a> - The temporary security
--   credentials, which include an access key ID, a secret access key, and
--   a security (or session) token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
--   
--   <a>$sel:assumedRoleUser:AssumeRoleWithSAMLResponse'</a>,
--   <a>assumeRoleWithSAMLResponse_assumedRoleUser</a> - The identifiers
--   for the temporary security credentials that the operation returns.
--   
--   <a>$sel:packedPolicySize:AssumeRoleWithSAMLResponse'</a>,
--   <a>assumeRoleWithSAMLResponse_packedPolicySize</a> - A percentage
--   value that indicates the packed size of the session policies and
--   session tags combined passed in the request. The request fails if the
--   packed size is greater than 100 percent, which means the policies and
--   tags exceeded the allowed space.
--   
--   <a>$sel:httpStatus:AssumeRoleWithSAMLResponse'</a>,
--   <a>assumeRoleWithSAMLResponse_httpStatus</a> - The response's http
--   status code.
newAssumeRoleWithSAMLResponse :: Int -> AssumeRoleWithSAMLResponse

-- | <i>See:</i> <a>newGetFederationToken</a> smart constructor.
data GetFederationToken
GetFederationToken' :: Maybe [Tag] -> Maybe [PolicyDescriptorType] -> Maybe Text -> Maybe Natural -> Text -> GetFederationToken

-- | Create a value of <a>GetFederationToken</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:GetFederationToken'</a>, <a>getFederationToken_tags</a> -
--   A list of session tags. Each session tag consists of a key name and an
--   associated value. For more information about session tags, see
--   <a>Passing Session Tags in STS</a> in the <i>IAM User Guide</i>.
--   
--   This parameter is optional. You can pass up to 50 session tags. The
--   plaintext session tag keys can’t exceed 128 characters and the values
--   can’t exceed 256 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   You can pass a session tag with the same key as a tag that is already
--   attached to the user you are federating. When you do, session tags
--   override a user tag with the same key.
--   
--   Tag key–value pairs are not case sensitive, but case is preserved.
--   This means that you cannot have separate <tt>Department</tt> and
--   <tt>department</tt> tag keys. Assume that the role has the
--   <tt>Department</tt>=<tt>Marketing</tt> tag and you pass the
--   <tt>department</tt>=<tt>engineering</tt> session tag.
--   <tt>Department</tt> and <tt>department</tt> are not saved as separate
--   tags, and the session tag passed in the request takes precedence over
--   the role tag.
--   
--   <a>$sel:policyArns:GetFederationToken'</a>,
--   <a>getFederationToken_policyArns</a> - The Amazon Resource Names
--   (ARNs) of the IAM managed policies that you want to use as a managed
--   session policy. The policies must exist in the same account as the IAM
--   user that is requesting federated access.
--   
--   You must pass an inline or managed <a>session policy</a> to this
--   operation. You can pass a single JSON policy document to use as an
--   inline session policy. You can also specify up to 10 managed policies
--   to use as managed session policies. The plaintext that you use for
--   both inline and managed session policies can't exceed 2,048
--   characters. You can provide up to 10 managed policy ARNs. For more
--   information about ARNs, see <a>Amazon Resource Names (ARNs) and Amazon
--   Web Services Service Namespaces</a> in the Amazon Web Services General
--   Reference.
--   
--   This parameter is optional. However, if you do not pass any session
--   policies, then the resulting federated user session has no
--   permissions.
--   
--   When you pass session policies, the session permissions are the
--   intersection of the IAM user policies and the session policies that
--   you pass. This gives you a way to further restrict the permissions for
--   a federated user. You cannot use session policies to grant more
--   permissions than those that are defined in the permissions policy of
--   the IAM user. For more information, see <a>Session Policies</a> in the
--   <i>IAM User Guide</i>.
--   
--   The resulting credentials can be used to access a resource that has a
--   resource-based policy. If that policy specifically references the
--   federated user session in the <tt>Principal</tt> element of the
--   policy, the session has the permissions allowed by the policy. These
--   permissions are granted in addition to the permissions that are
--   granted by the session policies.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   <a>$sel:policy:GetFederationToken'</a>,
--   <a>getFederationToken_policy</a> - An IAM policy in JSON format that
--   you want to use as an inline session policy.
--   
--   You must pass an inline or managed <a>session policy</a> to this
--   operation. You can pass a single JSON policy document to use as an
--   inline session policy. You can also specify up to 10 managed policies
--   to use as managed session policies.
--   
--   This parameter is optional. However, if you do not pass any session
--   policies, then the resulting federated user session has no
--   permissions.
--   
--   When you pass session policies, the session permissions are the
--   intersection of the IAM user policies and the session policies that
--   you pass. This gives you a way to further restrict the permissions for
--   a federated user. You cannot use session policies to grant more
--   permissions than those that are defined in the permissions policy of
--   the IAM user. For more information, see <a>Session Policies</a> in the
--   <i>IAM User Guide</i>.
--   
--   The resulting credentials can be used to access a resource that has a
--   resource-based policy. If that policy specifically references the
--   federated user session in the <tt>Principal</tt> element of the
--   policy, the session has the permissions allowed by the policy. These
--   permissions are granted in addition to the permissions that are
--   granted by the session policies.
--   
--   The plaintext that you use for both inline and managed session
--   policies can't exceed 2,048 characters. The JSON policy characters can
--   be any ASCII character from the space character to the end of the
--   valid character list (\u0020 through \u00FF). It can also include the
--   tab (\u0009), linefeed (\u000A), and carriage return (\u000D)
--   characters.
--   
--   An Amazon Web Services conversion compresses the passed session
--   policies and session tags into a packed binary format that has a
--   separate limit. Your request can fail for this limit even if your
--   plaintext meets the other requirements. The <tt>PackedPolicySize</tt>
--   response element indicates by percentage how close the policies and
--   tags for your request are to the upper size limit.
--   
--   <a>$sel:durationSeconds:GetFederationToken'</a>,
--   <a>getFederationToken_durationSeconds</a> - The duration, in seconds,
--   that the session should last. Acceptable durations for federation
--   sessions range from 900 seconds (15 minutes) to 129,600 seconds (36
--   hours), with 43,200 seconds (12 hours) as the default. Sessions
--   obtained using Amazon Web Services account root user credentials are
--   restricted to a maximum of 3,600 seconds (one hour). If the specified
--   duration is longer than one hour, the session obtained by using root
--   user credentials defaults to one hour.
--   
--   <a>$sel:name:GetFederationToken'</a>, <a>getFederationToken_name</a> -
--   The name of the federated user. The name is used as an identifier for
--   the temporary security credentials (such as <tt>Bob</tt>). For
--   example, you can reference the federated user name in a resource-based
--   policy, such as in an Amazon S3 bucket policy.
--   
--   The regex used to validate this parameter is a string of characters
--   consisting of upper- and lower-case alphanumeric characters with no
--   spaces. You can also include underscores or any of the following
--   characters: =,.@-
newGetFederationToken :: Text -> GetFederationToken

-- | Contains the response to a successful GetFederationToken request,
--   including temporary Amazon Web Services credentials that can be used
--   to make Amazon Web Services requests.
--   
--   <i>See:</i> <a>newGetFederationTokenResponse</a> smart constructor.
data GetFederationTokenResponse
GetFederationTokenResponse' :: Maybe AuthEnv -> Maybe FederatedUser -> Maybe Natural -> Int -> GetFederationTokenResponse

-- | Create a value of <a>GetFederationTokenResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:credentials:GetFederationTokenResponse'</a>,
--   <a>getFederationTokenResponse_credentials</a> - The temporary security
--   credentials, which include an access key ID, a secret access key, and
--   a security (or session) token.
--   
--   The size of the security token that STS API operations return is not
--   fixed. We strongly recommend that you make no assumptions about the
--   maximum size.
--   
--   <a>$sel:federatedUser:GetFederationTokenResponse'</a>,
--   <a>getFederationTokenResponse_federatedUser</a> - Identifiers for the
--   federated user associated with the credentials (such as
--   <tt>arn:aws:sts::123456789012:federated-user/Bob</tt> or
--   <tt>123456789012:Bob</tt>). You can use the federated user's ARN in
--   your resource-based policies, such as an Amazon S3 bucket policy.
--   
--   <a>$sel:packedPolicySize:GetFederationTokenResponse'</a>,
--   <a>getFederationTokenResponse_packedPolicySize</a> - A percentage
--   value that indicates the packed size of the session policies and
--   session tags combined passed in the request. The request fails if the
--   packed size is greater than 100 percent, which means the policies and
--   tags exceeded the allowed space.
--   
--   <a>$sel:httpStatus:GetFederationTokenResponse'</a>,
--   <a>getFederationTokenResponse_httpStatus</a> - The response's http
--   status code.
newGetFederationTokenResponse :: Int -> GetFederationTokenResponse

-- | The identifiers for the temporary security credentials that the
--   operation returns.
--   
--   <i>See:</i> <a>newAssumedRoleUser</a> smart constructor.
data AssumedRoleUser
AssumedRoleUser' :: Text -> Text -> AssumedRoleUser

-- | Create a value of <a>AssumedRoleUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assumedRoleId:AssumedRoleUser'</a>,
--   <a>assumedRoleUser_assumedRoleId</a> - A unique identifier that
--   contains the role ID and the role session name of the role that is
--   being assumed. The role ID is generated by Amazon Web Services when
--   the role is created.
--   
--   <a>$sel:arn:AssumedRoleUser'</a>, <a>assumedRoleUser_arn</a> - The ARN
--   of the temporary security credentials that are returned from the
--   AssumeRole action. For more information about ARNs and how to use them
--   in policies, see <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
newAssumedRoleUser :: Text -> Text -> AssumedRoleUser

-- | Identifiers for the federated user that is associated with the
--   credentials.
--   
--   <i>See:</i> <a>newFederatedUser</a> smart constructor.
data FederatedUser
FederatedUser' :: Text -> Text -> FederatedUser

-- | Create a value of <a>FederatedUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:federatedUserId:FederatedUser'</a>,
--   <a>federatedUser_federatedUserId</a> - The string that identifies the
--   federated user associated with the credentials, similar to the unique
--   ID of an IAM user.
--   
--   <a>$sel:arn:FederatedUser'</a>, <a>federatedUser_arn</a> - The ARN
--   that specifies the federated user that is associated with the
--   credentials. For more information about ARNs and how to use them in
--   policies, see <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
newFederatedUser :: Text -> Text -> FederatedUser

-- | A reference to the IAM managed policy that is passed as a session
--   policy for a role session or a federated user session.
--   
--   <i>See:</i> <a>newPolicyDescriptorType</a> smart constructor.
data PolicyDescriptorType
PolicyDescriptorType' :: Maybe Text -> PolicyDescriptorType

-- | Create a value of <a>PolicyDescriptorType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PolicyDescriptorType'</a>, <a>policyDescriptorType_arn</a>
--   - The Amazon Resource Name (ARN) of the IAM managed policy to use as a
--   session policy for the role. For more information about ARNs, see
--   <a>Amazon Resource Names (ARNs) and Amazon Web Services Service
--   Namespaces</a> in the <i>Amazon Web Services General Reference</i>.
newPolicyDescriptorType :: PolicyDescriptorType

-- | You can pass custom key-value pair attributes when you assume a role
--   or federate a user. These are called session tags. You can then use
--   the session tags to control access to resources. For more information,
--   see <a>Tagging STS Sessions</a> in the <i>IAM User Guide</i>.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for a session tag.
--   
--   You can pass up to 50 session tags. The plain text session tag keys
--   can’t exceed 128 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value for a session
--   tag.
--   
--   You can pass up to 50 session tags. The plain text session tag values
--   can’t exceed 256 characters. For these and additional limits, see
--   <a>IAM and STS Character Limits</a> in the <i>IAM User Guide</i>.
newTag :: Text -> Text -> Tag
