-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-opsworks-cmZSamazonka-opsworks-cm
@version 2.0


module Amazonka.OpsWorksCM.Types.AccountAttribute

-- | Stores account attributes.
--   
--   <i>See:</i> <a>newAccountAttribute</a> smart constructor.
data AccountAttribute
AccountAttribute' :: Maybe Int -> Maybe Int -> Maybe Text -> AccountAttribute

-- | The current usage, such as the current number of servers that are
--   associated with the account.
[$sel:used:AccountAttribute'] :: AccountAttribute -> Maybe Int

-- | The maximum allowed value.
[$sel:maximum:AccountAttribute'] :: AccountAttribute -> Maybe Int

-- | The attribute name. The following are supported attribute names.
--   
--   <ul>
--   <li><i>ServerLimit:</i> The number of current servers/maximum number
--   of servers allowed. By default, you can have a maximum of 10
--   servers.</li>
--   <li><i>ManualBackupLimit:</i> The number of current manual
--   backups/maximum number of backups allowed. By default, you can have a
--   maximum of 50 manual backups saved.</li>
--   </ul>
[$sel:name:AccountAttribute'] :: AccountAttribute -> Maybe Text

-- | Create a value of <a>AccountAttribute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:used:AccountAttribute'</a>, <a>accountAttribute_used</a> - The
--   current usage, such as the current number of servers that are
--   associated with the account.
--   
--   <a>$sel:maximum:AccountAttribute'</a>, <a>accountAttribute_maximum</a>
--   - The maximum allowed value.
--   
--   <a>$sel:name:AccountAttribute'</a>, <a>accountAttribute_name</a> - The
--   attribute name. The following are supported attribute names.
--   
--   <ul>
--   <li><i>ServerLimit:</i> The number of current servers/maximum number
--   of servers allowed. By default, you can have a maximum of 10
--   servers.</li>
--   <li><i>ManualBackupLimit:</i> The number of current manual
--   backups/maximum number of backups allowed. By default, you can have a
--   maximum of 50 manual backups saved.</li>
--   </ul>
newAccountAttribute :: AccountAttribute

-- | The current usage, such as the current number of servers that are
--   associated with the account.
accountAttribute_used :: Lens' AccountAttribute (Maybe Int)

-- | The maximum allowed value.
accountAttribute_maximum :: Lens' AccountAttribute (Maybe Int)

-- | The attribute name. The following are supported attribute names.
--   
--   <ul>
--   <li><i>ServerLimit:</i> The number of current servers/maximum number
--   of servers allowed. By default, you can have a maximum of 10
--   servers.</li>
--   <li><i>ManualBackupLimit:</i> The number of current manual
--   backups/maximum number of backups allowed. By default, you can have a
--   maximum of 50 manual backups saved.</li>
--   </ul>
accountAttribute_name :: Lens' AccountAttribute (Maybe Text)
instance GHC.Generics.Generic Amazonka.OpsWorksCM.Types.AccountAttribute.AccountAttribute
instance GHC.Show.Show Amazonka.OpsWorksCM.Types.AccountAttribute.AccountAttribute
instance GHC.Read.Read Amazonka.OpsWorksCM.Types.AccountAttribute.AccountAttribute
instance GHC.Classes.Eq Amazonka.OpsWorksCM.Types.AccountAttribute.AccountAttribute
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.OpsWorksCM.Types.AccountAttribute.AccountAttribute
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.Types.AccountAttribute.AccountAttribute
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.Types.AccountAttribute.AccountAttribute


module Amazonka.OpsWorksCM.Types.BackupStatus
newtype BackupStatus
BackupStatus' :: Text -> BackupStatus
[fromBackupStatus] :: BackupStatus -> Text
pattern BackupStatus_DELETING :: BackupStatus
pattern BackupStatus_FAILED :: BackupStatus
pattern BackupStatus_IN_PROGRESS :: BackupStatus
pattern BackupStatus_OK :: BackupStatus
instance Amazonka.Data.XML.ToXML Amazonka.OpsWorksCM.Types.BackupStatus.BackupStatus
instance Amazonka.Data.XML.FromXML Amazonka.OpsWorksCM.Types.BackupStatus.BackupStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.OpsWorksCM.Types.BackupStatus.BackupStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.Types.BackupStatus.BackupStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.OpsWorksCM.Types.BackupStatus.BackupStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.OpsWorksCM.Types.BackupStatus.BackupStatus
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.Types.BackupStatus.BackupStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.OpsWorksCM.Types.BackupStatus.BackupStatus
instance Amazonka.Data.Log.ToLog Amazonka.OpsWorksCM.Types.BackupStatus.BackupStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.OpsWorksCM.Types.BackupStatus.BackupStatus
instance Amazonka.Data.Text.ToText Amazonka.OpsWorksCM.Types.BackupStatus.BackupStatus
instance Amazonka.Data.Text.FromText Amazonka.OpsWorksCM.Types.BackupStatus.BackupStatus
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.Types.BackupStatus.BackupStatus
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.Types.BackupStatus.BackupStatus
instance GHC.Generics.Generic Amazonka.OpsWorksCM.Types.BackupStatus.BackupStatus
instance GHC.Classes.Ord Amazonka.OpsWorksCM.Types.BackupStatus.BackupStatus
instance GHC.Classes.Eq Amazonka.OpsWorksCM.Types.BackupStatus.BackupStatus
instance GHC.Read.Read Amazonka.OpsWorksCM.Types.BackupStatus.BackupStatus
instance GHC.Show.Show Amazonka.OpsWorksCM.Types.BackupStatus.BackupStatus


module Amazonka.OpsWorksCM.Types.BackupType
newtype BackupType
BackupType' :: Text -> BackupType
[fromBackupType] :: BackupType -> Text
pattern BackupType_AUTOMATED :: BackupType
pattern BackupType_MANUAL :: BackupType
instance Amazonka.Data.XML.ToXML Amazonka.OpsWorksCM.Types.BackupType.BackupType
instance Amazonka.Data.XML.FromXML Amazonka.OpsWorksCM.Types.BackupType.BackupType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.OpsWorksCM.Types.BackupType.BackupType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.Types.BackupType.BackupType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.OpsWorksCM.Types.BackupType.BackupType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.OpsWorksCM.Types.BackupType.BackupType
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.Types.BackupType.BackupType
instance Amazonka.Data.Headers.ToHeader Amazonka.OpsWorksCM.Types.BackupType.BackupType
instance Amazonka.Data.Log.ToLog Amazonka.OpsWorksCM.Types.BackupType.BackupType
instance Amazonka.Data.ByteString.ToByteString Amazonka.OpsWorksCM.Types.BackupType.BackupType
instance Amazonka.Data.Text.ToText Amazonka.OpsWorksCM.Types.BackupType.BackupType
instance Amazonka.Data.Text.FromText Amazonka.OpsWorksCM.Types.BackupType.BackupType
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.Types.BackupType.BackupType
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.Types.BackupType.BackupType
instance GHC.Generics.Generic Amazonka.OpsWorksCM.Types.BackupType.BackupType
instance GHC.Classes.Ord Amazonka.OpsWorksCM.Types.BackupType.BackupType
instance GHC.Classes.Eq Amazonka.OpsWorksCM.Types.BackupType.BackupType
instance GHC.Read.Read Amazonka.OpsWorksCM.Types.BackupType.BackupType
instance GHC.Show.Show Amazonka.OpsWorksCM.Types.BackupType.BackupType


module Amazonka.OpsWorksCM.Types.Backup

-- | Describes a single backup.
--   
--   <i>See:</i> <a>newBackup</a> smart constructor.
data Backup
Backup' :: Maybe Text -> Maybe Text -> Maybe BackupStatus -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe BackupType -> Maybe Text -> Backup

-- | The engine version that is obtained from the server when the backup is
--   created.
[$sel:engineVersion:Backup'] :: Backup -> Maybe Text

-- | The service role ARN that is obtained from the server when the backup
--   is created.
[$sel:serviceRoleArn:Backup'] :: Backup -> Maybe Text

-- | The status of a backup while in progress.
[$sel:status:Backup'] :: Backup -> Maybe BackupStatus

-- | The EC2 instance profile ARN that is obtained from the server when the
--   backup is created. Because this value is stored, you are not required
--   to provide the InstanceProfileArn again if you restore a backup.
[$sel:instanceProfileArn:Backup'] :: Backup -> Maybe Text

-- | The security group IDs that are obtained from the server when the
--   backup is created.
[$sel:securityGroupIds:Backup'] :: Backup -> Maybe [Text]

-- | An informational message about backup status.
[$sel:statusDescription:Backup'] :: Backup -> Maybe Text

-- | The name of the server from which the backup was made.
[$sel:serverName:Backup'] :: Backup -> Maybe Text

-- | The subnet IDs that are obtained from the server when the backup is
--   created.
[$sel:subnetIds:Backup'] :: Backup -> Maybe [Text]

-- | The key pair that is obtained from the server when the backup is
--   created.
[$sel:keyPair:Backup'] :: Backup -> Maybe Text

-- | The time stamp when the backup was created in the database. Example:
--   <tt>2016-07-29T13:38:47.520Z</tt>
[$sel:createdAt:Backup'] :: Backup -> Maybe POSIX

-- | The generated ID of the backup. Example:
--   <tt>myServerName-yyyyMMddHHmmssSSS</tt>
[$sel:backupId:Backup'] :: Backup -> Maybe Text

-- | The engine type that is obtained from the server when the backup is
--   created.
[$sel:engine:Backup'] :: Backup -> Maybe Text

-- | The instance type that is obtained from the server when the backup is
--   created.
[$sel:instanceType:Backup'] :: Backup -> Maybe Text

-- | The engine model that is obtained from the server when the backup is
--   created.
[$sel:engineModel:Backup'] :: Backup -> Maybe Text

-- | The preferred maintenance period that is obtained from the server when
--   the backup is created.
[$sel:preferredMaintenanceWindow:Backup'] :: Backup -> Maybe Text

-- | The IAM user ARN of the requester for manual backups. This field is
--   empty for automated backups.
[$sel:userArn:Backup'] :: Backup -> Maybe Text

-- | The preferred backup period that is obtained from the server when the
--   backup is created.
[$sel:preferredBackupWindow:Backup'] :: Backup -> Maybe Text

-- | The Amazon S3 URL of the backup's log file.
[$sel:s3LogUrl:Backup'] :: Backup -> Maybe Text

-- | This field is deprecated and is no longer used.
[$sel:s3DataSize:Backup'] :: Backup -> Maybe Int

-- | The ARN of the backup.
[$sel:backupArn:Backup'] :: Backup -> Maybe Text

-- | This field is deprecated and is no longer used.
[$sel:s3DataUrl:Backup'] :: Backup -> Maybe Text

-- | A user-provided description for a manual backup. This field is empty
--   for automated backups.
[$sel:description:Backup'] :: Backup -> Maybe Text

-- | The backup type. Valid values are <tt>automated</tt> or
--   <tt>manual</tt>.
[$sel:backupType:Backup'] :: Backup -> Maybe BackupType

-- | The version of AWS OpsWorks CM-specific tools that is obtained from
--   the server when the backup is created.
[$sel:toolsVersion:Backup'] :: Backup -> Maybe Text

-- | Create a value of <a>Backup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:Backup'</a>, <a>backup_engineVersion</a> - The
--   engine version that is obtained from the server when the backup is
--   created.
--   
--   <a>$sel:serviceRoleArn:Backup'</a>, <a>backup_serviceRoleArn</a> - The
--   service role ARN that is obtained from the server when the backup is
--   created.
--   
--   <a>$sel:status:Backup'</a>, <a>backup_status</a> - The status of a
--   backup while in progress.
--   
--   <a>$sel:instanceProfileArn:Backup'</a>,
--   <a>backup_instanceProfileArn</a> - The EC2 instance profile ARN that
--   is obtained from the server when the backup is created. Because this
--   value is stored, you are not required to provide the
--   InstanceProfileArn again if you restore a backup.
--   
--   <a>$sel:securityGroupIds:Backup'</a>, <a>backup_securityGroupIds</a> -
--   The security group IDs that are obtained from the server when the
--   backup is created.
--   
--   <a>$sel:statusDescription:Backup'</a>, <a>backup_statusDescription</a>
--   - An informational message about backup status.
--   
--   <a>$sel:serverName:Backup'</a>, <a>backup_serverName</a> - The name of
--   the server from which the backup was made.
--   
--   <a>$sel:subnetIds:Backup'</a>, <a>backup_subnetIds</a> - The subnet
--   IDs that are obtained from the server when the backup is created.
--   
--   <a>$sel:keyPair:Backup'</a>, <a>backup_keyPair</a> - The key pair that
--   is obtained from the server when the backup is created.
--   
--   <a>$sel:createdAt:Backup'</a>, <a>backup_createdAt</a> - The time
--   stamp when the backup was created in the database. Example:
--   <tt>2016-07-29T13:38:47.520Z</tt>
--   
--   <a>$sel:backupId:Backup'</a>, <a>backup_backupId</a> - The generated
--   ID of the backup. Example: <tt>myServerName-yyyyMMddHHmmssSSS</tt>
--   
--   <a>$sel:engine:Backup'</a>, <a>backup_engine</a> - The engine type
--   that is obtained from the server when the backup is created.
--   
--   <a>$sel:instanceType:Backup'</a>, <a>backup_instanceType</a> - The
--   instance type that is obtained from the server when the backup is
--   created.
--   
--   <a>$sel:engineModel:Backup'</a>, <a>backup_engineModel</a> - The
--   engine model that is obtained from the server when the backup is
--   created.
--   
--   <a>$sel:preferredMaintenanceWindow:Backup'</a>,
--   <a>backup_preferredMaintenanceWindow</a> - The preferred maintenance
--   period that is obtained from the server when the backup is created.
--   
--   <a>$sel:userArn:Backup'</a>, <a>backup_userArn</a> - The IAM user ARN
--   of the requester for manual backups. This field is empty for automated
--   backups.
--   
--   <a>$sel:preferredBackupWindow:Backup'</a>,
--   <a>backup_preferredBackupWindow</a> - The preferred backup period that
--   is obtained from the server when the backup is created.
--   
--   <a>$sel:s3LogUrl:Backup'</a>, <a>backup_s3LogUrl</a> - The Amazon S3
--   URL of the backup's log file.
--   
--   <a>$sel:s3DataSize:Backup'</a>, <a>backup_s3DataSize</a> - This field
--   is deprecated and is no longer used.
--   
--   <a>$sel:backupArn:Backup'</a>, <a>backup_backupArn</a> - The ARN of
--   the backup.
--   
--   <a>$sel:s3DataUrl:Backup'</a>, <a>backup_s3DataUrl</a> - This field is
--   deprecated and is no longer used.
--   
--   <a>$sel:description:Backup'</a>, <a>backup_description</a> - A
--   user-provided description for a manual backup. This field is empty for
--   automated backups.
--   
--   <a>$sel:backupType:Backup'</a>, <a>backup_backupType</a> - The backup
--   type. Valid values are <tt>automated</tt> or <tt>manual</tt>.
--   
--   <a>$sel:toolsVersion:Backup'</a>, <a>backup_toolsVersion</a> - The
--   version of AWS OpsWorks CM-specific tools that is obtained from the
--   server when the backup is created.
newBackup :: Backup

-- | The engine version that is obtained from the server when the backup is
--   created.
backup_engineVersion :: Lens' Backup (Maybe Text)

-- | The service role ARN that is obtained from the server when the backup
--   is created.
backup_serviceRoleArn :: Lens' Backup (Maybe Text)

-- | The status of a backup while in progress.
backup_status :: Lens' Backup (Maybe BackupStatus)

-- | The EC2 instance profile ARN that is obtained from the server when the
--   backup is created. Because this value is stored, you are not required
--   to provide the InstanceProfileArn again if you restore a backup.
backup_instanceProfileArn :: Lens' Backup (Maybe Text)

-- | The security group IDs that are obtained from the server when the
--   backup is created.
backup_securityGroupIds :: Lens' Backup (Maybe [Text])

-- | An informational message about backup status.
backup_statusDescription :: Lens' Backup (Maybe Text)

-- | The name of the server from which the backup was made.
backup_serverName :: Lens' Backup (Maybe Text)

-- | The subnet IDs that are obtained from the server when the backup is
--   created.
backup_subnetIds :: Lens' Backup (Maybe [Text])

-- | The key pair that is obtained from the server when the backup is
--   created.
backup_keyPair :: Lens' Backup (Maybe Text)

-- | The time stamp when the backup was created in the database. Example:
--   <tt>2016-07-29T13:38:47.520Z</tt>
backup_createdAt :: Lens' Backup (Maybe UTCTime)

-- | The generated ID of the backup. Example:
--   <tt>myServerName-yyyyMMddHHmmssSSS</tt>
backup_backupId :: Lens' Backup (Maybe Text)

-- | The engine type that is obtained from the server when the backup is
--   created.
backup_engine :: Lens' Backup (Maybe Text)

-- | The instance type that is obtained from the server when the backup is
--   created.
backup_instanceType :: Lens' Backup (Maybe Text)

-- | The engine model that is obtained from the server when the backup is
--   created.
backup_engineModel :: Lens' Backup (Maybe Text)

-- | The preferred maintenance period that is obtained from the server when
--   the backup is created.
backup_preferredMaintenanceWindow :: Lens' Backup (Maybe Text)

-- | The IAM user ARN of the requester for manual backups. This field is
--   empty for automated backups.
backup_userArn :: Lens' Backup (Maybe Text)

-- | The preferred backup period that is obtained from the server when the
--   backup is created.
backup_preferredBackupWindow :: Lens' Backup (Maybe Text)

-- | The Amazon S3 URL of the backup's log file.
backup_s3LogUrl :: Lens' Backup (Maybe Text)

-- | This field is deprecated and is no longer used.
backup_s3DataSize :: Lens' Backup (Maybe Int)

-- | The ARN of the backup.
backup_backupArn :: Lens' Backup (Maybe Text)

-- | This field is deprecated and is no longer used.
backup_s3DataUrl :: Lens' Backup (Maybe Text)

-- | A user-provided description for a manual backup. This field is empty
--   for automated backups.
backup_description :: Lens' Backup (Maybe Text)

-- | The backup type. Valid values are <tt>automated</tt> or
--   <tt>manual</tt>.
backup_backupType :: Lens' Backup (Maybe BackupType)

-- | The version of AWS OpsWorks CM-specific tools that is obtained from
--   the server when the backup is created.
backup_toolsVersion :: Lens' Backup (Maybe Text)
instance GHC.Generics.Generic Amazonka.OpsWorksCM.Types.Backup.Backup
instance GHC.Show.Show Amazonka.OpsWorksCM.Types.Backup.Backup
instance GHC.Read.Read Amazonka.OpsWorksCM.Types.Backup.Backup
instance GHC.Classes.Eq Amazonka.OpsWorksCM.Types.Backup.Backup
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.OpsWorksCM.Types.Backup.Backup
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.Types.Backup.Backup
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.Types.Backup.Backup


module Amazonka.OpsWorksCM.Types.EngineAttribute

-- | A name and value pair that is specific to the engine of the server.
--   
--   <i>See:</i> <a>newEngineAttribute</a> smart constructor.
data EngineAttribute
EngineAttribute' :: Maybe (Sensitive Text) -> Maybe Text -> EngineAttribute

-- | The value of the engine attribute.
[$sel:value:EngineAttribute'] :: EngineAttribute -> Maybe (Sensitive Text)

-- | The name of the engine attribute.
[$sel:name:EngineAttribute'] :: EngineAttribute -> Maybe Text

-- | Create a value of <a>EngineAttribute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:EngineAttribute'</a>, <a>engineAttribute_value</a> - The
--   value of the engine attribute.
--   
--   <a>$sel:name:EngineAttribute'</a>, <a>engineAttribute_name</a> - The
--   name of the engine attribute.
newEngineAttribute :: EngineAttribute

-- | The value of the engine attribute.
engineAttribute_value :: Lens' EngineAttribute (Maybe Text)

-- | The name of the engine attribute.
engineAttribute_name :: Lens' EngineAttribute (Maybe Text)
instance GHC.Generics.Generic Amazonka.OpsWorksCM.Types.EngineAttribute.EngineAttribute
instance GHC.Show.Show Amazonka.OpsWorksCM.Types.EngineAttribute.EngineAttribute
instance GHC.Classes.Eq Amazonka.OpsWorksCM.Types.EngineAttribute.EngineAttribute
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.OpsWorksCM.Types.EngineAttribute.EngineAttribute
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.Types.EngineAttribute.EngineAttribute
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.Types.EngineAttribute.EngineAttribute
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.Types.EngineAttribute.EngineAttribute


module Amazonka.OpsWorksCM.Types.MaintenanceStatus
newtype MaintenanceStatus
MaintenanceStatus' :: Text -> MaintenanceStatus
[fromMaintenanceStatus] :: MaintenanceStatus -> Text
pattern MaintenanceStatus_FAILED :: MaintenanceStatus
pattern MaintenanceStatus_SUCCESS :: MaintenanceStatus
instance Amazonka.Data.XML.ToXML Amazonka.OpsWorksCM.Types.MaintenanceStatus.MaintenanceStatus
instance Amazonka.Data.XML.FromXML Amazonka.OpsWorksCM.Types.MaintenanceStatus.MaintenanceStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.OpsWorksCM.Types.MaintenanceStatus.MaintenanceStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.Types.MaintenanceStatus.MaintenanceStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.OpsWorksCM.Types.MaintenanceStatus.MaintenanceStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.OpsWorksCM.Types.MaintenanceStatus.MaintenanceStatus
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.Types.MaintenanceStatus.MaintenanceStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.OpsWorksCM.Types.MaintenanceStatus.MaintenanceStatus
instance Amazonka.Data.Log.ToLog Amazonka.OpsWorksCM.Types.MaintenanceStatus.MaintenanceStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.OpsWorksCM.Types.MaintenanceStatus.MaintenanceStatus
instance Amazonka.Data.Text.ToText Amazonka.OpsWorksCM.Types.MaintenanceStatus.MaintenanceStatus
instance Amazonka.Data.Text.FromText Amazonka.OpsWorksCM.Types.MaintenanceStatus.MaintenanceStatus
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.Types.MaintenanceStatus.MaintenanceStatus
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.Types.MaintenanceStatus.MaintenanceStatus
instance GHC.Generics.Generic Amazonka.OpsWorksCM.Types.MaintenanceStatus.MaintenanceStatus
instance GHC.Classes.Ord Amazonka.OpsWorksCM.Types.MaintenanceStatus.MaintenanceStatus
instance GHC.Classes.Eq Amazonka.OpsWorksCM.Types.MaintenanceStatus.MaintenanceStatus
instance GHC.Read.Read Amazonka.OpsWorksCM.Types.MaintenanceStatus.MaintenanceStatus
instance GHC.Show.Show Amazonka.OpsWorksCM.Types.MaintenanceStatus.MaintenanceStatus


module Amazonka.OpsWorksCM.Types.NodeAssociationStatus

-- | The status of the association or disassociation request.
--   
--   <b>Possible values:</b>
--   
--   <ul>
--   <li><tt>SUCCESS</tt>: The association or disassociation
--   succeeded.</li>
--   <li><tt>FAILED</tt>: The association or disassociation failed.</li>
--   <li><tt>IN_PROGRESS</tt>: The association or disassociation is still
--   in progress.</li>
--   </ul>
newtype NodeAssociationStatus
NodeAssociationStatus' :: Text -> NodeAssociationStatus
[fromNodeAssociationStatus] :: NodeAssociationStatus -> Text
pattern NodeAssociationStatus_FAILED :: NodeAssociationStatus
pattern NodeAssociationStatus_IN_PROGRESS :: NodeAssociationStatus
pattern NodeAssociationStatus_SUCCESS :: NodeAssociationStatus
instance Amazonka.Data.XML.ToXML Amazonka.OpsWorksCM.Types.NodeAssociationStatus.NodeAssociationStatus
instance Amazonka.Data.XML.FromXML Amazonka.OpsWorksCM.Types.NodeAssociationStatus.NodeAssociationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.OpsWorksCM.Types.NodeAssociationStatus.NodeAssociationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.Types.NodeAssociationStatus.NodeAssociationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.OpsWorksCM.Types.NodeAssociationStatus.NodeAssociationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.OpsWorksCM.Types.NodeAssociationStatus.NodeAssociationStatus
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.Types.NodeAssociationStatus.NodeAssociationStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.OpsWorksCM.Types.NodeAssociationStatus.NodeAssociationStatus
instance Amazonka.Data.Log.ToLog Amazonka.OpsWorksCM.Types.NodeAssociationStatus.NodeAssociationStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.OpsWorksCM.Types.NodeAssociationStatus.NodeAssociationStatus
instance Amazonka.Data.Text.ToText Amazonka.OpsWorksCM.Types.NodeAssociationStatus.NodeAssociationStatus
instance Amazonka.Data.Text.FromText Amazonka.OpsWorksCM.Types.NodeAssociationStatus.NodeAssociationStatus
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.Types.NodeAssociationStatus.NodeAssociationStatus
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.Types.NodeAssociationStatus.NodeAssociationStatus
instance GHC.Generics.Generic Amazonka.OpsWorksCM.Types.NodeAssociationStatus.NodeAssociationStatus
instance GHC.Classes.Ord Amazonka.OpsWorksCM.Types.NodeAssociationStatus.NodeAssociationStatus
instance GHC.Classes.Eq Amazonka.OpsWorksCM.Types.NodeAssociationStatus.NodeAssociationStatus
instance GHC.Read.Read Amazonka.OpsWorksCM.Types.NodeAssociationStatus.NodeAssociationStatus
instance GHC.Show.Show Amazonka.OpsWorksCM.Types.NodeAssociationStatus.NodeAssociationStatus


module Amazonka.OpsWorksCM.Types.ServerEvent

-- | An event that is related to the server, such as the start of
--   maintenance or backup.
--   
--   <i>See:</i> <a>newServerEvent</a> smart constructor.
data ServerEvent
ServerEvent' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> ServerEvent

-- | The Amazon S3 URL of the event's log file.
[$sel:logUrl:ServerEvent'] :: ServerEvent -> Maybe Text

-- | The name of the server on or for which the event occurred.
[$sel:serverName:ServerEvent'] :: ServerEvent -> Maybe Text

-- | The time when the event occurred.
[$sel:createdAt:ServerEvent'] :: ServerEvent -> Maybe POSIX

-- | A human-readable informational or status message.
[$sel:message:ServerEvent'] :: ServerEvent -> Maybe Text

-- | Create a value of <a>ServerEvent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logUrl:ServerEvent'</a>, <a>serverEvent_logUrl</a> - The
--   Amazon S3 URL of the event's log file.
--   
--   <a>$sel:serverName:ServerEvent'</a>, <a>serverEvent_serverName</a> -
--   The name of the server on or for which the event occurred.
--   
--   <a>$sel:createdAt:ServerEvent'</a>, <a>serverEvent_createdAt</a> - The
--   time when the event occurred.
--   
--   <a>$sel:message:ServerEvent'</a>, <a>serverEvent_message</a> - A
--   human-readable informational or status message.
newServerEvent :: ServerEvent

-- | The Amazon S3 URL of the event's log file.
serverEvent_logUrl :: Lens' ServerEvent (Maybe Text)

-- | The name of the server on or for which the event occurred.
serverEvent_serverName :: Lens' ServerEvent (Maybe Text)

-- | The time when the event occurred.
serverEvent_createdAt :: Lens' ServerEvent (Maybe UTCTime)

-- | A human-readable informational or status message.
serverEvent_message :: Lens' ServerEvent (Maybe Text)
instance GHC.Generics.Generic Amazonka.OpsWorksCM.Types.ServerEvent.ServerEvent
instance GHC.Show.Show Amazonka.OpsWorksCM.Types.ServerEvent.ServerEvent
instance GHC.Read.Read Amazonka.OpsWorksCM.Types.ServerEvent.ServerEvent
instance GHC.Classes.Eq Amazonka.OpsWorksCM.Types.ServerEvent.ServerEvent
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.OpsWorksCM.Types.ServerEvent.ServerEvent
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.Types.ServerEvent.ServerEvent
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.Types.ServerEvent.ServerEvent


module Amazonka.OpsWorksCM.Types.ServerStatus
newtype ServerStatus
ServerStatus' :: Text -> ServerStatus
[fromServerStatus] :: ServerStatus -> Text
pattern ServerStatus_BACKING_UP :: ServerStatus
pattern ServerStatus_CONNECTION_LOST :: ServerStatus
pattern ServerStatus_CREATING :: ServerStatus
pattern ServerStatus_DELETING :: ServerStatus
pattern ServerStatus_FAILED :: ServerStatus
pattern ServerStatus_HEALTHY :: ServerStatus
pattern ServerStatus_MODIFYING :: ServerStatus
pattern ServerStatus_RESTORING :: ServerStatus
pattern ServerStatus_RUNNING :: ServerStatus
pattern ServerStatus_SETUP :: ServerStatus
pattern ServerStatus_TERMINATED :: ServerStatus
pattern ServerStatus_UNDER_MAINTENANCE :: ServerStatus
pattern ServerStatus_UNHEALTHY :: ServerStatus
instance Amazonka.Data.XML.ToXML Amazonka.OpsWorksCM.Types.ServerStatus.ServerStatus
instance Amazonka.Data.XML.FromXML Amazonka.OpsWorksCM.Types.ServerStatus.ServerStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.OpsWorksCM.Types.ServerStatus.ServerStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.Types.ServerStatus.ServerStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.OpsWorksCM.Types.ServerStatus.ServerStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.OpsWorksCM.Types.ServerStatus.ServerStatus
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.Types.ServerStatus.ServerStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.OpsWorksCM.Types.ServerStatus.ServerStatus
instance Amazonka.Data.Log.ToLog Amazonka.OpsWorksCM.Types.ServerStatus.ServerStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.OpsWorksCM.Types.ServerStatus.ServerStatus
instance Amazonka.Data.Text.ToText Amazonka.OpsWorksCM.Types.ServerStatus.ServerStatus
instance Amazonka.Data.Text.FromText Amazonka.OpsWorksCM.Types.ServerStatus.ServerStatus
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.Types.ServerStatus.ServerStatus
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.Types.ServerStatus.ServerStatus
instance GHC.Generics.Generic Amazonka.OpsWorksCM.Types.ServerStatus.ServerStatus
instance GHC.Classes.Ord Amazonka.OpsWorksCM.Types.ServerStatus.ServerStatus
instance GHC.Classes.Eq Amazonka.OpsWorksCM.Types.ServerStatus.ServerStatus
instance GHC.Read.Read Amazonka.OpsWorksCM.Types.ServerStatus.ServerStatus
instance GHC.Show.Show Amazonka.OpsWorksCM.Types.ServerStatus.ServerStatus


module Amazonka.OpsWorksCM.Types.Server

-- | Describes a configuration management server.
--   
--   <i>See:</i> <a>newServer</a> smart constructor.
data Server
Server' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe ServerStatus -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe MaintenanceStatus -> Maybe Text -> Maybe Text -> Maybe [EngineAttribute] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Server

-- | The engine version of the server. For a Chef server, the valid value
--   for EngineVersion is currently <tt>2</tt>. For a Puppet server,
--   specify either <tt>2019</tt> or <tt>2017</tt>.
[$sel:engineVersion:Server'] :: Server -> Maybe Text

-- | The service role ARN used to create the server.
[$sel:serviceRoleArn:Server'] :: Server -> Maybe Text

-- | Disables automated backups. The number of stored backups is dependent
--   on the value of PreferredBackupCount.
[$sel:disableAutomatedBackup:Server'] :: Server -> Maybe Bool

-- | The server's status. This field displays the states of actions in
--   progress, such as creating, running, or backing up the server, as well
--   as the server's health state.
[$sel:status:Server'] :: Server -> Maybe ServerStatus

-- | The instance profile ARN of the server.
[$sel:instanceProfileArn:Server'] :: Server -> Maybe Text

-- | The security group IDs for the server, as specified in the
--   CloudFormation stack. These might not be the same security groups that
--   are shown in the EC2 console.
[$sel:securityGroupIds:Server'] :: Server -> Maybe [Text]

-- | Associate a public IP address with a server that you are launching.
[$sel:associatePublicIpAddress:Server'] :: Server -> Maybe Bool

-- | The name of the server.
[$sel:serverName:Server'] :: Server -> Maybe Text

-- | The subnet IDs specified in a CreateServer request.
[$sel:subnetIds:Server'] :: Server -> Maybe [Text]

-- | The key pair associated with the server.
[$sel:keyPair:Server'] :: Server -> Maybe Text

-- | Time stamp of server creation. Example
--   <tt>2016-07-29T13:38:47.520Z</tt>
[$sel:createdAt:Server'] :: Server -> Maybe POSIX

-- | The ARN of the server.
[$sel:serverArn:Server'] :: Server -> Maybe Text

-- | An optional public endpoint of a server, such as
--   <tt>https://aws.my-company.com</tt>. You cannot access the server by
--   using the <tt>Endpoint</tt> value if the server has a
--   <tt>CustomDomain</tt> specified.
[$sel:customDomain:Server'] :: Server -> Maybe Text

-- | The engine type of the server. Valid values in this release include
--   <tt>ChefAutomate</tt> and <tt>Puppet</tt>.
[$sel:engine:Server'] :: Server -> Maybe Text

-- | The status of the most recent server maintenance run. Shows
--   <tt>SUCCESS</tt> or <tt>FAILED</tt>.
[$sel:maintenanceStatus:Server'] :: Server -> Maybe MaintenanceStatus

-- | The instance type for the server, as specified in the CloudFormation
--   stack. This might not be the same instance type that is shown in the
--   EC2 console.
[$sel:instanceType:Server'] :: Server -> Maybe Text

-- | The engine model of the server. Valid values in this release include
--   <tt>Monolithic</tt> for Puppet and <tt>Single</tt> for Chef.
[$sel:engineModel:Server'] :: Server -> Maybe Text

-- | The response of a createServer() request returns the master credential
--   to access the server in EngineAttributes. These credentials are not
--   stored by AWS OpsWorks CM; they are returned only as part of the
--   result of createServer().
--   
--   <b>Attributes returned in a createServer response for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_AUTOMATE_PIVOTAL_KEY</tt>: A base64-encoded RSA private
--   key that is generated by AWS OpsWorks for Chef Automate. This private
--   key is required to access the Chef API.</li>
--   <li><tt>CHEF_STARTER_KIT</tt>: A base64-encoded ZIP file. The ZIP file
--   contains a Chef starter kit, which includes a README, a configuration
--   file, and the required RSA private key. Save this file, unzip it, and
--   then change to the directory where you've unzipped the file contents.
--   From this directory, you can run Knife commands.</li>
--   </ul>
--   
--   <b>Attributes returned in a createServer response for Puppet</b>
--   
--   <ul>
--   <li><tt>PUPPET_STARTER_KIT</tt>: A base64-encoded ZIP file. The ZIP
--   file contains a Puppet starter kit, including a README and a required
--   private key. Save this file, unzip it, and then change to the
--   directory where you've unzipped the file contents.</li>
--   <li><tt>PUPPET_ADMIN_PASSWORD</tt>: An administrator password that you
--   can use to sign in to the Puppet Enterprise console after the server
--   is online.</li>
--   </ul>
[$sel:engineAttributes:Server'] :: Server -> Maybe [EngineAttribute]

-- | The preferred maintenance period specified for the server.
[$sel:preferredMaintenanceWindow:Server'] :: Server -> Maybe Text

-- | The preferred backup period specified for the server.
[$sel:preferredBackupWindow:Server'] :: Server -> Maybe Text

-- | Depending on the server status, this field has either a human-readable
--   message (such as a create or backup error), or an escaped block of
--   JSON (used for health check results).
[$sel:statusReason:Server'] :: Server -> Maybe Text

-- | A DNS name that can be used to access the engine. Example:
--   <tt>myserver-asdfghjkl.us-east-1.opsworks.io</tt>. You cannot access
--   the server by using the <tt>Endpoint</tt> value if the server has a
--   <tt>CustomDomain</tt> specified.
[$sel:endpoint:Server'] :: Server -> Maybe Text

-- | The ARN of the CloudFormation stack that was used to create the
--   server.
[$sel:cloudFormationStackArn:Server'] :: Server -> Maybe Text

-- | The number of automated backups to keep.
[$sel:backupRetentionCount:Server'] :: Server -> Maybe Int

-- | Create a value of <a>Server</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:Server'</a>, <a>server_engineVersion</a> - The
--   engine version of the server. For a Chef server, the valid value for
--   EngineVersion is currently <tt>2</tt>. For a Puppet server, specify
--   either <tt>2019</tt> or <tt>2017</tt>.
--   
--   <a>$sel:serviceRoleArn:Server'</a>, <a>server_serviceRoleArn</a> - The
--   service role ARN used to create the server.
--   
--   <a>$sel:disableAutomatedBackup:Server'</a>,
--   <a>server_disableAutomatedBackup</a> - Disables automated backups. The
--   number of stored backups is dependent on the value of
--   PreferredBackupCount.
--   
--   <a>$sel:status:Server'</a>, <a>server_status</a> - The server's
--   status. This field displays the states of actions in progress, such as
--   creating, running, or backing up the server, as well as the server's
--   health state.
--   
--   <a>$sel:instanceProfileArn:Server'</a>,
--   <a>server_instanceProfileArn</a> - The instance profile ARN of the
--   server.
--   
--   <a>$sel:securityGroupIds:Server'</a>, <a>server_securityGroupIds</a> -
--   The security group IDs for the server, as specified in the
--   CloudFormation stack. These might not be the same security groups that
--   are shown in the EC2 console.
--   
--   <a>$sel:associatePublicIpAddress:Server'</a>,
--   <a>server_associatePublicIpAddress</a> - Associate a public IP address
--   with a server that you are launching.
--   
--   <a>$sel:serverName:Server'</a>, <a>server_serverName</a> - The name of
--   the server.
--   
--   <a>$sel:subnetIds:Server'</a>, <a>server_subnetIds</a> - The subnet
--   IDs specified in a CreateServer request.
--   
--   <a>$sel:keyPair:Server'</a>, <a>server_keyPair</a> - The key pair
--   associated with the server.
--   
--   <a>$sel:createdAt:Server'</a>, <a>server_createdAt</a> - Time stamp of
--   server creation. Example <tt>2016-07-29T13:38:47.520Z</tt>
--   
--   <a>$sel:serverArn:Server'</a>, <a>server_serverArn</a> - The ARN of
--   the server.
--   
--   <a>$sel:customDomain:Server'</a>, <a>server_customDomain</a> - An
--   optional public endpoint of a server, such as
--   <tt>https://aws.my-company.com</tt>. You cannot access the server by
--   using the <tt>Endpoint</tt> value if the server has a
--   <tt>CustomDomain</tt> specified.
--   
--   <a>$sel:engine:Server'</a>, <a>server_engine</a> - The engine type of
--   the server. Valid values in this release include <tt>ChefAutomate</tt>
--   and <tt>Puppet</tt>.
--   
--   <a>$sel:maintenanceStatus:Server'</a>, <a>server_maintenanceStatus</a>
--   - The status of the most recent server maintenance run. Shows
--   <tt>SUCCESS</tt> or <tt>FAILED</tt>.
--   
--   <a>$sel:instanceType:Server'</a>, <a>server_instanceType</a> - The
--   instance type for the server, as specified in the CloudFormation
--   stack. This might not be the same instance type that is shown in the
--   EC2 console.
--   
--   <a>$sel:engineModel:Server'</a>, <a>server_engineModel</a> - The
--   engine model of the server. Valid values in this release include
--   <tt>Monolithic</tt> for Puppet and <tt>Single</tt> for Chef.
--   
--   <a>$sel:engineAttributes:Server'</a>, <a>server_engineAttributes</a> -
--   The response of a createServer() request returns the master credential
--   to access the server in EngineAttributes. These credentials are not
--   stored by AWS OpsWorks CM; they are returned only as part of the
--   result of createServer().
--   
--   <b>Attributes returned in a createServer response for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_AUTOMATE_PIVOTAL_KEY</tt>: A base64-encoded RSA private
--   key that is generated by AWS OpsWorks for Chef Automate. This private
--   key is required to access the Chef API.</li>
--   <li><tt>CHEF_STARTER_KIT</tt>: A base64-encoded ZIP file. The ZIP file
--   contains a Chef starter kit, which includes a README, a configuration
--   file, and the required RSA private key. Save this file, unzip it, and
--   then change to the directory where you've unzipped the file contents.
--   From this directory, you can run Knife commands.</li>
--   </ul>
--   
--   <b>Attributes returned in a createServer response for Puppet</b>
--   
--   <ul>
--   <li><tt>PUPPET_STARTER_KIT</tt>: A base64-encoded ZIP file. The ZIP
--   file contains a Puppet starter kit, including a README and a required
--   private key. Save this file, unzip it, and then change to the
--   directory where you've unzipped the file contents.</li>
--   <li><tt>PUPPET_ADMIN_PASSWORD</tt>: An administrator password that you
--   can use to sign in to the Puppet Enterprise console after the server
--   is online.</li>
--   </ul>
--   
--   <a>$sel:preferredMaintenanceWindow:Server'</a>,
--   <a>server_preferredMaintenanceWindow</a> - The preferred maintenance
--   period specified for the server.
--   
--   <a>$sel:preferredBackupWindow:Server'</a>,
--   <a>server_preferredBackupWindow</a> - The preferred backup period
--   specified for the server.
--   
--   <a>$sel:statusReason:Server'</a>, <a>server_statusReason</a> -
--   Depending on the server status, this field has either a human-readable
--   message (such as a create or backup error), or an escaped block of
--   JSON (used for health check results).
--   
--   <a>$sel:endpoint:Server'</a>, <a>server_endpoint</a> - A DNS name that
--   can be used to access the engine. Example:
--   <tt>myserver-asdfghjkl.us-east-1.opsworks.io</tt>. You cannot access
--   the server by using the <tt>Endpoint</tt> value if the server has a
--   <tt>CustomDomain</tt> specified.
--   
--   <a>$sel:cloudFormationStackArn:Server'</a>,
--   <a>server_cloudFormationStackArn</a> - The ARN of the CloudFormation
--   stack that was used to create the server.
--   
--   <a>$sel:backupRetentionCount:Server'</a>,
--   <a>server_backupRetentionCount</a> - The number of automated backups
--   to keep.
newServer :: Server

-- | The engine version of the server. For a Chef server, the valid value
--   for EngineVersion is currently <tt>2</tt>. For a Puppet server,
--   specify either <tt>2019</tt> or <tt>2017</tt>.
server_engineVersion :: Lens' Server (Maybe Text)

-- | The service role ARN used to create the server.
server_serviceRoleArn :: Lens' Server (Maybe Text)

-- | Disables automated backups. The number of stored backups is dependent
--   on the value of PreferredBackupCount.
server_disableAutomatedBackup :: Lens' Server (Maybe Bool)

-- | The server's status. This field displays the states of actions in
--   progress, such as creating, running, or backing up the server, as well
--   as the server's health state.
server_status :: Lens' Server (Maybe ServerStatus)

-- | The instance profile ARN of the server.
server_instanceProfileArn :: Lens' Server (Maybe Text)

-- | The security group IDs for the server, as specified in the
--   CloudFormation stack. These might not be the same security groups that
--   are shown in the EC2 console.
server_securityGroupIds :: Lens' Server (Maybe [Text])

-- | Associate a public IP address with a server that you are launching.
server_associatePublicIpAddress :: Lens' Server (Maybe Bool)

-- | The name of the server.
server_serverName :: Lens' Server (Maybe Text)

-- | The subnet IDs specified in a CreateServer request.
server_subnetIds :: Lens' Server (Maybe [Text])

-- | The key pair associated with the server.
server_keyPair :: Lens' Server (Maybe Text)

-- | Time stamp of server creation. Example
--   <tt>2016-07-29T13:38:47.520Z</tt>
server_createdAt :: Lens' Server (Maybe UTCTime)

-- | The ARN of the server.
server_serverArn :: Lens' Server (Maybe Text)

-- | An optional public endpoint of a server, such as
--   <tt>https://aws.my-company.com</tt>. You cannot access the server by
--   using the <tt>Endpoint</tt> value if the server has a
--   <tt>CustomDomain</tt> specified.
server_customDomain :: Lens' Server (Maybe Text)

-- | The engine type of the server. Valid values in this release include
--   <tt>ChefAutomate</tt> and <tt>Puppet</tt>.
server_engine :: Lens' Server (Maybe Text)

-- | The status of the most recent server maintenance run. Shows
--   <tt>SUCCESS</tt> or <tt>FAILED</tt>.
server_maintenanceStatus :: Lens' Server (Maybe MaintenanceStatus)

-- | The instance type for the server, as specified in the CloudFormation
--   stack. This might not be the same instance type that is shown in the
--   EC2 console.
server_instanceType :: Lens' Server (Maybe Text)

-- | The engine model of the server. Valid values in this release include
--   <tt>Monolithic</tt> for Puppet and <tt>Single</tt> for Chef.
server_engineModel :: Lens' Server (Maybe Text)

-- | The response of a createServer() request returns the master credential
--   to access the server in EngineAttributes. These credentials are not
--   stored by AWS OpsWorks CM; they are returned only as part of the
--   result of createServer().
--   
--   <b>Attributes returned in a createServer response for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_AUTOMATE_PIVOTAL_KEY</tt>: A base64-encoded RSA private
--   key that is generated by AWS OpsWorks for Chef Automate. This private
--   key is required to access the Chef API.</li>
--   <li><tt>CHEF_STARTER_KIT</tt>: A base64-encoded ZIP file. The ZIP file
--   contains a Chef starter kit, which includes a README, a configuration
--   file, and the required RSA private key. Save this file, unzip it, and
--   then change to the directory where you've unzipped the file contents.
--   From this directory, you can run Knife commands.</li>
--   </ul>
--   
--   <b>Attributes returned in a createServer response for Puppet</b>
--   
--   <ul>
--   <li><tt>PUPPET_STARTER_KIT</tt>: A base64-encoded ZIP file. The ZIP
--   file contains a Puppet starter kit, including a README and a required
--   private key. Save this file, unzip it, and then change to the
--   directory where you've unzipped the file contents.</li>
--   <li><tt>PUPPET_ADMIN_PASSWORD</tt>: An administrator password that you
--   can use to sign in to the Puppet Enterprise console after the server
--   is online.</li>
--   </ul>
server_engineAttributes :: Lens' Server (Maybe [EngineAttribute])

-- | The preferred maintenance period specified for the server.
server_preferredMaintenanceWindow :: Lens' Server (Maybe Text)

-- | The preferred backup period specified for the server.
server_preferredBackupWindow :: Lens' Server (Maybe Text)

-- | Depending on the server status, this field has either a human-readable
--   message (such as a create or backup error), or an escaped block of
--   JSON (used for health check results).
server_statusReason :: Lens' Server (Maybe Text)

-- | A DNS name that can be used to access the engine. Example:
--   <tt>myserver-asdfghjkl.us-east-1.opsworks.io</tt>. You cannot access
--   the server by using the <tt>Endpoint</tt> value if the server has a
--   <tt>CustomDomain</tt> specified.
server_endpoint :: Lens' Server (Maybe Text)

-- | The ARN of the CloudFormation stack that was used to create the
--   server.
server_cloudFormationStackArn :: Lens' Server (Maybe Text)

-- | The number of automated backups to keep.
server_backupRetentionCount :: Lens' Server (Maybe Int)
instance GHC.Generics.Generic Amazonka.OpsWorksCM.Types.Server.Server
instance GHC.Show.Show Amazonka.OpsWorksCM.Types.Server.Server
instance GHC.Classes.Eq Amazonka.OpsWorksCM.Types.Server.Server
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.OpsWorksCM.Types.Server.Server
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.Types.Server.Server
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.Types.Server.Server


module Amazonka.OpsWorksCM.Types.Tag

-- | A map that contains tag keys and tag values to attach to an AWS
--   OpsWorks for Chef Automate or AWS OpsWorks for Puppet Enterprise
--   server. Leading and trailing white spaces are trimmed from both the
--   key and value. A maximum of 50 user-applied tags is allowed for
--   tag-supported AWS OpsWorks-CM resources.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | A tag key, such as <tt>Stage</tt> or <tt>Name</tt>. A tag key cannot
--   be empty. The key can be a maximum of 127 characters, and can contain
--   only Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt>
[$sel:key:Tag'] :: Tag -> Text

-- | An optional tag value, such as <tt>Production</tt> or
--   <tt>test-owcm-server</tt>. The value can be a maximum of 255
--   characters, and contain only Unicode letters, numbers, or separators,
--   or the following special characters: <tt>+ - = . _ : /</tt>
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - A tag key, such as
--   <tt>Stage</tt> or <tt>Name</tt>. A tag key cannot be empty. The key
--   can be a maximum of 127 characters, and can contain only Unicode
--   letters, numbers, or separators, or the following special characters:
--   <tt>+ - = . _ : /</tt>
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - An optional tag value, such
--   as <tt>Production</tt> or <tt>test-owcm-server</tt>. The value can be
--   a maximum of 255 characters, and contain only Unicode letters,
--   numbers, or separators, or the following special characters: <tt>+ - =
--   . _ : /</tt>
newTag :: Text -> Text -> Tag

-- | A tag key, such as <tt>Stage</tt> or <tt>Name</tt>. A tag key cannot
--   be empty. The key can be a maximum of 127 characters, and can contain
--   only Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt>
tag_key :: Lens' Tag Text

-- | An optional tag value, such as <tt>Production</tt> or
--   <tt>test-owcm-server</tt>. The value can be a maximum of 255
--   characters, and contain only Unicode letters, numbers, or separators,
--   or the following special characters: <tt>+ - = . _ : /</tt>
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Amazonka.OpsWorksCM.Types.Tag.Tag
instance GHC.Show.Show Amazonka.OpsWorksCM.Types.Tag.Tag
instance GHC.Read.Read Amazonka.OpsWorksCM.Types.Tag.Tag
instance GHC.Classes.Eq Amazonka.OpsWorksCM.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.OpsWorksCM.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.Types.Tag.Tag
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.Types.Tag.Tag


module Amazonka.OpsWorksCM.Types

-- | API version <tt>2016-11-01</tt> of the Amazon OpsWorks CM SDK
--   configuration.
defaultService :: Service

-- | One or more of the provided request parameters are not valid.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested resource cannot be created because it already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This occurs when the provided nextToken is not valid.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested resource does not exist, or access was denied.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource is in a state that does not allow you to perform a
--   specified action.
_InvalidStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The limit of servers or backups has been reached.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError
newtype BackupStatus
BackupStatus' :: Text -> BackupStatus
[fromBackupStatus] :: BackupStatus -> Text
pattern BackupStatus_DELETING :: BackupStatus
pattern BackupStatus_FAILED :: BackupStatus
pattern BackupStatus_IN_PROGRESS :: BackupStatus
pattern BackupStatus_OK :: BackupStatus
newtype BackupType
BackupType' :: Text -> BackupType
[fromBackupType] :: BackupType -> Text
pattern BackupType_AUTOMATED :: BackupType
pattern BackupType_MANUAL :: BackupType
newtype MaintenanceStatus
MaintenanceStatus' :: Text -> MaintenanceStatus
[fromMaintenanceStatus] :: MaintenanceStatus -> Text
pattern MaintenanceStatus_FAILED :: MaintenanceStatus
pattern MaintenanceStatus_SUCCESS :: MaintenanceStatus

-- | The status of the association or disassociation request.
--   
--   <b>Possible values:</b>
--   
--   <ul>
--   <li><tt>SUCCESS</tt>: The association or disassociation
--   succeeded.</li>
--   <li><tt>FAILED</tt>: The association or disassociation failed.</li>
--   <li><tt>IN_PROGRESS</tt>: The association or disassociation is still
--   in progress.</li>
--   </ul>
newtype NodeAssociationStatus
NodeAssociationStatus' :: Text -> NodeAssociationStatus
[fromNodeAssociationStatus] :: NodeAssociationStatus -> Text
pattern NodeAssociationStatus_FAILED :: NodeAssociationStatus
pattern NodeAssociationStatus_IN_PROGRESS :: NodeAssociationStatus
pattern NodeAssociationStatus_SUCCESS :: NodeAssociationStatus
newtype ServerStatus
ServerStatus' :: Text -> ServerStatus
[fromServerStatus] :: ServerStatus -> Text
pattern ServerStatus_BACKING_UP :: ServerStatus
pattern ServerStatus_CONNECTION_LOST :: ServerStatus
pattern ServerStatus_CREATING :: ServerStatus
pattern ServerStatus_DELETING :: ServerStatus
pattern ServerStatus_FAILED :: ServerStatus
pattern ServerStatus_HEALTHY :: ServerStatus
pattern ServerStatus_MODIFYING :: ServerStatus
pattern ServerStatus_RESTORING :: ServerStatus
pattern ServerStatus_RUNNING :: ServerStatus
pattern ServerStatus_SETUP :: ServerStatus
pattern ServerStatus_TERMINATED :: ServerStatus
pattern ServerStatus_UNDER_MAINTENANCE :: ServerStatus
pattern ServerStatus_UNHEALTHY :: ServerStatus

-- | Stores account attributes.
--   
--   <i>See:</i> <a>newAccountAttribute</a> smart constructor.
data AccountAttribute
AccountAttribute' :: Maybe Int -> Maybe Int -> Maybe Text -> AccountAttribute

-- | The current usage, such as the current number of servers that are
--   associated with the account.
[$sel:used:AccountAttribute'] :: AccountAttribute -> Maybe Int

-- | The maximum allowed value.
[$sel:maximum:AccountAttribute'] :: AccountAttribute -> Maybe Int

-- | The attribute name. The following are supported attribute names.
--   
--   <ul>
--   <li><i>ServerLimit:</i> The number of current servers/maximum number
--   of servers allowed. By default, you can have a maximum of 10
--   servers.</li>
--   <li><i>ManualBackupLimit:</i> The number of current manual
--   backups/maximum number of backups allowed. By default, you can have a
--   maximum of 50 manual backups saved.</li>
--   </ul>
[$sel:name:AccountAttribute'] :: AccountAttribute -> Maybe Text

-- | Create a value of <a>AccountAttribute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:used:AccountAttribute'</a>, <a>accountAttribute_used</a> - The
--   current usage, such as the current number of servers that are
--   associated with the account.
--   
--   <a>$sel:maximum:AccountAttribute'</a>, <a>accountAttribute_maximum</a>
--   - The maximum allowed value.
--   
--   <a>$sel:name:AccountAttribute'</a>, <a>accountAttribute_name</a> - The
--   attribute name. The following are supported attribute names.
--   
--   <ul>
--   <li><i>ServerLimit:</i> The number of current servers/maximum number
--   of servers allowed. By default, you can have a maximum of 10
--   servers.</li>
--   <li><i>ManualBackupLimit:</i> The number of current manual
--   backups/maximum number of backups allowed. By default, you can have a
--   maximum of 50 manual backups saved.</li>
--   </ul>
newAccountAttribute :: AccountAttribute

-- | The current usage, such as the current number of servers that are
--   associated with the account.
accountAttribute_used :: Lens' AccountAttribute (Maybe Int)

-- | The maximum allowed value.
accountAttribute_maximum :: Lens' AccountAttribute (Maybe Int)

-- | The attribute name. The following are supported attribute names.
--   
--   <ul>
--   <li><i>ServerLimit:</i> The number of current servers/maximum number
--   of servers allowed. By default, you can have a maximum of 10
--   servers.</li>
--   <li><i>ManualBackupLimit:</i> The number of current manual
--   backups/maximum number of backups allowed. By default, you can have a
--   maximum of 50 manual backups saved.</li>
--   </ul>
accountAttribute_name :: Lens' AccountAttribute (Maybe Text)

-- | Describes a single backup.
--   
--   <i>See:</i> <a>newBackup</a> smart constructor.
data Backup
Backup' :: Maybe Text -> Maybe Text -> Maybe BackupStatus -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe BackupType -> Maybe Text -> Backup

-- | The engine version that is obtained from the server when the backup is
--   created.
[$sel:engineVersion:Backup'] :: Backup -> Maybe Text

-- | The service role ARN that is obtained from the server when the backup
--   is created.
[$sel:serviceRoleArn:Backup'] :: Backup -> Maybe Text

-- | The status of a backup while in progress.
[$sel:status:Backup'] :: Backup -> Maybe BackupStatus

-- | The EC2 instance profile ARN that is obtained from the server when the
--   backup is created. Because this value is stored, you are not required
--   to provide the InstanceProfileArn again if you restore a backup.
[$sel:instanceProfileArn:Backup'] :: Backup -> Maybe Text

-- | The security group IDs that are obtained from the server when the
--   backup is created.
[$sel:securityGroupIds:Backup'] :: Backup -> Maybe [Text]

-- | An informational message about backup status.
[$sel:statusDescription:Backup'] :: Backup -> Maybe Text

-- | The name of the server from which the backup was made.
[$sel:serverName:Backup'] :: Backup -> Maybe Text

-- | The subnet IDs that are obtained from the server when the backup is
--   created.
[$sel:subnetIds:Backup'] :: Backup -> Maybe [Text]

-- | The key pair that is obtained from the server when the backup is
--   created.
[$sel:keyPair:Backup'] :: Backup -> Maybe Text

-- | The time stamp when the backup was created in the database. Example:
--   <tt>2016-07-29T13:38:47.520Z</tt>
[$sel:createdAt:Backup'] :: Backup -> Maybe POSIX

-- | The generated ID of the backup. Example:
--   <tt>myServerName-yyyyMMddHHmmssSSS</tt>
[$sel:backupId:Backup'] :: Backup -> Maybe Text

-- | The engine type that is obtained from the server when the backup is
--   created.
[$sel:engine:Backup'] :: Backup -> Maybe Text

-- | The instance type that is obtained from the server when the backup is
--   created.
[$sel:instanceType:Backup'] :: Backup -> Maybe Text

-- | The engine model that is obtained from the server when the backup is
--   created.
[$sel:engineModel:Backup'] :: Backup -> Maybe Text

-- | The preferred maintenance period that is obtained from the server when
--   the backup is created.
[$sel:preferredMaintenanceWindow:Backup'] :: Backup -> Maybe Text

-- | The IAM user ARN of the requester for manual backups. This field is
--   empty for automated backups.
[$sel:userArn:Backup'] :: Backup -> Maybe Text

-- | The preferred backup period that is obtained from the server when the
--   backup is created.
[$sel:preferredBackupWindow:Backup'] :: Backup -> Maybe Text

-- | The Amazon S3 URL of the backup's log file.
[$sel:s3LogUrl:Backup'] :: Backup -> Maybe Text

-- | This field is deprecated and is no longer used.
[$sel:s3DataSize:Backup'] :: Backup -> Maybe Int

-- | The ARN of the backup.
[$sel:backupArn:Backup'] :: Backup -> Maybe Text

-- | This field is deprecated and is no longer used.
[$sel:s3DataUrl:Backup'] :: Backup -> Maybe Text

-- | A user-provided description for a manual backup. This field is empty
--   for automated backups.
[$sel:description:Backup'] :: Backup -> Maybe Text

-- | The backup type. Valid values are <tt>automated</tt> or
--   <tt>manual</tt>.
[$sel:backupType:Backup'] :: Backup -> Maybe BackupType

-- | The version of AWS OpsWorks CM-specific tools that is obtained from
--   the server when the backup is created.
[$sel:toolsVersion:Backup'] :: Backup -> Maybe Text

-- | Create a value of <a>Backup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:Backup'</a>, <a>backup_engineVersion</a> - The
--   engine version that is obtained from the server when the backup is
--   created.
--   
--   <a>$sel:serviceRoleArn:Backup'</a>, <a>backup_serviceRoleArn</a> - The
--   service role ARN that is obtained from the server when the backup is
--   created.
--   
--   <a>$sel:status:Backup'</a>, <a>backup_status</a> - The status of a
--   backup while in progress.
--   
--   <a>$sel:instanceProfileArn:Backup'</a>,
--   <a>backup_instanceProfileArn</a> - The EC2 instance profile ARN that
--   is obtained from the server when the backup is created. Because this
--   value is stored, you are not required to provide the
--   InstanceProfileArn again if you restore a backup.
--   
--   <a>$sel:securityGroupIds:Backup'</a>, <a>backup_securityGroupIds</a> -
--   The security group IDs that are obtained from the server when the
--   backup is created.
--   
--   <a>$sel:statusDescription:Backup'</a>, <a>backup_statusDescription</a>
--   - An informational message about backup status.
--   
--   <a>$sel:serverName:Backup'</a>, <a>backup_serverName</a> - The name of
--   the server from which the backup was made.
--   
--   <a>$sel:subnetIds:Backup'</a>, <a>backup_subnetIds</a> - The subnet
--   IDs that are obtained from the server when the backup is created.
--   
--   <a>$sel:keyPair:Backup'</a>, <a>backup_keyPair</a> - The key pair that
--   is obtained from the server when the backup is created.
--   
--   <a>$sel:createdAt:Backup'</a>, <a>backup_createdAt</a> - The time
--   stamp when the backup was created in the database. Example:
--   <tt>2016-07-29T13:38:47.520Z</tt>
--   
--   <a>$sel:backupId:Backup'</a>, <a>backup_backupId</a> - The generated
--   ID of the backup. Example: <tt>myServerName-yyyyMMddHHmmssSSS</tt>
--   
--   <a>$sel:engine:Backup'</a>, <a>backup_engine</a> - The engine type
--   that is obtained from the server when the backup is created.
--   
--   <a>$sel:instanceType:Backup'</a>, <a>backup_instanceType</a> - The
--   instance type that is obtained from the server when the backup is
--   created.
--   
--   <a>$sel:engineModel:Backup'</a>, <a>backup_engineModel</a> - The
--   engine model that is obtained from the server when the backup is
--   created.
--   
--   <a>$sel:preferredMaintenanceWindow:Backup'</a>,
--   <a>backup_preferredMaintenanceWindow</a> - The preferred maintenance
--   period that is obtained from the server when the backup is created.
--   
--   <a>$sel:userArn:Backup'</a>, <a>backup_userArn</a> - The IAM user ARN
--   of the requester for manual backups. This field is empty for automated
--   backups.
--   
--   <a>$sel:preferredBackupWindow:Backup'</a>,
--   <a>backup_preferredBackupWindow</a> - The preferred backup period that
--   is obtained from the server when the backup is created.
--   
--   <a>$sel:s3LogUrl:Backup'</a>, <a>backup_s3LogUrl</a> - The Amazon S3
--   URL of the backup's log file.
--   
--   <a>$sel:s3DataSize:Backup'</a>, <a>backup_s3DataSize</a> - This field
--   is deprecated and is no longer used.
--   
--   <a>$sel:backupArn:Backup'</a>, <a>backup_backupArn</a> - The ARN of
--   the backup.
--   
--   <a>$sel:s3DataUrl:Backup'</a>, <a>backup_s3DataUrl</a> - This field is
--   deprecated and is no longer used.
--   
--   <a>$sel:description:Backup'</a>, <a>backup_description</a> - A
--   user-provided description for a manual backup. This field is empty for
--   automated backups.
--   
--   <a>$sel:backupType:Backup'</a>, <a>backup_backupType</a> - The backup
--   type. Valid values are <tt>automated</tt> or <tt>manual</tt>.
--   
--   <a>$sel:toolsVersion:Backup'</a>, <a>backup_toolsVersion</a> - The
--   version of AWS OpsWorks CM-specific tools that is obtained from the
--   server when the backup is created.
newBackup :: Backup

-- | The engine version that is obtained from the server when the backup is
--   created.
backup_engineVersion :: Lens' Backup (Maybe Text)

-- | The service role ARN that is obtained from the server when the backup
--   is created.
backup_serviceRoleArn :: Lens' Backup (Maybe Text)

-- | The status of a backup while in progress.
backup_status :: Lens' Backup (Maybe BackupStatus)

-- | The EC2 instance profile ARN that is obtained from the server when the
--   backup is created. Because this value is stored, you are not required
--   to provide the InstanceProfileArn again if you restore a backup.
backup_instanceProfileArn :: Lens' Backup (Maybe Text)

-- | The security group IDs that are obtained from the server when the
--   backup is created.
backup_securityGroupIds :: Lens' Backup (Maybe [Text])

-- | An informational message about backup status.
backup_statusDescription :: Lens' Backup (Maybe Text)

-- | The name of the server from which the backup was made.
backup_serverName :: Lens' Backup (Maybe Text)

-- | The subnet IDs that are obtained from the server when the backup is
--   created.
backup_subnetIds :: Lens' Backup (Maybe [Text])

-- | The key pair that is obtained from the server when the backup is
--   created.
backup_keyPair :: Lens' Backup (Maybe Text)

-- | The time stamp when the backup was created in the database. Example:
--   <tt>2016-07-29T13:38:47.520Z</tt>
backup_createdAt :: Lens' Backup (Maybe UTCTime)

-- | The generated ID of the backup. Example:
--   <tt>myServerName-yyyyMMddHHmmssSSS</tt>
backup_backupId :: Lens' Backup (Maybe Text)

-- | The engine type that is obtained from the server when the backup is
--   created.
backup_engine :: Lens' Backup (Maybe Text)

-- | The instance type that is obtained from the server when the backup is
--   created.
backup_instanceType :: Lens' Backup (Maybe Text)

-- | The engine model that is obtained from the server when the backup is
--   created.
backup_engineModel :: Lens' Backup (Maybe Text)

-- | The preferred maintenance period that is obtained from the server when
--   the backup is created.
backup_preferredMaintenanceWindow :: Lens' Backup (Maybe Text)

-- | The IAM user ARN of the requester for manual backups. This field is
--   empty for automated backups.
backup_userArn :: Lens' Backup (Maybe Text)

-- | The preferred backup period that is obtained from the server when the
--   backup is created.
backup_preferredBackupWindow :: Lens' Backup (Maybe Text)

-- | The Amazon S3 URL of the backup's log file.
backup_s3LogUrl :: Lens' Backup (Maybe Text)

-- | This field is deprecated and is no longer used.
backup_s3DataSize :: Lens' Backup (Maybe Int)

-- | The ARN of the backup.
backup_backupArn :: Lens' Backup (Maybe Text)

-- | This field is deprecated and is no longer used.
backup_s3DataUrl :: Lens' Backup (Maybe Text)

-- | A user-provided description for a manual backup. This field is empty
--   for automated backups.
backup_description :: Lens' Backup (Maybe Text)

-- | The backup type. Valid values are <tt>automated</tt> or
--   <tt>manual</tt>.
backup_backupType :: Lens' Backup (Maybe BackupType)

-- | The version of AWS OpsWorks CM-specific tools that is obtained from
--   the server when the backup is created.
backup_toolsVersion :: Lens' Backup (Maybe Text)

-- | A name and value pair that is specific to the engine of the server.
--   
--   <i>See:</i> <a>newEngineAttribute</a> smart constructor.
data EngineAttribute
EngineAttribute' :: Maybe (Sensitive Text) -> Maybe Text -> EngineAttribute

-- | The value of the engine attribute.
[$sel:value:EngineAttribute'] :: EngineAttribute -> Maybe (Sensitive Text)

-- | The name of the engine attribute.
[$sel:name:EngineAttribute'] :: EngineAttribute -> Maybe Text

-- | Create a value of <a>EngineAttribute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:EngineAttribute'</a>, <a>engineAttribute_value</a> - The
--   value of the engine attribute.
--   
--   <a>$sel:name:EngineAttribute'</a>, <a>engineAttribute_name</a> - The
--   name of the engine attribute.
newEngineAttribute :: EngineAttribute

-- | The value of the engine attribute.
engineAttribute_value :: Lens' EngineAttribute (Maybe Text)

-- | The name of the engine attribute.
engineAttribute_name :: Lens' EngineAttribute (Maybe Text)

-- | Describes a configuration management server.
--   
--   <i>See:</i> <a>newServer</a> smart constructor.
data Server
Server' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe ServerStatus -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe MaintenanceStatus -> Maybe Text -> Maybe Text -> Maybe [EngineAttribute] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Server

-- | The engine version of the server. For a Chef server, the valid value
--   for EngineVersion is currently <tt>2</tt>. For a Puppet server,
--   specify either <tt>2019</tt> or <tt>2017</tt>.
[$sel:engineVersion:Server'] :: Server -> Maybe Text

-- | The service role ARN used to create the server.
[$sel:serviceRoleArn:Server'] :: Server -> Maybe Text

-- | Disables automated backups. The number of stored backups is dependent
--   on the value of PreferredBackupCount.
[$sel:disableAutomatedBackup:Server'] :: Server -> Maybe Bool

-- | The server's status. This field displays the states of actions in
--   progress, such as creating, running, or backing up the server, as well
--   as the server's health state.
[$sel:status:Server'] :: Server -> Maybe ServerStatus

-- | The instance profile ARN of the server.
[$sel:instanceProfileArn:Server'] :: Server -> Maybe Text

-- | The security group IDs for the server, as specified in the
--   CloudFormation stack. These might not be the same security groups that
--   are shown in the EC2 console.
[$sel:securityGroupIds:Server'] :: Server -> Maybe [Text]

-- | Associate a public IP address with a server that you are launching.
[$sel:associatePublicIpAddress:Server'] :: Server -> Maybe Bool

-- | The name of the server.
[$sel:serverName:Server'] :: Server -> Maybe Text

-- | The subnet IDs specified in a CreateServer request.
[$sel:subnetIds:Server'] :: Server -> Maybe [Text]

-- | The key pair associated with the server.
[$sel:keyPair:Server'] :: Server -> Maybe Text

-- | Time stamp of server creation. Example
--   <tt>2016-07-29T13:38:47.520Z</tt>
[$sel:createdAt:Server'] :: Server -> Maybe POSIX

-- | The ARN of the server.
[$sel:serverArn:Server'] :: Server -> Maybe Text

-- | An optional public endpoint of a server, such as
--   <tt>https://aws.my-company.com</tt>. You cannot access the server by
--   using the <tt>Endpoint</tt> value if the server has a
--   <tt>CustomDomain</tt> specified.
[$sel:customDomain:Server'] :: Server -> Maybe Text

-- | The engine type of the server. Valid values in this release include
--   <tt>ChefAutomate</tt> and <tt>Puppet</tt>.
[$sel:engine:Server'] :: Server -> Maybe Text

-- | The status of the most recent server maintenance run. Shows
--   <tt>SUCCESS</tt> or <tt>FAILED</tt>.
[$sel:maintenanceStatus:Server'] :: Server -> Maybe MaintenanceStatus

-- | The instance type for the server, as specified in the CloudFormation
--   stack. This might not be the same instance type that is shown in the
--   EC2 console.
[$sel:instanceType:Server'] :: Server -> Maybe Text

-- | The engine model of the server. Valid values in this release include
--   <tt>Monolithic</tt> for Puppet and <tt>Single</tt> for Chef.
[$sel:engineModel:Server'] :: Server -> Maybe Text

-- | The response of a createServer() request returns the master credential
--   to access the server in EngineAttributes. These credentials are not
--   stored by AWS OpsWorks CM; they are returned only as part of the
--   result of createServer().
--   
--   <b>Attributes returned in a createServer response for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_AUTOMATE_PIVOTAL_KEY</tt>: A base64-encoded RSA private
--   key that is generated by AWS OpsWorks for Chef Automate. This private
--   key is required to access the Chef API.</li>
--   <li><tt>CHEF_STARTER_KIT</tt>: A base64-encoded ZIP file. The ZIP file
--   contains a Chef starter kit, which includes a README, a configuration
--   file, and the required RSA private key. Save this file, unzip it, and
--   then change to the directory where you've unzipped the file contents.
--   From this directory, you can run Knife commands.</li>
--   </ul>
--   
--   <b>Attributes returned in a createServer response for Puppet</b>
--   
--   <ul>
--   <li><tt>PUPPET_STARTER_KIT</tt>: A base64-encoded ZIP file. The ZIP
--   file contains a Puppet starter kit, including a README and a required
--   private key. Save this file, unzip it, and then change to the
--   directory where you've unzipped the file contents.</li>
--   <li><tt>PUPPET_ADMIN_PASSWORD</tt>: An administrator password that you
--   can use to sign in to the Puppet Enterprise console after the server
--   is online.</li>
--   </ul>
[$sel:engineAttributes:Server'] :: Server -> Maybe [EngineAttribute]

-- | The preferred maintenance period specified for the server.
[$sel:preferredMaintenanceWindow:Server'] :: Server -> Maybe Text

-- | The preferred backup period specified for the server.
[$sel:preferredBackupWindow:Server'] :: Server -> Maybe Text

-- | Depending on the server status, this field has either a human-readable
--   message (such as a create or backup error), or an escaped block of
--   JSON (used for health check results).
[$sel:statusReason:Server'] :: Server -> Maybe Text

-- | A DNS name that can be used to access the engine. Example:
--   <tt>myserver-asdfghjkl.us-east-1.opsworks.io</tt>. You cannot access
--   the server by using the <tt>Endpoint</tt> value if the server has a
--   <tt>CustomDomain</tt> specified.
[$sel:endpoint:Server'] :: Server -> Maybe Text

-- | The ARN of the CloudFormation stack that was used to create the
--   server.
[$sel:cloudFormationStackArn:Server'] :: Server -> Maybe Text

-- | The number of automated backups to keep.
[$sel:backupRetentionCount:Server'] :: Server -> Maybe Int

-- | Create a value of <a>Server</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:Server'</a>, <a>server_engineVersion</a> - The
--   engine version of the server. For a Chef server, the valid value for
--   EngineVersion is currently <tt>2</tt>. For a Puppet server, specify
--   either <tt>2019</tt> or <tt>2017</tt>.
--   
--   <a>$sel:serviceRoleArn:Server'</a>, <a>server_serviceRoleArn</a> - The
--   service role ARN used to create the server.
--   
--   <a>$sel:disableAutomatedBackup:Server'</a>,
--   <a>server_disableAutomatedBackup</a> - Disables automated backups. The
--   number of stored backups is dependent on the value of
--   PreferredBackupCount.
--   
--   <a>$sel:status:Server'</a>, <a>server_status</a> - The server's
--   status. This field displays the states of actions in progress, such as
--   creating, running, or backing up the server, as well as the server's
--   health state.
--   
--   <a>$sel:instanceProfileArn:Server'</a>,
--   <a>server_instanceProfileArn</a> - The instance profile ARN of the
--   server.
--   
--   <a>$sel:securityGroupIds:Server'</a>, <a>server_securityGroupIds</a> -
--   The security group IDs for the server, as specified in the
--   CloudFormation stack. These might not be the same security groups that
--   are shown in the EC2 console.
--   
--   <a>$sel:associatePublicIpAddress:Server'</a>,
--   <a>server_associatePublicIpAddress</a> - Associate a public IP address
--   with a server that you are launching.
--   
--   <a>$sel:serverName:Server'</a>, <a>server_serverName</a> - The name of
--   the server.
--   
--   <a>$sel:subnetIds:Server'</a>, <a>server_subnetIds</a> - The subnet
--   IDs specified in a CreateServer request.
--   
--   <a>$sel:keyPair:Server'</a>, <a>server_keyPair</a> - The key pair
--   associated with the server.
--   
--   <a>$sel:createdAt:Server'</a>, <a>server_createdAt</a> - Time stamp of
--   server creation. Example <tt>2016-07-29T13:38:47.520Z</tt>
--   
--   <a>$sel:serverArn:Server'</a>, <a>server_serverArn</a> - The ARN of
--   the server.
--   
--   <a>$sel:customDomain:Server'</a>, <a>server_customDomain</a> - An
--   optional public endpoint of a server, such as
--   <tt>https://aws.my-company.com</tt>. You cannot access the server by
--   using the <tt>Endpoint</tt> value if the server has a
--   <tt>CustomDomain</tt> specified.
--   
--   <a>$sel:engine:Server'</a>, <a>server_engine</a> - The engine type of
--   the server. Valid values in this release include <tt>ChefAutomate</tt>
--   and <tt>Puppet</tt>.
--   
--   <a>$sel:maintenanceStatus:Server'</a>, <a>server_maintenanceStatus</a>
--   - The status of the most recent server maintenance run. Shows
--   <tt>SUCCESS</tt> or <tt>FAILED</tt>.
--   
--   <a>$sel:instanceType:Server'</a>, <a>server_instanceType</a> - The
--   instance type for the server, as specified in the CloudFormation
--   stack. This might not be the same instance type that is shown in the
--   EC2 console.
--   
--   <a>$sel:engineModel:Server'</a>, <a>server_engineModel</a> - The
--   engine model of the server. Valid values in this release include
--   <tt>Monolithic</tt> for Puppet and <tt>Single</tt> for Chef.
--   
--   <a>$sel:engineAttributes:Server'</a>, <a>server_engineAttributes</a> -
--   The response of a createServer() request returns the master credential
--   to access the server in EngineAttributes. These credentials are not
--   stored by AWS OpsWorks CM; they are returned only as part of the
--   result of createServer().
--   
--   <b>Attributes returned in a createServer response for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_AUTOMATE_PIVOTAL_KEY</tt>: A base64-encoded RSA private
--   key that is generated by AWS OpsWorks for Chef Automate. This private
--   key is required to access the Chef API.</li>
--   <li><tt>CHEF_STARTER_KIT</tt>: A base64-encoded ZIP file. The ZIP file
--   contains a Chef starter kit, which includes a README, a configuration
--   file, and the required RSA private key. Save this file, unzip it, and
--   then change to the directory where you've unzipped the file contents.
--   From this directory, you can run Knife commands.</li>
--   </ul>
--   
--   <b>Attributes returned in a createServer response for Puppet</b>
--   
--   <ul>
--   <li><tt>PUPPET_STARTER_KIT</tt>: A base64-encoded ZIP file. The ZIP
--   file contains a Puppet starter kit, including a README and a required
--   private key. Save this file, unzip it, and then change to the
--   directory where you've unzipped the file contents.</li>
--   <li><tt>PUPPET_ADMIN_PASSWORD</tt>: An administrator password that you
--   can use to sign in to the Puppet Enterprise console after the server
--   is online.</li>
--   </ul>
--   
--   <a>$sel:preferredMaintenanceWindow:Server'</a>,
--   <a>server_preferredMaintenanceWindow</a> - The preferred maintenance
--   period specified for the server.
--   
--   <a>$sel:preferredBackupWindow:Server'</a>,
--   <a>server_preferredBackupWindow</a> - The preferred backup period
--   specified for the server.
--   
--   <a>$sel:statusReason:Server'</a>, <a>server_statusReason</a> -
--   Depending on the server status, this field has either a human-readable
--   message (such as a create or backup error), or an escaped block of
--   JSON (used for health check results).
--   
--   <a>$sel:endpoint:Server'</a>, <a>server_endpoint</a> - A DNS name that
--   can be used to access the engine. Example:
--   <tt>myserver-asdfghjkl.us-east-1.opsworks.io</tt>. You cannot access
--   the server by using the <tt>Endpoint</tt> value if the server has a
--   <tt>CustomDomain</tt> specified.
--   
--   <a>$sel:cloudFormationStackArn:Server'</a>,
--   <a>server_cloudFormationStackArn</a> - The ARN of the CloudFormation
--   stack that was used to create the server.
--   
--   <a>$sel:backupRetentionCount:Server'</a>,
--   <a>server_backupRetentionCount</a> - The number of automated backups
--   to keep.
newServer :: Server

-- | The engine version of the server. For a Chef server, the valid value
--   for EngineVersion is currently <tt>2</tt>. For a Puppet server,
--   specify either <tt>2019</tt> or <tt>2017</tt>.
server_engineVersion :: Lens' Server (Maybe Text)

-- | The service role ARN used to create the server.
server_serviceRoleArn :: Lens' Server (Maybe Text)

-- | Disables automated backups. The number of stored backups is dependent
--   on the value of PreferredBackupCount.
server_disableAutomatedBackup :: Lens' Server (Maybe Bool)

-- | The server's status. This field displays the states of actions in
--   progress, such as creating, running, or backing up the server, as well
--   as the server's health state.
server_status :: Lens' Server (Maybe ServerStatus)

-- | The instance profile ARN of the server.
server_instanceProfileArn :: Lens' Server (Maybe Text)

-- | The security group IDs for the server, as specified in the
--   CloudFormation stack. These might not be the same security groups that
--   are shown in the EC2 console.
server_securityGroupIds :: Lens' Server (Maybe [Text])

-- | Associate a public IP address with a server that you are launching.
server_associatePublicIpAddress :: Lens' Server (Maybe Bool)

-- | The name of the server.
server_serverName :: Lens' Server (Maybe Text)

-- | The subnet IDs specified in a CreateServer request.
server_subnetIds :: Lens' Server (Maybe [Text])

-- | The key pair associated with the server.
server_keyPair :: Lens' Server (Maybe Text)

-- | Time stamp of server creation. Example
--   <tt>2016-07-29T13:38:47.520Z</tt>
server_createdAt :: Lens' Server (Maybe UTCTime)

-- | The ARN of the server.
server_serverArn :: Lens' Server (Maybe Text)

-- | An optional public endpoint of a server, such as
--   <tt>https://aws.my-company.com</tt>. You cannot access the server by
--   using the <tt>Endpoint</tt> value if the server has a
--   <tt>CustomDomain</tt> specified.
server_customDomain :: Lens' Server (Maybe Text)

-- | The engine type of the server. Valid values in this release include
--   <tt>ChefAutomate</tt> and <tt>Puppet</tt>.
server_engine :: Lens' Server (Maybe Text)

-- | The status of the most recent server maintenance run. Shows
--   <tt>SUCCESS</tt> or <tt>FAILED</tt>.
server_maintenanceStatus :: Lens' Server (Maybe MaintenanceStatus)

-- | The instance type for the server, as specified in the CloudFormation
--   stack. This might not be the same instance type that is shown in the
--   EC2 console.
server_instanceType :: Lens' Server (Maybe Text)

-- | The engine model of the server. Valid values in this release include
--   <tt>Monolithic</tt> for Puppet and <tt>Single</tt> for Chef.
server_engineModel :: Lens' Server (Maybe Text)

-- | The response of a createServer() request returns the master credential
--   to access the server in EngineAttributes. These credentials are not
--   stored by AWS OpsWorks CM; they are returned only as part of the
--   result of createServer().
--   
--   <b>Attributes returned in a createServer response for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_AUTOMATE_PIVOTAL_KEY</tt>: A base64-encoded RSA private
--   key that is generated by AWS OpsWorks for Chef Automate. This private
--   key is required to access the Chef API.</li>
--   <li><tt>CHEF_STARTER_KIT</tt>: A base64-encoded ZIP file. The ZIP file
--   contains a Chef starter kit, which includes a README, a configuration
--   file, and the required RSA private key. Save this file, unzip it, and
--   then change to the directory where you've unzipped the file contents.
--   From this directory, you can run Knife commands.</li>
--   </ul>
--   
--   <b>Attributes returned in a createServer response for Puppet</b>
--   
--   <ul>
--   <li><tt>PUPPET_STARTER_KIT</tt>: A base64-encoded ZIP file. The ZIP
--   file contains a Puppet starter kit, including a README and a required
--   private key. Save this file, unzip it, and then change to the
--   directory where you've unzipped the file contents.</li>
--   <li><tt>PUPPET_ADMIN_PASSWORD</tt>: An administrator password that you
--   can use to sign in to the Puppet Enterprise console after the server
--   is online.</li>
--   </ul>
server_engineAttributes :: Lens' Server (Maybe [EngineAttribute])

-- | The preferred maintenance period specified for the server.
server_preferredMaintenanceWindow :: Lens' Server (Maybe Text)

-- | The preferred backup period specified for the server.
server_preferredBackupWindow :: Lens' Server (Maybe Text)

-- | Depending on the server status, this field has either a human-readable
--   message (such as a create or backup error), or an escaped block of
--   JSON (used for health check results).
server_statusReason :: Lens' Server (Maybe Text)

-- | A DNS name that can be used to access the engine. Example:
--   <tt>myserver-asdfghjkl.us-east-1.opsworks.io</tt>. You cannot access
--   the server by using the <tt>Endpoint</tt> value if the server has a
--   <tt>CustomDomain</tt> specified.
server_endpoint :: Lens' Server (Maybe Text)

-- | The ARN of the CloudFormation stack that was used to create the
--   server.
server_cloudFormationStackArn :: Lens' Server (Maybe Text)

-- | The number of automated backups to keep.
server_backupRetentionCount :: Lens' Server (Maybe Int)

-- | An event that is related to the server, such as the start of
--   maintenance or backup.
--   
--   <i>See:</i> <a>newServerEvent</a> smart constructor.
data ServerEvent
ServerEvent' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> ServerEvent

-- | The Amazon S3 URL of the event's log file.
[$sel:logUrl:ServerEvent'] :: ServerEvent -> Maybe Text

-- | The name of the server on or for which the event occurred.
[$sel:serverName:ServerEvent'] :: ServerEvent -> Maybe Text

-- | The time when the event occurred.
[$sel:createdAt:ServerEvent'] :: ServerEvent -> Maybe POSIX

-- | A human-readable informational or status message.
[$sel:message:ServerEvent'] :: ServerEvent -> Maybe Text

-- | Create a value of <a>ServerEvent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logUrl:ServerEvent'</a>, <a>serverEvent_logUrl</a> - The
--   Amazon S3 URL of the event's log file.
--   
--   <a>$sel:serverName:ServerEvent'</a>, <a>serverEvent_serverName</a> -
--   The name of the server on or for which the event occurred.
--   
--   <a>$sel:createdAt:ServerEvent'</a>, <a>serverEvent_createdAt</a> - The
--   time when the event occurred.
--   
--   <a>$sel:message:ServerEvent'</a>, <a>serverEvent_message</a> - A
--   human-readable informational or status message.
newServerEvent :: ServerEvent

-- | The Amazon S3 URL of the event's log file.
serverEvent_logUrl :: Lens' ServerEvent (Maybe Text)

-- | The name of the server on or for which the event occurred.
serverEvent_serverName :: Lens' ServerEvent (Maybe Text)

-- | The time when the event occurred.
serverEvent_createdAt :: Lens' ServerEvent (Maybe UTCTime)

-- | A human-readable informational or status message.
serverEvent_message :: Lens' ServerEvent (Maybe Text)

-- | A map that contains tag keys and tag values to attach to an AWS
--   OpsWorks for Chef Automate or AWS OpsWorks for Puppet Enterprise
--   server. Leading and trailing white spaces are trimmed from both the
--   key and value. A maximum of 50 user-applied tags is allowed for
--   tag-supported AWS OpsWorks-CM resources.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | A tag key, such as <tt>Stage</tt> or <tt>Name</tt>. A tag key cannot
--   be empty. The key can be a maximum of 127 characters, and can contain
--   only Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt>
[$sel:key:Tag'] :: Tag -> Text

-- | An optional tag value, such as <tt>Production</tt> or
--   <tt>test-owcm-server</tt>. The value can be a maximum of 255
--   characters, and contain only Unicode letters, numbers, or separators,
--   or the following special characters: <tt>+ - = . _ : /</tt>
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - A tag key, such as
--   <tt>Stage</tt> or <tt>Name</tt>. A tag key cannot be empty. The key
--   can be a maximum of 127 characters, and can contain only Unicode
--   letters, numbers, or separators, or the following special characters:
--   <tt>+ - = . _ : /</tt>
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - An optional tag value, such
--   as <tt>Production</tt> or <tt>test-owcm-server</tt>. The value can be
--   a maximum of 255 characters, and contain only Unicode letters,
--   numbers, or separators, or the following special characters: <tt>+ - =
--   . _ : /</tt>
newTag :: Text -> Text -> Tag

-- | A tag key, such as <tt>Stage</tt> or <tt>Name</tt>. A tag key cannot
--   be empty. The key can be a maximum of 127 characters, and can contain
--   only Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt>
tag_key :: Lens' Tag Text

-- | An optional tag value, such as <tt>Production</tt> or
--   <tt>test-owcm-server</tt>. The value can be a maximum of 255
--   characters, and contain only Unicode letters, numbers, or separators,
--   or the following special characters: <tt>+ - = . _ : /</tt>
tag_value :: Lens' Tag Text


-- | Applies tags to an AWS OpsWorks for Chef Automate or AWS OpsWorks for
--   Puppet Enterprise server, or to server backups.
module Amazonka.OpsWorksCM.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The Amazon Resource Number (ARN) of a resource to which you want to
--   apply tags. For example,
--   <tt>arn:aws:opsworks-cm:us-west-2:123456789012:server/test-owcm-server/EXAMPLE-66b0-4196-8274-d1a2bEXAMPLE</tt>.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | A map that contains tag keys and tag values to attach to AWS
--   OpsWorks-CM servers or backups.
--   
--   <ul>
--   <li>The key cannot be empty.</li>
--   <li>The key can be a maximum of 127 characters, and can contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt></li>
--   <li>The value can be a maximum 255 characters, and contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt></li>
--   <li>Leading and trailing white spaces are trimmed from both the key
--   and value.</li>
--   <li>A maximum of 50 user-applied tags is allowed for any AWS
--   OpsWorks-CM server or backup.</li>
--   </ul>
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Number (ARN) of a resource to which you want to
--   apply tags. For example,
--   <tt>arn:aws:opsworks-cm:us-west-2:123456789012:server/test-owcm-server/EXAMPLE-66b0-4196-8274-d1a2bEXAMPLE</tt>.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A map that
--   contains tag keys and tag values to attach to AWS OpsWorks-CM servers
--   or backups.
--   
--   <ul>
--   <li>The key cannot be empty.</li>
--   <li>The key can be a maximum of 127 characters, and can contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt></li>
--   <li>The value can be a maximum 255 characters, and contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt></li>
--   <li>Leading and trailing white spaces are trimmed from both the key
--   and value.</li>
--   <li>A maximum of 50 user-applied tags is allowed for any AWS
--   OpsWorks-CM server or backup.</li>
--   </ul>
newTagResource :: Text -> TagResource

-- | The Amazon Resource Number (ARN) of a resource to which you want to
--   apply tags. For example,
--   <tt>arn:aws:opsworks-cm:us-west-2:123456789012:server/test-owcm-server/EXAMPLE-66b0-4196-8274-d1a2bEXAMPLE</tt>.
tagResource_resourceArn :: Lens' TagResource Text

-- | A map that contains tag keys and tag values to attach to AWS
--   OpsWorks-CM servers or backups.
--   
--   <ul>
--   <li>The key cannot be empty.</li>
--   <li>The key can be a maximum of 127 characters, and can contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt></li>
--   <li>The value can be a maximum 255 characters, and contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt></li>
--   <li>Leading and trailing white spaces are trimmed from both the key
--   and value.</li>
--   <li>A maximum of 50 user-applied tags is allowed for any AWS
--   OpsWorks-CM server or backup.</li>
--   </ul>
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.OpsWorksCM.TagResource.TagResource
instance GHC.Show.Show Amazonka.OpsWorksCM.TagResource.TagResource
instance GHC.Read.Read Amazonka.OpsWorksCM.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.OpsWorksCM.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.OpsWorksCM.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.OpsWorksCM.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.OpsWorksCM.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.OpsWorksCM.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.OpsWorksCM.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.OpsWorksCM.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.OpsWorksCM.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.TagResource.TagResource


-- | Manually starts server maintenance. This command can be useful if an
--   earlier maintenance attempt failed, and the underlying cause of
--   maintenance failure has been resolved. The server is in an
--   <tt>UNDER_MAINTENANCE</tt> state while maintenance is in progress.
--   
--   Maintenance can only be started on servers in <tt>HEALTHY</tt> and
--   <tt>UNHEALTHY</tt> states. Otherwise, an
--   <tt>InvalidStateException</tt> is thrown. A
--   <tt>ResourceNotFoundException</tt> is thrown when the server does not
--   exist. A <tt>ValidationException</tt> is raised when parameters of the
--   request are not valid.
module Amazonka.OpsWorksCM.StartMaintenance

-- | <i>See:</i> <a>newStartMaintenance</a> smart constructor.
data StartMaintenance
StartMaintenance' :: Maybe [EngineAttribute] -> Text -> StartMaintenance

-- | Engine attributes that are specific to the server on which you want to
--   run maintenance.
--   
--   <b>Attributes accepted in a StartMaintenance request for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_MAJOR_UPGRADE</tt>: If a Chef Automate server is eligible
--   for upgrade to Chef Automate 2, add this engine attribute to a
--   <tt>StartMaintenance</tt> request and set the value to <tt>true</tt>
--   to upgrade the server to Chef Automate 2. For more information, see
--   <a>Upgrade an AWS OpsWorks for Chef Automate Server to Chef Automate
--   2</a>.</li>
--   </ul>
[$sel:engineAttributes:StartMaintenance'] :: StartMaintenance -> Maybe [EngineAttribute]

-- | The name of the server on which to run maintenance.
[$sel:serverName:StartMaintenance'] :: StartMaintenance -> Text

-- | Create a value of <a>StartMaintenance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineAttributes:StartMaintenance'</a>,
--   <a>startMaintenance_engineAttributes</a> - Engine attributes that are
--   specific to the server on which you want to run maintenance.
--   
--   <b>Attributes accepted in a StartMaintenance request for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_MAJOR_UPGRADE</tt>: If a Chef Automate server is eligible
--   for upgrade to Chef Automate 2, add this engine attribute to a
--   <tt>StartMaintenance</tt> request and set the value to <tt>true</tt>
--   to upgrade the server to Chef Automate 2. For more information, see
--   <a>Upgrade an AWS OpsWorks for Chef Automate Server to Chef Automate
--   2</a>.</li>
--   </ul>
--   
--   <a>$sel:serverName:StartMaintenance'</a>,
--   <a>startMaintenance_serverName</a> - The name of the server on which
--   to run maintenance.
newStartMaintenance :: Text -> StartMaintenance

-- | Engine attributes that are specific to the server on which you want to
--   run maintenance.
--   
--   <b>Attributes accepted in a StartMaintenance request for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_MAJOR_UPGRADE</tt>: If a Chef Automate server is eligible
--   for upgrade to Chef Automate 2, add this engine attribute to a
--   <tt>StartMaintenance</tt> request and set the value to <tt>true</tt>
--   to upgrade the server to Chef Automate 2. For more information, see
--   <a>Upgrade an AWS OpsWorks for Chef Automate Server to Chef Automate
--   2</a>.</li>
--   </ul>
startMaintenance_engineAttributes :: Lens' StartMaintenance (Maybe [EngineAttribute])

-- | The name of the server on which to run maintenance.
startMaintenance_serverName :: Lens' StartMaintenance Text

-- | <i>See:</i> <a>newStartMaintenanceResponse</a> smart constructor.
data StartMaintenanceResponse
StartMaintenanceResponse' :: Maybe Server -> Int -> StartMaintenanceResponse

-- | Contains the response to a <tt>StartMaintenance</tt> request.
[$sel:server:StartMaintenanceResponse'] :: StartMaintenanceResponse -> Maybe Server

-- | The response's http status code.
[$sel:httpStatus:StartMaintenanceResponse'] :: StartMaintenanceResponse -> Int

-- | Create a value of <a>StartMaintenanceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:server:StartMaintenanceResponse'</a>,
--   <a>startMaintenanceResponse_server</a> - Contains the response to a
--   <tt>StartMaintenance</tt> request.
--   
--   <a>$sel:httpStatus:StartMaintenanceResponse'</a>,
--   <a>startMaintenanceResponse_httpStatus</a> - The response's http
--   status code.
newStartMaintenanceResponse :: Int -> StartMaintenanceResponse

-- | Contains the response to a <tt>StartMaintenance</tt> request.
startMaintenanceResponse_server :: Lens' StartMaintenanceResponse (Maybe Server)

-- | The response's http status code.
startMaintenanceResponse_httpStatus :: Lens' StartMaintenanceResponse Int
instance GHC.Generics.Generic Amazonka.OpsWorksCM.StartMaintenance.StartMaintenance
instance GHC.Show.Show Amazonka.OpsWorksCM.StartMaintenance.StartMaintenance
instance GHC.Classes.Eq Amazonka.OpsWorksCM.StartMaintenance.StartMaintenance
instance GHC.Generics.Generic Amazonka.OpsWorksCM.StartMaintenance.StartMaintenanceResponse
instance GHC.Show.Show Amazonka.OpsWorksCM.StartMaintenance.StartMaintenanceResponse
instance GHC.Classes.Eq Amazonka.OpsWorksCM.StartMaintenance.StartMaintenanceResponse
instance Amazonka.Types.AWSRequest Amazonka.OpsWorksCM.StartMaintenance.StartMaintenance
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.StartMaintenance.StartMaintenanceResponse
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.StartMaintenance.StartMaintenance
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.StartMaintenance.StartMaintenance
instance Amazonka.Data.Headers.ToHeaders Amazonka.OpsWorksCM.StartMaintenance.StartMaintenance
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.StartMaintenance.StartMaintenance
instance Amazonka.Data.Path.ToPath Amazonka.OpsWorksCM.StartMaintenance.StartMaintenance
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.StartMaintenance.StartMaintenance


-- | Restores a backup to a server that is in a <tt>CONNECTION_LOST</tt>,
--   <tt>HEALTHY</tt>, <tt>RUNNING</tt>, <tt>UNHEALTHY</tt>, or
--   <tt>TERMINATED</tt> state. When you run RestoreServer, the server's
--   EC2 instance is deleted, and a new EC2 instance is configured.
--   RestoreServer maintains the existing server endpoint, so configuration
--   management of the server's client devices (nodes) should continue to
--   work.
--   
--   Restoring from a backup is performed by creating a new EC2 instance.
--   If restoration is successful, and the server is in a <tt>HEALTHY</tt>
--   state, AWS OpsWorks CM switches traffic over to the new instance.
--   After restoration is finished, the old EC2 instance is maintained in a
--   <tt>Running</tt> or <tt>Stopped</tt> state, but is eventually
--   terminated.
--   
--   This operation is asynchronous.
--   
--   An <tt>InvalidStateException</tt> is thrown when the server is not in
--   a valid state. A <tt>ResourceNotFoundException</tt> is thrown when the
--   server does not exist. A <tt>ValidationException</tt> is raised when
--   parameters of the request are not valid.
module Amazonka.OpsWorksCM.RestoreServer

-- | <i>See:</i> <a>newRestoreServer</a> smart constructor.
data RestoreServer
RestoreServer' :: Maybe Text -> Maybe Text -> Text -> Text -> RestoreServer

-- | The name of the key pair to set on the new EC2 instance. This can be
--   helpful if the administrator no longer has the SSH key.
[$sel:keyPair:RestoreServer'] :: RestoreServer -> Maybe Text

-- | The type of instance to restore. Valid values must be specified in the
--   following format: <tt>^([cm][34]|t2).*</tt> For example,
--   <tt>m5.large</tt>. Valid values are <tt>m5.large</tt>,
--   <tt>r5.xlarge</tt>, and <tt>r5.2xlarge</tt>. If you do not specify
--   this parameter, RestoreServer uses the instance type from the
--   specified backup.
[$sel:instanceType:RestoreServer'] :: RestoreServer -> Maybe Text

-- | The ID of the backup that you want to use to restore a server.
[$sel:backupId:RestoreServer'] :: RestoreServer -> Text

-- | The name of the server that you want to restore.
[$sel:serverName:RestoreServer'] :: RestoreServer -> Text

-- | Create a value of <a>RestoreServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPair:RestoreServer'</a>, <a>restoreServer_keyPair</a> - The
--   name of the key pair to set on the new EC2 instance. This can be
--   helpful if the administrator no longer has the SSH key.
--   
--   <a>$sel:instanceType:RestoreServer'</a>,
--   <a>restoreServer_instanceType</a> - The type of instance to restore.
--   Valid values must be specified in the following format:
--   <tt>^([cm][34]|t2).*</tt> For example, <tt>m5.large</tt>. Valid values
--   are <tt>m5.large</tt>, <tt>r5.xlarge</tt>, and <tt>r5.2xlarge</tt>. If
--   you do not specify this parameter, RestoreServer uses the instance
--   type from the specified backup.
--   
--   <a>$sel:backupId:RestoreServer'</a>, <a>restoreServer_backupId</a> -
--   The ID of the backup that you want to use to restore a server.
--   
--   <a>$sel:serverName:RestoreServer'</a>, <a>restoreServer_serverName</a>
--   - The name of the server that you want to restore.
newRestoreServer :: Text -> Text -> RestoreServer

-- | The name of the key pair to set on the new EC2 instance. This can be
--   helpful if the administrator no longer has the SSH key.
restoreServer_keyPair :: Lens' RestoreServer (Maybe Text)

-- | The type of instance to restore. Valid values must be specified in the
--   following format: <tt>^([cm][34]|t2).*</tt> For example,
--   <tt>m5.large</tt>. Valid values are <tt>m5.large</tt>,
--   <tt>r5.xlarge</tt>, and <tt>r5.2xlarge</tt>. If you do not specify
--   this parameter, RestoreServer uses the instance type from the
--   specified backup.
restoreServer_instanceType :: Lens' RestoreServer (Maybe Text)

-- | The ID of the backup that you want to use to restore a server.
restoreServer_backupId :: Lens' RestoreServer Text

-- | The name of the server that you want to restore.
restoreServer_serverName :: Lens' RestoreServer Text

-- | <i>See:</i> <a>newRestoreServerResponse</a> smart constructor.
data RestoreServerResponse
RestoreServerResponse' :: Maybe Server -> Int -> RestoreServerResponse
[$sel:server:RestoreServerResponse'] :: RestoreServerResponse -> Maybe Server

-- | The response's http status code.
[$sel:httpStatus:RestoreServerResponse'] :: RestoreServerResponse -> Int

-- | Create a value of <a>RestoreServerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:server:RestoreServerResponse'</a>,
--   <a>restoreServerResponse_server</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:RestoreServerResponse'</a>,
--   <a>restoreServerResponse_httpStatus</a> - The response's http status
--   code.
newRestoreServerResponse :: Int -> RestoreServerResponse

-- | Undocumented member.
restoreServerResponse_server :: Lens' RestoreServerResponse (Maybe Server)

-- | The response's http status code.
restoreServerResponse_httpStatus :: Lens' RestoreServerResponse Int
instance GHC.Generics.Generic Amazonka.OpsWorksCM.RestoreServer.RestoreServer
instance GHC.Show.Show Amazonka.OpsWorksCM.RestoreServer.RestoreServer
instance GHC.Read.Read Amazonka.OpsWorksCM.RestoreServer.RestoreServer
instance GHC.Classes.Eq Amazonka.OpsWorksCM.RestoreServer.RestoreServer
instance GHC.Generics.Generic Amazonka.OpsWorksCM.RestoreServer.RestoreServerResponse
instance GHC.Show.Show Amazonka.OpsWorksCM.RestoreServer.RestoreServerResponse
instance GHC.Classes.Eq Amazonka.OpsWorksCM.RestoreServer.RestoreServerResponse
instance Amazonka.Types.AWSRequest Amazonka.OpsWorksCM.RestoreServer.RestoreServer
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.RestoreServer.RestoreServerResponse
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.RestoreServer.RestoreServer
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.RestoreServer.RestoreServer
instance Amazonka.Data.Headers.ToHeaders Amazonka.OpsWorksCM.RestoreServer.RestoreServer
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.RestoreServer.RestoreServer
instance Amazonka.Data.Path.ToPath Amazonka.OpsWorksCM.RestoreServer.RestoreServer
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.RestoreServer.RestoreServer


-- | Returns a list of tags that are applied to the specified AWS OpsWorks
--   for Chef Automate or AWS OpsWorks for Puppet Enterprise servers or
--   backups.
--   
--   This operation returns paginated results.
module Amazonka.OpsWorksCM.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Maybe Natural -> Text -> ListTagsForResource

-- | NextToken is a string that is returned in some command responses. It
--   indicates that not all entries have been returned, and that you must
--   run at least one more request to get remaining items. To get remaining
--   results, call <tt>ListTagsForResource</tt> again, and assign the token
--   from the previous results as the value of the <tt>nextToken</tt>
--   parameter. If there are no more results, the response object's
--   <tt>nextToken</tt> parameter value is <tt>null</tt>. Setting a
--   <tt>nextToken</tt> value that was not returned in your previous
--   results causes an <tt>InvalidNextTokenException</tt> to occur.
[$sel:nextToken:ListTagsForResource'] :: ListTagsForResource -> Maybe Text

-- | To receive a paginated response, use this parameter to specify the
--   maximum number of results to be returned with a single call. If the
--   number of available results exceeds this maximum, the response
--   includes a <tt>NextToken</tt> value that you can assign to the
--   <tt>NextToken</tt> request parameter to get the next set of results.
[$sel:maxResults:ListTagsForResource'] :: ListTagsForResource -> Maybe Natural

-- | The Amazon Resource Number (ARN) of an AWS OpsWorks for Chef Automate
--   or AWS OpsWorks for Puppet Enterprise server for which you want to
--   show applied tags. For example,
--   <tt>arn:aws:opsworks-cm:us-west-2:123456789012:server/test-owcm-server/EXAMPLE-66b0-4196-8274-d1a2bEXAMPLE</tt>.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - NextToken is a string that is
--   returned in some command responses. It indicates that not all entries
--   have been returned, and that you must run at least one more request to
--   get remaining items. To get remaining results, call
--   <tt>ListTagsForResource</tt> again, and assign the token from the
--   previous results as the value of the <tt>nextToken</tt> parameter. If
--   there are no more results, the response object's <tt>nextToken</tt>
--   parameter value is <tt>null</tt>. Setting a <tt>nextToken</tt> value
--   that was not returned in your previous results causes an
--   <tt>InvalidNextTokenException</tt> to occur.
--   
--   <a>$sel:maxResults:ListTagsForResource'</a>,
--   <a>listTagsForResource_maxResults</a> - To receive a paginated
--   response, use this parameter to specify the maximum number of results
--   to be returned with a single call. If the number of available results
--   exceeds this maximum, the response includes a <tt>NextToken</tt> value
--   that you can assign to the <tt>NextToken</tt> request parameter to get
--   the next set of results.
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Number
--   (ARN) of an AWS OpsWorks for Chef Automate or AWS OpsWorks for Puppet
--   Enterprise server for which you want to show applied tags. For
--   example,
--   <tt>arn:aws:opsworks-cm:us-west-2:123456789012:server/test-owcm-server/EXAMPLE-66b0-4196-8274-d1a2bEXAMPLE</tt>.
newListTagsForResource :: Text -> ListTagsForResource

-- | NextToken is a string that is returned in some command responses. It
--   indicates that not all entries have been returned, and that you must
--   run at least one more request to get remaining items. To get remaining
--   results, call <tt>ListTagsForResource</tt> again, and assign the token
--   from the previous results as the value of the <tt>nextToken</tt>
--   parameter. If there are no more results, the response object's
--   <tt>nextToken</tt> parameter value is <tt>null</tt>. Setting a
--   <tt>nextToken</tt> value that was not returned in your previous
--   results causes an <tt>InvalidNextTokenException</tt> to occur.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | To receive a paginated response, use this parameter to specify the
--   maximum number of results to be returned with a single call. If the
--   number of available results exceeds this maximum, the response
--   includes a <tt>NextToken</tt> value that you can assign to the
--   <tt>NextToken</tt> request parameter to get the next set of results.
listTagsForResource_maxResults :: Lens' ListTagsForResource (Maybe Natural)

-- | The Amazon Resource Number (ARN) of an AWS OpsWorks for Chef Automate
--   or AWS OpsWorks for Puppet Enterprise server for which you want to
--   show applied tags. For example,
--   <tt>arn:aws:opsworks-cm:us-west-2:123456789012:server/test-owcm-server/EXAMPLE-66b0-4196-8274-d1a2bEXAMPLE</tt>.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | A token that you can use as the value of <tt>NextToken</tt> in
--   subsequent calls to the API to show more results.
[$sel:nextToken:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe Text

-- | Tags that have been applied to the resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - A token that you can
--   use as the value of <tt>NextToken</tt> in subsequent calls to the API
--   to show more results.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - Tags that have been applied
--   to the resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | A token that you can use as the value of <tt>NextToken</tt> in
--   subsequent calls to the API to show more results.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | Tags that have been applied to the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.OpsWorksCM.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.OpsWorksCM.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.OpsWorksCM.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.OpsWorksCM.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.OpsWorksCM.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.OpsWorksCM.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.OpsWorksCM.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.OpsWorksCM.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.OpsWorksCM.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Pager.AWSPager Amazonka.OpsWorksCM.ListTagsForResource.ListTagsForResource
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.OpsWorksCM.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.OpsWorksCM.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.ListTagsForResource.ListTagsForResource


-- | Exports a specified server engine attribute as a base64-encoded
--   string. For example, you can export user data that you can use in EC2
--   to associate nodes with a server.
--   
--   This operation is synchronous.
--   
--   A <tt>ValidationException</tt> is raised when parameters of the
--   request are not valid. A <tt>ResourceNotFoundException</tt> is thrown
--   when the server does not exist. An <tt>InvalidStateException</tt> is
--   thrown when the server is in any of the following states: CREATING,
--   TERMINATED, FAILED or DELETING.
module Amazonka.OpsWorksCM.ExportServerEngineAttribute

-- | <i>See:</i> <a>newExportServerEngineAttribute</a> smart constructor.
data ExportServerEngineAttribute
ExportServerEngineAttribute' :: Maybe [EngineAttribute] -> Text -> Text -> ExportServerEngineAttribute

-- | The list of engine attributes. The list type is
--   <tt>EngineAttribute</tt>. An <tt>EngineAttribute</tt> list item is a
--   pair that includes an attribute name and its value. For the
--   <tt>Userdata</tt> ExportAttributeName, the following are supported
--   engine attribute names.
--   
--   <ul>
--   <li><b>RunList</b> In Chef, a list of roles or recipes that are run in
--   the specified order. In Puppet, this parameter is ignored.</li>
--   <li><b>OrganizationName</b> In Chef, an organization name. AWS
--   OpsWorks for Chef Automate always creates the organization
--   <tt>default</tt>. In Puppet, this parameter is ignored.</li>
--   <li><b>NodeEnvironment</b> In Chef, a node environment (for example,
--   development, staging, or one-box). In Puppet, this parameter is
--   ignored.</li>
--   <li><b>NodeClientVersion</b> In Chef, the version of the Chef engine
--   (three numbers separated by dots, such as 13.8.5). If this attribute
--   is empty, OpsWorks for Chef Automate uses the most current version. In
--   Puppet, this parameter is ignored.</li>
--   </ul>
[$sel:inputAttributes:ExportServerEngineAttribute'] :: ExportServerEngineAttribute -> Maybe [EngineAttribute]

-- | The name of the export attribute. Currently, the supported export
--   attribute is <tt>Userdata</tt>. This exports a user data script that
--   includes parameters and values provided in the
--   <tt>InputAttributes</tt> list.
[$sel:exportAttributeName:ExportServerEngineAttribute'] :: ExportServerEngineAttribute -> Text

-- | The name of the server from which you are exporting the attribute.
[$sel:serverName:ExportServerEngineAttribute'] :: ExportServerEngineAttribute -> Text

-- | Create a value of <a>ExportServerEngineAttribute</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputAttributes:ExportServerEngineAttribute'</a>,
--   <a>exportServerEngineAttribute_inputAttributes</a> - The list of
--   engine attributes. The list type is <tt>EngineAttribute</tt>. An
--   <tt>EngineAttribute</tt> list item is a pair that includes an
--   attribute name and its value. For the <tt>Userdata</tt>
--   ExportAttributeName, the following are supported engine attribute
--   names.
--   
--   <ul>
--   <li><b>RunList</b> In Chef, a list of roles or recipes that are run in
--   the specified order. In Puppet, this parameter is ignored.</li>
--   <li><b>OrganizationName</b> In Chef, an organization name. AWS
--   OpsWorks for Chef Automate always creates the organization
--   <tt>default</tt>. In Puppet, this parameter is ignored.</li>
--   <li><b>NodeEnvironment</b> In Chef, a node environment (for example,
--   development, staging, or one-box). In Puppet, this parameter is
--   ignored.</li>
--   <li><b>NodeClientVersion</b> In Chef, the version of the Chef engine
--   (three numbers separated by dots, such as 13.8.5). If this attribute
--   is empty, OpsWorks for Chef Automate uses the most current version. In
--   Puppet, this parameter is ignored.</li>
--   </ul>
--   
--   <a>$sel:exportAttributeName:ExportServerEngineAttribute'</a>,
--   <a>exportServerEngineAttribute_exportAttributeName</a> - The name of
--   the export attribute. Currently, the supported export attribute is
--   <tt>Userdata</tt>. This exports a user data script that includes
--   parameters and values provided in the <tt>InputAttributes</tt> list.
--   
--   <a>$sel:serverName:ExportServerEngineAttribute'</a>,
--   <a>exportServerEngineAttribute_serverName</a> - The name of the server
--   from which you are exporting the attribute.
newExportServerEngineAttribute :: Text -> Text -> ExportServerEngineAttribute

-- | The list of engine attributes. The list type is
--   <tt>EngineAttribute</tt>. An <tt>EngineAttribute</tt> list item is a
--   pair that includes an attribute name and its value. For the
--   <tt>Userdata</tt> ExportAttributeName, the following are supported
--   engine attribute names.
--   
--   <ul>
--   <li><b>RunList</b> In Chef, a list of roles or recipes that are run in
--   the specified order. In Puppet, this parameter is ignored.</li>
--   <li><b>OrganizationName</b> In Chef, an organization name. AWS
--   OpsWorks for Chef Automate always creates the organization
--   <tt>default</tt>. In Puppet, this parameter is ignored.</li>
--   <li><b>NodeEnvironment</b> In Chef, a node environment (for example,
--   development, staging, or one-box). In Puppet, this parameter is
--   ignored.</li>
--   <li><b>NodeClientVersion</b> In Chef, the version of the Chef engine
--   (three numbers separated by dots, such as 13.8.5). If this attribute
--   is empty, OpsWorks for Chef Automate uses the most current version. In
--   Puppet, this parameter is ignored.</li>
--   </ul>
exportServerEngineAttribute_inputAttributes :: Lens' ExportServerEngineAttribute (Maybe [EngineAttribute])

-- | The name of the export attribute. Currently, the supported export
--   attribute is <tt>Userdata</tt>. This exports a user data script that
--   includes parameters and values provided in the
--   <tt>InputAttributes</tt> list.
exportServerEngineAttribute_exportAttributeName :: Lens' ExportServerEngineAttribute Text

-- | The name of the server from which you are exporting the attribute.
exportServerEngineAttribute_serverName :: Lens' ExportServerEngineAttribute Text

-- | <i>See:</i> <a>newExportServerEngineAttributeResponse</a> smart
--   constructor.
data ExportServerEngineAttributeResponse
ExportServerEngineAttributeResponse' :: Maybe Text -> Maybe EngineAttribute -> Int -> ExportServerEngineAttributeResponse

-- | The server name used in the request.
[$sel:serverName:ExportServerEngineAttributeResponse'] :: ExportServerEngineAttributeResponse -> Maybe Text

-- | The requested engine attribute pair with attribute name and value.
[$sel:engineAttribute:ExportServerEngineAttributeResponse'] :: ExportServerEngineAttributeResponse -> Maybe EngineAttribute

-- | The response's http status code.
[$sel:httpStatus:ExportServerEngineAttributeResponse'] :: ExportServerEngineAttributeResponse -> Int

-- | Create a value of <a>ExportServerEngineAttributeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverName:ExportServerEngineAttribute'</a>,
--   <a>exportServerEngineAttributeResponse_serverName</a> - The server
--   name used in the request.
--   
--   <a>$sel:engineAttribute:ExportServerEngineAttributeResponse'</a>,
--   <a>exportServerEngineAttributeResponse_engineAttribute</a> - The
--   requested engine attribute pair with attribute name and value.
--   
--   <a>$sel:httpStatus:ExportServerEngineAttributeResponse'</a>,
--   <a>exportServerEngineAttributeResponse_httpStatus</a> - The response's
--   http status code.
newExportServerEngineAttributeResponse :: Int -> ExportServerEngineAttributeResponse

-- | The server name used in the request.
exportServerEngineAttributeResponse_serverName :: Lens' ExportServerEngineAttributeResponse (Maybe Text)

-- | The requested engine attribute pair with attribute name and value.
exportServerEngineAttributeResponse_engineAttribute :: Lens' ExportServerEngineAttributeResponse (Maybe EngineAttribute)

-- | The response's http status code.
exportServerEngineAttributeResponse_httpStatus :: Lens' ExportServerEngineAttributeResponse Int
instance GHC.Generics.Generic Amazonka.OpsWorksCM.ExportServerEngineAttribute.ExportServerEngineAttribute
instance GHC.Show.Show Amazonka.OpsWorksCM.ExportServerEngineAttribute.ExportServerEngineAttribute
instance GHC.Classes.Eq Amazonka.OpsWorksCM.ExportServerEngineAttribute.ExportServerEngineAttribute
instance GHC.Generics.Generic Amazonka.OpsWorksCM.ExportServerEngineAttribute.ExportServerEngineAttributeResponse
instance GHC.Show.Show Amazonka.OpsWorksCM.ExportServerEngineAttribute.ExportServerEngineAttributeResponse
instance GHC.Classes.Eq Amazonka.OpsWorksCM.ExportServerEngineAttribute.ExportServerEngineAttributeResponse
instance Amazonka.Types.AWSRequest Amazonka.OpsWorksCM.ExportServerEngineAttribute.ExportServerEngineAttribute
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.ExportServerEngineAttribute.ExportServerEngineAttributeResponse
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.ExportServerEngineAttribute.ExportServerEngineAttribute
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.ExportServerEngineAttribute.ExportServerEngineAttribute
instance Amazonka.Data.Headers.ToHeaders Amazonka.OpsWorksCM.ExportServerEngineAttribute.ExportServerEngineAttribute
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.ExportServerEngineAttribute.ExportServerEngineAttribute
instance Amazonka.Data.Path.ToPath Amazonka.OpsWorksCM.ExportServerEngineAttribute.ExportServerEngineAttribute
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.ExportServerEngineAttribute.ExportServerEngineAttribute


-- | Disassociates a node from an AWS OpsWorks CM server, and removes the
--   node from the server's managed nodes. After a node is disassociated,
--   the node key pair is no longer valid for accessing the configuration
--   manager's API. For more information about how to associate a node, see
--   AssociateNode.
--   
--   A node can can only be disassociated from a server that is in a
--   <tt>HEALTHY</tt> state. Otherwise, an <tt>InvalidStateException</tt>
--   is thrown. A <tt>ResourceNotFoundException</tt> is thrown when the
--   server does not exist. A <tt>ValidationException</tt> is raised when
--   parameters of the request are not valid.
module Amazonka.OpsWorksCM.DisassociateNode

-- | <i>See:</i> <a>newDisassociateNode</a> smart constructor.
data DisassociateNode
DisassociateNode' :: Maybe [EngineAttribute] -> Text -> Text -> DisassociateNode

-- | Engine attributes that are used for disassociating the node. No
--   attributes are required for Puppet.
--   
--   <b>Attributes required in a DisassociateNode request for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_ORGANIZATION</tt>: The Chef organization with which the
--   node was associated. By default only one organization named
--   <tt>default</tt> can exist.</li>
--   </ul>
[$sel:engineAttributes:DisassociateNode'] :: DisassociateNode -> Maybe [EngineAttribute]

-- | The name of the server from which to disassociate the node.
[$sel:serverName:DisassociateNode'] :: DisassociateNode -> Text

-- | The name of the client node.
[$sel:nodeName:DisassociateNode'] :: DisassociateNode -> Text

-- | Create a value of <a>DisassociateNode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineAttributes:DisassociateNode'</a>,
--   <a>disassociateNode_engineAttributes</a> - Engine attributes that are
--   used for disassociating the node. No attributes are required for
--   Puppet.
--   
--   <b>Attributes required in a DisassociateNode request for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_ORGANIZATION</tt>: The Chef organization with which the
--   node was associated. By default only one organization named
--   <tt>default</tt> can exist.</li>
--   </ul>
--   
--   <a>$sel:serverName:DisassociateNode'</a>,
--   <a>disassociateNode_serverName</a> - The name of the server from which
--   to disassociate the node.
--   
--   <a>$sel:nodeName:DisassociateNode'</a>,
--   <a>disassociateNode_nodeName</a> - The name of the client node.
newDisassociateNode :: Text -> Text -> DisassociateNode

-- | Engine attributes that are used for disassociating the node. No
--   attributes are required for Puppet.
--   
--   <b>Attributes required in a DisassociateNode request for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_ORGANIZATION</tt>: The Chef organization with which the
--   node was associated. By default only one organization named
--   <tt>default</tt> can exist.</li>
--   </ul>
disassociateNode_engineAttributes :: Lens' DisassociateNode (Maybe [EngineAttribute])

-- | The name of the server from which to disassociate the node.
disassociateNode_serverName :: Lens' DisassociateNode Text

-- | The name of the client node.
disassociateNode_nodeName :: Lens' DisassociateNode Text

-- | <i>See:</i> <a>newDisassociateNodeResponse</a> smart constructor.
data DisassociateNodeResponse
DisassociateNodeResponse' :: Maybe Text -> Int -> DisassociateNodeResponse

-- | Contains a token which can be passed to the
--   <tt>DescribeNodeAssociationStatus</tt> API call to get the status of
--   the disassociation request.
[$sel:nodeAssociationStatusToken:DisassociateNodeResponse'] :: DisassociateNodeResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DisassociateNodeResponse'] :: DisassociateNodeResponse -> Int

-- | Create a value of <a>DisassociateNodeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeAssociationStatusToken:DisassociateNodeResponse'</a>,
--   <a>disassociateNodeResponse_nodeAssociationStatusToken</a> - Contains
--   a token which can be passed to the
--   <tt>DescribeNodeAssociationStatus</tt> API call to get the status of
--   the disassociation request.
--   
--   <a>$sel:httpStatus:DisassociateNodeResponse'</a>,
--   <a>disassociateNodeResponse_httpStatus</a> - The response's http
--   status code.
newDisassociateNodeResponse :: Int -> DisassociateNodeResponse

-- | Contains a token which can be passed to the
--   <tt>DescribeNodeAssociationStatus</tt> API call to get the status of
--   the disassociation request.
disassociateNodeResponse_nodeAssociationStatusToken :: Lens' DisassociateNodeResponse (Maybe Text)

-- | The response's http status code.
disassociateNodeResponse_httpStatus :: Lens' DisassociateNodeResponse Int
instance GHC.Generics.Generic Amazonka.OpsWorksCM.DisassociateNode.DisassociateNode
instance GHC.Show.Show Amazonka.OpsWorksCM.DisassociateNode.DisassociateNode
instance GHC.Classes.Eq Amazonka.OpsWorksCM.DisassociateNode.DisassociateNode
instance GHC.Generics.Generic Amazonka.OpsWorksCM.DisassociateNode.DisassociateNodeResponse
instance GHC.Show.Show Amazonka.OpsWorksCM.DisassociateNode.DisassociateNodeResponse
instance GHC.Read.Read Amazonka.OpsWorksCM.DisassociateNode.DisassociateNodeResponse
instance GHC.Classes.Eq Amazonka.OpsWorksCM.DisassociateNode.DisassociateNodeResponse
instance Amazonka.Types.AWSRequest Amazonka.OpsWorksCM.DisassociateNode.DisassociateNode
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.DisassociateNode.DisassociateNodeResponse
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.DisassociateNode.DisassociateNode
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.DisassociateNode.DisassociateNode
instance Amazonka.Data.Headers.ToHeaders Amazonka.OpsWorksCM.DisassociateNode.DisassociateNode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.DisassociateNode.DisassociateNode
instance Amazonka.Data.Path.ToPath Amazonka.OpsWorksCM.DisassociateNode.DisassociateNode
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.DisassociateNode.DisassociateNode


-- | Lists all configuration management servers that are identified with
--   your account. Only the stored results from Amazon DynamoDB are
--   returned. AWS OpsWorks CM does not query other services.
--   
--   This operation is synchronous.
--   
--   A <tt>ResourceNotFoundException</tt> is thrown when the server does
--   not exist. A <tt>ValidationException</tt> is raised when parameters of
--   the request are not valid.
--   
--   This operation returns paginated results.
module Amazonka.OpsWorksCM.DescribeServers

-- | <i>See:</i> <a>newDescribeServers</a> smart constructor.
data DescribeServers
DescribeServers' :: Maybe Text -> Maybe Text -> Maybe Natural -> DescribeServers

-- | Describes the server with the specified ServerName.
[$sel:serverName:DescribeServers'] :: DescribeServers -> Maybe Text

-- | This is not currently implemented for <tt>DescribeServers</tt>
--   requests.
[$sel:nextToken:DescribeServers'] :: DescribeServers -> Maybe Text

-- | This is not currently implemented for <tt>DescribeServers</tt>
--   requests.
[$sel:maxResults:DescribeServers'] :: DescribeServers -> Maybe Natural

-- | Create a value of <a>DescribeServers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverName:DescribeServers'</a>,
--   <a>describeServers_serverName</a> - Describes the server with the
--   specified ServerName.
--   
--   <a>$sel:nextToken:DescribeServers'</a>,
--   <a>describeServers_nextToken</a> - This is not currently implemented
--   for <tt>DescribeServers</tt> requests.
--   
--   <a>$sel:maxResults:DescribeServers'</a>,
--   <a>describeServers_maxResults</a> - This is not currently implemented
--   for <tt>DescribeServers</tt> requests.
newDescribeServers :: DescribeServers

-- | Describes the server with the specified ServerName.
describeServers_serverName :: Lens' DescribeServers (Maybe Text)

-- | This is not currently implemented for <tt>DescribeServers</tt>
--   requests.
describeServers_nextToken :: Lens' DescribeServers (Maybe Text)

-- | This is not currently implemented for <tt>DescribeServers</tt>
--   requests.
describeServers_maxResults :: Lens' DescribeServers (Maybe Natural)

-- | <i>See:</i> <a>newDescribeServersResponse</a> smart constructor.
data DescribeServersResponse
DescribeServersResponse' :: Maybe [Server] -> Maybe Text -> Int -> DescribeServersResponse

-- | Contains the response to a <tt>DescribeServers</tt> request.
--   
--   <i>For Chef Automate servers:</i> If
--   <tt>DescribeServersResponse$Servers$EngineAttributes</tt> includes
--   CHEF_MAJOR_UPGRADE_AVAILABLE, you can upgrade the Chef Automate server
--   to Chef Automate 2. To be eligible for upgrade, a server running Chef
--   Automate 1 must have had at least one successful maintenance run after
--   November 1, 2019.
--   
--   <i>For Puppet servers:</i>
--   <tt>DescribeServersResponse$Servers$EngineAttributes</tt> contains the
--   following two responses:
--   
--   <ul>
--   <li><tt>PUPPET_API_CA_CERT</tt>, the PEM-encoded CA certificate that
--   is used by the Puppet API over TCP port number 8140. The CA
--   certificate is also used to sign node certificates.</li>
--   <li><tt>PUPPET_API_CRL</tt>, a certificate revocation list. The
--   certificate revocation list is for internal maintenance purposes only.
--   For more information about the Puppet certificate revocation list, see
--   <a>Man Page: puppet certificate_revocation_list</a> in the Puppet
--   documentation.</li>
--   </ul>
[$sel:servers:DescribeServersResponse'] :: DescribeServersResponse -> Maybe [Server]

-- | This is not currently implemented for <tt>DescribeServers</tt>
--   requests.
[$sel:nextToken:DescribeServersResponse'] :: DescribeServersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeServersResponse'] :: DescribeServersResponse -> Int

-- | Create a value of <a>DescribeServersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:servers:DescribeServersResponse'</a>,
--   <a>describeServersResponse_servers</a> - Contains the response to a
--   <tt>DescribeServers</tt> request.
--   
--   <i>For Chef Automate servers:</i> If
--   <tt>DescribeServersResponse$Servers$EngineAttributes</tt> includes
--   CHEF_MAJOR_UPGRADE_AVAILABLE, you can upgrade the Chef Automate server
--   to Chef Automate 2. To be eligible for upgrade, a server running Chef
--   Automate 1 must have had at least one successful maintenance run after
--   November 1, 2019.
--   
--   <i>For Puppet servers:</i>
--   <tt>DescribeServersResponse$Servers$EngineAttributes</tt> contains the
--   following two responses:
--   
--   <ul>
--   <li><tt>PUPPET_API_CA_CERT</tt>, the PEM-encoded CA certificate that
--   is used by the Puppet API over TCP port number 8140. The CA
--   certificate is also used to sign node certificates.</li>
--   <li><tt>PUPPET_API_CRL</tt>, a certificate revocation list. The
--   certificate revocation list is for internal maintenance purposes only.
--   For more information about the Puppet certificate revocation list, see
--   <a>Man Page: puppet certificate_revocation_list</a> in the Puppet
--   documentation.</li>
--   </ul>
--   
--   <a>$sel:nextToken:DescribeServers'</a>,
--   <a>describeServersResponse_nextToken</a> - This is not currently
--   implemented for <tt>DescribeServers</tt> requests.
--   
--   <a>$sel:httpStatus:DescribeServersResponse'</a>,
--   <a>describeServersResponse_httpStatus</a> - The response's http status
--   code.
newDescribeServersResponse :: Int -> DescribeServersResponse

-- | Contains the response to a <tt>DescribeServers</tt> request.
--   
--   <i>For Chef Automate servers:</i> If
--   <tt>DescribeServersResponse$Servers$EngineAttributes</tt> includes
--   CHEF_MAJOR_UPGRADE_AVAILABLE, you can upgrade the Chef Automate server
--   to Chef Automate 2. To be eligible for upgrade, a server running Chef
--   Automate 1 must have had at least one successful maintenance run after
--   November 1, 2019.
--   
--   <i>For Puppet servers:</i>
--   <tt>DescribeServersResponse$Servers$EngineAttributes</tt> contains the
--   following two responses:
--   
--   <ul>
--   <li><tt>PUPPET_API_CA_CERT</tt>, the PEM-encoded CA certificate that
--   is used by the Puppet API over TCP port number 8140. The CA
--   certificate is also used to sign node certificates.</li>
--   <li><tt>PUPPET_API_CRL</tt>, a certificate revocation list. The
--   certificate revocation list is for internal maintenance purposes only.
--   For more information about the Puppet certificate revocation list, see
--   <a>Man Page: puppet certificate_revocation_list</a> in the Puppet
--   documentation.</li>
--   </ul>
describeServersResponse_servers :: Lens' DescribeServersResponse (Maybe [Server])

-- | This is not currently implemented for <tt>DescribeServers</tt>
--   requests.
describeServersResponse_nextToken :: Lens' DescribeServersResponse (Maybe Text)

-- | The response's http status code.
describeServersResponse_httpStatus :: Lens' DescribeServersResponse Int
instance GHC.Generics.Generic Amazonka.OpsWorksCM.DescribeServers.DescribeServers
instance GHC.Show.Show Amazonka.OpsWorksCM.DescribeServers.DescribeServers
instance GHC.Read.Read Amazonka.OpsWorksCM.DescribeServers.DescribeServers
instance GHC.Classes.Eq Amazonka.OpsWorksCM.DescribeServers.DescribeServers
instance GHC.Generics.Generic Amazonka.OpsWorksCM.DescribeServers.DescribeServersResponse
instance GHC.Show.Show Amazonka.OpsWorksCM.DescribeServers.DescribeServersResponse
instance GHC.Classes.Eq Amazonka.OpsWorksCM.DescribeServers.DescribeServersResponse
instance Amazonka.Types.AWSRequest Amazonka.OpsWorksCM.DescribeServers.DescribeServers
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.DescribeServers.DescribeServersResponse
instance Amazonka.Pager.AWSPager Amazonka.OpsWorksCM.DescribeServers.DescribeServers
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.DescribeServers.DescribeServers
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.DescribeServers.DescribeServers
instance Amazonka.Data.Headers.ToHeaders Amazonka.OpsWorksCM.DescribeServers.DescribeServers
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.DescribeServers.DescribeServers
instance Amazonka.Data.Path.ToPath Amazonka.OpsWorksCM.DescribeServers.DescribeServers
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.DescribeServers.DescribeServers


-- | Returns the current status of an existing association or
--   disassociation request.
--   
--   A <tt>ResourceNotFoundException</tt> is thrown when no recent
--   association or disassociation request with the specified token is
--   found, or when the server does not exist. A
--   <tt>ValidationException</tt> is raised when parameters of the request
--   are not valid.
module Amazonka.OpsWorksCM.DescribeNodeAssociationStatus

-- | <i>See:</i> <a>newDescribeNodeAssociationStatus</a> smart constructor.
data DescribeNodeAssociationStatus
DescribeNodeAssociationStatus' :: Text -> Text -> DescribeNodeAssociationStatus

-- | The token returned in either the AssociateNodeResponse or the
--   DisassociateNodeResponse.
[$sel:nodeAssociationStatusToken:DescribeNodeAssociationStatus'] :: DescribeNodeAssociationStatus -> Text

-- | The name of the server from which to disassociate the node.
[$sel:serverName:DescribeNodeAssociationStatus'] :: DescribeNodeAssociationStatus -> Text

-- | Create a value of <a>DescribeNodeAssociationStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeAssociationStatusToken:DescribeNodeAssociationStatus'</a>,
--   <a>describeNodeAssociationStatus_nodeAssociationStatusToken</a> - The
--   token returned in either the AssociateNodeResponse or the
--   DisassociateNodeResponse.
--   
--   <a>$sel:serverName:DescribeNodeAssociationStatus'</a>,
--   <a>describeNodeAssociationStatus_serverName</a> - The name of the
--   server from which to disassociate the node.
newDescribeNodeAssociationStatus :: Text -> Text -> DescribeNodeAssociationStatus

-- | The token returned in either the AssociateNodeResponse or the
--   DisassociateNodeResponse.
describeNodeAssociationStatus_nodeAssociationStatusToken :: Lens' DescribeNodeAssociationStatus Text

-- | The name of the server from which to disassociate the node.
describeNodeAssociationStatus_serverName :: Lens' DescribeNodeAssociationStatus Text

-- | <i>See:</i> <a>newDescribeNodeAssociationStatusResponse</a> smart
--   constructor.
data DescribeNodeAssociationStatusResponse
DescribeNodeAssociationStatusResponse' :: Maybe [EngineAttribute] -> Int -> NodeAssociationStatus -> DescribeNodeAssociationStatusResponse

-- | Attributes specific to the node association. In Puppet, the attibute
--   PUPPET_NODE_CERT contains the signed certificate (the result of the
--   CSR).
[$sel:engineAttributes:DescribeNodeAssociationStatusResponse'] :: DescribeNodeAssociationStatusResponse -> Maybe [EngineAttribute]

-- | The response's http status code.
[$sel:httpStatus:DescribeNodeAssociationStatusResponse'] :: DescribeNodeAssociationStatusResponse -> Int

-- | The status of the association or disassociation request.
--   
--   <b>Possible values:</b>
--   
--   <ul>
--   <li><tt>SUCCESS</tt>: The association or disassociation
--   succeeded.</li>
--   <li><tt>FAILED</tt>: The association or disassociation failed.</li>
--   <li><tt>IN_PROGRESS</tt>: The association or disassociation is still
--   in progress.</li>
--   </ul>
[$sel:nodeAssociationStatus:DescribeNodeAssociationStatusResponse'] :: DescribeNodeAssociationStatusResponse -> NodeAssociationStatus

-- | Create a value of <a>DescribeNodeAssociationStatusResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineAttributes:DescribeNodeAssociationStatusResponse'</a>,
--   <a>describeNodeAssociationStatusResponse_engineAttributes</a> -
--   Attributes specific to the node association. In Puppet, the attibute
--   PUPPET_NODE_CERT contains the signed certificate (the result of the
--   CSR).
--   
--   <a>$sel:httpStatus:DescribeNodeAssociationStatusResponse'</a>,
--   <a>describeNodeAssociationStatusResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:nodeAssociationStatus:DescribeNodeAssociationStatusResponse'</a>,
--   <a>describeNodeAssociationStatusResponse_nodeAssociationStatus</a> -
--   The status of the association or disassociation request.
--   
--   <b>Possible values:</b>
--   
--   <ul>
--   <li><tt>SUCCESS</tt>: The association or disassociation
--   succeeded.</li>
--   <li><tt>FAILED</tt>: The association or disassociation failed.</li>
--   <li><tt>IN_PROGRESS</tt>: The association or disassociation is still
--   in progress.</li>
--   </ul>
newDescribeNodeAssociationStatusResponse :: Int -> NodeAssociationStatus -> DescribeNodeAssociationStatusResponse

-- | Attributes specific to the node association. In Puppet, the attibute
--   PUPPET_NODE_CERT contains the signed certificate (the result of the
--   CSR).
describeNodeAssociationStatusResponse_engineAttributes :: Lens' DescribeNodeAssociationStatusResponse (Maybe [EngineAttribute])

-- | The response's http status code.
describeNodeAssociationStatusResponse_httpStatus :: Lens' DescribeNodeAssociationStatusResponse Int

-- | The status of the association or disassociation request.
--   
--   <b>Possible values:</b>
--   
--   <ul>
--   <li><tt>SUCCESS</tt>: The association or disassociation
--   succeeded.</li>
--   <li><tt>FAILED</tt>: The association or disassociation failed.</li>
--   <li><tt>IN_PROGRESS</tt>: The association or disassociation is still
--   in progress.</li>
--   </ul>
describeNodeAssociationStatusResponse_nodeAssociationStatus :: Lens' DescribeNodeAssociationStatusResponse NodeAssociationStatus
instance GHC.Generics.Generic Amazonka.OpsWorksCM.DescribeNodeAssociationStatus.DescribeNodeAssociationStatus
instance GHC.Show.Show Amazonka.OpsWorksCM.DescribeNodeAssociationStatus.DescribeNodeAssociationStatus
instance GHC.Read.Read Amazonka.OpsWorksCM.DescribeNodeAssociationStatus.DescribeNodeAssociationStatus
instance GHC.Classes.Eq Amazonka.OpsWorksCM.DescribeNodeAssociationStatus.DescribeNodeAssociationStatus
instance GHC.Generics.Generic Amazonka.OpsWorksCM.DescribeNodeAssociationStatus.DescribeNodeAssociationStatusResponse
instance GHC.Show.Show Amazonka.OpsWorksCM.DescribeNodeAssociationStatus.DescribeNodeAssociationStatusResponse
instance GHC.Classes.Eq Amazonka.OpsWorksCM.DescribeNodeAssociationStatus.DescribeNodeAssociationStatusResponse
instance Amazonka.Types.AWSRequest Amazonka.OpsWorksCM.DescribeNodeAssociationStatus.DescribeNodeAssociationStatus
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.DescribeNodeAssociationStatus.DescribeNodeAssociationStatusResponse
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.DescribeNodeAssociationStatus.DescribeNodeAssociationStatus
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.DescribeNodeAssociationStatus.DescribeNodeAssociationStatus
instance Amazonka.Data.Headers.ToHeaders Amazonka.OpsWorksCM.DescribeNodeAssociationStatus.DescribeNodeAssociationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.DescribeNodeAssociationStatus.DescribeNodeAssociationStatus
instance Amazonka.Data.Path.ToPath Amazonka.OpsWorksCM.DescribeNodeAssociationStatus.DescribeNodeAssociationStatus
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.DescribeNodeAssociationStatus.DescribeNodeAssociationStatus


-- | Describes events for a specified server. Results are ordered by time,
--   with newest events first.
--   
--   This operation is synchronous.
--   
--   A <tt>ResourceNotFoundException</tt> is thrown when the server does
--   not exist. A <tt>ValidationException</tt> is raised when parameters of
--   the request are not valid.
--   
--   This operation returns paginated results.
module Amazonka.OpsWorksCM.DescribeEvents

-- | <i>See:</i> <a>newDescribeEvents</a> smart constructor.
data DescribeEvents
DescribeEvents' :: Maybe Text -> Maybe Natural -> Text -> DescribeEvents

-- | NextToken is a string that is returned in some command responses. It
--   indicates that not all entries have been returned, and that you must
--   run at least one more request to get remaining items. To get remaining
--   results, call <tt>DescribeEvents</tt> again, and assign the token from
--   the previous results as the value of the <tt>nextToken</tt> parameter.
--   If there are no more results, the response object's <tt>nextToken</tt>
--   parameter value is <tt>null</tt>. Setting a <tt>nextToken</tt> value
--   that was not returned in your previous results causes an
--   <tt>InvalidNextTokenException</tt> to occur.
[$sel:nextToken:DescribeEvents'] :: DescribeEvents -> Maybe Text

-- | To receive a paginated response, use this parameter to specify the
--   maximum number of results to be returned with a single call. If the
--   number of available results exceeds this maximum, the response
--   includes a <tt>NextToken</tt> value that you can assign to the
--   <tt>NextToken</tt> request parameter to get the next set of results.
[$sel:maxResults:DescribeEvents'] :: DescribeEvents -> Maybe Natural

-- | The name of the server for which you want to view events.
[$sel:serverName:DescribeEvents'] :: DescribeEvents -> Text

-- | Create a value of <a>DescribeEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeEvents'</a>, <a>describeEvents_nextToken</a>
--   - NextToken is a string that is returned in some command responses. It
--   indicates that not all entries have been returned, and that you must
--   run at least one more request to get remaining items. To get remaining
--   results, call <tt>DescribeEvents</tt> again, and assign the token from
--   the previous results as the value of the <tt>nextToken</tt> parameter.
--   If there are no more results, the response object's <tt>nextToken</tt>
--   parameter value is <tt>null</tt>. Setting a <tt>nextToken</tt> value
--   that was not returned in your previous results causes an
--   <tt>InvalidNextTokenException</tt> to occur.
--   
--   <a>$sel:maxResults:DescribeEvents'</a>,
--   <a>describeEvents_maxResults</a> - To receive a paginated response,
--   use this parameter to specify the maximum number of results to be
--   returned with a single call. If the number of available results
--   exceeds this maximum, the response includes a <tt>NextToken</tt> value
--   that you can assign to the <tt>NextToken</tt> request parameter to get
--   the next set of results.
--   
--   <a>$sel:serverName:DescribeEvents'</a>,
--   <a>describeEvents_serverName</a> - The name of the server for which
--   you want to view events.
newDescribeEvents :: Text -> DescribeEvents

-- | NextToken is a string that is returned in some command responses. It
--   indicates that not all entries have been returned, and that you must
--   run at least one more request to get remaining items. To get remaining
--   results, call <tt>DescribeEvents</tt> again, and assign the token from
--   the previous results as the value of the <tt>nextToken</tt> parameter.
--   If there are no more results, the response object's <tt>nextToken</tt>
--   parameter value is <tt>null</tt>. Setting a <tt>nextToken</tt> value
--   that was not returned in your previous results causes an
--   <tt>InvalidNextTokenException</tt> to occur.
describeEvents_nextToken :: Lens' DescribeEvents (Maybe Text)

-- | To receive a paginated response, use this parameter to specify the
--   maximum number of results to be returned with a single call. If the
--   number of available results exceeds this maximum, the response
--   includes a <tt>NextToken</tt> value that you can assign to the
--   <tt>NextToken</tt> request parameter to get the next set of results.
describeEvents_maxResults :: Lens' DescribeEvents (Maybe Natural)

-- | The name of the server for which you want to view events.
describeEvents_serverName :: Lens' DescribeEvents Text

-- | <i>See:</i> <a>newDescribeEventsResponse</a> smart constructor.
data DescribeEventsResponse
DescribeEventsResponse' :: Maybe [ServerEvent] -> Maybe Text -> Int -> DescribeEventsResponse

-- | Contains the response to a <tt>DescribeEvents</tt> request.
[$sel:serverEvents:DescribeEventsResponse'] :: DescribeEventsResponse -> Maybe [ServerEvent]

-- | NextToken is a string that is returned in some command responses. It
--   indicates that not all entries have been returned, and that you must
--   run at least one more request to get remaining items. To get remaining
--   results, call <tt>DescribeEvents</tt> again, and assign the token from
--   the previous results as the value of the <tt>nextToken</tt> parameter.
--   If there are no more results, the response object's <tt>nextToken</tt>
--   parameter value is <tt>null</tt>. Setting a <tt>nextToken</tt> value
--   that was not returned in your previous results causes an
--   <tt>InvalidNextTokenException</tt> to occur.
[$sel:nextToken:DescribeEventsResponse'] :: DescribeEventsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeEventsResponse'] :: DescribeEventsResponse -> Int

-- | Create a value of <a>DescribeEventsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverEvents:DescribeEventsResponse'</a>,
--   <a>describeEventsResponse_serverEvents</a> - Contains the response to
--   a <tt>DescribeEvents</tt> request.
--   
--   <a>$sel:nextToken:DescribeEvents'</a>,
--   <a>describeEventsResponse_nextToken</a> - NextToken is a string that
--   is returned in some command responses. It indicates that not all
--   entries have been returned, and that you must run at least one more
--   request to get remaining items. To get remaining results, call
--   <tt>DescribeEvents</tt> again, and assign the token from the previous
--   results as the value of the <tt>nextToken</tt> parameter. If there are
--   no more results, the response object's <tt>nextToken</tt> parameter
--   value is <tt>null</tt>. Setting a <tt>nextToken</tt> value that was
--   not returned in your previous results causes an
--   <tt>InvalidNextTokenException</tt> to occur.
--   
--   <a>$sel:httpStatus:DescribeEventsResponse'</a>,
--   <a>describeEventsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeEventsResponse :: Int -> DescribeEventsResponse

-- | Contains the response to a <tt>DescribeEvents</tt> request.
describeEventsResponse_serverEvents :: Lens' DescribeEventsResponse (Maybe [ServerEvent])

-- | NextToken is a string that is returned in some command responses. It
--   indicates that not all entries have been returned, and that you must
--   run at least one more request to get remaining items. To get remaining
--   results, call <tt>DescribeEvents</tt> again, and assign the token from
--   the previous results as the value of the <tt>nextToken</tt> parameter.
--   If there are no more results, the response object's <tt>nextToken</tt>
--   parameter value is <tt>null</tt>. Setting a <tt>nextToken</tt> value
--   that was not returned in your previous results causes an
--   <tt>InvalidNextTokenException</tt> to occur.
describeEventsResponse_nextToken :: Lens' DescribeEventsResponse (Maybe Text)

-- | The response's http status code.
describeEventsResponse_httpStatus :: Lens' DescribeEventsResponse Int
instance GHC.Generics.Generic Amazonka.OpsWorksCM.DescribeEvents.DescribeEvents
instance GHC.Show.Show Amazonka.OpsWorksCM.DescribeEvents.DescribeEvents
instance GHC.Read.Read Amazonka.OpsWorksCM.DescribeEvents.DescribeEvents
instance GHC.Classes.Eq Amazonka.OpsWorksCM.DescribeEvents.DescribeEvents
instance GHC.Generics.Generic Amazonka.OpsWorksCM.DescribeEvents.DescribeEventsResponse
instance GHC.Show.Show Amazonka.OpsWorksCM.DescribeEvents.DescribeEventsResponse
instance GHC.Read.Read Amazonka.OpsWorksCM.DescribeEvents.DescribeEventsResponse
instance GHC.Classes.Eq Amazonka.OpsWorksCM.DescribeEvents.DescribeEventsResponse
instance Amazonka.Types.AWSRequest Amazonka.OpsWorksCM.DescribeEvents.DescribeEvents
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.DescribeEvents.DescribeEventsResponse
instance Amazonka.Pager.AWSPager Amazonka.OpsWorksCM.DescribeEvents.DescribeEvents
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.DescribeEvents.DescribeEvents
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.DescribeEvents.DescribeEvents
instance Amazonka.Data.Headers.ToHeaders Amazonka.OpsWorksCM.DescribeEvents.DescribeEvents
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.DescribeEvents.DescribeEvents
instance Amazonka.Data.Path.ToPath Amazonka.OpsWorksCM.DescribeEvents.DescribeEvents
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.DescribeEvents.DescribeEvents


-- | Describes backups. The results are ordered by time, with newest
--   backups first. If you do not specify a BackupId or ServerName, the
--   command returns all backups.
--   
--   This operation is synchronous.
--   
--   A <tt>ResourceNotFoundException</tt> is thrown when the backup does
--   not exist. A <tt>ValidationException</tt> is raised when parameters of
--   the request are not valid.
--   
--   This operation returns paginated results.
module Amazonka.OpsWorksCM.DescribeBackups

-- | <i>See:</i> <a>newDescribeBackups</a> smart constructor.
data DescribeBackups
DescribeBackups' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeBackups

-- | Returns backups for the server with the specified ServerName.
[$sel:serverName:DescribeBackups'] :: DescribeBackups -> Maybe Text

-- | Describes a single backup.
[$sel:backupId:DescribeBackups'] :: DescribeBackups -> Maybe Text

-- | This is not currently implemented for <tt>DescribeBackups</tt>
--   requests.
[$sel:nextToken:DescribeBackups'] :: DescribeBackups -> Maybe Text

-- | This is not currently implemented for <tt>DescribeBackups</tt>
--   requests.
[$sel:maxResults:DescribeBackups'] :: DescribeBackups -> Maybe Natural

-- | Create a value of <a>DescribeBackups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverName:DescribeBackups'</a>,
--   <a>describeBackups_serverName</a> - Returns backups for the server
--   with the specified ServerName.
--   
--   <a>$sel:backupId:DescribeBackups'</a>, <a>describeBackups_backupId</a>
--   - Describes a single backup.
--   
--   <a>$sel:nextToken:DescribeBackups'</a>,
--   <a>describeBackups_nextToken</a> - This is not currently implemented
--   for <tt>DescribeBackups</tt> requests.
--   
--   <a>$sel:maxResults:DescribeBackups'</a>,
--   <a>describeBackups_maxResults</a> - This is not currently implemented
--   for <tt>DescribeBackups</tt> requests.
newDescribeBackups :: DescribeBackups

-- | Returns backups for the server with the specified ServerName.
describeBackups_serverName :: Lens' DescribeBackups (Maybe Text)

-- | Describes a single backup.
describeBackups_backupId :: Lens' DescribeBackups (Maybe Text)

-- | This is not currently implemented for <tt>DescribeBackups</tt>
--   requests.
describeBackups_nextToken :: Lens' DescribeBackups (Maybe Text)

-- | This is not currently implemented for <tt>DescribeBackups</tt>
--   requests.
describeBackups_maxResults :: Lens' DescribeBackups (Maybe Natural)

-- | <i>See:</i> <a>newDescribeBackupsResponse</a> smart constructor.
data DescribeBackupsResponse
DescribeBackupsResponse' :: Maybe [Backup] -> Maybe Text -> Int -> DescribeBackupsResponse

-- | Contains the response to a <tt>DescribeBackups</tt> request.
[$sel:backups:DescribeBackupsResponse'] :: DescribeBackupsResponse -> Maybe [Backup]

-- | This is not currently implemented for <tt>DescribeBackups</tt>
--   requests.
[$sel:nextToken:DescribeBackupsResponse'] :: DescribeBackupsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeBackupsResponse'] :: DescribeBackupsResponse -> Int

-- | Create a value of <a>DescribeBackupsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backups:DescribeBackupsResponse'</a>,
--   <a>describeBackupsResponse_backups</a> - Contains the response to a
--   <tt>DescribeBackups</tt> request.
--   
--   <a>$sel:nextToken:DescribeBackups'</a>,
--   <a>describeBackupsResponse_nextToken</a> - This is not currently
--   implemented for <tt>DescribeBackups</tt> requests.
--   
--   <a>$sel:httpStatus:DescribeBackupsResponse'</a>,
--   <a>describeBackupsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeBackupsResponse :: Int -> DescribeBackupsResponse

-- | Contains the response to a <tt>DescribeBackups</tt> request.
describeBackupsResponse_backups :: Lens' DescribeBackupsResponse (Maybe [Backup])

-- | This is not currently implemented for <tt>DescribeBackups</tt>
--   requests.
describeBackupsResponse_nextToken :: Lens' DescribeBackupsResponse (Maybe Text)

-- | The response's http status code.
describeBackupsResponse_httpStatus :: Lens' DescribeBackupsResponse Int
instance GHC.Generics.Generic Amazonka.OpsWorksCM.DescribeBackups.DescribeBackups
instance GHC.Show.Show Amazonka.OpsWorksCM.DescribeBackups.DescribeBackups
instance GHC.Read.Read Amazonka.OpsWorksCM.DescribeBackups.DescribeBackups
instance GHC.Classes.Eq Amazonka.OpsWorksCM.DescribeBackups.DescribeBackups
instance GHC.Generics.Generic Amazonka.OpsWorksCM.DescribeBackups.DescribeBackupsResponse
instance GHC.Show.Show Amazonka.OpsWorksCM.DescribeBackups.DescribeBackupsResponse
instance GHC.Read.Read Amazonka.OpsWorksCM.DescribeBackups.DescribeBackupsResponse
instance GHC.Classes.Eq Amazonka.OpsWorksCM.DescribeBackups.DescribeBackupsResponse
instance Amazonka.Types.AWSRequest Amazonka.OpsWorksCM.DescribeBackups.DescribeBackups
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.DescribeBackups.DescribeBackupsResponse
instance Amazonka.Pager.AWSPager Amazonka.OpsWorksCM.DescribeBackups.DescribeBackups
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.DescribeBackups.DescribeBackups
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.DescribeBackups.DescribeBackups
instance Amazonka.Data.Headers.ToHeaders Amazonka.OpsWorksCM.DescribeBackups.DescribeBackups
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.DescribeBackups.DescribeBackups
instance Amazonka.Data.Path.ToPath Amazonka.OpsWorksCM.DescribeBackups.DescribeBackups
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.DescribeBackups.DescribeBackups


-- | Describes your OpsWorks-CM account attributes.
--   
--   This operation is synchronous.
module Amazonka.OpsWorksCM.DescribeAccountAttributes

-- | <i>See:</i> <a>newDescribeAccountAttributes</a> smart constructor.
data DescribeAccountAttributes
DescribeAccountAttributes' :: DescribeAccountAttributes

-- | Create a value of <a>DescribeAccountAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeAccountAttributes :: DescribeAccountAttributes

-- | <i>See:</i> <a>newDescribeAccountAttributesResponse</a> smart
--   constructor.
data DescribeAccountAttributesResponse
DescribeAccountAttributesResponse' :: Maybe [AccountAttribute] -> Int -> DescribeAccountAttributesResponse

-- | The attributes that are currently set for the account.
[$sel:attributes:DescribeAccountAttributesResponse'] :: DescribeAccountAttributesResponse -> Maybe [AccountAttribute]

-- | The response's http status code.
[$sel:httpStatus:DescribeAccountAttributesResponse'] :: DescribeAccountAttributesResponse -> Int

-- | Create a value of <a>DescribeAccountAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:DescribeAccountAttributesResponse'</a>,
--   <a>describeAccountAttributesResponse_attributes</a> - The attributes
--   that are currently set for the account.
--   
--   <a>$sel:httpStatus:DescribeAccountAttributesResponse'</a>,
--   <a>describeAccountAttributesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeAccountAttributesResponse :: Int -> DescribeAccountAttributesResponse

-- | The attributes that are currently set for the account.
describeAccountAttributesResponse_attributes :: Lens' DescribeAccountAttributesResponse (Maybe [AccountAttribute])

-- | The response's http status code.
describeAccountAttributesResponse_httpStatus :: Lens' DescribeAccountAttributesResponse Int
instance GHC.Generics.Generic Amazonka.OpsWorksCM.DescribeAccountAttributes.DescribeAccountAttributes
instance GHC.Show.Show Amazonka.OpsWorksCM.DescribeAccountAttributes.DescribeAccountAttributes
instance GHC.Read.Read Amazonka.OpsWorksCM.DescribeAccountAttributes.DescribeAccountAttributes
instance GHC.Classes.Eq Amazonka.OpsWorksCM.DescribeAccountAttributes.DescribeAccountAttributes
instance GHC.Generics.Generic Amazonka.OpsWorksCM.DescribeAccountAttributes.DescribeAccountAttributesResponse
instance GHC.Show.Show Amazonka.OpsWorksCM.DescribeAccountAttributes.DescribeAccountAttributesResponse
instance GHC.Read.Read Amazonka.OpsWorksCM.DescribeAccountAttributes.DescribeAccountAttributesResponse
instance GHC.Classes.Eq Amazonka.OpsWorksCM.DescribeAccountAttributes.DescribeAccountAttributesResponse
instance Amazonka.Types.AWSRequest Amazonka.OpsWorksCM.DescribeAccountAttributes.DescribeAccountAttributes
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.DescribeAccountAttributes.DescribeAccountAttributesResponse
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.DescribeAccountAttributes.DescribeAccountAttributes
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.DescribeAccountAttributes.DescribeAccountAttributes
instance Amazonka.Data.Headers.ToHeaders Amazonka.OpsWorksCM.DescribeAccountAttributes.DescribeAccountAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.DescribeAccountAttributes.DescribeAccountAttributes
instance Amazonka.Data.Path.ToPath Amazonka.OpsWorksCM.DescribeAccountAttributes.DescribeAccountAttributes
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.DescribeAccountAttributes.DescribeAccountAttributes


-- | Deletes the server and the underlying AWS CloudFormation stacks
--   (including the server's EC2 instance). When you run this command, the
--   server state is updated to <tt>DELETING</tt>. After the server is
--   deleted, it is no longer returned by <tt>DescribeServer</tt> requests.
--   If the AWS CloudFormation stack cannot be deleted, the server cannot
--   be deleted.
--   
--   This operation is asynchronous.
--   
--   An <tt>InvalidStateException</tt> is thrown when a server deletion is
--   already in progress. A <tt>ResourceNotFoundException</tt> is thrown
--   when the server does not exist. A <tt>ValidationException</tt> is
--   raised when parameters of the request are not valid.
module Amazonka.OpsWorksCM.DeleteServer

-- | <i>See:</i> <a>newDeleteServer</a> smart constructor.
data DeleteServer
DeleteServer' :: Text -> DeleteServer

-- | The ID of the server to delete.
[$sel:serverName:DeleteServer'] :: DeleteServer -> Text

-- | Create a value of <a>DeleteServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverName:DeleteServer'</a>, <a>deleteServer_serverName</a> -
--   The ID of the server to delete.
newDeleteServer :: Text -> DeleteServer

-- | The ID of the server to delete.
deleteServer_serverName :: Lens' DeleteServer Text

-- | <i>See:</i> <a>newDeleteServerResponse</a> smart constructor.
data DeleteServerResponse
DeleteServerResponse' :: Int -> DeleteServerResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteServerResponse'] :: DeleteServerResponse -> Int

-- | Create a value of <a>DeleteServerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteServerResponse'</a>,
--   <a>deleteServerResponse_httpStatus</a> - The response's http status
--   code.
newDeleteServerResponse :: Int -> DeleteServerResponse

-- | The response's http status code.
deleteServerResponse_httpStatus :: Lens' DeleteServerResponse Int
instance GHC.Generics.Generic Amazonka.OpsWorksCM.DeleteServer.DeleteServer
instance GHC.Show.Show Amazonka.OpsWorksCM.DeleteServer.DeleteServer
instance GHC.Read.Read Amazonka.OpsWorksCM.DeleteServer.DeleteServer
instance GHC.Classes.Eq Amazonka.OpsWorksCM.DeleteServer.DeleteServer
instance GHC.Generics.Generic Amazonka.OpsWorksCM.DeleteServer.DeleteServerResponse
instance GHC.Show.Show Amazonka.OpsWorksCM.DeleteServer.DeleteServerResponse
instance GHC.Read.Read Amazonka.OpsWorksCM.DeleteServer.DeleteServerResponse
instance GHC.Classes.Eq Amazonka.OpsWorksCM.DeleteServer.DeleteServerResponse
instance Amazonka.Types.AWSRequest Amazonka.OpsWorksCM.DeleteServer.DeleteServer
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.DeleteServer.DeleteServerResponse
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.DeleteServer.DeleteServer
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.DeleteServer.DeleteServer
instance Amazonka.Data.Headers.ToHeaders Amazonka.OpsWorksCM.DeleteServer.DeleteServer
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.DeleteServer.DeleteServer
instance Amazonka.Data.Path.ToPath Amazonka.OpsWorksCM.DeleteServer.DeleteServer
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.DeleteServer.DeleteServer


-- | Deletes a backup. You can delete both manual and automated backups.
--   This operation is asynchronous.
--   
--   An <tt>InvalidStateException</tt> is thrown when a backup deletion is
--   already in progress. A <tt>ResourceNotFoundException</tt> is thrown
--   when the backup does not exist. A <tt>ValidationException</tt> is
--   thrown when parameters of the request are not valid.
module Amazonka.OpsWorksCM.DeleteBackup

-- | <i>See:</i> <a>newDeleteBackup</a> smart constructor.
data DeleteBackup
DeleteBackup' :: Text -> DeleteBackup

-- | The ID of the backup to delete. Run the DescribeBackups command to get
--   a list of backup IDs. Backup IDs are in the format
--   <tt>ServerName-yyyyMMddHHmmssSSS</tt>.
[$sel:backupId:DeleteBackup'] :: DeleteBackup -> Text

-- | Create a value of <a>DeleteBackup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backupId:DeleteBackup'</a>, <a>deleteBackup_backupId</a> - The
--   ID of the backup to delete. Run the DescribeBackups command to get a
--   list of backup IDs. Backup IDs are in the format
--   <tt>ServerName-yyyyMMddHHmmssSSS</tt>.
newDeleteBackup :: Text -> DeleteBackup

-- | The ID of the backup to delete. Run the DescribeBackups command to get
--   a list of backup IDs. Backup IDs are in the format
--   <tt>ServerName-yyyyMMddHHmmssSSS</tt>.
deleteBackup_backupId :: Lens' DeleteBackup Text

-- | <i>See:</i> <a>newDeleteBackupResponse</a> smart constructor.
data DeleteBackupResponse
DeleteBackupResponse' :: Int -> DeleteBackupResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteBackupResponse'] :: DeleteBackupResponse -> Int

-- | Create a value of <a>DeleteBackupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteBackupResponse'</a>,
--   <a>deleteBackupResponse_httpStatus</a> - The response's http status
--   code.
newDeleteBackupResponse :: Int -> DeleteBackupResponse

-- | The response's http status code.
deleteBackupResponse_httpStatus :: Lens' DeleteBackupResponse Int
instance GHC.Generics.Generic Amazonka.OpsWorksCM.DeleteBackup.DeleteBackup
instance GHC.Show.Show Amazonka.OpsWorksCM.DeleteBackup.DeleteBackup
instance GHC.Read.Read Amazonka.OpsWorksCM.DeleteBackup.DeleteBackup
instance GHC.Classes.Eq Amazonka.OpsWorksCM.DeleteBackup.DeleteBackup
instance GHC.Generics.Generic Amazonka.OpsWorksCM.DeleteBackup.DeleteBackupResponse
instance GHC.Show.Show Amazonka.OpsWorksCM.DeleteBackup.DeleteBackupResponse
instance GHC.Read.Read Amazonka.OpsWorksCM.DeleteBackup.DeleteBackupResponse
instance GHC.Classes.Eq Amazonka.OpsWorksCM.DeleteBackup.DeleteBackupResponse
instance Amazonka.Types.AWSRequest Amazonka.OpsWorksCM.DeleteBackup.DeleteBackup
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.DeleteBackup.DeleteBackupResponse
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.DeleteBackup.DeleteBackup
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.DeleteBackup.DeleteBackup
instance Amazonka.Data.Headers.ToHeaders Amazonka.OpsWorksCM.DeleteBackup.DeleteBackup
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.DeleteBackup.DeleteBackup
instance Amazonka.Data.Path.ToPath Amazonka.OpsWorksCM.DeleteBackup.DeleteBackup
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.DeleteBackup.DeleteBackup


-- | Creates and immedately starts a new server. The server is ready to use
--   when it is in the <tt>HEALTHY</tt> state. By default, you can create a
--   maximum of 10 servers.
--   
--   This operation is asynchronous.
--   
--   A <tt>LimitExceededException</tt> is thrown when you have created the
--   maximum number of servers (10). A
--   <tt>ResourceAlreadyExistsException</tt> is thrown when a server with
--   the same name already exists in the account. A
--   <tt>ResourceNotFoundException</tt> is thrown when you specify a backup
--   ID that is not valid or is for a backup that does not exist. A
--   <tt>ValidationException</tt> is thrown when parameters of the request
--   are not valid.
--   
--   If you do not specify a security group by adding the
--   <tt>SecurityGroupIds</tt> parameter, AWS OpsWorks creates a new
--   security group.
--   
--   <i>Chef Automate:</i> The default security group opens the Chef server
--   to the world on TCP port 443. If a KeyName is present, AWS OpsWorks
--   enables SSH access. SSH is also open to the world on TCP port 22.
--   
--   <i>Puppet Enterprise:</i> The default security group opens TCP ports
--   22, 443, 4433, 8140, 8142, 8143, and 8170. If a KeyName is present,
--   AWS OpsWorks enables SSH access. SSH is also open to the world on TCP
--   port 22.
--   
--   By default, your server is accessible from any IP address. We
--   recommend that you update your security group rules to allow access
--   from known IP addresses and address ranges only. To edit security
--   group rules, open Security Groups in the navigation pane of the EC2
--   management console.
--   
--   To specify your own domain for a server, and provide your own
--   self-signed or CA-signed certificate and private key, specify values
--   for <tt>CustomDomain</tt>, <tt>CustomCertificate</tt>, and
--   <tt>CustomPrivateKey</tt>.
module Amazonka.OpsWorksCM.CreateServer

-- | <i>See:</i> <a>newCreateServer</a> smart constructor.
data CreateServer
CreateServer' :: Maybe Text -> Maybe Bool -> Maybe [Text] -> Maybe Bool -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (Sensitive Text) -> Maybe Text -> Maybe [EngineAttribute] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe Natural -> Text -> Text -> Text -> Text -> Text -> CreateServer

-- | The major release version of the engine that you want to use. For a
--   Chef server, the valid value for EngineVersion is currently
--   <tt>2</tt>. For a Puppet server, valid values are <tt>2019</tt> or
--   <tt>2017</tt>.
[$sel:engineVersion:CreateServer'] :: CreateServer -> Maybe Text

-- | Enable or disable scheduled backups. Valid values are <tt>true</tt> or
--   <tt>false</tt>. The default value is <tt>true</tt>.
[$sel:disableAutomatedBackup:CreateServer'] :: CreateServer -> Maybe Bool

-- | A list of security group IDs to attach to the Amazon EC2 instance. If
--   you add this parameter, the specified security groups must be within
--   the VPC that is specified by <tt>SubnetIds</tt>.
--   
--   If you do not specify this parameter, AWS OpsWorks CM creates one new
--   security group that uses TCP ports 22 and 443, open to 0.0.0.0/0
--   (everyone).
[$sel:securityGroupIds:CreateServer'] :: CreateServer -> Maybe [Text]

-- | Associate a public IP address with a server that you are launching.
--   Valid values are <tt>true</tt> or <tt>false</tt>. The default value is
--   <tt>true</tt>.
[$sel:associatePublicIpAddress:CreateServer'] :: CreateServer -> Maybe Bool

-- | The IDs of subnets in which to launch the server EC2 instance.
--   
--   Amazon EC2-Classic customers: This field is required. All servers must
--   run within a VPC. The VPC must have "Auto Assign Public IP" enabled.
--   
--   EC2-VPC customers: This field is optional. If you do not specify
--   subnet IDs, your EC2 instances are created in a default subnet that is
--   selected by Amazon EC2. If you specify subnet IDs, the VPC must have
--   "Auto Assign Public IP" enabled.
--   
--   For more information about supported Amazon EC2 platforms, see
--   <a>Supported Platforms</a>.
[$sel:subnetIds:CreateServer'] :: CreateServer -> Maybe [Text]

-- | The Amazon EC2 key pair to set for the instance. This parameter is
--   optional; if desired, you may specify this parameter to connect to
--   your instances by using SSH.
[$sel:keyPair:CreateServer'] :: CreateServer -> Maybe Text

-- | If you specify this field, AWS OpsWorks CM creates the server by using
--   the backup represented by BackupId.
[$sel:backupId:CreateServer'] :: CreateServer -> Maybe Text

-- | An optional public endpoint of a server, such as
--   <tt>https://aws.my-company.com</tt>. To access the server, create a
--   CNAME DNS record in your preferred DNS service that points the custom
--   domain to the endpoint that is generated when the server is created
--   (the value of the CreateServer Endpoint attribute). You cannot access
--   the server by using the generated <tt>Endpoint</tt> value if the
--   server is using a custom domain. If you specify a custom domain, you
--   must also specify values for <tt>CustomCertificate</tt> and
--   <tt>CustomPrivateKey</tt>.
[$sel:customDomain:CreateServer'] :: CreateServer -> Maybe Text

-- | A private key in PEM format for connecting to the server by using
--   HTTPS. The private key must not be encrypted; it cannot be protected
--   by a password or passphrase. If you specify a custom private key, you
--   must also specify values for <tt>CustomDomain</tt> and
--   <tt>CustomCertificate</tt>.
[$sel:customPrivateKey:CreateServer'] :: CreateServer -> Maybe (Sensitive Text)

-- | The engine model of the server. Valid values in this release include
--   <tt>Monolithic</tt> for Puppet and <tt>Single</tt> for Chef.
[$sel:engineModel:CreateServer'] :: CreateServer -> Maybe Text

-- | Optional engine attributes on a specified server.
--   
--   <b>Attributes accepted in a Chef createServer request:</b>
--   
--   <ul>
--   <li><tt>CHEF_AUTOMATE_PIVOTAL_KEY</tt>: A base64-encoded RSA public
--   key. The corresponding private key is required to access the Chef API.
--   When no CHEF_AUTOMATE_PIVOTAL_KEY is set, a private key is generated
--   and returned in the response.</li>
--   <li><tt>CHEF_AUTOMATE_ADMIN_PASSWORD</tt>: The password for the
--   administrative user in the Chef Automate web-based dashboard. The
--   password length is a minimum of eight characters, and a maximum of 32.
--   The password can contain letters, numbers, and special characters
--   (!/@#$%^&amp;+=_). The password must contain at least one lower case
--   letter, one upper case letter, one number, and one special character.
--   When no CHEF_AUTOMATE_ADMIN_PASSWORD is set, one is generated and
--   returned in the response.</li>
--   </ul>
--   
--   <b>Attributes accepted in a Puppet createServer request:</b>
--   
--   <ul>
--   <li><tt>PUPPET_ADMIN_PASSWORD</tt>: To work with the Puppet Enterprise
--   console, a password must use ASCII characters.</li>
--   <li><tt>PUPPET_R10K_REMOTE</tt>: The r10k remote is the URL of your
--   control repository (for example,
--   ssh://git@your.git-repo.com:user/control-repo.git). Specifying an r10k
--   remote opens TCP port 8170.</li>
--   <li><tt>PUPPET_R10K_PRIVATE_KEY</tt>: If you are using a private Git
--   repository, add PUPPET_R10K_PRIVATE_KEY to specify a PEM-encoded
--   private SSH key.</li>
--   </ul>
[$sel:engineAttributes:CreateServer'] :: CreateServer -> Maybe [EngineAttribute]

-- | The start time for a one-hour period each week during which AWS
--   OpsWorks CM performs maintenance on the instance. Valid values must be
--   specified in the following format: <tt>DDD:HH:MM</tt>. <tt>MM</tt>
--   must be specified as <tt>00</tt>. The specified time is in coordinated
--   universal time (UTC). The default value is a random one-hour period on
--   Tuesday, Wednesday, or Friday. See <tt>TimeWindowDefinition</tt> for
--   more information.
--   
--   <b>Example:</b> <tt>Mon:08:00</tt>, which represents a start time of
--   every Monday at 08:00 UTC. (8:00 a.m.)
[$sel:preferredMaintenanceWindow:CreateServer'] :: CreateServer -> Maybe Text

-- | The start time for a one-hour period during which AWS OpsWorks CM
--   backs up application-level data on your server if automated backups
--   are enabled. Valid values must be specified in one of the following
--   formats:
--   
--   <ul>
--   <li><tt>HH:MM</tt> for daily backups</li>
--   <li><tt>DDD:HH:MM</tt> for weekly backups</li>
--   </ul>
--   
--   <tt>MM</tt> must be specified as <tt>00</tt>. The specified time is in
--   coordinated universal time (UTC). The default value is a random, daily
--   start time.
--   
--   <b>Example:</b> <tt>08:00</tt>, which represents a daily start time of
--   08:00 UTC.
--   
--   <b>Example:</b> <tt>Mon:08:00</tt>, which represents a start time of
--   every Monday at 08:00 UTC. (8:00 a.m.)
[$sel:preferredBackupWindow:CreateServer'] :: CreateServer -> Maybe Text

-- | A PEM-formatted HTTPS certificate. The value can be be a single,
--   self-signed certificate, or a certificate chain. If you specify a
--   custom certificate, you must also specify values for
--   <tt>CustomDomain</tt> and <tt>CustomPrivateKey</tt>. The following are
--   requirements for the <tt>CustomCertificate</tt> value:
--   
--   <ul>
--   <li>You can provide either a self-signed, custom certificate, or the
--   full certificate chain.</li>
--   <li>The certificate must be a valid X509 certificate, or a certificate
--   chain in PEM format.</li>
--   <li>The certificate must be valid at the time of upload. A certificate
--   can't be used before its validity period begins (the certificate's
--   <tt>NotBefore</tt> date), or after it expires (the certificate's
--   <tt>NotAfter</tt> date).</li>
--   <li>The certificate’s common name or subject alternative names (SANs),
--   if present, must match the value of <tt>CustomDomain</tt>.</li>
--   <li>The certificate must match the value of
--   <tt>CustomPrivateKey</tt>.</li>
--   </ul>
[$sel:customCertificate:CreateServer'] :: CreateServer -> Maybe Text

-- | A map that contains tag keys and tag values to attach to an AWS
--   OpsWorks for Chef Automate or AWS OpsWorks for Puppet Enterprise
--   server.
--   
--   <ul>
--   <li>The key cannot be empty.</li>
--   <li>The key can be a maximum of 127 characters, and can contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : / @</tt></li>
--   <li>The value can be a maximum 255 characters, and contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : / @</tt></li>
--   <li>Leading and trailing white spaces are trimmed from both the key
--   and value.</li>
--   <li>A maximum of 50 user-applied tags is allowed for any AWS
--   OpsWorks-CM server.</li>
--   </ul>
[$sel:tags:CreateServer'] :: CreateServer -> Maybe [Tag]

-- | The number of automated backups that you want to keep. Whenever a new
--   backup is created, AWS OpsWorks CM deletes the oldest backups if this
--   number is exceeded. The default value is <tt>1</tt>.
[$sel:backupRetentionCount:CreateServer'] :: CreateServer -> Maybe Natural

-- | The configuration management engine to use. Valid values include
--   <tt>ChefAutomate</tt> and <tt>Puppet</tt>.
[$sel:engine:CreateServer'] :: CreateServer -> Text

-- | The name of the server. The server name must be unique within your AWS
--   account, within each region. Server names must start with a letter;
--   then letters, numbers, or hyphens (-) are allowed, up to a maximum of
--   40 characters.
[$sel:serverName:CreateServer'] :: CreateServer -> Text

-- | The ARN of the instance profile that your Amazon EC2 instances use.
--   Although the AWS OpsWorks console typically creates the instance
--   profile for you, if you are using API commands instead, run the
--   service-role-creation.yaml AWS CloudFormation template, located at
--   https://s3.amazonaws.com/opsworks-cm-us-east-1-prod-default-assets/misc/opsworks-cm-roles.yaml.
--   This template creates a CloudFormation stack that includes the
--   instance profile you need.
[$sel:instanceProfileArn:CreateServer'] :: CreateServer -> Text

-- | The Amazon EC2 instance type to use. For example, <tt>m5.large</tt>.
[$sel:instanceType:CreateServer'] :: CreateServer -> Text

-- | The service role that the AWS OpsWorks CM service backend uses to work
--   with your account. Although the AWS OpsWorks management console
--   typically creates the service role for you, if you are using the AWS
--   CLI or API commands, run the service-role-creation.yaml AWS
--   CloudFormation template, located at
--   https://s3.amazonaws.com/opsworks-cm-us-east-1-prod-default-assets/misc/opsworks-cm-roles.yaml.
--   This template creates a CloudFormation stack that includes the service
--   role and instance profile that you need.
[$sel:serviceRoleArn:CreateServer'] :: CreateServer -> Text

-- | Create a value of <a>CreateServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:CreateServer'</a>,
--   <a>createServer_engineVersion</a> - The major release version of the
--   engine that you want to use. For a Chef server, the valid value for
--   EngineVersion is currently <tt>2</tt>. For a Puppet server, valid
--   values are <tt>2019</tt> or <tt>2017</tt>.
--   
--   <a>$sel:disableAutomatedBackup:CreateServer'</a>,
--   <a>createServer_disableAutomatedBackup</a> - Enable or disable
--   scheduled backups. Valid values are <tt>true</tt> or <tt>false</tt>.
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:securityGroupIds:CreateServer'</a>,
--   <a>createServer_securityGroupIds</a> - A list of security group IDs to
--   attach to the Amazon EC2 instance. If you add this parameter, the
--   specified security groups must be within the VPC that is specified by
--   <tt>SubnetIds</tt>.
--   
--   If you do not specify this parameter, AWS OpsWorks CM creates one new
--   security group that uses TCP ports 22 and 443, open to 0.0.0.0/0
--   (everyone).
--   
--   <a>$sel:associatePublicIpAddress:CreateServer'</a>,
--   <a>createServer_associatePublicIpAddress</a> - Associate a public IP
--   address with a server that you are launching. Valid values are
--   <tt>true</tt> or <tt>false</tt>. The default value is <tt>true</tt>.
--   
--   <a>$sel:subnetIds:CreateServer'</a>, <a>createServer_subnetIds</a> -
--   The IDs of subnets in which to launch the server EC2 instance.
--   
--   Amazon EC2-Classic customers: This field is required. All servers must
--   run within a VPC. The VPC must have "Auto Assign Public IP" enabled.
--   
--   EC2-VPC customers: This field is optional. If you do not specify
--   subnet IDs, your EC2 instances are created in a default subnet that is
--   selected by Amazon EC2. If you specify subnet IDs, the VPC must have
--   "Auto Assign Public IP" enabled.
--   
--   For more information about supported Amazon EC2 platforms, see
--   <a>Supported Platforms</a>.
--   
--   <a>$sel:keyPair:CreateServer'</a>, <a>createServer_keyPair</a> - The
--   Amazon EC2 key pair to set for the instance. This parameter is
--   optional; if desired, you may specify this parameter to connect to
--   your instances by using SSH.
--   
--   <a>$sel:backupId:CreateServer'</a>, <a>createServer_backupId</a> - If
--   you specify this field, AWS OpsWorks CM creates the server by using
--   the backup represented by BackupId.
--   
--   <a>$sel:customDomain:CreateServer'</a>,
--   <a>createServer_customDomain</a> - An optional public endpoint of a
--   server, such as <tt>https://aws.my-company.com</tt>. To access the
--   server, create a CNAME DNS record in your preferred DNS service that
--   points the custom domain to the endpoint that is generated when the
--   server is created (the value of the CreateServer Endpoint attribute).
--   You cannot access the server by using the generated <tt>Endpoint</tt>
--   value if the server is using a custom domain. If you specify a custom
--   domain, you must also specify values for <tt>CustomCertificate</tt>
--   and <tt>CustomPrivateKey</tt>.
--   
--   <a>$sel:customPrivateKey:CreateServer'</a>,
--   <a>createServer_customPrivateKey</a> - A private key in PEM format for
--   connecting to the server by using HTTPS. The private key must not be
--   encrypted; it cannot be protected by a password or passphrase. If you
--   specify a custom private key, you must also specify values for
--   <tt>CustomDomain</tt> and <tt>CustomCertificate</tt>.
--   
--   <a>$sel:engineModel:CreateServer'</a>, <a>createServer_engineModel</a>
--   - The engine model of the server. Valid values in this release include
--   <tt>Monolithic</tt> for Puppet and <tt>Single</tt> for Chef.
--   
--   <a>$sel:engineAttributes:CreateServer'</a>,
--   <a>createServer_engineAttributes</a> - Optional engine attributes on a
--   specified server.
--   
--   <b>Attributes accepted in a Chef createServer request:</b>
--   
--   <ul>
--   <li><tt>CHEF_AUTOMATE_PIVOTAL_KEY</tt>: A base64-encoded RSA public
--   key. The corresponding private key is required to access the Chef API.
--   When no CHEF_AUTOMATE_PIVOTAL_KEY is set, a private key is generated
--   and returned in the response.</li>
--   <li><tt>CHEF_AUTOMATE_ADMIN_PASSWORD</tt>: The password for the
--   administrative user in the Chef Automate web-based dashboard. The
--   password length is a minimum of eight characters, and a maximum of 32.
--   The password can contain letters, numbers, and special characters
--   (!/@#$%^&amp;+=_). The password must contain at least one lower case
--   letter, one upper case letter, one number, and one special character.
--   When no CHEF_AUTOMATE_ADMIN_PASSWORD is set, one is generated and
--   returned in the response.</li>
--   </ul>
--   
--   <b>Attributes accepted in a Puppet createServer request:</b>
--   
--   <ul>
--   <li><tt>PUPPET_ADMIN_PASSWORD</tt>: To work with the Puppet Enterprise
--   console, a password must use ASCII characters.</li>
--   <li><tt>PUPPET_R10K_REMOTE</tt>: The r10k remote is the URL of your
--   control repository (for example,
--   ssh://git@your.git-repo.com:user/control-repo.git). Specifying an r10k
--   remote opens TCP port 8170.</li>
--   <li><tt>PUPPET_R10K_PRIVATE_KEY</tt>: If you are using a private Git
--   repository, add PUPPET_R10K_PRIVATE_KEY to specify a PEM-encoded
--   private SSH key.</li>
--   </ul>
--   
--   <a>$sel:preferredMaintenanceWindow:CreateServer'</a>,
--   <a>createServer_preferredMaintenanceWindow</a> - The start time for a
--   one-hour period each week during which AWS OpsWorks CM performs
--   maintenance on the instance. Valid values must be specified in the
--   following format: <tt>DDD:HH:MM</tt>. <tt>MM</tt> must be specified as
--   <tt>00</tt>. The specified time is in coordinated universal time
--   (UTC). The default value is a random one-hour period on Tuesday,
--   Wednesday, or Friday. See <tt>TimeWindowDefinition</tt> for more
--   information.
--   
--   <b>Example:</b> <tt>Mon:08:00</tt>, which represents a start time of
--   every Monday at 08:00 UTC. (8:00 a.m.)
--   
--   <a>$sel:preferredBackupWindow:CreateServer'</a>,
--   <a>createServer_preferredBackupWindow</a> - The start time for a
--   one-hour period during which AWS OpsWorks CM backs up
--   application-level data on your server if automated backups are
--   enabled. Valid values must be specified in one of the following
--   formats:
--   
--   <ul>
--   <li><tt>HH:MM</tt> for daily backups</li>
--   <li><tt>DDD:HH:MM</tt> for weekly backups</li>
--   </ul>
--   
--   <tt>MM</tt> must be specified as <tt>00</tt>. The specified time is in
--   coordinated universal time (UTC). The default value is a random, daily
--   start time.
--   
--   <b>Example:</b> <tt>08:00</tt>, which represents a daily start time of
--   08:00 UTC.
--   
--   <b>Example:</b> <tt>Mon:08:00</tt>, which represents a start time of
--   every Monday at 08:00 UTC. (8:00 a.m.)
--   
--   <a>$sel:customCertificate:CreateServer'</a>,
--   <a>createServer_customCertificate</a> - A PEM-formatted HTTPS
--   certificate. The value can be be a single, self-signed certificate, or
--   a certificate chain. If you specify a custom certificate, you must
--   also specify values for <tt>CustomDomain</tt> and
--   <tt>CustomPrivateKey</tt>. The following are requirements for the
--   <tt>CustomCertificate</tt> value:
--   
--   <ul>
--   <li>You can provide either a self-signed, custom certificate, or the
--   full certificate chain.</li>
--   <li>The certificate must be a valid X509 certificate, or a certificate
--   chain in PEM format.</li>
--   <li>The certificate must be valid at the time of upload. A certificate
--   can't be used before its validity period begins (the certificate's
--   <tt>NotBefore</tt> date), or after it expires (the certificate's
--   <tt>NotAfter</tt> date).</li>
--   <li>The certificate’s common name or subject alternative names (SANs),
--   if present, must match the value of <tt>CustomDomain</tt>.</li>
--   <li>The certificate must match the value of
--   <tt>CustomPrivateKey</tt>.</li>
--   </ul>
--   
--   <a>$sel:tags:CreateServer'</a>, <a>createServer_tags</a> - A map that
--   contains tag keys and tag values to attach to an AWS OpsWorks for Chef
--   Automate or AWS OpsWorks for Puppet Enterprise server.
--   
--   <ul>
--   <li>The key cannot be empty.</li>
--   <li>The key can be a maximum of 127 characters, and can contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : / @</tt></li>
--   <li>The value can be a maximum 255 characters, and contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : / @</tt></li>
--   <li>Leading and trailing white spaces are trimmed from both the key
--   and value.</li>
--   <li>A maximum of 50 user-applied tags is allowed for any AWS
--   OpsWorks-CM server.</li>
--   </ul>
--   
--   <a>$sel:backupRetentionCount:CreateServer'</a>,
--   <a>createServer_backupRetentionCount</a> - The number of automated
--   backups that you want to keep. Whenever a new backup is created, AWS
--   OpsWorks CM deletes the oldest backups if this number is exceeded. The
--   default value is <tt>1</tt>.
--   
--   <a>$sel:engine:CreateServer'</a>, <a>createServer_engine</a> - The
--   configuration management engine to use. Valid values include
--   <tt>ChefAutomate</tt> and <tt>Puppet</tt>.
--   
--   <a>$sel:serverName:CreateServer'</a>, <a>createServer_serverName</a> -
--   The name of the server. The server name must be unique within your AWS
--   account, within each region. Server names must start with a letter;
--   then letters, numbers, or hyphens (-) are allowed, up to a maximum of
--   40 characters.
--   
--   <a>$sel:instanceProfileArn:CreateServer'</a>,
--   <a>createServer_instanceProfileArn</a> - The ARN of the instance
--   profile that your Amazon EC2 instances use. Although the AWS OpsWorks
--   console typically creates the instance profile for you, if you are
--   using API commands instead, run the service-role-creation.yaml AWS
--   CloudFormation template, located at
--   https://s3.amazonaws.com/opsworks-cm-us-east-1-prod-default-assets/misc/opsworks-cm-roles.yaml.
--   This template creates a CloudFormation stack that includes the
--   instance profile you need.
--   
--   <a>$sel:instanceType:CreateServer'</a>,
--   <a>createServer_instanceType</a> - The Amazon EC2 instance type to
--   use. For example, <tt>m5.large</tt>.
--   
--   <a>$sel:serviceRoleArn:CreateServer'</a>,
--   <a>createServer_serviceRoleArn</a> - The service role that the AWS
--   OpsWorks CM service backend uses to work with your account. Although
--   the AWS OpsWorks management console typically creates the service role
--   for you, if you are using the AWS CLI or API commands, run the
--   service-role-creation.yaml AWS CloudFormation template, located at
--   https://s3.amazonaws.com/opsworks-cm-us-east-1-prod-default-assets/misc/opsworks-cm-roles.yaml.
--   This template creates a CloudFormation stack that includes the service
--   role and instance profile that you need.
newCreateServer :: Text -> Text -> Text -> Text -> Text -> CreateServer

-- | The major release version of the engine that you want to use. For a
--   Chef server, the valid value for EngineVersion is currently
--   <tt>2</tt>. For a Puppet server, valid values are <tt>2019</tt> or
--   <tt>2017</tt>.
createServer_engineVersion :: Lens' CreateServer (Maybe Text)

-- | Enable or disable scheduled backups. Valid values are <tt>true</tt> or
--   <tt>false</tt>. The default value is <tt>true</tt>.
createServer_disableAutomatedBackup :: Lens' CreateServer (Maybe Bool)

-- | A list of security group IDs to attach to the Amazon EC2 instance. If
--   you add this parameter, the specified security groups must be within
--   the VPC that is specified by <tt>SubnetIds</tt>.
--   
--   If you do not specify this parameter, AWS OpsWorks CM creates one new
--   security group that uses TCP ports 22 and 443, open to 0.0.0.0/0
--   (everyone).
createServer_securityGroupIds :: Lens' CreateServer (Maybe [Text])

-- | Associate a public IP address with a server that you are launching.
--   Valid values are <tt>true</tt> or <tt>false</tt>. The default value is
--   <tt>true</tt>.
createServer_associatePublicIpAddress :: Lens' CreateServer (Maybe Bool)

-- | The IDs of subnets in which to launch the server EC2 instance.
--   
--   Amazon EC2-Classic customers: This field is required. All servers must
--   run within a VPC. The VPC must have "Auto Assign Public IP" enabled.
--   
--   EC2-VPC customers: This field is optional. If you do not specify
--   subnet IDs, your EC2 instances are created in a default subnet that is
--   selected by Amazon EC2. If you specify subnet IDs, the VPC must have
--   "Auto Assign Public IP" enabled.
--   
--   For more information about supported Amazon EC2 platforms, see
--   <a>Supported Platforms</a>.
createServer_subnetIds :: Lens' CreateServer (Maybe [Text])

-- | The Amazon EC2 key pair to set for the instance. This parameter is
--   optional; if desired, you may specify this parameter to connect to
--   your instances by using SSH.
createServer_keyPair :: Lens' CreateServer (Maybe Text)

-- | If you specify this field, AWS OpsWorks CM creates the server by using
--   the backup represented by BackupId.
createServer_backupId :: Lens' CreateServer (Maybe Text)

-- | An optional public endpoint of a server, such as
--   <tt>https://aws.my-company.com</tt>. To access the server, create a
--   CNAME DNS record in your preferred DNS service that points the custom
--   domain to the endpoint that is generated when the server is created
--   (the value of the CreateServer Endpoint attribute). You cannot access
--   the server by using the generated <tt>Endpoint</tt> value if the
--   server is using a custom domain. If you specify a custom domain, you
--   must also specify values for <tt>CustomCertificate</tt> and
--   <tt>CustomPrivateKey</tt>.
createServer_customDomain :: Lens' CreateServer (Maybe Text)

-- | A private key in PEM format for connecting to the server by using
--   HTTPS. The private key must not be encrypted; it cannot be protected
--   by a password or passphrase. If you specify a custom private key, you
--   must also specify values for <tt>CustomDomain</tt> and
--   <tt>CustomCertificate</tt>.
createServer_customPrivateKey :: Lens' CreateServer (Maybe Text)

-- | The engine model of the server. Valid values in this release include
--   <tt>Monolithic</tt> for Puppet and <tt>Single</tt> for Chef.
createServer_engineModel :: Lens' CreateServer (Maybe Text)

-- | Optional engine attributes on a specified server.
--   
--   <b>Attributes accepted in a Chef createServer request:</b>
--   
--   <ul>
--   <li><tt>CHEF_AUTOMATE_PIVOTAL_KEY</tt>: A base64-encoded RSA public
--   key. The corresponding private key is required to access the Chef API.
--   When no CHEF_AUTOMATE_PIVOTAL_KEY is set, a private key is generated
--   and returned in the response.</li>
--   <li><tt>CHEF_AUTOMATE_ADMIN_PASSWORD</tt>: The password for the
--   administrative user in the Chef Automate web-based dashboard. The
--   password length is a minimum of eight characters, and a maximum of 32.
--   The password can contain letters, numbers, and special characters
--   (!/@#$%^&amp;+=_). The password must contain at least one lower case
--   letter, one upper case letter, one number, and one special character.
--   When no CHEF_AUTOMATE_ADMIN_PASSWORD is set, one is generated and
--   returned in the response.</li>
--   </ul>
--   
--   <b>Attributes accepted in a Puppet createServer request:</b>
--   
--   <ul>
--   <li><tt>PUPPET_ADMIN_PASSWORD</tt>: To work with the Puppet Enterprise
--   console, a password must use ASCII characters.</li>
--   <li><tt>PUPPET_R10K_REMOTE</tt>: The r10k remote is the URL of your
--   control repository (for example,
--   ssh://git@your.git-repo.com:user/control-repo.git). Specifying an r10k
--   remote opens TCP port 8170.</li>
--   <li><tt>PUPPET_R10K_PRIVATE_KEY</tt>: If you are using a private Git
--   repository, add PUPPET_R10K_PRIVATE_KEY to specify a PEM-encoded
--   private SSH key.</li>
--   </ul>
createServer_engineAttributes :: Lens' CreateServer (Maybe [EngineAttribute])

-- | The start time for a one-hour period each week during which AWS
--   OpsWorks CM performs maintenance on the instance. Valid values must be
--   specified in the following format: <tt>DDD:HH:MM</tt>. <tt>MM</tt>
--   must be specified as <tt>00</tt>. The specified time is in coordinated
--   universal time (UTC). The default value is a random one-hour period on
--   Tuesday, Wednesday, or Friday. See <tt>TimeWindowDefinition</tt> for
--   more information.
--   
--   <b>Example:</b> <tt>Mon:08:00</tt>, which represents a start time of
--   every Monday at 08:00 UTC. (8:00 a.m.)
createServer_preferredMaintenanceWindow :: Lens' CreateServer (Maybe Text)

-- | The start time for a one-hour period during which AWS OpsWorks CM
--   backs up application-level data on your server if automated backups
--   are enabled. Valid values must be specified in one of the following
--   formats:
--   
--   <ul>
--   <li><tt>HH:MM</tt> for daily backups</li>
--   <li><tt>DDD:HH:MM</tt> for weekly backups</li>
--   </ul>
--   
--   <tt>MM</tt> must be specified as <tt>00</tt>. The specified time is in
--   coordinated universal time (UTC). The default value is a random, daily
--   start time.
--   
--   <b>Example:</b> <tt>08:00</tt>, which represents a daily start time of
--   08:00 UTC.
--   
--   <b>Example:</b> <tt>Mon:08:00</tt>, which represents a start time of
--   every Monday at 08:00 UTC. (8:00 a.m.)
createServer_preferredBackupWindow :: Lens' CreateServer (Maybe Text)

-- | A PEM-formatted HTTPS certificate. The value can be be a single,
--   self-signed certificate, or a certificate chain. If you specify a
--   custom certificate, you must also specify values for
--   <tt>CustomDomain</tt> and <tt>CustomPrivateKey</tt>. The following are
--   requirements for the <tt>CustomCertificate</tt> value:
--   
--   <ul>
--   <li>You can provide either a self-signed, custom certificate, or the
--   full certificate chain.</li>
--   <li>The certificate must be a valid X509 certificate, or a certificate
--   chain in PEM format.</li>
--   <li>The certificate must be valid at the time of upload. A certificate
--   can't be used before its validity period begins (the certificate's
--   <tt>NotBefore</tt> date), or after it expires (the certificate's
--   <tt>NotAfter</tt> date).</li>
--   <li>The certificate’s common name or subject alternative names (SANs),
--   if present, must match the value of <tt>CustomDomain</tt>.</li>
--   <li>The certificate must match the value of
--   <tt>CustomPrivateKey</tt>.</li>
--   </ul>
createServer_customCertificate :: Lens' CreateServer (Maybe Text)

-- | A map that contains tag keys and tag values to attach to an AWS
--   OpsWorks for Chef Automate or AWS OpsWorks for Puppet Enterprise
--   server.
--   
--   <ul>
--   <li>The key cannot be empty.</li>
--   <li>The key can be a maximum of 127 characters, and can contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : / @</tt></li>
--   <li>The value can be a maximum 255 characters, and contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : / @</tt></li>
--   <li>Leading and trailing white spaces are trimmed from both the key
--   and value.</li>
--   <li>A maximum of 50 user-applied tags is allowed for any AWS
--   OpsWorks-CM server.</li>
--   </ul>
createServer_tags :: Lens' CreateServer (Maybe [Tag])

-- | The number of automated backups that you want to keep. Whenever a new
--   backup is created, AWS OpsWorks CM deletes the oldest backups if this
--   number is exceeded. The default value is <tt>1</tt>.
createServer_backupRetentionCount :: Lens' CreateServer (Maybe Natural)

-- | The configuration management engine to use. Valid values include
--   <tt>ChefAutomate</tt> and <tt>Puppet</tt>.
createServer_engine :: Lens' CreateServer Text

-- | The name of the server. The server name must be unique within your AWS
--   account, within each region. Server names must start with a letter;
--   then letters, numbers, or hyphens (-) are allowed, up to a maximum of
--   40 characters.
createServer_serverName :: Lens' CreateServer Text

-- | The ARN of the instance profile that your Amazon EC2 instances use.
--   Although the AWS OpsWorks console typically creates the instance
--   profile for you, if you are using API commands instead, run the
--   service-role-creation.yaml AWS CloudFormation template, located at
--   https://s3.amazonaws.com/opsworks-cm-us-east-1-prod-default-assets/misc/opsworks-cm-roles.yaml.
--   This template creates a CloudFormation stack that includes the
--   instance profile you need.
createServer_instanceProfileArn :: Lens' CreateServer Text

-- | The Amazon EC2 instance type to use. For example, <tt>m5.large</tt>.
createServer_instanceType :: Lens' CreateServer Text

-- | The service role that the AWS OpsWorks CM service backend uses to work
--   with your account. Although the AWS OpsWorks management console
--   typically creates the service role for you, if you are using the AWS
--   CLI or API commands, run the service-role-creation.yaml AWS
--   CloudFormation template, located at
--   https://s3.amazonaws.com/opsworks-cm-us-east-1-prod-default-assets/misc/opsworks-cm-roles.yaml.
--   This template creates a CloudFormation stack that includes the service
--   role and instance profile that you need.
createServer_serviceRoleArn :: Lens' CreateServer Text

-- | <i>See:</i> <a>newCreateServerResponse</a> smart constructor.
data CreateServerResponse
CreateServerResponse' :: Maybe Server -> Int -> CreateServerResponse

-- | The server that is created by the request.
[$sel:server:CreateServerResponse'] :: CreateServerResponse -> Maybe Server

-- | The response's http status code.
[$sel:httpStatus:CreateServerResponse'] :: CreateServerResponse -> Int

-- | Create a value of <a>CreateServerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:server:CreateServerResponse'</a>,
--   <a>createServerResponse_server</a> - The server that is created by the
--   request.
--   
--   <a>$sel:httpStatus:CreateServerResponse'</a>,
--   <a>createServerResponse_httpStatus</a> - The response's http status
--   code.
newCreateServerResponse :: Int -> CreateServerResponse

-- | The server that is created by the request.
createServerResponse_server :: Lens' CreateServerResponse (Maybe Server)

-- | The response's http status code.
createServerResponse_httpStatus :: Lens' CreateServerResponse Int
instance GHC.Generics.Generic Amazonka.OpsWorksCM.CreateServer.CreateServer
instance GHC.Show.Show Amazonka.OpsWorksCM.CreateServer.CreateServer
instance GHC.Classes.Eq Amazonka.OpsWorksCM.CreateServer.CreateServer
instance GHC.Generics.Generic Amazonka.OpsWorksCM.CreateServer.CreateServerResponse
instance GHC.Show.Show Amazonka.OpsWorksCM.CreateServer.CreateServerResponse
instance GHC.Classes.Eq Amazonka.OpsWorksCM.CreateServer.CreateServerResponse
instance Amazonka.Types.AWSRequest Amazonka.OpsWorksCM.CreateServer.CreateServer
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.CreateServer.CreateServerResponse
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.CreateServer.CreateServer
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.CreateServer.CreateServer
instance Amazonka.Data.Headers.ToHeaders Amazonka.OpsWorksCM.CreateServer.CreateServer
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.CreateServer.CreateServer
instance Amazonka.Data.Path.ToPath Amazonka.OpsWorksCM.CreateServer.CreateServer
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.CreateServer.CreateServer


-- | Creates an application-level backup of a server. While the server is
--   in the <tt>BACKING_UP</tt> state, the server cannot be changed, and no
--   additional backup can be created.
--   
--   Backups can be created for servers in <tt>RUNNING</tt>,
--   <tt>HEALTHY</tt>, and <tt>UNHEALTHY</tt> states. By default, you can
--   create a maximum of 50 manual backups.
--   
--   This operation is asynchronous.
--   
--   A <tt>LimitExceededException</tt> is thrown when the maximum number of
--   manual backups is reached. An <tt>InvalidStateException</tt> is thrown
--   when the server is not in any of the following states: RUNNING,
--   HEALTHY, or UNHEALTHY. A <tt>ResourceNotFoundException</tt> is thrown
--   when the server is not found. A <tt>ValidationException</tt> is thrown
--   when parameters of the request are not valid.
module Amazonka.OpsWorksCM.CreateBackup

-- | <i>See:</i> <a>newCreateBackup</a> smart constructor.
data CreateBackup
CreateBackup' :: Maybe Text -> Maybe [Tag] -> Text -> CreateBackup

-- | A user-defined description of the backup.
[$sel:description:CreateBackup'] :: CreateBackup -> Maybe Text

-- | A map that contains tag keys and tag values to attach to an AWS
--   OpsWorks-CM server backup.
--   
--   <ul>
--   <li>The key cannot be empty.</li>
--   <li>The key can be a maximum of 127 characters, and can contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt></li>
--   <li>The value can be a maximum 255 characters, and contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt></li>
--   <li>Leading and trailing white spaces are trimmed from both the key
--   and value.</li>
--   <li>A maximum of 50 user-applied tags is allowed for tag-supported AWS
--   OpsWorks-CM resources.</li>
--   </ul>
[$sel:tags:CreateBackup'] :: CreateBackup -> Maybe [Tag]

-- | The name of the server that you want to back up.
[$sel:serverName:CreateBackup'] :: CreateBackup -> Text

-- | Create a value of <a>CreateBackup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateBackup'</a>, <a>createBackup_description</a>
--   - A user-defined description of the backup.
--   
--   <a>$sel:tags:CreateBackup'</a>, <a>createBackup_tags</a> - A map that
--   contains tag keys and tag values to attach to an AWS OpsWorks-CM
--   server backup.
--   
--   <ul>
--   <li>The key cannot be empty.</li>
--   <li>The key can be a maximum of 127 characters, and can contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt></li>
--   <li>The value can be a maximum 255 characters, and contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt></li>
--   <li>Leading and trailing white spaces are trimmed from both the key
--   and value.</li>
--   <li>A maximum of 50 user-applied tags is allowed for tag-supported AWS
--   OpsWorks-CM resources.</li>
--   </ul>
--   
--   <a>$sel:serverName:CreateBackup'</a>, <a>createBackup_serverName</a> -
--   The name of the server that you want to back up.
newCreateBackup :: Text -> CreateBackup

-- | A user-defined description of the backup.
createBackup_description :: Lens' CreateBackup (Maybe Text)

-- | A map that contains tag keys and tag values to attach to an AWS
--   OpsWorks-CM server backup.
--   
--   <ul>
--   <li>The key cannot be empty.</li>
--   <li>The key can be a maximum of 127 characters, and can contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt></li>
--   <li>The value can be a maximum 255 characters, and contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt></li>
--   <li>Leading and trailing white spaces are trimmed from both the key
--   and value.</li>
--   <li>A maximum of 50 user-applied tags is allowed for tag-supported AWS
--   OpsWorks-CM resources.</li>
--   </ul>
createBackup_tags :: Lens' CreateBackup (Maybe [Tag])

-- | The name of the server that you want to back up.
createBackup_serverName :: Lens' CreateBackup Text

-- | <i>See:</i> <a>newCreateBackupResponse</a> smart constructor.
data CreateBackupResponse
CreateBackupResponse' :: Maybe Backup -> Int -> CreateBackupResponse

-- | Backup created by request.
[$sel:backup:CreateBackupResponse'] :: CreateBackupResponse -> Maybe Backup

-- | The response's http status code.
[$sel:httpStatus:CreateBackupResponse'] :: CreateBackupResponse -> Int

-- | Create a value of <a>CreateBackupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backup:CreateBackupResponse'</a>,
--   <a>createBackupResponse_backup</a> - Backup created by request.
--   
--   <a>$sel:httpStatus:CreateBackupResponse'</a>,
--   <a>createBackupResponse_httpStatus</a> - The response's http status
--   code.
newCreateBackupResponse :: Int -> CreateBackupResponse

-- | Backup created by request.
createBackupResponse_backup :: Lens' CreateBackupResponse (Maybe Backup)

-- | The response's http status code.
createBackupResponse_httpStatus :: Lens' CreateBackupResponse Int
instance GHC.Generics.Generic Amazonka.OpsWorksCM.CreateBackup.CreateBackup
instance GHC.Show.Show Amazonka.OpsWorksCM.CreateBackup.CreateBackup
instance GHC.Read.Read Amazonka.OpsWorksCM.CreateBackup.CreateBackup
instance GHC.Classes.Eq Amazonka.OpsWorksCM.CreateBackup.CreateBackup
instance GHC.Generics.Generic Amazonka.OpsWorksCM.CreateBackup.CreateBackupResponse
instance GHC.Show.Show Amazonka.OpsWorksCM.CreateBackup.CreateBackupResponse
instance GHC.Read.Read Amazonka.OpsWorksCM.CreateBackup.CreateBackupResponse
instance GHC.Classes.Eq Amazonka.OpsWorksCM.CreateBackup.CreateBackupResponse
instance Amazonka.Types.AWSRequest Amazonka.OpsWorksCM.CreateBackup.CreateBackup
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.CreateBackup.CreateBackupResponse
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.CreateBackup.CreateBackup
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.CreateBackup.CreateBackup
instance Amazonka.Data.Headers.ToHeaders Amazonka.OpsWorksCM.CreateBackup.CreateBackup
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.CreateBackup.CreateBackup
instance Amazonka.Data.Path.ToPath Amazonka.OpsWorksCM.CreateBackup.CreateBackup
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.CreateBackup.CreateBackup


-- | Associates a new node with the server. For more information about how
--   to disassociate a node, see DisassociateNode.
--   
--   On a Chef server: This command is an alternative to <tt>knife
--   bootstrap</tt>.
--   
--   Example (Chef): <tt>aws opsworks-cm associate-node --server-name
--   MyServer --node-name MyManagedNode --engine-attributes
--   "Name=CHEF_ORGANIZATION,Value=default"
--   "Name=CHEF_NODE_PUBLIC_KEY,Value=public-key-pem"</tt>
--   
--   On a Puppet server, this command is an alternative to the <tt>puppet
--   cert sign</tt> command that signs a Puppet node CSR.
--   
--   Example (Puppet): <tt>aws opsworks-cm associate-node --server-name
--   MyServer --node-name MyManagedNode --engine-attributes
--   "Name=PUPPET_NODE_CSR,Value=csr-pem"</tt>
--   
--   A node can can only be associated with servers that are in a
--   <tt>HEALTHY</tt> state. Otherwise, an <tt>InvalidStateException</tt>
--   is thrown. A <tt>ResourceNotFoundException</tt> is thrown when the
--   server does not exist. A <tt>ValidationException</tt> is raised when
--   parameters of the request are not valid. The AssociateNode API call
--   can be integrated into Auto Scaling configurations, AWS Cloudformation
--   templates, or the user data of a server's instance.
module Amazonka.OpsWorksCM.AssociateNode

-- | <i>See:</i> <a>newAssociateNode</a> smart constructor.
data AssociateNode
AssociateNode' :: Text -> Text -> [EngineAttribute] -> AssociateNode

-- | The name of the server with which to associate the node.
[$sel:serverName:AssociateNode'] :: AssociateNode -> Text

-- | The name of the node.
[$sel:nodeName:AssociateNode'] :: AssociateNode -> Text

-- | Engine attributes used for associating the node.
--   
--   <b>Attributes accepted in a AssociateNode request for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_ORGANIZATION</tt>: The Chef organization with which the
--   node is associated. By default only one organization named
--   <tt>default</tt> can exist.</li>
--   <li><tt>CHEF_NODE_PUBLIC_KEY</tt>: A PEM-formatted public key. This
--   key is required for the <tt>chef-client</tt> agent to access the Chef
--   API.</li>
--   </ul>
--   
--   <b>Attributes accepted in a AssociateNode request for Puppet</b>
--   
--   <ul>
--   <li><tt>PUPPET_NODE_CSR</tt>: A PEM-formatted certificate-signing
--   request (CSR) that is created by the node.</li>
--   </ul>
[$sel:engineAttributes:AssociateNode'] :: AssociateNode -> [EngineAttribute]

-- | Create a value of <a>AssociateNode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverName:AssociateNode'</a>, <a>associateNode_serverName</a>
--   - The name of the server with which to associate the node.
--   
--   <a>$sel:nodeName:AssociateNode'</a>, <a>associateNode_nodeName</a> -
--   The name of the node.
--   
--   <a>$sel:engineAttributes:AssociateNode'</a>,
--   <a>associateNode_engineAttributes</a> - Engine attributes used for
--   associating the node.
--   
--   <b>Attributes accepted in a AssociateNode request for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_ORGANIZATION</tt>: The Chef organization with which the
--   node is associated. By default only one organization named
--   <tt>default</tt> can exist.</li>
--   <li><tt>CHEF_NODE_PUBLIC_KEY</tt>: A PEM-formatted public key. This
--   key is required for the <tt>chef-client</tt> agent to access the Chef
--   API.</li>
--   </ul>
--   
--   <b>Attributes accepted in a AssociateNode request for Puppet</b>
--   
--   <ul>
--   <li><tt>PUPPET_NODE_CSR</tt>: A PEM-formatted certificate-signing
--   request (CSR) that is created by the node.</li>
--   </ul>
newAssociateNode :: Text -> Text -> AssociateNode

-- | The name of the server with which to associate the node.
associateNode_serverName :: Lens' AssociateNode Text

-- | The name of the node.
associateNode_nodeName :: Lens' AssociateNode Text

-- | Engine attributes used for associating the node.
--   
--   <b>Attributes accepted in a AssociateNode request for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_ORGANIZATION</tt>: The Chef organization with which the
--   node is associated. By default only one organization named
--   <tt>default</tt> can exist.</li>
--   <li><tt>CHEF_NODE_PUBLIC_KEY</tt>: A PEM-formatted public key. This
--   key is required for the <tt>chef-client</tt> agent to access the Chef
--   API.</li>
--   </ul>
--   
--   <b>Attributes accepted in a AssociateNode request for Puppet</b>
--   
--   <ul>
--   <li><tt>PUPPET_NODE_CSR</tt>: A PEM-formatted certificate-signing
--   request (CSR) that is created by the node.</li>
--   </ul>
associateNode_engineAttributes :: Lens' AssociateNode [EngineAttribute]

-- | <i>See:</i> <a>newAssociateNodeResponse</a> smart constructor.
data AssociateNodeResponse
AssociateNodeResponse' :: Maybe Text -> Int -> AssociateNodeResponse

-- | Contains a token which can be passed to the
--   <tt>DescribeNodeAssociationStatus</tt> API call to get the status of
--   the association request.
[$sel:nodeAssociationStatusToken:AssociateNodeResponse'] :: AssociateNodeResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:AssociateNodeResponse'] :: AssociateNodeResponse -> Int

-- | Create a value of <a>AssociateNodeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeAssociationStatusToken:AssociateNodeResponse'</a>,
--   <a>associateNodeResponse_nodeAssociationStatusToken</a> - Contains a
--   token which can be passed to the
--   <tt>DescribeNodeAssociationStatus</tt> API call to get the status of
--   the association request.
--   
--   <a>$sel:httpStatus:AssociateNodeResponse'</a>,
--   <a>associateNodeResponse_httpStatus</a> - The response's http status
--   code.
newAssociateNodeResponse :: Int -> AssociateNodeResponse

-- | Contains a token which can be passed to the
--   <tt>DescribeNodeAssociationStatus</tt> API call to get the status of
--   the association request.
associateNodeResponse_nodeAssociationStatusToken :: Lens' AssociateNodeResponse (Maybe Text)

-- | The response's http status code.
associateNodeResponse_httpStatus :: Lens' AssociateNodeResponse Int
instance GHC.Generics.Generic Amazonka.OpsWorksCM.AssociateNode.AssociateNode
instance GHC.Show.Show Amazonka.OpsWorksCM.AssociateNode.AssociateNode
instance GHC.Classes.Eq Amazonka.OpsWorksCM.AssociateNode.AssociateNode
instance GHC.Generics.Generic Amazonka.OpsWorksCM.AssociateNode.AssociateNodeResponse
instance GHC.Show.Show Amazonka.OpsWorksCM.AssociateNode.AssociateNodeResponse
instance GHC.Read.Read Amazonka.OpsWorksCM.AssociateNode.AssociateNodeResponse
instance GHC.Classes.Eq Amazonka.OpsWorksCM.AssociateNode.AssociateNodeResponse
instance Amazonka.Types.AWSRequest Amazonka.OpsWorksCM.AssociateNode.AssociateNode
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.AssociateNode.AssociateNodeResponse
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.AssociateNode.AssociateNode
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.AssociateNode.AssociateNode
instance Amazonka.Data.Headers.ToHeaders Amazonka.OpsWorksCM.AssociateNode.AssociateNode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.AssociateNode.AssociateNode
instance Amazonka.Data.Path.ToPath Amazonka.OpsWorksCM.AssociateNode.AssociateNode
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.AssociateNode.AssociateNode


-- | Removes specified tags from an AWS OpsWorks-CM server or backup.
module Amazonka.OpsWorksCM.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Number (ARN) of a resource from which you want to
--   remove tags. For example,
--   <tt>arn:aws:opsworks-cm:us-west-2:123456789012:server/test-owcm-server/EXAMPLE-66b0-4196-8274-d1a2bEXAMPLE</tt>.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The keys of tags that you want to remove.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Number (ARN) of
--   a resource from which you want to remove tags. For example,
--   <tt>arn:aws:opsworks-cm:us-west-2:123456789012:server/test-owcm-server/EXAMPLE-66b0-4196-8274-d1a2bEXAMPLE</tt>.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of tags that you want to remove.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Number (ARN) of a resource from which you want to
--   remove tags. For example,
--   <tt>arn:aws:opsworks-cm:us-west-2:123456789012:server/test-owcm-server/EXAMPLE-66b0-4196-8274-d1a2bEXAMPLE</tt>.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The keys of tags that you want to remove.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.OpsWorksCM.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.OpsWorksCM.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.OpsWorksCM.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.OpsWorksCM.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.OpsWorksCM.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.OpsWorksCM.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.OpsWorksCM.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.OpsWorksCM.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.OpsWorksCM.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.OpsWorksCM.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.OpsWorksCM.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.UntagResource.UntagResource


-- | Updates settings for a server.
--   
--   This operation is synchronous.
module Amazonka.OpsWorksCM.UpdateServer

-- | <i>See:</i> <a>newUpdateServer</a> smart constructor.
data UpdateServer
UpdateServer' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Int -> Text -> UpdateServer

-- | Setting DisableAutomatedBackup to <tt>true</tt> disables automated or
--   scheduled backups. Automated backups are enabled by default.
[$sel:disableAutomatedBackup:UpdateServer'] :: UpdateServer -> Maybe Bool
[$sel:preferredMaintenanceWindow:UpdateServer'] :: UpdateServer -> Maybe Text
[$sel:preferredBackupWindow:UpdateServer'] :: UpdateServer -> Maybe Text

-- | Sets the number of automated backups that you want to keep.
[$sel:backupRetentionCount:UpdateServer'] :: UpdateServer -> Maybe Int

-- | The name of the server to update.
[$sel:serverName:UpdateServer'] :: UpdateServer -> Text

-- | Create a value of <a>UpdateServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disableAutomatedBackup:UpdateServer'</a>,
--   <a>updateServer_disableAutomatedBackup</a> - Setting
--   DisableAutomatedBackup to <tt>true</tt> disables automated or
--   scheduled backups. Automated backups are enabled by default.
--   
--   <a>$sel:preferredMaintenanceWindow:UpdateServer'</a>,
--   <a>updateServer_preferredMaintenanceWindow</a> - Undocumented member.
--   
--   <a>$sel:preferredBackupWindow:UpdateServer'</a>,
--   <a>updateServer_preferredBackupWindow</a> - Undocumented member.
--   
--   <a>$sel:backupRetentionCount:UpdateServer'</a>,
--   <a>updateServer_backupRetentionCount</a> - Sets the number of
--   automated backups that you want to keep.
--   
--   <a>$sel:serverName:UpdateServer'</a>, <a>updateServer_serverName</a> -
--   The name of the server to update.
newUpdateServer :: Text -> UpdateServer

-- | Setting DisableAutomatedBackup to <tt>true</tt> disables automated or
--   scheduled backups. Automated backups are enabled by default.
updateServer_disableAutomatedBackup :: Lens' UpdateServer (Maybe Bool)

-- | Undocumented member.
updateServer_preferredMaintenanceWindow :: Lens' UpdateServer (Maybe Text)

-- | Undocumented member.
updateServer_preferredBackupWindow :: Lens' UpdateServer (Maybe Text)

-- | Sets the number of automated backups that you want to keep.
updateServer_backupRetentionCount :: Lens' UpdateServer (Maybe Int)

-- | The name of the server to update.
updateServer_serverName :: Lens' UpdateServer Text

-- | <i>See:</i> <a>newUpdateServerResponse</a> smart constructor.
data UpdateServerResponse
UpdateServerResponse' :: Maybe Server -> Int -> UpdateServerResponse

-- | Contains the response to a <tt>UpdateServer</tt> request.
[$sel:server:UpdateServerResponse'] :: UpdateServerResponse -> Maybe Server

-- | The response's http status code.
[$sel:httpStatus:UpdateServerResponse'] :: UpdateServerResponse -> Int

-- | Create a value of <a>UpdateServerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:server:UpdateServerResponse'</a>,
--   <a>updateServerResponse_server</a> - Contains the response to a
--   <tt>UpdateServer</tt> request.
--   
--   <a>$sel:httpStatus:UpdateServerResponse'</a>,
--   <a>updateServerResponse_httpStatus</a> - The response's http status
--   code.
newUpdateServerResponse :: Int -> UpdateServerResponse

-- | Contains the response to a <tt>UpdateServer</tt> request.
updateServerResponse_server :: Lens' UpdateServerResponse (Maybe Server)

-- | The response's http status code.
updateServerResponse_httpStatus :: Lens' UpdateServerResponse Int
instance GHC.Generics.Generic Amazonka.OpsWorksCM.UpdateServer.UpdateServer
instance GHC.Show.Show Amazonka.OpsWorksCM.UpdateServer.UpdateServer
instance GHC.Read.Read Amazonka.OpsWorksCM.UpdateServer.UpdateServer
instance GHC.Classes.Eq Amazonka.OpsWorksCM.UpdateServer.UpdateServer
instance GHC.Generics.Generic Amazonka.OpsWorksCM.UpdateServer.UpdateServerResponse
instance GHC.Show.Show Amazonka.OpsWorksCM.UpdateServer.UpdateServerResponse
instance GHC.Classes.Eq Amazonka.OpsWorksCM.UpdateServer.UpdateServerResponse
instance Amazonka.Types.AWSRequest Amazonka.OpsWorksCM.UpdateServer.UpdateServer
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.UpdateServer.UpdateServerResponse
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.UpdateServer.UpdateServer
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.UpdateServer.UpdateServer
instance Amazonka.Data.Headers.ToHeaders Amazonka.OpsWorksCM.UpdateServer.UpdateServer
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.UpdateServer.UpdateServer
instance Amazonka.Data.Path.ToPath Amazonka.OpsWorksCM.UpdateServer.UpdateServer
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.UpdateServer.UpdateServer


-- | Updates engine-specific attributes on a specified server. The server
--   enters the <tt>MODIFYING</tt> state when this operation is in
--   progress. Only one update can occur at a time. You can use this
--   command to reset a Chef server's public key
--   (<tt>CHEF_PIVOTAL_KEY</tt>) or a Puppet server's admin password
--   (<tt>PUPPET_ADMIN_PASSWORD</tt>).
--   
--   This operation is asynchronous.
--   
--   This operation can only be called for servers in <tt>HEALTHY</tt> or
--   <tt>UNHEALTHY</tt> states. Otherwise, an
--   <tt>InvalidStateException</tt> is raised. A
--   <tt>ResourceNotFoundException</tt> is thrown when the server does not
--   exist. A <tt>ValidationException</tt> is raised when parameters of the
--   request are not valid.
module Amazonka.OpsWorksCM.UpdateServerEngineAttributes

-- | <i>See:</i> <a>newUpdateServerEngineAttributes</a> smart constructor.
data UpdateServerEngineAttributes
UpdateServerEngineAttributes' :: Maybe Text -> Text -> Text -> UpdateServerEngineAttributes

-- | The value to set for the attribute.
[$sel:attributeValue:UpdateServerEngineAttributes'] :: UpdateServerEngineAttributes -> Maybe Text

-- | The name of the server to update.
[$sel:serverName:UpdateServerEngineAttributes'] :: UpdateServerEngineAttributes -> Text

-- | The name of the engine attribute to update.
[$sel:attributeName:UpdateServerEngineAttributes'] :: UpdateServerEngineAttributes -> Text

-- | Create a value of <a>UpdateServerEngineAttributes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeValue:UpdateServerEngineAttributes'</a>,
--   <a>updateServerEngineAttributes_attributeValue</a> - The value to set
--   for the attribute.
--   
--   <a>$sel:serverName:UpdateServerEngineAttributes'</a>,
--   <a>updateServerEngineAttributes_serverName</a> - The name of the
--   server to update.
--   
--   <a>$sel:attributeName:UpdateServerEngineAttributes'</a>,
--   <a>updateServerEngineAttributes_attributeName</a> - The name of the
--   engine attribute to update.
newUpdateServerEngineAttributes :: Text -> Text -> UpdateServerEngineAttributes

-- | The value to set for the attribute.
updateServerEngineAttributes_attributeValue :: Lens' UpdateServerEngineAttributes (Maybe Text)

-- | The name of the server to update.
updateServerEngineAttributes_serverName :: Lens' UpdateServerEngineAttributes Text

-- | The name of the engine attribute to update.
updateServerEngineAttributes_attributeName :: Lens' UpdateServerEngineAttributes Text

-- | <i>See:</i> <a>newUpdateServerEngineAttributesResponse</a> smart
--   constructor.
data UpdateServerEngineAttributesResponse
UpdateServerEngineAttributesResponse' :: Maybe Server -> Int -> UpdateServerEngineAttributesResponse

-- | Contains the response to an <tt>UpdateServerEngineAttributes</tt>
--   request.
[$sel:server:UpdateServerEngineAttributesResponse'] :: UpdateServerEngineAttributesResponse -> Maybe Server

-- | The response's http status code.
[$sel:httpStatus:UpdateServerEngineAttributesResponse'] :: UpdateServerEngineAttributesResponse -> Int

-- | Create a value of <a>UpdateServerEngineAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:server:UpdateServerEngineAttributesResponse'</a>,
--   <a>updateServerEngineAttributesResponse_server</a> - Contains the
--   response to an <tt>UpdateServerEngineAttributes</tt> request.
--   
--   <a>$sel:httpStatus:UpdateServerEngineAttributesResponse'</a>,
--   <a>updateServerEngineAttributesResponse_httpStatus</a> - The
--   response's http status code.
newUpdateServerEngineAttributesResponse :: Int -> UpdateServerEngineAttributesResponse

-- | Contains the response to an <tt>UpdateServerEngineAttributes</tt>
--   request.
updateServerEngineAttributesResponse_server :: Lens' UpdateServerEngineAttributesResponse (Maybe Server)

-- | The response's http status code.
updateServerEngineAttributesResponse_httpStatus :: Lens' UpdateServerEngineAttributesResponse Int
instance GHC.Generics.Generic Amazonka.OpsWorksCM.UpdateServerEngineAttributes.UpdateServerEngineAttributes
instance GHC.Show.Show Amazonka.OpsWorksCM.UpdateServerEngineAttributes.UpdateServerEngineAttributes
instance GHC.Read.Read Amazonka.OpsWorksCM.UpdateServerEngineAttributes.UpdateServerEngineAttributes
instance GHC.Classes.Eq Amazonka.OpsWorksCM.UpdateServerEngineAttributes.UpdateServerEngineAttributes
instance GHC.Generics.Generic Amazonka.OpsWorksCM.UpdateServerEngineAttributes.UpdateServerEngineAttributesResponse
instance GHC.Show.Show Amazonka.OpsWorksCM.UpdateServerEngineAttributes.UpdateServerEngineAttributesResponse
instance GHC.Classes.Eq Amazonka.OpsWorksCM.UpdateServerEngineAttributes.UpdateServerEngineAttributesResponse
instance Amazonka.Types.AWSRequest Amazonka.OpsWorksCM.UpdateServerEngineAttributes.UpdateServerEngineAttributes
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.UpdateServerEngineAttributes.UpdateServerEngineAttributesResponse
instance Data.Hashable.Class.Hashable Amazonka.OpsWorksCM.UpdateServerEngineAttributes.UpdateServerEngineAttributes
instance Control.DeepSeq.NFData Amazonka.OpsWorksCM.UpdateServerEngineAttributes.UpdateServerEngineAttributes
instance Amazonka.Data.Headers.ToHeaders Amazonka.OpsWorksCM.UpdateServerEngineAttributes.UpdateServerEngineAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.OpsWorksCM.UpdateServerEngineAttributes.UpdateServerEngineAttributes
instance Amazonka.Data.Path.ToPath Amazonka.OpsWorksCM.UpdateServerEngineAttributes.UpdateServerEngineAttributes
instance Amazonka.Data.Query.ToQuery Amazonka.OpsWorksCM.UpdateServerEngineAttributes.UpdateServerEngineAttributes


module Amazonka.OpsWorksCM.Lens

-- | The name of the server with which to associate the node.
associateNode_serverName :: Lens' AssociateNode Text

-- | The name of the node.
associateNode_nodeName :: Lens' AssociateNode Text

-- | Engine attributes used for associating the node.
--   
--   <b>Attributes accepted in a AssociateNode request for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_ORGANIZATION</tt>: The Chef organization with which the
--   node is associated. By default only one organization named
--   <tt>default</tt> can exist.</li>
--   <li><tt>CHEF_NODE_PUBLIC_KEY</tt>: A PEM-formatted public key. This
--   key is required for the <tt>chef-client</tt> agent to access the Chef
--   API.</li>
--   </ul>
--   
--   <b>Attributes accepted in a AssociateNode request for Puppet</b>
--   
--   <ul>
--   <li><tt>PUPPET_NODE_CSR</tt>: A PEM-formatted certificate-signing
--   request (CSR) that is created by the node.</li>
--   </ul>
associateNode_engineAttributes :: Lens' AssociateNode [EngineAttribute]

-- | Contains a token which can be passed to the
--   <tt>DescribeNodeAssociationStatus</tt> API call to get the status of
--   the association request.
associateNodeResponse_nodeAssociationStatusToken :: Lens' AssociateNodeResponse (Maybe Text)

-- | The response's http status code.
associateNodeResponse_httpStatus :: Lens' AssociateNodeResponse Int

-- | Setting DisableAutomatedBackup to <tt>true</tt> disables automated or
--   scheduled backups. Automated backups are enabled by default.
updateServer_disableAutomatedBackup :: Lens' UpdateServer (Maybe Bool)

-- | Undocumented member.
updateServer_preferredMaintenanceWindow :: Lens' UpdateServer (Maybe Text)

-- | Undocumented member.
updateServer_preferredBackupWindow :: Lens' UpdateServer (Maybe Text)

-- | Sets the number of automated backups that you want to keep.
updateServer_backupRetentionCount :: Lens' UpdateServer (Maybe Int)

-- | The name of the server to update.
updateServer_serverName :: Lens' UpdateServer Text

-- | Contains the response to a <tt>UpdateServer</tt> request.
updateServerResponse_server :: Lens' UpdateServerResponse (Maybe Server)

-- | The response's http status code.
updateServerResponse_httpStatus :: Lens' UpdateServerResponse Int

-- | The ID of the server to delete.
deleteServer_serverName :: Lens' DeleteServer Text

-- | The response's http status code.
deleteServerResponse_httpStatus :: Lens' DeleteServerResponse Int

-- | The ID of the backup to delete. Run the DescribeBackups command to get
--   a list of backup IDs. Backup IDs are in the format
--   <tt>ServerName-yyyyMMddHHmmssSSS</tt>.
deleteBackup_backupId :: Lens' DeleteBackup Text

-- | The response's http status code.
deleteBackupResponse_httpStatus :: Lens' DeleteBackupResponse Int

-- | NextToken is a string that is returned in some command responses. It
--   indicates that not all entries have been returned, and that you must
--   run at least one more request to get remaining items. To get remaining
--   results, call <tt>DescribeEvents</tt> again, and assign the token from
--   the previous results as the value of the <tt>nextToken</tt> parameter.
--   If there are no more results, the response object's <tt>nextToken</tt>
--   parameter value is <tt>null</tt>. Setting a <tt>nextToken</tt> value
--   that was not returned in your previous results causes an
--   <tt>InvalidNextTokenException</tt> to occur.
describeEvents_nextToken :: Lens' DescribeEvents (Maybe Text)

-- | To receive a paginated response, use this parameter to specify the
--   maximum number of results to be returned with a single call. If the
--   number of available results exceeds this maximum, the response
--   includes a <tt>NextToken</tt> value that you can assign to the
--   <tt>NextToken</tt> request parameter to get the next set of results.
describeEvents_maxResults :: Lens' DescribeEvents (Maybe Natural)

-- | The name of the server for which you want to view events.
describeEvents_serverName :: Lens' DescribeEvents Text

-- | Contains the response to a <tt>DescribeEvents</tt> request.
describeEventsResponse_serverEvents :: Lens' DescribeEventsResponse (Maybe [ServerEvent])

-- | NextToken is a string that is returned in some command responses. It
--   indicates that not all entries have been returned, and that you must
--   run at least one more request to get remaining items. To get remaining
--   results, call <tt>DescribeEvents</tt> again, and assign the token from
--   the previous results as the value of the <tt>nextToken</tt> parameter.
--   If there are no more results, the response object's <tt>nextToken</tt>
--   parameter value is <tt>null</tt>. Setting a <tt>nextToken</tt> value
--   that was not returned in your previous results causes an
--   <tt>InvalidNextTokenException</tt> to occur.
describeEventsResponse_nextToken :: Lens' DescribeEventsResponse (Maybe Text)

-- | The response's http status code.
describeEventsResponse_httpStatus :: Lens' DescribeEventsResponse Int

-- | Engine attributes that are used for disassociating the node. No
--   attributes are required for Puppet.
--   
--   <b>Attributes required in a DisassociateNode request for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_ORGANIZATION</tt>: The Chef organization with which the
--   node was associated. By default only one organization named
--   <tt>default</tt> can exist.</li>
--   </ul>
disassociateNode_engineAttributes :: Lens' DisassociateNode (Maybe [EngineAttribute])

-- | The name of the server from which to disassociate the node.
disassociateNode_serverName :: Lens' DisassociateNode Text

-- | The name of the client node.
disassociateNode_nodeName :: Lens' DisassociateNode Text

-- | Contains a token which can be passed to the
--   <tt>DescribeNodeAssociationStatus</tt> API call to get the status of
--   the disassociation request.
disassociateNodeResponse_nodeAssociationStatusToken :: Lens' DisassociateNodeResponse (Maybe Text)

-- | The response's http status code.
disassociateNodeResponse_httpStatus :: Lens' DisassociateNodeResponse Int

-- | NextToken is a string that is returned in some command responses. It
--   indicates that not all entries have been returned, and that you must
--   run at least one more request to get remaining items. To get remaining
--   results, call <tt>ListTagsForResource</tt> again, and assign the token
--   from the previous results as the value of the <tt>nextToken</tt>
--   parameter. If there are no more results, the response object's
--   <tt>nextToken</tt> parameter value is <tt>null</tt>. Setting a
--   <tt>nextToken</tt> value that was not returned in your previous
--   results causes an <tt>InvalidNextTokenException</tt> to occur.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | To receive a paginated response, use this parameter to specify the
--   maximum number of results to be returned with a single call. If the
--   number of available results exceeds this maximum, the response
--   includes a <tt>NextToken</tt> value that you can assign to the
--   <tt>NextToken</tt> request parameter to get the next set of results.
listTagsForResource_maxResults :: Lens' ListTagsForResource (Maybe Natural)

-- | The Amazon Resource Number (ARN) of an AWS OpsWorks for Chef Automate
--   or AWS OpsWorks for Puppet Enterprise server for which you want to
--   show applied tags. For example,
--   <tt>arn:aws:opsworks-cm:us-west-2:123456789012:server/test-owcm-server/EXAMPLE-66b0-4196-8274-d1a2bEXAMPLE</tt>.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | A token that you can use as the value of <tt>NextToken</tt> in
--   subsequent calls to the API to show more results.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | Tags that have been applied to the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | A user-defined description of the backup.
createBackup_description :: Lens' CreateBackup (Maybe Text)

-- | A map that contains tag keys and tag values to attach to an AWS
--   OpsWorks-CM server backup.
--   
--   <ul>
--   <li>The key cannot be empty.</li>
--   <li>The key can be a maximum of 127 characters, and can contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt></li>
--   <li>The value can be a maximum 255 characters, and contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt></li>
--   <li>Leading and trailing white spaces are trimmed from both the key
--   and value.</li>
--   <li>A maximum of 50 user-applied tags is allowed for tag-supported AWS
--   OpsWorks-CM resources.</li>
--   </ul>
createBackup_tags :: Lens' CreateBackup (Maybe [Tag])

-- | The name of the server that you want to back up.
createBackup_serverName :: Lens' CreateBackup Text

-- | Backup created by request.
createBackupResponse_backup :: Lens' CreateBackupResponse (Maybe Backup)

-- | The response's http status code.
createBackupResponse_httpStatus :: Lens' CreateBackupResponse Int

-- | The value to set for the attribute.
updateServerEngineAttributes_attributeValue :: Lens' UpdateServerEngineAttributes (Maybe Text)

-- | The name of the server to update.
updateServerEngineAttributes_serverName :: Lens' UpdateServerEngineAttributes Text

-- | The name of the engine attribute to update.
updateServerEngineAttributes_attributeName :: Lens' UpdateServerEngineAttributes Text

-- | Contains the response to an <tt>UpdateServerEngineAttributes</tt>
--   request.
updateServerEngineAttributesResponse_server :: Lens' UpdateServerEngineAttributesResponse (Maybe Server)

-- | The response's http status code.
updateServerEngineAttributesResponse_httpStatus :: Lens' UpdateServerEngineAttributesResponse Int

-- | Engine attributes that are specific to the server on which you want to
--   run maintenance.
--   
--   <b>Attributes accepted in a StartMaintenance request for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_MAJOR_UPGRADE</tt>: If a Chef Automate server is eligible
--   for upgrade to Chef Automate 2, add this engine attribute to a
--   <tt>StartMaintenance</tt> request and set the value to <tt>true</tt>
--   to upgrade the server to Chef Automate 2. For more information, see
--   <a>Upgrade an AWS OpsWorks for Chef Automate Server to Chef Automate
--   2</a>.</li>
--   </ul>
startMaintenance_engineAttributes :: Lens' StartMaintenance (Maybe [EngineAttribute])

-- | The name of the server on which to run maintenance.
startMaintenance_serverName :: Lens' StartMaintenance Text

-- | Contains the response to a <tt>StartMaintenance</tt> request.
startMaintenanceResponse_server :: Lens' StartMaintenanceResponse (Maybe Server)

-- | The response's http status code.
startMaintenanceResponse_httpStatus :: Lens' StartMaintenanceResponse Int

-- | Returns backups for the server with the specified ServerName.
describeBackups_serverName :: Lens' DescribeBackups (Maybe Text)

-- | Describes a single backup.
describeBackups_backupId :: Lens' DescribeBackups (Maybe Text)

-- | This is not currently implemented for <tt>DescribeBackups</tt>
--   requests.
describeBackups_nextToken :: Lens' DescribeBackups (Maybe Text)

-- | This is not currently implemented for <tt>DescribeBackups</tt>
--   requests.
describeBackups_maxResults :: Lens' DescribeBackups (Maybe Natural)

-- | Contains the response to a <tt>DescribeBackups</tt> request.
describeBackupsResponse_backups :: Lens' DescribeBackupsResponse (Maybe [Backup])

-- | This is not currently implemented for <tt>DescribeBackups</tt>
--   requests.
describeBackupsResponse_nextToken :: Lens' DescribeBackupsResponse (Maybe Text)

-- | The response's http status code.
describeBackupsResponse_httpStatus :: Lens' DescribeBackupsResponse Int

-- | The major release version of the engine that you want to use. For a
--   Chef server, the valid value for EngineVersion is currently
--   <tt>2</tt>. For a Puppet server, valid values are <tt>2019</tt> or
--   <tt>2017</tt>.
createServer_engineVersion :: Lens' CreateServer (Maybe Text)

-- | Enable or disable scheduled backups. Valid values are <tt>true</tt> or
--   <tt>false</tt>. The default value is <tt>true</tt>.
createServer_disableAutomatedBackup :: Lens' CreateServer (Maybe Bool)

-- | A list of security group IDs to attach to the Amazon EC2 instance. If
--   you add this parameter, the specified security groups must be within
--   the VPC that is specified by <tt>SubnetIds</tt>.
--   
--   If you do not specify this parameter, AWS OpsWorks CM creates one new
--   security group that uses TCP ports 22 and 443, open to 0.0.0.0/0
--   (everyone).
createServer_securityGroupIds :: Lens' CreateServer (Maybe [Text])

-- | Associate a public IP address with a server that you are launching.
--   Valid values are <tt>true</tt> or <tt>false</tt>. The default value is
--   <tt>true</tt>.
createServer_associatePublicIpAddress :: Lens' CreateServer (Maybe Bool)

-- | The IDs of subnets in which to launch the server EC2 instance.
--   
--   Amazon EC2-Classic customers: This field is required. All servers must
--   run within a VPC. The VPC must have "Auto Assign Public IP" enabled.
--   
--   EC2-VPC customers: This field is optional. If you do not specify
--   subnet IDs, your EC2 instances are created in a default subnet that is
--   selected by Amazon EC2. If you specify subnet IDs, the VPC must have
--   "Auto Assign Public IP" enabled.
--   
--   For more information about supported Amazon EC2 platforms, see
--   <a>Supported Platforms</a>.
createServer_subnetIds :: Lens' CreateServer (Maybe [Text])

-- | The Amazon EC2 key pair to set for the instance. This parameter is
--   optional; if desired, you may specify this parameter to connect to
--   your instances by using SSH.
createServer_keyPair :: Lens' CreateServer (Maybe Text)

-- | If you specify this field, AWS OpsWorks CM creates the server by using
--   the backup represented by BackupId.
createServer_backupId :: Lens' CreateServer (Maybe Text)

-- | An optional public endpoint of a server, such as
--   <tt>https://aws.my-company.com</tt>. To access the server, create a
--   CNAME DNS record in your preferred DNS service that points the custom
--   domain to the endpoint that is generated when the server is created
--   (the value of the CreateServer Endpoint attribute). You cannot access
--   the server by using the generated <tt>Endpoint</tt> value if the
--   server is using a custom domain. If you specify a custom domain, you
--   must also specify values for <tt>CustomCertificate</tt> and
--   <tt>CustomPrivateKey</tt>.
createServer_customDomain :: Lens' CreateServer (Maybe Text)

-- | A private key in PEM format for connecting to the server by using
--   HTTPS. The private key must not be encrypted; it cannot be protected
--   by a password or passphrase. If you specify a custom private key, you
--   must also specify values for <tt>CustomDomain</tt> and
--   <tt>CustomCertificate</tt>.
createServer_customPrivateKey :: Lens' CreateServer (Maybe Text)

-- | The engine model of the server. Valid values in this release include
--   <tt>Monolithic</tt> for Puppet and <tt>Single</tt> for Chef.
createServer_engineModel :: Lens' CreateServer (Maybe Text)

-- | Optional engine attributes on a specified server.
--   
--   <b>Attributes accepted in a Chef createServer request:</b>
--   
--   <ul>
--   <li><tt>CHEF_AUTOMATE_PIVOTAL_KEY</tt>: A base64-encoded RSA public
--   key. The corresponding private key is required to access the Chef API.
--   When no CHEF_AUTOMATE_PIVOTAL_KEY is set, a private key is generated
--   and returned in the response.</li>
--   <li><tt>CHEF_AUTOMATE_ADMIN_PASSWORD</tt>: The password for the
--   administrative user in the Chef Automate web-based dashboard. The
--   password length is a minimum of eight characters, and a maximum of 32.
--   The password can contain letters, numbers, and special characters
--   (!/@#$%^&amp;+=_). The password must contain at least one lower case
--   letter, one upper case letter, one number, and one special character.
--   When no CHEF_AUTOMATE_ADMIN_PASSWORD is set, one is generated and
--   returned in the response.</li>
--   </ul>
--   
--   <b>Attributes accepted in a Puppet createServer request:</b>
--   
--   <ul>
--   <li><tt>PUPPET_ADMIN_PASSWORD</tt>: To work with the Puppet Enterprise
--   console, a password must use ASCII characters.</li>
--   <li><tt>PUPPET_R10K_REMOTE</tt>: The r10k remote is the URL of your
--   control repository (for example,
--   ssh://git@your.git-repo.com:user/control-repo.git). Specifying an r10k
--   remote opens TCP port 8170.</li>
--   <li><tt>PUPPET_R10K_PRIVATE_KEY</tt>: If you are using a private Git
--   repository, add PUPPET_R10K_PRIVATE_KEY to specify a PEM-encoded
--   private SSH key.</li>
--   </ul>
createServer_engineAttributes :: Lens' CreateServer (Maybe [EngineAttribute])

-- | The start time for a one-hour period each week during which AWS
--   OpsWorks CM performs maintenance on the instance. Valid values must be
--   specified in the following format: <tt>DDD:HH:MM</tt>. <tt>MM</tt>
--   must be specified as <tt>00</tt>. The specified time is in coordinated
--   universal time (UTC). The default value is a random one-hour period on
--   Tuesday, Wednesday, or Friday. See <tt>TimeWindowDefinition</tt> for
--   more information.
--   
--   <b>Example:</b> <tt>Mon:08:00</tt>, which represents a start time of
--   every Monday at 08:00 UTC. (8:00 a.m.)
createServer_preferredMaintenanceWindow :: Lens' CreateServer (Maybe Text)

-- | The start time for a one-hour period during which AWS OpsWorks CM
--   backs up application-level data on your server if automated backups
--   are enabled. Valid values must be specified in one of the following
--   formats:
--   
--   <ul>
--   <li><tt>HH:MM</tt> for daily backups</li>
--   <li><tt>DDD:HH:MM</tt> for weekly backups</li>
--   </ul>
--   
--   <tt>MM</tt> must be specified as <tt>00</tt>. The specified time is in
--   coordinated universal time (UTC). The default value is a random, daily
--   start time.
--   
--   <b>Example:</b> <tt>08:00</tt>, which represents a daily start time of
--   08:00 UTC.
--   
--   <b>Example:</b> <tt>Mon:08:00</tt>, which represents a start time of
--   every Monday at 08:00 UTC. (8:00 a.m.)
createServer_preferredBackupWindow :: Lens' CreateServer (Maybe Text)

-- | A PEM-formatted HTTPS certificate. The value can be be a single,
--   self-signed certificate, or a certificate chain. If you specify a
--   custom certificate, you must also specify values for
--   <tt>CustomDomain</tt> and <tt>CustomPrivateKey</tt>. The following are
--   requirements for the <tt>CustomCertificate</tt> value:
--   
--   <ul>
--   <li>You can provide either a self-signed, custom certificate, or the
--   full certificate chain.</li>
--   <li>The certificate must be a valid X509 certificate, or a certificate
--   chain in PEM format.</li>
--   <li>The certificate must be valid at the time of upload. A certificate
--   can't be used before its validity period begins (the certificate's
--   <tt>NotBefore</tt> date), or after it expires (the certificate's
--   <tt>NotAfter</tt> date).</li>
--   <li>The certificate’s common name or subject alternative names (SANs),
--   if present, must match the value of <tt>CustomDomain</tt>.</li>
--   <li>The certificate must match the value of
--   <tt>CustomPrivateKey</tt>.</li>
--   </ul>
createServer_customCertificate :: Lens' CreateServer (Maybe Text)

-- | A map that contains tag keys and tag values to attach to an AWS
--   OpsWorks for Chef Automate or AWS OpsWorks for Puppet Enterprise
--   server.
--   
--   <ul>
--   <li>The key cannot be empty.</li>
--   <li>The key can be a maximum of 127 characters, and can contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : / @</tt></li>
--   <li>The value can be a maximum 255 characters, and contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : / @</tt></li>
--   <li>Leading and trailing white spaces are trimmed from both the key
--   and value.</li>
--   <li>A maximum of 50 user-applied tags is allowed for any AWS
--   OpsWorks-CM server.</li>
--   </ul>
createServer_tags :: Lens' CreateServer (Maybe [Tag])

-- | The number of automated backups that you want to keep. Whenever a new
--   backup is created, AWS OpsWorks CM deletes the oldest backups if this
--   number is exceeded. The default value is <tt>1</tt>.
createServer_backupRetentionCount :: Lens' CreateServer (Maybe Natural)

-- | The configuration management engine to use. Valid values include
--   <tt>ChefAutomate</tt> and <tt>Puppet</tt>.
createServer_engine :: Lens' CreateServer Text

-- | The name of the server. The server name must be unique within your AWS
--   account, within each region. Server names must start with a letter;
--   then letters, numbers, or hyphens (-) are allowed, up to a maximum of
--   40 characters.
createServer_serverName :: Lens' CreateServer Text

-- | The ARN of the instance profile that your Amazon EC2 instances use.
--   Although the AWS OpsWorks console typically creates the instance
--   profile for you, if you are using API commands instead, run the
--   service-role-creation.yaml AWS CloudFormation template, located at
--   https://s3.amazonaws.com/opsworks-cm-us-east-1-prod-default-assets/misc/opsworks-cm-roles.yaml.
--   This template creates a CloudFormation stack that includes the
--   instance profile you need.
createServer_instanceProfileArn :: Lens' CreateServer Text

-- | The Amazon EC2 instance type to use. For example, <tt>m5.large</tt>.
createServer_instanceType :: Lens' CreateServer Text

-- | The service role that the AWS OpsWorks CM service backend uses to work
--   with your account. Although the AWS OpsWorks management console
--   typically creates the service role for you, if you are using the AWS
--   CLI or API commands, run the service-role-creation.yaml AWS
--   CloudFormation template, located at
--   https://s3.amazonaws.com/opsworks-cm-us-east-1-prod-default-assets/misc/opsworks-cm-roles.yaml.
--   This template creates a CloudFormation stack that includes the service
--   role and instance profile that you need.
createServer_serviceRoleArn :: Lens' CreateServer Text

-- | The server that is created by the request.
createServerResponse_server :: Lens' CreateServerResponse (Maybe Server)

-- | The response's http status code.
createServerResponse_httpStatus :: Lens' CreateServerResponse Int

-- | The name of the key pair to set on the new EC2 instance. This can be
--   helpful if the administrator no longer has the SSH key.
restoreServer_keyPair :: Lens' RestoreServer (Maybe Text)

-- | The type of instance to restore. Valid values must be specified in the
--   following format: <tt>^([cm][34]|t2).*</tt> For example,
--   <tt>m5.large</tt>. Valid values are <tt>m5.large</tt>,
--   <tt>r5.xlarge</tt>, and <tt>r5.2xlarge</tt>. If you do not specify
--   this parameter, RestoreServer uses the instance type from the
--   specified backup.
restoreServer_instanceType :: Lens' RestoreServer (Maybe Text)

-- | The ID of the backup that you want to use to restore a server.
restoreServer_backupId :: Lens' RestoreServer Text

-- | The name of the server that you want to restore.
restoreServer_serverName :: Lens' RestoreServer Text

-- | Undocumented member.
restoreServerResponse_server :: Lens' RestoreServerResponse (Maybe Server)

-- | The response's http status code.
restoreServerResponse_httpStatus :: Lens' RestoreServerResponse Int

-- | The token returned in either the AssociateNodeResponse or the
--   DisassociateNodeResponse.
describeNodeAssociationStatus_nodeAssociationStatusToken :: Lens' DescribeNodeAssociationStatus Text

-- | The name of the server from which to disassociate the node.
describeNodeAssociationStatus_serverName :: Lens' DescribeNodeAssociationStatus Text

-- | Attributes specific to the node association. In Puppet, the attibute
--   PUPPET_NODE_CERT contains the signed certificate (the result of the
--   CSR).
describeNodeAssociationStatusResponse_engineAttributes :: Lens' DescribeNodeAssociationStatusResponse (Maybe [EngineAttribute])

-- | The response's http status code.
describeNodeAssociationStatusResponse_httpStatus :: Lens' DescribeNodeAssociationStatusResponse Int

-- | The status of the association or disassociation request.
--   
--   <b>Possible values:</b>
--   
--   <ul>
--   <li><tt>SUCCESS</tt>: The association or disassociation
--   succeeded.</li>
--   <li><tt>FAILED</tt>: The association or disassociation failed.</li>
--   <li><tt>IN_PROGRESS</tt>: The association or disassociation is still
--   in progress.</li>
--   </ul>
describeNodeAssociationStatusResponse_nodeAssociationStatus :: Lens' DescribeNodeAssociationStatusResponse NodeAssociationStatus

-- | The Amazon Resource Number (ARN) of a resource to which you want to
--   apply tags. For example,
--   <tt>arn:aws:opsworks-cm:us-west-2:123456789012:server/test-owcm-server/EXAMPLE-66b0-4196-8274-d1a2bEXAMPLE</tt>.
tagResource_resourceArn :: Lens' TagResource Text

-- | A map that contains tag keys and tag values to attach to AWS
--   OpsWorks-CM servers or backups.
--   
--   <ul>
--   <li>The key cannot be empty.</li>
--   <li>The key can be a maximum of 127 characters, and can contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt></li>
--   <li>The value can be a maximum 255 characters, and contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt></li>
--   <li>Leading and trailing white spaces are trimmed from both the key
--   and value.</li>
--   <li>A maximum of 50 user-applied tags is allowed for any AWS
--   OpsWorks-CM server or backup.</li>
--   </ul>
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The attributes that are currently set for the account.
describeAccountAttributesResponse_attributes :: Lens' DescribeAccountAttributesResponse (Maybe [AccountAttribute])

-- | The response's http status code.
describeAccountAttributesResponse_httpStatus :: Lens' DescribeAccountAttributesResponse Int

-- | The Amazon Resource Number (ARN) of a resource from which you want to
--   remove tags. For example,
--   <tt>arn:aws:opsworks-cm:us-west-2:123456789012:server/test-owcm-server/EXAMPLE-66b0-4196-8274-d1a2bEXAMPLE</tt>.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The keys of tags that you want to remove.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | Describes the server with the specified ServerName.
describeServers_serverName :: Lens' DescribeServers (Maybe Text)

-- | This is not currently implemented for <tt>DescribeServers</tt>
--   requests.
describeServers_nextToken :: Lens' DescribeServers (Maybe Text)

-- | This is not currently implemented for <tt>DescribeServers</tt>
--   requests.
describeServers_maxResults :: Lens' DescribeServers (Maybe Natural)

-- | Contains the response to a <tt>DescribeServers</tt> request.
--   
--   <i>For Chef Automate servers:</i> If
--   <tt>DescribeServersResponse$Servers$EngineAttributes</tt> includes
--   CHEF_MAJOR_UPGRADE_AVAILABLE, you can upgrade the Chef Automate server
--   to Chef Automate 2. To be eligible for upgrade, a server running Chef
--   Automate 1 must have had at least one successful maintenance run after
--   November 1, 2019.
--   
--   <i>For Puppet servers:</i>
--   <tt>DescribeServersResponse$Servers$EngineAttributes</tt> contains the
--   following two responses:
--   
--   <ul>
--   <li><tt>PUPPET_API_CA_CERT</tt>, the PEM-encoded CA certificate that
--   is used by the Puppet API over TCP port number 8140. The CA
--   certificate is also used to sign node certificates.</li>
--   <li><tt>PUPPET_API_CRL</tt>, a certificate revocation list. The
--   certificate revocation list is for internal maintenance purposes only.
--   For more information about the Puppet certificate revocation list, see
--   <a>Man Page: puppet certificate_revocation_list</a> in the Puppet
--   documentation.</li>
--   </ul>
describeServersResponse_servers :: Lens' DescribeServersResponse (Maybe [Server])

-- | This is not currently implemented for <tt>DescribeServers</tt>
--   requests.
describeServersResponse_nextToken :: Lens' DescribeServersResponse (Maybe Text)

-- | The response's http status code.
describeServersResponse_httpStatus :: Lens' DescribeServersResponse Int

-- | The list of engine attributes. The list type is
--   <tt>EngineAttribute</tt>. An <tt>EngineAttribute</tt> list item is a
--   pair that includes an attribute name and its value. For the
--   <tt>Userdata</tt> ExportAttributeName, the following are supported
--   engine attribute names.
--   
--   <ul>
--   <li><b>RunList</b> In Chef, a list of roles or recipes that are run in
--   the specified order. In Puppet, this parameter is ignored.</li>
--   <li><b>OrganizationName</b> In Chef, an organization name. AWS
--   OpsWorks for Chef Automate always creates the organization
--   <tt>default</tt>. In Puppet, this parameter is ignored.</li>
--   <li><b>NodeEnvironment</b> In Chef, a node environment (for example,
--   development, staging, or one-box). In Puppet, this parameter is
--   ignored.</li>
--   <li><b>NodeClientVersion</b> In Chef, the version of the Chef engine
--   (three numbers separated by dots, such as 13.8.5). If this attribute
--   is empty, OpsWorks for Chef Automate uses the most current version. In
--   Puppet, this parameter is ignored.</li>
--   </ul>
exportServerEngineAttribute_inputAttributes :: Lens' ExportServerEngineAttribute (Maybe [EngineAttribute])

-- | The name of the export attribute. Currently, the supported export
--   attribute is <tt>Userdata</tt>. This exports a user data script that
--   includes parameters and values provided in the
--   <tt>InputAttributes</tt> list.
exportServerEngineAttribute_exportAttributeName :: Lens' ExportServerEngineAttribute Text

-- | The name of the server from which you are exporting the attribute.
exportServerEngineAttribute_serverName :: Lens' ExportServerEngineAttribute Text

-- | The server name used in the request.
exportServerEngineAttributeResponse_serverName :: Lens' ExportServerEngineAttributeResponse (Maybe Text)

-- | The requested engine attribute pair with attribute name and value.
exportServerEngineAttributeResponse_engineAttribute :: Lens' ExportServerEngineAttributeResponse (Maybe EngineAttribute)

-- | The response's http status code.
exportServerEngineAttributeResponse_httpStatus :: Lens' ExportServerEngineAttributeResponse Int

-- | The current usage, such as the current number of servers that are
--   associated with the account.
accountAttribute_used :: Lens' AccountAttribute (Maybe Int)

-- | The maximum allowed value.
accountAttribute_maximum :: Lens' AccountAttribute (Maybe Int)

-- | The attribute name. The following are supported attribute names.
--   
--   <ul>
--   <li><i>ServerLimit:</i> The number of current servers/maximum number
--   of servers allowed. By default, you can have a maximum of 10
--   servers.</li>
--   <li><i>ManualBackupLimit:</i> The number of current manual
--   backups/maximum number of backups allowed. By default, you can have a
--   maximum of 50 manual backups saved.</li>
--   </ul>
accountAttribute_name :: Lens' AccountAttribute (Maybe Text)

-- | The engine version that is obtained from the server when the backup is
--   created.
backup_engineVersion :: Lens' Backup (Maybe Text)

-- | The service role ARN that is obtained from the server when the backup
--   is created.
backup_serviceRoleArn :: Lens' Backup (Maybe Text)

-- | The status of a backup while in progress.
backup_status :: Lens' Backup (Maybe BackupStatus)

-- | The EC2 instance profile ARN that is obtained from the server when the
--   backup is created. Because this value is stored, you are not required
--   to provide the InstanceProfileArn again if you restore a backup.
backup_instanceProfileArn :: Lens' Backup (Maybe Text)

-- | The security group IDs that are obtained from the server when the
--   backup is created.
backup_securityGroupIds :: Lens' Backup (Maybe [Text])

-- | An informational message about backup status.
backup_statusDescription :: Lens' Backup (Maybe Text)

-- | The name of the server from which the backup was made.
backup_serverName :: Lens' Backup (Maybe Text)

-- | The subnet IDs that are obtained from the server when the backup is
--   created.
backup_subnetIds :: Lens' Backup (Maybe [Text])

-- | The key pair that is obtained from the server when the backup is
--   created.
backup_keyPair :: Lens' Backup (Maybe Text)

-- | The time stamp when the backup was created in the database. Example:
--   <tt>2016-07-29T13:38:47.520Z</tt>
backup_createdAt :: Lens' Backup (Maybe UTCTime)

-- | The generated ID of the backup. Example:
--   <tt>myServerName-yyyyMMddHHmmssSSS</tt>
backup_backupId :: Lens' Backup (Maybe Text)

-- | The engine type that is obtained from the server when the backup is
--   created.
backup_engine :: Lens' Backup (Maybe Text)

-- | The instance type that is obtained from the server when the backup is
--   created.
backup_instanceType :: Lens' Backup (Maybe Text)

-- | The engine model that is obtained from the server when the backup is
--   created.
backup_engineModel :: Lens' Backup (Maybe Text)

-- | The preferred maintenance period that is obtained from the server when
--   the backup is created.
backup_preferredMaintenanceWindow :: Lens' Backup (Maybe Text)

-- | The IAM user ARN of the requester for manual backups. This field is
--   empty for automated backups.
backup_userArn :: Lens' Backup (Maybe Text)

-- | The preferred backup period that is obtained from the server when the
--   backup is created.
backup_preferredBackupWindow :: Lens' Backup (Maybe Text)

-- | The Amazon S3 URL of the backup's log file.
backup_s3LogUrl :: Lens' Backup (Maybe Text)

-- | This field is deprecated and is no longer used.
backup_s3DataSize :: Lens' Backup (Maybe Int)

-- | The ARN of the backup.
backup_backupArn :: Lens' Backup (Maybe Text)

-- | This field is deprecated and is no longer used.
backup_s3DataUrl :: Lens' Backup (Maybe Text)

-- | A user-provided description for a manual backup. This field is empty
--   for automated backups.
backup_description :: Lens' Backup (Maybe Text)

-- | The backup type. Valid values are <tt>automated</tt> or
--   <tt>manual</tt>.
backup_backupType :: Lens' Backup (Maybe BackupType)

-- | The version of AWS OpsWorks CM-specific tools that is obtained from
--   the server when the backup is created.
backup_toolsVersion :: Lens' Backup (Maybe Text)

-- | The value of the engine attribute.
engineAttribute_value :: Lens' EngineAttribute (Maybe Text)

-- | The name of the engine attribute.
engineAttribute_name :: Lens' EngineAttribute (Maybe Text)

-- | The engine version of the server. For a Chef server, the valid value
--   for EngineVersion is currently <tt>2</tt>. For a Puppet server,
--   specify either <tt>2019</tt> or <tt>2017</tt>.
server_engineVersion :: Lens' Server (Maybe Text)

-- | The service role ARN used to create the server.
server_serviceRoleArn :: Lens' Server (Maybe Text)

-- | Disables automated backups. The number of stored backups is dependent
--   on the value of PreferredBackupCount.
server_disableAutomatedBackup :: Lens' Server (Maybe Bool)

-- | The server's status. This field displays the states of actions in
--   progress, such as creating, running, or backing up the server, as well
--   as the server's health state.
server_status :: Lens' Server (Maybe ServerStatus)

-- | The instance profile ARN of the server.
server_instanceProfileArn :: Lens' Server (Maybe Text)

-- | The security group IDs for the server, as specified in the
--   CloudFormation stack. These might not be the same security groups that
--   are shown in the EC2 console.
server_securityGroupIds :: Lens' Server (Maybe [Text])

-- | Associate a public IP address with a server that you are launching.
server_associatePublicIpAddress :: Lens' Server (Maybe Bool)

-- | The name of the server.
server_serverName :: Lens' Server (Maybe Text)

-- | The subnet IDs specified in a CreateServer request.
server_subnetIds :: Lens' Server (Maybe [Text])

-- | The key pair associated with the server.
server_keyPair :: Lens' Server (Maybe Text)

-- | Time stamp of server creation. Example
--   <tt>2016-07-29T13:38:47.520Z</tt>
server_createdAt :: Lens' Server (Maybe UTCTime)

-- | The ARN of the server.
server_serverArn :: Lens' Server (Maybe Text)

-- | An optional public endpoint of a server, such as
--   <tt>https://aws.my-company.com</tt>. You cannot access the server by
--   using the <tt>Endpoint</tt> value if the server has a
--   <tt>CustomDomain</tt> specified.
server_customDomain :: Lens' Server (Maybe Text)

-- | The engine type of the server. Valid values in this release include
--   <tt>ChefAutomate</tt> and <tt>Puppet</tt>.
server_engine :: Lens' Server (Maybe Text)

-- | The status of the most recent server maintenance run. Shows
--   <tt>SUCCESS</tt> or <tt>FAILED</tt>.
server_maintenanceStatus :: Lens' Server (Maybe MaintenanceStatus)

-- | The instance type for the server, as specified in the CloudFormation
--   stack. This might not be the same instance type that is shown in the
--   EC2 console.
server_instanceType :: Lens' Server (Maybe Text)

-- | The engine model of the server. Valid values in this release include
--   <tt>Monolithic</tt> for Puppet and <tt>Single</tt> for Chef.
server_engineModel :: Lens' Server (Maybe Text)

-- | The response of a createServer() request returns the master credential
--   to access the server in EngineAttributes. These credentials are not
--   stored by AWS OpsWorks CM; they are returned only as part of the
--   result of createServer().
--   
--   <b>Attributes returned in a createServer response for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_AUTOMATE_PIVOTAL_KEY</tt>: A base64-encoded RSA private
--   key that is generated by AWS OpsWorks for Chef Automate. This private
--   key is required to access the Chef API.</li>
--   <li><tt>CHEF_STARTER_KIT</tt>: A base64-encoded ZIP file. The ZIP file
--   contains a Chef starter kit, which includes a README, a configuration
--   file, and the required RSA private key. Save this file, unzip it, and
--   then change to the directory where you've unzipped the file contents.
--   From this directory, you can run Knife commands.</li>
--   </ul>
--   
--   <b>Attributes returned in a createServer response for Puppet</b>
--   
--   <ul>
--   <li><tt>PUPPET_STARTER_KIT</tt>: A base64-encoded ZIP file. The ZIP
--   file contains a Puppet starter kit, including a README and a required
--   private key. Save this file, unzip it, and then change to the
--   directory where you've unzipped the file contents.</li>
--   <li><tt>PUPPET_ADMIN_PASSWORD</tt>: An administrator password that you
--   can use to sign in to the Puppet Enterprise console after the server
--   is online.</li>
--   </ul>
server_engineAttributes :: Lens' Server (Maybe [EngineAttribute])

-- | The preferred maintenance period specified for the server.
server_preferredMaintenanceWindow :: Lens' Server (Maybe Text)

-- | The preferred backup period specified for the server.
server_preferredBackupWindow :: Lens' Server (Maybe Text)

-- | Depending on the server status, this field has either a human-readable
--   message (such as a create or backup error), or an escaped block of
--   JSON (used for health check results).
server_statusReason :: Lens' Server (Maybe Text)

-- | A DNS name that can be used to access the engine. Example:
--   <tt>myserver-asdfghjkl.us-east-1.opsworks.io</tt>. You cannot access
--   the server by using the <tt>Endpoint</tt> value if the server has a
--   <tt>CustomDomain</tt> specified.
server_endpoint :: Lens' Server (Maybe Text)

-- | The ARN of the CloudFormation stack that was used to create the
--   server.
server_cloudFormationStackArn :: Lens' Server (Maybe Text)

-- | The number of automated backups to keep.
server_backupRetentionCount :: Lens' Server (Maybe Int)

-- | The Amazon S3 URL of the event's log file.
serverEvent_logUrl :: Lens' ServerEvent (Maybe Text)

-- | The name of the server on or for which the event occurred.
serverEvent_serverName :: Lens' ServerEvent (Maybe Text)

-- | The time when the event occurred.
serverEvent_createdAt :: Lens' ServerEvent (Maybe UTCTime)

-- | A human-readable informational or status message.
serverEvent_message :: Lens' ServerEvent (Maybe Text)

-- | A tag key, such as <tt>Stage</tt> or <tt>Name</tt>. A tag key cannot
--   be empty. The key can be a maximum of 127 characters, and can contain
--   only Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt>
tag_key :: Lens' Tag Text

-- | An optional tag value, such as <tt>Production</tt> or
--   <tt>test-owcm-server</tt>. The value can be a maximum of 255
--   characters, and contain only Unicode letters, numbers, or separators,
--   or the following special characters: <tt>+ - = . _ : /</tt>
tag_value :: Lens' Tag Text


module Amazonka.OpsWorksCM.Waiters

-- | Polls <a>DescribeNodeAssociationStatus</a> every 15 seconds until a
--   successful state is reached. An error is returned after 15 failed
--   checks.
newNodeAssociated :: Wait DescribeNodeAssociationStatus


-- | Derived from API version <tt>2016-11-01</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS OpsWorks CM
--   
--   AWS OpsWorks for configuration management (CM) is a service that runs
--   and manages configuration management servers. You can use AWS OpsWorks
--   CM to create and manage AWS OpsWorks for Chef Automate and AWS
--   OpsWorks for Puppet Enterprise servers, and add or remove nodes for
--   the servers to manage.
--   
--   <b>Glossary of terms</b>
--   
--   <ul>
--   <li><b>Server</b>: A configuration management server that can be
--   highly-available. The configuration management server runs on an
--   Amazon Elastic Compute Cloud (EC2) instance, and may use various other
--   AWS services, such as Amazon Relational Database Service (RDS) and
--   Elastic Load Balancing. A server is a generic abstraction over the
--   configuration manager that you want to use, much like Amazon RDS. In
--   AWS OpsWorks CM, you do not start or stop servers. After you create
--   servers, they continue to run until they are deleted.</li>
--   <li><b>Engine</b>: The engine is the specific configuration manager
--   that you want to use. Valid values in this release include
--   <tt>ChefAutomate</tt> and <tt>Puppet</tt>.</li>
--   <li><b>Backup</b>: This is an application-level backup of the data
--   that the configuration manager stores. AWS OpsWorks CM creates an S3
--   bucket for backups when you launch the first server. A backup
--   maintains a snapshot of a server's configuration-related attributes at
--   the time the backup starts.</li>
--   <li><b>Events</b>: Events are always related to a server. Events are
--   written during server creation, when health checks run, when backups
--   are created, when system maintenance is performed, etc. When you
--   delete a server, the server's events are also deleted.</li>
--   <li><b>Account attributes</b>: Every account has attributes that are
--   assigned in the AWS OpsWorks CM database. These attributes store
--   information about configuration limits (servers, backups, etc.) and
--   your customer account.</li>
--   </ul>
--   
--   <b>Endpoints</b>
--   
--   AWS OpsWorks CM supports the following endpoints, all HTTPS. You must
--   connect to one of the following endpoints. Your servers can only be
--   accessed or managed within the endpoint in which they are created.
--   
--   <ul>
--   <li>opsworks-cm.us-east-1.amazonaws.com</li>
--   <li>opsworks-cm.us-east-2.amazonaws.com</li>
--   <li>opsworks-cm.us-west-1.amazonaws.com</li>
--   <li>opsworks-cm.us-west-2.amazonaws.com</li>
--   <li>opsworks-cm.ap-northeast-1.amazonaws.com</li>
--   <li>opsworks-cm.ap-southeast-1.amazonaws.com</li>
--   <li>opsworks-cm.ap-southeast-2.amazonaws.com</li>
--   <li>opsworks-cm.eu-central-1.amazonaws.com</li>
--   <li>opsworks-cm.eu-west-1.amazonaws.com</li>
--   </ul>
--   
--   For more information, see <a>AWS OpsWorks endpoints and quotas</a> in
--   the AWS General Reference.
--   
--   <b>Throttling limits</b>
--   
--   All API operations allow for five requests per second with a burst of
--   10 requests per second.
module Amazonka.OpsWorksCM

-- | API version <tt>2016-11-01</tt> of the Amazon OpsWorks CM SDK
--   configuration.
defaultService :: Service

-- | One or more of the provided request parameters are not valid.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested resource cannot be created because it already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This occurs when the provided nextToken is not valid.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested resource does not exist, or access was denied.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource is in a state that does not allow you to perform a
--   specified action.
_InvalidStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The limit of servers or backups has been reached.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Polls <a>DescribeNodeAssociationStatus</a> every 15 seconds until a
--   successful state is reached. An error is returned after 15 failed
--   checks.
newNodeAssociated :: Wait DescribeNodeAssociationStatus

-- | <i>See:</i> <a>newAssociateNode</a> smart constructor.
data AssociateNode
AssociateNode' :: Text -> Text -> [EngineAttribute] -> AssociateNode

-- | Create a value of <a>AssociateNode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverName:AssociateNode'</a>, <a>associateNode_serverName</a>
--   - The name of the server with which to associate the node.
--   
--   <a>$sel:nodeName:AssociateNode'</a>, <a>associateNode_nodeName</a> -
--   The name of the node.
--   
--   <a>$sel:engineAttributes:AssociateNode'</a>,
--   <a>associateNode_engineAttributes</a> - Engine attributes used for
--   associating the node.
--   
--   <b>Attributes accepted in a AssociateNode request for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_ORGANIZATION</tt>: The Chef organization with which the
--   node is associated. By default only one organization named
--   <tt>default</tt> can exist.</li>
--   <li><tt>CHEF_NODE_PUBLIC_KEY</tt>: A PEM-formatted public key. This
--   key is required for the <tt>chef-client</tt> agent to access the Chef
--   API.</li>
--   </ul>
--   
--   <b>Attributes accepted in a AssociateNode request for Puppet</b>
--   
--   <ul>
--   <li><tt>PUPPET_NODE_CSR</tt>: A PEM-formatted certificate-signing
--   request (CSR) that is created by the node.</li>
--   </ul>
newAssociateNode :: Text -> Text -> AssociateNode

-- | <i>See:</i> <a>newAssociateNodeResponse</a> smart constructor.
data AssociateNodeResponse
AssociateNodeResponse' :: Maybe Text -> Int -> AssociateNodeResponse

-- | Create a value of <a>AssociateNodeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeAssociationStatusToken:AssociateNodeResponse'</a>,
--   <a>associateNodeResponse_nodeAssociationStatusToken</a> - Contains a
--   token which can be passed to the
--   <tt>DescribeNodeAssociationStatus</tt> API call to get the status of
--   the association request.
--   
--   <a>$sel:httpStatus:AssociateNodeResponse'</a>,
--   <a>associateNodeResponse_httpStatus</a> - The response's http status
--   code.
newAssociateNodeResponse :: Int -> AssociateNodeResponse

-- | <i>See:</i> <a>newUpdateServer</a> smart constructor.
data UpdateServer
UpdateServer' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Int -> Text -> UpdateServer

-- | Create a value of <a>UpdateServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disableAutomatedBackup:UpdateServer'</a>,
--   <a>updateServer_disableAutomatedBackup</a> - Setting
--   DisableAutomatedBackup to <tt>true</tt> disables automated or
--   scheduled backups. Automated backups are enabled by default.
--   
--   <a>$sel:preferredMaintenanceWindow:UpdateServer'</a>,
--   <a>updateServer_preferredMaintenanceWindow</a> - Undocumented member.
--   
--   <a>$sel:preferredBackupWindow:UpdateServer'</a>,
--   <a>updateServer_preferredBackupWindow</a> - Undocumented member.
--   
--   <a>$sel:backupRetentionCount:UpdateServer'</a>,
--   <a>updateServer_backupRetentionCount</a> - Sets the number of
--   automated backups that you want to keep.
--   
--   <a>$sel:serverName:UpdateServer'</a>, <a>updateServer_serverName</a> -
--   The name of the server to update.
newUpdateServer :: Text -> UpdateServer

-- | <i>See:</i> <a>newUpdateServerResponse</a> smart constructor.
data UpdateServerResponse
UpdateServerResponse' :: Maybe Server -> Int -> UpdateServerResponse

-- | Create a value of <a>UpdateServerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:server:UpdateServerResponse'</a>,
--   <a>updateServerResponse_server</a> - Contains the response to a
--   <tt>UpdateServer</tt> request.
--   
--   <a>$sel:httpStatus:UpdateServerResponse'</a>,
--   <a>updateServerResponse_httpStatus</a> - The response's http status
--   code.
newUpdateServerResponse :: Int -> UpdateServerResponse

-- | <i>See:</i> <a>newDeleteServer</a> smart constructor.
data DeleteServer
DeleteServer' :: Text -> DeleteServer

-- | Create a value of <a>DeleteServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverName:DeleteServer'</a>, <a>deleteServer_serverName</a> -
--   The ID of the server to delete.
newDeleteServer :: Text -> DeleteServer

-- | <i>See:</i> <a>newDeleteServerResponse</a> smart constructor.
data DeleteServerResponse
DeleteServerResponse' :: Int -> DeleteServerResponse

-- | Create a value of <a>DeleteServerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteServerResponse'</a>,
--   <a>deleteServerResponse_httpStatus</a> - The response's http status
--   code.
newDeleteServerResponse :: Int -> DeleteServerResponse

-- | <i>See:</i> <a>newDeleteBackup</a> smart constructor.
data DeleteBackup
DeleteBackup' :: Text -> DeleteBackup

-- | Create a value of <a>DeleteBackup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backupId:DeleteBackup'</a>, <a>deleteBackup_backupId</a> - The
--   ID of the backup to delete. Run the DescribeBackups command to get a
--   list of backup IDs. Backup IDs are in the format
--   <tt>ServerName-yyyyMMddHHmmssSSS</tt>.
newDeleteBackup :: Text -> DeleteBackup

-- | <i>See:</i> <a>newDeleteBackupResponse</a> smart constructor.
data DeleteBackupResponse
DeleteBackupResponse' :: Int -> DeleteBackupResponse

-- | Create a value of <a>DeleteBackupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteBackupResponse'</a>,
--   <a>deleteBackupResponse_httpStatus</a> - The response's http status
--   code.
newDeleteBackupResponse :: Int -> DeleteBackupResponse

-- | <i>See:</i> <a>newDescribeEvents</a> smart constructor.
data DescribeEvents
DescribeEvents' :: Maybe Text -> Maybe Natural -> Text -> DescribeEvents

-- | Create a value of <a>DescribeEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeEvents'</a>, <a>describeEvents_nextToken</a>
--   - NextToken is a string that is returned in some command responses. It
--   indicates that not all entries have been returned, and that you must
--   run at least one more request to get remaining items. To get remaining
--   results, call <tt>DescribeEvents</tt> again, and assign the token from
--   the previous results as the value of the <tt>nextToken</tt> parameter.
--   If there are no more results, the response object's <tt>nextToken</tt>
--   parameter value is <tt>null</tt>. Setting a <tt>nextToken</tt> value
--   that was not returned in your previous results causes an
--   <tt>InvalidNextTokenException</tt> to occur.
--   
--   <a>$sel:maxResults:DescribeEvents'</a>,
--   <a>describeEvents_maxResults</a> - To receive a paginated response,
--   use this parameter to specify the maximum number of results to be
--   returned with a single call. If the number of available results
--   exceeds this maximum, the response includes a <tt>NextToken</tt> value
--   that you can assign to the <tt>NextToken</tt> request parameter to get
--   the next set of results.
--   
--   <a>$sel:serverName:DescribeEvents'</a>,
--   <a>describeEvents_serverName</a> - The name of the server for which
--   you want to view events.
newDescribeEvents :: Text -> DescribeEvents

-- | <i>See:</i> <a>newDescribeEventsResponse</a> smart constructor.
data DescribeEventsResponse
DescribeEventsResponse' :: Maybe [ServerEvent] -> Maybe Text -> Int -> DescribeEventsResponse

-- | Create a value of <a>DescribeEventsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverEvents:DescribeEventsResponse'</a>,
--   <a>describeEventsResponse_serverEvents</a> - Contains the response to
--   a <tt>DescribeEvents</tt> request.
--   
--   <a>$sel:nextToken:DescribeEvents'</a>,
--   <a>describeEventsResponse_nextToken</a> - NextToken is a string that
--   is returned in some command responses. It indicates that not all
--   entries have been returned, and that you must run at least one more
--   request to get remaining items. To get remaining results, call
--   <tt>DescribeEvents</tt> again, and assign the token from the previous
--   results as the value of the <tt>nextToken</tt> parameter. If there are
--   no more results, the response object's <tt>nextToken</tt> parameter
--   value is <tt>null</tt>. Setting a <tt>nextToken</tt> value that was
--   not returned in your previous results causes an
--   <tt>InvalidNextTokenException</tt> to occur.
--   
--   <a>$sel:httpStatus:DescribeEventsResponse'</a>,
--   <a>describeEventsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeEventsResponse :: Int -> DescribeEventsResponse

-- | <i>See:</i> <a>newDisassociateNode</a> smart constructor.
data DisassociateNode
DisassociateNode' :: Maybe [EngineAttribute] -> Text -> Text -> DisassociateNode

-- | Create a value of <a>DisassociateNode</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineAttributes:DisassociateNode'</a>,
--   <a>disassociateNode_engineAttributes</a> - Engine attributes that are
--   used for disassociating the node. No attributes are required for
--   Puppet.
--   
--   <b>Attributes required in a DisassociateNode request for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_ORGANIZATION</tt>: The Chef organization with which the
--   node was associated. By default only one organization named
--   <tt>default</tt> can exist.</li>
--   </ul>
--   
--   <a>$sel:serverName:DisassociateNode'</a>,
--   <a>disassociateNode_serverName</a> - The name of the server from which
--   to disassociate the node.
--   
--   <a>$sel:nodeName:DisassociateNode'</a>,
--   <a>disassociateNode_nodeName</a> - The name of the client node.
newDisassociateNode :: Text -> Text -> DisassociateNode

-- | <i>See:</i> <a>newDisassociateNodeResponse</a> smart constructor.
data DisassociateNodeResponse
DisassociateNodeResponse' :: Maybe Text -> Int -> DisassociateNodeResponse

-- | Create a value of <a>DisassociateNodeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeAssociationStatusToken:DisassociateNodeResponse'</a>,
--   <a>disassociateNodeResponse_nodeAssociationStatusToken</a> - Contains
--   a token which can be passed to the
--   <tt>DescribeNodeAssociationStatus</tt> API call to get the status of
--   the disassociation request.
--   
--   <a>$sel:httpStatus:DisassociateNodeResponse'</a>,
--   <a>disassociateNodeResponse_httpStatus</a> - The response's http
--   status code.
newDisassociateNodeResponse :: Int -> DisassociateNodeResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Maybe Natural -> Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - NextToken is a string that is
--   returned in some command responses. It indicates that not all entries
--   have been returned, and that you must run at least one more request to
--   get remaining items. To get remaining results, call
--   <tt>ListTagsForResource</tt> again, and assign the token from the
--   previous results as the value of the <tt>nextToken</tt> parameter. If
--   there are no more results, the response object's <tt>nextToken</tt>
--   parameter value is <tt>null</tt>. Setting a <tt>nextToken</tt> value
--   that was not returned in your previous results causes an
--   <tt>InvalidNextTokenException</tt> to occur.
--   
--   <a>$sel:maxResults:ListTagsForResource'</a>,
--   <a>listTagsForResource_maxResults</a> - To receive a paginated
--   response, use this parameter to specify the maximum number of results
--   to be returned with a single call. If the number of available results
--   exceeds this maximum, the response includes a <tt>NextToken</tt> value
--   that you can assign to the <tt>NextToken</tt> request parameter to get
--   the next set of results.
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Number
--   (ARN) of an AWS OpsWorks for Chef Automate or AWS OpsWorks for Puppet
--   Enterprise server for which you want to show applied tags. For
--   example,
--   <tt>arn:aws:opsworks-cm:us-west-2:123456789012:server/test-owcm-server/EXAMPLE-66b0-4196-8274-d1a2bEXAMPLE</tt>.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - A token that you can
--   use as the value of <tt>NextToken</tt> in subsequent calls to the API
--   to show more results.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - Tags that have been applied
--   to the resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newCreateBackup</a> smart constructor.
data CreateBackup
CreateBackup' :: Maybe Text -> Maybe [Tag] -> Text -> CreateBackup

-- | Create a value of <a>CreateBackup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateBackup'</a>, <a>createBackup_description</a>
--   - A user-defined description of the backup.
--   
--   <a>$sel:tags:CreateBackup'</a>, <a>createBackup_tags</a> - A map that
--   contains tag keys and tag values to attach to an AWS OpsWorks-CM
--   server backup.
--   
--   <ul>
--   <li>The key cannot be empty.</li>
--   <li>The key can be a maximum of 127 characters, and can contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt></li>
--   <li>The value can be a maximum 255 characters, and contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt></li>
--   <li>Leading and trailing white spaces are trimmed from both the key
--   and value.</li>
--   <li>A maximum of 50 user-applied tags is allowed for tag-supported AWS
--   OpsWorks-CM resources.</li>
--   </ul>
--   
--   <a>$sel:serverName:CreateBackup'</a>, <a>createBackup_serverName</a> -
--   The name of the server that you want to back up.
newCreateBackup :: Text -> CreateBackup

-- | <i>See:</i> <a>newCreateBackupResponse</a> smart constructor.
data CreateBackupResponse
CreateBackupResponse' :: Maybe Backup -> Int -> CreateBackupResponse

-- | Create a value of <a>CreateBackupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backup:CreateBackupResponse'</a>,
--   <a>createBackupResponse_backup</a> - Backup created by request.
--   
--   <a>$sel:httpStatus:CreateBackupResponse'</a>,
--   <a>createBackupResponse_httpStatus</a> - The response's http status
--   code.
newCreateBackupResponse :: Int -> CreateBackupResponse

-- | <i>See:</i> <a>newUpdateServerEngineAttributes</a> smart constructor.
data UpdateServerEngineAttributes
UpdateServerEngineAttributes' :: Maybe Text -> Text -> Text -> UpdateServerEngineAttributes

-- | Create a value of <a>UpdateServerEngineAttributes</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeValue:UpdateServerEngineAttributes'</a>,
--   <a>updateServerEngineAttributes_attributeValue</a> - The value to set
--   for the attribute.
--   
--   <a>$sel:serverName:UpdateServerEngineAttributes'</a>,
--   <a>updateServerEngineAttributes_serverName</a> - The name of the
--   server to update.
--   
--   <a>$sel:attributeName:UpdateServerEngineAttributes'</a>,
--   <a>updateServerEngineAttributes_attributeName</a> - The name of the
--   engine attribute to update.
newUpdateServerEngineAttributes :: Text -> Text -> UpdateServerEngineAttributes

-- | <i>See:</i> <a>newUpdateServerEngineAttributesResponse</a> smart
--   constructor.
data UpdateServerEngineAttributesResponse
UpdateServerEngineAttributesResponse' :: Maybe Server -> Int -> UpdateServerEngineAttributesResponse

-- | Create a value of <a>UpdateServerEngineAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:server:UpdateServerEngineAttributesResponse'</a>,
--   <a>updateServerEngineAttributesResponse_server</a> - Contains the
--   response to an <tt>UpdateServerEngineAttributes</tt> request.
--   
--   <a>$sel:httpStatus:UpdateServerEngineAttributesResponse'</a>,
--   <a>updateServerEngineAttributesResponse_httpStatus</a> - The
--   response's http status code.
newUpdateServerEngineAttributesResponse :: Int -> UpdateServerEngineAttributesResponse

-- | <i>See:</i> <a>newStartMaintenance</a> smart constructor.
data StartMaintenance
StartMaintenance' :: Maybe [EngineAttribute] -> Text -> StartMaintenance

-- | Create a value of <a>StartMaintenance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineAttributes:StartMaintenance'</a>,
--   <a>startMaintenance_engineAttributes</a> - Engine attributes that are
--   specific to the server on which you want to run maintenance.
--   
--   <b>Attributes accepted in a StartMaintenance request for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_MAJOR_UPGRADE</tt>: If a Chef Automate server is eligible
--   for upgrade to Chef Automate 2, add this engine attribute to a
--   <tt>StartMaintenance</tt> request and set the value to <tt>true</tt>
--   to upgrade the server to Chef Automate 2. For more information, see
--   <a>Upgrade an AWS OpsWorks for Chef Automate Server to Chef Automate
--   2</a>.</li>
--   </ul>
--   
--   <a>$sel:serverName:StartMaintenance'</a>,
--   <a>startMaintenance_serverName</a> - The name of the server on which
--   to run maintenance.
newStartMaintenance :: Text -> StartMaintenance

-- | <i>See:</i> <a>newStartMaintenanceResponse</a> smart constructor.
data StartMaintenanceResponse
StartMaintenanceResponse' :: Maybe Server -> Int -> StartMaintenanceResponse

-- | Create a value of <a>StartMaintenanceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:server:StartMaintenanceResponse'</a>,
--   <a>startMaintenanceResponse_server</a> - Contains the response to a
--   <tt>StartMaintenance</tt> request.
--   
--   <a>$sel:httpStatus:StartMaintenanceResponse'</a>,
--   <a>startMaintenanceResponse_httpStatus</a> - The response's http
--   status code.
newStartMaintenanceResponse :: Int -> StartMaintenanceResponse

-- | <i>See:</i> <a>newDescribeBackups</a> smart constructor.
data DescribeBackups
DescribeBackups' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeBackups

-- | Create a value of <a>DescribeBackups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverName:DescribeBackups'</a>,
--   <a>describeBackups_serverName</a> - Returns backups for the server
--   with the specified ServerName.
--   
--   <a>$sel:backupId:DescribeBackups'</a>, <a>describeBackups_backupId</a>
--   - Describes a single backup.
--   
--   <a>$sel:nextToken:DescribeBackups'</a>,
--   <a>describeBackups_nextToken</a> - This is not currently implemented
--   for <tt>DescribeBackups</tt> requests.
--   
--   <a>$sel:maxResults:DescribeBackups'</a>,
--   <a>describeBackups_maxResults</a> - This is not currently implemented
--   for <tt>DescribeBackups</tt> requests.
newDescribeBackups :: DescribeBackups

-- | <i>See:</i> <a>newDescribeBackupsResponse</a> smart constructor.
data DescribeBackupsResponse
DescribeBackupsResponse' :: Maybe [Backup] -> Maybe Text -> Int -> DescribeBackupsResponse

-- | Create a value of <a>DescribeBackupsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:backups:DescribeBackupsResponse'</a>,
--   <a>describeBackupsResponse_backups</a> - Contains the response to a
--   <tt>DescribeBackups</tt> request.
--   
--   <a>$sel:nextToken:DescribeBackups'</a>,
--   <a>describeBackupsResponse_nextToken</a> - This is not currently
--   implemented for <tt>DescribeBackups</tt> requests.
--   
--   <a>$sel:httpStatus:DescribeBackupsResponse'</a>,
--   <a>describeBackupsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeBackupsResponse :: Int -> DescribeBackupsResponse

-- | <i>See:</i> <a>newCreateServer</a> smart constructor.
data CreateServer
CreateServer' :: Maybe Text -> Maybe Bool -> Maybe [Text] -> Maybe Bool -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (Sensitive Text) -> Maybe Text -> Maybe [EngineAttribute] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe Natural -> Text -> Text -> Text -> Text -> Text -> CreateServer

-- | Create a value of <a>CreateServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:CreateServer'</a>,
--   <a>createServer_engineVersion</a> - The major release version of the
--   engine that you want to use. For a Chef server, the valid value for
--   EngineVersion is currently <tt>2</tt>. For a Puppet server, valid
--   values are <tt>2019</tt> or <tt>2017</tt>.
--   
--   <a>$sel:disableAutomatedBackup:CreateServer'</a>,
--   <a>createServer_disableAutomatedBackup</a> - Enable or disable
--   scheduled backups. Valid values are <tt>true</tt> or <tt>false</tt>.
--   The default value is <tt>true</tt>.
--   
--   <a>$sel:securityGroupIds:CreateServer'</a>,
--   <a>createServer_securityGroupIds</a> - A list of security group IDs to
--   attach to the Amazon EC2 instance. If you add this parameter, the
--   specified security groups must be within the VPC that is specified by
--   <tt>SubnetIds</tt>.
--   
--   If you do not specify this parameter, AWS OpsWorks CM creates one new
--   security group that uses TCP ports 22 and 443, open to 0.0.0.0/0
--   (everyone).
--   
--   <a>$sel:associatePublicIpAddress:CreateServer'</a>,
--   <a>createServer_associatePublicIpAddress</a> - Associate a public IP
--   address with a server that you are launching. Valid values are
--   <tt>true</tt> or <tt>false</tt>. The default value is <tt>true</tt>.
--   
--   <a>$sel:subnetIds:CreateServer'</a>, <a>createServer_subnetIds</a> -
--   The IDs of subnets in which to launch the server EC2 instance.
--   
--   Amazon EC2-Classic customers: This field is required. All servers must
--   run within a VPC. The VPC must have "Auto Assign Public IP" enabled.
--   
--   EC2-VPC customers: This field is optional. If you do not specify
--   subnet IDs, your EC2 instances are created in a default subnet that is
--   selected by Amazon EC2. If you specify subnet IDs, the VPC must have
--   "Auto Assign Public IP" enabled.
--   
--   For more information about supported Amazon EC2 platforms, see
--   <a>Supported Platforms</a>.
--   
--   <a>$sel:keyPair:CreateServer'</a>, <a>createServer_keyPair</a> - The
--   Amazon EC2 key pair to set for the instance. This parameter is
--   optional; if desired, you may specify this parameter to connect to
--   your instances by using SSH.
--   
--   <a>$sel:backupId:CreateServer'</a>, <a>createServer_backupId</a> - If
--   you specify this field, AWS OpsWorks CM creates the server by using
--   the backup represented by BackupId.
--   
--   <a>$sel:customDomain:CreateServer'</a>,
--   <a>createServer_customDomain</a> - An optional public endpoint of a
--   server, such as <tt>https://aws.my-company.com</tt>. To access the
--   server, create a CNAME DNS record in your preferred DNS service that
--   points the custom domain to the endpoint that is generated when the
--   server is created (the value of the CreateServer Endpoint attribute).
--   You cannot access the server by using the generated <tt>Endpoint</tt>
--   value if the server is using a custom domain. If you specify a custom
--   domain, you must also specify values for <tt>CustomCertificate</tt>
--   and <tt>CustomPrivateKey</tt>.
--   
--   <a>$sel:customPrivateKey:CreateServer'</a>,
--   <a>createServer_customPrivateKey</a> - A private key in PEM format for
--   connecting to the server by using HTTPS. The private key must not be
--   encrypted; it cannot be protected by a password or passphrase. If you
--   specify a custom private key, you must also specify values for
--   <tt>CustomDomain</tt> and <tt>CustomCertificate</tt>.
--   
--   <a>$sel:engineModel:CreateServer'</a>, <a>createServer_engineModel</a>
--   - The engine model of the server. Valid values in this release include
--   <tt>Monolithic</tt> for Puppet and <tt>Single</tt> for Chef.
--   
--   <a>$sel:engineAttributes:CreateServer'</a>,
--   <a>createServer_engineAttributes</a> - Optional engine attributes on a
--   specified server.
--   
--   <b>Attributes accepted in a Chef createServer request:</b>
--   
--   <ul>
--   <li><tt>CHEF_AUTOMATE_PIVOTAL_KEY</tt>: A base64-encoded RSA public
--   key. The corresponding private key is required to access the Chef API.
--   When no CHEF_AUTOMATE_PIVOTAL_KEY is set, a private key is generated
--   and returned in the response.</li>
--   <li><tt>CHEF_AUTOMATE_ADMIN_PASSWORD</tt>: The password for the
--   administrative user in the Chef Automate web-based dashboard. The
--   password length is a minimum of eight characters, and a maximum of 32.
--   The password can contain letters, numbers, and special characters
--   (!/@#$%^&amp;+=_). The password must contain at least one lower case
--   letter, one upper case letter, one number, and one special character.
--   When no CHEF_AUTOMATE_ADMIN_PASSWORD is set, one is generated and
--   returned in the response.</li>
--   </ul>
--   
--   <b>Attributes accepted in a Puppet createServer request:</b>
--   
--   <ul>
--   <li><tt>PUPPET_ADMIN_PASSWORD</tt>: To work with the Puppet Enterprise
--   console, a password must use ASCII characters.</li>
--   <li><tt>PUPPET_R10K_REMOTE</tt>: The r10k remote is the URL of your
--   control repository (for example,
--   ssh://git@your.git-repo.com:user/control-repo.git). Specifying an r10k
--   remote opens TCP port 8170.</li>
--   <li><tt>PUPPET_R10K_PRIVATE_KEY</tt>: If you are using a private Git
--   repository, add PUPPET_R10K_PRIVATE_KEY to specify a PEM-encoded
--   private SSH key.</li>
--   </ul>
--   
--   <a>$sel:preferredMaintenanceWindow:CreateServer'</a>,
--   <a>createServer_preferredMaintenanceWindow</a> - The start time for a
--   one-hour period each week during which AWS OpsWorks CM performs
--   maintenance on the instance. Valid values must be specified in the
--   following format: <tt>DDD:HH:MM</tt>. <tt>MM</tt> must be specified as
--   <tt>00</tt>. The specified time is in coordinated universal time
--   (UTC). The default value is a random one-hour period on Tuesday,
--   Wednesday, or Friday. See <tt>TimeWindowDefinition</tt> for more
--   information.
--   
--   <b>Example:</b> <tt>Mon:08:00</tt>, which represents a start time of
--   every Monday at 08:00 UTC. (8:00 a.m.)
--   
--   <a>$sel:preferredBackupWindow:CreateServer'</a>,
--   <a>createServer_preferredBackupWindow</a> - The start time for a
--   one-hour period during which AWS OpsWorks CM backs up
--   application-level data on your server if automated backups are
--   enabled. Valid values must be specified in one of the following
--   formats:
--   
--   <ul>
--   <li><tt>HH:MM</tt> for daily backups</li>
--   <li><tt>DDD:HH:MM</tt> for weekly backups</li>
--   </ul>
--   
--   <tt>MM</tt> must be specified as <tt>00</tt>. The specified time is in
--   coordinated universal time (UTC). The default value is a random, daily
--   start time.
--   
--   <b>Example:</b> <tt>08:00</tt>, which represents a daily start time of
--   08:00 UTC.
--   
--   <b>Example:</b> <tt>Mon:08:00</tt>, which represents a start time of
--   every Monday at 08:00 UTC. (8:00 a.m.)
--   
--   <a>$sel:customCertificate:CreateServer'</a>,
--   <a>createServer_customCertificate</a> - A PEM-formatted HTTPS
--   certificate. The value can be be a single, self-signed certificate, or
--   a certificate chain. If you specify a custom certificate, you must
--   also specify values for <tt>CustomDomain</tt> and
--   <tt>CustomPrivateKey</tt>. The following are requirements for the
--   <tt>CustomCertificate</tt> value:
--   
--   <ul>
--   <li>You can provide either a self-signed, custom certificate, or the
--   full certificate chain.</li>
--   <li>The certificate must be a valid X509 certificate, or a certificate
--   chain in PEM format.</li>
--   <li>The certificate must be valid at the time of upload. A certificate
--   can't be used before its validity period begins (the certificate's
--   <tt>NotBefore</tt> date), or after it expires (the certificate's
--   <tt>NotAfter</tt> date).</li>
--   <li>The certificate’s common name or subject alternative names (SANs),
--   if present, must match the value of <tt>CustomDomain</tt>.</li>
--   <li>The certificate must match the value of
--   <tt>CustomPrivateKey</tt>.</li>
--   </ul>
--   
--   <a>$sel:tags:CreateServer'</a>, <a>createServer_tags</a> - A map that
--   contains tag keys and tag values to attach to an AWS OpsWorks for Chef
--   Automate or AWS OpsWorks for Puppet Enterprise server.
--   
--   <ul>
--   <li>The key cannot be empty.</li>
--   <li>The key can be a maximum of 127 characters, and can contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : / @</tt></li>
--   <li>The value can be a maximum 255 characters, and contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : / @</tt></li>
--   <li>Leading and trailing white spaces are trimmed from both the key
--   and value.</li>
--   <li>A maximum of 50 user-applied tags is allowed for any AWS
--   OpsWorks-CM server.</li>
--   </ul>
--   
--   <a>$sel:backupRetentionCount:CreateServer'</a>,
--   <a>createServer_backupRetentionCount</a> - The number of automated
--   backups that you want to keep. Whenever a new backup is created, AWS
--   OpsWorks CM deletes the oldest backups if this number is exceeded. The
--   default value is <tt>1</tt>.
--   
--   <a>$sel:engine:CreateServer'</a>, <a>createServer_engine</a> - The
--   configuration management engine to use. Valid values include
--   <tt>ChefAutomate</tt> and <tt>Puppet</tt>.
--   
--   <a>$sel:serverName:CreateServer'</a>, <a>createServer_serverName</a> -
--   The name of the server. The server name must be unique within your AWS
--   account, within each region. Server names must start with a letter;
--   then letters, numbers, or hyphens (-) are allowed, up to a maximum of
--   40 characters.
--   
--   <a>$sel:instanceProfileArn:CreateServer'</a>,
--   <a>createServer_instanceProfileArn</a> - The ARN of the instance
--   profile that your Amazon EC2 instances use. Although the AWS OpsWorks
--   console typically creates the instance profile for you, if you are
--   using API commands instead, run the service-role-creation.yaml AWS
--   CloudFormation template, located at
--   https://s3.amazonaws.com/opsworks-cm-us-east-1-prod-default-assets/misc/opsworks-cm-roles.yaml.
--   This template creates a CloudFormation stack that includes the
--   instance profile you need.
--   
--   <a>$sel:instanceType:CreateServer'</a>,
--   <a>createServer_instanceType</a> - The Amazon EC2 instance type to
--   use. For example, <tt>m5.large</tt>.
--   
--   <a>$sel:serviceRoleArn:CreateServer'</a>,
--   <a>createServer_serviceRoleArn</a> - The service role that the AWS
--   OpsWorks CM service backend uses to work with your account. Although
--   the AWS OpsWorks management console typically creates the service role
--   for you, if you are using the AWS CLI or API commands, run the
--   service-role-creation.yaml AWS CloudFormation template, located at
--   https://s3.amazonaws.com/opsworks-cm-us-east-1-prod-default-assets/misc/opsworks-cm-roles.yaml.
--   This template creates a CloudFormation stack that includes the service
--   role and instance profile that you need.
newCreateServer :: Text -> Text -> Text -> Text -> Text -> CreateServer

-- | <i>See:</i> <a>newCreateServerResponse</a> smart constructor.
data CreateServerResponse
CreateServerResponse' :: Maybe Server -> Int -> CreateServerResponse

-- | Create a value of <a>CreateServerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:server:CreateServerResponse'</a>,
--   <a>createServerResponse_server</a> - The server that is created by the
--   request.
--   
--   <a>$sel:httpStatus:CreateServerResponse'</a>,
--   <a>createServerResponse_httpStatus</a> - The response's http status
--   code.
newCreateServerResponse :: Int -> CreateServerResponse

-- | <i>See:</i> <a>newRestoreServer</a> smart constructor.
data RestoreServer
RestoreServer' :: Maybe Text -> Maybe Text -> Text -> Text -> RestoreServer

-- | Create a value of <a>RestoreServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPair:RestoreServer'</a>, <a>restoreServer_keyPair</a> - The
--   name of the key pair to set on the new EC2 instance. This can be
--   helpful if the administrator no longer has the SSH key.
--   
--   <a>$sel:instanceType:RestoreServer'</a>,
--   <a>restoreServer_instanceType</a> - The type of instance to restore.
--   Valid values must be specified in the following format:
--   <tt>^([cm][34]|t2).*</tt> For example, <tt>m5.large</tt>. Valid values
--   are <tt>m5.large</tt>, <tt>r5.xlarge</tt>, and <tt>r5.2xlarge</tt>. If
--   you do not specify this parameter, RestoreServer uses the instance
--   type from the specified backup.
--   
--   <a>$sel:backupId:RestoreServer'</a>, <a>restoreServer_backupId</a> -
--   The ID of the backup that you want to use to restore a server.
--   
--   <a>$sel:serverName:RestoreServer'</a>, <a>restoreServer_serverName</a>
--   - The name of the server that you want to restore.
newRestoreServer :: Text -> Text -> RestoreServer

-- | <i>See:</i> <a>newRestoreServerResponse</a> smart constructor.
data RestoreServerResponse
RestoreServerResponse' :: Maybe Server -> Int -> RestoreServerResponse

-- | Create a value of <a>RestoreServerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:server:RestoreServerResponse'</a>,
--   <a>restoreServerResponse_server</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:RestoreServerResponse'</a>,
--   <a>restoreServerResponse_httpStatus</a> - The response's http status
--   code.
newRestoreServerResponse :: Int -> RestoreServerResponse

-- | <i>See:</i> <a>newDescribeNodeAssociationStatus</a> smart constructor.
data DescribeNodeAssociationStatus
DescribeNodeAssociationStatus' :: Text -> Text -> DescribeNodeAssociationStatus

-- | Create a value of <a>DescribeNodeAssociationStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeAssociationStatusToken:DescribeNodeAssociationStatus'</a>,
--   <a>describeNodeAssociationStatus_nodeAssociationStatusToken</a> - The
--   token returned in either the AssociateNodeResponse or the
--   DisassociateNodeResponse.
--   
--   <a>$sel:serverName:DescribeNodeAssociationStatus'</a>,
--   <a>describeNodeAssociationStatus_serverName</a> - The name of the
--   server from which to disassociate the node.
newDescribeNodeAssociationStatus :: Text -> Text -> DescribeNodeAssociationStatus

-- | <i>See:</i> <a>newDescribeNodeAssociationStatusResponse</a> smart
--   constructor.
data DescribeNodeAssociationStatusResponse
DescribeNodeAssociationStatusResponse' :: Maybe [EngineAttribute] -> Int -> NodeAssociationStatus -> DescribeNodeAssociationStatusResponse

-- | Create a value of <a>DescribeNodeAssociationStatusResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineAttributes:DescribeNodeAssociationStatusResponse'</a>,
--   <a>describeNodeAssociationStatusResponse_engineAttributes</a> -
--   Attributes specific to the node association. In Puppet, the attibute
--   PUPPET_NODE_CERT contains the signed certificate (the result of the
--   CSR).
--   
--   <a>$sel:httpStatus:DescribeNodeAssociationStatusResponse'</a>,
--   <a>describeNodeAssociationStatusResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:nodeAssociationStatus:DescribeNodeAssociationStatusResponse'</a>,
--   <a>describeNodeAssociationStatusResponse_nodeAssociationStatus</a> -
--   The status of the association or disassociation request.
--   
--   <b>Possible values:</b>
--   
--   <ul>
--   <li><tt>SUCCESS</tt>: The association or disassociation
--   succeeded.</li>
--   <li><tt>FAILED</tt>: The association or disassociation failed.</li>
--   <li><tt>IN_PROGRESS</tt>: The association or disassociation is still
--   in progress.</li>
--   </ul>
newDescribeNodeAssociationStatusResponse :: Int -> NodeAssociationStatus -> DescribeNodeAssociationStatusResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Number (ARN) of a resource to which you want to
--   apply tags. For example,
--   <tt>arn:aws:opsworks-cm:us-west-2:123456789012:server/test-owcm-server/EXAMPLE-66b0-4196-8274-d1a2bEXAMPLE</tt>.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A map that
--   contains tag keys and tag values to attach to AWS OpsWorks-CM servers
--   or backups.
--   
--   <ul>
--   <li>The key cannot be empty.</li>
--   <li>The key can be a maximum of 127 characters, and can contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt></li>
--   <li>The value can be a maximum 255 characters, and contain only
--   Unicode letters, numbers, or separators, or the following special
--   characters: <tt>+ - = . _ : /</tt></li>
--   <li>Leading and trailing white spaces are trimmed from both the key
--   and value.</li>
--   <li>A maximum of 50 user-applied tags is allowed for any AWS
--   OpsWorks-CM server or backup.</li>
--   </ul>
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newDescribeAccountAttributes</a> smart constructor.
data DescribeAccountAttributes
DescribeAccountAttributes' :: DescribeAccountAttributes

-- | Create a value of <a>DescribeAccountAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeAccountAttributes :: DescribeAccountAttributes

-- | <i>See:</i> <a>newDescribeAccountAttributesResponse</a> smart
--   constructor.
data DescribeAccountAttributesResponse
DescribeAccountAttributesResponse' :: Maybe [AccountAttribute] -> Int -> DescribeAccountAttributesResponse

-- | Create a value of <a>DescribeAccountAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:DescribeAccountAttributesResponse'</a>,
--   <a>describeAccountAttributesResponse_attributes</a> - The attributes
--   that are currently set for the account.
--   
--   <a>$sel:httpStatus:DescribeAccountAttributesResponse'</a>,
--   <a>describeAccountAttributesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeAccountAttributesResponse :: Int -> DescribeAccountAttributesResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Number (ARN) of
--   a resource from which you want to remove tags. For example,
--   <tt>arn:aws:opsworks-cm:us-west-2:123456789012:server/test-owcm-server/EXAMPLE-66b0-4196-8274-d1a2bEXAMPLE</tt>.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of tags that you want to remove.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newDescribeServers</a> smart constructor.
data DescribeServers
DescribeServers' :: Maybe Text -> Maybe Text -> Maybe Natural -> DescribeServers

-- | Create a value of <a>DescribeServers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverName:DescribeServers'</a>,
--   <a>describeServers_serverName</a> - Describes the server with the
--   specified ServerName.
--   
--   <a>$sel:nextToken:DescribeServers'</a>,
--   <a>describeServers_nextToken</a> - This is not currently implemented
--   for <tt>DescribeServers</tt> requests.
--   
--   <a>$sel:maxResults:DescribeServers'</a>,
--   <a>describeServers_maxResults</a> - This is not currently implemented
--   for <tt>DescribeServers</tt> requests.
newDescribeServers :: DescribeServers

-- | <i>See:</i> <a>newDescribeServersResponse</a> smart constructor.
data DescribeServersResponse
DescribeServersResponse' :: Maybe [Server] -> Maybe Text -> Int -> DescribeServersResponse

-- | Create a value of <a>DescribeServersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:servers:DescribeServersResponse'</a>,
--   <a>describeServersResponse_servers</a> - Contains the response to a
--   <tt>DescribeServers</tt> request.
--   
--   <i>For Chef Automate servers:</i> If
--   <tt>DescribeServersResponse$Servers$EngineAttributes</tt> includes
--   CHEF_MAJOR_UPGRADE_AVAILABLE, you can upgrade the Chef Automate server
--   to Chef Automate 2. To be eligible for upgrade, a server running Chef
--   Automate 1 must have had at least one successful maintenance run after
--   November 1, 2019.
--   
--   <i>For Puppet servers:</i>
--   <tt>DescribeServersResponse$Servers$EngineAttributes</tt> contains the
--   following two responses:
--   
--   <ul>
--   <li><tt>PUPPET_API_CA_CERT</tt>, the PEM-encoded CA certificate that
--   is used by the Puppet API over TCP port number 8140. The CA
--   certificate is also used to sign node certificates.</li>
--   <li><tt>PUPPET_API_CRL</tt>, a certificate revocation list. The
--   certificate revocation list is for internal maintenance purposes only.
--   For more information about the Puppet certificate revocation list, see
--   <a>Man Page: puppet certificate_revocation_list</a> in the Puppet
--   documentation.</li>
--   </ul>
--   
--   <a>$sel:nextToken:DescribeServers'</a>,
--   <a>describeServersResponse_nextToken</a> - This is not currently
--   implemented for <tt>DescribeServers</tt> requests.
--   
--   <a>$sel:httpStatus:DescribeServersResponse'</a>,
--   <a>describeServersResponse_httpStatus</a> - The response's http status
--   code.
newDescribeServersResponse :: Int -> DescribeServersResponse

-- | <i>See:</i> <a>newExportServerEngineAttribute</a> smart constructor.
data ExportServerEngineAttribute
ExportServerEngineAttribute' :: Maybe [EngineAttribute] -> Text -> Text -> ExportServerEngineAttribute

-- | Create a value of <a>ExportServerEngineAttribute</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputAttributes:ExportServerEngineAttribute'</a>,
--   <a>exportServerEngineAttribute_inputAttributes</a> - The list of
--   engine attributes. The list type is <tt>EngineAttribute</tt>. An
--   <tt>EngineAttribute</tt> list item is a pair that includes an
--   attribute name and its value. For the <tt>Userdata</tt>
--   ExportAttributeName, the following are supported engine attribute
--   names.
--   
--   <ul>
--   <li><b>RunList</b> In Chef, a list of roles or recipes that are run in
--   the specified order. In Puppet, this parameter is ignored.</li>
--   <li><b>OrganizationName</b> In Chef, an organization name. AWS
--   OpsWorks for Chef Automate always creates the organization
--   <tt>default</tt>. In Puppet, this parameter is ignored.</li>
--   <li><b>NodeEnvironment</b> In Chef, a node environment (for example,
--   development, staging, or one-box). In Puppet, this parameter is
--   ignored.</li>
--   <li><b>NodeClientVersion</b> In Chef, the version of the Chef engine
--   (three numbers separated by dots, such as 13.8.5). If this attribute
--   is empty, OpsWorks for Chef Automate uses the most current version. In
--   Puppet, this parameter is ignored.</li>
--   </ul>
--   
--   <a>$sel:exportAttributeName:ExportServerEngineAttribute'</a>,
--   <a>exportServerEngineAttribute_exportAttributeName</a> - The name of
--   the export attribute. Currently, the supported export attribute is
--   <tt>Userdata</tt>. This exports a user data script that includes
--   parameters and values provided in the <tt>InputAttributes</tt> list.
--   
--   <a>$sel:serverName:ExportServerEngineAttribute'</a>,
--   <a>exportServerEngineAttribute_serverName</a> - The name of the server
--   from which you are exporting the attribute.
newExportServerEngineAttribute :: Text -> Text -> ExportServerEngineAttribute

-- | <i>See:</i> <a>newExportServerEngineAttributeResponse</a> smart
--   constructor.
data ExportServerEngineAttributeResponse
ExportServerEngineAttributeResponse' :: Maybe Text -> Maybe EngineAttribute -> Int -> ExportServerEngineAttributeResponse

-- | Create a value of <a>ExportServerEngineAttributeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverName:ExportServerEngineAttribute'</a>,
--   <a>exportServerEngineAttributeResponse_serverName</a> - The server
--   name used in the request.
--   
--   <a>$sel:engineAttribute:ExportServerEngineAttributeResponse'</a>,
--   <a>exportServerEngineAttributeResponse_engineAttribute</a> - The
--   requested engine attribute pair with attribute name and value.
--   
--   <a>$sel:httpStatus:ExportServerEngineAttributeResponse'</a>,
--   <a>exportServerEngineAttributeResponse_httpStatus</a> - The response's
--   http status code.
newExportServerEngineAttributeResponse :: Int -> ExportServerEngineAttributeResponse
newtype BackupStatus
BackupStatus' :: Text -> BackupStatus
[fromBackupStatus] :: BackupStatus -> Text
pattern BackupStatus_DELETING :: BackupStatus
pattern BackupStatus_FAILED :: BackupStatus
pattern BackupStatus_IN_PROGRESS :: BackupStatus
pattern BackupStatus_OK :: BackupStatus
newtype BackupType
BackupType' :: Text -> BackupType
[fromBackupType] :: BackupType -> Text
pattern BackupType_AUTOMATED :: BackupType
pattern BackupType_MANUAL :: BackupType
newtype MaintenanceStatus
MaintenanceStatus' :: Text -> MaintenanceStatus
[fromMaintenanceStatus] :: MaintenanceStatus -> Text
pattern MaintenanceStatus_FAILED :: MaintenanceStatus
pattern MaintenanceStatus_SUCCESS :: MaintenanceStatus

-- | The status of the association or disassociation request.
--   
--   <b>Possible values:</b>
--   
--   <ul>
--   <li><tt>SUCCESS</tt>: The association or disassociation
--   succeeded.</li>
--   <li><tt>FAILED</tt>: The association or disassociation failed.</li>
--   <li><tt>IN_PROGRESS</tt>: The association or disassociation is still
--   in progress.</li>
--   </ul>
newtype NodeAssociationStatus
NodeAssociationStatus' :: Text -> NodeAssociationStatus
[fromNodeAssociationStatus] :: NodeAssociationStatus -> Text
pattern NodeAssociationStatus_FAILED :: NodeAssociationStatus
pattern NodeAssociationStatus_IN_PROGRESS :: NodeAssociationStatus
pattern NodeAssociationStatus_SUCCESS :: NodeAssociationStatus
newtype ServerStatus
ServerStatus' :: Text -> ServerStatus
[fromServerStatus] :: ServerStatus -> Text
pattern ServerStatus_BACKING_UP :: ServerStatus
pattern ServerStatus_CONNECTION_LOST :: ServerStatus
pattern ServerStatus_CREATING :: ServerStatus
pattern ServerStatus_DELETING :: ServerStatus
pattern ServerStatus_FAILED :: ServerStatus
pattern ServerStatus_HEALTHY :: ServerStatus
pattern ServerStatus_MODIFYING :: ServerStatus
pattern ServerStatus_RESTORING :: ServerStatus
pattern ServerStatus_RUNNING :: ServerStatus
pattern ServerStatus_SETUP :: ServerStatus
pattern ServerStatus_TERMINATED :: ServerStatus
pattern ServerStatus_UNDER_MAINTENANCE :: ServerStatus
pattern ServerStatus_UNHEALTHY :: ServerStatus

-- | Stores account attributes.
--   
--   <i>See:</i> <a>newAccountAttribute</a> smart constructor.
data AccountAttribute
AccountAttribute' :: Maybe Int -> Maybe Int -> Maybe Text -> AccountAttribute

-- | Create a value of <a>AccountAttribute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:used:AccountAttribute'</a>, <a>accountAttribute_used</a> - The
--   current usage, such as the current number of servers that are
--   associated with the account.
--   
--   <a>$sel:maximum:AccountAttribute'</a>, <a>accountAttribute_maximum</a>
--   - The maximum allowed value.
--   
--   <a>$sel:name:AccountAttribute'</a>, <a>accountAttribute_name</a> - The
--   attribute name. The following are supported attribute names.
--   
--   <ul>
--   <li><i>ServerLimit:</i> The number of current servers/maximum number
--   of servers allowed. By default, you can have a maximum of 10
--   servers.</li>
--   <li><i>ManualBackupLimit:</i> The number of current manual
--   backups/maximum number of backups allowed. By default, you can have a
--   maximum of 50 manual backups saved.</li>
--   </ul>
newAccountAttribute :: AccountAttribute

-- | Describes a single backup.
--   
--   <i>See:</i> <a>newBackup</a> smart constructor.
data Backup
Backup' :: Maybe Text -> Maybe Text -> Maybe BackupStatus -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe BackupType -> Maybe Text -> Backup

-- | Create a value of <a>Backup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:Backup'</a>, <a>backup_engineVersion</a> - The
--   engine version that is obtained from the server when the backup is
--   created.
--   
--   <a>$sel:serviceRoleArn:Backup'</a>, <a>backup_serviceRoleArn</a> - The
--   service role ARN that is obtained from the server when the backup is
--   created.
--   
--   <a>$sel:status:Backup'</a>, <a>backup_status</a> - The status of a
--   backup while in progress.
--   
--   <a>$sel:instanceProfileArn:Backup'</a>,
--   <a>backup_instanceProfileArn</a> - The EC2 instance profile ARN that
--   is obtained from the server when the backup is created. Because this
--   value is stored, you are not required to provide the
--   InstanceProfileArn again if you restore a backup.
--   
--   <a>$sel:securityGroupIds:Backup'</a>, <a>backup_securityGroupIds</a> -
--   The security group IDs that are obtained from the server when the
--   backup is created.
--   
--   <a>$sel:statusDescription:Backup'</a>, <a>backup_statusDescription</a>
--   - An informational message about backup status.
--   
--   <a>$sel:serverName:Backup'</a>, <a>backup_serverName</a> - The name of
--   the server from which the backup was made.
--   
--   <a>$sel:subnetIds:Backup'</a>, <a>backup_subnetIds</a> - The subnet
--   IDs that are obtained from the server when the backup is created.
--   
--   <a>$sel:keyPair:Backup'</a>, <a>backup_keyPair</a> - The key pair that
--   is obtained from the server when the backup is created.
--   
--   <a>$sel:createdAt:Backup'</a>, <a>backup_createdAt</a> - The time
--   stamp when the backup was created in the database. Example:
--   <tt>2016-07-29T13:38:47.520Z</tt>
--   
--   <a>$sel:backupId:Backup'</a>, <a>backup_backupId</a> - The generated
--   ID of the backup. Example: <tt>myServerName-yyyyMMddHHmmssSSS</tt>
--   
--   <a>$sel:engine:Backup'</a>, <a>backup_engine</a> - The engine type
--   that is obtained from the server when the backup is created.
--   
--   <a>$sel:instanceType:Backup'</a>, <a>backup_instanceType</a> - The
--   instance type that is obtained from the server when the backup is
--   created.
--   
--   <a>$sel:engineModel:Backup'</a>, <a>backup_engineModel</a> - The
--   engine model that is obtained from the server when the backup is
--   created.
--   
--   <a>$sel:preferredMaintenanceWindow:Backup'</a>,
--   <a>backup_preferredMaintenanceWindow</a> - The preferred maintenance
--   period that is obtained from the server when the backup is created.
--   
--   <a>$sel:userArn:Backup'</a>, <a>backup_userArn</a> - The IAM user ARN
--   of the requester for manual backups. This field is empty for automated
--   backups.
--   
--   <a>$sel:preferredBackupWindow:Backup'</a>,
--   <a>backup_preferredBackupWindow</a> - The preferred backup period that
--   is obtained from the server when the backup is created.
--   
--   <a>$sel:s3LogUrl:Backup'</a>, <a>backup_s3LogUrl</a> - The Amazon S3
--   URL of the backup's log file.
--   
--   <a>$sel:s3DataSize:Backup'</a>, <a>backup_s3DataSize</a> - This field
--   is deprecated and is no longer used.
--   
--   <a>$sel:backupArn:Backup'</a>, <a>backup_backupArn</a> - The ARN of
--   the backup.
--   
--   <a>$sel:s3DataUrl:Backup'</a>, <a>backup_s3DataUrl</a> - This field is
--   deprecated and is no longer used.
--   
--   <a>$sel:description:Backup'</a>, <a>backup_description</a> - A
--   user-provided description for a manual backup. This field is empty for
--   automated backups.
--   
--   <a>$sel:backupType:Backup'</a>, <a>backup_backupType</a> - The backup
--   type. Valid values are <tt>automated</tt> or <tt>manual</tt>.
--   
--   <a>$sel:toolsVersion:Backup'</a>, <a>backup_toolsVersion</a> - The
--   version of AWS OpsWorks CM-specific tools that is obtained from the
--   server when the backup is created.
newBackup :: Backup

-- | A name and value pair that is specific to the engine of the server.
--   
--   <i>See:</i> <a>newEngineAttribute</a> smart constructor.
data EngineAttribute
EngineAttribute' :: Maybe (Sensitive Text) -> Maybe Text -> EngineAttribute

-- | Create a value of <a>EngineAttribute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:EngineAttribute'</a>, <a>engineAttribute_value</a> - The
--   value of the engine attribute.
--   
--   <a>$sel:name:EngineAttribute'</a>, <a>engineAttribute_name</a> - The
--   name of the engine attribute.
newEngineAttribute :: EngineAttribute

-- | Describes a configuration management server.
--   
--   <i>See:</i> <a>newServer</a> smart constructor.
data Server
Server' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe ServerStatus -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe MaintenanceStatus -> Maybe Text -> Maybe Text -> Maybe [EngineAttribute] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Server

-- | Create a value of <a>Server</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:engineVersion:Server'</a>, <a>server_engineVersion</a> - The
--   engine version of the server. For a Chef server, the valid value for
--   EngineVersion is currently <tt>2</tt>. For a Puppet server, specify
--   either <tt>2019</tt> or <tt>2017</tt>.
--   
--   <a>$sel:serviceRoleArn:Server'</a>, <a>server_serviceRoleArn</a> - The
--   service role ARN used to create the server.
--   
--   <a>$sel:disableAutomatedBackup:Server'</a>,
--   <a>server_disableAutomatedBackup</a> - Disables automated backups. The
--   number of stored backups is dependent on the value of
--   PreferredBackupCount.
--   
--   <a>$sel:status:Server'</a>, <a>server_status</a> - The server's
--   status. This field displays the states of actions in progress, such as
--   creating, running, or backing up the server, as well as the server's
--   health state.
--   
--   <a>$sel:instanceProfileArn:Server'</a>,
--   <a>server_instanceProfileArn</a> - The instance profile ARN of the
--   server.
--   
--   <a>$sel:securityGroupIds:Server'</a>, <a>server_securityGroupIds</a> -
--   The security group IDs for the server, as specified in the
--   CloudFormation stack. These might not be the same security groups that
--   are shown in the EC2 console.
--   
--   <a>$sel:associatePublicIpAddress:Server'</a>,
--   <a>server_associatePublicIpAddress</a> - Associate a public IP address
--   with a server that you are launching.
--   
--   <a>$sel:serverName:Server'</a>, <a>server_serverName</a> - The name of
--   the server.
--   
--   <a>$sel:subnetIds:Server'</a>, <a>server_subnetIds</a> - The subnet
--   IDs specified in a CreateServer request.
--   
--   <a>$sel:keyPair:Server'</a>, <a>server_keyPair</a> - The key pair
--   associated with the server.
--   
--   <a>$sel:createdAt:Server'</a>, <a>server_createdAt</a> - Time stamp of
--   server creation. Example <tt>2016-07-29T13:38:47.520Z</tt>
--   
--   <a>$sel:serverArn:Server'</a>, <a>server_serverArn</a> - The ARN of
--   the server.
--   
--   <a>$sel:customDomain:Server'</a>, <a>server_customDomain</a> - An
--   optional public endpoint of a server, such as
--   <tt>https://aws.my-company.com</tt>. You cannot access the server by
--   using the <tt>Endpoint</tt> value if the server has a
--   <tt>CustomDomain</tt> specified.
--   
--   <a>$sel:engine:Server'</a>, <a>server_engine</a> - The engine type of
--   the server. Valid values in this release include <tt>ChefAutomate</tt>
--   and <tt>Puppet</tt>.
--   
--   <a>$sel:maintenanceStatus:Server'</a>, <a>server_maintenanceStatus</a>
--   - The status of the most recent server maintenance run. Shows
--   <tt>SUCCESS</tt> or <tt>FAILED</tt>.
--   
--   <a>$sel:instanceType:Server'</a>, <a>server_instanceType</a> - The
--   instance type for the server, as specified in the CloudFormation
--   stack. This might not be the same instance type that is shown in the
--   EC2 console.
--   
--   <a>$sel:engineModel:Server'</a>, <a>server_engineModel</a> - The
--   engine model of the server. Valid values in this release include
--   <tt>Monolithic</tt> for Puppet and <tt>Single</tt> for Chef.
--   
--   <a>$sel:engineAttributes:Server'</a>, <a>server_engineAttributes</a> -
--   The response of a createServer() request returns the master credential
--   to access the server in EngineAttributes. These credentials are not
--   stored by AWS OpsWorks CM; they are returned only as part of the
--   result of createServer().
--   
--   <b>Attributes returned in a createServer response for Chef</b>
--   
--   <ul>
--   <li><tt>CHEF_AUTOMATE_PIVOTAL_KEY</tt>: A base64-encoded RSA private
--   key that is generated by AWS OpsWorks for Chef Automate. This private
--   key is required to access the Chef API.</li>
--   <li><tt>CHEF_STARTER_KIT</tt>: A base64-encoded ZIP file. The ZIP file
--   contains a Chef starter kit, which includes a README, a configuration
--   file, and the required RSA private key. Save this file, unzip it, and
--   then change to the directory where you've unzipped the file contents.
--   From this directory, you can run Knife commands.</li>
--   </ul>
--   
--   <b>Attributes returned in a createServer response for Puppet</b>
--   
--   <ul>
--   <li><tt>PUPPET_STARTER_KIT</tt>: A base64-encoded ZIP file. The ZIP
--   file contains a Puppet starter kit, including a README and a required
--   private key. Save this file, unzip it, and then change to the
--   directory where you've unzipped the file contents.</li>
--   <li><tt>PUPPET_ADMIN_PASSWORD</tt>: An administrator password that you
--   can use to sign in to the Puppet Enterprise console after the server
--   is online.</li>
--   </ul>
--   
--   <a>$sel:preferredMaintenanceWindow:Server'</a>,
--   <a>server_preferredMaintenanceWindow</a> - The preferred maintenance
--   period specified for the server.
--   
--   <a>$sel:preferredBackupWindow:Server'</a>,
--   <a>server_preferredBackupWindow</a> - The preferred backup period
--   specified for the server.
--   
--   <a>$sel:statusReason:Server'</a>, <a>server_statusReason</a> -
--   Depending on the server status, this field has either a human-readable
--   message (such as a create or backup error), or an escaped block of
--   JSON (used for health check results).
--   
--   <a>$sel:endpoint:Server'</a>, <a>server_endpoint</a> - A DNS name that
--   can be used to access the engine. Example:
--   <tt>myserver-asdfghjkl.us-east-1.opsworks.io</tt>. You cannot access
--   the server by using the <tt>Endpoint</tt> value if the server has a
--   <tt>CustomDomain</tt> specified.
--   
--   <a>$sel:cloudFormationStackArn:Server'</a>,
--   <a>server_cloudFormationStackArn</a> - The ARN of the CloudFormation
--   stack that was used to create the server.
--   
--   <a>$sel:backupRetentionCount:Server'</a>,
--   <a>server_backupRetentionCount</a> - The number of automated backups
--   to keep.
newServer :: Server

-- | An event that is related to the server, such as the start of
--   maintenance or backup.
--   
--   <i>See:</i> <a>newServerEvent</a> smart constructor.
data ServerEvent
ServerEvent' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> ServerEvent

-- | Create a value of <a>ServerEvent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logUrl:ServerEvent'</a>, <a>serverEvent_logUrl</a> - The
--   Amazon S3 URL of the event's log file.
--   
--   <a>$sel:serverName:ServerEvent'</a>, <a>serverEvent_serverName</a> -
--   The name of the server on or for which the event occurred.
--   
--   <a>$sel:createdAt:ServerEvent'</a>, <a>serverEvent_createdAt</a> - The
--   time when the event occurred.
--   
--   <a>$sel:message:ServerEvent'</a>, <a>serverEvent_message</a> - A
--   human-readable informational or status message.
newServerEvent :: ServerEvent

-- | A map that contains tag keys and tag values to attach to an AWS
--   OpsWorks for Chef Automate or AWS OpsWorks for Puppet Enterprise
--   server. Leading and trailing white spaces are trimmed from both the
--   key and value. A maximum of 50 user-applied tags is allowed for
--   tag-supported AWS OpsWorks-CM resources.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - A tag key, such as
--   <tt>Stage</tt> or <tt>Name</tt>. A tag key cannot be empty. The key
--   can be a maximum of 127 characters, and can contain only Unicode
--   letters, numbers, or separators, or the following special characters:
--   <tt>+ - = . _ : /</tt>
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - An optional tag value, such
--   as <tt>Production</tt> or <tt>test-owcm-server</tt>. The value can be
--   a maximum of 255 characters, and contain only Unicode letters,
--   numbers, or separators, or the following special characters: <tt>+ - =
--   . _ : /</tt>
newTag :: Text -> Text -> Tag
